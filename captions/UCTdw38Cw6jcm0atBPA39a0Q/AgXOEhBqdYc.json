[
  {
    "text": "well thank you all for filling this room rather more than I expected it to be I hope I don't disappoint you my name is",
    "start": "4779",
    "end": "12369"
  },
  {
    "text": "Steven I'm gonna talk about some monitoring and we're gonna cover a lot of topics in a very short amount of time",
    "start": "12369",
    "end": "19919"
  },
  {
    "text": "hence the eh-2-zed although I don't think I better fill every letter in the alphabet but I'll try my best",
    "start": "19919",
    "end": "25890"
  },
  {
    "text": "so I'm primarily a software developer I've done these things in the past I've worked quite a lot of databases and I've",
    "start": "25890",
    "end": "32829"
  },
  {
    "text": "done some embedded some networking bit of everything but more recently I got",
    "start": "32829",
    "end": "38740"
  },
  {
    "text": "the chance to play with some very expensive toys aka infrastructure and actually building",
    "start": "38740",
    "end": "45010"
  },
  {
    "text": "well I guess you would call private clouds for companies with very high",
    "start": "45010",
    "end": "51460"
  },
  {
    "text": "performance computing requirements and this led me into monitoring because",
    "start": "51460",
    "end": "58180"
  },
  {
    "text": "these systems there's a lot to go wrong there's a lot of very complicated software so you really need to make sure",
    "start": "58180",
    "end": "64210"
  },
  {
    "text": "that it's all working so this to us most mostly gonna be about the infrastructure we use for monitoring I'm going to touch",
    "start": "64210",
    "end": "69250"
  },
  {
    "text": "a bit on how you can integrate some of this into software as well towards the end if that's more your interest so",
    "start": "69250",
    "end": "76200"
  },
  {
    "text": "monitoring what is it visibility into things hardware software websites",
    "start": "76200",
    "end": "82530"
  },
  {
    "text": "clusters databases making sure things are working the way they should be more",
    "start": "82530",
    "end": "88270"
  },
  {
    "text": "importantly it's the pretty graphs though and I think you'll all agree with me that and managers like them draw some",
    "start": "88270",
    "end": "95680"
  },
  {
    "text": "graphs get a pay-rise everyone's happy there were some real reasons so we want",
    "start": "95680",
    "end": "102130"
  },
  {
    "text": "to find fault and we want to be alerted when things go wrong when discs need fixing when power goes out we want to",
    "start": "102130",
    "end": "109299"
  },
  {
    "text": "look back and work out why something went wrong and have what we can do to prevent it in the future we can use it",
    "start": "109299",
    "end": "117130"
  },
  {
    "text": "for auditing whatever that's security reasons making sure that only the people we want on our systems are actually",
    "start": "117130",
    "end": "122890"
  },
  {
    "text": "using them or for billing aka in the cloud world where you have to pay money",
    "start": "122890",
    "end": "129280"
  },
  {
    "text": "for things and we can use it to analyze how well we're using",
    "start": "129280",
    "end": "136300"
  },
  {
    "text": "hardware so we might have bought a load of hardware we might have paid a lot of money to a cloud provider we want to know what we're using all of it and I'll",
    "start": "136300",
    "end": "143890"
  },
  {
    "text": "be using efficiently now we can use it for performance monitoring profiling we",
    "start": "143890",
    "end": "150190"
  },
  {
    "text": "can we want to find bottlenecks in our system and work out where we can make things faster and we can use it to do",
    "start": "150190",
    "end": "158230"
  },
  {
    "text": "some planning as well so if our systems this big how many users are we gonna have in a year how many servers do need",
    "start": "158230",
    "end": "164740"
  },
  {
    "text": "to buy myself time so as I said we're gonna cover a lot of topics we're gonna",
    "start": "164740",
    "end": "171040"
  },
  {
    "text": "go into a little detail about each specific one this is meant to be a good overview of monitoring and there's just",
    "start": "171040",
    "end": "180370"
  },
  {
    "text": "not enough time to go into everything but if you are particularly interested then last year NDC I gave a talk about",
    "start": "180370",
    "end": "187000"
  },
  {
    "text": "time series specifically and we're also",
    "start": "187000",
    "end": "192460"
  },
  {
    "text": "not going to look any specific pieces of software I'm not going to name any software if you put the appropriate term",
    "start": "192460",
    "end": "200140"
  },
  {
    "text": "into your favorite search engine you'll find lists upon lists of software you can use but again too much to cover too",
    "start": "200140",
    "end": "207040"
  },
  {
    "text": "short time if you are using a cloud then maybe look at what they offer it's a good starting point so we're gonna talk",
    "start": "207040",
    "end": "215290"
  },
  {
    "text": "a little bit about alerts logs tracing metrics and at the end a bit of",
    "start": "215290",
    "end": "220750"
  },
  {
    "text": "instrumentation two of these topics are going to take most of the time of the talk and that's going to be logs and",
    "start": "220750",
    "end": "228940"
  },
  {
    "text": "metrics alerts alerts are essentially an",
    "start": "228940",
    "end": "236320"
  },
  {
    "text": "automated checking service you have some service that is constantly checking",
    "start": "236320",
    "end": "242680"
  },
  {
    "text": "whether all your things are working by periodically running these checks and it's going to alert you when things go",
    "start": "242680",
    "end": "248230"
  },
  {
    "text": "wrong if something does fail then the",
    "start": "248230",
    "end": "255040"
  },
  {
    "text": "intention is that we notify some sort of human the human would drink coffee and the human will fix hopefully what is",
    "start": "255040",
    "end": "262150"
  },
  {
    "text": "broken so these could be external checks so we",
    "start": "262150",
    "end": "268860"
  },
  {
    "text": "ping a server try and get a HTTP endpoint something like that we can check specific things about",
    "start": "268860",
    "end": "275730"
  },
  {
    "text": "software like is a process running is a process using too much memory or we can",
    "start": "275730",
    "end": "282300"
  },
  {
    "text": "be looking at hardware so are the temperatures of our Hardware too high is something gonna overheat",
    "start": "282300",
    "end": "287550"
  },
  {
    "text": "what discs have failed you need replacing the mini network ports that might indicate 40 network cables and",
    "start": "287550",
    "end": "297300"
  },
  {
    "text": "notify someone I don't know if anyone still uses pages but you know mobile",
    "start": "297300",
    "end": "302729"
  },
  {
    "text": "phones email instant messaging and we can display all of these things that are broken in a nice fancy dashboard so I",
    "start": "302729",
    "end": "314370"
  },
  {
    "text": "kind of consider this the foundation to what we're going to talk about yeah a lot of the justification to spend time",
    "start": "314370",
    "end": "322530"
  },
  {
    "text": "doing this is to make sure that things keep working if you have to go to your boss and say why do we need to put time",
    "start": "322530",
    "end": "327960"
  },
  {
    "text": "into this then it's gonna be you know for this reason it's gonna be alerting and making sure you get told about",
    "start": "327960",
    "end": "334289"
  },
  {
    "text": "things that broken but if something does go down what actually broke and how to",
    "start": "334289",
    "end": "341520"
  },
  {
    "text": "actually fix it so for this you probably will look at some locks and that's what",
    "start": "341520",
    "end": "347580"
  },
  {
    "text": "logs for so logs probably don't have to go into too much depth about this their",
    "start": "347580",
    "end": "354300"
  },
  {
    "text": "text human readable usually and the ubiquitous you probably wrote software",
    "start": "354300",
    "end": "359610"
  },
  {
    "text": "that does some logging which isn't going to be new to you useful logs however are",
    "start": "359610",
    "end": "365490"
  },
  {
    "text": "less ubiquitous but they should help resolve issues no they should contain",
    "start": "365490",
    "end": "370530"
  },
  {
    "text": "errors they should contain useful information so that you can trace back some complaint from a user to what",
    "start": "370530",
    "end": "377070"
  },
  {
    "text": "actually went wrong in system and you can use logs to create alerts from but I",
    "start": "377070",
    "end": "382620"
  },
  {
    "text": "find they're often more useful when something has gone wrong when you're working out how to fix it",
    "start": "382620",
    "end": "389990"
  },
  {
    "text": "so where can we get some logs from or the operating system whichever that",
    "start": "392030",
    "end": "397260"
  },
  {
    "text": "happens to be will produce many logs for you you're stacking your middleware your",
    "start": "397260",
    "end": "403560"
  },
  {
    "text": "databases they'll all give you logs about what you're doing with them your applications and third-party",
    "start": "403560",
    "end": "409860"
  },
  {
    "text": "applications very importantly these logs contain a wealth of information to work out why it's not working",
    "start": "409860",
    "end": "417140"
  },
  {
    "text": "and even hardware so if you've got network switches and motors they'll even give you quite useful information as",
    "start": "417140",
    "end": "422730"
  },
  {
    "text": "well basically everything everything that has something to do with the",
    "start": "422730",
    "end": "428250"
  },
  {
    "text": "computing will give you logs pretty much guaranteed unfortunately there's not",
    "start": "428250",
    "end": "435450"
  },
  {
    "text": "really much consistency between all of these logs that you're getting out in fact it's a complete mess there's very",
    "start": "435450",
    "end": "441870"
  },
  {
    "text": "little consistency between what your software might produce and what your kernel might produce however there are",
    "start": "441870",
    "end": "450150"
  },
  {
    "text": "some column common elements log entries usually contained timestamp of when the",
    "start": "450150",
    "end": "457170"
  },
  {
    "text": "log when the event occurred it might give you the originator of the log so",
    "start": "457170",
    "end": "462930"
  },
  {
    "text": "the host name and that could be a VM or container or physical host you might get the name of the application that",
    "start": "462930",
    "end": "469170"
  },
  {
    "text": "produced it if it was an application and you might get some sort of severity like is this an error is this just a warning",
    "start": "469170",
    "end": "477560"
  },
  {
    "text": "and then the actual message and this is already the worst of all because it's absolutely nothing to be no consistency",
    "start": "478370",
    "end": "487020"
  },
  {
    "text": "to be found here it should contain some",
    "start": "487020",
    "end": "492720"
  },
  {
    "text": "sort of meaning about what went wrong and maybe some context specific data like usernames or IP addresses but let's",
    "start": "492720",
    "end": "500730"
  },
  {
    "text": "look at an example so this is a typical application log you might get from some back-end server it might write the logs",
    "start": "500730",
    "end": "508740"
  },
  {
    "text": "to a file to the operating system and you get some generic preamble so you'd",
    "start": "508740",
    "end": "514500"
  },
  {
    "text": "like me to talk about the timestamp and the originator and hopefully some sort",
    "start": "514500",
    "end": "519630"
  },
  {
    "text": "of description about what went wrong additional data so for this error",
    "start": "519630",
    "end": "524780"
  },
  {
    "text": "message we're being told that we can't write to a file and the reason we can't write to it is because the disk is full",
    "start": "524780",
    "end": "532040"
  },
  {
    "text": "and it was this connection you know imagine there's some sort of user session somewhere doing this to our",
    "start": "532040",
    "end": "538070"
  },
  {
    "text": "service is this connection that experienced the fault so this is quite a",
    "start": "538070",
    "end": "544040"
  },
  {
    "text": "good error message it's quite useful tells you exactly what you need to do and hopefully you can trace it back to",
    "start": "544040",
    "end": "549350"
  },
  {
    "text": "the user or the client that caused it so we've got a few categories of logs",
    "start": "549350",
    "end": "556430"
  },
  {
    "text": "errors are probably the most useful if some requests failed the log ideally should contain the root cause of the",
    "start": "556430",
    "end": "564140"
  },
  {
    "text": "problem we sometimes get lower severity errors as well such as warnings which might",
    "start": "564140",
    "end": "570830"
  },
  {
    "text": "mean that something did break but we were able to recover from it so it's not a big deal the other thing we often get",
    "start": "570830",
    "end": "578750"
  },
  {
    "text": "is events so something interesting happened it's not problem but it might",
    "start": "578750",
    "end": "583880"
  },
  {
    "text": "be useful for debugging in the future and state changes so the software or the",
    "start": "583880",
    "end": "593270"
  },
  {
    "text": "hardware is going to act differently going forward maybe it's going to write",
    "start": "593270",
    "end": "598310"
  },
  {
    "text": "to a different database use a different disk drive something like that something that could be important when working out",
    "start": "598310",
    "end": "604370"
  },
  {
    "text": "what's gone wrong there's also tracing and we're going to talk about this in more detail later on",
    "start": "604370",
    "end": "612070"
  },
  {
    "text": "so log aggregation so if you have one",
    "start": "612070",
    "end": "619610"
  },
  {
    "text": "log file you might if you have one node to log onto and one log file to grep through then you know that's pretty",
    "start": "619610",
    "end": "626900"
  },
  {
    "text": "straightforward you can do that doesn't take you too much time and the problem comes is when you have two nodes log on",
    "start": "626900",
    "end": "633650"
  },
  {
    "text": "to and check the log files or if you have four nodes to log on to and you",
    "start": "633650",
    "end": "639350"
  },
  {
    "text": "have to go to each one of those nodes and check each one of those files or if you've got eight nodes to log onto you",
    "start": "639350",
    "end": "645140"
  },
  {
    "text": "so I'm going yeah once you get to tens or hundreds this really becomes",
    "start": "645140",
    "end": "650480"
  },
  {
    "text": "impractical you can't log on to a hundred different containers and see what they're see if there's an error in",
    "start": "650480",
    "end": "655820"
  },
  {
    "text": "the bottom of the log file so what we do instead is we take all of",
    "start": "655820",
    "end": "661970"
  },
  {
    "text": "our logs and send them somewhere else over the network and put them in some central place some central server either",
    "start": "661970",
    "end": "671480"
  },
  {
    "text": "in a single file file per host whatever the idea being that we log on to one",
    "start": "671480",
    "end": "677450"
  },
  {
    "text": "place we can check through the end of the log files to really quickly see what went wrong we do keep the local logs",
    "start": "677450",
    "end": "686390"
  },
  {
    "text": "often as a buffer on the originating nodes and in the services so just in",
    "start": "686390",
    "end": "691850"
  },
  {
    "text": "case our central log repository goes down we can still go and look at the nodes individually if we absolutely have",
    "start": "691850",
    "end": "698330"
  },
  {
    "text": "to and we can handle very small kind of bursts in traffic so we can search all",
    "start": "698330",
    "end": "707630"
  },
  {
    "text": "of our logs from a single host this is a good thing the logs are still available",
    "start": "707630",
    "end": "713710"
  },
  {
    "text": "even if the node crashes which is quite useful or if you've got some bad actor",
    "start": "713710",
    "end": "721580"
  },
  {
    "text": "and they've gone and deleted your log files but if you've offloaded them then they're still available to you and we",
    "start": "721580",
    "end": "728780"
  },
  {
    "text": "can actually store quite a good amount of history without having to add disk",
    "start": "728780",
    "end": "734330"
  },
  {
    "text": "space to the individual node we can make a very heavy central server fill it full",
    "start": "734330",
    "end": "739400"
  },
  {
    "text": "of disks and we can store week months years of logs if we have to if you're",
    "start": "739400",
    "end": "745790"
  },
  {
    "text": "storing years of logs that might be a bit audible so this doesn't this isn't",
    "start": "745790",
    "end": "752960"
  },
  {
    "text": "completely free there is some complication along with this every node must be configured to log to the central",
    "start": "752960",
    "end": "758660"
  },
  {
    "text": "place and you've introduced a bottleneck into your infrastructure so all of your",
    "start": "758660",
    "end": "764420"
  },
  {
    "text": "logs are going to this one place and as you add more servers or as applications",
    "start": "764420",
    "end": "772310"
  },
  {
    "text": "getting noisier then you don't have to think about scaling this",
    "start": "772310",
    "end": "777610"
  },
  {
    "text": "and also it doesn't actually help one of our original problems in that we still",
    "start": "778510",
    "end": "785120"
  },
  {
    "text": "have mess of all these log formats it's just now we've all put them in one place so this is how we get on to talking",
    "start": "785120",
    "end": "791600"
  },
  {
    "text": "about log pausing so if you have our",
    "start": "791600",
    "end": "797750"
  },
  {
    "text": "application log that we looked at earlier what we'd like to do is we'd like to give this some structure and",
    "start": "797750",
    "end": "805090"
  },
  {
    "text": "JSON whatever you like and you typically",
    "start": "805090",
    "end": "810770"
  },
  {
    "text": "configure this kind of log parsing software with regular expressions although you don't have to do all this",
    "start": "810770",
    "end": "817880"
  },
  {
    "text": "just happens to be how a lot of software works and what we want to aim for is",
    "start": "817880",
    "end": "823160"
  },
  {
    "text": "some consistent structure so all of our logs are in one format and we can search",
    "start": "823160",
    "end": "828200"
  },
  {
    "text": "and analyze them in a consistent way",
    "start": "828200",
    "end": "832510"
  },
  {
    "text": "so this parsing is usually broken into two steps we usually look at the preamble separately from the message and",
    "start": "833260",
    "end": "840710"
  },
  {
    "text": "the log parsing system often does the preamble for us just happens to be how the logs are transported around that",
    "start": "840710",
    "end": "847400"
  },
  {
    "text": "this date is already nicely separated and so if we look at an example of this",
    "start": "847400",
    "end": "852920"
  },
  {
    "text": "we can see that the timestamp can be pulled out the program and the severity",
    "start": "852920",
    "end": "861790"
  },
  {
    "text": "into it and we start building up this JSON representation of our log instead",
    "start": "861790",
    "end": "866860"
  },
  {
    "text": "and for the time being we just put the whole message in there what we now have",
    "start": "866860",
    "end": "873320"
  },
  {
    "text": "to sort out is what we do with the message and this is where we start writing these regular expressions",
    "start": "873320",
    "end": "878870"
  },
  {
    "text": "typically but not always and not only do we want to pull this message apart but",
    "start": "878870",
    "end": "884450"
  },
  {
    "text": "we want to capture bits of it and we want to tag this message with some sort of identifier so it's easy to find later",
    "start": "884450",
    "end": "890870"
  },
  {
    "text": "on so we didn't have to keep searching for this potentially quite long string",
    "start": "890870",
    "end": "897010"
  },
  {
    "text": "say our regular expression might look a bit like this so we've matched the first",
    "start": "897010",
    "end": "903740"
  },
  {
    "text": "bit of our message and we pull out the path of the file that caused",
    "start": "903740",
    "end": "910890"
  },
  {
    "text": "we could pull out the connections or the IP address and the port number and",
    "start": "910890",
    "end": "916560"
  },
  {
    "text": "crucially we could pull out the error message as well so if we look at how",
    "start": "916560",
    "end": "922840"
  },
  {
    "text": "this might work and then we also tagged it with some sort of tag so if we look",
    "start": "922840",
    "end": "930520"
  },
  {
    "text": "at this what we essentially do is when we matched this particular log we add",
    "start": "930520",
    "end": "936460"
  },
  {
    "text": "our tag on and this replaces the message for intents and purposes we can pull out",
    "start": "936460",
    "end": "942820"
  },
  {
    "text": "the pass at that as a field we pull out the IP import and we can pull out the error messages about so there's our full",
    "start": "942820",
    "end": "952330"
  },
  {
    "text": "conversion so this is great because what",
    "start": "952330",
    "end": "957490"
  },
  {
    "text": "it can do is we can give all of those logs coming from all these places consistent format this means that this",
    "start": "957490",
    "end": "964720"
  },
  {
    "text": "data that we've built up it's gonna be a lot easier to index and a lot easier to search either by writing little scripts",
    "start": "964720",
    "end": "970540"
  },
  {
    "text": "and bits of code ourselves or by putting in a database unfortunately isn't",
    "start": "970540",
    "end": "976180"
  },
  {
    "text": "completely free again nothing's free we have to actually run write these rules for all of our software and all of our",
    "start": "976180",
    "end": "982120"
  },
  {
    "text": "hardware and hopefully by this point in time there exists a good repository of these rules already out there in the",
    "start": "982120",
    "end": "989410"
  },
  {
    "text": "world especially for very common things like Apache log files nginx log files",
    "start": "989410",
    "end": "995460"
  },
  {
    "text": "now these are gonna exist for you so",
    "start": "995460",
    "end": "1000690"
  },
  {
    "text": "this takes us on to a topic of structured logging so let's look at an",
    "start": "1000690",
    "end": "1006720"
  },
  {
    "text": "example of not structured logging to start with so this is Python but you can imagine it however you please it's",
    "start": "1006720",
    "end": "1012630"
  },
  {
    "text": "fairly generic and we have some logging API that we call in our software and we",
    "start": "1012630",
    "end": "1019650"
  },
  {
    "text": "have some format string defines what message is going to come out and we have",
    "start": "1019650",
    "end": "1024900"
  },
  {
    "text": "some variables which we want to intersperse into the message so we put",
    "start": "1024900",
    "end": "1030870"
  },
  {
    "text": "the path name in there we put the IP address the port number and then we might put a string F ID version of our",
    "start": "1030870",
    "end": "1037319"
  },
  {
    "text": "exception in there as our error message",
    "start": "1037319",
    "end": "1041360"
  },
  {
    "text": "and this might come out a bit like this just like we were lucky I mean again the",
    "start": "1042569",
    "end": "1049840"
  },
  {
    "text": "preamble in this case might be produced by the log server you're sending to or it might be produced by the library",
    "start": "1049840",
    "end": "1055960"
  },
  {
    "text": "you're using and but normally you don't have to do that yourself unless you're writing a logging library I think",
    "start": "1055960",
    "end": "1061330"
  },
  {
    "text": "there's enough of those in the world so maybe don't write your own logging library and then we've interspersed all",
    "start": "1061330",
    "end": "1068080"
  },
  {
    "text": "of our variables into the message though so we could pause this now like we're",
    "start": "1068080",
    "end": "1075850"
  },
  {
    "text": "pausing all over other logs but this big colossal waste of time and because if we",
    "start": "1075850",
    "end": "1081760"
  },
  {
    "text": "just looked at the code and we had all the fields that we put into our log in nice separate variables so why don't we",
    "start": "1081760",
    "end": "1088480"
  },
  {
    "text": "just output the structured format directly we skip the formatting step but we'll skip the parsing step so we looked",
    "start": "1088480",
    "end": "1098110"
  },
  {
    "text": "at the Python example but if we look at other programming languages in c-sharp maybe you're right something like this",
    "start": "1098110",
    "end": "1104260"
  },
  {
    "text": "and the syntax is a bit different but still the same process even in C if",
    "start": "1104260",
    "end": "1109630"
  },
  {
    "text": "you're using syslog it looks remarkably similar so we'll look at the Python one",
    "start": "1109630",
    "end": "1118320"
  },
  {
    "text": "just as an example but it's going to be very similar no matter what language",
    "start": "1118320",
    "end": "1124450"
  },
  {
    "text": "you're using so this is what we did before but we want to output all these",
    "start": "1124450",
    "end": "1131260"
  },
  {
    "text": "fields in a structured form instead of a textual form so the logging live we will",
    "start": "1131260",
    "end": "1136480"
  },
  {
    "text": "do a bit of this for us you can probably configure it so that it outputs JSON and it at least outputs",
    "start": "1136480",
    "end": "1143020"
  },
  {
    "text": "that metadata as JSON and like before I'm sure you could get it so it outputs",
    "start": "1143020",
    "end": "1150340"
  },
  {
    "text": "the message just as a field in their structured logging api's tend to vary",
    "start": "1150340",
    "end": "1158890"
  },
  {
    "text": "this ever so slightly and it really is quite ever so slightly by instead of",
    "start": "1158890",
    "end": "1165700"
  },
  {
    "text": "having some huge message we just give the log or the event some sort of name that's easy to index and look up later",
    "start": "1165700",
    "end": "1172780"
  },
  {
    "text": "on and then those variables which we formatted into our message into a",
    "start": "1172780",
    "end": "1179540"
  },
  {
    "text": "textual form well let's not do any of that let's just output them in the structured form that",
    "start": "1179540",
    "end": "1186200"
  },
  {
    "text": "they were in the application in the first place seems almost too simple",
    "start": "1186200",
    "end": "1191780"
  },
  {
    "text": "isn't it so this is great because it gets all of our important variables out",
    "start": "1191780",
    "end": "1199280"
  },
  {
    "text": "of our application without having to do all this parsing in our logging infrastructure saves a lot of effort and",
    "start": "1199280",
    "end": "1207340"
  },
  {
    "text": "crucially we don't have to go an update our infrastructure every time we add a",
    "start": "1207340",
    "end": "1212990"
  },
  {
    "text": "new log message to our application so that's what you get anybody moves this round-tripping we're not performing and",
    "start": "1212990",
    "end": "1219320"
  },
  {
    "text": "then reap ours together now there's some marginal efficiency as well perhaps if you in a language where that sort of",
    "start": "1219320",
    "end": "1225860"
  },
  {
    "text": "thing matters however the big butt is",
    "start": "1225860",
    "end": "1232160"
  },
  {
    "text": "that you have to be able to change the code it's actually producing the bugs you can't just go on to your favorite",
    "start": "1232160",
    "end": "1238520"
  },
  {
    "text": "Network appliance and start telling it to output logs as JSON maybe some you",
    "start": "1238520",
    "end": "1243800"
  },
  {
    "text": "can and for best results you will need to make sure this structure has some",
    "start": "1243800",
    "end": "1249530"
  },
  {
    "text": "consistency to it you know if some of your logs are using username and some",
    "start": "1249530",
    "end": "1255860"
  },
  {
    "text": "are using user or some using IP at versus IP address this is actually going",
    "start": "1255860",
    "end": "1260930"
  },
  {
    "text": "to still cause you quite a lot of problems if you're looking for everything that happened for a particular IP address or if you're",
    "start": "1260930",
    "end": "1267440"
  },
  {
    "text": "looking for everything that happened for a particular user so the worst case is",
    "start": "1267440",
    "end": "1272570"
  },
  {
    "text": "we still need to actually do some processing and some parsing to fix this so that's not great okay",
    "start": "1272570",
    "end": "1280059"
  },
  {
    "text": "let's have a little talk about databases so we've got this lovely structured data we now want to make as best use of it as",
    "start": "1280330",
    "end": "1287240"
  },
  {
    "text": "we possibly can and text files are great they're really easy to use open them up",
    "start": "1287240",
    "end": "1293390"
  },
  {
    "text": "in a text editor search for something brilliant",
    "start": "1293390",
    "end": "1299070"
  },
  {
    "text": "the problem is searching them is not very efficient it's not very robust either so let's say we wanted to find",
    "start": "1299070",
    "end": "1307169"
  },
  {
    "text": "all the logs for a particular time range well that's going to involve some fairly complicated regular expression or maybe",
    "start": "1307169",
    "end": "1314400"
  },
  {
    "text": "you have to write a bit of Python or some sort of script to do that or if you",
    "start": "1314400",
    "end": "1319710"
  },
  {
    "text": "want to find all of the logs for a particular program or if you wanted to find all the errors well you essentially",
    "start": "1319710",
    "end": "1327059"
  },
  {
    "text": "end up going through your log file to find these two things it's a file so you",
    "start": "1327059",
    "end": "1335340"
  },
  {
    "text": "have to walk through the entire file everything that's in that file from start to finish to find what you're",
    "start": "1335340",
    "end": "1340770"
  },
  {
    "text": "interested in and this is fine if you've got a couple of hundred megabytes of logs it's not fine if you've got a",
    "start": "1340770",
    "end": "1347280"
  },
  {
    "text": "couple of hundred gigabytes of logs which you may balk at but if you're",
    "start": "1347280",
    "end": "1354030"
  },
  {
    "text": "heavily invested in the cloud and you're adding servers on demand then you could easily end up with a huge amount of log",
    "start": "1354030",
    "end": "1359700"
  },
  {
    "text": "data so database will typically give us",
    "start": "1359700",
    "end": "1368700"
  },
  {
    "text": "some sort of index which will make it easier to find entries in particular log",
    "start": "1368700",
    "end": "1375690"
  },
  {
    "text": "store this is a gross oversimplification but as I said earlier I really don't",
    "start": "1375690",
    "end": "1381179"
  },
  {
    "text": "have enough time to go into the details of this but the idea being that the",
    "start": "1381179",
    "end": "1390780"
  },
  {
    "text": "searching becomes more efficient if we've got our log still database because we can build indexes on particular fields that we've interested in and some",
    "start": "1390780",
    "end": "1398910"
  },
  {
    "text": "databases that have advertised themselves for storing log files also",
    "start": "1398910",
    "end": "1405360"
  },
  {
    "text": "have text search abilities so if you have human readable text in the database",
    "start": "1405360",
    "end": "1410850"
  },
  {
    "text": "then you can do some searching on that look for particular phrases in your logs things I don't and we can also do some",
    "start": "1410850",
    "end": "1419340"
  },
  {
    "text": "more advanced analysis so what database is a good app typically is finding data",
    "start": "1419340",
    "end": "1424590"
  },
  {
    "text": "and producing reports about your data so we could for example build a report for",
    "start": "1424590",
    "end": "1431490"
  },
  {
    "text": "all the to administrators last month typical reporting stuff however databases aren't",
    "start": "1431490",
    "end": "1441169"
  },
  {
    "text": "simple and if you're thinking of spinning up a database to support your",
    "start": "1441169",
    "end": "1450860"
  },
  {
    "text": "existing software then your infrastructure can quite easily become",
    "start": "1450860",
    "end": "1457130"
  },
  {
    "text": "as complicated as the software you're monitoring saying I think a little bit",
    "start": "1457130",
    "end": "1462620"
  },
  {
    "text": "about you go down this road I mean take it take into account there are a lot of advantages but it will cost you a bit of",
    "start": "1462620",
    "end": "1468769"
  },
  {
    "text": "time as well so one last topic to touch",
    "start": "1468769",
    "end": "1475279"
  },
  {
    "text": "on about logs and queuing so log traffic",
    "start": "1475279",
    "end": "1480320"
  },
  {
    "text": "is generally bursty it's usually low and then when an error happens this error cascades through the system errors",
    "start": "1480320",
    "end": "1487250"
  },
  {
    "text": "caused other errors and you end up with this burst of log happening all at one go and the rest thing is it's when you",
    "start": "1487250",
    "end": "1493760"
  },
  {
    "text": "really need the logs because something's gone wrong and we're also increasing the",
    "start": "1493760",
    "end": "1500659"
  },
  {
    "text": "overheads in our infrastructure because we've put in this central bottleneck by sending all the logs to one place we've",
    "start": "1500659",
    "end": "1507110"
  },
  {
    "text": "put in these parsing and processing steps and we've decided to put it all in a database which can be relatively slow",
    "start": "1507110",
    "end": "1516220"
  },
  {
    "text": "not only that but we have to deal with increasing volume or service more services so we want to retain this",
    "start": "1516220",
    "end": "1527870"
  },
  {
    "text": "ability to put all this data in one place because we want to keep the data burden off of the nodes and off the",
    "start": "1527870",
    "end": "1534590"
  },
  {
    "text": "producers because we still want to be able to have logs there if we get a crash for breach so we make a trade-off",
    "start": "1534590",
    "end": "1542899"
  },
  {
    "text": "we say we can deal with a bit of a delay between the logs being produced and the",
    "start": "1542899",
    "end": "1550610"
  },
  {
    "text": "logs being queryable and fully processed and for that reason we can pop a queue",
    "start": "1550610",
    "end": "1555889"
  },
  {
    "text": "in between which consumes or takes all",
    "start": "1555889",
    "end": "1560929"
  },
  {
    "text": "the logs and just persist them without doing any processing on them efficiently and typically depending on",
    "start": "1560929",
    "end": "1570860"
  },
  {
    "text": "the software using this can be scaled up and the software will spread the data out over a number of nodes but anyone",
    "start": "1570860",
    "end": "1582530"
  },
  {
    "text": "noticed that this is the exact same message I put up a minute ago so queues aren't very easy either I",
    "start": "1582530",
    "end": "1590120"
  },
  {
    "text": "don't know if anyone's ever had to maintain a rabbitmq cluster it's hard",
    "start": "1590120",
    "end": "1597320"
  },
  {
    "text": "work they're just as complicated as databases because they are databases",
    "start": "1597320",
    "end": "1603980"
  },
  {
    "text": "that's another talk so again go into some app for Weaver don't go into it",
    "start": "1603980",
    "end": "1611260"
  },
  {
    "text": "without thinking about it first and whether you actually need it so changing",
    "start": "1611260",
    "end": "1619340"
  },
  {
    "text": "topics completely now tracing well not",
    "start": "1619340",
    "end": "1624470"
  },
  {
    "text": "completely so tracing straighten can mean a lot of things it's typically a form of logging",
    "start": "1624470",
    "end": "1630830"
  },
  {
    "text": "usually some sort of debug logging you're using it to debug your application it can reuse although a",
    "start": "1630830",
    "end": "1637610"
  },
  {
    "text": "logging infrastructure you put in place and there's also bespoke tools for visualizing traces and collecting them",
    "start": "1637610",
    "end": "1646000"
  },
  {
    "text": "the data is usually consumed by developers it's not often intended for your users and the way I like to think",
    "start": "1646000",
    "end": "1654980"
  },
  {
    "text": "of it as is we're thinking about whole operations we're not just thinking about individual events happening so we're",
    "start": "1654980",
    "end": "1661910"
  },
  {
    "text": "trying to give some more meaning to our logs make them a bit more useful so you",
    "start": "1661910",
    "end": "1668809"
  },
  {
    "text": "can think about trace in two ways I like to think of it as a pair of events an operation starting an operation",
    "start": "1668809",
    "end": "1675410"
  },
  {
    "text": "finishing and we could tag the log in the same way with some metadata as we",
    "start": "1675410",
    "end": "1682580"
  },
  {
    "text": "did before in our structured logging and we just have two events Stan stop",
    "start": "1682580",
    "end": "1688720"
  },
  {
    "text": "alternatively we could think of it as a single event which represents the",
    "start": "1688720",
    "end": "1693800"
  },
  {
    "text": "completion and the start is implicit by the fact we're representing a completion",
    "start": "1693800",
    "end": "1699290"
  },
  {
    "text": "we add therefore a timestamp in to say when the operation as a whole started",
    "start": "1699290",
    "end": "1704780"
  },
  {
    "text": "and there's there's trade-offs - between these two but fundamentally they're the",
    "start": "1704780",
    "end": "1710930"
  },
  {
    "text": "same they're representing the same thing so there all sorts of things we can",
    "start": "1710930",
    "end": "1716390"
  },
  {
    "text": "trace network connections IO user sessions database transactions and one",
    "start": "1716390",
    "end": "1725000"
  },
  {
    "text": "of these categories is non intrusive so we can get this information out of the process now of our program without",
    "start": "1725000",
    "end": "1732440"
  },
  {
    "text": "actually changing in any way so we can use hooks in our compiler we can use",
    "start": "1732440",
    "end": "1738860"
  },
  {
    "text": "hooks in the operating system to tell us when file IO is going on and we can do",
    "start": "1738860",
    "end": "1745490"
  },
  {
    "text": "intrusive tracing so we can actually add things to our software to explicitly say we were interested in this operation",
    "start": "1745490",
    "end": "1751820"
  },
  {
    "text": "here - here and some of your middleware you're using in some of your libraries",
    "start": "1751820",
    "end": "1757130"
  },
  {
    "text": "might actually do this for you and if you're using third-party software which",
    "start": "1757130",
    "end": "1763010"
  },
  {
    "text": "you are because there's a operating system underneath you and there's probably a database then they're gonna",
    "start": "1763010",
    "end": "1768380"
  },
  {
    "text": "produce traces as well so what's the",
    "start": "1768380",
    "end": "1775010"
  },
  {
    "text": "most interesting thing about tracing why is there a whole section on this well I consider the most interesting thing to",
    "start": "1775010",
    "end": "1781610"
  },
  {
    "text": "be relationships because when we have an event it's really just something that",
    "start": "1781610",
    "end": "1788270"
  },
  {
    "text": "happened in isolation there's no context what we're doing with tracing is we're starting to give some extra context so",
    "start": "1788270",
    "end": "1797500"
  },
  {
    "text": "simplest one is the start end we kind of touched on that earlier if we have two events then we can relate them together",
    "start": "1797500",
    "end": "1803660"
  },
  {
    "text": "with some identifier you IDs are quite common for this purpose and we can use",
    "start": "1803660",
    "end": "1808730"
  },
  {
    "text": "it to build a link between the start and the end event and therefore we have a representation of an operation and",
    "start": "1808730",
    "end": "1816430"
  },
  {
    "text": "having this explicit rather than just relying on the timestamps of when the",
    "start": "1816430",
    "end": "1821480"
  },
  {
    "text": "events happen is very useful when you have the same operation which can happen",
    "start": "1821480",
    "end": "1827630"
  },
  {
    "text": "in parallel so you have overlapping operations",
    "start": "1827630",
    "end": "1832750"
  },
  {
    "text": "so parent-child relationships you can think of a child operation as one",
    "start": "1833980",
    "end": "1840500"
  },
  {
    "text": "function calling another one operation needing to invoke another operation for some reason and again you could infer",
    "start": "1840500",
    "end": "1847789"
  },
  {
    "text": "this from the timing because you can see that do you have this sort of outer operation and we have this inner",
    "start": "1847789",
    "end": "1854120"
  },
  {
    "text": "operation and we know that the inner one occurs in the time span but it's not",
    "start": "1854120",
    "end": "1859580"
  },
  {
    "text": "very robust it's a bit brittle we're sort of making guesses and then if you've got overlapping operations it's",
    "start": "1859580",
    "end": "1865880"
  },
  {
    "text": "gonna become hard so we want to explicitly link these together with some identifiers so we can say this operation",
    "start": "1865880",
    "end": "1873799"
  },
  {
    "text": "was caused because of this other operation and we start building up this hierarchy of operations cause",
    "start": "1873799",
    "end": "1883640"
  },
  {
    "text": "consequence or follows as it's sometimes called it's very similar to a parent",
    "start": "1883640",
    "end": "1888799"
  },
  {
    "text": "child and you can kind of think of it as an operation that was caused by an operation but the originating operation",
    "start": "1888799",
    "end": "1896419"
  },
  {
    "text": "doesn't actually depend on the operation so doesn't need the result it's just",
    "start": "1896419",
    "end": "1901789"
  },
  {
    "text": "something that happened because of something else there's a subtle",
    "start": "1901789",
    "end": "1907730"
  },
  {
    "text": "difference but sometimes it's quite useful to make it explicit so why are",
    "start": "1907730",
    "end": "1915919"
  },
  {
    "text": "these relationships useful well profiling is for me the most obvious one because if when you start building up",
    "start": "1915919",
    "end": "1921380"
  },
  {
    "text": "these traces they start to look a lot like a call graph if you've ever used like a profiler in your tool chain",
    "start": "1921380",
    "end": "1929450"
  },
  {
    "text": "he'll compile a tool chain we can start looking at the duration of operations",
    "start": "1929450",
    "end": "1935440"
  },
  {
    "text": "computing worst case durations have restorations and we can start finding",
    "start": "1935440",
    "end": "1941210"
  },
  {
    "text": "bottlenecks in our system which bits of an operation actually taking longer than others what should we look into and of",
    "start": "1941210",
    "end": "1948500"
  },
  {
    "text": "course we can use them for troubleshooting extremely useful for finding the root cause of an error because if you have a user request that",
    "start": "1948500",
    "end": "1955610"
  },
  {
    "text": "failed then you can trace that as the name implies to the sub operations and",
    "start": "1955610",
    "end": "1962149"
  },
  {
    "text": "eventually you might get down to the fact that a database transaction failed because the disk was for and you'll be",
    "start": "1962149",
    "end": "1968649"
  },
  {
    "text": "able to relate those all the way up through your application this is especially useful in distributed systems",
    "start": "1968649",
    "end": "1975720"
  },
  {
    "text": "where part of your application is running somewhere else because these relationships can propagate node",
    "start": "1975720",
    "end": "1982419"
  },
  {
    "text": "boundaries this is extremely useful so",
    "start": "1982419",
    "end": "1988000"
  },
  {
    "text": "let's look at a bit of a visualization quite a nice visualization of these",
    "start": "1988000",
    "end": "1993309"
  },
  {
    "text": "traces some people use graphs that's an option but time lines are quite nice so we can if you've got to use of requests",
    "start": "1993309",
    "end": "2000149"
  },
  {
    "text": "then what you can kind of plot them like this on a timeline to see when something",
    "start": "2000149",
    "end": "2007169"
  },
  {
    "text": "is going on and then we can if we've got sub operations we can add these as well",
    "start": "2007169",
    "end": "2013070"
  },
  {
    "text": "and as I said before we can propagate these IDs even if bits of this software",
    "start": "2013070",
    "end": "2021149"
  },
  {
    "text": "are actually different microservices running on different nodes and with that",
    "start": "2021149",
    "end": "2026909"
  },
  {
    "text": "we can actually still link them together so we can see that I use a request called into our authentication service",
    "start": "2026909",
    "end": "2033659"
  },
  {
    "text": "and then it did something with a cache and again you can extend this as far",
    "start": "2033659",
    "end": "2039629"
  },
  {
    "text": "down as you like if you get to the database level then you might even be",
    "start": "2039629",
    "end": "2046169"
  },
  {
    "text": "able to use some tracing this in your database client library or you could",
    "start": "2046169",
    "end": "2051569"
  },
  {
    "text": "parse the log files from your database and assuming you've got some Val identifiers in your request somewhere",
    "start": "2051569",
    "end": "2057990"
  },
  {
    "text": "maybe you can do something so you can start building up these really nice visualizations of what's going on so",
    "start": "2057990",
    "end": "2064648"
  },
  {
    "text": "these are relatively simple relationships provide a huge amount of information and you can even reuse all",
    "start": "2064649",
    "end": "2072329"
  },
  {
    "text": "that exists in logging infrastructure but in place unfortunately the volume of",
    "start": "2072329",
    "end": "2077398"
  },
  {
    "text": "data can become vast especially if you're quite liberal with where you put all these tracing operations in your",
    "start": "2077399",
    "end": "2084690"
  },
  {
    "text": "program there's a lot of techniques to deal with this so for example sampling",
    "start": "2084690",
    "end": "2091618"
  },
  {
    "text": "so only capturing some of the requests a lot of tracing systems for example",
    "start": "2091619",
    "end": "2098190"
  },
  {
    "text": "like chromium or the Linux kernel they have their own trace file formats which are optimized to store the data and we",
    "start": "2098190",
    "end": "2105630"
  },
  {
    "text": "can also start doing aggregations of some of our traces so if really all",
    "start": "2105630",
    "end": "2110850"
  },
  {
    "text": "we've interested in is the average duration of something or the number of times of a quest happened or the number",
    "start": "2110850",
    "end": "2116310"
  },
  {
    "text": "of times a database write happened then we can just compute those and omit those instead and this brings us nicely onto",
    "start": "2116310",
    "end": "2124440"
  },
  {
    "text": "the topic of metrics so again like logs",
    "start": "2124440",
    "end": "2129510"
  },
  {
    "text": "metrics can come from all over the place we can measure disk space we can measure",
    "start": "2129510",
    "end": "2135450"
  },
  {
    "text": "CPU usage we can measure the number of requests we couldn't measure the latency of particular operations in our",
    "start": "2135450",
    "end": "2141990"
  },
  {
    "text": "application we can get metrics out of hardware appliances and we can actually",
    "start": "2141990",
    "end": "2149280"
  },
  {
    "text": "measure physical real world things as well like temperature or power usage for",
    "start": "2149280",
    "end": "2155340"
  },
  {
    "text": "example and if you're on a cloud you might also want to measure cost so you",
    "start": "2155340",
    "end": "2161370"
  },
  {
    "text": "could put the amount of money you're spending so the goal here is to build",
    "start": "2161370",
    "end": "2168870"
  },
  {
    "text": "historical data we can easily log on to a node and see how much disk is left but what we want to do for the sake of",
    "start": "2168870",
    "end": "2175260"
  },
  {
    "text": "troubleshooting is we want to see how the CPU usage varied over the last hour so we can build these trends over time",
    "start": "2175260",
    "end": "2184820"
  },
  {
    "text": "you know by this we really start to get insight into our applications working or",
    "start": "2184820",
    "end": "2191850"
  },
  {
    "text": "even how a third-party application is working and again we can create these visualizations and graphs of things",
    "start": "2191850",
    "end": "2200010"
  },
  {
    "text": "going up over time things going down over time so what sort of metrics can we",
    "start": "2200010",
    "end": "2206790"
  },
  {
    "text": "get and how do we get them so the typical way we obtain metrics is by",
    "start": "2206790",
    "end": "2211800"
  },
  {
    "text": "polling so every few seconds we might pull something like CPU usage and we",
    "start": "2211800",
    "end": "2220110"
  },
  {
    "text": "could write this to a log file but it's more useful if we put it in a database and for the same reasons as we put all",
    "start": "2220110",
    "end": "2227010"
  },
  {
    "text": "the logs in one place having one of metrics for our entire clusterer is",
    "start": "2227010",
    "end": "2232290"
  },
  {
    "text": "useful so we can do analysis over every node that we're running well you'll",
    "start": "2232290",
    "end": "2238800"
  },
  {
    "text": "actually have when you're doing this is you'll have multiple metrics you're not just gonna have one metric you're gonna",
    "start": "2238800",
    "end": "2244800"
  },
  {
    "text": "have multiple collectors collecting different bits of information from different sources so we might have three",
    "start": "2244800",
    "end": "2252480"
  },
  {
    "text": "metrics that are coming in every minute and we need to be able to identify what each of them actually being so there's",
    "start": "2252480",
    "end": "2259680"
  },
  {
    "text": "two quite common schemes for doing this the dotted this kind of dotted notation",
    "start": "2259680",
    "end": "2265470"
  },
  {
    "text": "where you have like host name dot CPU usage and another notation where it's",
    "start": "2265470",
    "end": "2272010"
  },
  {
    "text": "like you have some tags and you have a name of the metric which some people",
    "start": "2272010",
    "end": "2277800"
  },
  {
    "text": "consider to be better save that's how",
    "start": "2277800",
    "end": "2283020"
  },
  {
    "text": "our data might look we've got two CPU sensors and a temperature sensor and then we're tagging which hosts the CPU",
    "start": "2283020",
    "end": "2290100"
  },
  {
    "text": "usage was four and you end up with this data that kind of looks quite similar to",
    "start": "2290100",
    "end": "2295410"
  },
  {
    "text": "structured logs in a sense just with an extra value had tacked on it's kind of",
    "start": "2295410",
    "end": "2301890"
  },
  {
    "text": "interesting so visualization and if",
    "start": "2301890",
    "end": "2308040"
  },
  {
    "text": "we've got our data that we looked at second ago we might want to pull out the temperature of our rack of servers and",
    "start": "2308040",
    "end": "2316440"
  },
  {
    "text": "we might want to plot the temperature over time so we can pull out the three values and jordana graph and you can",
    "start": "2316440",
    "end": "2323610"
  },
  {
    "text": "instantly see you know this isn't news to anybody the graphical representation you can immediately see that the",
    "start": "2323610",
    "end": "2329490"
  },
  {
    "text": "temperature's going up where I was looking at the raw values it's a lot harder saying these visualizations are",
    "start": "2329490",
    "end": "2336750"
  },
  {
    "text": "extremely useful and we also might want to compare metrics so let's say we",
    "start": "2336750",
    "end": "2344250"
  },
  {
    "text": "wanted to compare what was happening we have two hosts then we could top the CPUs to do both on the same graph and",
    "start": "2344250",
    "end": "2351960"
  },
  {
    "text": "compare the two so all this data what we were actually",
    "start": "2351960",
    "end": "2359400"
  },
  {
    "text": "looking for when we're doing these visualizations as we're looking for a particular time window in the",
    "start": "2359400",
    "end": "2364500"
  },
  {
    "text": "potentially bigger set of data so for all the same reasons as a database was",
    "start": "2364500",
    "end": "2370320"
  },
  {
    "text": "useful for storing logs makes them very useful for storing metrics as well so",
    "start": "2370320",
    "end": "2379310"
  },
  {
    "text": "time series databases category of databases that are very",
    "start": "2379370",
    "end": "2385320"
  },
  {
    "text": "useful for storing metrics and there's been a surge in development of these",
    "start": "2385320",
    "end": "2391380"
  },
  {
    "text": "things since the Big Data and Internet of Things and whatever the next one is",
    "start": "2391380",
    "end": "2397440"
  },
  {
    "text": "I'm sure there'll be a machine-learning time series database in the next couple of months yeah these so many of these things it's",
    "start": "2397440",
    "end": "2407100"
  },
  {
    "text": "incredible I do have a list I mean it doesn't fit on a slide but they're great",
    "start": "2407100",
    "end": "2414240"
  },
  {
    "text": "they're really useful for storing this kind of timestamp versus value kind of data and they're fairly straightforward",
    "start": "2414240",
    "end": "2423150"
  },
  {
    "text": "we just take our data from these metric collectors at this regular time interval and we'd put them in a database and we",
    "start": "2423150",
    "end": "2430890"
  },
  {
    "text": "can query the data points for a particular metric like our CPU usage for",
    "start": "2430890",
    "end": "2436200"
  },
  {
    "text": "a particular time window like the last five minutes the last hour or maybe",
    "start": "2436200",
    "end": "2441330"
  },
  {
    "text": "we're interested in the day last week because we have troubles troubleshooting",
    "start": "2441330",
    "end": "2446700"
  },
  {
    "text": "some issue so these databases have some",
    "start": "2446700",
    "end": "2451980"
  },
  {
    "text": "very useful characteristics which are worth touching on and they were very good at compressing data because time",
    "start": "2451980",
    "end": "2458400"
  },
  {
    "text": "series data tends to be very repetitive there's also for repeated values and the time points are very regular so this",
    "start": "2458400",
    "end": "2465510"
  },
  {
    "text": "bodes very well for compression the database will offer you the ability to",
    "start": "2465510",
    "end": "2472530"
  },
  {
    "text": "define a rolling window of data so the database will very efficiently delete",
    "start": "2472530",
    "end": "2478770"
  },
  {
    "text": "data that's older than six months old or a month old which is something that's",
    "start": "2478770",
    "end": "2484170"
  },
  {
    "text": "not very efficient to do in even in sequel or no sequel database",
    "start": "2484170",
    "end": "2489680"
  },
  {
    "text": "and they also have this really interesting optimization for pre",
    "start": "2489680",
    "end": "2496560"
  },
  {
    "text": "aggregating your data and this is specifically useful for when you want to visualize data or a very large time",
    "start": "2496560",
    "end": "2502950"
  },
  {
    "text": "window if you imagine you're collecting a CPU usage every second for a year that's a lot of data points so to run a",
    "start": "2502950",
    "end": "2512250"
  },
  {
    "text": "query on all of those could be quite expensive so they're particularly good at optimizing this and I'll just go very",
    "start": "2512250",
    "end": "2518940"
  },
  {
    "text": "quickly over this because as I said I did actually do a whole talk on this just this topic last year as we collect",
    "start": "2518940",
    "end": "2528510"
  },
  {
    "text": "data we build up this aggregated view of our data points so when we get let's say",
    "start": "2528510",
    "end": "2535320"
  },
  {
    "text": "we're combining every two minutes of data into one data point then we build",
    "start": "2535320",
    "end": "2541980"
  },
  {
    "text": "up these sums and mins and maxes and count as we go as we ingest data so we",
    "start": "2541980",
    "end": "2551520"
  },
  {
    "text": "end up with a representation of our data that's a fraction of the size of the",
    "start": "2551520",
    "end": "2558240"
  },
  {
    "text": "original data just at a lower resolution so if you imagine you build up if you",
    "start": "2558240",
    "end": "2565829"
  },
  {
    "text": "imagine this is having the size of the data then you can also put up a view that makes a tenth of the size and this",
    "start": "2565829",
    "end": "2574349"
  },
  {
    "text": "is much faster to query and this is how these time series databases are able to give you a view of your metric over an",
    "start": "2574349",
    "end": "2581640"
  },
  {
    "text": "entire year extremely quickly because they've pulled all this data down and pre aggregated it into these time",
    "start": "2581640",
    "end": "2588780"
  },
  {
    "text": "buckets for you so this is extremely useful to be aware of because some of these databases will need some manual",
    "start": "2588780",
    "end": "2595290"
  },
  {
    "text": "tweaking so you need to tell them kind of which metrics you're interested in and how you want them aggregated so we",
    "start": "2595290",
    "end": "2606540"
  },
  {
    "text": "go right back to the start when we were talking about alerting we have this",
    "start": "2606540",
    "end": "2613040"
  },
  {
    "text": "alerting monitoring service checking all of our stuff but it's actually",
    "start": "2613040",
    "end": "2618690"
  },
  {
    "text": "duplicating a lot of effort that we've just put in collecting all these metrics now and this monitoring service is also going",
    "start": "2618690",
    "end": "2625710"
  },
  {
    "text": "around checking disk spaces checking temperatures and so on and this",
    "start": "2625710",
    "end": "2632040"
  },
  {
    "text": "can put a bit of an unnecessary load on our system some metrics can be quite expensive to obtain especially if you're",
    "start": "2632040",
    "end": "2639420"
  },
  {
    "text": "talking to Hardware appliances I'm talking to network appliances / SNMP can be very slow to maintain statistics from",
    "start": "2639420",
    "end": "2646680"
  },
  {
    "text": "those so really what we want to do is we",
    "start": "2646680",
    "end": "2652080"
  },
  {
    "text": "want to use all the metrics that we've already obtained and used them instead of reacquiring them so you can use the",
    "start": "2652080",
    "end": "2660750"
  },
  {
    "text": "values from our metrics database instead and introduce some sort of simpler more",
    "start": "2660750",
    "end": "2666690"
  },
  {
    "text": "lightweight alerting service that simply takes the data from the database and applies the checks to them and this is",
    "start": "2666690",
    "end": "2673800"
  },
  {
    "text": "all very software dependent it'll depend a lot on what time series database you happen to use whether it has alerting",
    "start": "2673800",
    "end": "2680520"
  },
  {
    "text": "built-in whether there's some external service wherever there's some external service but it's specific to a",
    "start": "2680520",
    "end": "2687300"
  },
  {
    "text": "particular database so trivial example",
    "start": "2687300",
    "end": "2695339"
  },
  {
    "text": "of this we have some disk usage metric we might be able to create an alerting",
    "start": "2695339",
    "end": "2700589"
  },
  {
    "text": "rule for when the disk usage exceeds 90%",
    "start": "2700589",
    "end": "2705740"
  },
  {
    "text": "saying and the syntax for this will depend heavily on what software you",
    "start": "2705740",
    "end": "2713250"
  },
  {
    "text": "choose and you might get some sort of useful nicely structured output where",
    "start": "2713250",
    "end": "2720089"
  },
  {
    "text": "you get told a timestamp of when the alert fired the name of the alert that",
    "start": "2720089",
    "end": "2726780"
  },
  {
    "text": "fired and the value and which entity if",
    "start": "2726780",
    "end": "2732540"
  },
  {
    "text": "you've got multiple CPUs to use on multiple disk usages and it will tell you which hosts for example went over",
    "start": "2732540",
    "end": "2738599"
  },
  {
    "text": "the threshold and then you have dashboards and notification mechanisms",
    "start": "2738599",
    "end": "2744540"
  },
  {
    "text": "for these as well but this is actually a very powerful concept because we have",
    "start": "2744540",
    "end": "2752070"
  },
  {
    "text": "this opportunity to create much more intelligent alert because we have much more information",
    "start": "2752070",
    "end": "2758300"
  },
  {
    "text": "we've essentially decoupled what metrics were collecting from how we're checking",
    "start": "2758300",
    "end": "2763710"
  },
  {
    "text": "them and our original all-in-one kind of monitoring service it was doing both of",
    "start": "2763710",
    "end": "2769320"
  },
  {
    "text": "these things at the same time it would check a disk and then it would it would so I would get the disk usage and then",
    "start": "2769320",
    "end": "2775920"
  },
  {
    "text": "it would check the disk usage haven't exceeded a threshold what we've done now is we've taken those two operations and",
    "start": "2775920",
    "end": "2781410"
  },
  {
    "text": "pulled them apart so what we can actually do is we can do a few things we",
    "start": "2781410",
    "end": "2787710"
  },
  {
    "text": "can start building aggregates so we could actually say is the total deuce",
    "start": "2787710",
    "end": "2792960"
  },
  {
    "text": "disk usage over all the nodes in our cluster over a certain threshold and we",
    "start": "2792960",
    "end": "2798780"
  },
  {
    "text": "can get our metrics data and we can sum all that data up we can start looking at",
    "start": "2798780",
    "end": "2806190"
  },
  {
    "text": "recent history so we could make a much more intelligent alert for say a CPU usage metric we could say did the CPU",
    "start": "2806190",
    "end": "2814380"
  },
  {
    "text": "usage over the last five minutes exceed 99% you know can we check for pegged",
    "start": "2814380",
    "end": "2821070"
  },
  {
    "text": "CPUs and we can actually use history even further back so we can do some very",
    "start": "2821070",
    "end": "2827250"
  },
  {
    "text": "simple trend analysis or we can say well what's the usual value for that CPU",
    "start": "2827250",
    "end": "2835320"
  },
  {
    "text": "what's the usual value for that the memory usage of that process and then we",
    "start": "2835320",
    "end": "2840390"
  },
  {
    "text": "can then see if the memory usage for some reason spikes uncontrollably outside the normal average so lots of",
    "start": "2840390",
    "end": "2850590"
  },
  {
    "text": "good reasons for doing this but the nice thing about this is it actually simplifies your infrastructure as well",
    "start": "2850590",
    "end": "2857130"
  },
  {
    "text": "because you've taken that checking and that allergic and monitoring service and turned it into something much simpler so",
    "start": "2857130",
    "end": "2865230"
  },
  {
    "text": "that's good so based on kind of what we just saw the",
    "start": "2865230",
    "end": "2874680"
  },
  {
    "text": "advantage and the advantages of that sometimes taking metrics from log files is a good idea",
    "start": "2874680",
    "end": "2881130"
  },
  {
    "text": "so producing very simple counters over",
    "start": "2881130",
    "end": "2886200"
  },
  {
    "text": "time so we can count the number of errors for example number of info messages because we can then correlate",
    "start": "2886200",
    "end": "2894660"
  },
  {
    "text": "this with all of our other metrics that we've built up in the system and you can",
    "start": "2894660",
    "end": "2900680"
  },
  {
    "text": "log processing tools that will do this for you or you could even do it your",
    "start": "2900680",
    "end": "2906630"
  },
  {
    "text": "application if you liked say simple example of this you know I've got a",
    "start": "2906630",
    "end": "2913559"
  },
  {
    "text": "couple of logs we have two errors there",
    "start": "2913559",
    "end": "2918690"
  },
  {
    "text": "the counter two not really very complicated but it's a more interesting",
    "start": "2918690",
    "end": "2924420"
  },
  {
    "text": "concept when you think about what that data can be used for alongside your",
    "start": "2924420",
    "end": "2929970"
  },
  {
    "text": "other metrics that's when it starts to become a lot more interesting so there",
    "start": "2929970",
    "end": "2936150"
  },
  {
    "text": "are a couple of disadvantages to this I mean you're grouping all this data together into essentially time buckets",
    "start": "2936150",
    "end": "2941849"
  },
  {
    "text": "so you'll use it you're losing a lot of precision about the original events and",
    "start": "2941849",
    "end": "2948089"
  },
  {
    "text": "storing all that data is redundant because your log database probably has some facility for counting logs but you",
    "start": "2948089",
    "end": "2956819"
  },
  {
    "text": "could actually avoid actually having a log database entirely if all you're using it for is for visualizations",
    "start": "2956819",
    "end": "2963530"
  },
  {
    "text": "alerting and analytics if that's all you're using it for if you still find it",
    "start": "2963530",
    "end": "2968579"
  },
  {
    "text": "useful for looking for particular events then you're still gonna won't have it",
    "start": "2968579",
    "end": "2974690"
  },
  {
    "text": "but it can save you a lot of effort you have a thing this is really good for is",
    "start": "2974869",
    "end": "2980940"
  },
  {
    "text": "improving the query performance of these kind of queries that span large time",
    "start": "2980940",
    "end": "2987809"
  },
  {
    "text": "Renick ranges if you start computing counts of logs that match particular",
    "start": "2987809",
    "end": "2993690"
  },
  {
    "text": "criteria over large time windows it's gonna put a lot of strain on many",
    "start": "2993690",
    "end": "2999180"
  },
  {
    "text": "databases that are more designed for Phi ending pieces of data than for creating",
    "start": "2999180",
    "end": "3005960"
  },
  {
    "text": "time for analyzing them what we've done here by producing these metrics is it's",
    "start": "3005960",
    "end": "3012230"
  },
  {
    "text": "actually pre computed the values and therefore it's much more efficient to",
    "start": "3012230",
    "end": "3017359"
  },
  {
    "text": "draw these summaries so if you're doing",
    "start": "3017359",
    "end": "3024109"
  },
  {
    "text": "this be a bit cautious because log entries are very rich there's lots of unique identifiers in them and this can",
    "start": "3024109",
    "end": "3030920"
  },
  {
    "text": "easily overwhelm your time series database as they're designed more for a",
    "start": "3030920",
    "end": "3036049"
  },
  {
    "text": "limited number of series but lots of data points create metrics for only",
    "start": "3036049",
    "end": "3042890"
  },
  {
    "text": "things you know you're going to query very common so like things that are fourth foremost on your troubleshooting",
    "start": "3042890",
    "end": "3047990"
  },
  {
    "text": "dashboards create metrics for those but yeah don't go overboard so we've just",
    "start": "3047990",
    "end": "3056119"
  },
  {
    "text": "about got a bit of time to talk about instrumentation so there's lots of",
    "start": "3056119",
    "end": "3062359"
  },
  {
    "text": "information you can get without changing anything in your software a huge amount of information we talked a little bit",
    "start": "3062359",
    "end": "3067609"
  },
  {
    "text": "about all of this rest endpoints pinging servers metrics from the operating",
    "start": "3067609",
    "end": "3073970"
  },
  {
    "text": "system from middleware and injecting tracing into your compiler or your VM",
    "start": "3073970",
    "end": "3080569"
  },
  {
    "text": "runtime whatever that happens to be instrumentation is about modifying your",
    "start": "3080569",
    "end": "3086720"
  },
  {
    "text": "code and exposing internal information that's in your software and whether",
    "start": "3086720",
    "end": "3091910"
  },
  {
    "text": "that's through logging or tracing or through metrics and there's plenty of libraries for these purposes in whatever",
    "start": "3091910",
    "end": "3099980"
  },
  {
    "text": "language you happen to be using there's",
    "start": "3099980",
    "end": "3105980"
  },
  {
    "text": "no real general answer as to what you should expose you're gonna have to just use some intuition as to what's",
    "start": "3105980",
    "end": "3112010"
  },
  {
    "text": "interesting for your domain if the most interesting entity in your software is a user then maybe you want to get some",
    "start": "3112010",
    "end": "3118910"
  },
  {
    "text": "information about users like number of users how often users are hitting a particular service things like this it's",
    "start": "3118910",
    "end": "3127190"
  },
  {
    "text": "going to need some experimentation and probably some a few cycles to work out what's really interesting",
    "start": "3127190",
    "end": "3134040"
  },
  {
    "text": "so just for an example imagine this is pseudocode I have some user code user",
    "start": "3134040",
    "end": "3141490"
  },
  {
    "text": "lookup function checks it for data in a cache if it's not a reason for a",
    "start": "3141490",
    "end": "3147130"
  },
  {
    "text": "database and imagine this code is misbehaving in some way you know the",
    "start": "3147130",
    "end": "3153490"
  },
  {
    "text": "data for the wrong users being returned pretty serious issue or imagine the code",
    "start": "3153490",
    "end": "3162850"
  },
  {
    "text": "is slow slow how do we even start debugging mam how do we identify which",
    "start": "3162850",
    "end": "3168460"
  },
  {
    "text": "part of the code is slow where's the bottleneck well we can add some logging we could log all these requests and we",
    "start": "3168460",
    "end": "3177820"
  },
  {
    "text": "could also log when the cache is used and maybe we can use that to determine where is the issue only on a particular",
    "start": "3177820",
    "end": "3184030"
  },
  {
    "text": "path is only when the cache is used is only when the database is used that's",
    "start": "3184030",
    "end": "3189340"
  },
  {
    "text": "quite useful we could use some tracing as well which kind of achieves the same",
    "start": "3189340",
    "end": "3194860"
  },
  {
    "text": "thing and you might look a bit like this so around your database transaction you",
    "start": "3194860",
    "end": "3200110"
  },
  {
    "text": "could trace and you would know therefore when the transaction started and when it",
    "start": "3200110",
    "end": "3205360"
  },
  {
    "text": "ended you can work out from there we",
    "start": "3205360",
    "end": "3212440"
  },
  {
    "text": "could also introduce some metrics and what we might want to do is instead of logging every time we read some data",
    "start": "3212440",
    "end": "3218830"
  },
  {
    "text": "from the cache maybe we just count the number of times the cache is used instead through some sort of metrics",
    "start": "3218830",
    "end": "3225550"
  },
  {
    "text": "interface and this is this is an",
    "start": "3225550",
    "end": "3231250"
  },
  {
    "text": "interesting trade-off when should you count something and when should you log something as a rule of thumb anything",
    "start": "3231250",
    "end": "3237790"
  },
  {
    "text": "that's very high frequency or anything that's particularly performance sensitive you might see benefit from",
    "start": "3237790",
    "end": "3245530"
  },
  {
    "text": "counting rather than logging every single individual event that happens so",
    "start": "3245530",
    "end": "3252100"
  },
  {
    "text": "for example the idea of using a cache is to improve the performance of this function the last thing we want to do is",
    "start": "3252100",
    "end": "3257350"
  },
  {
    "text": "go and add an expensive overhead to it so maybe just counting the cache hits so using counters on your fast paths",
    "start": "3257350",
    "end": "3265480"
  },
  {
    "text": "and using more detailed logging on your slower paths that could be a good rule",
    "start": "3265480",
    "end": "3272290"
  },
  {
    "text": "to follow you could also look at using",
    "start": "3272290",
    "end": "3278200"
  },
  {
    "text": "metrics for exposing small pieces of state so for example it might be useful to track the size of your cache or some",
    "start": "3278200",
    "end": "3286450"
  },
  {
    "text": "in-memory data structure and you could do that in various ways depending on the",
    "start": "3286450",
    "end": "3293020"
  },
  {
    "text": "library you're using or you could maybe monitor some state from your database",
    "start": "3293020",
    "end": "3300520"
  },
  {
    "text": "for particularly useful wine I've experienced in the past is to just simply log which database you're",
    "start": "3300520",
    "end": "3307810"
  },
  {
    "text": "actually using so if you've got a database and it's actually a pool of multiple databases then just simply",
    "start": "3307810",
    "end": "3314050"
  },
  {
    "text": "logging which one your software thinks it's talking to it's surprisingly useful",
    "start": "3314050",
    "end": "3320940"
  },
  {
    "text": "so some ideas for you down so to",
    "start": "3321810",
    "end": "3328690"
  },
  {
    "text": "summarize what should we consider when",
    "start": "3328690",
    "end": "3335230"
  },
  {
    "text": "we're thinking about monitoring well my advice for anything I ever talked about is keep it simple so don't assume you",
    "start": "3335230",
    "end": "3342100"
  },
  {
    "text": "need everything that I discussed here there might also be more I haven't discussed which you need but think about",
    "start": "3342100",
    "end": "3350770"
  },
  {
    "text": "what you're actually trying to achieve what are your goals are you just interested in some basic health checking",
    "start": "3350770",
    "end": "3356020"
  },
  {
    "text": "do you need do you want detailed performance profiling know what do you actually want to achieve what your",
    "start": "3356020",
    "end": "3361570"
  },
  {
    "text": "requirements think of it as you're designing an application or a piece of infrastructure think about what it needs",
    "start": "3361570",
    "end": "3370300"
  },
  {
    "text": "to do start with the fundamentals and by this what I consider the fundamentals to",
    "start": "3370300",
    "end": "3376750"
  },
  {
    "text": "be you probably need some sort of alerting you want to know when things are broken or when things might break",
    "start": "3376750",
    "end": "3384359"
  },
  {
    "text": "aggregating your log files is always useful and collecting system metrics is always useful consider adding some",
    "start": "3385109",
    "end": "3393250"
  },
  {
    "text": "software instrumentation as well I really think the most valuable insights come from",
    "start": "3393250",
    "end": "3400200"
  },
  {
    "text": "instrumentation you've explicitly added you can get a lot of information from your environment but you know you have",
    "start": "3400200",
    "end": "3408310"
  },
  {
    "text": "to put the work in to get better results so you should also think about where",
    "start": "3408310",
    "end": "3414520"
  },
  {
    "text": "your software's going to run is it running internally in which case you probably got a lot of flexibility and",
    "start": "3414520",
    "end": "3419920"
  },
  {
    "text": "how you monitor it and how you debug it if you're running on some cloud provider then you'll find they provide all of",
    "start": "3419920",
    "end": "3426790"
  },
  {
    "text": "these tools that provide endpoints to send logs to and metrics to and tracing",
    "start": "3426790",
    "end": "3431980"
  },
  {
    "text": "data to I mean you'll be paying for it so bear that in mind if you're running",
    "start": "3431980",
    "end": "3440440"
  },
  {
    "text": "on a customer data center then do they have their own monitoring it's very possible you might have to integrate",
    "start": "3440440",
    "end": "3446920"
  },
  {
    "text": "with their monitoring system do they have no monitoring at all well you might have to be prepared to provide some",
    "start": "3446920",
    "end": "3453910"
  },
  {
    "text": "monitoring for them and how can you actually get that data out so that when",
    "start": "3453910",
    "end": "3460359"
  },
  {
    "text": "they phone you up and your software is not working how do you troubleshoot it how do you make sure that it works next",
    "start": "3460359",
    "end": "3468160"
  },
  {
    "text": "time around so that finishes my talk",
    "start": "3468160",
    "end": "3476830"
  },
  {
    "text": "unfortunately I'm on the hour mark I've got two minutes left so if anyone's got",
    "start": "3476830",
    "end": "3484180"
  },
  {
    "text": "any questions it's probably easier if you just come and talk to me afterwards then we don't have to rush so thanks",
    "start": "3484180",
    "end": "3492910"
  },
  {
    "text": "your time [Applause]",
    "start": "3492910",
    "end": "3504449"
  }
]