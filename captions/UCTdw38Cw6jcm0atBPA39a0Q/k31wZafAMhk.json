[
  {
    "text": "so this is my singing welcome to my second talk of the day in the conference",
    "start": "12320",
    "end": "17960"
  },
  {
    "text": "it's a it's a distinct honor to be a sort of a repeated guest of this",
    "start": "17960",
    "end": "24960"
  },
  {
    "text": "conference very much appreciated a few folks of you have seen me in the pre",
    "start": "24960",
    "end": "31020"
  },
  {
    "text": "conference workshops so today I'm going to talk about something that I'm very",
    "start": "31020",
    "end": "37410"
  },
  {
    "text": "distinctly bad at which is a methodology right so you know I want to I'm the kind",
    "start": "37410",
    "end": "46110"
  },
  {
    "text": "of guy who puts code on the whiteboard and kind of discusses code and very concrete things but this is gonna be a",
    "start": "46110",
    "end": "51900"
  },
  {
    "text": "bit more fluffy well it's that kind of thing like we're gonna let me tell you",
    "start": "51900",
    "end": "57900"
  },
  {
    "text": "about like design patterns and policy based design and so you know there's",
    "start": "57900",
    "end": "63540"
  },
  {
    "text": "still a chance you can go to those two other rooms whereby interesting things are happening so you know what's the",
    "start": "63540",
    "end": "71009"
  },
  {
    "text": "deal with the link D language so almost it's kind of funny because in my heart",
    "start": "71009",
    "end": "76890"
  },
  {
    "text": "of interests the B language becomes more of more of a solid substrate like more",
    "start": "76890",
    "end": "85530"
  },
  {
    "text": "like a core for doing interesting things on top on than an interest in itself so it's a primary language that I've been",
    "start": "85530",
    "end": "91590"
  },
  {
    "text": "working on for 10 years since it's a very expressive language to which I've contributed a fair amount and the most",
    "start": "91590",
    "end": "99720"
  },
  {
    "text": "most interested in things that happen is after you kind of have crystallized the finish of the language and it figured it",
    "start": "99720",
    "end": "106860"
  },
  {
    "text": "does things that no other language is doing and that's where you know what does will read the fun begins this kind",
    "start": "106860",
    "end": "114090"
  },
  {
    "text": "of the so what'll you deal with this so that's sort of an initial motivation Walter bright create the crit of the",
    "start": "114090",
    "end": "120840"
  },
  {
    "text": "language I was frustrated with the existing languages because a well systems level programming is always a",
    "start": "120840",
    "end": "127049"
  },
  {
    "text": "good thing to to be into because there are many applications in which there is",
    "start": "127049",
    "end": "132569"
  },
  {
    "text": "really no limit to how much computing power you want there's this uh-oh is it",
    "start": "132569",
    "end": "140220"
  },
  {
    "text": "yeah I didn't write this on the slide because I was ashamed anybody knows about a last",
    "start": "140220",
    "end": "145620"
  },
  {
    "text": "big demand this notion okay I'm very happy nobody knows so now right now I'm",
    "start": "145620",
    "end": "151709"
  },
  {
    "text": "gonna take him elastic demand is a turn from economy economists say that kind of",
    "start": "151709",
    "end": "157830"
  },
  {
    "text": "stuff elastic demand which means the more you have the more you want right is an",
    "start": "157830",
    "end": "163349"
  },
  {
    "text": "elastic demand for our drinking water no",
    "start": "163349",
    "end": "170010"
  },
  {
    "text": "you cannot drink as much no come on right I argue with me on this is there",
    "start": "170010",
    "end": "175980"
  },
  {
    "text": "an elastic demand for yes beer is there an elastic yes",
    "start": "175980",
    "end": "181769"
  },
  {
    "text": "is there an elastic demand for beer yes yes let's go I see me tonight giving an",
    "start": "181769",
    "end": "188640"
  },
  {
    "text": "example of that happening by the way do you know the job with the man who deserves a beer every man is allowed the",
    "start": "188640",
    "end": "196019"
  },
  {
    "text": "beer but then he's a new man is a different man pause all right that kinda",
    "start": "196019",
    "end": "201840"
  },
  {
    "text": "stuff anyhow does not part of the talk by the way should edit that please take",
    "start": "201840",
    "end": "207180"
  },
  {
    "text": "it out so he done a number of application domains in which there is an elastic need for performance such as",
    "start": "207180",
    "end": "214280"
  },
  {
    "text": "yell at me talk to me gaming yes what else",
    "start": "214280",
    "end": "220700"
  },
  {
    "text": "yes hft yes here here's the he's a traitor among among you you know lynch",
    "start": "220700",
    "end": "227730"
  },
  {
    "text": "him high-frequency trading what else statistics AII right so you know if you",
    "start": "227730",
    "end": "236849"
  },
  {
    "text": "know if you're doing your personal website or blog or whatnot proud of the speed with which it loads whether it's",
    "start": "236849",
    "end": "243150"
  },
  {
    "text": "ten percent faster or not it's not it's not instrumental right but if you're",
    "start": "243150",
    "end": "248489"
  },
  {
    "text": "designing a site like Amazon or Facebook you know a few percent are not gonna be",
    "start": "248489",
    "end": "254669"
  },
  {
    "text": "a lot less or more money right consider",
    "start": "254669",
    "end": "259949"
  },
  {
    "text": "this this interesting factoid every one percent performance on the facebook.com",
    "start": "259949",
    "end": "267630"
  },
  {
    "text": "site where I work for six years on variety of teams so every 1% you",
    "start": "267630",
    "end": "273990"
  },
  {
    "text": "accelerate the interpreter of the PHP language which is really it's a lot applause this application so every 1% is",
    "start": "273990",
    "end": "282100"
  },
  {
    "text": "two million dollars a year how we're",
    "start": "282100",
    "end": "287170"
  },
  {
    "text": "from thank you park you know the need",
    "start": "287170",
    "end": "293230"
  },
  {
    "text": "for power so essentially just power in provisioning is going to cost you like two million a year for one each one",
    "start": "293230",
    "end": "299050"
  },
  {
    "text": "percent so you know I was I was working a team at fist guy maybe I improve things by 10 percent while I was there",
    "start": "299050",
    "end": "305440"
  },
  {
    "text": "they owe me big money I should I send me royalties here and the other engineers",
    "start": "305440",
    "end": "310840"
  },
  {
    "text": "who you know did quite a lot more actually great so um there would be such",
    "start": "310840",
    "end": "317080"
  },
  {
    "text": "a need but also like you know for Hyper phones there's always see and there's always plus plus now the distinguishes",
    "start": "317080",
    "end": "324490"
  },
  {
    "text": "itself by saying you know what you do have money for performance but you also have a need for what they call modeling",
    "start": "324490",
    "end": "329710"
  },
  {
    "text": "so the applications become also larger and larger and more difficult to reason about and C++ would not be a prime",
    "start": "329710",
    "end": "337360"
  },
  {
    "text": "candidate for for making things simple",
    "start": "337360",
    "end": "342900"
  },
  {
    "text": "so that's what kind of deep positions itself it's actually a fast development language but it's also generate very",
    "start": "342900",
    "end": "349510"
  },
  {
    "text": "fast code so the design principles so",
    "start": "349510",
    "end": "354520"
  },
  {
    "text": "that was the initial motivation but that kind of became its own thing as it so happens it became its own beast and the",
    "start": "354520",
    "end": "361570"
  },
  {
    "text": "language grew into a multi paradigm imbalance language pretty practical principles and featuring Turtles all the",
    "start": "361570",
    "end": "369460"
  },
  {
    "text": "way down who knows the anecdote with Turtles yes a few of us I gotta tell it for",
    "start": "369460",
    "end": "374620"
  },
  {
    "text": "everybody I'm so sorry this physicist famous tile Academy's in",
    "start": "374620",
    "end": "381040"
  },
  {
    "text": "physics gives a talk at the popular science conference so you know it makes a popular science talk about planets and",
    "start": "381040",
    "end": "388210"
  },
  {
    "text": "universe in a Big Bang Theory and everything so then an old lady comes at him after the talk and says young man",
    "start": "388210",
    "end": "395020"
  },
  {
    "text": "young man you are completely wrong about the universal that stuff the whole universe is resting on the back of a",
    "start": "395020",
    "end": "401200"
  },
  {
    "text": "turtle and the man says ok well how",
    "start": "401200",
    "end": "407770"
  },
  {
    "text": "about that or what does it stand on and already said bits of it's another turtle you know well how",
    "start": "407770",
    "end": "416120"
  },
  {
    "text": "about that adulterer what does it stand on and only say you're not fooling me young man it's Turtles all the way down",
    "start": "416120",
    "end": "422830"
  },
  {
    "text": "perfectly example of you know infinite it's kind of infinite regression so that",
    "start": "422830",
    "end": "430190"
  },
  {
    "text": "all turtles all weight down Minda means in program languages the following thing let me share simple super simple script",
    "start": "430190",
    "end": "437900"
  },
  {
    "text": "which traditionally as always says hello world on the standard output thank you",
    "start": "437900",
    "end": "443780"
  },
  {
    "text": "very much yes I know it's a fantastic accomplishment so first of all like you",
    "start": "443780",
    "end": "449180"
  },
  {
    "text": "can script things like with Python or Ruby so you can script things you just put a sheet bang there it's just type",
    "start": "449180",
    "end": "455390"
  },
  {
    "text": "the thing it just works right so it imports some it imports some library and it says main it says write for me this",
    "start": "455390",
    "end": "462980"
  },
  {
    "text": "text no problem I'm fine but then you know",
    "start": "462980",
    "end": "471620"
  },
  {
    "text": "this twist he can put on this you can move you see the difference I'm gonna kind of switch back and forth a couple",
    "start": "471620",
    "end": "477320"
  },
  {
    "text": "of times so it was a difference right so the second version like does something pretty it distinctly stupid it puts the",
    "start": "477320",
    "end": "485480"
  },
  {
    "text": "import inside the function are you",
    "start": "485480",
    "end": "490490"
  },
  {
    "text": "supposed to do that like in C who's ever",
    "start": "490490",
    "end": "497090"
  },
  {
    "text": "done it in C alright so here's a career destroying self-destroying move here's",
    "start": "497090",
    "end": "504770"
  },
  {
    "text": "the guy who's not gonna get that that bonus right this year so in C it's kind of almost always a bad idea and people",
    "start": "504770",
    "end": "511220"
  },
  {
    "text": "very rarely I'm sure it all extended idiot on a special occasion with with",
    "start": "511220",
    "end": "516710"
  },
  {
    "text": "the in certain circumstances and stuff and sometimes it's it's a it's a thing to do most of the time you don't want to",
    "start": "516710",
    "end": "522349"
  },
  {
    "text": "do that how about Python who's coming for Python do you want to import things in other things yes is it a good thing",
    "start": "522350",
    "end": "529640"
  },
  {
    "text": "right this guy's like all about equal opportunity codebreaker same person",
    "start": "529640",
    "end": "536570"
  },
  {
    "text": "actually there's an open debate so I should ask Robert next room like it's an open debate is my understanding of",
    "start": "536570",
    "end": "541820"
  },
  {
    "text": "whether it's the stupidest thing ever the spawn of all Devo or devil or the awesomest",
    "start": "541820",
    "end": "547019"
  },
  {
    "text": "things thing ever so but let me tell you",
    "start": "547019",
    "end": "553170"
  },
  {
    "text": "what I mean by this with the turtles and everything what I mean by this is the following what you want to do is this",
    "start": "553170",
    "end": "559110"
  },
  {
    "text": "design the language in such a way that whenever it makes you have feature a you have feature B and you want to use them",
    "start": "559110",
    "end": "566250"
  },
  {
    "text": "together they should just work agreed rights like Lego blocks or",
    "start": "566250",
    "end": "571380"
  },
  {
    "text": "whatever all those good things features should be simple and easy to combine and that's a that's kind of a natural thing",
    "start": "571380",
    "end": "578250"
  },
  {
    "text": "to do so you know moving in that direction say well you know I should be able to import the library inside the",
    "start": "578250",
    "end": "584310"
  },
  {
    "text": "function or inside any scope if I so wish right if it's my in my mood I just",
    "start": "584310",
    "end": "590370"
  },
  {
    "text": "want to put things like inside as a post at the top of the file because then you",
    "start": "590370",
    "end": "598079"
  },
  {
    "text": "know there's the properties of scoping you're not coping with the curly braces or in Python with the indentation and",
    "start": "598079",
    "end": "604200"
  },
  {
    "text": "you know depending on so there's a scoping thing which is I'm isolating things and isolation is good right come",
    "start": "604200",
    "end": "611040"
  },
  {
    "text": "on give me nuts give me nuts come on give me nods yes thank you thank you hands - I hope it's",
    "start": "611040",
    "end": "616470"
  },
  {
    "text": "not it's a thumb not a finger right so but okay so we have this nice idea I",
    "start": "616470",
    "end": "623880"
  },
  {
    "text": "want to import libraries but I want to import libraries in a isolated scoped",
    "start": "623880",
    "end": "629690"
  },
  {
    "text": "data hiding nice manner right great so",
    "start": "629690",
    "end": "635149"
  },
  {
    "text": "because I want to do that I want to be able to do all the stuff and the question is can you do it",
    "start": "635149",
    "end": "640410"
  },
  {
    "text": "so actually try this you know that that was of years ago I tried this in the D language I typed the code and it won't",
    "start": "640410",
    "end": "647430"
  },
  {
    "text": "compile because he said you're not supposed to do that so I had a great",
    "start": "647430",
    "end": "652800"
  },
  {
    "text": "tool to solve that which is called a telephone so I picked up the telephone I called Walter bright the inventor of the language and the guy who implements the",
    "start": "652800",
    "end": "659490"
  },
  {
    "text": "compiler for the language the front end so I call Walter I said Walter I tried",
    "start": "659490",
    "end": "664500"
  },
  {
    "text": "this and it doesn't work he said let me look it up and he said well in type",
    "start": "664500",
    "end": "669839"
  },
  {
    "text": "checking the import statement the first line there says if you're in if you're not at the top level",
    "start": "669839",
    "end": "676180"
  },
  {
    "text": "frozen arrow right it kind of stops compilation it says you you're not supposed to do that and I said why don't",
    "start": "676180",
    "end": "682780"
  },
  {
    "text": "you come on that line out see what happens so he okay so that you know the",
    "start": "682780",
    "end": "690460"
  },
  {
    "text": "rest is history so what happened then was actually it worked beautifully and it became a very interesting feature of",
    "start": "690460",
    "end": "696850"
  },
  {
    "text": "the D language you can actually import things now this is not this is just the",
    "start": "696850",
    "end": "702820"
  },
  {
    "text": "beginning I want to tell you how something that is you know it's what like in those stories of virtue and",
    "start": "702820",
    "end": "708880"
  },
  {
    "text": "stuff so if you do things the right way a lot of good is gonna come your way you know it's kind of that you know the gift",
    "start": "708880",
    "end": "714820"
  },
  {
    "text": "that keeps on giving the Karma you know and all that all that Zen stuff right so the zest of that happened afterwards was",
    "start": "714820",
    "end": "721840"
  },
  {
    "text": "the following well so first of all let me tell you this it does have to be mainly any",
    "start": "721840",
    "end": "727780"
  },
  {
    "text": "function any import whatever so then you know people do very often this refactoring they move functions from one",
    "start": "727780",
    "end": "733720"
  },
  {
    "text": "place to another in a large application right well if you have the imports at",
    "start": "733720",
    "end": "739450"
  },
  {
    "text": "the top then you move the function and you gotta kind of copy the imports to the top of the new file right whereas",
    "start": "739450",
    "end": "746950"
  },
  {
    "text": "like this the function carries its own dependencies sort of a sudden you switch",
    "start": "746950",
    "end": "755050"
  },
  {
    "text": "from the model in which we have files that depend on files ladies and gentleman right it's not like",
    "start": "755050",
    "end": "760090"
  },
  {
    "text": "that anymore it's functions depend on modules right so it's a complete different a much more granular",
    "start": "760090",
    "end": "765760"
  },
  {
    "text": "fine-grained approach whereby you have dependencies that are the minimum",
    "start": "765760",
    "end": "771220"
  },
  {
    "text": "possible you know whatever that you know you don't open that file unless you actually need a function so the",
    "start": "771220",
    "end": "777010"
  },
  {
    "text": "functions become nimble and easy to transport around and they're on their own right they carried their own stuff",
    "start": "777010",
    "end": "782530"
  },
  {
    "text": "with them so that was interesting and let me take it just one step further",
    "start": "782530",
    "end": "787710"
  },
  {
    "text": "because it keeps all things kept on character going down the rabbit hole so",
    "start": "787710",
    "end": "793240"
  },
  {
    "text": "this would be a generic function because it has two sets of practice that's how D does general functions you say log that",
    "start": "793240",
    "end": "801010"
  },
  {
    "text": "will name the function and it takes any type T and it takes any one parameter of",
    "start": "801010",
    "end": "806890"
  },
  {
    "text": "type T right so you can lock anything you want a string number whatever anything else writable",
    "start": "806890",
    "end": "812859"
  },
  {
    "text": "so inside the log we want to write the current time so we're gonna import the module date time and you're gonna import",
    "start": "812859",
    "end": "818799"
  },
  {
    "text": "a module standard output so we can write it to the standard so I'm gonna write the current time scuse me and a space",
    "start": "818799",
    "end": "826059"
  },
  {
    "text": "and whatever we we wanted to write and then main would be driving this the",
    "start": "826059",
    "end": "831489"
  },
  {
    "text": "simple function now here's the interesting part",
    "start": "831489",
    "end": "837119"
  },
  {
    "text": "what if I actually never used this function and the phenomenal question is",
    "start": "837119",
    "end": "846220"
  },
  {
    "text": "do I ever look at this these two files I open this is the file system going to be",
    "start": "846220",
    "end": "852669"
  },
  {
    "text": "read for these two particular files date time and stdio what do you think should",
    "start": "852669",
    "end": "859569"
  },
  {
    "text": "happen yes sorry",
    "start": "859569",
    "end": "865109"
  },
  {
    "text": "it's very leading and manipulating the situation indeed so actually shouldn't",
    "start": "865109",
    "end": "870189"
  },
  {
    "text": "it's like the tree in the forest right if I'm not if I comment this line out",
    "start": "870189",
    "end": "875489"
  },
  {
    "text": "the compiler has no business kind of eagerly compiling the log function and",
    "start": "875489",
    "end": "881410"
  },
  {
    "text": "all that stuff it should say you know what good I'm gonna just pause the function which is",
    "start": "881410",
    "end": "887019"
  },
  {
    "text": "like zero cost really and then I'm going to not do anything because I don't need",
    "start": "887019",
    "end": "892540"
  },
  {
    "text": "to resolve dependencies for something that nob nobody depends upon right now",
    "start": "892540",
    "end": "900249"
  },
  {
    "text": "who's using C++ alright what is the largest applause was library using",
    "start": "900249",
    "end": "906839"
  },
  {
    "text": "probably boost is boost I know the standard library like him he include one",
    "start": "906839",
    "end": "913149"
  },
  {
    "text": "thing in a standard library and you looking at 20 megabytes of text right like hello world uns you know standard",
    "start": "913149",
    "end": "920410"
  },
  {
    "text": "output C out whatever boom it explodes into like thousands and thousands tens",
    "start": "920410",
    "end": "926169"
  },
  {
    "text": "of thousands really of lines of code we can megabytes of text I really the sheer fact that say our fellow world you the",
    "start": "926169",
    "end": "935109"
  },
  {
    "text": "preprocessor takes hello world like into Brussels right it pre processes into",
    "start": "935109",
    "end": "940209"
  },
  {
    "text": "like 20 megabytes of code and that's what the compiler see the compare doesn't know that you wrote five lines the compiler knows that",
    "start": "940209",
    "end": "947980"
  },
  {
    "text": "you've read 65,000 lines right now guys our case I'm gonna look through this",
    "start": "947980",
    "end": "954130"
  },
  {
    "text": "stuff to see what's going on so it's Kumar's gonna just rummage through all that stuff is going to",
    "start": "954130",
    "end": "959860"
  },
  {
    "text": "finally get like main and see how this is the code and then it's going to produce an object file which object file",
    "start": "959860",
    "end": "967180"
  },
  {
    "text": "is going to have a dependency on like see out and stuff and standard library is going to link and the linker is",
    "start": "967180",
    "end": "972640"
  },
  {
    "text": "another piece of amazing technology and it's going to like link that thing and",
    "start": "972640",
    "end": "977950"
  },
  {
    "text": "then the linker is going to produce an executor or binary which when run runs",
    "start": "977950",
    "end": "983650"
  },
  {
    "text": "like it's gonna print hello world to the standard output the sheer fact that this",
    "start": "983650",
    "end": "989140"
  },
  {
    "text": "whole thing works is the most amazing",
    "start": "989140",
    "end": "995040"
  },
  {
    "text": "accomplishment of humankind like in it no it doesn't work once it was every",
    "start": "995040",
    "end": "1001080"
  },
  {
    "text": "time in under two seconds now I guess we should all wake up every morning say wow",
    "start": "1001080",
    "end": "1006840"
  },
  {
    "text": "that was awesome Wow hello let me check that he still work like this morning yes it's still",
    "start": "1006840",
    "end": "1012750"
  },
  {
    "text": "working it's amazing and you know people say the tsipras compiler is slow no the",
    "start": "1012750",
    "end": "1017880"
  },
  {
    "text": "c-plus was comprised the fastest compiled in the world it just has a lot to compile that's the problem right so",
    "start": "1017880",
    "end": "1024319"
  },
  {
    "text": "arguing second so now you multiply this by like a million you take this stuff",
    "start": "1024319",
    "end": "1031620"
  },
  {
    "text": "does you think this little reality that well if not used it's not gonna be looked at so you multiply this by a",
    "start": "1031620",
    "end": "1038220"
  },
  {
    "text": "million which would be a large library and that means you all of a sudden have",
    "start": "1038220",
    "end": "1043829"
  },
  {
    "text": "a means to distribute a library that is not going to inflict pain on the compiler because parsing is cheap type",
    "start": "1043829",
    "end": "1051690"
  },
  {
    "text": "checking is expensive that's the problem so you parse this but you don't open any dependent files so you have a mechanism",
    "start": "1051690",
    "end": "1057390"
  },
  {
    "text": "for distributing libraries even better yes",
    "start": "1057390",
    "end": "1061910"
  },
  {
    "text": "pre-processed link model so it's disingenuous to say",
    "start": "1069340",
    "end": "1076370"
  },
  {
    "text": "this problem the problem oh yeah this AC",
    "start": "1076370",
    "end": "1082040"
  },
  {
    "text": "processor has a problem so the comment",
    "start": "1082040",
    "end": "1087770"
  },
  {
    "text": "was Justin just for the record you know I can use it in the lawsuit that's gonna follow that's a joke right so the",
    "start": "1087770",
    "end": "1096950"
  },
  {
    "text": "comment was well it's not a problem property c++ leads from its pre processing model which is inherited from",
    "start": "1096950",
    "end": "1102290"
  },
  {
    "text": "CN but I totally agree I mean you know there's no disagreement there so anyhow",
    "start": "1102290",
    "end": "1107600"
  },
  {
    "text": "so we get to this point where instead of distributing library says you gotta kind of shoot first ask later like include",
    "start": "1107600",
    "end": "1114350"
  },
  {
    "text": "all the texts and then look later you have this model whereby you know you kind of include the minimum and then the",
    "start": "1114350",
    "end": "1119870"
  },
  {
    "text": "dependencies are going to be loaded or not right look at ona so I have a better scalable model for deceiving libraries",
    "start": "1119870",
    "end": "1126770"
  },
  {
    "text": "and indeed I've run a bunch of measurements and the D standard library",
    "start": "1126770",
    "end": "1132020"
  },
  {
    "text": "so by the way this was like walled fair it was like once the feature was in everybody wanted to use it so they",
    "start": "1132020",
    "end": "1138080"
  },
  {
    "text": "people rebuilt the standard D library which is like a large like I forgot the the size broke two hundred thousand",
    "start": "1138080",
    "end": "1144620"
  },
  {
    "text": "lines of code so they took the large D standard library and they put all the imports inside right so they kind of did",
    "start": "1144620",
    "end": "1152090"
  },
  {
    "text": "did this work and it turns out that improved the build time by an order of magnitude of the library itself right so",
    "start": "1152090",
    "end": "1159470"
  },
  {
    "text": "that would be a good proof of concept but wait there's more who knows how",
    "start": "1159470",
    "end": "1165560"
  },
  {
    "text": "linker works who knows how a linker works we're like",
    "start": "1165560",
    "end": "1172100"
  },
  {
    "text": "five lights in this room right now because nobody knows our linker works right and nobody nobody should claim",
    "start": "1172100",
    "end": "1178300"
  },
  {
    "text": "they know even people who wrote the linkers yeah magic yes that's about",
    "start": "1178300",
    "end": "1184460"
  },
  {
    "text": "right so you know I can kind of speculate a bit on things so in essence",
    "start": "1184460",
    "end": "1190850"
  },
  {
    "text": "the linker loads you know give it object files and it's going to rummage through the object files resolving those",
    "start": "1190850",
    "end": "1197210"
  },
  {
    "text": "dependencies but at the end of this this step in the linking process there's going to be at",
    "start": "1197210",
    "end": "1203690"
  },
  {
    "text": "the end of it there's gonna be a few symbols that are not resolved they say right those are referring to things in the",
    "start": "1203690",
    "end": "1210110"
  },
  {
    "text": "library that you link with libraries that you link with and outcomes again",
    "start": "1210110",
    "end": "1215450"
  },
  {
    "text": "the linker brings a big hammer which is I'm going to go to LD library path yes",
    "start": "1215450",
    "end": "1221650"
  },
  {
    "text": "open those fine libraries that I have pretty fine and specifying the command line what not all that it's amazing how",
    "start": "1221650",
    "end": "1227960"
  },
  {
    "text": "much stuff is going on right so opens the libraries does linear search in libraries looking for symbols and then",
    "start": "1227960",
    "end": "1234230"
  },
  {
    "text": "it finds the symbols and it's done which means that actually it's kind of bizarre if we have more code in libraries it's",
    "start": "1234230",
    "end": "1241490"
  },
  {
    "text": "gonna link slower and I'm sure some of you I'm seeing kind of I'm seeing a few",
    "start": "1241490",
    "end": "1246710"
  },
  {
    "text": "kind of eyebrows you can yeah that's I remember that so what is the longest",
    "start": "1246710",
    "end": "1252530"
  },
  {
    "text": "link linking time I've ever witnessed like did you see like things like minutes take the linking only right all",
    "start": "1252530",
    "end": "1260870"
  },
  {
    "text": "right so I've been doing consulting companies the type make and you compile in half an eye links in two more hours",
    "start": "1260870",
    "end": "1266900"
  },
  {
    "text": "and that kind of stuff right so it's amazing how much how long linker can linking can take so then when we have",
    "start": "1266900",
    "end": "1273740"
  },
  {
    "text": "this it's actually less pressure on the linker because you resolve more symbols in that early stage of linking which is",
    "start": "1273740",
    "end": "1279860"
  },
  {
    "text": "cheaper right you don't go to the libraries you can have have the code immediately available you pay more in",
    "start": "1279860",
    "end": "1286880"
  },
  {
    "text": "compilation but you pay less in linking it turns out it's a great trade-off because you have a control over a compiler you can't nobody can control",
    "start": "1286880",
    "end": "1293809"
  },
  {
    "text": "the linker nobody ladies and gentlemen so you know following this this is",
    "start": "1293809",
    "end": "1302210"
  },
  {
    "text": "notion emerging of well make a language features simple and easy to combine",
    "start": "1302210",
    "end": "1308350"
  },
  {
    "text": "right so that'll be a nice thing to live by and of course all languages would",
    "start": "1308350",
    "end": "1313520"
  },
  {
    "text": "wish to like every language designer would wish to do so it's not that easier obviously but I'm going to give you a",
    "start": "1313520",
    "end": "1319850"
  },
  {
    "text": "few illustrations of this for example consider the study keep statement in the",
    "start": "1319850",
    "end": "1326120"
  },
  {
    "text": "D language which if you're familiar with the C preprocessor is pretty much like Pontiff right",
    "start": "1326120",
    "end": "1332419"
  },
  {
    "text": "they pound if whatever put this code in otherwise don't put that what they'll do something else what not so what you know",
    "start": "1332419",
    "end": "1340429"
  },
  {
    "text": "what do you think would be the major liability with the pound if pseudo whatever statement in C and C++ what",
    "start": "1340429",
    "end": "1348679"
  },
  {
    "text": "would be a yes sorry no another problem",
    "start": "1348679",
    "end": "1355700"
  },
  {
    "text": "with using it the problem with its power of expression if you are if you wish it",
    "start": "1355700",
    "end": "1362269"
  },
  {
    "text": "knows nothing about the language so if you try to if some expression that includes like a double precision number",
    "start": "1362269",
    "end": "1367789"
  },
  {
    "text": "or it's some string or whatever is just gonna work out it's a very limited sub",
    "start": "1367789",
    "end": "1373369"
  },
  {
    "text": "language that you can use in the expressions so that comes okay so if you",
    "start": "1373369",
    "end": "1379429"
  },
  {
    "text": "have a static if statement straight in the language no preprocessor then you",
    "start": "1379429",
    "end": "1385279"
  },
  {
    "text": "know it's not having things like like this so people started to do stuff like",
    "start": "1385279",
    "end": "1390590"
  },
  {
    "text": "that stroke rubbing hash table this is actually production called from a company in Tel Aviv called wei-cation",
    "start": "1390590",
    "end": "1397190"
  },
  {
    "text": "and it's it's probably the most the most interesting and large application",
    "start": "1397190",
    "end": "1404779"
  },
  {
    "text": "written in the D language it's a startup that does data storage and they're actually the fastest in the world so",
    "start": "1404779",
    "end": "1411580"
  },
  {
    "text": "Robbie hash table key value and it takes a maximum length of the of the array in the hash table and yes like the static",
    "start": "1411580",
    "end": "1418850"
  },
  {
    "text": "if you know max length less than usual dot max which would be something linked to the type system it's not something in",
    "start": "1418850",
    "end": "1424970"
  },
  {
    "text": "the pre-processing stage it's something that is proper to the type system is like give me the maximum value of an",
    "start": "1424970",
    "end": "1430820"
  },
  {
    "text": "unsigned short and it does a little calculation or it takes the size of here",
    "start": "1430820",
    "end": "1436070"
  },
  {
    "text": "and divides by it and whatever say does some simple arithmetic and now it's interesting because this particular hash",
    "start": "1436070",
    "end": "1443629"
  },
  {
    "text": "table here and that's more there's more kind of on the other case whatever so what's interesting here is that you have",
    "start": "1443629",
    "end": "1451100"
  },
  {
    "text": "this highly integrated Pontiff whereby you kind of look at things that actually",
    "start": "1451100",
    "end": "1456379"
  },
  {
    "text": "received as template parameters and depending on the qualities the features",
    "start": "1456379",
    "end": "1461389"
  },
  {
    "text": "of these key and value types that you receive you lay out your lay things out different in",
    "start": "1461389",
    "end": "1467900"
  },
  {
    "text": "memory in the hash table in this case they pack more I think they pack more the stuff they pack one neck stop by",
    "start": "1467900",
    "end": "1474110"
  },
  {
    "text": "because they have they have room for it so okay that's interesting and can do",
    "start": "1474110",
    "end": "1480920"
  },
  {
    "text": "this in see who's who's with yes yeah",
    "start": "1480920",
    "end": "1490520"
  },
  {
    "text": "that doesn't matter yes so okay you know there's no size of",
    "start": "1490520",
    "end": "1495950"
  },
  {
    "text": "in the pre-processing that kind of stuff say you gotta read research like really complicated templates and stuff so you",
    "start": "1495950",
    "end": "1501500"
  },
  {
    "text": "can there are ways to do this by the way how many possible layouts do I have",
    "start": "1501500",
    "end": "1507080"
  },
  {
    "text": "there's two static if statement each has its own else how many possible layouts do I have depending on the key and the",
    "start": "1507080",
    "end": "1513680"
  },
  {
    "text": "value - ^ - right because there's four",
    "start": "1513680",
    "end": "1520250"
  },
  {
    "text": "combinations of layers that can be right it's to ^ - you can have if one else on",
    "start": "1520250",
    "end": "1526280"
  },
  {
    "text": "each branch right so all of a sudden we have four layouts in very few lines of",
    "start": "1526280",
    "end": "1531470"
  },
  {
    "text": "code so this was all fine and dandy but then it gets you - it gets you to want",
    "start": "1531470",
    "end": "1537740"
  },
  {
    "text": "more because you know I want to do with static if what I do with if right I mean",
    "start": "1537740",
    "end": "1543920"
  },
  {
    "text": "I want to study gif and I wanna call a function right I'm just static if and I want to kind of",
    "start": "1543920",
    "end": "1550820"
  },
  {
    "text": "create objects and do loops I want to do loop I want to call a function that in turn is gonna do a loop in a static if",
    "start": "1550820",
    "end": "1557540"
  },
  {
    "text": "so that puts pressure on the combined ability actually check this is in a dictionary",
    "start": "1557540",
    "end": "1563710"
  },
  {
    "text": "that was a supposed to be funny it is in the dictionary so it puts pressure on",
    "start": "1563710",
    "end": "1570110"
  },
  {
    "text": "your ability to combine features in the language because once you have static if is like you've had a beer you have the",
    "start": "1570110",
    "end": "1575930"
  },
  {
    "text": "right to another beer right so you have the right to ask more for what expressions you can test within that",
    "start": "1575930",
    "end": "1581000"
  },
  {
    "text": "static if so that takes you to well what if expressions can eval a statically and initially could the very things like",
    "start": "1581000",
    "end": "1587270"
  },
  {
    "text": "size of and +1 and - whatever they could simple arithmetic but this so the the",
    "start": "1587270",
    "end": "1595070"
  },
  {
    "text": "pressure of doing things in you know you know turell's manner you know easy to combine",
    "start": "1595070",
    "end": "1600880"
  },
  {
    "text": "manner got to the point where you know what let's allow an interpreter running",
    "start": "1600880",
    "end": "1608020"
  },
  {
    "text": "during the decomp compilation stage what language should the interpreter take yes",
    "start": "1608020",
    "end": "1617460"
  },
  {
    "text": "d thank you yeah that's the right answer one hundred dollars for the gentleman",
    "start": "1617460",
    "end": "1624149"
  },
  {
    "text": "why not have static well the have static affirmative it's a good question question notice the following",
    "start": "1625260",
    "end": "1634270"
  },
  {
    "text": "interesting part you see there's a brace here and there's a brace here right so let's say this is true and you have an",
    "start": "1634270",
    "end": "1640630"
  },
  {
    "text": "alias which is really like a type def right okay using if you wish I'm going to alias you short your essential to",
    "start": "1640630",
    "end": "1647110"
  },
  {
    "text": "this this name here but you know notice that once I'm here door can I see cell",
    "start": "1647110",
    "end": "1652660"
  },
  {
    "text": "ID X it will pretty brain-dead if I",
    "start": "1652660",
    "end": "1657669"
  },
  {
    "text": "didn't see it right I mean it would be purposeless so once you do a static if",
    "start": "1657669",
    "end": "1662919"
  },
  {
    "text": "you don't want that brace to count as a new scope you want that brace to count as the current scope and that does",
    "start": "1662919",
    "end": "1669610"
  },
  {
    "text": "happen in if right so with it feels like I'm gonna open a new scope if that is",
    "start": "1669610",
    "end": "1674980"
  },
  {
    "text": "true and it's all dynamic and runtime but we static if I want to stare the scope and by the way what do if I do",
    "start": "1674980",
    "end": "1680799"
  },
  {
    "text": "want a new scope we static if what do I do I put two braces and this is an idiom",
    "start": "1680799",
    "end": "1687850"
  },
  {
    "text": "like you put you double the brace here if you double the price their brace there and it looks pretty awesome so it",
    "start": "1687850",
    "end": "1694929"
  },
  {
    "text": "looks like was I have this double mustache right now right so actually you",
    "start": "1694929",
    "end": "1700510"
  },
  {
    "text": "do want you distinctly want static if to evaluate things and then put in your scope because that's what you want to be",
    "start": "1700510",
    "end": "1707110"
  },
  {
    "text": "you want teaching inject definitions and code and things in your in your current",
    "start": "1707110",
    "end": "1712750"
  },
  {
    "text": "scope by the way that it is my opinion that that was a fellow mistake that the",
    "start": "1712750",
    "end": "1719080"
  },
  {
    "text": "c-plus standard made with with their incarnation of this feature which is called if Const exper it does introduce",
    "start": "1719080",
    "end": "1726160"
  },
  {
    "text": "a new scope which makes a nine percent useless so so the",
    "start": "1726160",
    "end": "1733149"
  },
  {
    "text": "got so high that actually we went to the following thing notion we said you know what here's the thing if you have access",
    "start": "1733149",
    "end": "1741489"
  },
  {
    "text": "to the source code of a function in D you can evaluate it in compilation",
    "start": "1741489",
    "end": "1747389"
  },
  {
    "text": "period but not if like open files and stuff right so there's gotta be some limitations to",
    "start": "1747389",
    "end": "1753669"
  },
  {
    "text": "the power because you don't to a friend to give you a file and say oh why don't you compile this for me right sure and",
    "start": "1753669",
    "end": "1759429"
  },
  {
    "text": "it destroys your hard drive right you don't want that to happen so you want to",
    "start": "1759429",
    "end": "1764529"
  },
  {
    "text": "allow things during compilation you want to allow an interpreter for a subset of the language right not the whole",
    "start": "1764529",
    "end": "1772149"
  },
  {
    "text": "language we can't call like primitives in the operating system to RM - or - that kind of stuff right so that was",
    "start": "1772149",
    "end": "1780549"
  },
  {
    "text": "very interesting so if you introduced this whole notion of compile time evaluation and that was like a huge a",
    "start": "1780549",
    "end": "1786369"
  },
  {
    "text": "huge thing for the D languages like oh my god so now I can write everything that I wrote already I can also evaluate",
    "start": "1786369",
    "end": "1792669"
  },
  {
    "text": "during compilation those of us who who've been like with C process for a while you know that does this for this",
    "start": "1792669",
    "end": "1799960"
  },
  {
    "text": "classic example of for example factorial function or singly linked list or you know these are this example of",
    "start": "1799960",
    "end": "1806349"
  },
  {
    "text": "computations and here's how you do it for a runtime thing in his idea for compilation thing it's complete",
    "start": "1806349",
    "end": "1812529"
  },
  {
    "text": "different languages right the template language versus the runtime language very different right",
    "start": "1812529",
    "end": "1818080"
  },
  {
    "text": "so it the key is to make it simple and allow the same exact language to be to be evaluated during compilation or",
    "start": "1818080",
    "end": "1824559"
  },
  {
    "text": "runtime and more importantly this is the focus of the rest of our conversation is",
    "start": "1824559",
    "end": "1830080"
  },
  {
    "text": "what can I look at in the program because I don't recall yet sighs often",
    "start": "1830080",
    "end": "1837609"
  },
  {
    "text": "this Lance is here I don't to look at the simple things I want to look at like",
    "start": "1837609",
    "end": "1842679"
  },
  {
    "text": "you give me a type and can you call the function it can't does you'd implement a",
    "start": "1842679",
    "end": "1850719"
  },
  {
    "text": "method called it right and if so I'm going to use that part of the interface",
    "start": "1850719",
    "end": "1856869"
  },
  {
    "text": "and if not I'm going to make an alternative decision so this takes us to the more interesting part which is well",
    "start": "1856869",
    "end": "1864159"
  },
  {
    "text": "how about introspection but first let me take a real short detour into design patterns and friends so um there's this thing policy",
    "start": "1864159",
    "end": "1872080"
  },
  {
    "text": "based design which was very surprised so you know I didn't invent the thing but I did invent the term so I gave it a name",
    "start": "1872080",
    "end": "1878230"
  },
  {
    "text": "if you wish it existed and the funny thing is I I looked at it a couple of",
    "start": "1878230",
    "end": "1883240"
  },
  {
    "text": "months ago and I figured that it's actually made it in on Wikipedia so it's",
    "start": "1883240",
    "end": "1888370"
  },
  {
    "text": "a thing if we say in Wikipedia there's like 7076 programming paradigms in the world and one of them is called policy",
    "start": "1888370",
    "end": "1895810"
  },
  {
    "text": "based design it was like introduced with my book - applause design and that made me dubious dubiously happy right it's",
    "start": "1895810",
    "end": "1903970"
  },
  {
    "text": "kind of an odd honor to have so anyhow so the whole idea of of policy based",
    "start": "1903970",
    "end": "1911500"
  },
  {
    "text": "design is that well you have design patterns and these ways of doing software and with policy based design",
    "start": "1911500",
    "end": "1917230"
  },
  {
    "text": "you use the template ability of the compiler to generate code for you to wit",
    "start": "1917230",
    "end": "1923370"
  },
  {
    "text": "this prominent member of the of the program community made this comment",
    "start": "1923370",
    "end": "1928630"
  },
  {
    "text": "which I found very interesting and telling the design pattern solution is to turn the program into a fancy macro",
    "start": "1928630",
    "end": "1935430"
  },
  {
    "text": "processor the moment you tell me these three working together I'm gonna be all",
    "start": "1935430",
    "end": "1941920"
  },
  {
    "text": "over it like white alright it's I'm like you know what I want to be there fancy and macro and processor this is",
    "start": "1941920",
    "end": "1948490"
  },
  {
    "text": "everything I trained for ok this is amazing do I get the same level",
    "start": "1948490",
    "end": "1955210"
  },
  {
    "text": "of enthusiasm from this ok so essentially it's kind of interesting",
    "start": "1955210",
    "end": "1960820"
  },
  {
    "text": "because you are doing something that by the very very adduced can be automated",
    "start": "1960820",
    "end": "1967410"
  },
  {
    "text": "so that was the premise of Polish business yeah I don't want to be the Mac I want to be the guy who writes and",
    "start": "1967410",
    "end": "1974890"
  },
  {
    "text": "controls the fancy microprocessor aforementioned right so that's where I",
    "start": "1974890",
    "end": "1980650"
  },
  {
    "text": "want to be so ok this brings us to on",
    "start": "1980650",
    "end": "1986140"
  },
  {
    "text": "other interesting quote by firemen feel great physicist physicist so fireman was",
    "start": "1986140",
    "end": "1993270"
  },
  {
    "text": "was wrote a paper in which there is this code what would happen if we could",
    "start": "1993270",
    "end": "1998680"
  },
  {
    "text": "arrange the atoms one by the way we want them and then title of the paper is plenty of room at the",
    "start": "1998680",
    "end": "2004820"
  },
  {
    "text": "bottom and the field started by the",
    "start": "2004820",
    "end": "2010070"
  },
  {
    "text": "paper was yes sorry",
    "start": "2010070",
    "end": "2015520"
  },
  {
    "text": "no quantum physics predated Richard Feynman yes",
    "start": "2015520",
    "end": "2021730"
  },
  {
    "text": "nanotechnology thank you so he made the paper in which he argued actually you're",
    "start": "2021730",
    "end": "2026780"
  },
  {
    "text": "not breaking in laws of physics if you could arrange atoms by hand you know as",
    "start": "2026780",
    "end": "2032930"
  },
  {
    "text": "opposed to what we do right now chemical reactions and stuff and catalysts and all that stuff that I have no idea but",
    "start": "2032930",
    "end": "2038690"
  },
  {
    "text": "I'm making up things as I go right so the problem with putting happens together is our hands are too big right",
    "start": "2038690",
    "end": "2045500"
  },
  {
    "text": "we have two big hands well except tromp tromp has more hands but that's an aside",
    "start": "2045500",
    "end": "2050950"
  },
  {
    "text": "and you know the only challenge then therefore remaining is to build devices",
    "start": "2050950",
    "end": "2058220"
  },
  {
    "text": "that are small enough to be able to arrange these atoms you know manually if you wish so that",
    "start": "2058220",
    "end": "2064510"
  },
  {
    "text": "translated to the whole design and design patterns thing takes us to the the following core idea well how about",
    "start": "2064510",
    "end": "2071270"
  },
  {
    "text": "I'll look at the program elements that I have at my disposal and I assembled them by hand by you know introspecting them",
    "start": "2071270",
    "end": "2078710"
  },
  {
    "text": "and that's the whole notion of design my introspection so in design patters the programmer expands their own mental max",
    "start": "2078710",
    "end": "2085850"
  },
  {
    "text": "I have a factor here visitor here know what to do observe whatever fine and in",
    "start": "2085850",
    "end": "2092148"
  },
  {
    "text": "the police policy design I go the I'm the programmer I have a library of patterns I have a library of my own",
    "start": "2092149",
    "end": "2098240"
  },
  {
    "text": "stuff and I combine them by means of template metaprogramming well we thought",
    "start": "2098240",
    "end": "2103910"
  },
  {
    "text": "these are my two species it's actually much simpler because what you do is you look can you do this can you do that and",
    "start": "2103910",
    "end": "2109250"
  },
  {
    "text": "let's put them together let me show you how to be able to do that kind of stuff",
    "start": "2109250",
    "end": "2115070"
  },
  {
    "text": "you need an input which would be introspection do you support this method",
    "start": "2115070",
    "end": "2122350"
  },
  {
    "text": "what are they Tomas right list me all of",
    "start": "2122350",
    "end": "2128360"
  },
  {
    "text": "the methods you have tell me all the signatures of the functions in that kind of stuff right so that would be the input to such",
    "start": "2128360",
    "end": "2136150"
  },
  {
    "text": "a design then we have processing which is like I need to be able to do things",
    "start": "2136150",
    "end": "2141160"
  },
  {
    "text": "with these and you gotta have compile time evaluation that's a given I mean see how it's this is not smart",
    "start": "2141160",
    "end": "2148360"
  },
  {
    "text": "this is consequence you want to do something and therefore you need this right so it's not it's not invention as",
    "start": "2148360",
    "end": "2155260"
  },
  {
    "text": "much as following the thread you know path of last last release returns and",
    "start": "2155260",
    "end": "2160450"
  },
  {
    "text": "output you gotta have a means to generate the code and it turns out you have means in in d quite easily to",
    "start": "2160450",
    "end": "2167890"
  },
  {
    "text": "generate code by means not only of template expansion but you can expand cause for Strings that you compute during compilation",
    "start": "2167890",
    "end": "2173760"
  },
  {
    "text": "turns out a very popular thing indeed to do is you take a regex regular",
    "start": "2173760",
    "end": "2179560"
  },
  {
    "text": "expression you look at it during compilation you generate on automaton for that regular expression and that's",
    "start": "2179560",
    "end": "2187780"
  },
  {
    "text": "your regular expression engine it's not an engine that works with any you know",
    "start": "2187780",
    "end": "2192880"
  },
  {
    "text": "any string any regular it's a regular expression engine that works with that particular one the advantage being it's",
    "start": "2192880",
    "end": "2202540"
  },
  {
    "text": "gonna be much faster because it has a loop that does like you know it's a very specific and very fast engine sorry it's",
    "start": "2202540",
    "end": "2214930"
  },
  {
    "text": "not for partial programs no it's not but I'm gonna save that for later so anyhow",
    "start": "2214930",
    "end": "2221010"
  },
  {
    "text": "we want to be able to do these three things in order to have the prerequisites of design by introspection",
    "start": "2221010",
    "end": "2227710"
  },
  {
    "text": "so you know in the de language there will be like this in the language you can always inspect his right tip Olaf is",
    "start": "2227710",
    "end": "2232900"
  },
  {
    "text": "going to give you everything there is data in o-type all the data members names types everything things like",
    "start": "2232900",
    "end": "2239650"
  },
  {
    "text": "traits give me our methods give me this give me that you know that there's even like the the sledgehammer of",
    "start": "2239650",
    "end": "2246970"
  },
  {
    "text": "introspection is the following would this code compile I'm not kidding",
    "start": "2246970",
    "end": "2253980"
  },
  {
    "text": "and the funny thing is it appears in C++ as a semi proposal every couple of years",
    "start": "2253980",
    "end": "2259450"
  },
  {
    "text": "or so people say I wish I had that it's a bit of a brutal thing but it has its use and people read the",
    "start": "2259450",
    "end": "2266890"
  },
  {
    "text": "the following way what if I tried this will you compile but he came back off from that decision it's not a compile",
    "start": "2266890",
    "end": "2272380"
  },
  {
    "text": "time error it's a boolean which you do study keep on and guess what if static if you dot-com pulse I'm gonna do that",
    "start": "2272380",
    "end": "2278920"
  },
  {
    "text": "very thing right I'm gonna try that you know if I can I do but otherwise I'm",
    "start": "2278920",
    "end": "2283990"
  },
  {
    "text": "gonna you know wait a second so you can do this kind of stuff which is extremely powerful then you have prop processing",
    "start": "2283990",
    "end": "2292269"
  },
  {
    "text": "with compile time function evaluation staticky phone whatnot and you have output you have template expansion you",
    "start": "2292269",
    "end": "2297609"
  },
  {
    "text": "can mix in mixing would be you pass it a string it just oh you give me a string I'm gonna take the string compile it as",
    "start": "2297609",
    "end": "2304450"
  },
  {
    "text": "code right so that would be the regex thing so with regex you parse the string",
    "start": "2304450",
    "end": "2309609"
  },
  {
    "text": "the regex you generate code as a string and then you mix it in great so let me talk we're",
    "start": "2309609",
    "end": "2317289"
  },
  {
    "text": "not gonna kind of realize this real real in detail but let me tell you about something that I like a lot which is",
    "start": "2317289",
    "end": "2324579"
  },
  {
    "text": "optional interfaces who here has used Java right or C++ with like in",
    "start": "2324579",
    "end": "2332470"
  },
  {
    "text": "interfaces like the way conventional the people the interface in C++ a lot of us tell me one thing is it better to have",
    "start": "2332470",
    "end": "2341910"
  },
  {
    "text": "large few large interfaces or more",
    "start": "2341910",
    "end": "2347529"
  },
  {
    "text": "smaller interfaces what is the the best way to go about it who is with a big fat",
    "start": "2347529",
    "end": "2354130"
  },
  {
    "text": "interface right you vote for everything like I'm gonna say yes to everything is",
    "start": "2354130",
    "end": "2360220"
  },
  {
    "text": "like in that movie right who's with like several smaller interfaces you should",
    "start": "2360220",
    "end": "2366970"
  },
  {
    "text": "issue raise your hand - actually turns out that commonly given advice in design with interfaces to keep your interface",
    "start": "2366970",
    "end": "2373480"
  },
  {
    "text": "not too big because then you you kind of you commit to a lot right you can meet a lot of stuff by committing to a large",
    "start": "2373480",
    "end": "2379660"
  },
  {
    "text": "interface it's kind of unwieldy and difficult to to mess with so small",
    "start": "2379660",
    "end": "2384910"
  },
  {
    "text": "interfaces are good however here's the interesting part how about you had a procedure of way of",
    "start": "2384910",
    "end": "2392470"
  },
  {
    "text": "doing interfaces that was in fact with",
    "start": "2392470",
    "end": "2398890"
  },
  {
    "text": "optional functions I you could define it or not it's up to you so the typical design by",
    "start": "2398890",
    "end": "2406270"
  },
  {
    "text": "introspection interface is going to have a few required primitives maybe zero I've actually a couple of designs in",
    "start": "2406270",
    "end": "2413620"
  },
  {
    "text": "which the zero required requirement the zero required Fung methods in the interface and we have some other",
    "start": "2413620",
    "end": "2420700"
  },
  {
    "text": "optional primitives which means you define an interface as all the functions",
    "start": "2420700",
    "end": "2428170"
  },
  {
    "text": "are optional all the methods in the interface are may or may not be and the interesting part is that if they're not",
    "start": "2428170",
    "end": "2435550"
  },
  {
    "text": "there that information it means this guy explicitly emphatically does not support this particular primitive so that means",
    "start": "2435550",
    "end": "2443590"
  },
  {
    "text": "for the absence of information is information it see what I'm saying you see my point so how many possible",
    "start": "2443590",
    "end": "2451000"
  },
  {
    "text": "interfaces do I do we have I turn back so you don't see the slide so if you have an a method in possible internet",
    "start": "2451000",
    "end": "2457390"
  },
  {
    "text": "each can be or not be how many interfaces that are distinct are you going to be able to generate yes",
    "start": "2457390",
    "end": "2466140"
  },
  {
    "text": "its explanation is it's it's a power set to ^ M right so it's you can you just do",
    "start": "2466140",
    "end": "2476410"
  },
  {
    "text": "one specification but you get this many possible interfaces so you know what",
    "start": "2476410",
    "end": "2481810"
  },
  {
    "text": "ever since I got into this this design my introspection thing all of my interfaces are humongous because",
    "start": "2481810",
    "end": "2489220"
  },
  {
    "text": "because if the cost is nothing the the fixed price of doing I think one more method is zero right I don't need to do",
    "start": "2489220",
    "end": "2496990"
  },
  {
    "text": "anything so okay that's interesting so um you have linear code but you have",
    "start": "2496990",
    "end": "2503200"
  },
  {
    "text": "exponential possible behaviors and that includes state variances as well and you",
    "start": "2503200",
    "end": "2508450"
  },
  {
    "text": "know I can't insist enough about the static if which like remember I mentioned this company Weka that I own",
    "start": "2508450",
    "end": "2514930"
  },
  {
    "text": "they're like really powerful code in their code base and I actually looked browse through it and you know every 10",
    "start": "2514930",
    "end": "2520930"
  },
  {
    "text": "instruction every 10 statements there's a static if no exaggeration I've got",
    "start": "2520930",
    "end": "2527350"
  },
  {
    "text": "appreciated just how much and you know they complain about the de lengua so it has bugs and whatever incident you know",
    "start": "2527350",
    "end": "2533380"
  },
  {
    "text": "this problem that problem and I say well you know how about why don't you do it in C++ if it is so difficult and they said",
    "start": "2533380",
    "end": "2539670"
  },
  {
    "text": "we couldn't hope to approach this project in C++ we don't have enough engineers and time and Link our time",
    "start": "2539670",
    "end": "2549920"
  },
  {
    "text": "right so it's you know the fact is that they have they understood they had such",
    "start": "2549920",
    "end": "2555960"
  },
  {
    "text": "a huge advantage from this very particular feature that they they use it",
    "start": "2555960",
    "end": "2561630"
  },
  {
    "text": "everywhere and that the nice the nice thing about static if is that it's really it's it's really the Fourier",
    "start": "2561630",
    "end": "2568860"
  },
  {
    "text": "transform of if like by which I mean the following if is a multiplex in time like",
    "start": "2568860",
    "end": "2574710"
  },
  {
    "text": "say it's a fork in time so if something happens then you do this otherwise you do that and that's in time right it",
    "start": "2574710",
    "end": "2580740"
  },
  {
    "text": "happens at runtime and as the program evolves is gonna do an if and it's gonna do two different things depending on the",
    "start": "2580740",
    "end": "2586500"
  },
  {
    "text": "boolean that comes all right fine how about the design time and you have static events the design time it's",
    "start": "2586500",
    "end": "2593760"
  },
  {
    "text": "there's no more time domain nothing happens in time at when you compile it",
    "start": "2593760",
    "end": "2600450"
  },
  {
    "text": "it is I mean takes the compiler both wild but it's not material to your execution so it's actually each static",
    "start": "2600450",
    "end": "2609090"
  },
  {
    "text": "if interest and you design because it's like you'd make a decision of laying things out or doing things that is",
    "start": "2609090",
    "end": "2615120"
  },
  {
    "text": "statically chosen depending on whatever boolean you have so each is of static if",
    "start": "2615120",
    "end": "2621270"
  },
  {
    "text": "doubles the design space covers I'm I'm very very excited about this particular feature so anyhow um there's been a",
    "start": "2621270",
    "end": "2631530"
  },
  {
    "text": "number of realized designs which I'm going to leave you to to Google for if you wish all of which are very small for",
    "start": "2631530",
    "end": "2640110"
  },
  {
    "text": "what they do that's the point have a experimental memory allocator which is a bunch of allocated designs in",
    "start": "2640110",
    "end": "2646650"
  },
  {
    "text": "12,000 lines of code and sort of the closest the closest equivalent in a",
    "start": "2646650",
    "end": "2651990"
  },
  {
    "text": "traditional design jima lock which is one allocate and forty-five thousand lines of code by the way it's a great",
    "start": "2651990",
    "end": "2658320"
  },
  {
    "text": "allocator so this is good right but this like includes that and a lot more right so it's there's a collections you can",
    "start": "2658320",
    "end": "2665400"
  },
  {
    "text": "find on youtube or talk buy buy my student and there's there's this interesting check teen type that that I",
    "start": "2665400",
    "end": "2674490"
  },
  {
    "text": "wrote recently let's see how were on time so it was supposed to finished 45",
    "start": "2674490",
    "end": "2679760"
  },
  {
    "text": "okay so I'm gonna leave the rest to to a quick exposition let me see",
    "start": "2679760",
    "end": "2689030"
  },
  {
    "text": "so we've had sorry alright so we have",
    "start": "2689030",
    "end": "2695960"
  },
  {
    "text": "the domain of I want to check integers for you know are they overflowing is this good or not and I'm sure that you",
    "start": "2695960",
    "end": "2703110"
  },
  {
    "text": "know there is um where is it baselines I'm sure you know about one of these I",
    "start": "2703110",
    "end": "2708180"
  },
  {
    "text": "breeze Mozilla checked in Microsoft safe teen like the death star of checked",
    "start": "2708180",
    "end": "2715200"
  },
  {
    "text": "integers like humongous library safe numerix which is like boosts candidate right so these libraries are",
    "start": "2715200",
    "end": "2723170"
  },
  {
    "text": "implementing these generic checked integers in in in C++ mostly except for",
    "start": "2723170",
    "end": "2730530"
  },
  {
    "text": "this last one and the problem is like you have so many possible behaviors that",
    "start": "2730530",
    "end": "2735600"
  },
  {
    "text": "it's very difficult to design one class and it usually comes like humongous very very large and very unpleasant to to",
    "start": "2735600",
    "end": "2741810"
  },
  {
    "text": "look at and the interesting part about design by introspection is that you",
    "start": "2741810",
    "end": "2747840"
  },
  {
    "text": "can't do this in Bleacher like an order of magnitude less code and with this I'm going to",
    "start": "2747840",
    "end": "2755310"
  },
  {
    "text": "show you the",
    "start": "2755310",
    "end": "2760160"
  },
  {
    "text": "i'ma give me just one second here I'm",
    "start": "2763830",
    "end": "2770940"
  },
  {
    "text": "going to share something about the state of these checked integers because it's a it's an interesting point whenever I",
    "start": "2770940",
    "end": "2777450"
  },
  {
    "text": "want to have a checked integer you want to have a payload which is your integer proper and you want to have a hook which",
    "start": "2777450",
    "end": "2784620"
  },
  {
    "text": "is going to do the checking sometimes the hook needs state sometimes it doesn't so sometimes it does it sound",
    "start": "2784620",
    "end": "2790770"
  },
  {
    "text": "like you know how many times did I overflow some ties in doesn't and here's where static Eve comes to place say well",
    "start": "2790770",
    "end": "2796740"
  },
  {
    "text": "I'm going to have us a hook if it has state but otherwise I'm going to just have the pipe hook without any without",
    "start": "2796740",
    "end": "2804120"
  },
  {
    "text": "any further state being occupied which makes the whole thing efficient so",
    "start": "2804120",
    "end": "2810630"
  },
  {
    "text": "anyhow always this I'm going to kind of finish early here jumping to conclusion",
    "start": "2810630",
    "end": "2818180"
  },
  {
    "text": "with design by introspection you have an assembly of you gotta",
    "start": "2818180",
    "end": "2823560"
  },
  {
    "text": "rethink the way you do things because instead of doing things that run time you're mostly doing doing doing",
    "start": "2823560",
    "end": "2829320"
  },
  {
    "text": "compilation and you use for this for tools one is static if one is compile",
    "start": "2829320",
    "end": "2835530"
  },
  {
    "text": "time introspection one is compile time code evaluation and the last is code generation once you have this at your",
    "start": "2835530",
    "end": "2841890"
  },
  {
    "text": "disposal you can harness yet another new wave of designing things thanks very",
    "start": "2841890",
    "end": "2849690"
  },
  {
    "text": "much thank you [Applause]",
    "start": "2849690",
    "end": "2854339"
  }
]