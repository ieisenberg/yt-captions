[
  {
    "text": "thank you everyone thanks for choosing my talk this afternoon um it's not the very first",
    "start": "5839",
    "end": "12639"
  },
  {
    "text": "time I've ever given this talk and some folks do occasionally say in conversations that I'm in well naming is",
    "start": "12639",
    "end": "18320"
  },
  {
    "text": "hard and while a catchphrase is nice the whole title is naming is hard let's do",
    "start": "18320",
    "end": "25279"
  },
  {
    "text": "better and that part is really what this is about because it's easy to tell people oh you know when you're diving",
    "start": "25279",
    "end": "32398"
  },
  {
    "text": "into Legacy code or when you're rejuvenating an old project or those sorts of things make sure you give things good names and then there's a",
    "start": "32399",
    "end": "39600"
  },
  {
    "text": "little pause and then someone changes the subject Because the actual mechanics of how do you give things good names is",
    "start": "39600",
    "end": "46680"
  },
  {
    "text": "well hard uh and I'm not going to give you rules that will generate names for",
    "start": "46680",
    "end": "51960"
  },
  {
    "text": "you I'm going to tell you things to care about that will guide your thoughts and your arguments when you're settling the",
    "start": "51960",
    "end": "58559"
  },
  {
    "text": "names of things see naming really matters and it matters",
    "start": "58559",
    "end": "65600"
  },
  {
    "text": "everywhere the names in our code the names of variables the names of functions the the names of everything",
    "start": "65600",
    "end": "72320"
  },
  {
    "text": "are how we work out what we're doing when you say the taxes is the total",
    "start": "72320",
    "end": "78600"
  },
  {
    "text": "times the tax rate those words they're the explanation of your algorithm and to",
    "start": "78600",
    "end": "86040"
  },
  {
    "text": "each other to the customer to the person who's claiming there's an error in your report because for some reason in their",
    "start": "86040",
    "end": "92640"
  },
  {
    "text": "Universe the taxes are wrong like all of that involves the names for the symbols that were",
    "start": "92640",
    "end": "99000"
  },
  {
    "text": "manipulating and if there's one thing C++ is bad at it's naming things uh R",
    "start": "99000",
    "end": "105320"
  },
  {
    "text": "aii anyone stands for of course scope bound Resource",
    "start": "105320",
    "end": "110759"
  },
  {
    "text": "Management uh we got lots of terrible names uh people say that West con should be called const West not sure about that",
    "start": "110920",
    "end": "118799"
  },
  {
    "text": "uh but the famous ones are the examples where there's a class called you know lowercase a and then you make instan of",
    "start": "118799",
    "end": "125560"
  },
  {
    "text": "it called uppercase a or someone else does it the other two ways around single letter variable names things that differ",
    "start": "125560",
    "end": "130959"
  },
  {
    "text": "only by case we have a lot of really really bad behaviors in our naming but naming is a learned skill some",
    "start": "130959",
    "end": "139280"
  },
  {
    "text": "people might just be natural-born namers they're amazing and you just sit back in awe while they name everything correct",
    "start": "139280",
    "end": "145519"
  },
  {
    "text": "but that's not the only way to be a good Namer you can get better at it you can learn learn some ways to practice and to",
    "start": "145519",
    "end": "151879"
  },
  {
    "text": "improve the naming that you're doing I'll tell you what I'm not going near I'm not going near any of this",
    "start": "151879",
    "end": "157920"
  },
  {
    "text": "stuff uh uppercase lower case camel case snake case scared by an underscore as a",
    "start": "157920",
    "end": "164360"
  },
  {
    "text": "small child so they're banned in your code base none of that to me that's all very",
    "start": "164360",
    "end": "170400"
  },
  {
    "text": "bike shed I mean just just have a standard stick to that this is not about whether it's employee with a capital e",
    "start": "170400",
    "end": "177800"
  },
  {
    "text": "or a lowercase e this is about is it employee or is it associate or is it a",
    "start": "177800",
    "end": "182879"
  },
  {
    "text": "person who has an employment contract object right not how you actually type",
    "start": "182879",
    "end": "188519"
  },
  {
    "text": "the letters and of course you have tools to let you mess about if you change your mind about your naming conventions in",
    "start": "188519",
    "end": "194680"
  },
  {
    "text": "the terms of capital letters and underscores names are where the meanings",
    "start": "194680",
    "end": "201519"
  },
  {
    "text": "come from a real thing that I ran into was things that are only valid for a",
    "start": "201519",
    "end": "207360"
  },
  {
    "text": "while and then they're not and when we say for a while and then there's a date what do you call",
    "start": "207360",
    "end": "215319"
  },
  {
    "text": "that you could call it the inactive date you could call it the end date you could call it the expiry date and it turns out",
    "start": "215319",
    "end": "222640"
  },
  {
    "text": "it matters because you find yourself in a meeting saying well can you use something on the end date and I have to",
    "start": "222640",
    "end": "230560"
  },
  {
    "text": "tell you that in circles I found myself in they all agreed that you couldn't use things on their end or inactive dates",
    "start": "230560",
    "end": "236519"
  },
  {
    "text": "but you could on their expiry dates okay now as a programmer that makes like",
    "start": "236519",
    "end": "242200"
  },
  {
    "text": "no sense first of all I would have really done a date in time right it's valid until the 11th at 9:30",
    "start": "242200",
    "end": "248760"
  },
  {
    "text": "a.m. but then uh people don't like that they want it just be valid till the 11th and then is it valid on the 11th",
    "start": "248760",
    "end": "254519"
  },
  {
    "text": "midnight the very very end of the 11th and naming it often settles those business rules in a way that's not at",
    "start": "254519",
    "end": "261280"
  },
  {
    "text": "all clear to the programmers who are then going to write that code but the business users carry meanings",
    "start": "261280",
    "end": "268320"
  },
  {
    "text": "here this this trick questions who knows the answer does empty empty a",
    "start": "268320",
    "end": "274560"
  },
  {
    "text": "collection no it tells you whether or not it's empty clear empty's a",
    "start": "274560",
    "end": "282080"
  },
  {
    "text": "collection now many people will tell me that names are important when you're writing like a public API for strangers",
    "start": "284479",
    "end": "292080"
  },
  {
    "text": "but that there's a lower standard of care when you're maybe like just writing a tutorial this is just slides it",
    "start": "292080",
    "end": "298440"
  },
  {
    "text": "wouldn't fit if I used their real names I'm just going to call them ABC but then I read this tweet from",
    "start": "298440",
    "end": "305360"
  },
  {
    "text": "Nicole and it's quite an old Tweet now but it's it's still just as sad as it ever was Nicole says it's really hard to",
    "start": "305360",
    "end": "313720"
  },
  {
    "text": "follow examples with single letter variables okay she says if you're trying",
    "start": "313720",
    "end": "319199"
  },
  {
    "text": "to teach coding could you be more descriptive not just ABC so far so good right this is what",
    "start": "319199",
    "end": "326720"
  },
  {
    "text": "makes this tweet sad newbies can shorten them once they feel",
    "start": "326720",
    "end": "333120"
  },
  {
    "text": "comfortable oh no what are we teaching people right we don't need those",
    "start": "333120",
    "end": "338360"
  },
  {
    "text": "crutches of syllables you know words please we are experienced experts everything is ABC but I learned this a",
    "start": "338360",
    "end": "345919"
  },
  {
    "text": "long time ago what we show people in our coding examples is what we are teaching people and that's why names matter from",
    "start": "345919",
    "end": "351960"
  },
  {
    "text": "the very very get-go they tell a",
    "start": "351960",
    "end": "357319"
  },
  {
    "text": "story the better you name things the less comments you need it's one of our arguments for refactoring that instead",
    "start": "357319",
    "end": "363360"
  },
  {
    "text": "of having a 400 line Loop let's write a function we'll give the function a name and then everyone will know what that",
    "start": "363360",
    "end": "370120"
  },
  {
    "text": "does well what if the story you're telling is not actually what the code does and you must leading people this",
    "start": "370120",
    "end": "376520"
  },
  {
    "text": "happens here's what happens over time I I do a lot of things where I come into code that's existed for a long time and",
    "start": "376520",
    "end": "383560"
  },
  {
    "text": "this is like the evolution of a set status it starts out simple you know it",
    "start": "383560",
    "end": "389280"
  },
  {
    "text": "does this it takes a status and it's called set status you just know there's a member variable called status that",
    "start": "389280",
    "end": "395080"
  },
  {
    "text": "gets set to that parameter done okay until oh uh we have this like audit",
    "start": "395080",
    "end": "402319"
  },
  {
    "text": "thing we keep track of when everything was touched last so all the sets because",
    "start": "402319",
    "end": "407360"
  },
  {
    "text": "there could be a bunch of other set whatevers they all need to say last updated don't worry about how we got the current time that's not the point of the",
    "start": "407360",
    "end": "414039"
  },
  {
    "text": "story Okay carry along we're doing okay until someone says oh you know what",
    "start": "414039",
    "end": "420360"
  },
  {
    "text": "uh when you set it to approved bunch of special stuff has to happen and when you",
    "start": "420360",
    "end": "426039"
  },
  {
    "text": "set it to denied there's a bunch of special stuff has to happen and those dot dot dots they just get longer and",
    "start": "426039",
    "end": "433080"
  },
  {
    "text": "longer and longer and they get bugs in them and the person looking for the bug",
    "start": "433080",
    "end": "438960"
  },
  {
    "text": "doesn't think to look in set status because as far as they're concerned status equals s they they look at the",
    "start": "438960",
    "end": "445280"
  },
  {
    "text": "name of set status that that's the that's the code for it",
    "start": "445280",
    "end": "450319"
  },
  {
    "text": "set status is not a true name anymore it's misleading you probably want to do a",
    "start": "450319",
    "end": "456160"
  },
  {
    "text": "function called approve and a function called deny now it's not surprising if you have",
    "start": "456160",
    "end": "461840"
  },
  {
    "text": "a bug related to sending emails or whatever the dot dot dot is that it would be in these like business logic",
    "start": "461840",
    "end": "468000"
  },
  {
    "text": "kind of functions they have a name that tells people things happen here whereas set status has a name that says nothing",
    "start": "468000",
    "end": "474759"
  },
  {
    "text": "to see here just passing along this parameter that you gave me a proven denier less",
    "start": "474759",
    "end": "482159"
  },
  {
    "text": "deceptive that means that you don't always get the names right at first set",
    "start": "485280",
    "end": "490440"
  },
  {
    "text": "status was an okay name for status equals s done it only became a bad name",
    "start": "490440",
    "end": "497759"
  },
  {
    "text": "as the body of the function grew I learned from some folks who do a",
    "start": "497759",
    "end": "504639"
  },
  {
    "text": "lot of refactoring that there's a real school of thought that when you first extract those coup lines into a function",
    "start": "504639",
    "end": "511520"
  },
  {
    "text": "when it prompts you for the name of the function you just smack your fingers down on the keyboard that's how I got",
    "start": "511520",
    "end": "516919"
  },
  {
    "text": "that constellation of letters I did just that on my keyboard don't put any thought into it",
    "start": "516919",
    "end": "521959"
  },
  {
    "text": "because you'll be wrong like don't worry about it you don't know what it does yet you haven't read it right it's 400 lines that you happen to have selected in the",
    "start": "521959",
    "end": "528160"
  },
  {
    "text": "editor just give it any old name you'll fix it if it's",
    "start": "528160",
    "end": "533959"
  },
  {
    "text": "nonsense you also see this here what I think it does it sets the shipping cost it adjusts the total total it marks it",
    "start": "533959",
    "end": "540160"
  },
  {
    "text": "is shipped right then later you go oh this is ship that's called ship when you ship the product actually this is not",
    "start": "540160",
    "end": "546560"
  },
  {
    "text": "really accurate because you don't know what it sets it should be called set D4",
    "start": "546560",
    "end": "551800"
  },
  {
    "text": "adjust rb17 and set the X7 flag right then",
    "start": "551800",
    "end": "558640"
  },
  {
    "text": "later as you work your way through the function and you work out what all these weirdly named local variables are you actually figure out what the function's",
    "start": "558640",
    "end": "564839"
  },
  {
    "text": "doing and you're actually able to name the function",
    "start": "564839",
    "end": "569880"
  },
  {
    "text": "the true name will come it may take time that's all right don't be paralyzed",
    "start": "569880",
    "end": "576160"
  },
  {
    "text": "unable to move forward because you don't know what to name it yet remember that you will change names a lot and we have",
    "start": "576160",
    "end": "582000"
  },
  {
    "text": "tools it's not too hard to give a thing a good name you",
    "start": "582000",
    "end": "588480"
  },
  {
    "text": "have to think about who is consuming it so if I've got 50,000 lines of code",
    "start": "588480",
    "end": "594720"
  },
  {
    "text": "to update and refactor the consumer of all these function names is me and I like me so",
    "start": "594720",
    "end": "601920"
  },
  {
    "text": "that works out pretty well when I'm writing some utility object that my team is going to be using",
    "start": "601920",
    "end": "609279"
  },
  {
    "text": "throughout this project I kind of know how my team thinks I know our words for",
    "start": "609279",
    "end": "614399"
  },
  {
    "text": "things I've got the binders and the wiks and everything full of them not hard to think their way and give them a name but",
    "start": "614399",
    "end": "621240"
  },
  {
    "text": "as you get further and further from the consumers of these names you have to really actively work about putting",
    "start": "621240",
    "end": "628079"
  },
  {
    "text": "yourself in their shoes and thinking like them and naming it in a way that makes sense for",
    "start": "628079",
    "end": "635800"
  },
  {
    "text": "them I expect that some of you have seen or heard me talk about things related to algorithm header right Sha is here this",
    "start": "636680",
    "end": "644360"
  },
  {
    "text": "year which is nice because Sean's really responsible for awakening me to how that header changes if you actually just use",
    "start": "644360",
    "end": "651959"
  },
  {
    "text": "it so when I compain and I am about to complain I'm complaining from",
    "start": "651959",
    "end": "658240"
  },
  {
    "text": "Love I told this story first to a non-programmer but technical person told",
    "start": "658240",
    "end": "664320"
  },
  {
    "text": "them about sort you know how this works you have a bunch of thingies and you call sort and",
    "start": "664320",
    "end": "671639"
  },
  {
    "text": "now they're in order okay but what if my thingies are not integers that fit on the slide they are uh purchase orders",
    "start": "671639",
    "end": "679680"
  },
  {
    "text": "okay and I want to sort the purchase orders by their value",
    "start": "679680",
    "end": "685200"
  },
  {
    "text": "great but purchase orders are fairly large items moving them around inside a vector is expensive and I have 10,000",
    "start": "685200",
    "end": "692839"
  },
  {
    "text": "purchase orders and I really just want to know the four or five that are worth",
    "start": "692839",
    "end": "698079"
  },
  {
    "text": "the most I don't want to pay for sorting the entire container that could be",
    "start": "698079",
    "end": "705440"
  },
  {
    "text": "expensive okay implementers are like we got you we got partial",
    "start": "705440",
    "end": "710920"
  },
  {
    "text": "sort right partial sort we'll just bring in this case the three smallest",
    "start": "710920",
    "end": "717480"
  },
  {
    "text": "integers but in my other case my four best purchase orders to the beginning of",
    "start": "717480",
    "end": "723040"
  },
  {
    "text": "the collection and then who cares who was number 500 and who was number 5501",
    "start": "723040",
    "end": "728519"
  },
  {
    "text": "out of my 10,000 I don't care just want to know the best ones okay but that permuted the",
    "start": "728519",
    "end": "736600"
  },
  {
    "text": "collection maybe it's not a problem with integers but maybe with my purchase orders they were sorted by date or by",
    "start": "736600",
    "end": "742920"
  },
  {
    "text": "sales rep or something and now I've I've sorted them by value and I've messed up",
    "start": "742920",
    "end": "748040"
  },
  {
    "text": "that sort and I have to redo it again standard library has your back we",
    "start": "748040",
    "end": "754000"
  },
  {
    "text": "have partial sort copy right which takes just the winners",
    "start": "754000",
    "end": "759760"
  },
  {
    "text": "puts them in their own place gives uh the original collection its own former",
    "start": "759760",
    "end": "765560"
  },
  {
    "text": "glory un unpermuted untouched and understand I do think it's",
    "start": "765560",
    "end": "771519"
  },
  {
    "text": "great that we have partial sort copy but it's a terrible terrible name",
    "start": "771519",
    "end": "777519"
  },
  {
    "text": "it's an implementor name and it's the name that comes from that story of so I sorted them and then it was expensive",
    "start": "777519",
    "end": "783920"
  },
  {
    "text": "and then I because the person who wants the four purchase orders that are worth",
    "start": "783920",
    "end": "789079"
  },
  {
    "text": "the most well they don't want to sort anything they want",
    "start": "789079",
    "end": "797720"
  },
  {
    "text": "topn not sort not any kind of sort now because this is C++ and we're super",
    "start": "798839",
    "end": "804560"
  },
  {
    "text": "pedantic many people point out that like that's not top end it's really top end sort",
    "start": "804560",
    "end": "810959"
  },
  {
    "text": "okay if you just wanted like four followed by one followed by two that",
    "start": "810959",
    "end": "816160"
  },
  {
    "text": "would be the non-existent nth element copy and maybe we should have nth",
    "start": "816160",
    "end": "821959"
  },
  {
    "text": "element copy but maybe we shouldn't call it that the people designing the standard",
    "start": "821959",
    "end": "829160"
  },
  {
    "text": "library to this day are outnumbered by people using the standard Library by I don't know",
    "start": "829160",
    "end": "837720"
  },
  {
    "text": "millions and they have to think like people who couldn't write a C++ compiler",
    "start": "837720",
    "end": "843800"
  },
  {
    "text": "they have to think like people who couldn't design a standard library to come up with names that make sense to",
    "start": "843800",
    "end": "850120"
  },
  {
    "text": "people who are very very different from themselves and it's super",
    "start": "850120",
    "end": "855360"
  },
  {
    "text": "hard some things that will help you be",
    "start": "855519",
    "end": "861680"
  },
  {
    "text": "consistent we write code and we put words like tax rate and total and region",
    "start": "863360",
    "end": "870040"
  },
  {
    "text": "and expiry date not just in our variable and function and class names we put out",
    "start": "870040",
    "end": "877360"
  },
  {
    "text": "reports and the columns on the reports have headings we send emails that say",
    "start": "877360",
    "end": "882800"
  },
  {
    "text": "the expiry date of your I don't know coupon or special offer is coming up soon we have uh uis with places for",
    "start": "882800",
    "end": "891160"
  },
  {
    "text": "people to enter the expiry date and then people call each other and say I don't",
    "start": "891160",
    "end": "896519"
  },
  {
    "text": "understand why I can't use it today is the 11th and it's expiry date is the 11th why can't I use",
    "start": "896519",
    "end": "902279"
  },
  {
    "text": "it these words have to be the same in all of those places otherwise these",
    "start": "902279",
    "end": "908399"
  },
  {
    "text": "conversations are almost impossible to have this means being really firm with",
    "start": "908399",
    "end": "915600"
  },
  {
    "text": "people who phone you up and say inactive date when it's really expiry date you",
    "start": "915600",
    "end": "921759"
  },
  {
    "text": "kind of have to correct them and make sure they're using the right names now ideally the names would come from the",
    "start": "921759",
    "end": "930440"
  },
  {
    "text": "business to the programmers but the reality is a lot of names come from the programmers to the business fine at",
    "start": "930440",
    "end": "937920"
  },
  {
    "text": "least let's be consistent let's not use six different names in six different contexts for the same",
    "start": "937920",
    "end": "944440"
  },
  {
    "text": "thing I will correct someone on the phone no no your certification expired",
    "start": "946000",
    "end": "951360"
  },
  {
    "text": "it's your coupon that's invalid it seems like a pointless",
    "start": "951360",
    "end": "957079"
  },
  {
    "text": "pedantry but it's how you keep the reports and the thinking and the emails",
    "start": "957079",
    "end": "962120"
  },
  {
    "text": "and the code all working together",
    "start": "962120",
    "end": "968560"
  },
  {
    "text": "however there's a tendency in terms of programming to want to name things that didn't have names",
    "start": "968560",
    "end": "974800"
  },
  {
    "text": "before really try to let other people tell you the names if you can so I have this function I'm trying",
    "start": "974800",
    "end": "982959"
  },
  {
    "text": "to refactor it trying to figure out what it does and I've found that there's the",
    "start": "982959",
    "end": "988440"
  },
  {
    "text": "stuff we do before we load it and there's the loading and there's the stuff we do",
    "start": "988440",
    "end": "994199"
  },
  {
    "text": "after and it's really really tempting to just do this right well there's the preload and then there's the load and",
    "start": "994199",
    "end": "1001040"
  },
  {
    "text": "then there's the postload okay but these names what did they don't tell you anything like this",
    "start": "1001040",
    "end": "1007839"
  },
  {
    "text": "is all slideware there is no load function I didn't have to write it but you could maybe guess what load does but",
    "start": "1007839",
    "end": "1014319"
  },
  {
    "text": "you cannot tell at all what pre- and postload do you can see when they happen",
    "start": "1014319",
    "end": "1019720"
  },
  {
    "text": "but you could also see that if they had another name because you're able to read code right you understand how control",
    "start": "1019720",
    "end": "1024880"
  },
  {
    "text": "flows like this down the page so there's zero information in these names they're",
    "start": "1024880",
    "end": "1030959"
  },
  {
    "text": "easy to come up with but they don't really help people if all of the preload stuff is",
    "start": "1030959",
    "end": "1037480"
  },
  {
    "text": "about checking permissions and authorizations or acquiring a lock",
    "start": "1037480",
    "end": "1042880"
  },
  {
    "text": "something like that then that should be its name if all of the postload is about sending confirmatory emails or whatnot",
    "start": "1042880",
    "end": "1050160"
  },
  {
    "text": "then that should be its name figure out what it does not just when it",
    "start": "1050160",
    "end": "1055520"
  },
  {
    "text": "happens we're also really good at update config",
    "start": "1056600",
    "end": "1062679"
  },
  {
    "text": "file first of all to most of us config file is a real simple and ordinary and obvious name and not anything",
    "start": "1063280",
    "end": "1069200"
  },
  {
    "text": "complicated or technical at all I have to tell you there are people who are not in this room who don't feel that",
    "start": "1069200",
    "end": "1075080"
  },
  {
    "text": "way but like save is understood why not call it save why are you calling it",
    "start": "1075080",
    "end": "1080559"
  },
  {
    "text": "update config file I'm old enough to have watched",
    "start": "1080559",
    "end": "1085720"
  },
  {
    "text": "where we keep information undergo huge Paradigm shifts multiple times so there were any files",
    "start": "1085720",
    "end": "1094280"
  },
  {
    "text": "which were small files in the same folder as the executable and there was uh easy apis to read values out of the",
    "start": "1094280",
    "end": "1100799"
  },
  {
    "text": "any files then big migrations all give me the registry then there was this then there",
    "start": "1100799",
    "end": "1106280"
  },
  {
    "text": "now it's the cloud now it's something else if it was just called like load preferences and save preferences the",
    "start": "1106280",
    "end": "1111840"
  },
  {
    "text": "whole time you wouldn't need to keep naming it why does the fact that it's stored in a config file need to be in",
    "start": "1111840",
    "end": "1117360"
  },
  {
    "text": "the name of the function and just P pedantic stuff like storage coordinates instead of location",
    "start": "1117360",
    "end": "1124360"
  },
  {
    "text": "the location is what it is the storage coordinates is how you are implementing that if you keep the implementation",
    "start": "1124360",
    "end": "1130400"
  },
  {
    "text": "details out of the names you will not have to change the names when you change the implementation details",
    "start": "1130400",
    "end": "1139000"
  },
  {
    "text": "I speak one and a half natural languages English and some French we say in Canada",
    "start": "1140760",
    "end": "1148000"
  },
  {
    "text": "a lot of us that we're cesu lingual that's one and a half but even if English isn't your natural language your",
    "start": "1148000",
    "end": "1155559"
  },
  {
    "text": "first language you probably recognize if you stop for a while to think that certain pairs go",
    "start": "1155559",
    "end": "1163000"
  },
  {
    "text": "together like begin and end not begin and last it's first and last",
    "start": "1163000",
    "end": "1170720"
  },
  {
    "text": "always create and Destroy not create and clean up open and close not open and",
    "start": "1171080",
    "end": "1180240"
  },
  {
    "text": "release and next and previous not next and Rewind that would be forward and",
    "start": "1180240",
    "end": "1187679"
  },
  {
    "text": "Rewind and put and get not put and retrieve these don't have to make sense",
    "start": "1187720",
    "end": "1195120"
  },
  {
    "text": "you can't necessarily look them up in a dictionary but they are the pattern that",
    "start": "1195120",
    "end": "1200280"
  },
  {
    "text": "we're all used to it's source and destination not source and Target if you're not sure you can take a",
    "start": "1200280",
    "end": "1208600"
  },
  {
    "text": "survey amongst your immediate co-workers or do a poll on the social media of your",
    "start": "1208600",
    "end": "1213960"
  },
  {
    "text": "choice as to which of these pairs is more natural but people get confused when the pairs don't",
    "start": "1213960",
    "end": "1222520"
  },
  {
    "text": "match I really strongly these days advise against metaphor there are lots of reasons to",
    "start": "1224640",
    "end": "1231720"
  },
  {
    "text": "have a problem with metaphor the most important one is that not everyone has your background there's a group of",
    "start": "1231720",
    "end": "1237880"
  },
  {
    "text": "people especially in North America who grew up watching cowboy movies where the good Cowboys had white hats and the bad",
    "start": "1237880",
    "end": "1245200"
  },
  {
    "text": "Cowboys had black hats and they talk about like white hat hacking and black hat",
    "start": "1245200",
    "end": "1250600"
  },
  {
    "text": "hacking but if you are you know less than 70 it's possible you didn't grow up",
    "start": "1250600",
    "end": "1256360"
  },
  {
    "text": "watching cowboy movies and you may not have any understanding what this hat color metaphor is all",
    "start": "1256360",
    "end": "1262840"
  },
  {
    "text": "about even when people recognize your metaphor many of them have too many",
    "start": "1262840",
    "end": "1269799"
  },
  {
    "text": "possible meanings like red and green is stop and go begin and end uh port and",
    "start": "1269799",
    "end": "1277960"
  },
  {
    "text": "starboard Pro it's probably port and starboard right uh there's so many different things represented with red",
    "start": "1277960",
    "end": "1283440"
  },
  {
    "text": "and green I consulted once on a project to help a company's design traffic maps",
    "start": "1283440",
    "end": "1289520"
  },
  {
    "text": "you know when you go and you see that the and we actually had a section on if you only have three colors use red for",
    "start": "1289520",
    "end": "1295320"
  },
  {
    "text": "stopped and yellow for slow and green for fast it was a government project we wrote it all out what if you have five colors what if you have 11 colors there",
    "start": "1295320",
    "end": "1302360"
  },
  {
    "text": "was a place that had their uh speed traps on their traffic maps and",
    "start": "1302360",
    "end": "1308080"
  },
  {
    "text": "sometimes the speed traps were green and I was like does that mean that it's on",
    "start": "1308080",
    "end": "1313240"
  },
  {
    "text": "and operating and you'll get a ticket if you speed through it or does it mean like green go ahead hit the gas go as",
    "start": "1313240",
    "end": "1319840"
  },
  {
    "text": "fast as you like we're not here today right there's no obvious color for how to color whether your speed trap is on or off so if you would like to make a",
    "start": "1319840",
    "end": "1328080"
  },
  {
    "text": "white list and a Black List um red properties and green properties don't",
    "start": "1328080",
    "end": "1333480"
  },
  {
    "text": "assume that whoever is reading your code will know what it",
    "start": "1333480",
    "end": "1338279"
  },
  {
    "text": "means better to be actually use the right word like allow and deny operating",
    "start": "1339400",
    "end": "1347640"
  },
  {
    "text": "inactive stuff like that rather than metaphors especially metaphors that",
    "start": "1347640",
    "end": "1353240"
  },
  {
    "text": "could be misinterpreted like I don't know what filter does if I have a list of integers and I",
    "start": "1353240",
    "end": "1360279"
  },
  {
    "text": "call filter and I pass in some kind of a predicate to indicate oddness am I filtering to just odd",
    "start": "1360279",
    "end": "1367760"
  },
  {
    "text": "numbers or am I filtering out the odd numbers I can't tell from the name",
    "start": "1367760",
    "end": "1374200"
  },
  {
    "text": "filter but if I called it include if and ex include if then it's much more",
    "start": "1374200",
    "end": "1381919"
  },
  {
    "text": "obvious because filter is also a metaphor right like a coffee filter and sometimes uh what you want is the liquid",
    "start": "1381919",
    "end": "1389000"
  },
  {
    "text": "without the solids and other times what you want is the solids so you really can't tell from just the word filter",
    "start": "1389000",
    "end": "1394240"
  },
  {
    "text": "what supposed to do when you rely on a metaphor you rely",
    "start": "1394240",
    "end": "1400159"
  },
  {
    "text": "on someone's background you rely on them guessing correctly amongst the many possible metaphors you could be meaning just don't make people guess",
    "start": "1400159",
    "end": "1407400"
  },
  {
    "text": "just be super literal all right let's be specific what if I'm",
    "start": "1407400",
    "end": "1413080"
  },
  {
    "text": "writing a function when you are writing a function you are going to use a",
    "start": "1413080",
    "end": "1418559"
  },
  {
    "text": "verb there's a version of the Strunk and white style rules that breaks the rules to explain what they're doing and one of",
    "start": "1418559",
    "end": "1424200"
  },
  {
    "text": "them is this sentence no verb functions should have",
    "start": "1424200",
    "end": "1430159"
  },
  {
    "text": "verbs calculate deduct Mark right verbs",
    "start": "1430880",
    "end": "1436480"
  },
  {
    "text": "related to what your program does if there isn't an obvious one some",
    "start": "1436480",
    "end": "1442720"
  },
  {
    "text": "helpers that are useful include is is empty now I know that that's going",
    "start": "1442720",
    "end": "1450480"
  },
  {
    "text": "to return me a true or false but whether or not a collection is empty and small",
    "start": "1450480",
    "end": "1455720"
  },
  {
    "text": "editorial but whole talks editorial if you got to put no discard on your function because nobody ever looks at",
    "start": "1455720",
    "end": "1461559"
  },
  {
    "text": "the return value then you gave it a name that didn't make people want to look at the return value okay like I'm glad we",
    "start": "1461559",
    "end": "1467880"
  },
  {
    "text": "have noce but if you find yourself having to use it you're doing it wrong and you should change the name of your function so is empty much more",
    "start": "1467880",
    "end": "1475559"
  },
  {
    "text": "obvious uh there's also has whatever and can",
    "start": "1475559",
    "end": "1481320"
  },
  {
    "text": "whatever so imagine you have an order which might or might not be ready to ship and you",
    "start": "1481320",
    "end": "1488480"
  },
  {
    "text": "want to ask you could call that function is shippable and it would return true or",
    "start": "1488480",
    "end": "1494880"
  },
  {
    "text": "false not that shippable is really a word maybe it is maybe the staff in that",
    "start": "1494880",
    "end": "1500520"
  },
  {
    "text": "company all walk around saying we can't send order 1 two 34 it's not shippable if in in which case I guess is shippa",
    "start": "1500520",
    "end": "1506799"
  },
  {
    "text": "bles okay you could have can ship yes or no and you could have get ship status",
    "start": "1506799",
    "end": "1512679"
  },
  {
    "text": "that will return you in a new which you could compare to all of the enes that correspond as being ready to ship",
    "start": "1512679",
    "end": "1518720"
  },
  {
    "text": "now it matters there's also this do you have",
    "start": "1518720",
    "end": "1524799"
  },
  {
    "text": "ready to ship which returns true or false and you may or may not see it but there is is a bang before ready to ship",
    "start": "1524799",
    "end": "1530279"
  },
  {
    "text": "so if not ready to ship or do you call the function not ready to ship because that's what people",
    "start": "1530279",
    "end": "1537240"
  },
  {
    "text": "are always checking well I guess maybe that's less",
    "start": "1537240",
    "end": "1542399"
  },
  {
    "text": "ambiguous I don't know I see this all the time if not is",
    "start": "1542399",
    "end": "1550000"
  },
  {
    "text": "invalid right we didn't write a valid we only wrote invalid",
    "start": "1550760",
    "end": "1558320"
  },
  {
    "text": "just sorry to visual studio I love Visual Studio but I hate this option and there are so many of them disable",
    "start": "1559679",
    "end": "1565240"
  },
  {
    "text": "squiggles false how is that not enable squiggles true what right because this is their",
    "start": "1565240",
    "end": "1572799"
  },
  {
    "text": "like internally something things are on by default so you have to set disable whatever but I'm not really clear what",
    "start": "1572799",
    "end": "1578520"
  },
  {
    "text": "disable squiggles false might mean however once you bring in your",
    "start": "1578520",
    "end": "1584880"
  },
  {
    "text": "little helper verbs we have to talk about order is it verb noun or noun verb we don't",
    "start": "1584880",
    "end": "1594520"
  },
  {
    "text": "say now I will tax determine right I'm going to determine the taxes I'm going",
    "start": "1594520",
    "end": "1599600"
  },
  {
    "text": "to charge the fees but we do employee update we do inventory check so there's",
    "start": "1599600",
    "end": "1606440"
  },
  {
    "text": "no like hard and fast single rule seems to go by how you want to think about the",
    "start": "1606440",
    "end": "1612200"
  },
  {
    "text": "sentence but you should be making deliberate choices sometimes the tool affect the",
    "start": "1612200",
    "end": "1619039"
  },
  {
    "text": "choice there's a lot of places that'll show you all your classes functions",
    "start": "1619039",
    "end": "1624399"
  },
  {
    "text": "member variables whatever in alphabetical order so if you have a bunch of has this can that they'll all",
    "start": "1624399",
    "end": "1631080"
  },
  {
    "text": "be together but maybe you'd really rather",
    "start": "1631080",
    "end": "1636840"
  },
  {
    "text": "that they would be important stuff first rather than helper verb first like if I",
    "start": "1636840",
    "end": "1642679"
  },
  {
    "text": "have to type h a s and then a real first letter before the drop down fills in",
    "start": "1642679",
    "end": "1647840"
  },
  {
    "text": "maybe I would have been happier if ship was at the beginning of the word right if there's has entries and",
    "start": "1647840",
    "end": "1655159"
  },
  {
    "text": "has risks do I want those together alphabetically or do I want everything entry related together and everything",
    "start": "1655159",
    "end": "1661000"
  },
  {
    "text": "risk related together get an add for",
    "start": "1661000",
    "end": "1667320"
  },
  {
    "text": "example functions of course take parameters arguments and they serve two",
    "start": "1668519",
    "end": "1673559"
  },
  {
    "text": "different purposes like yes they are local variables when you write the function and so you have to name them",
    "start": "1673559",
    "end": "1680080"
  },
  {
    "text": "the way we're going to go over some variable namings in a moment I do not like shadowing right so",
    "start": "1680080",
    "end": "1688200"
  },
  {
    "text": "if there's a member variable X I don't like a function to take a parameter called X usually there's a way around it",
    "start": "1688200",
    "end": "1696799"
  },
  {
    "text": "if there's no way around it and you have to decorate please do not decorate the",
    "start": "1696799",
    "end": "1701919"
  },
  {
    "text": "argument or the parameter to the function decorate the member variable and the reason is the other purpose",
    "start": "1701919",
    "end": "1708120"
  },
  {
    "text": "purpose is that these are cues to the people who are calling the",
    "start": "1708120",
    "end": "1713600"
  },
  {
    "text": "code so if I want to create a new hire object and I need to pass some stuff to the employee",
    "start": "1713600",
    "end": "1720200"
  },
  {
    "text": "Constructor this is uh a little popup that reminds me the first parameter is the full name the second parameter is",
    "start": "1720200",
    "end": "1727039"
  },
  {
    "text": "the yearly salary and it's not a coincidence that there are adjectives in those names to help you understand maybe",
    "start": "1727039",
    "end": "1735399"
  },
  {
    "text": "I'll just keep salary as the member variable but yearly salary for the Constructor parameter now it's a prompt",
    "start": "1735399",
    "end": "1741679"
  },
  {
    "text": "that lets you know whether it's the hourly monthly or whatever classes are",
    "start": "1741679",
    "end": "1749440"
  },
  {
    "text": "nouns and I don't like nouns that end verbally formatter",
    "start": "1749440",
    "end": "1756399"
  },
  {
    "text": "printer organizer controller what do they format print",
    "start": "1756399",
    "end": "1762960"
  },
  {
    "text": "normalize whatever if they print a report could we at least call it report print",
    "start": "1762960",
    "end": "1769000"
  },
  {
    "text": "if they organize a schedule could we at least call it schedule",
    "start": "1769000",
    "end": "1773799"
  },
  {
    "text": "organizer uh interestingly when I get people to do that sometimes they then uh",
    "start": "1774159",
    "end": "1780039"
  },
  {
    "text": "abandon the verb so it goes from printer to report printer to report goes from",
    "start": "1780039",
    "end": "1786399"
  },
  {
    "text": "schedule organizer from organizer to schedule organizer to schedule and that's a good and sensible progress you",
    "start": "1786399",
    "end": "1792640"
  },
  {
    "text": "want to be nouns people do like to decorate these nouns whatever proxy whatever Factory",
    "start": "1792640",
    "end": "1799279"
  },
  {
    "text": "whatever adapter whatever interface monad Singleton abstract bass imple",
    "start": "1799279",
    "end": "1805000"
  },
  {
    "text": "sometimes you need that to be able to tell them all apart there's a whole pile of things that all involve a schedule",
    "start": "1805000",
    "end": "1812240"
  },
  {
    "text": "there's schedule factoring a schedule adapter and a schedule proxy like okay but if there's nobody else with that",
    "start": "1812240",
    "end": "1818159"
  },
  {
    "text": "name do you have to put this little decoration on the end to tell everybody what kind of class it is like inventory",
    "start": "1818159",
    "end": "1824159"
  },
  {
    "text": "Singleton instead of inventory I don't think so",
    "start": "1824159",
    "end": "1829960"
  },
  {
    "text": "I still see people putting project names as like the first four letters of every",
    "start": "1830039",
    "end": "1835760"
  },
  {
    "text": "class they're writing and I was cured of this when MFC came out which is maybe",
    "start": "1835760",
    "end": "1844399"
  },
  {
    "text": "1991 anyone is right okay because most of the functions in there started with",
    "start": "1844399",
    "end": "1851679"
  },
  {
    "text": "the letters AFX which is of course stands for MFC and that's obvious right uh that was",
    "start": "1851679",
    "end": "1858080"
  },
  {
    "text": "code name application framework I believe did not survive uh to release",
    "start": "1858080",
    "end": "1863720"
  },
  {
    "text": "date and yet it lived on in all these function names uh you have a name space if you have to but look at projects",
    "start": "1863720",
    "end": "1869799"
  },
  {
    "text": "change code names change do not start all of your classes with three or four",
    "start": "1869799",
    "end": "1875000"
  },
  {
    "text": "letters that represent your product uh that will not stick",
    "start": "1875000",
    "end": "1881039"
  },
  {
    "text": "around other thing people do well we have a class called name and address",
    "start": "1881480",
    "end": "1886960"
  },
  {
    "text": "which later we have to rename to name and address and phone number and name and address and phone number and email",
    "start": "1886960",
    "end": "1892720"
  },
  {
    "text": "what are you doing that's your contact information right and now it can keep that name as the implementation details",
    "start": "1892720",
    "end": "1899880"
  },
  {
    "text": "inside wax and Wayne imagine adding fax number and then taking it away again five or 10 years",
    "start": "1899880",
    "end": "1906080"
  },
  {
    "text": "later think about the purpose of the class this is a real",
    "start": "1906080",
    "end": "1913480"
  },
  {
    "text": "thing absolute orientation Oiler angles fusure Al Fusion algor them using accelerometer and magnetometer test this",
    "start": "1913480",
    "end": "1920760"
  },
  {
    "text": "is the proof this is a screenshot from Patricia who's here okay that's the",
    "start": "1920760",
    "end": "1926639"
  },
  {
    "text": "name I mean would you call a bed like a horizontal surface for sleeping with",
    "start": "1926639",
    "end": "1932279"
  },
  {
    "text": "legs what is it for the thing must have a",
    "start": "1932279",
    "end": "1937840"
  },
  {
    "text": "purpose same applies when you start to Name the members of your class really don't like seeing the class",
    "start": "1938200",
    "end": "1945600"
  },
  {
    "text": "name repeated in the members like employee has an employee name",
    "start": "1945600",
    "end": "1951519"
  },
  {
    "text": "employee prints an employee record like yes I didn't think it was going to print a landscaping record you know uh I'll",
    "start": "1951519",
    "end": "1958240"
  },
  {
    "text": "give you an exemption for employee record if it says employee record across the top in big letters and people talk",
    "start": "1958240",
    "end": "1963880"
  },
  {
    "text": "about it that way in the breakroom oh we're going to have to print an employee record for that guy okay then you can",
    "start": "1963880",
    "end": "1969039"
  },
  {
    "text": "call it print employee record but for everything else don't repeat the names",
    "start": "1969039",
    "end": "1974840"
  },
  {
    "text": "one reason that people do is because there'll be a lot of similar things so an employee might have their own name as",
    "start": "1974840",
    "end": "1980320"
  },
  {
    "text": "well as their manager's name and their I don't know Department name and they sort of want to equally decorate all of them",
    "start": "1980320",
    "end": "1987399"
  },
  {
    "text": "maybe in that case but it sounds to me like there's some refactoring needed in that",
    "start": "1987399",
    "end": "1993720"
  },
  {
    "text": "case I mentioned adjectives earlier whether it's member variables or function parameters adjectives are",
    "start": "1994559",
    "end": "2001000"
  },
  {
    "text": "totally your friend if it's just called name I don't know if that's their whole name or just their last name is it first",
    "start": "2001000",
    "end": "2009519"
  },
  {
    "text": "comma last is it last comma first is there spaces between them what about people who have spaces in their names at",
    "start": "2009519",
    "end": "2016159"
  },
  {
    "text": "least if you call it full name I understand you're not breaking it into parts for me this is their whole name",
    "start": "2016159",
    "end": "2021720"
  },
  {
    "text": "same with salary salary per what per month per year per",
    "start": "2021720",
    "end": "2027880"
  },
  {
    "text": "hour I don't like string at the end of strings or int",
    "start": "2027880",
    "end": "2034399"
  },
  {
    "text": "at the beginning of inss or any kind of decoration of type EX except for date and I think again that's because",
    "start": "2034399",
    "end": "2041399"
  },
  {
    "text": "when we talk about things if I were to ask you in conversation what is the name",
    "start": "2041399",
    "end": "2046720"
  },
  {
    "text": "of the customer I wouldn't say uh what's the customer's name",
    "start": "2046720",
    "end": "2052000"
  },
  {
    "text": "String right but I might say what was the ORD placement date so sometimes we",
    "start": "2052000",
    "end": "2059358"
  },
  {
    "text": "do stick date on the ends of things more than any other type but for things that",
    "start": "2059359",
    "end": "2064878"
  },
  {
    "text": "are strings for things that are flags like true false uh don't encode the type",
    "start": "2064879",
    "end": "2070679"
  },
  {
    "text": "in the name talked about uh natural pairs",
    "start": "2070679",
    "end": "2076520"
  },
  {
    "text": "there's another form of of pair issue I I meet this in real",
    "start": "2076520",
    "end": "2081800"
  },
  {
    "text": "code this is terrible we have Max which is shortened and minimum which is not",
    "start": "2081800",
    "end": "2090000"
  },
  {
    "text": "and we have lowercase whatever and capital whatever and it's because they didn't used to be a Max or they didn't",
    "start": "2090000",
    "end": "2096398"
  },
  {
    "text": "used to be a Min right and a different person added the other one but they produce a single artifact which is",
    "start": "2096399",
    "end": "2102800"
  },
  {
    "text": "today's code and today's code doesn't care about what order it was written in or who wrote which parts of it and when",
    "start": "2102800",
    "end": "2109359"
  },
  {
    "text": "these find oh here's Max whatever is there a Min whatever so I search for Minore lowercase whatever don't find it",
    "start": "2109359",
    "end": "2115599"
  },
  {
    "text": "oh apparently there isn't well yeah there is so uh be consistent there also this whatever Max",
    "start": "2115599",
    "end": "2124000"
  },
  {
    "text": "but Min whatever again pick one stick with it or we're consistent within each pair Min",
    "start": "2124000",
    "end": "2131280"
  },
  {
    "text": "temp and Max temp but not between Pairs we have volume underscore Min and volume undor max and this is probably about the",
    "start": "2131280",
    "end": "2138560"
  },
  {
    "text": "person wanting all the volume stuff together rather than all the mins together and then all the Maxes together",
    "start": "2138560",
    "end": "2143839"
  },
  {
    "text": "and I can see that but to the extent that you can have a preference it could be that",
    "start": "2143839",
    "end": "2152359"
  },
  {
    "text": "we always do Min underscore and then the thing it could be that we always do the thing underscore and min",
    "start": "2152359",
    "end": "2158319"
  },
  {
    "text": "I'm not going to have an opinion just don't don't be the first bullet whatever else you",
    "start": "2158319",
    "end": "2165440"
  },
  {
    "text": "do there are certain member functions in your class that either you don't get to",
    "start": "2165560",
    "end": "2170640"
  },
  {
    "text": "choose the name at all or if you give them this name we'll all know what they do so if you have a Constructor and you",
    "start": "2170640",
    "end": "2177359"
  },
  {
    "text": "have a Destructor that actually do stuff right so the Constructor opens the file",
    "start": "2177359",
    "end": "2183160"
  },
  {
    "text": "the destructor closes the file everyone will understand that every one knows what causes Constructors and destructors",
    "start": "2183160",
    "end": "2190079"
  },
  {
    "text": "to run you don't need to explain much but if they're called initialize and tear down you have to and you have to",
    "start": "2190079",
    "end": "2196480"
  },
  {
    "text": "remind people to call them there's also getting set lots of reasons to hate getting set but giving",
    "start": "2196480",
    "end": "2202680"
  },
  {
    "text": "them names like load and uh save are not better uh read fetch load retrieve",
    "start": "2202680",
    "end": "2211240"
  },
  {
    "text": "should not be used for something whose code is return whatever go ahead and",
    "start": "2211240",
    "end": "2216920"
  },
  {
    "text": "call that get whatever Fetch and read and load can be",
    "start": "2216920",
    "end": "2222079"
  },
  {
    "text": "for going over the network or for opening a file or whatever it is searching the database that you need to do that's longer than",
    "start": "2222079",
    "end": "2228800"
  },
  {
    "text": "that people do expect your get thingy to be const if it can't be then maybe you",
    "start": "2228800",
    "end": "2234079"
  },
  {
    "text": "shouldn't call it get thingy right uh I meet students by the way who",
    "start": "2234079",
    "end": "2239960"
  },
  {
    "text": "think that get thingy means prompt the user for a value and save it in the",
    "start": "2239960",
    "end": "2245520"
  },
  {
    "text": "object I don't know why but they do so um be aware that not everyone has the same intuition as everyone",
    "start": "2245520",
    "end": "2252640"
  },
  {
    "text": "else this was real popular when I first started oh we don't have properties because reflection is still five years",
    "start": "2252640",
    "end": "2258480"
  },
  {
    "text": "away it's been five years away for a real long time uh we could do this we could have two functions both called",
    "start": "2258480",
    "end": "2263800"
  },
  {
    "text": "capital T temperature right we're just we're just overloading on the parameters the one that doesn't take any parameters",
    "start": "2263800",
    "end": "2269640"
  },
  {
    "text": "returns you the temperature the one that takes the parameter is the set none of those pesky verbs for",
    "start": "2269640",
    "end": "2274880"
  },
  {
    "text": "us uh you can certainly find people who like to do this you can also find people who really really really hate it you",
    "start": "2274880",
    "end": "2281319"
  },
  {
    "text": "should know which kind of team you're in class Ines en classes scoped Ines",
    "start": "2281319",
    "end": "2288359"
  },
  {
    "text": "whatever generally better than our older style enes because otherwise you end up encoding the an name into it like",
    "start": "2288359",
    "end": "2295040"
  },
  {
    "text": "everyone's got an okay so there's nt Okay SB Okay blah blah blah uh I would rather you didn't repeat",
    "start": "2295040",
    "end": "2302319"
  },
  {
    "text": "the anume name the whole point is that you don't have to repeat the enum name um but this also brings up the situation",
    "start": "2302319",
    "end": "2309160"
  },
  {
    "text": "of enes leaking out so we had that set status which took an application status",
    "start": "2309160",
    "end": "2314960"
  },
  {
    "text": "and now all the code that wants to interact with an application has to understand the application status inum",
    "start": "2314960",
    "end": "2320760"
  },
  {
    "text": "uh that's not always the best choice so sometimes when you're thinking about who's going to consume the enum when you're naming it you actually end up",
    "start": "2320760",
    "end": "2327200"
  },
  {
    "text": "changing your API so that less people have to consume that enum when we switched to approve and deny suddenly",
    "start": "2327200",
    "end": "2333359"
  },
  {
    "text": "nobody cared what the anume was for your possible statuses right this is testing to see if",
    "start": "2333359",
    "end": "2339960"
  },
  {
    "text": "something's approved or not I could call get status and compare it to approved or I could ask if it was",
    "start": "2339960",
    "end": "2346560"
  },
  {
    "text": "approved this is not a hard function to write right you know how it's one line long but you're changing the API you're",
    "start": "2346560",
    "end": "2353480"
  },
  {
    "text": "offering and that's part of thinking about naming local",
    "start": "2353480",
    "end": "2360560"
  },
  {
    "text": "variables uh I didn't used to have this slide and then people would say to me but there's this time when a short variable is the correct answer okay fine",
    "start": "2360560",
    "end": "2367079"
  },
  {
    "text": "let's deal with that uh calling your Loop variable index or current index or",
    "start": "2367079",
    "end": "2373480"
  },
  {
    "text": "position in collection uh is not helping compared to calling it I guaranteed you",
    "start": "2373480",
    "end": "2378720"
  },
  {
    "text": "might not even be correct to use a loop but if you are correct to use a loop",
    "start": "2378720",
    "end": "2384000"
  },
  {
    "text": "having I or j or k in your Loop is not your problem that's not what's wrong with your code if anything",
    "start": "2384000",
    "end": "2389960"
  },
  {
    "text": "is if you're doing scientific calculations you do not take something that's T in the formula in the textbook",
    "start": "2389960",
    "end": "2397040"
  },
  {
    "text": "and call the variable time inside your function or take V and call it velocity",
    "start": "2397040",
    "end": "2402119"
  },
  {
    "text": "super confusing use the notation the formulas use and there's another example I will",
    "start": "2402119",
    "end": "2408400"
  },
  {
    "text": "grant you exemption I'll Grant you and that's when the scope is really tiny so",
    "start": "2408400",
    "end": "2414000"
  },
  {
    "text": "when you're talking about a person you don't say their whole name every time if you're talking about me you might say",
    "start": "2414000",
    "end": "2420280"
  },
  {
    "text": "Kate Gregory the first time and then after a while you might say Kate and then you might say she and it gets shorter and shorter but we all know",
    "start": "2420280",
    "end": "2426520"
  },
  {
    "text": "because of the very small small scope who you're talking about no one thinks you suddenly mean my mother in the middle of the",
    "start": "2426520",
    "end": "2432280"
  },
  {
    "text": "paragraph So if you have a little piece of code like this get next response gives you back some string which we're",
    "start": "2432280",
    "end": "2437359"
  },
  {
    "text": "then going to consume in this W Loop until it's empty and uh then we're never going to look at it again because when",
    "start": "2437359",
    "end": "2443359"
  },
  {
    "text": "we get out of this Loop R is empty it has nothing to offer as it's not useful just being called R kind of tells",
    "start": "2443359",
    "end": "2452119"
  },
  {
    "text": "you that we're never going to look at it again it's a weak signal but it's a signal",
    "start": "2452119",
    "end": "2457839"
  },
  {
    "text": "so if you reserve your single letter kind of throw away variable names for things with tiny Scopes that signal is",
    "start": "2457839",
    "end": "2465200"
  },
  {
    "text": "available to you wouldn't be wrong to have called it responses you know but",
    "start": "2465200",
    "end": "2470720"
  },
  {
    "text": "you can use really small names here those are the exceptions the rest",
    "start": "2470720",
    "end": "2476119"
  },
  {
    "text": "of the time the longer the better variable names should be nouns and they",
    "start": "2476119",
    "end": "2481359"
  },
  {
    "text": "should be dripping in adjectives and I'm offering you some that you may find useful in your travel",
    "start": "2481359",
    "end": "2488079"
  },
  {
    "text": "next employee current order remaining",
    "start": "2488079",
    "end": "2494599"
  },
  {
    "text": "work I hate when people give a name that is nothing but the type employee",
    "start": "2496160",
    "end": "2503920"
  },
  {
    "text": "e like what have I learned about this employee absolutely nothing right a",
    "start": "2503920",
    "end": "2509960"
  },
  {
    "text": "vector of policy policies plural single singular and plural is a",
    "start": "2509960",
    "end": "2516000"
  },
  {
    "text": "is a big deal it it makes grepping really hard for words that change their spelling uh there are also of course",
    "start": "2516000",
    "end": "2521920"
  },
  {
    "text": "words in English that are the same singular and plural like I don't know if any of you would have to do farm management but like sheep is for one",
    "start": "2521920",
    "end": "2529040"
  },
  {
    "text": "sheep and for many sheep and there are other languages in which the natural words don't change when you pluralize",
    "start": "2529040",
    "end": "2534920"
  },
  {
    "text": "them so it's not helpful why do I want a bunch of policies and as for Double D my goodness me uh and and D1 comma D2 comma",
    "start": "2534920",
    "end": "2544040"
  },
  {
    "text": "D3 comma D4 is not better I could retire if I just could get a very small amount of money for every single letter or",
    "start": "2544040",
    "end": "2550720"
  },
  {
    "text": "single letter followed by a number double and I only doubles it would be more than enough I could retire well so",
    "start": "2550720",
    "end": "2558119"
  },
  {
    "text": "there's no information in Double D or employee e don't do",
    "start": "2558119",
    "end": "2564319"
  },
  {
    "text": "that yes polies why look it's on the slide",
    "start": "2564319",
    "end": "2571640"
  },
  {
    "text": "why do you want a bunch of policies are these all the active ones are these the ones that got bought",
    "start": "2571640",
    "end": "2577319"
  },
  {
    "text": "yesterday are these the ones you're going to search through in order to find the thing you're like I don't know right",
    "start": "2577319",
    "end": "2582880"
  },
  {
    "text": "because I made it up because it's on the slide but if you need to make a vector of HS well what are they are they all the",
    "start": "2582880",
    "end": "2588920"
  },
  {
    "text": "HS in the world probably not right so",
    "start": "2588920",
    "end": "2594000"
  },
  {
    "text": "put that in its name the purpose and yes uh people gripping your",
    "start": "2594000",
    "end": "2600440"
  },
  {
    "text": "code uh don't make them hate you you know the only thing worse than no hits",
    "start": "2600440",
    "end": "2606160"
  },
  {
    "text": "is 7,4 42 hits you know um I actually",
    "start": "2606160",
    "end": "2611359"
  },
  {
    "text": "seriously code reviewed some code by someone who went and got all the active let's say tests and put it in a variable",
    "start": "2611359",
    "end": "2618680"
  },
  {
    "text": "called active employees and then dealt with it and then and then returned and I'm like it's",
    "start": "2618680",
    "end": "2625160"
  },
  {
    "text": "it's not employees it's tests yeah but I copied this code from the same function for employees and I don't want to change",
    "start": "2625160",
    "end": "2631200"
  },
  {
    "text": "any of the variable names because I understand it okay well that's that's a thing",
    "start": "2631200",
    "end": "2636559"
  },
  {
    "text": "that's an approach um I wouldn't call it",
    "start": "2636559",
    "end": "2641599"
  },
  {
    "text": "recommended abbreviations generally bad right um ID",
    "start": "2644319",
    "end": "2651440"
  },
  {
    "text": "is almost not an abbreviation info as in contact info order info almost not an",
    "start": "2651440",
    "end": "2657599"
  },
  {
    "text": "abbreviation I will give you exemptions for those two but that's about the end of",
    "start": "2657599",
    "end": "2663240"
  },
  {
    "text": "it a lot of people say well I'll just go with the first syllable like e MP M for",
    "start": "2663240",
    "end": "2669079"
  },
  {
    "text": "employee a lot of these techniques are kind of righton they're very easy to",
    "start": "2669079",
    "end": "2674160"
  },
  {
    "text": "generate these names but they're kind kind of a little harder to go the other direction of reading the name and",
    "start": "2674160",
    "end": "2681200"
  },
  {
    "text": "understanding what it was meant to be take these any guesses I these are all real",
    "start": "2681200",
    "end": "2689240"
  },
  {
    "text": "they were all in the same program uh they are obviously uh annual revenue total income and by the way",
    "start": "2689240",
    "end": "2697280"
  },
  {
    "text": "revenue and income were exactly the same thing in this program some of the developers like to call it revenue and some of the developers like to call it",
    "start": "2697280",
    "end": "2703280"
  },
  {
    "text": "income there was no well that's before expenses or before taxes no no just two words for the same thing and RD uh",
    "start": "2703280",
    "end": "2710200"
  },
  {
    "text": "Revenue difference or perhaps Revenue Delta uh yeah don't do that don't be that person vowels as they say are",
    "start": "2710200",
    "end": "2718800"
  },
  {
    "text": "free I mean I did start programming in languages where we were limited to how many characters could be in a variable",
    "start": "2718800",
    "end": "2725720"
  },
  {
    "text": "Name six or eight if you were lucky these restrictions no longer hold just",
    "start": "2725720",
    "end": "2731200"
  },
  {
    "text": "glory in it go ahead and have an 11 letter name if you want templates and if you're not a C++",
    "start": "2731200",
    "end": "2738000"
  },
  {
    "text": "person a generics in your language basically look if you're writing a templated function you're writing a",
    "start": "2738000",
    "end": "2743760"
  },
  {
    "text": "function so I talked about how to name functions if you're writing a templated class I've talked about how to name",
    "start": "2743760",
    "end": "2749760"
  },
  {
    "text": "classes but then there's the type names so first of all there's this hands",
    "start": "2749760",
    "end": "2756280"
  },
  {
    "text": "up if you're a class T person n type name te oh yeah the tide",
    "start": "2756280",
    "end": "2763599"
  },
  {
    "text": "has term we're all type name te's more typing it's more letters compiler does not care like at",
    "start": "2763599",
    "end": "2772319"
  },
  {
    "text": "all I do know people who are like if it's okay to give you an INT I'll go",
    "start": "2772319",
    "end": "2777839"
  },
  {
    "text": "type name but if it's going to have member functions that I'm intend to call I'm going to go class like please we",
    "start": "2777839",
    "end": "2784280"
  },
  {
    "text": "have Concepts you don't need to do that but what",
    "start": "2784280",
    "end": "2789760"
  },
  {
    "text": "about the type names themselves good old T well if there's only one sure T is",
    "start": "2789760",
    "end": "2796160"
  },
  {
    "text": "Oliver in here that's his mug cup of tea um but the minute it's",
    "start": "2796160",
    "end": "2802880"
  },
  {
    "text": "two you got to be meaningful I know you've probably seen examples where it's t and u t and v t u",
    "start": "2802880",
    "end": "2811440"
  },
  {
    "text": "and v but we're back to Nicole and the newbies can shorten them down once they get it it's not okay yes",
    "start": "2811440",
    "end": "2820160"
  },
  {
    "text": "woulding you could in fact be meaningful with just one absolutely if you would like to be meaningful with just one",
    "start": "2820160",
    "end": "2825760"
  },
  {
    "text": "that's great um I T is so Universal as the this is for anything but if in fact",
    "start": "2825760",
    "end": "2833240"
  },
  {
    "text": "there's only one kind of thing it could be then that argues away from T and towards meaningful names for",
    "start": "2833240",
    "end": "2839599"
  },
  {
    "text": "sure uh this is uh from the Microsoft implementation of the centered Library uh we have basic string and you see that",
    "start": "2839599",
    "end": "2847200"
  },
  {
    "text": "it's uh LM traits and aloc so they're very very space constrained when they're",
    "start": "2847200",
    "end": "2852760"
  },
  {
    "text": "implementing the standard library but they've spent themselves on you know five entire characters now you can't",
    "start": "2852760",
    "end": "2859839"
  },
  {
    "text": "copy this you can't use underscore capital letter okay but you could leave off the underscore and your thing could",
    "start": "2859839",
    "end": "2865680"
  },
  {
    "text": "have one class that's an LM one class that's a trait one class that's an Alec and the second one is Vector where we",
    "start": "2865680",
    "end": "2871760"
  },
  {
    "text": "have Tai and Alec for for the type and the allocator it just makes every everything",
    "start": "2871760",
    "end": "2877160"
  },
  {
    "text": "easier to understand now if C+ plus had a model",
    "start": "2877160",
    "end": "2886680"
  },
  {
    "text": "while it would probably be it's your foot but if we were allowed two models the second model would be it depends but the answer to this question",
    "start": "2886680",
    "end": "2894400"
  },
  {
    "text": "is not it depends there is one one answer to the question when does naming",
    "start": "2894400",
    "end": "2902240"
  },
  {
    "text": "happen when you know what it is now that",
    "start": "2902240",
    "end": "2907359"
  },
  {
    "text": "depends so sometimes before you write the code you're designing it and you're like every employee is associated with a",
    "start": "2907359",
    "end": "2914240"
  },
  {
    "text": "department those are names probably the names of classes when you're writing out an algorithm we're going to take all the",
    "start": "2914240",
    "end": "2920280"
  },
  {
    "text": "items figure out their price check their status you're naming",
    "start": "2920280",
    "end": "2926400"
  },
  {
    "text": "pieces but it's pretty common to me that I've been elbows deep in code for a long",
    "start": "2926400",
    "end": "2931960"
  },
  {
    "text": "time when I suddenly understand that D4 is the foreign sales tax that's why it's",
    "start": "2931960",
    "end": "2937160"
  },
  {
    "text": "almost never set and then I rename it from D4 to foreign sales",
    "start": "2937160",
    "end": "2942319"
  },
  {
    "text": "tax you should never write yourself a note to fix a name later the moment you",
    "start": "2942319",
    "end": "2948720"
  },
  {
    "text": "know what it is you should fix its name figure out how to work the tools you",
    "start": "2948720",
    "end": "2953760"
  },
  {
    "text": "have fix names another another tweet I downloaded",
    "start": "2953760",
    "end": "2961480"
  },
  {
    "text": "a mobile game the other day they used to call their magic users Mages but they've changed that I know they just did find",
    "start": "2961480",
    "end": "2968200"
  },
  {
    "text": "and replace so damage became da",
    "start": "2968200",
    "end": "2972520"
  },
  {
    "text": "wizard the first time you go to change a name and you don't use your refactoring tool I want you to think the wizard and",
    "start": "2973480",
    "end": "2980559"
  },
  {
    "text": "use a refactoring tool as you saw with set status a name",
    "start": "2980559",
    "end": "2988280"
  },
  {
    "text": "can be right and then over time it drifts away from being right that's when",
    "start": "2988280",
    "end": "2993799"
  },
  {
    "text": "you change it you know what it used to be now you know what it is today you give it a new name",
    "start": "2993799",
    "end": "3000920"
  },
  {
    "text": "today especially when you're refactoring you don't always know what a name is going to end up being but it can also",
    "start": "3002040",
    "end": "3008160"
  },
  {
    "text": "happen when you're building from scratch we're going to have to process all the orders somehow process is a terrible",
    "start": "3008160",
    "end": "3015040"
  },
  {
    "text": "name but it can be a temporary name as long as you remember to get it its",
    "start": "3015040",
    "end": "3020720"
  },
  {
    "text": "proper name eventually do not",
    "start": "3020720",
    "end": "3027839"
  },
  {
    "text": "give it a rude name that you hope will be caught by for example legal review",
    "start": "3027839",
    "end": "3033200"
  },
  {
    "text": "before you go live um first of all they're not always caught and secondly that's an incredibly",
    "start": "3033200",
    "end": "3040160"
  },
  {
    "text": "expensive catch okay uh do not call your function Steve as an",
    "start": "3040160",
    "end": "3046359"
  },
  {
    "text": "idiot if you haven't seen emotional code um there there's a there's a function I",
    "start": "3046400",
    "end": "3052839"
  },
  {
    "text": "refer to there as uh undo Steve's nonsense but it was a a somewhat earthier word than nonsense in the",
    "start": "3052839",
    "end": "3059200"
  },
  {
    "text": "original um don't do that okay especially don't do that as a way to make sure you remember to give its name",
    "start": "3059200",
    "end": "3065200"
  },
  {
    "text": "do some stupid no don't do that there's nothing you can do in your",
    "start": "3065200",
    "end": "3071040"
  },
  {
    "text": "code to help you remember to come back and change your code you can leave comments you can do this you can do that",
    "start": "3071040",
    "end": "3076799"
  },
  {
    "text": "that those don't work you got to go outside your code into however you remember to do things to-do list jira I",
    "start": "3076799",
    "end": "3084440"
  },
  {
    "text": "don't know something and give yourself a task to give it its proper",
    "start": "3084440",
    "end": "3090160"
  },
  {
    "text": "name here's what happens to me I'll come into a shop where people don't",
    "start": "3090160",
    "end": "3096000"
  },
  {
    "text": "understand their code and can't change it because they don't understand it and I'll say wow process is 5,000 lines long",
    "start": "3096000",
    "end": "3101880"
  },
  {
    "text": "and they say yes it sounds like it's the heart of your business absolutely this is where the magic happens that's great",
    "start": "3101880",
    "end": "3108200"
  },
  {
    "text": "what does it do we don't know and they don't like nobody knows what it does and it's 5,000 lines long",
    "start": "3108200",
    "end": "3115440"
  },
  {
    "text": "and and the reason it's called process is because they don't know what it actually does when you say we can't move on until",
    "start": "3115440",
    "end": "3123920"
  },
  {
    "text": "this is called whatever the heck it's called and Main engine Loop is not a better",
    "start": "3123920",
    "end": "3129079"
  },
  {
    "text": "substitute they have to understand it so somebody goes through and says well I",
    "start": "3129079",
    "end": "3134200"
  },
  {
    "text": "know that these five function calls at the beginning are for this and someone else says well this 100 lines is for",
    "start": "3134200",
    "end": "3140559"
  },
  {
    "text": "that and as they come to understand the pieces of it they come to understand it",
    "start": "3140559",
    "end": "3145599"
  },
  {
    "text": "and they can name it it takes a while but it's worth",
    "start": "3145599",
    "end": "3152400"
  },
  {
    "text": "doing things are generally hard to name because they're the wrong",
    "start": "3152400",
    "end": "3157880"
  },
  {
    "text": "size if you insist that it's not okay to just call it stuff and thing and data",
    "start": "3157880",
    "end": "3166040"
  },
  {
    "text": "and process and update that also makes things the right",
    "start": "3166040",
    "end": "3171079"
  },
  {
    "text": "size just by insisting on names without coming in with opinions about what right size might be by only insisting on the",
    "start": "3171079",
    "end": "3178200"
  },
  {
    "text": "name stuff becomes the right size and then the code tells a story first we",
    "start": "3178200",
    "end": "3183680"
  },
  {
    "text": "check for permissions then we load then we send the notifications that makes",
    "start": "3183680",
    "end": "3190040"
  },
  {
    "text": "sense if I insist your code needs to tell me a story it makes people give me",
    "start": "3190040",
    "end": "3195280"
  },
  {
    "text": "good names and the story is actually the important",
    "start": "3195280",
    "end": "3200798"
  },
  {
    "text": "part the number one thing you can do to become a better Namer is to",
    "start": "3203119",
    "end": "3208520"
  },
  {
    "text": "care things are called Steve's nonsense and process and stuff and leftovers and",
    "start": "3208520",
    "end": "3214960"
  },
  {
    "text": "miscellaneous because the person who's writing it doesn't have time to care today if you think about the reason this",
    "start": "3214960",
    "end": "3222799"
  },
  {
    "text": "class exists the reason this function exists the reason this variable exists",
    "start": "3222799",
    "end": "3229040"
  },
  {
    "text": "then they're pretty easy to name why do I need a variable and I'm going to initialize an employee what's that all",
    "start": "3229040",
    "end": "3235760"
  },
  {
    "text": "about is this a new employee I'm going to add to the database oh I guess I just named my variable it's okay if you can't come up",
    "start": "3235760",
    "end": "3243000"
  },
  {
    "text": "with a name the moment you first write the thing but you must fix it later it's",
    "start": "3243000",
    "end": "3249520"
  },
  {
    "text": "perfectly normal for things to get their proper names later but you must give them their proper names",
    "start": "3249520",
    "end": "3256599"
  },
  {
    "text": "later finally demand good names every time no more ABC no more F and bar bar",
    "start": "3257359",
    "end": "3265720"
  },
  {
    "text": "real name every time when you're doing it when other people are doing it even on slides",
    "start": "3265720",
    "end": "3272400"
  },
  {
    "text": "even in the documentation examples even I say as though those aren't the places",
    "start": "3272400",
    "end": "3277799"
  },
  {
    "text": "everybody copies from for the rest of time okay demand it fixed names when you",
    "start": "3277799",
    "end": "3284319"
  },
  {
    "text": "find out the name is not matching the identity whoa this is the outstanding",
    "start": "3284319",
    "end": "3289880"
  },
  {
    "text": "total balance seems like it should be called outstanding total balance and not f11",
    "start": "3289880",
    "end": "3297680"
  },
  {
    "text": "if you change it change its name as well and be",
    "start": "3297680",
    "end": "3303720"
  },
  {
    "text": "consistent that will make everything easier for people who are trying to decipher these like messages from the",
    "start": "3303720",
    "end": "3309799"
  },
  {
    "text": "past that the names are because naming is hard but we can and we should do it",
    "start": "3309799",
    "end": "3316799"
  },
  {
    "text": "better please do thank you",
    "start": "3316799",
    "end": "3321640"
  },
  {
    "text": "I have four and a half minutes for questions but you're also welcome to approach me one-on-one afterwards",
    "start": "3327680",
    "end": "3333280"
  },
  {
    "text": "hi",
    "start": "3333280",
    "end": "3336280"
  },
  {
    "text": "Wonder because if the formula is the formula it's been memorized as you know",
    "start": "3338319",
    "end": "3344599"
  },
  {
    "text": "T equals V blah blah blah if you're in a scientific project",
    "start": "3344599",
    "end": "3349799"
  },
  {
    "text": "by the scientist who told you the formula it's it's not hard for acceleration time and velocity maybe you would switch those out but if you have",
    "start": "3349799",
    "end": "3356039"
  },
  {
    "text": "something something like a distillation tower that you're simulating uh it's entirely possible that some of the people don't share your opinion about",
    "start": "3356039",
    "end": "3362839"
  },
  {
    "text": "what the letters stand for or just don't think that way they'd be like what's the rx2 of this and you're like I don't know",
    "start": "3362839",
    "end": "3368079"
  },
  {
    "text": "I only have a re reaction exchange Delta right so you're making lookup tables if",
    "start": "3368079",
    "end": "3373200"
  },
  {
    "text": "someone wants to compare your code to a formula the notation should be the same",
    "start": "3373200",
    "end": "3378480"
  },
  {
    "text": "now if there isn't a scientific formula and it's just everybody knows that density is you know I don't know weight",
    "start": "3378480",
    "end": "3384200"
  },
  {
    "text": "divided by volume sure spell them out that's fine but when there is a an official scientific formula that's being",
    "start": "3384200",
    "end": "3390039"
  },
  {
    "text": "implemented in the code the code should match that",
    "start": "3390039",
    "end": "3395640"
  },
  {
    "text": "yeah hi not sure if you mention it but what is your take on units the name",
    "start": "3396599",
    "end": "3404160"
  },
  {
    "text": "like yeah units in the name so um calling it something like contract",
    "start": "3404160",
    "end": "3410680"
  },
  {
    "text": "length days is better than just calling it contract length and it being an integer",
    "start": "3410680",
    "end": "3416799"
  },
  {
    "text": "but it's not your only solution specifically for time like use Chrono right and then you can literally",
    "start": "3416799",
    "end": "3422200"
  },
  {
    "text": "represent 30 days or one year or whatever you want to represent in the type if it's like meters versus",
    "start": "3422200",
    "end": "3428599"
  },
  {
    "text": "kilograms or whatever uh and and you don't want to go all the way to like a strong typed Library where it's not",
    "start": "3428599",
    "end": "3434960"
  },
  {
    "text": "possible to add meters and kilograms because they're different types then uh maybe put the the type in the name like",
    "start": "3434960",
    "end": "3440720"
  },
  {
    "text": "that but it's it's um it's not the best solution to the problem I mean you can argue like annual",
    "start": "3440720",
    "end": "3446760"
  },
  {
    "text": "salary versus salary is putting the units right dollars per year dollars per month so it's not always wrong but it",
    "start": "3446760",
    "end": "3453000"
  },
  {
    "text": "may indicate that you have a bigger problem that you need to jack another way",
    "start": "3453000",
    "end": "3459400"
  },
  {
    "text": "hi right so units like whether this is is radians versus degrees Fahrenheit",
    "start": "3469160",
    "end": "3474400"
  },
  {
    "text": "versus Celsius like if you have one thing in in your whole system that has that distinction then",
    "start": "3474400",
    "end": "3481680"
  },
  {
    "text": "maybe names alone will take care of it but if you're building like an entire like graphical library and you're",
    "start": "3481680",
    "end": "3487440"
  },
  {
    "text": "relying just on prefixes and suffixes in your variable names that's probably not a great strategy right so that's a very",
    "start": "3487440",
    "end": "3493920"
  },
  {
    "text": "it depends answer but whenever I start seeing these type decorations and units as a kind of type I'm looking for a",
    "start": "3493920",
    "end": "3501039"
  },
  {
    "text": "bigger picture problem now not everything needs a bigger picture but if it's pervasive then you would be better off using using some kind of a framework",
    "start": "3501039",
    "end": "3507799"
  },
  {
    "text": "of strong types rather than name decorations yeah",
    "start": "3507799",
    "end": "3514119"
  },
  {
    "text": "hi love name so I I love name spaces",
    "start": "3515200",
    "end": "3522880"
  },
  {
    "text": "um I'm me not say don't overdo it but I've met very few people who actually overdo it most people you're lucky if",
    "start": "3522880",
    "end": "3528760"
  },
  {
    "text": "they put their whole thing in one name space which is the name of their project um um if you do it too much um then it's",
    "start": "3528760",
    "end": "3535880"
  },
  {
    "text": "not not just that it's more typing and more reading but people might get confused especially if you're doing it because there are name collisions so",
    "start": "3535880",
    "end": "3543400"
  },
  {
    "text": "like right now with uh stood whatever and stood ranges whatever that's uncomfortable to me because if people",
    "start": "3543400",
    "end": "3549839"
  },
  {
    "text": "put the usings in then I don't know which literally which sort they're calling right uh but if you don't put",
    "start": "3549839",
    "end": "3555400"
  },
  {
    "text": "the things in then you're typing the whole names out so don't break things down too small I would definitely say",
    "start": "3555400",
    "end": "3560960"
  },
  {
    "text": "that yeah hi yeah I guess I have two comments",
    "start": "3560960",
    "end": "3566880"
  },
  {
    "text": "or may something clarify was the uh abstraction",
    "start": "3566880",
    "end": "3575319"
  },
  {
    "text": "slide you had where I was just thinking that maybe there's quite a lot of computing well",
    "start": "3575319",
    "end": "3583880"
  },
  {
    "text": "ush yes window right pointer so on",
    "start": "3587319",
    "end": "3592480"
  },
  {
    "text": "network say used to be something you did with money at some point there's sort of this well it's sort of a metaphor but",
    "start": "3592480",
    "end": "3598920"
  },
  {
    "text": "it's a well used metaphor sometimes the metaphors outlive um so you know the the",
    "start": "3598920",
    "end": "3605160"
  },
  {
    "text": "the save icon is like a floppy disc uh and have any of some of you have seen a",
    "start": "3605160",
    "end": "3611200"
  },
  {
    "text": "floppy disc but some of you have not right uh but that's still we just recognize it as the save icon so I think",
    "start": "3611200",
    "end": "3617640"
  },
  {
    "text": "the case of window and button and so forth and so on that's that's well established um second was I I work in",
    "start": "3617640",
    "end": "3624880"
  },
  {
    "text": "projects scientist and there's there's kind of this tension where like you",
    "start": "3624880",
    "end": "3631200"
  },
  {
    "text": "mentioned that you they they very much would like to Fe T instead of time and row instead of density and so on but",
    "start": "3631200",
    "end": "3638200"
  },
  {
    "text": "then this name sort of crosses a boundary and suddenly it's not appropriate anymore you kind of have this fight about No it should be wrong",
    "start": "3638200",
    "end": "3644760"
  },
  {
    "text": "no no please now we say so I don't know if you have any it kind of happens",
    "start": "3644760",
    "end": "3650119"
  },
  {
    "text": "organically where so this may happen with Scientists where they they would argue about calling something density",
    "start": "3650119",
    "end": "3656359"
  },
  {
    "text": "versus calling it row what I ask is like how's the conversation going to go when there's a bug and somebody phones",
    "start": "3656359",
    "end": "3662480"
  },
  {
    "text": "somebody and they're going through it does anyone say well what's its row because if they do then I I want it to be called row everywhere but if but if",
    "start": "3662480",
    "end": "3669520"
  },
  {
    "text": "they are looking at a report and it says density across the top of the column of the report then that kind of argues for",
    "start": "3669520",
    "end": "3675000"
  },
  {
    "text": "it being called density so um and there maybe there's a boundary maybe it's called this in the UI layer and actually",
    "start": "3675000",
    "end": "3680680"
  },
  {
    "text": "called something different in the in the engine layer but then hopefully we have a marshalling layer of",
    "start": "3680680",
    "end": "3686720"
  },
  {
    "text": "to to sort that out um because these names do persist uh throughout uh many",
    "start": "3686720",
    "end": "3692359"
  },
  {
    "text": "levels of conversation for sure uh you're welcome to come and talk to me more one-on-one but now I'm going",
    "start": "3692359",
    "end": "3698760"
  },
  {
    "text": "to free you for a break and thank you for your time [Applause]",
    "start": "3698760",
    "end": "3708109"
  }
]