[
  {
    "start": "0",
    "end": "169000"
  },
  {
    "text": "so I must have found the dedicated front-end developers to be here 9:00",
    "start": "4050",
    "end": "10030"
  },
  {
    "text": "a.m. when John skeet is talking y'all are I you're all heroes I really",
    "start": "10030",
    "end": "16900"
  },
  {
    "text": "appreciate you being here I hope I will make it worth your while this is a subject very near and dear to my heart",
    "start": "16900",
    "end": "23439"
  },
  {
    "text": "that I've suffered through a lot of pain blood sweat and tears put together material like this",
    "start": "23439",
    "end": "30539"
  },
  {
    "text": "incidentally how I'm assuming all of you do some degree of front-end if you're here how many of you do angularjs or",
    "start": "30539",
    "end": "41110"
  },
  {
    "text": "angular at all okay okay great because I'll the last third of this talk",
    "start": "41110",
    "end": "46660"
  },
  {
    "text": "is pretty in the weeds of angularjs - angular so I was gonna temper it",
    "start": "46660",
    "end": "52750"
  },
  {
    "text": "accordingly how many of you are either starting a migration or in the middle of",
    "start": "52750",
    "end": "59170"
  },
  {
    "text": "a migration I figured if you're dedicated enough to come to the first session on the last day then that's what",
    "start": "59170",
    "end": "66160"
  },
  {
    "text": "I love about these these migration talks is it's a very like guttural visceral experience to have to migrate a big",
    "start": "66160",
    "end": "72490"
  },
  {
    "text": "habit so no matter the size of the crowd it's always a very emotional subject and",
    "start": "72490",
    "end": "79960"
  },
  {
    "text": "that's very effective so I'm glad you're here so we're gonna talk about modernizing",
    "start": "79960",
    "end": "86740"
  },
  {
    "text": "large front ends with web components alternative title making new shiny",
    "start": "86740",
    "end": "91870"
  },
  {
    "text": "things work with old dusty things so I I",
    "start": "91870",
    "end": "98110"
  },
  {
    "text": "live in the northwest corner of America and I live on a plot of land in the",
    "start": "98110",
    "end": "104800"
  },
  {
    "text": "middle of a forest and my primary source of heat is this wood stove here and so",
    "start": "104800",
    "end": "110560"
  },
  {
    "text": "every morning for about six months of the year I have to build a fire to heat my house and in making hundreds of these",
    "start": "110560",
    "end": "118870"
  },
  {
    "text": "fires day after day I've learned this valuable lesson that the type of",
    "start": "118870",
    "end": "125530"
  },
  {
    "text": "kindling and the way I arrange the kindling at the start of the morning determines the life of the fire for the",
    "start": "125530",
    "end": "133030"
  },
  {
    "text": "rest of the day basically the the starting point of building the fire I can keep it going if I do it right I",
    "start": "133030",
    "end": "139930"
  },
  {
    "text": "can keep it going as long as I want cuz I've got the right bed of coals and I'm just dorky enough of a person to",
    "start": "139930",
    "end": "146470"
  },
  {
    "text": "extrapolate lessons about software development from fire building and and so I draw a lot of parallels to that",
    "start": "146470",
    "end": "153069"
  },
  {
    "text": "with large-scale reef actors come for the Tech Talks stay for the fire",
    "start": "153069",
    "end": "159099"
  },
  {
    "text": "building tips but the thing about large-scale reef actors are very",
    "start": "159099",
    "end": "164470"
  },
  {
    "text": "difficult and messy and complex and the interesting thing is the figuring out",
    "start": "164470",
    "end": "171220"
  },
  {
    "start": "169000",
    "end": "169000"
  },
  {
    "text": "the architecture from the beginning is the most important step because it ends",
    "start": "171220",
    "end": "176319"
  },
  {
    "text": "up determining a lot of what follows and you might make mistakes down the road",
    "start": "176319",
    "end": "182709"
  },
  {
    "text": "that are difficult to come back from so that's that's what we're going to talk about today in in different in different",
    "start": "182709",
    "end": "190230"
  },
  {
    "text": "sub terrain so I'm Sam julene I am a",
    "start": "190230",
    "end": "195519"
  },
  {
    "text": "senior developer advocate engineer which is a very long title for basically developer relations at auth0 were a",
    "start": "195519",
    "end": "202319"
  },
  {
    "text": "identity management and basically identity as a service company focusing",
    "start": "202319",
    "end": "208000"
  },
  {
    "text": "on the authentication authorization this talk has nothing to do with that today because my other passion is angular and",
    "start": "208000",
    "end": "216370"
  },
  {
    "text": "angularjs upgrades and things like that I'm also an angular Google developer expert and part of this collaborators",
    "start": "216370",
    "end": "222639"
  },
  {
    "text": "program for angular where I work with the angular team and sort of have a sort of part of the outer circle of the",
    "start": "222639",
    "end": "229449"
  },
  {
    "text": "angular team basically not a Googler but work with them and then I care so much",
    "start": "229449",
    "end": "234940"
  },
  {
    "text": "about ng upgrade that I built this massive video course on it called upgrading angularjs comm that's all",
    "start": "234940",
    "end": "241359"
  },
  {
    "text": "about ng upgrade specifically not angular elements what we're talking about today I also make videos for think",
    "start": "241359",
    "end": "247720"
  },
  {
    "text": "stir which is another platform and egghead and like I said I live on a small organic farm in the rural Pacific",
    "start": "247720",
    "end": "254560"
  },
  {
    "text": "Northwest of America so what we're gonna do today this morning is a sort of a a",
    "start": "254560",
    "end": "261030"
  },
  {
    "text": "series of zooms in on this subject we're gonna start at a very high level and",
    "start": "261030",
    "end": "266409"
  },
  {
    "text": "zoom our way in so there's three sections of this we've got sort of just abroad like laying the",
    "start": "266409",
    "end": "272840"
  },
  {
    "text": "foundation of front-end philosophy and evolution of front-end theirs we're they",
    "start": "272840",
    "end": "279350"
  },
  {
    "text": "gonna zoom in a little bit to the web component ecosystem get a feel for what",
    "start": "279350",
    "end": "285050"
  },
  {
    "text": "what web components are and how they came to be and things like that and then we're gonna zoom in really close and",
    "start": "285050",
    "end": "291380"
  },
  {
    "text": "talk about specifically angular elements for angularjs to angular so this is sort",
    "start": "291380",
    "end": "297380"
  },
  {
    "text": "of like the view from the plane and then the view from the parachute and then the view for when you crash through the roof",
    "start": "297380",
    "end": "303290"
  },
  {
    "text": "of the grocery store and you're in the middle of the boxes of cereal and things like that so first let's just lay a little bit of",
    "start": "303290",
    "end": "310160"
  },
  {
    "start": "308000",
    "end": "308000"
  },
  {
    "text": "ground work on modern front ends since this is usually more of a back-end heavy",
    "start": "310160",
    "end": "316070"
  },
  {
    "text": "conference more of a dotnet c-sharp II kind of conference which is my background as well from before I got",
    "start": "316070",
    "end": "321560"
  },
  {
    "text": "into front-end stuff so traditionally we sort of had this very distinct separation between the server and the",
    "start": "321560",
    "end": "328820"
  },
  {
    "text": "view layer you probably a lot of you here are familiar with the concept of",
    "start": "328820",
    "end": "334310"
  },
  {
    "text": "like dotnet MVC with like razor template it's kind of a very clear boundary",
    "start": "334310",
    "end": "340910"
  },
  {
    "text": "between the business logic and the view layer and then over the last several",
    "start": "340910",
    "end": "347270"
  },
  {
    "text": "years these things called single page applications came along and really kind",
    "start": "347270",
    "end": "352610"
  },
  {
    "start": "348000",
    "end": "348000"
  },
  {
    "text": "of messed up that whole scenario and things got really jumbled really quickly where it became very ambiguous where",
    "start": "352610",
    "end": "359930"
  },
  {
    "text": "business logic should live should it live jumbled in with the front-end code or still on the server and things got a",
    "start": "359930",
    "end": "367850"
  },
  {
    "text": "little complicated and for a lot of the early days of single page applications like any of you familiar with like",
    "start": "367850",
    "end": "375020"
  },
  {
    "text": "knockout and backbone and things like that there's a lot of mixing of the",
    "start": "375020",
    "end": "382160"
  },
  {
    "text": "business logic with the templating and things like that that made it very hard to understand that we are that there was",
    "start": "382160",
    "end": "388700"
  },
  {
    "start": "385000",
    "end": "385000"
  },
  {
    "text": "a time where we really focused on Dom manipulation you know jQuery was a huge thing I remember working on a project",
    "start": "388700",
    "end": "394280"
  },
  {
    "text": "for a utility company that used jQuery and there's a very kind of procedural like go get this data and you",
    "start": "394280",
    "end": "401570"
  },
  {
    "text": "No if this financial rule is true then add this block to the page and things like that so that also sort of",
    "start": "401570",
    "end": "408350"
  },
  {
    "text": "contributed to this muddling of the business logic in the view layer then",
    "start": "408350",
    "end": "414410"
  },
  {
    "text": "somewhere along the line a bunch of people remembered functional programming and sort of said like what if we applied",
    "start": "414410",
    "end": "420860"
  },
  {
    "text": "these principles of functional programming which have been around for decades to the front end and react was",
    "start": "420860",
    "end": "426290"
  },
  {
    "text": "really the first group to popularize this at Facebook where they said like what if we have these inputs and then we",
    "start": "426290",
    "end": "432590"
  },
  {
    "text": "have this render logic and then we generate these views and that sort of helped us come back full circle to this",
    "start": "432590",
    "end": "438230"
  },
  {
    "text": "idea of having the business logic and the view layer it just became a really different kind of scenario than we're",
    "start": "438230",
    "end": "444800"
  },
  {
    "text": "used to now it's more like having you know JavaScript in api's and then your",
    "start": "444800",
    "end": "451400"
  },
  {
    "text": "your view layer of your JavaScript HTML CSS maybe JSX if you're doing react the",
    "start": "451400",
    "end": "458600"
  },
  {
    "text": "difference is that now we sort of have like services or or es6 classes on the",
    "start": "458600",
    "end": "464360"
  },
  {
    "text": "front end that are holding all of the business logic and then in both scenarios there's sort of this goal to",
    "start": "464360",
    "end": "470300"
  },
  {
    "text": "be as framework agnostic as possible and keep things living in JavaScript if",
    "start": "470300",
    "end": "475700"
  },
  {
    "text": "they're on the front end that way we avoid having to dig out of these proprietary languages or frameworks if",
    "start": "475700",
    "end": "483290"
  },
  {
    "text": "the if things change which we know on the front end change rapidly so we're",
    "start": "483290",
    "end": "488480"
  },
  {
    "text": "back to this idea of JavaScript and api's which will be the business logic and then we have the view layer and",
    "start": "488480",
    "end": "494960"
  },
  {
    "text": "what's nice about this is now with these modern frameworks it becomes much easier to switch if you've you've got angular",
    "start": "494960",
    "end": "502280"
  },
  {
    "text": "or maybe you're using react or next week when component R on 2050 comes out and",
    "start": "502280",
    "end": "508220"
  },
  {
    "text": "we have to all switch over all of our applications to the new JavaScript framework if we've been practicing these",
    "start": "508220",
    "end": "514159"
  },
  {
    "text": "things of trying to isolate our business logic into just plain JavaScript and use",
    "start": "514160",
    "end": "521000"
  },
  {
    "text": "inputs and outputs for the view layer we should have an easier time so modern",
    "start": "521000",
    "end": "527180"
  },
  {
    "text": "JavaScript frameworks like angular and react and view have a little bit more of this philosophy basically sometimes they",
    "start": "527180",
    "end": "538160"
  },
  {
    "text": "look a little bit differently angular is very object oriented react is very heavily influenced by functional",
    "start": "538160",
    "end": "543830"
  },
  {
    "text": "programming but the basic idea is roughly roughly the same and both of",
    "start": "543830",
    "end": "549830"
  },
  {
    "text": "them now sort of promote this idea of not having a lot of business logic in your views other than sort of mapping over objects or things like that or sort",
    "start": "549830",
    "end": "557150"
  },
  {
    "text": "of having conditional statements things like that so that's sort of the ecosystem in which web components was",
    "start": "557150",
    "end": "563600"
  },
  {
    "text": "birthed and web components have this as sort of a core philosophy behind them",
    "start": "563600",
    "end": "568960"
  },
  {
    "text": "because they're basically just plain JavaScript in HTML at the end of the day",
    "start": "568960",
    "end": "574340"
  },
  {
    "text": "so what what are web components web components are this is the definition",
    "start": "574340",
    "end": "580190"
  },
  {
    "start": "575000",
    "end": "575000"
  },
  {
    "text": "from Mozilla developer Network but really all well that you need to take away from it is that it's reusable",
    "start": "580190",
    "end": "586340"
  },
  {
    "text": "custom elements and then the functionality is encapsulated away from",
    "start": "586340",
    "end": "592250"
  },
  {
    "text": "the rest of the code they're sort of like these little black boxes that you put inputs and outputs out of and nobody",
    "start": "592250",
    "end": "600050"
  },
  {
    "text": "needs to know what's going on inside of them basically so before I get to the",
    "start": "600050",
    "end": "605570"
  },
  {
    "start": "603000",
    "end": "603000"
  },
  {
    "text": "actual code of web components and what they look like what might be some times",
    "start": "605570",
    "end": "610670"
  },
  {
    "text": "that you would use these there's a few very popular use cases for them the",
    "start": "610670",
    "end": "616070"
  },
  {
    "start": "615000",
    "end": "615000"
  },
  {
    "text": "first is something called micro front-ends and this is actually probably a very familiar pattern to you that you didn't know had a very cool hip name to",
    "start": "616070",
    "end": "623600"
  },
  {
    "text": "it for example maybe you've done something like this where you have Microsoft CRM or SharePoint or something like that and",
    "start": "623600",
    "end": "630530"
  },
  {
    "text": "you stick tiny you know jQuery front ends or angularjs front ends or",
    "start": "630530",
    "end": "636170"
  },
  {
    "text": "something like that to display some data or something you can do the same thing with web components now basically where",
    "start": "636170",
    "end": "641960"
  },
  {
    "text": "you have a web component here and a web component there and a web component there and that's one example you could",
    "start": "641960",
    "end": "647480"
  },
  {
    "text": "also a micro front-end might also be a front-end for a micro service it's a very small self-contained front-end so",
    "start": "647480",
    "end": "654500"
  },
  {
    "text": "that's one use case another really popular way to use web components is to create shared component libraries for",
    "start": "654500",
    "end": "661610"
  },
  {
    "start": "656000",
    "end": "656000"
  },
  {
    "text": "your UI so for example maybe you have a team at your company that's using react and a team your company that's using angular or",
    "start": "661610",
    "end": "668470"
  },
  {
    "text": "whatever and you want to design different UI pieces datepicker widgets",
    "start": "668470",
    "end": "674170"
  },
  {
    "text": "you know whatever you can use web components for that and then share them in these other platforms because at the",
    "start": "674170",
    "end": "681370"
  },
  {
    "text": "end of the day they're just JavaScript and HTML and CSS like everything else so kind of a marriage of those two ideas is",
    "start": "681370",
    "end": "689829"
  },
  {
    "text": "the idea of using web components to modernize old front ends and that's what",
    "start": "689829",
    "end": "695140"
  },
  {
    "text": "we're gonna talk about today but this is an idea where you have your legacy code",
    "start": "695140",
    "end": "701260"
  },
  {
    "text": "and then you stick some web components around and you can either use that to",
    "start": "701260",
    "end": "706350"
  },
  {
    "text": "write a new feature in a more modern way or you can use it to upgrade an old",
    "start": "706350",
    "end": "711550"
  },
  {
    "text": "feature into a more modern way and just slap that script tag on the page and and",
    "start": "711550",
    "end": "718690"
  },
  {
    "text": "you're done it's a little more complicated than that as you might imagine but I like to think",
    "start": "718690",
    "end": "724240"
  },
  {
    "text": "of web components a friend of mine in Helsinki named Aqsa Lee gave a talk on web components last year and he used",
    "start": "724240",
    "end": "730180"
  },
  {
    "text": "this phrase of a web component being like an API for the view layer and I thought that was a really good analogy",
    "start": "730180",
    "end": "735430"
  },
  {
    "text": "for this concept it sort of abstracts away the need to know what's going on inside of the web component and again",
    "start": "735430",
    "end": "743649"
  },
  {
    "text": "that lets us come back to this idea of separating out our business logic from our review layer so we mentioned that",
    "start": "743649",
    "end": "750760"
  },
  {
    "text": "the functionality being encapsulate encapsulated away from the rest of the",
    "start": "750760",
    "end": "756070"
  },
  {
    "text": "code and that's what lets us move from this like jumbled mess of Dom manipulation and business logic all",
    "start": "756070",
    "end": "764380"
  },
  {
    "text": "mixed in together into this more like separated tiny encapsulated pieces of UI",
    "start": "764380",
    "end": "772560"
  },
  {
    "start": "772000",
    "end": "772000"
  },
  {
    "text": "so now let's actually look at what a custom element looks like and it's interesting because there are there's",
    "start": "772560",
    "end": "778750"
  },
  {
    "text": "the first part of custom elements is very simple and straightforward and then as with most things in development you",
    "start": "778750",
    "end": "786010"
  },
  {
    "text": "dig a little bit deeper and things they're not quite as simple as they seem and not quite as easy to use as as you",
    "start": "786010",
    "end": "791350"
  },
  {
    "text": "might think so a web component or a custom element is composed of basically",
    "start": "791350",
    "end": "796449"
  },
  {
    "start": "792000",
    "end": "792000"
  },
  {
    "text": "three things the first is a selector string basically the thing that you use for that you put in the brackets on the page",
    "start": "796449",
    "end": "803300"
  },
  {
    "text": "the second is just a JavaScript class that defines the functionality of the",
    "start": "803300",
    "end": "808520"
  },
  {
    "start": "804000",
    "end": "804000"
  },
  {
    "text": "component these two things are put into something called custom elements registry dot define which is just a",
    "start": "808520",
    "end": "815540"
  },
  {
    "text": "browser API and then all of these are can also include an options object so",
    "start": "815540",
    "end": "822589"
  },
  {
    "start": "818000",
    "end": "818000"
  },
  {
    "text": "here's an example of what that would look like so we have custom elements dot define here and then in the end of that",
    "start": "822589",
    "end": "830150"
  },
  {
    "text": "function we pass our selector string of my element C and we pass in our",
    "start": "830150",
    "end": "836570"
  },
  {
    "text": "JavaScript class of my element and then here's our options object in this case",
    "start": "836570",
    "end": "842510"
  },
  {
    "text": "what we're doing here is we're extending the P tag we can basically inherit from another HTML tag this is optional you",
    "start": "842510",
    "end": "850100"
  },
  {
    "text": "don't have to do this if we do include the the extends P tag when we put this",
    "start": "850100",
    "end": "857690"
  },
  {
    "text": "on the page it's going to look like this where we use the P and we we passing this attribute called is with our",
    "start": "857690",
    "end": "864800"
  },
  {
    "text": "selector string of the custom element so that's one way that you can define a custom element I'd say the more",
    "start": "864800",
    "end": "870170"
  },
  {
    "text": "prevalent way to do it is to ditch the options object unless you need it for",
    "start": "870170",
    "end": "876350"
  },
  {
    "text": "something and just use your own custom element from scratch basically and then",
    "start": "876350",
    "end": "881780"
  },
  {
    "text": "when we put that on the page that's where you're used to seeing something like this where you have my element as the tag that you put on the page or if",
    "start": "881780",
    "end": "888560"
  },
  {
    "text": "you're adding it to the Dom manually you would just add that that selector string",
    "start": "888560",
    "end": "894580"
  },
  {
    "text": "so that's sort of the simple easy 30",
    "start": "894580",
    "end": "899600"
  },
  {
    "start": "895000",
    "end": "895000"
  },
  {
    "text": "second explanation of a custom web component and there's a lot of other bells and whistles that you can do with",
    "start": "899600",
    "end": "906140"
  },
  {
    "text": "web components and that's where things sort of get off into the weeds and get a little bit more complicated that you can",
    "start": "906140",
    "end": "913580"
  },
  {
    "text": "use attributes with them as inputs that one's pretty straightforward not much to say they're web components also have",
    "start": "913580",
    "end": "920690"
  },
  {
    "start": "919000",
    "end": "919000"
  },
  {
    "text": "lifecycle methods like you're used to in a framework like JavaScript or angular",
    "start": "920690",
    "end": "926209"
  },
  {
    "text": "or react or something so there's there's four of them the first one is the connected callback basically when the",
    "start": "926209",
    "end": "932209"
  },
  {
    "text": "element is added to the page second one is the disconnected callback when it's removed",
    "start": "932209",
    "end": "937519"
  },
  {
    "text": "from the page and then we have the adopted callback where it's moved to a",
    "start": "937519",
    "end": "943279"
  },
  {
    "text": "new page and then lastly we have the attribute changed callback which you",
    "start": "943279",
    "end": "949610"
  },
  {
    "text": "probably have guessed is when the attributes changed pretty straightforward so these are really nice you can use them just like you would use",
    "start": "949610",
    "end": "957410"
  },
  {
    "text": "something like energy on a knit or component did mount and react very easy",
    "start": "957410",
    "end": "962949"
  },
  {
    "text": "custom web components also include this idea of the shadow Dom this is another so this is sort of this could be a whole",
    "start": "962949",
    "end": "969199"
  },
  {
    "text": "subject in and of itself but a shadow Dom is basically like a it's added to",
    "start": "969199",
    "end": "976279"
  },
  {
    "text": "the Dom separately and so you can encapsulate things like styles and it won't mess with the rest of the page so",
    "start": "976279",
    "end": "982850"
  },
  {
    "text": "with a custom element that's really nice all you have to do is call this attach shadow and there's some options you can",
    "start": "982850",
    "end": "988490"
  },
  {
    "text": "pass into it and the browser will just add this new I'm being careful not to say virtual Dom which is the concept in",
    "start": "988490",
    "end": "995569"
  },
  {
    "text": "react because it's a slightly different thing but if you but you can think of it",
    "start": "995569",
    "end": "1000790"
  },
  {
    "text": "like a virtual Dom it's technically not the same but it's the idea is is basically the same where you have this",
    "start": "1000790",
    "end": "1005920"
  },
  {
    "text": "sort of like sandbox Dom that doesn't affect the Dom on the rest of the page and you can do that react uses this for",
    "start": "1005920",
    "end": "1012129"
  },
  {
    "text": "diffing and things like that again there's a lot you can get into on the",
    "start": "1012129",
    "end": "1017829"
  },
  {
    "start": "1015000",
    "end": "1015000"
  },
  {
    "text": "shadow Dom so I recommend you go read about it similarly there's this concept",
    "start": "1017829",
    "end": "1022839"
  },
  {
    "text": "of HTML templates also another very cutting-edge feature and this is also",
    "start": "1022839",
    "end": "1028298"
  },
  {
    "text": "very similar to things you've seen in bigger frameworks there's these new",
    "start": "1028299",
    "end": "1033390"
  },
  {
    "text": "things called templates and slots that you can basically use reusable templates",
    "start": "1033390",
    "end": "1039188"
  },
  {
    "text": "that are rendered given a set of inputs like I mentioned earlier and this is",
    "start": "1039189",
    "end": "1045069"
  },
  {
    "text": "another thing you can go off into the weeds and read all about so things like the shadow DOM and templating start to",
    "start": "1045069",
    "end": "1052510"
  },
  {
    "text": "make this a bit more complicated as you're trying to write them on your own and part of the reason that makes this",
    "start": "1052510",
    "end": "1059950"
  },
  {
    "start": "1058000",
    "end": "1058000"
  },
  {
    "text": "more complicated as we all familiar with on the front end is this whole issue",
    "start": "1059950",
    "end": "1066220"
  },
  {
    "text": "browser compatibility web components generally have fairly good they're",
    "start": "1066220",
    "end": "1071289"
  },
  {
    "text": "starting to get more adopted but then when you start to look at things like the shadow DOM and the HTML templates",
    "start": "1071289",
    "end": "1076770"
  },
  {
    "text": "the browser support starts getting a little bit more shaky particularly for certain unnamed Microsoft browsers that",
    "start": "1076770",
    "end": "1084070"
  },
  {
    "text": "those of us in the enterprise world have to support things get a little bit more",
    "start": "1084070",
    "end": "1089350"
  },
  {
    "text": "complicated and because of that you end up you need to keep track of a lot of polyfills and figure out you know which",
    "start": "1089350",
    "end": "1096280"
  },
  {
    "text": "features need polyfills for which browsers and things like that so that's when things you start to go down this",
    "start": "1096280",
    "end": "1101919"
  },
  {
    "text": "path of like Oh web components oh there's right than myself it'll be easy no problem and then you start you know",
    "start": "1101919",
    "end": "1106929"
  },
  {
    "text": "somebody's like well what about Internet Explorer 9 and you're like I don't know burn it all to the ground and so that's",
    "start": "1106929",
    "end": "1112900"
  },
  {
    "text": "where custom element libraries come into play as with most programming concepts",
    "start": "1112900",
    "end": "1118780"
  },
  {
    "start": "1113000",
    "end": "1113000"
  },
  {
    "text": "just borrow somebody else's work so that you don't have to write this all from scratch so custom element libraries add",
    "start": "1118780",
    "end": "1125049"
  },
  {
    "text": "sort of a small layer of abstraction over web components so that they can",
    "start": "1125049",
    "end": "1130450"
  },
  {
    "text": "worry about all the polyfills and all of the compatibility issues and things like that and maybe make the syntax a little",
    "start": "1130450",
    "end": "1137559"
  },
  {
    "text": "bit nicer so that you're not doing direct Dom manipulation and having to remember query selectors and things like",
    "start": "1137559",
    "end": "1143740"
  },
  {
    "text": "that so just gonna briefly go over a couple of the biggest most popular ones",
    "start": "1143740",
    "end": "1148770"
  },
  {
    "text": "one of the most popular ones is called lit element it's part of the polymer",
    "start": "1148770",
    "end": "1154210"
  },
  {
    "text": "project lit element is extremely thin and lightweight people really love it it",
    "start": "1154210",
    "end": "1160510"
  },
  {
    "text": "has a number of great features it's very declarative I'll show you the syntax here in a second it's extremely",
    "start": "1160510",
    "end": "1166570"
  },
  {
    "text": "lightweight and it's also very internal it works with a lot of other frameworks",
    "start": "1166570",
    "end": "1172780"
  },
  {
    "text": "and things like that plays really nicely so people tend to really like using lit element so and you can see the the",
    "start": "1172780",
    "end": "1180010"
  },
  {
    "text": "syntax for it is very familiar it's this is like es6 with decorators and things",
    "start": "1180010",
    "end": "1186370"
  },
  {
    "text": "like that not exactly typescript but it looks pretty close to typescript and where you just import things from lit elements and",
    "start": "1186370",
    "end": "1193539"
  },
  {
    "text": "you define your class and all you need to do is decorate it with this custom element decorator and define a property and you have a",
    "start": "1193539",
    "end": "1200299"
  },
  {
    "text": "render function so it's very familiar for for if you're coming from frameworks or if you're coming from like c-sharp or",
    "start": "1200299",
    "end": "1206630"
  },
  {
    "text": "things like that helps to hide away some of the more in the weeds Dom",
    "start": "1206630",
    "end": "1213049"
  },
  {
    "text": "manipulation kinds of things and then you just throw it on the page with the tag that you've defined and you've got",
    "start": "1213049",
    "end": "1220520"
  },
  {
    "text": "your name input there and you're good to go so that's lit element then we've also",
    "start": "1220520",
    "end": "1226340"
  },
  {
    "start": "1226000",
    "end": "1226000"
  },
  {
    "text": "there's one called spin cyl stencil is created by the ionic team how many of",
    "start": "1226340",
    "end": "1232700"
  },
  {
    "text": "you've heard of ionic the yeah the mobile platform for building hybrid apps",
    "start": "1232700",
    "end": "1239500"
  },
  {
    "text": "so they've also built this project called stencil also very popular project they've got a number of things going for",
    "start": "1239500",
    "end": "1246169"
  },
  {
    "text": "it it's also very simple also very lightweight and also very good at cross",
    "start": "1246169",
    "end": "1252260"
  },
  {
    "text": "framework stuff one thing that I really like about stencil is that you can use JSX with it which is the way you write",
    "start": "1252260",
    "end": "1258470"
  },
  {
    "text": "templates in react so it's a very nice modern way of writing web components the",
    "start": "1258470",
    "end": "1264740"
  },
  {
    "text": "one we're gonna focus on in the rest of this talk is angular elements angular elements is obviously from angular from",
    "start": "1264740",
    "end": "1271610"
  },
  {
    "text": "but it's actually an official google package as part of angular and what's really really nice about angular angular",
    "start": "1271610",
    "end": "1278929"
  },
  {
    "text": "elements is that it takes all the web component stuff and but just lets you",
    "start": "1278929",
    "end": "1284660"
  },
  {
    "text": "write angular and let that angular just become custom elements it's very nice",
    "start": "1284660",
    "end": "1289910"
  },
  {
    "text": "they handle a lot of things for you that you don't need to worry about and that makes it really powerful because along",
    "start": "1289910",
    "end": "1296270"
  },
  {
    "text": "with angular you're gonna get like rxjs and everything you basically just write regular angular and then angular",
    "start": "1296270",
    "end": "1301400"
  },
  {
    "text": "elements will translate that all into custom elements which makes it a really nice tool to use and then the other",
    "start": "1301400",
    "end": "1308450"
  },
  {
    "text": "thing that's really nice about angular elements is because it's an official google thing they've gone back and they've added some hooks into angularjs",
    "start": "1308450",
    "end": "1316309"
  },
  {
    "text": "that we'll see later on that let it work really nicely if you're doing a migration from angularjs to angular",
    "start": "1316309",
    "end": "1322730"
  },
  {
    "text": "which is incidentally why you're all here so we mentioned modernization",
    "start": "1322730",
    "end": "1329510"
  },
  {
    "start": "1327000",
    "end": "1327000"
  },
  {
    "text": "earlier and that's what we're gonna spend the remainder of this talk on and I think we're gonna end up having a little",
    "start": "1329510",
    "end": "1336390"
  },
  {
    "start": "1335000",
    "end": "1335000"
  },
  {
    "text": "bit of time at the end for questions and everything like that so no worries there so of course we're gonna be talking",
    "start": "1336390",
    "end": "1342570"
  },
  {
    "text": "about angularjs to angular my hope is that you can sort of zoom out one level and take some meta lessons away of",
    "start": "1342570",
    "end": "1349110"
  },
  {
    "text": "moving any legacy project to angular with angular elements because that's certainly doable and then maybe you can",
    "start": "1349110",
    "end": "1354780"
  },
  {
    "text": "also extrapolate a little bit further out to another metal level of just moving like any legacy thing to any new",
    "start": "1354780",
    "end": "1361440"
  },
  {
    "text": "thing with web components you might have to squint a little bit more to do that in this case but we're gonna focus on",
    "start": "1361440",
    "end": "1369750"
  },
  {
    "text": "angularjs to angular and since we have a number of angularjs to angular folks in",
    "start": "1369750",
    "end": "1375690"
  },
  {
    "text": "the room I'll slow down a little bit on this section and go into a little bit more detail on it so to get to give an",
    "start": "1375690",
    "end": "1383280"
  },
  {
    "text": "overview when it comes to migrating from angularjs to angular there are",
    "start": "1383280",
    "end": "1389120"
  },
  {
    "text": "classically four basic paths to doing that there is the rewrite path sometimes",
    "start": "1389120",
    "end": "1396870"
  },
  {
    "text": "known as the Big Bang I like to call it burn everything to the ground and start over",
    "start": "1396870",
    "end": "1402210"
  },
  {
    "text": "there's the ng upgrade path so ng upgrade is a library written by the",
    "start": "1402210",
    "end": "1408000"
  },
  {
    "text": "angular team that is specifically for migrating it's it's a bridge between",
    "start": "1408000",
    "end": "1413150"
  },
  {
    "text": "angularjs and angular and it basically lets the two frameworks run side by side",
    "start": "1413150",
    "end": "1419730"
  },
  {
    "text": "and there's different methods that let you for example downgrade your services from angular to angularjs to let",
    "start": "1419730",
    "end": "1426600"
  },
  {
    "text": "angularjs use them and then go the other direction where you can use for angularjs services and angular you can",
    "start": "1426600",
    "end": "1433350"
  },
  {
    "text": "do the same thing with components you can put an angular component in an angularjs page and you can put an",
    "start": "1433350",
    "end": "1439320"
  },
  {
    "text": "angularjs component in a parent angular component things like that very popular method and we'll see some of the",
    "start": "1439320",
    "end": "1446940"
  },
  {
    "text": "downsides in just a second though and then the third one is called hybrid routing this one has actually a few",
    "start": "1446940",
    "end": "1453240"
  },
  {
    "text": "different flavors it can sometimes be combined with ng upgrades sometimes not the bottom line is that you're basically",
    "start": "1453240",
    "end": "1459090"
  },
  {
    "text": "using each framework will be assigned to us to",
    "start": "1459090",
    "end": "1464799"
  },
  {
    "text": "a route like each framework will be responsible for one route at a time so you won't have the mixing of the two",
    "start": "1464799",
    "end": "1470740"
  },
  {
    "text": "frameworks on the same page and you can accomplish this through either having the server handle that you",
    "start": "1470740",
    "end": "1477190"
  },
  {
    "text": "know knows it knows that only serve up the angularjs stuff or only serve up the angular stuff or you can do that on the",
    "start": "1477190",
    "end": "1483100"
  },
  {
    "text": "client-side that's where you would use ng upgrade and basically have to router outlets where you'd have one router",
    "start": "1483100",
    "end": "1488799"
  },
  {
    "text": "outlet for angularjs and one router outlet for angular and you have to do a little bit of setup to make sure that",
    "start": "1488799",
    "end": "1495190"
  },
  {
    "text": "they don't overlap and things like that that's also very popular one and then the last one is angular elements which",
    "start": "1495190",
    "end": "1501700"
  },
  {
    "text": "we're going to talk about now so yeah snap a picture of that these slides will be available I've also actually gave a talk at",
    "start": "1501700",
    "end": "1509890"
  },
  {
    "text": "angular finland last year that goes into depth of each of these paths if you want",
    "start": "1509890",
    "end": "1516250"
  },
  {
    "text": "if you just google it's up on YouTube angular Finland I think it caught I called it like finding the right path",
    "start": "1516250",
    "end": "1521350"
  },
  {
    "text": "from angularjs to angular it's a little bit more detail on each of these so",
    "start": "1521350",
    "end": "1528010"
  },
  {
    "text": "we're going to talk about angular elements and the biggest question that you probably have is like why would I",
    "start": "1528010",
    "end": "1535330"
  },
  {
    "start": "1535000",
    "end": "1535000"
  },
  {
    "text": "use like what's the scenario in which angular elements makes the most sense as the upgrade path I like to frame this a",
    "start": "1535330",
    "end": "1543610"
  },
  {
    "text": "little bit differently and think more about like why wouldn't you use ng upgrade because ng upgrade is like the",
    "start": "1543610",
    "end": "1550179"
  },
  {
    "text": "de facto upgrade path and ng upgrade is",
    "start": "1550179",
    "end": "1555340"
  },
  {
    "text": "fabulous especially when you compare it to the fact that there's no migration path from angularjs to react or view or",
    "start": "1555340",
    "end": "1562419"
  },
  {
    "text": "whatever else spelt or something there's no there's no official path but you basically just have to rewrite if that's",
    "start": "1562419",
    "end": "1569049"
  },
  {
    "text": "the direction you go so ng upgrade for all its pros and cons is actually quite",
    "start": "1569049",
    "end": "1576549"
  },
  {
    "text": "an elegant solution to this problem so why wouldn't we just go with that so ng upgrade works really well in some",
    "start": "1576549",
    "end": "1583570"
  },
  {
    "text": "very specific use cases it's got like a very it's got like a sweet spot and",
    "start": "1583570",
    "end": "1588630"
  },
  {
    "text": "these next couple of slides there there are somewhat generalizations there are exceptions to these rules depending on",
    "start": "1588630",
    "end": "1594610"
  },
  {
    "text": "your application but I find by and large they're pretty accurate so ng upgrade works really well for small to medium",
    "start": "1594610",
    "end": "1602770"
  },
  {
    "text": "apps I like to say like basically it's for apps that are small enough to where",
    "start": "1602770",
    "end": "1608470"
  },
  {
    "text": "you don't need a much more complicated solution but they're big enough to where rewriting them is a laughable idea like",
    "start": "1608470",
    "end": "1616600"
  },
  {
    "text": "their it would be silly to like shut down your business for six months or a year to rewrite the application from",
    "start": "1616600",
    "end": "1623440"
  },
  {
    "text": "scratch you have to be able to iteratively migrate these applications so usually in the neighborhood of like",
    "start": "1623440",
    "end": "1629140"
  },
  {
    "text": "hundreds of components probably not like thousands of components although it does happen I also works really well for apps",
    "start": "1629140",
    "end": "1637000"
  },
  {
    "text": "with fairly low complexity so one thing angularjs was huge in line of business",
    "start": "1637000",
    "end": "1643690"
  },
  {
    "text": "applications probably a lot of you out there are using line of line of business applications for insurance companies or",
    "start": "1643690",
    "end": "1650200"
  },
  {
    "text": "banks or things like that where you're doing these basically just massive crud operations interacting with the database",
    "start": "1650200",
    "end": "1657760"
  },
  {
    "text": "and stuff like that and you have great works really well for that you can just replace your crud application pretty",
    "start": "1657760",
    "end": "1663850"
  },
  {
    "text": "pretty quickly with any upgrade and then it also works very well if you've",
    "start": "1663850",
    "end": "1669280"
  },
  {
    "text": "modernized your angularjs to some extent this isn't a requirement but if you're",
    "start": "1669280",
    "end": "1675340"
  },
  {
    "text": "already using things like es6 modules with web pack if you've already switched",
    "start": "1675340",
    "end": "1681310"
  },
  {
    "text": "to component architecture maybe you're using version 1.5 or higher most of",
    "start": "1681310",
    "end": "1688180"
  },
  {
    "text": "those aren't hard and fast requirements but your life will be a lot easier with ng upgrade if you've already taken some",
    "start": "1688180",
    "end": "1693190"
  },
  {
    "text": "time to at least get it to be more current angularjs you're not using like dollar scope all over the place and",
    "start": "1693190",
    "end": "1700090"
  },
  {
    "text": "dollar route watch all over the place things like that so those are those that",
    "start": "1700090",
    "end": "1705550"
  },
  {
    "text": "sort sort of where ng upgrade works really really well but there are some flaws with ng upgrade and most of them",
    "start": "1705550",
    "end": "1711910"
  },
  {
    "start": "1710000",
    "end": "1710000"
  },
  {
    "text": "have to do with the fact that the two frameworks are extremely tightly coupled you get a lot of benefits from this but",
    "start": "1711910",
    "end": "1718420"
  },
  {
    "text": "there's also quite a few downsides depending on the way that your application works so two things that are",
    "start": "1718420",
    "end": "1724450"
  },
  {
    "start": "1722000",
    "end": "1722000"
  },
  {
    "text": "very tightly coupled with with ng upgrade the tendency injection system and the change",
    "start": "1724450",
    "end": "1730619"
  },
  {
    "text": "detection system and both of these while they can allow you to do really cool things like have your angular services",
    "start": "1730619",
    "end": "1737249"
  },
  {
    "text": "talk to your angular j/s app and vice versa and sync some change detection",
    "start": "1737249",
    "end": "1742409"
  },
  {
    "text": "things there's a lot of cool things that come with that but that also leads to a number of pitfalls especially because of",
    "start": "1742409",
    "end": "1748379"
  },
  {
    "text": "third-party dependencies that you can't control so for example complex UIs and",
    "start": "1748379",
    "end": "1754409"
  },
  {
    "text": "testing can become nightmarish with ng upgrade when you're using the the linked",
    "start": "1754409",
    "end": "1759899"
  },
  {
    "text": "change detection so for example if you're using how many of you are using protractor for your end-to-end tests",
    "start": "1759899",
    "end": "1767809"
  },
  {
    "text": "nobody okay that's good I mean it's not it's not neither good nor bad but but",
    "start": "1767809",
    "end": "1773639"
  },
  {
    "text": "protractor is an end-to-end testing framework that was the official angularjs and then testing framework and",
    "start": "1773639",
    "end": "1779220"
  },
  {
    "text": "it linked it hooks into the change detection cycle unfortunately what",
    "start": "1779220",
    "end": "1784349"
  },
  {
    "text": "happens is that the angularjs change detection cycle which is the dollar",
    "start": "1784349",
    "end": "1790499"
  },
  {
    "text": "digest or the digest cycle can sometimes trigger a zone change detection in",
    "start": "1790499",
    "end": "1796559"
  },
  {
    "text": "angular which then triggers a digest cycle detection in angularjs which then triggers the zone detection and angular",
    "start": "1796559",
    "end": "1802830"
  },
  {
    "text": "so you get into this like infinite loop it doesn't happen all the time but especially with third-party libraries",
    "start": "1802830",
    "end": "1809249"
  },
  {
    "text": "and with in the end testing there's a lot of nuance there that can cause the change detection systems to get out of",
    "start": "1809249",
    "end": "1815940"
  },
  {
    "text": "whack so that's just one example event-driven applications tend to have",
    "start": "1815940",
    "end": "1821489"
  },
  {
    "text": "this a lot and that's why the crud stuff works super well the change detection",
    "start": "1821489",
    "end": "1826820"
  },
  {
    "text": "doesn't matter too much but in the event driven applications they can I should mention since we're going a little bit deeper in",
    "start": "1826820",
    "end": "1833789"
  },
  {
    "text": "this subject that ng upgrade does have an option for you to turn off that linking of the change detection so if",
    "start": "1833789",
    "end": "1840179"
  },
  {
    "text": "you are concerned about that there's actually another way to use ng upgrade where it turns that off it just makes",
    "start": "1840179",
    "end": "1846479"
  },
  {
    "text": "the process much more manual you have to trigger change detection yourself and stuff so sometimes worth the trade-off",
    "start": "1846479",
    "end": "1852119"
  },
  {
    "text": "sometimes not depends on your use case so angular elements where does angular elements work best angular elements",
    "start": "1852119",
    "end": "1859529"
  },
  {
    "text": "works best with very large application where the the time it would take to set",
    "start": "1859529",
    "end": "1866640"
  },
  {
    "text": "up the hybrid application within G upgrade is not worth I mean sometimes",
    "start": "1866640",
    "end": "1872010"
  },
  {
    "text": "you've got these apps with thousands of components and just like massive banking applications and things like that that",
    "start": "1872010",
    "end": "1877590"
  },
  {
    "text": "it just won't make sense to use em G upgrade also apps again with with very",
    "start": "1877590",
    "end": "1883110"
  },
  {
    "text": "high complexity very a minute vent driven applications things like that and",
    "start": "1883110",
    "end": "1888929"
  },
  {
    "text": "then also apps that maybe are using really old patterns",
    "start": "1888929",
    "end": "1893970"
  },
  {
    "text": "maybe angularjs 1.2 and dollar scope and things like that where the time it would",
    "start": "1893970",
    "end": "1899730"
  },
  {
    "text": "take to modernize the angularjs code just doesn't really make any sense and that's when you can use angular elements",
    "start": "1899730",
    "end": "1905370"
  },
  {
    "text": "to just patch in angular so what does it",
    "start": "1905370",
    "end": "1910770"
  },
  {
    "start": "1908000",
    "end": "1908000"
  },
  {
    "text": "look like to use angular elements to upgrade take a second 10 second water",
    "start": "1910770",
    "end": "1917910"
  },
  {
    "text": "break so there's roughly give or take",
    "start": "1917910",
    "end": "1927630"
  },
  {
    "start": "1924000",
    "end": "1924000"
  },
  {
    "text": "four steps to this process the first step is the setup of the system of",
    "start": "1927630",
    "end": "1934290"
  },
  {
    "text": "angular elements and your legacy code the next is sort of this apologize for",
    "start": "1934290",
    "end": "1940470"
  },
  {
    "text": "the cough I was sick a month ago and I still have this cough that's just lingering thought I'd be gone by the",
    "start": "1940470",
    "end": "1945600"
  },
  {
    "text": "time I gave this talk but it's it's not and then so you take this process where",
    "start": "1945600",
    "end": "1951540"
  },
  {
    "text": "you basically rewrite your components from the bottom up from angularjs to angular as angular elements as web",
    "start": "1951540",
    "end": "1958170"
  },
  {
    "text": "components then should you need to share state between the two frameworks instead",
    "start": "1958170",
    "end": "1964770"
  },
  {
    "text": "of using ng upgrade you'll basically create these vanilla JavaScript services and then wrap the two frameworks around",
    "start": "1964770",
    "end": "1971160"
  },
  {
    "text": "the vanilla JavaScript services and then lastly once everything's been rewritten",
    "start": "1971160",
    "end": "1976650"
  },
  {
    "text": "to angular you'll convert your routing over and then you'll remove the angular elements library so what does it mean to",
    "start": "1976650",
    "end": "1985710"
  },
  {
    "start": "1983000",
    "end": "1983000"
  },
  {
    "text": "set up angular elements how does that work and this is so normally when I when I give tech talks I I really try to",
    "start": "1985710",
    "end": "1993450"
  },
  {
    "text": "avoid like hand waving over details and because that always really annoys me I really don't",
    "start": "1993450",
    "end": "1999780"
  },
  {
    "text": "like going to a talk where the speaker is like this is easy like you just like do this thing and it works and it's fine",
    "start": "1999780",
    "end": "2006320"
  },
  {
    "text": "and then you get back to your desk and you realize like it's ten times more complicated than you thought so I'm",
    "start": "2006320",
    "end": "2011690"
  },
  {
    "text": "breaking one of my cardinal rules here simply because the ecosystem around angular elements is a little bit",
    "start": "2011690",
    "end": "2018500"
  },
  {
    "text": "unstable right now because the angular team has been working on this new",
    "start": "2018500",
    "end": "2023570"
  },
  {
    "text": "renderer called ivy and it involves basically a complete rewrite of the renderer of angular while trying to make",
    "start": "2023570",
    "end": "2030799"
  },
  {
    "text": "it completely backwards compatible and Ivy will enable a lot of changes in the internals of angular elements which will",
    "start": "2030799",
    "end": "2038419"
  },
  {
    "text": "also enable a lot of tooling changes in it with angular elements so my goal here",
    "start": "2038419",
    "end": "2044659"
  },
  {
    "text": "is to give you sort of the building blocks of the process but don't get too lost in the details because it's",
    "start": "2044659",
    "end": "2050148"
  },
  {
    "text": "possible that over the next six months or so the steps will get simpler so",
    "start": "2050149",
    "end": "2055520"
  },
  {
    "text": "that's my disclaimer but here's basically how the set up is gonna look you're gonna have this mono repo",
    "start": "2055520",
    "end": "2064898"
  },
  {
    "text": "situation here where you've got your angular CLI project that has your custom",
    "start": "2064899",
    "end": "2070940"
  },
  {
    "text": "elements and then your angularjs project that'll have your legacy code obviously there's a lot more than index.html in",
    "start": "2070940",
    "end": "2077990"
  },
  {
    "text": "here but I've made it emitted like the hundreds of JavaScript files for the sake of simplicity because the index",
    "start": "2077990",
    "end": "2083960"
  },
  {
    "text": "file is the thing that matters here so what you'll do is you'll have your custom elements over here and you'll",
    "start": "2083960",
    "end": "2090740"
  },
  {
    "text": "bundle them all up using the angular CLI and there'll be a bundle of your custom",
    "start": "2090740",
    "end": "2096169"
  },
  {
    "text": "elements and then you'll also have these polyfills for all that backwards compatibility that we mentioned and you",
    "start": "2096169",
    "end": "2105170"
  },
  {
    "text": "might bundle that into a separate file sort of depends there's different ways you can splice and dice this depending",
    "start": "2105170",
    "end": "2110720"
  },
  {
    "text": "on your use case but essentially that's what you're gonna be doing not pictured here is also the the dependencies that",
    "start": "2110720",
    "end": "2119210"
  },
  {
    "text": "that will be included in the bundle but you'll have to ship angular as well as",
    "start": "2119210",
    "end": "2125330"
  },
  {
    "text": "you know things like rxjs in the browser along with these custom elements and",
    "start": "2125330",
    "end": "2131080"
  },
  {
    "text": "that's some of the detail that is gonna get refined over time when Ivy comes they'll make it a little bit smarter",
    "start": "2131080",
    "end": "2136840"
  },
  {
    "text": "with deduplicating a lot of that stuff and then you'll inject those script tags",
    "start": "2136840",
    "end": "2142270"
  },
  {
    "text": "into your angularjs index dot HTML and that's how you'll be able to use the",
    "start": "2142270",
    "end": "2148510"
  },
  {
    "text": "custom elements on the page so the first step after you've created the CLI",
    "start": "2148510",
    "end": "2154660"
  },
  {
    "start": "2151000",
    "end": "2151000"
  },
  {
    "text": "project that you'll house all of your elements on you're gonna want to add angular elements to it so you'll just",
    "start": "2154660",
    "end": "2160420"
  },
  {
    "text": "use ng add and add angular elements to the project pretty straightforward almost immediately after doing that",
    "start": "2160420",
    "end": "2167800"
  },
  {
    "text": "you're gonna want to check out this tool called ngx build plus so the nice thing about the angular CLI is that it's very",
    "start": "2167800",
    "end": "2174490"
  },
  {
    "text": "opinionated gives you a very straightforward path on tooling for",
    "start": "2174490",
    "end": "2180340"
  },
  {
    "text": "angular but the downside of it is that it's not as flexible as it could be and so a community member named Manfred",
    "start": "2180340",
    "end": "2187720"
  },
  {
    "text": "steyr your ear over on this side of the pond and how many of you know who make Manfred steyr is he's a excellent",
    "start": "2187720",
    "end": "2193450"
  },
  {
    "text": "teacher in Austria and brilliant coder he built this tool called ngx build plus",
    "start": "2193450",
    "end": "2198690"
  },
  {
    "text": "that basically extends the CLI to make it more flexible you can customize the web pack build and things like that",
    "start": "2198690",
    "end": "2205260"
  },
  {
    "text": "Manfred is is partnering with the angular team right now and so I have a feeling that before long this will",
    "start": "2205260",
    "end": "2212710"
  },
  {
    "text": "actually get wrapped up into the official CLI but I can't promise that it's not it's not really an official",
    "start": "2212710",
    "end": "2218560"
  },
  {
    "text": "thing but it's so useful that I have a feeling it'll eventually just get absorbed into the CLI so you can use ng",
    "start": "2218560",
    "end": "2226870"
  },
  {
    "text": "ad for ngx build plus and when you do that you're gonna have all these new",
    "start": "2226870",
    "end": "2231970"
  },
  {
    "text": "options for the CLI one of them is this ability to add this single bundle flag and instead of the five or six files",
    "start": "2231970",
    "end": "2239170"
  },
  {
    "text": "that the CLI generates by default you can split you can just put everything into one file and there's there's a lot",
    "start": "2239170",
    "end": "2245200"
  },
  {
    "text": "of other options that that'll add you're also going to need some sort of way to",
    "start": "2245200",
    "end": "2250810"
  },
  {
    "text": "get the the bundled custom elements over",
    "start": "2250810",
    "end": "2257380"
  },
  {
    "text": "into wherever your legacy code lives so you could do this any number of ways this is just an sample with the CPR binary you could use",
    "start": "2257380",
    "end": "2265329"
  },
  {
    "text": "PowerShell you could use a bash script it doesn't really matter but the idea is that you need to take that dist folder",
    "start": "2265329",
    "end": "2270489"
  },
  {
    "text": "of the custom elements move it over to wherever your legacy code is so that the",
    "start": "2270489",
    "end": "2276459"
  },
  {
    "text": "index dot HTML will know where it lives and then just a quick note on the",
    "start": "2276459",
    "end": "2281619"
  },
  {
    "text": "polyfills so angular elements will install a polyfill along with it but a",
    "start": "2281619",
    "end": "2287589"
  },
  {
    "text": "lot of times you'll find that the tutorials around this subject just sort of use the minimal polyfills so you want",
    "start": "2287589",
    "end": "2294999"
  },
  {
    "text": "to make sure if you are in the enterprise space and need to support ancient things or Internet Explorer type",
    "start": "2294999",
    "end": "2303009"
  },
  {
    "text": "things you might need to just check and make sure that you've got all the polyfills that you need and you might",
    "start": "2303009",
    "end": "2309549"
  },
  {
    "text": "need to add a couple more just because most people in the tutorial world tend to forget that the real world has to",
    "start": "2309549",
    "end": "2316059"
  },
  {
    "text": "still support some of these things that are painful so then once we got the set",
    "start": "2316059",
    "end": "2321249"
  },
  {
    "start": "2319000",
    "end": "2319000"
  },
  {
    "text": "up then we need to go through this process of upgrading the components and that's sort of a just a one one by one",
    "start": "2321249",
    "end": "2327819"
  },
  {
    "text": "kind of process so we've got this customers page here and on this customers page we've got a customers",
    "start": "2327819",
    "end": "2333880"
  },
  {
    "text": "table and then inside of that or we got the customers container and then we've got the customers table inside of that",
    "start": "2333880",
    "end": "2339939"
  },
  {
    "text": "and we have this data flow basically of the customer service passing data into the customers component and then passing",
    "start": "2339939",
    "end": "2346689"
  },
  {
    "text": "that into the customers table component so what we want to do is start with the customers table component at the bottom",
    "start": "2346689",
    "end": "2352390"
  },
  {
    "text": "because it has the least dependencies basically so to do that we're basically",
    "start": "2352390",
    "end": "2358239"
  },
  {
    "text": "just going to write an angular component that's what's really nice about angular elements so there's nothing special about this angular component except that",
    "start": "2358239",
    "end": "2364900"
  },
  {
    "text": "you'll notice that there's no selector tag and we're gonna come back to that at the end of the talk but everything is",
    "start": "2364900",
    "end": "2371920"
  },
  {
    "text": "basically just has you as you would write a regular angular angular component you can see we have an input for the customers everything is pretty",
    "start": "2371920",
    "end": "2378609"
  },
  {
    "text": "much the same but then in order to actually translate that into an element",
    "start": "2378609",
    "end": "2385539"
  },
  {
    "text": "into a custom element we have to do a little bit of setup so in our ng module if you're using",
    "start": "2385539",
    "end": "2392650"
  },
  {
    "text": "angular 8 or earlier you'll need to add the components to the entry components",
    "start": "2392650",
    "end": "2399040"
  },
  {
    "text": "angular 9 because of IV ditches entry components it's no longer needed but as",
    "start": "2399040",
    "end": "2404950"
  },
  {
    "text": "of right now angular 9 isn't out yet so pretty much all of you will will have to do this until angular 9 comes out you",
    "start": "2404950",
    "end": "2412540"
  },
  {
    "text": "also add the component to the declarations just like you normally would in angular and then in the app",
    "start": "2412540",
    "end": "2418480"
  },
  {
    "text": "module is where you'll have to do a little bit of setup with angular elements so we need to we need an",
    "start": "2418480",
    "end": "2423520"
  },
  {
    "text": "instance of the injector and in our module here and then we're going to override the bootstrap function of the",
    "start": "2423520",
    "end": "2430540"
  },
  {
    "text": "module and that's where we call create custom element which is from angular elements you can see that we're passing",
    "start": "2430540",
    "end": "2436600"
  },
  {
    "text": "in the class the customers table component as well as this object that contains that injector reference and",
    "start": "2436600",
    "end": "2443170"
  },
  {
    "text": "then angular will basically use that to package up a custom element for us and",
    "start": "2443170",
    "end": "2450450"
  },
  {
    "text": "that way we can just call custom elements defined that's just the browser API nothing angular about that and we",
    "start": "2450450",
    "end": "2456970"
  },
  {
    "text": "pass in the selector tag with the custom element that angular created for us so all in all quite nice because you're",
    "start": "2456970",
    "end": "2463540"
  },
  {
    "text": "just basically writing angular and then you have this little bit of these few lines of code and you're off to the races",
    "start": "2463540",
    "end": "2469200"
  },
  {
    "text": "so earlier we saw we have this customers input so how do we actually pass that in and that's where this is another area",
    "start": "2469200",
    "end": "2476140"
  },
  {
    "start": "2474000",
    "end": "2474000"
  },
  {
    "text": "where angular elements is really nice because they've gone back and in the final release of angularjs which is",
    "start": "2476140",
    "end": "2481680"
  },
  {
    "text": "1.7.9 I think they've added these helpers for angular elements so I should",
    "start": "2481680",
    "end": "2489820"
  },
  {
    "start": "2488000",
    "end": "2488000"
  },
  {
    "text": "mention that if you're not using angularjs 1.7 the latest version my",
    "start": "2489820",
    "end": "2495730"
  },
  {
    "text": "friend James Henry who works for Narwhal it was actually from here but moved to Toronto he's made this library called ng",
    "start": "2495730",
    "end": "2503560"
  },
  {
    "text": "custom element because he was fighting with his clients none of them were on Inglis 1.7 so he had to go back and he",
    "start": "2503560",
    "end": "2510130"
  },
  {
    "text": "basically just replicated this functionality of these helpers that you're gonna see in a second so you can check that out if you're not if you're",
    "start": "2510130",
    "end": "2516700"
  },
  {
    "text": "using one of the older versions of angularjs so we're going to talk about",
    "start": "2516700",
    "end": "2521890"
  },
  {
    "text": "inputs and outputs here so the input the way you can use an input with angular elements is",
    "start": "2521890",
    "end": "2527380"
  },
  {
    "text": "engi prop and in the name of the input so we have this input here of customers",
    "start": "2527380",
    "end": "2532690"
  },
  {
    "text": "and so then we add the custom element to the page we've got our selector here customers table see II sort of a best",
    "start": "2532690",
    "end": "2539920"
  },
  {
    "text": "practice to append the seee to the selector just so that when you're going back or the next person they know that",
    "start": "2539920",
    "end": "2546099"
  },
  {
    "text": "this is a custom element not just like a plain angular component and then we to",
    "start": "2546099",
    "end": "2551799"
  },
  {
    "text": "pass that element in so this is I should mention this is on the angularjs we've",
    "start": "2551799",
    "end": "2557380"
  },
  {
    "text": "thrown this custom element onto our legacy code so our in our HTML like our",
    "start": "2557380",
    "end": "2562569"
  },
  {
    "text": "angularjs template or whatever contains this new custom element from angular so",
    "start": "2562569",
    "end": "2569200"
  },
  {
    "text": "that's why we have ng prop customers so we're passing in an input and you can",
    "start": "2569200",
    "end": "2574630"
  },
  {
    "text": "see that that dollar ctrl said should scream angularjs to you so the dollar",
    "start": "2574630",
    "end": "2579670"
  },
  {
    "text": "control dot customers is coming from angularjs being passed into this angular element and then what about getting data",
    "start": "2579670",
    "end": "2588039"
  },
  {
    "text": "out with our outputs basically so four outputs here's a different example we've",
    "start": "2588039",
    "end": "2593980"
  },
  {
    "text": "got a customer detail page we've got this container component and then we've got this discount type and the discount",
    "start": "2593980",
    "end": "2601420"
  },
  {
    "text": "type lets us lets the user edit the discount type and then when they save it that gets propagated up the chain to the",
    "start": "2601420",
    "end": "2609400"
  },
  {
    "text": "parent component so we've got a customer detail component and a discount component and they're passing data back",
    "start": "2609400",
    "end": "2616029"
  },
  {
    "text": "and forth basically and we want to be able to convert that discount component from angularjs to an angular component",
    "start": "2616029",
    "end": "2622240"
  },
  {
    "text": "so how do we do that well again the component itself is just a regular",
    "start": "2622240",
    "end": "2627730"
  },
  {
    "text": "angular component I've omitted the decorator here for the sake of space but it would just have a regular decorator",
    "start": "2627730",
    "end": "2633369"
  },
  {
    "text": "just like the other one and so we'd have an input for the customer discount coming from that parent container and",
    "start": "2633369",
    "end": "2639099"
  },
  {
    "text": "then we'd have an output a regular event emitter in angular for update discount",
    "start": "2639099",
    "end": "2644109"
  },
  {
    "text": "and then we could have our function that just updates that emits that event with",
    "start": "2644109",
    "end": "2650920"
  },
  {
    "text": "the new discount and then sets the UI state for us so to use that we use we",
    "start": "2650920",
    "end": "2659170"
  },
  {
    "text": "use something called ng on that's our hook for angularjs so here we're using",
    "start": "2659170",
    "end": "2664359"
  },
  {
    "text": "the discount component the custom element inside of our angularjs template so we have our custom selector here and",
    "start": "2664359",
    "end": "2672490"
  },
  {
    "text": "then we have again ng prop with customer discount notice that the underscore",
    "start": "2672490",
    "end": "2678519"
  },
  {
    "text": "there replaces I the camel case so you can't do the camel case in these things",
    "start": "2678519",
    "end": "2683589"
  },
  {
    "text": "you have to replace that with an underscore and then again screaming angularjs dollar ctrl dot customer",
    "start": "2683589",
    "end": "2690339"
  },
  {
    "text": "discount that's coming from the parent component being passed into the custom element and then for our on our event of",
    "start": "2690339",
    "end": "2698559"
  },
  {
    "text": "update discount we're passing in the function from angularjs for update",
    "start": "2698559",
    "end": "2703900"
  },
  {
    "text": "discount and passing in the dollar event so when basically when that update",
    "start": "2703900",
    "end": "2709900"
  },
  {
    "text": "discount event in the custom element gets triggered it will trigger the update discount function on the parent",
    "start": "2709900",
    "end": "2716740"
  },
  {
    "text": "and pass in the event from the custom element that's how that data will get propagated up the chain there so now",
    "start": "2716740",
    "end": "2724930"
  },
  {
    "text": "we've got two custom elements and does that mean we just have to like add all",
    "start": "2724930",
    "end": "2730390"
  },
  {
    "text": "this bootstrapping code every single time well there's a nice elegant way to do this a friend of mine named Jeff",
    "start": "2730390",
    "end": "2736420"
  },
  {
    "text": "Delaney is the first person who told me about this he runs a YouTube channel called fire ship and it's quite good but",
    "start": "2736420",
    "end": "2742690"
  },
  {
    "text": "his idea was to have an array of tuples basically this is again an app module so",
    "start": "2742690",
    "end": "2748720"
  },
  {
    "text": "you're in your module file you have for this array of tuples where you'll have the component and the selector and then",
    "start": "2748720",
    "end": "2755109"
  },
  {
    "text": "you can just use a JavaScript for of loop here and loop through that that",
    "start": "2755109",
    "end": "2760539"
  },
  {
    "text": "array of tuples and call create custom element with passing in the component and then call custom elements define",
    "start": "2760539",
    "end": "2767710"
  },
  {
    "text": "which will pass in the name and the custom element and that way every time you add a new custom element all you",
    "start": "2767710",
    "end": "2773019"
  },
  {
    "text": "have to do is add it to this array you don't have to redo this custom element define like 15 20 30 40 100 times in",
    "start": "2773019",
    "end": "2781029"
  },
  {
    "text": "your application you might want to also group your custom elements into modules so instead of having everything in app",
    "start": "2781029",
    "end": "2787059"
  },
  {
    "start": "2782000",
    "end": "2782000"
  },
  {
    "text": "module maybe you want to have them by feature which will help you then once the app is fully migrated",
    "start": "2787059",
    "end": "2793130"
  },
  {
    "text": "ditching angular elements you already have everything grouped by feature so",
    "start": "2793130",
    "end": "2799089"
  },
  {
    "start": "2798000",
    "end": "2798000"
  },
  {
    "text": "sometimes you need to share data with services sometimes you need to share state and that that is not ideal",
    "start": "2799089",
    "end": "2808160"
  },
  {
    "text": "sometimes some you'd like to use just like inputs and outputs like we've just been talking about but sometimes it's",
    "start": "2808160",
    "end": "2814130"
  },
  {
    "text": "just unavoidable for whatever reason when you live in the real world and so I'm just gonna forewarn you this is",
    "start": "2814130",
    "end": "2819500"
  },
  {
    "text": "another thing that's gonna seem really simple when I talk to you about it and then when you go back and you're trying",
    "start": "2819500",
    "end": "2825019"
  },
  {
    "text": "to deal with like all these different things in your real-world application you might run into some complications so",
    "start": "2825019",
    "end": "2830390"
  },
  {
    "text": "just judge accordingly when you get back to work and the reason is recurrence we're gonna be off-roading with",
    "start": "2830390",
    "end": "2835670"
  },
  {
    "start": "2833000",
    "end": "2833000"
  },
  {
    "text": "JavaScript with vanilla JavaScript when we talked about the two change detection systems and zone Jas and Dollar digests",
    "start": "2835670",
    "end": "2843230"
  },
  {
    "text": "and all that and we're gonna use these vanilla services and just totally bypass all of that and try to wrap them in in",
    "start": "2843230",
    "end": "2849829"
  },
  {
    "text": "angular and angularjs so things can get a little wonky sometimes but basically we're going to create these vanilla",
    "start": "2849829",
    "end": "2855109"
  },
  {
    "start": "2851000",
    "end": "2851000"
  },
  {
    "text": "JavaScript services as Singleton's and then wrap them inside of an angular",
    "start": "2855109",
    "end": "2861200"
  },
  {
    "text": "wrapper and an angularjs wrapper so that we can use them inside the two frameworks so here's an example of what",
    "start": "2861200",
    "end": "2867920"
  },
  {
    "text": "that singleton could look like so we've got a property here called lazy shared",
    "start": "2867920",
    "end": "2873619"
  },
  {
    "text": "instance that's of the type customer service our undefined and then we have this class of customer service that has",
    "start": "2873619",
    "end": "2880099"
  },
  {
    "text": "a static method called shared instance and basically when that static method",
    "start": "2880099",
    "end": "2885170"
  },
  {
    "text": "gets called it just was like hey is there a lazy shared instance no there's",
    "start": "2885170",
    "end": "2890779"
  },
  {
    "text": "not okay well I'll create one a new instance of the customer service and in either case I'm just going to return",
    "start": "2890779",
    "end": "2896210"
  },
  {
    "text": "lazy shared instance and that's how we make sure it's just like a very simple way to create a simple singleton there",
    "start": "2896210",
    "end": "2902240"
  },
  {
    "text": "are many ways to create a javascript singleton this one is one and so then",
    "start": "2902240",
    "end": "2907849"
  },
  {
    "text": "what we do is we would create an angular version of that service and in that",
    "start": "2907849",
    "end": "2912890"
  },
  {
    "text": "angular service which would just have a regular injectable we'd create a read-only property of the customer",
    "start": "2912890",
    "end": "2918890"
  },
  {
    "text": "service and then we could create we could call this shared instance method on it and then we could do the same",
    "start": "2918890",
    "end": "2924259"
  },
  {
    "text": "thing in angularjs this is using es6 you could also use regular es5 and you're in your legacy",
    "start": "2924259",
    "end": "2930440"
  },
  {
    "text": "code but just for the sake of readability do the same thing you have a read-only property and you have the",
    "start": "2930440",
    "end": "2935719"
  },
  {
    "text": "shared instance method there and then we could just call customer service get customers in either framework so for",
    "start": "2935719",
    "end": "2942499"
  },
  {
    "text": "example in angular we would wrap that promise into a creation method to turn",
    "start": "2942499",
    "end": "2948229"
  },
  {
    "text": "that into an observable because let's assume that the vanilla one is using like the fetch API or something and",
    "start": "2948229",
    "end": "2953599"
  },
  {
    "text": "returning a promise and then in angularjs which already uses promises you would just use the promise use dot",
    "start": "2953599",
    "end": "2960440"
  },
  {
    "text": "then call the vanilla service there's just one caveat with angularjs remember I mentioned the digest cycle we actually",
    "start": "2960440",
    "end": "2966979"
  },
  {
    "text": "need to call dollar route scope dot apply because that promise is living outside of the change detection system",
    "start": "2966979",
    "end": "2972799"
  },
  {
    "text": "it's not part of regular angularjs which I know is a pain and at this point is practically an anti-pattern but it's",
    "start": "2972799",
    "end": "2979430"
  },
  {
    "text": "just unavoidable in this scenario and so I would encourage you to use the inputs",
    "start": "2979430",
    "end": "2984650"
  },
  {
    "text": "and outputs as much as possible just because off-roading in the vanilla",
    "start": "2984650",
    "end": "2989749"
  },
  {
    "text": "JavaScript what the change detection cycle can get kind of complicated and the reason why you want to you want to",
    "start": "2989749",
    "end": "2997009"
  },
  {
    "start": "2993000",
    "end": "2993000"
  },
  {
    "text": "do this as sort of this idea of indirection in your application we sort of talked about this at the beginning but you can think of indirection like",
    "start": "2997009",
    "end": "3003999"
  },
  {
    "start": "2998000",
    "end": "2998000"
  },
  {
    "text": "when you go to our restaurant you don't run to the back of the kitchen and tell the chef like what you want to eat you",
    "start": "3003999",
    "end": "3009969"
  },
  {
    "text": "order it through a waiter and this provides this kind of layer between what you want to eat and how the food gets",
    "start": "3009969",
    "end": "3016359"
  },
  {
    "text": "made so the chef doesn't need to know anything about the customer and the you the customer don't need to know anything",
    "start": "3016359",
    "end": "3022359"
  },
  {
    "text": "about how to make the food and this allows a lot more flexibility there's going to be many different customers",
    "start": "3022359",
    "end": "3027999"
  },
  {
    "text": "again it's going to be many different orders and that's the power of indirection and incidentally indirection",
    "start": "3027999",
    "end": "3034209"
  },
  {
    "text": "is the core foundation of the redux pattern which in angular gets translated",
    "start": "3034209",
    "end": "3039339"
  },
  {
    "text": "into ng rx and the reason I bring this up is because when we go back and look at the use cases for these angular",
    "start": "3039339",
    "end": "3045969"
  },
  {
    "text": "elements migrations we talked about large acts with high complexity and these legacy patterns",
    "start": "3045969",
    "end": "3051830"
  },
  {
    "text": "and coincidentally those first two the large apps with high complexity are also",
    "start": "3051830",
    "end": "3056840"
  },
  {
    "text": "fantastic use cases for n gr x and the Redux pattern and so there's a good",
    "start": "3056840",
    "end": "3063380"
  },
  {
    "text": "possibility I'm not going to say always and that you should do this but there's a good possibility that you're gonna get",
    "start": "3063380",
    "end": "3069680"
  },
  {
    "text": "down the road with your large angular application and realize that you should be using ng Rx for state management we",
    "start": "3069680",
    "end": "3077480"
  },
  {
    "text": "can't spend we can't spend a lot of time on this but feel free to come talk to me afterwards and things like that if you",
    "start": "3077480",
    "end": "3082910"
  },
  {
    "text": "want to talk about Redux and ng rx and migrations and things like that I gave a",
    "start": "3082910",
    "end": "3088640"
  },
  {
    "text": "talk at ng Vikings last year with Mike Ryan on this very thing of using ng rx",
    "start": "3088640",
    "end": "3093890"
  },
  {
    "text": "to share state between angularjs and angular so it's a very popular pattern",
    "start": "3093890",
    "end": "3099010"
  },
  {
    "start": "3099000",
    "end": "3099000"
  },
  {
    "text": "okay so just finishing up the upgrade here let's say you've already done all the component updates you need to go",
    "start": "3099010",
    "end": "3106370"
  },
  {
    "start": "3105000",
    "end": "3105000"
  },
  {
    "text": "back and add selectors so I omitted the the selector from earlier but one good",
    "start": "3106370",
    "end": "3112160"
  },
  {
    "text": "practice would be to have a commented out selector because you remember the selector is getting defined when you",
    "start": "3112160",
    "end": "3117590"
  },
  {
    "text": "called custom elements that define so that's why you don't have the selector here in the decorator so you might want",
    "start": "3117590",
    "end": "3123410"
  },
  {
    "text": "to have commented out selectors so that then once you're done migrating you can just uncomment it and you're good to go",
    "start": "3123410",
    "end": "3130570"
  },
  {
    "start": "3130000",
    "end": "3130000"
  },
  {
    "text": "lastly you're going to go back and switch all your routing if you were using angularjs for routing you'll",
    "start": "3130570",
    "end": "3136550"
  },
  {
    "text": "switch that over to angular there's there's not much to that other than it's just sort of a grind of doing it but I",
    "start": "3136550",
    "end": "3142520"
  },
  {
    "text": "would leave it to the end I wouldn't try to have both routers going at the same time if you can help it and then lastly",
    "start": "3142520",
    "end": "3148580"
  },
  {
    "start": "3147000",
    "end": "3147000"
  },
  {
    "text": "you'll drop the angular elements package I got to make sure I say that cuz one of the times I gave this talk somebody was",
    "start": "3148580",
    "end": "3154130"
  },
  {
    "text": "very confused that I I say at the end like just drop angular elements because he thought I meant like delete all the",
    "start": "3154130",
    "end": "3159830"
  },
  {
    "text": "work that she did so you're gonna get rid of the dependency of angular elements basically which means that you",
    "start": "3159830",
    "end": "3165320"
  },
  {
    "text": "want to clean up your modules get rid of all that bootstrapping code uninstall the package and the tooling around it",
    "start": "3165320",
    "end": "3171950"
  },
  {
    "text": "and then you can probably get rid of most of the polyfills that you added for the custom elements you might have to",
    "start": "3171950",
    "end": "3177920"
  },
  {
    "text": "keep some of them for just for the sake of angular but the specific web component stuff you'll be able to get",
    "start": "3177920",
    "end": "3183560"
  },
  {
    "text": "rid of okay so I've hit you live like so much information in the last 52 minutes",
    "start": "3183560",
    "end": "3190279"
  },
  {
    "text": "luckily this is recorded and I'm always available being a GD e and stuff like",
    "start": "3190279",
    "end": "3195390"
  },
  {
    "text": "part of my job is to help you with these things so please always feel free to come talk to me but the we talked about",
    "start": "3195390",
    "end": "3203249"
  },
  {
    "text": "how web components are this this idea of reusable custom elements with the functionality encapsulated from the rest",
    "start": "3203249",
    "end": "3210210"
  },
  {
    "text": "of the code then we looked at sort of the anatomy of the vanilla custom element with the selector the class and",
    "start": "3210210",
    "end": "3218489"
  },
  {
    "text": "the options object and we talked about how that gets a little complicated when",
    "start": "3218489",
    "end": "3223799"
  },
  {
    "text": "you start getting into the more advanced features of web components and making sure that they're compatible with",
    "start": "3223799",
    "end": "3229739"
  },
  {
    "text": "browsers which is what leads to the creation of those component libraries like stencil and lit element and angular",
    "start": "3229739",
    "end": "3237059"
  },
  {
    "text": "elements then we looked at the elements upgrade strategy piece by piece where",
    "start": "3237059",
    "end": "3242339"
  },
  {
    "text": "first you've got the setup process then you've got you're sort of just grind of upgrading all the components one by one",
    "start": "3242339",
    "end": "3249859"
  },
  {
    "text": "and then you've got this idea of sharing state with vanilla JavaScript services and wrappers and then you basically just",
    "start": "3249859",
    "end": "3257940"
  },
  {
    "text": "convert the routing and remove the elements and that's basically it there's",
    "start": "3257940",
    "end": "3265229"
  },
  {
    "text": "a number of resources out there on this subject there there's even more than",
    "start": "3265229",
    "end": "3271920"
  },
  {
    "text": "what I've got here so if this is something that you really go down the rabbit hole with get in touch with me",
    "start": "3271920",
    "end": "3278190"
  },
  {
    "text": "and there's there's number of things for example the the consulting firm Narwhal has been doing this process with Capital",
    "start": "3278190",
    "end": "3285150"
  },
  {
    "text": "One the bank and they've written about this process",
    "start": "3285150",
    "end": "3290160"
  },
  {
    "text": "I think it's on medium they've got articles about this process of using elements for upgrading last year at",
    "start": "3290160",
    "end": "3297359"
  },
  {
    "text": "ng-conf they also gave a talk about this process where they go through some of",
    "start": "3297359",
    "end": "3302729"
  },
  {
    "text": "the pitfalls and they looked at ng upgraded things like that so that's a",
    "start": "3302729",
    "end": "3308219"
  },
  {
    "text": "good resource just Google like upgrade Capital One or something like that you can find that there are a lot of other",
    "start": "3308219",
    "end": "3316289"
  },
  {
    "text": "like more broad resources on web components and things like that if you just start going down",
    "start": "3316289",
    "end": "3321680"
  },
  {
    "text": "that rabbit hole on on Google but I think I think that's basically it the",
    "start": "3321680",
    "end": "3326800"
  },
  {
    "text": "slides are at NDC - London or they will be within the hour or so so just Sam ji",
    "start": "3326800",
    "end": "3334850"
  },
  {
    "text": "m / NDC London and you can follow me on Twitter at Sam julene send me a message",
    "start": "3334850",
    "end": "3342460"
  },
  {
    "text": "whatever I also have Ott's zero stickers up here feel free to grab a non zero",
    "start": "3342460",
    "end": "3347810"
  },
  {
    "text": "sticker and that is basically it with five minutes back of your life so thank",
    "start": "3347810",
    "end": "3354290"
  },
  {
    "text": "you so much we have a few minutes for",
    "start": "3354290",
    "end": "3362450"
  },
  {
    "text": "questions if anybody's got a burning answer otherwise you can all take off and people can stay behind looks like the verdict is everybody take",
    "start": "3362450",
    "end": "3369410"
  },
  {
    "text": "off it's a good vibe I don't blame you I don't blame you",
    "start": "3369410",
    "end": "3373990"
  }
]