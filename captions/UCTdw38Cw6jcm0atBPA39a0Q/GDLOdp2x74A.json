[
  {
    "text": "[Music]",
    "start": "8370",
    "end": "11540"
  },
  {
    "text": "okay yes sorry I'm doing in English I started in the wrong language I feel",
    "start": "15199",
    "end": "20240"
  },
  {
    "text": "like I'm entering the wasps nest uh when I'm uh coming to C++ conference and",
    "start": "20240",
    "end": "26400"
  },
  {
    "text": "advocating rust so uh please don't eat me",
    "start": "26400",
    "end": "31480"
  },
  {
    "text": "[Music] um this is me as you see I'm an ed developer at",
    "start": "31480",
    "end": "40239"
  },
  {
    "text": "inventas and I'm a self acclaimed rust evangelist so I sometimes go around and",
    "start": "40239",
    "end": "47920"
  },
  {
    "text": "talk about rest and point at screens I also",
    "start": "47920",
    "end": "53680"
  },
  {
    "text": "climb um let's get started on on today's task we're going to I'm going to show you how",
    "start": "53680",
    "end": "60840"
  },
  {
    "text": "to uh do a very simple embedded project uh on the NRF 52 uh using the the radio",
    "start": "60840",
    "end": "68600"
  },
  {
    "text": "to make um an LED on a different device blink simple set up two or more",
    "start": "68600",
    "end": "74720"
  },
  {
    "text": "devices each device has a button and an",
    "start": "74720",
    "end": "79520"
  },
  {
    "text": "LED and if you push the button the other one",
    "start": "79759",
    "end": "84479"
  },
  {
    "text": "blinks um we're using the the NRF 52 uh from",
    "start": "84799",
    "end": "93400"
  },
  {
    "text": "Nordic nice little chip with built-in uh 2.4 GHz",
    "start": "94159",
    "end": "101960"
  },
  {
    "text": "um cortex mp uh nor MCU um yeah we're going to use",
    "start": "103759",
    "end": "111280"
  },
  {
    "text": "the I Tri E Yeah long number sequence um",
    "start": "111280",
    "end": "117719"
  },
  {
    "text": "protocol yes it's it's not supported on all NRF 52s so just heads up if you're",
    "start": "117719",
    "end": "124240"
  },
  {
    "text": "trying to do this yourself uh I I tried to use the NRF thingy and it doesn't support it so uh I",
    "start": "124240",
    "end": "131280"
  },
  {
    "text": "had to make my own Hardware just very quickly about the",
    "start": "131280",
    "end": "138360"
  },
  {
    "text": "protocol uh it's the kind of a lowlevel protocol that uh is used by um zigby and",
    "start": "138360",
    "end": "145840"
  },
  {
    "text": "thread so it's found in all the smart light bulbs and and and stuff in your",
    "start": "145840",
    "end": "151800"
  },
  {
    "text": "home so if you look at this diagram here we're just we're just doing the lower",
    "start": "151800",
    "end": "157160"
  },
  {
    "text": "thing we're we're on the the red arrow which just directly to the low level uh",
    "start": "157160",
    "end": "162560"
  },
  {
    "text": "so it's h fairly simple you can just send a payload to one of 16 channels and",
    "start": "162560",
    "end": "169560"
  },
  {
    "text": "and just hope that someone will receive it yeah so these are the actual chips",
    "start": "169560",
    "end": "176920"
  },
  {
    "text": "that supports um supports the",
    "start": "176920",
    "end": "182159"
  },
  {
    "text": "protocol we're doing it in in Rust of course um it's a Memory safe language I",
    "start": "182159",
    "end": "189599"
  },
  {
    "text": "don't know if if any of you had heard the talk from um uh just at room one now",
    "start": "189599",
    "end": "196000"
  },
  {
    "text": "about memory safety um yes yes good good",
    "start": "196000",
    "end": "201440"
  },
  {
    "text": "good um Rich type system generics all the",
    "start": "201440",
    "end": "206760"
  },
  {
    "text": "modern stuff uh strive towards zeroc cost abstractions so the abstractions should",
    "start": "206760",
    "end": "213720"
  },
  {
    "text": "be as good as if you did it kind of by hand uh so the the the aim is not to",
    "start": "213720",
    "end": "220840"
  },
  {
    "text": "have in overhead so that's why rust is a good fit for the small",
    "start": "220840",
    "end": "226680"
  },
  {
    "text": "microcontroller it's it's not a cult I mean you might have heard that that we",
    "start": "226680",
    "end": "234720"
  },
  {
    "text": "religious uh Fanatics uh and and I promise you we're not a cult um um yeah",
    "start": "234720",
    "end": "241000"
  },
  {
    "text": "yeah sorry about that we're not the",
    "start": "241000",
    "end": "244480"
  },
  {
    "text": "C so um I'm just going to just going to um",
    "start": "248000",
    "end": "254000"
  },
  {
    "text": "ask you guys how many here have like touched R like done a hello",
    "start": "254000",
    "end": "259680"
  },
  {
    "text": "world okay okay quite a few how many have people have actually written like",
    "start": "259680",
    "end": "266400"
  },
  {
    "text": "something an application okay if you and and and how many uses it at",
    "start": "266400",
    "end": "274479"
  },
  {
    "text": "work okay okay few hands good good good so I'm not going to teach you R today that's that's a big topic so H",
    "start": "274479",
    "end": "283580"
  },
  {
    "text": "[Laughter] oh like that yeah am I still um Amplified okay",
    "start": "283580",
    "end": "293560"
  },
  {
    "text": "good okay so I'm not teaching R today so I'm just going to assume that you can",
    "start": "294560",
    "end": "299919"
  },
  {
    "text": "follow along uh but please just like ask questions if something is",
    "start": "299919",
    "end": "305320"
  },
  {
    "text": "unclear um",
    "start": "305320",
    "end": "311880"
  },
  {
    "text": "yeah yeah rust you can use it from everything from from like a front end web to down to embedded stuff it covers",
    "start": "312919",
    "end": "320199"
  },
  {
    "text": "the whole uh the full stack okay I made this little",
    "start": "320199",
    "end": "326560"
  },
  {
    "text": "diagram just to show the application it's pretty simple uh we listen for events there's two",
    "start": "326560",
    "end": "333120"
  },
  {
    "text": "events you can have a button push then we send lead on command wait for one",
    "start": "333120",
    "end": "338479"
  },
  {
    "text": "second just so that the the blink is long enough that you can see it wait for",
    "start": "338479",
    "end": "343600"
  },
  {
    "text": "button release send L off um if we receive the LED on command we",
    "start": "343600",
    "end": "351160"
  },
  {
    "text": "turn it on wait for the off command and turn it off uh should be e",
    "start": "351160",
    "end": "357680"
  },
  {
    "text": "enough so let's dive into it um I made this little button",
    "start": "357680",
    "end": "365599"
  },
  {
    "text": "abstraction here you see some beautiful rust code um we're using the GPO te from",
    "start": "365599",
    "end": "375280"
  },
  {
    "text": "Nordic to handle um events on the uh on the pinth this like interrupts",
    "start": "375280",
    "end": "382759"
  },
  {
    "text": "almost so we set up this um Channel Zero and with the with the input pin that we",
    "start": "382759",
    "end": "389919"
  },
  {
    "text": "get and and use this toggle that means that any activity on pin we want that to",
    "start": "389919",
    "end": "395400"
  },
  {
    "text": "generate an event",
    "start": "395400",
    "end": "400800"
  },
  {
    "text": "um okay so um we have to debounce the",
    "start": "408560",
    "end": "415039"
  },
  {
    "text": "button um I originally used Hardware with with",
    "start": "415039",
    "end": "420319"
  },
  {
    "text": "um a hardware debouncer and I switched and then I had to implement this so so the code is more involved than I was",
    "start": "420319",
    "end": "427080"
  },
  {
    "text": "hoping for but anyway we we want to kind of get the events from the button so we have this function that I've called",
    "start": "427080",
    "end": "434160"
  },
  {
    "text": "debounced event it it returns an option here that's a rust enome type so it it might",
    "start": "434160",
    "end": "442800"
  },
  {
    "text": "return none so if there is an event we we have to kind of open the uh to see if",
    "start": "442800",
    "end": "449039"
  },
  {
    "text": "there's uh we had to either none or some event on the option type uh we check if",
    "start": "449039",
    "end": "456120"
  },
  {
    "text": "the event is triggered if it is we do the debouncing",
    "start": "456120",
    "end": "461199"
  },
  {
    "text": "I'm not going to go into detail we just look for a stable value over 10 milliseconds uh reset the",
    "start": "461199",
    "end": "468840"
  },
  {
    "text": "events and then we check the value and and and either it's released or pushed",
    "start": "468840",
    "end": "476280"
  },
  {
    "text": "has happened and we return rapid in sum and and if it's not been triggered it's",
    "start": "476280",
    "end": "486159"
  },
  {
    "text": "not uh does this make sense like the the the option and the like the concept of",
    "start": "490280",
    "end": "496560"
  },
  {
    "text": "enum types and in Rust okay good super easy LED uh",
    "start": "496560",
    "end": "505599"
  },
  {
    "text": "container um this one takes uh generic type",
    "start": "505599",
    "end": "512120"
  },
  {
    "text": "P it can be any any value but here we constraint the constrain it to to",
    "start": "512120",
    "end": "518599"
  },
  {
    "text": "implement the output pin trait so rust the embedded rust ecosystem has this",
    "start": "518599",
    "end": "524240"
  },
  {
    "text": "like common traits that we can we can use so we have uh common traits for pins",
    "start": "524240",
    "end": "530120"
  },
  {
    "text": "gpos and serial buses and everything so we're using that here that means we can",
    "start": "530120",
    "end": "535640"
  },
  {
    "text": "we can write this led uh struct and we can use use it for any microcontroller we can mock the the",
    "start": "535640",
    "end": "542760"
  },
  {
    "text": "the pins uh for testing so it's easy to reuse this is the trait as defined in",
    "start": "542760",
    "end": "550399"
  },
  {
    "text": "the embedded H uh Library you can set low and you can set High we use them",
    "start": "550399",
    "end": "558720"
  },
  {
    "text": "here um yes Nordic Nordic has no",
    "start": "563240",
    "end": "568320"
  },
  {
    "text": "official support for r um which is a shame I think so anyone",
    "start": "568320",
    "end": "575320"
  },
  {
    "text": "from Nordic here today one one guy okay",
    "start": "575320",
    "end": "581959"
  },
  {
    "text": "so I was going to have this emotional appeal to the Nordic employees and tell them to like go go back to your boss and",
    "start": "581959",
    "end": "588399"
  },
  {
    "text": "and tell them to to to use rust because um as we just saw at at room one with",
    "start": "588399",
    "end": "594399"
  },
  {
    "text": "Helga Penna um we shouldn't start new project in in in C++ but maybe maybe not",
    "start": "594399",
    "end": "600760"
  },
  {
    "text": "see maybe we should just at least the vendors should support rust and and show",
    "start": "600760",
    "end": "607000"
  },
  {
    "text": "that they also believe in in memory safety on embed devices so you can join the the the strike force",
    "start": "607000",
    "end": "616480"
  },
  {
    "text": "you know just just call me call HQ and we'll we'll get you set up to to go and",
    "start": "616480",
    "end": "622320"
  },
  {
    "text": "uh and fight the good fight",
    "start": "622320",
    "end": "626480"
  },
  {
    "text": "but anyway we just we don't need Nordic you know because we have this great",
    "start": "630519",
    "end": "635880"
  },
  {
    "text": "community and they have made this NRF H uh to",
    "start": "635880",
    "end": "641880"
  },
  {
    "text": "support the NRF chip and that's what we're using",
    "start": "641880",
    "end": "647000"
  },
  {
    "text": "today yes so we're just going to dive right into it we're going to in initialize the",
    "start": "650480",
    "end": "657880"
  },
  {
    "text": "the the radio on the the um on the chip and I'm also",
    "start": "657880",
    "end": "663440"
  },
  {
    "text": "going to show you how the rust type system helps us to do things um to avoid",
    "start": "663440",
    "end": "669560"
  },
  {
    "text": "having runtime errors first we have to to uh configure",
    "start": "669560",
    "end": "674959"
  },
  {
    "text": "the external clock you can't use the radio with the default internal clock so we set this up here",
    "start": "674959",
    "end": "683200"
  },
  {
    "text": "um this is from the this is the function from the um community supported Library",
    "start": "683200",
    "end": "689800"
  },
  {
    "text": "it gives us this like a clock struct and it has some generic parameters so if you",
    "start": "689800",
    "end": "695880"
  },
  {
    "text": "see this external oscillator uh it becomes kind of part of",
    "start": "695880",
    "end": "701360"
  },
  {
    "text": "the type the fact that we have configured to use the external one and that's that's um going to be used by",
    "start": "701360",
    "end": "710600"
  },
  {
    "text": "this function so the to initialize the radio we need",
    "start": "710600",
    "end": "717800"
  },
  {
    "text": "to provide this struct with the external o",
    "start": "717800",
    "end": "726399"
  },
  {
    "text": "oscillator and and since there's only one way to construct this value is is through the",
    "start": "726399",
    "end": "733959"
  },
  {
    "text": "enable external uh oscillator function",
    "start": "733959",
    "end": "739720"
  },
  {
    "text": "uh when we have this this valid uh struct with this type we know that the",
    "start": "739720",
    "end": "745040"
  },
  {
    "text": "radio is uh the clock is correctly set up for the radio to work",
    "start": "745040",
    "end": "750240"
  },
  {
    "text": "so which is a really nice feature and this is called a type State pattern and it's widely used in Rust to ensure",
    "start": "750240",
    "end": "757360"
  },
  {
    "text": "especially on Ed rust to ensure that we can't we can't really Express um",
    "start": "757360",
    "end": "765160"
  },
  {
    "text": "incompatible setups we can't uh we can't use the radio with the",
    "start": "765160",
    "end": "771440"
  },
  {
    "text": "internal clock",
    "start": "771440",
    "end": "776959"
  },
  {
    "text": "um yeah",
    "start": "776959",
    "end": "780959"
  },
  {
    "text": "and then we want to receive data from from the from the radio",
    "start": "784680",
    "end": "792600"
  },
  {
    "text": "and the the library comes with this nice little receive function that can receive",
    "start": "792600",
    "end": "799079"
  },
  {
    "text": "data into a buffer but it's it's blocking and that doesn't really work",
    "start": "799079",
    "end": "805279"
  },
  {
    "text": "for our use case here because we're going to listen for the button press and and and listen for data at the same time",
    "start": "805279",
    "end": "811399"
  },
  {
    "text": "so we need something and we're doing this in a super Loop because keeping it",
    "start": "811399",
    "end": "817279"
  },
  {
    "text": "simple so so um it's not really doesn't work with our uh use",
    "start": "817279",
    "end": "823040"
  },
  {
    "text": "case so I did myself and and made a pull",
    "start": "823040",
    "end": "828079"
  },
  {
    "text": "request so I have implemented this non-locking receive and submitted to the the NRF H",
    "start": "828079",
    "end": "836959"
  },
  {
    "text": "um uh GitHub and as you can see here",
    "start": "836959",
    "end": "843240"
  },
  {
    "text": "um the internet is not broken there's random people helping each other out and",
    "start": "843240",
    "end": "850079"
  },
  {
    "text": "and and doing good stuff together so so we can just uh we can just relax and and",
    "start": "850079",
    "end": "855199"
  },
  {
    "text": "and have uh believe in the future this is my new function to do the",
    "start": "855199",
    "end": "864839"
  },
  {
    "text": "non-locking receipt uh it is bit more complex and",
    "start": "864839",
    "end": "871279"
  },
  {
    "text": "and and I guess some of the reasons for that is is",
    "start": "871279",
    "end": "877399"
  },
  {
    "text": "that because rust rust provides memory safety it also means",
    "start": "877399",
    "end": "883600"
  },
  {
    "text": "that there's kind of a higher bar for for for things to be considered safe",
    "start": "883600",
    "end": "889399"
  },
  {
    "text": "rust we're dealing with very unsafe stuff now because we're dealing with the hardware and dma operations",
    "start": "889399",
    "end": "896360"
  },
  {
    "text": "so uh I had to I had to make this bit more complicated because we're passing",
    "start": "896360",
    "end": "903000"
  },
  {
    "text": "this uh mutable reference to the data",
    "start": "903000",
    "end": "908560"
  },
  {
    "text": "and and since we're doing this non-blocking I don't we",
    "start": "908560",
    "end": "915120"
  },
  {
    "text": "couldn't we can't uh if we if we if we risk having risk this buffer being freed",
    "start": "915120",
    "end": "924680"
  },
  {
    "text": "before the transfer is done all of a sudden you have kind of use after to Freed but from the hardware so uh to",
    "start": "924680",
    "end": "931959"
  },
  {
    "text": "prevent this the function actually takes this this uh a function as an argument",
    "start": "931959",
    "end": "938759"
  },
  {
    "text": "here um so the actual handling of the of the kind of the",
    "start": "938759",
    "end": "946480"
  },
  {
    "text": "non-blocking code happens inside this this uh closure that's provided to the",
    "start": "946480",
    "end": "952959"
  },
  {
    "text": "the function to make sure that the packet uh lifetime is uh guaranteed to",
    "start": "952959",
    "end": "959120"
  },
  {
    "text": "outlive the um the the transfer the the receive call",
    "start": "959120",
    "end": "964720"
  },
  {
    "text": "I'm I'm getting into more detail uh so this this function takes um",
    "start": "964720",
    "end": "973079"
  },
  {
    "text": "this is a a closure that takes this a receive object this is just a struct to",
    "start": "973079",
    "end": "979160"
  },
  {
    "text": "kind of uh handle uh uh be a handle for",
    "start": "979160",
    "end": "984319"
  },
  {
    "text": "for the the the receive operation it has one function to check if if the transfer",
    "start": "984319",
    "end": "989639"
  },
  {
    "text": "is done it's either it's [Music]",
    "start": "989639",
    "end": "995440"
  },
  {
    "text": "um yeah to check if it's done it uses this uh non-blocking library that",
    "start": "995440",
    "end": "1000800"
  },
  {
    "text": "provides uh kind of a special uh error",
    "start": "1000800",
    "end": "1006079"
  },
  {
    "text": "type so so uh there's kind of three options there either it's it's uh okay",
    "start": "1006079",
    "end": "1012319"
  },
  {
    "text": "which means that the transfer is is correct in this case it you receive data and the CRC and uh check was was",
    "start": "1012319",
    "end": "1022279"
  },
  {
    "text": "good uh or you receive data and you you have uh an invalid CRC then you get this",
    "start": "1022279",
    "end": "1028918"
  },
  {
    "text": "other but if in case that you haven't received the data yet you get this wood",
    "start": "1028919",
    "end": "1034000"
  },
  {
    "text": "Block in so instead of blocking it just says this would block if it was a",
    "start": "1034000",
    "end": "1039079"
  },
  {
    "text": "blocking call so we can call this is done over and over until we get",
    "start": "1039079",
    "end": "1044720"
  },
  {
    "text": "something other than than wood block",
    "start": "1044720",
    "end": "1049559"
  },
  {
    "text": "so here is kind of here is how we use this",
    "start": "1049840",
    "end": "1056160"
  },
  {
    "text": "function so we have provided here um a closure a rust",
    "start": "1056160",
    "end": "1064600"
  },
  {
    "text": "closure which is an anonomous function that can also capture uh stuff from its environment",
    "start": "1064600",
    "end": "1072880"
  },
  {
    "text": "but in this case we're not capturing anything but it takes takes this receive argument then we get this receive handle",
    "start": "1072880",
    "end": "1080360"
  },
  {
    "text": "and you do a match or first we have a loop here so this this this loops and it",
    "start": "1080360",
    "end": "1086640"
  },
  {
    "text": "calls repeatedly calls it's done and and if we get like an okay or",
    "start": "1086640",
    "end": "1092480"
  },
  {
    "text": "or the the other then we break out Loop or else",
    "start": "1092480",
    "end": "1098400"
  },
  {
    "text": "we just continue looping if we get the wood block so this is now we just basically created a",
    "start": "1098400",
    "end": "1104679"
  },
  {
    "text": "blocking a blocking function uh from the non-blocking but",
    "start": "1104679",
    "end": "1109760"
  },
  {
    "text": "I'll show you next how we use it in our application any questions so",
    "start": "1109760",
    "end": "1117240"
  },
  {
    "text": "far then I'll just uh continue here yeah yeah I had this highlighting and I",
    "start": "1117240",
    "end": "1123559"
  },
  {
    "text": "forgot about it okay yeah",
    "start": "1123559",
    "end": "1128919"
  },
  {
    "text": "yes this is our superloop there's a lot of code here I'm",
    "start": "1128919",
    "end": "1134200"
  },
  {
    "text": "not showing you because it's just setting up the embed stuff I have a full example that you can check out later but",
    "start": "1134200",
    "end": "1139799"
  },
  {
    "text": "this is just to to show the uh essence of the code so first we get um we get an",
    "start": "1139799",
    "end": "1149480"
  },
  {
    "text": "event and this is this is our event [Music]",
    "start": "1149919",
    "end": "1156240"
  },
  {
    "text": "um uh this is our code to get the event so there's two",
    "start": "1156240",
    "end": "1162280"
  },
  {
    "text": "events um this is all done inside this uh non-blocking closure so so",
    "start": "1162280",
    "end": "1169400"
  },
  {
    "text": "uh inside here we are actively we have started the transfer and it it might or",
    "start": "1169400",
    "end": "1174720"
  },
  {
    "text": "might not be done um we started checking the",
    "start": "1174720",
    "end": "1180360"
  },
  {
    "text": "button we see did we did someone push the button did we get this button push event if so yes we break out so so",
    "start": "1180360",
    "end": "1188400"
  },
  {
    "text": "Define this these events here uh and then if that didn't happen",
    "start": "1188400",
    "end": "1194600"
  },
  {
    "text": "which check did we receive is the receive done um if so yes great packet receive or U",
    "start": "1194600",
    "end": "1203799"
  },
  {
    "text": "invalid packet we also break because the receive is is uh finished woodlock we",
    "start": "1203799",
    "end": "1210159"
  },
  {
    "text": "continue I I the continue here is is um we could drop it because there's nothing",
    "start": "1210159",
    "end": "1216440"
  },
  {
    "text": "below here but I'm just I just add it for clearity um",
    "start": "1216440",
    "end": "1224000"
  },
  {
    "text": "so we're kind of and we're binding here the uh",
    "start": "1224000",
    "end": "1229320"
  },
  {
    "text": "uh I'm just going to back I I forgot to mention one thing important thing",
    "start": "1229320",
    "end": "1234720"
  },
  {
    "text": "here let's see yes so the return type of the",
    "start": "1234720",
    "end": "1243320"
  },
  {
    "text": "closure is generic um and and also the the receive",
    "start": "1243320",
    "end": "1252840"
  },
  {
    "text": "also returns this generic type so so whatever the return value of the closure",
    "start": "1252840",
    "end": "1260159"
  },
  {
    "text": "is that's what we get back so any value is is okay there",
    "start": "1260159",
    "end": "1267400"
  },
  {
    "text": "um yeah so this this this whole thing",
    "start": "1268440",
    "end": "1274600"
  },
  {
    "text": "here returns when we break with an argument we the kind the loop returns",
    "start": "1274600",
    "end": "1280000"
  },
  {
    "text": "this value and that what the whole function call returns and that's what we store inside the event variable",
    "start": "1280000",
    "end": "1289000"
  },
  {
    "text": "okay so we have the event now we [Music]",
    "start": "1289080",
    "end": "1294559"
  },
  {
    "text": "um we can handle each of the three cases if we get the CRC error we",
    "start": "1294559",
    "end": "1301400"
  },
  {
    "text": "just continue looping so that's not really interesting but the button pushed and pack receive that's where the magic",
    "start": "1301400",
    "end": "1310000"
  },
  {
    "text": "happens button is pushed we have defined like uh two",
    "start": "1310000",
    "end": "1317360"
  },
  {
    "text": "simple commands it's just a bite string that we can uh send over the",
    "start": "1317360",
    "end": "1324640"
  },
  {
    "text": "radio uh so we send the uh we send the data and then we just",
    "start": "1324640",
    "end": "1332279"
  },
  {
    "text": "chill out for a second and then we we go back and check",
    "start": "1332279",
    "end": "1337720"
  },
  {
    "text": "if the button has been released since uh since then just to to have a minimum",
    "start": "1337720",
    "end": "1343880"
  },
  {
    "text": "time for the uh the blink and then",
    "start": "1343880",
    "end": "1349240"
  },
  {
    "text": "we send the the off command so pretty",
    "start": "1349240",
    "end": "1356080"
  },
  {
    "text": "simple and even simpler on the receive side we received the packet we we check",
    "start": "1357159",
    "end": "1363640"
  },
  {
    "text": "that the the did we get the right packet that we're looking for if",
    "start": "1363640",
    "end": "1369240"
  },
  {
    "text": "so turn on wait for the off",
    "start": "1369240",
    "end": "1375440"
  },
  {
    "text": "command and then and then turn off",
    "start": "1375440",
    "end": "1380399"
  },
  {
    "text": "okay it's it's demo time I bought I brought actual uh Hardware",
    "start": "1383799",
    "end": "1390960"
  },
  {
    "text": "um I I had this idea that I would um build this like uh click prototype and",
    "start": "1390960",
    "end": "1398360"
  },
  {
    "text": "print the case and everything but this this is what I ended up with and",
    "start": "1398360",
    "end": "1404960"
  },
  {
    "text": "and please just before anyone says anything this is not bumb it's uh it's just I'm a lonly software",
    "start": "1404960",
    "end": "1412320"
  },
  {
    "text": "developer trying to do Hardware uh so that's what I end up with um I have two of these here I'm just",
    "start": "1412320",
    "end": "1420120"
  },
  {
    "text": "going to there's no off button so I just um remove the batteries is it possible to like turn off the lights or is this",
    "start": "1420120",
    "end": "1426480"
  },
  {
    "text": "some kind of uh automatic system here because these LEDs are yeah a bit THM",
    "start": "1426480",
    "end": "1434960"
  },
  {
    "text": "okay so any volunteers I promise you it's not going to",
    "start": "1444240",
    "end": "1450440"
  },
  {
    "text": "explode okay okay yes okay so I guess uh you go first",
    "start": "1450440",
    "end": "1457279"
  },
  {
    "text": "press the button and you hold it up yay and then the other way around",
    "start": "1457279",
    "end": "1466960"
  },
  {
    "text": "thank you the simple Jo of embedded development you know it's the best part",
    "start": "1474320",
    "end": "1481559"
  },
  {
    "text": "of the project is when you get that led to to Blink what yes",
    "start": "1481559",
    "end": "1488720"
  },
  {
    "text": "yes it's like magic [Music]",
    "start": "1488720",
    "end": "1494360"
  },
  {
    "text": "um yeah so so so why why should you",
    "start": "1494360",
    "end": "1501520"
  },
  {
    "text": "care about embedded rust [Music]",
    "start": "1501520",
    "end": "1507279"
  },
  {
    "text": "um I I have some points here and and I was hoping maybe to to see if you have any thoughts on that um comp",
    "start": "1507279",
    "end": "1516360"
  },
  {
    "text": "PF H compile time pin safety compile time pin safety yes yes for the uh for",
    "start": "1516360",
    "end": "1523440"
  },
  {
    "text": "for like UHC data clock traes you can't configure",
    "start": "1523440",
    "end": "1528720"
  },
  {
    "text": "a device as long as the bsp is right that's correct yeah you can you can encode you can use the rich type system",
    "start": "1528720",
    "end": "1535279"
  },
  {
    "text": "to encode uh information about uh yeah",
    "start": "1535279",
    "end": "1541480"
  },
  {
    "text": "mix yeah memory safety means uh few",
    "start": "1541480",
    "end": "1548919"
  },
  {
    "text": "bugs and and I think what it actually means is that with few",
    "start": "1549520",
    "end": "1559158"
  },
  {
    "text": "yes with with pure bugs uh uh that means you spend less time debugging which is",
    "start": "1563039",
    "end": "1571880"
  },
  {
    "text": "not fun and you spend more time writing software which is fun so so it more fun",
    "start": "1571880",
    "end": "1578559"
  },
  {
    "text": "should actually be be the headline here R comes with cargo so you have a",
    "start": "1578559",
    "end": "1585679"
  },
  {
    "text": "package manager you want to use the latest cool rtos you just cargo ad and",
    "start": "1585679",
    "end": "1592559"
  },
  {
    "text": "and whoops it's in the build system and it just works no more like uh fiddling",
    "start": "1592559",
    "end": "1597760"
  },
  {
    "text": "with the cake uh stuff yeah I I still don't understand",
    "start": "1597760",
    "end": "1603080"
  },
  {
    "text": "cake it makes no sense to me I tried many times to learn cake and it's just",
    "start": "1603080",
    "end": "1608240"
  },
  {
    "text": "it's impossible high level features um from",
    "start": "1608240",
    "end": "1614080"
  },
  {
    "text": "um from lots of it lots of inspiration in R is from functional programming so if you done like Python and and hasle",
    "start": "1614080",
    "end": "1620600"
  },
  {
    "text": "and stuff you can you can use lots of those um patterns in in rust on an",
    "start": "1620600",
    "end": "1627320"
  },
  {
    "text": "embedded system which is really cool and async uh you can also do on",
    "start": "1627320",
    "end": "1633440"
  },
  {
    "text": "embedded so instead of having uh one instead of having like in three RTO you",
    "start": "1633440",
    "end": "1639200"
  },
  {
    "text": "have a stack for each task and and you start to struggle with memory",
    "start": "1639200",
    "end": "1644559"
  },
  {
    "text": "um if you're doing async tasks each each task only has only uses the amount of",
    "start": "1644559",
    "end": "1651919"
  },
  {
    "text": "memory it it needs and and and it's all all um figured out that compile",
    "start": "1651919",
    "end": "1660480"
  },
  {
    "text": "time type State moves errors from runtime to compile time so that's the",
    "start": "1660480",
    "end": "1665840"
  },
  {
    "text": "the the real uh strength so you can for example if you are working with gpos you",
    "start": "1665840",
    "end": "1673080"
  },
  {
    "text": "can you can encode it in type system that this is configured as an output pin",
    "start": "1673080",
    "end": "1678919"
  },
  {
    "text": "and or an input pin and if it's configured an input pin you you just can't uh write uh change the value of it",
    "start": "1678919",
    "end": "1687080"
  },
  {
    "text": "um and so no more like uh uh undefined yeah no more uh weird",
    "start": "1687080",
    "end": "1695200"
  },
  {
    "text": "erors where you thought you had it configured correctly and you didn't or",
    "start": "1695200",
    "end": "1700320"
  },
  {
    "text": "in in case of you using some pins to a uh for iare C uh the alternate function",
    "start": "1700320",
    "end": "1707919"
  },
  {
    "text": "is is already encoded in the type so you know that your pins are set up correctly when you configure the",
    "start": "1707919",
    "end": "1715120"
  },
  {
    "text": "bus the uh embedded H it's common trait for embedded systems community supported",
    "start": "1715240",
    "end": "1721159"
  },
  {
    "text": "trying to so you can make high level uh libraries for uh um for example uh let's",
    "start": "1721159",
    "end": "1728320"
  },
  {
    "text": "say you have um seven segment display driver that you made you can make it",
    "start": "1728320",
    "end": "1734200"
  },
  {
    "text": "generate generate for uh all kind of uh systems and you can also swap out let's",
    "start": "1734200",
    "end": "1740919"
  },
  {
    "text": "say you want to use an IO expander instead of driving the pins",
    "start": "1740919",
    "end": "1745960"
  },
  {
    "text": "directly uh super easy to use if you use these",
    "start": "1745960",
    "end": "1751279"
  },
  {
    "text": "traes great tools um cargo is the kind of the Swiss",
    "start": "1751279",
    "end": "1758360"
  },
  {
    "text": "arm knife of uh rust you can build and you can add extensions to it to to run",
    "start": "1758360",
    "end": "1764120"
  },
  {
    "text": "code uh directly on um MCU and and there's a friendly",
    "start": "1764120",
    "end": "1771799"
  },
  {
    "text": "Community not a cult yeah yeah definitely not uh and and um I'm just going to show",
    "start": "1772120",
    "end": "1779480"
  },
  {
    "text": "one more thing here because at the at the the the C++ where do we go now uh",
    "start": "1779480",
    "end": "1785640"
  },
  {
    "text": "talk that was just um just happened uh there was a nice slide I I took um",
    "start": "1785640",
    "end": "1792080"
  },
  {
    "text": "picture of it let's I think we need to zoom in here where's the uh",
    "start": "1792080",
    "end": "1799200"
  },
  {
    "text": "so the topic here for those who didn't go is like uh C++ is memory is not",
    "start": "1799200",
    "end": "1807039"
  },
  {
    "text": "memory safe how do we fix it and and here's basically the the suggestion is",
    "start": "1807039",
    "end": "1813480"
  },
  {
    "text": "uh the solution is to make C++ uh like",
    "start": "1813480",
    "end": "1818559"
  },
  {
    "text": "rust I'm thinking like why why just why can't you just use rust if if uh we have",
    "start": "1818679",
    "end": "1824200"
  },
  {
    "text": "to change all of C++ to to make it uh memory safe",
    "start": "1824200",
    "end": "1829960"
  },
  {
    "text": "[Music] um yeah okay",
    "start": "1832640",
    "end": "1839679"
  },
  {
    "text": "so any any any any thoughts on on on why we should use rest or",
    "start": "1839919",
    "end": "1846880"
  },
  {
    "text": "not yeah not for this but um",
    "start": "1846880",
    "end": "1856760"
  },
  {
    "text": "in terms of code size um I haven't done like any comparison",
    "start": "1858240",
    "end": "1865600"
  },
  {
    "text": "but I I I don't see why it would be any different from C with similar footprint",
    "start": "1865600",
    "end": "1871559"
  },
  {
    "text": "I guess yeah yeah and if you do link time optimizations you kind of peel away",
    "start": "1871559",
    "end": "1876880"
  },
  {
    "text": "like all the UN unused stuff yeah to use",
    "start": "1876880",
    "end": "1883480"
  },
  {
    "text": "Z yes I've tried to use zepher for the Nordic uh",
    "start": "1883480",
    "end": "1888760"
  },
  {
    "text": "I haven't used a lot but like I really don't like",
    "start": "1888760",
    "end": "1894720"
  },
  {
    "text": "sepher like the the the macro abuse in sephr is just it's too much so um but",
    "start": "1894720",
    "end": "1901519"
  },
  {
    "text": "now I heard they got rust support in sephr so so maybe I'll give it another chance they're working on it okay okay",
    "start": "1901519",
    "end": "1907279"
  },
  {
    "text": "which is super that's that's super cool because then maybe seph is useable uh",
    "start": "1907279",
    "end": "1914279"
  },
  {
    "text": "and uh and especially if you can use cargo and don't have you see Mak and West that' be",
    "start": "1914279",
    "end": "1921840"
  },
  {
    "text": "great yeah yeah",
    "start": "1924559",
    "end": "1930760"
  },
  {
    "text": "compil comp um so for this project uh I just",
    "start": "1930760",
    "end": "1937159"
  },
  {
    "text": "use plain old uh the default rust compiler and the default",
    "start": "1937159",
    "end": "1942320"
  },
  {
    "text": "Linker but the it so rest uses llvm under the",
    "start": "1942320",
    "end": "1948159"
  },
  {
    "text": "so you get that for free so you just had to add like the the target yeah but I in",
    "start": "1948159",
    "end": "1954840"
  },
  {
    "text": "a different project I'm working on now uh I have to I have to link in like some vendor",
    "start": "1954840",
    "end": "1962799"
  },
  {
    "text": "libraries that's written in C uh and the default rust Linker didn't really um",
    "start": "1962799",
    "end": "1969399"
  },
  {
    "text": "play nice with that so then I'm using GCC uh as the",
    "start": "1969399",
    "end": "1974519"
  },
  {
    "text": "Linker and that works so you can you can swap out the Linker in e in in",
    "start": "1974519",
    "end": "1981519"
  },
  {
    "text": "cargo if you require like a certifi compil yeah yeah looks pretty",
    "start": "1983559",
    "end": "1992960"
  },
  {
    "text": "promising",
    "start": "1992960",
    "end": "1995960"
  },
  {
    "text": "yeah problem interrupts are challenging because you need some kind of global",
    "start": "2000000",
    "end": "2006360"
  },
  {
    "text": "mutable state uh so so there are many different ways",
    "start": "2006360",
    "end": "2011799"
  },
  {
    "text": "of of uh dealing with that but um kind of the key is you have to kind",
    "start": "2011799",
    "end": "2017840"
  },
  {
    "text": "of encapsulate the the the global State uh in in something a bit safer so on a",
    "start": "2017840",
    "end": "2024639"
  },
  {
    "text": "on a single core um microcontroller you would probably use CR critical sections",
    "start": "2024639",
    "end": "2031480"
  },
  {
    "text": "uh to ensure that you don't have a data Ras um with interrupts uh if you have",
    "start": "2031480",
    "end": "2037120"
  },
  {
    "text": "multicore and yeah it's more complex probably atomics would be the solution",
    "start": "2037120",
    "end": "2043399"
  },
  {
    "text": "if you have the rp240 with no atomics and two cores",
    "start": "2043399",
    "end": "2049720"
  },
  {
    "text": "yeah then then you're out",
    "start": "2049720",
    "end": "2054000"
  },
  {
    "text": "luck yeah when reading the pack you you actually move forward to",
    "start": "2055159",
    "end": "2063679"
  },
  {
    "text": "read this I I just did the super Loop uh implementation here uh you could get an",
    "start": "2064399",
    "end": "2071480"
  },
  {
    "text": "interrupt um I'm not sure if that so the the the the the library I'm",
    "start": "2071480",
    "end": "2079320"
  },
  {
    "text": "using uh was only did only support the blocking use case I added an unblocking",
    "start": "2079320",
    "end": "2086960"
  },
  {
    "text": "and possible to add an interrupt uh driven use case as well but",
    "start": "2086960",
    "end": "2092440"
  },
  {
    "text": "it's community supported so you only have what people needed before the",
    "start": "2092440",
    "end": "2098680"
  },
  {
    "text": "abute requ yeah then I would then I would go",
    "start": "2098680",
    "end": "2105839"
  },
  {
    "text": "it's it's just like rust code so you can just go and and and contribute the changes to the library and get it",
    "start": "2105839",
    "end": "2112000"
  },
  {
    "text": "working that's my yeah",
    "start": "2112000",
    "end": "2116320"
  },
  {
    "text": "suggestion yeah",
    "start": "2119880",
    "end": "2123880"
  },
  {
    "text": "uh yeah yeah there's for each like common microcontroller you'll find a a",
    "start": "2130160",
    "end": "2135800"
  },
  {
    "text": "community support packet and library and I submitted this PR and they responded",
    "start": "2135800",
    "end": "2142599"
  },
  {
    "text": "immediately uh and they were very friendly and they had some concerns with my initial proposal and I fixed those",
    "start": "2142599",
    "end": "2149680"
  },
  {
    "text": "and and it's all good it hasn't been merged yet because they're waiting for some more reviews but",
    "start": "2149680",
    "end": "2156359"
  },
  {
    "text": "yeah and that's that's my that's my general uh um experience that it's super easy to",
    "start": "2156359",
    "end": "2165280"
  },
  {
    "text": "uh to contribute to this projects and they are like very interested in in having especially if if if you actually",
    "start": "2165280",
    "end": "2173240"
  },
  {
    "text": "submit code uh pull request instead of just like complaining on the in an issue",
    "start": "2173240",
    "end": "2179079"
  },
  {
    "text": "they are super friendly okay any anyone else",
    "start": "2179079",
    "end": "2188839"
  },
  {
    "text": "yeah what's the biggest pain the so the biggest",
    "start": "2188839",
    "end": "2195240"
  },
  {
    "text": "pain uh I would say lack of vendor support is is a pain point because you",
    "start": "2195240",
    "end": "2203040"
  },
  {
    "text": "don't cover all all use cases and it also uh kind of sends the signal that it",
    "start": "2203040",
    "end": "2209000"
  },
  {
    "text": "it's not being taken seriously [Music]",
    "start": "2209000",
    "end": "2215079"
  },
  {
    "text": "um I mean if you want memory safety there will be",
    "start": "2215079",
    "end": "2221319"
  },
  {
    "text": "pain points I think that's the uh it's it's very hard to avoid because lots of the pain points in R are",
    "start": "2221319",
    "end": "2228560"
  },
  {
    "text": "dealing with uh lifetimes and and and",
    "start": "2228560",
    "end": "2234000"
  },
  {
    "text": "the borrow Checker and I'm not sure if if uh there's a way around that I mean in a",
    "start": "2234000",
    "end": "2240760"
  },
  {
    "text": "way you're all you're already dealing with uh these issues in any code base",
    "start": "2240760",
    "end": "2246280"
  },
  {
    "text": "but in Rust it's very explicit and enforced by the compiler that makes it bit harder but okay so",
    "start": "2246280",
    "end": "2253800"
  },
  {
    "text": "kind of the the biggest challenge is maybe when writing embedded R you have",
    "start": "2253800",
    "end": "2260480"
  },
  {
    "text": "to you have to write unsafe code at some point to interact with the hardware and",
    "start": "2260480",
    "end": "2266200"
  },
  {
    "text": "the interaction between safe and unsafe is is challenging because you the stuff",
    "start": "2266200",
    "end": "2272319"
  },
  {
    "text": "you do in unsafe can infect the safe code if you don't uphold all the uh the",
    "start": "2272319",
    "end": "2278079"
  },
  {
    "text": "guarantees of the r compiler so if you uh if you write unsafe code that you",
    "start": "2278079",
    "end": "2285720"
  },
  {
    "text": "know um writes data into uh into a",
    "start": "2285720",
    "end": "2291760"
  },
  {
    "text": "non-mutable reference that's instant undefined behavior and it could blow up",
    "start": "2291760",
    "end": "2297720"
  },
  {
    "text": "uh your application maybe not when the right happens but at some later point and and you have to manage that because",
    "start": "2297720",
    "end": "2303760"
  },
  {
    "text": "the safe the the rust compiler assumes that safe code is is safe and upholds",
    "start": "2303760",
    "end": "2310000"
  },
  {
    "text": "all the guarantees and will optimize your code based on that so in in in C you kind of is a free-for all but uh in",
    "start": "2310000",
    "end": "2317480"
  },
  {
    "text": "in R you have to be more disciplined",
    "start": "2317480",
    "end": "2324720"
  },
  {
    "text": "yeah so there are a few kind of rest native",
    "start": "2328839",
    "end": "2334359"
  },
  {
    "text": "Alternatives um there one called r Artic that's uh uh has kind of a novel",
    "start": "2334359",
    "end": "2341599"
  },
  {
    "text": "approach to uh uses the interrupt controller as a scheduler which is kind",
    "start": "2341599",
    "end": "2346960"
  },
  {
    "text": "of uh yeah uh or and and",
    "start": "2346960",
    "end": "2354079"
  },
  {
    "text": "um I mean you can you can use any I I use free rtos from from rust which works",
    "start": "2354079",
    "end": "2359800"
  },
  {
    "text": "fine uh and but I think the most promising is the the async is a project",
    "start": "2359800",
    "end": "2365480"
  },
  {
    "text": "called Embassy that uh has this uh async runtime for R so you get very like small",
    "start": "2365480",
    "end": "2371960"
  },
  {
    "text": "memory footprint tasks and it's I mean since you're single traded anyway you",
    "start": "2371960",
    "end": "2377160"
  },
  {
    "text": "you um um it doesn't really yeah so",
    "start": "2377160",
    "end": "2385078"
  },
  {
    "text": "the you it's easier to kind of Reason about the the incorporative uh",
    "start": "2385560",
    "end": "2390640"
  },
  {
    "text": "multitasking in a way on a small system at least I found that um",
    "start": "2390640",
    "end": "2399078"
  },
  {
    "text": "yeah okay I put out the code for the",
    "start": "2407400",
    "end": "2416920"
  },
  {
    "text": "demo if anyone wants to have a closer look uh it's all tied to my um Hardware",
    "start": "2416920",
    "end": "2424440"
  },
  {
    "text": "so you have to update the the PIN numbering but it should",
    "start": "2424440",
    "end": "2431040"
  },
  {
    "text": "work uh you want you want to buy",
    "start": "2431040",
    "end": "2438440"
  },
  {
    "text": "this maybe I'll make a kit with the glue gun and everything",
    "start": "2438440",
    "end": "2444240"
  },
  {
    "text": "included yeah you",
    "start": "2446160",
    "end": "2450400"
  },
  {
    "text": "expence um to like take an existing uh code base",
    "start": "2451280",
    "end": "2459240"
  },
  {
    "text": "there's a tool",
    "start": "2464520",
    "end": "2467920"
  },
  {
    "text": "yeah yeah I haven't tried those tools I've heard about the C2 rust Tool uh",
    "start": "2474040",
    "end": "2479520"
  },
  {
    "text": "what I probably would do was and what I have done is to to uh instead of instead",
    "start": "2479520",
    "end": "2485880"
  },
  {
    "text": "of rewriting everything in in in Rust um to kind of just include have have rust",
    "start": "2485880",
    "end": "2494319"
  },
  {
    "text": "and and C live uh side by side and then slowly migrate the code to to rust uh",
    "start": "2494319",
    "end": "2501880"
  },
  {
    "text": "the stuff you would rewrite anyway probably that that's that would be my Approach I I don't think it's worth it",
    "start": "2501880",
    "end": "2508119"
  },
  {
    "text": "to to do the C to rust conversion you would get really really",
    "start": "2508119",
    "end": "2513520"
  },
  {
    "text": "nasty rust code I guess and it would be all all the all the the code you kind of",
    "start": "2513520",
    "end": "2519480"
  },
  {
    "text": "export from c r would all be unsafe so you get no benefits",
    "start": "2519480",
    "end": "2526400"
  },
  {
    "text": "yeah their go is transla",
    "start": "2541880",
    "end": "2546359"
  },
  {
    "text": "yeah there's a lot of project trying to rewrite all the the the new core utils",
    "start": "2548400",
    "end": "2553800"
  },
  {
    "text": "in in Rust uh and and when you do a full rewrite you this I wouldn't do the the",
    "start": "2553800",
    "end": "2561160"
  },
  {
    "text": "translation it's the chance to structure the code and and get rid of like 30",
    "start": "2561160",
    "end": "2566200"
  },
  {
    "text": "years of of",
    "start": "2566200",
    "end": "2568880"
  },
  {
    "text": "Legacy yeah uh it's it's easy to call um",
    "start": "2572079",
    "end": "2577400"
  },
  {
    "text": "see from rust and vice versa because rust can kind of expose the",
    "start": "2577400",
    "end": "2584599"
  },
  {
    "text": "ABI for structs and functions and yeah so I I I have a project now dealing",
    "start": "2584599",
    "end": "2592040"
  },
  {
    "text": "with we're um intering with sinks um libraries and also free RTO uh in Rust",
    "start": "2592040",
    "end": "2600440"
  },
  {
    "text": "application and it's um yeah works well",
    "start": "2600440",
    "end": "2606440"
  },
  {
    "text": "yeah so the embedded Hall is the generic uh Hall that's kind of the the",
    "start": "2613920",
    "end": "2620680"
  },
  {
    "text": "the foundation of the embedded uh community so they there's no functionality there to work with an uh",
    "start": "2620680",
    "end": "2628280"
  },
  {
    "text": "actual microcontroller it's just a set of common traits to do common operations",
    "start": "2628280",
    "end": "2633960"
  },
  {
    "text": "like the the output pin uh um trait so the the NRF it kind of depends",
    "start": "2633960",
    "end": "2642040"
  },
  {
    "text": "on the embedded H yeah and so with all the uh all the crates the um stm32 and",
    "start": "2642040",
    "end": "2651359"
  },
  {
    "text": "RP 24 Health also use embedded",
    "start": "2651359",
    "end": "2656558"
  },
  {
    "text": "heal yeah",
    "start": "2661640",
    "end": "2665640"
  },
  {
    "text": "if the works hard on that maybe hopefully",
    "start": "2667160",
    "end": "2673359"
  },
  {
    "text": "we have the",
    "start": "2673359",
    "end": "2678240"
  },
  {
    "text": "manufactur system everyone liaries so that your has to",
    "start": "2679480",
    "end": "2686760"
  },
  {
    "text": "have a layer in between manufacturer that would be that would be",
    "start": "2686760",
    "end": "2693000"
  },
  {
    "text": "the the dream yeah yeah and and",
    "start": "2693000",
    "end": "2697960"
  },
  {
    "text": "that's the hope of the embedded working group so uh hopefully yeah like I think if if if",
    "start": "2699240",
    "end": "2707760"
  },
  {
    "text": "like Nordic was to support rust I I would prefer it to be done in a kind of Community Based way so that you that",
    "start": "2707760",
    "end": "2715079"
  },
  {
    "text": "Nordic would contribute to the open source uh community library and that that uh we as users of that can also fix",
    "start": "2715079",
    "end": "2723240"
  },
  {
    "text": "errors and contribute our Solutions because the way the embedded vendors are",
    "start": "2723240",
    "end": "2728960"
  },
  {
    "text": "set up now is that they write the library once and then ship it in some tarball and then maybe you can file a",
    "start": "2728960",
    "end": "2736839"
  },
  {
    "text": "bug complaint that gets like dropped in the bucket uh somewhere and and never",
    "start": "2736839",
    "end": "2742400"
  },
  {
    "text": "fixed which is pretty frustrating but uh this this model might be definitely",
    "start": "2742400",
    "end": "2748200"
  },
  {
    "text": "could be uh a model for how we do vendor support and and kind of cross",
    "start": "2748200",
    "end": "2753839"
  },
  {
    "text": "microcontroller support another model we like most of the the Cal code and",
    "start": "2753839",
    "end": "2760319"
  },
  {
    "text": "everything the parts is up scamed yeah we add things which might be LIC Shar",
    "start": "2760319",
    "end": "2766480"
  },
  {
    "text": "it's just specific so that would be exactly that moment yeah yeah that's good I I I just wanted to talk about o i",
    "start": "2766480",
    "end": "2774000"
  },
  {
    "text": "mean in O but it's also it has five systemation it has a driver infrastructure it has an IP stock which",
    "start": "2774000",
    "end": "2780960"
  },
  {
    "text": "is a huge work so uh there's quite a lot of things that need to be in place we",
    "start": "2780960",
    "end": "2786040"
  },
  {
    "text": "have all it's kind of pro so it's and see is not going away that's that St",
    "start": "2786040",
    "end": "2792119"
  },
  {
    "text": "there yeah yeah I coming in addition and need that's that's kind of the the",
    "start": "2792119",
    "end": "2797680"
  },
  {
    "text": "barrier yeah I think I think with rust support coming into sepher that's probably the the the way to go so we can",
    "start": "2797680",
    "end": "2805200"
  },
  {
    "text": "can kind of have best of both ports at least in R you can from yeah rest of",
    "start": "2805200",
    "end": "2812520"
  },
  {
    "text": "the yeah and then you can also start if you can uh uh Implement new drivers in",
    "start": "2812520",
    "end": "2818680"
  },
  {
    "text": "seph in in Rust so you have rust at both ends uh I would be great I don't know",
    "start": "2818680",
    "end": "2824079"
  },
  {
    "text": "how the the rust support SE is is set up now but works is going to be layer on top",
    "start": "2824079",
    "end": "2831000"
  },
  {
    "text": "yeah layer on top first be",
    "start": "2831000",
    "end": "2836319"
  },
  {
    "text": "basically have the the current modules in and R yeah",
    "start": "2836559",
    "end": "2842599"
  },
  {
    "text": "yes I think how are we on time I guess yeah 10 minutes",
    "start": "2848920",
    "end": "2857558"
  },
  {
    "text": "early yeah that's all for me thank you",
    "start": "2859160",
    "end": "2865680"
  }
]