[
  {
    "text": "[Laughter] okay cool so how many of you do",
    "start": "3600",
    "end": "8800"
  },
  {
    "text": "oauth at work good good good and the other ones are",
    "start": "8800",
    "end": "13840"
  },
  {
    "text": "doing it as well because it's everywhere these days really yeah so i've been um i've been focusing on you know",
    "start": "13840",
    "end": "20000"
  },
  {
    "text": "authentication authorization technologies for the last i don't know 15 years or so",
    "start": "20000",
    "end": "25760"
  },
  {
    "text": "and um been focusing on oauth and body connect for the last 10 years and you know when",
    "start": "25760",
    "end": "31760"
  },
  {
    "text": "you're doing that stuff for such a long time am i too loud by the way okay",
    "start": "31760",
    "end": "37600"
  },
  {
    "text": "um then you start to drill in more details and more details and you're doing these",
    "start": "37600",
    "end": "43040"
  },
  {
    "text": "talks about these very specific things and advanced topics and so on um",
    "start": "43040",
    "end": "48399"
  },
  {
    "text": "but this year marks an interesting turning point in oauth because there",
    "start": "48399",
    "end": "54320"
  },
  {
    "text": "will be the first ever revision to the specification after",
    "start": "54320",
    "end": "59920"
  },
  {
    "text": "10 years yeah and this revision to the specification you know we are all developers i guess so you know semantic",
    "start": "59920",
    "end": "65920"
  },
  {
    "text": "versioning right where you just add stuff and don't break existing stuff it's just the other way around",
    "start": "65920",
    "end": "71119"
  },
  {
    "text": "it's reverse semantic versioning they just removed stuff and didn't add anything but that that is a good thing",
    "start": "71119",
    "end": "76880"
  },
  {
    "text": "because you know this technology has been around for over 10 years and some of that were",
    "start": "76880",
    "end": "83600"
  },
  {
    "text": "good ideas back then and some of them didn't work that well right so they decided that",
    "start": "83600",
    "end": "90000"
  },
  {
    "text": "this year is going to be the time where they look at the spec again and remove all",
    "start": "90000",
    "end": "95200"
  },
  {
    "text": "the things that you would not use anymore today which means the spec is well it's not getting smaller but",
    "start": "95200",
    "end": "102159"
  },
  {
    "text": "at least there's less to learn okay um and it's called over 2.1 and that's",
    "start": "102159",
    "end": "107439"
  },
  {
    "text": "basically what i'm basically the plan today is to just focus",
    "start": "107439",
    "end": "112720"
  },
  {
    "text": "on these useful things okay um and",
    "start": "112720",
    "end": "117840"
  },
  {
    "text": "it's an introductory talk okay so if you are an oauth expert you might be bored",
    "start": "117840",
    "end": "123520"
  },
  {
    "text": "yeah but that's the that's the exact intention here it's it's starting from scratch and trying to in 60 minutes give",
    "start": "123520",
    "end": "130000"
  },
  {
    "text": "you as much oauth as you need so to speak yeah so don't complain afterwards like oh that was too basic no that's the",
    "start": "130000",
    "end": "136640"
  },
  {
    "text": "intention okay i'm trying to be as basic as possible um",
    "start": "136640",
    "end": "142400"
  },
  {
    "text": "also which is probably one of my favorite most favorite outcomes of this talk is that people come to me and say",
    "start": "142400",
    "end": "148000"
  },
  {
    "text": "you know what i thought i know oauth but i was wrong",
    "start": "148000",
    "end": "154400"
  },
  {
    "text": "so you you know now now that you strip away all the unnecessary stuff it's easier to see the the trees in the wood",
    "start": "154720",
    "end": "161280"
  },
  {
    "text": "so to speak okay so that's kind of the intention of that yeah good my name is dominic um as i said i",
    "start": "161280",
    "end": "167840"
  },
  {
    "text": "work for this for way too long and also for the better half of my career",
    "start": "167840",
    "end": "174560"
  },
  {
    "text": "was working on an implementation of oauth called identity server it's an open source project",
    "start": "174560",
    "end": "181760"
  },
  {
    "text": "and you know that means when you're implementing this you have to read those specs more than",
    "start": "182239",
    "end": "187599"
  },
  {
    "text": "once typically so i you know i i spend a lot of time reading those specs and it's not",
    "start": "187599",
    "end": "193200"
  },
  {
    "text": "everybody's cup of tea i totally get that right i mean it's using a career font and that doesn't sound like fun",
    "start": "193200",
    "end": "199200"
  },
  {
    "text": "right all these rfcs and so on um yeah so that's why i'm here and trying",
    "start": "199200",
    "end": "204400"
  },
  {
    "text": "to put it into plain english as much as a german can i guess",
    "start": "204400",
    "end": "210239"
  },
  {
    "text": "um yeah so just to give you some context yeah that is the short history of web-based",
    "start": "210239",
    "end": "216640"
  },
  {
    "text": "authentication and authorization it all started in 2005 with the mother of all",
    "start": "216640",
    "end": "221920"
  },
  {
    "text": "protocols called saml2p yeah and some of the some of you might use that still today",
    "start": "221920",
    "end": "227120"
  },
  {
    "text": "um and it was like the first ever protocol that um that invented this",
    "start": "227120",
    "end": "233040"
  },
  {
    "text": "uh request response style of authentication where you have a browser you send the browser somewhere then the",
    "start": "233040",
    "end": "238799"
  },
  {
    "text": "browser calls you back right and then you process a response you know that challenge response type",
    "start": "238799",
    "end": "244319"
  },
  {
    "text": "style that was what saml 2p invented yeah and everything that came afterwards is",
    "start": "244319",
    "end": "250239"
  },
  {
    "text": "basically just the same right just using different technologies so yeah that's dead then there was w",
    "start": "250239",
    "end": "257440"
  },
  {
    "text": "celebration w's trust you know like the the dark times of xml i guess um",
    "start": "257440",
    "end": "263199"
  },
  {
    "text": "and then and that that's very important to understand yeah o of 1.0 in 2007 was a",
    "start": "263199",
    "end": "269360"
  },
  {
    "text": "direct count counter reaction to those complicated xml based protocols they",
    "start": "269360",
    "end": "274639"
  },
  {
    "text": "want to be something simpler yeah so they they started reimagining this and focusing more on on specific um use",
    "start": "274639",
    "end": "280800"
  },
  {
    "text": "cases and maybe too specific because shortly after they added over 2.0 which added more use cases again yeah and",
    "start": "280800",
    "end": "288560"
  },
  {
    "text": "people talk about this and then as you can see there are a whole bunch of additional",
    "start": "288560",
    "end": "295440"
  },
  {
    "text": "specifications that happened between 2012 and today okay and these are the ones we are not",
    "start": "295440",
    "end": "301759"
  },
  {
    "text": "going to talk about yeah because they are just you know they are a distraction for now um but here",
    "start": "301759",
    "end": "308400"
  },
  {
    "text": "this is the the o of 2.1 um um that i mentioned earlier so that is",
    "start": "308400",
    "end": "314000"
  },
  {
    "text": "going to be the ever first update to the original spec um to make it more",
    "start": "314000",
    "end": "320800"
  },
  {
    "text": "modern i guess okay cool so that's kind of like the big picture",
    "start": "320800",
    "end": "326800"
  },
  {
    "text": "and of course this gave me finally the chance to do a talk that that is called the good parts",
    "start": "326800",
    "end": "332639"
  },
  {
    "text": "right um we probably all know this book right javascript the good parts where the left one is all of javascript and the right",
    "start": "332639",
    "end": "339280"
  },
  {
    "text": "one is the the good parts um so i'm all about here teaching you the",
    "start": "339280",
    "end": "344639"
  },
  {
    "text": "good parts and then once you appreciate a good part obviously it makes sense to know some of the bad",
    "start": "344639",
    "end": "351120"
  },
  {
    "text": "parts as well and why you should avoid them yeah but again that's not our topic we could be we we're gonna do the happy",
    "start": "351120",
    "end": "356560"
  },
  {
    "text": "path okay good so the agenda is this so uh first of all",
    "start": "356560",
    "end": "362960"
  },
  {
    "text": "why does off exist right and then we're going to talk about what they call protocol flows and there are really two left so oauth started with five",
    "start": "362960",
    "end": "370080"
  },
  {
    "text": "different flows or protocol flows in the original spec and there are two left of them which means the other three",
    "start": "370080",
    "end": "376960"
  },
  {
    "text": "don't care anymore that doesn't matter yeah um then we're going to talk about typical",
    "start": "376960",
    "end": "382319"
  },
  {
    "text": "applications you would build with these flows and then um maybe you've heard over and",
    "start": "382319",
    "end": "387360"
  },
  {
    "text": "over for example guys like me saying oauth is not authentication and we're going to have a talk talk about why",
    "start": "387360",
    "end": "393360"
  },
  {
    "text": "ma'am and then i'll give you some more more pointers to further reading um",
    "start": "393360",
    "end": "399440"
  },
  {
    "text": "literature if if you want to dig deeper into the topic cool so",
    "start": "399440",
    "end": "405360"
  },
  {
    "text": "why does oauth exist right as i said earlier oauth was a direct",
    "start": "405360",
    "end": "411039"
  },
  {
    "text": "reaction to the enterprise-y world of the beginning of 2000 right xml and soap and namespaces",
    "start": "411039",
    "end": "418720"
  },
  {
    "text": "and all of that complicated stuff and google basically said hey um",
    "start": "418720",
    "end": "423759"
  },
  {
    "text": "we're building these consumer-facing apis and we have a very simple problem to solve how can a third party how can",
    "start": "423759",
    "end": "430319"
  },
  {
    "text": "you give a third-party access to your google calendar without you having to expose your password to the first to the",
    "start": "430319",
    "end": "436720"
  },
  {
    "text": "third party right they obviously didn't want that you type in your google password into a third-party service they wanted",
    "start": "436720",
    "end": "442800"
  },
  {
    "text": "something else right something that allows you to grant someone access to to as to data or even a subset of your data",
    "start": "442800",
    "end": "450800"
  },
  {
    "text": "without exposing your master secret so to speak right and um obviously this was all based on um we we we don't call them",
    "start": "450800",
    "end": "458880"
  },
  {
    "text": "web services anymore right because that's xml and that's that's evil yeah they call them apis or web apis or http",
    "start": "458880",
    "end": "465840"
  },
  {
    "text": "apis you know whatever we're going to call them yeah um but it turned out this whole xml",
    "start": "465840",
    "end": "473039"
  },
  {
    "text": "soap thermal era invented one really good",
    "start": "473039",
    "end": "478960"
  },
  {
    "text": "concept which are tokens okay so instead of sending your password",
    "start": "478960",
    "end": "485680"
  },
  {
    "text": "to a service you are sending a token to a service and that token represents",
    "start": "485680",
    "end": "491680"
  },
  {
    "text": "access to some data or a subset of data for a limited amount of time",
    "start": "491680",
    "end": "496800"
  },
  {
    "text": "without having to expose your password okay so that was a good thing um but it was",
    "start": "496800",
    "end": "502720"
  },
  {
    "text": "xml right i mean they looked like this and you probably all remember that right where you basically have uh",
    "start": "502720",
    "end": "508400"
  },
  {
    "text": "95 percent headers and a little bit of payload",
    "start": "508400",
    "end": "514159"
  },
  {
    "text": "right um but it turns out um the ideas in that they were good right",
    "start": "514159",
    "end": "520240"
  },
  {
    "text": "because they had they introduced the concept of issuers and signatures meaning who created the token do i trust",
    "start": "520240",
    "end": "526720"
  },
  {
    "text": "this person and to technically enforce that trust it was digitally signed so we can validate the signature if the",
    "start": "526720",
    "end": "532839"
  },
  {
    "text": "signature validation succeeds we know it's coming from a trusted issuer google for example or whoever right um",
    "start": "532839",
    "end": "540880"
  },
  {
    "text": "it had another interesting concept called the time window right as a in contrast to your password which was a",
    "start": "540880",
    "end": "547600"
  },
  {
    "text": "long term secret yeah these tokens could be short-lived could be valid for one hour for one day for one week whatever",
    "start": "547600",
    "end": "553839"
  },
  {
    "text": "makes sense for your for your business case um it had the concept of scoping you",
    "start": "553839",
    "end": "561040"
  },
  {
    "text": "know again contrasting it to your password your google password gives anyone access to everything you own in",
    "start": "561040",
    "end": "567200"
  },
  {
    "text": "google but a token can be scoped to just for just the calendar api for just the",
    "start": "567200",
    "end": "572959"
  },
  {
    "text": "gmail api for just the the drive api or even saying uh email read permissions",
    "start": "572959",
    "end": "579519"
  },
  {
    "text": "but not right right these things so that's a concept coming from xaml tokens",
    "start": "579519",
    "end": "584640"
  },
  {
    "text": "um the concept of putting authentication context information into into tokens",
    "start": "584640",
    "end": "589680"
  },
  {
    "text": "like who is the user how did he authenticate is it strong enough for us things like that yeah came from here",
    "start": "589680",
    "end": "595360"
  },
  {
    "text": "uh and ultimately claims so if you live in a microsoft space you might think microsoft invented claims",
    "start": "595360",
    "end": "601680"
  },
  {
    "text": "they did not yeah they just reused the concept coming from the saml working group basically",
    "start": "601680",
    "end": "607120"
  },
  {
    "text": "give you a key key value pair style of expressing identity information about",
    "start": "607120",
    "end": "612880"
  },
  {
    "text": "the user yeah and again this was all very convoluted right they had like xml name spaces and all of that and we",
    "start": "612880",
    "end": "620000"
  },
  {
    "text": "wanted to make that simpler man and the main problem with this with this technology otherwise maybe we we would",
    "start": "620000",
    "end": "626800"
  },
  {
    "text": "still have it was that it didn't work and and what i mean with it didn't work",
    "start": "626800",
    "end": "632320"
  },
  {
    "text": "is it did not work with the requirements of a consumer style world right so we",
    "start": "632320",
    "end": "638640"
  },
  {
    "text": "might have been lucky to make two wcf services talk to each other right but",
    "start": "638640",
    "end": "644560"
  },
  {
    "text": "have you ever tried making a wcf service talk to the thing from sun or the thing from someone else right i mean you first",
    "start": "644560",
    "end": "651040"
  },
  {
    "text": "have to find an xml parser that understands both dialects right so this was not going anywhere they they wanted",
    "start": "651040",
    "end": "657279"
  },
  {
    "text": "a basically an easy way bring up some developer documentation here's how you call our api it's json",
    "start": "657279",
    "end": "662800"
  },
  {
    "text": "based right you make a post request send us this data attach this token it should work without having a phd in angle",
    "start": "662800",
    "end": "669519"
  },
  {
    "text": "brackets right so that is um",
    "start": "669519",
    "end": "674800"
  },
  {
    "text": "the one requirement that it basically was all designed for third-party consumption",
    "start": "674800",
    "end": "680240"
  },
  {
    "text": "right whereas all of the enterprises stuff was mostly optimized for first party consumption right you are",
    "start": "680240",
    "end": "685760"
  },
  {
    "text": "accessing your own services because we're using the same technology stack on client and on the server",
    "start": "685760",
    "end": "692480"
  },
  {
    "text": "the other thing was the enterprise did not care about humans right i mean you were an employee of a company you you log into your ad account you",
    "start": "692480",
    "end": "700000"
  },
  {
    "text": "access ad company resources um no one asked you like do you want this",
    "start": "700000",
    "end": "705519"
  },
  {
    "text": "application to access your calendar right i mean they were all owned by the company whereas in the consumer space",
    "start": "705519",
    "end": "712480"
  },
  {
    "text": "right this is not true the the third party application that might wants to add value to your calendar is not",
    "start": "712480",
    "end": "719600"
  },
  {
    "text": "written by google right um so google very much had an interest of saying hey",
    "start": "719600",
    "end": "727040"
  },
  {
    "text": "are you okay with granting third party x access to your calendar",
    "start": "727040",
    "end": "732160"
  },
  {
    "text": "and put the human into the picture and that is called a consent screen i'm sure you all have seen that before right do",
    "start": "732160",
    "end": "737519"
  },
  {
    "text": "you want to expose your email address and most people just blindly click yes because no",
    "start": "737519",
    "end": "742560"
  },
  {
    "text": "i don't know what no does um so these were requirements okay and they",
    "start": "742560",
    "end": "747920"
  },
  {
    "text": "did not work with the xml soap soapy style stuff we had before right and that's",
    "start": "747920",
    "end": "754399"
  },
  {
    "text": "that that were all um motivations for creating oauth ma'am",
    "start": "754399",
    "end": "761600"
  },
  {
    "text": "so how does what's o off right so basically the idea is very simple yeah um and and i'm",
    "start": "761600",
    "end": "767680"
  },
  {
    "text": "deliberately using the terms from the spec so that when you go back to the talk with a recording and you want to read the spec you find the same terms",
    "start": "767680",
    "end": "774720"
  },
  {
    "text": "they are not very commonly used in normal language today right but the idea of oauth was",
    "start": "774720",
    "end": "780480"
  },
  {
    "text": "basically you had resources a calendar an inbox right whatever and",
    "start": "780480",
    "end": "787279"
  },
  {
    "text": "these resources are running on a resource server which we now today call apis typically okay",
    "start": "787279",
    "end": "794720"
  },
  {
    "text": "and then alongside of that resource server you have another thing called the authorization server and that is the",
    "start": "794720",
    "end": "800639"
  },
  {
    "text": "thing that can determine if someone is allowed to access your resources",
    "start": "800639",
    "end": "806320"
  },
  {
    "text": "okay and that is also the thing that will create these tokens that then the client application can use to consume",
    "start": "806320",
    "end": "814079"
  },
  {
    "text": "those services okay and they are always together yeah so the assumption is that the the",
    "start": "814079",
    "end": "819680"
  },
  {
    "text": "resource server and the authorization are always owned by the same entity right the the the company that exposes",
    "start": "819680",
    "end": "826800"
  },
  {
    "text": "the resources has a resource server either their own or as a service whatever but they belong together",
    "start": "826800",
    "end": "832720"
  },
  {
    "text": "um and and trust each other that's the important part here yeah",
    "start": "832720",
    "end": "838240"
  },
  {
    "text": "then we have clients okay the clients are the applications that want to access",
    "start": "838800",
    "end": "844639"
  },
  {
    "text": "the resources yeah there are different types of clients right there are",
    "start": "844639",
    "end": "850880"
  },
  {
    "text": "ultimately there are clients running in the browser and clients running outside of the browser",
    "start": "850880",
    "end": "856240"
  },
  {
    "text": "that's basically all we have right um most of them run in the browser like web applications you know spas",
    "start": "856240",
    "end": "862959"
  },
  {
    "text": "things like that we have mobile applications which maybe use the browser for authentication but the main app is",
    "start": "862959",
    "end": "869040"
  },
  {
    "text": "native right and we have classic server-to-server style communication",
    "start": "869040",
    "end": "874320"
  },
  {
    "text": "man some of these clients are considered to be confidential and they are basically",
    "start": "874320",
    "end": "880000"
  },
  {
    "text": "boiling down to things that run on a server right so someone installs them you give them a client id and the client secret",
    "start": "880000",
    "end": "886560"
  },
  {
    "text": "so they can authenticate with you these this the secret is stored securely on a server maybe on something that you own",
    "start": "886560",
    "end": "893199"
  },
  {
    "text": "or maybe on a business partner server or whatever right whereas the the so-called public client",
    "start": "893199",
    "end": "898880"
  },
  {
    "text": "are the ones that you can't control like mobile devices or a javascript application they run outside of your",
    "start": "898880",
    "end": "904959"
  },
  {
    "text": "control and they are considered less uh less confidential than the ones",
    "start": "904959",
    "end": "910160"
  },
  {
    "text": "running on on server hardware right also less exposed to attacks and and all these things",
    "start": "910160",
    "end": "916880"
  },
  {
    "text": "some of these clients have users okay and uh the over spec calls them",
    "start": "916880",
    "end": "922560"
  },
  {
    "text": "resource owners and what they mean is that they own some data on the resource server but i think that is a very",
    "start": "922560",
    "end": "929440"
  },
  {
    "text": "misleading term we call them users these days typically okay and there you see",
    "start": "929440",
    "end": "934639"
  },
  {
    "text": "that there's a very important distinction between users and clients so users are human beings okay carbon based",
    "start": "934639",
    "end": "942959"
  },
  {
    "text": "life forms in in in your system yeah they have some sort of account with you and they have some sort of data that is",
    "start": "942959",
    "end": "949759"
  },
  {
    "text": "stored with you okay and these humans want to use an application to access the",
    "start": "949759",
    "end": "955279"
  },
  {
    "text": "data right and these are the clients some clients might be coming from you first party clients some part some",
    "start": "955279",
    "end": "961759"
  },
  {
    "text": "clients might be coming from a third party you know if you have a public api there might be clients out there that",
    "start": "961759",
    "end": "967199"
  },
  {
    "text": "you don't even know about right someone wrote them because you want them to write those clients to access your apis",
    "start": "967199",
    "end": "972240"
  },
  {
    "text": "and you know have a business model behind that so that's that and then regardless",
    "start": "972240",
    "end": "979759"
  },
  {
    "text": "how you um access the system it's always the same first of all the client needs to",
    "start": "979759",
    "end": "985600"
  },
  {
    "text": "make a round trip to the authorization server and ask for a token right uh it's called the authorized",
    "start": "985600",
    "end": "992000"
  },
  {
    "text": "request very often i want to get authorized to access a resource and then if all is good",
    "start": "992000",
    "end": "998880"
  },
  {
    "text": "then the authorization level returns that token and from that point on the client is using the access token to",
    "start": "998880",
    "end": "1006399"
  },
  {
    "text": "access the apis and again access tokens have all of these good things right they might they might be limited to a subset",
    "start": "1006399",
    "end": "1012639"
  },
  {
    "text": "of the apis they might have a limited time window you might even revoke them and so on right so all of the good",
    "start": "1012639",
    "end": "1019040"
  },
  {
    "text": "things that tokens can can give us as opposed to shared secret style security",
    "start": "1019040",
    "end": "1024720"
  },
  {
    "text": "with passwords good so that's that",
    "start": "1024720",
    "end": "1029839"
  },
  {
    "text": "and that's how it always works we could stop here that's how it works",
    "start": "1029839",
    "end": "1034880"
  },
  {
    "text": "let's have a look at one very important concept in oauth yeah which which they call the scope",
    "start": "1034880",
    "end": "1041199"
  },
  {
    "text": "yeah and the scope is very very loosely defined but the idea is is that",
    "start": "1041199",
    "end": "1046558"
  },
  {
    "text": "um in your system right these resources here you give them logical names right",
    "start": "1046559",
    "end": "1052320"
  },
  {
    "text": "like calendar api or email api whatever right and then you basically can configure which client is",
    "start": "1052320",
    "end": "1059600"
  },
  {
    "text": "allowed to access which resource and the parameter on the protocol that expresses",
    "start": "1059600",
    "end": "1065039"
  },
  {
    "text": "the the thing you want to access is called the scope parameter yeah and as",
    "start": "1065039",
    "end": "1070480"
  },
  {
    "text": "you can see and that's typical of style uh is it's just a string",
    "start": "1070480",
    "end": "1075520"
  },
  {
    "text": "um if you can have more than one value on it and if that's the case it is space delimited",
    "start": "1075520",
    "end": "1082160"
  },
  {
    "text": "and typically the assumption is is the more strings you have on that parameter the more access you have to the system",
    "start": "1082160",
    "end": "1089280"
  },
  {
    "text": "right calendar would be one inbox might be another but you also might say calendar and inbox because you",
    "start": "1089280",
    "end": "1096080"
  },
  {
    "text": "are a client application that needs to access both yeah which is just the way it's done these days",
    "start": "1096080",
    "end": "1103679"
  },
  {
    "text": "um but let me just give you some examples um of how certain apis implement the scope",
    "start": "1103679",
    "end": "1110960"
  },
  {
    "text": "concepts so that's from the from the github developer documentation right so basically what the",
    "start": "1110960",
    "end": "1116400"
  },
  {
    "text": "their view of the world is we have this one github api or resource server if you",
    "start": "1116400",
    "end": "1121600"
  },
  {
    "text": "like in the in the oauth speak and it has certain types of functionality right",
    "start": "1121600",
    "end": "1126720"
  },
  {
    "text": "there's access to repos access to user information access to packages right and",
    "start": "1126720",
    "end": "1132480"
  },
  {
    "text": "then you your client basically needs to when when it does the authorized request needs to say hey please give me access",
    "start": "1132480",
    "end": "1138559"
  },
  {
    "text": "to repo and to read packages okay um and sometimes as i said",
    "start": "1138559",
    "end": "1145280"
  },
  {
    "text": "um they also need to go a little bit fine trainer right maybe maybe it makes sense to to split it up into right",
    "start": "1145280",
    "end": "1151600"
  },
  {
    "text": "packages and read packages maybe on your ci server the token you have there the client only needs to read from the",
    "start": "1151600",
    "end": "1157919"
  },
  {
    "text": "package feed but there's no point in giving giving them right access to it right that's how you can scope it down i",
    "start": "1157919",
    "end": "1164559"
  },
  {
    "text": "guess that's where the name comes from yeah um also funny to see right software evolves",
    "start": "1164559",
    "end": "1172000"
  },
  {
    "text": "underscores colons and so on so it's you know it's been evolving for i guess 10",
    "start": "1172000",
    "end": "1177600"
  },
  {
    "text": "years or so that is how github is doing it uh in contrast that's how google is",
    "start": "1177600",
    "end": "1183039"
  },
  {
    "text": "doing it for example yeah coming back to google um you know that i guess the fundamental",
    "start": "1183039",
    "end": "1188160"
  },
  {
    "text": "difference here is is that github is a much much smaller company than google okay but they have one product it's",
    "start": "1188160",
    "end": "1193840"
  },
  {
    "text": "github right you probably can you know probably at some point every github developer knew each other because they",
    "start": "1193840",
    "end": "1200320"
  },
  {
    "text": "met at a christmas party or something but github is a huge company right i i",
    "start": "1200320",
    "end": "1206400"
  },
  {
    "text": "don't even know how many people work there but so and they have many you know independent products right",
    "start": "1206400",
    "end": "1212400"
  },
  {
    "text": "there's the the query api and there's the calendar api that's the gmail api and there's some cloud stuff and so on",
    "start": "1212400",
    "end": "1219280"
  },
  {
    "text": "right so um you can imagine that um that there must be some sort of governance model around",
    "start": "1219280",
    "end": "1224640"
  },
  {
    "text": "this yeah and you can you can imagine that there is one guy at google who owns these namespaces here right so",
    "start": "1224640",
    "end": "1232080"
  },
  {
    "text": "google made the decision to use urls to represent scopes yeah it doesn't matter",
    "start": "1232080",
    "end": "1237440"
  },
  {
    "text": "what you're doing they're just strings right github used colons as a delimiter they use forward slashes",
    "start": "1237440",
    "end": "1244640"
  },
  {
    "text": "okay but the idea is again that in their case uh someone i guess will assign you a",
    "start": "1244640",
    "end": "1252559"
  },
  {
    "text": "namespace and then underneath that every team probably can decide on their own",
    "start": "1252559",
    "end": "1258000"
  },
  {
    "text": "naming that's a guess at least there my point is um um this the oauth itself does not give",
    "start": "1258000",
    "end": "1265760"
  },
  {
    "text": "you any guidance or any advice how you should do that that is a complete you know",
    "start": "1265760",
    "end": "1271280"
  },
  {
    "text": "uh organization decision how you want to structure your api surface and that",
    "start": "1271280",
    "end": "1277280"
  },
  {
    "text": "that's a good that's a good example for a big api service yeah whereas github is a little bit smaller",
    "start": "1277280",
    "end": "1283280"
  },
  {
    "text": "cool so that's one of the most confusing things that people ask me about like what's the scope",
    "start": "1283280",
    "end": "1288960"
  },
  {
    "text": "why do i need it why doesn't the stack tell me exactly what it is yeah because they didn't know 10 years",
    "start": "1288960",
    "end": "1295280"
  },
  {
    "text": "ago right they just said like hear something use it have fun",
    "start": "1295280",
    "end": "1301039"
  },
  {
    "text": "good now i mentioned earlier that the original spec had a couple of different what they call protocol flows um",
    "start": "1301039",
    "end": "1308240"
  },
  {
    "text": "and what they mean with the flow is that how a specific type of application um can can talk to the authorization",
    "start": "1308240",
    "end": "1315360"
  },
  {
    "text": "server basically yeah and ten years later we found out that we",
    "start": "1315360",
    "end": "1320480"
  },
  {
    "text": "only really need two of them because uh it all boils down to we are we are",
    "start": "1320480",
    "end": "1326400"
  },
  {
    "text": "writing two types of applications these days non-interactive applications like server",
    "start": "1326400",
    "end": "1331520"
  },
  {
    "text": "to server batch processing message queueing and interactive applications which is everything else that has a user",
    "start": "1331520",
    "end": "1337760"
  },
  {
    "text": "in front of it in the browser in a on a mobile device whatever so in overwatch 2.1 they boiled it down to exactly that",
    "start": "1337760",
    "end": "1344720"
  },
  {
    "text": "here's how non-interactive flows work and here's how interactive ones work and everything else is a distraction",
    "start": "1344720",
    "end": "1352080"
  },
  {
    "text": "okay so let's start with the simpler one which is machine-to-machine communication right no user is present",
    "start": "1352080",
    "end": "1358080"
  },
  {
    "text": "just two machines talking to each other but still you know the api that the client calls",
    "start": "1358080",
    "end": "1364400"
  },
  {
    "text": "needs authentication somehow yeah and it's really really simple let me show you how it works",
    "start": "1364400",
    "end": "1370880"
  },
  {
    "text": "so here's our client right which might be a server side process whatever here are our resources api 1 api 2 api 3 and",
    "start": "1370880",
    "end": "1378880"
  },
  {
    "text": "so on and here's the authorization server now one requirement in oauth is that the",
    "start": "1378880",
    "end": "1385039"
  },
  {
    "text": "client is pre-registered with the authorization server right so",
    "start": "1385039",
    "end": "1390080"
  },
  {
    "text": "an authorization that does not hand out tokens to arbitrary unknown clients yeah so that there's typically a registration",
    "start": "1390080",
    "end": "1396400"
  },
  {
    "text": "process happening first it might be an admin thing might be a self-service website where you register your client",
    "start": "1396400",
    "end": "1403760"
  },
  {
    "text": "whatever right so at the end of the day the client will get issued from the",
    "start": "1403760",
    "end": "1410000"
  },
  {
    "text": "authorization server a client id that's how you uniquely identify the client and",
    "start": "1410000",
    "end": "1415840"
  },
  {
    "text": "a client secret that allows them to authenticate the client to the authorization server",
    "start": "1415840",
    "end": "1422559"
  },
  {
    "text": "so and then when when this client wants to have a token it basically makes a round trip to the authorization server",
    "start": "1422559",
    "end": "1428559"
  },
  {
    "text": "says hey please give me access to api one okay",
    "start": "1428559",
    "end": "1435520"
  },
  {
    "text": "in this case the client id and secret is encoded on the authorization header",
    "start": "1435520",
    "end": "1440799"
  },
  {
    "text": "using basic authentication there are many other ways of doing it like with certificates and public private key",
    "start": "1440799",
    "end": "1446400"
  },
  {
    "text": "pairs and and so on that doesn't matter really um point is the client authenticate with the authorization",
    "start": "1446400",
    "end": "1452720"
  },
  {
    "text": "server asks for access to an api and now the authorization server and that's where the name is coming from",
    "start": "1452720",
    "end": "1459440"
  },
  {
    "text": "checks if that client is actually allowed to access the api right again there's some configuration on the server",
    "start": "1459440",
    "end": "1465440"
  },
  {
    "text": "that way somebody determined okay this guy is allowed to access this",
    "start": "1465440",
    "end": "1470880"
  },
  {
    "text": "good and if all is good it will basically return you a response with a with a json body",
    "start": "1470880",
    "end": "1477840"
  },
  {
    "text": "with a thing called an access token and that thing here the access token is now what the client will use to call the",
    "start": "1477840",
    "end": "1485360"
  },
  {
    "text": "api now how does an access token look like that's another confusing thing in oauth",
    "start": "1485360",
    "end": "1492559"
  },
  {
    "text": "they didn't tell you right they said you're going to issue an access token um",
    "start": "1492559",
    "end": "1499760"
  },
  {
    "text": "these days yeah today it is very very common that access tokens are in a json",
    "start": "1499840",
    "end": "1505440"
  },
  {
    "text": "depth token format right so the chase and that tokens are really just is really just a way to um",
    "start": "1505440",
    "end": "1511760"
  },
  {
    "text": "cryptographically secure a json object right with a signature basically and for",
    "start": "1511760",
    "end": "1517440"
  },
  {
    "text": "making that work you need some metadata like which key was used and which algorithm was used to sign the json",
    "start": "1517440",
    "end": "1522880"
  },
  {
    "text": "object and this json object encapsulates the authorization decision",
    "start": "1522880",
    "end": "1528400"
  },
  {
    "text": "of the authorization server yeah it says okay here's a client called client1 and i",
    "start": "1528400",
    "end": "1535200"
  },
  {
    "text": "gave him access to api one okay and here's my signature to prove that i am the right person that did that",
    "start": "1535200",
    "end": "1541679"
  },
  {
    "text": "make made this decision yeah and the client receives that",
    "start": "1541679",
    "end": "1547520"
  },
  {
    "text": "thing which looks like this on the wire yeah it's encoded in base64 url and then we'll use that",
    "start": "1547520",
    "end": "1554559"
  },
  {
    "text": "um to call the api now guess what all of the useful things we had in saml",
    "start": "1554559",
    "end": "1560559"
  },
  {
    "text": "tokens are still there because they are required yeah it just looks simpler right",
    "start": "1560559",
    "end": "1565919"
  },
  {
    "text": "but it's you know uh we still have the concept of an issuer and a signature right the",
    "start": "1565919",
    "end": "1571200"
  },
  {
    "text": "signature is here and it points to some key material at the trusted issuer the issuer name is here as well there's a",
    "start": "1571200",
    "end": "1577440"
  },
  {
    "text": "time window issue iat means issued add and exp means expiration that's the time",
    "start": "1577440",
    "end": "1583440"
  },
  {
    "text": "window in which this token will be valid and after that it's not yeah",
    "start": "1583440",
    "end": "1589360"
  },
  {
    "text": "scoping is still there right here's our scope parameter and claims are also there and in this case it's a special",
    "start": "1589360",
    "end": "1595679"
  },
  {
    "text": "claim called client underscore id which tells the recipient of the token who is calling me",
    "start": "1595679",
    "end": "1601679"
  },
  {
    "text": "ma'am cool and then ultimately the client will",
    "start": "1601679",
    "end": "1607679"
  },
  {
    "text": "call the api by making a call to the resource and putting that token on the authorization header",
    "start": "1607679",
    "end": "1614240"
  },
  {
    "text": "okay that there's a special thing called coming from over called bearer and what bearer means is basically you are",
    "start": "1614240",
    "end": "1620640"
  },
  {
    "text": "receiving an o of token and then what the api will do it will receive the",
    "start": "1620640",
    "end": "1626080"
  },
  {
    "text": "token read it validate the signature and once the signature is valid it can trust",
    "start": "1626080",
    "end": "1631600"
  },
  {
    "text": "the values inside the payload and then it says okay um i am api one this token is for api one",
    "start": "1631600",
    "end": "1640159"
  },
  {
    "text": "all is good okay maybe they want to do an additional authorization on the client id or",
    "start": "1640159",
    "end": "1646080"
  },
  {
    "text": "whatever other custom data you want to add but that's in a nutshell how it works okay",
    "start": "1646080",
    "end": "1651600"
  },
  {
    "text": "so this talk is not really about code boom [Laughter]",
    "start": "1651600",
    "end": "1657039"
  },
  {
    "text": "this talk is not really about code but if you are interested in how that would look like in c sharp",
    "start": "1657039",
    "end": "1662080"
  },
  {
    "text": "that's how it looks like okay you're creating a form a form you're putting in all the",
    "start": "1662080",
    "end": "1667919"
  },
  {
    "text": "parameters grand type scope client id and so on and you're sending that to the token endpoint",
    "start": "1667919",
    "end": "1673919"
  },
  {
    "text": "of the authorization server right and what you're getting back is the the json",
    "start": "1673919",
    "end": "1679120"
  },
  {
    "text": "object i just mentioned which has the access token in it okay and there are client libraries of",
    "start": "1679120",
    "end": "1684720"
  },
  {
    "text": "course which make that much nicer and easier and i wrote one which is pretty popular as",
    "start": "1684720",
    "end": "1689760"
  },
  {
    "text": "well called identity model which basically shields you from all of this and you just say give me a token my",
    "start": "1689760",
    "end": "1695520"
  },
  {
    "text": "client id is this my client is dead and here's the scope yes",
    "start": "1695520",
    "end": "1700320"
  },
  {
    "text": "yeah i'm i'm done with code bang flight mode",
    "start": "1702880",
    "end": "1710320"
  },
  {
    "text": "okay it's it this talk is not about code i just want you know if if somebody needs to see that for a moment in c",
    "start": "1710320",
    "end": "1716159"
  },
  {
    "text": "sharp even if it's dark that was the purpose of that okay",
    "start": "1716159",
    "end": "1721440"
  },
  {
    "text": "good so now very important and a very",
    "start": "1721440",
    "end": "1728480"
  },
  {
    "text": "a source of confusion is um there are some rules about access tokens",
    "start": "1728480",
    "end": "1735919"
  },
  {
    "text": "the first rule is and it's the most important one that you should always remember the client application is not allowed to",
    "start": "1735919",
    "end": "1743440"
  },
  {
    "text": "touch it okay the client should not make any assumptions what's inside of that token",
    "start": "1743440",
    "end": "1749679"
  },
  {
    "text": "the token format and the token contents are a private implementation detail between the authorization server and the",
    "start": "1749679",
    "end": "1756880"
  },
  {
    "text": "resource server right the client is just a forwarder of that token yeah and you know i have",
    "start": "1756880",
    "end": "1763360"
  },
  {
    "text": "customers like yeah but it's a json web token can i just look at it and get the stuff i want sure you can but if the authorization",
    "start": "1763360",
    "end": "1770240"
  },
  {
    "text": "server ever changes the format your client will be broken right so don't do it yeah",
    "start": "1770240",
    "end": "1776159"
  },
  {
    "text": "access tokens are purely to be consumed by the api",
    "start": "1776159",
    "end": "1783919"
  },
  {
    "text": "and then there are some other boring rules right you need to validate the signature you need to check the issuer name and that's all happening",
    "start": "1784720",
    "end": "1791600"
  },
  {
    "text": "at the at the receiver and in the api okay but from a client point of view",
    "start": "1791600",
    "end": "1797840"
  },
  {
    "text": "you just get this string from the server and you forward it to the api and that's what you're supposed to do",
    "start": "1797840",
    "end": "1804720"
  },
  {
    "text": "and if you are an api offer then you typically never do this yourself that there's libraries for that right in in",
    "start": "1805120",
    "end": "1811600"
  },
  {
    "text": "asp.net core that's the chat bearer authentication handler you just tell him where where is my issuer living and it",
    "start": "1811600",
    "end": "1817840"
  },
  {
    "text": "will auto configure itself validate signatures do all of the time window checking and so on and so forth right um",
    "start": "1817840",
    "end": "1824559"
  },
  {
    "text": "so that's these days it's pretty simple two things um i also get a lot of",
    "start": "1824559",
    "end": "1832240"
  },
  {
    "text": "questions about is what about status codes so you call the api yeah if everything is fine you probably",
    "start": "1832240",
    "end": "1838399"
  },
  {
    "text": "get back at 200 with some data right but there are these these two edge cases well i wouldn't call them edge cases um",
    "start": "1838399",
    "end": "1844480"
  },
  {
    "text": "whereas not everything is fine okay and that is basically the 401 has a",
    "start": "1844480",
    "end": "1851600"
  },
  {
    "text": "special meaning here for one unauthorized and what the 401 means is basically you are trying to access a",
    "start": "1851600",
    "end": "1857840"
  },
  {
    "text": "resource that requires a token but your token is not valid okay",
    "start": "1857840",
    "end": "1863679"
  },
  {
    "text": "might be missing might be coming from a non from a different issue that we trust or",
    "start": "1863679",
    "end": "1869440"
  },
  {
    "text": "the most common reason it's expired right tokens have a limited lifetime",
    "start": "1869440",
    "end": "1875519"
  },
  {
    "text": "um you should not um write your application in a way that it depends on the lifetime of the token",
    "start": "1875519",
    "end": "1882159"
  },
  {
    "text": "because again the authorization server can change any time the lifetime of your token your application should always be",
    "start": "1882159",
    "end": "1888399"
  },
  {
    "text": "written in a way that it can deal with expired tokens at any point in time and when you when you get back a 401 99",
    "start": "1888399",
    "end": "1895279"
  },
  {
    "text": "percent of the times that means your token has expired get a new one okay",
    "start": "1895279",
    "end": "1901519"
  },
  {
    "text": "the other status code you are interested in is called 403 forbidden and what that means",
    "start": "1901519",
    "end": "1907440"
  },
  {
    "text": "is your token is totally fine but the thing you are trying to access does not give you access",
    "start": "1907440",
    "end": "1913120"
  },
  {
    "text": "right some sort of authorization decision made by this by the api in that case",
    "start": "1913120",
    "end": "1919200"
  },
  {
    "text": "it it is not worthwhile getting a new token and trying it again right because this probably won't fix your problem",
    "start": "1919200",
    "end": "1925840"
  },
  {
    "text": "yeah so um this is very important when you're writing a client application yeah so 403",
    "start": "1925840",
    "end": "1931840"
  },
  {
    "text": "basically means i can't do anything about this right i mean i have to surface this error to someone who can fix this whereas 401 means let me get a",
    "start": "1931840",
    "end": "1939120"
  },
  {
    "text": "new token and retry right that will probably fix the problem if it doesn't fix the problem again",
    "start": "1939120",
    "end": "1944320"
  },
  {
    "text": "something is out of sync in your system yeah but as i said 401 typically means i need to get a",
    "start": "1944320",
    "end": "1950480"
  },
  {
    "text": "new token good and that helps you with token management",
    "start": "1950480",
    "end": "1956240"
  },
  {
    "text": "yeah so every client application out there must somehow manage their tokens right so you don't want to get a new",
    "start": "1956240",
    "end": "1963360"
  },
  {
    "text": "token for every api call that would not be the most efficient implementation so what you typically want to do is you get",
    "start": "1963360",
    "end": "1968480"
  },
  {
    "text": "a token keep it in memory or in a cache or in a database and use it",
    "start": "1968480",
    "end": "1973760"
  },
  {
    "text": "typically until you get a 401 which means it's expired then you get a new one cache that again and start over",
    "start": "1973760",
    "end": "1981760"
  },
  {
    "text": "yeah that's the the typical implementation of that and you know in.net you can nicely",
    "start": "1981760",
    "end": "1987120"
  },
  {
    "text": "abstract that away with http message handlers an hp client that just gets the token if before one gets",
    "start": "1987120",
    "end": "1993279"
  },
  {
    "text": "returned get a new token under covers try it again and if it's still a 401 well i can't do anything otherwise it",
    "start": "1993279",
    "end": "1999279"
  },
  {
    "text": "probably works no good",
    "start": "1999279",
    "end": "2005559"
  },
  {
    "text": "so let's do it if there are any questions let's put",
    "start": "2006080",
    "end": "2011440"
  },
  {
    "text": "them at the end i guess um just an interest of time um that i'm getting through the content but that's all you need to know about",
    "start": "2011440",
    "end": "2018679"
  },
  {
    "text": "non-interactive applications right a server talking to another server to make that work you get an access token and",
    "start": "2018679",
    "end": "2025279"
  },
  {
    "text": "you use the token until it it's not good anymore then you get a new one that's it",
    "start": "2025279",
    "end": "2030960"
  },
  {
    "text": "the much more interesting types of applications because they're more complex are interactive applications",
    "start": "2030960",
    "end": "2036559"
  },
  {
    "text": "right and that is where a human being a user is using the application interactively right",
    "start": "2036559",
    "end": "2043120"
  },
  {
    "text": "um and this is of course always more complicated because well we involve human beings that makes things always",
    "start": "2043120",
    "end": "2049839"
  },
  {
    "text": "more complicated yeah um but also you have to coordinate more things typically you want to coordinate",
    "start": "2049839",
    "end": "2055760"
  },
  {
    "text": "things like user authentication single sign-on maybe joining some sessions or you know doing some session",
    "start": "2055760",
    "end": "2063040"
  },
  {
    "text": "lifetime management and so on and that's where this approach here comes in which is a little bit different yeah",
    "start": "2063040",
    "end": "2070000"
  },
  {
    "text": "so there's a special flow in oauth called the authorization code flow and that is",
    "start": "2070000",
    "end": "2075679"
  },
  {
    "text": "specifically designed to deal with interactive applications and",
    "start": "2075679",
    "end": "2082320"
  },
  {
    "text": "in particular to be able to during the authorization process of getting a token",
    "start": "2083200",
    "end": "2089118"
  },
  {
    "text": "be able to show a ui right because humans like uis",
    "start": "2089119",
    "end": "2094240"
  },
  {
    "text": "so um in the server to server case there are no ui is necessary there are two machines they don't need a ui but if you",
    "start": "2094240",
    "end": "2100800"
  },
  {
    "text": "are running the application um in front of a human you need that so",
    "start": "2100800",
    "end": "2106240"
  },
  {
    "text": "that's why in oauth the authorization code flow is split up into two logical steps the",
    "start": "2106240",
    "end": "2112720"
  },
  {
    "text": "first step is what we call the front channel and the front channel is everything happening in the browser so it's",
    "start": "2112720",
    "end": "2118240"
  },
  {
    "text": "basically something that shows uis to humans login page content page whatever",
    "start": "2118240",
    "end": "2125280"
  },
  {
    "text": "whatever ui is necessary to complete the token request yeah",
    "start": "2125280",
    "end": "2131200"
  },
  {
    "text": "and then this is very important we um we don't want to return that access token via the",
    "start": "2131200",
    "end": "2137440"
  },
  {
    "text": "browser back to the client application because we don't trust the browser right i mean browsers are great yeah they have a very",
    "start": "2137440",
    "end": "2145359"
  },
  {
    "text": "nice feature that you can give them a url and they just follow it right the browsers are very dangerous as well",
    "start": "2145359",
    "end": "2151119"
  },
  {
    "text": "because you can give them a url and they just follow it so we want to",
    "start": "2151119",
    "end": "2156240"
  },
  {
    "text": "reduce the exposure of sensitive data in the browser and in off case that is the",
    "start": "2156240",
    "end": "2162480"
  },
  {
    "text": "access token okay so what the front channel will return is not the token",
    "start": "2162480",
    "end": "2167839"
  },
  {
    "text": "directly it returns something called um a code and that code can then be used in",
    "start": "2167839",
    "end": "2174240"
  },
  {
    "text": "the second indirection by by doing a server to server call to actually retrieve the actual token",
    "start": "2174240",
    "end": "2180880"
  },
  {
    "text": "okay so let's have a closer look at that so how does the front channel request look like basically it's it's a redirect",
    "start": "2180880",
    "end": "2187440"
  },
  {
    "text": "okay to the authorized endpoint you put a bunch of parameters there client id redirect uri response type is code scope",
    "start": "2187440",
    "end": "2195200"
  },
  {
    "text": "right api one that's what we want to access and now a whole bunch of stuff kicks off in the",
    "start": "2195200",
    "end": "2201520"
  },
  {
    "text": "browser right probably the first thing you see is is a login right if you are not inside of an",
    "start": "2201520",
    "end": "2208160"
  },
  {
    "text": "existing single sign-on session you will you will see a login screen you log in somehow name and password whatever right",
    "start": "2208160",
    "end": "2214880"
  },
  {
    "text": "that login screen is running on the authorization server meaning it's running on the same entity that is owning the resources right that's why",
    "start": "2214880",
    "end": "2222320"
  },
  {
    "text": "it's trusted um i mentioned the consent screen earlier",
    "start": "2222320",
    "end": "2227839"
  },
  {
    "text": "right that's how a consent screen could look like and the whole idea is is to involve the human by giving the human a",
    "start": "2227839",
    "end": "2235119"
  },
  {
    "text": "lot of information like who am i who who do i think you are who is who do i think the client is what",
    "start": "2235119",
    "end": "2242320"
  },
  {
    "text": "is the client asking for do you want to allow this right um",
    "start": "2242320",
    "end": "2248640"
  },
  {
    "text": "some companies like google and facebook and so on they show them all the time um they often they can make a distinction",
    "start": "2249359",
    "end": "2254720"
  },
  {
    "text": "between first party and third-party clients right so where a third-party google client will show the screen or",
    "start": "2254720",
    "end": "2261119"
  },
  {
    "text": "they show it for them so to speak there is that the gmail app doesn't show it right so that's how they express like",
    "start": "2261119",
    "end": "2267599"
  },
  {
    "text": "their level of trust i guess um and you know you should read what's on there yeah and it's hard to to create a good a",
    "start": "2267599",
    "end": "2275200"
  },
  {
    "text": "good content screen that a normal human being who is not an oauth expert can appreciate yeah",
    "start": "2275200",
    "end": "2281839"
  },
  {
    "text": "but yeah ultimately 99 of the time people will click this",
    "start": "2281839",
    "end": "2287040"
  },
  {
    "text": "and when that happens we get back from the authorization server back to",
    "start": "2287040",
    "end": "2293440"
  },
  {
    "text": "the client application and redirect with this thing called a code okay the code",
    "start": "2293440",
    "end": "2299280"
  },
  {
    "text": "is just a random string it it it means nothing so to speak but this code",
    "start": "2299280",
    "end": "2305119"
  },
  {
    "text": "associates on the authorization server side uh with the data that happened",
    "start": "2305119",
    "end": "2310400"
  },
  {
    "text": "during the front channel in direction right who is the user did they consent what are the resources they consented to",
    "start": "2310400",
    "end": "2316880"
  },
  {
    "text": "whatever right um but what we are returning here is just this",
    "start": "2316880",
    "end": "2322640"
  },
  {
    "text": "random string and the idea behind that is is that if an attacker would be able to steal that random string they cannot",
    "start": "2322640",
    "end": "2329520"
  },
  {
    "text": "do anything with that because it's not usable data to make that data usable",
    "start": "2329520",
    "end": "2335440"
  },
  {
    "text": "on the back channel communication the client opens a channel to the token endpoint and authenticates again with",
    "start": "2335440",
    "end": "2343119"
  },
  {
    "text": "client id in secret and passes along the code right and only and there are many many",
    "start": "2343119",
    "end": "2349359"
  },
  {
    "text": "checks happening now like is the client id valid is the client secret valid is the client id the same as the one on the",
    "start": "2349359",
    "end": "2356079"
  },
  {
    "text": "front channel or all of these things that should happen right and if all of that is good",
    "start": "2356079",
    "end": "2361599"
  },
  {
    "text": "ultimately the server will return the access token and a so-called refresh token on on the",
    "start": "2361599",
    "end": "2368400"
  },
  {
    "text": "back channel communication and then the client stores that data server side and then they can access the apis",
    "start": "2368400",
    "end": "2375280"
  },
  {
    "text": "okay so that's how it always works yeah and",
    "start": "2375280",
    "end": "2380960"
  },
  {
    "text": "it's a little bit confusing to start with but imagine front channel is all about ui and back channel is all about",
    "start": "2380960",
    "end": "2387440"
  },
  {
    "text": "now turning the outcome of the ui into tokens",
    "start": "2387440",
    "end": "2393359"
  },
  {
    "text": "good so how do user-centric access tokens look like well they are pretty",
    "start": "2393839",
    "end": "2399359"
  },
  {
    "text": "much the same but as one important addition here that it typically also has",
    "start": "2399359",
    "end": "2404960"
  },
  {
    "text": "an identifier for the user that authenticated during the token request",
    "start": "2404960",
    "end": "2410079"
  },
  {
    "text": "right because now you want to be able to call an api and that api must know who the user is right because they want to",
    "start": "2410079",
    "end": "2415839"
  },
  {
    "text": "do authorization yeah so um in other words that there were two steps",
    "start": "2415839",
    "end": "2422160"
  },
  {
    "text": "of authorization happening at the tokens at the authorization server level they determine does client one have access to",
    "start": "2422160",
    "end": "2429760"
  },
  {
    "text": "api one that's the first thing okay and then once that token reaches the api",
    "start": "2429760",
    "end": "2435760"
  },
  {
    "text": "typically the api will do authorization decisions based on who is the user right",
    "start": "2435760",
    "end": "2441119"
  },
  {
    "text": "compared to a twitter client right uh the twitter client connects to twitter and it asks for permission to write to",
    "start": "2441119",
    "end": "2447760"
  },
  {
    "text": "the timeline right that would be the scope yeah right timeline but then when the twitter",
    "start": "2447760",
    "end": "2454240"
  },
  {
    "text": "client is actually writing to the timeline they must include for which user because you can't write to",
    "start": "2454240",
    "end": "2460480"
  },
  {
    "text": "arbitrary timelines right only the one of the user that has authenticated with",
    "start": "2460480",
    "end": "2465520"
  },
  {
    "text": "okay so it's a two-step process and that is sometimes a little bit confusing what is the job of the authorization server only the upper part",
    "start": "2465520",
    "end": "2472720"
  },
  {
    "text": "only determining if the client is allowed to access the api anything else beyond that is business logic in the api",
    "start": "2472720",
    "end": "2479920"
  },
  {
    "text": "itself good",
    "start": "2479920",
    "end": "2484400"
  },
  {
    "text": "again token management is more interesting here",
    "start": "2485760",
    "end": "2490960"
  },
  {
    "text": "because you know your your access token might be valid for an hour yeah but the application the user is",
    "start": "2490960",
    "end": "2497200"
  },
  {
    "text": "using might run for five hours or five weeks or five years",
    "start": "2497200",
    "end": "2502319"
  },
  {
    "text": "right um so how what do we do if the access token is expired we need a",
    "start": "2502319",
    "end": "2508640"
  },
  {
    "text": "new one but in the interactive flow we saw we need to involve this front channel thing right like go to the login",
    "start": "2508640",
    "end": "2515119"
  },
  {
    "text": "page and all of that and that would be a very bad user experience right you're in the middle of typing something suddenly",
    "start": "2515119",
    "end": "2521359"
  },
  {
    "text": "the browser makes a redirect to a login page and comes back your form is gone that would suck yeah",
    "start": "2521359",
    "end": "2527280"
  },
  {
    "text": "so there's another thing here and another technique that is always used for this",
    "start": "2527280",
    "end": "2532800"
  },
  {
    "text": "type of application called the refresh token and the refresh token is it's just another token that allows you to get a",
    "start": "2532800",
    "end": "2538640"
  },
  {
    "text": "new access token you think of sliding cookies in the browser right in the browser um that happens automatically in",
    "start": "2538640",
    "end": "2545280"
  },
  {
    "text": "oauth you need to make that programmatically meaning once your access token has expired you take the",
    "start": "2545280",
    "end": "2550480"
  },
  {
    "text": "refresh token go back to the token server get a new access token and start using that until that one is expired and",
    "start": "2550480",
    "end": "2556480"
  },
  {
    "text": "the whole thing starts over and over and over again yeah so how does that work well let's say um",
    "start": "2556480",
    "end": "2563200"
  },
  {
    "text": "our access token has expired then the client application will go back to the token server to the",
    "start": "2563200",
    "end": "2568960"
  },
  {
    "text": "authorization server it will basically hand the refresh token in authenticate with the authorization server and if all",
    "start": "2568960",
    "end": "2575760"
  },
  {
    "text": "is good you will get back a new pair of access and refresh tokens that you can use for the next time",
    "start": "2575760",
    "end": "2582079"
  },
  {
    "text": "okay why are they doing it so complicated why don't they just issue an access token that lives for one year wouldn't that be",
    "start": "2582079",
    "end": "2587359"
  },
  {
    "text": "much simpler well for security reasons right because if that x token is leaking",
    "start": "2587359",
    "end": "2593040"
  },
  {
    "text": "and attackers stole it right they would they would have access for one year to your data and that's what we want to",
    "start": "2593040",
    "end": "2598880"
  },
  {
    "text": "avoid right um access tokens should be short-lived in this case it's one hour",
    "start": "2598880",
    "end": "2604000"
  },
  {
    "text": "and after that one hour the client has to go back to the authorization server proof again that he's the right client",
    "start": "2604000",
    "end": "2609520"
  },
  {
    "text": "to get back a new access token for another hour right and the nice thing we can do with",
    "start": "2609520",
    "end": "2615839"
  },
  {
    "text": "this mechanism is well we can actually revoke refresh tokens",
    "start": "2615839",
    "end": "2621200"
  },
  {
    "text": "right so many um systems have that feature that's the one",
    "start": "2621200",
    "end": "2626319"
  },
  {
    "text": "from google they don't call it revoking a refresh token they just say here are apps",
    "start": "2626319",
    "end": "2631920"
  },
  {
    "text": "connected to your account and then you can delete the app from here and what that technically does it deletes the",
    "start": "2631920",
    "end": "2638640"
  },
  {
    "text": "refresh token so the next time this client comes along and tries to hand in the refresh token it will say no",
    "start": "2638640",
    "end": "2645200"
  },
  {
    "text": "you don't have access anymore okay so in other words um",
    "start": "2645200",
    "end": "2650319"
  },
  {
    "text": "the lifetime of the access token determines how quickly you can kick out",
    "start": "2650319",
    "end": "2655359"
  },
  {
    "text": "a client out of your system right so if the access token is valid for one hour",
    "start": "2655359",
    "end": "2660480"
  },
  {
    "text": "and you delete the refresh token right at the start it will take one hour before that kicks in if you make the x",
    "start": "2660480",
    "end": "2666079"
  },
  {
    "text": "token five minutes it will only take five minutes right and it depends again what type of application you're building",
    "start": "2666079",
    "end": "2671520"
  },
  {
    "text": "what is the right value for you right maybe banking applications health care and so on they have better you know",
    "start": "2671520",
    "end": "2678160"
  },
  {
    "text": "stricter requirements than a restaurant rating app right",
    "start": "2678160",
    "end": "2684240"
  },
  {
    "text": "um so that's an example of a self-service revocation style but also of specifies a",
    "start": "2684240",
    "end": "2691520"
  },
  {
    "text": "programmatic revocation endpoint so a well-behaved application that has a",
    "start": "2691520",
    "end": "2696640"
  },
  {
    "text": "refresh token for a user um should once they are done with the user and say",
    "start": "2696640",
    "end": "2702640"
  },
  {
    "text": "like i you know the user locked out i don't need access anymore they should revoke the refresh token",
    "start": "2702640",
    "end": "2708160"
  },
  {
    "text": "programmatically right that would be good developer hygiene i guess by just going here say",
    "start": "2708160",
    "end": "2713920"
  },
  {
    "text": "hey here's a refresh token i got from you please invalidate it revoke it okay so that in any case whatever happens",
    "start": "2713920",
    "end": "2721440"
  },
  {
    "text": "this thing will be not usable anymore and also you help your authorization server to keep your database smaller",
    "start": "2721440",
    "end": "2728480"
  },
  {
    "text": "right by not having to keep all of that data that is stale yeah good",
    "start": "2728480",
    "end": "2735520"
  },
  {
    "text": "so um that is basically the two building blocks of oauth machine to machine and",
    "start": "2735520",
    "end": "2743119"
  },
  {
    "text": "indirective right and now you can build a bunch of applications with that yeah of course the easiest one would be",
    "start": "2743119",
    "end": "2748240"
  },
  {
    "text": "machine to machine right two machines talk to each other the all the other examples of all of the",
    "start": "2748240",
    "end": "2754160"
  },
  {
    "text": "other application types are basically things like web applications right spas",
    "start": "2754160",
    "end": "2759520"
  },
  {
    "text": "web assembly applications mobile applications desktop applications",
    "start": "2759520",
    "end": "2764960"
  },
  {
    "text": "anything you can imagine that has a user interacting with okay and as i said the way i have that",
    "start": "2764960",
    "end": "2771599"
  },
  {
    "text": "in my mind is it's either browser-based or not browser-based now that's",
    "start": "2771599",
    "end": "2776640"
  },
  {
    "text": "basically the things we build these days yeah so when we have a look at the typical",
    "start": "2776640",
    "end": "2781760"
  },
  {
    "text": "browser-based application technology stack and let's let's use asp.net core",
    "start": "2781760",
    "end": "2786880"
  },
  {
    "text": "as an example because that's what i'm doing all the time um it always looks very similar right you have a library a",
    "start": "2786880",
    "end": "2792960"
  },
  {
    "text": "client library for oauth that can make all of these requests right that",
    "start": "2792960",
    "end": "2798560"
  },
  {
    "text": "knows how to do the front channel thing that knows how to harvest the act the the code that knows how to turn the code",
    "start": "2798560",
    "end": "2804640"
  },
  {
    "text": "into a token all of that should not be your job it should be the job of the programming framework you're using and",
    "start": "2804640",
    "end": "2811119"
  },
  {
    "text": "and again i can only really speak um to ace peanut core and they have a brilliant client library it it is very",
    "start": "2811119",
    "end": "2818240"
  },
  {
    "text": "good we worked on it for a long long time but it's it is very good",
    "start": "2818240",
    "end": "2823839"
  },
  {
    "text": "then you have session management right again a typical web application will",
    "start": "2823839",
    "end": "2829040"
  },
  {
    "text": "have a session meaning uh the broad the user logs in and it will be valid for one hour five hours sliding expiration",
    "start": "2829040",
    "end": "2836240"
  },
  {
    "text": "maybe a week you know up to your um to your business case that is typically",
    "start": "2836240",
    "end": "2843440"
  },
  {
    "text": "done with cookies because we're in the browser then we have some token management going on right and that is all about keeping the access token",
    "start": "2843440",
    "end": "2850400"
  },
  {
    "text": "keeping the refresh token using the access token once it's expired use the refresh token to create a new it get a",
    "start": "2850400",
    "end": "2856240"
  },
  {
    "text": "new access token and keep going okay um this part here is unfortunately not",
    "start": "2856240",
    "end": "2861760"
  },
  {
    "text": "inside of a spirit core but i i've written a client um i i've written the library for that",
    "start": "2861760",
    "end": "2867119"
  },
  {
    "text": "which plugs into a speedcore and i think i have a link to that in a minute that helps you with all of that boilerplate",
    "start": "2867119",
    "end": "2872960"
  },
  {
    "text": "code and then you have ui assets right um and it really doesn't matter to me what kind of ui it is is it razer pages",
    "start": "2872960",
    "end": "2879920"
  },
  {
    "text": "is it mdc is it react or angular whatever it's all the same right they are browser-based",
    "start": "2879920",
    "end": "2885680"
  },
  {
    "text": "applications actually if you want to know much more about this i'm doing a talk after the",
    "start": "2885680",
    "end": "2891359"
  },
  {
    "text": "um lunch break about that particular architecture and how to get it right for",
    "start": "2891359",
    "end": "2896800"
  },
  {
    "text": "sparse and blazer web assemblies because that is still",
    "start": "2896800",
    "end": "2902000"
  },
  {
    "text": "not as easy as it should be good if you are not in the browser guess what",
    "start": "2902000",
    "end": "2907599"
  },
  {
    "text": "you need a browser yeah um",
    "start": "2907599",
    "end": "2915040"
  },
  {
    "text": "the benefit of native native applications is is that they don't have to rely on the browser for the whole",
    "start": "2915040",
    "end": "2920240"
  },
  {
    "text": "application lifetime right they just open the browser for authentication purposes they point to the authorized request they get back the code and then",
    "start": "2920240",
    "end": "2927200"
  },
  {
    "text": "do an hp call but the authentication process should be run in a browser",
    "start": "2927200",
    "end": "2934480"
  },
  {
    "text": "yeah um not everyone agrees with me on that",
    "start": "2934480",
    "end": "2939520"
  },
  {
    "text": "but it's definitely an anti-pattern these days to bring up your own native authentication dialogues in mobile apps",
    "start": "2939520",
    "end": "2945839"
  },
  {
    "text": "right you're sending out the wrong signals here you should send the user to the trusted authorization server on the",
    "start": "2945839",
    "end": "2951280"
  },
  {
    "text": "trusted hardware where you have all your logging and and auditing and fraud detection and",
    "start": "2951280",
    "end": "2957680"
  },
  {
    "text": "whatever you have on that server that's where the user should log in and nowhere else",
    "start": "2957680",
    "end": "2963119"
  },
  {
    "text": "okay again remember what was the starting point here not make the user expose credentials to",
    "start": "2963119",
    "end": "2970319"
  },
  {
    "text": "a third party right and even if the mobile app is first party you are sending the wrong",
    "start": "2970319",
    "end": "2977359"
  },
  {
    "text": "signals to the user that this is okay it's not right studies show the less often you make a",
    "start": "2977359",
    "end": "2984880"
  },
  {
    "text": "user sign into your system by having a good single sign-on solution the less",
    "start": "2984880",
    "end": "2990079"
  },
  {
    "text": "prone they are to phishing attacks right because the less often you have to type in your path but maybe the more you",
    "start": "2990079",
    "end": "2995359"
  },
  {
    "text": "think about it when you have to yeah so yeah there's a chance to make stuff more secure just by",
    "start": "2995359",
    "end": "3003200"
  },
  {
    "text": "guiding the user and not taking shortcuts",
    "start": "3003200",
    "end": "3008480"
  },
  {
    "text": "good so the last thing i want to touch on in the last eight minutes",
    "start": "3008480",
    "end": "3015040"
  },
  {
    "text": "is um you often maybe heard the sentence yeah but oh it's not user authentication and",
    "start": "3015040",
    "end": "3021119"
  },
  {
    "text": "you're right it is not oauth was designed to solve this one simple problem how can a client application get",
    "start": "3021119",
    "end": "3026800"
  },
  {
    "text": "an access token to access an api authentication is an implementation detail",
    "start": "3026800",
    "end": "3032720"
  },
  {
    "text": "right from an oauth point of view authentication is out of scope yeah no",
    "start": "3032720",
    "end": "3037920"
  },
  {
    "text": "pun intended i guess um so to make o of more useful",
    "start": "3037920",
    "end": "3044480"
  },
  {
    "text": "um to authentication there are a couple of things missing so look at that that's how our authentication workflow works",
    "start": "3044480",
    "end": "3051280"
  },
  {
    "text": "right on the front channel we go here we go back get a code the code is just a random number on the back channel we go",
    "start": "3051280",
    "end": "3058000"
  },
  {
    "text": "here uh get a get an access token are we allowed to look at the access token no we are not so from a client's point of",
    "start": "3058000",
    "end": "3064400"
  },
  {
    "text": "view you might now have an access token but you don't know who the user is right",
    "start": "3064400",
    "end": "3069520"
  },
  {
    "text": "but that's where open id connect comes in openly connect is an authentication protocol on top that adds these things",
    "start": "3069520",
    "end": "3076240"
  },
  {
    "text": "for example maybe on the way on the front channel you want to influence the authentication experience for the user",
    "start": "3076240",
    "end": "3083280"
  },
  {
    "text": "by saying like hey maybe you should show him the login page in portuguese or in german or whatever right all of these",
    "start": "3083280",
    "end": "3089440"
  },
  {
    "text": "parameters to influence the authentication experience they don't exist in oauth because it wasn't",
    "start": "3089440",
    "end": "3094880"
  },
  {
    "text": "designed for that right um on the back channel there should be some",
    "start": "3094880",
    "end": "3100240"
  },
  {
    "text": "data flowing back here that the client is allowed to consume to figure out hey",
    "start": "3100240",
    "end": "3105280"
  },
  {
    "text": "dominic logged in right um and by the way he locked in with uh",
    "start": "3105280",
    "end": "3110880"
  },
  {
    "text": "multi-factor authentication and his session is uh two hours old are you okay with all of this before you let him into",
    "start": "3110880",
    "end": "3116720"
  },
  {
    "text": "your application right all of that stuff does not exist in oauth and that's where open id connect comes in by basically",
    "start": "3116720",
    "end": "3123839"
  },
  {
    "text": "introducing all of these things yeah like additional parameters on the authorized request to influence the",
    "start": "3123839",
    "end": "3129119"
  },
  {
    "text": "workflow and additional data on the token response that the client can pass",
    "start": "3129119",
    "end": "3135200"
  },
  {
    "text": "in the standard format to make more informed decisions about the user who",
    "start": "3135200",
    "end": "3140640"
  },
  {
    "text": "just logged in okay so they call it the identity token which is",
    "start": "3140640",
    "end": "3146640"
  },
  {
    "text": "really a bad name for it because it has the word token in it and it people are sometimes confused now okay we have",
    "start": "3146640",
    "end": "3152720"
  },
  {
    "text": "access token refresh token identity token which one do i use now and the point is um if you are here in",
    "start": "3152720",
    "end": "3159680"
  },
  {
    "text": "my talk yeah whenever you hear the word identity token",
    "start": "3159680",
    "end": "3164880"
  },
  {
    "text": "yeah translate it in your head with authentication response it's it's the",
    "start": "3164880",
    "end": "3170319"
  },
  {
    "text": "data that the authorization server sends back to the client to let the client know what happened on the server",
    "start": "3170319",
    "end": "3177839"
  },
  {
    "text": "right that's a typical identity token here yeah so that is flowing back to the client and it says like hey subject id",
    "start": "3177839",
    "end": "3184960"
  },
  {
    "text": "is this name is alice login time was that authentication method was a password",
    "start": "3184960",
    "end": "3191119"
  },
  {
    "text": "yeah and where does that data flow back on the back channel",
    "start": "3191119",
    "end": "3198160"
  },
  {
    "text": "okay so the front channel just works the same but when the client exchanges the code with the",
    "start": "3198160",
    "end": "3203359"
  },
  {
    "text": "with the token they get back the access token to call the apis and they get back the id",
    "start": "3203359",
    "end": "3208960"
  },
  {
    "text": "token which then they pass validate the signature pass it and then can say hello dominic in the ui",
    "start": "3208960",
    "end": "3216319"
  },
  {
    "text": "because we know who you are and before that they didn't know because the access token is out of bounds for the client",
    "start": "3216319",
    "end": "3224160"
  },
  {
    "text": "okay cool",
    "start": "3224160",
    "end": "3229280"
  },
  {
    "text": "so that's it you are now all of experts",
    "start": "3230319",
    "end": "3236400"
  },
  {
    "text": "but that's really all i mean you know for um if you are",
    "start": "3236400",
    "end": "3242800"
  },
  {
    "text": "more like a business developer right that's all you need to know how it works if you are more of a security developer",
    "start": "3242800",
    "end": "3248319"
  },
  {
    "text": "then this is a good starting point okay but yeah there are some interesting",
    "start": "3248319",
    "end": "3253920"
  },
  {
    "text": "documents that you might want to read first of all is the o of 2.1 spec um",
    "start": "3253920",
    "end": "3259280"
  },
  {
    "text": "you know reading specs is not everybody's favorite thing to do but i can tell you it's it's useful",
    "start": "3259280",
    "end": "3265760"
  },
  {
    "text": "um here's the open open at the connect spec and here you can see how open open id connect layers on top of oauth to add",
    "start": "3265760",
    "end": "3271520"
  },
  {
    "text": "these additional features um here's a blog post i wrote a couple of",
    "start": "3271520",
    "end": "3276559"
  },
  {
    "text": "years ago actually where it says like hey all you need to remember is there are two flows in oauth forget the rest okay",
    "start": "3276559",
    "end": "3283599"
  },
  {
    "text": "if anyone likes stellar soul um and some some other stuff okay",
    "start": "3283599",
    "end": "3289200"
  },
  {
    "text": "so that's it um oh yeah and if you want to go like really into the weeds",
    "start": "3289200",
    "end": "3295599"
  },
  {
    "text": "then you can start reading all the specs on these pages here where the source of truth is coming from that is what i do",
    "start": "3295599",
    "end": "3304079"
  },
  {
    "text": "many times cool thank you that was it",
    "start": "3304079",
    "end": "3309359"
  },
  {
    "text": "um do you have any questions we have like three more minutes before we close yep",
    "start": "3309359",
    "end": "3314799"
  },
  {
    "text": "uh what oh you know the itf moves slowly",
    "start": "3316160",
    "end": "3322079"
  },
  {
    "text": "um in 2020 i said it's going to be ready this year in 2021 i said it's going to be ready",
    "start": "3322079",
    "end": "3327440"
  },
  {
    "text": "this year i'm sure this year i would say i think it's going to be ready this",
    "start": "3327440",
    "end": "3332839"
  },
  {
    "text": "year um but they are indeed in the last stages right",
    "start": "3332839",
    "end": "3338400"
  },
  {
    "text": "so the itf is a very democratic process right you bring people into a room and they can vote on stuff and if somebody",
    "start": "3338400",
    "end": "3344480"
  },
  {
    "text": "disagrees they have to discuss it you know like all the wrong things about democracy",
    "start": "3344480",
    "end": "3349599"
  },
  {
    "text": "um so yeah it's it's totally fine to reading it now because i think if something will change",
    "start": "3349599",
    "end": "3356319"
  },
  {
    "text": "it will be minor and how you can prove to your colleagues that you are even a bigger geek than",
    "start": "3356319",
    "end": "3362079"
  },
  {
    "text": "just reading specs you can read the diffs between the versions of the stack",
    "start": "3362079",
    "end": "3367520"
  },
  {
    "text": "and know exactly what has changed between revision 13 and revision 14. okay so yeah no it's fine it's almost",
    "start": "3367520",
    "end": "3374799"
  },
  {
    "text": "done nothing fundamental will change that is the record don't read the original spec don't because that is just",
    "start": "3374799",
    "end": "3382240"
  },
  {
    "text": "not useful read this one oh it's gone read read this one here the other one",
    "start": "3382240",
    "end": "3387839"
  },
  {
    "text": "i think that's the best the best source okay",
    "start": "3387839",
    "end": "3392480"
  },
  {
    "text": "no [Laughter] the access token is for accessing apis",
    "start": "3399280",
    "end": "3404880"
  },
  {
    "text": "the identity token is a json object that tells the client application who the",
    "start": "3404880",
    "end": "3410480"
  },
  {
    "text": "user is plus some added data which happens to be a json web token okay it's just a way to get this json",
    "start": "3410480",
    "end": "3417680"
  },
  {
    "text": "object from server back to client without you know with a signature so it can't be tampered with",
    "start": "3417680",
    "end": "3423200"
  },
  {
    "text": "typically the id token is a thing you only consume once you read it you want it's valid and then you throw",
    "start": "3423200",
    "end": "3429200"
  },
  {
    "text": "it away no",
    "start": "3429200",
    "end": "3434720"
  },
  {
    "text": "by the with the authorization code",
    "start": "3434960",
    "end": "3438720"
  },
  {
    "text": "the talk is being recorded if you want to watch it again and again it's yeah the authorization code gives",
    "start": "3440400",
    "end": "3446640"
  },
  {
    "text": "you the id token and the access token and that that's it really",
    "start": "3446640",
    "end": "3452160"
  },
  {
    "text": "yep good thank you very much be around",
    "start": "3452160",
    "end": "3460200"
  },
  {
    "text": "you",
    "start": "3469440",
    "end": "3471520"
  }
]