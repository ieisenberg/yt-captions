[
  {
    "text": "we're good to go we're good to go okay um again the slides are already up on my",
    "start": "799",
    "end": "6799"
  },
  {
    "text": "website for this presentation",
    "start": "6799",
    "end": "10879"
  },
  {
    "text": "and so what i want to do is just look at a few other bits and pieces in the c groups interface",
    "start": "12559",
    "end": "19359"
  },
  {
    "text": "three pieces release notification delegation and",
    "start": "19359",
    "end": "24400"
  },
  {
    "text": "thread mode which is something of an innovation or perhaps it's a dispute resolution",
    "start": "24400",
    "end": "30480"
  },
  {
    "text": "in sea groups version two that will become a bit clearer",
    "start": "30480",
    "end": "36719"
  },
  {
    "text": "okay all these features by the way in some",
    "start": "39440",
    "end": "44800"
  },
  {
    "text": "form were present in secrets version one as well but the implementation or the design is better in sea groups version",
    "start": "44800",
    "end": "52480"
  },
  {
    "text": "two because secrets version one one it was a mess",
    "start": "52480",
    "end": "58160"
  },
  {
    "text": "okay so what i mean by release notification the general idea here is you've got a",
    "start": "58160",
    "end": "63440"
  },
  {
    "text": "you've got a c group you put some processes into the c group but then eventually all those processes",
    "start": "63440",
    "end": "70000"
  },
  {
    "text": "leave the c group either they get moved into different c groups or they terminate and the c group",
    "start": "70000",
    "end": "76720"
  },
  {
    "text": "becomes empty now in that circumstance we might want a notification to tell us that the c group",
    "start": "76720",
    "end": "83119"
  },
  {
    "text": "has become empty and we can get such a notification this is what cgroup release notification",
    "start": "83119",
    "end": "89280"
  },
  {
    "text": "is about and why might we be interested in knowing that sort of thing",
    "start": "89280",
    "end": "94799"
  },
  {
    "text": "well we might have a manager process that's created the number of workers and put them into a c group and when all those",
    "start": "94799",
    "end": "101680"
  },
  {
    "text": "workers finish their work and terminate and the secret becomes empty then the manager process knows the workers have",
    "start": "101680",
    "end": "107840"
  },
  {
    "text": "done their work or we could want to do the thing that system d does",
    "start": "107840",
    "end": "114720"
  },
  {
    "text": "probably many of you are familiar with the idea that systemd has the facility facility to respawn daemons that",
    "start": "114720",
    "end": "121119"
  },
  {
    "text": "accidentally terminate system d is using this feature it puts a",
    "start": "121119",
    "end": "126719"
  },
  {
    "text": "process or puts a demon process into a c group and it monitors that c group to see if",
    "start": "126719",
    "end": "132640"
  },
  {
    "text": "it becomes empty and if it does become empty then it knows the demon prematurely terminated",
    "start": "132640",
    "end": "139120"
  },
  {
    "text": "and it restarts that demon now how does this feature work in",
    "start": "139120",
    "end": "144879"
  },
  {
    "text": "secrets version two inside each c group there is a file called c group dot events and this is a file of keys and",
    "start": "144879",
    "end": "153760"
  },
  {
    "text": "corresponding values that have state information about the c group at",
    "start": "153760",
    "end": "160080"
  },
  {
    "text": "the moment there's only two keys once upon a time there was only one but nowadays there are two",
    "start": "160080",
    "end": "165280"
  },
  {
    "text": "and one of the keys is a key called populated and it tells us",
    "start": "165280",
    "end": "170800"
  },
  {
    "text": "does this c group or any of its c descendant c groups have member",
    "start": "170800",
    "end": "176160"
  },
  {
    "text": "processes if the value in the file is one then somewhere in this sub tree there is at",
    "start": "176160",
    "end": "182400"
  },
  {
    "text": "least one process the file has if the key has the value zero then",
    "start": "182400",
    "end": "189040"
  },
  {
    "text": "this c group and none of its descendants have member processes",
    "start": "189040",
    "end": "195519"
  },
  {
    "text": "and then the idea is that you can monitor these files to find out the cgroup.events",
    "start": "195599",
    "end": "201760"
  },
  {
    "text": "files to find out when the keys change and there's a couple of ways that you can do the",
    "start": "201760",
    "end": "208000"
  },
  {
    "text": "monitoring of this of these files one is you can use the i notify mechanism and",
    "start": "208000",
    "end": "213120"
  },
  {
    "text": "uh which is a sort of a generalized file system notification mechanism i notified",
    "start": "213120",
    "end": "218239"
  },
  {
    "text": "lets you things like monitoring a directory to find out was a new file created in that directory was a file",
    "start": "218239",
    "end": "223840"
  },
  {
    "text": "modified in the directory was a file renamed and so on so we can use i",
    "start": "223840",
    "end": "230400"
  },
  {
    "text": "notify for this job and if one of the keys changes in particular if the populated key changes then inertify",
    "start": "230400",
    "end": "237280"
  },
  {
    "text": "gives us a so-called modify event back and then we can react to that event by looking inside the file",
    "start": "237280",
    "end": "243920"
  },
  {
    "text": "to see did the populated key change alternatively",
    "start": "243920",
    "end": "249519"
  },
  {
    "text": "we can open a file descriptor on one of these files and monitor that file script using",
    "start": "249519",
    "end": "255200"
  },
  {
    "text": "select poll or epoll and if the content of the file changes",
    "start": "255200",
    "end": "260560"
  },
  {
    "text": "then what we get on the file descriptor is either a priority notification if you're talking about",
    "start": "260560",
    "end": "266320"
  },
  {
    "text": "poll or epoll or what's called an in select an exceptional notification",
    "start": "266320",
    "end": "273280"
  },
  {
    "text": "once we've got one of those notifications then we just go and pass the cgroup.events file to see what has",
    "start": "274560",
    "end": "280080"
  },
  {
    "text": "happened to the populated key and of course it might not be the populated key that has changed it could have been the",
    "start": "280080",
    "end": "285520"
  },
  {
    "text": "frozen key for example so when you actually pass the file and check the value of the key to find out has the",
    "start": "285520",
    "end": "292880"
  },
  {
    "text": "populated key changed",
    "start": "292880",
    "end": "297320"
  },
  {
    "text": "you can have one process that monitors multiple c group dot events files",
    "start": "298800",
    "end": "306479"
  },
  {
    "text": "or different processes that monitor different c group dot events files",
    "start": "308240",
    "end": "314479"
  },
  {
    "text": "the nice thing here is that this means you can have a different process monitoring different parts of the",
    "start": "314479",
    "end": "320160"
  },
  {
    "text": "c group hierarchy the secret.events files and different parts of the hierarchy so that",
    "start": "320160",
    "end": "325520"
  },
  {
    "text": "for instance one process might be monitoring all the cgroup.events files associated with a certain container",
    "start": "325520",
    "end": "332160"
  },
  {
    "text": "and another process might be monitoring the sql.events files associated with a different container and so on this was",
    "start": "332160",
    "end": "339680"
  },
  {
    "text": "functionality that was not possible in secrets version one we talked about the notifications being",
    "start": "339680",
    "end": "346400"
  },
  {
    "text": "delegated per per container or per group of processes",
    "start": "346400",
    "end": "353560"
  },
  {
    "text": "okay so let's try this out",
    "start": "353600",
    "end": "358440"
  },
  {
    "text": "give myself a super user shell of course",
    "start": "370800",
    "end": "375039"
  },
  {
    "text": "and i'll make a child c group",
    "start": "378880",
    "end": "384319"
  },
  {
    "text": "now if i look inside that child c group in fact i'm going to do this a little bit differently",
    "start": "392639",
    "end": "398479"
  },
  {
    "text": "uh now i'm going to remind myself for some syntax here",
    "start": "398479",
    "end": "403680"
  },
  {
    "text": "because i often get this wrong well i'll do the simple thing first let's just cat",
    "start": "403680",
    "end": "410880"
  },
  {
    "text": "and i'm in the wrong place of course right now that's cat",
    "start": "410880",
    "end": "418479"
  },
  {
    "text": "c group events we see certain values there for the keys there is no process inside the c group",
    "start": "420560",
    "end": "427599"
  },
  {
    "text": "at the moment now let's create a process",
    "start": "427599",
    "end": "434639"
  },
  {
    "text": "and okay now before i do that",
    "start": "434840",
    "end": "439360"
  },
  {
    "text": "i'm going to use i notify weight i notify weight is a command line",
    "start": "441360",
    "end": "446560"
  },
  {
    "text": "interface to the inodify mechanism i'm going to say i know while i notify white i have to remind myself for the",
    "start": "446560",
    "end": "453360"
  },
  {
    "text": "options there i want to say yes q dash e modify",
    "start": "453360",
    "end": "459680"
  },
  {
    "text": "and i want to do this repeatedly",
    "start": "461680",
    "end": "465720"
  },
  {
    "text": "and i'm going to say this on i want to monitor this see events file",
    "start": "467280",
    "end": "474800"
  },
  {
    "text": "and whenever i get a notification what",
    "start": "474800",
    "end": "480639"
  },
  {
    "text": "happens the the form of inaudib",
    "start": "480639",
    "end": "485319"
  },
  {
    "text": "there is a notification event so every time there's a modify event on that file and let's go around and loop calling i",
    "start": "492160",
    "end": "497680"
  },
  {
    "text": "notify wait again and again the dash queue just says be quiet don't actually give me any printed",
    "start": "497680",
    "end": "503919"
  },
  {
    "text": "information just return when there is a notification event and",
    "start": "503919",
    "end": "509440"
  },
  {
    "text": "whenever i do get that notification event i'm just going to say let's display the populated key",
    "start": "509440",
    "end": "516800"
  },
  {
    "text": "in that cgroup.events file",
    "start": "518839",
    "end": "524080"
  },
  {
    "text": "and then i'm done no i'm not what did i do wrong",
    "start": "524720",
    "end": "531920"
  },
  {
    "text": "oh now okay good now i'm done so",
    "start": "532839",
    "end": "538640"
  },
  {
    "text": "now i'm going to create a sleep process",
    "start": "538640",
    "end": "543440"
  },
  {
    "text": "and then i'm going to move that sleep process into the c group",
    "start": "544240",
    "end": "549839"
  },
  {
    "text": "now when i did that that generated an event because the populated key changed",
    "start": "557360",
    "end": "563839"
  },
  {
    "text": "and of course the loop down below when the notification occurred",
    "start": "563839",
    "end": "570720"
  },
  {
    "text": "my my loop gripped for the key inside the secret.events file and we",
    "start": "570720",
    "end": "576320"
  },
  {
    "text": "just changed the value 1. now let's create another sleep process",
    "start": "576320",
    "end": "584080"
  },
  {
    "text": "and put its pid in there as well",
    "start": "584160",
    "end": "589160"
  },
  {
    "text": "oh that's a bit of a coincidence exactly 100 apart okay",
    "start": "590160",
    "end": "595920"
  },
  {
    "text": "that didn't generate a notification by the way okay because the populated key is a boolean key it's telling us that",
    "start": "595920",
    "end": "602720"
  },
  {
    "text": "there is at least one process in the hierarchy now",
    "start": "602720",
    "end": "608160"
  },
  {
    "text": "suppose i now say kill the first process three four eight",
    "start": "608160",
    "end": "614640"
  },
  {
    "text": "one eight five again there's no notification the value",
    "start": "614640",
    "end": "620079"
  },
  {
    "text": "of that key of that key in that file just cut that file",
    "start": "620079",
    "end": "628000"
  },
  {
    "text": "the value of the key is still one but if i kill the other sleep process",
    "start": "631040",
    "end": "639600"
  },
  {
    "text": "now i get a notification okay because in that subtree now there are no more",
    "start": "642800",
    "end": "649040"
  },
  {
    "text": "live processes so this is this idea of release notification",
    "start": "649040",
    "end": "655920"
  },
  {
    "text": "i think i've covered most of this",
    "start": "659360",
    "end": "664000"
  },
  {
    "text": "yeah okay so that's release notification then uh someone overhead a question that i",
    "start": "665360",
    "end": "671760"
  },
  {
    "text": "said the answer is delegation i was yes it was yes",
    "start": "671760",
    "end": "676560"
  },
  {
    "text": "everything i've been doing so far i did as super user of course that's not so nice if we're",
    "start": "677760",
    "end": "684320"
  },
  {
    "text": "thinking about the notion of unprivileged containers containers run by unplugged users because",
    "start": "684320",
    "end": "690560"
  },
  {
    "text": "we don't want to have we don't want to have the container need to be privileged in order to use c groups",
    "start": "690560",
    "end": "697600"
  },
  {
    "text": "so this is what delegation is about passing ownership of some sub-hierarchy",
    "start": "697600",
    "end": "705680"
  },
  {
    "text": "in the version 2 hierarchy to some less privileged user",
    "start": "705680",
    "end": "712160"
  },
  {
    "text": "user id 1000 for example need a bit of terminology delegator and delegatee what i mean by",
    "start": "712160",
    "end": "719839"
  },
  {
    "text": "the delegator is the privileged user probably super user who owns the parent",
    "start": "719839",
    "end": "725839"
  },
  {
    "text": "c group and then the delegatee is the unprivileged",
    "start": "725839",
    "end": "731360"
  },
  {
    "text": "to which we're going to pass ownership of some sub-tree underneath that parentheses group",
    "start": "731360",
    "end": "738160"
  },
  {
    "text": "now the way that you do delegation is just make the",
    "start": "738160",
    "end": "745600"
  },
  {
    "text": "child c group writable by the by the delegatee",
    "start": "745600",
    "end": "752480"
  },
  {
    "text": "the the usual way of doing that is to change the ownership of the directory",
    "start": "752480",
    "end": "757680"
  },
  {
    "text": "and then the directory is you know writable by the unprivileged user so you change the ownership of the",
    "start": "757680",
    "end": "763600"
  },
  {
    "text": "directory that is going to be the root of your new delegated subtree",
    "start": "763600",
    "end": "769600"
  },
  {
    "text": "and you have to change the ownership some files inside that directory as well the cgroup.prox file so that the",
    "start": "769600",
    "end": "776399"
  },
  {
    "text": "delegatee can write pids into that seagroup.prox file",
    "start": "776399",
    "end": "782399"
  },
  {
    "text": "and also the subtree control file because then the delegate t can",
    "start": "782399",
    "end": "787600"
  },
  {
    "text": "enable controllers inside the delegate inside the delegated tree",
    "start": "787600",
    "end": "794240"
  },
  {
    "text": "you might also need to change the ownership of a few other files and the set of files whose ownership you need to",
    "start": "794240",
    "end": "801120"
  },
  {
    "text": "change has evolved over time there's been a few new files that have",
    "start": "801120",
    "end": "806880"
  },
  {
    "text": "been added over time [Music] that they also need to be delegated and then",
    "start": "806880",
    "end": "813120"
  },
  {
    "text": "your question becomes well i'm using a certain kernel version on that kernel version when i do",
    "start": "813120",
    "end": "819279"
  },
  {
    "text": "delegation which files need to be changed which files need to have their own ship changed",
    "start": "819279",
    "end": "824959"
  },
  {
    "text": "nowadays the kernel has a little interface for allowing you to discover that information there's a file called",
    "start": "824959",
    "end": "830320"
  },
  {
    "text": "or the pseudo file syskernal c group delegate and that file just lists the",
    "start": "830320",
    "end": "836320"
  },
  {
    "text": "names of files that you need to change the ownership for during the delegation stamp",
    "start": "836320",
    "end": "843199"
  },
  {
    "text": "and so you see there cgroup.prox and cgroup.subtree control but there's a couple other files that might be present",
    "start": "843199",
    "end": "849600"
  },
  {
    "text": "in the c group directory and if they are you also need to change their ownership as well",
    "start": "849600",
    "end": "856920"
  },
  {
    "text": "there are some files in the directory though whose ownership you don't want to",
    "start": "858320",
    "end": "863600"
  },
  {
    "text": "change and these are the resource controller interface files things like",
    "start": "863600",
    "end": "868800"
  },
  {
    "text": "pids.net and cpu.max because they are being used from the level above",
    "start": "868800",
    "end": "875120"
  },
  {
    "text": "to limit resources that come into this c group and the delegate even less",
    "start": "875120",
    "end": "880240"
  },
  {
    "text": "privileged user shouldn't be able to change the limits that are coming in from outside the c group so those files",
    "start": "880240",
    "end": "887760"
  },
  {
    "text": "should still remain owned by the delegate t",
    "start": "887760",
    "end": "893760"
  },
  {
    "text": "so in terms of a picture this is what the delegation step looks like we've got",
    "start": "893760",
    "end": "899839"
  },
  {
    "text": "the parent c group that's owned by the delegator presumably super user then",
    "start": "899839",
    "end": "905600"
  },
  {
    "text": "a child c group that we're going to delegate to the delegatee so we change the ownership of that",
    "start": "905600",
    "end": "912720"
  },
  {
    "text": "that directory to being the delegatee and then within that directory we change",
    "start": "912720",
    "end": "918560"
  },
  {
    "text": "the ownership of the other files that are shown here in blue",
    "start": "918560",
    "end": "923680"
  },
  {
    "text": "the ownership of these other files also to be the delegate",
    "start": "923680",
    "end": "928959"
  },
  {
    "text": "but the other files inside that cgroup the resource",
    "start": "928959",
    "end": "935040"
  },
  {
    "text": "controller interface files they remain owned by the delegator",
    "start": "935040",
    "end": "940240"
  },
  {
    "text": "because they are what are being used to control from outside in terms of resources that come into this c group",
    "start": "940240",
    "end": "947440"
  },
  {
    "text": "now once we've done the delegation step the delegate t the less privileged user can then create",
    "start": "947440",
    "end": "954320"
  },
  {
    "text": "child c groups those child secrets will inherit their ownership from the parent c group so",
    "start": "954320",
    "end": "960399"
  },
  {
    "text": "that also be owned by the delegate t and all of the files including the",
    "start": "960399",
    "end": "965839"
  },
  {
    "text": "resource controller interface files inside those child c groups will be owned by the delegate t",
    "start": "965839",
    "end": "973519"
  },
  {
    "text": "so the delegate can freely modify resource limits in the",
    "start": "973519",
    "end": "980079"
  },
  {
    "text": "lower level c groups",
    "start": "980079",
    "end": "983839"
  },
  {
    "text": "okay now there are there's a",
    "start": "985600",
    "end": "991519"
  },
  {
    "text": "there's a there's a set of rules which are called the delegation containment rules and the",
    "start": "991519",
    "end": "997759"
  },
  {
    "text": "idea of the delegation containment rules is that the delegatee",
    "start": "997759",
    "end": "1002880"
  },
  {
    "text": "is allowed to move processes around within the delegated subtree but can't do things like moving a",
    "start": "1002880",
    "end": "1008959"
  },
  {
    "text": "process from the outside of the hierarchy into the delegated sub tree or",
    "start": "1008959",
    "end": "1015040"
  },
  {
    "text": "vice versa and the rules go like this that the writing pro the the delete the writing",
    "start": "1015040",
    "end": "1020959"
  },
  {
    "text": "process that which is presumably owned by the delegatee in order to move a process from a source",
    "start": "1020959",
    "end": "1027839"
  },
  {
    "text": "c group to a target c group two rules the writing process needs to have right",
    "start": "1027839",
    "end": "1033918"
  },
  {
    "text": "permission on the cgroup.prox file in the target c group and write permission",
    "start": "1033919",
    "end": "1039760"
  },
  {
    "text": "on the c group dot prox file in the common ancestor of the source c group",
    "start": "1039760",
    "end": "1046319"
  },
  {
    "text": "and the target c group now the effect of those rules",
    "start": "1046319",
    "end": "1051520"
  },
  {
    "text": "is that for example the presumption here uh well there's",
    "start": "1051520",
    "end": "1056559"
  },
  {
    "text": "various c groups here that are owned by different user ids the root c group for example owned by uid 0 but then there",
    "start": "1056559",
    "end": "1064160"
  },
  {
    "text": "are other c groups that are owned by other users they've been delegated and",
    "start": "1064160",
    "end": "1069679"
  },
  {
    "text": "the delegation containment rules would let us do things like saying we could move a",
    "start": "1069679",
    "end": "1075840"
  },
  {
    "text": "user id 1000 could move a process from c group m",
    "start": "1075840",
    "end": "1080960"
  },
  {
    "text": "to c group in the reason is uid 1000 has write",
    "start": "1080960",
    "end": "1086240"
  },
  {
    "text": "permission on the c group.props file in the target c group in and also has write permission on the c",
    "start": "1086240",
    "end": "1093200"
  },
  {
    "text": "group.prox file in the common ancestor which is b",
    "start": "1093200",
    "end": "1099600"
  },
  {
    "text": "likewise uid 1000 could move a process from c",
    "start": "1099600",
    "end": "1104640"
  },
  {
    "text": "group m to c group x we need to have right permission on the target c group which is x and when you",
    "start": "1104640",
    "end": "1111440"
  },
  {
    "text": "have right permission on the c group dot proximal in the common ancestor the common ancestor of m and x is x",
    "start": "1111440",
    "end": "1121720"
  },
  {
    "text": "on the other hand user id 1000 couldn't move a process",
    "start": "1122160",
    "end": "1127600"
  },
  {
    "text": "from c group x to c group y okay because",
    "start": "1127600",
    "end": "1134160"
  },
  {
    "text": "doesn't have right permission on the seagroup.prox file in the common ancestor",
    "start": "1134160",
    "end": "1139600"
  },
  {
    "text": "and you know if you think about unprivileged containers owned by the same user that",
    "start": "1139600",
    "end": "1145120"
  },
  {
    "text": "feels good because you wouldn't want to you know a user could set up two different containers and then move a process from",
    "start": "1145120",
    "end": "1151120"
  },
  {
    "text": "one container to the other that would that would be icky",
    "start": "1151120",
    "end": "1156640"
  },
  {
    "text": "okay so let's try some things out",
    "start": "1158400",
    "end": "1165840"
  },
  {
    "text": "maybe i'll just better start again here",
    "start": "1168240",
    "end": "1173000"
  },
  {
    "text": "alrighty so the top window here i'm a privileged user and",
    "start": "1191760",
    "end": "1197679"
  },
  {
    "text": "just change my shell prompt something less noisy",
    "start": "1197679",
    "end": "1202480"
  },
  {
    "text": "i'm going to create a child c group",
    "start": "1202880",
    "end": "1208480"
  },
  {
    "text": "i'll call it d group for delegated group now if i do an ls-ld",
    "start": "1213760",
    "end": "1220320"
  },
  {
    "text": "on that directory okay it's owned by super user but i want to delegate that",
    "start": "1220320",
    "end": "1227200"
  },
  {
    "text": "directory to an unprevious user okay down below i",
    "start": "1227200",
    "end": "1232880"
  },
  {
    "text": "am user id 1000 user mtk so",
    "start": "1232880",
    "end": "1238799"
  },
  {
    "text": "to do the delegation step all i do as the delegator is say change the ownership",
    "start": "1238799",
    "end": "1245919"
  },
  {
    "text": "of that directory to unprevious user",
    "start": "1245919",
    "end": "1251840"
  },
  {
    "text": "and associated group on the group but also",
    "start": "1251840",
    "end": "1258320"
  },
  {
    "text": "on some files inside the group c dot procs and",
    "start": "1258320",
    "end": "1265600"
  },
  {
    "text": "c group dot subtree control those are the only files i i happen to",
    "start": "1267440",
    "end": "1274080"
  },
  {
    "text": "know this what have i done oh yeah hey that's interesting isn't it",
    "start": "1274080",
    "end": "1280799"
  },
  {
    "text": "okay let's let's undo that",
    "start": "1280799",
    "end": "1285080"
  },
  {
    "text": "now let's try and do that",
    "start": "1294640",
    "end": "1298159"
  },
  {
    "text": "there i happen to know that those are the only files in that directory that need have i",
    "start": "1300559",
    "end": "1306640"
  },
  {
    "text": "still messed up oh yeah thank you",
    "start": "1306640",
    "end": "1311840"
  },
  {
    "text": "they're all just here to help me debug um so",
    "start": "1316960",
    "end": "1322720"
  },
  {
    "text": "i happen to know that those are the only files inside that directory that need to be delegated",
    "start": "1322720",
    "end": "1328640"
  },
  {
    "text": "there is no file called secret.threads in that directory and there is no no",
    "start": "1328640",
    "end": "1334400"
  },
  {
    "text": "no files associated with the memory controller either",
    "start": "1334480",
    "end": "1339520"
  },
  {
    "text": "now i can then do a bit of verification where i say",
    "start": "1339520",
    "end": "1344840"
  },
  {
    "text": "ls dash l dn",
    "start": "1344840",
    "end": "1350159"
  },
  {
    "text": "long listing in fact we don't need the end",
    "start": "1350159",
    "end": "1355520"
  },
  {
    "text": "okay so those files have been changed to unprovisional me",
    "start": "1356000",
    "end": "1361440"
  },
  {
    "text": "and i've got right permission on those files",
    "start": "1361440",
    "end": "1365840"
  },
  {
    "text": "now what that means and i'll just down in the shell below",
    "start": "1366960",
    "end": "1373480"
  },
  {
    "text": "i'll just step into that directory",
    "start": "1374720",
    "end": "1381158"
  },
  {
    "text": "what that means is that as i'm privileged user i could now create child c groups underneath that delegated c",
    "start": "1381679",
    "end": "1388880"
  },
  {
    "text": "root so if i say make the group 1 group",
    "start": "1388880",
    "end": "1394880"
  },
  {
    "text": "2 and then i do an ls ld on those",
    "start": "1394880",
    "end": "1401120"
  },
  {
    "text": "two directories okay they're owned by me and if i look at the files inside one of those directories",
    "start": "1401120",
    "end": "1408480"
  },
  {
    "text": "all the files are owned by the unprivileged user so this means that as the unproven user",
    "start": "1411120",
    "end": "1416799"
  },
  {
    "text": "i could do things like once controllers are enabled i could start setting limits inside those child",
    "start": "1416799",
    "end": "1423440"
  },
  {
    "text": "c groups now",
    "start": "1423440",
    "end": "1427519"
  },
  {
    "text": "let's try to put this shell into that",
    "start": "1429039",
    "end": "1435679"
  },
  {
    "text": "um the delegated group so i'll say echo dollar dollar into",
    "start": "1435679",
    "end": "1440960"
  },
  {
    "text": "[Music] the",
    "start": "1440960",
    "end": "1445840"
  },
  {
    "text": "oh i'm indeed i'm in the yes i'm in that group already yes so",
    "start": "1451600",
    "end": "1456840"
  },
  {
    "text": "pwd echo dollar dollar into c group dot",
    "start": "1456840",
    "end": "1463600"
  },
  {
    "text": "procs",
    "start": "1463600",
    "end": "1466080"
  },
  {
    "text": "failed why is that at a guess",
    "start": "1470559",
    "end": "1476400"
  },
  {
    "text": "i don't have right permission in the common ancestor and you're quite right there's one more piece that you need to",
    "start": "1480640",
    "end": "1485919"
  },
  {
    "text": "add there i think where does that shell live at the moment at a guess",
    "start": "1485919",
    "end": "1491919"
  },
  {
    "text": "which c group yeah it's probably in the root c group",
    "start": "1491919",
    "end": "1497440"
  },
  {
    "text": "let's let's go and check that camp smash proc slash dollar dollar",
    "start": "1497440",
    "end": "1502559"
  },
  {
    "text": "slash c group oh okay no it's not in the root secrets",
    "start": "1502559",
    "end": "1508480"
  },
  {
    "text": "and something that was created by system d of course but the point is the common ancestor is the root c group",
    "start": "1508480",
    "end": "1515440"
  },
  {
    "text": "and i don't have right permission on the c group dot prox file in in the root c",
    "start": "1515440",
    "end": "1522080"
  },
  {
    "text": "group in the common ancestor okay so to get the very first process",
    "start": "1522080",
    "end": "1528559"
  },
  {
    "text": "into the delegated c group that actually needs to be done by the delegator the privileged user",
    "start": "1528559",
    "end": "1535919"
  },
  {
    "text": "so let's from let's find out the pid of that shell",
    "start": "1535919",
    "end": "1541200"
  },
  {
    "text": "okay that's that pid so then i could say here echo that pid three three four",
    "start": "1541200",
    "end": "1547679"
  },
  {
    "text": "eight eight five five zero into",
    "start": "1547679",
    "end": "1552799"
  },
  {
    "text": "d group c group dot products and",
    "start": "1552799",
    "end": "1559760"
  },
  {
    "text": "then if i now grab also cat proc dollar c group okay the",
    "start": "1559760",
    "end": "1565200"
  },
  {
    "text": "only the secret membership has changed now",
    "start": "1565200",
    "end": "1571200"
  },
  {
    "text": "i could from the shell because the shell is owned by use radio 1000 i could now",
    "start": "1571200",
    "end": "1577520"
  },
  {
    "text": "create a process",
    "start": "1577520",
    "end": "1580400"
  },
  {
    "text": "if i look at the that sleep process that i've just created if i look at its c group membership",
    "start": "1582559",
    "end": "1589520"
  },
  {
    "text": "it's in the same c group as its parent because that's how it happens by default",
    "start": "1595279",
    "end": "1600960"
  },
  {
    "text": "and what i could now do as the unproven user is say echo",
    "start": "1600960",
    "end": "1608320"
  },
  {
    "text": "that pid into one of the",
    "start": "1609120",
    "end": "1614400"
  },
  {
    "text": "child c group c group dot prox files",
    "start": "1614400",
    "end": "1618960"
  },
  {
    "text": "and that works i now again cat the prop f secret file i see the membership has changed",
    "start": "1620400",
    "end": "1626559"
  },
  {
    "text": "and i could move it around a bit more",
    "start": "1626559",
    "end": "1631679"
  },
  {
    "text": "moved into other c group the other child c group and again we see the path name has",
    "start": "1631679",
    "end": "1637120"
  },
  {
    "text": "changed what i couldn't do is",
    "start": "1637120",
    "end": "1642320"
  },
  {
    "text": "something like trying to echo that pid into ccfs",
    "start": "1642320",
    "end": "1648159"
  },
  {
    "text": "c group c group dot prox try and move it into the root c group",
    "start": "1648159",
    "end": "1654640"
  },
  {
    "text": "this is delegation containment in action",
    "start": "1654640",
    "end": "1659200"
  },
  {
    "text": "i think i've covered all of that",
    "start": "1663679",
    "end": "1668200"
  },
  {
    "text": "yeah that's that okay this is going to be a short session but",
    "start": "1674960",
    "end": "1680399"
  },
  {
    "text": "that means i can do a better demos demo thread mode okay",
    "start": "1680399",
    "end": "1685919"
  },
  {
    "text": "so well perhaps though before i talk about thread are there any questions so far because we have got a bit of time in",
    "start": "1685919",
    "end": "1692080"
  },
  {
    "text": "hand or you can think of questions at the end",
    "start": "1692080",
    "end": "1697679"
  },
  {
    "text": "yes please",
    "start": "1697679",
    "end": "1700320"
  },
  {
    "text": "are you talking about the rules yeah",
    "start": "1704880",
    "end": "1710279"
  },
  {
    "text": "next one yes ah",
    "start": "1713200",
    "end": "1717679"
  },
  {
    "text": "yes",
    "start": "1719760",
    "end": "1722760"
  },
  {
    "text": "yeah if you try to move from k to m you're allowed to as user id 1000",
    "start": "1725840",
    "end": "1731120"
  },
  {
    "text": "yeah i i know if it feels a bit strange because you've moved over a c group that",
    "start": "1731120",
    "end": "1736799"
  },
  {
    "text": "was owned by a different user but according to the rules that's allowed and perhaps if you'd like to think of it you know from the point of view of you",
    "start": "1736799",
    "end": "1743600"
  },
  {
    "text": "know the the the tree root of x might be associated with a container owned by user id 1000 and user id 1000 is sort of",
    "start": "1743600",
    "end": "1750880"
  },
  {
    "text": "god in that container so you can do that sort of thing but yeah it is it does feel a bit",
    "start": "1750880",
    "end": "1756799"
  },
  {
    "text": "strange and this this is a slightly unusual setup for you but it's it's it's",
    "start": "1756799",
    "end": "1762720"
  },
  {
    "text": "a theoretically possible setup uh",
    "start": "1762720",
    "end": "1769520"
  },
  {
    "text": "oh so what was i thought you said did you say jada x or k to m",
    "start": "1769840",
    "end": "1775840"
  },
  {
    "text": "k to m yes that's fine but yes that's that's you couldn't move",
    "start": "1775840",
    "end": "1780880"
  },
  {
    "text": "um that's true according to the delegation containment rules you couldn't move a process from",
    "start": "1780880",
    "end": "1786320"
  },
  {
    "text": "j to k okay it is a weird situation",
    "start": "1786320",
    "end": "1793640"
  },
  {
    "text": "could you move from jay to i and i think according to the delegation containment rules the answer",
    "start": "1797440",
    "end": "1802960"
  },
  {
    "text": "is yes yes it's a weird setup",
    "start": "1802960",
    "end": "1808320"
  },
  {
    "text": "um but i'm pretty sure the answer is yes um i can't see any reason why not i've never done that particular experiment",
    "start": "1808320",
    "end": "1814640"
  },
  {
    "text": "but yeah um yeah but i'm sure the answer is yes",
    "start": "1814640",
    "end": "1823840"
  },
  {
    "text": "okay thread mode",
    "start": "1830080",
    "end": "1834120"
  },
  {
    "text": "when cigarettes version 2 was initially um designed there was a one of the design",
    "start": "1837600",
    "end": "1843679"
  },
  {
    "text": "decisions was that the the granularity for c group membership",
    "start": "1843679",
    "end": "1849520"
  },
  {
    "text": "will be at the process level in other words all the threads in a multi-threaded process must be in the",
    "start": "1849520",
    "end": "1855840"
  },
  {
    "text": "same c group version one",
    "start": "1855840",
    "end": "1862399"
  },
  {
    "text": "had allowed something different with version one you could have a multi-threaded process where",
    "start": "1862399",
    "end": "1868720"
  },
  {
    "text": "some threads were in one c group another threads were in a different c group",
    "start": "1868720",
    "end": "1874000"
  },
  {
    "text": "and for some controllers this made sense in particular for the cpu controller people had use cases where you'd have a",
    "start": "1874000",
    "end": "1880559"
  },
  {
    "text": "multi-threaded process where you wanted some threads that were subject to one cpu limit but other threads that should be subjected to a different cpu limit",
    "start": "1880559",
    "end": "1888640"
  },
  {
    "text": "the reason that that wasn't that idea was not initially implemented in secrets version 2 is",
    "start": "1888640",
    "end": "1894640"
  },
  {
    "text": "for some other controllers this made no sense the the most striking example is the",
    "start": "1894640",
    "end": "1901519"
  },
  {
    "text": "memory controller suppose you had a multi-threaded process where you try to put some threads in one",
    "start": "1901519",
    "end": "1906640"
  },
  {
    "text": "memory c group with a certain limit and other threads in a different",
    "start": "1906640",
    "end": "1912080"
  },
  {
    "text": "c group with different memory limits given that threads share in address space what could that situation possibly",
    "start": "1912080",
    "end": "1918080"
  },
  {
    "text": "mean so when secrets version 2 was",
    "start": "1918080",
    "end": "1923600"
  },
  {
    "text": "first implemented the design decision was we won't have that sort of messiness they'll just be thread level granularity",
    "start": "1923600",
    "end": "1931279"
  },
  {
    "text": "for sorry process level granularity for for a c group membership",
    "start": "1931279",
    "end": "1936480"
  },
  {
    "text": "but there were these use cases in version one especially to do with the cpu controller and this led to",
    "start": "1936480",
    "end": "1945120"
  },
  {
    "text": "a long running skirmish between two different groups of kernel",
    "start": "1945120",
    "end": "1950720"
  },
  {
    "text": "developers and the the i said that secrets version two was released in um",
    "start": "1950720",
    "end": "1956320"
  },
  {
    "text": "2016 the skirmish had already been going on for a year and when secrets version 2 was released",
    "start": "1956320",
    "end": "1964080"
  },
  {
    "text": "there was no cpu controller i i don't know what the sea group version",
    "start": "1964080",
    "end": "1969360"
  },
  {
    "text": "2 maintainers hoped perhaps they hope the problem would just go away and we'd get a cpu controller according to our",
    "start": "1969360",
    "end": "1975600"
  },
  {
    "text": "idea but the s the kernel scheduler maintainers had",
    "start": "1975600",
    "end": "1980880"
  },
  {
    "text": "other ideas so on the one hand with the secret version two maintainers that said the level of",
    "start": "1980880",
    "end": "1988080"
  },
  {
    "text": "uh for secret membership the granularity for secret membership will be the process level all threads must be in the",
    "start": "1988080",
    "end": "1993919"
  },
  {
    "text": "same c group on the other hand you had the colonel scheduler maintainers who said if you want to merge a cpu controller into our",
    "start": "1993919",
    "end": "2003200"
  },
  {
    "text": "scheduler you're going to satisfy that use case that was possible in",
    "start": "2003200",
    "end": "2011120"
  },
  {
    "text": "secrets version 1 where you could have different threads in different cpuc groups one of the things that might not have",
    "start": "2011279",
    "end": "2018080"
  },
  {
    "text": "helped here too much is that one of the colonel scheduler maintainers",
    "start": "2018080",
    "end": "2023120"
  },
  {
    "text": "hates secrets wishes they'd never appeared",
    "start": "2023120",
    "end": "2029600"
  },
  {
    "text": "anyway eventually there was a compromise found and this compromise was something called thread mode",
    "start": "2030000",
    "end": "2036159"
  },
  {
    "text": "and thread mode allows a limited form of thread level granularity for certain",
    "start": "2036159",
    "end": "2042480"
  },
  {
    "text": "controllers for the certain controllers where it makes sense",
    "start": "2042480",
    "end": "2047799"
  },
  {
    "text": "and how does this work well now c groups have different types we talk about",
    "start": "2048399",
    "end": "2054960"
  },
  {
    "text": "domain c groups and threaded c groups a domain c group is one",
    "start": "2054960",
    "end": "2060960"
  },
  {
    "text": "which has the original rule a process in one in a domain c group all the threads must be in the same c group",
    "start": "2060960",
    "end": "2069839"
  },
  {
    "text": "this was the original version two default but what you can also do within this",
    "start": "2069839",
    "end": "2075280"
  },
  {
    "text": "overall version to hierarchy is create what are called threaded subtrees and in a",
    "start": "2075280",
    "end": "2081520"
  },
  {
    "text": "threaded sub tree and you can have several different threaded subtrees in a threaded subtree you can have",
    "start": "2081520",
    "end": "2088480"
  },
  {
    "text": "the threads of a process split across different c groups",
    "start": "2088480",
    "end": "2094000"
  },
  {
    "text": "there's one rule which is that all the threads in a pr in that process must be",
    "start": "2094000",
    "end": "2100640"
  },
  {
    "text": "in the same threaded sub-tree there can be many threaded sub-trees but all the threads of any particular",
    "start": "2100640",
    "end": "2106640"
  },
  {
    "text": "multi-threaded process must be in the same threaded sub-tree",
    "start": "2106640",
    "end": "2112319"
  },
  {
    "text": "so there is now thread level granularity in version two but it's more restricted than version one",
    "start": "2113839",
    "end": "2119440"
  },
  {
    "text": "and so we've got the idea like this here i've got a version two hierarchy where there is one",
    "start": "2119440",
    "end": "2125280"
  },
  {
    "text": "threaded subtree and there's a few threaded c groups inside that subtree and the idea is that",
    "start": "2125280",
    "end": "2133200"
  },
  {
    "text": "you'd have a multi-threaded process that where the threads were split across the c groups inside that threaded subtree",
    "start": "2133200",
    "end": "2142000"
  },
  {
    "text": "okay now a change that happened at the same time",
    "start": "2142839",
    "end": "2148079"
  },
  {
    "text": "is now controllers were split into two types so-called threaded controllers and",
    "start": "2148079",
    "end": "2154720"
  },
  {
    "text": "domain controllers and the idea of the threaded controllers these are the controllers that support",
    "start": "2154720",
    "end": "2160720"
  },
  {
    "text": "that sensibly support the idea of thread level granularity for secret membership",
    "start": "2160720",
    "end": "2166480"
  },
  {
    "text": "where it's meaningful to split threads apart for the purposes of doing resource management the other controllers which",
    "start": "2166480",
    "end": "2173280"
  },
  {
    "text": "is most of them are the so-called domain controllers and they only understand",
    "start": "2173280",
    "end": "2178640"
  },
  {
    "text": "process granularity for c group membership",
    "start": "2178640",
    "end": "2183680"
  },
  {
    "text": "so these threaded controls they understand threaded sub trees what i mean by they they understand threaded",
    "start": "2184320",
    "end": "2190720"
  },
  {
    "text": "subtrees is that going back to that uh",
    "start": "2190720",
    "end": "2196160"
  },
  {
    "text": "tree sorry i'll i'll do the drawing here on the screen that's a bad idea that",
    "start": "2196160",
    "end": "2201680"
  },
  {
    "text": "going back to this picture here for the threaded controllers controller interface files things like",
    "start": "2201680",
    "end": "2208720"
  },
  {
    "text": "cpu.max will appear in those child c groups on the other hand for the domain",
    "start": "2208720",
    "end": "2215119"
  },
  {
    "text": "controllers the controller interface files won't appear because domain controllers don't understand threaded",
    "start": "2215119",
    "end": "2221599"
  },
  {
    "text": "subtrees for a domain controller it looks like",
    "start": "2221599",
    "end": "2227119"
  },
  {
    "text": "all the all the the processes reside in the root of the tree because domain",
    "start": "2227119",
    "end": "2232640"
  },
  {
    "text": "controllers they can't have their interface files enabled at lower levels in the tree so the lowest level that a domain",
    "start": "2232640",
    "end": "2238560"
  },
  {
    "text": "controller can do management is the root of the threaded subtree",
    "start": "2238560",
    "end": "2244880"
  },
  {
    "text": "okay [Music]",
    "start": "2247119",
    "end": "2252640"
  },
  {
    "text": "now in order to do the um the management here of these c group",
    "start": "2252640",
    "end": "2260960"
  },
  {
    "text": "these threaded c groups there's a couple of new files that appear there's now a file called cgroup.threads",
    "start": "2260960",
    "end": "2267440"
  },
  {
    "text": "if you write a thread id into that file that'll move a single thread into that c",
    "start": "2267440",
    "end": "2272880"
  },
  {
    "text": "group and this is the way that you split the threads of a multi-threaded process into different",
    "start": "2272880",
    "end": "2278640"
  },
  {
    "text": "c groups in the threaded sub tree by using this file and then there's another file",
    "start": "2278640",
    "end": "2283839"
  },
  {
    "text": "cgroup.type and what this file does is",
    "start": "2283839",
    "end": "2289119"
  },
  {
    "text": "expose or allow you to modify the type of a c group",
    "start": "2289280",
    "end": "2294640"
  },
  {
    "text": "c groups to begin with they have type domain domain c group only supports process level granularity for c group",
    "start": "2294640",
    "end": "2301520"
  },
  {
    "text": "membership but there are other types there's a type called threaded and this means this is a c group in one of these",
    "start": "2301520",
    "end": "2307920"
  },
  {
    "text": "threaded sub trees there are other strings that can appear in this file domain threaded this means",
    "start": "2307920",
    "end": "2314560"
  },
  {
    "text": "this is one of these uh this is a c group that is at the root of a threaded sub tree it's sort of that",
    "start": "2314560",
    "end": "2321440"
  },
  {
    "text": "crossover point going back here it's at that crossover point between the domain outer",
    "start": "2321440",
    "end": "2327920"
  },
  {
    "text": "world and the threaded subtree underneath and",
    "start": "2327920",
    "end": "2333680"
  },
  {
    "text": "there's one more c group type that i really don't want to get into it's slightly confusing",
    "start": "2333680",
    "end": "2340240"
  },
  {
    "text": "called domain invalid maybe it's not so much it's confusing i just don't buy the rationale for its existence",
    "start": "2340240",
    "end": "2347760"
  },
  {
    "text": "there is a rationale but it's questionable i would say",
    "start": "2347760",
    "end": "2352480"
  },
  {
    "text": "this domain and valid state this is a c group that is invalid",
    "start": "2352880",
    "end": "2358640"
  },
  {
    "text": "basically it's a temporary state on the way to creating a threaded subtree",
    "start": "2358640",
    "end": "2364079"
  },
  {
    "text": "what you have ultimately with one of these domain and valid secrets is turn it into a threaded c group",
    "start": "2364079",
    "end": "2370160"
  },
  {
    "text": "there are a couple of different ways for creating these threaded subtrees and i don't have slides here to show you but",
    "start": "2370960",
    "end": "2376400"
  },
  {
    "text": "i'll just do the demonstration you can find the details in in the manual page there are quite a few rules about doing",
    "start": "2376400",
    "end": "2383440"
  },
  {
    "text": "this um and again it's a bit more than i have space to cover but i'll just do some",
    "start": "2383440",
    "end": "2390000"
  },
  {
    "text": "demonstrations and yes we're after that we're done",
    "start": "2390000",
    "end": "2397838"
  },
  {
    "text": "now um what i'm going to do is make a little bit of sub hierarchy and then make a threaded subtree",
    "start": "2428319",
    "end": "2434800"
  },
  {
    "text": "so i'll make a director under here a in fact i'll say magda dash p",
    "start": "2434800",
    "end": "2441040"
  },
  {
    "text": "so a b c d and maybe",
    "start": "2441040",
    "end": "2448480"
  },
  {
    "text": "c and sorry c and e",
    "start": "2449040",
    "end": "2454240"
  },
  {
    "text": "and maybe a slash x slash y",
    "start": "2454240",
    "end": "2460880"
  },
  {
    "text": "slash said i think that's enough",
    "start": "2461200",
    "end": "2467680"
  },
  {
    "text": "now one way of making a threaded subtree is",
    "start": "2467680",
    "end": "2473119"
  },
  {
    "text": "i write the string threaded into a cgroup.typefile",
    "start": "2473119",
    "end": "2478800"
  },
  {
    "text": "so i'm going to write that string into the secret dot type file of",
    "start": "2478800",
    "end": "2487040"
  },
  {
    "text": "the c group c",
    "start": "2487040",
    "end": "2489920"
  },
  {
    "text": "now what this does is make that let's cap that file just to",
    "start": "2492480",
    "end": "2498400"
  },
  {
    "text": "verify the change and i i should have cut that file beforehand but if i i can just cat another file just to",
    "start": "2498400",
    "end": "2503680"
  },
  {
    "text": "demonstrate the default that was not the file i meant to cat let's look at the",
    "start": "2503680",
    "end": "2510000"
  },
  {
    "text": "c group a that's the default type for c groups now",
    "start": "2510000",
    "end": "2516079"
  },
  {
    "text": "i made c threaded",
    "start": "2516079",
    "end": "2521599"
  },
  {
    "text": "and okay what that did was cause the parent of c",
    "start": "2521599",
    "end": "2527599"
  },
  {
    "text": "to become domain threaded the slightly weird way to go but it's how it works",
    "start": "2527599",
    "end": "2533200"
  },
  {
    "text": "this caused the parent c secret become domain threaded and all the other descendants of the parentsy group became",
    "start": "2533200",
    "end": "2540319"
  },
  {
    "text": "invalid so if i then said cat a slash b slash d",
    "start": "2540319",
    "end": "2546240"
  },
  {
    "text": "slash c group dot us a slash b slash d",
    "start": "2546240",
    "end": "2553839"
  },
  {
    "text": "c group why am i getting this wrong",
    "start": "2553839",
    "end": "2559520"
  },
  {
    "text": "oh yes",
    "start": "2559520",
    "end": "2562920"
  },
  {
    "text": "a slash b slash d slash c group dot type",
    "start": "2564640",
    "end": "2570078"
  },
  {
    "text": "the other descendants underneath b became domain and valid",
    "start": "2570640",
    "end": "2576839"
  },
  {
    "text": "now if you're trying to do these experiments you quickly start to go a little bit",
    "start": "2576839",
    "end": "2582400"
  },
  {
    "text": "mad cutting files trying to visualize things and it's not that much fun",
    "start": "2582400",
    "end": "2588800"
  },
  {
    "text": "so you want a little go program that i prepared earlier and so i can now say go run",
    "start": "2588800",
    "end": "2597520"
  },
  {
    "text": "oops of course i should have said mtk",
    "start": "2601200",
    "end": "2605800"
  },
  {
    "text": "few v2c groups and i want to view the hierarchy",
    "start": "2608560",
    "end": "2616560"
  },
  {
    "text": "go a slash b and this program gives me a little",
    "start": "2619119",
    "end": "2624319"
  },
  {
    "text": "visualization because that's much easier than cutting files all over the place and so what we can see is that",
    "start": "2624319",
    "end": "2631040"
  },
  {
    "text": "c has type threaded the parent has type domain threaded and the other",
    "start": "2631040",
    "end": "2637920"
  },
  {
    "text": "descendants of the parent have become invalid if i'd",
    "start": "2637920",
    "end": "2643680"
  },
  {
    "text": "done the viewing instead of c group a okay a has typed main",
    "start": "2643680",
    "end": "2650640"
  },
  {
    "text": "under b has domain threaded now the next thing i would do to create a threaded subtree is i've got to channel all those",
    "start": "2650640",
    "end": "2657680"
  },
  {
    "text": "domain and valid c groups into threaded c groups and so i say echo",
    "start": "2657680",
    "end": "2664560"
  },
  {
    "text": "threaded into a slash b c slash",
    "start": "2664560",
    "end": "2670480"
  },
  {
    "text": "d slash c group dot type and the same thing in the c group e",
    "start": "2670480",
    "end": "2677839"
  },
  {
    "text": "and then if i re-visualize now i've got a fully threaded subtree",
    "start": "2678720",
    "end": "2687280"
  },
  {
    "text": "what i could now do is put a process inside that tree",
    "start": "2687280",
    "end": "2695119"
  },
  {
    "text": "now let's make a a process",
    "start": "2695119",
    "end": "2701480"
  },
  {
    "text": "what this post program does is create one thread for each command line argument and each of the threads tries",
    "start": "2714560",
    "end": "2720800"
  },
  {
    "text": "to burn some cpu time so and",
    "start": "2720800",
    "end": "2726079"
  },
  {
    "text": "three threads is enough okay each of those three threads is getting a",
    "start": "2726240",
    "end": "2732319"
  },
  {
    "text": "hundred percent of cpu time because of course i've got a lot of cpus and",
    "start": "2732319",
    "end": "2738400"
  },
  {
    "text": "what i could then do is move that process",
    "start": "2738400",
    "end": "2743680"
  },
  {
    "text": "into the threaded subtree and the way that i do that is i say echo",
    "start": "2743680",
    "end": "2748960"
  },
  {
    "text": "the pid which is three five one one six two",
    "start": "2748960",
    "end": "2755200"
  },
  {
    "text": "into a slash b slash c",
    "start": "2755200",
    "end": "2760800"
  },
  {
    "text": "c group dot procs",
    "start": "2760800",
    "end": "2764640"
  },
  {
    "text": "now if i cap that file something slightly odd happens",
    "start": "2766079",
    "end": "2772560"
  },
  {
    "text": "i get an error the reason is that from the perspective",
    "start": "2772560",
    "end": "2777839"
  },
  {
    "text": "of the threaded sub-tree the process is considered to be a member of the root of the threaded sub-tree in other words",
    "start": "2777839",
    "end": "2784480"
  },
  {
    "text": "it's considered to be a member of a slash b",
    "start": "2784480",
    "end": "2790079"
  },
  {
    "text": "which was the root of the threaded subtree so processes are always considered to be",
    "start": "2790079",
    "end": "2795599"
  },
  {
    "text": "members of the root of a threaded sub tree but individual threads can be members of various c groups within the",
    "start": "2795599",
    "end": "2803680"
  },
  {
    "text": "threaded subtree so for instance if i said cat a slash b slash",
    "start": "2803680",
    "end": "2808720"
  },
  {
    "text": "c c group dot threads there's all the thread ids they are in",
    "start": "2808720",
    "end": "2815040"
  },
  {
    "text": "that descendancy group again you go a little bit mad trying to",
    "start": "2815040",
    "end": "2822319"
  },
  {
    "text": "cat everything here and again my little go program just makes life a",
    "start": "2822319",
    "end": "2827839"
  },
  {
    "text": "little bit easier by showing me where the pids are and where the thread ids are all the program there is doing there",
    "start": "2827839",
    "end": "2834400"
  },
  {
    "text": "is inspecting cgroup.proc files and secret.threads files and displaying the information",
    "start": "2834400",
    "end": "2841520"
  },
  {
    "text": "now what i could then do is things like this where i say echo",
    "start": "2841520",
    "end": "2848480"
  },
  {
    "text": "let's say twenty thousand",
    "start": "2852000",
    "end": "2858359"
  },
  {
    "text": "100 000 into a slash b",
    "start": "2859839",
    "end": "2865040"
  },
  {
    "text": "c slash d slash",
    "start": "2865040",
    "end": "2870160"
  },
  {
    "text": "cp oh hang on a little problem there i was going to enable cpu limits",
    "start": "2870160",
    "end": "2876160"
  },
  {
    "text": "but of course what i haven't done is enable the cpu controller all the way down at the very end the various c groups so let's just quickly do a little",
    "start": "2876160",
    "end": "2884480"
  },
  {
    "text": "bit of first of all enable cpu in the",
    "start": "2884480",
    "end": "2890558"
  },
  {
    "text": "subtree control file at the root c group then in",
    "start": "2890640",
    "end": "2896000"
  },
  {
    "text": "a and b",
    "start": "2896000",
    "end": "2902079"
  },
  {
    "text": "and c",
    "start": "2902079",
    "end": "2906160"
  },
  {
    "text": "i really like my little go program because it gives me visualizations all these things which would otherwise i",
    "start": "2910240",
    "end": "2915280"
  },
  {
    "text": "would go crazy because it's telling me the cpu control is enabled now in those c groups",
    "start": "2915280",
    "end": "2920880"
  },
  {
    "text": "so then i want to do things like saying echo",
    "start": "2920880",
    "end": "2926400"
  },
  {
    "text": "some quota and period",
    "start": "2927119",
    "end": "2930880"
  },
  {
    "text": "into a slash b slash c",
    "start": "2932800",
    "end": "2938559"
  },
  {
    "text": "d slash cpu dot max",
    "start": "2938559",
    "end": "2946318"
  },
  {
    "text": "just by the way little test i enabled the cpu controller in a and b",
    "start": "2947680",
    "end": "2953040"
  },
  {
    "text": "and c but i set a limit in d why didn't i need to enable the controller in d",
    "start": "2953040",
    "end": "2960480"
  },
  {
    "text": "no",
    "start": "2966880",
    "end": "2969880"
  },
  {
    "text": "button it's always the level above that it's",
    "start": "2972000",
    "end": "2978960"
  },
  {
    "text": "controlling the next level down if i want to do control and d i have to enable the controller at the level above",
    "start": "2978960",
    "end": "2986960"
  },
  {
    "text": "okay i've set a certain cpu limit there and let's set one an e as well",
    "start": "2986960",
    "end": "2992960"
  },
  {
    "text": "and then i can start moving threads into these c groups so i could then say echo",
    "start": "2994319",
    "end": "3000400"
  },
  {
    "text": "say three five one one six two into a slash b slash c",
    "start": "3000400",
    "end": "3008079"
  },
  {
    "text": "slash d slash c group dot threads",
    "start": "3008079",
    "end": "3013838"
  },
  {
    "text": "and of course i meant to use a different number here let's make the limit in e 20 percent",
    "start": "3016000",
    "end": "3026079"
  },
  {
    "text": "and what you can see down below by the way if i just freeze the output there for a moment you can see there that",
    "start": "3026079",
    "end": "3032480"
  },
  {
    "text": "this thread is only getting 50 of the cpu now 50 of us cpu",
    "start": "3032480",
    "end": "3040480"
  },
  {
    "text": "and i've set a different limit in c group e so let's move a different thread in there",
    "start": "3040480",
    "end": "3046950"
  },
  {
    "text": "[Music] 6 3 and",
    "start": "3046950",
    "end": "3053680"
  },
  {
    "text": "again you can see there it's converging on a lower value now oh i measured wrong c group didn't i i",
    "start": "3053680",
    "end": "3060079"
  },
  {
    "text": "mean to move it into e okay",
    "start": "3060079",
    "end": "3067640"
  },
  {
    "text": "okay we're at steady state there now you can see that this thread is getting 20 percent",
    "start": "3071200",
    "end": "3077119"
  },
  {
    "text": "this thread is getting 50 of a cpu the other thread is getting 100 of a cpu",
    "start": "3077119",
    "end": "3083440"
  },
  {
    "text": "because it's it's not limited by anything at the moment okay now if i put two threads into the",
    "start": "3083440",
    "end": "3088880"
  },
  {
    "text": "same c group let's put the third thread also into c group e",
    "start": "3088880",
    "end": "3094960"
  },
  {
    "text": "so i put just resume that output if i put",
    "start": "3094960",
    "end": "3100400"
  },
  {
    "text": "three one three five one six six four into e as well",
    "start": "3100400",
    "end": "3108440"
  },
  {
    "text": "it a moment",
    "start": "3110079",
    "end": "3112880"
  },
  {
    "text": "it takes going to take me you know 10 seconds or so for it to stabilize now okay what you can see that the two",
    "start": "3115920",
    "end": "3122000"
  },
  {
    "text": "threads that are in c group e are sharing the 20 percent that is available to that c group and so",
    "start": "3122000",
    "end": "3129200"
  },
  {
    "text": "they're each getting 10 of the cpu",
    "start": "3129200",
    "end": "3133119"
  },
  {
    "text": "okay that is essentially thread mode i think i'm done and there's a few",
    "start": "3136839",
    "end": "3142640"
  },
  {
    "text": "minutes left in case there are some questions",
    "start": "3142640",
    "end": "3146319"
  },
  {
    "text": "martin",
    "start": "3149680",
    "end": "3152680"
  },
  {
    "text": "okay so it's a nice question the pids controller is misnamed",
    "start": "3159040",
    "end": "3164400"
  },
  {
    "text": "the pids controller you know it's not limiting pids it's limiting tasks it's limiting threads individual",
    "start": "3164400",
    "end": "3171520"
  },
  {
    "text": "threads count against the limit so if you took a multithreaded process and put some threads in one pid c group and",
    "start": "3171520",
    "end": "3178160"
  },
  {
    "text": "other threads in another pidc group then it would limit those the the ability of each of those threads to create further",
    "start": "3178160",
    "end": "3184480"
  },
  {
    "text": "threads or further processes yeah that's why it's a threaded controller despite the name",
    "start": "3184480",
    "end": "3192400"
  },
  {
    "text": "other questions ah yes i'm jim",
    "start": "3193200",
    "end": "3200400"
  },
  {
    "text": "there is a story um there is look i i am just the messenger okay",
    "start": "3206400",
    "end": "3212960"
  },
  {
    "text": "the the to me the question is why do we need the main invalid no mode at all why couldn't",
    "start": "3212960",
    "end": "3218800"
  },
  {
    "text": "you just write domain threaded into a certain c group and that makes everything underneath threaded that would be so much simpler wouldn't",
    "start": "3218800",
    "end": "3225040"
  },
  {
    "text": "it yeah but it's not the world we have and this is because at a",
    "start": "3225040",
    "end": "3230240"
  },
  {
    "text": "a certain point there was a discussion that there might be possibility for something called mixed mode where you",
    "start": "3230240",
    "end": "3235520"
  },
  {
    "text": "might have a threaded subtree but then underneath there might be some domain subtree now what this could mean was",
    "start": "3235520",
    "end": "3242480"
  },
  {
    "text": "never fully elaborated but then the decision was made well let's allow for this in the future we",
    "start": "3242480",
    "end": "3247599"
  },
  {
    "text": "don't know quite what it's going to look like but we're going to allow for it and what this means that you know we don't necessarily want to make the the",
    "start": "3247599",
    "end": "3253200"
  },
  {
    "text": "decision up front what should be the type of one of these c groups underneath",
    "start": "3253200",
    "end": "3258319"
  },
  {
    "text": "the thread sub tree i don't buy it because you know if we need to do that thing differently then perhaps we could",
    "start": "3258319",
    "end": "3264559"
  },
  {
    "text": "have had a world we just wrote domain threaded into a c group dot type file and it did you know made everything",
    "start": "3264559",
    "end": "3269920"
  },
  {
    "text": "threaded underneath and if you need to do something else different in the future you write some different string into",
    "start": "3269920",
    "end": "3275760"
  },
  {
    "text": "these files but it's what we have",
    "start": "3275760",
    "end": "3280319"
  },
  {
    "text": "that's right please question",
    "start": "3287760",
    "end": "3294400"
  },
  {
    "text": "no so underneath the domain threaded c group the only kinds of c groups you'll find are either threaded or domain",
    "start": "3298799",
    "end": "3306880"
  },
  {
    "text": "yeah so if you write threaded into ac file that makes the parent domain threaded and everything underneath that",
    "start": "3316559",
    "end": "3323680"
  },
  {
    "text": "domain thread of ancestor domain and value everything else domain and valid",
    "start": "3323680",
    "end": "3329200"
  },
  {
    "text": "it's it's weird but it's the way it works",
    "start": "3329200",
    "end": "3333880"
  },
  {
    "text": "no the only string you can write to these files is the string threaded in other words the only explicit",
    "start": "3335359",
    "end": "3341119"
  },
  {
    "text": "transition that you can make is to convert a c group to type threaded",
    "start": "3341119",
    "end": "3346720"
  },
  {
    "text": "now there are implicit transitions that can happen though and i'll just quickly",
    "start": "3346720",
    "end": "3352000"
  },
  {
    "text": "illustrate that that let's do that visualization again",
    "start": "3352000",
    "end": "3359599"
  },
  {
    "text": "the c group there x has type domain and so what if i make",
    "start": "3360160",
    "end": "3367440"
  },
  {
    "text": "the type of y threaded so i'll say echo",
    "start": "3367440",
    "end": "3375280"
  },
  {
    "text": "threaded into a slash x slash y slash c group dot",
    "start": "3375280",
    "end": "3380880"
  },
  {
    "text": "type and visualize parents become domain threaded",
    "start": "3380880",
    "end": "3386160"
  },
  {
    "text": "the sibling has become domain invalid but what if i do this",
    "start": "3386160",
    "end": "3392240"
  },
  {
    "text": "r m der a slash x slash y now the reason that x is threaded the",
    "start": "3392240",
    "end": "3399040"
  },
  {
    "text": "main thread i should say is because it has a threaded child what if i remove that threaded child",
    "start": "3399040",
    "end": "3404799"
  },
  {
    "text": "i can do it and then what happened to",
    "start": "3404799",
    "end": "3410000"
  },
  {
    "text": "x it reverted to type domain and its child reverted to type domain as well",
    "start": "3410000",
    "end": "3416160"
  },
  {
    "text": "so there are these kinds of implicit transitions that can happen if the ancestor is no longer forced to being",
    "start": "3416160",
    "end": "3423920"
  },
  {
    "text": "domain threaded there is another way that you can create a threaded sub tree but i i won't try",
    "start": "3423920",
    "end": "3429040"
  },
  {
    "text": "and talk about that here but this but basically there's two ways you can create a threaded subtree but if the the thing",
    "start": "3429040",
    "end": "3435280"
  },
  {
    "text": "that triggers the creation of the threaded sub tree is undone then the ancestor the the domain",
    "start": "3435280",
    "end": "3441680"
  },
  {
    "text": "threaded root reverts to being type domain",
    "start": "3441680",
    "end": "3446359"
  },
  {
    "text": "in this scenario yes but in the other scenario it looks a little bit different but even so if you reverse the steps",
    "start": "3448079",
    "end": "3453200"
  },
  {
    "text": "then the the the conversion to domain thread is undone",
    "start": "3453200",
    "end": "3459000"
  },
  {
    "text": "joking",
    "start": "3460079",
    "end": "3462559"
  },
  {
    "text": "yes sorry if you have the main thread history group could you",
    "start": "3473440",
    "end": "3479279"
  },
  {
    "text": "ah yes you could so let's let's let's say make so um",
    "start": "3481200",
    "end": "3489520"
  },
  {
    "text": "well here's our visualization at the moment we've got a and x and z let's make z threaded",
    "start": "3489520",
    "end": "3496559"
  },
  {
    "text": "into a slash ink slash z slash c group dot type",
    "start": "3496559",
    "end": "3504400"
  },
  {
    "text": "now that of course turned x into domain threaded now what if we then wrote threaded",
    "start": "3504400",
    "end": "3510640"
  },
  {
    "text": "into a slash x that's what you're talking about isn't it",
    "start": "3510640",
    "end": "3517670"
  },
  {
    "text": "[Music]",
    "start": "3517670",
    "end": "3521010"
  },
  {
    "text": "now i'm confused oh no i think that's because of",
    "start": "3523280",
    "end": "3528799"
  },
  {
    "text": "something else that's going on which is i've got the main controllers enabled at",
    "start": "3528799",
    "end": "3534079"
  },
  {
    "text": "certain levels above yeah so that you can actually do this sort of thing and if i didn't have other",
    "start": "3534079",
    "end": "3540160"
  },
  {
    "text": "domain controllers enabled because there are some rules that i haven't talked about um but you can do that sort of",
    "start": "3540160",
    "end": "3546000"
  },
  {
    "text": "thing where you write threaded into a secret that is currently remain threaded and that causes the parent to become a",
    "start": "3546000",
    "end": "3551280"
  },
  {
    "text": "domain threaded and that domain threaded child becomes threaded now and the other descents become domain",
    "start": "3551280",
    "end": "3557920"
  },
  {
    "text": "invalid",
    "start": "3557920",
    "end": "3560480"
  },
  {
    "text": "uh no if a c group if a sibling is already threaded that stays threaded",
    "start": "3569440",
    "end": "3575040"
  },
  {
    "text": "[Music]",
    "start": "3577810",
    "end": "3580920"
  },
  {
    "text": "i know i think it should become threaded as well yeah and there's something else let's do with the controllers i think",
    "start": "3583040",
    "end": "3588559"
  },
  {
    "text": "i'd have to look more closely i've broken another rule that i haven't explained",
    "start": "3588559",
    "end": "3594079"
  },
  {
    "text": "yes please",
    "start": "3594079",
    "end": "3597400"
  },
  {
    "text": "oh that's that's the rule i've broken thank you i've just realized it um",
    "start": "3606240",
    "end": "3611520"
  },
  {
    "text": "that you if i do the visualization thank you for that question",
    "start": "3611520",
    "end": "3617200"
  },
  {
    "text": "the rule that i've broken is you can't turn a particular node into domain threaded if there are descendant c",
    "start": "3617200",
    "end": "3624079"
  },
  {
    "text": "groups that have member processes already and i was trying to turn a into the main threaded but already underneath a there",
    "start": "3624079",
    "end": "3631280"
  },
  {
    "text": "is c group b that has a member process that's the rule i broke",
    "start": "3631280",
    "end": "3637680"
  },
  {
    "text": "um i wasn't thinking quite quickly enough um but you know to",
    "start": "3637680",
    "end": "3644640"
  },
  {
    "text": "to finally do your question your iq in a different way let's just say make the p slash q slash r",
    "start": "3644640",
    "end": "3653440"
  },
  {
    "text": "oh you make dash p and then",
    "start": "3653760",
    "end": "3659359"
  },
  {
    "text": "do the visualization on p okay and then if i make echo",
    "start": "3659359",
    "end": "3665440"
  },
  {
    "text": "threaded into p slash q slash r slash",
    "start": "3665440",
    "end": "3671359"
  },
  {
    "text": "c group dot type do the visualization the parents become remain threaded but then if i",
    "start": "3671359",
    "end": "3677200"
  },
  {
    "text": "do that on q",
    "start": "3677200",
    "end": "3681920"
  },
  {
    "text": "and visualize again let's turn the bit yeah",
    "start": "3683040",
    "end": "3689838"
  },
  {
    "text": "other questions i think we're about at about time",
    "start": "3691040",
    "end": "3696160"
  },
  {
    "text": "okay thank you for your time [Applause]",
    "start": "3696160",
    "end": "3705349"
  }
]