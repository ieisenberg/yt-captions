[
  {
    "text": "yeah uh I I'm now in the fun position of being the only thing that sounds between",
    "start": "3159",
    "end": "8440"
  },
  {
    "text": "you and lunch for about an hour so that's going to be great um so let's just have a quick show of",
    "start": "8440",
    "end": "17119"
  },
  {
    "text": "hands who would who would say they write code at work yeah yeah a lot of developers",
    "start": "17119",
    "end": "23279"
  },
  {
    "text": "around here and would you say you mostly write C++ yeah that's not not me for would you",
    "start": "23279",
    "end": "30480"
  },
  {
    "text": "say you uh would some of you be working with uh embedded mostly yeah yeah we",
    "start": "30480",
    "end": "36879"
  },
  {
    "text": "have some embedded developers and who would say they are they they they know",
    "start": "36879",
    "end": "42760"
  },
  {
    "text": "how to code some python yeah that's a lot of people and",
    "start": "42760",
    "end": "48360"
  },
  {
    "text": "um I'll make it my goal to make this relevant for for all of you um but quick",
    "start": "48360",
    "end": "54920"
  },
  {
    "text": "disclaimer uh I'm going to have some python code examples but you can do this with C+ plus so hopefully yeah nobody's",
    "start": "54920",
    "end": "61960"
  },
  {
    "text": "leaving yet so that's good uh it's hard to have a title like this uh and be",
    "start": "61960",
    "end": "69200"
  },
  {
    "text": "humble uh so yeah I I'm just keep adding question marks and yeah please send some",
    "start": "69200",
    "end": "75240"
  },
  {
    "text": "help uh I I definitely do write bugs um and I try my best",
    "start": "75240",
    "end": "80759"
  },
  {
    "text": "to uh to not have catastrophes",
    "start": "80759",
    "end": "85920"
  },
  {
    "text": "happen um and in that uh I found a tool that's uh both fun to use and rather",
    "start": "85920",
    "end": "94119"
  },
  {
    "text": "quick to use and it saves my ass",
    "start": "94119",
    "end": "99360"
  },
  {
    "text": "so um first things first about me uh why am I here uh why should you be listening",
    "start": "99360",
    "end": "106280"
  },
  {
    "text": "to me um so uh when I was at University I I was quite interested in uh prog",
    "start": "106280",
    "end": "114399"
  },
  {
    "text": "language called hasal you might have heard of it uh it's quite academic very beautiful",
    "start": "114399",
    "end": "120560"
  },
  {
    "text": "uh and it had a fantastic Library uh called quick check uh among written by",
    "start": "120560",
    "end": "126560"
  },
  {
    "text": "among others uh John Hughes and uh that was sort of revolutionary to me uh my",
    "start": "126560",
    "end": "131959"
  },
  {
    "text": "bachelor's degree was in mathematics so this just fit my brain so well uh and",
    "start": "131959",
    "end": "138760"
  },
  {
    "text": "then the sort of the kind of the ugly part of like well the real world and stuff um but apparently as it turns out",
    "start": "138760",
    "end": "148040"
  },
  {
    "text": "yeah that fits quite well there too so so when I started working for equinor",
    "start": "148040",
    "end": "153280"
  },
  {
    "text": "where I still work uh I kind of uh I pushed for this we we should try doing some of this property based testing",
    "start": "153280",
    "end": "160120"
  },
  {
    "text": "stuff uh and it started out with me kind of sneakily uh trying this out with my",
    "start": "160120",
    "end": "165319"
  },
  {
    "text": "own stuff and then after a while it kind of grew um last year I had a uh",
    "start": "165319",
    "end": "170800"
  },
  {
    "text": "statistician come to me and say one of my co-workers say that I you know I I used to hate testing but this is amazing",
    "start": "170800",
    "end": "178480"
  },
  {
    "text": "and it's fun and it uh found some found some bugs and we're going to get",
    "start": "178480",
    "end": "183720"
  },
  {
    "text": "to um what that is um but last uh January we had a bit of a course",
    "start": "183720",
    "end": "192440"
  },
  {
    "text": "we invited Thomas art uh one of the I would say Pioneers uh of property based",
    "start": "192440",
    "end": "198480"
  },
  {
    "text": "testing and he talked about how they they use their uh framework written in",
    "start": "198480",
    "end": "203599"
  },
  {
    "text": "llang to to test the code for Volvo and they they found bugs in",
    "start": "203599",
    "end": "210720"
  },
  {
    "text": "Dropbox and so on so this is this kind of go goes on beyond what kind of programming language you use and more",
    "start": "210720",
    "end": "216239"
  },
  {
    "text": "into like you need a good tool and uh there is a very useful and easy to",
    "start": "216239",
    "end": "222519"
  },
  {
    "text": "understand too tool for this uh called hypothesis and I would I mean I I rank",
    "start": "222519",
    "end": "228640"
  },
  {
    "text": "it very highly because I love working with it so that's that's what this is about this tool at the end we're going",
    "start": "228640",
    "end": "235000"
  },
  {
    "text": "to I have a link where you can find uh how to do this in pretty much",
    "start": "235000",
    "end": "240599"
  },
  {
    "text": "language it's a long list of Frameworks that do this so there's two parts to the talk",
    "start": "240599",
    "end": "246480"
  },
  {
    "text": "first we're going to look at the sort of time bombs uh that I'm talking about the kind of the core uh core sort of problem",
    "start": "246480",
    "end": "254799"
  },
  {
    "text": "we're trying to look for and then we're going to look at the technique uh and luckily enough uh yeah",
    "start": "254799",
    "end": "262759"
  },
  {
    "text": "so if you want to see how this works in practice uh all our equinor has a lot of",
    "start": "262759",
    "end": "268520"
  },
  {
    "text": "Open Source Code all uh the code I work on mostly is open source so you can you",
    "start": "268520",
    "end": "274440"
  },
  {
    "text": "can go and look at our production code and and if you doubt what I'm say now",
    "start": "274440",
    "end": "279759"
  },
  {
    "text": "where I showing these simple examples you can go and point out look no this isn't what you're doing or you know find out for yourself like yeah this is this",
    "start": "279759",
    "end": "286440"
  },
  {
    "text": "is what we do so luckily this summer there was a uh",
    "start": "286440",
    "end": "292560"
  },
  {
    "text": "there was a big catastrophe well luckily I say but luckily for me because I can show it for you as an example uh crowd strike",
    "start": "292560",
    "end": "300400"
  },
  {
    "text": "um did something that uh that crashed 8.5 million devices uh very",
    "start": "300400",
    "end": "306400"
  },
  {
    "text": "quickly uh so there there are many ways to dissect this uh one thing is the",
    "start": "306400",
    "end": "313080"
  },
  {
    "text": "memory uh unsafe um operation that they did in Kern mode",
    "start": "313080",
    "end": "319360"
  },
  {
    "text": "essentially an array out of Bounce uh read and then uh there was the",
    "start": "319360",
    "end": "326360"
  },
  {
    "text": "configuration they sent which which was validated but not good enough and then",
    "start": "326360",
    "end": "331759"
  },
  {
    "text": "shipped to this thing which then blew up and blue screen the machine and uh Crow strike uh they came",
    "start": "331759",
    "end": "340319"
  },
  {
    "text": "out with a root cause analysis uh the file they sent the",
    "start": "340319",
    "end": "345560"
  },
  {
    "text": "configuration this was called the uh template file and then there was",
    "start": "345560",
    "end": "353319"
  },
  {
    "text": "this latent out of bounds read related to this template file and the reason why this had never shown up before was that",
    "start": "353319",
    "end": "359440"
  },
  {
    "text": "the the last element in the template file had this wild card in it uh that meant",
    "start": "359440",
    "end": "365800"
  },
  {
    "text": "that you never needed to look up uh this uh array index uh but it was tested but of course",
    "start": "365800",
    "end": "374319"
  },
  {
    "text": "uh the test data they used also had this wild card in the in the last index so",
    "start": "374319",
    "end": "381319"
  },
  {
    "text": "they they managed to test the the correct case but they never tested beyond",
    "start": "381319",
    "end": "386759"
  },
  {
    "text": "that or tested the case that worked but but no no cases that didn't",
    "start": "386759",
    "end": "393039"
  },
  {
    "text": "work um going on uh this is also a a pretty",
    "start": "393039",
    "end": "400199"
  },
  {
    "text": "fun well fun for me fun not fun for it about 2,000 fights cancelled uh the",
    "start": "400199",
    "end": "406759"
  },
  {
    "text": "people who were going to take that flight uh there was a UK air traffic",
    "start": "406759",
    "end": "413280"
  },
  {
    "text": "failure this was uh I believe September",
    "start": "413280",
    "end": "418520"
  },
  {
    "text": "last year uh that was blamed on an extremely rare",
    "start": "418520",
    "end": "423919"
  },
  {
    "text": "set of circumstances involving two identically named but separate Waypoint markers outside the UK airspace and",
    "start": "423919",
    "end": "431919"
  },
  {
    "text": "that's that's pretty much what they said was the cause of this so we don't really know more but it seems Seems sort of a",
    "start": "431919",
    "end": "439440"
  },
  {
    "text": "something that was deemed unlikely but then actually happened and uh yeah for the they had",
    "start": "439440",
    "end": "447759"
  },
  {
    "text": "installed the air for the software for 5 years and handled 15 million flight",
    "start": "447759",
    "end": "453759"
  },
  {
    "text": "plans but then after 5 years boom it blew up with this this as uh the outcome",
    "start": "453759",
    "end": "460360"
  },
  {
    "text": "of course those five years included 2020 and 2021 uh also known as the corona years",
    "start": "460360",
    "end": "466919"
  },
  {
    "text": "where there weren't that much flights uh this is a quite of a",
    "start": "466919",
    "end": "474759"
  },
  {
    "text": "scandal that's uh been happening in uh uh UK you might have heard of it the uh",
    "start": "474759",
    "end": "481759"
  },
  {
    "text": "the post office Scandal uh hundreds of uh post office",
    "start": "481759",
    "end": "486840"
  },
  {
    "text": "Masters that have been falsely accused of uh uh essling or",
    "start": "486840",
    "end": "493479"
  },
  {
    "text": "fraud um and uh perhaps what was new uh last",
    "start": "493479",
    "end": "500240"
  },
  {
    "text": "year was that they interviewed one of the developers that had been on the project and they said well yeah there",
    "start": "500240",
    "end": "506759"
  },
  {
    "text": "were there were a lot of bugs in this software but there was also an immense pressure to ship",
    "start": "506759",
    "end": "512200"
  },
  {
    "text": "it because it was uh over budgeted uh it was written about as a enormous it",
    "start": "512200",
    "end": "520159"
  },
  {
    "text": "Scandal and then uh I uh Wikipedia lists",
    "start": "520159",
    "end": "525480"
  },
  {
    "text": "that there's been at least four postm that commit committed suicide uh as a cause of",
    "start": "525480",
    "end": "534880"
  },
  {
    "text": "this and of course then they uh this the said",
    "start": "534880",
    "end": "539959"
  },
  {
    "text": "uh you got to throw it away and reite it that's a very weak position to to argue",
    "start": "539959",
    "end": "545519"
  },
  {
    "text": "from of course so but it it emphasizes that uh you don't you don't",
    "start": "545519",
    "end": "553680"
  },
  {
    "text": "have uh infinite time to actually ship something that's bug free there's a there there's eventually there's going",
    "start": "553680",
    "end": "559760"
  },
  {
    "text": "to be",
    "start": "559760",
    "end": "562040"
  },
  {
    "text": "pressure all right so um stepping back a",
    "start": "565160",
    "end": "570480"
  },
  {
    "text": "little bit what was it that what was it that we wanted our tests to do kind of",
    "start": "570480",
    "end": "576560"
  },
  {
    "text": "in the general well one thing is to be able to go faster this is often touted",
    "start": "576560",
    "end": "583040"
  },
  {
    "text": "as a a a main reason to actually write test uh the sort of the uh why do cars",
    "start": "583040",
    "end": "589920"
  },
  {
    "text": "have break argument well you need brakes on cars because the cars need to go at a high",
    "start": "589920",
    "end": "597600"
  },
  {
    "text": "speed um and we'll we'll get into that a little bit uh of course then there's the other",
    "start": "597600",
    "end": "605440"
  },
  {
    "text": "part where the programmer wants to ensure that the program does what I",
    "start": "605440",
    "end": "610480"
  },
  {
    "text": "intended it to do this is usually just called correctness or some fit for purpose sometimes and then the flip side",
    "start": "610480",
    "end": "617959"
  },
  {
    "text": "of the coin where is that the the program doesn't do anything bad and now",
    "start": "617959",
    "end": "623600"
  },
  {
    "text": "we're into things that are usually called security something memory or",
    "start": "623600",
    "end": "628640"
  },
  {
    "text": "safety something memory safety",
    "start": "628640",
    "end": "634480"
  },
  {
    "text": "um and the way uh the way I think about it so here um this like",
    "start": "634480",
    "end": "643600"
  },
  {
    "text": "how uh how does this help us go fast how does this help us uh avoid problems so",
    "start": "643600",
    "end": "650279"
  },
  {
    "text": "I'm I'm in this box and and coding so I'm un bugging and then so later on I",
    "start": "650279",
    "end": "655800"
  },
  {
    "text": "will have to do some debugging uh before I've started there are certain things in place that help me",
    "start": "655800",
    "end": "664000"
  },
  {
    "text": "avoid uh faults in the first place okay and that might be uh design so the kind",
    "start": "664000",
    "end": "670519"
  },
  {
    "text": "of the architecture is designed in such a way that I avoid uh creating bugs in the first",
    "start": "670519",
    "end": "676040"
  },
  {
    "text": "place there's the there's my experience there's the teams experience the organizations's experience with making",
    "start": "676040",
    "end": "682600"
  },
  {
    "text": "software that definitely does help there's the scope of what I'm trying to do of course if I'm trying to do",
    "start": "682600",
    "end": "688680"
  },
  {
    "text": "something s then maybe I might get it right and coding standards certainly",
    "start": "688680",
    "end": "694000"
  },
  {
    "text": "play into effect here and then by keystroke by keystroke you get this sort",
    "start": "694000",
    "end": "699480"
  },
  {
    "text": "of feedback the syntax highlighting the compiler errors linting of course uh",
    "start": "699480",
    "end": "705839"
  },
  {
    "text": "then sort of save by save you get the fast test are running there's maybe some stat static analysis running as we get",
    "start": "705839",
    "end": "714079"
  },
  {
    "text": "even further down we now get uh slow test",
    "start": "714079",
    "end": "720079"
  },
  {
    "text": "um uh you might do some formal verification if it's if we're talking uh",
    "start": "720079",
    "end": "725600"
  },
  {
    "text": "Mission critical uh software and then finally there's the someone else tells",
    "start": "725600",
    "end": "731079"
  },
  {
    "text": "you that you did something wrong and hopefully it's a coworker and not a police officer um the the good thing about",
    "start": "731079",
    "end": "738920"
  },
  {
    "text": "property based testing is that it uh it does uh in our experience kind of span",
    "start": "738920",
    "end": "744560"
  },
  {
    "text": "both the fast test and the slow test uh phase so you can do this quite early",
    "start": "744560",
    "end": "749839"
  },
  {
    "text": "with without having to involve some sort of specialist who knows what they're doing there you can it it isn't that",
    "start": "749839",
    "end": "755959"
  },
  {
    "text": "difficult to do and also it runs fast if you have fast code that runs fast that",
    "start": "755959",
    "end": "762720"
  },
  {
    "text": "this all right and uh if you just uh humor me for yeah so what kind of if we",
    "start": "763880",
    "end": "772120"
  },
  {
    "text": "look into sort of the uh the the software that's that's",
    "start": "772120",
    "end": "777399"
  },
  {
    "text": "usually don't have bugs well then I I think uh compilers they have kind of",
    "start": "777399",
    "end": "783480"
  },
  {
    "text": "this uh this almost like a joke there's never it's never a bug in the compiler",
    "start": "783480",
    "end": "790160"
  },
  {
    "text": "except you know compilers do have bugs sometimes uh and kind of a uh",
    "start": "790160",
    "end": "798120"
  },
  {
    "text": "interesting uh thing with with C compilers is that there is actually quite a lot of",
    "start": "798120",
    "end": "804839"
  },
  {
    "text": "um uh uh fers uh for C compilers here's",
    "start": "804839",
    "end": "810839"
  },
  {
    "text": "just one example I think this came out of the University of Utah uh called cith",
    "start": "810839",
    "end": "816680"
  },
  {
    "text": "uh which says it outputs uh C programs free of un UND defined",
    "start": "816680",
    "end": "824000"
  },
  {
    "text": "behaviors um uh that are randomly generated not a small",
    "start": "824000",
    "end": "829160"
  },
  {
    "text": "feed uh and then then they feed it to the compiler and they find bugs and the",
    "start": "829160",
    "end": "834680"
  },
  {
    "text": "these are not the only ones that do that so of note here is that it's not uh just",
    "start": "834680",
    "end": "840880"
  },
  {
    "text": "random text of course because if you feed random text to a uh scene compiler",
    "start": "840880",
    "end": "846759"
  },
  {
    "text": "you get this one uh unless you have a very good fusser then you will mostly be hitting",
    "start": "846759",
    "end": "853279"
  },
  {
    "text": "all of the syntax errors that you could hit but these are actually valid programs so it's now testing something",
    "start": "853279",
    "end": "860160"
  },
  {
    "text": "beyond that uh and that's uh that's the sort of thing that we're going to go um look into",
    "start": "860160",
    "end": "869360"
  },
  {
    "text": "uh in order to do that I created two characters I done this internally so I need to you know have something to uh to",
    "start": "869360",
    "end": "878240"
  },
  {
    "text": "to point the eyes on uh so I came up with some names here",
    "start": "878240",
    "end": "883880"
  },
  {
    "text": "for the the part that is the uh the test data generation so let's",
    "start": "883880",
    "end": "889279"
  },
  {
    "text": "call it the chaos monkey obviously named after the Netflix Tool uh just responsible of coming up",
    "start": "889279",
    "end": "895480"
  },
  {
    "text": "with chaos and then the other part was this the test Oracle the one that",
    "start": "895480",
    "end": "901120"
  },
  {
    "text": "determines uh correct behavior and there uh and one part that is uh",
    "start": "901120",
    "end": "908959"
  },
  {
    "text": "obviously not you know um not a candidate for a testor recal is your",
    "start": "908959",
    "end": "914279"
  },
  {
    "text": "program and that is a thing that's uh quite quite often often happens when you do this sort of techniques is that you",
    "start": "914279",
    "end": "921279"
  },
  {
    "text": "reproduce the the the the code in the test and then you're testing nothing of",
    "start": "921279",
    "end": "927440"
  },
  {
    "text": "course so what is it so what is it that it's supposed to do inste instead well that's a little bit up to you but we're",
    "start": "927440",
    "end": "933959"
  },
  {
    "text": "look into techniques for like thinking about it in such a way that you can come up with a test Oracle that isn't just",
    "start": "933959",
    "end": "940639"
  },
  {
    "text": "reproducing the code in the test uh and these these guys are going",
    "start": "940639",
    "end": "947680"
  },
  {
    "text": "to have some interplay the ABS um the absolute simplest case we can come up",
    "start": "947680",
    "end": "953800"
  },
  {
    "text": "with is that the chaos Mony is com going to come up with the test data and that",
    "start": "953800",
    "end": "959000"
  },
  {
    "text": "and the Oracle is just going to decide whether the program uh executed",
    "start": "959000",
    "end": "966319"
  },
  {
    "text": "correctly for that input in somewhere that is uh that is the",
    "start": "966319",
    "end": "972240"
  },
  {
    "text": "simplest case you know the the monkey just comes up with test data the Oracle just looks at it one time",
    "start": "972240",
    "end": "978600"
  },
  {
    "text": "fine and um and now comes some so we have the uh uh python code",
    "start": "978600",
    "end": "986319"
  },
  {
    "text": "examples so here is uh uh a kind of normal well it's quite usually shown uh",
    "start": "986319",
    "end": "995120"
  },
  {
    "text": "test we're testing uh some here we have this uh property based testing framework",
    "start": "995120",
    "end": "1002319"
  },
  {
    "text": "called the hypothesis which does uh which gives us the test data",
    "start": "1002319",
    "end": "1008839"
  },
  {
    "text": "Generation Um hypothesis has where this concept of strategies uh this is the uh",
    "start": "1008839",
    "end": "1015480"
  },
  {
    "text": "test data generators the different kind of data you can get generate and we simply",
    "start": "1015480",
    "end": "1021519"
  },
  {
    "text": "say uh we have this given decorator so given that a is an integer and B is an",
    "start": "1021519",
    "end": "1029319"
  },
  {
    "text": "integer so the these are drawn from the uh integers uh",
    "start": "1029319",
    "end": "1035160"
  },
  {
    "text": "strategies and then we have our test it takes those uh A and B and uh and checks",
    "start": "1035160",
    "end": "1043199"
  },
  {
    "text": "whether sum is correct in this case we we can it's uh just commut uh",
    "start": "1043199",
    "end": "1049760"
  },
  {
    "text": "commutativity a plus b is equal to B plus a and this obviously works the the",
    "start": "1049760",
    "end": "1055000"
  },
  {
    "text": "the default behavior is to run this with 100 uh generated examples you can tweak",
    "start": "1055000",
    "end": "1060640"
  },
  {
    "text": "it if you like they have tools to run it overnight if you're really paranoid um and that is the simplest",
    "start": "1060640",
    "end": "1068080"
  },
  {
    "text": "case uh of course you can tweak uh what you",
    "start": "1068080",
    "end": "1073600"
  },
  {
    "text": "generate um so here is an example uh",
    "start": "1073600",
    "end": "1079159"
  },
  {
    "text": "where I've generated some classes uh there's a enum uh which is a role you",
    "start": "1079159",
    "end": "1086080"
  },
  {
    "text": "can only be an admin uh and you have a person a person has a role which is that itam a last",
    "start": "1086080",
    "end": "1094480"
  },
  {
    "text": "name and a first name both of those are strings and then I can use the builds",
    "start": "1094480",
    "end": "1100400"
  },
  {
    "text": "strategies uh strategy uh give it The Bu The Constructor person and then it actually",
    "start": "1100400",
    "end": "1108000"
  },
  {
    "text": "then it goes and looks at the uh types and just determines that uh you probably",
    "start": "1108000",
    "end": "1113600"
  },
  {
    "text": "meant to use the most General uh generator for those types so string is going to be any text role is always",
    "start": "1113600",
    "end": "1120200"
  },
  {
    "text": "going to be admin and so on and we can test our",
    "start": "1120200",
    "end": "1125600"
  },
  {
    "text": "login uh then you can take uh this uh generators as a combinator",
    "start": "1125880",
    "end": "1132760"
  },
  {
    "text": "library um so here we take the generator for integers and we say filter uh take",
    "start": "1132760",
    "end": "1141919"
  },
  {
    "text": "away uh all the integers where where modu 2 is equal to zero so that is uh",
    "start": "1141919",
    "end": "1150720"
  },
  {
    "text": "all the uh all the odd",
    "start": "1150720",
    "end": "1154640"
  },
  {
    "text": "numbers yeah take away filter the ambig you have the ambiguity of filter does it take away the true ones does it keep the",
    "start": "1156960",
    "end": "1163520"
  },
  {
    "text": "true ones um so here's uh so in practice uh",
    "start": "1163520",
    "end": "1172080"
  },
  {
    "text": "there there are sort of a limited number of properties that you're are going to encounter but this one I have written uh",
    "start": "1172080",
    "end": "1179360"
  },
  {
    "text": "many many times this is the you know the these things are these two function are inverse that's because if you have",
    "start": "1179360",
    "end": "1186760"
  },
  {
    "text": "serialize and deserialize you want it to be inverse that when you serialize",
    "start": "1186760",
    "end": "1192039"
  },
  {
    "text": "something and dilize something you get the same thing back so here I've taken",
    "start": "1192039",
    "end": "1198400"
  },
  {
    "text": "um hypothetical example where you have an application where you have this state you can save and load the state and then",
    "start": "1198400",
    "end": "1206159"
  },
  {
    "text": "we build uh the state and the test simply then saves the state so serializes it and then we load",
    "start": "1206159",
    "end": "1214679"
  },
  {
    "text": "that uh serialized State and we assume that you get the state",
    "start": "1214679",
    "end": "1219840"
  },
  {
    "text": "back um you would also think that um that if you uh that if you first load",
    "start": "1219840",
    "end": "1227159"
  },
  {
    "text": "something and then save something thing you you get the same thing back but of course if you if now we're getting into",
    "start": "1227159",
    "end": "1233840"
  },
  {
    "text": "the kind of the security domain because um uh if you're giving arbitrary input",
    "start": "1233840",
    "end": "1240440"
  },
  {
    "text": "then it might not be valid state so let's have a little bit look at that uh so we're the same situation save",
    "start": "1240440",
    "end": "1249400"
  },
  {
    "text": "load state but this time we're giving bytes so we assume that this that this is",
    "start": "1249400",
    "end": "1255880"
  },
  {
    "text": "serialized to Binary so given this uh sequence of uh",
    "start": "1255880",
    "end": "1261000"
  },
  {
    "text": "randomly generated bytes now I'm going to try to load it and now I have some uh",
    "start": "1261000",
    "end": "1266640"
  },
  {
    "text": "now I have some State uh I'm not quite sure whether",
    "start": "1266640",
    "end": "1271760"
  },
  {
    "text": "whether uh immediately saving that state gave me the same sequence of bytes back there might be something in there that's",
    "start": "1271760",
    "end": "1277919"
  },
  {
    "text": "uh you know Tim stamp or uh if you're sterilizing text that might be white it",
    "start": "1277919",
    "end": "1283240"
  },
  {
    "text": "might be uh um wh SP white space might",
    "start": "1283240",
    "end": "1288760"
  },
  {
    "text": "be uh ignored and so on so I'm just going to have the same assert statement as before that if I then save that state",
    "start": "1288760",
    "end": "1296320"
  },
  {
    "text": "and try to load again now I have the same state back again uh but because this is uh",
    "start": "1296320",
    "end": "1302840"
  },
  {
    "text": "arbitrary bites then uh what's going to happen much like the uh the uh C",
    "start": "1302840",
    "end": "1311039"
  },
  {
    "text": "compiler example from before uh this pass is going to happen uh pretty much",
    "start": "1311039",
    "end": "1318159"
  },
  {
    "text": "uh always and the reason for that is that there's not not many uh not many",
    "start": "1318159",
    "end": "1325960"
  },
  {
    "text": "sequences of bytes that are valid so we'll have to do something about",
    "start": "1325960",
    "end": "1332039"
  },
  {
    "text": "that um so what we then do um is that we need",
    "start": "1332039",
    "end": "1338559"
  },
  {
    "text": "to do something with the generator so we can so so what this does we use another",
    "start": "1338559",
    "end": "1345640"
  },
  {
    "text": "strategy combinator uh which is called one of and it what it does is arbitrarily chooses",
    "start": "1345640",
    "end": "1352240"
  },
  {
    "text": "one of its uh one of the uh gen uh generator that has been passed so it",
    "start": "1352240",
    "end": "1358039"
  },
  {
    "text": "might say okay let's try uh completely random bites this time or I have some",
    "start": "1358039",
    "end": "1364799"
  },
  {
    "text": "other generator that I've created that uh tries to stare the situation into",
    "start": "1364799",
    "end": "1369919"
  },
  {
    "text": "things that are sort of uh valid or maybe even uh always valid and that way",
    "start": "1369919",
    "end": "1376600"
  },
  {
    "text": "we we are more likely uh to hit the the assert statement",
    "start": "1376600",
    "end": "1382480"
  },
  {
    "text": "rather than the uh the the accept",
    "start": "1382480",
    "end": "1388520"
  },
  {
    "text": "Clause",
    "start": "1388919",
    "end": "1391919"
  },
  {
    "text": "yep oh yeah so so we're yeah so the thing is of course this is sort of a",
    "start": "1397760",
    "end": "1403960"
  },
  {
    "text": "general a general thing is that we have to be sort of uh",
    "start": "1403960",
    "end": "1410440"
  },
  {
    "text": "uh abstract and vague about what the expect what we expect since it's with",
    "start": "1410440",
    "end": "1416840"
  },
  {
    "text": "arbitrary uh inputs so we're not testing specifics right so so we're taking a",
    "start": "1416840",
    "end": "1423159"
  },
  {
    "text": "step back and and using um properties that are universally true but but don't",
    "start": "1423159",
    "end": "1430960"
  },
  {
    "text": "uh clamp down on exactly what the behavior is so if you remember the commutative example from before um if",
    "start": "1430960",
    "end": "1438919"
  },
  {
    "text": "you know if you know some some abstract algebra you know that there's actually a lot of ways of satisfying commutativity",
    "start": "1438919",
    "end": "1445559"
  },
  {
    "text": "without being the integers there's the integers modul 2 or the booleans for for",
    "start": "1445559",
    "end": "1451520"
  },
  {
    "text": "instance so you get that sort of abstract ideas by by by each thing will",
    "start": "1451520",
    "end": "1457720"
  },
  {
    "text": "test something that many things can satisfy and maybe many things that aren't correct can",
    "start": "1457720",
    "end": "1464039"
  },
  {
    "text": "satisfy um so this state I mean we could think that well the state is always non",
    "start": "1464039",
    "end": "1471640"
  },
  {
    "text": "that's or some null object uh every time and it will still this it will still satisfied this so we will have to write",
    "start": "1471640",
    "end": "1479279"
  },
  {
    "text": "more tests to to narrow down the uh the behavior that we want and for that you",
    "start": "1479279",
    "end": "1485360"
  },
  {
    "text": "it might be a good idea to use you know regular unit tests rather than this but you could probably come up with",
    "start": "1485360",
    "end": "1493159"
  },
  {
    "text": "depending on what kind of state you have and you want to describe so here we're describing serialization dis realization",
    "start": "1493159",
    "end": "1499279"
  },
  {
    "text": "but you might describe other Pro concept uh aspects uh with property based testing",
    "start": "1499279",
    "end": "1505399"
  },
  {
    "text": "as well did I did that answer somewhat",
    "start": "1505399",
    "end": "1511080"
  },
  {
    "text": "okay okay okay cool um so yeah uh another example so",
    "start": "1511080",
    "end": "1518919"
  },
  {
    "text": "here we're testing um an average function that we that I've written uh all it does is it",
    "start": "1518919",
    "end": "1525679"
  },
  {
    "text": "sums the numbers and divides by the length of the list list of numbers so very naive average more on that",
    "start": "1525679",
    "end": "1533960"
  },
  {
    "text": "later um and I yeah long block long line",
    "start": "1533960",
    "end": "1539240"
  },
  {
    "text": "of text of the generator but what it is is that it uh generates lists and what",
    "start": "1539240",
    "end": "1545240"
  },
  {
    "text": "are the elements the elements are floats and bear in mind no nons and no INF just",
    "start": "1545240",
    "end": "1552039"
  },
  {
    "text": "so so that that we get those out the way we don't average is not going to really work for that",
    "start": "1552039",
    "end": "1558440"
  },
  {
    "text": "and we have at least one float so the minimum size of this list is",
    "start": "1558440",
    "end": "1563799"
  },
  {
    "text": "one um so now given this uh list of numbers all I'm asserting is that the",
    "start": "1563799",
    "end": "1570080"
  },
  {
    "text": "maximum number is greater than equal to the average uh so you might so under normal",
    "start": "1570080",
    "end": "1579000"
  },
  {
    "text": "conditions you would say that sounds reasonable but of course if you think about it say well there's uh you know",
    "start": "1579000",
    "end": "1586000"
  },
  {
    "text": "loss of precision and average is one of those with catastrophic loss of precision since I'm summing together",
    "start": "1586000",
    "end": "1592840"
  },
  {
    "text": "numbers and dividing by the length uh so it turns out uh this doesn't work and under",
    "start": "1592840",
    "end": "1599960"
  },
  {
    "text": "normal uh normal circumstances a developer will not you know think of the",
    "start": "1599960",
    "end": "1605039"
  },
  {
    "text": "kind of inputs that would invalidate this uh but it does so let's let's look",
    "start": "1605039",
    "end": "1611399"
  },
  {
    "text": "closer at that what uh what's s example what does uh hypothesis do when there's",
    "start": "1611399",
    "end": "1617600"
  },
  {
    "text": "a failure like this so what I've done is uh okay take that Boolean value let's call it success and",
    "start": "1617600",
    "end": "1624080"
  },
  {
    "text": "I'm print the numbers and whether it was successful and then the",
    "start": "1624080",
    "end": "1629600"
  },
  {
    "text": "assertion so now we now we should see the print out of okay which numbers did",
    "start": "1629600",
    "end": "1634760"
  },
  {
    "text": "this produce and this was from an from a run with hypothesis sometime last year so",
    "start": "1634760",
    "end": "1642000"
  },
  {
    "text": "things might have most definitely have changed and there's a random you know random pseudo random involved here so",
    "start": "1642000",
    "end": "1650000"
  },
  {
    "text": "but um uh the first thing it tries is like",
    "start": "1650000",
    "end": "1655080"
  },
  {
    "text": "okay the list with just the zero in it and that is the kind of the minimal empty example let's just try one of",
    "start": "1655080",
    "end": "1662080"
  },
  {
    "text": "those and says yeah it works with zero and then it tries again zero oh but yeah",
    "start": "1662080",
    "end": "1668480"
  },
  {
    "text": "so it's trying to sus out whether this thing is actually your test is actually flaky like you get different result",
    "start": "1668480",
    "end": "1675080"
  },
  {
    "text": "every time time I run it and it's like no it still works and then it tried some longer list it",
    "start": "1675080",
    "end": "1681799"
  },
  {
    "text": "tried some very small numbers uh it tried some still very small numbers and",
    "start": "1681799",
    "end": "1687360"
  },
  {
    "text": "then just some sort of regular minus 1.1 and there's more and then it came to",
    "start": "1687360",
    "end": "1693240"
  },
  {
    "text": "some thing where it failed uh involving 23 elements so now it's failed but it",
    "start": "1693240",
    "end": "1699440"
  },
  {
    "text": "keeps going and then what it keeps going with is a it's a feature called uh",
    "start": "1699440",
    "end": "1704760"
  },
  {
    "text": "shrinking where we're trying to come up with the smallest uh counter example and the",
    "start": "1704760",
    "end": "1711399"
  },
  {
    "text": "reason for doing that is that for debugging purposes so that later on you have something small to look at and that",
    "start": "1711399",
    "end": "1717480"
  },
  {
    "text": "smallness can also sometime kind of give you the AHA it's probably one of these",
    "start": "1717480",
    "end": "1724600"
  },
  {
    "text": "problems um there's a there's a fun uh Story by",
    "start": "1724600",
    "end": "1729720"
  },
  {
    "text": "John Hughes the um uh one of the developers of Quick Check he uh he uh",
    "start": "1729720",
    "end": "1737200"
  },
  {
    "text": "they was a bug with the database of uh Clara if you know the company and um",
    "start": "1737200",
    "end": "1745399"
  },
  {
    "text": "they were they had all sorts of hypothesis about what what is what is causing this",
    "start": "1745399",
    "end": "1751679"
  },
  {
    "text": "corruption uh and they thought like well may well maybe it's something when the the amount of row exceeds 1 million",
    "start": "1751679",
    "end": "1760480"
  },
  {
    "text": "maybe something you know they didn't quite know what was going on and it was hard to observe that this this has had",
    "start": "1760480",
    "end": "1767080"
  },
  {
    "text": "happened but then they they did one of these techniques and they could reproduce it uh with three steps first",
    "start": "1767080",
    "end": "1775559"
  },
  {
    "text": "they open and then a close and then three things happen in parallel very and",
    "start": "1775559",
    "end": "1780960"
  },
  {
    "text": "then because they was had this small counter example they knew exactly what was going wrong right because you have",
    "start": "1780960",
    "end": "1786919"
  },
  {
    "text": "these three steps to try yeah so that's what we're trying to",
    "start": "1786919",
    "end": "1792120"
  },
  {
    "text": "do now but then it uh it takes two two of those numbers uh uh but that worked",
    "start": "1792120",
    "end": "1799840"
  },
  {
    "text": "okay so let's go back let's try half of the numbers now so it's 11 of those elements you notice that one of the the",
    "start": "1799840",
    "end": "1807399"
  },
  {
    "text": "last element is still in there uh and that fails and I just",
    "start": "1807399",
    "end": "1814480"
  },
  {
    "text": "tries uh iteratively to come up with the smallest counter example and that what it ends up with is these two very large",
    "start": "1814480",
    "end": "1821640"
  },
  {
    "text": "numbers where uh the you get catastrophic loss of precision",
    "start": "1821640",
    "end": "1828240"
  },
  {
    "text": "so that's uh yeah so that's a very useful feature when when you're are going to debug what",
    "start": "1828240",
    "end": "1834840"
  },
  {
    "text": "happened um and now we're getting into maybe the advanced somewhat more",
    "start": "1834840",
    "end": "1841799"
  },
  {
    "text": "advanced feature uh which has been very uh very",
    "start": "1841799",
    "end": "1846880"
  },
  {
    "text": "powerful and it's sometimes called modelbased sometime called",
    "start": "1846880",
    "end": "1852240"
  },
  {
    "text": "stateful uh and we're going to use uh the the flask uh blog post example to",
    "start": "1852240",
    "end": "1860000"
  },
  {
    "text": "illustrate how you might uh use this if you're um writing a normal unit test you",
    "start": "1860000",
    "end": "1866919"
  },
  {
    "text": "might test login like this you take some sort of web driver you have some sort of test user we're going to hit the uh the",
    "start": "1866919",
    "end": "1874559"
  },
  {
    "text": "Au login with our uh credentials and then we're going to assert that we get",
    "start": "1874559",
    "end": "1880200"
  },
  {
    "text": "redirected to uh to the homepage and then check now",
    "start": "1880200",
    "end": "1886200"
  },
  {
    "text": "we need okay well we need to check that the right user is logged in and so on so quite a normal",
    "start": "1886200",
    "end": "1892639"
  },
  {
    "text": "setup um of uh of course what these things this is quite simple test you",
    "start": "1892639",
    "end": "1898760"
  },
  {
    "text": "don't really expect anything to fail uh with one step this is sort of",
    "start": "1898760",
    "end": "1903799"
  },
  {
    "text": "what you this is sort of situation where things might happen where you you log in as one user Alex and Alex creates a blog",
    "start": "1903799",
    "end": "1910880"
  },
  {
    "text": "post and then you log in as an and you try to view the blog post and all of a sudden it blows up so that's sort of the",
    "start": "1910880",
    "end": "1916720"
  },
  {
    "text": "kind of uh situation that you might find a bug but just doing the login once I I",
    "start": "1916720",
    "end": "1922080"
  },
  {
    "text": "expect really expect the developer to do that on his",
    "start": "1922080",
    "end": "1926960"
  },
  {
    "text": "laptop uh but these complicated many different things happen now now we're",
    "start": "1927320",
    "end": "1932840"
  },
  {
    "text": "getting into some situation where it's it's a little bit more difficult to do this on your",
    "start": "1932840",
    "end": "1938440"
  },
  {
    "text": "own uh so what we're so we going back to our um characters again the the K monkey",
    "start": "1938639",
    "end": "1944240"
  },
  {
    "text": "and the Oracle and they're going to cooperate a little bit",
    "start": "1944240",
    "end": "1949279"
  },
  {
    "text": "uh what's sort of going to happen is uh that uh the chaos monkey is going to go and actually do all of these things so",
    "start": "1949279",
    "end": "1956480"
  },
  {
    "text": "imagine him going on the train ride and actually going on the train and then we're going to have the",
    "start": "1956480",
    "end": "1962840"
  },
  {
    "text": "um the Oracle uh just look at the subway map so that that subway map is now just",
    "start": "1962840",
    "end": "1968559"
  },
  {
    "text": "your Mo model it's unsimplified not accurate you know there's no Bridges or",
    "start": "1968559",
    "end": "1973880"
  },
  {
    "text": "some anything on this map uh it's not the scale he's just looking at something a lot more simple to kind of to kind of",
    "start": "1973880",
    "end": "1982360"
  },
  {
    "text": "understand what's uh uh what is supposed to happen so here's the sort of uh",
    "start": "1982360",
    "end": "1989440"
  },
  {
    "text": "scenario uh that we are going to do uh so the CM key is going to say okay",
    "start": "1989440",
    "end": "1996840"
  },
  {
    "text": "now I signed up as this username perfect and so okay yeah the username is that",
    "start": "1996840",
    "end": "2004080"
  },
  {
    "text": "thing and uh you are not logged in yet you need to uh log in first okay and",
    "start": "2004080",
    "end": "2010000"
  },
  {
    "text": "then the the cas Mar logs in yeah now you're logged in and it says log out okay now log it in no you're not logged",
    "start": "2010000",
    "end": "2017000"
  },
  {
    "text": "in anymore and then the CM creates a blog post and say uh oh no the you know",
    "start": "2017000",
    "end": "2022279"
  },
  {
    "text": "not logged in you shouldn't be allowed to do that so that's the sort of uh",
    "start": "2022279",
    "end": "2030159"
  },
  {
    "text": "situation and the framework uh",
    "start": "2030159",
    "end": "2035399"
  },
  {
    "text": "um uh done provide a what they call a rule-based state",
    "start": "2035399",
    "end": "2041799"
  },
  {
    "text": "machine uh to do this and it uses these rules the rules are the",
    "start": "2041799",
    "end": "2047720"
  },
  {
    "text": "actions and the check subsequent check by the by",
    "start": "2047720",
    "end": "2054679"
  },
  {
    "text": "the uh Oracle so uh this uh so we set up the state",
    "start": "2054679",
    "end": "2062679"
  },
  {
    "text": "machine and uh the F we need uh so here's the Constructor first thing it",
    "start": "2062679",
    "end": "2069679"
  },
  {
    "text": "does is it starts the application and then it sets up the model the model is",
    "start": "2069679",
    "end": "2074878"
  },
  {
    "text": "just a uh uh dictionary of registered users and",
    "start": "2074879",
    "end": "2081320"
  },
  {
    "text": "their password and whether or not uh uh yeah the name of who is logged",
    "start": "2081320",
    "end": "2087599"
  },
  {
    "text": "in currently and then we need some tear down to clean up the database and so",
    "start": "2087599",
    "end": "2095480"
  },
  {
    "text": "on yeah uh so here's the uh register rule it's",
    "start": "2095480",
    "end": "2103079"
  },
  {
    "text": "uh it uses this rule decorator and it uses the precondition uh decorator so the",
    "start": "2103079",
    "end": "2108760"
  },
  {
    "text": "precondition Tells uh tells the that tells this rule based State",
    "start": "2108760",
    "end": "2115640"
  },
  {
    "text": "machine whether or not it can can apply this Rule now and the rule takes uh generators so",
    "start": "2115640",
    "end": "2124320"
  },
  {
    "text": "it takes a username a string that's not empty and a password also a string that's uh",
    "start": "2124320",
    "end": "2131079"
  },
  {
    "text": "not uh empty and now we get to this um so the now we get to the actual rule uh",
    "start": "2131079",
    "end": "2138720"
  },
  {
    "text": "the rule takes the username and password and then we have uh now we have an assume statement saying that the",
    "start": "2138720",
    "end": "2145599"
  },
  {
    "text": "username is uh not already registered so we don't need we don't want it to",
    "start": "2145599",
    "end": "2150800"
  },
  {
    "text": "register twice this uh this an assumption uh if it fails we we stop uh",
    "start": "2150800",
    "end": "2159200"
  },
  {
    "text": "applying the rule so this is this is a way to to to easily",
    "start": "2159200",
    "end": "2165079"
  },
  {
    "text": "generate uh usernames that are not already registered um by filtering them out we",
    "start": "2165079",
    "end": "2172640"
  },
  {
    "text": "had hit the uh register endpoint with the username and the password and then",
    "start": "2172640",
    "end": "2180440"
  },
  {
    "text": "afterward uh we check that we get uh redirected to the login page and we set",
    "start": "2180440",
    "end": "2186920"
  },
  {
    "text": "the uh we and then finally we update the model saying that the username is now",
    "start": "2186920",
    "end": "2193480"
  },
  {
    "text": "registered with this password uh going on we want to be able",
    "start": "2193480",
    "end": "2200400"
  },
  {
    "text": "to log in uh so here I take uh take a",
    "start": "2200400",
    "end": "2205839"
  },
  {
    "text": "fun object called the data which uh which can be later on used to uh draw",
    "start": "2205839",
    "end": "2212079"
  },
  {
    "text": "values from whenever I need to it so you'll see that so I take uh I would",
    "start": "2212079",
    "end": "2217880"
  },
  {
    "text": "need call Self uh registered users to draw out uh draw one of the uh",
    "start": "2217880",
    "end": "2226800"
  },
  {
    "text": "registered users from the dictionary um so the registered user now",
    "start": "2226800",
    "end": "2232480"
  },
  {
    "text": "say first thing assumes that there there are registered users it's just not it's not just an empty",
    "start": "2232480",
    "end": "2238079"
  },
  {
    "text": "collection and then it uses this uh draw function to take an",
    "start": "2238079",
    "end": "2243760"
  },
  {
    "text": "integer and takes the list of res users uses to select the I",
    "start": "2243760",
    "end": "2250760"
  },
  {
    "text": "user and now we can uh do the action uh so we take",
    "start": "2250760",
    "end": "2255880"
  },
  {
    "text": "the uh we hit the login Endo with the username and password and now we check",
    "start": "2255880",
    "end": "2261760"
  },
  {
    "text": "that we red get redirected to the homepage and we can set and then finally update the the uh the model saying that",
    "start": "2261760",
    "end": "2269240"
  },
  {
    "text": "yeah this user is now logged in so going um going then done the next",
    "start": "2269240",
    "end": "2277920"
  },
  {
    "text": "thing is log out you probably you seen this now we have a precondition the precond condition is that the user there",
    "start": "2277920",
    "end": "2283560"
  },
  {
    "text": "is a user that is logged in then the user just hits the then we just hit the",
    "start": "2283560",
    "end": "2289319"
  },
  {
    "text": "logout end point and checked how we get redirected to don't page and that",
    "start": "2289319",
    "end": "2294359"
  },
  {
    "text": "there's no logged in users now",
    "start": "2294359",
    "end": "2301560"
  },
  {
    "text": "yeah oh yes absolutely sorry bit of a typ yeah it's it's not",
    "start": "2304880",
    "end": "2310640"
  },
  {
    "text": "known you are correct sorry weird um I'll have to go look",
    "start": "2310640",
    "end": "2316200"
  },
  {
    "text": "where how the copy paste went wrong and then uh finally create a blog",
    "start": "2316200",
    "end": "2323359"
  },
  {
    "text": "post I've I've just filled in the uh the an empty title and empty body you can",
    "start": "2323359",
    "end": "2329000"
  },
  {
    "text": "you can use generators to generate title generate the body of course uh and now we get the uh the two",
    "start": "2329000",
    "end": "2338560"
  },
  {
    "text": "uh two things can happen when you try to create something either if if you if you're not logged in then you should be",
    "start": "2338560",
    "end": "2344880"
  },
  {
    "text": "redirected to the login and uh otherwise okay and it was",
    "start": "2344880",
    "end": "2352000"
  },
  {
    "text": "created uh and that's the um uh that's the entire way to do this",
    "start": "2352000",
    "end": "2358720"
  },
  {
    "text": "and uh no no bugs found so far but of course this is just a you can uh this",
    "start": "2358720",
    "end": "2365040"
  },
  {
    "text": "kind of illustrate that you can uh start with a quite E simple model it's just uh who's logged in who's",
    "start": "2365040",
    "end": "2371359"
  },
  {
    "text": "registered and that gets you going and now you can uh expand from there going",
    "start": "2371359",
    "end": "2376760"
  },
  {
    "text": "well uh if I have created a blog post and I assume I could should be able to get it where on the homepage and so on",
    "start": "2376760",
    "end": "2387960"
  },
  {
    "text": "y yeah us yeah so that's also a",
    "start": "2392200",
    "end": "2397800"
  },
  {
    "text": "simplification of the model I'm just using one user at a time you could of course extend this to having multiple",
    "start": "2397800",
    "end": "2403560"
  },
  {
    "text": "users logged in but yeah this is using one client uh logging in and out but you can",
    "start": "2403560",
    "end": "2410000"
  },
  {
    "text": "have multiple clients if you like this was just the simplest way to get",
    "start": "2410000",
    "end": "2415480"
  },
  {
    "text": "started all right and then um uh where",
    "start": "2415480",
    "end": "2421359"
  },
  {
    "text": "to go now there's a uh there's a quite good uh I recently uh updated this list",
    "start": "2421359",
    "end": "2430079"
  },
  {
    "text": "uh not my list but I gave him a p request of uh of a list of",
    "start": "2430079",
    "end": "2436000"
  },
  {
    "text": "um uh property based oh property based uh Frameworks um that you uh that you",
    "start": "2436000",
    "end": "2444079"
  },
  {
    "text": "can use uh for different languages so let me",
    "start": "2444079",
    "end": "2451760"
  },
  {
    "text": "just oh okay give me a moment I the",
    "start": "2455000",
    "end": "2461720"
  },
  {
    "text": "Wi-Fi just uh the Wi-Fi",
    "start": "2467599",
    "end": "2472160"
  },
  {
    "text": "here no there we go",
    "start": "2474680",
    "end": "2480359"
  },
  {
    "text": "um and you can uh you can look through there's some uh background",
    "start": "2480359",
    "end": "2486000"
  },
  {
    "text": "here about using it uh in automotive",
    "start": "2486000",
    "end": "2491720"
  },
  {
    "text": "software um and uh there are several different",
    "start": "2491720",
    "end": "2498760"
  },
  {
    "text": "um uh several different Frameworks you can choose from um I we we had a uh",
    "start": "2498760",
    "end": "2505640"
  },
  {
    "text": "small chat during the workshops this week about",
    "start": "2505640",
    "end": "2510800"
  },
  {
    "text": "uh um uh about the C++ one uh rampit",
    "start": "2510800",
    "end": "2516760"
  },
  {
    "text": "check so it is possible to do this uh in",
    "start": "2516760",
    "end": "2521960"
  },
  {
    "text": "C++ the feature that I uh that we that I",
    "start": "2521960",
    "end": "2528240"
  },
  {
    "text": "demonstrated is um uh is this one the state machine and",
    "start": "2528240",
    "end": "2534680"
  },
  {
    "text": "as you can see there's not not everybody not everything supports that but maybe",
    "start": "2534680",
    "end": "2539760"
  },
  {
    "text": "maybe don't need to all right and uh with that uh thank",
    "start": "2539760",
    "end": "2547599"
  },
  {
    "text": "you so",
    "start": "2547599",
    "end": "2550000"
  },
  {
    "text": "much and we have plenty of time for questions so",
    "start": "2554079",
    "end": "2559599"
  }
]