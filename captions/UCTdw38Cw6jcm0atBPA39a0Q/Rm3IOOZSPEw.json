[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "so hello everyone it's 11 40 sharp so let's start the presentation",
    "start": "1280",
    "end": "7759"
  },
  {
    "text": "do developer dreams of stateless apps so some time ago i got back to the lecture",
    "start": "7759",
    "end": "14080"
  },
  {
    "text": "of do android's dream of electric ship by philip k dick a sci-fi movie a sci-fi book story and you may",
    "start": "14080",
    "end": "21840"
  },
  {
    "text": "also know the story from the movie with harrison ford and rudgerhauer the blade runner",
    "start": "21840",
    "end": "27760"
  },
  {
    "start": "25000",
    "end": "25000"
  },
  {
    "text": "and in this sci-fi story in the sci-fi world so-called blade runners are like trained",
    "start": "27760",
    "end": "33760"
  },
  {
    "text": "detectives trained hunters that have to solve issues with the problematic androids",
    "start": "33760",
    "end": "39680"
  },
  {
    "text": "and actually androids want to live their artificial lives so they strike specs",
    "start": "39680",
    "end": "45120"
  },
  {
    "text": "and they really make blade runners lives hard troublesome and not not very easy",
    "start": "45120",
    "end": "52000"
  },
  {
    "text": "so i thought that our job as developers is quite similar to those blade runners",
    "start": "52000",
    "end": "57199"
  },
  {
    "text": "jobs because we also need to solve problems okay we don't have to fight androids",
    "start": "57199",
    "end": "62559"
  },
  {
    "text": "until you're not a mobile developer but still still we've got a job to build",
    "start": "62559",
    "end": "68159"
  },
  {
    "text": "highly available system highly performant systems and there is one guy that can",
    "start": "68159",
    "end": "73760"
  },
  {
    "text": "really strikes us badly and painfully and his name is state as it very often",
    "start": "73760",
    "end": "80479"
  },
  {
    "text": "complicates our architecture and our system so i came up with this question",
    "start": "80479",
    "end": "87600"
  },
  {
    "text": "do we dream of stateless apps because then our dreams would be peaceful and we wouldn't",
    "start": "87600",
    "end": "93119"
  },
  {
    "text": "get any troubles my name is lukas gabel and i'm a software engineer at tomtom",
    "start": "93119",
    "end": "99520"
  },
  {
    "text": "i work at location and navigation services department when we build services that for example helps you to",
    "start": "99520",
    "end": "105759"
  },
  {
    "text": "dispatch a large fleet of cars in an optimal way so they can reach their destinations",
    "start": "105759",
    "end": "111600"
  },
  {
    "text": "in safe and sound manner so i also have experiences in building",
    "start": "111600",
    "end": "118719"
  },
  {
    "text": "distributed stateful systems in basically mainly built in azure cloud",
    "start": "118719",
    "end": "125280"
  },
  {
    "text": "in the past i also worked with in aws and today i would like to share my",
    "start": "125280",
    "end": "131039"
  },
  {
    "text": "thoughts and my experiences with you in context of high availability",
    "start": "131039",
    "end": "136080"
  },
  {
    "text": "of such systems so i will focus mainly on azure however i will point some snippets or some equivalents",
    "start": "136080",
    "end": "144480"
  },
  {
    "text": "in aws cloud also so i will have three parts",
    "start": "144480",
    "end": "150160"
  },
  {
    "text": "main parts in my presentation so firstly i will start with some simple strategies that we can",
    "start": "150160",
    "end": "156080"
  },
  {
    "start": "154000",
    "end": "154000"
  },
  {
    "text": "use to make our system highly available then i will go to tools that help us to manage state",
    "start": "156080",
    "end": "163920"
  },
  {
    "text": "in the cloud systems and a highly available features and finally i will try to demystify the",
    "start": "163920",
    "end": "170000"
  },
  {
    "text": "acronym sla and we will do some math but first thing first",
    "start": "170000",
    "end": "175280"
  },
  {
    "text": "let's define the state so usually when we think of state",
    "start": "175280",
    "end": "180319"
  },
  {
    "text": "it's like quite intuitively we know what it is so it's like a primitive idea like",
    "start": "180319",
    "end": "185760"
  },
  {
    "text": "a set in in a mathematical world so we know that for example light switch can be in a",
    "start": "185760",
    "end": "191840"
  },
  {
    "text": "state on or off off we can be in different states so we can be sad happy",
    "start": "191840",
    "end": "198400"
  },
  {
    "text": "interested and so on so the formal definition by cambridge dictionary said",
    "start": "198400",
    "end": "204000"
  },
  {
    "text": "that state is a condition or a way of being that exists at a particular time so",
    "start": "204000",
    "end": "210080"
  },
  {
    "text": "there are two main things so it's a way of being and it is tied to a particular point at a",
    "start": "210080",
    "end": "216159"
  },
  {
    "text": "time in computer science we usually think of",
    "start": "216159",
    "end": "221440"
  },
  {
    "start": "219000",
    "end": "219000"
  },
  {
    "text": "a stateful program as a program as a system that is able to remember the preceding events or user",
    "start": "221440",
    "end": "228239"
  },
  {
    "text": "interactions and this remembered information is called the state",
    "start": "228239",
    "end": "233599"
  },
  {
    "text": "of the existing state of the application so it's like a brain it keeps all the information and",
    "start": "233599",
    "end": "240159"
  },
  {
    "text": "then we can use it to take some actions also solve some problems so",
    "start": "240159",
    "end": "247280"
  },
  {
    "start": "247000",
    "end": "247000"
  },
  {
    "text": "state is actually everywhere in our applications so we keep stating variables in databases in",
    "start": "247280",
    "end": "254400"
  },
  {
    "text": "files however we don't call every application stateful so let's look at three different",
    "start": "254400",
    "end": "262720"
  },
  {
    "text": "most general architecture and i will discuss them in context of being stateful or",
    "start": "262720",
    "end": "268320"
  },
  {
    "text": "stateless so the first model very simple one is the fully stateless one and here",
    "start": "268320",
    "end": "275280"
  },
  {
    "start": "271000",
    "end": "271000"
  },
  {
    "text": "we've got servers that can handle requests on their own and clients can send requests which are",
    "start": "275280",
    "end": "282320"
  },
  {
    "text": "going through load balancer and it doesn't really matter which request goes on which server",
    "start": "282320",
    "end": "287840"
  },
  {
    "text": "because there is no short state so it's quite simple setup and it's not",
    "start": "287840",
    "end": "294080"
  },
  {
    "text": "very problematic because if one server is down the other can take over its request",
    "start": "294080",
    "end": "299199"
  },
  {
    "text": "and our system is still highly available the second architecture is where we've",
    "start": "299199",
    "end": "305360"
  },
  {
    "start": "304000",
    "end": "304000"
  },
  {
    "text": "got some third-party component like a database and servers are capable of",
    "start": "305360",
    "end": "310800"
  },
  {
    "text": "reconstructing needed state using this third-party component and when i did some research i found out",
    "start": "310800",
    "end": "318000"
  },
  {
    "text": "that some people find this architecture as stateless and the argument is that servers on",
    "start": "318000",
    "end": "325120"
  },
  {
    "text": "their own doesn't keep a setup it doesn't keep a state",
    "start": "325120",
    "end": "330560"
  },
  {
    "text": "and they just communicate with this third-party component so every server can handle requests from",
    "start": "330560",
    "end": "338000"
  },
  {
    "text": "clients independently just being based on this third-party component however in my",
    "start": "338000",
    "end": "345120"
  },
  {
    "text": "opinion and also an opinion with other people it is stateful setup because we still have",
    "start": "345120",
    "end": "352400"
  },
  {
    "text": "this third party component we have our database we've got our cache or anything that keeps our state",
    "start": "352400",
    "end": "359039"
  },
  {
    "text": "and without it our system is useless it probably cannot work",
    "start": "359039",
    "end": "365759"
  },
  {
    "text": "and we've got the third setup a fully stateful one and by this fully stateful i mean the",
    "start": "365759",
    "end": "372000"
  },
  {
    "start": "368000",
    "end": "368000"
  },
  {
    "text": "setup where every server keeps all of the state it's needed for the given client it handles and here",
    "start": "372000",
    "end": "379600"
  },
  {
    "text": "we have also something called sticky load balancer and it simply roots requests from one client always to",
    "start": "379600",
    "end": "386639"
  },
  {
    "text": "the same server so one server is forever responsible for handling all requests",
    "start": "386639",
    "end": "393440"
  },
  {
    "text": "from this particular clients and it keeps all the state that is needed for this client",
    "start": "393440",
    "end": "398800"
  },
  {
    "text": "however this stateful is really faulty because if you lost this server or the load from the client is is big",
    "start": "398800",
    "end": "406479"
  },
  {
    "text": "enough to kill your server you're in trouble because you don't have",
    "start": "406479",
    "end": "411599"
  },
  {
    "text": "any redundant one that could cope with it so i like to call this one the awfully stateful",
    "start": "411599",
    "end": "417599"
  },
  {
    "text": "architecture however if you want to use it i think it's okay until you are very",
    "start": "417599",
    "end": "423440"
  },
  {
    "text": "sure that that's what you need and you need to you need to be simply sure to go that way",
    "start": "423440",
    "end": "430720"
  },
  {
    "text": "so these are this free most general stateful versus stateless apps",
    "start": "430720",
    "end": "436240"
  },
  {
    "text": "architectures so now let's move to the high availability strategies so in our cloud environments",
    "start": "436240",
    "end": "444080"
  },
  {
    "start": "443000",
    "end": "443000"
  },
  {
    "text": "we can go with simple scaling and the two main scaling types are vertical and",
    "start": "444080",
    "end": "449840"
  },
  {
    "text": "horizontal by vertical scaling we mean that we can make our machines more powerful we can add them",
    "start": "449840",
    "end": "456880"
  },
  {
    "text": "more resources like cpus ram gpus anything that we need",
    "start": "456880",
    "end": "461919"
  },
  {
    "text": "and machines can handle more load usual sometimes it means that such a",
    "start": "461919",
    "end": "468560"
  },
  {
    "text": "resource needs to be stopped and then we add the resource and then it is",
    "start": "468560",
    "end": "473840"
  },
  {
    "text": "back again so on contrary we've got the horizontal scaling and in horizontal scaling we have the",
    "start": "473840",
    "end": "481280"
  },
  {
    "text": "same types of machines with the same resources and we simply add them on the go or decrease its number",
    "start": "481280",
    "end": "488319"
  },
  {
    "text": "when the load is decreasing then we can go for multi-region",
    "start": "488319",
    "end": "493360"
  },
  {
    "text": "deployments to don't have a single point of failure in one cloud region",
    "start": "493360",
    "end": "498560"
  },
  {
    "text": "we can deploy our applications in many regions so in cloud environments usually we have",
    "start": "498560",
    "end": "506400"
  },
  {
    "start": "503000",
    "end": "503000"
  },
  {
    "text": "this region that contains at least one data center and availability zones which are",
    "start": "506400",
    "end": "513360"
  },
  {
    "text": "single data centers so let's look how it looks like in azure and aws so",
    "start": "513360",
    "end": "520240"
  },
  {
    "start": "518000",
    "end": "518000"
  },
  {
    "text": "according to azure documentation we've got 60 regions however if you scroll down you will see",
    "start": "520240",
    "end": "526320"
  },
  {
    "text": "that currently they have 53 regions and there are seven regions that are already",
    "start": "526320",
    "end": "532240"
  },
  {
    "text": "announced and they have 10 regions with availability zones",
    "start": "532240",
    "end": "537680"
  },
  {
    "text": "every region with availability zones have minimum three ac's on contrary in aws",
    "start": "537680",
    "end": "545279"
  },
  {
    "text": "we've got only 23 regions however they took different strategies so they",
    "start": "545279",
    "end": "550880"
  },
  {
    "text": "provide much more availability zones so we've got 70 availability zones available in every of this region",
    "start": "550880",
    "end": "558160"
  },
  {
    "text": "and usually we've got two or more this except the osaka region which is a",
    "start": "558160",
    "end": "564160"
  },
  {
    "text": "special one so when we are placing our resources of",
    "start": "564160",
    "end": "569519"
  },
  {
    "start": "567000",
    "end": "567000"
  },
  {
    "text": "our distributed systems we should think how we want to place",
    "start": "569519",
    "end": "574839"
  },
  {
    "text": "them so how it works under the hood on our cloud so for example we can go for",
    "start": "574839",
    "end": "582560"
  },
  {
    "text": "availability sets or scale sets inside one region and then our machines will be close to",
    "start": "582560",
    "end": "588320"
  },
  {
    "text": "each other so we will have minimal latency between them and if our node",
    "start": "588320",
    "end": "593600"
  },
  {
    "text": "needs to communicate for example to synchronize some state the latency low latency is is crucial",
    "start": "593600",
    "end": "601200"
  },
  {
    "text": "however then our availability is lower because they are stacked in the same for example fault domains",
    "start": "601200",
    "end": "608640"
  },
  {
    "text": "and fault domain in azure is simply a simple rack single rack in a data center",
    "start": "608640",
    "end": "616000"
  },
  {
    "text": "and availability sets and scale sets have different number of available fault",
    "start": "616000",
    "end": "621440"
  },
  {
    "text": "domains so it means that your vms can be spread over different tracks to make it more",
    "start": "621440",
    "end": "627600"
  },
  {
    "text": "available there are also update domains which means that",
    "start": "627600",
    "end": "633040"
  },
  {
    "text": "machines from the given update domain won't be updated at the same time so it will be like a",
    "start": "633040",
    "end": "639440"
  },
  {
    "text": "sequential update so you've got still some resources up and running and when you're putting your resources",
    "start": "639440",
    "end": "646640"
  },
  {
    "text": "you have to think about this latency versus availability so as i said if you go for availability",
    "start": "646640",
    "end": "652720"
  },
  {
    "text": "sets or scale sets you have minimal latency but if your racks or the data center or the whole",
    "start": "652720",
    "end": "659279"
  },
  {
    "text": "region is down you're down so you can go a little bit further for",
    "start": "659279",
    "end": "664640"
  },
  {
    "text": "availability and deploy your application on different availability zones",
    "start": "664640",
    "end": "670320"
  },
  {
    "text": "however then the latency between availability zones is a little bit bigger than latency",
    "start": "670320",
    "end": "676800"
  },
  {
    "text": "inside the same data center but you gain the availability and finally you can go for",
    "start": "676800",
    "end": "683760"
  },
  {
    "text": "this multi-region deployment but if you've got a lot of nodes that needs to communicate each other",
    "start": "683760",
    "end": "689839"
  },
  {
    "text": "with each other and you've got like east west and west u.s stack so probably",
    "start": "689839",
    "end": "695200"
  },
  {
    "text": "the latency will be too big for you however these options are available",
    "start": "695200",
    "end": "701279"
  },
  {
    "text": "in aws we've got this vm placement strategies so we can choose a cluster strategy then",
    "start": "701279",
    "end": "707440"
  },
  {
    "text": "all of our resources will land on a single rack we've got a partition strategy so we can create a logical",
    "start": "707440",
    "end": "715040"
  },
  {
    "text": "partitions and these logical partitions we choose which resources goes on which racks and the spread one",
    "start": "715040",
    "end": "723680"
  },
  {
    "text": "it means that simply our resources will be spread over all fault domains over or",
    "start": "723680",
    "end": "729200"
  },
  {
    "text": "different lags to have higher higher availability but why we should even care about such",
    "start": "729200",
    "end": "736079"
  },
  {
    "text": "things so very often in distributed system stateful ones we need to coordinate our",
    "start": "736079",
    "end": "743600"
  },
  {
    "start": "738000",
    "end": "738000"
  },
  {
    "text": "clusters and for example we need to synchronize some state we need to",
    "start": "743600",
    "end": "749680"
  },
  {
    "text": "synchronize configuration of such a cluster and we could use zookeepers for this and zookeepers works",
    "start": "749680",
    "end": "756720"
  },
  {
    "text": "in this manner that they need some kind of quorum and you need to have two n plus one",
    "start": "756720",
    "end": "762639"
  },
  {
    "text": "instances so minimal highly available setup is free instances when one zookeeper is down the two",
    "start": "762639",
    "end": "769519"
  },
  {
    "text": "others can still cooperate however if two are down the zookeeper's cluster with",
    "start": "769519",
    "end": "775040"
  },
  {
    "text": "three instances is down so let's say that you want for aj setup you set up the",
    "start": "775040",
    "end": "781920"
  },
  {
    "text": "three instances of your zookeepers but you didn't really check how many",
    "start": "781920",
    "end": "787680"
  },
  {
    "text": "fault domains you've got in your region so it occurs that you've got only twofold domains or two racks",
    "start": "787680",
    "end": "795120"
  },
  {
    "text": "so your zookeepers are spread like this you've got two zookeepers on one rack and the",
    "start": "795120",
    "end": "800480"
  },
  {
    "text": "third one on the second rack and let's say that some natural disaster happened",
    "start": "800480",
    "end": "805760"
  },
  {
    "text": "and unfortunately the rack with two zookeepers is down and in such case even though you had",
    "start": "805760",
    "end": "813519"
  },
  {
    "text": "your frizzy cube freezer keepers you had only two full domains and your quorum is down because you were",
    "start": "813519",
    "end": "820000"
  },
  {
    "text": "unlucky and there's two zookeepers were down the rack with two zookeepers were down",
    "start": "820000",
    "end": "825519"
  },
  {
    "text": "so maybe let's scale up and put more zookeepers we've got five",
    "start": "825519",
    "end": "831920"
  },
  {
    "start": "828000",
    "end": "828000"
  },
  {
    "text": "zookeepers now so two of them two of them can be down and three of them will be still working",
    "start": "831920",
    "end": "838560"
  },
  {
    "text": "well but still if you've got only two full domains two racks and if you're unlucky your",
    "start": "838560",
    "end": "845839"
  },
  {
    "text": "zookeepers will be spread like this and three of them may go down and these two are useless",
    "start": "845839",
    "end": "852399"
  },
  {
    "text": "so i would like to highlight that that we should be aware how our resources are",
    "start": "852399",
    "end": "858800"
  },
  {
    "text": "are placed over different regions and in the cloud infrastructure because sometimes it can really strikes",
    "start": "858800",
    "end": "865040"
  },
  {
    "text": "back and be quite painful if we're not aware of it okay so",
    "start": "865040",
    "end": "870079"
  },
  {
    "start": "870000",
    "end": "870000"
  },
  {
    "text": "let's move to highly available cloud services in context of the availability",
    "start": "870079",
    "end": "875920"
  },
  {
    "text": "so usually when we deal with state very often we need some kind of database and",
    "start": "875920",
    "end": "883199"
  },
  {
    "start": "876000",
    "end": "876000"
  },
  {
    "text": "we had some experience with azure sql so azure sql is simply a managed dba",
    "start": "883199",
    "end": "890000"
  },
  {
    "text": "under the hood there is a microsoft sql server database engine and it has pretty cool scalability and",
    "start": "890000",
    "end": "897360"
  },
  {
    "text": "high availability features so for scalability it has something called dynamic scaling",
    "start": "897360",
    "end": "905199"
  },
  {
    "start": "900000",
    "end": "900000"
  },
  {
    "text": "but you need to be aware of the fact that it's not equal to auto scaling",
    "start": "905199",
    "end": "910560"
  },
  {
    "text": "so it's simply a manual process but you can scale your database on the go all you get is a toggle in a portal or",
    "start": "910560",
    "end": "918480"
  },
  {
    "text": "you can access it by a rest api and you can scale up or scroll down your database on the go",
    "start": "918480",
    "end": "924240"
  },
  {
    "text": "if you'd like to have some more automating kind of scaling you can go for elastic pulls when you",
    "start": "924240",
    "end": "930720"
  },
  {
    "text": "set up a pool of resources and your databases share them and use them if they need or",
    "start": "930720",
    "end": "937920"
  },
  {
    "text": "you can implement your custom auto scaling based on this azure sql metrics and you can run",
    "start": "937920",
    "end": "945839"
  },
  {
    "text": "up and down requests to to rest virus api to the cloud provider and your database will",
    "start": "945839",
    "end": "952320"
  },
  {
    "text": "scale depending on your actions regarding high",
    "start": "952320",
    "end": "957440"
  },
  {
    "text": "availability features it has something called active dual replication and failover groups so let's start with",
    "start": "957440",
    "end": "964480"
  },
  {
    "text": "the active dual replication so in active duro application you simply",
    "start": "964480",
    "end": "969600"
  },
  {
    "start": "967000",
    "end": "967000"
  },
  {
    "text": "get your primary database in one of the cloud regions and then you get a secondary database",
    "start": "969600",
    "end": "976000"
  },
  {
    "text": "that can be in the same or a different region additionally you get the asynchronous data",
    "start": "976000",
    "end": "982160"
  },
  {
    "text": "applications between two regions and you get a toggle that is used to switch your primary",
    "start": "982160",
    "end": "990560"
  },
  {
    "text": "database to a secondary database so if you see that your region is down you can do this failover",
    "start": "990560",
    "end": "997600"
  },
  {
    "text": "however it's a manual process and probably it's too slow so if you want to have a highly",
    "start": "997600",
    "end": "1003600"
  },
  {
    "text": "available setup you don't want to have manual processes at all",
    "start": "1003600",
    "end": "1008959"
  },
  {
    "text": "so we needed something better and as we provide something better it's",
    "start": "1008959",
    "end": "1014639"
  },
  {
    "text": "called failover groups so here we've got our primary and",
    "start": "1014639",
    "end": "1020000"
  },
  {
    "start": "1016000",
    "end": "1016000"
  },
  {
    "text": "secondary database as we get before however now the",
    "start": "1020000",
    "end": "1025678"
  },
  {
    "text": "secondary database is by default in different regions so we get",
    "start": "1025679",
    "end": "1030798"
  },
  {
    "text": "higher availability data is also asynchronously synchronized and",
    "start": "1030799",
    "end": "1038240"
  },
  {
    "text": "additionally we get this nice guy like a robot who checks if our region is down and if",
    "start": "1038240",
    "end": "1045120"
  },
  {
    "text": "so it is capable of doing automatic failover so we got a single connection string to",
    "start": "1045120",
    "end": "1052320"
  },
  {
    "text": "our database to our primary db it always points to our current primary db",
    "start": "1052320",
    "end": "1058640"
  },
  {
    "text": "if something bad happens this nice guy will switch it and our secondary database will become a",
    "start": "1058640",
    "end": "1065200"
  },
  {
    "text": "primary one what is more we can benefit from",
    "start": "1065200",
    "end": "1070400"
  },
  {
    "text": "something called paired regions on azure so part regions are simply a list of",
    "start": "1070400",
    "end": "1076320"
  },
  {
    "text": "pairs and these regions have this guarantees from microsoft site",
    "start": "1076320",
    "end": "1081520"
  },
  {
    "text": "so they provide a physical isolation so if it's possible the data centers are at least 300 miles so",
    "start": "1081520",
    "end": "1088880"
  },
  {
    "text": "the natural disasters shouldn't break two regions at the same time we've got regional recovery order",
    "start": "1088880",
    "end": "1096080"
  },
  {
    "text": "so if two regions are from a pair or down at the same time one of them is",
    "start": "1096080",
    "end": "1102000"
  },
  {
    "text": "prioritized to recover and they also get this sequential update so",
    "start": "1102000",
    "end": "1107520"
  },
  {
    "text": "they are not updated at the same time if the update on one region fails it is recovered",
    "start": "1107520",
    "end": "1115039"
  },
  {
    "text": "and we still have the second region working okay so now let me do some demo i will",
    "start": "1115039",
    "end": "1122880"
  },
  {
    "text": "show you an app so i prepared a simple java app the app azure sql",
    "start": "1122880",
    "end": "1130480"
  },
  {
    "text": "and here i will use the sql access object and it's simply",
    "start": "1130480",
    "end": "1137200"
  },
  {
    "text": "it will simply select all androids from my database or create a new android and android is",
    "start": "1137200",
    "end": "1144799"
  },
  {
    "text": "simply defined by identifier first name last name and its version",
    "start": "1144799",
    "end": "1150799"
  },
  {
    "text": "so these are simple sql statements i use the jdbc template and in the app",
    "start": "1150799",
    "end": "1159280"
  },
  {
    "text": "i'll run my scheduled executor and i will create an android and then i will select all",
    "start": "1159280",
    "end": "1166080"
  },
  {
    "text": "androids and lock the size so let's run it",
    "start": "1166080",
    "end": "1171679"
  },
  {
    "text": "and here we go it should start in a moment and we've got our androids being created",
    "start": "1173440",
    "end": "1181280"
  },
  {
    "text": "now i will switch to azure portal and here is my failover setup so i have two",
    "start": "1181280",
    "end": "1188320"
  },
  {
    "text": "databases in two regions in east u.s and west u.s and two servers for each database and",
    "start": "1188320",
    "end": "1195679"
  },
  {
    "text": "now when i check one of the servers i will have this failover group features",
    "start": "1195679",
    "end": "1201200"
  },
  {
    "text": "so we've got this failover tab and here we see that our primary server is currently a state runner server east",
    "start": "1201200",
    "end": "1208480"
  },
  {
    "text": "us and secondary server is the west us",
    "start": "1208480",
    "end": "1213679"
  },
  {
    "text": "we get some nice visualization of our regions that are part we get our red light",
    "start": "1213919",
    "end": "1222000"
  },
  {
    "text": "connection string so that one that points to the primary database all the time",
    "start": "1222000",
    "end": "1227120"
  },
  {
    "text": "and we also get some secondary return listener endpoints so we can some",
    "start": "1227120",
    "end": "1232880"
  },
  {
    "text": "balance our workflows between reads and writes if we need it one of the cool features with failover",
    "start": "1232880",
    "end": "1239200"
  },
  {
    "text": "groups is that we can simulate a failover and now i will simulate such a catastrophical event so",
    "start": "1239200",
    "end": "1247280"
  },
  {
    "text": "yes i agreed it may not work and let's see if there is some disruption in",
    "start": "1247280",
    "end": "1254480"
  },
  {
    "text": "our application so failover should start happening oh we get some errors and",
    "start": "1254480",
    "end": "1262000"
  },
  {
    "text": "yes our connection was reset so primary is not primary anymore",
    "start": "1262000",
    "end": "1269520"
  },
  {
    "text": "and we've got more errors some of our requests failed but really",
    "start": "1269520",
    "end": "1276559"
  },
  {
    "text": "quickly our database is up and running so we probably could fix it by applying some retry",
    "start": "1276559",
    "end": "1283280"
  },
  {
    "text": "policies and and we won't be vulnerable for this for this error so",
    "start": "1283280",
    "end": "1291760"
  },
  {
    "text": "what are my experiences with using this azure sequel so we used this quite a long time ago",
    "start": "1291760",
    "end": "1298720"
  },
  {
    "start": "1297000",
    "end": "1297000"
  },
  {
    "text": "like one or two years ago and we were really unhappy with it so as you can see i was quite asleep",
    "start": "1298720",
    "end": "1307200"
  },
  {
    "text": "while using azure sql because it didn't work so well there then so basically such a",
    "start": "1307200",
    "end": "1314799"
  },
  {
    "text": "failovers usually took 5 to 10 minutes before your primary database was",
    "start": "1314799",
    "end": "1322240"
  },
  {
    "text": "accessible again or secondary became primary one there were a lot of internal failovers",
    "start": "1322240",
    "end": "1329520"
  },
  {
    "text": "inside one region so even the failover to the secondary regions didn't start it",
    "start": "1329520",
    "end": "1334880"
  },
  {
    "text": "and you get some troubles with your database so it didn't work very well however as",
    "start": "1334880",
    "end": "1340640"
  },
  {
    "text": "you could see now it's fixed and it's a really nice feature so what is more they added",
    "start": "1340640",
    "end": "1348559"
  },
  {
    "start": "1345000",
    "end": "1345000"
  },
  {
    "text": "more features like a business critical tier and the zone redundant deployments so your app will be even",
    "start": "1348559",
    "end": "1354720"
  },
  {
    "text": "more highly available if you're interested in amazon",
    "start": "1354720",
    "end": "1360400"
  },
  {
    "start": "1358000",
    "end": "1358000"
  },
  {
    "text": "equivalent you can check the amazon rds database it has many different",
    "start": "1360400",
    "end": "1365600"
  },
  {
    "text": "engines under the hood like postgres mysql it also supports different acs",
    "start": "1365600",
    "end": "1372080"
  },
  {
    "text": "synchronous and standby replicas and so on so i would say that's the equivalent of",
    "start": "1372080",
    "end": "1378080"
  },
  {
    "text": "audio sql in in amazon rds but still we were very unhappy and we had some",
    "start": "1378080",
    "end": "1384880"
  },
  {
    "text": "problems at this particular moment at time so we lay down cry and look to the sky",
    "start": "1384880",
    "end": "1392559"
  },
  {
    "text": "and we discovered cosmos and cosmos db is also a managed",
    "start": "1392559",
    "end": "1399919"
  },
  {
    "start": "1395000",
    "end": "1395000"
  },
  {
    "text": "service on azure azure cloud and it's simply a multi-modal db",
    "start": "1399919",
    "end": "1404960"
  },
  {
    "text": "it's nosql database and it supports many different apis so you can go for",
    "start": "1404960",
    "end": "1411360"
  },
  {
    "text": "all good sql demongodb gremlin if you like graphql",
    "start": "1411360",
    "end": "1416880"
  },
  {
    "text": "so that's how cosmos looks like and that's what it supports and it has really nice high availability",
    "start": "1416880",
    "end": "1423440"
  },
  {
    "text": "features so you can go for single master or multiple readers replications as well as you can",
    "start": "1423440",
    "end": "1430799"
  },
  {
    "text": "choose a multi-master application and you can add and remove regions on",
    "start": "1430799",
    "end": "1436240"
  },
  {
    "text": "the go when your app is already deployed so you can expand your app all over the world",
    "start": "1436240",
    "end": "1443520"
  },
  {
    "text": "what is more if get something called multi-homing api and it means that your client will",
    "start": "1443520",
    "end": "1450559"
  },
  {
    "text": "act and will contact the replica that is closest to you",
    "start": "1450559",
    "end": "1455600"
  },
  {
    "text": "and it also has regional failovers in case of any disasters",
    "start": "1455600",
    "end": "1461440"
  },
  {
    "text": "under the hood when it comes about data applications so your data partitions are originally",
    "start": "1461440",
    "end": "1467679"
  },
  {
    "text": "redundant and every partition is replicated inside one region and your replicas can",
    "start": "1467679",
    "end": "1475039"
  },
  {
    "text": "have from 10 to 20 fold domains so the probability that all racks are down is is really low and",
    "start": "1475039",
    "end": "1483279"
  },
  {
    "text": "you've got four replicas times the number of regions in which you deployed your cosmos db",
    "start": "1483279",
    "end": "1489760"
  },
  {
    "text": "so now let's do the same setup but with the",
    "start": "1489760",
    "end": "1494799"
  },
  {
    "text": "azure cosmos so in my cosmos application i got my cosmos data",
    "start": "1494799",
    "end": "1503039"
  },
  {
    "text": "access object and here we use documents because it's not no no sql",
    "start": "1503039",
    "end": "1509360"
  },
  {
    "text": "database however i will use a simple synchronous sql api",
    "start": "1509360",
    "end": "1516480"
  },
  {
    "text": "so to create new android i simply use the abstraction provided by",
    "start": "1516480",
    "end": "1522880"
  },
  {
    "text": "azure sdks i create a document and i have to serialize my android to json",
    "start": "1522880",
    "end": "1528880"
  },
  {
    "text": "and that's how this android document lands in a cosmos vp and to find all documents i need to",
    "start": "1528880",
    "end": "1536799"
  },
  {
    "text": "query and download all documents from my cosmos db as i said i use this simple sql api",
    "start": "1536799",
    "end": "1546240"
  },
  {
    "text": "the app will be pretty the same as with the sql one so i've got the executor and i",
    "start": "1546240",
    "end": "1552720"
  },
  {
    "text": "create a new android and then find all androids available",
    "start": "1552720",
    "end": "1558000"
  },
  {
    "text": "but now with this cosmos tax data access object so let me run it",
    "start": "1558000",
    "end": "1564960"
  },
  {
    "text": "and in the moment we should see our android should be created yeah so we get our androids",
    "start": "1564960",
    "end": "1572640"
  },
  {
    "text": "so let's move to the azure portal again and now i will show you the resource",
    "start": "1572640",
    "end": "1577760"
  },
  {
    "text": "group with with my cosmos db account oops sorry",
    "start": "1577760",
    "end": "1583919"
  },
  {
    "text": "yeah here it is so here we've got the cosmos db account",
    "start": "1583919",
    "end": "1591200"
  },
  {
    "text": "and we also got the tab called replicate data globally",
    "start": "1591200",
    "end": "1598640"
  },
  {
    "text": "we get a nice map so we've got this multi-region rights feature however it",
    "start": "1598640",
    "end": "1605279"
  },
  {
    "text": "is disabled because i would like to compare apples to apples so the sql version that i showed you",
    "start": "1605279",
    "end": "1611840"
  },
  {
    "text": "didn't have multi multi region rights and multi master rats",
    "start": "1611840",
    "end": "1617600"
  },
  {
    "text": "and we can get this automatic failover and manual failover to simulate this",
    "start": "1617600",
    "end": "1623679"
  },
  {
    "text": "this situation so now let's run the manual failover and we need to choose which region",
    "start": "1623679",
    "end": "1629679"
  },
  {
    "text": "should be our right region so we will switch it to the west europe",
    "start": "1629679",
    "end": "1635360"
  },
  {
    "text": "yes i understand the risk and let's switch to the app and",
    "start": "1635360",
    "end": "1642240"
  },
  {
    "text": "failover now is happening but our androids are still being created",
    "start": "1642240",
    "end": "1649120"
  },
  {
    "text": "we could wait for a moment if we see something dangerous or some errors",
    "start": "1649120",
    "end": "1654320"
  },
  {
    "text": "however from my experience we could wait like for an hour or longer and you really won't get any",
    "start": "1654320",
    "end": "1661679"
  },
  {
    "text": "issues so i didn't i wasn't able to to replicate or get any any errors",
    "start": "1661679",
    "end": "1669120"
  },
  {
    "text": "from failovers on cosmos db during the test type during the test",
    "start": "1669120",
    "end": "1674640"
  },
  {
    "text": "that i run so this feature works really really well and it was a solution in our case",
    "start": "1674640",
    "end": "1682799"
  },
  {
    "text": "so still cosmos db has really nice availability but you need to be aware of",
    "start": "1682799",
    "end": "1688880"
  },
  {
    "text": "its limitations so document size are at maximum 2 megabytes",
    "start": "1688880",
    "end": "1694080"
  },
  {
    "text": "and it supports only five geospatial functions so if you need some more sophisticated",
    "start": "1694080",
    "end": "1700880"
  },
  {
    "text": "database functions you probably need to implement them on their own as cosmos db data set functions is is",
    "start": "1700880",
    "end": "1709520"
  },
  {
    "text": "quite simple and you need to remember it's the document based db so with all its pros",
    "start": "1709520",
    "end": "1717440"
  },
  {
    "text": "and cons there are also as as usual a consistency level that that",
    "start": "1717440",
    "end": "1723120"
  },
  {
    "text": "you can choose from you need to be aware of them and you need to choose the right consistency level for",
    "start": "1723120",
    "end": "1729760"
  },
  {
    "text": "your application in amazon you can check the dynamodb",
    "start": "1729760",
    "end": "1735440"
  },
  {
    "start": "1732000",
    "end": "1732000"
  },
  {
    "text": "i would say it is the equivalent of cosmos db uh it also has this multi-region and",
    "start": "1735440",
    "end": "1741039"
  },
  {
    "text": "multi master support but i haven't used it so you can check",
    "start": "1741039",
    "end": "1746399"
  },
  {
    "text": "it if you're interested in okay the next group of services",
    "start": "1746399",
    "end": "1751679"
  },
  {
    "text": "is storage so sometimes we've got some distributed resources some files that we'd like to share",
    "start": "1751679",
    "end": "1759520"
  },
  {
    "text": "backups logs or in general long living resources so we need some kind of storage for them",
    "start": "1759520",
    "end": "1767200"
  },
  {
    "start": "1767000",
    "end": "1767000"
  },
  {
    "text": "and in azure we get this locally redundant storage and it means that your data will be",
    "start": "1767200",
    "end": "1773760"
  },
  {
    "text": "replicated three times within a single data center in a region that you chosen if you need",
    "start": "1773760",
    "end": "1781120"
  },
  {
    "text": "to be more sure you can go for geo-redundant storage and then you will get the three times",
    "start": "1781120",
    "end": "1787760"
  },
  {
    "text": "replication your primary region and then the synchronous asynchronous",
    "start": "1787760",
    "end": "1793679"
  },
  {
    "text": "replication to the secondary region however there is a trick you won't be able to read your data from the",
    "start": "1793679",
    "end": "1799679"
  },
  {
    "text": "secondary region until your primary region will fail",
    "start": "1799679",
    "end": "1804720"
  },
  {
    "text": "and cloud provider will decide to switch your primary to the secondary one",
    "start": "1804720",
    "end": "1810159"
  },
  {
    "text": "if you want to read your data from the secondary region you need to of course pay for it and you",
    "start": "1810159",
    "end": "1815760"
  },
  {
    "text": "can go for read access geo redundant storage so now you've got",
    "start": "1815760",
    "end": "1821039"
  },
  {
    "start": "1816000",
    "end": "1816000"
  },
  {
    "text": "six replicas in two different regions and you can access both of them",
    "start": "1821039",
    "end": "1828000"
  },
  {
    "start": "1828000",
    "end": "1828000"
  },
  {
    "text": "we can go even deeper if we need more redundancy in azure storage v2 we've got zone",
    "start": "1828000",
    "end": "1835039"
  },
  {
    "text": "redundant storage so we can redundant make our data redundant between",
    "start": "1835039",
    "end": "1841440"
  },
  {
    "text": "different availability zones so we've zone redundant storage we've got three clusters in",
    "start": "1841440",
    "end": "1848399"
  },
  {
    "text": "different acs in the geosome redundant storage we've got zone redundant storage plus",
    "start": "1848399",
    "end": "1855039"
  },
  {
    "text": "the secondary region but still we won't be able to read from this secondary region",
    "start": "1855039",
    "end": "1860480"
  },
  {
    "text": "and finally we've got this read access geo zone redundant storage",
    "start": "1860480",
    "end": "1866240"
  },
  {
    "text": "so here you've got your data spread over different regions over different aces",
    "start": "1866240",
    "end": "1871919"
  },
  {
    "text": "and you can read from both regions however you need to be aware of what you're asking for so it's",
    "start": "1871919",
    "end": "1879279"
  },
  {
    "text": "like in a story about the gym so if you want your data to be redundant it needs some time to be",
    "start": "1879279",
    "end": "1885840"
  },
  {
    "text": "stored and replicated and if you need your data as quickly as possible you should probably go with locally",
    "start": "1885840",
    "end": "1892799"
  },
  {
    "text": "redundant storage and don't really care about the redundancy so much",
    "start": "1892799",
    "end": "1897840"
  },
  {
    "text": "so choose wisely then in a pack of storage services in",
    "start": "1897840",
    "end": "1904320"
  },
  {
    "start": "1901000",
    "end": "1901000"
  },
  {
    "text": "azure we've got azure queue which is a really nice and simple service to integrate the parts of your applications",
    "start": "1904320",
    "end": "1910960"
  },
  {
    "text": "or different services it has infinite time to live and it can store up to",
    "start": "1910960",
    "end": "1916399"
  },
  {
    "text": "500 terabytes of messages and of course order is not guaranteed",
    "start": "1916399",
    "end": "1922559"
  },
  {
    "text": "but as i said is quite simple simple service which provides you some kind of persistent",
    "start": "1922559",
    "end": "1928240"
  },
  {
    "text": "persistence over your storing your messages if you need ordering you can check out",
    "start": "1928240",
    "end": "1934000"
  },
  {
    "text": "the service bus message service on azure okay when you check the documentation",
    "start": "1934000",
    "end": "1942240"
  },
  {
    "text": "of azure queue it says it has it supports unlimited number of concurrent clients",
    "start": "1942240",
    "end": "1949120"
  },
  {
    "text": "so i was quite suspicious about it so i started with like let's let's do",
    "start": "1949120",
    "end": "1955039"
  },
  {
    "text": "what one client can do with the queue and let's do some big load with this one client and",
    "start": "1955039",
    "end": "1962399"
  },
  {
    "text": "suddenly you can get 305 server busy",
    "start": "1962399",
    "end": "1967519"
  },
  {
    "text": "so i'm usually quite skeptical with such statement that something is unlimited",
    "start": "1967519",
    "end": "1972960"
  },
  {
    "text": "and there are always some limits and and i think that developers are",
    "start": "1972960",
    "end": "1978880"
  },
  {
    "text": "usually quite skeptical about using such such statements however we do not always",
    "start": "1978880",
    "end": "1984240"
  },
  {
    "text": "write the documentation and that is the case",
    "start": "1984240",
    "end": "1989360"
  },
  {
    "text": "in aws we've got s3 which is the equivalent of the storage and sqs",
    "start": "1989360",
    "end": "1995679"
  },
  {
    "text": "which is the queue for for for storing our messages",
    "start": "1995679",
    "end": "2001200"
  },
  {
    "text": "and at the time we use aws it had more major java sdks",
    "start": "2001200",
    "end": "2008240"
  },
  {
    "text": "but still microsoft do a lot of great work on improving their sdks java",
    "start": "2008240",
    "end": "2014559"
  },
  {
    "start": "2010000",
    "end": "2010000"
  },
  {
    "text": "sdks they are really reacting when you are creating an issues on github",
    "start": "2014559",
    "end": "2020640"
  },
  {
    "text": "and they are improving very very fast and the sdks are more and more mature",
    "start": "2020640",
    "end": "2025760"
  },
  {
    "text": "and and still still they are better and when you",
    "start": "2025760",
    "end": "2032240"
  },
  {
    "text": "have your storage it can still fail as anything in cloud or in a distributed",
    "start": "2032240",
    "end": "2038559"
  },
  {
    "text": "system so we should think of some kind of storage life cycle or be ready for migration because",
    "start": "2038559",
    "end": "2045519"
  },
  {
    "text": "sometimes the storage can be moved to the new types of the machines so",
    "start": "2045519",
    "end": "2050560"
  },
  {
    "text": "to benefit from new machines to benefit from the better performance we would need to",
    "start": "2050560",
    "end": "2056000"
  },
  {
    "text": "migrate our storage accounts our databases and so on so one strategy that we should we could",
    "start": "2056000",
    "end": "2062960"
  },
  {
    "start": "2062000",
    "end": "2062000"
  },
  {
    "text": "take is to put a proxy bit for our service and simply",
    "start": "2062960",
    "end": "2068240"
  },
  {
    "text": "direct all requests to the old setup and after some period if the old data is",
    "start": "2068240",
    "end": "2074240"
  },
  {
    "text": "not anymore needed we can push new requests all requests to the new setup however",
    "start": "2074240",
    "end": "2081118"
  },
  {
    "text": "the proxy has some cons so you add some",
    "start": "2081119",
    "end": "2086398"
  },
  {
    "text": "latency additional latency some additional overhead to your system",
    "start": "2086399",
    "end": "2091760"
  },
  {
    "text": "and from my experience such proxy component is maintained and developed only when",
    "start": "2091760",
    "end": "2097599"
  },
  {
    "text": "it's needed and then after some time it gets rusty so when you want to reuse it it's not ready",
    "start": "2097599",
    "end": "2104800"
  },
  {
    "text": "for being reused so maybe the better way is to go with some kind of dynamic approach",
    "start": "2104800",
    "end": "2110720"
  },
  {
    "start": "2108000",
    "end": "2108000"
  },
  {
    "text": "so like defining pull-off storage accounts that can be dynamically configurable and for example if one",
    "start": "2110720",
    "end": "2118800"
  },
  {
    "text": "of the storage accounts goes down you can take it out of the pool and don't write requests to it and",
    "start": "2118800",
    "end": "2126000"
  },
  {
    "text": "provide the new storage accounts to your pool or new queues so you can dynamically have a healthy and",
    "start": "2126000",
    "end": "2134240"
  },
  {
    "text": "living system so i think i would go with this way",
    "start": "2134240",
    "end": "2139359"
  },
  {
    "text": "okay so let's go to the first chapter the sla which means service level",
    "start": "2139359",
    "end": "2144960"
  },
  {
    "start": "2140000",
    "end": "2140000"
  },
  {
    "text": "agreement and sla by definition is a contractual agreement between a",
    "start": "2144960",
    "end": "2151760"
  },
  {
    "text": "service provider and a customer buying a service and probably we are usually on both",
    "start": "2151760",
    "end": "2158079"
  },
  {
    "text": "sides of this agreement because we are providing some services but we also are",
    "start": "2158079",
    "end": "2163599"
  },
  {
    "text": "users for example of cloud services so we are customers of cloud providers",
    "start": "2163599",
    "end": "2170240"
  },
  {
    "text": "and the slays very often stipulate some minimum quality of services and if it is broken we need to pay or we",
    "start": "2170240",
    "end": "2178720"
  },
  {
    "text": "get some money from from the guy that we signed the agreement with so how we can understand",
    "start": "2178720",
    "end": "2187280"
  },
  {
    "text": "the sla let me use this sla calculator which is",
    "start": "2187280",
    "end": "2192720"
  },
  {
    "text": "written in lisp and it's made with secret alien technology i really like it because it fits my",
    "start": "2192720",
    "end": "2198480"
  },
  {
    "text": "background story about blade runner so here it is and one way of understanding the sla is",
    "start": "2198480",
    "end": "2206160"
  },
  {
    "start": "2202000",
    "end": "2202000"
  },
  {
    "text": "defining it by the number of nines and it means that our system is",
    "start": "2206160",
    "end": "2212880"
  },
  {
    "text": "up for 99.9 percentage of time putting",
    "start": "2212880",
    "end": "2219520"
  },
  {
    "text": "putting it in a different words it means that during the year our system can be down for around nine",
    "start": "2219520",
    "end": "2225680"
  },
  {
    "text": "hours and the more lines we get the better for",
    "start": "2225680",
    "end": "2231040"
  },
  {
    "text": "our availability i really like this tool because it really supports also an artificial",
    "start": "2231040",
    "end": "2237040"
  },
  {
    "text": "intelligence so i can write the five nines and it should understand the natural language",
    "start": "2237040",
    "end": "2243440"
  },
  {
    "start": "2243000",
    "end": "2243000"
  },
  {
    "text": "so it's it's really powerful one but get back to the sla so as i said",
    "start": "2243440",
    "end": "2249920"
  },
  {
    "text": "the more nice we get the better and how can we calculate it for our",
    "start": "2249920",
    "end": "2256240"
  },
  {
    "text": "system so let's have such a simple",
    "start": "2256240",
    "end": "2261599"
  },
  {
    "text": "setup let's assume that we have a system that uses a db and storage and we need to use them",
    "start": "2261599",
    "end": "2268480"
  },
  {
    "text": "at the same time to be up and both services have four nines of",
    "start": "2268480",
    "end": "2273599"
  },
  {
    "text": "availability so what's our sla in such a setup so let's use the uptime",
    "start": "2273599",
    "end": "2279520"
  },
  {
    "text": "approach so that's the part where maths comes to the rescue",
    "start": "2279520",
    "end": "2284960"
  },
  {
    "text": "and we will use the probability when two events a and b are independent the probability of both",
    "start": "2284960",
    "end": "2291680"
  },
  {
    "text": "occurring is simply the probability of event a times the probability",
    "start": "2291680",
    "end": "2297040"
  },
  {
    "text": "of event b so the probability of database being",
    "start": "2297040",
    "end": "2304079"
  },
  {
    "start": "2299000",
    "end": "2299000"
  },
  {
    "text": "up is 0.49 and that's the same for our storage so probability for both storage and",
    "start": "2304079",
    "end": "2311760"
  },
  {
    "text": "database being up is three ninths",
    "start": "2311760",
    "end": "2316800"
  },
  {
    "text": "so as you can see we started with four nines for our services however after combining only two of them",
    "start": "2316800",
    "end": "2324320"
  },
  {
    "text": "we already lost one nine it turns out to be eight now and it's",
    "start": "2324320",
    "end": "2330160"
  },
  {
    "text": "like an hour of being up during the year so how can we improve so we can go for",
    "start": "2330160",
    "end": "2337599"
  },
  {
    "start": "2336000",
    "end": "2336000"
  },
  {
    "text": "multi-region so we can deploy our application in two regions and have a traffic manager that",
    "start": "2337599",
    "end": "2345119"
  },
  {
    "text": "roots our traffic between these regions so in such setup our traffic manager",
    "start": "2345119",
    "end": "2350480"
  },
  {
    "start": "2348000",
    "end": "2348000"
  },
  {
    "text": "will have four nines of availability and if our system is up it means that let's",
    "start": "2350480",
    "end": "2357839"
  },
  {
    "text": "say our europe region is up or our us region is up putting it in a different world words",
    "start": "2357839",
    "end": "2366079"
  },
  {
    "text": "maximum probability is one so we've got one minus the probability that the",
    "start": "2366079",
    "end": "2371680"
  },
  {
    "text": "europe region and u.s region at the same time are down then the whole system is down",
    "start": "2371680",
    "end": "2380480"
  },
  {
    "text": "so we simply can multiply the probabilities of these two events europe being down",
    "start": "2380480",
    "end": "2386640"
  },
  {
    "text": "and u.s being down okay so let's calculate it probability of",
    "start": "2386640",
    "end": "2392000"
  },
  {
    "text": "european down or u.s being down they are the same and they are simply the maximum",
    "start": "2392000",
    "end": "2397920"
  },
  {
    "text": "probability minus the probability of a single region that we calculated before",
    "start": "2397920",
    "end": "2404160"
  },
  {
    "text": "and it's this value so putting this into formula the",
    "start": "2404160",
    "end": "2410480"
  },
  {
    "text": "probability that europe is up or us is up so of our multi-region deployment s1",
    "start": "2410480",
    "end": "2418319"
  },
  {
    "text": "minus this multiplication and finally we've got like one two three four five",
    "start": "2418319",
    "end": "2425119"
  },
  {
    "text": "six seven nines which is really high availability which is really high sla that's great",
    "start": "2425119",
    "end": "2431520"
  },
  {
    "text": "however we have this traffic manager in front of us so we still need to multiply this",
    "start": "2431520",
    "end": "2440160"
  },
  {
    "text": "high sla but the four ninths and finally the slay of our multi region",
    "start": "2440160",
    "end": "2447440"
  },
  {
    "text": "is again three ninths but we are very close to regaining the fourth nine so",
    "start": "2447440",
    "end": "2455200"
  },
  {
    "text": "as you could see it's really easy to to lower your sla however it's",
    "start": "2455200",
    "end": "2462800"
  },
  {
    "text": "really hard to get it back and we doubled cost because we have two",
    "start": "2462800",
    "end": "2467920"
  },
  {
    "text": "deployments so so we need to be really careful and i would really like to highlight it that complexity is",
    "start": "2467920",
    "end": "2475520"
  },
  {
    "text": "decidably simple so when we are designing our systems",
    "start": "2475520",
    "end": "2480960"
  },
  {
    "text": "it's very easy to go with this thinking that okay it's very simple to let's get a database",
    "start": "2480960",
    "end": "2487680"
  },
  {
    "text": "let's get a queue uh storage and maybe some redis cache and let's put all over together",
    "start": "2487680",
    "end": "2494000"
  },
  {
    "text": "because it it seems to be simple and and we just get services that we need",
    "start": "2494000",
    "end": "2499920"
  },
  {
    "text": "however when we do it it may be occurred that",
    "start": "2499920",
    "end": "2505599"
  },
  {
    "text": "simple solution ends up with being really hard and complex architecture and we are",
    "start": "2505599",
    "end": "2511920"
  },
  {
    "text": "ending up with many different problems and it really harms our availability so we should be really",
    "start": "2511920",
    "end": "2518640"
  },
  {
    "text": "careful and and put a lot of attention to our architecture",
    "start": "2518640",
    "end": "2524560"
  },
  {
    "text": "okay so summarizing i went through strategies tools and this sla in context of being",
    "start": "2524560",
    "end": "2532319"
  },
  {
    "text": "up or down now i've got a call to action for you so i would like to ask you to",
    "start": "2532319",
    "end": "2539920"
  },
  {
    "start": "2535000",
    "end": "2535000"
  },
  {
    "text": "do this kind of exercise mental exercise to calculate sla for your system that you're at work",
    "start": "2539920",
    "end": "2546560"
  },
  {
    "text": "or at your for your hobby project it doesn't really matter i think it's a good exercise and it's",
    "start": "2546560",
    "end": "2553040"
  },
  {
    "text": "quite a good metric to get your the complexity of your system the metric of",
    "start": "2553040",
    "end": "2558160"
  },
  {
    "text": "the complexity of your system then i encourage you to play with aj",
    "start": "2558160",
    "end": "2563920"
  },
  {
    "text": "features of the services that that you use and always be ready for the failures because they will fail",
    "start": "2563920",
    "end": "2572160"
  },
  {
    "text": "if you never experience the failure of service of cloud services i'm sure unfortunately",
    "start": "2572160",
    "end": "2579280"
  },
  {
    "text": "you will in the future so we need to be ready for it and finally be try to be aware how you",
    "start": "2579280",
    "end": "2587839"
  },
  {
    "text": "are using your cloud infrastructure where your resources land because sometimes you may think that you've got",
    "start": "2587839",
    "end": "2594240"
  },
  {
    "text": "the highly available architecture however you missed one little thing under the hood and it turns",
    "start": "2594240",
    "end": "2601440"
  },
  {
    "text": "out that you get outages and and you can prevent it quite easily when you're aware of these",
    "start": "2601440",
    "end": "2608480"
  },
  {
    "text": "things okay so finally answering the question do we dream of stateless apps so i think",
    "start": "2608480",
    "end": "2615520"
  },
  {
    "text": "we shouldn't because state brings a lot of challenges a lot of problems to solve however it",
    "start": "2615520",
    "end": "2622880"
  },
  {
    "text": "makes our work interesting and it's he's like like a good good body that challenges us",
    "start": "2622880",
    "end": "2630960"
  },
  {
    "text": "and helps us to develop ourselves and to make our systems better and better",
    "start": "2630960",
    "end": "2637520"
  },
  {
    "text": "so i think that we shouldn't dream of stateless apps we should try to take on the challenge and and",
    "start": "2637520",
    "end": "2644319"
  },
  {
    "text": "simply solve the problem and everyone will benefit from it okay summarizing i hope you enjoyed the",
    "start": "2644319",
    "end": "2651680"
  },
  {
    "text": "talk i hope you will enjoy the whole conference feel free to ask the questions on stack",
    "start": "2651680",
    "end": "2657760"
  },
  {
    "text": "in a moment i will try to answer if there are any and i started with roy batty the android",
    "start": "2657760",
    "end": "2665280"
  },
  {
    "text": "from the blade runner who was at the first slide and i would like to",
    "start": "2665280",
    "end": "2670720"
  },
  {
    "text": "finish with his citation so i hope this presentation the whole conference will be a great",
    "start": "2670720",
    "end": "2677280"
  },
  {
    "text": "experience for you and it won't last in the rain",
    "start": "2677280",
    "end": "2682319"
  },
  {
    "text": "thank you very much for your attention feel free to reach reach out to me so now i'll be happy to",
    "start": "2682319",
    "end": "2688720"
  },
  {
    "text": "answer your questions and here is the bibliography and i will",
    "start": "2688720",
    "end": "2694480"
  },
  {
    "start": "2694000",
    "end": "2694000"
  },
  {
    "text": "put the slides and codes under this links i will also put it on twitter",
    "start": "2694480",
    "end": "2702160"
  }
]