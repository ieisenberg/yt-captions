[
  {
    "text": "welcome um on this early morning I hope you all at your coffee or drinks",
    "start": "539",
    "end": "6299"
  },
  {
    "text": "to get you up and running um you're here for a session on instrumentation",
    "start": "6299",
    "end": "12139"
  },
  {
    "text": "in.net and Azure for cloud applications my name is Alex thiser I'm from the",
    "start": "12139",
    "end": "18660"
  },
  {
    "text": "Netherlands and I work at a company called experience and we help customers move to the cloud in general and the",
    "start": "18660",
    "end": "25619"
  },
  {
    "text": "step to the cloud is um you know a quite a big step and the instrumentation part is",
    "start": "25619",
    "end": "30840"
  },
  {
    "text": "something that is often forgotten so with that we really believe that if you",
    "start": "30840",
    "end": "38219"
  },
  {
    "text": "have a devops mindset that it should be all about you know the stuff that you build and you want to operate and run in",
    "start": "38219",
    "end": "43860"
  },
  {
    "text": "production that there should be some you know some feedback loop so you should be able to observe your systems and this is",
    "start": "43860",
    "end": "51300"
  },
  {
    "text": "from the Microsoft documentation they have a monitoring checklist for if you want to do devops I've highlighted three",
    "start": "51300",
    "end": "57840"
  },
  {
    "text": "of the four that are there make your systems observable and then there's things with logs and metrics and that's",
    "start": "57840",
    "end": "63480"
  },
  {
    "text": "the main focus of today we will briefly touch on alerts and notifications but",
    "start": "63480",
    "end": "68939"
  },
  {
    "text": "the first two are like the big thing and the theme for this session",
    "start": "68939",
    "end": "74280"
  },
  {
    "text": "now okay let's say that you're the devops engineer and with that I don't mean the people that build the pipelines",
    "start": "74280",
    "end": "80400"
  },
  {
    "text": "but the people you know like the shirt says we we build it and we we run it we love it you know that we own the thing",
    "start": "80400",
    "end": "87060"
  },
  {
    "text": "and that's why we want to see what is happening when we're building things so you know just imagine on an average day",
    "start": "87060",
    "end": "93720"
  },
  {
    "text": "um you pick up items from the backlog and you start working on it you develop a new feature or something and that's",
    "start": "93720",
    "end": "100020"
  },
  {
    "text": "where you have your inner loop a fast loop that gives you you know isolated",
    "start": "100020",
    "end": "105299"
  },
  {
    "text": "development and testing and a quick way of going back that if things don't work",
    "start": "105299",
    "end": "111299"
  },
  {
    "text": "you can fix them but once you're happy and satisfied you know whichever branching strategy it is that you use",
    "start": "111299",
    "end": "117479"
  },
  {
    "text": "you probably commit your your changes put it in the code repository you'll run on the tests",
    "start": "117479",
    "end": "124619"
  },
  {
    "text": "from your CI CD pipelines and then finally you put it out into your",
    "start": "124619",
    "end": "130560"
  },
  {
    "text": "environment so you start hosting it and you might have multiple environments but eventually will end up in production",
    "start": "130560",
    "end": "136980"
  },
  {
    "text": "and what I see a lot and maybe you recognize this is that production is",
    "start": "136980",
    "end": "142319"
  },
  {
    "text": "just like it's there but we don't really know what it's doing so whenever the customers call you know your website is",
    "start": "142319",
    "end": "148319"
  },
  {
    "text": "down or it's behaving weirdly that's that's where you're like oh I I would have wanted to know that or at least see",
    "start": "148319",
    "end": "155220"
  },
  {
    "text": "what is going on so the observability of your system is a is a big thing",
    "start": "155220",
    "end": "160260"
  },
  {
    "text": "um because if you can see what is happening in your environments then though there's there's a very rich",
    "start": "160260",
    "end": "166379"
  },
  {
    "text": "second feedback loop that is I think essential for for devops",
    "start": "166379",
    "end": "173340"
  },
  {
    "text": "so that's where you see how your application is behaving how it's doing and you get a lot of feedback from that",
    "start": "173340",
    "end": "179459"
  },
  {
    "text": "it it might just be the errors the things that go wrong but it could also be Usage Now which new features are",
    "start": "179459",
    "end": "185700"
  },
  {
    "text": "being used and how are they being used um so very valuable we need to gather that instrumentation data like your your",
    "start": "185700",
    "end": "193019"
  },
  {
    "text": "panel with all the lights and numbers that tell you how things are going and if you monitor those you know that's",
    "start": "193019",
    "end": "199019"
  },
  {
    "text": "where you get your outer loop and that's where you can see what is happening there um change things accordingly through the",
    "start": "199019",
    "end": "205319"
  },
  {
    "text": "inner loop and you know make new items on your uh on your backlog if need be to",
    "start": "205319",
    "end": "210599"
  },
  {
    "text": "adjust accordingly with the things you found out from production and it might just be that performance degraded",
    "start": "210599",
    "end": "215879"
  },
  {
    "text": "because you had a new search routine or algorithm and it turns out that it's not that",
    "start": "215879",
    "end": "221580"
  },
  {
    "text": "behaving that as well but as well as you would have thought you know CPU usage might have gone dramatically up",
    "start": "221580",
    "end": "227940"
  },
  {
    "text": "so but at least if you know if you have this happy developer you know loving the devops stuff",
    "start": "227940",
    "end": "234379"
  },
  {
    "text": "and the reason that this is important is um that especially if you go to Cloud you um you build your application in a much",
    "start": "234420",
    "end": "240720"
  },
  {
    "text": "more distributed way and that means that there's many moving parts and they interact with each other",
    "start": "240720",
    "end": "245879"
  },
  {
    "text": "and if things go bad it might just escalate that's one side of the story but it also means that you're dependent",
    "start": "245879",
    "end": "251939"
  },
  {
    "text": "on on other resources other moving elements in your solution and seeing how",
    "start": "251939",
    "end": "258120"
  },
  {
    "text": "things work and where things are going and where there might be bottlenecks or things stopping or outages or whatever",
    "start": "258120",
    "end": "263940"
  },
  {
    "text": "that's where you need the um you need something to help you tackle",
    "start": "263940",
    "end": "270060"
  },
  {
    "text": "that complexity of your application and getting some insights there the the area is called application",
    "start": "270060",
    "end": "275940"
  },
  {
    "text": "performance monitoring but it's not um it's not performance in the sense of how fast is this it's more about you know",
    "start": "275940",
    "end": "282720"
  },
  {
    "text": "how well is it doing so it could be speed could be resource usage like Memories",
    "start": "282720",
    "end": "288360"
  },
  {
    "text": "um the the CPU but also outbound connections and things like that and the",
    "start": "288360",
    "end": "294600"
  },
  {
    "text": "things that we put in there ourselves now to help you out there's a there's a whole variety of uh of APM the",
    "start": "294600",
    "end": "301440"
  },
  {
    "text": "application performs monitoring tools um you can choose whichever one fits best or you might already be using",
    "start": "301440",
    "end": "308340"
  },
  {
    "text": "um today we'll focus on Azure monitor because that's you know the the what the session is about it's about it doing",
    "start": "308340",
    "end": "313919"
  },
  {
    "text": "this in Azure with all the tools integrated into azure",
    "start": "313919",
    "end": "319040"
  },
  {
    "text": "all right so let's zoom in on that just a little bit because if you build a",
    "start": "319139",
    "end": "324419"
  },
  {
    "text": "Azure based application preferably in.net but that's not really necessary then Azure monitor is the place where",
    "start": "324419",
    "end": "332100"
  },
  {
    "text": "you want to observe and see all things and it's comprised of two parts the Azure monitor logs and the metrics",
    "start": "332100",
    "end": "338759"
  },
  {
    "text": "the logs is where log analytics and the workspaces live and the monitor for the",
    "start": "338759",
    "end": "345300"
  },
  {
    "text": "metrics is where you can get insights this this is visible in multiple places",
    "start": "345300",
    "end": "351360"
  },
  {
    "text": "but you won't really see them as such so it's there if you for example do a log",
    "start": "351360",
    "end": "357360"
  },
  {
    "text": "analytics workspace with application insights and we'll get to that later on",
    "start": "357360",
    "end": "362639"
  },
  {
    "text": "now the good thing is with if you have a homogeneous environment with a lot of",
    "start": "362639",
    "end": "368759"
  },
  {
    "text": "azure elements in there is that you'll get a lot of things from Azure for free because it also outputs all the",
    "start": "368759",
    "end": "375900"
  },
  {
    "text": "information to this location as well to these resources so for example your Azure active directory any interaction",
    "start": "375900",
    "end": "382800"
  },
  {
    "text": "there all that stuff will be logged there so you can find all the interactions with Azure ad there",
    "start": "382800",
    "end": "390360"
  },
  {
    "text": "whatever happens inside of your Azure subscriptions the activities you know creation of resources who does what is",
    "start": "390360",
    "end": "397020"
  },
  {
    "text": "also put into that logs so you'll get those and then with your Azure resources combining resource groups you'll get a",
    "start": "397020",
    "end": "403919"
  },
  {
    "text": "lot of Diagnostics as well most of the resources allow you to specify a log",
    "start": "403919",
    "end": "409620"
  },
  {
    "text": "analytics workspace which then uses the same thing to the same buckets to put everything together",
    "start": "409620",
    "end": "416039"
  },
  {
    "text": "so that's where you start you know getting more and more application specific but you know as developers",
    "start": "416039",
    "end": "423600"
  },
  {
    "text": "um like I think most of you are the the cloud applications that we build you know that could be based on.net core",
    "start": "423600",
    "end": "430139"
  },
  {
    "text": "with new get packages and some Telemetry libraries that you'll be using allows",
    "start": "430139",
    "end": "436139"
  },
  {
    "text": "you to send more just than than just the other stuff and most of that stuff is",
    "start": "436139",
    "end": "441240"
  },
  {
    "text": "what I like to consider control plane based so it's it's the interaction with and the xs2",
    "start": "441240",
    "end": "447080"
  },
  {
    "text": "the resources are also about the data and the stuff that is going on in there so the the applicational side of things",
    "start": "447080",
    "end": "454440"
  },
  {
    "text": "and your application obviously is much about you know what happens in my application how many conversions did we",
    "start": "454440",
    "end": "460620"
  },
  {
    "text": "get in the webshop for example those could be really nice metrics",
    "start": "460620",
    "end": "466139"
  },
  {
    "text": "um all right so good thing is that if you take this entire stack you've got everything covered in your application",
    "start": "466139",
    "end": "472259"
  },
  {
    "text": "from the underlying resources up into the um the actual logic that you're",
    "start": "472259",
    "end": "478440"
  },
  {
    "text": "running and you can combine it and you can you can see all the information together",
    "start": "478440",
    "end": "485060"
  },
  {
    "text": "Focus for uh for today all right so how do you do this this",
    "start": "485160",
    "end": "490620"
  },
  {
    "text": "application instrumentation so there there's four parts of this so there's logging",
    "start": "490620",
    "end": "496919"
  },
  {
    "text": "um that's recording stuff there's tracing following stuff the metrics that's numbers and there's the health",
    "start": "496919",
    "end": "503940"
  },
  {
    "text": "and now how are we doing so with those four that's four things that your application can do to provide richer",
    "start": "503940",
    "end": "510900"
  },
  {
    "text": "instrumentation um so okay with this um how do you get that from your",
    "start": "510900",
    "end": "517800"
  },
  {
    "text": "application well the logging tracing and metrics are being pushed out so you need to collect them",
    "start": "517800",
    "end": "524640"
  },
  {
    "text": "and then you monitor them obviously like we saw before but the health information in general but not always is being",
    "start": "524640",
    "end": "532019"
  },
  {
    "text": "watched so it's being pulled from a health endpoint and that's like how is the application doing or are you ready",
    "start": "532019",
    "end": "538740"
  },
  {
    "text": "to uh to receive traffic for example now this this is um how you can do",
    "start": "538740",
    "end": "544260"
  },
  {
    "text": "things in the basis there are ways for your health for example to push out metrics so you can see statistics of the",
    "start": "544260",
    "end": "552300"
  },
  {
    "text": "health information being pushed out as numbers and you can interchange tracing and log",
    "start": "552300",
    "end": "558420"
  },
  {
    "text": "in with one another but that's where we get onto a slippery slope because you know you should be very conscious of the",
    "start": "558420",
    "end": "564600"
  },
  {
    "text": "distinction between logging and tracing um once it's there you know put it to",
    "start": "564600",
    "end": "571260"
  },
  {
    "text": "good use and there's a bunch of things that you can do with it so um just to give you an idea obviously",
    "start": "571260",
    "end": "577320"
  },
  {
    "text": "there's a you know you can analyze things see how it's going time series and then see the trends there's alerting",
    "start": "577320",
    "end": "584040"
  },
  {
    "text": "when you know things go above or below certain thresholds or occurrence numbers that's when you want to be notified",
    "start": "584040",
    "end": "591480"
  },
  {
    "text": "um there's insights with dashboards there's profiling if you really want to dig down in situations where things are",
    "start": "591480",
    "end": "597600"
  },
  {
    "text": "not behaving as expected and the metric streaming is you know with its high volumes of metrics you can absorb that",
    "start": "597600",
    "end": "603899"
  },
  {
    "text": "as well I think this is maybe it's a bit of a",
    "start": "603899",
    "end": "609120"
  },
  {
    "text": "crowded slide so uh you you can you know work your way through all the things that are mentioned there",
    "start": "609120",
    "end": "614459"
  },
  {
    "text": "but I wanna what I want to highlight here is that especially the first two columns are very important to keep apart",
    "start": "614459",
    "end": "622019"
  },
  {
    "text": "you know things that you log are things that you might want to see a year down",
    "start": "622019",
    "end": "627120"
  },
  {
    "text": "the line and still go back and see okay at this day what happened with those 20 seals that we had so important things",
    "start": "627120",
    "end": "634500"
  },
  {
    "text": "that are worth recording for a longer time it's it's sometimes used as Trace",
    "start": "634500",
    "end": "640200"
  },
  {
    "text": "information you know what we want to know in a production situation why did this algorithm not behave correctly",
    "start": "640200",
    "end": "646500"
  },
  {
    "text": "which things went in the parameters or the arguments of a certain routine and sometimes you know you do the logging to",
    "start": "646500",
    "end": "654060"
  },
  {
    "text": "to do the to find out what is going in and what is happening inside so your sprinkle all of your code with all these",
    "start": "654060",
    "end": "661140"
  },
  {
    "text": "log statements and you might do you know say log informational or something so it's not that important",
    "start": "661140",
    "end": "667200"
  },
  {
    "text": "but it's not the tracing part tracing is about flow and and things calling each",
    "start": "667200",
    "end": "672240"
  },
  {
    "text": "other so if you want to do that then you should look into the area that is dedicated and intended for tracing so my",
    "start": "672240",
    "end": "679860"
  },
  {
    "text": "message here is don't misuse logging for tracing and obviously it's a fuzzy area",
    "start": "679860",
    "end": "686279"
  },
  {
    "text": "so there's there's no strict rules there but just be very conscious about it well the metrics are about numbers so that's",
    "start": "686279",
    "end": "692399"
  },
  {
    "text": "a quantitative things that you output and that you can measure and look at the",
    "start": "692399",
    "end": "697620"
  },
  {
    "text": "health we talked about how are we doing especially in um you know if you want to have alerts",
    "start": "697620",
    "end": "703560"
  },
  {
    "text": "on availability that's very useful but it's also very useful if you're running a kubernetes cluster for example because",
    "start": "703560",
    "end": "709500"
  },
  {
    "text": "it can look at your the health of your parts that are running and decide that it needs to recycle one of the parts if",
    "start": "709500",
    "end": "715380"
  },
  {
    "text": "it's not indicating that it's healthy or maybe a degraded state and the order is",
    "start": "715380",
    "end": "720660"
  },
  {
    "text": "something different as well you know that's that's the things that you want to prove later on usually security",
    "start": "720660",
    "end": "726480"
  },
  {
    "text": "related and it's not logging so keep those distinct as well",
    "start": "726480",
    "end": "732240"
  },
  {
    "text": "all right so I'll try to be brief in the first part of the logging um because I think you've seen much of",
    "start": "732240",
    "end": "739079"
  },
  {
    "text": "it but just to summarize so to speak all the things that you can do with the built-in uh corefx libraries of.net",
    "start": "739079",
    "end": "747660"
  },
  {
    "text": "um so the flow that you have if you want to log something the gray area is your",
    "start": "747660",
    "end": "753360"
  },
  {
    "text": "application you will use a nuget package it might be a different one you might",
    "start": "753360",
    "end": "758399"
  },
  {
    "text": "use Siri log or analog or something different but the one that's built in is actually pretty good I think and that's",
    "start": "758399",
    "end": "765480"
  },
  {
    "text": "your logging stuff that's coming out it's a long message that you output it has a certain category and it has a",
    "start": "765480",
    "end": "772320"
  },
  {
    "text": "level of severity the login framework and then you have log providers which sometimes confuses",
    "start": "772320",
    "end": "778800"
  },
  {
    "text": "me so what what do you mean log provider but it provides a place for the logs to be stored",
    "start": "778800",
    "end": "784399"
  },
  {
    "text": "and then you have the filters that allow you to tweet down the the various",
    "start": "784399",
    "end": "790760"
  },
  {
    "text": "information that is logged based on the severity or the destination so you can",
    "start": "790760",
    "end": "797040"
  },
  {
    "text": "be you know have multiple providers listening in on the logs and they might filter in a different way each of them",
    "start": "797040",
    "end": "805680"
  },
  {
    "text": "now there's there's a there's a bunch of the those that are provided out of the box the in the new",
    "start": "805680",
    "end": "812700"
  },
  {
    "text": "um The Lean Startup that you also find with minimal web apis or you know if you do don't make six or seven based",
    "start": "812700",
    "end": "819540"
  },
  {
    "text": "um applications you'll you'll see that the builder.logging is your go-to place",
    "start": "819540",
    "end": "824639"
  },
  {
    "text": "where you configure everything and where you would register all the log providers that you would want to have so that's",
    "start": "824639",
    "end": "830700"
  },
  {
    "text": "all the ads that you do at console at debug um and this is how you can set it up and",
    "start": "830700",
    "end": "836940"
  },
  {
    "text": "configure them and that's pretty easy under the covers what happens if you do those things is that there's a logger",
    "start": "836940",
    "end": "843240"
  },
  {
    "text": "Factory and all the providers that you've added will be registered inside of the log Factory and the log Factory",
    "start": "843240",
    "end": "849360"
  },
  {
    "text": "will create the I logger of T implementations so I logger is the thing",
    "start": "849360",
    "end": "856079"
  },
  {
    "text": "that you can inject logger of T is what it actually is and the t is the place",
    "start": "856079",
    "end": "861720"
  },
  {
    "text": "where you want to use it so usually the t is a type for your controller class",
    "start": "861720",
    "end": "867120"
  },
  {
    "text": "for example now um yeah the the things you do with the",
    "start": "867120",
    "end": "873839"
  },
  {
    "text": "logger is you log things and you have all the severity levels nicely",
    "start": "873839",
    "end": "879540"
  },
  {
    "text": "um given to you so it's from all the way from critical you know this this is over",
    "start": "879540",
    "end": "884820"
  },
  {
    "text": "game over um to um the the trace and the information",
    "start": "884820",
    "end": "889920"
  },
  {
    "text": "um I believe the uh they're not in correct order of um the the significance but debug And",
    "start": "889920",
    "end": "895740"
  },
  {
    "text": "Trades are the lowest ones in terms of very noisy so things that that happen inside of a loop that is iterated many",
    "start": "895740",
    "end": "901920"
  },
  {
    "text": "times probably if you um if it would be significant you know then you would do",
    "start": "901920",
    "end": "907680"
  },
  {
    "text": "trace or debug so that that you know that it doesn't surface in just regular logging because that would just float",
    "start": "907680",
    "end": "914220"
  },
  {
    "text": "float the the log provider",
    "start": "914220",
    "end": "918560"
  },
  {
    "text": "the um the severity levels and the categories um you can see the the real order at the",
    "start": "919800",
    "end": "926220"
  },
  {
    "text": "right the hierarchical structure of the categories is much like namespaces and",
    "start": "926220",
    "end": "931740"
  },
  {
    "text": "that allows you to be very specific you know if things come from this category this is the the level that I want to add",
    "start": "931740",
    "end": "938579"
  },
  {
    "text": "to it the the the the string for the category",
    "start": "938579",
    "end": "943800"
  },
  {
    "text": "with the the separation and with dots is determine if you use the logger of T",
    "start": "943800",
    "end": "949320"
  },
  {
    "text": "from the uh the namespace and the the class name or the type name so you see",
    "start": "949320",
    "end": "954839"
  },
  {
    "text": "that if you have a namespace with the web API controllers and you have a class",
    "start": "954839",
    "end": "960060"
  },
  {
    "text": "leaderboard controller that will be your thing and you can choose at what level you want to you know specify",
    "start": "960060",
    "end": "966959"
  },
  {
    "text": "how the what the severity level is and for which providers it's configured how",
    "start": "966959",
    "end": "973160"
  },
  {
    "text": "so filtering those log messages um like I said if you use I logger of T",
    "start": "973500",
    "end": "979440"
  },
  {
    "text": "it goes to multiple places every log provider registered but you would configure them in in probably in this",
    "start": "979440",
    "end": "986459"
  },
  {
    "text": "way so that's from your app settings Json or any other means that you can influence the the configuration system",
    "start": "986459",
    "end": "992820"
  },
  {
    "text": "you'll do a configuration of your providers with this information and you",
    "start": "992820",
    "end": "997980"
  },
  {
    "text": "can see that there's a default section that is just log level and then you say okay for default so if that's that's for",
    "start": "997980",
    "end": "1006259"
  },
  {
    "text": "everything it's information but if it comes from Microsoft so Microsoft dot something extensions dependency",
    "start": "1006259",
    "end": "1013040"
  },
  {
    "text": "injection there would be warning but if it's hosting lifetime that's the startup of",
    "start": "1013040",
    "end": "1018560"
  },
  {
    "text": "your asp.net core application or your your worker service then we want information again as well so a little",
    "start": "1018560",
    "end": "1024860"
  },
  {
    "text": "bit more information to see what is happening for each of the providers that are",
    "start": "1024860",
    "end": "1030678"
  },
  {
    "text": "specific and different you would add you would add a new section that gives",
    "start": "1030679",
    "end": "1037819"
  },
  {
    "text": "you well in this case console so that's with ad console you would log to that and you can specify a different log",
    "start": "1037819",
    "end": "1043880"
  },
  {
    "text": "level same section as above but you can tweak the values in a different way and",
    "start": "1043880",
    "end": "1049100"
  },
  {
    "text": "there's things with Scopes that I'll skip on today but um you know you can scope multiple log messages together",
    "start": "1049100",
    "end": "1055640"
  },
  {
    "text": "because they belong together and if you so you need to say include scopes",
    "start": "1055640",
    "end": "1062000"
  },
  {
    "text": "all right we'll have a look at that with some",
    "start": "1062000",
    "end": "1068419"
  },
  {
    "text": "some things all right let me see there we go",
    "start": "1068419",
    "end": "1077080"
  },
  {
    "text": "all right so what I have in this demo and we will show some I'll show some stuff now so we can later at the close",
    "start": "1077179",
    "end": "1085340"
  },
  {
    "text": "to the end we can you can have a look at how to collect all this information the",
    "start": "1085340",
    "end": "1091580"
  },
  {
    "text": "it's a web API with a web app and it kind of looks like this let me just",
    "start": "1091580",
    "end": "1096860"
  },
  {
    "text": "start it again",
    "start": "1096860",
    "end": "1099700"
  },
  {
    "text": "so this is by the way the uh the health check so if it comes alive we should see that this is uh going green again",
    "start": "1102320",
    "end": "1110500"
  },
  {
    "text": "and let's see if it's starting up there we go",
    "start": "1115340",
    "end": "1120100"
  },
  {
    "text": "we'll get back to that let's see if we refresh this that we have visuals yes so this is the uh the web API",
    "start": "1123799",
    "end": "1130940"
  },
  {
    "text": "um what it does it uses Entity framework core to retrieves from high scores some seeded values so if you try this out and",
    "start": "1130940",
    "end": "1138260"
  },
  {
    "text": "we ask for Json and we execute it we'll get this this bit of information",
    "start": "1138260",
    "end": "1144919"
  },
  {
    "text": "here that's to see the data if you go to the home page and refresh that you'll",
    "start": "1144919",
    "end": "1151400"
  },
  {
    "text": "see that this web application is retrieving the data and displaying it here health checks are okay now so",
    "start": "1151400",
    "end": "1157100"
  },
  {
    "text": "application is running so how do we get to that",
    "start": "1157100",
    "end": "1162760"
  },
  {
    "text": "that would be here let's go to",
    "start": "1164179",
    "end": "1169580"
  },
  {
    "text": "program CS so here we have the log providers I've",
    "start": "1169580",
    "end": "1176299"
  },
  {
    "text": "added the application insights so the remember is for later on this means that",
    "start": "1176299",
    "end": "1181460"
  },
  {
    "text": "we're sending out logs to application insights",
    "start": "1181460",
    "end": "1186919"
  },
  {
    "text": "we also add SEC and I'll explain that later on and we have the simple console",
    "start": "1186919",
    "end": "1192380"
  },
  {
    "text": "that output outputs it there which you can influence we know how do you want to do it do you want to have the color",
    "start": "1192380",
    "end": "1197480"
  },
  {
    "text": "Behavior or just ignore that so essentially we have these two but the",
    "start": "1197480",
    "end": "1204980"
  },
  {
    "text": "by using this thing here the create Builder and I can show that in the web",
    "start": "1204980",
    "end": "1211340"
  },
  {
    "text": "app as well where I use the old type of startup where we have the create default Builder",
    "start": "1211340",
    "end": "1217760"
  },
  {
    "text": "now let me zoom in just a little bit you see that the oh",
    "start": "1217760",
    "end": "1225880"
  },
  {
    "text": "let's try that again there we go",
    "start": "1225919",
    "end": "1232280"
  },
  {
    "text": "so it says that the logo factor is configured to do console debug and Event",
    "start": "1232280",
    "end": "1237919"
  },
  {
    "text": "Source in this line here so those are the ones you get for free and if you don't want to have those",
    "start": "1237919",
    "end": "1243860"
  },
  {
    "text": "you could essentially if you start",
    "start": "1243860",
    "end": "1249580"
  },
  {
    "text": "configuring your your log providers you could start with a clear providers",
    "start": "1249580",
    "end": "1256640"
  },
  {
    "text": "so these are all the things that you could add you know the the SEC the simple console system the trace but",
    "start": "1256640",
    "end": "1263000"
  },
  {
    "text": "clear providers allows you to start with a clean slate and then you add the stuff that you only want to have but usually",
    "start": "1263000",
    "end": "1268460"
  },
  {
    "text": "for debugging you know let it just do console and debug and the uh The Event Source would be just fine these are",
    "start": "1268460",
    "end": "1275720"
  },
  {
    "text": "added if you want to be really optimized or in control then you can clear it out all right then the other thing",
    "start": "1275720",
    "end": "1282820"
  },
  {
    "text": "once you start using it you can do you need to get to the logger implementation",
    "start": "1282820",
    "end": "1288260"
  },
  {
    "text": "I'm showing here one strategy that's the ilogger factory if you have that injected you can create your own logger",
    "start": "1288260",
    "end": "1295580"
  },
  {
    "text": "and you can create multiple ones so you don't have to do multiple I logger of the injections and keep them all",
    "start": "1295580",
    "end": "1301760"
  },
  {
    "text": "together sub-optimal maybe but also if you want to control the category yourself if you",
    "start": "1301760",
    "end": "1308840"
  },
  {
    "text": "do a create logger without the generic you can specify the category name yourself so that's when you can tweak it",
    "start": "1308840",
    "end": "1315440"
  },
  {
    "text": "to whatever it is that you like and once that you start logging and what",
    "start": "1315440",
    "end": "1322159"
  },
  {
    "text": "I've done here is um for demo purpose obviously we're doing a log error log",
    "start": "1322159",
    "end": "1327559"
  },
  {
    "text": "warning log information to see how these are logged individually and the with the different severity levels and we'll get",
    "start": "1327559",
    "end": "1333860"
  },
  {
    "text": "back to these statements here and see what is happening but if we",
    "start": "1333860",
    "end": "1338919"
  },
  {
    "text": "go back to this to here and",
    "start": "1338919",
    "end": "1345500"
  },
  {
    "text": "run it just once more then it's kind of hard to see because of",
    "start": "1345500",
    "end": "1350600"
  },
  {
    "text": "all the things that are happening but let's just stop this go to the output and then if we watch this just above",
    "start": "1350600",
    "end": "1359120"
  },
  {
    "text": "the things here let me see",
    "start": "1359120",
    "end": "1365740"
  },
  {
    "text": "it's kind of hard to figure out with all the noise that is there but I believe that's there retrieving the score list",
    "start": "1367220",
    "end": "1372559"
  },
  {
    "text": "with a limit of 10 that's the info the warn and a little bit above that that's the",
    "start": "1372559",
    "end": "1379580"
  },
  {
    "text": "fail for the error that we wrote so we see those logs appearing down here in the debug window of Visual Studio",
    "start": "1379580",
    "end": "1387820"
  },
  {
    "text": "all right now believe it or not I I used to study or I",
    "start": "1389299",
    "end": "1395960"
  },
  {
    "text": "have studied physics technical physics in particular so I had my fair share of quantum mechanics and Quantum statistics",
    "start": "1395960",
    "end": "1403419"
  },
  {
    "text": "we learned that there's Quantum State and Quantum state is kind of weird because you know we're like a spin of a",
    "start": "1403419",
    "end": "1410179"
  },
  {
    "text": "a quark can be up or down but it it's actually both Until You",
    "start": "1410179",
    "end": "1417020"
  },
  {
    "text": "observe it before that you don't know you might have heard about Schrodinger's Cat the experiment thought experiment",
    "start": "1417020",
    "end": "1422840"
  },
  {
    "text": "there's a cat that can you know inside step on something and then there's some poison so it's a really weird experiment",
    "start": "1422840",
    "end": "1429220"
  },
  {
    "text": "but it might eat it or not so it's either dead or alive but if it's in the",
    "start": "1429220",
    "end": "1435020"
  },
  {
    "text": "closed box and we don't know it's half alive half that so that's kind of weird but as soon as you open the box You",
    "start": "1435020",
    "end": "1441200"
  },
  {
    "text": "observe and then it forces you in one of the two Quantum States okay A little Segway into how does this",
    "start": "1441200",
    "end": "1448820"
  },
  {
    "text": "apply to uh messages and log messages I I like to",
    "start": "1448820",
    "end": "1454039"
  },
  {
    "text": "think of that there's the same Duality you know it can be it can be both um what do we mean so first logs are for",
    "start": "1454039",
    "end": "1461240"
  },
  {
    "text": "us you know we want to read and see okay so we're retrieving something with a search limit of 10. that's very good that we can read it as humans but for a",
    "start": "1461240",
    "end": "1468440"
  },
  {
    "text": "machine if you want to do you know the non-human side of things it's kind of",
    "start": "1468440",
    "end": "1473539"
  },
  {
    "text": "hard to look at that line and you probably need regular expressions or say something to say okay these are the",
    "start": "1473539",
    "end": "1480559"
  },
  {
    "text": "meaningful words and things and the 10 there that's actually what we want to have so you know sometimes you want one",
    "start": "1480559",
    "end": "1487280"
  },
  {
    "text": "sometimes you want the other and it's you know and but it's when When You observe it you want would want it to be",
    "start": "1487280",
    "end": "1493039"
  },
  {
    "text": "either one so you know and a lot of the logs that we write are just textual",
    "start": "1493039",
    "end": "1498140"
  },
  {
    "text": "things so just just the the line of uh with some string information but we would like to have the other side as",
    "start": "1498140",
    "end": "1504260"
  },
  {
    "text": "well because we knew when we logged the message that we pushed in the limit that that was a significant",
    "start": "1504260",
    "end": "1510860"
  },
  {
    "text": "number to us so semantic logging or structured logging is what solved this problem",
    "start": "1510860",
    "end": "1517880"
  },
  {
    "text": "and you already saw this this line just a moment ago it seems you know like",
    "start": "1517880",
    "end": "1524059"
  },
  {
    "text": "obvious it's like yeah it's just uh you know a formatted string then with some string interpolation but if you look",
    "start": "1524059",
    "end": "1530419"
  },
  {
    "text": "closely this thing the search limit you know it's not a zero it doesn't match up",
    "start": "1530419",
    "end": "1536059"
  },
  {
    "text": "by name so it's it goes together in a positional way but the left side of it is the um",
    "start": "1536059",
    "end": "1545539"
  },
  {
    "text": "so the the string with the the curlies that's the templates there that we have",
    "start": "1545539",
    "end": "1550640"
  },
  {
    "text": "the limit is the value and they are kept in the one state and if you want to have",
    "start": "1550640",
    "end": "1556580"
  },
  {
    "text": "a string it's put together and then you get the string so it's it's either regard regarding your observation",
    "start": "1556580",
    "end": "1563659"
  },
  {
    "text": "now not every log provider supports that the ones that um you know are are out",
    "start": "1563659",
    "end": "1569299"
  },
  {
    "text": "there and pretty uh used pretty often are SEC which goes together with Siri log but not necessarily and you have",
    "start": "1569299",
    "end": "1576440"
  },
  {
    "text": "application insights those are capable of storing that information that rich information and keep it separate and put",
    "start": "1576440",
    "end": "1582980"
  },
  {
    "text": "it together if needed so let's see that",
    "start": "1582980",
    "end": "1589520"
  },
  {
    "text": "so we already did the this logging here and just to show you",
    "start": "1589520",
    "end": "1596360"
  },
  {
    "text": "that it has this this template and this placeholder and it has the limit",
    "start": "1596360",
    "end": "1601820"
  },
  {
    "text": "now if we start this running again I'll show you that this is all in a Docker",
    "start": "1601820",
    "end": "1607700"
  },
  {
    "text": "compose so in the docker compose",
    "start": "1607700",
    "end": "1611860"
  },
  {
    "text": "we have the composition of the web API and the web app that's the moving part",
    "start": "1612799",
    "end": "1617960"
  },
  {
    "text": "of our application and then we have the override that shows the configuration for the web API",
    "start": "1617960",
    "end": "1626179"
  },
  {
    "text": "the web app and then it says the database so we can test with the database but it also has",
    "start": "1626179",
    "end": "1633380"
  },
  {
    "text": "SAQ as a container so we're running a the place where we would want to store",
    "start": "1633380",
    "end": "1638900"
  },
  {
    "text": "this semantic data it's running from this SEC",
    "start": "1638900",
    "end": "1645260"
  },
  {
    "text": "container and it's running at this port 5341 I believe that's the default Port if you run this yourself as well so you",
    "start": "1645260",
    "end": "1652039"
  },
  {
    "text": "can run in an official production environment but I'm just running it from a composition so I can neatly test it which means that if we go to to here",
    "start": "1652039",
    "end": "1661580"
  },
  {
    "text": "then if I just refresh this or do it like this or we go to the to",
    "start": "1661580",
    "end": "1667820"
  },
  {
    "text": "the thing here we have this and then we can say okay so we were looking for the",
    "start": "1667820",
    "end": "1673100"
  },
  {
    "text": "the log that said retrieving and these are the ones that we have let's create one with the difference the value",
    "start": "1673100",
    "end": "1680299"
  },
  {
    "text": "so we can see that up here as well so let's say 42",
    "start": "1680299",
    "end": "1687740"
  },
  {
    "text": "all right see 42 three times you see the Dots here",
    "start": "1688460",
    "end": "1694039"
  },
  {
    "text": "for um the um the severity level where you can filter and just pick out the ones that are warnings uh errors or both",
    "start": "1694039",
    "end": "1701000"
  },
  {
    "text": "but if you open up one of these you'll see that there's a lot of metadata attached and this one is",
    "start": "1701000",
    "end": "1707659"
  },
  {
    "text": "the one that we're looking for so this this surge limit of 42 that's where we can say all right so we want to have",
    "start": "1707659",
    "end": "1715640"
  },
  {
    "text": "this search limit and it knows that it's a semantic thing so bigger than 10",
    "start": "1715640",
    "end": "1723158"
  },
  {
    "text": "and you can see that it filters out based on the search limit and now the the tricky part is once you",
    "start": "1723440",
    "end": "1729140"
  },
  {
    "text": "have this in place is to find the right terms because this can search across multiple log messages of div in",
    "start": "1729140",
    "end": "1734720"
  },
  {
    "text": "different locations so wherever search name it appears this will just you know find it even if there's more information",
    "start": "1734720",
    "end": "1740539"
  },
  {
    "text": "there it knows where it is so I think this is extremely powerful if you want to drill down and dig into and if you",
    "start": "1740539",
    "end": "1747020"
  },
  {
    "text": "have domain terms like conversion or you know a customer ID that might be relevant this is what will help you find",
    "start": "1747020",
    "end": "1754520"
  },
  {
    "text": "that semantic information and correlate it all together in search queries",
    "start": "1754520",
    "end": "1760778"
  },
  {
    "text": "now and for the logging um you know keep your logging uh separate application should not be where",
    "start": "1763159",
    "end": "1770840"
  },
  {
    "text": "be aware of the um the log providers that are out there and you should just say this is what I want to say with this",
    "start": "1770840",
    "end": "1776899"
  },
  {
    "text": "severity for this category and your log providers and the filtering will take care of the rest you shouldn't make any",
    "start": "1776899",
    "end": "1782240"
  },
  {
    "text": "assumptions there um the other thing your lock severity level",
    "start": "1782240",
    "end": "1787820"
  },
  {
    "text": "what would you think um if you had an exception you know you",
    "start": "1787820",
    "end": "1793100"
  },
  {
    "text": "do a try catch and you do a log inside of there just think for a second what severity level will you do",
    "start": "1793100",
    "end": "1800600"
  },
  {
    "text": "and you might think well usually I see in all the samples it's like uh catch something logger DOT log error because",
    "start": "1800600",
    "end": "1808279"
  },
  {
    "text": "we have an error right but it means that something is really happening in your application and if you have alerts",
    "start": "1808279",
    "end": "1814340"
  },
  {
    "text": "trigger to okay if there's errors in our application we need to know about it but catching something in a you know um",
    "start": "1814340",
    "end": "1821559"
  },
  {
    "text": "in a way that we predict might just be informational or or even lower like okay",
    "start": "1821559",
    "end": "1826940"
  },
  {
    "text": "we took care of it you know we caught it it's all fine so be wary of the severity",
    "start": "1826940",
    "end": "1832279"
  },
  {
    "text": "level and choose it carefully because as a devops person you might be paid with page Judy victorops or whatever tool you",
    "start": "1832279",
    "end": "1839539"
  },
  {
    "text": "have for on-call moments that you'll get you know oh man",
    "start": "1839539",
    "end": "1844940"
  },
  {
    "text": "okay so it's catching all the timeouts because sometimes the connection is slow to this other thing that we're calling",
    "start": "1844940",
    "end": "1852799"
  },
  {
    "text": "all right now logging we covered logging then the next",
    "start": "1852799",
    "end": "1859820"
  },
  {
    "text": "part is about tracing tracing there's two sides that I would",
    "start": "1859820",
    "end": "1864919"
  },
  {
    "text": "like to highlight that's the the stuff that you probably already saw from the very very beginning of.net and then",
    "start": "1864919",
    "end": "1872059"
  },
  {
    "text": "there's new stuff that has been introduced in.net 5 and onwards so I",
    "start": "1872059",
    "end": "1878120"
  },
  {
    "text": "call it the good old diagnostic Trace is where you don't just do a logger log but it's Trace",
    "start": "1878120",
    "end": "1885020"
  },
  {
    "text": "um dot debug or write debug or you can write stuff to the trace",
    "start": "1885020",
    "end": "1890720"
  },
  {
    "text": "with tracing remember that that's about the flow of your application so you need to indicate so this is what is happening",
    "start": "1890720",
    "end": "1897140"
  },
  {
    "text": "now this is where we are this stage or these are the variables you can just Trace everything and it can be high",
    "start": "1897140",
    "end": "1903440"
  },
  {
    "text": "volume the good thing is that if it's if there's no one listening or it doesn't",
    "start": "1903440",
    "end": "1910520"
  },
  {
    "text": "even matter but there might be someone listening or not if if there's no one listening it disappears because it's not",
    "start": "1910520",
    "end": "1915620"
  },
  {
    "text": "locked it's it's just send out like a radio show if somebody's listening then",
    "start": "1915620",
    "end": "1920659"
  },
  {
    "text": "they can choose to do with the information what they like otherwise it disappears and it allows",
    "start": "1920659",
    "end": "1926000"
  },
  {
    "text": "for a publish subscribe pattern so you just put it out there you don't know you publish it and there might be zero or",
    "start": "1926000",
    "end": "1932899"
  },
  {
    "text": "more subscribers you'll find most of this in system Diagnostics that's just like it was at",
    "start": "1932899",
    "end": "1938659"
  },
  {
    "text": "the very beginning and the two things that you have are trace and Trace Source Trace is the oldest oldest tray source",
    "start": "1938659",
    "end": "1944840"
  },
  {
    "text": "is a little bit newer and thing to remember and we'll get to that is it uses activities and that's significant",
    "start": "1944840",
    "end": "1951320"
  },
  {
    "text": "for our story but the two sides is that with the trace that's very easy to use because with",
    "start": "1951320",
    "end": "1959120"
  },
  {
    "text": "Trace you have these options to do Trace error Trace warning Trace information those are the three or you can do right",
    "start": "1959120",
    "end": "1965299"
  },
  {
    "text": "and right ifs and right ifs are conditionals but it is evaluated the if statement so it does take a performance",
    "start": "1965299",
    "end": "1971720"
  },
  {
    "text": "penalty but it allows you to send out information any place without having to",
    "start": "1971720",
    "end": "1976820"
  },
  {
    "text": "inject things so inside of a complex calculation algorithm you don't have to know with classes object model and all",
    "start": "1976820",
    "end": "1984320"
  },
  {
    "text": "the way down there you want to trace something you can just say Trace dot write and write out something very",
    "start": "1984320",
    "end": "1991340"
  },
  {
    "text": "convenient instead of having to inject I logger of T and pass it around all the places where you need to use it a tray",
    "start": "1991340",
    "end": "1998539"
  },
  {
    "text": "source is a little bit more modern it has uh you know things you work you control the the trace data you can trace",
    "start": "1998539",
    "end": "2005080"
  },
  {
    "text": "events which can also be significant um that's that's",
    "start": "2005080",
    "end": "2010120"
  },
  {
    "text": "um you know another way of doing it but you need to wire that up with Statics as yourself and both of them have switches",
    "start": "2010120",
    "end": "2017380"
  },
  {
    "text": "so you can turn it on and off if needed for a situation where you would like to",
    "start": "2017380",
    "end": "2022899"
  },
  {
    "text": "you know investigate so you can switch it on and off like almost like a feature flag",
    "start": "2022899",
    "end": "2029700"
  },
  {
    "text": "um there's a bunch of listeners out there so where it's being sent or who they're the ones that can subscribe",
    "start": "2031179",
    "end": "2037600"
  },
  {
    "text": "um you can see that they are available from from.net framework 2-0 is what I",
    "start": "2037600",
    "end": "2043299"
  },
  {
    "text": "found and um the well.net core has its own implementation of the the trace",
    "start": "2043299",
    "end": "2049000"
  },
  {
    "text": "listeners as well those are more and more cross-platform so they will work on",
    "start": "2049000",
    "end": "2055658"
  },
  {
    "text": "Linux and Mac OS as well how the activities",
    "start": "2055659",
    "end": "2060760"
  },
  {
    "text": "um that's that's kind of a cool thing",
    "start": "2060760",
    "end": "2064560"
  },
  {
    "text": "activities are structures that allow you to have contextual information at the place where you're in so it might be",
    "start": "2066520",
    "end": "2073240"
  },
  {
    "text": "call stack or information regarding your trace and that's that's being",
    "start": "2073240",
    "end": "2080280"
  },
  {
    "text": "managed by for you by the activity class and it travels",
    "start": "2080280",
    "end": "2086200"
  },
  {
    "text": "well across the various threats so when you create one even if you do async",
    "start": "2086200",
    "end": "2091898"
  },
  {
    "text": "calls or you know then it will just travel accordingly and if you ask for",
    "start": "2091899",
    "end": "2097240"
  },
  {
    "text": "activity current you will get the right one so no concerns there with activities typically you add some",
    "start": "2097240",
    "end": "2103960"
  },
  {
    "text": "metadata to it and then you say okay this activity will start now we'll start doing it from that moment on this activity is like a little bubble and",
    "start": "2103960",
    "end": "2110740"
  },
  {
    "text": "things will happen inside of the bubble you can spawn child activities and they are you know related to one another but",
    "start": "2110740",
    "end": "2118420"
  },
  {
    "text": "um everything that happens inside of an activity is is correlated to the same thing so it has correlation inside of",
    "start": "2118420",
    "end": "2124780"
  },
  {
    "text": "activities you can send out stuff that happens inside of your activity so you can track you know the the some particular flow",
    "start": "2124780",
    "end": "2132160"
  },
  {
    "text": "that you have it even works distributed so if you have a call from one place to something else",
    "start": "2132160",
    "end": "2139540"
  },
  {
    "text": "like we have from a web app to our web API you can send out information along",
    "start": "2139540",
    "end": "2145359"
  },
  {
    "text": "with the call out there if both sides play the game they know that they're",
    "start": "2145359",
    "end": "2150420"
  },
  {
    "text": "working on the same thing and a new activity on the other side other process will start based on the original one so",
    "start": "2150420",
    "end": "2157660"
  },
  {
    "text": "we can be correlated all together so you can see flow from one thing to another thing based on those activities and",
    "start": "2157660",
    "end": "2164560"
  },
  {
    "text": "there's two things that um that make good use of this application insights and open Telemetry so if you're into",
    "start": "2164560",
    "end": "2171700"
  },
  {
    "text": "open Telemetry it uses activities under the covers as does the application",
    "start": "2171700",
    "end": "2176859"
  },
  {
    "text": "insights all right so I'll show that in code",
    "start": "2176859",
    "end": "2184420"
  },
  {
    "text": "so we can get back to it later now there's one place in our API where",
    "start": "2184420",
    "end": "2191320"
  },
  {
    "text": "we can submit new high scores so that's the scores controller the scores",
    "start": "2191320",
    "end": "2196599"
  },
  {
    "text": "controller allows you to do a post for your nickname and your game",
    "start": "2196599",
    "end": "2202060"
  },
  {
    "text": "and what we do here is we have this activity we set the start time that's done automatically but if you choose to",
    "start": "2202060",
    "end": "2208000"
  },
  {
    "text": "do it differently you could do so we can add tags to it so we can add the tag",
    "start": "2208000",
    "end": "2213040"
  },
  {
    "text": "gamer with the nickname we just received we do our things so we we start an",
    "start": "2213040",
    "end": "2218500"
  },
  {
    "text": "operation on a Telemetry client that's being injected from application insights",
    "start": "2218500",
    "end": "2225160"
  },
  {
    "text": "Telemetry clients being injected and then we say okay so start an",
    "start": "2225160",
    "end": "2230200"
  },
  {
    "text": "operation for dependencies so we want to you know see we're calling something that is a dependency and this is the",
    "start": "2230200",
    "end": "2236859"
  },
  {
    "text": "activity that should track this operation and then we start doing things now this is a obviously a local",
    "start": "2236859",
    "end": "2244420"
  },
  {
    "text": "dependency to a database we can see later on that databases are already done at the Azure level so we can see a lot",
    "start": "2244420",
    "end": "2251260"
  },
  {
    "text": "of things there but just imagine that this would be some some other thing that",
    "start": "2251260",
    "end": "2256660"
  },
  {
    "text": "you're doing that is a dependency for you in this case it's just Entity framework",
    "start": "2256660",
    "end": "2263200"
  },
  {
    "text": "core and at the very end I'm showing two things so we're tracking an event because if we passed all the way here as",
    "start": "2263200",
    "end": "2270460"
  },
  {
    "text": "we essentially received a new high score and that's like ooh new high score in the leaderboard that might be something that we want to track and we put out",
    "start": "2270460",
    "end": "2278260"
  },
  {
    "text": "this metric so this number for the high score sorry that tracks the value with the points of",
    "start": "2278260",
    "end": "2285760"
  },
  {
    "text": "the new high score doesn't really make sense but this could be a sale in your webshop and the you know the amount the",
    "start": "2285760",
    "end": "2291880"
  },
  {
    "text": "total amount of your sale and then you could see you know what what's the sales doing",
    "start": "2291880",
    "end": "2297339"
  },
  {
    "text": "um if you that is important all right so",
    "start": "2297339",
    "end": "2303880"
  },
  {
    "text": "um we let's just trigger this for a second so we can perhaps see it later on so we'll do a",
    "start": "2303880",
    "end": "2309339"
  },
  {
    "text": "post here we'll try it we'll say lx360 that's my",
    "start": "2309339",
    "end": "2316240"
  },
  {
    "text": "Xbox handle and then I'm not sure what game we should do we already let's do Galaga",
    "start": "2316240",
    "end": "2325420"
  },
  {
    "text": "and we have the Magnificent score of one two three four five six executed",
    "start": "2325420",
    "end": "2332260"
  },
  {
    "text": "and we got a 200 so everything worked let's do a new one",
    "start": "2332260",
    "end": "2339099"
  },
  {
    "text": "two four zero zero zero a big score all right so two new two new scores",
    "start": "2339099",
    "end": "2347140"
  },
  {
    "text": "all right and we'll leave it at that because that's kind of the the gist of it it it's not more than that but you",
    "start": "2347140",
    "end": "2353260"
  },
  {
    "text": "have to do things for it in this case the activities are also in a lot of other places in NET Framework itself",
    "start": "2353260",
    "end": "2359859"
  },
  {
    "text": "so.net you know five six uh later on if you make HTTP calls activities are doing",
    "start": "2359859",
    "end": "2366160"
  },
  {
    "text": "the same thing without you knowing it so there's already a lot of these things taken care of for you",
    "start": "2366160",
    "end": "2373079"
  },
  {
    "text": "all right now then for the new stuff because you know the this this is what you will easily find a little bit more",
    "start": "2373780",
    "end": "2380560"
  },
  {
    "text": "obscure but all the more powerful is uh the the new system Diagnostics tracing",
    "start": "2380560",
    "end": "2386140"
  },
  {
    "text": "so we just talked about system Diagnostics Trace which is a class this is tracing and namespace and inside of",
    "start": "2386140",
    "end": "2393099"
  },
  {
    "text": "it you'll find a bunch of stuff but two important ones are Event Source and event counter",
    "start": "2393099",
    "end": "2398859"
  },
  {
    "text": "and event sources you know can think of it of the tracing and logging side and",
    "start": "2398859",
    "end": "2404079"
  },
  {
    "text": "the counter is about the metrics now if you put this inside of your.net",
    "start": "2404079",
    "end": "2409180"
  },
  {
    "text": "application and we're talking.net 5 and Up it will use an event pipe to push that",
    "start": "2409180",
    "end": "2415960"
  },
  {
    "text": "out so event pipes are something similar to what is a for ltting or event tracing",
    "start": "2415960",
    "end": "2422980"
  },
  {
    "text": "for Windows etw that that's your conduit out of your application to somewhere",
    "start": "2422980",
    "end": "2429520"
  },
  {
    "text": "else out of process the event pipe is cross-platform so the it doesn't tie you like etw does to",
    "start": "2429520",
    "end": "2437560"
  },
  {
    "text": "Windows or LTT that's Linux based it works even for Mac OS so event pipes are",
    "start": "2437560",
    "end": "2443440"
  },
  {
    "text": "a good thing you'll probably not interact with the event pipes directly just know that under the covers they are",
    "start": "2443440",
    "end": "2449320"
  },
  {
    "text": "there and then you have your consumer so again you know it's it's kind of in the",
    "start": "2449320",
    "end": "2454359"
  },
  {
    "text": "tracing and emitting thing so you'll have consumers a couple of obvious ones application insights and you have.net",
    "start": "2454359",
    "end": "2462400"
  },
  {
    "text": "tooling for nettrace.netcounters.net monitor but those can pick up all these things",
    "start": "2462400",
    "end": "2468280"
  },
  {
    "text": "streaming out that you're emitting with Event Source and event counter if you would like to and if there's any",
    "start": "2468280",
    "end": "2475599"
  },
  {
    "text": "reason you could do it in proc as well so you can have your own event listener and listen in on your own events and",
    "start": "2475599",
    "end": "2481060"
  },
  {
    "text": "maybe use it for health information or some other thing that you come up with so this is um the way it works but focus",
    "start": "2481060",
    "end": "2488740"
  },
  {
    "text": "on the left with Event Source and event counter now the the event counters",
    "start": "2488740",
    "end": "2495400"
  },
  {
    "text": "um they they are a bit like performance counters but that's again Windows based this is more cross-platform",
    "start": "2495400",
    "end": "2501700"
  },
  {
    "text": "and in.net in the runtime you know the CLR there's there's already a lot of",
    "start": "2501700",
    "end": "2507339"
  },
  {
    "text": "things in there this is just one section system runtime and you can see what is going on in there so the the obvious",
    "start": "2507339",
    "end": "2513640"
  },
  {
    "text": "ones are CPU usage and the the garbage collection related stuff so you can see",
    "start": "2513640",
    "end": "2518859"
  },
  {
    "text": "what is going there you're working set that's the amount of memory that you're consuming so you can see you know are we",
    "start": "2518859",
    "end": "2524140"
  },
  {
    "text": "like climbing and maybe have a memory leak you could already view that with these things and those are available out",
    "start": "2524140",
    "end": "2531700"
  },
  {
    "text": "of the box all of your.net applications from.net 5 onwards already had this",
    "start": "2531700",
    "end": "2537220"
  },
  {
    "text": "maybe without you knowing it you can create your own counters",
    "start": "2537220",
    "end": "2542740"
  },
  {
    "text": "um it's it's not that difficult but then you can emit some specific information but these are the ones you get for free",
    "start": "2542740",
    "end": "2550060"
  },
  {
    "text": "and if you want to implement them yourself then you can use a couple of classes you have the event counter and",
    "start": "2550060",
    "end": "2559119"
  },
  {
    "text": "incrementing event counter and the event counter is about values so you you give",
    "start": "2559119",
    "end": "2564339"
  },
  {
    "text": "that values and you can see the trends and it can do averages or statistical",
    "start": "2564339",
    "end": "2570040"
  },
  {
    "text": "things on a Time series so we can say okay what was the Max and the minimum in this side this time period what are the",
    "start": "2570040",
    "end": "2577119"
  },
  {
    "text": "averages the incrementing event counter is more about rates and frequencies so you can see certain rates of how fast",
    "start": "2577119",
    "end": "2584619"
  },
  {
    "text": "things are happening so it's per time there's the this is where you write it",
    "start": "2584619",
    "end": "2589780"
  },
  {
    "text": "so you give it the other one the polling counter and the incrementing poll encounter are two different versions",
    "start": "2589780",
    "end": "2596500"
  },
  {
    "text": "that allow you to they will ask you for the information and you can do some logic there that's inside of a Lambda",
    "start": "2596500",
    "end": "2603760"
  },
  {
    "text": "expression now in the example that you see there we'll we'll cover that in code in a bit the that's where you um",
    "start": "2603760",
    "end": "2611380"
  },
  {
    "text": "you see that you need to have a frame event counter and do increments and you",
    "start": "2611380",
    "end": "2616540"
  },
  {
    "text": "can even write events so that's the Eventing side of things but this is uh the little bit of code that you would",
    "start": "2616540",
    "end": "2622660"
  },
  {
    "text": "need and then you start calling that from somewhere in your application so let's see that in code as well",
    "start": "2622660",
    "end": "2629920"
  },
  {
    "text": "and for this I have a different scenario",
    "start": "2629920",
    "end": "2636720"
  },
  {
    "text": "so in this case you'll see that in a bit this is a you",
    "start": "2638859",
    "end": "2645040"
  },
  {
    "text": "know a little racing game it's 8-bit but it uses a back end that is a UDP based",
    "start": "2645040",
    "end": "2651160"
  },
  {
    "text": "socket server and it receives all the information from people racing and then it sends out",
    "start": "2651160",
    "end": "2656800"
  },
  {
    "text": "UDP package through sockets all the way but it's at least it's doing something right it's just five times per second",
    "start": "2656800",
    "end": "2663460"
  },
  {
    "text": "it's emitting all this information now all right",
    "start": "2663460",
    "end": "2669880"
  },
  {
    "text": "so what is in here so the the most important part is this event source",
    "start": "2669880",
    "end": "2675819"
  },
  {
    "text": "it's uh the game server Event Source it's derived from Event Source you can give it a pretty name which is kind of",
    "start": "2675819",
    "end": "2683079"
  },
  {
    "text": "like the category this is the name of the provider that we're creating in this way so this is something that we can see",
    "start": "2683079",
    "end": "2688780"
  },
  {
    "text": "happen or encounter later on um it has the incrementing event counter",
    "start": "2688780",
    "end": "2694599"
  },
  {
    "text": "and a event counter and we create those frame event counter it has a frames per",
    "start": "2694599",
    "end": "2700359"
  },
  {
    "text": "second the um it's per second so that's the the rate time scale and it has a nice",
    "start": "2700359",
    "end": "2706660"
  },
  {
    "text": "descriptive name as does the lap event counter because every time you pass a lab you will get a lab count that",
    "start": "2706660",
    "end": "2714040"
  },
  {
    "text": "increases just to show some things and then if the race is started you can write stuff so um write particular",
    "start": "2714040",
    "end": "2721960"
  },
  {
    "text": "events but this is another way of writing the events and it uses the map name combined with the message here so",
    "start": "2721960",
    "end": "2729220"
  },
  {
    "text": "race start at four is the template and this the zero takes this name and it",
    "start": "2729220",
    "end": "2735520"
  },
  {
    "text": "takes it literally as the variable name and the frame sent that's the one we saw on the slides this sends out that",
    "start": "2735520",
    "end": "2742180"
  },
  {
    "text": "information so every a second this is incremented and this is actually a one but if the it's something different it's",
    "start": "2742180",
    "end": "2749319"
  },
  {
    "text": "a double value that you can add here but by default it's one and we're doing one frame every time we send this this thing",
    "start": "2749319",
    "end": "2756700"
  },
  {
    "text": "now it's a it's a class with aesthetic that creates",
    "start": "2756700",
    "end": "2763180"
  },
  {
    "text": "a Singleton so that's this thing here which means that if we you want to use this somewhere in our code",
    "start": "2763180",
    "end": "2770460"
  },
  {
    "text": "this is where it would be so this is the update method for any of you that did game programming you have an update Loop",
    "start": "2770460",
    "end": "2776800"
  },
  {
    "text": "that's the game loop we're sending frames here but this is the point where it actually happens so that we do the",
    "start": "2776800",
    "end": "2783040"
  },
  {
    "text": "log that's the thing that we just uh you know the the Singleton server same friend",
    "start": "2783040",
    "end": "2789119"
  },
  {
    "text": "server frame sent and then we give it the map name which was part of this update and this class",
    "start": "2789119",
    "end": "2795520"
  },
  {
    "text": "now with this we can run this",
    "start": "2795520",
    "end": "2801119"
  },
  {
    "text": "so it's building now it will start in a second",
    "start": "2803740",
    "end": "2809339"
  },
  {
    "text": "all right so it's it has started I'll put up two of these things",
    "start": "2813339",
    "end": "2820200"
  },
  {
    "text": "we need to connect to it online you see that something is happening here like",
    "start": "2820200",
    "end": "2825339"
  },
  {
    "text": "the it's the send out the game list so it's really doing something and then we say Okay login connecting",
    "start": "2825339",
    "end": "2834579"
  },
  {
    "text": "and if all goes well timeout let me see yep",
    "start": "2834579",
    "end": "2842880"
  },
  {
    "text": "all right there we go the other one let's connect that as well",
    "start": "2845280",
    "end": "2851079"
  },
  {
    "text": "connecting I hope that works but anyway you already see the information there so this might just time out let's try that",
    "start": "2851079",
    "end": "2857680"
  },
  {
    "text": "one more time",
    "start": "2857680",
    "end": "2860338"
  },
  {
    "text": "oh now it's already connected so already logout okay anyway so it's stuff is happening see all this",
    "start": "2863500",
    "end": "2869920"
  },
  {
    "text": "blue stuff and it's it's changing all the time because here you can see the numbers that are passing by and now we",
    "start": "2869920",
    "end": "2876760"
  },
  {
    "text": "go here and we would do something like dotnet counters PS that gives me all the processes that",
    "start": "2876760",
    "end": "2884380"
  },
  {
    "text": "are able to be used by this tool at this moment so we will look at the counters that are emitted we need to have this",
    "start": "2884380",
    "end": "2890800"
  },
  {
    "text": "one the game server which is 20364. so",
    "start": "2890800",
    "end": "2896200"
  },
  {
    "text": "then we can say okay which ones are there so you can say lists",
    "start": "2896200",
    "end": "2902740"
  },
  {
    "text": "and then do it for a particular runtime version well let's yeah let's run time let's skip that",
    "start": "2902740",
    "end": "2909160"
  },
  {
    "text": "so these are the things that you have this is for net core version 3.1 you can",
    "start": "2909160",
    "end": "2914980"
  },
  {
    "text": "see that there's system runtime there's HP net core hosting but since",
    "start": "2914980",
    "end": "2922140"
  },
  {
    "text": "five and I'm not sure why it's still at five but since five there's system.net",
    "start": "2922540",
    "end": "2928240"
  },
  {
    "text": "sockets their security name resolution HTTP so there's a bunch of more stuff",
    "start": "2928240",
    "end": "2933520"
  },
  {
    "text": "not just the system runtime all right now the other thing that we can do now is",
    "start": "2933520",
    "end": "2940420"
  },
  {
    "text": "and this is not the correct one because we had does anyone remember the number",
    "start": "2940420",
    "end": "2947400"
  },
  {
    "text": "let's check again 20364. all right 20364.",
    "start": "2948099",
    "end": "2955779"
  },
  {
    "text": "now it will wait a little bit for all the information to come in and if you don't specify anything it will do system",
    "start": "2956140",
    "end": "2961240"
  },
  {
    "text": "runtime and show you all the stats of the things that are there so that this you can do with your HP net core",
    "start": "2961240",
    "end": "2966520"
  },
  {
    "text": "application just do this and this was already there but we had some custom stuff",
    "start": "2966520",
    "end": "2973020"
  },
  {
    "text": "um so we need to",
    "start": "2973300",
    "end": "2976859"
  },
  {
    "text": "um 20364 what I'm doing here is this providing this this counter and the",
    "start": "2979119",
    "end": "2985960"
  },
  {
    "text": "other one that I would like to see is system sockets and system runtime but only the CPU usage so there's square",
    "start": "2985960",
    "end": "2991780"
  },
  {
    "text": "brackets here to filter that down and if I do that then we can see that it says system socket so it's actually showing",
    "start": "2991780",
    "end": "2998680"
  },
  {
    "text": "us so five times per second you can see that this thing is going up because it's five frames per second so we're hitting",
    "start": "2998680",
    "end": "3005220"
  },
  {
    "text": "that rate and we can see the frame rate here but that's the thing that we emitted as well is running there and the",
    "start": "3005220",
    "end": "3012060"
  },
  {
    "text": "CPUs is pretty low at the moment so this could be you know anything of",
    "start": "3012060",
    "end": "3018240"
  },
  {
    "text": "your stats if it's calculation ngino the speed of processing number of conversions per hour those things can be",
    "start": "3018240",
    "end": "3025619"
  },
  {
    "text": "emitted here and this is now streaming from here and ending up also in",
    "start": "3025619",
    "end": "3031500"
  },
  {
    "text": "application insights in a moment all right so let's move on",
    "start": "3031500",
    "end": "3037980"
  },
  {
    "text": "I put this in for reference but there's a way to monitor these kind of things with Dot and monitor",
    "start": "3037980",
    "end": "3044640"
  },
  {
    "text": "um you can do that locally or in a container and you can install it as a tool as well but this allows you to watch your things and if you look at the",
    "start": "3044640",
    "end": "3051720"
  },
  {
    "text": "API endpoints you can see that you can get metrics there you can force a dump",
    "start": "3051720",
    "end": "3057000"
  },
  {
    "text": "um and and some information on what is happening there in the logs um just as an endpoint to listen into it from from",
    "start": "3057000",
    "end": "3064079"
  },
  {
    "text": "this thing without any additional tooling all right now we've done a bunch of",
    "start": "3064079",
    "end": "3070859"
  },
  {
    "text": "stuff so we did metrics we did tracing we did logs we put it all out there but",
    "start": "3070859",
    "end": "3076020"
  },
  {
    "text": "how do we see it because you know if this is running in Azure what what will what good will it do to us well that's",
    "start": "3076020",
    "end": "3082200"
  },
  {
    "text": "where you say okay we want to monitor it but also query and analyze it this shows",
    "start": "3082200",
    "end": "3087240"
  },
  {
    "text": "application insights but this is equally true if you have any of the other APM tools and the the functionality might",
    "start": "3087240",
    "end": "3093839"
  },
  {
    "text": "vary but in this case I've chosen for this setup where the Azure resources use app insights and Azure monitor like we",
    "start": "3093839",
    "end": "3100020"
  },
  {
    "text": "discussed at the beginning now what happens with application insights you can connect that to your",
    "start": "3100020",
    "end": "3107280"
  },
  {
    "text": "web app your web apis all the dependencies that you have and the other stuff and the other stuff the more is in",
    "start": "3107280",
    "end": "3113579"
  },
  {
    "text": "Azure the more you will get from it other external Services you might need to do some things with the Telemetry",
    "start": "3113579",
    "end": "3119940"
  },
  {
    "text": "clients and help out with I'm now making a particular call that is with a weird",
    "start": "3119940",
    "end": "3126540"
  },
  {
    "text": "protocol for example and I'm doing that with a client library that doesn't know about this stuff but you can help there",
    "start": "3126540",
    "end": "3131579"
  },
  {
    "text": "and specify what is going on all right so if you instrument application insights it will send it",
    "start": "3131579",
    "end": "3138780"
  },
  {
    "text": "there any dependency calls or HTTP requests or other things that are well known will be put out there any",
    "start": "3138780",
    "end": "3145500"
  },
  {
    "text": "framework core also plays this game and then the background services are just dotnet implementation so they can",
    "start": "3145500",
    "end": "3152040"
  },
  {
    "text": "be instrumented with app insights as well now you can do logging and tracing so",
    "start": "3152040",
    "end": "3157440"
  },
  {
    "text": "you can do Trace listeners to have app inside straight listeners you can do the logging that we already saw and you can",
    "start": "3157440",
    "end": "3163200"
  },
  {
    "text": "use the Telemetry clients which allows you to write those events and put out the statistics and the information as",
    "start": "3163200",
    "end": "3169920"
  },
  {
    "text": "well so metrics and traces we looked at the start operation Track",
    "start": "3169920",
    "end": "3175260"
  },
  {
    "text": "event we saw those now and we had the new stuff right so the",
    "start": "3175260",
    "end": "3181559"
  },
  {
    "text": "event pipe this is just a reminder to the previous slide but from App insights you can send this with a Telemetry",
    "start": "3181559",
    "end": "3188520"
  },
  {
    "text": "module but you have dependency Telemetry modules but there's two other ones The Event Source and event counter",
    "start": "3188520",
    "end": "3194940"
  },
  {
    "text": "which obviously serve either one of those now if you want to use.net trace you can",
    "start": "3194940",
    "end": "3201960"
  },
  {
    "text": "use purview which is a low level ugly tool that's been around for ages it works well doesn't look as nice but",
    "start": "3201960",
    "end": "3209339"
  },
  {
    "text": "that's where you can just see all the information if you gather it yourself with.net Trace you can collect it store",
    "start": "3209339",
    "end": "3214619"
  },
  {
    "text": "it in a file a.net Trace file and then you can observe it yourself but",
    "start": "3214619",
    "end": "3220079"
  },
  {
    "text": "otherwise we'll jump into application insights so I'll hope that we can get to see this",
    "start": "3220079",
    "end": "3228119"
  },
  {
    "text": "picture here let's just stop this blinking stuff",
    "start": "3228119",
    "end": "3234599"
  },
  {
    "text": "we'll go back to our um this I'll quit",
    "start": "3234599",
    "end": "3241800"
  },
  {
    "text": "and then we go here all right so let's go into this app insights instance where",
    "start": "3241800",
    "end": "3248160"
  },
  {
    "text": "everything is being logged to it's it's it's smaller so I'm missing the sidebar but this works",
    "start": "3248160",
    "end": "3254640"
  },
  {
    "text": "um so let's see with all the activities that were built in and that we were doing let's try to see the application",
    "start": "3254640",
    "end": "3260760"
  },
  {
    "text": "map so what it will do now is gather all that activity information and put it together and then you can see this is",
    "start": "3260760",
    "end": "3267540"
  },
  {
    "text": "what we did just a moment ago you see all the information and I'm trying to",
    "start": "3267540",
    "end": "3273599"
  },
  {
    "text": "get this in a view so that's the set call that we made this is um this is actually our activity got new high score",
    "start": "3273599",
    "end": "3280020"
  },
  {
    "text": "remember that we created that so because it was registered as an operation as a dependency you can see that it seems as",
    "start": "3280020",
    "end": "3287099"
  },
  {
    "text": "if we're calling something external right so that's that's you can see oh that's part of my my application we have",
    "start": "3287099",
    "end": "3293339"
  },
  {
    "text": "the key Vault calls we have the SQL calls to Azure SQL and we have the call from our web application front end which",
    "start": "3293339",
    "end": "3300180"
  },
  {
    "text": "was instrumented to the web API that is here and this one is also calling this",
    "start": "3300180",
    "end": "3306180"
  },
  {
    "text": "thing here and if you want to have details you can see that it's the key Vault that we're calling there you can see that if there's errors you",
    "start": "3306180",
    "end": "3313440"
  },
  {
    "text": "can drill down into them and let's just force an error and I need to see if we're still running the application or",
    "start": "3313440",
    "end": "3319260"
  },
  {
    "text": "not so",
    "start": "3319260",
    "end": "3321859"
  },
  {
    "text": "um all right so there's also a live metrics that you can see",
    "start": "3324660",
    "end": "3331579"
  },
  {
    "text": "live metrics should be popping up so you see that there's now two servers online two",
    "start": "3331920",
    "end": "3338579"
  },
  {
    "text": "service meaning two parts in our composition or two containers in our composition the web app and web API",
    "start": "3338579",
    "end": "3344400"
  },
  {
    "text": "they're both thought of as servers and you can see that things are going happening here and there are things",
    "start": "3344400",
    "end": "3350339"
  },
  {
    "text": "going wrong all right so that's uh that's that's a good thing that we can see it not so",
    "start": "3350339",
    "end": "3355559"
  },
  {
    "text": "good that we uh that something is going on so if I do limits and I do limit is one you can see that I",
    "start": "3355559",
    "end": "3363119"
  },
  {
    "text": "only get one but there's an intentional bug if I do zero it it it's in a very long Loop uh not",
    "start": "3363119",
    "end": "3370980"
  },
  {
    "text": "even a threat sleep and the front and the sides this is taking too long I will terminate this it uses poly for that but",
    "start": "3370980",
    "end": "3378180"
  },
  {
    "text": "it do it gives us a timeout exception now in a moment we should be seeing more",
    "start": "3378180",
    "end": "3384300"
  },
  {
    "text": "things coming in here you see the the exception that it just passed by because that's being locked and detected",
    "start": "3384300",
    "end": "3392880"
  },
  {
    "text": "now for the sake of time I'll go to show you a bit about the metrics that we can",
    "start": "3392880",
    "end": "3399240"
  },
  {
    "text": "also collect so we have log base metrics um the metrics that are there are about",
    "start": "3399240",
    "end": "3405480"
  },
  {
    "text": "availability about the browser that's all app inside stuff but here we have the custom ones so again you see this",
    "start": "3405480",
    "end": "3411540"
  },
  {
    "text": "this uh this frame rate counter if we choose to see that and for example here we had a bit of a difference in the",
    "start": "3411540",
    "end": "3418380"
  },
  {
    "text": "frame rate so a bit dropped to three not too bad um we could also um",
    "start": "3418380",
    "end": "3426559"
  },
  {
    "text": "let me see add metric so we could also see what about this",
    "start": "3426960",
    "end": "3433020"
  },
  {
    "text": "this high score so let's see if we already have that",
    "start": "3433020",
    "end": "3438480"
  },
  {
    "text": "average it's giving me some data or not just yet",
    "start": "3438480",
    "end": "3443880"
  },
  {
    "text": "so refresh this okay that might be coming later on we could say okay do the",
    "start": "3443880",
    "end": "3450059"
  },
  {
    "text": "last 24 hours because I obviously tried this before",
    "start": "3450059",
    "end": "3455460"
  },
  {
    "text": "and then you can see now that there were scores being sent in um all right so this is just the number",
    "start": "3455460",
    "end": "3461760"
  },
  {
    "text": "of the score the average there we had a very high score a moment ago um then we have the logs",
    "start": "3461760",
    "end": "3469020"
  },
  {
    "text": "and this is where we can say okay we have logs uh for example",
    "start": "3469020",
    "end": "3474359"
  },
  {
    "text": "um traces let me just quickly [Music] um",
    "start": "3474359",
    "end": "3480119"
  },
  {
    "text": "to avoid some typing all right let's run this",
    "start": "3480119",
    "end": "3487300"
  },
  {
    "text": "[Music] um",
    "start": "3487300",
    "end": "3490520"
  },
  {
    "text": "the where operator field I'm not sure all right let's do it differently we'll",
    "start": "3498599",
    "end": "3505920"
  },
  {
    "text": "go to the logs push out this get rid of this",
    "start": "3505920",
    "end": "3513300"
  },
  {
    "text": "and just say okay let's see all the the",
    "start": "3513300",
    "end": "3518579"
  },
  {
    "text": "custom metrics I believe that's the one run it",
    "start": "3518579",
    "end": "3525020"
  },
  {
    "text": "now you can see that there's a lot of heartbeat state but there's also the values of our frame rate for example and",
    "start": "3533640",
    "end": "3539760"
  },
  {
    "text": "there should be things with the high score excuse me um also here somewhere but this is where you can do the um the",
    "start": "3539760",
    "end": "3547260"
  },
  {
    "text": "the filtering as well so this is all the traces um but you can do similar things as in",
    "start": "3547260",
    "end": "3553200"
  },
  {
    "text": "sec to filter out the the semantic logging information and get that info",
    "start": "3553200",
    "end": "3559020"
  },
  {
    "text": "out in your thing so let's see if we if this one would work",
    "start": "3559020",
    "end": "3566180"
  },
  {
    "text": "let's hope it does see there we go so the race started that's because we started two players and it's being sent",
    "start": "3567720",
    "end": "3574079"
  },
  {
    "text": "out and it has these custom Dimensions that is about the map name for example that was put in there so this is again",
    "start": "3574079",
    "end": "3580020"
  },
  {
    "text": "where we can filter based on those things as we did just a moment ago custom dimensions and event names",
    "start": "3580020",
    "end": "3587400"
  },
  {
    "text": "all right wrapping up",
    "start": "3587400",
    "end": "3593180"
  },
  {
    "text": "so what we saw in this session um is um we were able to do the things",
    "start": "3593280",
    "end": "3599819"
  },
  {
    "text": "with the logging tracing and metrics to make our things more observable um just a glimpse of app insights on the",
    "start": "3599819",
    "end": "3606900"
  },
  {
    "text": "richness that is in there but you can get all the metrics you sort of graphs you saw the log information play around",
    "start": "3606900",
    "end": "3612599"
  },
  {
    "text": "with it you can do troubleshooting end-to-end investigation and that's where it's very",
    "start": "3612599",
    "end": "3618780"
  },
  {
    "text": "strong the alerting is just a matter of creating an alert say which metric values boundaries and it will help you",
    "start": "3618780",
    "end": "3626460"
  },
  {
    "text": "raise alerts on availability from your health monitoring or your your metrics",
    "start": "3626460",
    "end": "3632220"
  },
  {
    "text": "and the trace information that you have that's all I have for you now we've got",
    "start": "3632220",
    "end": "3637920"
  },
  {
    "text": "these uh reasonably covered and um I would like to thank you very much we're out of time but I'll be here for",
    "start": "3637920",
    "end": "3644940"
  },
  {
    "text": "any questions and answers [Applause]",
    "start": "3644940",
    "end": "3655819"
  }
]