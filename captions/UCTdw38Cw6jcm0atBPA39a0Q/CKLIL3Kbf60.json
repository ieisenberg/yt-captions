[
  {
    "text": "thanks about all those who came along to my earlier the keynote earlier on I have",
    "start": "4720",
    "end": "10129"
  },
  {
    "text": "made some improvements to my setup so hopefully now you're able to see my screen and my video I had to",
    "start": "10129",
    "end": "18050"
  },
  {
    "text": "there's some things involving network cables I do not want to go into because the sysadmin in me wants to cry about the setup that is being jury-rigged here",
    "start": "18050",
    "end": "24890"
  },
  {
    "text": "to make all of this work but hopefully I'm coming across very clear and that you're enjoying this probably self isolating at home oh we're now going",
    "start": "24890",
    "end": "32989"
  },
  {
    "text": "talking a bit about our micro services and how they relate to the concept of service service is a big hype topic and",
    "start": "32989",
    "end": "40309"
  },
  {
    "text": "I think rightly so actually and we're gonna be exploring a little bit about what services but talking about service",
    "start": "40309",
    "end": "45769"
  },
  {
    "text": "and specifically function as a service in the context of micro service architectures as before we will be using",
    "start": "45769",
    "end": "53379"
  },
  {
    "text": "slide o for questions so if you want to go and ask the questions during a talk",
    "start": "53379",
    "end": "59000"
  },
  {
    "text": "Yunel - as slide though and use the hashtag k-y eight six zero",
    "start": "59000",
    "end": "66350"
  },
  {
    "text": "that's why eight six zero and that will allow you to ask questions as we go do",
    "start": "66350",
    "end": "71600"
  },
  {
    "text": "you want to go to that website now open up in a window so needed you can keep it open you can keep it refreshing and just",
    "start": "71600",
    "end": "77750"
  },
  {
    "text": "ask questions as you as we go through the session and that will give you a lot of things to answer when we end I'm not",
    "start": "77750",
    "end": "83690"
  },
  {
    "text": "going to talk about the work I do in the books I've really started that in the keynote but if you don't know more about you know decomposing - - micro services",
    "start": "83690",
    "end": "91640"
  },
  {
    "text": "and all that sort of stuff you can find information about all of that and my books and the services that I offer for",
    "start": "91640",
    "end": "97040"
  },
  {
    "text": "my company over on my website though we're here to talk about service and micro services so we should talk a",
    "start": "97040",
    "end": "102440"
  },
  {
    "text": "little bit about micro services as I always draw them these nice hexagonal",
    "start": "102440",
    "end": "107600"
  },
  {
    "text": "architectures and kind of you know you micro services have become almost",
    "start": "107600",
    "end": "113810"
  },
  {
    "text": "ubiquitous in terms of its that for many people it's unfortunately become the",
    "start": "113810",
    "end": "119270"
  },
  {
    "text": "default way of building software but it's sort of its uppermost in our minds but I do think it's often important to",
    "start": "119270",
    "end": "125330"
  },
  {
    "text": "just refresh that sort of the most important characteristics of micro service architectures and you know talk",
    "start": "125330",
    "end": "130489"
  },
  {
    "text": "about these things as being independently deployable services that work together modeled around a business domain so you",
    "start": "130489",
    "end": "137270"
  },
  {
    "text": "know we're taking business functionality we're packaging it up together and I'm exposing that business",
    "start": "137270",
    "end": "142880"
  },
  {
    "text": "functionality over network interfaces so typically talking about one process",
    "start": "142880",
    "end": "148880"
  },
  {
    "text": "talking to another process over some sort of network boundary although that kind of blurs a bit when we start moving",
    "start": "148880",
    "end": "154400"
  },
  {
    "text": "into the world of functions but we use the business domain to define those",
    "start": "154400",
    "end": "160280"
  },
  {
    "text": "service boundaries but the really important characteristic here is this idea of independent deployability",
    "start": "160280",
    "end": "165710"
  },
  {
    "text": "and that's a really important facet so many of the things that we look to get from micro service architectures",
    "start": "165710",
    "end": "171110"
  },
  {
    "text": "noticing completely the key benefit that we get with micro architecture is over other styles of modular architecture is",
    "start": "171110",
    "end": "177830"
  },
  {
    "text": "this idea of independent employability so we can make a change to a service we can deploy that service into a",
    "start": "177830",
    "end": "184670"
  },
  {
    "text": "production environment without necessarily having impact on the rest of the wider system this can make it easier",
    "start": "184670",
    "end": "191270"
  },
  {
    "text": "for teams to work in isolation or more previa tana meet of teams so you know",
    "start": "191270",
    "end": "197270"
  },
  {
    "text": "your team can work with your service by itself they can make decisions about when to deploy this also works really",
    "start": "197270",
    "end": "202400"
  },
  {
    "text": "well when you're trying to you know get teams to own more of the end-to-end sort of operational responsibilities for your",
    "start": "202400",
    "end": "209240"
  },
  {
    "text": "software hopefully it also means is that you can get you can have more developers working",
    "start": "209240",
    "end": "215270"
  },
  {
    "text": "on a problem without getting in each other's ways so if you know if if you could sort of break apart the different",
    "start": "215270",
    "end": "220910"
  },
  {
    "text": "parts of your overall product or the overall system give those two different",
    "start": "220910",
    "end": "226010"
  },
  {
    "text": "teams to own and manage if their services are also created in a micro service style they can be changed and",
    "start": "226010",
    "end": "232459"
  },
  {
    "text": "evolved independently from each other and that's a that's a really important idea and then this idea of autonomy of",
    "start": "232459",
    "end": "239630"
  },
  {
    "text": "it sort of firm cut through a lot of what we were looking at for micro service architectures James Lewis who",
    "start": "239630",
    "end": "246110"
  },
  {
    "text": "these early people looking into micro services he wrote the original article over at Larsson Fowler's website now",
    "start": "246110",
    "end": "253040"
  },
  {
    "text": "he's saying that Michaelis says so that micro services are in architecture which optimized for autonomy and so by picking",
    "start": "253040",
    "end": "259820"
  },
  {
    "text": "a micro service architecture we're sort of saying that autonomy is really important to us and so we're gonna pick",
    "start": "259820",
    "end": "266539"
  },
  {
    "text": "micro services because hopefully it can allow us to go faster work more in parallel its interest",
    "start": "266539",
    "end": "271920"
  },
  {
    "text": "and this idea of sort of empowering teams and allowing teams to own more",
    "start": "271920",
    "end": "277410"
  },
  {
    "text": "responsibilities you know it cuts across a lot of the shifts we've seen in IT development over the last 20 years if",
    "start": "277410",
    "end": "284460"
  },
  {
    "text": "you think about the public cloud for example I touched on this in my keynote a big part of the public cloud is about",
    "start": "284460",
    "end": "290820"
  },
  {
    "text": "allowing direct self-service access so rather than having to raise a ticket to",
    "start": "290820",
    "end": "295920"
  },
  {
    "text": "an Operations team and say please can I have a machine instead you could go to your own dashboard and click a button to",
    "start": "295920",
    "end": "302310"
  },
  {
    "text": "get it or even better write some code or use some sort of automated scripts to spin up the machines that you want as in",
    "start": "302310",
    "end": "310230"
  },
  {
    "text": "public clouds have been credibly useful in terms of further empowering teams and giving them more autonomy and to",
    "start": "310230",
    "end": "317150"
  },
  {
    "text": "autonomy here largely through the ability to sell service other benefits",
    "start": "317150",
    "end": "324300"
  },
  {
    "text": "as well that come with the public cloud as we touched on in the keynote and really when you get down to what the",
    "start": "324300",
    "end": "330840"
  },
  {
    "text": "public cloud is it's a succession of higher or lower you know multiple",
    "start": "330840",
    "end": "336620"
  },
  {
    "text": "abstractions over underlying physical infrastructure you know you think about the core sort of infrastructural",
    "start": "336620",
    "end": "343620"
  },
  {
    "text": "building blocks of storage compute networking rather than actually dealing",
    "start": "343620",
    "end": "349470"
  },
  {
    "text": "with the physical aspects of that we're working with abstractions that allow us to reverse abstractions and so we're",
    "start": "349470",
    "end": "356580"
  },
  {
    "text": "dealing with these things at a slightly higher level I don't have to go and connect a network cable I could write a",
    "start": "356580",
    "end": "362250"
  },
  {
    "text": "for loop to connect a 10 20 or a million virtual network connections and at the",
    "start": "362250",
    "end": "370020"
  },
  {
    "text": "base level we first thought probably third cloud first came out well I said she's not true but what really caught",
    "start": "370020",
    "end": "375900"
  },
  {
    "text": "the imagination of public cloud early on was really quite you know the grand",
    "start": "375900",
    "end": "381270"
  },
  {
    "text": "scheme of things low level abstractions over these three you know these three primitives of storage compute and",
    "start": "381270",
    "end": "387780"
  },
  {
    "text": "networking we used to talk about the cloud using these these three these four",
    "start": "387780",
    "end": "392790"
  },
  {
    "text": "letters IaaS infrastructure as a service so that's what that was the term used to",
    "start": "392790",
    "end": "398790"
  },
  {
    "text": "describe what AWS were offering taken as it was emit a bit of a misunderstanding but",
    "start": "398790",
    "end": "404529"
  },
  {
    "text": "nonetheless it's a term that's still in some widespread use infrastructure-as-a-service is really",
    "start": "404529",
    "end": "409719"
  },
  {
    "text": "talking about those cloud abstractions that sort of are quite close to the",
    "start": "409719",
    "end": "414999"
  },
  {
    "text": "physical counterpart right we can imagine when I connect a an attached storage device that's like plugging a",
    "start": "414999",
    "end": "421749"
  },
  {
    "text": "disk into a machine and when I open up a network connection between two machines is like liking a cable in potentially so",
    "start": "421749",
    "end": "427959"
  },
  {
    "text": "the the analogies between those two things that are quite similar and of course you know we've gone from in this",
    "start": "427959",
    "end": "434049"
  },
  {
    "text": "world when we talk about compute in the space of infrastructure-as-a-service what we're normally talking about I'm",
    "start": "434049",
    "end": "440739"
  },
  {
    "text": "spinning up a machine what I'm actually doing is I'm spinning up a virtual machine sitting on top of physical",
    "start": "440739",
    "end": "446469"
  },
  {
    "text": "infrastructure and to the cloud provider they call an API to say spit up an ec2",
    "start": "446469",
    "end": "451899"
  },
  {
    "text": "instance on AWS for example well the scenes what's actually happening is you know that API call is hitting a",
    "start": "451899",
    "end": "458049"
  },
  {
    "text": "virtualization layer running on their physical infrastructure and it's spitting up a virtual machine for me it's handing the networking and then",
    "start": "458049",
    "end": "463809"
  },
  {
    "text": "passing control over to me and you notability that from a from a functionality point of view is quite",
    "start": "463809",
    "end": "469389"
  },
  {
    "text": "similar to what you experienced VMware albeit with a nicer control plane on top",
    "start": "469389",
    "end": "474449"
  },
  {
    "text": "so that's sort of infrastructures service and so quite low level and then",
    "start": "474449",
    "end": "479649"
  },
  {
    "text": "we started kicking a bit looking at other types of abstractions and containers have become a big hockey fan",
    "start": "479649",
    "end": "486489"
  },
  {
    "text": "scape certainly for people building sort of systems on top and Linux basis operating systems containers have been",
    "start": "486489",
    "end": "493329"
  },
  {
    "text": "around for many many years and Windows actually the story around containers and",
    "start": "493329",
    "end": "498969"
  },
  {
    "text": "windows and Raman it's been getting a lot better you know since really 2000 and Windows 7 2016 containers have been supported much",
    "start": "498969",
    "end": "506679"
  },
  {
    "text": "better within the windows ecosystem although there's still definitely work to be done in terms of the size of those",
    "start": "506679",
    "end": "512110"
  },
  {
    "text": "containers because you know even with things like nano server and stuff you",
    "start": "512110",
    "end": "517479"
  },
  {
    "text": "know we still looking at quite large containers in the windows ecosystem compared to analytics ecosystem but but",
    "start": "517479",
    "end": "523059"
  },
  {
    "text": "the but you know where we are it's an improving game but now many people are thinking about the container",
    "start": "523059",
    "end": "528459"
  },
  {
    "text": "as our unit of deployment which you know is a slightly higher level abstraction than on a virtual machine right we sort",
    "start": "528459",
    "end": "535240"
  },
  {
    "text": "of we're dealing with something else now is sort of dealing with a package of of operating system and our",
    "start": "535240",
    "end": "541480"
  },
  {
    "text": "application together and that's our now our unit of deployment whereas before I would bring up a virtual machine have to",
    "start": "541480",
    "end": "547780"
  },
  {
    "text": "plow the configuration for that virtual machines operating system let I'd put my software on top then I could figure that",
    "start": "547780",
    "end": "552910"
  },
  {
    "text": "and then it was deployed and now we've kind of got a single unit and and part of the container metaphor sort of you",
    "start": "552910",
    "end": "560320"
  },
  {
    "text": "know more subsequently has become this idea that you know you can treat a container like a black box it has common",
    "start": "560320",
    "end": "566470"
  },
  {
    "text": "and your common interface to work with that container but just like shipping containers you don't actually have to",
    "start": "566470",
    "end": "571840"
  },
  {
    "text": "care too much about what's going on inside so you know I'm deploying containers but I don't really content",
    "start": "571840",
    "end": "578740"
  },
  {
    "text": "care if one of them is implemented Java the others implemented Ruby implemented",
    "start": "578740",
    "end": "584050"
  },
  {
    "text": "and of course I could be having you know different operating systems running side those containers as long as my container",
    "start": "584050",
    "end": "590680"
  },
  {
    "text": "platform lets me run those types of containers on it I shouldn't actually care about what's happening inside that container so for",
    "start": "590680",
    "end": "598270"
  },
  {
    "text": "the point of view of a deployment activity I'm sort of further abstracted from the detail I'm not having to get",
    "start": "598270",
    "end": "603850"
  },
  {
    "text": "deep in and configure a virtual machine to run my software I'm just being given a container and I'm going splat there is",
    "start": "603850",
    "end": "610000"
  },
  {
    "text": "a container I've dropped it on the system and this is quite useful you know with it with a shipping container all",
    "start": "610000",
    "end": "615130"
  },
  {
    "text": "shipping containers as common standard shipping containers but had the same fixing points they have the same",
    "start": "615130",
    "end": "620320"
  },
  {
    "text": "dimensions and what that means is you can have a common set of tools around and managing those containers you can",
    "start": "620320",
    "end": "626890"
  },
  {
    "text": "have a common pallet all right like this it can take a contender's to built designed to take any container that container could contain grain it could",
    "start": "626890",
    "end": "633940"
  },
  {
    "text": "contain a car against pain know a bunch of washing machines or maybe it's empty",
    "start": "633940",
    "end": "639310"
  },
  {
    "text": "you can either get refrigerated containers that sit within the same space and so by having a common",
    "start": "639310",
    "end": "645820"
  },
  {
    "text": "container format we also can have a common set of tools and this is really what docker did for us before docker we",
    "start": "645820",
    "end": "652690"
  },
  {
    "text": "had containers in the Linux and UNIX operating systems but they didn't have that common packaging contract that's",
    "start": "652690",
    "end": "659260"
  },
  {
    "text": "what docker gets in bed well this is how we could packages the image we have for a container and here's like a common set",
    "start": "659260",
    "end": "665110"
  },
  {
    "text": "of tools we can use to manage its containers and although you know many people now run containers without you",
    "start": "665110",
    "end": "671380"
  },
  {
    "text": "they sort of set the standard in terms of what that format should look like and how we should work with that so we've",
    "start": "671380",
    "end": "676870"
  },
  {
    "text": "gone from say physical infrastructure to virtual infrastructure virtual infrastructure to infrastructure as a",
    "start": "676870",
    "end": "682300"
  },
  {
    "text": "service having a nice API control plane we've then gone a bit above that and we're now thinking about Keynes as a way",
    "start": "682300",
    "end": "689230"
  },
  {
    "text": "to build and manage and ship our productions but then when you start looking at the world of the cloud there",
    "start": "689230",
    "end": "694600"
  },
  {
    "text": "are just so many offshoots in terms of how you might want to go about deploying and however you might want to go about",
    "start": "694600",
    "end": "700570"
  },
  {
    "text": "managing things and it can become a bit overwhelming so I'm gonna take you through a few examples of how we think",
    "start": "700570",
    "end": "707380"
  },
  {
    "text": "about deploying and managing it so if I was in the world of say just purely the docker and I wasn't worried about with",
    "start": "707380",
    "end": "714040"
  },
  {
    "text": "kubernetes Easter I just went to containers maybe I would spin up a virtual machine maybe an ec2 instance",
    "start": "714040",
    "end": "719829"
  },
  {
    "text": "and I run the docker engine and it's a docker engine is gonna manage the isolation between these",
    "start": "719829",
    "end": "725529"
  },
  {
    "text": "actually makes provisioning these containers and managing isolation those contained and so I could spin up",
    "start": "725529",
    "end": "730899"
  },
  {
    "text": "multiple instances of my service each instance of my service or different",
    "start": "730899",
    "end": "735940"
  },
  {
    "text": "services could be running in different containers all running on that same in",
    "start": "735940",
    "end": "741519"
  },
  {
    "text": "this case this could be a virtual machine so I could take a physical machine break it into virtual machines I could then take a virtual machine and",
    "start": "741519",
    "end": "748420"
  },
  {
    "text": "break that up into lots of containers and those containers from a resource point of view are quite isolated so I",
    "start": "748420",
    "end": "755079"
  },
  {
    "text": "can say ok this container has this much memory and especially CPU the isolation",
    "start": "755079",
    "end": "761380"
  },
  {
    "text": "isn't as strong as a virtual machine isolation but it's still really quite good I also get this property of uniform",
    "start": "761380",
    "end": "768579"
  },
  {
    "text": "deployment this is what docker gave us was a managing containers on a single machine but of course we want more than",
    "start": "768579",
    "end": "775390"
  },
  {
    "text": "one machine we might need more than one machine to run a platform because we want to handle more scale or because we",
    "start": "775390",
    "end": "781240"
  },
  {
    "text": "need to handle the failure if one of them our VMs dies or one of our physical machines dies we need to make sure we",
    "start": "781240",
    "end": "787389"
  },
  {
    "text": "still got enough instances to serve the traffic from our customers and so there",
    "start": "787389",
    "end": "793389"
  },
  {
    "text": "are lots of the solutions that came out in this space for managing contains across multiple machines but the one",
    "start": "793389",
    "end": "798670"
  },
  {
    "text": "that has very much one of course has been kubernetes so kubernetes gives you a way of managing effective",
    "start": "798670",
    "end": "804790"
  },
  {
    "text": "container-based applications across multiple machines and one of the things it does really nicely is this property",
    "start": "804790",
    "end": "811420"
  },
  {
    "text": "is this thing of is this thing called desired state management so with desired",
    "start": "811420",
    "end": "816550"
  },
  {
    "text": "state management you can say something like I've got a service I want to make sure there's at least five instances of",
    "start": "816550",
    "end": "823300"
  },
  {
    "text": "this service running across all the machines I have and if one of those is dies kubernetes has been up nothing for",
    "start": "823300",
    "end": "829210"
  },
  {
    "text": "you if one of the machines underneath that dies kubernetes will also rebalance where your services are running and",
    "start": "829210",
    "end": "835840"
  },
  {
    "text": "that's a really really powerful idea and again so this is another higher more",
    "start": "835840",
    "end": "841060"
  },
  {
    "text": "high level abstraction rather than having to worry about an individual container kubernetes is just saying well",
    "start": "841060",
    "end": "846910"
  },
  {
    "text": "I'll deal with all the hassle of where they're gonna run for you you didn't have to worry about that you just tell",
    "start": "846910",
    "end": "851950"
  },
  {
    "text": "me how many you want and how big they should be and I'll sort the rest for you and you see the sort of inexorable march",
    "start": "851950",
    "end": "857830"
  },
  {
    "text": "this is this is the story of computing a Cheeto developers we're always looking for more powerful abstractions because",
    "start": "857830",
    "end": "865240"
  },
  {
    "text": "as we create better abstractions we get to do more work right we get to do more",
    "start": "865240",
    "end": "870370"
  },
  {
    "text": "things with our time it makes us more powerful because rather than having to do all the time with a low-level detail",
    "start": "870370",
    "end": "876550"
  },
  {
    "text": "I can abstract away that detail instead work at a higher level and get more done",
    "start": "876550",
    "end": "881680"
  },
  {
    "text": "you know we don't many of us I suspect most of us do not code in machine code anymore nor do we code at assembly code",
    "start": "881680",
    "end": "888760"
  },
  {
    "text": "we use higher-order programming languages because that turns out to be much more effective for most software",
    "start": "888760",
    "end": "894490"
  },
  {
    "text": "development sometimes cases where you do when I go quite low level but most of the time you're very happy working at",
    "start": "894490",
    "end": "900490"
  },
  {
    "text": "the level of sort of sort of general-purpose programming languages and the same is true for how we think",
    "start": "900490",
    "end": "905620"
  },
  {
    "text": "about working with our infrastructure and with our sort of cloud or Clara Bay",
    "start": "905620",
    "end": "911590"
  },
  {
    "text": "in Sweden we might want to go quite low level but a lot of time we're happy being higher up and kubernetes gives us",
    "start": "911590",
    "end": "917710"
  },
  {
    "text": "our more highly abstracted platform for working with containers but but when you",
    "start": "917710",
    "end": "923020"
  },
  {
    "text": "look really containers you say well ok with virtual machines I take a physical machine I break it up into virtual",
    "start": "923020",
    "end": "928780"
  },
  {
    "text": "machines and those virtual machines allow me to sort of have separate isolated execution units on the same physical machine",
    "start": "928780",
    "end": "934600"
  },
  {
    "text": "well containers sort of do the same thing in a way and you could argue that containers are just a maybe a better better from a",
    "start": "934600",
    "end": "942459"
  },
  {
    "text": "developer point of view form of virtualization we've basically found a way of breaking apart a set of resources",
    "start": "942459",
    "end": "949480"
  },
  {
    "text": "into isolated sets of resources that can be pegged to certain processes so maybe",
    "start": "949480",
    "end": "956110"
  },
  {
    "text": "you know if you look at it I mean although containers are often much better from us from a developer point of view they can be much more",
    "start": "956110",
    "end": "962740"
  },
  {
    "text": "cost-effective because it's not as heavyweight as virtual machines they allow us to run those containers on",
    "start": "962740",
    "end": "968290"
  },
  {
    "text": "laptops more easily than we might be able to do with say VMs and things like that they're arguably they are just a",
    "start": "968290",
    "end": "975220"
  },
  {
    "text": "different type of virtualization from from that point of view but maybe more useful one so let's talk a bit about",
    "start": "975220",
    "end": "981100"
  },
  {
    "text": "service and serve us a term service has actually been around for a lot longer",
    "start": "981100",
    "end": "986170"
  },
  {
    "text": "than people think the originals of definition of service as far as I have",
    "start": "986170",
    "end": "991510"
  },
  {
    "text": "been able to tell they've asked lots of other people about this and they'll come up the same answer actually comes from",
    "start": "991510",
    "end": "996640"
  },
  {
    "text": "an article by Ken from and so Ken wrote the piece about the where he saw the",
    "start": "996640",
    "end": "1001920"
  },
  {
    "text": "future of software and applications going and he talked about it's being serviced they actually wrote this",
    "start": "1001920",
    "end": "1007320"
  },
  {
    "text": "article back in 2012 which is sort of interesting so he said the phrase",
    "start": "1007320",
    "end": "1012510"
  },
  {
    "text": "service doesn't mean that servers are no longer involved it simply means that developers no longer have to think that",
    "start": "1012510",
    "end": "1019440"
  },
  {
    "text": "much about them and what he was reflecting on here was a whole host of services and products that sort of",
    "start": "1019440",
    "end": "1025558"
  },
  {
    "text": "abstract away from developers the concept of the underlying infrastructure",
    "start": "1025559",
    "end": "1031500"
  },
  {
    "text": "we don't have to work at a computer level anymore we're working at some a higher level of abstraction and so there",
    "start": "1031500",
    "end": "1038699"
  },
  {
    "text": "is as you know so service is talking really about an observer right the",
    "start": "1038699",
    "end": "1043740"
  },
  {
    "text": "observer the people who use service software they see it as having no servers effectively that's us as",
    "start": "1043740",
    "end": "1049590"
  },
  {
    "text": "developers if you're running this on premise of course a service stack of some sort your developers in house might",
    "start": "1049590",
    "end": "1056790"
  },
  {
    "text": "see it as service even though you as an Operations team might have to manage those computers now this was articles",
    "start": "1056790",
    "end": "1065100"
  },
  {
    "text": "written about twelve but what seems to have happened is that people have reduced the concept of servers service -",
    "start": "1065100",
    "end": "1072059"
  },
  {
    "text": "just meaning functions function as a service and they're saying well when people say service what they're actually talking about is function as a service that's I",
    "start": "1072059",
    "end": "1078450"
  },
  {
    "text": "think it's unfortunate because I think that really misses the point of service service is not just about function as a",
    "start": "1078450",
    "end": "1085470"
  },
  {
    "text": "service it's about much more than that so we've got yes function as a service",
    "start": "1085470",
    "end": "1091230"
  },
  {
    "text": "which we're going to explore in a bit more detail in a moment but it also encompasses database as a service platforms think about something like",
    "start": "1091230",
    "end": "1098279"
  },
  {
    "text": "cosmos DB or dynamo DB you're not worried about the Machine or how many machines you have you are basically sort",
    "start": "1098279",
    "end": "1105809"
  },
  {
    "text": "of operating in a pay-as-you-go environment you are just creating tables and letting the platform underneath that",
    "start": "1105809",
    "end": "1111299"
  },
  {
    "text": "work out all the details you're abstracted away from the underlying servers it also includes",
    "start": "1111299",
    "end": "1116639"
  },
  {
    "text": "things like storage take a look at something like AWS s3 all you do with s3",
    "start": "1116639",
    "end": "1122370"
  },
  {
    "text": "is a blob store services throw data in you stick it in a bucket you have a hard maybe have some instructions that bucket",
    "start": "1122370",
    "end": "1127649"
  },
  {
    "text": "if you don't have to worry about allocating disks you don't say I'll police add another one terabyte disk to",
    "start": "1127649",
    "end": "1132990"
  },
  {
    "text": "that you just throw the data in and you're charged for what you use we also have messaging products the very first",
    "start": "1132990",
    "end": "1140759"
  },
  {
    "text": "service launched by AWS was sqs in 2006",
    "start": "1140759",
    "end": "1146000"
  },
  {
    "text": "sqs is a service queue based messaging product you don't have to manage it you",
    "start": "1146000",
    "end": "1152519"
  },
  {
    "text": "just put stuff in it comes out that's a service product offering their second ever products offering was AWS s3 also",
    "start": "1152519",
    "end": "1160919"
  },
  {
    "text": "launched in 2006 that was also service so we'll though we came to see AWS as",
    "start": "1160919",
    "end": "1166980"
  },
  {
    "text": "pushing infrastructure as a service the very first things they launched are very much things that fit the model of",
    "start": "1166980",
    "end": "1173820"
  },
  {
    "text": "service so some was this idea that maybe the future arrived a bit earlier than we were ready for but there are many more",
    "start": "1173820",
    "end": "1179940"
  },
  {
    "text": "things when you look at those cloud-based services and those cloud offerings there are lots of different things that fit that model if we look at",
    "start": "1179940",
    "end": "1187110"
  },
  {
    "text": "specific AWS which I know a bit better than Azure you know dynamodb that's a back-end as a service Amazon s3 as blobstore service",
    "start": "1187110",
    "end": "1194370"
  },
  {
    "text": "and of course for cloud functions we have AWS lambda so a dab if lambda so",
    "start": "1194370",
    "end": "1199950"
  },
  {
    "text": "the first of what we think of now as the cloud function platforms that was launched that's launched in 2014",
    "start": "1199950",
    "end": "1206279"
  },
  {
    "text": "that was two years after ken came up with the term serving us so when we were talking about service there was no",
    "start": "1206279",
    "end": "1212489"
  },
  {
    "text": "function as a service concept really in widespread use so this idea that now",
    "start": "1212489",
    "end": "1217559"
  },
  {
    "text": "fast is what all services is sort of also doubly not true but we can think",
    "start": "1217559",
    "end": "1223469"
  },
  {
    "text": "about this service product offerings like lambda like DynamoDB like cosmos DP",
    "start": "1223469",
    "end": "1228629"
  },
  {
    "text": "like Azure cloud functions we can think about them as just another in the step of our another layer of abstractions in",
    "start": "1228629",
    "end": "1236340"
  },
  {
    "text": "how we work with underlying physical resources so we can work if we want to with the underlying physical machines",
    "start": "1236340",
    "end": "1243619"
  },
  {
    "text": "but then we started to virtualize that infrastructure so I a virtual izing the",
    "start": "1243619",
    "end": "1248789"
  },
  {
    "text": "compute network and storage building blocks this is where you're using vmware or using the managed VMS maybe on your",
    "start": "1248789",
    "end": "1256229"
  },
  {
    "text": "public cloud providers and then we built higher level abstractions on top of that we created sort of container",
    "start": "1256229",
    "end": "1262259"
  },
  {
    "text": "orchestration as a service systems like kubernetes or maybe we're using managed",
    "start": "1262259",
    "end": "1268019"
  },
  {
    "text": "relational database service it's like on them AWS for example I could spin up RDS",
    "start": "1268019",
    "end": "1273179"
  },
  {
    "text": "which is a relational database service and although I'm sort of scaling it to an extent by a machine I say I want a",
    "start": "1273179",
    "end": "1279509"
  },
  {
    "text": "machine this big it's actually handling a lot of the management of that machine for me so again it's a higher level",
    "start": "1279509",
    "end": "1285330"
  },
  {
    "text": "abstraction over the management of that database and then on top of that we've",
    "start": "1285330",
    "end": "1290489"
  },
  {
    "text": "now got even higher level extracted services we've got the function as a service platforms the back end as a",
    "start": "1290489",
    "end": "1296219"
  },
  {
    "text": "service platforms those messaging products I talked to about I mean think about is your event hub right that is a",
    "start": "1296219",
    "end": "1302489"
  },
  {
    "text": "service messaging product I've hidden even more of the detail away from me and",
    "start": "1302489",
    "end": "1309149"
  },
  {
    "text": "I think it's arguably you know who evil we sort of also have platform-as-a-service stuff that sits on top of this you know things that give",
    "start": "1309149",
    "end": "1315570"
  },
  {
    "text": "you even less control maybe but hide even more of the detail away from what you're able to do as we go up these",
    "start": "1315570",
    "end": "1322950"
  },
  {
    "text": "layers of abstractions we reduce the amount of overhead that we have from a point of view of operational management",
    "start": "1322950",
    "end": "1329339"
  },
  {
    "text": "but as we come down these layers you have a lot more low-level access and a",
    "start": "1329339",
    "end": "1334499"
  },
  {
    "text": "lot greater control over how the system works so if I've got if I have direct access",
    "start": "1334499",
    "end": "1341400"
  },
  {
    "text": "to the physical machine I have a huge amount of control over how things are done but I've got a lot more work and so",
    "start": "1341400",
    "end": "1348630"
  },
  {
    "text": "whenever I work with teams on these sorts of things it's like we have to find a happy place ideally you want to",
    "start": "1348630",
    "end": "1354450"
  },
  {
    "text": "give away as much as possible right and do as little work as you can but can you see to that control I think often people",
    "start": "1354450",
    "end": "1361650"
  },
  {
    "text": "can give up more control than they realized and so I've been looking at all this picture I sort of came to realize that I",
    "start": "1361650",
    "end": "1367860"
  },
  {
    "text": "sort of think of containers it's like a better virtualization but I feel that service and what service has done is",
    "start": "1367860",
    "end": "1373830"
  },
  {
    "text": "really started I don't think we're we're entirely there yet but what we really",
    "start": "1373830",
    "end": "1379230"
  },
  {
    "text": "have done is we've created better abstractions like better more developer-friendly abstractions so you",
    "start": "1379230",
    "end": "1384660"
  },
  {
    "text": "know maybe we're containerization is a better form of virtualization I think the service products for a better for",
    "start": "1384660",
    "end": "1390780"
  },
  {
    "text": "the fraction they kind of better developer friendly abstractions that hide away the operational work that's",
    "start": "1390780",
    "end": "1398640"
  },
  {
    "text": "needed now you know I said very clearly that service isn't just fast but",
    "start": "1398640",
    "end": "1403680"
  },
  {
    "text": "function as a service is one of the most interesting features of product sets under the service banner and I think",
    "start": "1403680",
    "end": "1410910"
  },
  {
    "text": "it's good important to explore that and especially as what we're going to come to is looking at these function concepts",
    "start": "1410910",
    "end": "1416340"
  },
  {
    "text": "in the context of micro services so the way sort of fast works is when they're",
    "start": "1416340",
    "end": "1421560"
  },
  {
    "text": "quite straightforward right you've got a developer a developer create a function and so a function could be as simple as",
    "start": "1421560",
    "end": "1427650"
  },
  {
    "text": "something's called raising voice it could be one method if you wanted to in practice it might be a bit more than",
    "start": "1427650",
    "end": "1432930"
  },
  {
    "text": "that and you then deploy that onto a fast platform so this could be power functions this could be lamdaur whatever",
    "start": "1432930",
    "end": "1439860"
  },
  {
    "text": "else what you then do is you can configure that function to run based on some event so generically talk about an",
    "start": "1439860",
    "end": "1447390"
  },
  {
    "text": "event and an event could be a file being delivered in certain bucket it could be",
    "start": "1447390",
    "end": "1453630"
  },
  {
    "text": "a page GTB request coming in over API gateway it could be a message being received it broker whatever",
    "start": "1453630",
    "end": "1461190"
  },
  {
    "text": "so as these events come in the the fast platform will spin up dynamically spin",
    "start": "1461190",
    "end": "1467340"
  },
  {
    "text": "up an instance of your function to serve that request and you're not having to configure the",
    "start": "1467340",
    "end": "1473080"
  },
  {
    "text": "hosts he notes everything to say I want five machines that have got you know this much CPU that have this sign of IO",
    "start": "1473080",
    "end": "1479800"
  },
  {
    "text": "profile actually all you can really do nearly configure with these things as you say my function when it runs needs",
    "start": "1479800",
    "end": "1485800"
  },
  {
    "text": "this much memory and that's it and the fat form without you being involved says",
    "start": "1485800",
    "end": "1491080"
  },
  {
    "text": "ah a request has come in about to launch a function here's a function to serve that request and that's done all without",
    "start": "1491080",
    "end": "1497470"
  },
  {
    "text": "you having to be involved whatsoever you only pay for what's running so if you",
    "start": "1497470",
    "end": "1503320"
  },
  {
    "text": "have say a virtual machine running 24/7 you've got to pay for 24/7 costs with a",
    "start": "1503320",
    "end": "1509650"
  },
  {
    "text": "function you only pay if the function is invoked if it's not invoked you don't pay and so this can actually lead to",
    "start": "1509650",
    "end": "1516010"
  },
  {
    "text": "making some significant cost savings I mean there's some variables around that but you know if you've got a system that",
    "start": "1516010",
    "end": "1522130"
  },
  {
    "text": "maybe he's only used for two or three hours a day you could deploy it as a fast platform you don't have to worry about turning the Machine off and on",
    "start": "1522130",
    "end": "1528100"
  },
  {
    "text": "again like a lot of people do so a lot of people if they say only gonna use a machine from nine till five they'll turn",
    "start": "1528100",
    "end": "1533710"
  },
  {
    "text": "it off at 8:30 in the morning they'll turn that machine off at 5:30 in the evening then maybe they can automate",
    "start": "1533710",
    "end": "1539230"
  },
  {
    "text": "that but it's a bit of housekeeping you've gotta do with a function and so platform you don't have to worry about that if no calls are made",
    "start": "1539230",
    "end": "1546070"
  },
  {
    "text": "nothing gets launched if nothing gets launched you don't get charged that's really nice idea the other thing is it's",
    "start": "1546070",
    "end": "1552520"
  },
  {
    "text": "gonna handle scale for you as well as gonna scale up and scale down as you get more requests coming in it will",
    "start": "1552520",
    "end": "1558310"
  },
  {
    "text": "automatically spin up more instances and you can you can limit how many instances",
    "start": "1558310",
    "end": "1564070"
  },
  {
    "text": "you allow because of course that kind of a cost implication but for me can I get",
    "start": "1564070",
    "end": "1569110"
  },
  {
    "text": "a property right if an instance dies another request was launched a new instance anyway it was scale up as it",
    "start": "1569110",
    "end": "1575320"
  },
  {
    "text": "needs to and kind of importantly as that traffic goes away it would shut those zones down for you and they'd not need",
    "start": "1575320",
    "end": "1581560"
  },
  {
    "text": "it anymore FUNKER fast typically these functions are designed to be short-lived",
    "start": "1581560",
    "end": "1587500"
  },
  {
    "text": "so originally you had quite short durations for these things I think I",
    "start": "1587500",
    "end": "1592660"
  },
  {
    "text": "want to say we're lambda might have been like five seconds or thirty seconds or something like that you're now up to sort of you know on the",
    "start": "1592660",
    "end": "1599950"
  },
  {
    "text": "different platforms vary but you know sort of 15 minutes can be for some of these but you look exactly our platform to know how",
    "start": "1599950",
    "end": "1606549"
  },
  {
    "text": "long they run for but they are designed to be things that kind of react to something do the job and then shut down",
    "start": "1606549",
    "end": "1612940"
  },
  {
    "text": "again so you're not looking for long lived processes so if you do need much longer lived processing function as a",
    "start": "1612940",
    "end": "1619690"
  },
  {
    "text": "service probably isn't the right fit for you under the hood the way these are",
    "start": "1619690",
    "end": "1624970"
  },
  {
    "text": "forms of working is with containers so when you a call comes in to launch your function but the fast platform is doing",
    "start": "1624970",
    "end": "1632230"
  },
  {
    "text": "and spitting up a container instance running your function on here you don't have to deal with the container that's",
    "start": "1632230",
    "end": "1638080"
  },
  {
    "text": "hidden away all you do is you give them their you give the fast platform your code and it deals with all that work for",
    "start": "1638080",
    "end": "1644710"
  },
  {
    "text": "you and that's a really great thing again it's a more high-level abstraction the containers great but can we may take",
    "start": "1644710",
    "end": "1652450"
  },
  {
    "text": "a queen could we design it in such a way that the developer doesn't need to worry about that container let's hide that",
    "start": "1652450",
    "end": "1657610"
  },
  {
    "text": "detail from them that's exactly what fast does it allows a developer to just focus on code and the operational work",
    "start": "1657610",
    "end": "1664720"
  },
  {
    "text": "is done by the platform itself now I have mentioned some of the",
    "start": "1664720",
    "end": "1670210"
  },
  {
    "text": "constraints you typically have a restricted execution time you also do have somewhat limited runtime choices",
    "start": "1670210",
    "end": "1676899"
  },
  {
    "text": "now this does vary that's with the execution time varies from platform to platform Google Cloud for example is",
    "start": "1676899",
    "end": "1683470"
  },
  {
    "text": "really behind you know number of run time choices then you've got JavaScript",
    "start": "1683470",
    "end": "1689619"
  },
  {
    "text": "and you've got go and I think there's I think Java might be in beta I'm not even",
    "start": "1689619",
    "end": "1694809"
  },
  {
    "text": "sure the other two are not even sure if if the Python stuff is out of beta yet",
    "start": "1694809",
    "end": "1700200"
  },
  {
    "text": "either as you actually got the broadest offering in terms of different runtimes theoretically you can run a Windows bat",
    "start": "1700200",
    "end": "1706990"
  },
  {
    "text": "file as in a Windows batch file on as a function I mean you shouldn't but you",
    "start": "1706990",
    "end": "1712629"
  },
  {
    "text": "can you could also run things like PowerShell scripts and functions - which can actually quite useful sort of",
    "start": "1712629",
    "end": "1717999"
  },
  {
    "text": "maintenance administration tasks and I'd be sitting pretty well as well but I say as you has got the best its broadest set",
    "start": "1717999",
    "end": "1725139"
  },
  {
    "text": "of runtime choices at the moment you also obviously have a lot less control like it's not just that you don't have",
    "start": "1725139",
    "end": "1731889"
  },
  {
    "text": "you can't pick a programming language you you you you have to stick to programming languages that are supported but you may actually only have",
    "start": "1731889",
    "end": "1738759"
  },
  {
    "text": "control over sir you might only have access to a certain number of versions of the runtime for example so if you've",
    "start": "1738759",
    "end": "1744669"
  },
  {
    "text": "got a function that wants to run Java 5 you probably you know that's not going to work you're gonna have to be ready Java 6 or Java 8 or something like that",
    "start": "1744669",
    "end": "1752369"
  },
  {
    "text": "so you also really have to rational point of view so from a sort of the only",
    "start": "1752369",
    "end": "1759669"
  },
  {
    "text": "thing you really get to control is what code gets run how it gets you know what causes that code to get run and how much",
    "start": "1759669",
    "end": "1766149"
  },
  {
    "text": "memory does my function have that's kind of it you can't do anything to configure the underlying operating system or",
    "start": "1766149",
    "end": "1771819"
  },
  {
    "text": "anything else and also these functions are typically considered to be pretty",
    "start": "1771819",
    "end": "1777309"
  },
  {
    "text": "much stateless so that means that an event happens I launch my function I do",
    "start": "1777309",
    "end": "1782679"
  },
  {
    "text": "some work and that function vanishes again when another invocation comes in and that function gets launched again",
    "start": "1782679",
    "end": "1789219"
  },
  {
    "text": "you can't share any state from the previous function invocation unless you've offloaded that state to",
    "start": "1789219",
    "end": "1794949"
  },
  {
    "text": "something like a database so you can't be holding state in memory I and this",
    "start": "1794949",
    "end": "1800349"
  },
  {
    "text": "also kind of means that so we treat these functions of being almost entirely stateless it's not totally true though",
    "start": "1800349",
    "end": "1807940"
  },
  {
    "text": "because there are a couple of exceptions to this we'll come back to that a bit later on but in general you should think about functions as being entirely",
    "start": "1807940",
    "end": "1813999"
  },
  {
    "text": "stateless which also by the way drastically simplifies your programming models it makes your life much happier",
    "start": "1813999",
    "end": "1819069"
  },
  {
    "text": "if you can stick to a stateless model for trying anyway now coming back to",
    "start": "1819069",
    "end": "1824709"
  },
  {
    "text": "micro services with minute talked a little bit about the concept of data ownership because this is gonna apply in",
    "start": "1824709",
    "end": "1830979"
  },
  {
    "text": "terms of how we start thinking about function that now one of the things we want with functions is we want this with",
    "start": "1830979",
    "end": "1837629"
  },
  {
    "text": "the services is this idea of independent deployability so we have this idea that",
    "start": "1837629",
    "end": "1842829"
  },
  {
    "text": "a service owns its own data management and so if another service wants to get",
    "start": "1842829",
    "end": "1850929"
  },
  {
    "text": "information if a service so the customer service e wants to get data from the invoicing service rather than you know",
    "start": "1850929",
    "end": "1857739"
  },
  {
    "text": "reaching straight into its database instead you go and access that data via some sort of well-defined interface and",
    "start": "1857739",
    "end": "1865989"
  },
  {
    "text": "the reason we want to do this is because we want to have very clear explicit service interfaces that we maintain",
    "start": "1865989",
    "end": "1871749"
  },
  {
    "text": "compatibility ability of so that we can make changes to the invoice service safely so if I",
    "start": "1871749",
    "end": "1877450"
  },
  {
    "text": "want to maybe make a change to invoicing on a deploy I want to know that that service interface is still compatibly my",
    "start": "1877450",
    "end": "1884770"
  },
  {
    "text": "releases if I allow people to directly access my database and really access my data storage it then becomes a bit of a",
    "start": "1884770",
    "end": "1891460"
  },
  {
    "text": "problem can I change how that data storage is done can I rename a column can I add a new constraint and the artists we should",
    "start": "1891460",
    "end": "1898060"
  },
  {
    "text": "kind of not sure anymore because you might break that other consumer and so we talk about if it's eating viewing a",
    "start": "1898060",
    "end": "1904420"
  },
  {
    "text": "micro so it's like a big black box right how the data it sort of manage is a",
    "start": "1904420",
    "end": "1909760"
  },
  {
    "text": "hidden internal implementation concern so we don't want these sorts of that backdoor access and I want you to hold",
    "start": "1909760",
    "end": "1916090"
  },
  {
    "text": "that thought on the back of your head and we start thinking about how we move into the world of functions so you know",
    "start": "1916090",
    "end": "1924430"
  },
  {
    "text": "we tend to think of a micro service like as a collection of business",
    "start": "1924430",
    "end": "1930970"
  },
  {
    "text": "functionality hosted on a network endpoint and you know often we package",
    "start": "1930970",
    "end": "1936790"
  },
  {
    "text": "this up as a process we put that process into a container and we launch it so the first question is how do I map from a",
    "start": "1936790",
    "end": "1943630"
  },
  {
    "text": "service to functions now actually in a lot of situations you can just map them one to one but it does depend on how big",
    "start": "1943630",
    "end": "1951340"
  },
  {
    "text": "your services but some for services that might only do a small number of things",
    "start": "1951340",
    "end": "1956380"
  },
  {
    "text": "mapping all of your function code that yours code into function a single function actually is very very good",
    "start": "1956380",
    "end": "1963430"
  },
  {
    "text": "starting point and could work absolutely fine if you want to go finer grained than that and that's might be a common",
    "start": "1963430",
    "end": "1970000"
  },
  {
    "text": "thing is you might start to see well actually I'm going to break all the things that my invoicing service does",
    "start": "1970000",
    "end": "1975040"
  },
  {
    "text": "down into a series of functions well then the kind of question is well how do you find what what what things what",
    "start": "1975040",
    "end": "1982060"
  },
  {
    "text": "mechanisms do you use to identify which functions you should create should I have a hundred function should I have a",
    "start": "1982060",
    "end": "1988630"
  },
  {
    "text": "thousand functions do I take each method in my service and make each method a",
    "start": "1988630",
    "end": "1994180"
  },
  {
    "text": "function in its own right and so you don't want to do that you don't want to have tens of thousands of these",
    "start": "1994180",
    "end": "1999250"
  },
  {
    "text": "functions and it's you've got a real need if you do decide you want to go finer grains than one service or one",
    "start": "1999250",
    "end": "2005130"
  },
  {
    "text": "function the piece of advice I'd give is to start looking for how you work and manage your",
    "start": "2005130",
    "end": "2010410"
  },
  {
    "text": "sort of aggregate so your bits of data so this so that's an initial starting point would be to map the all the",
    "start": "2010410",
    "end": "2018420"
  },
  {
    "text": "functionality about managing a single aggregate to being one function initially at least so inside by",
    "start": "2018420",
    "end": "2025290"
  },
  {
    "text": "invoicing service we might work with and manage say an invoice aggregate and",
    "start": "2025290",
    "end": "2030809"
  },
  {
    "text": "account aggregate and order aggregate so these sort of represent you know things",
    "start": "2030809",
    "end": "2036570"
  },
  {
    "text": "with identity things with state and do you see also see consent have lifecycle",
    "start": "2036570",
    "end": "2042690"
  },
  {
    "text": "associated with them and if you look at your service is pretty lots of things that are aggregates that you might manage within a service boundary and so",
    "start": "2042690",
    "end": "2049080"
  },
  {
    "text": "if you know you're gonna start mapping these into functions a good place to start I say well actually we're gonna do",
    "start": "2049080",
    "end": "2054419"
  },
  {
    "text": "is I'm gonna take all the code for managing an invoice and I'm going to create a function for managing that invoice aggregate and so any calls",
    "start": "2054419",
    "end": "2062970"
  },
  {
    "text": "related to changing that invoice get handled by my function and this is where the word function kind of gets a bit",
    "start": "2062970",
    "end": "2069090"
  },
  {
    "text": "amorphous because all really you've got with these things we talked about deploying a function what you're doing",
    "start": "2069090",
    "end": "2075060"
  },
  {
    "text": "is really deploying a package of code and you have one of those functions which is your entry point for execution",
    "start": "2075060",
    "end": "2080220"
  },
  {
    "text": "so when you're HTTP calc think it's called it's going to hit a function in the top of your function bundle that",
    "start": "2080220",
    "end": "2086520"
  },
  {
    "text": "function could call other functions so there's no reason why you couldn't have one single entry point for all invoicing",
    "start": "2086520",
    "end": "2092100"
  },
  {
    "text": "functionality for example and have an handle the whole life cycle around invoice",
    "start": "2092100",
    "end": "2097910"
  },
  {
    "text": "single function boundary by keeping all of the code associated with managing a",
    "start": "2097910",
    "end": "2103020"
  },
  {
    "text": "single aggregate in a single function it becomes much easier to make sure you're properly implementing the state machine",
    "start": "2103020",
    "end": "2109500"
  },
  {
    "text": "around that aggregate and so if I have three aggregates here maybe if I go find a grain I may be looking initially at my",
    "start": "2109500",
    "end": "2116190"
  },
  {
    "text": "invoicing service now actually testing of three separate functions now I saw",
    "start": "2116190",
    "end": "2123240"
  },
  {
    "text": "now I'm getting into finer grained deployment so now I could update in Chow the other side of the invoicing is done",
    "start": "2123240",
    "end": "2129750"
  },
  {
    "text": "and just deploy that function by itself which is you know kind of useful now if",
    "start": "2129750",
    "end": "2135900"
  },
  {
    "text": "you're moving from say deploying your your service one big unit two now moving it towards",
    "start": "2135900",
    "end": "2142119"
  },
  {
    "text": "lots of little functions you also have to give sort of jus thought to what's happening for people outside of your service boundary and my advice here",
    "start": "2142119",
    "end": "2149140"
  },
  {
    "text": "would be that if you're deciding it's a big service down into smaller functions that you still try to hide that from the",
    "start": "2149140",
    "end": "2154690"
  },
  {
    "text": "outside world so if the points of view of your consumers they think they're still talking to an invoicing service",
    "start": "2154690",
    "end": "2160900"
  },
  {
    "text": "but behind the scenes what actually happens when these calls come in is they're just being dispatched these",
    "start": "2160900",
    "end": "2166119"
  },
  {
    "text": "individual functions so from the outside world they think a single invoicing micro service exists from an internal",
    "start": "2166119",
    "end": "2173109"
  },
  {
    "text": "implementation detail point of view though you're implementing that invoicing service in terms of lots of",
    "start": "2173109",
    "end": "2178809"
  },
  {
    "text": "little functions and that's that sort of you want to hide that implementation detail because you might change your",
    "start": "2178809",
    "end": "2185019"
  },
  {
    "text": "mind about how these functions deployed you might decide you know what I don't want to have twenty functions I'm gonna",
    "start": "2185019",
    "end": "2190239"
  },
  {
    "text": "go back to one or I don't want to get rid of functions and go back in this is a container on kubernetes",
    "start": "2190239",
    "end": "2195549"
  },
  {
    "text": "and if you've kept the external interface the same you can do that safely without impacting your kind of",
    "start": "2195549",
    "end": "2202480"
  },
  {
    "text": "customers and yeah well not your customers your consumers which are nearly always going to be your own",
    "start": "2202480",
    "end": "2208690"
  },
  {
    "text": "colleagues who are calling your service from something else that's good last about talk this talks about the outside",
    "start": "2208690",
    "end": "2215019"
  },
  {
    "text": "world but what about you know about the",
    "start": "2215019",
    "end": "2220210"
  },
  {
    "text": "database right so if I've broken my invoicing service down into say three",
    "start": "2220210",
    "end": "2225579"
  },
  {
    "text": "functions from edging three different aggregates or I broken it down even further maybe I've broken down a state",
    "start": "2225579",
    "end": "2231069"
  },
  {
    "text": "transition into a separate function which you which is what you can do if I take it to the extreme degree then well",
    "start": "2231069",
    "end": "2237400"
  },
  {
    "text": "how does that work in terms of accessing my data at my database because we sort of said before that we don't want lots",
    "start": "2237400",
    "end": "2243130"
  },
  {
    "text": "of things accessing the same database except courses coupling this is",
    "start": "2243130",
    "end": "2248920"
  },
  {
    "text": "something we've got to consider because I mean once service because something was all in three five ten fifteen twenty functions and all of those functions are",
    "start": "2248920",
    "end": "2255730"
  },
  {
    "text": "sort of all accessing the same database that starts to look a little bit like",
    "start": "2255730",
    "end": "2261009"
  },
  {
    "text": "having lots of services talking to the same database he said we didn't want to do that because that creates coupling",
    "start": "2261009",
    "end": "2267789"
  },
  {
    "text": "between the functions and the reality is if you're breaking functions down to be individual state transition",
    "start": "2267789",
    "end": "2274200"
  },
  {
    "text": "on aggregate then those functions are inherently coupled anyway so what I tend",
    "start": "2274200",
    "end": "2280290"
  },
  {
    "text": "to try and think about this as I say look these functions implement this service to these 5 10 15 20 functions",
    "start": "2280290",
    "end": "2289320"
  },
  {
    "text": "they all would in the invoicing service the invoicing service manages a set of data and so as long as you kind of have",
    "start": "2289320",
    "end": "2296430"
  },
  {
    "text": "that idea that logical association between the functions and the service then you can still have this working",
    "start": "2296430",
    "end": "2301859"
  },
  {
    "text": "quite happily right so you can kind of think of now rather than one service owning the data now you've got a logical",
    "start": "2301859",
    "end": "2308040"
  },
  {
    "text": "set of functions which implement the service which own the same data so my",
    "start": "2308040",
    "end": "2313170"
  },
  {
    "text": "invoicing service which consists of lots of functions has I still can all access",
    "start": "2313170",
    "end": "2319290"
  },
  {
    "text": "the same set of data because they all have seen conceptions the whole thing there were ok by the same team for",
    "start": "2319290",
    "end": "2326010"
  },
  {
    "text": "example if you start seeing that different people are working on different functions a lot that might",
    "start": "2326010",
    "end": "2332460"
  },
  {
    "text": "give you cause when I try to call those functions out of the invoicing service per se you might also want to pull that data out well now where these things get",
    "start": "2332460",
    "end": "2342690"
  },
  {
    "text": "confusing in the world of service of course is that the data bases in in this world are a little bit different you",
    "start": "2342690",
    "end": "2350089"
  },
  {
    "text": "know we think about a relational database we have typically with a relational database we have the idea of",
    "start": "2350089",
    "end": "2355770"
  },
  {
    "text": "a schema so one relational database instance can support multiple different",
    "start": "2355770",
    "end": "2361109"
  },
  {
    "text": "logically isolated database schemas so I can have you know my invoicing schema as",
    "start": "2361109",
    "end": "2366480"
  },
  {
    "text": "all of my invoicing data is inside that invoicing schema and I can control who",
    "start": "2366480",
    "end": "2371790"
  },
  {
    "text": "accesses that invoicing schema and that invoicing schema is owned by me the invoicing service and so that kind of",
    "start": "2371790",
    "end": "2377670"
  },
  {
    "text": "idea of that of logically isolated data set is kind of really useful in the world of relational databases and other",
    "start": "2377670",
    "end": "2384750"
  },
  {
    "text": "non relational databases to but when you start looking at the world service",
    "start": "2384750",
    "end": "2390000"
  },
  {
    "text": "databases there those abstractions aren't necessarily there and there's",
    "start": "2390000",
    "end": "2395339"
  },
  {
    "text": "just so many more options right so when I'm thinking about Azure I've got table",
    "start": "2395339",
    "end": "2400349"
  },
  {
    "text": "storage I've got a cosmos DB on Google Cloud I've got a big table I got spanner I've got datastore on AWS it's simple D",
    "start": "2400349",
    "end": "2408049"
  },
  {
    "text": "be dumpy I've got a drawer service and these are just a subset of the service",
    "start": "2408049",
    "end": "2414199"
  },
  {
    "text": "datastore option database option right there right these are just the first you",
    "start": "2414199",
    "end": "2420949"
  },
  {
    "text": "know eight I could find now in reality the list is a bit shorter than that because no one uses a table store which",
    "start": "2420949",
    "end": "2427069"
  },
  {
    "text": "was simple DB anymore but you know it's there's still a lot of options out there",
    "start": "2427069",
    "end": "2432349"
  },
  {
    "text": "so you're gonna have to pick if you want a service database that actually kind of having that nice property of not having",
    "start": "2432349",
    "end": "2439309"
  },
  {
    "text": "to measure detail you know you you could have to work and assess these different",
    "start": "2439309",
    "end": "2444709"
  },
  {
    "text": "options out there or or service is quite different DynamoDB or or service on database is much more akin to a",
    "start": "2444709",
    "end": "2450769"
  },
  {
    "text": "relational database than dynamo DB is dynamo DB looks a lot more like a document database it's closer to a",
    "start": "2450769",
    "end": "2457939"
  },
  {
    "text": "document database like I would say as its accomplished cosmos cosmos and dynamo DB a kind of a similar-looking",
    "start": "2457939",
    "end": "2465849"
  },
  {
    "text": "databases and so that's that these databases have those from different",
    "start": "2465849",
    "end": "2471650"
  },
  {
    "text": "characteristics so on dynamo DB do for example on cosmos DB I don't concept of",
    "start": "2471650",
    "end": "2477319"
  },
  {
    "text": "a schema with a set of tables in it that can be locked down what I actually have is I have a table now these tables in",
    "start": "2477319",
    "end": "2484910"
  },
  {
    "text": "dynamo DB and cosmos DB aren't like a table in a relational data store they're much more like a dough base you can",
    "start": "2484910",
    "end": "2492559"
  },
  {
    "text": "imagine like a JSON document right right but can have multiple nested columns inside it and so often you don't need",
    "start": "2492559",
    "end": "2498499"
  },
  {
    "text": "multiple tables store your data you might get away storing all of it in one table that has sort of bit more",
    "start": "2498499",
    "end": "2504289"
  },
  {
    "text": "complexity around it so here's my invoicing functions using stuff from the invoicing table and I've call so got a",
    "start": "2504289",
    "end": "2511549"
  },
  {
    "text": "customer table over here and my issue invoice function needs invoicing data",
    "start": "2511549",
    "end": "2517130"
  },
  {
    "text": "and it needs customer data okay so I've got a customer table I've got an invoicing table that's fine okay but",
    "start": "2517130",
    "end": "2524449"
  },
  {
    "text": "I've also got some stuff for managing customers and they need to talk to the customer table and it starts to look a",
    "start": "2524449",
    "end": "2530119"
  },
  {
    "text": "bit like messy right it starts to look like we could be getting back in the world of everybody'll accessing anybody",
    "start": "2530119",
    "end": "2536359"
  },
  {
    "text": "else's data because remember we still want this idea of so logically isolating our different",
    "start": "2536359",
    "end": "2543340"
  },
  {
    "text": "service boundaries so here well I've got you say team a look exhaust fitting service and team B looks after the",
    "start": "2543340",
    "end": "2550240"
  },
  {
    "text": "customer service and the customer service manages that customer data this",
    "start": "2550240",
    "end": "2555270"
  },
  {
    "text": "issue tis a function shouldn't be directly accessing somebody else's data",
    "start": "2555270",
    "end": "2560580"
  },
  {
    "text": "that's not what we want right because this is just as bad as one service",
    "start": "2560580",
    "end": "2565690"
  },
  {
    "text": "reaching into another services database the key thing here is though that these different tables are I have you know",
    "start": "2565690",
    "end": "2573520"
  },
  {
    "text": "others if you've created them both on the same account they're both available you can just go read them you can go",
    "start": "2573520",
    "end": "2578620"
  },
  {
    "text": "view them if you want to what you actually have to do is sort of you have to yourself put in place that idea of",
    "start": "2578620",
    "end": "2585670"
  },
  {
    "text": "the of the sort of schema type abstraction over the top of it because what we really want to do is say okay",
    "start": "2585670",
    "end": "2591790"
  },
  {
    "text": "what I've got is my black box which is my invoicing functionality and on my black box which is my customer",
    "start": "2591790",
    "end": "2598030"
  },
  {
    "text": "functionality and if I want to go between those black boxes rather than going through the direct access to",
    "start": "2598030",
    "end": "2605440"
  },
  {
    "text": "somebody else's table I still should go to a function so I shouldn't if I need",
    "start": "2605440",
    "end": "2610660"
  },
  {
    "text": "to customer data I might go and use the appropriate function to access that customer data now that the challenge is",
    "start": "2610660",
    "end": "2619630"
  },
  {
    "text": "because we lack this logical abstraction of the schema with things like dynamodb",
    "start": "2619630",
    "end": "2626620"
  },
  {
    "text": "and cosmos DB limiting access is something that you end up kind of doing either at the account level or using",
    "start": "2626620",
    "end": "2633280"
  },
  {
    "text": "access roles so you could actually create an access role for the invoice service which can only see the invoicing",
    "start": "2633280",
    "end": "2639970"
  },
  {
    "text": "table or an access role for the customer service that can only see the customers",
    "start": "2639970",
    "end": "2645490"
  },
  {
    "text": "table so I've done this before by using effectively prefixes on table names and",
    "start": "2645490",
    "end": "2650530"
  },
  {
    "text": "applying that as part of the identity access management rules so this role the",
    "start": "2650530",
    "end": "2655630"
  },
  {
    "text": "invoicing role can see all dynamodb table is to start with the prefix invoice - and then that way you can kind",
    "start": "2655630",
    "end": "2662470"
  },
  {
    "text": "of get some level of grouping that's a bit of work you have to do yourself to create those abstractions",
    "start": "2662470",
    "end": "2669160"
  },
  {
    "text": "I did say earlier that these functions are typically stateless that's not",
    "start": "2669160",
    "end": "2674320"
  },
  {
    "text": "there's sort of not quite true there's AWS everything called state front there step functions now step",
    "start": "2674320",
    "end": "2681640"
  },
  {
    "text": "functions don't really let you have functions themselves which have state but it does allow you to pass state from",
    "start": "2681640",
    "end": "2688390"
  },
  {
    "text": "one function to another if you look at step functions work you basically kind",
    "start": "2688390",
    "end": "2693400"
  },
  {
    "text": "of create designs maybe the wrong word but a step functions gives you a way of",
    "start": "2693400",
    "end": "2699220"
  },
  {
    "text": "sort of sequencing a whole bunch of lambda functions they get executed in a certain order when one function finishes",
    "start": "2699220",
    "end": "2706030"
  },
  {
    "text": "it passed the state on to the next function it looks a lot like a workflow management tool or BPM I'm actually a",
    "start": "2706030",
    "end": "2712600"
  },
  {
    "text": "bigger fan of Azure durable functions which i think is a much smarter developer friendly approach whereas step",
    "start": "2712600",
    "end": "2719230"
  },
  {
    "text": "functions often as you end up wading through huge amounts of Jason to coordinate multiple functions working",
    "start": "2719230",
    "end": "2724240"
  },
  {
    "text": "together with durable functions it basically hooks into reactive extensions so I can be I have a right piece of",
    "start": "2724240",
    "end": "2730720"
  },
  {
    "text": "c-sharp code and I could say okay well I want to go and execute a function now so",
    "start": "2730720",
    "end": "2736150"
  },
  {
    "text": "I can go and say here's I'm gonna do an async await on this other function invocation and what happens when that",
    "start": "2736150",
    "end": "2741940"
  },
  {
    "text": "async away execute is that your function gets suspended it executes the other",
    "start": "2741940",
    "end": "2747940"
  },
  {
    "text": "function once the other function is completed it comes back it starts your function up again and the results of",
    "start": "2747940",
    "end": "2754480"
  },
  {
    "text": "that are passed back to you so it's sort of stateful but that the word state with",
    "start": "2754480",
    "end": "2760480"
  },
  {
    "text": "all is sort of is it interesting it sort of has very specific meaning what's",
    "start": "2760480",
    "end": "2766330"
  },
  {
    "text": "actually happening beneath the hood if you've ever looked at things like continuations and that's basically what the durable function stuff is working",
    "start": "2766330",
    "end": "2772720"
  },
  {
    "text": "it's really really interesting now at the moment I think it's only officially supported for c-sharp on Azure but then",
    "start": "2772720",
    "end": "2781500"
  },
  {
    "text": "Microsoft has said that they are going to roll out durable function support for all the languages they support so it",
    "start": "2781500",
    "end": "2787960"
  },
  {
    "text": "there's a I think the Java doable function stuff is in beta at the moment so it's well worth looking at if you're",
    "start": "2787960",
    "end": "2793960"
  },
  {
    "text": "looking to build more complex flows and I like the idea of keeping that stuff in code rather than sort of having to push",
    "start": "2793960",
    "end": "2799960"
  },
  {
    "text": "it out to some sort of separate Jason type a structure because it becomes hard to",
    "start": "2799960",
    "end": "2805450"
  },
  {
    "text": "see how things hang together whereas with durable functions you've actually got half a chance of like actually",
    "start": "2805450",
    "end": "2810700"
  },
  {
    "text": "following the code flow and the flow between its functions within the scope of just by observing by sort of walking",
    "start": "2810700",
    "end": "2817240"
  },
  {
    "text": "through your code I've mostly so far been talking about on-premise sort of",
    "start": "2817240",
    "end": "2823030"
  },
  {
    "text": "thought as a public cloud based services and the reality is that the service offerings are significant public cloud",
    "start": "2823030",
    "end": "2831070"
  },
  {
    "text": "and are very very very poor on private cloud part of that is because a bunch of",
    "start": "2831070",
    "end": "2837130"
  },
  {
    "text": "the sort of the are the things that the service products do behind the scenes is",
    "start": "2837130",
    "end": "2842650"
  },
  {
    "text": "just working with things that are difficult right like lots of file servers and all these sorts of things so",
    "start": "2842650",
    "end": "2848320"
  },
  {
    "text": "we don't really have something as good as Amazon s3 that runs on premise because the initial outlays in costs are",
    "start": "2848320",
    "end": "2855640"
  },
  {
    "text": "just enormous right you don't get to say I'm just gonna store a gigabyte in a blob store I only want to pay 10 cents",
    "start": "2855640",
    "end": "2861970"
  },
  {
    "text": "an hour because step one in implementing an on premise blob store you know involves giving a seven finger chips and",
    "start": "2861970",
    "end": "2868270"
  },
  {
    "text": "their app for a big filer or sand to sit somewhere in your data center so there's some challenges there but there's",
    "start": "2868270",
    "end": "2874870"
  },
  {
    "text": "something like function as a service there are open source frameworks out there to give you fast light capabilities you can look at something",
    "start": "2874870",
    "end": "2881890"
  },
  {
    "text": "like open fast for example which the framework that you run on top of kubernetes they can give",
    "start": "2881890",
    "end": "2887500"
  },
  {
    "text": "you that sort of function invocation type experience it's not as fully featured as the fast platforms that",
    "start": "2887500",
    "end": "2895180"
  },
  {
    "text": "exist for on a zero or on AWS but you",
    "start": "2895180",
    "end": "2901600"
  },
  {
    "text": "know it's still a good approximation of that we've also seen Google are moving",
    "start": "2901600",
    "end": "2907750"
  },
  {
    "text": "towards this thing called K native and so K native is going to embrace this idea of fast type implementations and",
    "start": "2907750",
    "end": "2913570"
  },
  {
    "text": "other types of service products that you could run on top of any kubernetes platform the idea being you could go",
    "start": "2913570",
    "end": "2919210"
  },
  {
    "text": "from kubernetes platform to kubernetes platform and have access to some common service type offerings the one caveat I",
    "start": "2919210",
    "end": "2926680"
  },
  {
    "text": "would say about Kay native is that it's quite early on in its evolution Google",
    "start": "2926680",
    "end": "2932590"
  },
  {
    "text": "have decided to take K native private inter it's evolution they're not developing",
    "start": "2932590",
    "end": "2937810"
  },
  {
    "text": "that specification in the open like they did with kubernetes they're gonna own that then drive that themselves and",
    "start": "2937810",
    "end": "2944110"
  },
  {
    "text": "Google's track record in in kind of getting technology to a point where it's stable",
    "start": "2944110",
    "end": "2950050"
  },
  {
    "text": "enough for use as in you're not getting lots of churn and change hasn't been",
    "start": "2950050",
    "end": "2955300"
  },
  {
    "text": "great it took a long time for kubernetes stabilized sto is still not stabilized",
    "start": "2955300",
    "end": "2960340"
  },
  {
    "text": "and Kay native is being built on top of this do so maybe k native will be the future I don't really think it's going",
    "start": "2960340",
    "end": "2967300"
  },
  {
    "text": "to be the present for many of us because even if maybe it works now they might quite completely redesign it in six",
    "start": "2967300",
    "end": "2973090"
  },
  {
    "text": "months from now and yeah we'd have to expect that to happen now if you're interested in playing around with any of",
    "start": "2973090",
    "end": "2978580"
  },
  {
    "text": "this stuff I think if you want to see this sort of really appreciate how powerful function as a service can be I",
    "start": "2978580",
    "end": "2984190"
  },
  {
    "text": "think you spend half a day half a day playing around it pick a cloud platform of your choice and and start working",
    "start": "2984190",
    "end": "2991390"
  },
  {
    "text": "with it now the out-of-the-box experience for setting up functions on these things is a lot worse than it should be and that's why I tend to point",
    "start": "2991390",
    "end": "2998350"
  },
  {
    "text": "people towards a tool like the service framework so the service framework gives",
    "start": "2998350",
    "end": "3004170"
  },
  {
    "text": "you a really nice command-line interface for packaging your software deploy it",
    "start": "3004170",
    "end": "3009240"
  },
  {
    "text": "onto these cloud platforms executing them from your you know fax your terminal you can pull down the logs you",
    "start": "3009240",
    "end": "3015120"
  },
  {
    "text": "can you can rollback versions and everything it's a really really nice tool chain for working with function as",
    "start": "3015120",
    "end": "3020670"
  },
  {
    "text": "a service on you know sort of AWS cloud Google Cloud or Azure theoretically its",
    "start": "3020670",
    "end": "3028050"
  },
  {
    "text": "platform agnostic right so the command line is kind of platform agnostic so you almost don't care from a command line",
    "start": "3028050",
    "end": "3033750"
  },
  {
    "text": "point of view if you're talking to Amazon or Azure for your function but the reality is it's not as simple as",
    "start": "3033750",
    "end": "3039120"
  },
  {
    "text": "saying I could just dynamically run those functions and either place more configuration than that but it is well",
    "start": "3039120",
    "end": "3044130"
  },
  {
    "text": "worth a look and and and I think that the nice thing about the service framework is it's also it supports lots",
    "start": "3044130",
    "end": "3050910"
  },
  {
    "text": "of different programming languages some of these sorts of service SDKs out there a specific to certain platforms like you",
    "start": "3050910",
    "end": "3058110"
  },
  {
    "text": "get ones that are just for node functions you get ones that just Python functions you can go straight to the",
    "start": "3058110",
    "end": "3063510"
  },
  {
    "text": "underlying cloud platform if you can go and use their consoles and stuff to do your stuff with a graphical user tools I",
    "start": "3063510",
    "end": "3068730"
  },
  {
    "text": "would urge you to start with the service framework just initially because what you do is you can",
    "start": "3068730",
    "end": "3073740"
  },
  {
    "text": "configure your function using a bit of code you can have it checked in you can fully automate your function creation",
    "start": "3073740",
    "end": "3079410"
  },
  {
    "text": "deployment management and development life cycles from the beginning and that just that workflow is just so nice it's",
    "start": "3079410",
    "end": "3085829"
  },
  {
    "text": "definitely worth taking a look at the service framework spend two hours at some point this week over the weekend",
    "start": "3085829",
    "end": "3091920"
  },
  {
    "text": "you create a couple of functions play around with them and you'll just get start to get a sense of just how awesome",
    "start": "3091920",
    "end": "3097349"
  },
  {
    "text": "they can be from a developer point of view so just to summarize you know we",
    "start": "3097349",
    "end": "3102359"
  },
  {
    "text": "think about service we should put service in the context of this continuing drive towards having more and",
    "start": "3102359",
    "end": "3108750"
  },
  {
    "text": "more powerful abstractions creating higher and higher order abstractions over underlying infrastructure that",
    "start": "3108750",
    "end": "3114660"
  },
  {
    "text": "allows us as developers to get more stuff done I think the current crop of service offerings may not be the future",
    "start": "3114660",
    "end": "3122339"
  },
  {
    "text": "I think there are better things to come I don't think they've really delivered on them full promises of this stuff yet",
    "start": "3122339",
    "end": "3127650"
  },
  {
    "text": "but they are well worth exploring for many of the organizations I'm chatting to who are looking to move to the cloud",
    "start": "3127650",
    "end": "3133680"
  },
  {
    "text": "I'm suggesting you know what maybe rather than trying to kubernetes fire your application maybe I should start",
    "start": "3133680",
    "end": "3139559"
  },
  {
    "text": "looking to see if some this stuff could be functions instead use go straight to a native fast platform it can open up",
    "start": "3139559",
    "end": "3145680"
  },
  {
    "text": "some you know significant benefits I mean above all all the server stuff is by abstracting away more and more detail",
    "start": "3145680",
    "end": "3152519"
  },
  {
    "text": "from me it's empowering me more as a developer to get more things done myself which in turn is gonna help this drive",
    "start": "3152519",
    "end": "3158460"
  },
  {
    "text": "towards independent deployability so in summary serverless think of service like",
    "start": "3158460",
    "end": "3165509"
  },
  {
    "text": "more developer-friendly abstractions it's allowing us to do more to sort of",
    "start": "3165509",
    "end": "3170519"
  },
  {
    "text": "own more responsibility without having to do more work it's making us more productive as a result functions can map",
    "start": "3170519",
    "end": "3177839"
  },
  {
    "text": "really nicely to microservice boundaries you start thinking of your function you",
    "start": "3177839",
    "end": "3183690"
  },
  {
    "text": "have a one-to-one mapping from a micro service to a single function we're going to break it down further you can go from",
    "start": "3183690",
    "end": "3189180"
  },
  {
    "text": "the aggregate to function trigger even further again you can go from the state transitions of an aggregate down to a",
    "start": "3189180",
    "end": "3195509"
  },
  {
    "text": "function as well but just if you're going to do all these if you're gonna start having lots of functions still have this overall arching idea of a",
    "start": "3195509",
    "end": "3202410"
  },
  {
    "text": "collection of that worked closely together and keeping data ownership within that sort of logical service boundary I've got a",
    "start": "3202410",
    "end": "3210059"
  },
  {
    "text": "bunch more stuff on service over my website I've got a video I did for Riley that you can watch as part of their",
    "start": "3210059",
    "end": "3215609"
  },
  {
    "text": "online learning platform I've also got other talks on this stuff over on my website as well which I'm easy to find",
    "start": "3215609",
    "end": "3221309"
  },
  {
    "text": "on the internet but thanks so much for listening along we have got some we've",
    "start": "3221309",
    "end": "3226349"
  },
  {
    "text": "had been having questions open on slide oh so I'm just going to spin that up on my iPad it's trying to do face ID but",
    "start": "3226349",
    "end": "3235289"
  },
  {
    "text": "I've got my headset on so it's getting confused so I should see if we've got any questions have come in on slide oh",
    "start": "3235289",
    "end": "3241759"
  },
  {
    "text": "I'm just gonna open that up again and refresh that so while I'm opening up slide oh this is a chance for you to ask",
    "start": "3241759",
    "end": "3248339"
  },
  {
    "text": "any questions so there's a little bit of a delay 8 6 0 okay let's take a quick",
    "start": "3248339",
    "end": "3255180"
  },
  {
    "text": "look here we go",
    "start": "3255180",
    "end": "3261490"
  },
  {
    "text": "this is a good question here from Eric some Eric says I didn't catch you say much about performance taking containers",
    "start": "3261490",
    "end": "3267730"
  },
  {
    "text": "up and down sounds like a lot of overhead especially in cascades of",
    "start": "3267730",
    "end": "3272829"
  },
  {
    "text": "east-west calls so what Merrick is talking about really here is what some people have described",
    "start": "3272829",
    "end": "3278260"
  },
  {
    "text": "as the as a cold spin up so a request comes in and I have to launch a",
    "start": "3278260",
    "end": "3284559"
  },
  {
    "text": "container to serve the request coming in now the time taken to cold start a",
    "start": "3284559",
    "end": "3289780"
  },
  {
    "text": "container like that could be quite long it relatively speaking if you're working",
    "start": "3289780",
    "end": "3295000"
  },
  {
    "text": "in a programming language like Java or or c-sharp the the nature of those",
    "start": "3295000",
    "end": "3300160"
  },
  {
    "text": "runtimes mean that have a bit of a longer ramp up time if you're working with something like Python nodejs",
    "start": "3300160",
    "end": "3305859"
  },
  {
    "text": "go they spin up much much faster so how quickly a cold spin up occurs is gonna",
    "start": "3305859",
    "end": "3313030"
  },
  {
    "text": "vary from platter from run time to run time so if you have to have very very fast spin up time so that's something",
    "start": "3313030",
    "end": "3319359"
  },
  {
    "text": "you might take to take into account the other thing is that the the underlying",
    "start": "3319359",
    "end": "3324579"
  },
  {
    "text": "fast platforms are going through huge amounts of optimizations to keep that cold spin uptime as low as possible",
    "start": "3324579",
    "end": "3329890"
  },
  {
    "text": "they're doing lots of things about sort of optimizing things at the JVM and the CLR to improve those spin up times you",
    "start": "3329890",
    "end": "3337089"
  },
  {
    "text": "might look into things like the firecracker VMs and stuff like that the Amma's are doing to to make those things",
    "start": "3337089",
    "end": "3342130"
  },
  {
    "text": "that contain it invocation even faster their third things going on here is it's",
    "start": "3342130",
    "end": "3347290"
  },
  {
    "text": "very rare you actually get a cold spin up so what actually happens so certainly I know this happens on AWS I'm not I'm",
    "start": "3347290",
    "end": "3353619"
  },
  {
    "text": "less sure about how it works on this year is Amazon actually keeps a sort of live copy of your container knocking it",
    "start": "3353619",
    "end": "3361180"
  },
  {
    "text": "keeps it around so although it's not executing once the function stops executing it leaves that container where",
    "start": "3361180",
    "end": "3367420"
  },
  {
    "text": "it is but it's in a dormant state and so in the end though that execution comes in they divert it to an already launched",
    "start": "3367420",
    "end": "3372760"
  },
  {
    "text": "container instance I said it's like it shuts down again because of the point of view of the function the function does",
    "start": "3372760",
    "end": "3379900"
  },
  {
    "text": "shutdown again it does vanish you know you don't have any state between those functions but actually they can to the",
    "start": "3379900",
    "end": "3386829"
  },
  {
    "text": "runtime that held that function can be kept hold of by the underlying cloud platform and so that she that might and",
    "start": "3386829",
    "end": "3392920"
  },
  {
    "text": "I might keep that around for hours and so you it's very rare that you'll see a full cult spin up time if you",
    "start": "3392920",
    "end": "3399980"
  },
  {
    "text": "wanna see more just check so what you",
    "start": "3399980",
    "end": "3406730"
  },
  {
    "text": "might want to do is to take a look I'm",
    "start": "3406730",
    "end": "3414770"
  },
  {
    "text": "just taking a look yes oh really interesting posts out",
    "start": "3414770",
    "end": "3420170"
  },
  {
    "text": "there I can certainly see let me just put a link on the cloud share though if",
    "start": "3420170",
    "end": "3426410"
  },
  {
    "text": "the thing to search for is cold start up time or cold start time there is a just",
    "start": "3426410",
    "end": "3433820"
  },
  {
    "text": "an article I read a while ago that might be a bit out of date this is they W a specific but it goes a little bit into",
    "start": "3433820",
    "end": "3440600"
  },
  {
    "text": "some of the detail around these spin up times so",
    "start": "3440600",
    "end": "3445150"
  },
  {
    "text": "so you might be interested in reading this article on how AWS does it this is",
    "start": "3451920",
    "end": "3459310"
  },
  {
    "text": "actually somebody from the outside in trying to look at how how long those",
    "start": "3459310",
    "end": "3465370"
  },
  {
    "text": "things are kept live for it also talks about the link between memory size and",
    "start": "3465370",
    "end": "3471190"
  },
  {
    "text": "spin up that's the other thing you do live thing about aspect around performance is you can sometimes see a",
    "start": "3471190",
    "end": "3477220"
  },
  {
    "text": "bit of variation in performance when you give a function a smaller amount of memory so like 128 256 Meg's what you",
    "start": "3477220",
    "end": "3485740"
  },
  {
    "text": "will often see is Amazon will actually and Isis you may do it as I say as you it is the same so AWS said okay well I'm",
    "start": "3485740",
    "end": "3493090"
  },
  {
    "text": "gonna give you at least 256 Meg and that's also a proxy for how much for CPU you get but if it's more spate that most",
    "start": "3493090",
    "end": "3500070"
  },
  {
    "text": "performance available to you they'll let you use extra capacity so what you'll see is with the smaller function sizes",
    "start": "3500070",
    "end": "3506500"
  },
  {
    "text": "you'll see a bit of variability in in how quickly those functions execute whereas actually if you want guaranteed",
    "start": "3506500",
    "end": "3513340"
  },
  {
    "text": "far throughput you often better picking a larger memory size as well and that tends to relay to the underlying machine",
    "start": "3513340",
    "end": "3520360"
  },
  {
    "text": "having been IO so there's so this is but the only level of control you have is that is that actual memory footprint the",
    "start": "3520360",
    "end": "3528220"
  },
  {
    "text": "person to follow on this for AWS anyway is Yan Sui who's there so Yan's also the",
    "start": "3528220",
    "end": "3533290"
  },
  {
    "text": "burning monk online this is actually one of his blog posts he's done so much work in this space for AWS I'm sure you'll",
    "start": "3533290",
    "end": "3540430"
  },
  {
    "text": "find other in the Microsoft world I'm sure there are some great MVPs out there that can help share knowledge with you",
    "start": "3540430",
    "end": "3546130"
  },
  {
    "text": "about how this works on Azure but I hope that makes sense and this is like I talked about in more detail on that I",
    "start": "3546130",
    "end": "3551920"
  },
  {
    "text": "Reilly close okay now let's see have I still got my as slides up I can see any",
    "start": "3551920",
    "end": "3558730"
  },
  {
    "text": "other questions [Music]",
    "start": "3558730",
    "end": "3563599"
  },
  {
    "text": "so I think I've got all the questions done I appreciate that I hope the lines been good enough for",
    "start": "3564690",
    "end": "3570930"
  },
  {
    "text": "you and you've been able to hear me if they've got any other questions for me best thing to do in the real conference",
    "start": "3570930",
    "end": "3578550"
  },
  {
    "text": "well you could grab me in the corridor we can have a chat we can't do that here so I would say Jess just ping me on",
    "start": "3578550",
    "end": "3584160"
  },
  {
    "text": "Twitter I'm just at Sam Newman on Twitter and as I said there's a whole load of information about all the kinds",
    "start": "3584160",
    "end": "3591060"
  },
  {
    "text": "of the work I do and books and all sorts of other things over on my website so I",
    "start": "3591060",
    "end": "3598079"
  },
  {
    "text": "hope you'll find something of interest to you and I hope you enjoy the rest of your day you",
    "start": "3598079",
    "end": "3604910"
  }
]