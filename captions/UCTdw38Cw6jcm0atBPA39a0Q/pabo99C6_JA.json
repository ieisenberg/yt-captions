[
  {
    "text": "the goal is to get code running in production that's my Mantra as a",
    "start": "2440",
    "end": "8280"
  },
  {
    "text": "consultant when I get go to work if a feature is not in production",
    "start": "8280",
    "end": "15080"
  },
  {
    "text": "and usable by the user then it's not providing any value so that's kind of how I think",
    "start": "15080",
    "end": "22279"
  },
  {
    "text": "about my job when I go there every day I want to get code to",
    "start": "22279",
    "end": "27320"
  },
  {
    "text": "production currently I am at the Norwegian directorate for education and",
    "start": "27320",
    "end": "32758"
  },
  {
    "text": "training in norian ut dor and our team there is around it",
    "start": "32759",
    "end": "38239"
  },
  {
    "text": "varies a bit between 15 and 30 people and we are responsible for three rather",
    "start": "38239",
    "end": "45200"
  },
  {
    "text": "big systems and we have three kind of sub teams that we go between and we do",
    "start": "45200",
    "end": "51160"
  },
  {
    "text": "continuous delivery we deploy to production as often as we can and as soon as we have",
    "start": "51160",
    "end": "58519"
  },
  {
    "text": "something of value usually we deploy only two three times a",
    "start": "58519",
    "end": "67240"
  },
  {
    "text": "week not because we can't do anymore but because and I'll get back to that we",
    "start": "67240",
    "end": "72560"
  },
  {
    "text": "have a kind of uh gated deploy to production we consider the master Branch",
    "start": "72560",
    "end": "80640"
  },
  {
    "text": "ready for production at any time some of you might know this as the uh GitHub",
    "start": "80640",
    "end": "87560"
  },
  {
    "text": "flow and that means we use feature toggles uh",
    "start": "87560",
    "end": "92720"
  },
  {
    "text": "we have peer reviews that are uh we put a lot of trust in our colleagues in PE",
    "start": "92720",
    "end": "98079"
  },
  {
    "text": "viws and we have short live feature branches so our process kind of looks",
    "start": "98079",
    "end": "103280"
  },
  {
    "text": "like this you start by uh branching out from Master you",
    "start": "103280",
    "end": "109759"
  },
  {
    "text": "write some code add some commits uh you open a peir view it gets",
    "start": "109759",
    "end": "116880"
  },
  {
    "text": "built to check if it actually compiles are run somebody from the team pair",
    "start": "116880",
    "end": "122680"
  },
  {
    "text": "reviews it says this is good and then I want to point out these two kind of manual steps we have if you have a",
    "start": "122680",
    "end": "130239"
  },
  {
    "text": "database migration in your pool request which means that when this change",
    "start": "130239",
    "end": "135560"
  },
  {
    "text": "reaches production if it migrates the database you should Mark it in the title",
    "start": "135560",
    "end": "140599"
  },
  {
    "text": "with this # DB migration now get back to that we also have the manual task of if",
    "start": "140599",
    "end": "148400"
  },
  {
    "text": "your um changes touches any task in our work",
    "start": "148400",
    "end": "153680"
  },
  {
    "text": "item in our work management system you put the ID in the title so it's easy to",
    "start": "153680",
    "end": "159080"
  },
  {
    "text": "see okay this work task uh these commits touch this work task doesn't matter if",
    "start": "159080",
    "end": "164920"
  },
  {
    "text": "it's done or if it's in progress or anything uh a work item like a work",
    "start": "164920",
    "end": "171440"
  },
  {
    "text": "management system that we use is jir atlan jira so that's an example but it doesn't really matter in the scope of",
    "start": "171440",
    "end": "177440"
  },
  {
    "text": "things here it could be Trello it could be whatever but we put the J Code of task we're working on in the title and",
    "start": "177440",
    "end": "184200"
  },
  {
    "text": "we merge in and as soon as this merg into master master just builds itself uh",
    "start": "184200",
    "end": "190080"
  },
  {
    "text": "more thorough tests and then it gets deployed to the dev or Canary environment whatever you want to call it",
    "start": "190080",
    "end": "196760"
  },
  {
    "text": "so the merge commit can look something like this just to get it absolutely clear clear we have a j task in there we have",
    "start": "196760",
    "end": "203840"
  },
  {
    "text": "the DB migration check you can see that there is a a bill that has to pass and",
    "start": "203840",
    "end": "208959"
  },
  {
    "text": "it also says approved on the bottom line which means someone on the team approved it and I wrote a little text there that",
    "start": "208959",
    "end": "216080"
  },
  {
    "text": "this DB migration hashtag that could probably uh be automized with the simple code",
    "start": "216080",
    "end": "223560"
  },
  {
    "text": "analysis so that's the way from uh developer to development uh environment",
    "start": "223560",
    "end": "231319"
  },
  {
    "text": "which we call Dev so it hits Dev and Dev is deployed to tens of tens of times a",
    "start": "231319",
    "end": "237519"
  },
  {
    "text": "day and we promote to the test environments when we want to do some more thorough testing",
    "start": "237519",
    "end": "244319"
  },
  {
    "text": "so we have three test environments as you can see test test two and Integrations Integrations is where we",
    "start": "244319",
    "end": "250720"
  },
  {
    "text": "test uh other uh systems test their Integrations towards us so it's a bit specialized for that and in the other",
    "start": "250720",
    "end": "257759"
  },
  {
    "text": "test envir we have more automated tests and thorough tests for Integrations we",
    "start": "257759",
    "end": "264800"
  },
  {
    "text": "have so when we are done and feel that we have a candidate for production C we put it in Q the Q&A",
    "start": "265240",
    "end": "272720"
  },
  {
    "text": "environment and the process we have is that when we put something in the Q&A uh",
    "start": "272720",
    "end": "279039"
  },
  {
    "text": "environment the customer wants their testers to approve the changes before we",
    "start": "279039",
    "end": "284840"
  },
  {
    "text": "roll it out to production and we're doing continuous delivery so it might be only three small changes but still they",
    "start": "284840",
    "end": "291080"
  },
  {
    "text": "want to check that these three things are okay before it goes to production the reason for this is that of course",
    "start": "291080",
    "end": "296880"
  },
  {
    "text": "they are a government agency and they care a lot about their reputation and they care a lot about the services they",
    "start": "296880",
    "end": "303800"
  },
  {
    "text": "provide to the rest of the sector because they are doing that as a government agency for the government so",
    "start": "303800",
    "end": "311080"
  },
  {
    "text": "they are they are they want us to be thorough they don't want things to break so this is kind of a middle way between",
    "start": "311080",
    "end": "317680"
  },
  {
    "text": "continuous delivery and a bit strict Gator deploy with",
    "start": "317680",
    "end": "323039"
  },
  {
    "text": "testing so when the testers get their hand on a version in the Q&A uh",
    "start": "323600",
    "end": "329080"
  },
  {
    "text": "environment the first question it what is the actual change here what is the actual change",
    "start": "329080",
    "end": "335479"
  },
  {
    "text": "that's going to go out into production that I need to look into and at",
    "start": "335479",
    "end": "343680"
  },
  {
    "text": "first they started uh looking to jir and seeing what in J has been put in the",
    "start": "343680",
    "end": "350680"
  },
  {
    "text": "progress for for uh for testing and they would use that but of course a lot of",
    "start": "350680",
    "end": "356400"
  },
  {
    "text": "things that was going to production were feature toggled away or there were a",
    "start": "356400",
    "end": "362160"
  },
  {
    "text": "code and Architectural integration changes that didn't really touch any user stories or maybe tasks in jira so",
    "start": "362160",
    "end": "369160"
  },
  {
    "text": "we wanted to automate this task and find out what are the changes and how can we",
    "start": "369160",
    "end": "375599"
  },
  {
    "text": "give these changes to the testers so they can test and approve the version",
    "start": "375599",
    "end": "382280"
  },
  {
    "text": "for production so I like to think of it as",
    "start": "382280",
    "end": "387319"
  },
  {
    "text": "this we need to get the changes between environment X and environment",
    "start": "387319",
    "end": "392720"
  },
  {
    "text": "y for a given project or a given application that's going to go to",
    "start": "392720",
    "end": "399280"
  },
  {
    "text": "production so you can look at it like this this is kind of a grid so given set",
    "start": "401319",
    "end": "407240"
  },
  {
    "text": "and X I can find out what version is in QA given set and Y I can find out which",
    "start": "407240",
    "end": "412639"
  },
  {
    "text": "version is in production and now I have the two versions of our our two artifact",
    "start": "412639",
    "end": "418919"
  },
  {
    "text": "versions so now I just need to somewhere find",
    "start": "418919",
    "end": "424280"
  },
  {
    "text": "what are the changes between them so it can look a bit like this let's think of it as a as a application or a function",
    "start": "424280",
    "end": "430800"
  },
  {
    "text": "that takes this input and gives us the changes in the other end so what we need to determine given this input because I",
    "start": "430800",
    "end": "437599"
  },
  {
    "text": "wanted the input to be the environment name and not any IDs or anything I",
    "start": "437599",
    "end": "444080"
  },
  {
    "text": "wanted this to be this function or app should be able to be called from a console app app from a web app directly",
    "start": "444080",
    "end": "452080"
  },
  {
    "text": "from the deployment uh service or application that we're using",
    "start": "452080",
    "end": "459280"
  },
  {
    "text": "so we need to somewhere to get the version in environment X now I'm thinking of the how to implement this we",
    "start": "459280",
    "end": "465400"
  },
  {
    "text": "need to get the version in environment X we need to get the version environment y uh we need to go somewhere and get the",
    "start": "465400",
    "end": "471360"
  },
  {
    "text": "changes between those two uh of course we're going to those are in git so that's where we need to go somehow and",
    "start": "471360",
    "end": "479080"
  },
  {
    "text": "here comes in the kind of bonus where we have this DB migration hashtags so we",
    "start": "479080",
    "end": "484560"
  },
  {
    "text": "can find uh if there are any migrations in this deploy and we also have some",
    "start": "484560",
    "end": "490919"
  },
  {
    "text": "work items so we can go to our work management system and fetch out some summar some statuses and Link everything",
    "start": "490919",
    "end": "496639"
  },
  {
    "text": "up so we get a smooth nice list so these are kind of the the four",
    "start": "496639",
    "end": "502440"
  },
  {
    "text": "things we're going to have to do inside our function go get the two versions get the",
    "start": "502440",
    "end": "509759"
  },
  {
    "text": "between them parse them for migration and work items and if there are any work items doesn't have to be we go and fetch",
    "start": "509759",
    "end": "517518"
  },
  {
    "text": "them in our case these are the three systems involved we use octopus deploy",
    "start": "517519",
    "end": "522560"
  },
  {
    "text": "for deployments we use team City for builds and jira for our work uh",
    "start": "522560",
    "end": "530839"
  },
  {
    "text": "management or project management so this is great because octopus deploy of course knows which package it's it's",
    "start": "530839",
    "end": "538920"
  },
  {
    "text": "it's job job to know what package is in what environment so I can just do two",
    "start": "538920",
    "end": "544279"
  },
  {
    "text": "calls there what is in X what is in y I'll get those back and then I can talk to the team City API they have a very",
    "start": "544279",
    "end": "550600"
  },
  {
    "text": "good rest API so I don't have to touch git at all they have a rest API over git perfect so I go there I tell team City",
    "start": "550600",
    "end": "557680"
  },
  {
    "text": "what are the changes between the two these two versions and then we parse them and what do you know JRA also has a",
    "start": "557680",
    "end": "565959"
  },
  {
    "text": "API so we're going to integrate with their API too or we did and we fetched",
    "start": "565959",
    "end": "572320"
  },
  {
    "text": "stuff from there so we basically need two things here to solve this problem we",
    "start": "572320",
    "end": "579680"
  },
  {
    "text": "need one tool or technology that is good at integrating uh fluently and easy with",
    "start": "579680",
    "end": "588160"
  },
  {
    "text": "apis and other systems and we need somewhere to put this app or function uh",
    "start": "588160",
    "end": "594680"
  },
  {
    "text": "when we're done without any hustle and I guess by the of the talk you're going to",
    "start": "594680",
    "end": "601120"
  },
  {
    "text": "by now you have understood what these two tools are when we encountered this problem we",
    "start": "601120",
    "end": "607519"
  },
  {
    "text": "knew that F was the right tool for the job because we had experience with f",
    "start": "607519",
    "end": "613040"
  },
  {
    "text": "from before we've written like some rule engines domain specific languages we we have an entire solution in F that",
    "start": "613040",
    "end": "620000"
  },
  {
    "text": "heavily uses uh type providers and all of the good",
    "start": "620000",
    "end": "625320"
  },
  {
    "text": "stuff but just to take a step back we knew about what problems does f solved",
    "start": "625320",
    "end": "630760"
  },
  {
    "text": "that it actually solved for us we ended up writing less code that",
    "start": "630760",
    "end": "637279"
  },
  {
    "text": "gave us less errors that's given but especially the last two in a very complicated domain where we're uh doing",
    "start": "637279",
    "end": "645120"
  },
  {
    "text": "a lot of work and there is a lot of room for errors we notice that having option",
    "start": "645120",
    "end": "650440"
  },
  {
    "text": "types and no null and having a super strong type system if you catched",
    "start": "650440",
    "end": "656079"
  },
  {
    "text": "Scott's talk the last one yesterday in this room you saw how powerful the type system is but combining all this we",
    "start": "656079",
    "end": "662680"
  },
  {
    "text": "didn't get any loose cases or or invalid States in our program so we were able to",
    "start": "662680",
    "end": "669680"
  },
  {
    "text": "solve a very complex domain in an easy way which is where F really",
    "start": "669680",
    "end": "675200"
  },
  {
    "text": "shines and of course the biggest thing for us was maybe type providers because we had a lot of different sources we had",
    "start": "675200",
    "end": "682760"
  },
  {
    "text": "SQL we had Json we had CSV and with type providers we got all that easily into",
    "start": "682760",
    "end": "689760"
  },
  {
    "text": "types without having to write user generated code we didn't have to do code",
    "start": "689760",
    "end": "695240"
  },
  {
    "text": "generation which is usually what you would do in C but user generation is not",
    "start": "695240",
    "end": "701320"
  },
  {
    "text": "type providers type providers you can think of them as code generation is just you don't have to think about code being",
    "start": "701320",
    "end": "709000"
  },
  {
    "text": "generated into your project if you have ever right clicked and did a done a ad",
    "start": "709000",
    "end": "714680"
  },
  {
    "text": "service reference in your a web project you will know it generates a lot of code",
    "start": "714680",
    "end": "719839"
  },
  {
    "text": "and then if the API or service changes you have to go in again generate more code to get the changes and type",
    "start": "719839",
    "end": "726800"
  },
  {
    "text": "providers they they kind of takes that away from",
    "start": "726800",
    "end": "731959"
  },
  {
    "text": "you they uh they do it for you they are lazy loaded so you can use them on Big",
    "start": "731959",
    "end": "739079"
  },
  {
    "text": "Data sources without your app generating thousands of files if there are thousands of types in this service and",
    "start": "739079",
    "end": "746880"
  },
  {
    "text": "there are type providers for everything SQL which which I will show you CSV Json XML there even a Swagger type provider",
    "start": "746880",
    "end": "753760"
  },
  {
    "text": "so if you have API that uses Swagger you want to integrate with it from a client",
    "start": "753760",
    "end": "759600"
  },
  {
    "text": "you can just use the Swagger type provider and you will get all the types all the functions uh you can call in",
    "start": "759600",
    "end": "765480"
  },
  {
    "text": "this API everything strongly typed and feedback directly in Visual Studio code",
    "start": "765480",
    "end": "771240"
  },
  {
    "text": "or Visual Studio or whatever so we had a big project in C",
    "start": "771240",
    "end": "780279"
  },
  {
    "text": "where we had the data layer also in C and we were using",
    "start": "780279",
    "end": "787079"
  },
  {
    "text": "Dapper I have to say this is a great piece of code for being CP at least but",
    "start": "787079",
    "end": "793600"
  },
  {
    "text": "this works and is easy to read you understand right away what it does of course we have much worse uh queries",
    "start": "793600",
    "end": "800399"
  },
  {
    "text": "than this in our application this is just to to point out a few potential",
    "start": "800399",
    "end": "805519"
  },
  {
    "text": "errors first of all this can resolve uh this can return null so you have",
    "start": "805519",
    "end": "811760"
  },
  {
    "text": "to remember to handle null the compiler doesn't help you so you have to have a",
    "start": "811760",
    "end": "817079"
  },
  {
    "text": "null check somewhere here because first or default it returns a result or null",
    "start": "817079",
    "end": "822920"
  },
  {
    "text": "so further up in stack you need to have a if statement to check for a null value",
    "start": "822920",
    "end": "828519"
  },
  {
    "text": "also notice that the SQL here is a string so if I have a typo in the string it will crash at run time not at compile",
    "start": "828519",
    "end": "835519"
  },
  {
    "text": "time so I'm going to have to write an integration test or something for this of course most likely I'll do that",
    "start": "835519",
    "end": "842959"
  },
  {
    "text": "anyway but I'd rather typos were caught a bit earlier and I didn't have to run a",
    "start": "842959",
    "end": "849120"
  },
  {
    "text": "lot of tests and uh to see that I have a",
    "start": "849120",
    "end": "853839"
  },
  {
    "text": "typo you can also see that the parameters we send in is an anonymous object so it doesn't have any mapping to",
    "start": "855000",
    "end": "861800"
  },
  {
    "text": "the actual parameter that is inside the SQL string so if I have a typo there or",
    "start": "861800",
    "end": "867680"
  },
  {
    "text": "it doesn't match run time error and also when we use Dapper we",
    "start": "867680",
    "end": "873560"
  },
  {
    "text": "ended up uh making a lot of uh types to map our database into our C code that",
    "start": "873560",
    "end": "880800"
  },
  {
    "text": "weren't domain objects so we ended up writing code for the database to easily",
    "start": "880800",
    "end": "885959"
  },
  {
    "text": "map everything in could write mappers but this is what that was the easiest",
    "start": "885959",
    "end": "891079"
  },
  {
    "text": "way to get data into the C app and then map them over to the main objects not the worst thing but a bit annoying",
    "start": "891079",
    "end": "899360"
  },
  {
    "text": "so when we were making a new project and we wanted to use the same stack that we have from before because we wanted new",
    "start": "899360",
    "end": "906240"
  },
  {
    "text": "developers to be able to work on both applications without too much hassle but we did one change and that's we decided",
    "start": "906240",
    "end": "913759"
  },
  {
    "text": "to move from Dapper as the data layer to the F data SQL client type provider it's",
    "start": "913759",
    "end": "920720"
  },
  {
    "text": "a tsql type provider so it's specific for SQL Server that we were using and we",
    "start": "920720",
    "end": "927079"
  },
  {
    "text": "only changed the data layer so the rest of the application was still C only the",
    "start": "927079",
    "end": "933000"
  },
  {
    "text": "library just before hitting the database was F and this is in production now so when",
    "start": "933000",
    "end": "941519"
  },
  {
    "text": "students take National test this Autumn uh all fifth 8th and nth graders uh have",
    "start": "941519",
    "end": "946959"
  },
  {
    "text": "to take those tests are Mentor the results will be saved and loaded with F I think that's",
    "start": "946959",
    "end": "953440"
  },
  {
    "text": "cool and before you say what the to this uh code",
    "start": "953440",
    "end": "959639"
  },
  {
    "text": "uh you might say why is this better it's just more code and it looks almost exactly the same well before I explain",
    "start": "959639",
    "end": "966120"
  },
  {
    "text": "why it looks like this I'm just going to say if I were now to write something in the you see the SQL is still a string",
    "start": "966120",
    "end": "973120"
  },
  {
    "text": "but if I was to write any types there I will get a red squiggly line under the whole string in visual studio right away",
    "start": "973120",
    "end": "980000"
  },
  {
    "text": "and it would tell me that this is not a table in the database this is not a column it actually checks against the",
    "start": "980000",
    "end": "986759"
  },
  {
    "text": "schema of your database that you are writing value SQL and you get compile time errors if it doesn't",
    "start": "986759",
    "end": "993440"
  },
  {
    "text": "match and this is why it looked like it did a lot of F code because we",
    "start": "993440",
    "end": "1000959"
  },
  {
    "text": "discovered that c f interrupt is a bit of",
    "start": "1000959",
    "end": "1006279"
  },
  {
    "text": "pain but it's absolutely worth it but it's something to be aware of I don't",
    "start": "1006480",
    "end": "1011720"
  },
  {
    "text": "want to come here and preach like use f as your data layer in your C app you",
    "start": "1011720",
    "end": "1017360"
  },
  {
    "text": "should if you wanted same things we wanted but there are some things to to",
    "start": "1017360",
    "end": "1022440"
  },
  {
    "text": "note here first of all I just want to put out out here with the async execute",
    "start": "1022440",
    "end": "1027720"
  },
  {
    "text": "function we're calling is a strongly typed input to the SQL string I had",
    "start": "1027720",
    "end": "1033600"
  },
  {
    "text": "before so if I were to in the string on the top here if I was to change the wear",
    "start": "1033600",
    "end": "1039038"
  },
  {
    "text": "Clause use the ID instead then the signature of the async execute here",
    "start": "1039039",
    "end": "1044798"
  },
  {
    "text": "would change from okay he I shouldn't ask for a string any more I should ask for a guid so it gets uh safety between",
    "start": "1044799",
    "end": "1053760"
  },
  {
    "text": "the handwritten query and calling it from your code as you can see we new up a object",
    "start": "1053760",
    "end": "1061720"
  },
  {
    "text": "down here mapping it from the the magic type of the type provider to our domain type I really regret us not writing our",
    "start": "1061720",
    "end": "1069799"
  },
  {
    "text": "domain types in F because F records are super easy to write and if you use them from C they are idiomatic C objects you",
    "start": "1069799",
    "end": "1079080"
  },
  {
    "text": "initiate everything to the Constructor and you don't have to uh and you only have like Getters so it's kind of how we",
    "start": "1079080",
    "end": "1086200"
  },
  {
    "text": "write C codes is just so much less code and it would look much nicer here still",
    "start": "1086200",
    "end": "1093200"
  },
  {
    "text": "the same from C we have somebody on the teamate like a options utils they you",
    "start": "1093200",
    "end": "1098280"
  },
  {
    "text": "see almost in the end here because when we come to the C side it expects not an",
    "start": "1098280",
    "end": "1103559"
  },
  {
    "text": "option like something or nothing it expects something or no",
    "start": "1103559",
    "end": "1109480"
  },
  {
    "text": "and the last thing we have to do is map from the beautiful async API in F over",
    "start": "1109480",
    "end": "1115600"
  },
  {
    "text": "to the TPL and Ayn a we in C sharp so most of",
    "start": "1115600",
    "end": "1121400"
  },
  {
    "text": "this code that makes this a bit hard to read and a bit messy is because of this uh C FP",
    "start": "1121400",
    "end": "1128280"
  },
  {
    "text": "interrupt and yeah code like this writing code like this in in have Shar",
    "start": "1128280",
    "end": "1133559"
  },
  {
    "text": "it keeps me awake at night a lot of people ask me how did the",
    "start": "1133559",
    "end": "1139360"
  },
  {
    "text": "team handle FP and I just want to say that I have amazing colleagues they",
    "start": "1139360",
    "end": "1145840"
  },
  {
    "text": "really are positive and they really see the benefits of it so even if they are",
    "start": "1145840",
    "end": "1151200"
  },
  {
    "text": "the ones much more than me working at this level and jumping between F and C",
    "start": "1151200",
    "end": "1156960"
  },
  {
    "text": "they they really see the benefits even though it's much harder to navigate in Visual Studio because if you try to",
    "start": "1156960",
    "end": "1163360"
  },
  {
    "text": "shift F12 like go to to definition on a or go find usages on a F function it",
    "start": "1163360",
    "end": "1170280"
  },
  {
    "text": "will start to decompile your C code and show you where it is it doesn't understand that I'm in the same",
    "start": "1170280",
    "end": "1177158"
  },
  {
    "text": "solution so the trick is just don't teach them the mutable keyword in F and",
    "start": "1178440",
    "end": "1184600"
  },
  {
    "text": "they will learn",
    "start": "1184600",
    "end": "1191200"
  },
  {
    "text": "okay so now we kind of find have our first tool in place to integrate with",
    "start": "1191200",
    "end": "1196360"
  },
  {
    "text": "these systems we already have knowledge with f we know that type providers are the best tool to use to do this so we're",
    "start": "1196360",
    "end": "1205520"
  },
  {
    "text": "going to use it so now we need somewhere to put our",
    "start": "1205520",
    "end": "1210760"
  },
  {
    "text": "function and of course function you start thinking about yeah every",
    "start": "1210760",
    "end": "1216360"
  },
  {
    "text": "everyone's talking about serverless or and functions as a service so that sounds like exactly what",
    "start": "1216360",
    "end": "1223840"
  },
  {
    "text": "we we need and as you probably have heard several times during this conf",
    "start": "1223840",
    "end": "1228960"
  },
  {
    "text": "like serverless is of course a business leading there are still servers running your code it's just that you don't have",
    "start": "1228960",
    "end": "1235640"
  },
  {
    "text": "to think about these servers at all that's a concept that you just throw out the window you don't think about",
    "start": "1235640",
    "end": "1242840"
  },
  {
    "text": "servers so like scaling and patching and problems related to up time these are",
    "start": "1242840",
    "end": "1249600"
  },
  {
    "text": "things you don't have to think about anymore when you run serverless code or run serverless and you're Outsourcing",
    "start": "1249600",
    "end": "1257640"
  },
  {
    "text": "everything about the the management to someone you",
    "start": "1257640",
    "end": "1263280"
  },
  {
    "text": "trust and usually that is or if you're going to do this you should use a public cloud provider like Microsoft or Google",
    "start": "1263280",
    "end": "1269799"
  },
  {
    "text": "or Amazon and yes you can you do serverless inhouse but it's not really serverless",
    "start": "1269799",
    "end": "1276720"
  },
  {
    "text": "because you're still doing it on premise and have all the problems with that and so you can focus on writing",
    "start": "1276720",
    "end": "1283640"
  },
  {
    "text": "code that provides business value like this is the whole point here you want to put as much everything else away so we",
    "start": "1283640",
    "end": "1289880"
  },
  {
    "text": "can focus on writing code that brings value to our business or to our",
    "start": "1289880",
    "end": "1295520"
  },
  {
    "text": "nonprofit whatever value so usually you see this like graph like why do you what",
    "start": "1295520",
    "end": "1301559"
  },
  {
    "text": "do you have to stop thinking about as you move from on premise to uh software",
    "start": "1301559",
    "end": "1306640"
  },
  {
    "text": "as a service which is uh an example of that is maybe all zero which has solved",
    "start": "1306640",
    "end": "1312559"
  },
  {
    "text": "the problem or Asher b2c they've solved the problem lack of authentication and authorization so you pay them to to uh",
    "start": "1312559",
    "end": "1320840"
  },
  {
    "text": "to give you that service and you don't have to worry about it you can provide value by writing business",
    "start": "1320840",
    "end": "1326440"
  },
  {
    "text": "code so as you move from on premise to I uh infrastructure as a service you stop",
    "start": "1326440",
    "end": "1332480"
  },
  {
    "text": "thinking about power you stop think you stop thinking about cooling you stop thinking about the toilet the security",
    "start": "1332480",
    "end": "1338880"
  },
  {
    "text": "guy at the data warehouse have to have in use while he's there and as you move from",
    "start": "1338880",
    "end": "1345440"
  },
  {
    "text": "infrastructure as a service over to platform as a service you stop thinking about networking and firewalls and all",
    "start": "1345440",
    "end": "1352039"
  },
  {
    "text": "this stuff and if you reach platform as a service and are doing it now then you're doing pretty good then you have a",
    "start": "1352039",
    "end": "1359159"
  },
  {
    "text": "lot of worries thrown out the door but you still have to think about a few things related to uh uptime and",
    "start": "1359159",
    "end": "1368120"
  },
  {
    "text": "scaling and I've taken this quote from Martin Fowler's blog where there's a",
    "start": "1368120",
    "end": "1373600"
  },
  {
    "text": "very good resource on serverless if you want to know more and uh this is a good quote if your platform as a service can",
    "start": "1373600",
    "end": "1379720"
  },
  {
    "text": "efficiently start instances in 20 milliseconds to run for half a second then call it serverless that's like the",
    "start": "1379720",
    "end": "1385159"
  },
  {
    "text": "the point here you actually pay for what you use so if you're running serverless",
    "start": "1385159",
    "end": "1390880"
  },
  {
    "text": "and in the middle of the night nobody is trying to reach your app then you're at zero you scale your node down to or you",
    "start": "1390880",
    "end": "1397600"
  },
  {
    "text": "don't you don't do it it's just zero nothing is running because there are no requests or input to handle where you",
    "start": "1397600",
    "end": "1404120"
  },
  {
    "text": "usually would in a platform as a service world have a app running ready to receive a request and if it suddenly",
    "start": "1404120",
    "end": "1410520"
  },
  {
    "text": "comes a thousand requests it has to uh you usually have Auto scaling or something like that it starts scaling",
    "start": "1410520",
    "end": "1418080"
  },
  {
    "text": "up but with servess if thousand requests comes in the middle of the in the middle",
    "start": "1418080",
    "end": "1423640"
  },
  {
    "text": "of the night then a thousand requests are processed in parallel because they start up they run and they",
    "start": "1423640",
    "end": "1430000"
  },
  {
    "text": "quit do their job so you can look away from this this scaling issue and you",
    "start": "1430000",
    "end": "1436799"
  },
  {
    "text": "again you can the thing I'm coming back to all the time which is like the main point is Right Cod that actually is",
    "start": "1436799",
    "end": "1443440"
  },
  {
    "text": "useful to you of course you should be careful with serverless that you are not",
    "start": "1443440",
    "end": "1449159"
  },
  {
    "text": "running a denial uh of service attack on your wallet because it will scale",
    "start": "1449159",
    "end": "1455400"
  },
  {
    "text": "unlimited I actually read a blog post uh a few days ago about a guy who put up two Asher functions that were calling",
    "start": "1455400",
    "end": "1461720"
  },
  {
    "text": "each other to cues but every time they called each other they I think he doubled the number of requests so it's",
    "start": "1461720",
    "end": "1469000"
  },
  {
    "text": "it's just getting more and more and more and more he just had to stop it in the end because he lost all his actual",
    "start": "1469000",
    "end": "1474520"
  },
  {
    "text": "credits or something but just be be aware of this and also I just want to note that",
    "start": "1474520",
    "end": "1481080"
  },
  {
    "text": "this is like serverless or functions as a service is not a silver bullet of course as with everything there are some",
    "start": "1481080",
    "end": "1487320"
  },
  {
    "text": "things to think about as I said you scale to zero so you have to something has to start when your",
    "start": "1487320",
    "end": "1494559"
  },
  {
    "text": "request hits the your app which means you have some kind of latency where a",
    "start": "1494559",
    "end": "1500559"
  },
  {
    "text": "platform as a service application could be ready and primed cash running",
    "start": "1500559",
    "end": "1506039"
  },
  {
    "text": "everything and when I request hit it's like boom We function as a service they are all the time working to get the",
    "start": "1506039",
    "end": "1512840"
  },
  {
    "text": "latency down but there is something that has to get injected and started for your",
    "start": "1512840",
    "end": "1517960"
  },
  {
    "text": "request to be processed so there is kind of like a a startup cost every time you you start",
    "start": "1517960",
    "end": "1527000"
  },
  {
    "text": "it I don't of course since it gets stopped after it's done you have to",
    "start": "1527000",
    "end": "1532600"
  },
  {
    "text": "think about state in this functions if you want to have some kind of state it",
    "start": "1532600",
    "end": "1537840"
  },
  {
    "text": "needs to be pulled from somewhere some kind of document Tob you have to run it into your state machine and then save it",
    "start": "1537840",
    "end": "1544720"
  },
  {
    "text": "again because the function doesn't have any state also uh running these things",
    "start": "1544720",
    "end": "1551880"
  },
  {
    "text": "locally on your own machine is a bit of a the more you like put the things in",
    "start": "1551880",
    "end": "1557039"
  },
  {
    "text": "the cloud the harder it gets to get a short feedback loop running on your",
    "start": "1557039",
    "end": "1562120"
  },
  {
    "text": "machine you have to have a Dev environment in in your CL at your cloud provider and you're working against that",
    "start": "1562120",
    "end": "1567799"
  },
  {
    "text": "all the time does something with your feedback loop where you with the normal little program can be on your machine",
    "start": "1567799",
    "end": "1573039"
  },
  {
    "text": "and everything happens there and of course uh vendor lock in is a problem",
    "start": "1573039",
    "end": "1580600"
  },
  {
    "text": "with serverless if you start using these Services of course you should write your code as you always do it with good uh",
    "start": "1580600",
    "end": "1586640"
  },
  {
    "text": "modulation and libraries and everything but you will most likely start using",
    "start": "1586640",
    "end": "1592360"
  },
  {
    "text": "services that and should probably in most cases but just be aware of it if",
    "start": "1592360",
    "end": "1597640"
  },
  {
    "text": "it's very important to you that you can change uh or switch your provider at any",
    "start": "1597640",
    "end": "1605039"
  },
  {
    "text": "time so we're going to go to Asher functions not because uh the code we're",
    "start": "1605200",
    "end": "1610440"
  },
  {
    "text": "making or made doesn't run in any other cloud provider but because Asher function supported the F straight out",
    "start": "1610440",
    "end": "1618440"
  },
  {
    "text": "the door and uh we already had AER subscription so I'm not going to be here telling you AER functions is the best uh",
    "start": "1618440",
    "end": "1627240"
  },
  {
    "text": "function as a service platform uh I'm not sure I think that myself it's just",
    "start": "1627240",
    "end": "1632600"
  },
  {
    "text": "suited our needs the best and we already had a assur subscription so and it",
    "start": "1632600",
    "end": "1638360"
  },
  {
    "text": "works the cool thing about uh as functions is that the runtime is running",
    "start": "1638360",
    "end": "1644440"
  },
  {
    "text": "on top of app Services which means that all the things you get from map services",
    "start": "1644440",
    "end": "1649600"
  },
  {
    "text": "that you love and hate you get them in uh aure functions too things like",
    "start": "1649600",
    "end": "1654760"
  },
  {
    "text": "deployment slots authentication in front of your function um you get this whole dashboard",
    "start": "1654760",
    "end": "1661279"
  },
  {
    "text": "you're used to and also a cool thing is that the runtime of Ash function can run locally on your machine so you can run",
    "start": "1661279",
    "end": "1668240"
  },
  {
    "text": "up your uh functions on your machine and debug through them set break points and",
    "start": "1668240",
    "end": "1674120"
  },
  {
    "text": "everything uh as far as I know no other cloud provider of offers that with their",
    "start": "1674120",
    "end": "1680679"
  },
  {
    "text": "serverless uh offerings and of course you have a lot of triggers and integration to Services",
    "start": "1680679",
    "end": "1686760"
  },
  {
    "text": "already in Asher uh which I will show a bit later the bad thing with this uh runtime",
    "start": "1686760",
    "end": "1693559"
  },
  {
    "text": "is of course it only runs in Windows and I prefer to use OSX so I don't get too",
    "start": "1693559",
    "end": "1700279"
  },
  {
    "text": "much gain out of that uh I guess they will make it crossplatform like everything else they're doing now",
    "start": "1700279",
    "end": "1706279"
  },
  {
    "text": "Microsoft but right now I can can't use it on OSX that sucks a",
    "start": "1706279",
    "end": "1712760"
  },
  {
    "text": "bit okay so now we have the two tools we want to use we",
    "start": "1716039",
    "end": "1723080"
  },
  {
    "text": "want to combine f with Asher functions to solve all our problem to find the",
    "start": "1723080",
    "end": "1730240"
  },
  {
    "text": "changes between these",
    "start": "1730240",
    "end": "1733840"
  },
  {
    "text": "environments let's get out of the slides and actually show",
    "start": "1736799",
    "end": "1744039"
  },
  {
    "text": "something so the code base looks something like uh what you can see on",
    "start": "1749279",
    "end": "1755120"
  },
  {
    "text": "the left here a normal solution that you would make in Visual Studio or anything",
    "start": "1755120",
    "end": "1761960"
  },
  {
    "text": "has the this is how I would make any Net Solution these days",
    "start": "1761960",
    "end": "1769320"
  },
  {
    "text": "but what's important here if you look away from the names here like oh function this is interesting ah swab",
    "start": "1769320",
    "end": "1776399"
  },
  {
    "text": "like the main thing here lies in a library because even if I'm going serverless I'm still going to write my",
    "start": "1776399",
    "end": "1783799"
  },
  {
    "text": "business code I'm still going to write modules I'm going to put it in libraries I'm not going to change my good habits",
    "start": "1783799",
    "end": "1790799"
  },
  {
    "text": "of doing that just because I'm suddenly running functions in the",
    "start": "1790799",
    "end": "1795799"
  },
  {
    "text": "cloud so this is a very simple Library where we basically have one entry",
    "start": "1796159",
    "end": "1805000"
  },
  {
    "text": "point and it's a function to get changes between environments just what we",
    "start": "1805760",
    "end": "1814080"
  },
  {
    "text": "wanted it takes in uh some arguments and those include uh some input which we saw",
    "start": "1814080",
    "end": "1822000"
  },
  {
    "text": "earlier the input it also takes some things it needs to know in our specific",
    "start": "1822000",
    "end": "1827640"
  },
  {
    "text": "case for uh finding this out",
    "start": "1827640",
    "end": "1832720"
  },
  {
    "text": "and if I uh was coming here showing you best practices these will probably lie be lying in a key Vault on Asher or some",
    "start": "1832720",
    "end": "1840159"
  },
  {
    "text": "more secure place but right now they are in a environment string so don't do that if you're in uh if you have sensitive",
    "start": "1840159",
    "end": "1848760"
  },
  {
    "text": "information or something it's uh it's not best practice but anyway this is our input to the function and I just want to",
    "start": "1848760",
    "end": "1856080"
  },
  {
    "text": "be very clear that what I'm about to show with the tie providers and everything even though you see J and T",
    "start": "1856080",
    "end": "1862200"
  },
  {
    "text": "TC for team City here it that's not really relevant that's just a like",
    "start": "1862200",
    "end": "1867320"
  },
  {
    "text": "implementation detail that we use those systems it doesn't mean you have",
    "start": "1867320",
    "end": "1873320"
  },
  {
    "text": "to so we take in these arguments and here",
    "start": "1874679",
    "end": "1880760"
  },
  {
    "text": "we see the first sign of a type provider because we actually have uh config",
    "start": "1880760",
    "end": "1889399"
  },
  {
    "text": "that gives us some more information it actually holds the URLs",
    "start": "1889399",
    "end": "1896840"
  },
  {
    "text": "it holds a link to GitHub so we can hook up commits and have clickable links in our change log it also gives us the",
    "start": "1896840",
    "end": "1903960"
  },
  {
    "text": "mapping between uh octopus deploy and team city so we know which team City",
    "start": "1903960",
    "end": "1909240"
  },
  {
    "text": "build configuration uh is uh related to what",
    "start": "1909240",
    "end": "1914480"
  },
  {
    "text": "octopus project again this is just implementation details it doesn't really",
    "start": "1914480",
    "end": "1919559"
  },
  {
    "text": "matter it's just for mapping uh between the systems small and",
    "start": "1919559",
    "end": "1925559"
  },
  {
    "text": "easy but the cool thing here is that I'm using the yaml config type Provider from",
    "start": "1925559",
    "end": "1932080"
  },
  {
    "text": "F configuration and I'm reading in this yaml file to and it creates a type for me and",
    "start": "1932080",
    "end": "1939120"
  },
  {
    "text": "as you can see here from the signature I get the things I uh provided in the",
    "start": "1939120",
    "end": "1945080"
  },
  {
    "text": "config in as types as strongly typed uh",
    "start": "1945080",
    "end": "1950519"
  },
  {
    "text": "I get them strongly typed and you can see here that even discovered that these URLs are Uris it doesn't give me strings",
    "start": "1950519",
    "end": "1957519"
  },
  {
    "text": "it actually gives me uis and it creates another type inside my projects because",
    "start": "1957519",
    "end": "1963039"
  },
  {
    "text": "it's saw okay you have a list of something in your config so now I can set pull out these",
    "start": "1963039",
    "end": "1970600"
  },
  {
    "text": "uh values that I want from there and I have what I need to start fetching",
    "start": "1970600",
    "end": "1978399"
  },
  {
    "text": "the two things I was wondering about which version is in environment X which version is in environment",
    "start": "1978399",
    "end": "1986000"
  },
  {
    "text": "Y and these are of course the same the same function is called but just two times one time for",
    "start": "1986000",
    "end": "1992679"
  },
  {
    "text": "each environment X and Y so inside here this is again this is just",
    "start": "1992679",
    "end": "2000360"
  },
  {
    "text": "implementation details basically but what we do we have to put like the API key in the",
    "start": "2000360",
    "end": "2005519"
  },
  {
    "text": "header and then we have to call the projects list to get the list of projects so we can get the project ID",
    "start": "2005519",
    "end": "2012600"
  },
  {
    "text": "you get my point this isn't this isn't relevant for this this is because the way the API of octopus is built built up",
    "start": "2012600",
    "end": "2019840"
  },
  {
    "text": "I have to do a bit more calls than I would actually like to but the cool thing here is again type",
    "start": "2019840",
    "end": "2028440"
  },
  {
    "text": "providers this time I'm using the Json type provider and I've provided samples",
    "start": "2028440",
    "end": "2035200"
  },
  {
    "text": "for these two end end points I'm calling one is the project list which is a",
    "start": "2035200",
    "end": "2041240"
  },
  {
    "text": "endpoint and this is uh what I do I just call it from Postman I get the response and I paste it in here as a string when",
    "start": "2041240",
    "end": "2048240"
  },
  {
    "text": "I put literal over it's just a it's the same as a constant in C what it means is that I now have uh a sample here that my",
    "start": "2048240",
    "end": "2057480"
  },
  {
    "text": "type provider can read and make types from so it doesn't have to be pull uh polling the API that provides me this",
    "start": "2057480",
    "end": "2064440"
  },
  {
    "text": "Json in any way uh to to create the types cuz I don't want that so in this",
    "start": "2064440",
    "end": "2070000"
  },
  {
    "text": "case where I pull Json over the net I I want a sample here that to create my",
    "start": "2070000",
    "end": "2075919"
  },
  {
    "text": "types from when we use the SQL type provider we have a uh like we did in the",
    "start": "2075919",
    "end": "2081358"
  },
  {
    "text": "other project that I showed you earlier then we actually have a local DB running on",
    "start": "2081359",
    "end": "2087118"
  },
  {
    "text": "our own machine with the latest and greatest migration and it checks constantly that what you're writing Maps",
    "start": "2087119",
    "end": "2094280"
  },
  {
    "text": "the schema",
    "start": "2094280",
    "end": "2097440"
  },
  {
    "text": "so I basically read in these two samples and what octopus no sorry what the type provider does Json type provider is to",
    "start": "2099720",
    "end": "2106040"
  },
  {
    "text": "make me uh types so when I then go on and do a HTTP",
    "start": "2106040",
    "end": "2113079"
  },
  {
    "text": "request and get this project list Jon back from the API I can parse it with my",
    "start": "2113079",
    "end": "2118960"
  },
  {
    "text": "type and then I get I have type safety here and I can",
    "start": "2118960",
    "end": "2126200"
  },
  {
    "text": "start I can map it over to the items and then I can go in and I can see okay which",
    "start": "2126200",
    "end": "2131800"
  },
  {
    "text": "project uh in the list has a name equal",
    "start": "2131800",
    "end": "2137119"
  },
  {
    "text": "the uh project name that was the input to my function and I give some uh I just",
    "start": "2137119",
    "end": "2142560"
  },
  {
    "text": "crash everything if I can't find it of course you can do whatever you want here then I have the project ID then I",
    "start": "2142560",
    "end": "2149839"
  },
  {
    "text": "can do another API call to get the all the information about the",
    "start": "2149839",
    "end": "2155440"
  },
  {
    "text": "project and in there I can find out which version of the app is actually",
    "start": "2155440",
    "end": "2164119"
  },
  {
    "text": "deployed in the environment that I'm interested in so a bit of back and forth",
    "start": "2164119",
    "end": "2171160"
  },
  {
    "text": "but I get type safety the whole way so I'm not really scared",
    "start": "2171160",
    "end": "2177079"
  },
  {
    "text": "and if there's something with the Json response that is not uh parsable in any",
    "start": "2177079",
    "end": "2183319"
  },
  {
    "text": "way I can still kind of access the properties uh unsafe this is a bit the",
    "start": "2183319",
    "end": "2190200"
  },
  {
    "text": "reason for this is that uh the octopus API puts things like ID here not inside",
    "start": "2190200",
    "end": "2197079"
  },
  {
    "text": "some kind of value but in the Json as a as a object so this ID I don't know what",
    "start": "2197079",
    "end": "2203359"
  },
  {
    "text": "it is or I need to like parse the deployments to find it so",
    "start": "2203359",
    "end": "2209839"
  },
  {
    "text": "anyway a lot of just working with the octopus API but type safety and it all",
    "start": "2209839",
    "end": "2217200"
  },
  {
    "text": "fits here on a pretty zoomed in screen so that's",
    "start": "2217200",
    "end": "2222560"
  },
  {
    "text": "cool and it in the end it Returns the version of the release so",
    "start": "2222560",
    "end": "2228920"
  },
  {
    "text": "basically super simple function takes in these four things puts out a version",
    "start": "2228920",
    "end": "2235599"
  },
  {
    "text": "name then you can see that we do the same for the two environment version and",
    "start": "2236040",
    "end": "2241440"
  },
  {
    "text": "then we have the two versions that we want to find the differences between what we do then is read from the",
    "start": "2241440",
    "end": "2248920"
  },
  {
    "text": "config file again where we had all the projects so you can see here we have a list of projects we have we now have the",
    "start": "2248920",
    "end": "2256880"
  },
  {
    "text": "we have the octopus deploy name because that's our input that's how we reference to the project name and now we want to",
    "start": "2256880",
    "end": "2263720"
  },
  {
    "text": "go to Team City to find a difference between the two version we just versions we just pulled from um from",
    "start": "2263720",
    "end": "2271640"
  },
  {
    "text": "octopus so basically this is just code for mapping from the octopus name to the",
    "start": "2271640",
    "end": "2276880"
  },
  {
    "text": "see Team city name and then we have another uh function which basically does the exact",
    "start": "2276880",
    "end": "2283640"
  },
  {
    "text": "same thing as the first function just towards the team City API some specific",
    "start": "2283640",
    "end": "2289480"
  },
  {
    "text": "things here that are not important some troubles with the team City API we have to handle a bit it's not really",
    "start": "2289480",
    "end": "2296119"
  },
  {
    "text": "important it's probably a NIC way to solve it but basically what we do is call the team City",
    "start": "2296119",
    "end": "2302920"
  },
  {
    "text": "API and we ask for uh one build and we want everything that's happened since",
    "start": "2302920",
    "end": "2310240"
  },
  {
    "text": "another build and we are interested in things like the number or version the",
    "start": "2310240",
    "end": "2316680"
  },
  {
    "text": "status of the build uh but especially this is what we're here for changes and",
    "start": "2316680",
    "end": "2322040"
  },
  {
    "text": "we want the we want the ID and the commment we",
    "start": "2322040",
    "end": "2327119"
  },
  {
    "text": "only care about the commment because remember from before that's what we're going to parse so we parse in we get the changes",
    "start": "2327119",
    "end": "2335000"
  },
  {
    "text": "and we get them type save with the type provider not too much code is more like just handling the",
    "start": "2335000",
    "end": "2340599"
  },
  {
    "text": "data and we end up with sorry and we end up with uh the",
    "start": "2340599",
    "end": "2346680"
  },
  {
    "text": "builds in a and you see here that we have a a sequence sequence in F is the",
    "start": "2346680",
    "end": "2352400"
  },
  {
    "text": "same as inumerable of build because what we do inside here is that in the end we",
    "start": "2352400",
    "end": "2359400"
  },
  {
    "text": "actually map them to our own type of build because we don't we want to just",
    "start": "2359400",
    "end": "2366160"
  },
  {
    "text": "uh put them in a type for easier to easier work with them",
    "start": "2366160",
    "end": "2371200"
  },
  {
    "text": "later so then we have the builds and then we can just start here's some hard coding by the way uh but uh we have this",
    "start": "2372000",
    "end": "2380359"
  },
  {
    "text": "info here in the in the config so this should probably read from the config and",
    "start": "2380359",
    "end": "2385880"
  },
  {
    "text": "not do this horrible hardcoded uh matching here but",
    "start": "2385880",
    "end": "2391680"
  },
  {
    "text": "basically we just go through all the commit messages regex them find the J keys",
    "start": "2391680",
    "end": "2397920"
  },
  {
    "text": "and then the same thing again I don't even have to go into this one because you know what happens takes some input",
    "start": "2397920",
    "end": "2404000"
  },
  {
    "text": "uses the typ provider and a sample from the G API to get typ safe access to the",
    "start": "2404000",
    "end": "2409200"
  },
  {
    "text": "G API and it gets the things I am interested about in these",
    "start": "2409200",
    "end": "2415240"
  },
  {
    "text": "issues so we parse them and we do this thing that we mentioned earlier we parse parse the the merge",
    "start": "2415240",
    "end": "2423720"
  },
  {
    "text": "uh commits from the cuz we we pull the changes from City and that's all the",
    "start": "2423720",
    "end": "2429359"
  },
  {
    "text": "changes so we want to find what are the merge commits because we want to show the merge commits in the bottom of our",
    "start": "2429359",
    "end": "2434720"
  },
  {
    "text": "change log for our for developers we check if there is the",
    "start": "2434720",
    "end": "2441839"
  },
  {
    "text": "hashtag DB migration and even if you don't know F Shar and this looks like a lot it's just it's super simple what",
    "start": "2441839",
    "end": "2448319"
  },
  {
    "text": "we're doing here just doing some regex testing to filter on that and we're just",
    "start": "2448319",
    "end": "2454680"
  },
  {
    "text": "checking if something has this DB migration uh",
    "start": "2454680",
    "end": "2459240"
  },
  {
    "text": "tag and then when we have everything we need we can create our change log",
    "start": "2460000",
    "end": "2466359"
  },
  {
    "text": "type and that's what we return from this module we get a project name we get a",
    "start": "2466400",
    "end": "2473760"
  },
  {
    "text": "environment that this change log is from which include the name and the version we have two same there name and version",
    "start": "2473760",
    "end": "2481000"
  },
  {
    "text": "we have all the commits in between these two versions or all the all the merge commits we have all the jira issues",
    "start": "2481000",
    "end": "2487440"
  },
  {
    "text": "mentioned by our developers in the pr title which becomes the merge commit and",
    "start": "2487440",
    "end": "2495640"
  },
  {
    "text": "we have info if there is a migration or not so that's basically the library that",
    "start": "2495640",
    "end": "2502359"
  },
  {
    "text": "lets us get create the change log and now it doesn't matter where I",
    "start": "2502359",
    "end": "2508400"
  },
  {
    "text": "host this like this is this was a module or a or a project that solves a specific",
    "start": "2508400",
    "end": "2516160"
  },
  {
    "text": "problem and I made it this way so now if I want to test it I want to run it up I",
    "start": "2516160",
    "end": "2521280"
  },
  {
    "text": "can use Suave or anything else I don't have to use asual",
    "start": "2521280",
    "end": "2526400"
  },
  {
    "text": "functions so basically just put in the parameters here",
    "start": "2526400",
    "end": "2531960"
  },
  {
    "text": "hardcoded I map up some few end points just to test and I added like a uh just",
    "start": "2531960",
    "end": "2539520"
  },
  {
    "text": "a small module to take the Json and turn it into something that is readable",
    "start": "2539520",
    "end": "2546559"
  },
  {
    "text": "so now if I build it will",
    "start": "2549079",
    "end": "2556480"
  },
  {
    "text": "hopefully be able to",
    "start": "2558319",
    "end": "2562000"
  },
  {
    "text": "find actually do don't uh build in parallel here so it's my fault that it's",
    "start": "2563800",
    "end": "2568920"
  },
  {
    "text": "not it's taking some time now we built uh Suave and I just want to run it up",
    "start": "2568920",
    "end": "2575800"
  },
  {
    "text": "here to Mono and I see it's running on [Music] 8080 so if I now go to 880 basically all",
    "start": "2575800",
    "end": "2583480"
  },
  {
    "text": "I should do is get changes as markdown it calls my library that we looked at",
    "start": "2583480",
    "end": "2588760"
  },
  {
    "text": "before and it takes this change log type and turns it into something that's uh",
    "start": "2588760",
    "end": "2594680"
  },
  {
    "text": "readable to me basically turns it into markdown because that's easier for me to write and then just uses a library that",
    "start": "2594680",
    "end": "2601440"
  },
  {
    "text": "takes mark down and makes it into HTML so if I I go to",
    "start": "2601440",
    "end": "2608920"
  },
  {
    "text": "Local Host 8080 now I'm betting everything on yeah",
    "start": "2608920",
    "end": "2616200"
  },
  {
    "text": "there we go now I changed I checked actually between the dev environment and",
    "start": "2616200",
    "end": "2621640"
  },
  {
    "text": "production so as you can see there is a lot of stuff here but the cool thing is",
    "start": "2621640",
    "end": "2627440"
  },
  {
    "text": "that we have now uh links straight into Y where we can check out these tasks",
    "start": "2627440",
    "end": "2633440"
  },
  {
    "text": "that was very poorly formatted um and we can see what kind of is it a task",
    "start": "2633440",
    "end": "2641359"
  },
  {
    "text": "is it a bug um what is the status status in our campan board is it on the peer",
    "start": "2641359",
    "end": "2647440"
  },
  {
    "text": "riew is it done so what is the what's the story and we see all the",
    "start": "2647440",
    "end": "2653760"
  },
  {
    "text": "merge commits and this package changes the SQL schema and possibly data the reason why we're",
    "start": "2653760",
    "end": "2660640"
  },
  {
    "text": "wondering if there is a DB migration is because we do rolling deploys and if someone does a breaking change",
    "start": "2660640",
    "end": "2667720"
  },
  {
    "text": "we don't want people to do breaking changes in the database over just two versions but if somebody does uh we",
    "start": "2667720",
    "end": "2674920"
  },
  {
    "text": "during our rolling deploy we will have two versions in production until the new version is all the way have replaced the",
    "start": "2674920",
    "end": "2680839"
  },
  {
    "text": "old one and if we have two versions that don't work against the same database",
    "start": "2680839",
    "end": "2687160"
  },
  {
    "text": "then one of the versions will crash so when we do a breaking change in the",
    "start": "2687160",
    "end": "2692640"
  },
  {
    "text": "database we want to do it over three versions so first we make a version that implement Ms the the change but in a way",
    "start": "2692640",
    "end": "2699000"
  },
  {
    "text": "that also works with the old version and then uh when we got that version out and",
    "start": "2699000",
    "end": "2704119"
  },
  {
    "text": "the old one is gone then we can make a new version that actually maybe deletes the or does the breaking change towards",
    "start": "2704119",
    "end": "2710559"
  },
  {
    "text": "that version before so you need to have kind of a middle version to fix that which you don't need if you have",
    "start": "2710559",
    "end": "2717000"
  },
  {
    "text": "like a more appropriate data store or blue green deploys or something like",
    "start": "2717000",
    "end": "2722880"
  },
  {
    "text": "that so now we have something that they can use and they can test with to see if",
    "start": "2722880",
    "end": "2730280"
  },
  {
    "text": "the changes going to production uh work we have it running here it is",
    "start": "2730280",
    "end": "2737760"
  },
  {
    "text": "from between QA and production right now for one of our systems piling up because uh everyone is",
    "start": "2737760",
    "end": "2745200"
  },
  {
    "text": "at NDC and we put this like as a minimum",
    "start": "2745200",
    "end": "2751720"
  },
  {
    "text": "viable version of it we just put it in Asher functions as one function which",
    "start": "2751720",
    "end": "2757119"
  },
  {
    "text": "look like this basically what we do is that this is a function that takes a HTTP request",
    "start": "2757119",
    "end": "2763240"
  },
  {
    "text": "and returns a HTTP response can't get more easy than that and this is",
    "start": "2763240",
    "end": "2768640"
  },
  {
    "text": "the one of two files you need to do that here you basically we just in a ugly way",
    "start": "2768640",
    "end": "2775800"
  },
  {
    "text": "parse out from the HTTP URL get parameters what these",
    "start": "2775800",
    "end": "2784520"
  },
  {
    "text": "um parameters we need are and we have one extra that says like okay I can give it to you in Json or I can do this ugly",
    "start": "2784520",
    "end": "2793640"
  },
  {
    "text": "uh thing we have here like if you pass false to the Json parameters it gives",
    "start": "2793640",
    "end": "2798880"
  },
  {
    "text": "you a markdown this was like the first thing we just right down to get it out",
    "start": "2798880",
    "end": "2804640"
  },
  {
    "text": "and it worked so this is now hosted in",
    "start": "2804640",
    "end": "2809920"
  },
  {
    "text": "an as function",
    "start": "2809920",
    "end": "2812799"
  },
  {
    "text": "app this this is the function app UI it's a bit different than some of the",
    "start": "2815680",
    "end": "2822559"
  },
  {
    "text": "other uis on on Asher but if you go to platform Services you'll see what I mentioned before that asure functions",
    "start": "2822559",
    "end": "2829440"
  },
  {
    "text": "has the same a lot of the same stuff that um app service has because it's",
    "start": "2829440",
    "end": "2835359"
  },
  {
    "text": "built on top of app service so here's our function and I can't see my function",
    "start": "2835359",
    "end": "2841920"
  },
  {
    "text": "here all I see here is the function. Json uh file that you put next to your",
    "start": "2841920",
    "end": "2847240"
  },
  {
    "text": "function it tells something about what as function should expect in and out of your function so here you can see what",
    "start": "2847240",
    "end": "2854520"
  },
  {
    "text": "triggers the function yeah it's a HTTP and it only works with get and it",
    "start": "2854520",
    "end": "2860960"
  },
  {
    "text": "responds with HTTP but what you should notice here is that the reason I can't see the code is",
    "start": "2860960",
    "end": "2867720"
  },
  {
    "text": "because before we deployed it we compiled it to get compiler feedback so",
    "start": "2867720",
    "end": "2873280"
  },
  {
    "text": "basically we're saying we have a dll which has a name space with this run function I showed you just now and run",
    "start": "2873280",
    "end": "2879599"
  },
  {
    "text": "that so I can't do too much here and you see here says your app is currently in read only mode because you have Source",
    "start": "2879599",
    "end": "2886319"
  },
  {
    "text": "control integration Ena so it's a lot of power in this this",
    "start": "2886319",
    "end": "2891640"
  },
  {
    "text": "tool they have here you can create new functions and work with them but they",
    "start": "2891640",
    "end": "2897000"
  },
  {
    "text": "are it's we notice quickly that we don't like working with Asher functions in the",
    "start": "2897000",
    "end": "2904040"
  },
  {
    "text": "UI here we want to do compiled function and that we know will work when we put",
    "start": "2904040",
    "end": "2909559"
  },
  {
    "text": "them up here because if I put a script file up here it might run fine I change one line and suddenly it gives me a lot",
    "start": "2909559",
    "end": "2916160"
  },
  {
    "text": "of Errors like uh that I can't even fathom what they",
    "start": "2916160",
    "end": "2921280"
  },
  {
    "text": "about so that's my kind of my problem with aure functions right now is that they're moving very fast to implement",
    "start": "2921280",
    "end": "2927240"
  },
  {
    "text": "everything they need to implement and I feel it's not really there in stability",
    "start": "2927240",
    "end": "2933280"
  },
  {
    "text": "I'm hoping to catch some tricks tomorrow in Matia talks where he's is talking about fop functions too and uh how to",
    "start": "2933280",
    "end": "2941200"
  },
  {
    "text": "scale it but basically what our conclusion is that we need we only wanted to put compiled version on of the",
    "start": "2941200",
    "end": "2950400"
  },
  {
    "text": "functions on aure functions because if you don't if you put a script file like CSX or FSX file it will compile it on uh",
    "start": "2950400",
    "end": "2959720"
  },
  {
    "text": "in your app and you might get errors that are completely different from when you do it in a",
    "start": "2959720",
    "end": "2967079"
  },
  {
    "text": "on your build server so basically what is in this",
    "start": "2967079",
    "end": "2972480"
  },
  {
    "text": "function all we have here is just a function. Json we have our uh change. provider",
    "start": "2972480",
    "end": "2981799"
  },
  {
    "text": "which is the library that we looked at before and we have the aure functions uh",
    "start": "2981799",
    "end": "2988200"
  },
  {
    "text": "function itself as a dll that we are bootstrapping in here and we have some dependencies that we just included here",
    "start": "2988200",
    "end": "2995079"
  },
  {
    "text": "that's another thing with a functions is that it it includes a lot of uh dependencies",
    "start": "2995079",
    "end": "3002720"
  },
  {
    "text": "for you automatically so like Newton soft. Json is just there f is just there",
    "start": "3002720",
    "end": "3009280"
  },
  {
    "text": "F core uh and a lot of other things are just magically there so when you try to",
    "start": "3009280",
    "end": "3014720"
  },
  {
    "text": "work with it on your local machine it's pain because suddenly you you pull a sample and you put it into your editor",
    "start": "3014720",
    "end": "3021599"
  },
  {
    "text": "and you want to work with it and it's just red squiggly lines everywhere because there are some dependencies that",
    "start": "3021599",
    "end": "3028040"
  },
  {
    "text": "are just there magically oh God I hate that but it's easy to get started and",
    "start": "3028040",
    "end": "3033760"
  },
  {
    "text": "like many things uh I feel Microsoft do is always easy to get started and uh",
    "start": "3033760",
    "end": "3040000"
  },
  {
    "text": "going further on it's usually a bit more difficult another uh way of looking at",
    "start": "3040000",
    "end": "3045520"
  },
  {
    "text": "this application would be something like",
    "start": "3045520",
    "end": "3052240"
  },
  {
    "text": "this now we're looking at three functions and a lot more uh",
    "start": "3052240",
    "end": "3058920"
  },
  {
    "text": "complicated uh architecture to solve a simple problem if you'd say if you'd say",
    "start": "3058920",
    "end": "3065000"
  },
  {
    "text": "uh now we're suddenly in a resource Group where we have some storage you need storage for",
    "start": "3065000",
    "end": "3071160"
  },
  {
    "text": "your function app anyway but we're using it in our functions we have a cosmos",
    "start": "3071160",
    "end": "3076799"
  },
  {
    "text": "DB which is where we basically just use the document DB to save the",
    "start": "3076799",
    "end": "3082838"
  },
  {
    "text": "Json and oh also tested in it works using service bus but uh in this",
    "start": "3084400",
    "end": "3089720"
  },
  {
    "text": "solution we basically use the uh Q of the",
    "start": "3089720",
    "end": "3096599"
  },
  {
    "text": "because storage accounts can have blobs files tables and cues I would never use these cues with the if I have a high",
    "start": "3096599",
    "end": "3105319"
  },
  {
    "text": "latency no sorry if I have a high true put system that I'm trying to make serverless I would never use these cues",
    "start": "3105319",
    "end": "3111359"
  },
  {
    "text": "I would use Asher service bus",
    "start": "3111359",
    "end": "3115759"
  },
  {
    "text": "so what we got here is basically actually we can look at it in the editor it's it's easier we",
    "start": "3117799",
    "end": "3125119"
  },
  {
    "text": "have one function that basically does nothing other",
    "start": "3125119",
    "end": "3130760"
  },
  {
    "text": "than taking a HTTP trigger on HTTP request and put something on the Queue",
    "start": "3130760",
    "end": "3136079"
  },
  {
    "text": "and then return the reason for this is that we're contacting three different systems so I don't want people or uh",
    "start": "3136079",
    "end": "3142200"
  },
  {
    "text": "systems calling uh for for a change load generation to have to wait for it to",
    "start": "3142200",
    "end": "3148160"
  },
  {
    "text": "contact three systems and generate a change log I just want it to come out in the other end somehow so this one just",
    "start": "3148160",
    "end": "3153839"
  },
  {
    "text": "puts it on a Q and returns it says you're good so basically as you see here we",
    "start": "3153839",
    "end": "3160880"
  },
  {
    "text": "just check the variables and we pass them on to uh AQ then we have another function which",
    "start": "3160880",
    "end": "3167799"
  },
  {
    "text": "we call the generator function which B basically Triggers on something uh",
    "start": "3167799",
    "end": "3173240"
  },
  {
    "text": "coming onto that que and outputs into document DB because we want to",
    "start": "3173240",
    "end": "3179400"
  },
  {
    "text": "store the change log for historical reasons but it also has another output",
    "start": "3179400",
    "end": "3184920"
  },
  {
    "text": "which puts it in another cue called send mail and we have a third function that",
    "start": "3184920",
    "end": "3192400"
  },
  {
    "text": "listens has a q trigger in so it triggers when something comes on this send mail",
    "start": "3192400",
    "end": "3197920"
  },
  {
    "text": "q and it reads in from document DB which is included in the message which",
    "start": "3197920",
    "end": "3205040"
  },
  {
    "text": "document ID should uh pull out and it uses the S grid integration that",
    "start": "3205040",
    "end": "3211359"
  },
  {
    "text": "Microsoft has s grid is a software a service uh email for email sending so we",
    "start": "3211359",
    "end": "3217599"
  },
  {
    "text": "can use the output here to send a email and then basically we create this same",
    "start": "3217599",
    "end": "3222880"
  },
  {
    "text": "Mark downish HTML that we made before but it goes through this whole super uh",
    "start": "3222880",
    "end": "3230040"
  },
  {
    "text": "over engineered solution to send out an email to a email group that cares about these things in the other end",
    "start": "3230040",
    "end": "3237680"
  },
  {
    "text": "so this is like a way to do this here you see I'm using scripts and everything and but you can see here to get things",
    "start": "3237680",
    "end": "3243240"
  },
  {
    "text": "to work on my machine I have to download the ash function tools from uh npm I",
    "start": "3243240",
    "end": "3249720"
  },
  {
    "text": "have to start pulling dlls in to make sure that I I have all the all the",
    "start": "3249720",
    "end": "3256119"
  },
  {
    "text": "dependency needed and I think uh I saw a blog post from Matia so I think he's",
    "start": "3256119",
    "end": "3262000"
  },
  {
    "text": "addressing this a bit and on how to work with it uh tomorrow so that's that's another solution which",
    "start": "3262000",
    "end": "3268720"
  },
  {
    "text": "feel which feels a bit more more uh serverless but at the St the same time",
    "start": "3268720",
    "end": "3274520"
  },
  {
    "text": "since I'm working on OSX I don't have compiled functions so it's this is hard to to uh work with as you see here",
    "start": "3274520",
    "end": "3282040"
  },
  {
    "text": "there's like there's something I don't have there's a DN dll I haven't included that has this which magically is there",
    "start": "3282040",
    "end": "3289400"
  },
  {
    "text": "on Asal functions so if you're going to work with aure functions right now uh do",
    "start": "3289400",
    "end": "3296680"
  },
  {
    "text": "something complicated I would probably use Windows visual studio and uh asro functions",
    "start": "3296680",
    "end": "3302200"
  },
  {
    "text": "runtime and uh it hurts to say that so I hope they really work on these these",
    "start": "3302200",
    "end": "3309599"
  },
  {
    "text": "things",
    "start": "3314599",
    "end": "3317599"
  },
  {
    "text": "yes so that was like that was like basically my conclusion so I'm pretty",
    "start": "3324680",
    "end": "3331000"
  },
  {
    "text": "sure nobody's going to run out of this room now super eager to uh start using Asher functions in production but I",
    "start": "3331000",
    "end": "3336760"
  },
  {
    "text": "think you maybe saw some some cool use cases for it and to start using it like",
    "start": "3336760",
    "end": "3342280"
  },
  {
    "text": "we've done in our project with like the small things and then you can build upon that least a second architecture that",
    "start": "3342280",
    "end": "3348680"
  },
  {
    "text": "you saw where we put it in the document DB then you can build on that and like",
    "start": "3348680",
    "end": "3354839"
  },
  {
    "text": "make pipelines that diverge and solves uh different problems but it's it's a",
    "start": "3354839",
    "end": "3361599"
  },
  {
    "text": "more of a a scalable architecture or expandable architecture uh so it feels a bit wobbly",
    "start": "3361599",
    "end": "3368720"
  },
  {
    "text": "to work with for me who's not on Windows and the visual studio I hope you are uh",
    "start": "3368720",
    "end": "3374160"
  },
  {
    "text": "feeling that FP is the thing you're going to look at next time you're going to integrate with other systems or read",
    "start": "3374160",
    "end": "3381720"
  },
  {
    "text": "from any kind of data source because F Type providers will save you a lot of time doing that if you're a bit smart",
    "start": "3381720",
    "end": "3389119"
  },
  {
    "text": "about it you can easily do it from a c solution like we are doing it's worth",
    "start": "3389119",
    "end": "3395839"
  },
  {
    "text": "it I also want to say that the fshp or the functional not FP I'm sorry",
    "start": "3395839",
    "end": "3401760"
  },
  {
    "text": "functional programming lab hour it's going to be Elm people there if you want to look into Elm and probably Elixir",
    "start": "3401760",
    "end": "3409119"
  },
  {
    "text": "people because it was just an Elixir talk and and it's out uh above the",
    "start": "3409119",
    "end": "3414440"
  },
  {
    "text": "entrance and uh all of the speakers are going to be there to answer your question if any of you have any",
    "start": "3414440",
    "end": "3419559"
  },
  {
    "text": "questions to what we looked at uh in this session just come there talk to me",
    "start": "3419559",
    "end": "3424920"
  },
  {
    "text": "uh if any for those of you who are from Oso uh make sure to follow nugi uh the net User Group in alsoo",
    "start": "3424920",
    "end": "3433680"
  },
  {
    "text": "which also has the alsoo FSH Meetup and thank you that's it",
    "start": "3433680",
    "end": "3443280"
  }
]