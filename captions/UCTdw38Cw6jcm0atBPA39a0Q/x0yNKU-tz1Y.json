[
  {
    "text": "my name is Spencer Shannon back and I'm here to about restful api best practices using",
    "start": "8870",
    "end": "14009"
  },
  {
    "text": "asp.net web api now if you're not a web developer if you don't use web api that's totally ok a lot of what I have",
    "start": "14009",
    "end": "20849"
  },
  {
    "text": "what up what I talked about you can apply to using restful api s and knowing",
    "start": "20849",
    "end": "26009"
  },
  {
    "text": "when they're good and bad or apply them later I talked a lot about a lot of theoretical stuff so before I get",
    "start": "26009",
    "end": "31320"
  },
  {
    "text": "started I wanted to make sure that you all know that everything that I'm telling you today the slides writ links to all the things that I talk about all",
    "start": "31320",
    "end": "37680"
  },
  {
    "text": "available at rest is net you'll also see my twitter handle at night and box at the bottom right I tweeted out a link",
    "start": "37680",
    "end": "43680"
  },
  {
    "text": "and it'll be on every slide so if you want to take a picture now that's cool but you can see it see it down here",
    "start": "43680",
    "end": "49260"
  },
  {
    "text": "later and then you can go to my Twitter and check it out for yourself all right so I wanted to start off by",
    "start": "49260",
    "end": "55019"
  },
  {
    "text": "talking a little bit about why I give this talk ok so I give this talk for a couple of reasons",
    "start": "55019",
    "end": "60150"
  },
  {
    "text": "first I think the information is good I think it's I think it's compelling and I think it's interesting but more than",
    "start": "60150",
    "end": "65939"
  },
  {
    "text": "anything it's therapeutic this is therapy for me this is therapy because I'm an integrator it's what I do I make",
    "start": "65939",
    "end": "72930"
  },
  {
    "text": "software talk to other software and I've used good api's but far in a way I've used way more bad api's and we're going",
    "start": "72930",
    "end": "79410"
  },
  {
    "text": "to spend some time today making fun of those bad api's I'm gonna give you plenty of good examples and plenty of bad examples right and it's important",
    "start": "79410",
    "end": "87180"
  },
  {
    "text": "this is an important topic to talk about because at the end of the day developers have the power of choice right if you",
    "start": "87180",
    "end": "94590"
  },
  {
    "text": "have an application and your manager comes to you and says we'd like to integrate text messaging into your into",
    "start": "94590",
    "end": "100290"
  },
  {
    "text": "our application you can either be a hacker and you know network together 40 Android phones and put Linux on them and",
    "start": "100290",
    "end": "106710"
  },
  {
    "text": "then you know create your own text text messaging network could do that but you're probably going to go out and find",
    "start": "106710",
    "end": "111900"
  },
  {
    "text": "an API to use write an API to consume and there's lots of them for text messaging you're going to go out and you're going to compare and you're going",
    "start": "111900",
    "end": "118020"
  },
  {
    "text": "to compare all of these and you're going to look for a few different things right off the bat right you're going to look",
    "start": "118020",
    "end": "123479"
  },
  {
    "text": "for how quickly is it to go from 0 to make magic happen and you're going to hear me say that a lot make magic happen",
    "start": "123479",
    "end": "129569"
  },
  {
    "text": "because when you make an HTTP call and then you look at your phone and you see a text message it's kind of a cool",
    "start": "129569",
    "end": "135629"
  },
  {
    "text": "feeling it kind of feels like magic right that's awesome you're going to find out how quickly it is you go from 0",
    "start": "135629",
    "end": "143189"
  },
  {
    "text": "to make magic happen how quickly can I get things done next thing you're going to look for is",
    "start": "143189",
    "end": "148230"
  },
  {
    "text": "how quickly is it for me to how easy is it for me to go and learn stuff more about your API and manage problems or",
    "start": "148230",
    "end": "154410"
  },
  {
    "text": "manage exceptions right because inevitably you'll probably make a bad call here there we all do I certainly do",
    "start": "154410",
    "end": "160110"
  },
  {
    "text": "and so you're going to want to know how can I solve those problems right we're essentially looking for good",
    "start": "160110",
    "end": "165480"
  },
  {
    "text": "documentation and then you're going to look at the long term benefit because you're a discerning developer you want",
    "start": "165480",
    "end": "172349"
  },
  {
    "text": "your company to do well right so you're going to probably look for things like uptime or talk about things like cost",
    "start": "172349",
    "end": "178440"
  },
  {
    "text": "you're probably going to look at the cost to compare the two and this is really important because at the end of the day you're going to go to your",
    "start": "178440",
    "end": "184590"
  },
  {
    "text": "manager and you're going to say hey I found these text messaging platforms I found these three text messaging platforms that we could use and this one",
    "start": "184590",
    "end": "191489"
  },
  {
    "text": "that I found immediately I could get be productive right away so you're not I'm not spending a lot of time on this",
    "start": "191489",
    "end": "196819"
  },
  {
    "text": "they're great documentation they have a great support line and the costs are similar and your managers probably gonna",
    "start": "196819",
    "end": "202349"
  },
  {
    "text": "look at you and say ok and you've become a customer for them and that was in your power because at the end of the day you",
    "start": "202349",
    "end": "209010"
  },
  {
    "text": "have the power of choice right you can choose to consume that API now you may do five cents worth of text messaging",
    "start": "209010",
    "end": "215760"
  },
  {
    "text": "you could do 55 thousand dollars worth of text messaging or pound from where I am right I know that I integrated text",
    "start": "215760",
    "end": "223590"
  },
  {
    "text": "messaging at at a client of mine a while ago and they spend thousands a month and a large part of the decision was mine to",
    "start": "223590",
    "end": "229920"
  },
  {
    "text": "figure out what API is going to provide the best short and long-term benefits right now think about that that's on one",
    "start": "229920",
    "end": "236130"
  },
  {
    "text": "side that's as a consumer but think about the other side if you have an application that you work on that you",
    "start": "236130",
    "end": "241739"
  },
  {
    "text": "need to provide an API for what is it going to be what is it going to take to",
    "start": "241739",
    "end": "247829"
  },
  {
    "text": "create something that is better than the competition right you're going to be on the flip side of that you're going to",
    "start": "247829",
    "end": "253170"
  },
  {
    "text": "say what can I do to make my API awesome make it well-documented make sure that it works make sure that it's obvious and",
    "start": "253170",
    "end": "259739"
  },
  {
    "text": "accessible right to developers so there's two sides of that coin because",
    "start": "259739",
    "end": "264900"
  },
  {
    "text": "at the end of the day API design is user experience for developers now I thought of that yesterday and I",
    "start": "264900",
    "end": "270750"
  },
  {
    "text": "hurriedly typed it into google like oh this is a cool thought and then like I found out a hundred other people had said this already so I'm pretty sure I",
    "start": "270750",
    "end": "276419"
  },
  {
    "text": "read that like six months ago and thought oh this is original idea but it really was a really",
    "start": "276419",
    "end": "281650"
  },
  {
    "text": "made sense to me because if you're making an application a web application WinForms whatever you're going to keep",
    "start": "281650",
    "end": "287080"
  },
  {
    "text": "your user in mind because you want them to have a good experience you're going to make sure that the form is laid out properly and at the button there in the",
    "start": "287080",
    "end": "293110"
  },
  {
    "text": "right place and that they have good visual cues to make sure that they're progressing to the application naturally and you want to do the same thing and",
    "start": "293110",
    "end": "299890"
  },
  {
    "text": "you want to have the same thing done for you when looking at or crafting an API it's the same principle",
    "start": "299890",
    "end": "305860"
  },
  {
    "text": "user experience for developers because it's not hard I mean we're not we're not shy folks right we're not shy people if",
    "start": "305860",
    "end": "313060"
  },
  {
    "text": "something's wrong with it we're going to say something right I think this quote",
    "start": "313060",
    "end": "319270"
  },
  {
    "text": "does a good job of summing it up you don't make usability a priority you'll never have to worry about scalability",
    "start": "319270",
    "end": "325030"
  },
  {
    "text": "which essentially means like if nobody wants to use your API because it sucks",
    "start": "325030",
    "end": "330070"
  },
  {
    "text": "that bad then you're not going to have to worry about how quickly you can scale up 40 Azure servers to handle the additional traffic cause it's probably",
    "start": "330070",
    "end": "336100"
  },
  {
    "text": "not going to exist right there here are some common schemes in this talk there's",
    "start": "336100",
    "end": "341170"
  },
  {
    "text": "a few common things you're going to see over and over again you're going to see these you're going to see a green checkmark and a red X you're going to",
    "start": "341170",
    "end": "347740"
  },
  {
    "text": "see this a lot the green checkmarks is a good guideline then the red X is something that maybe you shouldn't do or",
    "start": "347740",
    "end": "353530"
  },
  {
    "text": "maybe you should avoid now these aren't hard and fast rules nothing that I'm telling you is but for 90% of them",
    "start": "353530",
    "end": "359410"
  },
  {
    "text": "you're going to put you're going to apply 90% of what I tell you probably to your API and it's going to work for you there may be one or two exceptions here",
    "start": "359410",
    "end": "365890"
  },
  {
    "text": "and there and that's okay you can manage by exception a little bit sure you're also going to hear me talk about simple",
    "start": "365890",
    "end": "372340"
  },
  {
    "text": "is not easy making something that's really simple for your consumers to use is not an easy task crafting good so yes",
    "start": "372340",
    "end": "380350"
  },
  {
    "text": "you could make you could make an API you can do a file new project in Visual Studio and make an API pretty quickly",
    "start": "380350",
    "end": "385900"
  },
  {
    "text": "and then install a package that displays help Docs for that API right and that's",
    "start": "385900",
    "end": "391510"
  },
  {
    "text": "good you can do that in like 10 minutes right it's quick but it's not enough because you're going to need to talk",
    "start": "391510",
    "end": "397270"
  },
  {
    "text": "about authentication you're going to need to talk about exception handling you're going to need to document what weird little things about your API exist",
    "start": "397270",
    "end": "404080"
  },
  {
    "text": "right crafting good documentation takes time and it takes thoughtfulness and it's not easy right making an API that's",
    "start": "404080",
    "end": "412810"
  },
  {
    "text": "consistent consistent from endpoint to endpoint you make sure that you use put requests every time you want an update",
    "start": "412810",
    "end": "418450"
  },
  {
    "text": "an object right having those conversations with your team and with your manager that takes time and it",
    "start": "418450",
    "end": "424480"
  },
  {
    "text": "takes thoughtfulness and it's not easy but it's so critical if you want people to use your application and use your API",
    "start": "424480",
    "end": "431139"
  },
  {
    "text": "you have to make it simple for them but simple is not easy you're going to hear me say that a lot I'm also here to tell",
    "start": "431139",
    "end": "439630"
  },
  {
    "text": "you there's no silver bullet anybody who stands in front of one of these stages and says this is the this is the way and",
    "start": "439630",
    "end": "446350"
  },
  {
    "text": "the light you know you ought to think twice about listening to them because I've never found that to be true there's good ideas there's bad ideas",
    "start": "446350",
    "end": "452560"
  },
  {
    "text": "there's some times when bad ideas are good ideas right so most of what I'm telling you is applicable it's awesome",
    "start": "452560",
    "end": "458860"
  },
  {
    "text": "it's good information but you're going to have your own exception and like I said there's no silver bullet there's no",
    "start": "458860",
    "end": "464830"
  },
  {
    "text": "magic answer I can't tell you that there is one way one light right so we need to",
    "start": "464830",
    "end": "471190"
  },
  {
    "text": "talk about we're going to talk about restful api is we ought to talk about what rest is Right rest stands for",
    "start": "471190",
    "end": "476320"
  },
  {
    "text": "representational state transfer and it was described in a paper by a guy named Roy fielding he did it for his PhD",
    "start": "476320",
    "end": "482080"
  },
  {
    "text": "dissertation and it essentially describes the architecture that is the web okay it just it essentially it's not",
    "start": "482080",
    "end": "490060"
  },
  {
    "text": "tied to a protocol and it's not tied to a particular format right it's just a set of constraints a set of things that",
    "start": "490060",
    "end": "496840"
  },
  {
    "text": "if you have these things in common with a system it can be considered a restful system and here's what they are we have",
    "start": "496840",
    "end": "502870"
  },
  {
    "text": "six constraints we have the client-server constraint which means mainly just specifies that there's a client and there's a server that's it we",
    "start": "502870",
    "end": "511450"
  },
  {
    "text": "have the cashable constraint which means that a response from a server can define itself as cashable or not it doesn't",
    "start": "511450",
    "end": "517240"
  },
  {
    "text": "have to be but it can define itself as cashable there's the statelessness one how many folks are asp.net users ok",
    "start": "517240",
    "end": "525640"
  },
  {
    "text": "ceremony how many of you are ASP now that web forms users okay come on now if there's that many hands you got to raise",
    "start": "525640",
    "end": "531700"
  },
  {
    "text": "them up I know there's more of you and there you're shy I still use it too it's okay all right web forms is all right it's at its time",
    "start": "531700",
    "end": "539080"
  },
  {
    "text": "I still use it right and when you use web forms you store things you store",
    "start": "539080",
    "end": "544120"
  },
  {
    "text": "data between page requests and sessions right and then is stored on the server you session state all the things that is",
    "start": "544120",
    "end": "549400"
  },
  {
    "text": "decidedly not stateless stateless means that all the state that's contained for",
    "start": "549400",
    "end": "555040"
  },
  {
    "text": "is for a given web request is contained within the request itself right so the",
    "start": "555040",
    "end": "560380"
  },
  {
    "text": "request sends all the information in a purely restful system the the server does not store anything right all the",
    "start": "560380",
    "end": "567400"
  },
  {
    "text": "data that it needs is made in the request a system can be layered which",
    "start": "567400",
    "end": "575380"
  },
  {
    "text": "Smith simply means that a client can make a request and it could come from the response to that request could come from the web server a load balancer a",
    "start": "575380",
    "end": "582640"
  },
  {
    "text": "cache server a CDN and it doesn't really care and it the client doesn't care as long as it gets its information code on",
    "start": "582640",
    "end": "589900"
  },
  {
    "text": "demand is the only optional constraint and it simply means that at demand a",
    "start": "589900",
    "end": "595120"
  },
  {
    "text": "server can send additional code from itself to the client in order to enhance the experience or change the experience",
    "start": "595120",
    "end": "601210"
  },
  {
    "text": "the easiest example of that being JavaScript right then there's the uniform interface constraint which itself is made up of four constraints",
    "start": "601210",
    "end": "608170"
  },
  {
    "text": "which are important to talk about so we're going to talk about resource identification is the first thing that",
    "start": "608170",
    "end": "613720"
  },
  {
    "text": "means that a given resource can be identified by a URI right a URI or a URL",
    "start": "613720",
    "end": "618970"
  },
  {
    "text": "right and so when you make that request the server goes and it gives you back some data in this case I'm making a",
    "start": "618970",
    "end": "624400"
  },
  {
    "text": "request for employee 1 2 3 4 and I'm getting back jacent object with the first name in the last name right and",
    "start": "624400",
    "end": "630760"
  },
  {
    "text": "it's important to note that these are representations of the data these aren't these aren't the data itself right it's not if this comes from",
    "start": "630760",
    "end": "637630"
  },
  {
    "text": "a sequel server database you know it's not the API is not telling you oh this is a sequel server and here's the table",
    "start": "637630",
    "end": "643450"
  },
  {
    "text": "that it lives in and here's the row number and here's every attribute on that right it doesn't have any of that information it doesn't give you back",
    "start": "643450",
    "end": "648970"
  },
  {
    "text": "that it gives you back a representation but that's okay because representations have meaning and those representations",
    "start": "648970",
    "end": "654339"
  },
  {
    "text": "can be used to manipulate the resources on the server right so if you did pick that and you change the name and you",
    "start": "654339",
    "end": "660580"
  },
  {
    "text": "send a put request to the server you can change in theory change via change the employee object content is self",
    "start": "660580",
    "end": "668200"
  },
  {
    "text": "descriptive which means that the server tells the client what kind of content is being sent back it could be Jason it",
    "start": "668200",
    "end": "674620"
  },
  {
    "text": "could be XML it could be a CSS file it could be HTML right the point is is that it described",
    "start": "674620",
    "end": "680080"
  },
  {
    "text": "so it typically describes itself in HTTP inside of the the the content type",
    "start": "680080",
    "end": "686680"
  },
  {
    "text": "header inside of the response right then the final one is Haiti OS or hyper media",
    "start": "686680",
    "end": "693970"
  },
  {
    "text": "as the engine of application state which is important to talk about because in the restful system a client doesn't know",
    "start": "693970",
    "end": "699790"
  },
  {
    "text": "everything about what's going on in the server right if you go to google.com the client is getting information from",
    "start": "699790",
    "end": "704890"
  },
  {
    "text": "Google to say I'm going to navigate to the I'm going to navigate to maps or I want to navigate to the shopping at the",
    "start": "704890",
    "end": "710230"
  },
  {
    "text": "shopping area of Google or I want to do a Google search the client doesn't know all that stuff intrinsically the server",
    "start": "710230",
    "end": "715570"
  },
  {
    "text": "provides all the information that it needs that the client needs to navigate that's Katie OS and we're going to talk",
    "start": "715570",
    "end": "721210"
  },
  {
    "text": "about how that applies to restful api s okay speaking of rest what's the restful api",
    "start": "721210",
    "end": "728080"
  },
  {
    "text": "right a restful api is just an api that follows the rest architecture which I know is probably mind-blowing but really",
    "start": "728080",
    "end": "734650"
  },
  {
    "text": "is that simple but the term is a little bit been co-opted it's been kind of kind",
    "start": "734650",
    "end": "739810"
  },
  {
    "text": "of brought on a 10-2 taking a life of its own right because rest isn't tight remember rest is a set of constraints",
    "start": "739810",
    "end": "745690"
  },
  {
    "text": "it's not a protocol it's not a it's not a tied to a particular format right it's",
    "start": "745690",
    "end": "750910"
  },
  {
    "text": "not tied to Jason it's not even tied to HTTP now granted most restful systems",
    "start": "750910",
    "end": "756490"
  },
  {
    "text": "are HTTP systems but they're not tied together and when people say restful api",
    "start": "756490",
    "end": "761550"
  },
  {
    "text": "usually what they mean is adjacent an HTTP api that returns Jason or sometimes",
    "start": "761550",
    "end": "767410"
  },
  {
    "text": "XML and that's what people think for the purposes of this talk we're going to talk as if we're going to go with the",
    "start": "767410",
    "end": "773380"
  },
  {
    "text": "the common definition or the peep the well understood definition when I say restful api I'm just going to refer to an HTTP API that probably returned some",
    "start": "773380",
    "end": "780790"
  },
  {
    "text": "kind of JSON or XML we're going to use JSON and all of our examples so we're gonna stick with that just a just for",
    "start": "780790",
    "end": "786340"
  },
  {
    "text": "the sake of clarity right so I'm here to tell you though you there's pragmatism",
    "start": "786340",
    "end": "792970"
  },
  {
    "text": "involved right a purely restful api does not make it a good api write an api that",
    "start": "792970",
    "end": "799240"
  },
  {
    "text": "strictly follows the rest standard now the rest constraint model does not make",
    "start": "799240",
    "end": "806170"
  },
  {
    "text": "it a good HTTP api okay or a good restful api and i'll give you an example hey Theo Oz is a perfect example",
    "start": "806170",
    "end": "812230"
  },
  {
    "text": "hypermedia is the engine of application State so a lot there's a lot of debate out there whether adjacent API or any",
    "start": "812230",
    "end": "818780"
  },
  {
    "text": "API in general should send back links to related content inside of the JSON response so for example if you make a",
    "start": "818780",
    "end": "824900"
  },
  {
    "text": "request for a customer a customer if you're an accounting system has invoices associated with it right so you might",
    "start": "824900",
    "end": "831740"
  },
  {
    "text": "send back a link to say here's where you would get those invoices right you'd get you it would send back that link in the",
    "start": "831740",
    "end": "837920"
  },
  {
    "text": "in the header or sorry in the response but that has really limited usefulness",
    "start": "837920",
    "end": "843140"
  },
  {
    "text": "because from an API consumption standpoint you probably need the invoice API you probably already know how to",
    "start": "843140",
    "end": "849680"
  },
  {
    "text": "access it but that's a purely restful thing so if they say you know what we've got to do",
    "start": "849680",
    "end": "855110"
  },
  {
    "text": "pure rest we mean it can't be a RESTful API without haiti hola so now we have to spend all this time and by the way",
    "start": "855110",
    "end": "860150"
  },
  {
    "text": "that's not an easy thing to do to implement on an AP HTTP or a restful api right it's not it takes a lot of extra",
    "start": "860150",
    "end": "866900"
  },
  {
    "text": "work and what we have to wait we have to because it's restful but if you get everything else wrong if you're if it's",
    "start": "866900",
    "end": "872630"
  },
  {
    "text": "poorly documented there's a lot of downtime right then your api your api is probably not good right so I'm here to",
    "start": "872630",
    "end": "880310"
  },
  {
    "text": "tell you to do what makes sense and throw everything else out okay now let me ask you is that vague enough for you",
    "start": "880310",
    "end": "886610"
  },
  {
    "text": "right like that seems pretty vague that's not very helpful and it's mainly because again there's no silver bullet",
    "start": "886610",
    "end": "892730"
  },
  {
    "text": "there's no ant there's no one way one path what I say works for me for most gates for the most part when I",
    "start": "892730",
    "end": "899960"
  },
  {
    "text": "design API it may not work for you right so we're going to treat the API we're",
    "start": "899960",
    "end": "905570"
  },
  {
    "text": "going to talk about how to build an API now the restful api let's get to building it or designing it right we're",
    "start": "905570",
    "end": "910970"
  },
  {
    "text": "going to talk about the design process now I'm going to talk about it as if it's siloed to design implement document",
    "start": "910970",
    "end": "916850"
  },
  {
    "text": "maintain in reality you're probably doing all of these things at once right you're probably iterating and there's",
    "start": "916850",
    "end": "922970"
  },
  {
    "text": "probably one big circle right but for the sake of this talk we'll just talk about these in the siloed way right all",
    "start": "922970",
    "end": "929810"
  },
  {
    "text": "right I've been practicing so when it comes to API design I have one rule okay",
    "start": "929810",
    "end": "937130"
  },
  {
    "text": "I actually have two rules but that sounds a lot cooler and then I can put the Dark Knight up on the slide right and it's keep it simple stupid or if",
    "start": "937130",
    "end": "943340"
  },
  {
    "text": "you're nice keep it simply keep it stupidly simple right and and simple isn't easy what we're going",
    "start": "943340",
    "end": "950090"
  },
  {
    "text": "to talk about some ways that you're going to make you can make it simple and again our Navy but you want people to",
    "start": "950090",
    "end": "956180"
  },
  {
    "text": "use your API right so first rule keep it simple don't be creative let me give you an example of creative so when you're",
    "start": "956180",
    "end": "962960"
  },
  {
    "text": "making an HTTP request to a resource it's very common to get back some kind",
    "start": "962960",
    "end": "968360"
  },
  {
    "text": "of Eric or some kind of response code other than just 200 to say everything's good right you might send a bad request",
    "start": "968360",
    "end": "974660"
  },
  {
    "text": "to an API and they say actually you're missing the first name we're going to send 400 bad request one example of",
    "start": "974660",
    "end": "980120"
  },
  {
    "text": "creative is I know of an API where every single call that you make returns 200",
    "start": "980120",
    "end": "986420"
  },
  {
    "text": "okay and the body of the robada of the response actually contains whether or not there was a problem with that",
    "start": "986420",
    "end": "992720"
  },
  {
    "text": "response right it'll actually contain whether or not there was an error that API is also managed by a company called",
    "start": "992720",
    "end": "998540"
  },
  {
    "text": "Facebook so they can have they could be creative right they can be a little creative but for the most part you shouldn't be should follow the general",
    "start": "998540",
    "end": "1004990"
  },
  {
    "text": "rules and general guidelines that I laid out do what developers expect it's the bottom line provide what is necessary",
    "start": "1004990",
    "end": "1011710"
  },
  {
    "text": "and no more and no less now this is another example of it's really hard",
    "start": "1011710",
    "end": "1017260"
  },
  {
    "text": "simple is not easy right so but there's some general rules so if you're an accounting application and you have an",
    "start": "1017260",
    "end": "1023320"
  },
  {
    "text": "employee end point and you want to return to list of employees it's likely you don't want to return their social",
    "start": "1023320",
    "end": "1028540"
  },
  {
    "text": "security number appearance from the United States I don't know they have an equivalent here I'm sure they do some kind of identifying number that's",
    "start": "1028540",
    "end": "1034480"
  },
  {
    "text": "important that is pretty sensitive information that you don't want to send back on the other hand you want to make",
    "start": "1034480",
    "end": "1040449"
  },
  {
    "text": "sure that you send back enough information about that employee to be useful right you don't want to leave out their first name right that wouldn't",
    "start": "1040449",
    "end": "1047140"
  },
  {
    "text": "make a lot of sense but knowing what this looks like can be really hard again",
    "start": "1047140",
    "end": "1052810"
  },
  {
    "text": "simple is not easy so you have to provide enough information for your consumer for the information be useful",
    "start": "1052810",
    "end": "1059010"
  },
  {
    "text": "right and then use a handful of HTTP status codes the best API is that I",
    "start": "1059010",
    "end": "1064030"
  },
  {
    "text": "consume used less than 10 right there's about a hundred plus HTTP status codes there's even one called I'm a little",
    "start": "1064030",
    "end": "1069880"
  },
  {
    "text": "teapot and I'm not making that like for 18 or something you could use that one but nobody does and you shouldn't be",
    "start": "1069880",
    "end": "1077230"
  },
  {
    "text": "there and you should just use a subset use a good subset right and he a few that you could use that are good examples 200 okay you send it back with",
    "start": "1077230",
    "end": "1084580"
  },
  {
    "text": "a get request to say everything's cool here's your response right everything's good 201 created when you do a post",
    "start": "1084580",
    "end": "1090789"
  },
  {
    "text": "request and you create an object right you could send back 201 created to say yep everything's good your resources",
    "start": "1090789",
    "end": "1096639"
  },
  {
    "text": "created 400 bad request another common one and I would argue the most important when doing integration work or doing API",
    "start": "1096639",
    "end": "1103480"
  },
  {
    "text": "work because if there's an exception if there's a problem getting this request and everything around it right the bad",
    "start": "1103480",
    "end": "1109690"
  },
  {
    "text": "400 bad request getting that response correct is very critical it's just basically a way of saying your request",
    "start": "1109690",
    "end": "1116049"
  },
  {
    "text": "wasn't any good just change if and ideally it would tell you how to change it and then send it back right and then",
    "start": "1116049",
    "end": "1121450"
  },
  {
    "text": "it'll be good and you can get 200 ok and move on with your life 404 not found of course if a Reese if you're asking for",
    "start": "1121450",
    "end": "1127269"
  },
  {
    "text": "an employee that doesn't exist 2 3 4 5 sent back for form and then 401 and 403",
    "start": "1127269",
    "end": "1133000"
  },
  {
    "text": "unauthorized and forbidden which folks tend to get mixed up right 401 unauthorized says I don't know who you",
    "start": "1133000",
    "end": "1139090"
  },
  {
    "text": "are 403 forbidden says I know who you are and you can't do that right you can't",
    "start": "1139090",
    "end": "1144669"
  },
  {
    "text": "look at that social security number here's an example so this is my favorite",
    "start": "1144669",
    "end": "1150909"
  },
  {
    "text": "part these are the part where I get to tell stories stories that are real these are things every example that I'm showing you of a bad API is an example",
    "start": "1150909",
    "end": "1158260"
  },
  {
    "text": "that comes from a real experience ok so let's talk about keeping it simple in the context of this so there's an API",
    "start": "1158260",
    "end": "1165159"
  },
  {
    "text": "that I interact with where every one of their objects has a separate has a name ID and that name ID points to a separate",
    "start": "1165159",
    "end": "1172570"
  },
  {
    "text": "ID on a name resource little literally only returns an ID in a string with the name right so in order for me to get the",
    "start": "1172570",
    "end": "1180610"
  },
  {
    "text": "complete picture of this customer I either have to do two requests right or n plus 1 request if I'm getting a list",
    "start": "1180610",
    "end": "1186549"
  },
  {
    "text": "of customers then I have to do if I get a list of customers and then I have to do to get the names of that that's",
    "start": "1186549",
    "end": "1192250"
  },
  {
    "text": "horrible why would you make me do that that's not keeping it simple that's awful that's",
    "start": "1192250",
    "end": "1197320"
  },
  {
    "text": "two requests per get and if I'm making the request because the opposite is true if I'm trying to create that customer I",
    "start": "1197320",
    "end": "1204010"
  },
  {
    "text": "have to create a name object first and then I have to create the customer that what what's the point why would you make",
    "start": "1204010",
    "end": "1210850"
  },
  {
    "text": "me do that why would you make me do two requests for every seeing one of your objects awful but the",
    "start": "1210850",
    "end": "1216960"
  },
  {
    "text": "bottom line is don't let your specific implementations leak into your abstraction because it's ibadah at the",
    "start": "1216960",
    "end": "1222600"
  },
  {
    "text": "end of the day an API is an abstraction right it's an abstraction over your system and a lot of people say that",
    "start": "1222600",
    "end": "1229110"
  },
  {
    "text": "abstractions leak things like enemy framework right that are good Oh RM tools but they're leaky because they try",
    "start": "1229110",
    "end": "1235080"
  },
  {
    "text": "to cover up all the you know parts of sequel server that nobody wants to know so usually it's they say abstractions",
    "start": "1235080",
    "end": "1240779"
  },
  {
    "text": "are leaky but the others true - they've let their implementation leak into their API because I happen to know I asked",
    "start": "1240779",
    "end": "1248190"
  },
  {
    "text": "them I they said oh yeah we store names in the separate table I said okay I can't really criticize that they",
    "start": "1248190",
    "end": "1254130"
  },
  {
    "text": "probably have a very good reason actually for this particular company they probably don't they probably have a very good reason or if they thought they",
    "start": "1254130",
    "end": "1260340"
  },
  {
    "text": "had a good reason for doing that so I'm not criticizing their implementation I'm criticizing the fact that they've not",
    "start": "1260340",
    "end": "1265529"
  },
  {
    "text": "kept it simple for me as their consumer I'd much rather see this right just one request one post request or get requests",
    "start": "1265529",
    "end": "1272970"
  },
  {
    "text": "to get the name and then oh you know the developer on the other end says but but but then I have to like manage the name",
    "start": "1272970",
    "end": "1279120"
  },
  {
    "text": "object myself yeah yeah make it simple you want to make it simple on me you",
    "start": "1279120",
    "end": "1284190"
  },
  {
    "text": "don't want to make it hard I'd much rather see something like this right wouldn't you you want to make two",
    "start": "1284190",
    "end": "1289350"
  },
  {
    "text": "requests for every object I don't how",
    "start": "1289350",
    "end": "1294779"
  },
  {
    "text": "about this I've put three words up on the screen theory Anakin threshold I've given I've told you nothing about",
    "start": "1294779",
    "end": "1300059"
  },
  {
    "text": "them you know they're English word right and not American words they're English words but I didn't tell you anything",
    "start": "1300059",
    "end": "1306059"
  },
  {
    "text": "about them I just put them on the screen and I just expect you to know or don't what they are what if I told you that",
    "start": "1306059",
    "end": "1312720"
  },
  {
    "text": "and this is true this is the name of my former neighbors kids okay how would you",
    "start": "1312720",
    "end": "1319679"
  },
  {
    "text": "know that unless I told you first of all it's really weird okay they also have lilia but lily is like a normal name right it's like the most normal of the",
    "start": "1319679",
    "end": "1325590"
  },
  {
    "text": "names right the examples not nearly as funny with her first but I didn't tell you this I didn't give you any context I",
    "start": "1325590",
    "end": "1331799"
  },
  {
    "text": "didn't give you any context up front you're left wondering what the words mean how does that tie into this I'll",
    "start": "1331799",
    "end": "1337620"
  },
  {
    "text": "give you this okay so I put four more words on the screen and as a developer you look at that as engineer you say",
    "start": "1337620",
    "end": "1343440"
  },
  {
    "text": "okay those kind of mean the same thing like inactive and deleted or inactive and retired that",
    "start": "1343440",
    "end": "1349260"
  },
  {
    "text": "kind of similar so maybe they describe different states of an object right it's either inactive or deleted or visible or",
    "start": "1349260",
    "end": "1355860"
  },
  {
    "text": "retired right what if I told you that on several one of these several objects these are four separate properties these",
    "start": "1355860",
    "end": "1362880"
  },
  {
    "text": "are four separate properties on each of those objects right here's the best part not only is it not well documented what",
    "start": "1362880",
    "end": "1370200"
  },
  {
    "text": "each of these individually mean the developers don't even know what they mean in combination with each other so",
    "start": "1370200",
    "end": "1375570"
  },
  {
    "text": "if oh if something is inactive and visible well it follows this set of rules what is that like that's more",
    "start": "1375570",
    "end": "1381240"
  },
  {
    "text": "that's like 16 or 24 permutations right and they don't they can't tell me what each of these mean if the object is in",
    "start": "1381240",
    "end": "1386820"
  },
  {
    "text": "this different state that's not keeping it simple and they haven't even they haven't even proved to me that the",
    "start": "1386820",
    "end": "1392370"
  },
  {
    "text": "complexity of this is worth my time to manage they haven't even documented it they didn't they don't even know",
    "start": "1392370",
    "end": "1398370"
  },
  {
    "text": "honestly so that's not keeping it simple right it makes me go like oh this is",
    "start": "1398370",
    "end": "1403410"
  },
  {
    "text": "just a gross awful awful API design or if you knew this company you would not",
    "start": "1403410",
    "end": "1408840"
  },
  {
    "text": "be surprised second big rule be consistent and honestly this is really saying the same",
    "start": "1408840",
    "end": "1413940"
  },
  {
    "text": "thing as keep it simple right be consistent with accepted best practices and be consistent with yourself right",
    "start": "1413940",
    "end": "1420930"
  },
  {
    "text": "now accepted best practices is a bit of a well best practice is a subjective",
    "start": "1420930",
    "end": "1426690"
  },
  {
    "text": "thing right but it's up to you and your team if you're designing a restful api to do some research do some talking",
    "start": "1426690",
    "end": "1433170"
  },
  {
    "text": "right just kind of figure out what's best practices apply typically speaking you want to return 200 okay with with a",
    "start": "1433170",
    "end": "1440580"
  },
  {
    "text": "good request and not 200 okay with a bad request right like those are pretty common things it gets a little murky but",
    "start": "1440580",
    "end": "1447300"
  },
  {
    "text": "you can you can form your own opinion and then if you do it one way stick with it and if you have to deviate even a",
    "start": "1447300",
    "end": "1454020"
  },
  {
    "text": "little bit document document document right but try to be consistent with yourself if you say I'm going to create",
    "start": "1454020",
    "end": "1460680"
  },
  {
    "text": "all objects with put requests which is would be creative and bad then do it at",
    "start": "1460680",
    "end": "1465960"
  },
  {
    "text": "least at least be consistent across your endpoints there's one in particular API that I can think of where instead of",
    "start": "1465960",
    "end": "1471480"
  },
  {
    "text": "using put requests to update objects they use patch requests and that's unusual and speaking of which let's talk",
    "start": "1471480",
    "end": "1478770"
  },
  {
    "text": "about some HTTP verbs because they're at least the most one's right because there's like more",
    "start": "1478770",
    "end": "1484380"
  },
  {
    "text": "than this but I don't know what they are because I don't need to know because I'm trying to stay consistent right so get requests just get data that's all they",
    "start": "1484380",
    "end": "1490860"
  },
  {
    "text": "do put requests are typically used to update data so you're trying to update an employee you give it up you do a put",
    "start": "1490860",
    "end": "1497460"
  },
  {
    "text": "request and then you update that employee right typically with put requests you send everything you say",
    "start": "1497460",
    "end": "1503160"
  },
  {
    "text": "send all the properties if it's missing a property it assumes that you don't want that property anymore and in theory and what people expect is",
    "start": "1503160",
    "end": "1510630"
  },
  {
    "text": "that the property would be set to null or whatever that equivalent would be on the back-end system right post requests",
    "start": "1510630",
    "end": "1517170"
  },
  {
    "text": "typically used for creating objects okay I also see post requests you sometimes",
    "start": "1517170",
    "end": "1523050"
  },
  {
    "text": "in place of put that's less common but I have seen it to me I use put requests",
    "start": "1523050",
    "end": "1529110"
  },
  {
    "text": "separately because it's just what developers expect right delete usually use for deleting",
    "start": "1529110",
    "end": "1535560"
  },
  {
    "text": "individual resources I saw an API once though where they had a delete request that you could issue against a whole",
    "start": "1535560",
    "end": "1542040"
  },
  {
    "text": "resource so API slash employees and it would just delete all the employees okay",
    "start": "1542040",
    "end": "1548310"
  },
  {
    "text": "I wouldn't do that yes if you could if you wanted to but it seems like a bad",
    "start": "1548310",
    "end": "1553770"
  },
  {
    "text": "idea and then patch request which patch request just says I just it's like a put request but you don't have to send",
    "start": "1553770",
    "end": "1559170"
  },
  {
    "text": "everything back it's less common to see out in the wild but I do see it and it just basically said I just want to",
    "start": "1559170",
    "end": "1564180"
  },
  {
    "text": "update these one or two properties right remember to be consistent pick away and",
    "start": "1564180",
    "end": "1571230"
  },
  {
    "text": "stick with it if you're going to insist that you do all your get requests with posts and if you're going to be that",
    "start": "1571230",
    "end": "1576540"
  },
  {
    "text": "mean at least like D consistently mean right and don't mutate data with gifts",
    "start": "1576540",
    "end": "1582630"
  },
  {
    "text": "get I've seen enough I've seen enough to call it out ok I've actually where when",
    "start": "1582630",
    "end": "1588210"
  },
  {
    "text": "you do a get request developers expect that it's not going to change anything but you're only getting data from the server but I've seen people do this I've",
    "start": "1588210",
    "end": "1595230"
  },
  {
    "text": "seen people mutate data which gets and you shouldn't do that resource",
    "start": "1595230",
    "end": "1600330"
  },
  {
    "text": "identification so we have a concept of mound versus verbs right so we have nouns employee would be an example of an",
    "start": "1600330",
    "end": "1607350"
  },
  {
    "text": "out right get all employees would be an example of a verb based system I'm not",
    "start": "1607350",
    "end": "1612450"
  },
  {
    "text": "talking HTTP verbs I'm just talking word verbs right and here's what they might look like you could get employee",
    "start": "1612450",
    "end": "1618510"
  },
  {
    "text": "get employees get a single employee or post to the employees end point or you",
    "start": "1618510",
    "end": "1624180"
  },
  {
    "text": "can create verbs right you could say get all employees get employees with ID get employee with ID and so on",
    "start": "1624180",
    "end": "1631110"
  },
  {
    "text": "generally in restful so the one on the right example on the right is more used in like soap esque systems and that's",
    "start": "1631110",
    "end": "1637350"
  },
  {
    "text": "not a bad thing like I've used good soap api's and bad rest api to leave me but",
    "start": "1637350",
    "end": "1642570"
  },
  {
    "text": "when it comes to creating a modern today api that people expect to use use plural nouns okay stick with the plural nouns",
    "start": "1642570",
    "end": "1649679"
  },
  {
    "text": "because it's consistent it's what people expect now I promise if you use singular",
    "start": "1649679",
    "end": "1654690"
  },
  {
    "text": "nouns and you get everything else right I promise you I will not stand up on the",
    "start": "1654690",
    "end": "1660000"
  },
  {
    "text": "stage and make fun of you I really won't but most people expect it to be plural so if you're starting something Greenfield stick with plural nouns to",
    "start": "1660000",
    "end": "1666720"
  },
  {
    "text": "pick one or the other remember be consistent yeah so you get a customer",
    "start": "1666720",
    "end": "1672300"
  },
  {
    "text": "you want to get the employee or you want to get the invoices under that customer right so there's a few different ways",
    "start": "1672300",
    "end": "1677850"
  },
  {
    "text": "that you might consider doing that you can give them you can just return the set of invoices within the parent object",
    "start": "1677850",
    "end": "1683850"
  },
  {
    "text": "that's an option typically that doesn't work very well unless you're returning a short list of things that doesn't change",
    "start": "1683850",
    "end": "1690720"
  },
  {
    "text": "often when you're talking about employees especially in the context of an accounting system sorry invoices in",
    "start": "1690720",
    "end": "1696360"
  },
  {
    "text": "the context of an accounting system usually a customer will just keep recurring invoices and invoices and invoices so you probably don't want to",
    "start": "1696360",
    "end": "1702990"
  },
  {
    "text": "return it with the parent object because that list could grow to a thousand or more and then you're sending back data that they may not even be using right",
    "start": "1702990",
    "end": "1709590"
  },
  {
    "text": "especially if you're getting a list of customers and you really don't want to do that much more common and much more",
    "start": "1709590",
    "end": "1716220"
  },
  {
    "text": "what you should consider is just getting a sub resource using say customers no",
    "start": "1716220",
    "end": "1721710"
  },
  {
    "text": "idea the customer and then say I want to get the invoices under this particular customer it's a lot more common it's a",
    "start": "1721710",
    "end": "1727080"
  },
  {
    "text": "lot more common occasionally I run across an API that uses expand typically",
    "start": "1727080",
    "end": "1734190"
  },
  {
    "text": "this is used for higher volume ap is where they're trying to control what data they send back they want to be",
    "start": "1734190",
    "end": "1739350"
  },
  {
    "text": "flexible and not have like a hundred endpoints but at the same time they want to give the developer an option to get",
    "start": "1739350",
    "end": "1745740"
  },
  {
    "text": "the invoices back with the parent object I would typically shy away from this for greenfield stuff I'd stick with the",
    "start": "1745740",
    "end": "1752879"
  },
  {
    "text": "middle one just said make it a separate request right the expand for ammeter I find too many consumers just say oh I'll",
    "start": "1752879",
    "end": "1758849"
  },
  {
    "text": "just take all the things you know I'll just expand every possible option and then what's the API consumer to do it's",
    "start": "1758849",
    "end": "1764460"
  },
  {
    "text": "nice for higher volume API is likely probably not necessary but whatever you",
    "start": "1764460",
    "end": "1770129"
  },
  {
    "text": "do be consistent right and I'm just going to say that till I'm blue in the face that it's simple isn't easy and keep it simple right but consistency is",
    "start": "1770129",
    "end": "1777899"
  },
  {
    "text": "key but be flexible where it makes sense and again it's pretty vague right but like I can't come up here and tell you",
    "start": "1777899",
    "end": "1784529"
  },
  {
    "text": "that the answer to this particular scenario is the right answer for you when we're doing get requests there are",
    "start": "1784529",
    "end": "1791460"
  },
  {
    "text": "some things that we should consider about the implementation of our get request we may want to sort the data filter the data or page the data this is",
    "start": "1791460",
    "end": "1798389"
  },
  {
    "text": "where I'm getting into a little bit of Microsoft D Web API ish stuff so you",
    "start": "1798389",
    "end": "1803669"
  },
  {
    "text": "know bear with me if that's not your bag but in this case we're doing we're doing a request to the contoso API we want to",
    "start": "1803669",
    "end": "1809789"
  },
  {
    "text": "get some people and we want to order by name so what would what we would end up with is a list of people ordered by name",
    "start": "1809789",
    "end": "1816659"
  },
  {
    "text": "right and this is using something called OData this isn't built into web api but",
    "start": "1816659",
    "end": "1822149"
  },
  {
    "text": "you can use new get and install OData and hook it up to your controllers it's very convenient very easy I like it you",
    "start": "1822149",
    "end": "1829889"
  },
  {
    "text": "could also do things like this or order by name descending and you can also order by multiple fields so it's pretty",
    "start": "1829889",
    "end": "1835859"
  },
  {
    "text": "handy again it's OData you don't have to remember that because you're going to wreston is that net or twitter right to",
    "start": "1835859",
    "end": "1841649"
  },
  {
    "text": "look at this all up because you don't want to remember this don't write down anything that you don't have to remember right filtering filtering is actually",
    "start": "1841649",
    "end": "1849629"
  },
  {
    "text": "pretty important so this is using the Oh data filter and API you don't have to",
    "start": "1849629",
    "end": "1855359"
  },
  {
    "text": "use this but we're and we're going to talk about where you wouldn't maybe but in this case if you're if they know the",
    "start": "1855359",
    "end": "1860580"
  },
  {
    "text": "names of the fields on the other end you might do something like this where you say I want to filter I want to say name",
    "start": "1860580",
    "end": "1865789"
  },
  {
    "text": "operator and then whatever you're comparing it to right in this case we're saying name equals milk and this is",
    "start": "1865789",
    "end": "1871859"
  },
  {
    "text": "extensible as well you can do something like this that's really useful it's really handy and we'll talk about how",
    "start": "1871859",
    "end": "1878999"
  },
  {
    "text": "that applies in a second but again you get this for free just Google this right take a picture",
    "start": "1878999",
    "end": "1884279"
  },
  {
    "text": "grab the slide deck whatever Google this you get it for free and web api is awesome paging is another important",
    "start": "1884279",
    "end": "1890279"
  },
  {
    "text": "consideration you should make right if you want to get customers it's likely something that you will have to worry",
    "start": "1890279",
    "end": "1896249"
  },
  {
    "text": "about you will have to think about paging at some point especially if you're returning a million records you probably don't want to return them all",
    "start": "1896249",
    "end": "1901470"
  },
  {
    "text": "on one go right so you're getting customers you might want to page the data you say I want page 1 I want this many in the page",
    "start": "1901470",
    "end": "1908659"
  },
  {
    "text": "and here's what the result might look like it might have a page number it might have a list of the results and it",
    "start": "1908659",
    "end": "1914759"
  },
  {
    "text": "might have a link to the next page because you're a nice developer and you're like I just want to make them give them a while while next page does",
    "start": "1914759",
    "end": "1921779"
  },
  {
    "text": "not equal no and you know keep going to let them get as many as they want I also see limit offset used commonly in lots",
    "start": "1921779",
    "end": "1929849"
  },
  {
    "text": "of API either's fine just you know pick one and stick with it be consistent right and",
    "start": "1929849",
    "end": "1934919"
  },
  {
    "text": "typically if you're implementing paging it's because you want to put a limit on the number of records I've used api's",
    "start": "1934919",
    "end": "1940080"
  },
  {
    "text": "where they gave me a page and a page size parameter I had to use it but they didn't put a maximum on the page size so",
    "start": "1940080",
    "end": "1947879"
  },
  {
    "text": "then I could just get all the records anyway so if you're using paging it's likely because you want to do some kind of filtering and keep them keep your API",
    "start": "1947879",
    "end": "1955200"
  },
  {
    "text": "from returning too much data right there's a good paging example on my blog again link linked below but I have a",
    "start": "1955200",
    "end": "1962609"
  },
  {
    "text": "paging example that I wrote up Oh data has paging in it it's not my favorite implementation I'm not exactly a fan of",
    "start": "1962609",
    "end": "1968909"
  },
  {
    "text": "how it returns the data so I usually just roll my own okay do you need this",
    "start": "1968909",
    "end": "1974940"
  },
  {
    "text": "do you need to sort a short page filter maybe I don't know what are your",
    "start": "1974940",
    "end": "1981119"
  },
  {
    "text": "consumers need that should be the first question in your API journey right is what do your consumers need I will tell",
    "start": "1981119",
    "end": "1988769"
  },
  {
    "text": "you a couple of my opinion so paging probably is something that you should consider sorting and filtering so the",
    "start": "1988769",
    "end": "1994950"
  },
  {
    "text": "thing about filtering is is if you're giving them the power to filter on anything if that query is being trained",
    "start": "1994950",
    "end": "2001099"
  },
  {
    "text": "if you're using it with entity framework even better because that translates to a sequel query but if that's not indexed",
    "start": "2001099",
    "end": "2006169"
  },
  {
    "text": "and you're trying to filter on that that can get a little hairy right it's very common to include extra query parameters",
    "start": "2006169",
    "end": "2013220"
  },
  {
    "text": "to program it to make it so that you include extra query parameters to say things like I",
    "start": "2013220",
    "end": "2018410"
  },
  {
    "text": "only want the tools in this particular category or I only want objects that",
    "start": "2018410",
    "end": "2023900"
  },
  {
    "text": "were modified after a certain date right so that's pretty common sorting weird weird and not common for",
    "start": "2023900",
    "end": "2031370"
  },
  {
    "text": "integration scenarios right because most of the time I don't care what order the data comes back I just want the data but",
    "start": "2031370",
    "end": "2037040"
  },
  {
    "text": "it might be useful if you're making like a front-end application write an angular or aralia or something and you're making",
    "start": "2037040",
    "end": "2042950"
  },
  {
    "text": "an API for the backend you might want to implement sorting for yourself right that might be an internally consumed API where sort of makes sense",
    "start": "2042950",
    "end": "2050679"
  },
  {
    "text": "versioning is really critical it's really critical to at least think about because your API should stand a test of",
    "start": "2050679",
    "end": "2057408"
  },
  {
    "text": "time but note I didn't say the test of time I just said a test of time because",
    "start": "2057409",
    "end": "2062450"
  },
  {
    "text": "you have to keep and keep in mind the lifecycle of your REST API it's not going to last forever now my mom she's a",
    "start": "2062450",
    "end": "2067970"
  },
  {
    "text": "COBOL programmer and she works on systems that use as/400 and have since the 60s okay a little bit different your",
    "start": "2067970",
    "end": "2074540"
  },
  {
    "text": "API is probably not going to last that long right but you have to keep that in mind you have to keep in mind is this",
    "start": "2074540",
    "end": "2080330"
  },
  {
    "text": "going to be useful for an extended period of time do I plan on making a new one to address consumer needs in a",
    "start": "2080330",
    "end": "2086419"
  },
  {
    "text": "couple years you have to at least think about that right and there's definitely there's different ways to version your",
    "start": "2086419",
    "end": "2092148"
  },
  {
    "text": "API these are the ones that I see that are most common so a lot of now I wouldn't say a lot a fair number of API",
    "start": "2092149",
    "end": "2099170"
  },
  {
    "text": "implementers do something where they do a get request and you're getting or posting to customers you post to the",
    "start": "2099170",
    "end": "2105590"
  },
  {
    "text": "same URL but you provide a version number in the header of the request okay",
    "start": "2105590",
    "end": "2110690"
  },
  {
    "text": "it's a little bit I would I see it but it's to me it's not obvious it's not obvious that especially if the objects",
    "start": "2110690",
    "end": "2118130"
  },
  {
    "text": "have a different structure if I'm expecting something different back on a get request it's not entirely obvious I",
    "start": "2118130",
    "end": "2125450"
  },
  {
    "text": "don't like this strategy but I do see it I'd much prefer something like this where you're putting the version number",
    "start": "2125450",
    "end": "2130880"
  },
  {
    "text": "in the URL right so that way you're saying I'm running version 1 of this customer's API and then I can say if I",
    "start": "2130880",
    "end": "2135920"
  },
  {
    "text": "need version 2 great I can just call a different end point it's much more obvious here's something here's an",
    "start": "2135920",
    "end": "2142130"
  },
  {
    "text": "example of somebody getting creative so stripe is a payment processing API it's pretty popular and they use a mixed",
    "start": "2142130",
    "end": "2148400"
  },
  {
    "text": "stress they have their major versions segmented out by a URL but then if you have a",
    "start": "2148400",
    "end": "2155119"
  },
  {
    "text": "minor version like a tweak that you need like some some additional thing they'll have minor versions of their API and you",
    "start": "2155119",
    "end": "2160490"
  },
  {
    "text": "can distinguish between those inside of the header which i think is kind of handy you likely won't need to do that",
    "start": "2160490",
    "end": "2165619"
  },
  {
    "text": "but the creative example so I threw it in there it's kind of cool use URL",
    "start": "2165619",
    "end": "2171769"
  },
  {
    "text": "versioning it'll save you trouble it'll save your consumer struggle it's obvious well it's much more obvious errors are",
    "start": "2171769",
    "end": "2179299"
  },
  {
    "text": "going to happen problems with your API are going to happen the question is how are you going to manage those problems",
    "start": "2179299",
    "end": "2184430"
  },
  {
    "text": "right so let me show you an example that's a bad example and it's using a",
    "start": "2184430",
    "end": "2191329"
  },
  {
    "text": "real API that change you know to protect the innocent or not but I need to create",
    "start": "2191329",
    "end": "2196730"
  },
  {
    "text": "a vendor so I do a post request to create a vendor but it requires name and the state right and I give it the the",
    "start": "2196730",
    "end": "2203750"
  },
  {
    "text": "name of the vendor but I don't give it the state right I don't say Missouri or whatever then I get back a bad request",
    "start": "2203750",
    "end": "2210650"
  },
  {
    "text": "that sister returns application jason says this is jason and then it returns a string that says state is required okay",
    "start": "2210650",
    "end": "2216859"
  },
  {
    "text": "that's a Matson that's an error message that's something I can do something with",
    "start": "2216859",
    "end": "2222069"
  },
  {
    "text": "useful limited usefulness we'll talk about that in a second right so let's do in a post to a different end point so",
    "start": "2222069",
    "end": "2229069"
  },
  {
    "text": "we're going to create an employee and requires a first and last name all right and I just give it a first name because",
    "start": "2229069",
    "end": "2234289"
  },
  {
    "text": "I'm just trying it out and see if I can break it then it returns back 400 bad request it's also returns back Jason but",
    "start": "2234289",
    "end": "2240140"
  },
  {
    "text": "it returns back to Jason object that wraps inside of an error message it just says your request was invalid okay now",
    "start": "2240140",
    "end": "2247099"
  },
  {
    "text": "both of these examples are pretty bad examples and this is a real API again this is not something I haven't seen",
    "start": "2247099",
    "end": "2252349"
  },
  {
    "text": "right where they return one format in one end and one on another and this is like this is weird to me so they're bad",
    "start": "2252349",
    "end": "2259970"
  },
  {
    "text": "so the first one is bad because what if there's multiple properties that are invalid I want to know about each of",
    "start": "2259970",
    "end": "2265369"
  },
  {
    "text": "those so I can fix them fix the problem that much quicker then on the other end it wraps it in an object which is sort",
    "start": "2265369",
    "end": "2272089"
  },
  {
    "text": "of like a beginning because if it's wrapped in an object maybe they'll eventually return or at least an array or something of errors right but it",
    "start": "2272089",
    "end": "2279619"
  },
  {
    "text": "doesn't even tell me what's wrong right a good combination that I see a good approach is usually to return like an array of",
    "start": "2279619",
    "end": "2286010"
  },
  {
    "text": "errors that say here's an error with this particular property and here's the error message you know it's either",
    "start": "2286010",
    "end": "2291410"
  },
  {
    "text": "formatted incorrectly or entirely missing I like this err this kind of error reporting so again I'll say it again",
    "start": "2291410",
    "end": "2298640"
  },
  {
    "text": "simple isn't easy this is pulled from Twilio documentation a little hard to see but what they return to you is not only do they return",
    "start": "2298640",
    "end": "2305060"
  },
  {
    "text": "an error message they return a specific error code that's tied explicitly to that error message then they give you a",
    "start": "2305060",
    "end": "2311660"
  },
  {
    "text": "link to the documentation on how to fix it and phone numbers are weird because phone numbers come in lots of different formats and actually Twilio makes it",
    "start": "2311660",
    "end": "2319310"
  },
  {
    "text": "really easy because you can give them a phone number that has parentheses or hyphens right and it doesn't really care",
    "start": "2319310",
    "end": "2326830"
  },
  {
    "text": "but if the bad word but but if you send in like I don't know a plus sign and you've got the wrong country code that",
    "start": "2326830",
    "end": "2333200"
  },
  {
    "text": "could be a problem and so they give you a link back to some documentation that you can use to fix your problem that's awesome that's great you got to make",
    "start": "2333200",
    "end": "2341360"
  },
  {
    "text": "confining and fixing errors on your consumer as easy as possible okay that's",
    "start": "2341360",
    "end": "2346610"
  },
  {
    "text": "the bottom line you've got to keep it simple for them it's simple isn't easy but you got to keep it simple for them",
    "start": "2346610",
    "end": "2351830"
  },
  {
    "text": "so that you'll use it talk about security so I've got two facets that I want to go over you know fairly quickly",
    "start": "2351830",
    "end": "2357940"
  },
  {
    "text": "is that in encryption and authentication so a bottom line is you should be using",
    "start": "2357940",
    "end": "2363560"
  },
  {
    "text": "SSL all right there's no reason not to anymore you can get free certificates via let's encrypt org right and then you",
    "start": "2363560",
    "end": "2370850"
  },
  {
    "text": "can automate it so that it perpetually requests new certificates and it works in perpetuity I did that to my blog if",
    "start": "2370850",
    "end": "2376130"
  },
  {
    "text": "you go to Schneids net you'll see that it's encrypted why did I have to feel the need to encrypt blog traffic and I don't really",
    "start": "2376130",
    "end": "2382880"
  },
  {
    "text": "know but I did it because it was there and it took me about four hours to do so if I it takes me four hours it can take",
    "start": "2382880",
    "end": "2389690"
  },
  {
    "text": "you like to write use SSL and don't roll your own encryption please don't roll your own encryption and this is just",
    "start": "2389690",
    "end": "2395900"
  },
  {
    "text": "like a general rule all right let me tell you a story this is real so there was an encryption library that had a",
    "start": "2395900",
    "end": "2402650"
  },
  {
    "text": "vendor name and then it just said encryption DLL right it was the name of the software company and then they said",
    "start": "2402650",
    "end": "2408500"
  },
  {
    "text": "ok you need a key here in this text file and then in your application settings you need another key ok so very very",
    "start": "2408500",
    "end": "2415400"
  },
  {
    "text": "cryptic very like mysterious like you need multiple keys like this is really cool and we were using it to in encrypt",
    "start": "2415400",
    "end": "2423480"
  },
  {
    "text": "social security numbers sensitive data and so I was looking at the social security numbers one day not the real",
    "start": "2423480",
    "end": "2429330"
  },
  {
    "text": "lunch that the encrypted ones and I started noticing kind of a pattern it's like okay they're all roughly the same",
    "start": "2429330",
    "end": "2435150"
  },
  {
    "text": "length no they all are the same length and see the characters repeated over and over again what they had for us was a",
    "start": "2435150",
    "end": "2441330"
  },
  {
    "text": "library that essentially was a substitution cipher they literally were",
    "start": "2441330",
    "end": "2448410"
  },
  {
    "text": "substituting nine for like the Y with two dots above it and I and I noticed this and I told my manager and he kind",
    "start": "2448410",
    "end": "2454560"
  },
  {
    "text": "of laughed because he used to work there thankfully didn't touch that but don't roll your own there's plenty of",
    "start": "2454560",
    "end": "2460020"
  },
  {
    "text": "encryption out there that you can use it's plenty of encryption libraries you will do it wrong they will do it right I",
    "start": "2460020",
    "end": "2465390"
  },
  {
    "text": "would do it wrong I just wouldn't try and then pick an authentication strategy that isn't basic basic authentication",
    "start": "2465390",
    "end": "2471480"
  },
  {
    "text": "meaning with your API you send a username and password which is common and pretty easy to get started the",
    "start": "2471480",
    "end": "2477570"
  },
  {
    "text": "problem is is that basic authentication is like giving you keys to your house to your house sitter and saying I'm going",
    "start": "2477570",
    "end": "2484770"
  },
  {
    "text": "to be gone for a week so watch my house and you're letting the the sitters like okay and then you hand them the number",
    "start": "2484770",
    "end": "2490440"
  },
  {
    "text": "of your checking account when you hand them the combination to your safe right you're just giving them all access privileges to your house you're giving",
    "start": "2490440",
    "end": "2496680"
  },
  {
    "text": "them free reign and that's not very manageable Twitter use basic authentication for a long time they",
    "start": "2496680",
    "end": "2502710"
  },
  {
    "text": "eventually got rid of it because they didn't want people to be passing their username and passwords to a vendor who",
    "start": "2502710",
    "end": "2508170"
  },
  {
    "text": "might store them improperly and then use them to make requests and then you're just giving them the keys of the kingdom now you can tweet out all sorts of weird",
    "start": "2508170",
    "end": "2515970"
  },
  {
    "text": "stuff right they didn't Twitter said no you want to be able to oh oh office a very good strategy for consumer-facing",
    "start": "2515970",
    "end": "2522900"
  },
  {
    "text": "API applications where you need to where a consumer needs to interact and give permission right a loss is what Twitter",
    "start": "2522900",
    "end": "2528930"
  },
  {
    "text": "uses what Facebook uses you basically give direct them to a login and then it says here's what this application wants",
    "start": "2528930",
    "end": "2534839"
  },
  {
    "text": "to do here's what it can't do and then it sends back a token for that application to use to do those things",
    "start": "2534839",
    "end": "2539849"
  },
  {
    "text": "right that's much more scalable because those tickets or those tokens can be refreshed they can be revoked by the",
    "start": "2539849",
    "end": "2547230"
  },
  {
    "text": "user at any time much more scalable and much better for security alright so",
    "start": "2547230",
    "end": "2553680"
  },
  {
    "text": "let's look at some code example I'm gonna look at the screen here because oh good okay so that says that doesn't look too bad I was worried that it would be",
    "start": "2553680",
    "end": "2560190"
  },
  {
    "text": "too small but let's go over what a controller looks like so that's we're actually looking at some Web API code so",
    "start": "2560190",
    "end": "2565710"
  },
  {
    "text": "we have here our employees controller it's just a class declaration that inherits from API controller if you're",
    "start": "2565710",
    "end": "2571619"
  },
  {
    "text": "using asp.net core you would just inherit from controller and then we have our route at the top we say we want this",
    "start": "2571619",
    "end": "2577619"
  },
  {
    "text": "to be API version 1 of employees alright so cool we're on the way we're implementing a good versioning strategy",
    "start": "2577619",
    "end": "2583650"
  },
  {
    "text": "I like that and we got our get requests which get data we have the top one which just",
    "start": "2583650",
    "end": "2588809"
  },
  {
    "text": "returns a list of employees and then we have the one below it which returns ones particular employee and it has a little",
    "start": "2588809",
    "end": "2594989"
  },
  {
    "text": "route attribute to say we expect an ID of type end to be here and then we get that as an argument to our method and",
    "start": "2594989",
    "end": "2601349"
  },
  {
    "text": "then that gets executed awesome then we",
    "start": "2601349",
    "end": "2606569"
  },
  {
    "text": "have our employee post which takes an employee in now if you've ever made an",
    "start": "2606569",
    "end": "2612869"
  },
  {
    "text": "API in visual studio you can create a new project and then right click on the",
    "start": "2612869",
    "end": "2619470"
  },
  {
    "text": "controllers and then add you know create your model and then right click on the controllers folder and hit add controller and then you can do something",
    "start": "2619470",
    "end": "2625950"
  },
  {
    "text": "called scaffolding where it just generates all the code for you and if you're using entity framework it's like double the awesome right because then it",
    "start": "2625950",
    "end": "2632640"
  },
  {
    "text": "just makes a controller for you that implements or gets your puts through your posts and your delete and it does",
    "start": "2632640",
    "end": "2638759"
  },
  {
    "text": "it all against an entity framework database which is awesome right actually not awesome so one of the things that's really bad",
    "start": "2638759",
    "end": "2644970"
  },
  {
    "text": "and there's a lot of maintainability problems around that a lot of security problems - such as how are we",
    "start": "2644970",
    "end": "2651119"
  },
  {
    "text": "controlling what the employee object has on it so now is does this mean that any property that they post back to this",
    "start": "2651119",
    "end": "2657989"
  },
  {
    "text": "employee endpoint can be updated what if there's a social security number right or the opposite could be true they get",
    "start": "2657989",
    "end": "2663420"
  },
  {
    "text": "requests to include those by default right so that's bad that's insecure the better option is to use what's called a",
    "start": "2663420",
    "end": "2669930"
  },
  {
    "text": "dto or data transfer object or even a per request object when I create api's",
    "start": "2669930",
    "end": "2675660"
  },
  {
    "text": "all of my controllers each of the requests has a different class associated with it for that request so",
    "start": "2675660",
    "end": "2682049"
  },
  {
    "text": "if I'm creating an employee I'm I'm creating a class called employee post request it takes extra code but",
    "start": "2682049",
    "end": "2688260"
  },
  {
    "text": "it's very explicit and it's very maintainable we'll talk about why in a little bit what about this",
    "start": "2688260",
    "end": "2695130"
  },
  {
    "text": "okay so we've we've implemented that and we just we've said let's D TOS all the way right DT of all the things so let's",
    "start": "2695130",
    "end": "2701370"
  },
  {
    "text": "separate our concerns right this is a little little harder to read so I'll break it down for you a little bit so we're taking an order this is an order",
    "start": "2701370",
    "end": "2707580"
  },
  {
    "text": "controller so we're taking an order DT oh so that a customer can make an order right so we're going to create a new",
    "start": "2707580",
    "end": "2713790"
  },
  {
    "text": "order we're going to add all the items in the order DT Oh to that order and then we're going to save it to the",
    "start": "2713790",
    "end": "2719280"
  },
  {
    "text": "database okay and then your controller you know your controllers done some magic and that's and that's awesome right the problem is is that the",
    "start": "2719280",
    "end": "2726510"
  },
  {
    "text": "controller knows too much the controller knows how to - too much and you see the bottom line is a controller should be a",
    "start": "2726510",
    "end": "2732600"
  },
  {
    "text": "traffic cop they should be able to point out where things go direct traffic like this right but they should never know",
    "start": "2732600",
    "end": "2738270"
  },
  {
    "text": "how to do something they should know where to go to do something but not how ok and we'll show I'll give an example",
    "start": "2738270",
    "end": "2745080"
  },
  {
    "text": "of that in just a second we skip this part the part about bad requests right",
    "start": "2745080",
    "end": "2751320"
  },
  {
    "text": "we're up there it says if model state is valid it's check in that order DT Oh to make sure that it's a valid object then",
    "start": "2751320",
    "end": "2757110"
  },
  {
    "text": "send back bad requests and that's good because we want to send back bad requests so they'll fix it and redo",
    "start": "2757110",
    "end": "2762300"
  },
  {
    "text": "their order maybe there was no cart items in the cart for this order or something right so then we implement",
    "start": "2762300",
    "end": "2768260"
  },
  {
    "text": "validation on our DT oh right we can add those little attributes that say this",
    "start": "2768260",
    "end": "2773910"
  },
  {
    "text": "parameters required here's the range right you can do that you can also inherit from I validate able object",
    "start": "2773910",
    "end": "2780620"
  },
  {
    "text": "which just provides a method or not inherit implement I validate able objects which provides a method called",
    "start": "2780620",
    "end": "2786510"
  },
  {
    "text": "validate and then you can say you can do some custom validation logic that's that's maybe more custom than just using",
    "start": "2786510",
    "end": "2793380"
  },
  {
    "text": "those data annotations like required the problem with this is that now the DTO",
    "start": "2793380",
    "end": "2799740"
  },
  {
    "text": "knows too much about how to validate itself right what if you need to access a database right you don't there's",
    "start": "2799740",
    "end": "2807240"
  },
  {
    "text": "there's no hooks for us to create a new order dto passing in our database container right you could do it up",
    "start": "2807240",
    "end": "2813060"
  },
  {
    "text": "inside of there but that's not really a good idea so what are you supposed to do",
    "start": "2813060",
    "end": "2818230"
  },
  {
    "text": "we'll talk about that in a second the bottom line is is that better that this is better than nothing right this is",
    "start": "2818230",
    "end": "2824140"
  },
  {
    "text": "better than nothing you should validate validate validate validate all the things assume that all",
    "start": "2824140",
    "end": "2829240"
  },
  {
    "text": "data that you're getting is bad until you validated it and you should separate",
    "start": "2829240",
    "end": "2834790"
  },
  {
    "text": "your validation logic from your object your dto should not know how to validate itself I like this library it's called fluent",
    "start": "2834790",
    "end": "2841300"
  },
  {
    "text": "validation and what you end up doing is for than order DTO you would create an order detail validator class and then",
    "start": "2841300",
    "end": "2847660"
  },
  {
    "text": "you can test that independently here's what the architecture of one of an API",
    "start": "2847660",
    "end": "2852970"
  },
  {
    "text": "that I would make uses so we have a controller the controller gets a request the request gets routed to a validator",
    "start": "2852970",
    "end": "2859870"
  },
  {
    "text": "right and then that validator once it's passed that it passes it on to a handler",
    "start": "2859870",
    "end": "2865390"
  },
  {
    "text": "or service that then processes that request you notice everything is broken down yes it's more lines of code but as",
    "start": "2865390",
    "end": "2872140"
  },
  {
    "text": "your API grows in complexity and you need to maintain it it will save you tons of hours it'll save you tons of",
    "start": "2872140",
    "end": "2878050"
  },
  {
    "text": "time and then of course it's just good for separation of concerns and testability because we're all unit",
    "start": "2878050",
    "end": "2883390"
  },
  {
    "text": "testing all these things right right Google mediator if you know if you use a",
    "start": "2883390",
    "end": "2890290"
  },
  {
    "text": "library called Auto mapper which I use Auto mapper all the time especially in web api mediator was written by the guy",
    "start": "2890290",
    "end": "2896410"
  },
  {
    "text": "Jimmy Bogart it's an awesome library it's a very simple low API surface it's",
    "start": "2896410",
    "end": "2902440"
  },
  {
    "text": "a good it's a good one to implement the pattern where you go request handler that kind of thing mediators awesome",
    "start": "2902440",
    "end": "2910950"
  },
  {
    "text": "documentation is so critical and there's a lot you have to think about you have",
    "start": "2910950",
    "end": "2916540"
  },
  {
    "text": "to think about the endpoints that you're documenting you have to think about the parameters those endpoints take you have",
    "start": "2916540",
    "end": "2921670"
  },
  {
    "text": "to think about the schema of the data that you're sending and receiving you have to talk about how it's formatted",
    "start": "2921670",
    "end": "2927250"
  },
  {
    "text": "because if you're because if you're using JSON and you're expecting a date right you wanted an ISO 8601 format or",
    "start": "2927250",
    "end": "2933610"
  },
  {
    "text": "maybe you wanted in you know short date time format you have to specify that you have to talk to that you have to you",
    "start": "2933610",
    "end": "2939370"
  },
  {
    "text": "know engage with your users and tell them this is what you're expecting and then you have to tell them about how to",
    "start": "2939370",
    "end": "2944440"
  },
  {
    "text": "fix errors or how to manage exceptions right and there's so much that goes into this making the doubt Navigant page",
    "start": "2944440",
    "end": "2951430"
  },
  {
    "text": "easy-to-navigate right making it easy to read making it so that you document",
    "start": "2951430",
    "end": "2956829"
  },
  {
    "text": "everything that allows them to go soup to nuts down your API right so you could document authentication for example",
    "start": "2956829",
    "end": "2962980"
  },
  {
    "text": "really important part to document the bottom line is is a good API lives and dies by its documentation by far I'd",
    "start": "2962980",
    "end": "2969910"
  },
  {
    "text": "rather consume a bad API with good dot with awesome documentation than a good API with no documentation at all every",
    "start": "2969910",
    "end": "2976660"
  },
  {
    "text": "time because if it's well documented at least it's at least I can expect I can",
    "start": "2976660",
    "end": "2983980"
  },
  {
    "text": "kind of work my work my way through the muck work my way through the weirdness right but it's a good API and I",
    "start": "2983980",
    "end": "2990279"
  },
  {
    "text": "encounter a problem and the message that I get back is vague and there's no documentation that sucks but if it's not",
    "start": "2990279",
    "end": "2996160"
  },
  {
    "text": "a good API anyways has got good documentation it should be if it's a good API it's got good documentation or",
    "start": "2996160",
    "end": "3003059"
  },
  {
    "text": "you should tweet that out because that's awesome it's like I thought of that it was like great maintaining your API this",
    "start": "3003059",
    "end": "3010319"
  },
  {
    "text": "is kind of a big one this is a conversation that I had recently with one of the API vendors which we have a lot of customers under write they said",
    "start": "3010319",
    "end": "3017430"
  },
  {
    "text": "hey we're making under some under the cover the changes they're not changing any of the they're not changing into the objects they're not changing you need to",
    "start": "3017430",
    "end": "3023970"
  },
  {
    "text": "get there just making some under the cover changes but they shouldn't impact you but let me know if it breaks",
    "start": "3023970",
    "end": "3029670"
  },
  {
    "text": "something let us know if it breaks something okay that should send up a red flag it's end up like a hundred for this",
    "start": "3029670",
    "end": "3035039"
  },
  {
    "text": "company it's no this is no different right just this is just a normal day well we said hey okay you know can we",
    "start": "3035039",
    "end": "3042569"
  },
  {
    "text": "run our integration test can you release it to test so that way we can run our test suite against it and make sure everything's cool no we need it in an",
    "start": "3042569",
    "end": "3049710"
  },
  {
    "text": "hour so we're going to deploy it in an hour right so not only did they warn us that there could be breaking changes is",
    "start": "3049710",
    "end": "3055680"
  },
  {
    "text": "that they couldn't even anticipate but they said we're going to release it to production in an hour anyway and you",
    "start": "3055680",
    "end": "3061619"
  },
  {
    "text": "know screw your customers if you have customers right and this is like so totally wrong on so many levels right",
    "start": "3061619",
    "end": "3068089"
  },
  {
    "text": "this is just terrible idea this is just terrible API practice and I asked them about unit testing they're like how are",
    "start": "3068089",
    "end": "3073619"
  },
  {
    "text": "we supposed to do that unit test what's that right so I knew that they weren't doing that and that just made this even",
    "start": "3073619",
    "end": "3080339"
  },
  {
    "text": "harder thankfully there weren't any issues at time maintaining your API a large",
    "start": "3080339",
    "end": "3087810"
  },
  {
    "text": "part of it should be fixing bugs and optimizing so you don't want to optimize too far ahead of time right you know",
    "start": "3087810",
    "end": "3093090"
  },
  {
    "text": "premature optimization is the root of all evil I live by that but if you're if there's opportunities for better",
    "start": "3093090",
    "end": "3099450"
  },
  {
    "text": "performance and they're significant then take them right you know fix some bugs if there's a bug with your API fix it",
    "start": "3099450",
    "end": "3105090"
  },
  {
    "text": "right do what they expect don't do things like remove properties or add",
    "start": "3105090",
    "end": "3110250"
  },
  {
    "text": "properties or even add properties away because I said we actually had that happen to one of our vendors they added",
    "start": "3110250",
    "end": "3115650"
  },
  {
    "text": "properties for their API much after they were released and we actually had a property on there that on our class and",
    "start": "3115650",
    "end": "3122190"
  },
  {
    "text": "our c-sharp class that that shared that property name and so what it tried to do is it was was giving us a string and we",
    "start": "3122190",
    "end": "3129090"
  },
  {
    "text": "were trying to deserialize it into a complex object and then of course Newton soft-touch jason said you know naughty I'm magic but I'm not that magic so then",
    "start": "3129090",
    "end": "3136020"
  },
  {
    "text": "that broke everything didn't break it broke that one particular endpoint and that was kind of sad we fixed it but",
    "start": "3136020",
    "end": "3142340"
  },
  {
    "text": "keep your API is consistent right if you release it if you've provided that contract don't add and certainly don't",
    "start": "3142340",
    "end": "3149250"
  },
  {
    "text": "remove okay so it's got eight minutes left so this is the end of my talk if",
    "start": "3149250",
    "end": "3156720"
  },
  {
    "text": "you don't want more resources go to rest nine sneck follow me on twitter look at",
    "start": "3156720",
    "end": "3163410"
  },
  {
    "text": "my Twitter account it's got a link to this as well you can go to my website I've got lots more information if I'll",
    "start": "3163410",
    "end": "3168810"
  },
  {
    "text": "take some questions since I'm asked to have some extra time so if anybody has any questions if you want to leave",
    "start": "3168810",
    "end": "3173850"
  },
  {
    "text": "please feel free but if you want to ask questions by all means but other than that my name is Spencer thank you very",
    "start": "3173850",
    "end": "3180030"
  },
  {
    "text": "much I appreciate your listening and have the rest of us eat [Applause]",
    "start": "3180030",
    "end": "3193040"
  },
  {
    "text": "so the question was what about a piece away showed Asia API versioning in the",
    "start": "3219410",
    "end": "3225390"
  },
  {
    "text": "URL we showed it in the header what about in the query string for like get requests right I don't have any",
    "start": "3225390",
    "end": "3231119"
  },
  {
    "text": "particular experience my experience is that it's better than my first initial thought is that it's better than header",
    "start": "3231119",
    "end": "3236910"
  },
  {
    "text": "versioning but still not as good as like putting it explicitly at the beginning of the URL but at least it's a step in",
    "start": "3236910",
    "end": "3242609"
  },
  {
    "text": "the right direction so but I would probably avoid it I mean if I were making an API I might use it for minor",
    "start": "3242609",
    "end": "3249240"
  },
  {
    "text": "versioning but I have not even had an opportunity to do minor versioning on an API so probably wouldn't do that either",
    "start": "3249240",
    "end": "3255030"
  },
  {
    "text": "good question yes",
    "start": "3255030",
    "end": "3261140"
  },
  {
    "text": "say that again Oh",
    "start": "3263270",
    "end": "3266780"
  },
  {
    "text": "the question was about generating documentation so there's some good tools out there to generate your duck at least",
    "start": "3268590",
    "end": "3274740"
  },
  {
    "text": "start on your documentation because you really don't want to sit and like go property by property like some of that",
    "start": "3274740",
    "end": "3280410"
  },
  {
    "text": "can be done for you swagger is a good option so what I use but it's often used",
    "start": "3280410",
    "end": "3285540"
  },
  {
    "text": "in substitute for like not documenting at all and it's good but you should still fill in the gaps with like here's",
    "start": "3285540",
    "end": "3291840"
  },
  {
    "text": "the exception here's how errors should look when you return it when I'm returning a problem here's how errors",
    "start": "3291840",
    "end": "3296910"
  },
  {
    "text": "look here's how you have sent a case you still have to bridge those gaps but it's at least a good start good question yes",
    "start": "3296910",
    "end": "3305510"
  },
  {
    "text": "how do you oh great question how do you handle versioning in code me personally",
    "start": "3305540",
    "end": "3310970"
  },
  {
    "text": "so the way that I structure my applications heavily relies on dependency injection so what I do is I",
    "start": "3310970",
    "end": "3316859"
  },
  {
    "text": "actually have my controllers in a completely separate library and then when I start up my application I use",
    "start": "3316859",
    "end": "3322590"
  },
  {
    "text": "dependency injection to read though to read that library and then inject those different version controllers into my",
    "start": "3322590",
    "end": "3329280"
  },
  {
    "text": "asp net runtime so I so I you don't have",
    "start": "3329280",
    "end": "3334680"
  },
  {
    "text": "to use dependency injection you ought to but to answer your question specifically usually I just store them in a separate",
    "start": "3334680",
    "end": "3340890"
  },
  {
    "text": "project and just differentiate them by using different routes do I have any",
    "start": "3340890",
    "end": "3348210"
  },
  {
    "text": "code examples I think the let's see if I can find a good one here the one that I",
    "start": "3348210",
    "end": "3356280"
  },
  {
    "text": "think would be most applicable if you could use your imagination just a little bit is if you could have an employee and",
    "start": "3356280",
    "end": "3362700"
  },
  {
    "text": "employees v1 controller right that has that route prefix at the top and then",
    "start": "3362700",
    "end": "3369390"
  },
  {
    "text": "you can have another employees v2 controllers that has a different route prefix API v2 you could keep them in the",
    "start": "3369390",
    "end": "3375210"
  },
  {
    "text": "same library I put them in separate libraries personally can I like to keep things separate separate is good great",
    "start": "3375210",
    "end": "3380640"
  },
  {
    "text": "question great question yes",
    "start": "3380640",
    "end": "3384260"
  },
  {
    "text": "so the question was about validation like if I don't the object doesn't",
    "start": "3402640",
    "end": "3407690"
  },
  {
    "text": "validate itself how do I validate it so I use fluent validation and fluent validation gives me gives me a tool",
    "start": "3407690",
    "end": "3415730"
  },
  {
    "text": "where I can just I create a class and I inherit from their validator class and then I define my validation rules in the",
    "start": "3415730",
    "end": "3423530"
  },
  {
    "text": "constructor so it would say rule for first name is that it can't be empty and empty means not an empty string and not",
    "start": "3423530",
    "end": "3429740"
  },
  {
    "text": "null so that's how I handle that I keep my validator separate from my D POS or request objects yes so so the question",
    "start": "3429740",
    "end": "3440360"
  },
  {
    "text": "was where do you pass the validation so I have it hooked up in my pipeline such that my controller routes my request",
    "start": "3440360",
    "end": "3446720"
  },
  {
    "text": "through about through all the validators that it can find and then it goes if all the validators pass then it goes into my",
    "start": "3446720",
    "end": "3454040"
  },
  {
    "text": "handler and actually does my service great question yes",
    "start": "3454040",
    "end": "3460930"
  },
  {
    "text": "great question so the question is how do I handle deprecation right if I'm forced",
    "start": "3466440",
    "end": "3471970"
  },
  {
    "text": "to break something how do i how do I handle that typically in an API we're in",
    "start": "3471970",
    "end": "3478420"
  },
  {
    "text": "the API world what you would do is you give there first of all you'd give your consumers a lot of notice when you",
    "start": "3478420",
    "end": "3483730"
  },
  {
    "text": "deprecated it that means that at some point you're in the near future you want to retire it if you're going to do that",
    "start": "3483730",
    "end": "3489490"
  },
  {
    "text": "it's best to create another version of your end of your API and another version of that endpoint and a lot and then",
    "start": "3489490",
    "end": "3495040"
  },
  {
    "text": "point them to that and say you use that version at that point you probably think it's at the point where you're probably",
    "start": "3495040",
    "end": "3501280"
  },
  {
    "text": "thinking about doing that you're probably looking to the future anyways to say I'm going to implement API 2.0 but the worst thing you can do is give",
    "start": "3501280",
    "end": "3507970"
  },
  {
    "text": "your consumers like very little notice nothing would piss them off more seriously like if you gave them we're",
    "start": "3507970",
    "end": "3513970"
  },
  {
    "text": "going to set this API down in a month like even six months isn't really enough like more like a year but if you're",
    "start": "3513970",
    "end": "3520000"
  },
  {
    "text": "doing that you're probably looking at the next version of your API great question yes right right",
    "start": "3520000",
    "end": "3537150"
  },
  {
    "text": "okay so the question was is the ordering and filtering using the query string",
    "start": "3560720",
    "end": "3566730"
  },
  {
    "text": "because that in the query string yes and then and then right okay so the question",
    "start": "3566730",
    "end": "3574380"
  },
  {
    "text": "is about having a single query filterable query parameter versus multiple using it so you can use the",
    "start": "3574380",
    "end": "3581490"
  },
  {
    "text": "filter parameter if you're using oh data you can use that single one much more commonly I don't see Oh data out in the",
    "start": "3581490",
    "end": "3587880"
  },
  {
    "text": "wild much I like it because it's convenient and it works well for what I use it for but it's much more common to",
    "start": "3587880",
    "end": "3593040"
  },
  {
    "text": "have multiple query parameters on an endpoint that filter it in some way and",
    "start": "3593040",
    "end": "3598410"
  },
  {
    "text": "they're all usually optional so they could say it might be modified after or part of a certain category and then you",
    "start": "3598410",
    "end": "3604530"
  },
  {
    "text": "can filter it out based on based on the query parameters that you provide and I",
    "start": "3604530",
    "end": "3609840"
  },
  {
    "text": "see that much more commonly all okay and is it a single get it yeah we typically",
    "start": "3609840",
    "end": "3617220"
  },
  {
    "text": "a single get yep well now I say",
    "start": "3617220",
    "end": "3625950"
  },
  {
    "text": "typically but I've never seen that no usually it's just one get with multiple query parameters great question all",
    "start": "3625950",
    "end": "3631380"
  },
  {
    "text": "right well I'm out of time and I want to let the next speaker up on the stage so thank you so much for coming thank you very much",
    "start": "3631380",
    "end": "3637820"
  }
]