[
  {
    "text": "okay so we shall get started so hopefully you are here to",
    "start": "5400",
    "end": "11440"
  },
  {
    "text": "hear about open Telemetry I am not talking about net I know some of you know I talk about net a lot I am talking",
    "start": "11440",
    "end": "17720"
  },
  {
    "text": "about JavaScript and typescript because other languages exist",
    "start": "17720",
    "end": "22760"
  },
  {
    "text": "apparently um so we're going to talk about open Telemetry we're going to talk about how we can use it and we're going",
    "start": "22760",
    "end": "28880"
  },
  {
    "text": "to talk more specifically about practical use cases so how what what do you actually do to put it in rather than",
    "start": "28880",
    "end": "35000"
  },
  {
    "text": "just going here's a few service defaults throw those in everything will happen",
    "start": "35000",
    "end": "40280"
  },
  {
    "text": "but what should you be doing and how should you be doing that that's the focus of this talk we're going to be using mostly typescripts but obviously a",
    "start": "40280",
    "end": "48199"
  },
  {
    "text": "lot of this works in type in JavaScript as well",
    "start": "48199",
    "end": "53239"
  },
  {
    "text": "so my name is Martin THS um I am first and foremost an observability evangelist",
    "start": "53239",
    "end": "60399"
  },
  {
    "text": "that means I talk about how we observe our production systems how we understand what's going on in production systems",
    "start": "60399",
    "end": "66360"
  },
  {
    "text": "I've been talking about this for about 10 years now which makes me sad when I think about how long that's been um you",
    "start": "66360",
    "end": "73040"
  },
  {
    "text": "can follow me on Twitter on masteron I've recently started a YouTube channel um where I'm doing some short videos on",
    "start": "73040",
    "end": "79280"
  },
  {
    "text": "this kind of stuff so feel free to subscribe follow All That Jazz um do be",
    "start": "79280",
    "end": "84400"
  },
  {
    "text": "aware I do have a lot of British snark in everything that I do whether it's this talk or on Twitter so no refunds",
    "start": "84400",
    "end": "91720"
  },
  {
    "text": "um we can't talk about open Telemetry without talking about observability because observability is",
    "start": "91720",
    "end": "100520"
  },
  {
    "text": "the why open Telemetry is the how and if we don't understand the why how can we",
    "start": "100520",
    "end": "107119"
  },
  {
    "text": "understand what to do with the how so this is a quote from charity Majors who runs the company I work for honeycomb um",
    "start": "107119",
    "end": "114880"
  },
  {
    "text": "just to be clear I'm not here to talk about honeycomb we're talking specifically about open Telemetry um which is vendor agnostic and completely",
    "start": "114880",
    "end": "121920"
  },
  {
    "text": "open source the quote around observability kind of started around 2017",
    "start": "121920",
    "end": "128280"
  },
  {
    "text": "2018 when at that time we were thinking a lot more about metrics and logs and",
    "start": "128280",
    "end": "134040"
  },
  {
    "text": "really about that analysis flow being let's look at some graphs let's maybe go",
    "start": "134040",
    "end": "139280"
  },
  {
    "text": "and have a look at some log lines hopefully we'll be able to get some information and what happened was um",
    "start": "139280",
    "end": "145560"
  },
  {
    "text": "charity came out of Facebook and started to think about the tools that they had",
    "start": "145560",
    "end": "150680"
  },
  {
    "text": "there and how they were different to what we had in the industry today as in",
    "start": "150680",
    "end": "155800"
  },
  {
    "text": "today being 2017 so thinking about the idea of something called scuba which was an",
    "start": "155800",
    "end": "162000"
  },
  {
    "text": "internal system that allowed them to look at really what was happening on the inside of every one of their",
    "start": "162000",
    "end": "167720"
  },
  {
    "text": "systems but there wasn't a word for it there was log management there was log analytics there was metrics analysis",
    "start": "167720",
    "end": "174560"
  },
  {
    "text": "there was graphs but there wasn't a word for something that meant more than that and that's where she fell on",
    "start": "174560",
    "end": "180480"
  },
  {
    "text": "um observability which comes from control theory it's not new it's from the 1960s but it's how we understand the",
    "start": "180480",
    "end": "186200"
  },
  {
    "text": "inner System state of our system from what it tells us from the outside now you'll notice there I've not",
    "start": "186200",
    "end": "192239"
  },
  {
    "text": "mentioned pillars I've not mentioned logs metrics and traces in that definition neither is",
    "start": "192239",
    "end": "198920"
  },
  {
    "text": "she because that's not what observability is about observability is about how do we understand what's going",
    "start": "198920",
    "end": "205080"
  },
  {
    "text": "on on the inside just from what it gives us on the outside and what it gives us",
    "start": "205080",
    "end": "211599"
  },
  {
    "text": "is telemetry data now the thing I want to drill in on is this bit here it's about the inner system States",
    "start": "211599",
    "end": "218920"
  },
  {
    "text": "about understanding what's happening on the inside it's not about what's happening on the outside it's not about the",
    "start": "218920",
    "end": "224799"
  },
  {
    "text": "request volume it's about what's happening on the inside and really understanding deeply what's going on so why does it",
    "start": "224799",
    "end": "232920"
  },
  {
    "text": "matter well I've had that slide in my deck for quite a while now um and nobody",
    "start": "232920",
    "end": "239480"
  },
  {
    "text": "has disagree with it because yes we are when I started",
    "start": "239480",
    "end": "244720"
  },
  {
    "text": "development we had six-month development Cycles you Deploy on every six months it",
    "start": "244720",
    "end": "250959"
  },
  {
    "text": "was June and November that was a you know don't do it in December no no we do",
    "start": "250959",
    "end": "256120"
  },
  {
    "text": "it in November and we'll do it in June um and you'd be working for three months",
    "start": "256120",
    "end": "261959"
  },
  {
    "text": "then you'd ship it over to the QA team the QA team would look at it and come up with load of bugs and it come back to",
    "start": "261959",
    "end": "268000"
  },
  {
    "text": "you for a month and then you fix all the bugs and then go back to them and then go yeah we can release it and then it'd be",
    "start": "268000",
    "end": "273160"
  },
  {
    "text": "passed over to the devops team and the operations team and they'd build run books and then they go and deploy",
    "start": "273160",
    "end": "279560"
  },
  {
    "text": "it so what you were writing was being shipped out six months",
    "start": "279560",
    "end": "285759"
  },
  {
    "text": "after you wrote it and you didn't support it you weren't close to this application at all it was",
    "start": "285759",
    "end": "291479"
  },
  {
    "text": "somebody else's job but nowadays we're being asked to  more",
    "start": "291479",
    "end": "296840"
  },
  {
    "text": "often whether it's every two weeks every week every day per commit",
    "start": "296840",
    "end": "304520"
  },
  {
    "text": "deployments we're being asked to ship more often and while we're being asked to ship more often we're being asked to",
    "start": "304520",
    "end": "311240"
  },
  {
    "text": "produce better code like can you make the the code that you ship every day can it be better than the code that you were",
    "start": "311240",
    "end": "317440"
  },
  {
    "text": "shipping when you had six months to deliver it yes please okay and also while you're doing that can we spend",
    "start": "317440",
    "end": "323440"
  },
  {
    "text": "less time fixing bugs and more time like creating value and features so yeah ship",
    "start": "323440",
    "end": "329000"
  },
  {
    "text": "every day better code less bugs awesome and while",
    "start": "329000",
    "end": "334479"
  },
  {
    "text": "you're doing that can we not have any downtime now if we're asking people to",
    "start": "334479",
    "end": "339639"
  },
  {
    "text": "do that but we don't change the way that we think about our tools how we think about",
    "start": "339639",
    "end": "345960"
  },
  {
    "text": "we how we observe how we understand what's going on why weren't we doing this six months six years ago 10 years",
    "start": "345960",
    "end": "353319"
  },
  {
    "text": "ago 20 years ago when we had logs and we had metrics",
    "start": "353319",
    "end": "360080"
  },
  {
    "text": "we've had elastic search elk stack since 2012 we've had log management we've had",
    "start": "360080",
    "end": "365960"
  },
  {
    "text": "log analytics and we've had metrics for the last 12 years why weren't we doing all the",
    "start": "365960",
    "end": "372240"
  },
  {
    "text": "things that we've been asked to do now and we've been asked to do differently well",
    "start": "372240",
    "end": "378919"
  },
  {
    "text": "yeah the problem is that all of those things lead to a level of",
    "start": "378919",
    "end": "385639"
  },
  {
    "text": "fear now I do need to point out apparently there are people who don't know what one of those",
    "start": "385639",
    "end": "391560"
  },
  {
    "text": "is that's called a server rack it has servers in it and that's",
    "start": "391560",
    "end": "397000"
  },
  {
    "text": "where your code runs there's lots of them in the cloud it made me sad when I when",
    "start": "397000",
    "end": "403199"
  },
  {
    "text": "somebody asked me what it was that was on fire um but ultimately what all of those",
    "start": "403199",
    "end": "409319"
  },
  {
    "text": "things because we're shipping more often we're being asked to produce better code we're being asked to look at a system",
    "start": "409319",
    "end": "414880"
  },
  {
    "text": "that is 3500 microservices it leav to this idea that",
    "start": "414880",
    "end": "420280"
  },
  {
    "text": "we don't want to ship things because it's so hard to understand what's going on in the production environment it works fine on",
    "start": "420280",
    "end": "426840"
  },
  {
    "text": "my machine but when I go and put it over there that's",
    "start": "426840",
    "end": "432319"
  },
  {
    "text": "hard what we really want to get to is the idea that the production system is just a different part of your team",
    "start": "432319",
    "end": "439280"
  },
  {
    "text": "because in order for you to deliver value to customers in order for you to give them the code and the features that",
    "start": "439280",
    "end": "444319"
  },
  {
    "text": "they want you can't do that without production production is just a another",
    "start": "444319",
    "end": "449800"
  },
  {
    "text": "facet of your team and that's where we want to get to we want production to be a safe place want it to just be an",
    "start": "449800",
    "end": "456240"
  },
  {
    "text": "extension of what you're doing and that is where open Telemetry comes in so what is open",
    "start": "456240",
    "end": "462319"
  },
  {
    "text": "Telemetry now open Telemetry was born around 2017 it's not",
    "start": "462319",
    "end": "468319"
  },
  {
    "text": "new around 2017 there were two other competing projects one called open",
    "start": "468319",
    "end": "473479"
  },
  {
    "text": "sensus and one called open tracing which were all around the idea of distributed tracing initially",
    "start": "473479",
    "end": "481439"
  },
  {
    "text": "now there were two competing standards at this point and you had all of these disparate systems some of them were like",
    "start": "481800",
    "end": "488639"
  },
  {
    "text": "yeah we're using open sensus and we're using B3 propagation to go to our Jager back end and then somebody else is saying",
    "start": "488639",
    "end": "495280"
  },
  {
    "text": "well we're using open tracing and we're using w3c tracing context and we're sending all of our stuff to our Zipkin",
    "start": "495280",
    "end": "501639"
  },
  {
    "text": "back end it's like great okay now we can't interrupt so they understood this and obviously as Engineers the first",
    "start": "501639",
    "end": "508159"
  },
  {
    "text": "thing that we do when we've got two comp comp standards we create a third standard and now what we've got is three",
    "start": "508159",
    "end": "514919"
  },
  {
    "text": "competing standards however open Telemetry is the exception because in 2022 open tracing",
    "start": "514919",
    "end": "521719"
  },
  {
    "text": "and open census went deprecated they deprecated thems in favor of open Telemetry we built all the shims all the",
    "start": "521719",
    "end": "528000"
  },
  {
    "text": "bridges that allow those people that were in those ecosystems to come and use open Telemetry so open Telemetry is now",
    "start": "528000",
    "end": "533680"
  },
  {
    "text": "the one true way it is the de facto standard for doing these things it is the number one project coming out of the",
    "start": "533680",
    "end": "538800"
  },
  {
    "text": "cncf now now um apparently overtook some container solution apparently was really",
    "start": "538800",
    "end": "544920"
  },
  {
    "text": "popular coper something I don't know but it's the number one project it's become",
    "start": "544920",
    "end": "550240"
  },
  {
    "text": "the deao standard so we're at a point now where nobody gets fired for suggesting they reinstrumentation",
    "start": "550240",
    "end": "557519"
  },
  {
    "text": "protocol of how we get data from our system into a backend system to analyze it so",
    "start": "569440",
    "end": "577360"
  },
  {
    "text": "how do we get our Telemetry data that we've generated in our application and forward that to a backend system so that",
    "start": "577360",
    "end": "584000"
  },
  {
    "text": "we can provide some analysis some charts metrics if you",
    "start": "584000",
    "end": "589880"
  },
  {
    "text": "like that is the most important thing about open Telemetry it's the reason why all of the vendors have got behind it",
    "start": "589880",
    "end": "597160"
  },
  {
    "text": "because it means now that only one particular team particular um protocol",
    "start": "597160",
    "end": "603279"
  },
  {
    "text": "needs to be supported on your back end you don't need to think about sdks it's the reason why in the last two years",
    "start": "603279",
    "end": "609160"
  },
  {
    "text": "we've had a record number of observability companies pop up out of nowhere and say we do observability now",
    "start": "609160",
    "end": "615839"
  },
  {
    "text": "and it's because well open Telemetry allows them to not care about what's instrumented in your",
    "start": "615839",
    "end": "621040"
  },
  {
    "text": "application because not only do they provide the protocol they also provide the sdks they provide sdks for 11",
    "start": "621040",
    "end": "628120"
  },
  {
    "text": "different languages JavaScript is one of them and those sdks produce the data in",
    "start": "628120",
    "end": "635639"
  },
  {
    "text": "the open Telemetry protocol format the data model of how it goes to the back",
    "start": "635639",
    "end": "642320"
  },
  {
    "text": "end now we've defined various signals not pillars",
    "start": "642880",
    "end": "649680"
  },
  {
    "text": "signals because there are no pillars in open Telemetry there are no pillars in observability there are only",
    "start": "649680",
    "end": "656800"
  },
  {
    "text": "signals now there are five signals that you should be aware of and care",
    "start": "656800",
    "end": "663000"
  },
  {
    "text": "about logs metrics and traces probably the ones that you've heard of they're",
    "start": "663000",
    "end": "668040"
  },
  {
    "text": "all stable now in the standard so all available to use in all 11",
    "start": "668040",
    "end": "674600"
  },
  {
    "text": "languages there is another one called profiles which is low-level continuous profiling data that goes down to CIS",
    "start": "674600",
    "end": "681360"
  },
  {
    "text": "call and kernel level stuff that is at the point where the",
    "start": "681360",
    "end": "686480"
  },
  {
    "text": "protocol is stable so how we transfer that data from an apple application into a back end to analyze it that bit is",
    "start": "686480",
    "end": "692440"
  },
  {
    "text": "stable but the sdks are not you can do things with things like pyroscope and",
    "start": "692440",
    "end": "697639"
  },
  {
    "text": "the new elastic search profile that that's just been donated to the cncf there is some work in there but by",
    "start": "697639",
    "end": "705920"
  },
  {
    "text": "no means is that stable and something that you can rely on right now something you can use something cool what I would",
    "start": "705920",
    "end": "713079"
  },
  {
    "text": "say is the majority of time if you're looking for performance analysis and you're hitting a database if you're profiling you're doing it wrong because",
    "start": "713079",
    "end": "719639"
  },
  {
    "text": "as soon as you hit a database you've probably got four or five millisecond latency anyway saving a few Mill few Nan",
    "start": "719639",
    "end": "725160"
  },
  {
    "text": "seconds by doing some lowlevel profiling is not going to help you but it is",
    "start": "725160",
    "end": "730279"
  },
  {
    "text": "cool the other one is rum it's the bad kind of room not the good kind of room we'll have the good kind of room all",
    "start": "730279",
    "end": "736120"
  },
  {
    "text": "later this is called real user monitoring or client side it's the ability to see what's happening on the",
    "start": "736120",
    "end": "741240"
  },
  {
    "text": "client side now at the moment that is in the design phase because the thing with things like",
    "start": "741240",
    "end": "747639"
  },
  {
    "text": "open Telemetry is we have committees and committees have people lots of people lots of people means lots of",
    "start": "747639",
    "end": "754399"
  },
  {
    "text": "ideas lots of ideas means nothing gets done so we're in the design phase there's lots of ideas about how we model",
    "start": "754399",
    "end": "761199"
  },
  {
    "text": "the data how we model a session how we model a page view all of that is influx at the moment which is why we're going",
    "start": "761199",
    "end": "767480"
  },
  {
    "text": "to be focused on backend a lot of the stuff that we're doing around traces and metrics and logs in this I'm talking",
    "start": "767480",
    "end": "774560"
  },
  {
    "text": "about today you can use in the web front end all of the disos are experimental for the front end at the moment but they",
    "start": "774560",
    "end": "780920"
  },
  {
    "text": "do work so let's talk about the signals",
    "start": "780920",
    "end": "786680"
  },
  {
    "text": "tracing um probably one of the most misunderstood",
    "start": "786680",
    "end": "791800"
  },
  {
    "text": "signals because people believe it is what it's not they believe it's for",
    "start": "791800",
    "end": "796959"
  },
  {
    "text": "useful for different purposes really it's about debugging tracing is about debugging a system a system might be",
    "start": "796959",
    "end": "804839"
  },
  {
    "text": "distributed or it might not tracing is useful in systems that are monolithic as",
    "start": "804839",
    "end": "810199"
  },
  {
    "text": "well as it is in distributed systems it's kind of mandatory for distributed",
    "start": "810199",
    "end": "816160"
  },
  {
    "text": "systems but it's not in uh monolithic systems it's still really useful though but it allows you to be able to",
    "start": "816160",
    "end": "823440"
  },
  {
    "text": "visualize a complex system give you an overview of what's Happening how something transitions through different",
    "start": "823440",
    "end": "829560"
  },
  {
    "text": "components of your system whether that's different classes if you've instrumented those or whether it's individual",
    "start": "829560",
    "end": "836120"
  },
  {
    "text": "microservices if you're running in a distribute system but it has a focus on something called",
    "start": "836120",
    "end": "842000"
  },
  {
    "text": "causality a focus on this thing happened after this thing happened because of this thing that happened which allows us",
    "start": "842000",
    "end": "848440"
  },
  {
    "text": "to build these really funky tree views and see how where all our performance gains can be um achieved because it does",
    "start": "848440",
    "end": "856000"
  },
  {
    "text": "have a focus on performance because every Trace will be able to show you the time taken in each one of those actions",
    "start": "856000",
    "end": "862160"
  },
  {
    "text": "it's a core part of tracing now the other thing about tracing data is it has a focus on high cardinality and high",
    "start": "862160",
    "end": "868600"
  },
  {
    "text": "dimension ity data High dimensionality data is the amount of individual attributes you have on each one of your",
    "start": "868600",
    "end": "876160"
  },
  {
    "text": "entities so spans in the tracing context but it the cardinality means for",
    "start": "876160",
    "end": "882199"
  },
  {
    "text": "each one of those attributes how many possible values are there for that high cardinality data is IP addresses user",
    "start": "882199",
    "end": "889519"
  },
  {
    "text": "IDs low cardinality data would be success response fail",
    "start": "889519",
    "end": "896399"
  },
  {
    "text": "response because there's two possible values on millions of possible values with the tracing data we focus on",
    "start": "896399",
    "end": "904680"
  },
  {
    "text": "high cardinality data and high dimensionality",
    "start": "904680",
    "end": "909639"
  },
  {
    "text": "data so what is a span then because we don't create a trace what we create is spans and every",
    "start": "910079",
    "end": "918360"
  },
  {
    "text": "span that we create has some unique properties and those properties one of",
    "start": "918360",
    "end": "923720"
  },
  {
    "text": "them is a trace ID and that's how we build a trace but it's essentially just a",
    "start": "923720",
    "end": "929279"
  },
  {
    "text": "structured blob of data with some mandatory characteristics so it has an ID that",
    "start": "929279",
    "end": "935759"
  },
  {
    "text": "Associates it for itself we call that span ID it has a correlation ID so something",
    "start": "935759",
    "end": "942440"
  },
  {
    "text": "that will correlate all of these spans together and make a trace we call that a trace ID correlation is something that I",
    "start": "942440",
    "end": "948240"
  },
  {
    "text": "would imagine most people would understand we've been doing that for years it has a start time and an end",
    "start": "948240",
    "end": "955440"
  },
  {
    "text": "time so yes you can add those to logs but these are man and tracing but the thing that sets it apart",
    "start": "955440",
    "end": "962319"
  },
  {
    "text": "mostly is causality the parent ID the span that came before it because that",
    "start": "962319",
    "end": "968920"
  },
  {
    "text": "allows us to model these funky Trace views that you can see I'm assuming on the",
    "start": "968920",
    "end": "974680"
  },
  {
    "text": "left the right that way now the other thing that it has on",
    "start": "974680",
    "end": "981759"
  },
  {
    "text": "there is a bag of attributes arbitrary attributes some of them come from what",
    "start": "981759",
    "end": "987680"
  },
  {
    "text": "we call the semantic conventions so things that open Telemetry have defined as names but you add your own you can add",
    "start": "987680",
    "end": "994720"
  },
  {
    "text": "as many as you want there are limits that you can change default is about",
    "start": "994720",
    "end": "1001040"
  },
  {
    "text": "128 and then the limit then comes from your vendors or your back ends but it's just a structured blob of",
    "start": "1001040",
    "end": "1009240"
  },
  {
    "text": "data much like a log but more fancy oh the other way to put that is",
    "start": "1009240",
    "end": "1016720"
  },
  {
    "text": "logs are just boring traces really so what is a log then a log is a",
    "start": "1016720",
    "end": "1022959"
  },
  {
    "text": "pointing time bit of data so we have a time stamp that says it happened at this time and it has a message",
    "start": "1022959",
    "end": "1030199"
  },
  {
    "text": "template and the reason it has a message template is because they're designed for humans to",
    "start": "1030199",
    "end": "1035678"
  },
  {
    "text": "read we can try and make them structured by using a something like a if you're in",
    "start": "1035679",
    "end": "1042038"
  },
  {
    "text": "net World a cog paa there's a few for JavaScript because it's JavaScript and there's like 14,000 things that do the",
    "start": "1042039",
    "end": "1048240"
  },
  {
    "text": "same thing But ultimately it is made for",
    "start": "1048240",
    "end": "1053880"
  },
  {
    "text": "humans so we add a string template in there and we had do some string interpolation to add those things in",
    "start": "1053880",
    "end": "1060799"
  },
  {
    "text": "there now they're really good for local development use cases because they're",
    "start": "1060799",
    "end": "1065960"
  },
  {
    "text": "immediate and we see them right away they're great for startup and crash",
    "start": "1065960",
    "end": "1072480"
  },
  {
    "text": "data but they're also really good at debugging whether your tracing is working or not",
    "start": "1072480",
    "end": "1079120"
  },
  {
    "text": "I mean they're fine I suppose the thing that we don't like",
    "start": "1082520",
    "end": "1089400"
  },
  {
    "text": "about logs is they lack the context that a trace",
    "start": "1089400",
    "end": "1095159"
  },
  {
    "text": "does that's the main differentiator logs are great if you do",
    "start": "1095159",
    "end": "1101280"
  },
  {
    "text": "logs in a very very structured way where you think about consistent naming of all",
    "start": "1101280",
    "end": "1106760"
  },
  {
    "text": "of the different attributes that you add to those log if you think about something called canonical logs where",
    "start": "1106760",
    "end": "1112000"
  },
  {
    "text": "you have one log per service with tons of context on it logs are great but generally they end up as",
    "start": "1112000",
    "end": "1119039"
  },
  {
    "text": "unintentional observability because you've added them for your local development and then they",
    "start": "1119039",
    "end": "1124960"
  },
  {
    "text": "end up in production and we're trying to make sense of them fun story at honeycom we did an",
    "start": "1124960",
    "end": "1131159"
  },
  {
    "text": "analysis of one of our customers logging volume because they thought they were paying quite a lot and we worked out",
    "start": "1131159",
    "end": "1138080"
  },
  {
    "text": "that 10% % of their logging volume had a message template that said here",
    "start": "1138080",
    "end": "1144720"
  },
  {
    "text": "10% here that was not useful that's not counting the other",
    "start": "1144720",
    "end": "1150000"
  },
  {
    "text": "ones that were here too here again also",
    "start": "1150000",
    "end": "1155200"
  },
  {
    "text": "here they're unintentional we don't write them as if they're production observability we write them for local",
    "start": "1155480",
    "end": "1161400"
  },
  {
    "text": "and then try and translate them by contrast traces are the opposite you generally write them from a production",
    "start": "1161400",
    "end": "1167200"
  },
  {
    "text": "use case and then find use for from them locally so how do we set them up before",
    "start": "1167200",
    "end": "1173919"
  },
  {
    "text": "I do that I want to talk a little bit about the state of web instrumentation because we're going to talk about how we use this in",
    "start": "1173919",
    "end": "1180520"
  },
  {
    "text": "node but you can use a lot of these Concepts in a web context as well now at",
    "start": "1180520",
    "end": "1185919"
  },
  {
    "text": "the moment it's all experimental there is an experimental web library that open Telemetry have produced it's currently",
    "start": "1185919",
    "end": "1192080"
  },
  {
    "text": "quite large which is one of the big problems with it but it does do all of the signals",
    "start": "1192080",
    "end": "1198960"
  },
  {
    "text": "so yes you can use it should you use it I'll let you",
    "start": "1198960",
    "end": "1204200"
  },
  {
    "text": "choose we call this client side instrumentation because the model that",
    "start": "1204200",
    "end": "1209400"
  },
  {
    "text": "we're working towards can be modeled in Mobile on iot",
    "start": "1209400",
    "end": "1215360"
  },
  {
    "text": "devices um but ultimately it's client side it exists on the client which means",
    "start": "1215840",
    "end": "1221159"
  },
  {
    "text": "we have problems around things like ingest workflows because when you're on the back end you can send all the",
    "start": "1221159",
    "end": "1226919"
  },
  {
    "text": "Telemetry to your back end fairly easily on private Network when we talk about the front end we need to come up with",
    "start": "1226919",
    "end": "1232559"
  },
  {
    "text": "standards about how we filter that data stop abuse Telemetry poisoning of terms",
    "start": "1232559",
    "end": "1238400"
  },
  {
    "text": "that are are particularly a problem in that kind of space so there has been some progress by",
    "start": "1238400",
    "end": "1244320"
  },
  {
    "text": "some companies you may have heard of grafana faroh um which is a um a kind of influenced by open Telemetry version",
    "start": "1244320",
    "end": "1250919"
  },
  {
    "text": "it's not really open Telemetry um we've created one as well um that we use which",
    "start": "1250919",
    "end": "1256360"
  },
  {
    "text": "we have a back end that we use for it um they're all available there's a few more that have gone out there but ultimately",
    "start": "1256360",
    "end": "1262919"
  },
  {
    "text": "there's no standard yet so when we talk about open Telemetry in web instrumentation it's not there but there",
    "start": "1262919",
    "end": "1269360"
  },
  {
    "text": "are certain vendors that are doing some stuff okay so when we put this into our",
    "start": "1269360",
    "end": "1274720"
  },
  {
    "text": "code there are a few different ways that we can do it so we can use something called Auto instrumentation which we're",
    "start": "1274720",
    "end": "1280400"
  },
  {
    "text": "toying with the word now of zero code instrumentation because ultimately it means in your code you don't have to do",
    "start": "1280400",
    "end": "1286919"
  },
  {
    "text": "anything so code less generally it is side loed we use environment variables",
    "start": "1286919",
    "end": "1294640"
  },
  {
    "text": "to configure it it's incredibly good for getting started to see whether this is something that you're going to get value",
    "start": "1294640",
    "end": "1300360"
  },
  {
    "text": "out of but it is very verbose there's a lot of data that comes",
    "start": "1300360",
    "end": "1307480"
  },
  {
    "text": "out of it generally a lot of it isn't very useful but there's a ton of value",
    "start": "1307480",
    "end": "1312600"
  },
  {
    "text": "in the rest of it it's really easy to do literally a few environment",
    "start": "1312600",
    "end": "1320159"
  },
  {
    "text": "variables and then run your app it's not particularly",
    "start": "1320159",
    "end": "1326279"
  },
  {
    "text": "difficult but ultimately what that is doing is it's going to send all the all the signals all three signals to that",
    "start": "1326279",
    "end": "1333600"
  },
  {
    "text": "endpoint it's going to give it a name and you don't need to do anything in your code you'll get the default",
    "start": "1333600",
    "end": "1339520"
  },
  {
    "text": "instrumentation things like um node not node fetch but node um sorry not fetch",
    "start": "1339520",
    "end": "1346039"
  },
  {
    "text": "not node fetch um a lot of the things will just happen out of the",
    "start": "1346039",
    "end": "1352159"
  },
  {
    "text": "box it's really good when you're in a situation where you've got multiple",
    "start": "1352159",
    "end": "1357360"
  },
  {
    "text": "teams multiple microservices and you want to instrument your code with coded instrumentation doing it essentially",
    "start": "1357360",
    "end": "1364080"
  },
  {
    "text": "properly but the rest of the teams don't you can use this to just drop it in and it will just work they don't need to do",
    "start": "1364080",
    "end": "1370880"
  },
  {
    "text": "anything so you can get a large distributed Trace across your entire system without having to get them to do",
    "start": "1370880",
    "end": "1376400"
  },
  {
    "text": "any work um Pro tip though don't just go into",
    "start": "1376400",
    "end": "1382279"
  },
  {
    "text": "their code base and just add it they don't like that ask me how I",
    "start": "1382279",
    "end": "1388320"
  },
  {
    "text": "know so the real way we do it is about coded",
    "start": "1388320",
    "end": "1394760"
  },
  {
    "text": "instrumentation now codeing instrumentation you essentially just add",
    "start": "1394760",
    "end": "1400640"
  },
  {
    "text": "some stuff at startup it's not that hard depending on the",
    "start": "1400640",
    "end": "1406039"
  },
  {
    "text": "language it can be 20 50 lines of code in a file in some of them it's as low as",
    "start": "1406039",
    "end": "1414600"
  },
  {
    "text": "10 um but essentially what you end up with is targeted instrumentation where you choose which things you want to",
    "start": "1414600",
    "end": "1422760"
  },
  {
    "text": "instrument do you want to be able to see SQL data do you want to be able to see",
    "start": "1422760",
    "end": "1428520"
  },
  {
    "text": " data do you want to be able to see how it accesses third party Services you get to choose you get full",
    "start": "1428520",
    "end": "1436919"
  },
  {
    "text": "control of everything that's happening in that Telemetry pipeline which ends up being that you",
    "start": "1436919",
    "end": "1443000"
  },
  {
    "text": "are intentionally instrumenting your code you're thinking about that instrumentation if we go back to what",
    "start": "1443000",
    "end": "1448720"
  },
  {
    "text": "observability is being able to ask those questions being able to understand that inner System",
    "start": "1448720",
    "end": "1454279"
  },
  {
    "text": "state being intentional about what is important in your code base is what",
    "start": "1454279",
    "end": "1459880"
  },
  {
    "text": "observability is all about so how do we add the signals",
    "start": "1459880",
    "end": "1467320"
  },
  {
    "text": "so loging uh so metrics and traces fairly easy couple of package packages",
    "start": "1469640",
    "end": "1475360"
  },
  {
    "text": "from um open Telemetry that you install um we add some exporters",
    "start": "1475360",
    "end": "1480919"
  },
  {
    "text": "exporters are where we tell it to go somewhere these ones are using the console exporter so this will just write stuff out to your console don't use this",
    "start": "1480919",
    "end": "1487760"
  },
  {
    "text": "in production this is really good for getting started the debugging journey to work out whether things are actually",
    "start": "1487760",
    "end": "1492840"
  },
  {
    "text": "generating some things if you're worried about setting up a Telemetry Pipeline and a back end and whether there's",
    "start": "1492840",
    "end": "1497919"
  },
  {
    "text": "communic happening use the console exporters to see whether it's generating tatry at all",
    "start": "1497919",
    "end": "1504120"
  },
  {
    "text": "first then switch them out into a OTP exporter which is where that sends it to",
    "start": "1504120",
    "end": "1510080"
  },
  {
    "text": "a backend over grpc or HTTP now the other thing we do there is",
    "start": "1510080",
    "end": "1515880"
  },
  {
    "text": "we've got get what's it called get node Auto",
    "start": "1515880",
    "end": "1521159"
  },
  {
    "text": "instrumentations um I've typed that wrong so many times that's why I wanted to check um but ultimately Ely that's",
    "start": "1521159",
    "end": "1528679"
  },
  {
    "text": "going to grab a load of Standards a standard um instrumentations like um",
    "start": "1528679",
    "end": "1534000"
  },
  {
    "text": "it'll do something called um node fetch it'll do the um",
    "start": "1534000",
    "end": "1539600"
  },
  {
    "text": "postgress but it won't do things like AWS it won't do um things like",
    "start": "1539600",
    "end": "1546320"
  },
  {
    "text": "unfortunately node fetch which is uses something called undi which is a name I",
    "start": "1546320",
    "end": "1552480"
  },
  {
    "text": "don't understand and nobody's ever heard of apparently all the JavaScript developers I talk to they don't know what that is but apparently that's the",
    "start": "1552480",
    "end": "1558000"
  },
  {
    "text": "thing under the hood that node fetch uses um and the native fetch stuff it's",
    "start": "1558000",
    "end": "1563880"
  },
  {
    "text": "pretty simple this is all in the docs there's no need to take any pictures go and have a look at the docs it's not hard",
    "start": "1563880",
    "end": "1569640"
  },
  {
    "text": "though for logging you can hook into some of the logging providers bunion uh pretty popular one um you can hug into",
    "start": "1569640",
    "end": "1577360"
  },
  {
    "text": "that and use that to Output anything that you use as the um with bunion logger to send it",
    "start": "1577360",
    "end": "1583080"
  },
  {
    "text": "over now we talk about logging though we're not talking about logging as in con logging that's not what we're",
    "start": "1583080",
    "end": "1589840"
  },
  {
    "text": "talking about here we're talking about log lines now you might have heard of 12",
    "start": "1589840",
    "end": "1596200"
  },
  {
    "text": "Factor apps pretty popular um it was something that Heroku came up with in I",
    "start": "1596200",
    "end": "1602320"
  },
  {
    "text": "think 2010 which was the idea of portability of applications between different Services really nice Concepts",
    "start": "1602320",
    "end": "1609960"
  },
  {
    "text": "they had a concept in called logs and what they were talking about with logs was you should pipe everything",
    "start": "1609960",
    "end": "1616720"
  },
  {
    "text": "to standard out now the sentiment behind that was that your application shouldn't know where",
    "start": "1616720",
    "end": "1622960"
  },
  {
    "text": "your Telemetry is going it shouldn't know what format to use it should just push Json files or",
    "start": "1622960",
    "end": "1629840"
  },
  {
    "text": "strings out to the um console now that's superseded in a way by open Telemetry",
    "start": "1629840",
    "end": "1635159"
  },
  {
    "text": "because open Telemetry is now the standard all you really need to do is be able to control where it's sending it by",
    "start": "1635159",
    "end": "1641679"
  },
  {
    "text": "a URL you can configure it from the outside so an Sr team or an Ops Team can",
    "start": "1641679",
    "end": "1648320"
  },
  {
    "text": "quite easily say we're going to send it somewhere else versus where you're going so yes it does go against 12 Factor apps",
    "start": "1648320",
    "end": "1656159"
  },
  {
    "text": "by the definition whether they end up changing 12 Factor apps I don't know I do know that um the kubernetes community",
    "start": "1656159",
    "end": "1662799"
  },
  {
    "text": "are all on board with this now um so very much the kubernetes community will",
    "start": "1662799",
    "end": "1667919"
  },
  {
    "text": "be moving towards the standard out and log rotate and all of that being the standards that will all be going over",
    "start": "1667919",
    "end": "1674200"
  },
  {
    "text": "the next few years now the get node AO instrumentation stuff will add a load of defaults but there are extra ones that",
    "start": "1674200",
    "end": "1680600"
  },
  {
    "text": "you can add because ultimately you want to be able to curate this you want to be able",
    "start": "1680600",
    "end": "1686000"
  },
  {
    "text": "to tell it which ones you want so the instrumentation libraries",
    "start": "1686000",
    "end": "1691720"
  },
  {
    "text": "are in uh language and SDK specific so different sdks will produce",
    "start": "1691720",
    "end": "1699440"
  },
  {
    "text": "their own open Telemetry libraries their own open Telemetry instrumentation libraries that you can add into that",
    "start": "1699440",
    "end": "1705240"
  },
  {
    "text": "instrumentation section so stuff like post Gress fetch or no fetch the fastify",
    "start": "1705240",
    "end": "1711320"
  },
  {
    "text": "stuff the express they've all got their own instrumentation Library packages so",
    "start": "1711320",
    "end": "1716519"
  },
  {
    "text": "you don't have to be going in and creating a span every time you get a request into your node Express API you",
    "start": "1716519",
    "end": "1722760"
  },
  {
    "text": "don't have to make a span every time you call a third party those things would just",
    "start": "1722760",
    "end": "1728679"
  },
  {
    "text": "happen again this is really good as a step one of getting CL getting started because we get all of those spans for",
    "start": "1728720",
    "end": "1735039"
  },
  {
    "text": "free and they're really useful we do want to go a bit further and we'll get on to",
    "start": "1735039",
    "end": "1741919"
  },
  {
    "text": "that so if you are using node fetch that",
    "start": "1742080",
    "end": "1747640"
  },
  {
    "text": "is the line that you want if you are not getting any spans for your external stuff and you think",
    "start": "1747640",
    "end": "1753159"
  },
  {
    "text": "you've just added get node node AO instrumentation that extra line on the bottom there is the one that you",
    "start": "1753159",
    "end": "1758399"
  },
  {
    "text": "want um it took me a long time to realize that so and there's not a huge amount of docks on it but yeah that's",
    "start": "1758399",
    "end": "1764840"
  },
  {
    "text": "the line you want on DC whatever that is um if you're using the get Auto",
    "start": "1764840",
    "end": "1771559"
  },
  {
    "text": "instrumentations package node FS the file system stuff is",
    "start": "1771559",
    "end": "1777399"
  },
  {
    "text": "incredibly chatty it produces tons of spans just",
    "start": "1777399",
    "end": "1782679"
  },
  {
    "text": "disable it talking about practical things that you can do just disable the the file",
    "start": "1782679",
    "end": "1788559"
  },
  {
    "text": "system instrumentation most people won't need it because you care more about what the user sees and if it's a static file",
    "start": "1788559",
    "end": "1794799"
  },
  {
    "text": "that you're seeing you're going to see that the the static file was took a long time and that's the thing that's going to happen so do disable that one 99% of",
    "start": "1794799",
    "end": "1804960"
  },
  {
    "text": "all of our customers and everybody else I speak to has added that line to their code why it isn't the default is beyond",
    "start": "1804960",
    "end": "1810799"
  },
  {
    "text": "me but heho now the other thing is Express can get very chatty this is an example of a",
    "start": "1810799",
    "end": "1818120"
  },
  {
    "text": "trace from Express and you can see that we've got an extra four spans that are",
    "start": "1818120",
    "end": "1824320"
  },
  {
    "text": "connected to nothing that are incredibly fast they're never going to be slow maybe if you've",
    "start": "1824320",
    "end": "1830440"
  },
  {
    "text": "got a large Json object the Json pza might be a bit slow ultimately they're not really that useful in the majority",
    "start": "1830440",
    "end": "1837519"
  },
  {
    "text": "of contexts you can turn them all off so you can turn off the request handlers",
    "start": "1837519",
    "end": "1842880"
  },
  {
    "text": "you can turn off the routing just by adding these things and this is a pattern that you'll see all over the place inside the get node aut",
    "start": "1842880",
    "end": "1850320"
  },
  {
    "text": "implementations add the package name and add some properties to it like that and it will stop it from generating the",
    "start": "1850320",
    "end": "1855880"
  },
  {
    "text": "spans in the first place you don't then have to to try and post",
    "start": "1855880",
    "end": "1860880"
  },
  {
    "text": "fix okay so that's that's all the the the basic setup of how we add some",
    "start": "1861360",
    "end": "1866559"
  },
  {
    "text": "instrumentation libraries how we get some basic data out of",
    "start": "1866559",
    "end": "1871440"
  },
  {
    "text": "it the next step is making it useful to our context because if we don't we're",
    "start": "1871880",
    "end": "1878039"
  },
  {
    "text": "stuck in the APM world the old school world where we'd add an agent to a machine and they do all of their",
    "start": "1878039",
    "end": "1884320"
  },
  {
    "text": "Telemetry to make it look fancy and give you some nice pretty dashboards you can put up in the office so the bosses think",
    "start": "1884320",
    "end": "1890360"
  },
  {
    "text": "you're doing stuff but we really want to make this useful we want to make it specific to",
    "start": "1890360",
    "end": "1896600"
  },
  {
    "text": "our context because there's a reason why we're developing the software and not just buying it off the shelf because",
    "start": "1896600",
    "end": "1902200"
  },
  {
    "text": "we've got some uniqueness in our products so we use something called",
    "start": "1902200",
    "end": "1907240"
  },
  {
    "text": "resource attributes they're the most useful attributes that you can add and the reason is because they're added once",
    "start": "1907240",
    "end": "1914480"
  },
  {
    "text": "per process they don't change they're sent over to your backend once in every batch that comes over it",
    "start": "1914480",
    "end": "1920600"
  },
  {
    "text": "goes this re these resource attributes for all of your things they're they're meant to identify something specific",
    "start": "1920600",
    "end": "1927360"
  },
  {
    "text": "about the process the resource that is generating this Telemetry to allow you to do correlations between this and",
    "start": "1927360",
    "end": "1934519"
  },
  {
    "text": "maybe some Metric data to look at some infrastructure metrics to look at some logging data that's why they're",
    "start": "1934519",
    "end": "1941880"
  },
  {
    "text": "useful so we add specific attributes this one is using two specific attributes from the semantic",
    "start": "1941880",
    "end": "1948679"
  },
  {
    "text": "conventions we'll talk about the semantic conventions later but they apply to all three",
    "start": "1948679",
    "end": "1954600"
  },
  {
    "text": "signals spans metrics um and to our log records as well but they're useful for",
    "start": "1954600",
    "end": "1960279"
  },
  {
    "text": "things like your pod name in kubernetes the um the region that you're running in",
    "start": "1960279",
    "end": "1965440"
  },
  {
    "text": "AWS your availability Zone in AWS maybe the the version of the operating system it was running on maybe that's",
    "start": "1965440",
    "end": "1971960"
  },
  {
    "text": "important but you should add as many of these properties as you can to that Telemetry data",
    "start": "1971960",
    "end": "1979039"
  },
  {
    "text": "and they're added inside the node SDK when you do it now one thing I didn't mention forgot to mention this the node",
    "start": "1979039",
    "end": "1984720"
  },
  {
    "text": "SDK is marked as experimental where it says node SDK on that screenshot there",
    "start": "1984720",
    "end": "1990159"
  },
  {
    "text": "it is marked as experimental but it is the thing that everybody uses it is stable enough for everybody",
    "start": "1990159",
    "end": "1996320"
  },
  {
    "text": "don't go to the old school methods use the node SDK it's what everybody's using",
    "start": "1996320",
    "end": "2001919"
  },
  {
    "text": "it's what all the cool kids are using anyway Al so I hear I'm not in that crowd",
    "start": "2001919",
    "end": "2008159"
  },
  {
    "text": "so metrics I love metrics um metrics we use something",
    "start": "2008880",
    "end": "2015600"
  },
  {
    "text": "called a meter meters are created pretty simply like that now a meter doesn't",
    "start": "2015600",
    "end": "2021120"
  },
  {
    "text": "really do anything on its own it's a group of what we call instruments so then we configure the",
    "start": "2021120",
    "end": "2027639"
  },
  {
    "text": "meter by adding instruments to it now my recommendation is to generate",
    "start": "2027639",
    "end": "2033519"
  },
  {
    "text": "your own class pass in the meter and then add all of those individual",
    "start": "2033519",
    "end": "2039840"
  },
  {
    "text": "instruments as properties on that class that provides a nice little",
    "start": "2039840",
    "end": "2046360"
  },
  {
    "text": "abstraction away from being able to just create loads of things and dirty up all of your code you can pass this object",
    "start": "2046360",
    "end": "2052599"
  },
  {
    "text": "around a little bit easier and then to record our",
    "start": "2052599",
    "end": "2059079"
  },
  {
    "text": "metrics what I generally recommend is to add yourself some abstractions don't try and interact",
    "start": "2059079",
    "end": "2066560"
  },
  {
    "text": "directly with each of these individual instruments add a",
    "start": "2066560",
    "end": "2073720"
  },
  {
    "text": "thing add some metrics like I mean these ones here so when we've got a sale of a product we've got a purchase product",
    "start": "2073720",
    "end": "2079560"
  },
  {
    "text": "object throw it into your metrics instance and just say record my sales",
    "start": "2079560",
    "end": "2085638"
  },
  {
    "text": "metrics and let that do all of the things it needs to do instead of adding those to every line of code that you've",
    "start": "2085639",
    "end": "2090919"
  },
  {
    "text": "got now the other thing is it allows you some readability in your code because you know that what you're doing is",
    "start": "2090919",
    "end": "2096079"
  },
  {
    "text": "you're adding some sales metries you don't what those sales metrics are when you're reading your code which means that your code is a lot",
    "start": "2096079",
    "end": "2103200"
  },
  {
    "text": "more readable so it's pretty self-explanatory",
    "start": "2103200",
    "end": "2108800"
  },
  {
    "text": "I think anyway um but adding these adding some class and adding a wrapper class is pretty",
    "start": "2108800",
    "end": "2114440"
  },
  {
    "text": "useful and then the way that you use those metrics you can pass that metrics class around and just do add sales",
    "start": "2114440",
    "end": "2122880"
  },
  {
    "text": "metrics and when you've got those Auto instrumentations in place you've got all those exporters it will just export all",
    "start": "2122880",
    "end": "2128640"
  },
  {
    "text": "of those things to your back end you don't need to do anything else the thing to know about with metrics is their",
    "start": "2128640",
    "end": "2135520"
  },
  {
    "text": "aggregations so when you add this in you're going to have to wait between",
    "start": "2135520",
    "end": "2140839"
  },
  {
    "text": "10 and 20 seconds for to see that on your console or to see that in your back end that's normal because what a metric",
    "start": "2140839",
    "end": "2149040"
  },
  {
    "text": "does is every time you increment these things it waits 10 seconds Aggregates all these things up then passes them to",
    "start": "2149040",
    "end": "2155640"
  },
  {
    "text": "your exporter in open telemetry the exporter then batches up these things over another 10 seconds and then",
    "start": "2155640",
    "end": "2162839"
  },
  {
    "text": "sends them to your back end so you're not going to get these things immediately it's not generally a",
    "start": "2162839",
    "end": "2169000"
  },
  {
    "text": "problem just know that it's when you put them in and you don't see anything in the console and you think it hasn't",
    "start": "2169000",
    "end": "2174319"
  },
  {
    "text": "worked it has so tracing",
    "start": "2174319",
    "end": "2180920"
  },
  {
    "text": "instrumentation pretty pretty similar we get a tracer in the same way the Tracer",
    "start": "2181240",
    "end": "2186880"
  },
  {
    "text": "is what allows us to do all of these things we can start a new Span in this particular example is not what I would",
    "start": "2186880",
    "end": "2193319"
  },
  {
    "text": "recommend because we're already going to get a Spam for our instrumentation from",
    "start": "2193319",
    "end": "2199960"
  },
  {
    "text": "Express so we don't really need to add an extra",
    "start": "2199960",
    "end": "2204720"
  },
  {
    "text": "thing but that's as simple as it",
    "start": "2205280",
    "end": "2210000"
  },
  {
    "text": "is so let's go a little bit further then so we're going to talk a lot more about met uh tracing than we are about the",
    "start": "2211440",
    "end": "2216720"
  },
  {
    "text": "other signals I'm going to talk about logging because everybody knows how to do logging I've showed you how you were",
    "start": "2216720",
    "end": "2222160"
  },
  {
    "text": "able to use the open Telemetry SD case to extract that login and send it to a back end that's as much as you need to",
    "start": "2222160",
    "end": "2228200"
  },
  {
    "text": "know about the logging side there's lots of good talks about how to do good logging metric side it's as simple as",
    "start": "2228200",
    "end": "2234880"
  },
  {
    "text": "I've just told you the only thing I would say is from the metrics instrumentation on um",
    "start": "2234880",
    "end": "2242920"
  },
  {
    "text": "here you'll notice that I've not passed over a ton of attributes I would say product ID is a medium cardinality",
    "start": "2242920",
    "end": "2252079"
  },
  {
    "text": "attribute but I've not passed over user ID I've kept the attributes quite um um",
    "start": "2252079",
    "end": "2259079"
  },
  {
    "text": "fewer um and I've not added a load of um High cardinality attributes that's",
    "start": "2259079",
    "end": "2264359"
  },
  {
    "text": "specific to how you do metrics keep them low don't pass over an IP address your",
    "start": "2264359",
    "end": "2269760"
  },
  {
    "text": "platform engineering team will kill you they're not happy about it Prometheus doesn't like it neither does influx but",
    "start": "2269760",
    "end": "2275200"
  },
  {
    "text": "that's not a slight on those tools it's just the way that time series Aggregates",
    "start": "2275200",
    "end": "2280440"
  },
  {
    "text": "work tracing instrumentation some of these are now",
    "start": "2281079",
    "end": "2286440"
  },
  {
    "text": "getting into what I consider best practices about how you should",
    "start": "2286440",
    "end": "2291560"
  },
  {
    "text": "instrument your code to make it more readable and have the best chance of you being able to understand",
    "start": "2291560",
    "end": "2298560"
  },
  {
    "text": "things now the difference between those two bottom screenshots there is one of them we're adding an attribute that has",
    "start": "2298560",
    "end": "2305119"
  },
  {
    "text": "the entire object serialized as Json don't do that what you should do is think about",
    "start": "2305119",
    "end": "2311760"
  },
  {
    "text": "the attributes on that object that you want to add as",
    "start": "2311760",
    "end": "2316480"
  },
  {
    "text": "attributes am I way behind no I'm good okay um so add the specific attributes that",
    "start": "2317720",
    "end": "2325880"
  },
  {
    "text": "make sense the things that you think are important don't add pii data like first name and",
    "start": "2325880",
    "end": "2331280"
  },
  {
    "text": "surname just because it's on my slide doesn't mean you should do it but extract those indiv idual",
    "start": "2331280",
    "end": "2337720"
  },
  {
    "text": "attributes that you think are important give them names don't expect to be able to pass over an object and just let the",
    "start": "2337720",
    "end": "2343480"
  },
  {
    "text": "backend sort it the biggest problem with doing stuff like that is as soon as somebody adds something to that object",
    "start": "2343480",
    "end": "2349359"
  },
  {
    "text": "like okay we've got a person well people have got credit cards right so let's add",
    "start": "2349359",
    "end": "2354800"
  },
  {
    "text": "the credit cards to that person then we'll just log the person out okay now our backend system our um observability",
    "start": "2354800",
    "end": "2361960"
  },
  {
    "text": "system is now in scope of PCI because now I've got all of my credit card details in there don't do that also",
    "start": "2361960",
    "end": "2367720"
  },
  {
    "text": "don't store credit card details in general but that's a completely other talk but be intentional think about",
    "start": "2367720",
    "end": "2374760"
  },
  {
    "text": "what's important add those things explicitly give them explicit",
    "start": "2374760",
    "end": "2379800"
  },
  {
    "text": "names but also think about adding classes that wrap that",
    "start": "2379839",
    "end": "2385480"
  },
  {
    "text": "data in specific context so in this one I've got a span enrichment class where",
    "start": "2385480",
    "end": "2391960"
  },
  {
    "text": "what I'm doing is I'm adding a method that says enrich with person so I pass",
    "start": "2391960",
    "end": "2397119"
  },
  {
    "text": "in my span and I enrich it with a person object the reason why this is really",
    "start": "2397119",
    "end": "2402440"
  },
  {
    "text": "interesting is because now anybody who wants to say I've got a span and I'd like the person details to be on that",
    "start": "2402440",
    "end": "2409319"
  },
  {
    "text": "span are going to get all of the same attributes with all of the same names",
    "start": "2409319",
    "end": "2414560"
  },
  {
    "text": "they're all going to go in the same place which means that when you're trying to query these when you're trying",
    "start": "2414560",
    "end": "2420160"
  },
  {
    "text": "to build analytics off the back of your spans which is what you should be doing you're going to have some standards",
    "start": "2420160",
    "end": "2428040"
  },
  {
    "text": "now you see at the bottom there we use get active span that gets the current span that's active in our um",
    "start": "2428040",
    "end": "2435280"
  },
  {
    "text": "application so that we can enrich it with extra data we don't have to create a new Span in order to do",
    "start": "2435280",
    "end": "2442599"
  },
  {
    "text": "this when we do create a new span now this is um how I believe all um",
    "start": "2443920",
    "end": "2450520"
  },
  {
    "text": "retailers do markup of their prices just random numbers this isn't how I would write",
    "start": "2450520",
    "end": "2456720"
  },
  {
    "text": "code by the way just in case there's any potential future employees out there but ultimately the reason why we would",
    "start": "2456720",
    "end": "2463560"
  },
  {
    "text": "create an additional span around this code is because that middle section of that",
    "start": "2463560",
    "end": "2470240"
  },
  {
    "text": "code is going to change its Performance Based on the input",
    "start": "2470240",
    "end": "2475720"
  },
  {
    "text": "data because the category ID as it gets bigger we're going to do more iterations of that Loop and therefore it is going",
    "start": "2475720",
    "end": "2482359"
  },
  {
    "text": "to be slower each time so that is something that we would want to monitor",
    "start": "2482359",
    "end": "2488119"
  },
  {
    "text": "so we add a span around it now there is a new SDK coming for",
    "start": "2488119",
    "end": "2494280"
  },
  {
    "text": "JavaScript verw well more specifically a typescript SDK for that is a typescript",
    "start": "2494280",
    "end": "2499319"
  },
  {
    "text": "SDK which will Implement things like disposable patterns and things like that which will make this code a little bit",
    "start": "2499319",
    "end": "2504800"
  },
  {
    "text": "tidier but for now yes you have to provide in a delegate on the uh function at the bottom to provide that and that's",
    "start": "2504800",
    "end": "2511599"
  },
  {
    "text": "going to create a new span it's going to have some attributes that we've created at the top there for the price and the",
    "start": "2511599",
    "end": "2518599"
  },
  {
    "text": "category ID we're going to do some things on that we're going to run our function and then we're going to set an",
    "start": "2518599",
    "end": "2524839"
  },
  {
    "text": "additional attribute at the bottom and then we're going to stop that span and then that will get pushed to the back",
    "start": "2524839",
    "end": "2531119"
  },
  {
    "text": "end now personally I I hate magic strings all over my code base too easy",
    "start": "2531119",
    "end": "2536800"
  },
  {
    "text": "to get wrong two places might use different strings how many times have we seen in",
    "start": "2536800",
    "end": "2542200"
  },
  {
    "text": "our back ends oh yes that was in pre-production Oh you mean staging Oh you mean people",
    "start": "2542200",
    "end": "2548760"
  },
  {
    "text": "prod give things standard names use a constants file grab yourself",
    "start": "2548760",
    "end": "2554160"
  },
  {
    "text": "a big constants file with all of the different attributes put it in a class if you want to or just declare constants",
    "start": "2554160",
    "end": "2560440"
  },
  {
    "text": "like that doesn't really matter whatever makes sense to you throw that into a file throw JS doc",
    "start": "2560440",
    "end": "2567400"
  },
  {
    "text": "around it give it actual documentation tell people where each one of these is supposed to be used because everybody",
    "start": "2567400",
    "end": "2573400"
  },
  {
    "text": "loves writing documentation yeah so write the documentation it will save you in the long",
    "start": "2573400",
    "end": "2580839"
  },
  {
    "text": "run but add the constants and then add them back into the code which makes it look a little bit nicer we've not got",
    "start": "2580839",
    "end": "2587400"
  },
  {
    "text": "those magic strings maybe it's just the color that vs code gives strings in my ID I don't know but I just don't like",
    "start": "2587400",
    "end": "2593640"
  },
  {
    "text": "magic strings but in that particular example",
    "start": "2593640",
    "end": "2598800"
  },
  {
    "text": "I've got a class called diagnostic names which has got a loot of constants on it or we're pulling in that um file",
    "start": "2598800",
    "end": "2607079"
  },
  {
    "text": "okay the other thing we've got is enriching the current context with things like um the query string",
    "start": "2608000",
    "end": "2615240"
  },
  {
    "text": "parameters because in the express instrumentation it will put in the query string what I will tell you is probably",
    "start": "2615240",
    "end": "2622040"
  },
  {
    "text": "from the next release of the express instrumentation all of the URLs will be",
    "start": "2622040",
    "end": "2627760"
  },
  {
    "text": "redacted all the query string parameters will be redacted so you won't get them even in the URL path attribute by",
    "start": "2627760",
    "end": "2636040"
  },
  {
    "text": "default if you want to rant about why that happened come see me afterwards it's not a good",
    "start": "2636040",
    "end": "2641880"
  },
  {
    "text": "one um but what you should be doing is thinking about which ones of those attributes on your query strings and in",
    "start": "2641880",
    "end": "2647240"
  },
  {
    "text": "the objects that have been posted which ones are important take them out give them a name put them on your",
    "start": "2647240",
    "end": "2654640"
  },
  {
    "text": "span couple of other Concepts within tracing we've got span events span events are a point in time",
    "start": "2657680",
    "end": "2664640"
  },
  {
    "text": "action within a span there're an extra blob of data that you can attach to a",
    "start": "2664640",
    "end": "2670079"
  },
  {
    "text": "span that says this happened at this time inside of that span provide additional context things like",
    "start": "2670079",
    "end": "2676640"
  },
  {
    "text": "exceptions but they're essentially attached to the span which means that if we do sampling then it will be sampled",
    "start": "2676640",
    "end": "2682400"
  },
  {
    "text": "with that um particular spam if we decide to discard that span they'll be they'll be um discarded as well they're",
    "start": "2682400",
    "end": "2689559"
  },
  {
    "text": "basically like a log a very structured log very intentional log but they're",
    "start": "2689559",
    "end": "2695280"
  },
  {
    "text": "basically like logs but they come in the format of the signal of tracing",
    "start": "2695280",
    "end": "2701680"
  },
  {
    "text": "data which means that when we do um when you get to scale and you have to do",
    "start": "2701680",
    "end": "2706920"
  },
  {
    "text": "sampling we'll sample out all of those things if we do it with logs they're a different signal they won't be sampled",
    "start": "2706920",
    "end": "2712880"
  },
  {
    "text": "together so where you can and you have that need for writing a log line use a span event",
    "start": "2712880",
    "end": "2718119"
  },
  {
    "text": "instead they have some properties not really important things like this span",
    "start": "2718119",
    "end": "2723599"
  },
  {
    "text": "events are really cool when we do stuff like um validation events and we go we validated something and it failed you",
    "start": "2723599",
    "end": "2729760"
  },
  {
    "text": "might not want to fail the span the span might not have failed but you said yep at this point in this span we did this",
    "start": "2729760",
    "end": "2736040"
  },
  {
    "text": "thing and it failed and the really easy just add event on the span nothing more",
    "start": "2736040",
    "end": "2743000"
  },
  {
    "text": "complicated than that if you've got exceptions in your code I mean nobody in here writes code",
    "start": "2743000",
    "end": "2749359"
  },
  {
    "text": "that throws exceptions because you know we all write non- Boogie code right but if you do and you put a TR catch around",
    "start": "2749359",
    "end": "2756440"
  },
  {
    "text": "it catch the exception record the exception now you'll notice that there's two lines at the bottom of that record",
    "start": "2756440",
    "end": "2762520"
  },
  {
    "text": "exception and set status because record exception does not",
    "start": "2762520",
    "end": "2767559"
  },
  {
    "text": "Mark the span has failed in a scenario where you've got retries for instance you might get an exception on the first",
    "start": "2767559",
    "end": "2773760"
  },
  {
    "text": "one retry it and it works fine on the second one the span didn't fail but you",
    "start": "2773760",
    "end": "2778960"
  },
  {
    "text": "did record an exception against that span",
    "start": "2778960",
    "end": "2784200"
  },
  {
    "text": "so apologies that's slide so you'll notice at the bottom there the",
    "start": "2784200",
    "end": "2790319"
  },
  {
    "text": "two methods we're setting error on this one because we're saying that nope we haven't done anything this one is",
    "start": "2790319",
    "end": "2795359"
  },
  {
    "text": "actually going to error on that particular thing now the other one is span links",
    "start": "2795359",
    "end": "2801599"
  },
  {
    "text": "span links are an alternative to showing a parent and child relationship they're an alternative to doing that big",
    "start": "2801599",
    "end": "2807599"
  },
  {
    "text": "waterfall thing because they're casual rather than",
    "start": "2807599",
    "end": "2815559"
  },
  {
    "text": "causal I had to read that like 20 times to make sure I got the two the right way around I'm fairly certain of the right",
    "start": "2815559",
    "end": "2822440"
  },
  {
    "text": "way around because there's very little difference between the two um but they're not a dependency",
    "start": "2822440",
    "end": "2829240"
  },
  {
    "text": "they're really useful in distributed event driven systems where things can happen days or weeks afterwards where",
    "start": "2829240",
    "end": "2835559"
  },
  {
    "text": "what you actually don't want is a trace that's this wide that might not be the right idea so",
    "start": "2835559",
    "end": "2841440"
  },
  {
    "text": "you might want to say yeah I'm going to say this is an action but in my other action is brand new Trace maybe it's",
    "start": "2841440",
    "end": "2847839"
  },
  {
    "text": "sending an email that we sent maybe a day afterwards but I do want to be able to",
    "start": "2847839",
    "end": "2853200"
  },
  {
    "text": "get back to the original thing that caus this to happen and if we do that we use a span",
    "start": "2853200",
    "end": "2860160"
  },
  {
    "text": "link instead so the new one becomes its own trace and we link it back to the previous Trace so it transitions the",
    "start": "2860160",
    "end": "2867640"
  },
  {
    "text": "trace context essentially the trace individual trace and allows us to put two of them together which makes it an",
    "start": "2867640",
    "end": "2873000"
  },
  {
    "text": "alternative to the parent and child relationship um it's not as useful if you're using um event driven systems and",
    "start": "2873000",
    "end": "2879720"
  },
  {
    "text": "things like that there's entire talks on when to use that I've got some YouTube videos coming up on that as",
    "start": "2879720",
    "end": "2885559"
  },
  {
    "text": "well so naming it's",
    "start": "2885559",
    "end": "2890680"
  },
  {
    "text": "hard one of the two big problems in computer science which are naming cash",
    "start": "2890680",
    "end": "2896559"
  },
  {
    "text": "invalidation and off by one errors I love that joke nobody laughs but I love it I",
    "start": "2896559",
    "end": "2903280"
  },
  {
    "text": "laughed so what should you do now we have something called the semantic ventions in open Telemetry these are",
    "start": "2903280",
    "end": "2909440"
  },
  {
    "text": "conventions that the open Telemetry Community have painstakingly sat in meetings on Zoom for days and days",
    "start": "2909440",
    "end": "2918160"
  },
  {
    "text": "agonizing over each individual name and why it should be like that and then elastic search comes along and says",
    "start": "2918160",
    "end": "2924480"
  },
  {
    "text": "we've got all these new names do you want these ones but we've got these standardized names so",
    "start": "2924480",
    "end": "2931359"
  },
  {
    "text": "request. body. length HTTP request. body. length I think it is or bodycore",
    "start": "2931359",
    "end": "2938680"
  },
  {
    "text": "length I don't know they're standardized attributes they have names it solves all",
    "start": "2938680",
    "end": "2943839"
  },
  {
    "text": "of those debates that you have when somebody goes yeah but we should call it this and it's like yeah but we should call it this this one's way better and",
    "start": "2943839",
    "end": "2951480"
  },
  {
    "text": "then you spend six months of any project deciding on naming and then your Runway runs out and your company folds use the",
    "start": "2951480",
    "end": "2958240"
  },
  {
    "text": "semantic conventions where they exist if it's a standard concept that you're doing chances are there is a semantic",
    "start": "2958240",
    "end": "2963760"
  },
  {
    "text": "convention for it go and have a look at the docs if you're using your own names your own",
    "start": "2963760",
    "end": "2969839"
  },
  {
    "text": "spans give them some name spacing so put your name at the bottom",
    "start": "2969839",
    "end": "2976119"
  },
  {
    "text": "of them an abbreviation of your company name at the bottom there is",
    "start": "2976119",
    "end": "2982079"
  },
  {
    "text": "no mandated number of depth of how far you go with this just make them",
    "start": "2982079",
    "end": "2988640"
  },
  {
    "text": "descriptive put them in those constants files give them documents if you really want to try and use shared packages",
    "start": "2988640",
    "end": "2997200"
  },
  {
    "text": "if you've got Concepts in your organization that transition an individual team throw those constants in",
    "start": "2997200",
    "end": "3002440"
  },
  {
    "text": "an mpm package that everybody else can use so everybody starts using those constants across teams that consistency",
    "start": "3002440",
    "end": "3010079"
  },
  {
    "text": "is important use more properties not objects don't serialize things into your",
    "start": "3010079",
    "end": "3018640"
  },
  {
    "text": "um into your attributes use properties use",
    "start": "3018640",
    "end": "3023960"
  },
  {
    "text": "intentionality the thing that everybody loves document it all document all your properties document all your extension",
    "start": "3023960",
    "end": "3030440"
  },
  {
    "text": "methods all your abstract class methods that you've added to abstract that context away document why they're supposed to be",
    "start": "3030440",
    "end": "3037799"
  },
  {
    "text": "there when people are supposed to use them and the other one is don't use",
    "start": "3037799",
    "end": "3044240"
  },
  {
    "text": "Dynamic Property names use explicit property names because otherwise you're not going",
    "start": "3044240",
    "end": "3050920"
  },
  {
    "text": "to be able to analyze use analytics and graph these things because they're all going to have different names",
    "start": "3050920",
    "end": "3057559"
  },
  {
    "text": "who he has not heard of aspire I think there's five talks on",
    "start": "3060839",
    "end": "3065960"
  },
  {
    "text": "Aspire here today so Aspire you've probably seen screenshots like this I think this is",
    "start": "3065960",
    "end": "3072359"
  },
  {
    "text": "actually from like preview six um but similar sort of idea it is an OTP",
    "start": "3072359",
    "end": "3078079"
  },
  {
    "text": "dashboard it is OTL native all of those things that we've just talked about they can go into this dashboard just by",
    "start": "3078079",
    "end": "3084559"
  },
  {
    "text": "saying run the dashboard you don't need to use a full Aspire app run the",
    "start": "3084559",
    "end": "3089960"
  },
  {
    "text": "dashboard VI Docker and send all of your signals that you've just done in your Javascript app straight to that it is",
    "start": "3089960",
    "end": "3096920"
  },
  {
    "text": "the best thing you can use for local debugging because it brings all those signals together it is really easy it's",
    "start": "3096920",
    "end": "3103920"
  },
  {
    "text": "really if you want to talk about how you get people to care about Telemetry in your organization show them Aspire show",
    "start": "3103920",
    "end": "3110559"
  },
  {
    "text": "them some of that auto instrumentation and show them it in Aspire use that for debugging",
    "start": "3110559",
    "end": "3118079"
  },
  {
    "text": "your local stuff doesn't have to be for",
    "start": "3118079",
    "end": "3122400"
  },
  {
    "text": "production um but yeah it takes all of the signals so the final thing is sampling",
    "start": "3123480",
    "end": "3130760"
  },
  {
    "text": "which I saved for the last part of the last session of the last day because it's the easy thing it's only",
    "start": "3130760",
    "end": "3137480"
  },
  {
    "text": "maths it's only like you know high level maths and sampling characteristics and all that kind of stuff it's really easy",
    "start": "3137480",
    "end": "3145240"
  },
  {
    "text": "honest so sampling is how we reduce the amount of data in a tracing",
    "start": "3145240",
    "end": "3150480"
  },
  {
    "text": "context it's how we reduce the amount of data without removing the context we",
    "start": "3150480",
    "end": "3157400"
  },
  {
    "text": "have two methods we can do it in the head or in the tail you can do it in the middle if you want I'd like to call that",
    "start": "3157400",
    "end": "3162799"
  },
  {
    "text": "torso sampling But ultimately the most common",
    "start": "3162799",
    "end": "3168160"
  },
  {
    "text": "ones are head sampling and tail sampling it allows us to retain the context of a full Trace so we can see the whole trace",
    "start": "3168160",
    "end": "3175760"
  },
  {
    "text": "or none of the Trace what it does is reduce the amount of storage it reduces ingest volumes by",
    "start": "3175760",
    "end": "3183920"
  },
  {
    "text": "reducing both of those two you can increase the performance of your queries because we've got fewer amounts of data",
    "start": "3183920",
    "end": "3189599"
  },
  {
    "text": "points to be able to query and we do that by retaining context about the wider system so if we",
    "start": "3189599",
    "end": "3198200"
  },
  {
    "text": "say we're going to take one in 10 of our traces for this particular route and one",
    "start": "3198200",
    "end": "3205440"
  },
  {
    "text": "in 100 for this particular route at scale you can get statistical significance of those things by",
    "start": "3205440",
    "end": "3211640"
  },
  {
    "text": "segregating by characteristics it's the reason why we can do say exit polls um",
    "start": "3211640",
    "end": "3216920"
  },
  {
    "text": "for elections we can do all of these kind of where we take a massive sum of data boil it down to one small thing and",
    "start": "3216920",
    "end": "3224200"
  },
  {
    "text": "get really accurate data with Telemetry you've got to accept data loss you're",
    "start": "3224200",
    "end": "3229599"
  },
  {
    "text": "never going to get 100% Fidelity of that data don't use it for profit and loss analysis that's what your database is",
    "start": "3229599",
    "end": "3236000"
  },
  {
    "text": "for your data warehouse your data Lake your data swamp whatever you want to call it but it allows us to be able to see",
    "start": "3236000",
    "end": "3243880"
  },
  {
    "text": "approximations and we use sampling for that if we do head sampling what we're",
    "start": "3243880",
    "end": "3250440"
  },
  {
    "text": "doing is we redu we're performing the activity before that thing has been",
    "start": "3250440",
    "end": "3256359"
  },
  {
    "text": "created so before the web request before the web request has been fulfilled",
    "start": "3256359",
    "end": "3262920"
  },
  {
    "text": "before the um when we if it's a blob stor and we're thrown a a file in Blob",
    "start": "3262920",
    "end": "3267960"
  },
  {
    "text": "storage and that was the activity that's just created this span we do it before we create the",
    "start": "3267960",
    "end": "3274079"
  },
  {
    "text": "span and what that means is we can remove all the process overhead of creating any spans throughout our entire",
    "start": "3274079",
    "end": "3280319"
  },
  {
    "text": "system for that action which makes it really really useful but the problem is it has limited",
    "start": "3280319",
    "end": "3287640"
  },
  {
    "text": "access to information it doesn't it knows things like the user agent because we've got the web request so it knows",
    "start": "3287640",
    "end": "3293799"
  },
  {
    "text": "the user agent it knows the um the URL it knows the um the endpoint",
    "start": "3293799",
    "end": "3301559"
  },
  {
    "text": "the um protocol it knows all of those things doesn't know whether it's going",
    "start": "3301559",
    "end": "3306680"
  },
  {
    "text": "to error because at the point when you create the request if you knew it was",
    "start": "3306680",
    "end": "3312760"
  },
  {
    "text": "going to error I'd probably fix that bug first because if you know it's going to error then just make it not error but we",
    "start": "3312760",
    "end": "3319920"
  },
  {
    "text": "don't know whether it's going to error at that point and that's the only place we can make a decision in head sampling",
    "start": "3319920",
    "end": "3327280"
  },
  {
    "text": "now what I would say is most organizations use a combination of head sampling and tail sampling when they hit",
    "start": "3327280",
    "end": "3332960"
  },
  {
    "text": "scale but tail sampling it runs on a delay after the",
    "start": "3332960",
    "end": "3338799"
  },
  {
    "text": "initial span the root span when that comes into our centralized um location",
    "start": "3338799",
    "end": "3344039"
  },
  {
    "text": "like a open saaby collector it runs on a delay after that we give it about 5 Seconds sometimes to",
    "start": "3344039",
    "end": "3350680"
  },
  {
    "text": "say let's let all the other spans from all of these other services because things happen there's an eventual",
    "start": "3350680",
    "end": "3355760"
  },
  {
    "text": "consistency approach to getting all of the spans from a trace into one central location because we got batch Windows to",
    "start": "3355760",
    "end": "3362799"
  },
  {
    "text": "contest with that kind of stuff so we give it a bit of delay we run it as part of the",
    "start": "3362799",
    "end": "3369880"
  },
  {
    "text": "collector the advantage is it has all the spans all the data on all the",
    "start": "3369880",
    "end": "3376839"
  },
  {
    "text": "spans across the entire Trace so we've got the root span we've",
    "start": "3376839",
    "end": "3383359"
  },
  {
    "text": "got all of the HTTP calls that we've made we've got all the database the calls that have been made that we can use to make a decision as to whether",
    "start": "3383359",
    "end": "3389440"
  },
  {
    "text": "we're going to keep the whole trace or whether we're going to discard that trace it does delay sending spans to",
    "start": "3389440",
    "end": "3396799"
  },
  {
    "text": "your back end that is a tradeoff and if you're already on a I",
    "start": "3396799",
    "end": "3401960"
  },
  {
    "text": "mean if you're already on a back end that's got a 5 minute SLA an extra 30 seconds not going to matter if you're on",
    "start": "3401960",
    "end": "3407720"
  },
  {
    "text": "a back end where your seconds to be able to query that data 30 seconds can feel like an eternity when the system's down",
    "start": "3407720",
    "end": "3416000"
  },
  {
    "text": "so so do bear that in mind and it also requires the application to send all of the spans to",
    "start": "3416000",
    "end": "3423119"
  },
  {
    "text": "that individual um collector infrastructure and what that means is if you're on a if you're on a cloud",
    "start": "3423119",
    "end": "3431000"
  },
  {
    "text": "platform that treats cross availability Zone traffic as a revenue stream AWS um then that can be quite",
    "start": "3431000",
    "end": "3439920"
  },
  {
    "text": "expensive as your's recently just announced that they are not charging for cross a traffic which yeah it makes it",
    "start": "3439920",
    "end": "3447039"
  },
  {
    "text": "really nice but it sends them all to that location it will then make a decision as to whether it's going to",
    "start": "3447039",
    "end": "3452079"
  },
  {
    "text": "keep it or it's going to discard it you send that over to your back end and the the good backends are the ones that were",
    "start": "3452079",
    "end": "3458240"
  },
  {
    "text": "able to keep that if you've ever used custo in um log analytics for for Azure",
    "start": "3458240",
    "end": "3464079"
  },
  {
    "text": "then you'll notice that there is an item count and an item so you never count the number of items you sum the item count",
    "start": "3464079",
    "end": "3470799"
  },
  {
    "text": "and that's because sampling is taking place sample is generally taking place in most of the big back end that you",
    "start": "3470799",
    "end": "3476720"
  },
  {
    "text": "don't see it's already happening but if you feel like you're",
    "start": "3476720",
    "end": "3483280"
  },
  {
    "text": "getting there and there's a lot of stuff then absolutely look at sampling it is an entire 2hour well we've got a we've",
    "start": "3483280",
    "end": "3489839"
  },
  {
    "text": "got a two-day workshop on just sampling so you know there is a lot to um look at",
    "start": "3489839",
    "end": "3495119"
  },
  {
    "text": "but just know that it exists and it's a mechanism to reduce that cost without reducing the Fidelity of the data that",
    "start": "3495119",
    "end": "3500880"
  },
  {
    "text": "you've got very quickly what's coming up we've got more semantic conventions that we're signing off um currently the HTTP spec",
    "start": "3500880",
    "end": "3508440"
  },
  {
    "text": "has been signed off we've got database and messaging of the next two that are coming up so there'll be more",
    "start": "3508440",
    "end": "3513720"
  },
  {
    "text": "standardized names which means more packages that will be out of the RC stage the release candidate stage more",
    "start": "3513720",
    "end": "3520079"
  },
  {
    "text": "and more of that is happening um we've got more libraries so more of the tools",
    "start": "3520079",
    "end": "3525160"
  },
  {
    "text": "that you use every day more of the libraries that you use we'll be getting more instrumentation packages now that",
    "start": "3525160",
    "end": "3530480"
  },
  {
    "text": "we're going to V1 on most of the things everybody's getting on board with it now so there's more libraries every single day and those libraries are getting more",
    "start": "3530480",
    "end": "3537079"
  },
  {
    "text": "robust they're getting faster some of them were did have performance issues all of that stuff is",
    "start": "3537079",
    "end": "3543520"
  },
  {
    "text": "happening better documentation that's my job I love writing documentation honest",
    "start": "3543520",
    "end": "3550079"
  },
  {
    "text": "um but I work on trying to improve the open Telemetry documentation um which comes on to my last point which is we",
    "start": "3550079",
    "end": "3556599"
  },
  {
    "text": "need to know what you want we need to know why you're not using open Telemetry right now if you're not using it if you",
    "start": "3556599",
    "end": "3562119"
  },
  {
    "text": "are using it what are your pain points what are the things you're struggling with more important what are the things that you the rest of your teams and",
    "start": "3562119",
    "end": "3568160"
  },
  {
    "text": "colleagues are struggling with that you think are easy that we can help with in the open telary Community to make it",
    "start": "3568160",
    "end": "3573720"
  },
  {
    "text": "better so you get the talk I get all of that from you so feel free to come down",
    "start": "3573720",
    "end": "3579000"
  },
  {
    "text": "and have a chat with me there are stickers I would be remiss if I didn't say that honeycomb um offer a free",
    "start": "3579000",
    "end": "3584960"
  },
  {
    "text": "account we do take all of those three signals as well and have a unique approach for you to be able to analyze that data you can sign up without a",
    "start": "3584960",
    "end": "3591359"
  },
  {
    "text": "credit card you can get started today we also literally wrote the book on observability engineering or I didn't my",
    "start": "3591359",
    "end": "3597319"
  },
  {
    "text": "um CTO and um some others wrote it it's free to download go find it um other",
    "start": "3597319",
    "end": "3603000"
  },
  {
    "text": "than that I don't think we got chance for questions here but feel free to come down and have a chat and here for the rest of the day",
    "start": "3603000",
    "end": "3609030"
  },
  {
    "text": "[Applause]",
    "start": "3609030",
    "end": "3615749"
  }
]