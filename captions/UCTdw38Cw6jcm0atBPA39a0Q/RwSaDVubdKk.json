[
  {
    "text": "so hello everybody my name is Luke julish I'm working for a company named",
    "start": "6960",
    "end": "12360"
  },
  {
    "text": "solar Sosa and we are developing static analysis tools policy plus plus and 24",
    "start": "12360",
    "end": "18960"
  },
  {
    "text": "other languages but today I'm going to focus on Cyber Springs obviously and I'm",
    "start": "18960",
    "end": "24359"
  },
  {
    "text": "also part of the French representation for ISO C plus plus and since a few years I've been working",
    "start": "24359",
    "end": "32340"
  },
  {
    "text": "on a new version of the misra standard and I'm going to talk to you about this today so before I directly start do you",
    "start": "32340",
    "end": "39420"
  },
  {
    "text": "already know or use misra who can you please raise your hands so that I can get a",
    "start": "39420",
    "end": "46559"
  },
  {
    "text": "a little bit not that much you're aware of it obviously but not much okay so I'm",
    "start": "46559",
    "end": "52140"
  },
  {
    "text": "going to start by giving a little bit of background before going to the the meet",
    "start": "52140",
    "end": "58020"
  },
  {
    "text": "of my talk so first what is misra Mishra as you all know simple Spruce is",
    "start": "58020",
    "end": "65220"
  },
  {
    "text": "a large language and being a large language it's possible to use it to do wonderful things and",
    "start": "65220",
    "end": "72119"
  },
  {
    "text": "it's possible to use it to do crappy stuff and when you are working on a",
    "start": "72119",
    "end": "78360"
  },
  {
    "text": "safety critical code you want to stay aware of the crappy stuff and every company whatever it needs you usually",
    "start": "78360",
    "end": "85140"
  },
  {
    "text": "don't use all of C plus plus it chooses the subsets and what Mishra is trying to",
    "start": "85140",
    "end": "90840"
  },
  {
    "text": "do is to try to define a subset of separate Spruce which is safe to use for",
    "start": "90840",
    "end": "96119"
  },
  {
    "text": "safety critical code and it's uh so it's a set of guidelines it says you should",
    "start": "96119",
    "end": "101759"
  },
  {
    "text": "not do that basically that makes something which is deemed and safe and",
    "start": "101759",
    "end": "107520"
  },
  {
    "text": "the root of Mishra is the automotive industry and basically all car builders except",
    "start": "107520",
    "end": "114960"
  },
  {
    "text": "maybe Tesla uh at some time once the subcontractors to use miswa",
    "start": "114960",
    "end": "122520"
  },
  {
    "text": "when the white code that is going to be embedded on the on the car maybe not for",
    "start": "122520",
    "end": "128479"
  },
  {
    "text": "entertainment for the for the children at the back in the back but everything which has impact on the safety the they",
    "start": "128479",
    "end": "137280"
  },
  {
    "text": "ask people to write following mistrial guide points and there are many sets of",
    "start": "137280",
    "end": "142800"
  },
  {
    "text": "guidelines for supply and any company basically has a set of guidelines for separate space sometimes it's returned",
    "start": "142800",
    "end": "148920"
  },
  {
    "text": "sometimes it's more like uh pass for from Once uh wise guy to unless was",
    "start": "148920",
    "end": "154920"
  },
  {
    "text": "guide so that becomes wiser but every company has a set of guidelines and this way is just one of the sets that",
    "start": "154920",
    "end": "161220"
  },
  {
    "text": "happened to have some success and to be followed by people even by people who are not in safety critical domain",
    "start": "161220",
    "end": "168300"
  },
  {
    "text": "and the conversion of misra for C plus plus is Miss Rossi plus plus 2008.",
    "start": "168300",
    "end": "173819"
  },
  {
    "text": "that sounds crazy 2008 the plus plus was so different in 2008 and it's even worse",
    "start": "173819",
    "end": "180360"
  },
  {
    "text": "than that It Was Written in 2008 but it was written by people who had a bigger",
    "start": "180360",
    "end": "186599"
  },
  {
    "text": "background in C than in C plus plus so it part of mystery was written like oh",
    "start": "186599",
    "end": "192300"
  },
  {
    "text": "on this fancy template stuff maybe I don't trust it",
    "start": "192300",
    "end": "197459"
  },
  {
    "text": "so even if it was written in 2008 it was finished into the 2008 it was started",
    "start": "197459",
    "end": "203819"
  },
  {
    "text": "before and it was started with the mindset which is even from before so that's why I'm talking this talk is it's",
    "start": "203819",
    "end": "209519"
  },
  {
    "text": "no it's no longer going to be you're going to pass misra it's we we change it we try to update it and I want to show",
    "start": "209519",
    "end": "215459"
  },
  {
    "text": "you what's going to come soon so I think it's important to show what is the",
    "start": "215459",
    "end": "221580"
  },
  {
    "text": "relationship between misra and other sets of guidelines first Mishra started with Mr C because",
    "start": "221580",
    "end": "227640"
  },
  {
    "text": "sayo's people and embed itself was do see that don't do fancy plus stuff",
    "start": "227640",
    "end": "232680"
  },
  {
    "text": "at that time so uh 98 which then a new version 2004 a new",
    "start": "232680",
    "end": "240780"
  },
  {
    "text": "version 2012. they are working mostly on the new version now I don't know what's the schedule of Miss rasi but C is a",
    "start": "240780",
    "end": "249299"
  },
  {
    "text": "language which is not moving a lot so miss racy does not have to move a lot either so it's basically stable and not",
    "start": "249299",
    "end": "258180"
  },
  {
    "text": "going to change soon then out of misrasi some other guidelines were extracted",
    "start": "258180",
    "end": "264000"
  },
  {
    "text": "maybe you've heard of the John fighter strike John Strike Fighter yeah the the",
    "start": "264000",
    "end": "270360"
  },
  {
    "text": "stuff for planes in the in the for looking Martin so it was inspired from",
    "start": "270360",
    "end": "275639"
  },
  {
    "text": "Miss Rosie but it was C plus plus and then there was Mr C plus plus 2008",
    "start": "275639",
    "end": "281160"
  },
  {
    "text": "which were also inspired for Mr C you could see some common guidelines between those two uh and then there was this autosar",
    "start": "281160",
    "end": "289820"
  },
  {
    "text": "standard and this set of guidelines was not something that was uh planned on",
    "start": "289820",
    "end": "296460"
  },
  {
    "text": "purpose it's far more like people would want wanting to write an auto sales set of software for the for the car to",
    "start": "296460",
    "end": "303479"
  },
  {
    "text": "communicate between the car to organize different parts inside of the car and they wanted to use C plus plus 14 at",
    "start": "303479",
    "end": "310500"
  },
  {
    "text": "that time but they could not because of some guidelines it missed reciprocess",
    "start": "310500",
    "end": "316259"
  },
  {
    "text": "2008 one of them being that you should use uh the standard at the time which was C plus plus 2003. so they could not",
    "start": "316259",
    "end": "324840"
  },
  {
    "text": "directly use misra so a subgroup of the autosar Consortium set up creating a new",
    "start": "324840",
    "end": "330419"
  },
  {
    "text": "set of guidelines update updated modernized to be able to write code that",
    "start": "330419",
    "end": "336960"
  },
  {
    "text": "makes sense at that time and then there are other guidelines which are totally unrelated but for Mr C plus",
    "start": "336960",
    "end": "344340"
  },
  {
    "text": "plus 2020 x x mean meaning that hopefully it might be two or three",
    "start": "344340",
    "end": "350100"
  },
  {
    "text": "probably not not later hopefully so we took all those sources of inspiration to put",
    "start": "350100",
    "end": "357060"
  },
  {
    "text": "it into the new version of Miss recip and we especially the autosar part we",
    "start": "357060",
    "end": "364199"
  },
  {
    "text": "took into account every guideline in autosar to see if we seem if we thought it was variable or not or if it should",
    "start": "364199",
    "end": "370620"
  },
  {
    "text": "be updated but all of them were taken into account and part of people who work in Mrs bus used to work on this autosar",
    "start": "370620",
    "end": "377520"
  },
  {
    "text": "guideline and the auto start Consortium made an announcement maybe two years ago that they do not plan to to publish a",
    "start": "377520",
    "end": "385380"
  },
  {
    "text": "new version of photoshar they will switch back to miswa when miswa will be",
    "start": "385380",
    "end": "390419"
  },
  {
    "text": "ready and so we've been working on that I I've",
    "start": "390419",
    "end": "396120"
  },
  {
    "text": "been working on this version for I think three or two four years now uh it",
    "start": "396120",
    "end": "401280"
  },
  {
    "text": "started before but it's uh right now we are getting closer to the finish line there's been some open reviews for the",
    "start": "401280",
    "end": "409319"
  },
  {
    "text": "new version of not for every guidelines but for quite some guidelines you could register and then and then",
    "start": "409319",
    "end": "417060"
  },
  {
    "text": "publish your comments on it so it's really getting close to the end hopefully and there is also a collaboration",
    "start": "417060",
    "end": "424380"
  },
  {
    "text": "between wgg 23 of those uh of the iso committee which is uh concerned about",
    "start": "424380",
    "end": "432600"
  },
  {
    "text": "um I don't remember about the official name of it but basically about safety critical software and ID ISO level and",
    "start": "432600",
    "end": "439380"
  },
  {
    "text": "uh there's some collaboration between the mystery group and this group",
    "start": "439380",
    "end": "445160"
  },
  {
    "text": "so in this talk um just going to present some old Miserables let's try to address one",
    "start": "447000",
    "end": "454380"
  },
  {
    "text": "topic one problem with C plus plus and the new version of the equivalent misra rule that addressed the same topic but",
    "start": "454380",
    "end": "460919"
  },
  {
    "text": "in a different way just to show you how it evolves um and of course as I said the new",
    "start": "460919",
    "end": "468479"
  },
  {
    "text": "version of mystery is not published so when I said this is how it's going to be this is the current state of misra but",
    "start": "468479",
    "end": "475620"
  },
  {
    "text": "it may change before it is published so you should not say that you should not believe that if you write software that way it's going to be compliant with the",
    "start": "475620",
    "end": "482580"
  },
  {
    "text": "next missile Thunder and before I go there I just I would",
    "start": "482580",
    "end": "490259"
  },
  {
    "text": "just like to emphasize some of the design scores of mystra because it's",
    "start": "490259",
    "end": "495840"
  },
  {
    "text": "impossible to correctly understand a set of guidelines if you don't know why there are the put in place and with",
    "start": "495840",
    "end": "501960"
  },
  {
    "text": "which mindset so the first goal I already said it is to focus on safety only",
    "start": "501960",
    "end": "508860"
  },
  {
    "text": "so anything which is more stylistic should not be part of Mishra",
    "start": "508860",
    "end": "515099"
  },
  {
    "text": "and so means why will not say you that you should use tabs or bases for example it's purely stylistic there is no safety",
    "start": "515099",
    "end": "521700"
  },
  {
    "text": "implication with that misfire is going to be signed out about it",
    "start": "521700",
    "end": "526800"
  },
  {
    "text": "and so it means that if you want to write some code it's good to use misra",
    "start": "526800",
    "end": "532860"
  },
  {
    "text": "guidance if it's if especially if you are writing safety critical code but it's not going to be enough you should",
    "start": "532860",
    "end": "538680"
  },
  {
    "text": "also use other guidelines that comes from other sources it's it's not supposed to be",
    "start": "538680",
    "end": "544940"
  },
  {
    "text": "covering all aspects of the software developments uh then the way mystery is written it's",
    "start": "544940",
    "end": "552540"
  },
  {
    "text": "not telling you how to watch code it's telling you oh not to write bad code",
    "start": "552540",
    "end": "558240"
  },
  {
    "text": "so it's not going to tell you that you should organ write a class with this and",
    "start": "558240",
    "end": "563700"
  },
  {
    "text": "this it's just tells you if you want write a class with a Destructor and local picker structure and you are not",
    "start": "563700",
    "end": "569700"
  },
  {
    "text": "confirmed with Mishra for example I'm going to go a little bit more details on this rule later on",
    "start": "569700",
    "end": "576360"
  },
  {
    "text": "and then one of the things that misra hates is undefined Behavior so every time there is a place in the",
    "start": "576360",
    "end": "583260"
  },
  {
    "text": "standard which is a different Behavior mistra tries to prevent it by restricting the way you",
    "start": "583260",
    "end": "590640"
  },
  {
    "text": "can write code even if in some cases it means that the code you are a lot right to be misra compliant is going to be",
    "start": "590640",
    "end": "598560"
  },
  {
    "text": "written democracencies and you could have written without misra even if it's",
    "start": "598560",
    "end": "603899"
  },
  {
    "text": "painful the I mean we are talking about safety critical code so",
    "start": "603899",
    "end": "610140"
  },
  {
    "text": "maybe the cut is not the the faster the smallest that you could write",
    "start": "610140",
    "end": "615800"
  },
  {
    "text": "but it should be okay because of what's at stake there",
    "start": "615800",
    "end": "621500"
  },
  {
    "text": "and for the same reason usually in this domain people prefer explicitness over",
    "start": "621600",
    "end": "627300"
  },
  {
    "text": "thirstness so there are some guidelines that makes you be more explicit about",
    "start": "627300",
    "end": "632820"
  },
  {
    "text": "what happens in your code so that when you read someone reviews it there is no",
    "start": "632820",
    "end": "638279"
  },
  {
    "text": "misunderstanding about what the cut is doing and another part of Mishra is that every",
    "start": "638279",
    "end": "643740"
  },
  {
    "text": "guideline written in miswa should be tool checkable so when I'm Into checkable You may have",
    "start": "643740",
    "end": "649920"
  },
  {
    "text": "heard of wise theorem um maybe you may have heard of the icing problem it doesn't mean that a tool will",
    "start": "649920",
    "end": "656760"
  },
  {
    "text": "detect all bad usage of badcod because it's theoretically impossible like if we",
    "start": "656760",
    "end": "664320"
  },
  {
    "text": "if there was a guideline in Mishra that says that every code should stop at some time",
    "start": "664320",
    "end": "669899"
  },
  {
    "text": "having a tools that detects that would be solving the altering problem and we know it's not possible so when I say",
    "start": "669899",
    "end": "675600"
  },
  {
    "text": "that all guidelines should be tool checkables it means that it should be defined accurately enough that a tool",
    "start": "675600",
    "end": "681839"
  },
  {
    "text": "knows exactly what to look for maybe it cannot look for it because of these theoretical reasons but at least it",
    "start": "681839",
    "end": "688560"
  },
  {
    "text": "should be clearly defined and two different tools maybe they will not detect exactly the same bad situation",
    "start": "688560",
    "end": "696120"
  },
  {
    "text": "because of limitations due to these limits but at least the tool vendors should agree that yes this is a case",
    "start": "696120",
    "end": "702540"
  },
  {
    "text": "that we should detect or no this is uh the case that we should not detect so so",
    "start": "702540",
    "end": "707880"
  },
  {
    "text": "two checkability is very important and if you look for example of a set at a set of guidelines like the simplest",
    "start": "707880",
    "end": "713160"
  },
  {
    "text": "score guard line they are not designed to be tool checkable they are designed to be human readable and human",
    "start": "713160",
    "end": "719399"
  },
  {
    "text": "understandable which is great except that sometimes it's good to have",
    "start": "719399",
    "end": "724920"
  },
  {
    "text": "a tool to help you and especially when you are good doing code review it's good to have a tools that already detects",
    "start": "724920",
    "end": "731220"
  },
  {
    "text": "everything locally so that you can correct everything so that when you go",
    "start": "731220",
    "end": "736260"
  },
  {
    "text": "to the expensive stage of having a manual code review you you already removed all the",
    "start": "736260",
    "end": "742800"
  },
  {
    "text": "all the all the small details that don't deserve to have manual core review",
    "start": "742800",
    "end": "749040"
  },
  {
    "text": "another point is decidability already spoke of it when really said that it's",
    "start": "749040",
    "end": "754260"
  },
  {
    "text": "decidable it means that it doesn't have the problem I talked about with the editing problem a decidable rule is",
    "start": "754260",
    "end": "760740"
  },
  {
    "text": "basically a rule which is focused on the syntax of the code I like I I don't know I'm going to invent",
    "start": "760740",
    "end": "767519"
  },
  {
    "text": "something crazy like uh you should It's Not Invisible but if there was a rule like you should put but public function",
    "start": "767519",
    "end": "773820"
  },
  {
    "text": "before private function this is totally checkable decidable there is no problem to detect that it's",
    "start": "773820",
    "end": "781800"
  },
  {
    "text": "if it's respected or not but if you have a rule like you should not have double delete",
    "start": "781800",
    "end": "787560"
  },
  {
    "text": "this is not decidable because you can write arbitrary complex code for which no tool can decide if the code has",
    "start": "787560",
    "end": "795360"
  },
  {
    "text": "double did it or not and another point which was very important so I'm going to do a little",
    "start": "795360",
    "end": "803100"
  },
  {
    "text": "bit of puzzle background there when I started so I'm working in a company that writes static and resistors and once",
    "start": "803100",
    "end": "809820"
  },
  {
    "text": "when I started to implement rules for misra I hated it I really hated it for two reasons first",
    "start": "809820",
    "end": "816180"
  },
  {
    "text": "it was Miss versus purpose 2008 and second is they seem crazy and to me respecting",
    "start": "816180",
    "end": "823260"
  },
  {
    "text": "some of those rules meant writing bad code in my opinion so I was writing a tool that was saying other developers to",
    "start": "823260",
    "end": "831060"
  },
  {
    "text": "write code that I believe was in of bad quality and",
    "start": "831060",
    "end": "836839"
  },
  {
    "text": "so I went into the Mishra group to try to improve the situation and I",
    "start": "837360",
    "end": "842579"
  },
  {
    "text": "discovered that there was two reason one was that yes some rules were bad because all God because mistakes of the past",
    "start": "842579",
    "end": "849480"
  },
  {
    "text": "but some tools I just did not understood them and the main reason why I did not understood the rule is this last point",
    "start": "849480",
    "end": "856740"
  },
  {
    "text": "it's when Mishra says you should not write code in this way it doesn't say",
    "start": "856740",
    "end": "862380"
  },
  {
    "text": "that you should not do it it just says that by default you should not do it unless you have a good reason",
    "start": "862380",
    "end": "869040"
  },
  {
    "text": "to do it and if you think you have a good reason to do it just write it and",
    "start": "869040",
    "end": "874200"
  },
  {
    "text": "go through a formal deviation process which means especially that you will",
    "start": "874200",
    "end": "879779"
  },
  {
    "text": "have other people look at what you did look that you deviated from a miserable and this other guy which should be",
    "start": "879779",
    "end": "886920"
  },
  {
    "text": "providing more experience than you are we'll say yes I agree that in this case it was relevant to deviate from misra",
    "start": "886920",
    "end": "893339"
  },
  {
    "text": "and this is important because I will show you a world or two letter when if you read the rules you say it's",
    "start": "893339",
    "end": "899579"
  },
  {
    "text": "crazy I cannot write god without deviating from the rule and that's fine you should deviate but you should be",
    "start": "899579",
    "end": "906360"
  },
  {
    "text": "careful when you deviate you should have additional process when you deviate from the role and this mindset I think is",
    "start": "906360",
    "end": "912480"
  },
  {
    "text": "very important when you read Mishra guidelines it's very important to have this mindset otherwise you we just get",
    "start": "912480",
    "end": "918959"
  },
  {
    "text": "crazy at the rule and say how am I supposed to write software with this world",
    "start": "918959",
    "end": "924420"
  },
  {
    "text": "and there is an exception which is not used a lot which is mandatory rules those cannot be deleted but it is very",
    "start": "924420",
    "end": "931620"
  },
  {
    "text": "it almost never happens it's only when the rule clearly leads to a different behavior in all cases that it's",
    "start": "931620",
    "end": "938399"
  },
  {
    "text": "mandatory so the first rule an easy one to get started",
    "start": "938399",
    "end": "945300"
  },
  {
    "text": "mystery 2008 about null pointers the rule told that you should not use the literal zero",
    "start": "945300",
    "end": "951720"
  },
  {
    "text": "funnel pointers instead you should use the macro null why because it's more readable and there",
    "start": "951720",
    "end": "959579"
  },
  {
    "text": "is less risk of Confusion by the user and of course you know that since C plus plus 11",
    "start": "959579",
    "end": "965279"
  },
  {
    "text": "there's a better way so just simple upgrade we now said that every case you",
    "start": "965279",
    "end": "972000"
  },
  {
    "text": "are using the new pattern constant it should be written nuclear and we go one step further which is you",
    "start": "972000",
    "end": "979740"
  },
  {
    "text": "should never use the macro null because it there could be cases in your code when you use null and it was an",
    "start": "979740",
    "end": "986519"
  },
  {
    "text": "integer we don't want that null should never be used so I think this rule is",
    "start": "986519",
    "end": "991740"
  },
  {
    "text": "not controversial it's decidable it's a nice one it makes you write code that clearly states the intent it helps the",
    "start": "991740",
    "end": "998940"
  },
  {
    "text": "compiler to select the right overload so yeah",
    "start": "998940",
    "end": "1004240"
  },
  {
    "text": "next one a little bit more interesting one about unused function parameters Mishra",
    "start": "1005180",
    "end": "1012079"
  },
  {
    "text": "I really don't like when you write codes that you don't use because it could if you don't use it",
    "start": "1012079",
    "end": "1017720"
  },
  {
    "text": "maybe contain some hidden bugs it's useless why do that they're not like it",
    "start": "1017720",
    "end": "1022759"
  },
  {
    "text": "so there was a rule that says that in a function it's there should be no unused",
    "start": "1022759",
    "end": "1028100"
  },
  {
    "text": "parameters well in non-virtual functions because of course if you have a virtual function",
    "start": "1028100",
    "end": "1033260"
  },
  {
    "text": "maybe for some otherwise you will lose them and for some other of the rights we will not use them and then another",
    "start": "1033260",
    "end": "1039199"
  },
  {
    "text": "exception because callbacks functions it could be the same you have a function which you use as a callback and some of",
    "start": "1039199",
    "end": "1045558"
  },
  {
    "text": "the quantities for the Callback will use the parameters and some of the candidates will not use the parameters",
    "start": "1045559",
    "end": "1051380"
  },
  {
    "text": "except that the notion of callback was not clearly defined and we know that with templates",
    "start": "1051380",
    "end": "1059559"
  },
  {
    "text": "almost any function can be a callback it's a callback is not just a functional",
    "start": "1059559",
    "end": "1065179"
  },
  {
    "text": "pointer it's just if you instantiate your template with a specific type you end up calling a specific function and",
    "start": "1065179",
    "end": "1071780"
  },
  {
    "text": "it it's a rule that was not really fitting the spirit of C plus plus one",
    "start": "1071780",
    "end": "1077539"
  },
  {
    "text": "part of the spirit of surplus plus is that you you have the doctyping functions",
    "start": "1077539",
    "end": "1083720"
  },
  {
    "text": "that look the same should be replaceable and you can write a templates that use any version of this",
    "start": "1083720",
    "end": "1090020"
  },
  {
    "text": "function and it should be or was transparent and so in the split of separate Spruce the Prototype of a",
    "start": "1090020",
    "end": "1095900"
  },
  {
    "text": "function is something important and you should respect this shape of the",
    "start": "1095900",
    "end": "1101419"
  },
  {
    "text": "function even if it means that you are going to have one parameter which is not used",
    "start": "1101419",
    "end": "1107200"
  },
  {
    "text": "and in terms of tool checkability because the notion of callback was not clearly defined it was not also easy to",
    "start": "1107960",
    "end": "1113960"
  },
  {
    "text": "detect what it meant to be a callback so new version",
    "start": "1113960",
    "end": "1119000"
  },
  {
    "text": "all name function parameters should be used at least once so no more exception for virtual functions no more exception",
    "start": "1119000",
    "end": "1125000"
  },
  {
    "text": "for callbacks okay I said the rule was too strict did we make it stricter no",
    "start": "1125000",
    "end": "1131000"
  },
  {
    "text": "we all named function parameters should be used at least once there is a very common pattern which is if you have a",
    "start": "1131000",
    "end": "1138140"
  },
  {
    "text": "function parameter with no name of course you are not using it and it's explicit for the user it's very visible",
    "start": "1138140",
    "end": "1143960"
  },
  {
    "text": "that you are not going to use it because you cannot use it it does not have a name so what we wanted to prevent with",
    "start": "1143960",
    "end": "1150559"
  },
  {
    "text": "the preservation of the rule was an unintended parameter sorry a parameter",
    "start": "1150559",
    "end": "1155900"
  },
  {
    "text": "that that was supposed to be used but by mistake was not used and here it's not",
    "start": "1155900",
    "end": "1161059"
  },
  {
    "text": "what's going to happen you have a parameter if you don't give it a name you clearly say that you should not you",
    "start": "1161059",
    "end": "1167419"
  },
  {
    "text": "don't want to use it so it's okay so did we we changed the rule that way and you could use a newsparator and then",
    "start": "1167419",
    "end": "1175100"
  },
  {
    "text": "parameters or in some cases when you have a parameter which is using debug build but not in release build or this",
    "start": "1175100",
    "end": "1180500"
  },
  {
    "text": "kind of stuff you could also decorate the parameters that may be unused attributes which also untolds this",
    "start": "1180500",
    "end": "1187400"
  },
  {
    "text": "situation",
    "start": "1187400",
    "end": "1189760"
  },
  {
    "text": "next rule it's not just a rule it's a Well it sorry it wasn't it's going to be a set of rules now but remember dynamic",
    "start": "1193700",
    "end": "1201500"
  },
  {
    "text": "memory management um the restaurant were in Old miswa which has Dynamic it memory allocation",
    "start": "1201500",
    "end": "1208160"
  },
  {
    "text": "should not be used and the focus of that was mostly that",
    "start": "1208160",
    "end": "1214280"
  },
  {
    "text": "safety critical software is very often embedded software where you want to have",
    "start": "1214280",
    "end": "1219320"
  },
  {
    "text": "strict limits for how long it takes to perform an operation",
    "start": "1219320",
    "end": "1224720"
  },
  {
    "text": "and typically doing a new it's very hard to have a strict limit an upper Bond of",
    "start": "1224720",
    "end": "1231919"
  },
  {
    "text": "the execution execution time of new and the second point is you could have memory exertion you could have memory",
    "start": "1231919",
    "end": "1238760"
  },
  {
    "text": "fragmentation all of that means that it's not it's not so easy to use dynamic",
    "start": "1238760",
    "end": "1245299"
  },
  {
    "text": "memory in this kind of software um but it does not make sense for all",
    "start": "1245299",
    "end": "1251360"
  },
  {
    "text": "kind of uh safety critical software depends on the hardware you run on it depends on what you're trying to do and",
    "start": "1251360",
    "end": "1258080"
  },
  {
    "text": "when Mishra was written initially the kind of software that in the ad in mind",
    "start": "1258080",
    "end": "1263480"
  },
  {
    "text": "was a software for ABS anti-blocking system which is quite simple now this",
    "start": "1263480",
    "end": "1270860"
  },
  {
    "text": "kind of software that you have in mind when we write software for automotive industry is autonomous vehicle so it's",
    "start": "1270860",
    "end": "1276740"
  },
  {
    "text": "more complex it needs more data it needs to have complex algorithm it needs to mix the information coming from many",
    "start": "1276740",
    "end": "1284120"
  },
  {
    "text": "kind of different sensors having some every single mandating that everything is statically located",
    "start": "1284120",
    "end": "1291620"
  },
  {
    "text": "add some drawbacks too for example if you if you detect your sounding environment",
    "start": "1291620",
    "end": "1298400"
  },
  {
    "text": "and you said that I'm going to have a statically allocated array of 10 cars around me what happens if you are in a",
    "start": "1298400",
    "end": "1304880"
  },
  {
    "text": "traffic jam in the middle of plus the letter in Paris where you could easily have twice as many cars around you",
    "start": "1304880",
    "end": "1312559"
  },
  {
    "text": "so there are some limits of course but this rule did not really feel nice and",
    "start": "1312559",
    "end": "1319640"
  },
  {
    "text": "another point is I said previously that any work could be deviated and if it was deviated this rule we didn't say",
    "start": "1319640",
    "end": "1326600"
  },
  {
    "text": "anything more in Mr 2008 but still even if you do Dynamic model relocation there",
    "start": "1326600",
    "end": "1332240"
  },
  {
    "text": "are good practices that you should follow so in 2020 X it was changed to have now",
    "start": "1332240",
    "end": "1339860"
  },
  {
    "text": "not just one rule but a set of four the same rule as before because for some",
    "start": "1339860",
    "end": "1345260"
  },
  {
    "text": "soft trades make sense it's still under discussion it will be kept or not I don't know what is the current status",
    "start": "1345260",
    "end": "1350720"
  },
  {
    "text": "because I missed the last meeting but maybe it's still going to be the same rule as before just because for some",
    "start": "1350720",
    "end": "1357740"
  },
  {
    "text": "software it makes sense and then there are another setup for",
    "start": "1357740",
    "end": "1363320"
  },
  {
    "text": "first one is there is memory management and there is Advanced memory management",
    "start": "1363320",
    "end": "1368720"
  },
  {
    "text": "this adverse memory management is when you are playing with a lifetime of objects like placement new",
    "start": "1368720",
    "end": "1374960"
  },
  {
    "text": "who really needs to write plasma new the guy who writes to the vector and only",
    "start": "1374960",
    "end": "1380120"
  },
  {
    "text": "him almost you should not use plasma new in your code anywhere stood under",
    "start": "1380120",
    "end": "1387320"
  },
  {
    "text": "if you can explain me what student means I would be very happy I I avoid the specification of surlanda",
    "start": "1387320",
    "end": "1394039"
  },
  {
    "text": "several times it's still that corner to me I I know some cases when you should use it but yeah it's stuck it's so",
    "start": "1394039",
    "end": "1401600"
  },
  {
    "text": "complex the reason of overall line types so over a lot of new when you can",
    "start": "1401600",
    "end": "1406640"
  },
  {
    "text": "specify additional parameters this kind of stuff this is two complex for normal",
    "start": "1406640",
    "end": "1411860"
  },
  {
    "text": "software and once again it doesn't mean that you're not allowed to use it it means that if you decide you want to use",
    "start": "1411860",
    "end": "1418039"
  },
  {
    "text": "it this piece of code will require review by a specialist who can watch",
    "start": "1418039",
    "end": "1424159"
  },
  {
    "text": "that this is written correctly and that's perfectly fine to me because if I ever watch code with student I",
    "start": "1424159",
    "end": "1431780"
  },
  {
    "text": "would probably ask to someone who knows what is really doing about it if I can't find somewhere like that which could",
    "start": "1431780",
    "end": "1437780"
  },
  {
    "text": "difficult so another kind of rule which means that even if you do dynamic memory location",
    "start": "1437780",
    "end": "1444340"
  },
  {
    "text": "don't do this kind of crazy stuff unless you really need to go crazy",
    "start": "1444340",
    "end": "1449419"
  },
  {
    "text": "next one a pointer to a non-complete class should not be deleted because if you do that",
    "start": "1449419",
    "end": "1455480"
  },
  {
    "text": "it's a defined Behavior okay clear they're easy to detect I don't think",
    "start": "1455480",
    "end": "1461480"
  },
  {
    "text": "this requires any more comments next one dynamic memory shall be managed",
    "start": "1461480",
    "end": "1468140"
  },
  {
    "text": "automatically oh yes we are doing C plus plus 11 at least we don't do new and delete we use Smart",
    "start": "1468140",
    "end": "1476360"
  },
  {
    "text": "monitors so this is what this rule is about when you look at memory do it with",
    "start": "1476360",
    "end": "1481640"
  },
  {
    "text": "Mac unique do it with Vector don't don't use new new square brackets please don't",
    "start": "1481640",
    "end": "1487460"
  },
  {
    "text": "use Shasta when you are manipulating strings please please please even if you just do this kind of if you",
    "start": "1487460",
    "end": "1495140"
  },
  {
    "text": "have a code which does not respect that and you make it respect that it will change your life and for the good",
    "start": "1495140",
    "end": "1502400"
  },
  {
    "text": "um so this other rule which is not targeting a same subject as before",
    "start": "1502400",
    "end": "1507799"
  },
  {
    "text": "exactly it's not targeting directly memory exertion it's targeting memory bugs but not in a way that we actually",
    "start": "1507799",
    "end": "1515000"
  },
  {
    "text": "detect the bugs but in a way that if we follow this rule the bug will just not",
    "start": "1515000",
    "end": "1520400"
  },
  {
    "text": "happen which is better because detecting a memory bug is not decidable which",
    "start": "1520400",
    "end": "1525919"
  },
  {
    "text": "means that your any tool will have lots of false positive and false negative it's hard to do that detain detecting",
    "start": "1525919",
    "end": "1533059"
  },
  {
    "text": "this piece of cake and it prevents the bug and it makes the cut easier to read",
    "start": "1533059",
    "end": "1542059"
  },
  {
    "text": "next one is a it's not I don't think",
    "start": "1542059",
    "end": "1547220"
  },
  {
    "text": "it's quite controversial if you define your own you and delete you should you should match them because if you have",
    "start": "1547220",
    "end": "1553580"
  },
  {
    "text": "your own custom new but not the matching custom delete it's going to be UB if you are using it",
    "start": "1553580",
    "end": "1560919"
  },
  {
    "text": "so we replace one rule that was strict but that",
    "start": "1561679",
    "end": "1568840"
  },
  {
    "text": "did not really care about what happened when you deviate from it by a set of rules that tries to cover the full",
    "start": "1568840",
    "end": "1575600"
  },
  {
    "text": "situation there next one single entry single exit I",
    "start": "1575600",
    "end": "1582440"
  },
  {
    "text": "don't know if you have heard of it if you've been unlucky enough to to hear about it so it's a rule that says a",
    "start": "1582440",
    "end": "1589220"
  },
  {
    "text": "function should have a signal point of exit at the end of the function so when you're searching for an item you",
    "start": "1589220",
    "end": "1596179"
  },
  {
    "text": "cannot just have a loop and if you find it you return the value this does not respect single",
    "start": "1596179",
    "end": "1601520"
  },
  {
    "text": "increasingly is it what this rule says is that instead of that you should have a Boolean fund and in your Loop",
    "start": "1601520",
    "end": "1609080"
  },
  {
    "text": "condition you have and not fund so that you can break on the loop early if you found the object I have only one return",
    "start": "1609080",
    "end": "1615620"
  },
  {
    "text": "on the end it's ugly and the problem is that is that it's",
    "start": "1615620",
    "end": "1621020"
  },
  {
    "text": "required by iuc standard and it's it's very funny because the",
    "start": "1621020",
    "end": "1629059"
  },
  {
    "text": "full content of this standard is about generic requirement like you should test",
    "start": "1629059",
    "end": "1634580"
  },
  {
    "text": "your code you should make sure that you hire people with the right level of qualification and there is only one step that talks",
    "start": "1634580",
    "end": "1642200"
  },
  {
    "text": "about code itself and it's this single entries single exit and almost everybody",
    "start": "1642200",
    "end": "1648520"
  },
  {
    "text": "agrees that it's not that good and there was a relative function which was about sorry already got them which was about",
    "start": "1648520",
    "end": "1655220"
  },
  {
    "text": "set jump and long jump and this yes you should not use them it's no not just one",
    "start": "1655220",
    "end": "1661580"
  },
  {
    "text": "so what's about 2020x well we removed we keep the stuff about",
    "start": "1661580",
    "end": "1668059"
  },
  {
    "text": "uh long ramp because this one was good but we removed this requirement and",
    "start": "1668059",
    "end": "1673700"
  },
  {
    "text": "really it was uh but to be able to remove this",
    "start": "1673700",
    "end": "1680059"
  },
  {
    "text": "requirement we make a lot of effort first we went to the guy who worked this other standard which is a official",
    "start": "1680059",
    "end": "1686480"
  },
  {
    "text": "standard that people in the industry should respect because and we say we asked them okay",
    "start": "1686480",
    "end": "1692480"
  },
  {
    "text": "what do you exactly mean by single exit and basically the answer we got was why",
    "start": "1692480",
    "end": "1698900"
  },
  {
    "text": "are you asking us so complex questions okay because you are constraining people",
    "start": "1698900",
    "end": "1705320"
  },
  {
    "text": "who are writing software all over the world whatever the language so that this is why we're asking the question well",
    "start": "1705320",
    "end": "1711380"
  },
  {
    "text": "it's too technical for us why did you write it in the first place then okay I'm going to",
    "start": "1711380",
    "end": "1718880"
  },
  {
    "text": "oh so we we look further we looked when this kind of rule was established it was",
    "start": "1718880",
    "end": "1725539"
  },
  {
    "text": "established at the time when there was no structural programming it was established at the time when",
    "start": "1725539",
    "end": "1730580"
  },
  {
    "text": "the only instruction you add was jumping and basically what we claim now is that",
    "start": "1730580",
    "end": "1737120"
  },
  {
    "text": "by default C plus plus respects this guideline because if you do a return",
    "start": "1737120",
    "end": "1743360"
  },
  {
    "text": "from inside of a function you will always go back to one exit point which is the color of the function",
    "start": "1743360",
    "end": "1751039"
  },
  {
    "text": "so if we if if you don't if you just look at the way the rule is written single exit as okay single entry is not",
    "start": "1751039",
    "end": "1757520"
  },
  {
    "text": "a problem unless until we have core routines but miss",
    "start": "1757520",
    "end": "1762760"
  },
  {
    "text": "recipient so we don't have to think about core routines yet so single entry",
    "start": "1762760",
    "end": "1767840"
  },
  {
    "text": "is not a problem the problem is single exit and people have read single exit as you should have only one written keyword",
    "start": "1767840",
    "end": "1774380"
  },
  {
    "text": "in a function but what we when we try to look at the the why beyond the single exit this is",
    "start": "1774380",
    "end": "1782240"
  },
  {
    "text": "not what it's about it's about sort of programming it's about the fact that when you exit a function you should just",
    "start": "1782240",
    "end": "1788480"
  },
  {
    "text": "you should know where you are going back and even if you have several returns in your function you're always going back",
    "start": "1788480",
    "end": "1794360"
  },
  {
    "text": "to the same point to the color of the function so according to this interpretation which I",
    "start": "1794360",
    "end": "1800659"
  },
  {
    "text": "believe and we believe was the correct one we can have several returns and steel",
    "start": "1800659",
    "end": "1806480"
  },
  {
    "text": "claims that record follows single interesting galaxies from the physical philosophical point of view",
    "start": "1806480",
    "end": "1814240"
  },
  {
    "text": "and also to languages are are the same nowadays so if other languages say that",
    "start": "1814240",
    "end": "1820520"
  },
  {
    "text": "they should have only one return maybe they should try to change our mindset about it",
    "start": "1820520",
    "end": "1826640"
  },
  {
    "text": "and I'm I'm pretty sure that this change that we did Will I mean people white God according to misra I I'm pretty sure",
    "start": "1826640",
    "end": "1833720"
  },
  {
    "text": "that they will love us",
    "start": "1833720",
    "end": "1836679"
  },
  {
    "text": "yeah that's what I say we didn't think about core routines yet because we are focusing C plus with 17.",
    "start": "1843440",
    "end": "1848910"
  },
  {
    "text": "[Music] it happens with score routines I I don't know really it's a",
    "start": "1848910",
    "end": "1855220"
  },
  {
    "text": "for loops so in Mishra 2008 there were lots of rules about for Loops I'm not going to",
    "start": "1860659",
    "end": "1867320"
  },
  {
    "text": "read all the details about it but basically what did they say they said that the forth Loop should increment",
    "start": "1867320",
    "end": "1875179"
  },
  {
    "text": "with a fixed step and do nothing else why because the",
    "start": "1875179",
    "end": "1880520"
  },
  {
    "text": "purpose is to make sure that the loop will end basically and one way to ensure that it with n is",
    "start": "1880520",
    "end": "1888100"
  },
  {
    "text": "it restricts a lot what can be written as a follow-up so it has the notion of there is there",
    "start": "1888100",
    "end": "1895039"
  },
  {
    "text": "should be one and only one Loop counter the loop Contour should be incremented in the third part of the four and",
    "start": "1895039",
    "end": "1901520"
  },
  {
    "text": "nowhere else and this kind of stuff by by your fixed increment which does not depend on the body of the for this kind",
    "start": "1901520",
    "end": "1907580"
  },
  {
    "text": "of stuff so what happened in all Industries where people have to",
    "start": "1907580",
    "end": "1913880"
  },
  {
    "text": "write misra compliance code they never wrote for Loops they were while Loops which didn't have any",
    "start": "1913880",
    "end": "1920179"
  },
  {
    "text": "restriction so and and this really restricts the way",
    "start": "1920179",
    "end": "1928399"
  },
  {
    "text": "we convert The Forum so how did we change it oops well we went further",
    "start": "1928399",
    "end": "1935539"
  },
  {
    "text": "we just say you should never write while Loops for Loops do while loops never",
    "start": "1935539",
    "end": "1942919"
  },
  {
    "text": "of course it's misra so when you say we should not it means that if you have to do it you you can do it but you should",
    "start": "1942919",
    "end": "1948740"
  },
  {
    "text": "be careful big why because those Loops are more complex to write than typical code if you use a Wenger base for Loop",
    "start": "1948740",
    "end": "1955340"
  },
  {
    "text": "to iterate on a collection there it's it's deadly it's uh easy to do that",
    "start": "1955340",
    "end": "1962360"
  },
  {
    "text": "there is no risk of going one step two two far on one step before",
    "start": "1962360",
    "end": "1967820"
  },
  {
    "text": "you should write I go you should right conducing algorithms the higher level of abstraction and they",
    "start": "1967820",
    "end": "1975380"
  },
  {
    "text": "describe better what you are doing instead of writing a loop writer search whiter any of the whiter rotates like",
    "start": "1975380",
    "end": "1983539"
  },
  {
    "text": "so what what we say basically is that for common cases there are ways to right",
    "start": "1983539",
    "end": "1989899"
  },
  {
    "text": "Loops without using those rule those low level looping structures you should use those weights to work",
    "start": "1989899",
    "end": "1996559"
  },
  {
    "text": "loops and in the other cases well you did yet but that's good because it means that",
    "start": "1996559",
    "end": "2002320"
  },
  {
    "text": "someone else will have to check that your Loop is going to end it's not going to uh to Loop over the same element over",
    "start": "2002320",
    "end": "2009580"
  },
  {
    "text": "and over again it requires a all basically all Loops these are special",
    "start": "2009580",
    "end": "2014919"
  },
  {
    "text": "love and several people to look at them",
    "start": "2014919",
    "end": "2020039"
  },
  {
    "text": "we have a few exceptions because we know this can be action maybe not appreciated",
    "start": "2020039",
    "end": "2025179"
  },
  {
    "text": "by everybody so we added a few exceptions so so for example we added a very strict version of the iterating of",
    "start": "2025179",
    "end": "2033220"
  },
  {
    "text": "our integral range but just this you would you cannot modify I inside of",
    "start": "2033220",
    "end": "2039820"
  },
  {
    "text": "the body and if you do it like basically this is like the previous set of rules but even more Street",
    "start": "2039820",
    "end": "2047620"
  },
  {
    "text": "we allow a while through because having an infinite loop on purpose",
    "start": "2047620",
    "end": "2053618"
  },
  {
    "text": "is something that you that makes sense in many software and it's obvious that it's infinite it's not a hidden infinite",
    "start": "2053619",
    "end": "2059679"
  },
  {
    "text": "loop it's an explicit infinite loop it's fine we allow looping of our volatile",
    "start": "2059679",
    "end": "2066358"
  },
  {
    "text": "variable because for embedded software it's something that is quite common and we also allow this do while Force",
    "start": "2066359",
    "end": "2075040"
  },
  {
    "text": "which is a trick which can be used a lot by some macros so we allow this specific",
    "start": "2075040",
    "end": "2080679"
  },
  {
    "text": "pattern so instead of trying to have a generic recruit which did not really fit any anybody's need well and which are",
    "start": "2080679",
    "end": "2087940"
  },
  {
    "text": "the very easy Walker one which is use while instead of four we just prevent all versions",
    "start": "2087940",
    "end": "2094060"
  },
  {
    "text": "because there is better solution which is rendered as for Loop and algorithms and we just allow a few very specific",
    "start": "2094060",
    "end": "2101320"
  },
  {
    "text": "patterns I expect this rule to be controversial but I still believe that it's better",
    "start": "2101320",
    "end": "2107440"
  },
  {
    "text": "than the previous situation",
    "start": "2107440",
    "end": "2110640"
  },
  {
    "text": "rule of three oh why is it slide empty but because there was nothing but rule",
    "start": "2114040",
    "end": "2120339"
  },
  {
    "text": "of principle in mysterious 2008. now think about it so the changes we introduced it except",
    "start": "2120339",
    "end": "2126640"
  },
  {
    "text": "that it's no longer rule of three it's rule of five or rule of zero and we it",
    "start": "2126640",
    "end": "2131800"
  },
  {
    "text": "was we when I started to look at it I believe it would be an easy rule to add",
    "start": "2131800",
    "end": "2137079"
  },
  {
    "text": "I mean everybody knows it you should write all five functions or zero of them it's easy actually it's not so easy it's",
    "start": "2137079",
    "end": "2145060"
  },
  {
    "text": "easy to describe it that way in a book for a human reader but don't forget that",
    "start": "2145060",
    "end": "2150339"
  },
  {
    "text": "we want the world to be tool checkable and there are some exceptions there are some special cases and so we had to be",
    "start": "2150339",
    "end": "2157660"
  },
  {
    "text": "more accurate in what we described so basically this rule rule of the rule of",
    "start": "2157660",
    "end": "2162820"
  },
  {
    "text": "five comes in three parts first part is which function",
    "start": "2162820",
    "end": "2167859"
  },
  {
    "text": "should sorry it's not about the function it's about which capability should the",
    "start": "2167859",
    "end": "2172900"
  },
  {
    "text": "class have so we have for example we say in this in this array that we cannot",
    "start": "2172900",
    "end": "2179619"
  },
  {
    "text": "have a type which is um",
    "start": "2179619",
    "end": "2185020"
  },
  {
    "text": "copy constructible but not more consortable if you can copy it you can move it",
    "start": "2185020",
    "end": "2191920"
  },
  {
    "text": "otherwise it's going to break me the assumptions by many user classes so",
    "start": "2191920",
    "end": "2197020"
  },
  {
    "text": "basically and we don't care how you make it move constructible it can be more consultable",
    "start": "2197020",
    "end": "2202839"
  },
  {
    "text": "because you want to move on software because you didn't do anything by default it is because all the members",
    "start": "2202839",
    "end": "2208240"
  },
  {
    "text": "are low move construction there can be many ways to achieve the fact that the class is more suitable but what we say",
    "start": "2208240",
    "end": "2215079"
  },
  {
    "text": "is that if it is move contractable and move assignable",
    "start": "2215079",
    "end": "2221020"
  },
  {
    "text": "then you it can be either known uh not completely constructed but not copy",
    "start": "2221020",
    "end": "2227079"
  },
  {
    "text": "assemble or both suitable copy assignable this these are basically what you do if",
    "start": "2227079",
    "end": "2233500"
  },
  {
    "text": "when you write a class it should this rule I don't expect it to trigger very often except for the case when you not",
    "start": "2233500",
    "end": "2240460"
  },
  {
    "text": "even this no sorry the next Parts is my trigger more often but if you if you",
    "start": "2240460",
    "end": "2246040"
  },
  {
    "text": "don't go too crazy when writing your class you should not have to do anything to respect this part of the rule it's",
    "start": "2246040",
    "end": "2251260"
  },
  {
    "text": "what everybody is doing anyway second part of the rule if you have customized the destructor",
    "start": "2251260",
    "end": "2257500"
  },
  {
    "text": "for your class you need to have customizedcopy and move operation",
    "start": "2257500",
    "end": "2263320"
  },
  {
    "text": "this so this part is basically five of zero and this part is more specifically",
    "start": "2263320",
    "end": "2268720"
  },
  {
    "text": "rule of five if you if you customize the destructor you have to customize the other person you cannot rely on the",
    "start": "2268720",
    "end": "2274420"
  },
  {
    "text": "compiler generated ones and last part of the rule it's in an inheritance hierarchy",
    "start": "2274420",
    "end": "2281859"
  },
  {
    "text": "uh the public Base Class sure should be one of those so it can be an",
    "start": "2281859",
    "end": "2288099"
  },
  {
    "text": "aggregate because there are some use cases when you just want an aggregate to have aggregate initialization uh it can be with a protected",
    "start": "2288099",
    "end": "2295000"
  },
  {
    "text": "non-vertral Destructor when you don't intend to create a objective to",
    "start": "2295000",
    "end": "2300040"
  },
  {
    "text": "manipulate the object to the to destroy basically subject through the base class but most of the time it's going to be a",
    "start": "2300040",
    "end": "2306520"
  },
  {
    "text": "public virtual assortor so this is the most common case and that's already what we've been saying in the supply",
    "start": "2306520",
    "end": "2313180"
  },
  {
    "text": "Community for years when you have a base class you should have a virtual Destructor to the best class",
    "start": "2313180",
    "end": "2318300"
  },
  {
    "text": "and most of the time it should be equal default because if it's not equal",
    "start": "2318300",
    "end": "2323320"
  },
  {
    "text": "default it's going to be customized as return which means that you will have to take care of the other operations",
    "start": "2323320",
    "end": "2329819"
  },
  {
    "text": "okay next one underlying type",
    "start": "2330460",
    "end": "2336820"
  },
  {
    "text": "so if you don't know Mr purpose 2008 you are very lucky because you don't know",
    "start": "2336820",
    "end": "2342280"
  },
  {
    "text": "this this underlying type stuff is trying to put in place a type system in",
    "start": "2342280",
    "end": "2348220"
  },
  {
    "text": "parallel to the simplest step system that makes numeric operations safer to use",
    "start": "2348220",
    "end": "2354960"
  },
  {
    "text": "and so it has basically two Notions it says that an expression has an",
    "start": "2354960",
    "end": "2360780"
  },
  {
    "text": "underlying type so an expression as a type which is what super speed says but",
    "start": "2360780",
    "end": "2365920"
  },
  {
    "text": "it also has an underlying type which is but miss receipts and it has the notion",
    "start": "2365920",
    "end": "2371200"
  },
  {
    "text": "of C value which is the value that is obtained from some kind of expression and then it restricts what can be done",
    "start": "2371200",
    "end": "2377800"
  },
  {
    "text": "with underlying types and C values if you know Mr C there was the essential",
    "start": "2377800",
    "end": "2383560"
  },
  {
    "text": "type model in the misra C which is basically the same just a different name so why did we do that",
    "start": "2383560",
    "end": "2391599"
  },
  {
    "text": "well because athletic conversion can be surprising and now I'm going to rest a",
    "start": "2391599",
    "end": "2397300"
  },
  {
    "text": "little bit and I'm going to to ask you to work a little bit",
    "start": "2397300",
    "end": "2403200"
  },
  {
    "text": "with a small quiz to show you how complex they can be",
    "start": "2403300",
    "end": "2408640"
  },
  {
    "text": "so you can go through this mentee.com website and enter the code which is",
    "start": "2408640",
    "end": "2415180"
  },
  {
    "text": "there and I'm not sure why it's not started",
    "start": "2415180",
    "end": "2421000"
  },
  {
    "text": "I should have a okay it's working now",
    "start": "2421000",
    "end": "2429060"
  },
  {
    "text": "and there you will be able to register to to decrease it's only three questions",
    "start": "2431220",
    "end": "2438820"
  },
  {
    "text": "and I'm not going to show names I just want to see how many people get the right answer this is my main goal so",
    "start": "2438820",
    "end": "2445599"
  },
  {
    "text": "don't be afraid don't be shy",
    "start": "2445599",
    "end": "2448859"
  },
  {
    "text": "eight people nine",
    "start": "2450820",
    "end": "2454380"
  },
  {
    "text": "okay waiting a few more seconds",
    "start": "2463060",
    "end": "2466560"
  },
  {
    "text": "okay let's get started",
    "start": "2468880",
    "end": "2472319"
  },
  {
    "text": "or have a nice Avatar but I will not show it so",
    "start": "2475839",
    "end": "2480880"
  },
  {
    "text": "let's get ready",
    "start": "2480880",
    "end": "2483838"
  },
  {
    "text": "15 seconds",
    "start": "2503260",
    "end": "2506280"
  },
  {
    "text": "oh it's pretty heavily distributed but the right answer wins so it means",
    "start": "2520660",
    "end": "2527800"
  },
  {
    "text": "that at least it's a good sign that the right answer wins but there are quite many people will give a wrong answer",
    "start": "2527800",
    "end": "2534760"
  },
  {
    "text": "even this one I didn't expect this so let's look again at the code",
    "start": "2534760",
    "end": "2542880"
  },
  {
    "text": "the the tricky Point here is that you have a 8-bit value but when you are going to get the",
    "start": "2543640",
    "end": "2550780"
  },
  {
    "text": "complement of this 8-bit value it's going to be promoted and on typical system it's going to be",
    "start": "2550780",
    "end": "2556839"
  },
  {
    "text": "promoted so it's going to be prompted to an INT which on typical system is 32 bits",
    "start": "2556839",
    "end": "2562359"
  },
  {
    "text": "so then when you are shifting you are not only Shifting the E so this one if",
    "start": "2562359",
    "end": "2567820"
  },
  {
    "text": "you just if you just flipped it it would be EF and then when you shift it it",
    "start": "2567820",
    "end": "2574960"
  },
  {
    "text": "would be e but because it's converted to it before it's going to be ffff e f and",
    "start": "2574960",
    "end": "2581859"
  },
  {
    "text": "then you shift it it's then going to be ffff I mean that's crazy",
    "start": "2581859",
    "end": "2590020"
  },
  {
    "text": "that's super explosive and it comes from C so this is one of the things that he will not be allowed by the new miserable",
    "start": "2590020",
    "end": "2596400"
  },
  {
    "text": "uh about this type compatibility let's go to the next question next Quiz",
    "start": "2596400",
    "end": "2604740"
  },
  {
    "text": "oh I hope you can all read",
    "start": "2609220",
    "end": "2612838"
  },
  {
    "text": "you also have 30 seconds",
    "start": "2614619",
    "end": "2617940"
  },
  {
    "text": "10 seconds",
    "start": "2631060",
    "end": "2633839"
  },
  {
    "text": "okay so the the right answer wins again which is quite good but still there are",
    "start": "2644680",
    "end": "2650140"
  },
  {
    "text": "some errors and the fact that there are some errors proves that there is interest in writing those Miserables about it",
    "start": "2650140",
    "end": "2656260"
  },
  {
    "text": "I'm glad that there are some errors if everybody was right I would say I spent several days of my life for nothing it",
    "start": "2656260",
    "end": "2664660"
  },
  {
    "text": "so let's have a look at the code so the first part is just great crazy nothing fancy there the interesting part is that",
    "start": "2664660",
    "end": "2670960"
  },
  {
    "text": "here you have two elements two steps that happens when you do a narithmetic operation like that first you have",
    "start": "2670960",
    "end": "2676599"
  },
  {
    "text": "promotion and then you have a usual arithmetic conversion promotion is going",
    "start": "2676599",
    "end": "2682839"
  },
  {
    "text": "to convert this to int",
    "start": "2682839",
    "end": "2686819"
  },
  {
    "text": "is going to do nothing because you will go you're going to subtract a need from an ins which is okay",
    "start": "2688079",
    "end": "2694240"
  },
  {
    "text": "so actually what it does so now you have an inch which is 41 and it which is 42.",
    "start": "2694240",
    "end": "2699940"
  },
  {
    "text": "41 minus 42 is -1 which is an inch which there is no",
    "start": "2699940",
    "end": "2705720"
  },
  {
    "text": "no overflow no underflow no nothing just in a person with ins so this code is defined and it's going to call the",
    "start": "2705720",
    "end": "2712480"
  },
  {
    "text": "overload with int surprising",
    "start": "2712480",
    "end": "2718500"
  },
  {
    "text": "and the next one which is the tricky one those one were easy",
    "start": "2718660",
    "end": "2725460"
  },
  {
    "text": "five seconds and just one answer",
    "start": "2752560",
    "end": "2756300"
  },
  {
    "text": "okay one Dam inside the end we'll see this time though the right one is not",
    "start": "2757660",
    "end": "2764319"
  },
  {
    "text": "winning but this one is really tricky the previous one was useful for real code",
    "start": "2764319",
    "end": "2771099"
  },
  {
    "text": "this one is just for the nice trick about it so this value",
    "start": "2771099",
    "end": "2777220"
  },
  {
    "text": "if you add three to eight and a 32-bit system it will wrap around and is equal",
    "start": "2777220",
    "end": "2782319"
  },
  {
    "text": "n bit be equal to two okay on in 32-bits and what happens is that",
    "start": "2782319",
    "end": "2787839"
  },
  {
    "text": "if you are doing this you are at what is the type of those literals well there is",
    "start": "2787839",
    "end": "2794680"
  },
  {
    "text": "a u at the end so the type of the literal is some unsigned type which size of the enzyme type well the",
    "start": "2794680",
    "end": "2801880"
  },
  {
    "text": "rule is that there is another preferences which is like if it fits to an inch it will be an unsigned otherwise",
    "start": "2801880",
    "end": "2808599"
  },
  {
    "text": "it can be a unsigned logger and sign long long the smallest one that fits so I and J will be unsigned ins here and so",
    "start": "2808599",
    "end": "2818440"
  },
  {
    "text": "when you do the addition that's going to be wrap around and it's going to be equal to two so the first answer is",
    "start": "2818440",
    "end": "2825339"
  },
  {
    "text": "going to write two but here it's not an operation in the code itself it's an operation the",
    "start": "2825339",
    "end": "2831220"
  },
  {
    "text": "preprocessor and the proposal has different rules than the rest of the code because why not",
    "start": "2831220",
    "end": "2838240"
  },
  {
    "text": "so for the preprocessor those literals are always the longest possible literal",
    "start": "2838240",
    "end": "2844660"
  },
  {
    "text": "so it's unsigned long log and when you do the oppression with on syndrome there is no wrap around but",
    "start": "2844660",
    "end": "2849819"
  },
  {
    "text": "it's not going to be equal to 2. thank you nice one this one",
    "start": "2849819",
    "end": "2857560"
  },
  {
    "text": "so back to the back to the slides",
    "start": "2857560",
    "end": "2864520"
  },
  {
    "text": "if I can find a way to go back to the slide yeah here it is",
    "start": "2864520",
    "end": "2870780"
  },
  {
    "text": "so I think that the crease has proven to you that just doing some simple operations is not so easy in C plus plus",
    "start": "2871180",
    "end": "2879400"
  },
  {
    "text": "so we wrote some rules about types and",
    "start": "2879400",
    "end": "2884740"
  },
  {
    "text": "what we say basically is that we cannot prevent integral promotion maybe if you want the language from the",
    "start": "2884740",
    "end": "2891640"
  },
  {
    "text": "start it will be better to write a language which does not have all these integral promotions but simple space is",
    "start": "2891640",
    "end": "2897160"
  },
  {
    "text": "what it is we cannot change it but what we we can do is we can detect when they open and basically there are two cases",
    "start": "2897160",
    "end": "2903520"
  },
  {
    "text": "that are problematic when they open is when you have an integral promotion or visual admitting conversion that changes",
    "start": "2903520",
    "end": "2909760"
  },
  {
    "text": "the soundness of a type because this is what is surprising and the other one is",
    "start": "2909760",
    "end": "2914980"
  },
  {
    "text": "when it changes the type category of an operon so basically is if you are doing an operation for example that",
    "start": "2914980",
    "end": "2922140"
  },
  {
    "text": "converts from int to float this kind of stuff can be strange in some cases",
    "start": "2922140",
    "end": "2929380"
  },
  {
    "text": "so this is the first thing which is preventing the second thing is when you are assigning we want the target of the",
    "start": "2929380",
    "end": "2935680"
  },
  {
    "text": "assignment to be basically the same as the source of the assignment we don't want to have implicit conversion in assignments because we said implicit is",
    "start": "2935680",
    "end": "2943060"
  },
  {
    "text": "not good and so we force explicitness if you want to do an assignment with different types you should add a cast so",
    "start": "2943060",
    "end": "2949960"
  },
  {
    "text": "that you are explicit in what you are doing it's not exactly that because we we allow the type to be different for",
    "start": "2949960",
    "end": "2956800"
  },
  {
    "text": "example in on some OS when in and long are the same size we are running we allow most assignments from inch to long",
    "start": "2956800",
    "end": "2965020"
  },
  {
    "text": "or from long to in because they are the same size and and you are not going to lose value but even then we don't allow",
    "start": "2965020",
    "end": "2972160"
  },
  {
    "text": "it in all circumstances because if so vertical assignment is not just equal when you call a function parameter",
    "start": "2972160",
    "end": "2978700"
  },
  {
    "text": "passing we call it assignments when you written the value from a function we call it assignment two any kind that",
    "start": "2978700",
    "end": "2984099"
  },
  {
    "text": "associate a value to a variable initialization we call it assignment two and among those assignments one of them",
    "start": "2984099",
    "end": "2990040"
  },
  {
    "text": "is special function caller why is it special because it's it's used for overload resolution",
    "start": "2990040",
    "end": "2996160"
  },
  {
    "text": "so if you if you assign on a system one in",
    "start": "2996160",
    "end": "3001680"
  },
  {
    "text": "turn longer the same size if you are signing into a longer by a long early",
    "start": "3001680",
    "end": "3007440"
  },
  {
    "text": "course int it's okay no problem but if you're calling a function with an end",
    "start": "3007440",
    "end": "3014099"
  },
  {
    "text": "parameter and the function actually is the function selected by overload resolution is a function is a long",
    "start": "3014099",
    "end": "3019920"
  },
  {
    "text": "parameter it's not going to be okay because the target type is not always obvious",
    "start": "3019920",
    "end": "3027720"
  },
  {
    "text": "when you are doing function calls so you we want you to be even more explicit when you are calling functions",
    "start": "3027720",
    "end": "3034880"
  },
  {
    "text": "um basically if you don't do many computation with small types smaller",
    "start": "3035700",
    "end": "3041160"
  },
  {
    "text": "than it those rules will not affect you that often so we spend a lot of time about them",
    "start": "3041160",
    "end": "3047220"
  },
  {
    "text": "because some people do this kind of computation but maybe the IR level advice for that would be",
    "start": "3047220",
    "end": "3052440"
  },
  {
    "text": "do computation with ins this is what C plus plus is designed to do",
    "start": "3052440",
    "end": "3058099"
  },
  {
    "text": "so do you have any questions so there are many more rules I don't know exactly how many right now but it's",
    "start": "3058380",
    "end": "3064319"
  },
  {
    "text": "more like true around 200 in total but I wanted to show you some",
    "start": "3064319",
    "end": "3070619"
  },
  {
    "text": "in cases when those changes I think was interesting",
    "start": "3070619",
    "end": "3075318"
  },
  {
    "text": "no when we started the new version of Miss recipe 20 was not out",
    "start": "3083420",
    "end": "3089339"
  },
  {
    "text": "so we just focus on simplest 17. and hopefully so as you may have noticed",
    "start": "3089339",
    "end": "3096059"
  },
  {
    "text": "there's a big gap between 2008 and next version of Mishra we hope that it's not going to be the",
    "start": "3096059",
    "end": "3102720"
  },
  {
    "text": "same for the future so the maybe after when once this ration is released I'm pretty sure there will be",
    "start": "3102720",
    "end": "3108300"
  },
  {
    "text": "some rest because it's uh it's day long meetings everywhere it's yeah it's it's not an easy task so we will rest but I",
    "start": "3108300",
    "end": "3116280"
  },
  {
    "text": "think that the goal for everybody is uh that once this is done we will look at the episode 20. with the hope of",
    "start": "3116280",
    "end": "3122819"
  },
  {
    "text": "releasing version of Miss Rama often",
    "start": "3122819",
    "end": "3127160"
  },
  {
    "text": "well as I said there is one preview which is not public but which is not",
    "start": "3133640",
    "end": "3139079"
  },
  {
    "text": "privatizer it's you should register to be part of the reviewers and not all",
    "start": "3139079",
    "end": "3144960"
  },
  {
    "text": "guidelines are published reviewers for now just the ones that we believe are good enough and so the mystery document",
    "start": "3144960",
    "end": "3152339"
  },
  {
    "text": "is organized by section corresponding to section of the standard and we don't publish part of a section we wait until",
    "start": "3152339",
    "end": "3157920"
  },
  {
    "text": "the full section is complete before publishing it for this review so if the registering for the review happened",
    "start": "3157920",
    "end": "3164760"
  },
  {
    "text": "maybe six months ago so I don't if you try to register now I don't know if it's still possible but maybe it is if you",
    "start": "3164760",
    "end": "3171180"
  },
  {
    "text": "really want to have a look and maybe to make some comments and and we have not started to review the comments yet but",
    "start": "3171180",
    "end": "3178020"
  },
  {
    "text": "it's supposed to start very soon and about the publication dates it",
    "start": "3178020",
    "end": "3183300"
  },
  {
    "text": "depends on many comments and how long we need to process them I I really cannot say right now we I I we're in the Final",
    "start": "3183300",
    "end": "3190079"
  },
  {
    "text": "Phase but that's all I can say",
    "start": "3190079",
    "end": "3193460"
  },
  {
    "text": "sorry okay I didn't say yeah I said do your",
    "start": "3199140",
    "end": "3207900"
  },
  {
    "text": "computational hint I I really meant don't do computation with small types and safety is not such a small type so",
    "start": "3207900",
    "end": "3214440"
  },
  {
    "text": "to me it's okay to do a competition in size T and if we look back at the talk about in the meet up yesterday or",
    "start": "3214440",
    "end": "3220500"
  },
  {
    "text": "probably the talk that about signed or unsigned or computations",
    "start": "3220500",
    "end": "3226440"
  },
  {
    "text": "I really don't know yet uh I have good arguments in both Direction and I have not made up my mind yet",
    "start": "3226440",
    "end": "3234380"
  },
  {
    "text": "okay so about so about my company the tools that we provide so we right now we",
    "start": "3245359",
    "end": "3251880"
  },
  {
    "text": "most of the rules provide our rules that we designed ourselves in inside of the company which some in some cases are",
    "start": "3251880",
    "end": "3258839"
  },
  {
    "text": "related to misra 2008. there are a few rules that exactly match Mr 2008",
    "start": "3258839",
    "end": "3264619"
  },
  {
    "text": "and some rules that are inspired from Nissan 2008 but with differences because at the time we believe that they were",
    "start": "3264619",
    "end": "3270720"
  },
  {
    "text": "too strict in many cases we have plans to support this new version of misra but",
    "start": "3270720",
    "end": "3277859"
  },
  {
    "text": "right now it's uh we we have not released anything like that and we are in discussion with",
    "start": "3277859",
    "end": "3284220"
  },
  {
    "text": "between my company the Mr Consortium what what we are allowed to do because mystery is not an open standard so we",
    "start": "3284220",
    "end": "3289859"
  },
  {
    "text": "need to sign an agreement to be able to develop roots that much misra so it's uh work in progress",
    "start": "3289859",
    "end": "3298520"
  },
  {
    "text": "and basically it's not totally validated yet but there are several",
    "start": "3302819",
    "end": "3310920"
  },
  {
    "text": "companies and inside of the misra group they are basically people who come from the alternative industry and people who",
    "start": "3310920",
    "end": "3316200"
  },
  {
    "text": "are tour vendors and um I I think we might take an approach which is different from other vendors",
    "start": "3316200",
    "end": "3322380"
  },
  {
    "text": "which is we at sonar Source we we really believe in making tools for",
    "start": "3322380",
    "end": "3328140"
  },
  {
    "text": "developers not for people from who QA want to certify stuff so we might uh we have tools which are",
    "start": "3328140",
    "end": "3336540"
  },
  {
    "text": "quite well integrated into the development lifecycle for example we have ways to block pull requests if",
    "start": "3336540",
    "end": "3342780"
  },
  {
    "text": "you're not happy we have one tool that works inside of the ID and so a goal",
    "start": "3342780",
    "end": "3347819"
  },
  {
    "text": "might not be to have a full coverage of Mishra but to to propose some tools to",
    "start": "3347819",
    "end": "3353400"
  },
  {
    "text": "so that in the everyday work people will write code which is mostly misra",
    "start": "3353400",
    "end": "3359700"
  },
  {
    "text": "compliant and then maybe if they want to go to the final stage of compliance I we",
    "start": "3359700",
    "end": "3365460"
  },
  {
    "text": "don't know if Auto will be the best one or not maybe another tool that runs for one week will be required at that time",
    "start": "3365460",
    "end": "3371760"
  },
  {
    "text": "but we want to be our main focus is really to be integ fully integrated into the development life cycle and other",
    "start": "3371760",
    "end": "3378540"
  },
  {
    "text": "tools that runs fast and gives answers fast because we believe there is I value in that",
    "start": "3378540",
    "end": "3384980"
  },
  {
    "text": "so any other question right thank you",
    "start": "3387540",
    "end": "3395359"
  }
]