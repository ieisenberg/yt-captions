[
  {
    "start": "0",
    "end": "129000"
  },
  {
    "text": "all right we're good to go uh thanks everyone for joining my talk help I've",
    "start": "5420",
    "end": "10740"
  },
  {
    "text": "created a surface monolith and even though this monolith looks a bit sad I promise you no monoliths have been hurt",
    "start": "10740",
    "end": "17400"
  },
  {
    "text": "when I Was preparing this presentation I just have to take my word for it",
    "start": "17400",
    "end": "23100"
  },
  {
    "text": "um so my name is Mark Dyker I'm a senior developer advocate for averley where we enable developers to build live and",
    "start": "23100",
    "end": "28680"
  },
  {
    "text": "collaborative experiences based on web soccer technology I've been in Microsoft MVP in the Azure",
    "start": "28680",
    "end": "34500"
  },
  {
    "text": "area for the last four years and yeah my primary focus has always been serverless and Azure functions and durable",
    "start": "34500",
    "end": "40800"
  },
  {
    "text": "functions I'm a big fan of pixel art mainly creating pixel art so the picture on the",
    "start": "40800",
    "end": "47280"
  },
  {
    "text": "left here is the ab defl team and you can probably make out of which on which one is me but you may have seen some of",
    "start": "47280",
    "end": "54180"
  },
  {
    "text": "my pixel artwork in some other places and who is using vs gold as their code",
    "start": "54180",
    "end": "59399"
  },
  {
    "text": "editor ID here if you just go to serum quite quite a lot okay okay so who has installed the yeah the most brilliant",
    "start": "59399",
    "end": "66060"
  },
  {
    "text": "extension of them all vs code bets and now I see only only one so yeah",
    "start": "66060",
    "end": "71520"
  },
  {
    "text": "there's there's okay so so people this is fioscope bets it's a very tiny extension for for free Scout it does",
    "start": "71520",
    "end": "78960"
  },
  {
    "text": "absolutely nothing you can just load some some pets in there there are about I think 10 different pets you can choose",
    "start": "78960",
    "end": "84479"
  },
  {
    "text": "from they just run around a bit you can throw a ball and they fetch the ball and that it is completely pointless um but",
    "start": "84479",
    "end": "90479"
  },
  {
    "text": "but it's fun so I've created more than half of the of these animals there so please go install that",
    "start": "90479",
    "end": "97320"
  },
  {
    "text": "this is the first Shameless self-promotion there'll be two more in this talk and I'm not sorry for it",
    "start": "97320",
    "end": "104280"
  },
  {
    "text": "all right so let's let's get down to business uh surface monoliths um I'll ask you some more questions later on but",
    "start": "104280",
    "end": "110640"
  },
  {
    "text": "I will talk about how agility is impacted so when you have a badly designed serverless application uh how",
    "start": "110640",
    "end": "116700"
  },
  {
    "text": "complexity is involved and how you can remove or remove from complexity in your function app and I'll give you three",
    "start": "116700",
    "end": "123240"
  },
  {
    "text": "different strategies if you've decided that you have a surface model and you want to break it up",
    "start": "123240",
    "end": "129780"
  },
  {
    "start": "129000",
    "end": "368000"
  },
  {
    "text": "so first things first and serverless monthly so how many of you are developing service applications using",
    "start": "129780",
    "end": "136500"
  },
  {
    "text": "function apps on azure okay quite some people okay so you're in the right session that's good perfect so",
    "start": "136500",
    "end": "142800"
  },
  {
    "text": "when how many of you think you are currently having a surface monolith",
    "start": "142800",
    "end": "149099"
  },
  {
    "text": "some some doubts some and it may be okay maybe I can help you eat realize some things today Perfect all right",
    "start": "149099",
    "end": "156300"
  },
  {
    "text": "so when you create serverless apps on Azure I think it's easy and I don't use the word easy that much because when",
    "start": "156300",
    "end": "163739"
  },
  {
    "text": "it's easy for me it might not be for you and the other way around um but I really think once you you can",
    "start": "163739",
    "end": "169319"
  },
  {
    "text": "either create it in the portal itself so you immediately have a function app where you create it in whatever ID you",
    "start": "169319",
    "end": "175019"
  },
  {
    "text": "want but as soon as you have deployed a function app because that's the unit of deployment in Azure once you have that",
    "start": "175019",
    "end": "181080"
  },
  {
    "text": "and you have one function it's very easy to keep adding functions to it and it's",
    "start": "181080",
    "end": "186300"
  },
  {
    "text": "probably a bit too easy to do that right it's also as far as I know no limit on how many functions you can add to a",
    "start": "186300",
    "end": "192360"
  },
  {
    "text": "function app so yeah it's both a blessing and a curse I think so it's very likely that over time if",
    "start": "192360",
    "end": "199019"
  },
  {
    "text": "you keep adding stuff to it your responsibility of that function it will grow and will grow and yeah maybe after",
    "start": "199019",
    "end": "204659"
  },
  {
    "text": "a couple of months or after a year you think did I just create a surplus monolith now",
    "start": "204659",
    "end": "210540"
  },
  {
    "text": "maybe maybe let's first do some definitions so I'm also always equal to",
    "start": "210540",
    "end": "216840"
  },
  {
    "text": "Wikipedia and in software engineering a monolithic application describes a software application that is designed",
    "start": "216840",
    "end": "222959"
  },
  {
    "text": "without modularity so I think the main key is here that it's designed so it's intentional without modularity",
    "start": "222959",
    "end": "231299"
  },
  {
    "text": "so let's also look at the definition of modularity modularity is a degree to",
    "start": "231299",
    "end": "236459"
  },
  {
    "text": "which A System's components may be separated and recombined often with the benefits of flexibility and Variety in",
    "start": "236459",
    "end": "242819"
  },
  {
    "text": "use all right but I think that's that's pretty clear um so now let's have a look at",
    "start": "242819",
    "end": "248400"
  },
  {
    "text": "traditional architectures right we used to have these very big chunky application servers that contain our presentation logic and our business",
    "start": "248400",
    "end": "254819"
  },
  {
    "text": "logic and our data access logic and that application server that was not a modular that was not flexible at all",
    "start": "254819",
    "end": "261720"
  },
  {
    "text": "right so that was a monolith because it was also designed like a model X vectors",
    "start": "261720",
    "end": "267479"
  },
  {
    "text": "it's intended use and what was just to be that weapon complete big bulky thing",
    "start": "267479",
    "end": "273720"
  },
  {
    "text": "but these days we have a completely different architecture right it's much more modular on its own right we have",
    "start": "273720",
    "end": "279600"
  },
  {
    "text": "separate function apps probably a bit some cues here and there more function apps some storage and of course this",
    "start": "279600",
    "end": "285120"
  },
  {
    "text": "single sequence of apps and cues and storage is not a complete replacement of your entire application server you had",
    "start": "285120",
    "end": "291240"
  },
  {
    "text": "traditionally probably you have this right you have many more apps dozens of them all into",
    "start": "291240",
    "end": "297060"
  },
  {
    "text": "connected in some way many different types of storage now if you just look at one function app",
    "start": "297060",
    "end": "304080"
  },
  {
    "text": "so does does this function app does it need to be designed with modularity with",
    "start": "304080",
    "end": "310560"
  },
  {
    "text": "flexibility in mind just that the content of the single function app I don't think so because the whole",
    "start": "310560",
    "end": "317580"
  },
  {
    "text": "flexibility modularity in this system is in the architecture right it's having multiple function apps and decoupling",
    "start": "317580",
    "end": "324720"
  },
  {
    "text": "with queues and multiple types of storage fit for a certain purpose so the function app itself it doesn't",
    "start": "324720",
    "end": "330840"
  },
  {
    "text": "need to be modular right so I think actually every function app should be a",
    "start": "330840",
    "end": "335940"
  },
  {
    "text": "monolith right it should be designed with only one purpose in mind it should do one thing and it should do it well",
    "start": "335940",
    "end": "342539"
  },
  {
    "text": "all right so who here now comes to realization that they are having monolithic function",
    "start": "342539",
    "end": "349199"
  },
  {
    "text": "apps yeah a few few more all right so and monolith is definitely not equal",
    "start": "349199",
    "end": "355440"
  },
  {
    "text": "to bad right it should it should be a conscious decision right it's a it's a design decision",
    "start": "355440",
    "end": "361979"
  },
  {
    "text": "what you should worry about though is does your serverless moment slow you down",
    "start": "361979",
    "end": "368120"
  },
  {
    "start": "368000",
    "end": "542000"
  },
  {
    "text": "so let's talk about agility oh by the way I have a lot of these drawings of happy and sad monoliths but",
    "start": "368940",
    "end": "375479"
  },
  {
    "text": "I still need a name for them so if you have a good suggestion for a name of this monolith please tweet it at me or something so I",
    "start": "375479",
    "end": "382199"
  },
  {
    "text": "I'd like to know quotes from Martin Fowler we eventually",
    "start": "382199",
    "end": "387960"
  },
  {
    "text": "agreed on agile as we felt that captured the adaptiveness and response to change which we felt was so important to our",
    "start": "387960",
    "end": "393660"
  },
  {
    "text": "approach well these days every organization is an agile organization right we are all",
    "start": "393660",
    "end": "398759"
  },
  {
    "text": "working Sprints and if a business decides to go in a different direction One Sprint later we could theoretically",
    "start": "398759",
    "end": "404460"
  },
  {
    "text": "go in that direction but does your technical stack does it allow you to be agile as well right that",
    "start": "404460",
    "end": "410819"
  },
  {
    "text": "that's a bit of the question here so in your Sprint you do a lot of different things right so you create",
    "start": "410819",
    "end": "416639"
  },
  {
    "text": "code to add new features you document it you test it you fix it and you deploy it and when you're just starting out on a",
    "start": "416639",
    "end": "423120"
  },
  {
    "text": "new project a new Green Fields project all these Stars take a certain amount of time about let's say a half year or a year in",
    "start": "423120",
    "end": "430139"
  },
  {
    "text": "I'm pretty sure that it will take more time to do all these things and again that's because of the",
    "start": "430139",
    "end": "436139"
  },
  {
    "text": "responsibility it's growing right you're adding more lines of code to your application Things become more complex it becomes more complex to to test",
    "start": "436139",
    "end": "442740"
  },
  {
    "text": "uh head this is not specific for for surface it's it's related to all kinds of software development but it also",
    "start": "442740",
    "end": "447780"
  },
  {
    "text": "applies to your function apps so it's very likely that your agility drops a bit over time because your",
    "start": "447780",
    "end": "454199"
  },
  {
    "text": "application is growing of course that's not what we want but we need to be aware of this drop in agility",
    "start": "454199",
    "end": "459840"
  },
  {
    "text": "so how do we then measure agility well I'm not sure how many agile coaches are here but they probably want to throw",
    "start": "459840",
    "end": "465180"
  },
  {
    "text": "around with story points and burn down charts and stuff like that which I'm not a very big fan of to be honest",
    "start": "465180",
    "end": "471720"
  },
  {
    "text": "um I'll offer some alternatives to decide how agile or you can be",
    "start": "471720",
    "end": "477419"
  },
  {
    "text": "and you can decide for your own if you uh if you're happy with the with those kpis and metrics one of these",
    "start": "477419",
    "end": "483960"
  },
  {
    "text": "Alternatives is called lead time so then you'd look at the difference when a task appears on the backlog and when the work",
    "start": "483960",
    "end": "489900"
  },
  {
    "text": "is completed meaning and running in production but the downside of this is of course priorities change right so a task could",
    "start": "489900",
    "end": "495599"
  },
  {
    "text": "be on a backlog for weeks or months so you're mainly looking at process and stuff like that so not really is your",
    "start": "495599",
    "end": "501900"
  },
  {
    "text": "function app maybe having some difficulty of technical complexity",
    "start": "501900",
    "end": "508080"
  },
  {
    "text": "so another alternative would be to look at the cycle time so that's the difference between the work actually started and when the work's completed",
    "start": "508080",
    "end": "516060"
  },
  {
    "text": "uh the only downside here is yeah you usually start your work early on in the",
    "start": "516060",
    "end": "521099"
  },
  {
    "text": "Sprint and you develop probably in the last day of the Sprint so it's very likely that your cycle time is equal to your Sprint duration",
    "start": "521099",
    "end": "527519"
  },
  {
    "text": "so it's also not really relevant to monitor that because I'm pretty sure that stays constant so monitoring cycle time as an",
    "start": "527519",
    "end": "534720"
  },
  {
    "text": "indication for agility only works when you deploy immediately after you've you've completed your work",
    "start": "534720",
    "end": "541940"
  },
  {
    "text": "I think a good indicator for for agility and could be this mean time to recover or mttr it's it's a well-known kpi from",
    "start": "541980",
    "end": "549540"
  },
  {
    "start": "542000",
    "end": "807000"
  },
  {
    "text": "Incident Management and well what does it actually mean if you look at your downtime or your",
    "start": "549540",
    "end": "557360"
  },
  {
    "text": "degraded performance and you divide it over the number of incidents you had in a certain time window and that's your",
    "start": "557360",
    "end": "563700"
  },
  {
    "text": "mttr so as an example let's say within a month we have 12 hours of downtime caused by six individual incidents our",
    "start": "563700",
    "end": "571380"
  },
  {
    "text": "mttr is two hours now just having this number doesn't",
    "start": "571380",
    "end": "576600"
  },
  {
    "text": "doesn't mean a lot right it depends by organization I mean two hours of downtime for a financial",
    "start": "576600",
    "end": "581779"
  },
  {
    "text": "organization might they might lose a lot of money so it's a big deal but for another organization it's not such a big",
    "start": "581779",
    "end": "587220"
  },
  {
    "text": "deal to have this two hours what is important is if you keep an eye",
    "start": "587220",
    "end": "592380"
  },
  {
    "text": "on this right so every Sprint or every month make sure you calculate this mdtr and see if it goes up or down and if it",
    "start": "592380",
    "end": "598440"
  },
  {
    "text": "goes up and it means something is going on",
    "start": "598440",
    "end": "602300"
  },
  {
    "text": "so when you are tackling an issue and so you have an issue in production there are globally these four phases you need",
    "start": "604200",
    "end": "609779"
  },
  {
    "text": "to go through and you need to make sure that all of these phases are going smoothly because that will lower your",
    "start": "609779",
    "end": "615540"
  },
  {
    "text": "mttr so this is nothing really yet to do with",
    "start": "615540",
    "end": "620580"
  },
  {
    "text": "um how well your technology stack is maybe just a bit but you have to make sure that each of these four phases is",
    "start": "620580",
    "end": "627300"
  },
  {
    "text": "really a smooth and quick experience so it means finding the root cause changing the code testing code and then",
    "start": "627300",
    "end": "634380"
  },
  {
    "text": "deploying the fix so I'm going to give you a couple of tips how you can make sure that this",
    "start": "634380",
    "end": "639600"
  },
  {
    "text": "mttr cycle how it can be a smooth experience so first finally the root cause right",
    "start": "639600",
    "end": "646380"
  },
  {
    "text": "well you need to be in the know of course of what's going on so of course maybe a client can complain that",
    "start": "646380",
    "end": "651899"
  },
  {
    "text": "something is not working but ideally you have some logging in place that that's older to with what's going on",
    "start": "651899",
    "end": "659100"
  },
  {
    "text": "um by defaults Azure functions already has some default looking behavior and stuff like that but it's very likely",
    "start": "659100",
    "end": "665579"
  },
  {
    "text": "that you want to customize and tweak that a bit right so don't just go with the defaults I've put in a link here in",
    "start": "665579",
    "end": "670920"
  },
  {
    "text": "these slides and by the way if I'm using a lot of links in these slides and I will make them available after the session",
    "start": "670920",
    "end": "676920"
  },
  {
    "text": "um the host adjacent file you can overwrite dozens and dozens of settings related to logging and application",
    "start": "676920",
    "end": "682560"
  },
  {
    "text": "insights so when you are about to go to production with your function app please make sure you tweak some of these",
    "start": "682560",
    "end": "688320"
  },
  {
    "text": "settings because you can change a lot of things related to sampling or excluding certain types of including certain types",
    "start": "688320",
    "end": "694740"
  },
  {
    "text": "so please make sure you recover this another thing that's related and also",
    "start": "694740",
    "end": "701519"
  },
  {
    "text": "important is please also capture business events so don't only monitor",
    "start": "701519",
    "end": "706620"
  },
  {
    "text": "the technical things that go on in your application but also capture business events and I'll come back to this later",
    "start": "706620",
    "end": "713279"
  },
  {
    "text": "but it really helps with the communication as well right so if the customer is complaining about that",
    "start": "713279",
    "end": "719279"
  },
  {
    "text": "something doesn't work for them hopefully you've also seen that in your own logs and you you can use it to",
    "start": "719279",
    "end": "724320"
  },
  {
    "text": "correlate the technical issues with the business events that are going on",
    "start": "724320",
    "end": "729920"
  },
  {
    "text": "finally don't just do capturing of events and do logging but also makes him actionable so in case of azure it means",
    "start": "730860",
    "end": "738000"
  },
  {
    "text": "you can use um Azure alerts you can choose dozens of different of signals and Define thresholds who have Dynamic thresholds",
    "start": "738000",
    "end": "744540"
  },
  {
    "text": "and make actions on them like sending an email or posting it to webhook so make sure you have actionable logs so you can",
    "start": "744540",
    "end": "751800"
  },
  {
    "text": "be in the know even maybe for a client knows what's going on",
    "start": "751800",
    "end": "757279"
  },
  {
    "text": "the other two faces I put them on one slides because they are really ideally you want to be very quick in having",
    "start": "757620",
    "end": "763920"
  },
  {
    "text": "access to the code changing the code and testing the change right so this cycle is called the inner development Loop and",
    "start": "763920",
    "end": "770639"
  },
  {
    "text": "it's really important that this is a good smooth experience yeah this is also in your day-to-day work but especially",
    "start": "770639",
    "end": "775800"
  },
  {
    "text": "when there's an hyper issue going on and you need to fix something uh luckily I think tooling wise we have",
    "start": "775800",
    "end": "782459"
  },
  {
    "text": "come quite far with this already because there are things like Dev containers and a GitHub code spaces make it very easy",
    "start": "782459",
    "end": "788279"
  },
  {
    "text": "to have this inner develop a really smooth experience right you just have to invest some time in it and configure",
    "start": "788279",
    "end": "793800"
  },
  {
    "text": "your Dev container and all of its dependencies and maybe some setup scripts that as soon as you need to change your goals you can spin up that",
    "start": "793800",
    "end": "801139"
  },
  {
    "text": "Dev container and you can start to work and test immediately",
    "start": "801139",
    "end": "806660"
  },
  {
    "start": "807000",
    "end": "947000"
  },
  {
    "text": "well what can you do about deployments and having that a smooth experience well just automate everything right so don't",
    "start": "807899",
    "end": "815700"
  },
  {
    "text": "just have a pipeline to build and test and publish your code of your function app but also make sure you have spin up",
    "start": "815700",
    "end": "821760"
  },
  {
    "text": "your infrastructure as well right there are lots of infrastructure there's code Solutions these days so please make sure",
    "start": "821760",
    "end": "827760"
  },
  {
    "text": "you do that right so either if it's an arm or bicep or at Azure developer CLI",
    "start": "827760",
    "end": "833639"
  },
  {
    "text": "which is quite new or you terraform of gloomy it's it's countless these days",
    "start": "833639",
    "end": "839720"
  },
  {
    "text": "the last day for deployment it might seem very obvious but please don't disrupt production when you deploy a new",
    "start": "840120",
    "end": "845579"
  },
  {
    "text": "version right I mean if production is already down then this is of course not an issue but if periodic production is",
    "start": "845579",
    "end": "850740"
  },
  {
    "text": "running happily yeah whenever you either change a configuration or you push your new code your function app will restart",
    "start": "850740",
    "end": "857040"
  },
  {
    "text": "right so it won't be available for like 20 or 30 seconds so and if you're working in a high",
    "start": "857040",
    "end": "862200"
  },
  {
    "text": "volume environment where lots of requests come in and you might lose quite some money if your app is not",
    "start": "862200",
    "end": "869100"
  },
  {
    "text": "available so you could do two things either you can use your deployment slots that are",
    "start": "869100",
    "end": "874380"
  },
  {
    "text": "available with function apps so you can create a staging slot and push your new code there or your configuration there",
    "start": "874380",
    "end": "880320"
  },
  {
    "text": "and then Azure functions will make sure it will warm up this new code on this",
    "start": "880320",
    "end": "885600"
  },
  {
    "text": "new instance and once this new instance is there you can swap the slots so that's a great way of not having any",
    "start": "885600",
    "end": "891540"
  },
  {
    "text": "downtime an alternative is to put your function app behind the queue so for instance we",
    "start": "891540",
    "end": "897899"
  },
  {
    "text": "have a website and whenever someone place an order it plays a message on a queue and the function app is then triggered based on the queue",
    "start": "897899",
    "end": "904680"
  },
  {
    "text": "but now when you want to deploy to your function app it's it's not available it will restart but then the website is",
    "start": "904680",
    "end": "911399"
  },
  {
    "text": "unaffected right there's only a bit of a delay in handling because queues will be added to the message will be added to",
    "start": "911399",
    "end": "917339"
  },
  {
    "text": "the queue but as soon as the function app stop running again the queue will be drained and you have business normal so",
    "start": "917339",
    "end": "922920"
  },
  {
    "text": "you just have a bit of a delay in processing in general queues are always the solution in these event driven",
    "start": "922920",
    "end": "929040"
  },
  {
    "text": "architectures so I gave you some tips of how to",
    "start": "929040",
    "end": "935880"
  },
  {
    "text": "measure agility and how you can make sure that all of these faces when you do some debugging are smooth but it could",
    "start": "935880",
    "end": "941519"
  },
  {
    "text": "still of course be that your mttr is increasing right so and that has to do with complexity",
    "start": "941519",
    "end": "947040"
  },
  {
    "start": "947000",
    "end": "1092000"
  },
  {
    "text": "so let's let's have a look there so there are two types of complexity there's essential complexity and that's",
    "start": "947040",
    "end": "954540"
  },
  {
    "text": "caused by the nature of the business problem and that can't be easily reduced so you can think of the traveling",
    "start": "954540",
    "end": "959760"
  },
  {
    "text": "salesman problem right you have to find the shortest path between several locations Now That's essential",
    "start": "959760",
    "end": "964860"
  },
  {
    "text": "complexity the other type is accidental complexity and that's caused by the decisions we",
    "start": "964860",
    "end": "970560"
  },
  {
    "text": "make because we decide to use a certain language a certain framework certain packages and certain architecture",
    "start": "970560",
    "end": "978180"
  },
  {
    "text": "um and this can be reduced because we can make different decisions so let's have a look at this accidental",
    "start": "978180",
    "end": "984240"
  },
  {
    "text": "complexity so as an example here's our function app and we've decided that it became",
    "start": "984240",
    "end": "991139"
  },
  {
    "text": "unmaintainable it contains too many functions and it becomes too hard to to test so we decided to actually separate",
    "start": "991139",
    "end": "998459"
  },
  {
    "text": "all of these functionalities into two and into four separate function apps",
    "start": "998459",
    "end": "1003920"
  },
  {
    "text": "that can be a good decision sure but you have to make sure you actually make a clean cut because you can end up with a",
    "start": "1003920",
    "end": "1011240"
  },
  {
    "text": "distributed monolith well what's that that's it appears like a distributed system with four separate",
    "start": "1011240",
    "end": "1017839"
  },
  {
    "text": "components but something is not completely modular and yet right there",
    "start": "1017839",
    "end": "1022880"
  },
  {
    "text": "are still relations somewhere and usually they are a bit hidden so you're not really aware of this",
    "start": "1022880",
    "end": "1029900"
  },
  {
    "text": "an example could be yes we have decided to create a separate function apps in Azure for it but for every function app",
    "start": "1029900",
    "end": "1036860"
  },
  {
    "text": "you also need a storage account but it could be that it was either forgotten or decided not to do to also",
    "start": "1036860",
    "end": "1044120"
  },
  {
    "text": "create separate storage accounts for these function apps so we could still have one shared storage account for all",
    "start": "1044120",
    "end": "1049640"
  },
  {
    "text": "these function apps which ideally you shouldn't do because you can imagine that maybe in one or two",
    "start": "1049640",
    "end": "1055760"
  },
  {
    "text": "years or so had this responsible responsibility of your teams is changing and one of these function apps moves to",
    "start": "1055760",
    "end": "1061520"
  },
  {
    "text": "another team and that team then ends up with doing this maintenance office function app but yeah they didn't",
    "start": "1061520",
    "end": "1067820"
  },
  {
    "text": "realize that there was still ACX storage accounts so yeah there could be lots of issues with that",
    "start": "1067820",
    "end": "1073400"
  },
  {
    "text": "the same goes for shared configuration that could also be a risk so even if you do decide to make a cut",
    "start": "1073400",
    "end": "1081140"
  },
  {
    "text": "and take things apart make sure you make a very deep cut and take everything apart including the infrastructure and",
    "start": "1081140",
    "end": "1087679"
  },
  {
    "text": "all of the configuration and stuff",
    "start": "1087679",
    "end": "1092080"
  },
  {
    "start": "1092000",
    "end": "1254000"
  },
  {
    "text": "so what I'm saying is complexity does not simply evaporate complexity usually moves around so in case of going from",
    "start": "1094039",
    "end": "1100880"
  },
  {
    "text": "one function app to four function apps sure we have four smaller function apps with less code and it's probably easier",
    "start": "1100880",
    "end": "1106220"
  },
  {
    "text": "to to maintain those individual function apps but we aren't regarding now",
    "start": "1106220",
    "end": "1111380"
  },
  {
    "text": "probably more git repos more CI CD pipelines and more monitoring and logging things like that so we are",
    "start": "1111380",
    "end": "1117980"
  },
  {
    "text": "moving complexity away from from the goal to maybe more to operations",
    "start": "1117980",
    "end": "1123580"
  },
  {
    "text": "so there are different things of how you can actually move complexity out of your way so I'll have one of the examples I",
    "start": "1124220",
    "end": "1130640"
  },
  {
    "text": "just gave you a move code to another app that that's one and another one could be using",
    "start": "1130640",
    "end": "1136220"
  },
  {
    "text": "third-party packages for instance if you want to do a validation of your business objects or their system called a fluent validation",
    "start": "1136220",
    "end": "1142760"
  },
  {
    "text": "in.net which which I really like so I really hope you don't write your own validation Logic for this",
    "start": "1142760",
    "end": "1149419"
  },
  {
    "text": "um I have another example could be like creating realistic test data there's a focus for that",
    "start": "1149419",
    "end": "1154700"
  },
  {
    "text": "so please make sure before you write any goals look what's out there right because you can you can save yourself",
    "start": "1154700",
    "end": "1160460"
  },
  {
    "text": "quite some time but again about him moving complexity complexity does not go away completely",
    "start": "1160460",
    "end": "1166039"
  },
  {
    "text": "because now you are dependent of course on a third party package third party Library",
    "start": "1166039",
    "end": "1171260"
  },
  {
    "text": "and you probably have to keep up to date with it right because there might be security issues related to them and stuff like that",
    "start": "1171260",
    "end": "1178299"
  },
  {
    "text": "if you can take it even further maybe you could look into even complete third-party services instead of packages",
    "start": "1178700",
    "end": "1185840"
  },
  {
    "text": "itself right one instance or an example could be maybe you need to update send",
    "start": "1185840",
    "end": "1191299"
  },
  {
    "text": "updates from your backend to a front-end and you can do that based on web soccer technology you could host your own",
    "start": "1191299",
    "end": "1198080"
  },
  {
    "text": "websocket server and do everything yourself but there are lots of services out there that can do that for you for",
    "start": "1198080",
    "end": "1203240"
  },
  {
    "text": "instance the signalr and Azure web pops up but another could be ably",
    "start": "1203240",
    "end": "1208400"
  },
  {
    "text": "Shameless off for ocean number two just one left",
    "start": "1208400",
    "end": "1213100"
  },
  {
    "text": "another example of how to move complexity out of your way if you want to do function chaining so if you go",
    "start": "1213740",
    "end": "1219260"
  },
  {
    "text": "from function a and then function B and then function C and hopefully you're not doing this with HTTP calls right because",
    "start": "1219260",
    "end": "1225620"
  },
  {
    "text": "then function a needs to know about function B and B needs to know about C so yeah we don't want to have this",
    "start": "1225620",
    "end": "1230840"
  },
  {
    "text": "coupling maybe you're thinking about this you want to maybe use cues so function a has an output binding to a q",
    "start": "1230840",
    "end": "1236600"
  },
  {
    "text": "and a function B is then triggered on the same queue and so on this is a perfect solution very nice but",
    "start": "1236600",
    "end": "1243200"
  },
  {
    "text": "it does require you that you create the infrastructure for creating the cues and also making sure the configuration of",
    "start": "1243200",
    "end": "1248720"
  },
  {
    "text": "the function apps is in order to look at those queues and stuff like that so there is a thing that can help you",
    "start": "1248720",
    "end": "1255320"
  },
  {
    "start": "1254000",
    "end": "1504000"
  },
  {
    "text": "and it's called durable functions so who's heard of durable functions quite some people already that that's",
    "start": "1255320",
    "end": "1261200"
  },
  {
    "text": "very nice okay maybe most it is not new for you but but still has all the Drupal functions you can",
    "start": "1261200",
    "end": "1266900"
  },
  {
    "text": "create workflows or orchestrations in code um and these workflow functions are",
    "start": "1266900",
    "end": "1274160"
  },
  {
    "text": "stateful it means that they're actually persisted to um to storage by default",
    "start": "1274160",
    "end": "1279260"
  },
  {
    "text": "it's in a storage account but these days can also be SQL or eventops there are more options these days and because they",
    "start": "1279260",
    "end": "1285500"
  },
  {
    "text": "are stateful it allows you to do all kinds of interesting patterns right you can have really long running functions or they can be triggered or you can use",
    "start": "1285500",
    "end": "1291860"
  },
  {
    "text": "timers and you can wait for events and it's really super powerful so I'll give you a few examples what you",
    "start": "1291860",
    "end": "1297860"
  },
  {
    "text": "could what you can do with these um these dual functions so this is an orchestration function and it's",
    "start": "1297860",
    "end": "1304700"
  },
  {
    "text": "identified by this orchestration trigger attribute which allows you to have this this context and in this context you can make",
    "start": "1304700",
    "end": "1311539"
  },
  {
    "text": "a call to an activity and an activity call is usually that does the actual let's say call to a database or call to",
    "start": "1311539",
    "end": "1317780"
  },
  {
    "text": "another endpoint and so on so what we do here is we do a chaining of three functions activity function a b",
    "start": "1317780",
    "end": "1323840"
  },
  {
    "text": "and c and we're doing that by this await context dot call activity async and we",
    "start": "1323840",
    "end": "1329900"
  },
  {
    "text": "expect then a type string back we provide the name of the activity function and we provided input in this",
    "start": "1329900",
    "end": "1336799"
  },
  {
    "text": "case we provide null as an input and the orchestrator will now schedule",
    "start": "1336799",
    "end": "1341840"
  },
  {
    "text": "this call to the activity function but it will also wait until the result has come back",
    "start": "1341840",
    "end": "1347059"
  },
  {
    "text": "so it won't continue so once the result is back from activity function a we can use that as an input",
    "start": "1347059",
    "end": "1353299"
  },
  {
    "text": "for the next activity function and so on",
    "start": "1353299",
    "end": "1358000"
  },
  {
    "text": "and finally when a result of C is already the orchestrator is done",
    "start": "1358460",
    "end": "1364179"
  },
  {
    "text": "another example of durable functions is you can do this fan out fan in pattern and that's really powerful because it's",
    "start": "1364580",
    "end": "1370220"
  },
  {
    "text": "usually quite difficult to do um let me go back first so when you want",
    "start": "1370220",
    "end": "1375620"
  },
  {
    "text": "this is very useful if you want to do execute several functions that are not related to one another and you want to",
    "start": "1375620",
    "end": "1381440"
  },
  {
    "text": "execute them as much in parallel as possible but then after they have been executed you still want to wait and",
    "start": "1381440",
    "end": "1387260"
  },
  {
    "text": "aggregate the results so this is an example again of an",
    "start": "1387260",
    "end": "1392840"
  },
  {
    "text": "orchestration function that does that what I'm doing first is I create a list",
    "start": "1392840",
    "end": "1398059"
  },
  {
    "text": "of tasks string and string was the output type of the activity functions and I'm adding the tasks to call the",
    "start": "1398059",
    "end": "1405919"
  },
  {
    "text": "activity functions but we're not awaiting them here yet so maybe you're not scheduling and executing these",
    "start": "1405919",
    "end": "1411500"
  },
  {
    "text": "activities here yet we basically have the definition that we are going to execute them later",
    "start": "1411500",
    "end": "1417320"
  },
  {
    "text": "so I'm doing the same for function B and function C so now I have three tasks in",
    "start": "1417320",
    "end": "1422780"
  },
  {
    "text": "this task list and at this moment the await task went all at this moment we'll",
    "start": "1422780",
    "end": "1428240"
  },
  {
    "text": "do the scheduling and execution of these activities and the orchestration will then wait until all of these results",
    "start": "1428240",
    "end": "1435200"
  },
  {
    "text": "have been returned and we can return that from the orchestrator",
    "start": "1435200",
    "end": "1440840"
  },
  {
    "text": "so it's really powerful and useful thing the third and final example is something",
    "start": "1440840",
    "end": "1447200"
  },
  {
    "text": "that is a bit weird I'm not sure if I'm really happy with it that you can do it but you can use an orchestrator to do",
    "start": "1447200",
    "end": "1453440"
  },
  {
    "text": "chaining of ship orchestrators so now it gets maybe it's a bit meta so here's an",
    "start": "1453440",
    "end": "1459380"
  },
  {
    "text": "example of an orchestrator that calls with three different sub orchestrators in a function chain so it looks very",
    "start": "1459380",
    "end": "1466039"
  },
  {
    "text": "much like the regular function chaining but now the method is called call Super orchestrator async",
    "start": "1466039",
    "end": "1472100"
  },
  {
    "text": "and although this is nice and you can create really flexible and modular",
    "start": "1472100",
    "end": "1477340"
  },
  {
    "text": "function apps with this but just a couple slides before I said",
    "start": "1477340",
    "end": "1482419"
  },
  {
    "text": "well I don't think it's up to the function you have to be very flexible and modular right I think a function app",
    "start": "1482419",
    "end": "1488419"
  },
  {
    "text": "should just be do one thing and one thing very well and I think when you go very deep it's",
    "start": "1488419",
    "end": "1493600"
  },
  {
    "text": "orchestrators calling other shop orchestrators which you can potentially call another shop orchestrators you can go many levels deep and there's also no",
    "start": "1493600",
    "end": "1500360"
  },
  {
    "text": "limit on how far you go with this so it can be a bit tricky I think so in general dual functions are great I think",
    "start": "1500360",
    "end": "1507020"
  },
  {
    "start": "1504000",
    "end": "1562000"
  },
  {
    "text": "it's the best thing out there for Azure functions so for the people who are not using it definitely have a look at it",
    "start": "1507020",
    "end": "1513260"
  },
  {
    "text": "if you want to know more about some Advanced use cases I've put a link here to one of my GitHub repos that contains",
    "start": "1513260",
    "end": "1519260"
  },
  {
    "text": "some some very nice combinations of fan in find out and waiting for events and using timers",
    "start": "1519260",
    "end": "1525679"
  },
  {
    "text": "but definitely don't overuse it right because it's also very easy to start an orchestrator and keep adding activity",
    "start": "1525679",
    "end": "1532340"
  },
  {
    "text": "functions to it but yeah and then you end up with calling like 50 different activities in one oxidator and that's",
    "start": "1532340",
    "end": "1538039"
  },
  {
    "text": "also not not a good sign so it's great but keep it small",
    "start": "1538039",
    "end": "1544840"
  },
  {
    "text": "right so now it's time for the bad news so let's say we you do think okay I have this monolithic application but it's",
    "start": "1547039",
    "end": "1553460"
  },
  {
    "text": "very hard to maintain so yeah we have to have the difficult conversation to uh to break it up into smaller parts",
    "start": "1553460",
    "end": "1560360"
  },
  {
    "text": "so I'm going to go through three different approaches how you can decide how you break up your your function app",
    "start": "1560360",
    "end": "1567380"
  },
  {
    "text": "so the first one is based on planet context the second one based on resilience and the third one on",
    "start": "1567380",
    "end": "1573200"
  },
  {
    "text": "scalability so who who knows about who heard about",
    "start": "1573200",
    "end": "1579679"
  },
  {
    "text": "Banner context and domain driven design okay quite some people perfect",
    "start": "1579679",
    "end": "1585679"
  },
  {
    "text": "um context is a concept from the main different design it's a really powerful way to design complex systems when the",
    "start": "1585679",
    "end": "1593179"
  },
  {
    "text": "design is really really Central and we a bounded context is a partial",
    "start": "1593179",
    "end": "1599539"
  },
  {
    "text": "implementation of a part of the domain So within this balanced context that",
    "start": "1599539",
    "end": "1605059"
  },
  {
    "text": "could be a web application if it could be a function app it could also be multiple function apps but in general",
    "start": "1605059",
    "end": "1610820"
  },
  {
    "text": "it's a implementation of a part of the domain so as an example I have the e-commerce domain and a partial",
    "start": "1610820",
    "end": "1619340"
  },
  {
    "text": "implementation of the domain could be the product catalog and that could be a service that contains all of our descriptions of the products and and",
    "start": "1619340",
    "end": "1626179"
  },
  {
    "text": "images and so on and another implementation over part of the domain is the pricing band context",
    "start": "1626179",
    "end": "1633799"
  },
  {
    "text": "right it can also be a servers and we can call it to get the price based on the demand and availability",
    "start": "1633799",
    "end": "1641080"
  },
  {
    "text": "another important thing with domain driven design is ubiquitous language so that identifies the terms and",
    "start": "1642200",
    "end": "1648860"
  },
  {
    "text": "Concepts within a balanced context that are unambiguous and agreed upon by all stakeholders",
    "start": "1648860",
    "end": "1654919"
  },
  {
    "text": "it's a bit of a long sentence but it comes down to make sure you use proper naming for your events and your entities",
    "start": "1654919",
    "end": "1661700"
  },
  {
    "text": "within your function app that are understood by everyone right so that makes it very easy then to communicate",
    "start": "1661700",
    "end": "1666919"
  },
  {
    "text": "about with your business or with your end users and it also means that if you do logging",
    "start": "1666919",
    "end": "1672140"
  },
  {
    "text": "inside your function as well again and make sure you also capture these business related events around these",
    "start": "1672140",
    "end": "1677779"
  },
  {
    "text": "domain objects so as an example this is an account",
    "start": "1677779",
    "end": "1683480"
  },
  {
    "text": "entity but it can have a very different meaning depending on the bounded context so if we are mentioning an account in a",
    "start": "1683480",
    "end": "1690799"
  },
  {
    "text": "billing context we probably didn't mean a bank account with with a certain currency and a debit or credit and a",
    "start": "1690799",
    "end": "1696919"
  },
  {
    "text": "bank account number and so on but when we talk about account in a shopping basket then it's probably more",
    "start": "1696919",
    "end": "1702620"
  },
  {
    "text": "like a user profile information right with some logging information and some some address information and",
    "start": "1702620",
    "end": "1710259"
  },
  {
    "text": "so in general the mean driven design also gives some guidelines about themes and balanced contexts and they say we",
    "start": "1712640",
    "end": "1719240"
  },
  {
    "text": "should have one team work on one balanced context a team can also work on multiple",
    "start": "1719240",
    "end": "1725299"
  },
  {
    "text": "balanced contexts but should not have multiple teams work within one ballot context right so it's all about keeping",
    "start": "1725299",
    "end": "1731480"
  },
  {
    "text": "it simple and to the point and having also effective communication and responsibility so one team should be",
    "start": "1731480",
    "end": "1737600"
  },
  {
    "text": "responsible for one balanced context the same goes for git repos right so if",
    "start": "1737600",
    "end": "1745220"
  },
  {
    "text": "you look at one git repo that should only Implement one Barnard context again it's about Simplicity and making",
    "start": "1745220",
    "end": "1751039"
  },
  {
    "text": "sure that all of the use ubiquitous language and that the intent of the code that you see is super clear for everyone",
    "start": "1751039",
    "end": "1757940"
  },
  {
    "text": "well how does this relate to to our function apps then it means that if you look at one",
    "start": "1757940",
    "end": "1763039"
  },
  {
    "text": "function app that should only Implement one band context right it should not Implement more balanced context",
    "start": "1763039",
    "end": "1769820"
  },
  {
    "text": "and by default then it should also means that our function app uses ubiquitous language right so if your domain users",
    "start": "1769820",
    "end": "1777020"
  },
  {
    "text": "look at the code they should recognize all the domain objects and events that are in there",
    "start": "1777020",
    "end": "1783880"
  },
  {
    "text": "all right so um so I'm asking you the next time you look at your own function apps um if you didn't do any domain",
    "start": "1786500",
    "end": "1793580"
  },
  {
    "text": "driven design or whatever take a close look at it try to decide what kind of planet context you you have implemented",
    "start": "1793580",
    "end": "1800600"
  },
  {
    "text": "and maybe you can identify some parts some functionalities that are actually not part of that balanced context but",
    "start": "1800600",
    "end": "1806659"
  },
  {
    "text": "actually belong in different balance contexts right and then it's appropriate to move these things out",
    "start": "1806659",
    "end": "1814059"
  },
  {
    "text": "okay the second strategy is about resilience and I'm throwing in another quote",
    "start": "1815360",
    "end": "1821480"
  },
  {
    "text": "resilient is the ability to provide and maintain an acceptable level of service in the face of false and challenges to",
    "start": "1821480",
    "end": "1828080"
  },
  {
    "text": "normal operations so it's important to realize an acceptable level of service right",
    "start": "1828080",
    "end": "1833899"
  },
  {
    "text": "because things are never 100 up all the time and have faults and stuff like that",
    "start": "1833899",
    "end": "1839299"
  },
  {
    "text": "will always happen right because Cloud stuff breaks continuously it's in the news every every month or so",
    "start": "1839299",
    "end": "1845899"
  },
  {
    "text": "it somehow it always appears to be DNS it's just interesting",
    "start": "1845899",
    "end": "1850940"
  },
  {
    "text": "um but I'm sure a lot of more is going on at these cloud service providers and we don't even know of these things right",
    "start": "1850940",
    "end": "1856820"
  },
  {
    "text": "I mean things feel continuously and um had the responsibility of how",
    "start": "1856820",
    "end": "1862340"
  },
  {
    "text": "resilient your application is um yeah there are different parts with responsibility responsible for for that",
    "start": "1862340",
    "end": "1867980"
  },
  {
    "text": "so I think at the lowest level and the cloud service provider should be responsible for that right so if a hard",
    "start": "1867980",
    "end": "1873799"
  },
  {
    "text": "disk fails or if a machine fails and that they should wheel in a new server rack and so on so this is not up to you",
    "start": "1873799",
    "end": "1880220"
  },
  {
    "text": "they're responsible for it which which is good right but one level above that then I think",
    "start": "1880220",
    "end": "1887059"
  },
  {
    "text": "it's our responsibility because we have to create a system architecture that that's resilient right so it means we",
    "start": "1887059",
    "end": "1892700"
  },
  {
    "text": "have to pick and choose the proper services that are cloud service provider and supports and instead of choosing a",
    "start": "1892700",
    "end": "1900799"
  },
  {
    "text": "very big virtual machine and we host all of our services and database on it we should probably pick and choose and have",
    "start": "1900799",
    "end": "1906440"
  },
  {
    "text": "some static web apps and some function apps and some cosos DB and some table storage to make sure that if one part of",
    "start": "1906440",
    "end": "1913039"
  },
  {
    "text": "the system fails it doesn't bring down the rest of the system",
    "start": "1913039",
    "end": "1917559"
  },
  {
    "text": "at the top level there's the application architecture which should also be resilient so if your application makes a",
    "start": "1919100",
    "end": "1925520"
  },
  {
    "text": "call to a third-party API and we get back an HTTP 500 what does your application do and that does it",
    "start": "1925520",
    "end": "1931940"
  },
  {
    "text": "completely crash or do you simply lock an exception and stop or do you do a retry and how often do you retry and how",
    "start": "1931940",
    "end": "1939740"
  },
  {
    "text": "long do you keep retrying um yeah I think these are usually quite tricky things to to to to think about",
    "start": "1939740",
    "end": "1946039"
  },
  {
    "text": "but it's important to do that right because nothing stays up 100 of the time",
    "start": "1946039",
    "end": "1952039"
  },
  {
    "text": "you also doesn't have to you don't also don't have to write all of these things yourself right they're back just like like Bully which can help with that",
    "start": "1952039",
    "end": "1958220"
  },
  {
    "text": "right you can Define policies about retrying and circuit breaker and these things so you don't have to reinvent the",
    "start": "1958220",
    "end": "1964220"
  },
  {
    "text": "wheel about this so let's say you have a function app",
    "start": "1964220",
    "end": "1969740"
  },
  {
    "text": "with four major functionalities and both of one part of these functionality",
    "start": "1969740",
    "end": "1974960"
  },
  {
    "text": "sometimes fails but it feels in such a way that it breaks down or causes a",
    "start": "1974960",
    "end": "1980539"
  },
  {
    "text": "restart of your function app so in this case it's it's functionality B depth that calls a behavior",
    "start": "1980539",
    "end": "1987140"
  },
  {
    "text": "of course it need that needs to be fixed but let's say hey that fix is not up to you maybe it's a third party package",
    "start": "1987140",
    "end": "1993260"
  },
  {
    "text": "that's responsible or you're calling some certain other servers that cause the issue",
    "start": "1993260",
    "end": "1998779"
  },
  {
    "text": "so what you can do then is make sure you isolate the issue right so isolated in a",
    "start": "1998779",
    "end": "2004539"
  },
  {
    "text": "dedicated function app and in case that function app then fails it doesn't affect the other components",
    "start": "2004539",
    "end": "2010059"
  },
  {
    "text": "right so AC and D just keep keep rolling if you still need to do communication",
    "start": "2010059",
    "end": "2015760"
  },
  {
    "text": "between for instance A and B again you can use a queue right so from function app a you can put the message on the",
    "start": "2015760",
    "end": "2021880"
  },
  {
    "text": "Queue and function B is then triggered on the Queue and in case it's not working function at B well the same",
    "start": "2021880",
    "end": "2028059"
  },
  {
    "text": "happens before when we saw the example with the website messages will just pile up in the queue but either this function",
    "start": "2028059",
    "end": "2034419"
  },
  {
    "text": "of B will restart or we can apply a fix there and the message will be drained",
    "start": "2034419",
    "end": "2039940"
  },
  {
    "text": "again again a code example from Drupal",
    "start": "2039940",
    "end": "2045340"
  },
  {
    "text": "functions because they offer some some nice functionality with when it comes to resilience again this is an example where we do",
    "start": "2045340",
    "end": "2052060"
  },
  {
    "text": "function chaining but now when we call activity function a we use a method",
    "start": "2052060",
    "end": "2058480"
  },
  {
    "text": "called call activity which we try async well I think the name itself is pretty self-explanatory and now we can provide",
    "start": "2058480",
    "end": "2065500"
  },
  {
    "text": "a as a second argument retry options so if we and Supply this argument and then",
    "start": "2065500",
    "end": "2073179"
  },
  {
    "text": "when activity function a fails dual functions will ensure that it will retry maximum of three times and it will first",
    "start": "2073179",
    "end": "2080080"
  },
  {
    "text": "retry after five seconds then it will retry after 10 seconds and then after 20 seconds because of this backoff",
    "start": "2080080",
    "end": "2085780"
  },
  {
    "text": "coefficient of two so I had let's say by again moving some",
    "start": "2085780",
    "end": "2091358"
  },
  {
    "text": "complexity you can use turbo functions to make your function app much more resilient just by adding a few lines of",
    "start": "2091359",
    "end": "2097780"
  },
  {
    "text": "gold which I think is really powerful",
    "start": "2097780",
    "end": "2101520"
  },
  {
    "start": "2102000",
    "end": "2283000"
  },
  {
    "text": "okay let's talk about the the final strategy and that's about a scalability of your of your function app",
    "start": "2103599",
    "end": "2110020"
  },
  {
    "text": "so in computer and social science there are two types of scaling yeah the horizontal scaling which means just",
    "start": "2110020",
    "end": "2116020"
  },
  {
    "text": "increase the amount of machines and there's vertical scaling and that means increase the size of the machine right",
    "start": "2116020",
    "end": "2122079"
  },
  {
    "text": "to have more CPU or memory and by default if I have ever for the",
    "start": "2122079",
    "end": "2127660"
  },
  {
    "text": "whole thing that service is based on it's based on horizontal scaling right we have just a fixed set of CPU memory",
    "start": "2127660",
    "end": "2134200"
  },
  {
    "text": "usually it's very small machines initially and we just add machines and add machines and although this is a",
    "start": "2134200",
    "end": "2140500"
  },
  {
    "text": "vertical stack this is an example of horizontal scaling this is just to mess you up I'm sorry",
    "start": "2140500",
    "end": "2146140"
  },
  {
    "text": "so as an example let's say your function app contains two functions and if they are triggered at exactly the head at the",
    "start": "2146140",
    "end": "2153160"
  },
  {
    "text": "same time they call the yeah the same let's say CPU intensity profile and when that happens your function app",
    "start": "2153160",
    "end": "2160540"
  },
  {
    "text": "will require to be to be scaled out and although yeah that's one of the features of surface right the dynamic",
    "start": "2160540",
    "end": "2166540"
  },
  {
    "text": "scaling out and dynamic scaling it's it's great um but it's also not instant right this",
    "start": "2166540",
    "end": "2173140"
  },
  {
    "text": "guy out that always takes a couple of seconds and again when you're doing doing when you're dealing with really",
    "start": "2173140",
    "end": "2178359"
  },
  {
    "text": "high volume data processing that's also maybe a bit time sensitive maybe the scale out happens a bit too late so you",
    "start": "2178359",
    "end": "2184660"
  },
  {
    "text": "only really want to scale out when it's really necessary so ideally you want to optimize it a bit",
    "start": "2184660",
    "end": "2191380"
  },
  {
    "text": "and so this is what I'm talking about if your requests are increasing functions will will scale out but",
    "start": "2191380",
    "end": "2197619"
  },
  {
    "text": "especially in consumption plan it will be a bit later right I mean if you use Premium plan this is already a bit better",
    "start": "2197619",
    "end": "2203680"
  },
  {
    "text": "um but maybe a bit accelerated but this is what happened it's always a bit later so if you want to minimize this so you",
    "start": "2203680",
    "end": "2211060"
  },
  {
    "text": "still want to scale out but only that is necessary you can do a couple of different things right um",
    "start": "2211060",
    "end": "2216760"
  },
  {
    "text": "so this is our function app with our two functions that will also scale out and the other two like C D they don't cause",
    "start": "2216760",
    "end": "2223480"
  },
  {
    "text": "any any difference so one thing that we could do is we can take out one of the functions that cause",
    "start": "2223480",
    "end": "2230320"
  },
  {
    "text": "the the scale out because now the function app that contains a can use this full resources also B can use this",
    "start": "2230320",
    "end": "2236560"
  },
  {
    "text": "four resources so they're not competing on the same resource anymore Yeah so basically you're just doing some",
    "start": "2236560",
    "end": "2242579"
  },
  {
    "text": "manual horizontal scaling right because you have a different function app it means it will have its own instance when",
    "start": "2242579",
    "end": "2249040"
  },
  {
    "text": "you're running this the other option is actually to use vertical scaling right because we can go",
    "start": "2249040",
    "end": "2255820"
  },
  {
    "text": "from consumption plan to Premium plan and where we are in Premium plan we can actually choose a higher tier which has",
    "start": "2255820",
    "end": "2262060"
  },
  {
    "text": "more cores or that has a more processing power or has more RAM",
    "start": "2262060",
    "end": "2268060"
  },
  {
    "text": "um and maybe um when you are in a higher tier we don't even require a scale out right",
    "start": "2268060",
    "end": "2273880"
  },
  {
    "text": "because we either have more cores or the CPU is faster anyway and so this would be a perfect solution",
    "start": "2273880",
    "end": "2280359"
  },
  {
    "text": "for that as well if you want more control over scaling which I definitely recommend there are",
    "start": "2280359",
    "end": "2287800"
  },
  {
    "text": "some some statistics that you can tweak here and there so on the functional resource itself there's the function f",
    "start": "2287800",
    "end": "2293680"
  },
  {
    "text": "scale limit so in consumption plan things can scale out up to 200 instances which is quite a",
    "start": "2293680",
    "end": "2301060"
  },
  {
    "text": "lot and yeah maybe you have a very small SQL server at at the end of the of your",
    "start": "2301060",
    "end": "2306520"
  },
  {
    "text": "pipeline and yeah SQL Server cannot definitely handle these 200 inches of your function app",
    "start": "2306520",
    "end": "2312160"
  },
  {
    "text": "um so yeah you can actually set a value yourself to make sure that your function app doesn't scale out until this Max",
    "start": "2312160",
    "end": "2318160"
  },
  {
    "text": "number another thing which is important if you use Premium plan or and full up service",
    "start": "2318160",
    "end": "2324760"
  },
  {
    "text": "plan is the functions worker process counts well by default",
    "start": "2324760",
    "end": "2330520"
  },
  {
    "text": "um on the consumption plan you just have one core and one core can run one worker",
    "start": "2330520",
    "end": "2337180"
  },
  {
    "text": "so by default this is one but if you use a higher higher tier for instance Premium plan well then you can have",
    "start": "2337180",
    "end": "2343240"
  },
  {
    "text": "let's say a four core machine which means you can run more workers but it does mean you have to",
    "start": "2343240",
    "end": "2349540"
  },
  {
    "text": "specify this in this setting right so again this can prevent some some",
    "start": "2349540",
    "end": "2354700"
  },
  {
    "text": "unnecessary scaling if you set this value to four",
    "start": "2354700",
    "end": "2359460"
  },
  {
    "text": "another setting if you're really interested in how the scale controller performs ahead of the skill controller",
    "start": "2360579",
    "end": "2365619"
  },
  {
    "text": "sits before your function app and is responsible for deciding when to scale out and when to scale in and it's",
    "start": "2365619",
    "end": "2372099"
  },
  {
    "text": "completely managed by Azure and it's quite like books but if you want some more information about the scale controller you can set this value to",
    "start": "2372099",
    "end": "2378280"
  },
  {
    "text": "true to make sure you have a bit more information inside how this skill controller is working",
    "start": "2378280",
    "end": "2385559"
  },
  {
    "text": "all right so the take-home message for for today for you is please monitor your",
    "start": "2386740",
    "end": "2393220"
  },
  {
    "text": "agility in any way you see fit right I mean still if you use story points fine but I think there are better metrics to",
    "start": "2393220",
    "end": "2398740"
  },
  {
    "text": "to look into but please need to capture it and then be knowledgeable about it and if you see indeed that your agility",
    "start": "2398740",
    "end": "2405280"
  },
  {
    "text": "is dropping please find out what's causing it right and if it's your function app that's being more complex",
    "start": "2405280",
    "end": "2410619"
  },
  {
    "text": "then well you now know what to do and then ask yourself a couple of questions before you add any line of",
    "start": "2410619",
    "end": "2417220"
  },
  {
    "text": "code to your function app right so do I really need to write this or could it be a package or could it be a service",
    "start": "2417220",
    "end": "2424660"
  },
  {
    "text": "is this what you want to add is it a good fit with the rest of the app right so does it fit in the same bounded context or is it actually something else",
    "start": "2424660",
    "end": "2433619"
  },
  {
    "text": "and finally what's the impact regarding resilience and scalability of the app right so is this new functionality does",
    "start": "2433839",
    "end": "2439839"
  },
  {
    "text": "it bring some more risk than the rest of the app is already having or will it require a lot of CPU or RAM and does the",
    "start": "2439839",
    "end": "2447160"
  },
  {
    "text": "other functions also have a higher requirement for that um again all of these things require a",
    "start": "2447160",
    "end": "2452800"
  },
  {
    "text": "bit of knowledge and measurement of what's going on so again logging and monitoring is really important here",
    "start": "2452800",
    "end": "2460020"
  },
  {
    "text": "still have one Shameless self promotion for you and this is my one of my final recent projects ably.pizza.dev so if",
    "start": "2460480",
    "end": "2467980"
  },
  {
    "text": "you're interested in how to visualize your dribble functions workflow in a front end",
    "start": "2467980",
    "end": "2473440"
  },
  {
    "text": "and then you can use this example and and you know there's a link to the GitHub repo in there as well to learn",
    "start": "2473440",
    "end": "2479980"
  },
  {
    "text": "how you can use websocket-based technology to communicate status updates from Apex ends to a front-end",
    "start": "2479980",
    "end": "2487500"
  },
  {
    "text": "if you have any questions now that's totally fine I'll also stick around later if you if you want to talk to me",
    "start": "2488800",
    "end": "2494460"
  },
  {
    "text": "again I will share the slide later on Twitter so please if you want to follow me that that would be great and please",
    "start": "2494460",
    "end": "2500380"
  },
  {
    "text": "don't forget to vote as well thanks everyone [Applause]",
    "start": "2500380",
    "end": "2509540"
  }
]