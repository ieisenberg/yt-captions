[
  {
    "start": "0",
    "end": "40000"
  },
  {
    "text": "oh oh we're on okay all right we have so",
    "start": "8759",
    "end": "14160"
  },
  {
    "text": "much content to get through today because there's so many hidden gems that we really just want to get into this there is a lot of people in here if you",
    "start": "14160",
    "end": "20669"
  },
  {
    "text": "are uncomfortable we have been told to tell you to go to the overflow room it might be more comfortable for you but I",
    "start": "20669",
    "end": "25769"
  },
  {
    "text": "love seeing everyone crowding the staircases that's fantastic if there is a fire I'm sorry you're all gonna die but it will be worth it because you will",
    "start": "25769",
    "end": "33510"
  },
  {
    "text": "learn about some stuff that we don't know all right live David I'm David we have me Damien uh that's gonna get right in it so",
    "start": "33510",
    "end": "40559"
  },
  {
    "start": "40000",
    "end": "40000"
  },
  {
    "text": "you've probably heard about all this stuff right all the stuff in and done they call three blazer G IBC WinForms",
    "start": "40559",
    "end": "47879"
  },
  {
    "text": "and WPF HTTP to new JSON API so did some stuff we're not gonna talk about any of",
    "start": "47879",
    "end": "53609"
  },
  {
    "text": "that today you've seen all that stuff you can go read the blog post about that we're gonna talk about all the commits and all the PRS and the issues that you",
    "start": "53609",
    "end": "60960"
  },
  {
    "text": "probably haven't seen unless you're following github like a hawk so let's start right down the bottom at core CLR",
    "start": "60960",
    "end": "66270"
  },
  {
    "start": "66000",
    "end": "66000"
  },
  {
    "text": "so we have new support in the garbage collector for defining limits about how",
    "start": "66270",
    "end": "72179"
  },
  {
    "text": "much memory your application will use we also have new defaults to those limits so that you'll use less by default so",
    "start": "72179",
    "end": "79110"
  },
  {
    "text": "you can set limits for how much memory the GC has available to it you can set it to a percentage of the amount of",
    "start": "79110",
    "end": "84479"
  },
  {
    "text": "physical memory on the machine or you can say I just want you to be able to use 500 megabytes okay you can set that",
    "start": "84479",
    "end": "90450"
  },
  {
    "text": "fire environment variables right now and there is a runtime api you can use to get information about those limits why",
    "start": "90450",
    "end": "96179"
  },
  {
    "text": "is that interesting you might have code that wants to know how much memory is available before it does something okay the new defaults use much less than",
    "start": "96179",
    "end": "103739"
  },
  {
    "text": "before so if I switch over to this graph this is a graph of one of the HP net core the plaintext benchmark and you can",
    "start": "103739",
    "end": "111030"
  },
  {
    "text": "see that in some time in April we went from using your oscillating between 300",
    "start": "111030",
    "end": "116160"
  },
  {
    "text": "to 500 megabytes of process work a set address space memory straight down to",
    "start": "116160",
    "end": "122789"
  },
  {
    "text": "our just under 100 okay and that was a combination of a few things but one of them was these new defaults",
    "start": "122789",
    "end": "128369"
  },
  {
    "text": "in 2.2 this test used to use 1.3 gigabytes of address space memory now it",
    "start": "128369",
    "end": "135569"
  },
  {
    "text": "uses a hundred and that is partly thanks to these new limits here in these new defaults all right moving on assembly",
    "start": "135569",
    "end": "141659"
  },
  {
    "text": "load context this is a new API was available in previous versions of.net core but it's",
    "start": "141659",
    "end": "146819"
  },
  {
    "text": "much more powerful now you can use this to build a plug-in model who's ever used app domains before to build plug-in",
    "start": "146819",
    "end": "152040"
  },
  {
    "text": "models and applications okay that's fantastic AB domains don't work and don't that call they're not there so this is the replacement for app domains",
    "start": "152040",
    "end": "158450"
  },
  {
    "text": "it determines the assembly paths for a given application path and assembly name for you using this assembly dependency",
    "start": "158450",
    "end": "164940"
  },
  {
    "text": "resolver and allows you to tap into the built in logic in the host that knows",
    "start": "164940",
    "end": "170010"
  },
  {
    "text": "how to locate an assembly located to relative assemblies based on where the application was booted from etc etc",
    "start": "170010",
    "end": "175140"
  },
  {
    "text": "people heard of fusion the old assembly loading stuff in net that's gone ok there's a much simpler assembly loading",
    "start": "175140",
    "end": "181590"
  },
  {
    "text": "algorithm now this thing taps into that simpler simpler yeah you can unload these context to free up memory after",
    "start": "181590",
    "end": "188700"
  },
  {
    "text": "you've stopped using the assembly which is fantastic that was the big thing people wanted you can resolve both",
    "start": "188700",
    "end": "193739"
  },
  {
    "text": "managed and native assemblies which was one of the really hard things now that were cross-platform it's very common to",
    "start": "193739",
    "end": "198900"
  },
  {
    "text": "bring in different native assemblies for each platform that you're going to with your library or your application you",
    "start": "198900",
    "end": "203940"
  },
  {
    "text": "need to support that it is not an isolation boundary the process is still considered the security isolation",
    "start": "203940",
    "end": "209100"
  },
  {
    "text": "boundary or a VM if you really want to go hardcore this is not an isolation boundary for security purposes it does",
    "start": "209100",
    "end": "215459"
  },
  {
    "text": "isolate the assembly identity and the type identity and it does isolate things like static values but that's it ok so",
    "start": "215459",
    "end": "221310"
  },
  {
    "text": "don't think of it as a security thing and it is the success throughout domains you have a demo for them so just a",
    "start": "221310",
    "end": "226319"
  },
  {
    "text": "warrant these demos are pretty lame no no they they're focused they're focused demos for a short timeframe we",
    "start": "226319",
    "end": "232859"
  },
  {
    "text": "have for attention is so much content all right so have an app here that's going to show you how to use the offender context so the app itself",
    "start": "232859",
    "end": "239400"
  },
  {
    "text": "purposes just net which is 12 point all point to and the application has a main",
    "start": "239400",
    "end": "244799"
  },
  {
    "text": "it's very simple console application I'm gonna create a custom block context and you do it by creating a class that",
    "start": "244799",
    "end": "250380"
  },
  {
    "text": "derives from assembly context it overrides the method call load and this gets called every time and I say man",
    "start": "250380",
    "end": "255389"
  },
  {
    "text": "look is requested by default if you don't implement load it'll go to the to the default context and use the button",
    "start": "255389",
    "end": "260850"
  },
  {
    "text": "logic so there's no change by default yeah ok so if I run this application it will create a little context my little",
    "start": "260850",
    "end": "266280"
  },
  {
    "text": "context load didn't learn that into that context and then it'll get a type from that context",
    "start": "266280",
    "end": "271289"
  },
  {
    "text": "AJ object we call it G object to object to object ok make it happen make it a thing I create",
    "start": "271289",
    "end": "278340"
  },
  {
    "text": "a job jig and then cast it to the job date somebody fought there's too little context well but if I there's one",
    "start": "278340",
    "end": "283410"
  },
  {
    "text": "there's the default context so this type that I'm using in the main is in the default context this type this instance",
    "start": "283410",
    "end": "290640"
  },
  {
    "text": "is coming from a different look context right so by default this should just work if I care because you didn't know",
    "start": "290640",
    "end": "295740"
  },
  {
    "text": "every ride in your logic and it over I'd load so it should be all the same icon same types no isolation wrong method",
    "start": "295740",
    "end": "304490"
  },
  {
    "text": "project hit f5 run run low assembly it's",
    "start": "306200",
    "end": "312900"
  },
  {
    "text": "loaded my special get type create object cast super lame perfect",
    "start": "312900",
    "end": "319110"
  },
  {
    "text": "no okay make this work I'm gonna load this assembly in a different look context same assembly same path",
    "start": "319110",
    "end": "325170"
  },
  {
    "text": "different context so think about as a different instance of that assembly so the first thing I'll do is create an",
    "start": "325170",
    "end": "331440"
  },
  {
    "text": "assembly dependency resolver resolver",
    "start": "331440",
    "end": "339680"
  },
  {
    "text": "okay Lu it up with the path the base path will get application itself and I",
    "start": "339680",
    "end": "345750"
  },
  {
    "text": "will inherit a path equals resolver dot resolve assembly path this will give me",
    "start": "345750",
    "end": "351660"
  },
  {
    "text": "the path for the assembly wherever the host Dominic it could be in the packet is folder could be an folder could be",
    "start": "351660",
    "end": "356730"
  },
  {
    "text": "anywhere the host without a body fault if path Mike was to know I can return",
    "start": "356730",
    "end": "363180"
  },
  {
    "text": "load assembly from path passing in the path this will load that assembly into",
    "start": "363180",
    "end": "368730"
  },
  {
    "text": "this little context right so now we've created that isolation I've loaded in",
    "start": "368730",
    "end": "374220"
  },
  {
    "text": "the way the same dll but in the context so now I'm gonna pass in the path to this to this application here so type of",
    "start": "374220",
    "end": "381440"
  },
  {
    "text": "program but assembly that location and now if I run this I see what happens",
    "start": "381440",
    "end": "390170"
  },
  {
    "text": "hit a 5 and I have a new love context I call load still Sam deal all good",
    "start": "392220",
    "end": "398310"
  },
  {
    "text": "create the job jecht boom era it's",
    "start": "398310",
    "end": "404130"
  },
  {
    "text": "because I know have to look context same type same assembly like name but different instance like I cloned it and",
    "start": "404130",
    "end": "410280"
  },
  {
    "text": "created these era is bizarre I can't cast job to job checked right but they're different low context ok so this",
    "start": "410280",
    "end": "416490"
  },
  {
    "text": "shows how you have a different boundary of isolation if you want like plugins to be loaded separately ok I'm the one last",
    "start": "416490",
    "end": "421530"
  },
  {
    "text": "thing I want to show you is that there's a an oval in here I can do compassed base and say unload is flexible if you",
    "start": "421530",
    "end": "427620"
  },
  {
    "text": "unreferenced the load card inside of it it'll get GC by the copper smelter cool alright alright sweet",
    "start": "427620",
    "end": "438330"
  },
  {
    "text": "alright startup hooks so this gives you the ability to register code that will run before the applications program main",
    "start": "438330",
    "end": "445350"
  },
  {
    "start": "439000",
    "end": "439000"
  },
  {
    "text": "alright so you think about ways that might be useful for you you said it you do it by setting an environment variable",
    "start": "445350",
    "end": "450570"
  },
  {
    "text": "when the application is booting or just before the application is booting with the path to an assembly ok and an",
    "start": "450570",
    "end": "456300"
  },
  {
    "text": "assembly name for the runtime to go and find path or a named path or name sorry path or name and it'll go and find that",
    "start": "456300",
    "end": "462090"
  },
  {
    "text": "it'll then look inside that assembly for a type with a specific shape right it's all pattern matching kind of magic and",
    "start": "462090",
    "end": "468120"
  },
  {
    "text": "then it will call that method and run that before program main ok now there's a whole bunch of things you can start",
    "start": "468120",
    "end": "473790"
  },
  {
    "text": "your demo there's a bunch of things that might want to use this so if you're using application insights or service",
    "start": "473790",
    "end": "480180"
  },
  {
    "text": "fabric uses this in Asia so that they can inject code into your application once your application is running in",
    "start": "480180",
    "end": "486180"
  },
  {
    "text": "their context so you don't have to take a dependency on their SDK and add a package you just run your app in service",
    "start": "486180",
    "end": "492000"
  },
  {
    "text": "fabric and then they can inject extra magic into you when you're running there ok all right so here is a basic console",
    "start": "492000",
    "end": "497940"
  },
  {
    "text": "application I've found your project Pritz hello world in long sitting",
    "start": "497940",
    "end": "503880"
  },
  {
    "text": "thought Jason I have this environment variables I got die set called dotnet startup hooks with a full path to a hook",
    "start": "503880",
    "end": "511550"
  },
  {
    "text": "see my hook DLL ok my hook is right here",
    "start": "511550",
    "end": "517080"
  },
  {
    "text": "in the same project it has to not have a namespace it has to be in troops internal",
    "start": "517080",
    "end": "524719"
  },
  {
    "text": "before internal class startup hug is that the hard-coded name that's hard-coded in the runtime and public",
    "start": "524879",
    "end": "531639"
  },
  {
    "text": "static void initialize why is it not interface or type or anything just as a to not have dependencies in the runtime",
    "start": "531639",
    "end": "536709"
  },
  {
    "text": "and look I'd be fair now graph yourself I mean see goosey could be in there but okay good reasons I bet if I run this",
    "start": "536709",
    "end": "546339"
  },
  {
    "text": "application it should print out this this before the hello world okay okay",
    "start": "546339",
    "end": "552579"
  },
  {
    "text": "okay so we got your poker okay perfect they worked oh just sure I mean debugger it's kind of but it worked so I'm sure",
    "start": "552579",
    "end": "562089"
  },
  {
    "text": "there's like three people audience going I'm gonna use this that's fantastic all right diagnostics improvements Donna",
    "start": "562089",
    "end": "567100"
  },
  {
    "start": "565000",
    "end": "565000"
  },
  {
    "text": "chorus now cross-platform as you all well know as a result we don't have the benefit along the deep history of",
    "start": "567100",
    "end": "572199"
  },
  {
    "text": "Windows diagnostics and performance analysis tools that a lot of us have been relying on for doctor apps for for",
    "start": "572199",
    "end": "578379"
  },
  {
    "text": "20 years and so we've had to do a whole bunch of investment to in to bring up a stack of new diagnostic tools and",
    "start": "578379",
    "end": "584230"
  },
  {
    "text": "diagnostic hooks so that you can do this stuff cross-platform so we have a new set of global net tools is releasing",
    "start": "584230",
    "end": "590529"
  },
  {
    "text": "along with got neck or three neck counters neck trace and net dump and you can probably imagine from their names",
    "start": "590529",
    "end": "596589"
  },
  {
    "text": "what those three tools do we also have a default Diagnostics pipe that is open",
    "start": "596589",
    "end": "601720"
  },
  {
    "text": "for every dotnet core 3 application by default so you just start you don't make it call three up everyone that you were",
    "start": "601720",
    "end": "608019"
  },
  {
    "text": "just running has a hidden pipe that is open that you can attach to to get Diagnostics information that pipe is a",
    "start": "608019",
    "end": "614709"
  },
  {
    "text": "'cold with the same process identity so you can't just attach to it if you're not also running as the user that the",
    "start": "614709",
    "end": "621160"
  },
  {
    "text": "the app itself is running yes okay so it is secure by default you have runtime api's for accessing runtime counters for",
    "start": "621160",
    "end": "627490"
  },
  {
    "text": "GC and thread pool and those type of things there's also a new SOS command called dump async which is useful for",
    "start": "627490",
    "end": "633309"
  },
  {
    "text": "diagnosing a sink or hangs hangs or blocked all hand tasks and",
    "start": "633309",
    "end": "638470"
  },
  {
    "text": "those type of things with like just a nice dump of information that's relevant to that there's also now the ability to",
    "start": "638470",
    "end": "644110"
  },
  {
    "text": "force the process to cry out to dump when there is a crash so if you have an unhandled exception in your application",
    "start": "644110",
    "end": "650079"
  },
  {
    "text": "and unwinds or a background exception or something like that you can set this complex variable before application",
    "start": "650079",
    "end": "655540"
  },
  {
    "text": "start and then the host will for a dump of that if the application crashes so we have a demo of a bunch of",
    "start": "655540",
    "end": "662830"
  },
  {
    "text": "these new tools all right stuff all right all right so I will use this application it's a website we're going",
    "start": "662830",
    "end": "668200"
  },
  {
    "text": "from console to web this found you I think API has a weather controller this is brand-new you saw it here first so",
    "start": "668200",
    "end": "675670"
  },
  {
    "text": "before yeah oh this is the new one in the tempest in preview seven this will be the new values control super useful",
    "start": "675670",
    "end": "680829"
  },
  {
    "text": "yeah returns weather in Celsius and Fahrenheit all right so I'm gonna I'm gonna start this process Oh something",
    "start": "680829",
    "end": "690310"
  },
  {
    "text": "else that's fine basic application very",
    "start": "690310",
    "end": "695380"
  },
  {
    "text": "lame bad demo but I can run a tool that I happen to have in one of these",
    "start": "695380",
    "end": "701019"
  },
  {
    "text": "applications one of these windows that's",
    "start": "701019",
    "end": "707110"
  },
  {
    "text": "awesome and James is talking to you dinette by counters to get perform who's",
    "start": "707110",
    "end": "717190"
  },
  {
    "text": "ever used performance countries on Windows perf Candice right perfmon this is the replacement for that I'm the",
    "start": "717190",
    "end": "723550"
  },
  {
    "text": "cross placement for that tour right so I can run the dinette counters list processes to see what things are running",
    "start": "723550",
    "end": "731320"
  },
  {
    "text": "Oh God which one is it",
    "start": "731320",
    "end": "736709"
  },
  {
    "text": "back-end dotnet how would I know said eyes Express or I could is run itself that makes it easier easier perfect and",
    "start": "736709",
    "end": "746740"
  },
  {
    "text": "that's not working right now call back later for a 5/5 that's an interesting",
    "start": "746740",
    "end": "752200"
  },
  {
    "text": "error so I clock still ticking it's okay so",
    "start": "752200",
    "end": "759230"
  },
  {
    "text": "you got time right sure like an hour fix it go five wait hold on that's the wrong",
    "start": "759230",
    "end": "768679"
  },
  {
    "text": "app too many apps running oh I gotta",
    "start": "768679",
    "end": "775759"
  },
  {
    "text": "have a really go there I'd value some",
    "start": "775759",
    "end": "785509"
  },
  {
    "text": "stuff so dance dance really something make you demo work um",
    "start": "785509",
    "end": "793360"
  },
  {
    "text": "kill okay all right so movie set me do",
    "start": "793480",
    "end": "801110"
  },
  {
    "text": "this from one machine because it would be better now I'm regretting that this is Gary all right so this should run and",
    "start": "801110",
    "end": "808879"
  },
  {
    "text": "I should have one thing running that works with the one process running let's",
    "start": "808879",
    "end": "814489"
  },
  {
    "text": "Isis price so I went done it counters monitor - P this thing 8 3 6 8 system",
    "start": "814489",
    "end": "827860"
  },
  {
    "text": "runtime and Microsoft Hispanic or",
    "start": "828279",
    "end": "834069"
  },
  {
    "text": "hosting cool so here the counters on my screen for a",
    "start": "834069",
    "end": "840139"
  },
  {
    "text": "spot net core and for the runtime under CPUs is working said things are all useful you can read the screen so I'm",
    "start": "840139",
    "end": "847100"
  },
  {
    "text": "gonna hit this with a bunch of load no hopefully this end point in some useful",
    "start": "847100",
    "end": "856249"
  },
  {
    "text": "when do I have a tool called Bombardier so to create load on the site like a be",
    "start": "856249",
    "end": "862100"
  },
  {
    "text": "or work mm-hmm hit Oh didn't come probably hit this",
    "start": "862100",
    "end": "867139"
  },
  {
    "text": "endpoint here I mean duration like 1c",
    "start": "867139",
    "end": "876919"
  },
  {
    "text": "seconds all right alright so the numbers are moving",
    "start": "876919",
    "end": "883640"
  },
  {
    "text": "there's the RPS there's a current request allocation or eight bytes per",
    "start": "883640",
    "end": "888710"
  },
  {
    "text": "second super useful great for if you've ever monitored performance counters to",
    "start": "888710",
    "end": "894620"
  },
  {
    "text": "look at this type information this works cross-platform you can do this today you can try this on the latest preview bits you can install these tools as a dotnet",
    "start": "894620",
    "end": "900770"
  },
  {
    "text": "global tool from Newgate and you can see this stuff all right another tool the next lesson now if your purse sucks",
    "start": "900770",
    "end": "906310"
  },
  {
    "text": "your purse sucks you can run net on the same process run net trace trace collect",
    "start": "906310",
    "end": "915050"
  },
  {
    "text": "I know we use all of your hardware space I heard hard drives but makes me super",
    "start": "915050",
    "end": "923900"
  },
  {
    "text": "league chancy get it done that's an M as long as it's an M you're fine when it",
    "start": "923900",
    "end": "930350"
  },
  {
    "text": "changes to a little upset alright the changes to a tee just give up close",
    "start": "930350",
    "end": "935360"
  },
  {
    "text": "it'll walk offstage pedabytes alright so now I should be how big is your",
    "start": "935360",
    "end": "941770"
  },
  {
    "text": "supercomputer straight to the cloud yes all right Chris is then I have a trace and my user Bo gosh",
    "start": "942160",
    "end": "948860"
  },
  {
    "text": "there it is Troy still net / I don't want to put it there there's a file a new file format called net perf I think",
    "start": "948860",
    "end": "955100"
  },
  {
    "text": "it's gonna rename that is that it is right now in that perf right now it's net / and you can open it in now that is",
    "start": "955100",
    "end": "960380"
  },
  {
    "text": "the new name it was net collect or something wasn't it crazy it was that trying it now it's net race it's gonna be natural it tricks right it's now that",
    "start": "960380",
    "end": "966230"
  },
  {
    "text": "it's gonna get okay right nice and that fer aiming is hard please do so you could use then why her",
    "start": "966230",
    "end": "973670"
  },
  {
    "text": "use per few couples okay the profiler in Visual Studio anyone use",
    "start": "973670",
    "end": "981050"
  },
  {
    "text": "the CPU profiler in Visual Studio okay yeah few people yeah all right so tell trace JetBrains doc trace it now that",
    "start": "981050",
    "end": "987740"
  },
  {
    "text": "porous this new format let's open this file format you have to do it in a fresh",
    "start": "987740",
    "end": "994220"
  },
  {
    "text": "instance done you can see that okay and it will load the CPU tools and I can see",
    "start": "994220",
    "end": "999470"
  },
  {
    "text": "what is low in my app whoo now that could I have collected that on a Linux",
    "start": "999470",
    "end": "1005620"
  },
  {
    "text": "machine as you can then brought this over to vs that's right lovelies that's something that's really hard to do today yeah so now you can",
    "start": "1005620",
    "end": "1011709"
  },
  {
    "text": "just take that trace formula or inside a container or whatever it might be and then just bring it over yes and you can use the existing tools",
    "start": "1011709",
    "end": "1017440"
  },
  {
    "text": "awesome anything else um one more thing it doesn't super work oh then maybe that's not worth showing the tool okay",
    "start": "1017440",
    "end": "1024760"
  },
  {
    "text": "there's one more tool that totally works sometimes is this the dotnet dumped all right yep",
    "start": "1024760",
    "end": "1030040"
  },
  {
    "text": "okay so I have like so on Windows creating a process dump is fairly straightforward you go to task manager",
    "start": "1030040",
    "end": "1035589"
  },
  {
    "text": "your right mouse click and say create dump or you go to your proc dumped our xe4 exists internals and you run that you have a dump on linux it's not so",
    "start": "1035589",
    "end": "1042610"
  },
  {
    "text": "straightforward there there are some tools the don't that core team had shipped previously in the runtime create",
    "start": "1042610",
    "end": "1048069"
  },
  {
    "text": "dump it was inside the runtime but now we have a one tool to rule them all",
    "start": "1048069",
    "end": "1053920"
  },
  {
    "text": "no matter where you are what don't mess up that works really well that will create a dump for you okay no",
    "start": "1053920",
    "end": "1060700"
  },
  {
    "text": "matter where you are with the heap information so that you can do the memory analysis for the snapshot afterwards and you also do dotnet if",
    "start": "1060700",
    "end": "1067750"
  },
  {
    "text": "this worked it does sometimes didn't before I came here so right so I've collected a time analyze the dump file called dump",
    "start": "1067750",
    "end": "1077050"
  },
  {
    "text": "that one day and it gives you a command line up to analyze your application that",
    "start": "1077050",
    "end": "1083710"
  },
  {
    "text": "can run help to see what commands there is just like SOS this is like this is basically SOS built-in without having a",
    "start": "1083710",
    "end": "1088810"
  },
  {
    "text": "debugger so you choose SOS and windbg for dotnet right so now you've just got it here and again could I have taken",
    "start": "1088810",
    "end": "1094150"
  },
  {
    "text": "that dump on Linux and then brought this over to Windows and run this command no",
    "start": "1094150",
    "end": "1099460"
  },
  {
    "text": "no okay that's unfortunate it's close you're working on it see if",
    "start": "1099460",
    "end": "1105640"
  },
  {
    "text": "this works it dumped you okay yeah I got this this morning but never mind the Reds work oh right and not the name but",
    "start": "1105640",
    "end": "1113440"
  },
  {
    "text": "this soup out with the double with wsl too right",
    "start": "1113440",
    "end": "1119049"
  },
  {
    "text": "I'm Windows yeah with the kernel with the UNIX and the thing yeah I could run this into a WS l2 and with Linux and and",
    "start": "1119049",
    "end": "1126070"
  },
  {
    "text": "hope you'll work and hope it'll work yeah we're working on all this we're trying to make it as easy as possible for you to use this stuff across platform it is turns out it's quite",
    "start": "1126070",
    "end": "1132610"
  },
  {
    "text": "complicated all right we're good oh yeah all right publish options so there's",
    "start": "1132610",
    "end": "1139240"
  },
  {
    "start": "1138000",
    "end": "1138000"
  },
  {
    "text": "three new publish options in net core three that enable you to optimize your published application in different ways",
    "start": "1139240",
    "end": "1144790"
  },
  {
    "text": "some of these currently have kind of laser focused on the wind forms and WPF",
    "start": "1144790",
    "end": "1149860"
  },
  {
    "text": "desktop app scenarios but they're not limited to those you can use them for application types console apps and even web applications if you think through it",
    "start": "1149860",
    "end": "1156040"
  },
  {
    "text": "a little bit so one of them is ready to run most of you I'm assuming I've heard of engine with net which lets you pre",
    "start": "1156040",
    "end": "1161470"
  },
  {
    "text": "JIT accept that runs on the target machine you don't really run engine as the developer you run it after it's been",
    "start": "1161470",
    "end": "1167230"
  },
  {
    "text": "installed on the machine that makes it a little inflexible so we have this thing called ready to run which pre jits your",
    "start": "1167230",
    "end": "1172720"
  },
  {
    "text": "application during publish it'll generate ready to run images for your application along with the managed",
    "start": "1172720",
    "end": "1178510"
  },
  {
    "text": "images and all get shipped together it is a form of ahead of time compiling or pre jet which I said someone to engine",
    "start": "1178510",
    "end": "1184690"
  },
  {
    "text": "you do get slightly larger files because it does mean that you take over a little bit of native code as well as the",
    "start": "1184690",
    "end": "1190120"
  },
  {
    "text": "original IL code with your application lately slightly hosts lately quite a lot slightly yes yeah just like I am",
    "start": "1190120",
    "end": "1196809"
  },
  {
    "text": "slightly smarter than you maybe slightly better looking I don't know we'll just keep doing this",
    "start": "1196809",
    "end": "1203610"
  },
  {
    "text": "and then after the application has started up the new tier compilation system which was optional to point to",
    "start": "1205200",
    "end": "1211630"
  },
  {
    "text": "but is now on by default in three Oh will identify hot paths of your application and then reach it those with",
    "start": "1211630",
    "end": "1218770"
  },
  {
    "text": "ever more enhanced or better JIT algorithms which maybe a little slower but will produce faster code okay and",
    "start": "1218770",
    "end": "1225549"
  },
  {
    "text": "that's really important because the ready to run images themselves are actually slower at runtime they're",
    "start": "1225549",
    "end": "1230770"
  },
  {
    "text": "faster to start because you don't need to get them but they can't generate as efficient code because they don't know",
    "start": "1230770",
    "end": "1237309"
  },
  {
    "text": "what CPU you had ahead of time and they can't optimize things like inline code across assembly boundaries and all these",
    "start": "1237309",
    "end": "1243309"
  },
  {
    "text": "types of advanced things when it comes to ginning so the combination of ready to run images and tier compilation in",
    "start": "1243309",
    "end": "1248830"
  },
  {
    "text": "theory gives you the best of both worlds okay can you be a little to other platforms from so from Windows can I publish for Linux so you'll note that",
    "start": "1248830",
    "end": "1255970"
  },
  {
    "text": "there in the command line you have to pass the target platform when you do ready to run okay so cuz you have to",
    "start": "1255970",
    "end": "1261250"
  },
  {
    "text": "know where you're going to generate native code the question is can I do that for another platform and I think the answer is it depends",
    "start": "1261250",
    "end": "1266710"
  },
  {
    "text": "just say yes yes yeah okay do we have you made that work for everything like can you do arm from x86 I think I'm yeah",
    "start": "1266710",
    "end": "1274300"
  },
  {
    "text": "BX 64 at least anyway so maybe is the answer publish options single file who",
    "start": "1274300",
    "end": "1282100"
  },
  {
    "start": "1278000",
    "end": "1278000"
  },
  {
    "text": "love people have indicated that maybe when they publish their application they get a little sad when they see hundreds",
    "start": "1282100",
    "end": "1288160"
  },
  {
    "text": "and hundreds of files in the output especially if they're doing a self-contained application that takes the whole dotnet call runtime and shoves",
    "start": "1288160",
    "end": "1294850"
  },
  {
    "text": "it in their application just zip it you could just zip it and then you have to do it yourself out here then you have to deploy then you have to unzip it okay",
    "start": "1294850",
    "end": "1301300"
  },
  {
    "text": "but this is effectively what this does for you so you can say now /p or put this in your project file publish single",
    "start": "1301300",
    "end": "1306520"
  },
  {
    "text": "file true again it needs a read so it can generate you the native executable that will launch your app but then you",
    "start": "1306520",
    "end": "1311559"
  },
  {
    "text": "have one file it's pretty big because it's a big file that contains your entire application if you put it",
    "start": "1311559",
    "end": "1316780"
  },
  {
    "text": "works for both framework dependent dotnet core apps and self-contained net core apps and then you have a single",
    "start": "1316780",
    "end": "1322360"
  },
  {
    "text": "file you can take that over you can run it it'll self extract itself to a temp location the first time you run it and",
    "start": "1322360",
    "end": "1327520"
  },
  {
    "text": "then it will run from there then the next time you run it it'll detect that's already extracted itself and then will run from that location okay",
    "start": "1327520",
    "end": "1333429"
  },
  {
    "text": "it's pretty cool and then lastly we have assembly linking which is a little like in the old days we had now it's not like",
    "start": "1333429",
    "end": "1340510"
  },
  {
    "start": "1335000",
    "end": "1335000"
  },
  {
    "text": "that it's not like I'll merge its you know it's from mono and it's a set of technologies that will look at all the",
    "start": "1340510",
    "end": "1346120"
  },
  {
    "text": "code try to statically analyze parts of your application or code base that aren't used okay after it's compiled and",
    "start": "1346120",
    "end": "1351850"
  },
  {
    "text": "then tree shake those out okay you can configure it because sometimes they can't figure that out and it will shake",
    "start": "1351850",
    "end": "1357490"
  },
  {
    "text": "things out that it shouldn't have shaken because you're doing like light up or reflection all those type of things and",
    "start": "1357490",
    "end": "1363100"
  },
  {
    "text": "so you can tell it hey I know I really do need that assembly or that type please don't get rid of that and again you can just pass this through",
    "start": "1363100",
    "end": "1368950"
  },
  {
    "text": "publish give it a read and you're off to the races and you can use all three of these things together to give yourself",
    "start": "1368950",
    "end": "1374440"
  },
  {
    "text": "you know ready to run preach it plus assembly link trimmed out plus a single file don't work not in preview six but a",
    "start": "1374440",
    "end": "1381669"
  },
  {
    "text": "will in preview seven and you have a demo of using one or two of these at least I try it okay",
    "start": "1381669",
    "end": "1386969"
  },
  {
    "text": "let's combine Ashley verbatim okay so I have an application in wall these",
    "start": "1386969",
    "end": "1392979"
  },
  {
    "text": "windows somewhere this one nope alright",
    "start": "1392979",
    "end": "1399190"
  },
  {
    "text": "so same app I just ran the ice application I will maybe stop it first",
    "start": "1399190",
    "end": "1406138"
  },
  {
    "text": "aggressively stop it by killing it to him just got violent dot name done it",
    "start": "1406649",
    "end": "1416289"
  },
  {
    "text": "publish /p what a single file it's true",
    "start": "1416289",
    "end": "1422049"
  },
  {
    "text": "publish single file to publish single file true are when x86 1666 alright",
    "start": "1422049",
    "end": "1435099"
  },
  {
    "text": "publish to see what happens",
    "start": "1435099",
    "end": "1438450"
  },
  {
    "text": "crunching everything together into one file just like crunching it all crunched down wrench she's done",
    "start": "1440729",
    "end": "1446229"
  },
  {
    "text": "it's crunched it's super that look at",
    "start": "1446229",
    "end": "1452979"
  },
  {
    "text": "that lovely it's kind of one file if you if you don't look at the other two files",
    "start": "1452979",
    "end": "1458710"
  },
  {
    "text": "I mean obviously the PDB is separate",
    "start": "1458710",
    "end": "1463779"
  },
  {
    "text": "there we go it never was never there",
    "start": "1463779",
    "end": "1468419"
  },
  {
    "text": "this file is Matt I mean I mean is that too big 77 Meg that's huge big but you",
    "start": "1468989",
    "end": "1478989"
  },
  {
    "text": "know with the previous I'm gonna keep working on it yeah and also my config file is gone yeah where'd it go well you",
    "start": "1478989",
    "end": "1486639"
  },
  {
    "text": "just deleted two files that you know so there were three files well configure one was DB yeah where is the so by",
    "start": "1486639",
    "end": "1493779"
  },
  {
    "text": "default right now this was a web app but is the way back right now as I said this is kind of this has been targeted at the",
    "start": "1493779",
    "end": "1499839"
  },
  {
    "text": "desktop applications it works perfectly for that for web applications a spinet cause default",
    "start": "1499839",
    "end": "1504940"
  },
  {
    "text": "locations that looks and stuff has not been updated to allow it to find things",
    "start": "1504940",
    "end": "1510700"
  },
  {
    "text": "from the temporary location from a place that's different to where it launched from we do intend to do that at some point but what we're gonna do in the",
    "start": "1510700",
    "end": "1516820"
  },
  {
    "text": "meantime is update the West web SDK to not bundle static files right so the web",
    "start": "1516820",
    "end": "1524320"
  },
  {
    "text": "SDK today yeah so it explodes horribly the web SDK today will by default look",
    "start": "1524320",
    "end": "1529750"
  },
  {
    "text": "for JSON files and images and CSS and JavaScript etc etc during publish and",
    "start": "1529750",
    "end": "1535660"
  },
  {
    "text": "copy those with your application you don't to say all that you see as project just doesn't automatically and then the bundling tool here just goes oh great",
    "start": "1535660",
    "end": "1541780"
  },
  {
    "text": "I'll suck all that up and stick it inside myself and then I'll extract it out to the temple ocation than we boot from here yeah I know and then we'll say",
    "start": "1541780",
    "end": "1548740"
  },
  {
    "text": "yeah it was hungry and then it will it winner boots from here we go looking for those files in this folder and we don't",
    "start": "1548740",
    "end": "1554650"
  },
  {
    "text": "find it was slow actually yeah the first look yeah because I had to unzip I had to unarchive so many searches franca",
    "start": "1554650",
    "end": "1560530"
  },
  {
    "text": "bytes over to think all right hey what you want to feel quickly so you can work around this right now if you put a",
    "start": "1560530",
    "end": "1566140"
  },
  {
    "text": "little bit of msbuild goop in your project file just to tell it to not bundle the static assets that you need",
    "start": "1566140",
    "end": "1571870"
  },
  {
    "text": "to make the application run from that location you can do that there's an issue logged it has this details in it but we will make this work as I said",
    "start": "1571870",
    "end": "1578170"
  },
  {
    "text": "more targeted at console apps and desktop packed apps right now for now all right anything else on that yeah one",
    "start": "1578170",
    "end": "1583330"
  },
  {
    "text": "more thing ah publish and I need like one window this is that one this one",
    "start": "1583330",
    "end": "1588580"
  },
  {
    "text": "this is good one all right publish was last one publish trimmed trimmed publish",
    "start": "1588580",
    "end": "1596230"
  },
  {
    "text": "trimmed this is the assembly linking alright this is the same app trimming",
    "start": "1596230",
    "end": "1604170"
  },
  {
    "text": "trimming superher same at yep okay get rid of assembly he's doing out of ass analysis erasing functional features I",
    "start": "1604170",
    "end": "1614220"
  },
  {
    "text": "don't it's going old con Mari on your application so here's the bin folder by",
    "start": "1614910",
    "end": "1621190"
  },
  {
    "text": "default and here is the size without",
    "start": "1621190",
    "end": "1626790"
  },
  {
    "text": "size without well oh with oh it's being trimmed set",
    "start": "1626790",
    "end": "1632860"
  },
  {
    "text": "six Meg's okay 76 Meg's on disk but after a bit of exercise and diet",
    "start": "1632860",
    "end": "1639240"
  },
  {
    "text": "I see less files - Wow okay 46 max that's not too bad",
    "start": "1640590",
    "end": "1645730"
  },
  {
    "text": "does it still work not sure okay but if we erased the folder and move on to the",
    "start": "1645730",
    "end": "1652539"
  },
  {
    "text": "next slide doesn't matter okay fair enough so it does work fairly well for you know out of the box works fairly",
    "start": "1652539",
    "end": "1659260"
  },
  {
    "text": "well for simple applications but as I said once you start doing things a little more advanced which I see a core does by default that's early reflection",
    "start": "1659260",
    "end": "1665200"
  },
  {
    "text": "reflection yeah but you know not everyone does but it might do it underneath you without you knowing like",
    "start": "1665200",
    "end": "1670360"
  },
  {
    "text": "a snake for you yes yeah for you then you may need to instruct the linker about some things all right",
    "start": "1670360",
    "end": "1675460"
  },
  {
    "start": "1674000",
    "end": "1674000"
  },
  {
    "text": "so native interrupts improvements for those folks who are doing native interrupts which is uh you know sometimes common in Windows desktop",
    "start": "1675460",
    "end": "1681220"
  },
  {
    "text": "applications which is one of the reasons we're bringing into dock nickel 3 we now have support for manage C++ CLI",
    "start": "1681220",
    "end": "1686429"
  },
  {
    "text": "commenter up is now supported in dotnet core obviously these two when you work on windows and we know it's on window",
    "start": "1686429",
    "end": "1691899"
  },
  {
    "text": "and WinRT only work on windows but you now have first-class support for doing all of those from windows.net core 3",
    "start": "1691899",
    "end": "1698169"
  },
  {
    "text": "applications there's a new type called native library which is kind of the imperative equivalent of dll import and",
    "start": "1698169",
    "end": "1705070"
  },
  {
    "text": "so rather than decorating a method stub with dll import you can now imperative Li load native assemblies and use the",
    "start": "1705070",
    "end": "1712029"
  },
  {
    "text": "CLR logic to go and find where they should you know log load from and do all the goodness there are you have some",
    "start": "1712029",
    "end": "1717429"
  },
  {
    "text": "samples for calm all right so I'm 64",
    "start": "1717429",
    "end": "1726250"
  },
  {
    "text": "support so this is a brand-new architecture than we support now in dotnet caught three or four Linux only right now to start out with so if you're",
    "start": "1726250",
    "end": "1732850"
  },
  {
    "text": "running Linux IOT for example on top of an arm 64 board or you have an advanced",
    "start": "1732850",
    "end": "1738490"
  },
  {
    "text": "scenario we've got a Linux server so x 64 that's a thing I've heard maybe then",
    "start": "1738490",
    "end": "1744490"
  },
  {
    "text": "you we do support that and also we have hardware intrinsic support now so that you can from managed code detect if your",
    "start": "1744490",
    "end": "1751029"
  },
  {
    "text": "CPU supports like avx-512 we've got some super expensive Xeon processor and then",
    "start": "1751029",
    "end": "1756070"
  },
  {
    "text": "utilize those AP is from managed code to do you know vectorization and all that",
    "start": "1756070",
    "end": "1762730"
  },
  {
    "text": "kind of wonderful stuff advanced stuff the inbox UT fate encoding which is obviously very",
    "start": "1762730",
    "end": "1768340"
  },
  {
    "text": "relevant in web applications and a spear core uses by default has been fully optimized using all of these new",
    "start": "1768340",
    "end": "1773710"
  },
  {
    "text": "hardware intrinsic supports all right let's move out of the CLR and up into",
    "start": "1773710",
    "end": "1778840"
  },
  {
    "text": "the bc l api's for everybody all right i a sync disposable so you you have a",
    "start": "1778840",
    "end": "1783880"
  },
  {
    "text": "disposable object now you can implement icing disposable which will allow the",
    "start": "1783880",
    "end": "1789220"
  },
  {
    "text": "runtime to disposed that using an async code path this is particularly useful for cases where you have like a stream",
    "start": "1789220",
    "end": "1796240"
  },
  {
    "text": "or anything doing io where if it gets disposed while it still has a buffer internally and during dispose it will",
    "start": "1796240",
    "end": "1803680"
  },
  {
    "text": "implicitly flush the buffer to whoever was listening on the other side today",
    "start": "1803680",
    "end": "1808900"
  },
  {
    "text": "that can cause real problems because that now blocks the thread because it was a synchronous code path disposed",
    "start": "1808900",
    "end": "1814870"
  },
  {
    "text": "today is a synchronous call if you then have to do an async flush you have to wrap that with a synchronous call and",
    "start": "1814870",
    "end": "1820000"
  },
  {
    "text": "you end up doing this which is super bad so this this looks safe you do a using you do await stream rewriting this is",
    "start": "1820000",
    "end": "1828070"
  },
  {
    "text": "buffered and the suppose will then call flush synchronously yeah which is bad which is super bad so instead you could",
    "start": "1828070",
    "end": "1834610"
  },
  {
    "text": "conflict a sent yourself or in c-sharp it you can do await using this right",
    "start": "1834610",
    "end": "1840340"
  },
  {
    "text": "right and then if disposed does get cold and it does have a buffer that it has to flush it at least can flush",
    "start": "1840340",
    "end": "1846400"
  },
  {
    "text": "asynchronously now not block the thread right while it's happening so that's all goodness alright distributed tracing for",
    "start": "1846400",
    "end": "1855100"
  },
  {
    "start": "1853000",
    "end": "1853000"
  },
  {
    "text": "those who have more complicated service scenarios where they've got one app that then talks to another app that then",
    "start": "1855100",
    "end": "1860380"
  },
  {
    "text": "talks to another app micro services fighting back and all that type of thing we now have apt dates to the existing",
    "start": "1860380",
    "end": "1865990"
  },
  {
    "text": "activity type in which it was introduced to what three years ago might one don't like or 2.1 and in dotnet framework or",
    "start": "1865990",
    "end": "1872140"
  },
  {
    "text": "support for dotnet framework to support the new w3c trace context standard it is on by default in a spinet core 3",
    "start": "1872140",
    "end": "1879160"
  },
  {
    "text": "applications so that if an incoming request comes in with the right header format and name we will turn this on and",
    "start": "1879160",
    "end": "1884800"
  },
  {
    "text": "then flow that information out through HTTP client if you make an outbound call again now you can have correlated logs",
    "start": "1884800",
    "end": "1890680"
  },
  {
    "text": "for that logical transaction that runs through one app and then jumps over a process and goes off to another app and",
    "start": "1890680",
    "end": "1896500"
  },
  {
    "text": "it integrates with open telemetry which was previously called open sensors to you that Zipkin style sort of",
    "start": "1896500",
    "end": "1901930"
  },
  {
    "text": "distributed tracing do you have a demo of that that's worth showing maybe maybe if it works we'll let them judge whether",
    "start": "1901930",
    "end": "1908020"
  },
  {
    "text": "it was worth showing I guess afterwards know that one red card will be the one but someone says that wasn't questioning",
    "start": "1908020",
    "end": "1914050"
  },
  {
    "text": "Oh so let's take the app from or a workshop that we did okay last week there's a front-end and the backend",
    "start": "1914050",
    "end": "1920620"
  },
  {
    "text": "application the front-end is richer pages black hand is an API controller so",
    "start": "1920620",
    "end": "1926350"
  },
  {
    "text": "very simple controller in the backend does business stuff right EF with NBC so",
    "start": "1926350",
    "end": "1932980"
  },
  {
    "text": "not a big deal when I run the application so you can see what it does it's a conference planner I had these",
    "start": "1932980",
    "end": "1941800"
  },
  {
    "text": "talks from the conference right now I do want to point out scroll down scroll down there is someone here who's name is",
    "start": "1941800",
    "end": "1948490"
  },
  {
    "text": "literally lemon with the Unicode character for lemon I thought that was fantastic we found it yeah and apparently make you",
    "start": "1948490",
    "end": "1956770"
  },
  {
    "text": "stop hating CSS apparently I want to go to that talk so the front end calls the backend API a very simple right this is the micro service not design so micro",
    "start": "1956770",
    "end": "1965380"
  },
  {
    "text": "service my 20 years ago we just called it like in TIA it's the same stuff it is per app okay fair not enter so you type",
    "start": "1965380",
    "end": "1975340"
  },
  {
    "text": "in donate course it's two point one that people may not know about heart activity anyone know that type is activity buddy",
    "start": "1975340",
    "end": "1981060"
  },
  {
    "text": "no.11 hand-to-hands those people that work at the company that does great all",
    "start": "1981060",
    "end": "1986500"
  },
  {
    "text": "right so activity is basically uh the current think of it as an ID for the",
    "start": "1986500",
    "end": "1992530"
  },
  {
    "text": "current contextual ephemeral state this ephemeral ID that flows boundaries if",
    "start": "1992530",
    "end": "1998230"
  },
  {
    "text": "you want to have a friend call the back end you want a flow an ID from the front end to the back end and add as you go",
    "start": "1998230",
    "end": "2004710"
  },
  {
    "text": "from services service you want to track all the calls from in and out times right so by default on that core 2.1 we",
    "start": "2004710",
    "end": "2011820"
  },
  {
    "text": "added this type but it's really hard to use so the goal was in 302 have it all by default right and have things plug",
    "start": "2011820",
    "end": "2017610"
  },
  {
    "text": "into it so like so so it would light up in different situations so if I look at activity the type of cell this is to show what it does I have",
    "start": "2017610",
    "end": "2027720"
  },
  {
    "text": "a current for the current current has a bunch of properties",
    "start": "2027720",
    "end": "2034020"
  },
  {
    "text": "Engineering is the ID the ID is the current spanha t their spans and there's traces and you can create child spans",
    "start": "2034020",
    "end": "2039300"
  },
  {
    "text": "like art relativity so imagine request comes in you make a database call or several phone calls those are all",
    "start": "2039300",
    "end": "2044940"
  },
  {
    "text": "individual spans and there's a kind of a parent hierarchy going on you kind of imagine the waterfall view and the chrome dev TS exec hold that this called",
    "start": "2044940",
    "end": "2052050"
  },
  {
    "text": "that and this call is that this enables that but server-side bracele it's notorious one on the incoming request and should be client will create one",
    "start": "2052050",
    "end": "2058648"
  },
  {
    "text": "request and correlate them yeah right so so by default if I put a breakpoint in",
    "start": "2058649",
    "end": "2064830"
  },
  {
    "text": "the backend code yes because we have one here for sessions I should see an",
    "start": "2064830",
    "end": "2070590"
  },
  {
    "text": "incoming request header from the front-end by default without haven't done anything okay app runs",
    "start": "2070590",
    "end": "2083600"
  },
  {
    "text": "it's a back-end if I look at the autos obscurely dive into the debugger window",
    "start": "2083600",
    "end": "2091679"
  },
  {
    "text": "into request into headers into something",
    "start": "2091679",
    "end": "2100380"
  },
  {
    "text": "here header trace parent this is the actual header but flew from they should be clients a to be client on the request",
    "start": "2100380",
    "end": "2106860"
  },
  {
    "text": "from a student from the front application out of the header called trace parent which is the w3c trace context started standard header that",
    "start": "2106860",
    "end": "2114780"
  },
  {
    "text": "flows to the backend the back hand will get it and create a another activity for its request and then other requests will",
    "start": "2114780",
    "end": "2120510"
  },
  {
    "text": "have other other activity okay what you can do with this is plug into something like open senses are not called open",
    "start": "2120510",
    "end": "2126990"
  },
  {
    "text": "telemetry to get a waterfall view so in my startup in the backend I have this",
    "start": "2126990",
    "end": "2133140"
  },
  {
    "text": "awful cool that will get cleaned up at some point I'm using this thing called Zipkin is anyone knows if can is dipkin",
    "start": "2133140",
    "end": "2138290"
  },
  {
    "text": "yeah yeah distributed trace view made by Twitter it's a tool that just shows a",
    "start": "2138290",
    "end": "2143460"
  },
  {
    "text": "waterfall model so I have one in the front end and one in the back end hopefully this works and I I was told",
    "start": "2143460",
    "end": "2154590"
  },
  {
    "text": "that I have to make the call take longer to make it to make it show you something useful so let me add some latency that's",
    "start": "2154590",
    "end": "2163710"
  },
  {
    "text": "a lot perf bug okay just in case forget measure you're creating",
    "start": "2163710",
    "end": "2169119"
  },
  {
    "text": "opportunities for future improve all right so this should be running wait let's hope man I'm imagine that when you",
    "start": "2169119",
    "end": "2175059"
  },
  {
    "text": "plant isn't this work you put one sleep in there so you can look like a hero except you put it in a region so it was",
    "start": "2175059",
    "end": "2181240"
  },
  {
    "text": "collapsed and that won't pass Cordy beautiful um so to make this work I have",
    "start": "2181240",
    "end": "2187029"
  },
  {
    "text": "to do something that's a docker some stuff Oh someone",
    "start": "2187029",
    "end": "2192970"
  },
  {
    "text": "who runs it can zip in there's a Java oh it's already allocated okay let me stop",
    "start": "2192970",
    "end": "2199630"
  },
  {
    "text": "this thing you've already got oh it looks dead stop this container from",
    "start": "2199630",
    "end": "2205779"
  },
  {
    "text": "running and there's zip gained there's Jaeger and there's a ton of other tools dynaTrace and op insight so all kind of",
    "start": "2205779",
    "end": "2213369"
  },
  {
    "text": "tools to do the actual viewing of the tracing right to ingest this and then make something useful of it yes so opens",
    "start": "2213369",
    "end": "2219339"
  },
  {
    "text": "lavatory basically takes our event turns them into generic spans that are passed",
    "start": "2219339",
    "end": "2224829"
  },
  {
    "text": "to Zipkin or different exporters mm-hmm to run the antenna scenario so if I run",
    "start": "2224829",
    "end": "2230260"
  },
  {
    "text": "this no I should have a view of sorts okay just to make sure its moist I have",
    "start": "2230260",
    "end": "2236349"
  },
  {
    "text": "some logs show up I do okay I do need to run the application at some point",
    "start": "2236349",
    "end": "2243160"
  },
  {
    "text": "how is Zipkin reading from like where the logs going if you look at this configuration the configuration it is akin says used at endpoint oh just saw",
    "start": "2243160",
    "end": "2250990"
  },
  {
    "text": "where it says you said this like this middleware in the two apps that's available so each app is posting I say",
    "start": "2250990",
    "end": "2256839"
  },
  {
    "text": "that is it got it got it VL with census okay so that they were in",
    "start": "2256839",
    "end": "2262660"
  },
  {
    "text": "the right did you run it no this one it's running",
    "start": "2262660",
    "end": "2268599"
  },
  {
    "text": "application again any weird thing is that the the actual traces to the pin",
    "start": "2268599",
    "end": "2273700"
  },
  {
    "text": "show up as well oh that's a bug so okay so it's running it ran if I look at the",
    "start": "2273700",
    "end": "2280599"
  },
  {
    "text": "pin I should see something there you go it's fine one span to store water fully thing we can see I couldn't get it",
    "start": "2280599",
    "end": "2287319"
  },
  {
    "text": "working alright but in theory this works really well okay showing the actual trace it still this will work and to end",
    "start": "2287319",
    "end": "2295630"
  },
  {
    "text": "its didn't give other Tom Bishop and this will not show up because this is gonna work okay oh it's tracing it starting itself Tracy",
    "start": "2295630",
    "end": "2301750"
  },
  {
    "text": "okay cool nice so we're making progress there yeah kind of work sell it man sell",
    "start": "2301750",
    "end": "2309220"
  },
  {
    "text": "it right run time feature detection so if you have a library or you're doing any type of code that wants to emit code",
    "start": "2309220",
    "end": "2315670"
  },
  {
    "start": "2310000",
    "end": "2310000"
  },
  {
    "text": "at runtime this is quite popular for serializers or dependency injection containers or even our REMS and any",
    "start": "2315670",
    "end": "2323349"
  },
  {
    "text": "other audio mapper things like that they have to generate code at runtime and then compile it to make it faster you",
    "start": "2323349",
    "end": "2328510"
  },
  {
    "text": "need to be aware of what features the runtime has available to it you might be running on iOS because you've got a xamarin app and then you know there's no",
    "start": "2328510",
    "end": "2334150"
  },
  {
    "text": "JIT available to you okay but you might have an interpreter you're running and a native in a uwp application again no",
    "start": "2334150",
    "end": "2339940"
  },
  {
    "text": "chip you have an interpreter available to you for expression compilation and so we have these two flags that you can use",
    "start": "2339940",
    "end": "2345460"
  },
  {
    "text": "to detect the conditions of the runtime and then you can make a decision as the code author about what it is you want to",
    "start": "2345460",
    "end": "2351010"
  },
  {
    "text": "do do I support dynamic code being compiled and is dynamic code even supported at all okay thread pool",
    "start": "2351010",
    "end": "2357910"
  },
  {
    "start": "2357000",
    "end": "2357000"
  },
  {
    "text": "enhancements ok these are another one of those things that has helped us improve the performance of a snit core in",
    "start": "2357910",
    "end": "2362950"
  },
  {
    "text": "version 3 one of them is unsafe q user work item which does some advanced stuff with a thing called execution context",
    "start": "2362950",
    "end": "2369160"
  },
  {
    "text": "which great that's fantastic I throw people work item is much more interesting now when you in queue work",
    "start": "2369160",
    "end": "2374589"
  },
  {
    "text": "into the thread pool you can implement your own type that the thread pool will",
    "start": "2374589",
    "end": "2379900"
  },
  {
    "text": "then dispatch to ok so rather than the thread pool behind the scenes creating things every time you say run this please run this run this place which has",
    "start": "2379900",
    "end": "2385839"
  },
  {
    "text": "a memory overhead you can implement your own type and you can have a single one of those that caches things and clears",
    "start": "2385839",
    "end": "2390910"
  },
  {
    "text": "things in between runs which is what we do in Estoril that's what we do in the is module so that when we're doing",
    "start": "2390910",
    "end": "2397990"
  },
  {
    "text": "millions of requests per second and we're dispatching all of those i/o callbacks through the dead thread pool we're not getting any overhead by doing",
    "start": "2397990",
    "end": "2404800"
  },
  {
    "text": "so when it comes to memory because we get to manage all of that inside our own type alright so miscellaneous stuff and the",
    "start": "2404800",
    "end": "2411339"
  },
  {
    "text": "BCL support for processed kill and support and including the entire process tree which wasn't there before so you",
    "start": "2411339",
    "end": "2417700"
  },
  {
    "text": "can pass that now and kill all the child processes of a process bit operations type for doing advanced bit twiddling",
    "start": "2417700",
    "end": "2424180"
  },
  {
    "text": "for people who are really into like math and image manipulation and stuff like that sounds waves of sound files I guess",
    "start": "2424180",
    "end": "2430540"
  },
  {
    "text": "I don't know myself Visual Basic is back so if you're trying to port an application for",
    "start": "2430540",
    "end": "2435760"
  },
  {
    "text": "like a wind forms or WPF application that was written in VB to donate call 3 this is kind of important because of all the VB specific namespaces and",
    "start": "2435760",
    "end": "2442240"
  },
  {
    "text": "functionality might not my dog for example yet back in deco 3 and then a small one DB command now supports async",
    "start": "2442240",
    "end": "2449410"
  },
  {
    "text": "transactions so if you're doing begin and end transaction when that transaction ends you can now or even begins you can call that asynchronously",
    "start": "2449410",
    "end": "2456280"
  },
  {
    "text": "because there is i/o involved you are waiting on a database there's now an async version of that available for you alright",
    "start": "2456280",
    "end": "2461590"
  },
  {
    "text": "I've been to the server stuff a spinet core UNIX domain sockets is now natively supported and kestrel without having to",
    "start": "2461590",
    "end": "2468640"
  },
  {
    "start": "2463000",
    "end": "2463000"
  },
  {
    "text": "use libuv so we used to be based on libuv the native library that gave us cross-platform",
    "start": "2468640",
    "end": "2474070"
  },
  {
    "text": "io it was the same library that node was based on in a spirit core - we did the",
    "start": "2474070",
    "end": "2479170"
  },
  {
    "text": "work or two point one point one two by one we did the work to replant on top of the system net dot sockets",
    "start": "2479170",
    "end": "2484680"
  },
  {
    "text": "implementation by default the bv is still available as a package you can use it if you want to but by default since",
    "start": "2484680",
    "end": "2490540"
  },
  {
    "text": "then we use the native sockets in in.net that now supports UNIX domain sockets",
    "start": "2490540",
    "end": "2496240"
  },
  {
    "text": "whether you're on Windows 10 or above or Linux which is fantastic it's really",
    "start": "2496240",
    "end": "2501820"
  },
  {
    "text": "good for scenarios where you have a front-end like a reverse proxy that then needs to talk to your deck or process",
    "start": "2501820",
    "end": "2507430"
  },
  {
    "text": "and rather than using HTTP to proxy there you can use UNIX domain sockets which is just lower overhead okay so",
    "start": "2507430",
    "end": "2514180"
  },
  {
    "text": "that's on and available to you by default now static web assets in class",
    "start": "2514180",
    "end": "2519190"
  },
  {
    "start": "2517000",
    "end": "2517000"
  },
  {
    "text": "library some good stuff here so if you've got a razor class library because you've got razor views or pages or",
    "start": "2519190",
    "end": "2524800"
  },
  {
    "text": "blazer components that you want to ship as reusable components inside a library what do you do with the static assets",
    "start": "2524800",
    "end": "2531160"
  },
  {
    "text": "with the CSS files and the images in the JavaScript that supports that well we now have out-of-the-box default support",
    "start": "2531160",
    "end": "2537160"
  },
  {
    "text": "for embedding those inside of your project just as part of the build system you have to do anything special if the",
    "start": "2537160",
    "end": "2543460"
  },
  {
    "text": "files are in the project we will find them and we will compile them in then when you reference those from your application we know whether it's a",
    "start": "2543460",
    "end": "2550390"
  },
  {
    "text": "project a project reference or a project a new get reference and we will optimize depending on what that is and we will",
    "start": "2550390",
    "end": "2556030"
  },
  {
    "text": "set up your a spirit core application to find those static resources the way you reference them is with this little",
    "start": "2556030",
    "end": "2561550"
  },
  {
    "text": "convention so in my application now I would say the source is underscore content slash razor Lib one slash hello",
    "start": "2561550",
    "end": "2568180"
  },
  {
    "text": "DJ s if my name raise a lid one and then everything just works by default okay it's really really",
    "start": "2568180",
    "end": "2573550"
  },
  {
    "text": "nice support for doing so okay is server variable is another very small one if",
    "start": "2573550",
    "end": "2578920"
  },
  {
    "start": "2576000",
    "end": "2576000"
  },
  {
    "text": "you're running a spinet core inside is up until now you did not have support to read the server variables which gives",
    "start": "2578920",
    "end": "2584170"
  },
  {
    "text": "you all that really valuable information about how the server is configured what your connection currently is underneath you to the client and a whole bunch of",
    "start": "2584170",
    "end": "2590590"
  },
  {
    "text": "information about the request that's now available to you inside your new core application system that ioad up pipeline",
    "start": "2590590",
    "end": "2597010"
  },
  {
    "text": "so as a refresher this is the API that was effectively extracted from kestrels guts after a spirit called 2.1 that took",
    "start": "2597010",
    "end": "2604900"
  },
  {
    "text": "all the great work we did in kestrel for networking primitives memory management basically an inversion of the socket",
    "start": "2604900",
    "end": "2611140"
  },
  {
    "text": "philosophy and net and we now have that available as a separate set of api's you can now get access to the raw pipeline",
    "start": "2611140",
    "end": "2617950"
  },
  {
    "text": "that's underneath your request in response and read and write from that pipe okay and then we've read written or",
    "start": "2617950",
    "end": "2624550"
  },
  {
    "text": "you know some of the things in a spinet called shuffled them around to use the pipes directly rather than going through",
    "start": "2624550",
    "end": "2630550"
  },
  {
    "text": "the stream adapter right usually you would read the body and you get a stream type and then you call stream api's you",
    "start": "2630550",
    "end": "2636190"
  },
  {
    "text": "can now call the pipe api's to do that instead form parsing is no allegation for you and form pausing is now allocate",
    "start": "2636190",
    "end": "2642400"
  },
  {
    "text": "well that's pretty cool and that is the big advantage of pipes is because they manage the memory for you effectively if the pipe person is",
    "start": "2642400",
    "end": "2648400"
  },
  {
    "text": "doing that you get to reuse kestrels buffers kestrel was already allocating memory to deal with the connection to",
    "start": "2648400",
    "end": "2653650"
  },
  {
    "text": "deal with incoming requests and it's managing that memory for you you just want to read from that and have it take care of it and so form parsing is a",
    "start": "2653650",
    "end": "2660220"
  },
  {
    "text": "fantastic one because forms can be big alright speaking of pipelines and networking",
    "start": "2660220",
    "end": "2665820"
  },
  {
    "start": "2663000",
    "end": "2663000"
  },
  {
    "text": "some of the other parts of kestrel which was how we internally factored the fact that we have a transport layer and then",
    "start": "2665820",
    "end": "2672610"
  },
  {
    "text": "a bunch of logic that no matter what the transport has to deal with memory and connections and the logic around that",
    "start": "2672610",
    "end": "2678130"
  },
  {
    "text": "we've pulled out under I think or project bedrock just a project name is on the API name but this gives you the",
    "start": "2678130",
    "end": "2684100"
  },
  {
    "text": "ability to reuse all this logic in your own libraries whether they be servers or clients so for example the popular Redis",
    "start": "2684100",
    "end": "2691330"
  },
  {
    "text": "client that the stack exchange folks build is using these is going to end up using these libraries as well the dotnet",
    "start": "2691330",
    "end": "2697420"
  },
  {
    "text": "signal our client in core uses these same libraries and so now we have this really a line",
    "start": "2697420",
    "end": "2703390"
  },
  {
    "text": "client/server networking abstraction that doesn't care what actual networking layer you're using doesn't matter if",
    "start": "2703390",
    "end": "2708730"
  },
  {
    "text": "it's TCP or HTTP or whatever it might be it just deals with bytes basically right at all it is but it gives you all that",
    "start": "2708730",
    "end": "2714010"
  },
  {
    "text": "logic and we have a WebSocket connection it's how signal I uses it so I see what I can show here um all right so this",
    "start": "2714010",
    "end": "2723309"
  },
  {
    "text": "change actually happens super late because the Orleans team they actually copied signalers entirely transport",
    "start": "2723309",
    "end": "2729250"
  },
  {
    "text": "options into into Orleans we got a meeting about should we make a public API to be to set them together designed",
    "start": "2729250",
    "end": "2734260"
  },
  {
    "text": "an API and it happened to be to be put in Castro like last month oh wow okay",
    "start": "2734260",
    "end": "2739630"
  },
  {
    "text": "this is super fresh fresh okay um so I'll do it inside of application that has web just because it's simpler",
    "start": "2739630",
    "end": "2746130"
  },
  {
    "text": "there's no a new interface available I'll write a new thing this is all",
    "start": "2746130",
    "end": "2751559"
  },
  {
    "text": "unscripted unscripted scripted okay let's call it server server one I think",
    "start": "2751559",
    "end": "2758319"
  },
  {
    "text": "it's going to trust me it's good trust you with some things I hosted service",
    "start": "2758319",
    "end": "2765240"
  },
  {
    "text": "this will inject will start it when the whole starts I'm gonna inject a new",
    "start": "2766589",
    "end": "2773380"
  },
  {
    "text": "interface called a connection listener the names okay give us some feedback",
    "start": "2773380",
    "end": "2782339"
  },
  {
    "text": "truly Java connection listen a factory factory factory is one know just one I",
    "start": "2782339",
    "end": "2787390"
  },
  {
    "text": "guess that's a private area listener factory I know there's a snippet that",
    "start": "2787390",
    "end": "2793900"
  },
  {
    "text": "automates everything you're typing right now does it yes just consumed at first and then control dot little create flow",
    "start": "2793900",
    "end": "2800289"
  },
  {
    "text": "this feels wrong boom done alright so async adding value it's amazing factory",
    "start": "2800289",
    "end": "2808630"
  },
  {
    "text": "dot buying this thing passing in an endpoint so IP new IP endpoint and this",
    "start": "2808630",
    "end": "2817690"
  },
  {
    "text": "can be anything any kind of endpoint it can be a domain stock it could be a file handle UDP my yet okay you said any oh",
    "start": "2817690",
    "end": "2826710"
  },
  {
    "text": "Allah be a poor it those no Wars they",
    "start": "2826710",
    "end": "2831730"
  },
  {
    "text": "won't confirm anything else I'll get my calendar you know I should",
    "start": "2831730",
    "end": "2836890"
  },
  {
    "text": "ground service probably better",
    "start": "2836890",
    "end": "2840869"
  },
  {
    "text": "background listener was introduced in what version 2.2 point two one",
    "start": "2843930",
    "end": "2849190"
  },
  {
    "text": "chief on one or two point two two point one okay background service sorry under hidden I don't think we talked about it",
    "start": "2849190",
    "end": "2854470"
  },
  {
    "text": "much I didn't let's put it in you just checked image until anyone didn't yeah all right nice segue background service",
    "start": "2854470",
    "end": "2861010"
  },
  {
    "text": "is a type you can use in your a snake or apps to run stuff in the background okay that's what it is pretty cool to our",
    "start": "2861010",
    "end": "2866200"
  },
  {
    "text": "servers right and it will coordinate itself with the lifetime of the application give you a chance to shut down etc etc I have a listener I can",
    "start": "2866200",
    "end": "2873070"
  },
  {
    "text": "accept a sink get up get a connection and then I keep",
    "start": "2873070",
    "end": "2884590"
  },
  {
    "text": "thinking that's like a magician doing sleight of hand so you do know don't look over there over here so the goal",
    "start": "2884590",
    "end": "2890410"
  },
  {
    "text": "here it's a hat is to have the a snicker equivalent of the lower tension ler alright so you get back a an abstraction",
    "start": "2890410",
    "end": "2896500"
  },
  {
    "text": "that gives you a listener to something could be TCP could be named pipes could be whatever you want reaper in memory",
    "start": "2896500",
    "end": "2901770"
  },
  {
    "text": "and then you get a connection object which is your HCB contest equivalent for a connection and this guy's kind of an",
    "start": "2901770",
    "end": "2907270"
  },
  {
    "text": "abstraction over it's looking for you what did you hit power",
    "start": "2907270",
    "end": "2913930"
  },
  {
    "text": "I was born for f12 aggressively I thought we can blame Steve Jobs for",
    "start": "2913930",
    "end": "2921460"
  },
  {
    "text": "originally putting a power bomb in the top row of a condition that looks like every other key so here's the context is",
    "start": "2921460",
    "end": "2927580"
  },
  {
    "text": "this is your HTTP context for connections it has a bunch of basic things like ID connection closed",
    "start": "2927580",
    "end": "2933750"
  },
  {
    "text": "endpoints for your address and transfer which is your actual okay socket so to be clear again",
    "start": "2933750",
    "end": "2938920"
  },
  {
    "text": "this thing doesn't know how the bytes are getting to me right I know it's a connection of some sort something but it",
    "start": "2938920",
    "end": "2944890"
  },
  {
    "text": "doesn't matter I'm just dealing with the fact that there are things coming in I want to send stuff out right but the transport layer that was configured",
    "start": "2944890",
    "end": "2950860"
  },
  {
    "text": "separately right TCP whatever it might whatever was fair enough so for example I know for a fact this app is running",
    "start": "2950860",
    "end": "2956350"
  },
  {
    "text": "cash flow so it should have the suckage transport configured right so I'm I'm",
    "start": "2956350",
    "end": "2962080"
  },
  {
    "text": "passing it an IP IP they know that can support I said yeah okay so I get a listener back on this port get a",
    "start": "2962080",
    "end": "2968740"
  },
  {
    "text": "connection and and typical while-loop you do when you write a server if you done before",
    "start": "2968740",
    "end": "2974760"
  },
  {
    "text": "connections result there's so many times",
    "start": "2974760",
    "end": "2980859"
  },
  {
    "text": "no connection dot transport you read from the incoming transport read async",
    "start": "2980859",
    "end": "2986290"
  },
  {
    "text": "okay get a thing back if result is completed this is the pipelines to model if you haven't seen",
    "start": "2986290",
    "end": "2992290"
  },
  {
    "text": "it before you don't pass in the buffer one is given to you because it handles that management for you in the divers",
    "start": "2992290",
    "end": "2997570"
  },
  {
    "text": "manages the memory for you under the covers connection transport input",
    "start": "2997570",
    "end": "3003540"
  },
  {
    "text": "there's a lot of thoughts buffered and neither is I'm watching it's okay I need to move this all the",
    "start": "3003540",
    "end": "3010830"
  },
  {
    "text": "way so now I'm gonna write to the output connection transport output dot right",
    "start": "3010830",
    "end": "3016550"
  },
  {
    "text": "just an echo so yep okay just to don't judge me this is a demo okay don't you",
    "start": "3016550",
    "end": "3023730"
  },
  {
    "text": "allocate right they won't do to array just easier for no so this does a loop",
    "start": "3023730",
    "end": "3030660"
  },
  {
    "text": "until the catch is over and it takes the incoming bytes that got back writes to the output and this advance is the",
    "start": "3030660",
    "end": "3036960"
  },
  {
    "text": "buffer okay anything break right very simple um this is the whole server so",
    "start": "3036960",
    "end": "3042540"
  },
  {
    "text": "that's an echo server yeah is anything it receives it'll send it back yep okay awesome that's it are you gonna",
    "start": "3042540",
    "end": "3048810"
  },
  {
    "text": "say I'm gonna connect to it I happen to have putty in my tree oh just happened",
    "start": "3048810",
    "end": "3055140"
  },
  {
    "text": "to be there that looks like it tried to",
    "start": "3055140",
    "end": "3060150"
  },
  {
    "text": "bind to something you already died its name horribly ok this happened before uh",
    "start": "3060150",
    "end": "3068990"
  },
  {
    "text": "who is both my port who is taking oh you know what we have eggsy's no that's what",
    "start": "3069140",
    "end": "3074820"
  },
  {
    "text": "that's the problem ok before it was easy no I got search for a real name hmm",
    "start": "3074820",
    "end": "3080990"
  },
  {
    "text": "what's the app called oh not that one but you know what publishing sample I",
    "start": "3080990",
    "end": "3087450"
  },
  {
    "text": "know things I wrote it was I know the things work so I can just change great",
    "start": "3087450",
    "end": "3097190"
  },
  {
    "text": "Oh perfect beautiful wait I should hit the buck see if it works hold on",
    "start": "3097190",
    "end": "3102380"
  },
  {
    "text": "actually put a breakpoint here because I actually get up so I have to actually add this initially okay you haven't",
    "start": "3102380",
    "end": "3109849"
  },
  {
    "text": "actually told anyone about it yes what is it going I hosted service everyone so",
    "start": "3109849",
    "end": "3116000"
  },
  {
    "text": "no this should get called so I have a",
    "start": "3116000",
    "end": "3123440"
  },
  {
    "text": "background service in an asp net application that itself is grabbing the connection factory from kestrel from the",
    "start": "3123440",
    "end": "3129680"
  },
  {
    "text": "manor from the container and then saying create me a new endpoint on a different port alright that is going to speak is",
    "start": "3129680",
    "end": "3136190"
  },
  {
    "text": "going to be an echo server yeah okay along with the HTTP so using TCP because",
    "start": "3136190",
    "end": "3141500"
  },
  {
    "text": "I know kestrels that is the server in this case it doesn't know one raw okay",
    "start": "3141500",
    "end": "3149530"
  },
  {
    "text": "whoo",
    "start": "3149530",
    "end": "3152530"
  },
  {
    "text": "there you go nice I think they get the point okay that's good",
    "start": "3159440",
    "end": "3165240"
  },
  {
    "text": "nice then was super cool now if you've ever done that with the existing API",
    "start": "3165240",
    "end": "3171540"
  },
  {
    "text": "isn't net it's not that easy no especially not to do it a synchronously and with good memory management all the",
    "start": "3171540",
    "end": "3176700"
  },
  {
    "text": "rest of it this one is still tied to TCP but you could abstract this slightly and",
    "start": "3176700",
    "end": "3181920"
  },
  {
    "text": "have a more generic if you something else you would be fine and you could get",
    "start": "3181920",
    "end": "3187140"
  },
  {
    "text": "rid of that buffer allocation if you wanted that to array if you want to",
    "start": "3187140",
    "end": "3191600"
  },
  {
    "text": "suite bedrock all right so we got a new support in routing we've had this request for ever to support route",
    "start": "3194060",
    "end": "3201420"
  },
  {
    "text": "matching based on the host right the request came in to this server because my server is bound to multiple host",
    "start": "3201420",
    "end": "3206970"
  },
  {
    "text": "names can I please do routing based on that and forever we said no and now we're saying okay and that's in three oh",
    "start": "3206970",
    "end": "3212850"
  },
  {
    "text": "because we have a new system endpoint routing and it made it even as he's like a good time to do it and it was easy to do so for example you could have a",
    "start": "3212850",
    "end": "3220290"
  },
  {
    "text": "controller that only matches when the incoming request came in on a specific",
    "start": "3220290",
    "end": "3225390"
  },
  {
    "text": "host name okay which is kind of cool very useful for multi-tenancy scenarios where you want to have different host",
    "start": "3225390",
    "end": "3231750"
  },
  {
    "text": "names configured for multiple tenants and then you want to be able to have different application parts or types that only resolve to that or if you want",
    "start": "3231750",
    "end": "3237990"
  },
  {
    "text": "to expose multiple endpoints like for example internal only ports and you've got special logic that you can only get",
    "start": "3237990",
    "end": "3243540"
  },
  {
    "text": "to if you're on localhost or something like that so you have a demo of this one that's worth showing so it's pretty pretty great okay if you do say so",
    "start": "3243540",
    "end": "3250590"
  },
  {
    "text": "yourself okay I made it so it's good okay all right so here's the demo very fast demo",
    "start": "3250590",
    "end": "3256320"
  },
  {
    "text": "two actions on the same controller okay Sam wrote different hosts okay so this",
    "start": "3256320",
    "end": "3262710"
  },
  {
    "text": "good this one should respond to only a CPS 5001 this one should respond to HTTP 5,000 okay different name because you",
    "start": "3262710",
    "end": "3269160"
  },
  {
    "text": "can show me my t-shirt I should run this no and 5,000 is not you know what you",
    "start": "3269160",
    "end": "3277980"
  },
  {
    "text": "know what I think it is conference planner No",
    "start": "3277980",
    "end": "3283940"
  },
  {
    "text": "it's not it's not alright again six",
    "start": "3285630",
    "end": "3290750"
  },
  {
    "text": "alright there's a lot of those numbers so we can do this all day oh we're nice method ha could I read the",
    "start": "3290750",
    "end": "3299760"
  },
  {
    "text": "conflict from Kestrel and make that dynamic I couldn't because it's this one is a declarative you could add that",
    "start": "3299760",
    "end": "3305400"
  },
  {
    "text": "route constraint I made a demo imperative Lee right don't ruin it okay sorry you can you could though it's",
    "start": "3305400",
    "end": "3310710"
  },
  {
    "text": "accountable it's possible okay cuz I saw repeated strings and that just triggers me why did that everyone drinks because",
    "start": "3310710",
    "end": "3316950"
  },
  {
    "text": "right doesn't know one there it is 6,000 HTTP doesn't work",
    "start": "3316950",
    "end": "3325130"
  },
  {
    "text": "unsafe poor unsafe port that's an awesome error this is okay hold on hold",
    "start": "3325130",
    "end": "3333780"
  },
  {
    "text": "on you have 12 seconds hold on hold on what I'm sayin see I've never seen that",
    "start": "3333780",
    "end": "3344760"
  },
  {
    "text": "before you want David as your device",
    "start": "3344760",
    "end": "3355700"
  },
  {
    "text": "manager ass that one oh no wait hold on six one two this is",
    "start": "3355700",
    "end": "3376920"
  },
  {
    "text": "just horrific on stage okay in front of",
    "start": "3376920",
    "end": "3381960"
  },
  {
    "text": "you all so this time is gonna work I plan it's all planned okay port safe",
    "start": "3381960",
    "end": "3391800"
  },
  {
    "text": "port was six thousand like reserved or something and then it's ephemeral but okay there you go",
    "start": "3391800",
    "end": "3398060"
  },
  {
    "text": "well done nice safe landing alright support for trailing headers so you can",
    "start": "3398060",
    "end": "3403500"
  },
  {
    "start": "3400000",
    "end": "3400000"
  },
  {
    "text": "actually send headers after you've sent the HTTP response body who knew how long has that been a thing ever forever",
    "start": "3403500",
    "end": "3409650"
  },
  {
    "text": "forever there's nothing supported it yeah okay so we now support that it was required to support G IPC and we've got",
    "start": "3409650",
    "end": "3416850"
  },
  {
    "text": "supporting both HTTP client for this and in the server and it's useful for doing things in server programming like",
    "start": "3416850",
    "end": "3423180"
  },
  {
    "text": "sending perhaps timing information about how long it took you to process the request you can't do that until you've",
    "start": "3423180",
    "end": "3428640"
  },
  {
    "text": "processed the request so you need to assent the body first and then you could quickly append a header at the end that says this is how much time I took we",
    "start": "3428640",
    "end": "3435570"
  },
  {
    "start": "3435000",
    "end": "3435000"
  },
  {
    "text": "have made it improvement to the developer exception page you we can now send non HTML responses to clients that",
    "start": "3435570",
    "end": "3442530"
  },
  {
    "text": "don't support HTML so if you ever use like postman to hit your app during development and you get an arrow and it just sends you back a huge blob of HTML",
    "start": "3442530",
    "end": "3449160"
  },
  {
    "text": "in the thing designed to look at plain text and Jason now it won't now it will send you nice plain text exception",
    "start": "3449160",
    "end": "3455070"
  },
  {
    "text": "details based on the developer environment which is fantastic there's also an extensive ility hook eye",
    "start": "3455070",
    "end": "3460650"
  },
  {
    "text": "developer page exception filter and so now you can plug in your own custom view so for example if you wanted to send a",
    "start": "3460650",
    "end": "3466500"
  },
  {
    "text": "JSON exception format you could for a specific exception you could we're gonna",
    "start": "3466500",
    "end": "3471870"
  },
  {
    "text": "update the entity framework cause specific developer exception page to not be its own middleware but instead just plug into this one developer exception",
    "start": "3471870",
    "end": "3478260"
  },
  {
    "text": "page just to clean things up a bit so that's coming as well we're not going to demo this but we've got improvements for",
    "start": "3478260",
    "end": "3483510"
  },
  {
    "start": "3481000",
    "end": "3481000"
  },
  {
    "text": "compression up until now we would not serve anything compressed when you are over HTTP due to historical security",
    "start": "3483510",
    "end": "3491100"
  },
  {
    "text": "concerns with attacks like crime and breach but now we've got support for you",
    "start": "3491100",
    "end": "3496200"
  },
  {
    "text": "during the request to say no I know this is safe there's no user data in here that can be manipulated by the client so",
    "start": "3496200",
    "end": "3502380"
  },
  {
    "text": "you can't do timing attacks in that type of thing and then we implement that by default by the static file middle way so now static files will get compressed in",
    "start": "3502380",
    "end": "3510000"
  },
  {
    "text": "a spinet core and they also support broadly by default now in a submit call super super helpful we did with them",
    "start": "3510000",
    "end": "3515910"
  },
  {
    "text": "before that as well but you can do so you can put code in your razor page or in a filter arm and I come up with a",
    "start": "3515910",
    "end": "3520950"
  },
  {
    "text": "scheme for saying I know that this page is safe it's not ever showing user input that can be manipulated and so please",
    "start": "3520950",
    "end": "3527160"
  },
  {
    "text": "compress it all right the last layer we're gonna have two bursts through this we've got a system D integration now if you're hosting a background service like",
    "start": "3527160",
    "end": "3532980"
  },
  {
    "start": "3529000",
    "end": "3529000"
  },
  {
    "text": "a Windows service or Linux that's coming in three oh it just got checked in like a week ago the ability",
    "start": "3532980",
    "end": "3538230"
  },
  {
    "text": "to get all of your configuration values in one big dump which is very useful for debugging you can do that now with you",
    "start": "3538230",
    "end": "3543750"
  },
  {
    "text": "get debug view you can validate your service provider that is the container when it is being built during",
    "start": "3543750",
    "end": "3549930"
  },
  {
    "text": "applications start so then instead of finding out you miss configured di like 14 requests into the server",
    "start": "3549930",
    "end": "3555610"
  },
  {
    "text": "starting when you first get a type you can just have it fail immediately and that's enabled by default during",
    "start": "3555610",
    "end": "3560740"
  },
  {
    "text": "development so you can find out very quickly we now have support for options validation so if you're using configuration and binding those two",
    "start": "3560740",
    "end": "3567010"
  },
  {
    "start": "3562000",
    "end": "3562000"
  },
  {
    "text": "options types and you want to make sure you have a Mista configuration value there is built-in support now for",
    "start": "3567010",
    "end": "3572500"
  },
  {
    "text": "writing a method to validate your options or even using the data annotations that you use on your models in MVC and in any framework to validate",
    "start": "3572500",
    "end": "3579610"
  },
  {
    "text": "your options as well and again the app will just stop and then you'll know that you've misconfigured your environment if",
    "start": "3579610",
    "end": "3584740"
  },
  {
    "text": "you want to use loggers outside of a spinet core in a console app where there's no di we've got a factory method",
    "start": "3584740",
    "end": "3589930"
  },
  {
    "text": "that static that you can do that with right now and then you can also load configuration sources like JSON and XML",
    "start": "3589930",
    "end": "3595450"
  },
  {
    "text": "and any and yam all from streams now so that you can get them from memory right",
    "start": "3595450",
    "end": "3600760"
  },
  {
    "text": "from a bit of resources or key vault or anything like that not just files which is kind of cool that is it stuck the landing please",
    "start": "3600760",
    "end": "3607390"
  },
  {
    "text": "follow us on Twitter ask us any questions we will make this demo all the demos and the PowerPoint available on",
    "start": "3607390",
    "end": "3613540"
  },
  {
    "text": "david's github by the end of the day yeah end of the day thank you very much for coming along and we are on a panel",
    "start": "3613540",
    "end": "3619450"
  },
  {
    "text": "this evening a feature of dotnet if you want to come and see us talk with a couple of other folks so I can't remember right now then do that",
    "start": "3619450",
    "end": "3625390"
  },
  {
    "text": "otherwise thank you everyone and we'll see you next time Thanks",
    "start": "3625390",
    "end": "3630000"
  },
  {
    "text": "you",
    "start": "3631290",
    "end": "3633350"
  }
]