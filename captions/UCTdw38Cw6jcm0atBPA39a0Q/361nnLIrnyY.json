[
  {
    "text": "so over the last couple of years Tucker has definitely made an impact in",
    "start": "9690",
    "end": "15030"
  },
  {
    "text": "people's lives it changed how we can deploy applications on to Linux conferences like ourselves have got some",
    "start": "15030",
    "end": "21599"
  },
  {
    "text": "awesome speakers talking about how we can change deployments make everything more scalable and easier and how",
    "start": "21599",
    "end": "28710"
  },
  {
    "text": "wonderful the world of Linux is yet for those of us who are still in the Windows",
    "start": "28710",
    "end": "34500"
  },
  {
    "text": "focus world it's not been for too great story like we don't have we didn't have",
    "start": "34500",
    "end": "39809"
  },
  {
    "text": "containers we didn't have such a deployment strategy and everyone in the Linux world with having so much more fun",
    "start": "39809",
    "end": "46040"
  },
  {
    "text": "well thankfully with the arrival of Windows Server 2016 that now changed",
    "start": "46040",
    "end": "52020"
  },
  {
    "text": "Windows containers are now native they're part of the operating system itself and so we can have all of these",
    "start": "52020",
    "end": "59190"
  },
  {
    "text": "fun which limits containers are having yet deploying our windows focused apps",
    "start": "59190",
    "end": "64198"
  },
  {
    "text": "and so this is what I'm going to be talking about today and I want to introduce what containers out the",
    "start": "64199",
    "end": "69299"
  },
  {
    "text": "concept but more particularly how they apply to Windows and what benefits and",
    "start": "69299",
    "end": "74369"
  },
  {
    "text": "value that brings so my name is Ben hall I am the founder of a company called cat",
    "start": "74369",
    "end": "79950"
  },
  {
    "text": "coda cats coda is an interactive learning platform for software developers we host interactive",
    "start": "79950",
    "end": "86429"
  },
  {
    "text": "environments that are accessible via the browser and neither pre-configured with docker kubernetes and very thin windows",
    "start": "86429",
    "end": "93569"
  },
  {
    "text": "containers and so you can experiment and play around without having to download or install anything and to give you some",
    "start": "93569",
    "end": "100229"
  },
  {
    "text": "tips and hints and so you know what you need to learn and what's important we included that web tutorials and so you",
    "start": "100229",
    "end": "106259"
  },
  {
    "text": "can follow those along and learn all of the skills and technologies which I'm going to talk about today then what",
    "start": "106259",
    "end": "112619"
  },
  {
    "text": "Emily actually gonna talk about well I'm gonna start with an introduction into building and deploying windows",
    "start": "112619",
    "end": "118889"
  },
  {
    "text": "containers I'm going to compare this to how it looks in the Linux wheels for those who are familiar and kind of",
    "start": "118889",
    "end": "124200"
  },
  {
    "text": "played around with dock on Linux look at hyper-v containers with a slightly differently how we can start deploying",
    "start": "124200",
    "end": "131370"
  },
  {
    "text": "can they containers at scale using things like Kiba Nettie's and swarm and it finally looked towards the future and",
    "start": "131370",
    "end": "137490"
  },
  {
    "text": "where I think the container landscape is going so before we get into this",
    "start": "137490",
    "end": "142990"
  },
  {
    "text": "take step back and let's look at what containers up and look at where containers are important and if you",
    "start": "142990",
    "end": "149320"
  },
  {
    "text": "think of where we are previously and before what we had containers we generally dealing with virgin jinx and",
    "start": "149320",
    "end": "154930"
  },
  {
    "text": "as I'm sure many of you is very aware virtual machines have many different problems they're very big very heavy",
    "start": "154930",
    "end": "161370"
  },
  {
    "text": "resource intensive and we totally wanted to deploy a very simple done application",
    "start": "161370",
    "end": "166750"
  },
  {
    "text": "or very simple node application if you wanted to rely on a thumb box in isolation it would have to have a",
    "start": "166750",
    "end": "172540"
  },
  {
    "text": "virtual machine wrapped around it but in order for that machine to learn we'd have to have a guest operating system and so we'd have to pre allocate four",
    "start": "172540",
    "end": "179590"
  },
  {
    "text": "gigs of RAM certain amount of this space settlement of kind of resources in order",
    "start": "179590",
    "end": "186640"
  },
  {
    "text": "just to have that know process in a secure stable way and it kind of had overheads but it also had slow boot",
    "start": "186640",
    "end": "193870"
  },
  {
    "text": "times which made a difficult scale or dynamically because we'd have to wait for our ec2 machine or sure machine to",
    "start": "193870",
    "end": "200320"
  },
  {
    "text": "be took it would throw to build and maintain and keep up today and generally it just wasn't that fun and so what",
    "start": "200320",
    "end": "208240"
  },
  {
    "text": "containers have started to do they've started to allow us to think about how we can separate our application and our",
    "start": "208240",
    "end": "214720"
  },
  {
    "text": "deployment from our infrastructure level concerns and as we thought of how many",
    "start": "214720",
    "end": "219940"
  },
  {
    "text": "separations we started introduced flexibility in flexibility into how we build applications but more importantly",
    "start": "219940",
    "end": "226210"
  },
  {
    "text": "how we scale in Windows in production and so if you think about where we are",
    "start": "226210",
    "end": "231910"
  },
  {
    "text": "with the container software process we still have our based operating system so",
    "start": "231910",
    "end": "237130"
  },
  {
    "text": "we still have Linux CentOS or in our case in Windows Windows Server 2016 this",
    "start": "237130",
    "end": "244060"
  },
  {
    "text": "will be running on a bare metal box somewhere or likely Azure which has got some great support for Windows as did",
    "start": "244060",
    "end": "251620"
  },
  {
    "text": "giggle if you got to be to the guys upstairs Downstairs I don't know which way where but go speak to their beef so",
    "start": "251620",
    "end": "259450"
  },
  {
    "text": "we have this operating system would you expect and then when we build and come to deploying our applications we can build out the container and then that",
    "start": "259450",
    "end": "265750"
  },
  {
    "text": "gets rolled out and so when we look at things like Arthi itd pipeline developer to the git push instead of traditionally",
    "start": "265750",
    "end": "272950"
  },
  {
    "text": "that going to a teamcity a gem which would become with particular versions have done their",
    "start": "272950",
    "end": "278180"
  },
  {
    "text": "particular versions of Java and we have to manage those if we want to talk later apps instead we now do a docker build",
    "start": "278180",
    "end": "284810"
  },
  {
    "text": "and that duck-billed encapsulate all the instructions about how our application needs to be deployed how it needs to be",
    "start": "284810",
    "end": "290930"
  },
  {
    "text": "bill if dependencies that builds the image and that's what we push out and so",
    "start": "290930",
    "end": "296990"
  },
  {
    "text": "we have diff middle set which is produced in this docker image and our previously therefore they focused on Linux but as I said we now have our",
    "start": "296990",
    "end": "304010"
  },
  {
    "text": "beautiful Windows support and if images what gets promoted and pushed through",
    "start": "304010",
    "end": "309410"
  },
  {
    "text": "the various different stages and they're kind of going up and so if if introduces the concept of ensuring that we've got",
    "start": "309410",
    "end": "316310"
  },
  {
    "text": "consistency and repeatability and we're not getting side effects between different versions of what may be",
    "start": "316310",
    "end": "322250"
  },
  {
    "text": "winning and staging compared to the version of.net which is actually winning in production and oh this is jiminy what",
    "start": "322250",
    "end": "330710"
  },
  {
    "text": "i'm sure many of used to in the hypervisor world we've got the hypervisor and the guest operating",
    "start": "330710",
    "end": "336080"
  },
  {
    "text": "systems running on top of it - which have this overhead and this resource",
    "start": "336080",
    "end": "341840"
  },
  {
    "text": "attached to them and then kind of mohamed describe it now now in a",
    "start": "341840",
    "end": "347000"
  },
  {
    "text": "container world we've got order containers winning they're all sandbox and isolated and I'm running on top of",
    "start": "347000",
    "end": "352040"
  },
  {
    "text": "this container engine and each one has you can kind of think of docker and",
    "start": "352040",
    "end": "357260"
  },
  {
    "text": "containers as just a glorified process manager it's still the same processes which were used to launching it's still",
    "start": "357260",
    "end": "363530"
  },
  {
    "text": "the same applications the only difference is now that they're winning in a secure sandbox mode if taking",
    "start": "363530",
    "end": "369590"
  },
  {
    "text": "advantage of hooks in the kernel separation that comes with Linux and now convinced windows and just defined",
    "start": "369590",
    "end": "377030"
  },
  {
    "text": "enough for you in a very nice accessible way everything which we could do with docker had been around for the last ten",
    "start": "377030",
    "end": "383240"
  },
  {
    "text": "or so years it was just very difficult very hard work with docker just cleaned",
    "start": "383240",
    "end": "388430"
  },
  {
    "text": "that up and made it accessible and so people generally say that this container win time sits in between your own system",
    "start": "388430",
    "end": "394460"
  },
  {
    "text": "and your applications in reality it fits alongside your application your",
    "start": "394460",
    "end": "399980"
  },
  {
    "text": "processes are still talking to you in your line operating system that they would before the container engine if",
    "start": "399980",
    "end": "405590"
  },
  {
    "text": "this wrapping air making it easier of processes to be managed and started and for this is why I think containers",
    "start": "405590",
    "end": "412689"
  },
  {
    "text": "are very similar principles and very similar properties to virtual machines in reality they're just processes they",
    "start": "412689",
    "end": "419620"
  },
  {
    "text": "have processes and we can build these images which are encapsulating what",
    "start": "419620",
    "end": "425199"
  },
  {
    "text": "opposes needs to be had to start and it is what doc had made them accessible and",
    "start": "425199",
    "end": "431289"
  },
  {
    "text": "if for a long a great development experience and to go alongside that but",
    "start": "431289",
    "end": "436870"
  },
  {
    "text": "they're also realistic doc and know that I can't answer every single problem and try and invent and solve every single",
    "start": "436870",
    "end": "444270"
  },
  {
    "text": "part of the production story so instead they have a mindset of batteries",
    "start": "444270",
    "end": "449800"
  },
  {
    "text": "included but removable so if you have certain very interesting networking",
    "start": "449800",
    "end": "455860"
  },
  {
    "text": "requirements or you have very interesting expensive storage devices docking no that is probably not the best",
    "start": "455860",
    "end": "462099"
  },
  {
    "text": "person on the order to be able to solve those there's going to be companies like HP there could be EMC and dal which will",
    "start": "462099",
    "end": "470529"
  },
  {
    "text": "stove and create their unique targeted solutions in order to solve their unique",
    "start": "470529",
    "end": "475830"
  },
  {
    "text": "high-end problems and the duck is made accessible they've made it they plug and driven and so you can swap",
    "start": "475830",
    "end": "481719"
  },
  {
    "text": "how an interchange certain parts of the software stack in order to meet your requirements but fundamentally there are",
    "start": "481719",
    "end": "488379"
  },
  {
    "text": "three concepts we've got the containers which are fundamentally winning processes we've got docker images which",
    "start": "488379",
    "end": "494289"
  },
  {
    "text": "are fundamentally layer dip files is a zip file of everything your process needs from operating system up to your",
    "start": "494289",
    "end": "500800"
  },
  {
    "text": "packages including your application and your binaries itself and then you've got a docker registry which is images sit",
    "start": "500800",
    "end": "507789"
  },
  {
    "text": "and if bridges the gap between like your CI server and your build servers to",
    "start": "507789",
    "end": "512828"
  },
  {
    "text": "production itself and so many say docker burn it goes off to the registry grabs whichever version you need that is what",
    "start": "512829",
    "end": "519610"
  },
  {
    "text": "gets downloaded and launched and Felicity what we have with docker and now with the advantage of Windows",
    "start": "519610",
    "end": "525730"
  },
  {
    "text": "the docker itself has been extended and for taking advantage of the multi",
    "start": "525730",
    "end": "533910"
  },
  {
    "text": "architecture and multiples of golang these aspects of the Duck Sauce code had",
    "start": "533910",
    "end": "541470"
  },
  {
    "text": "been prefixed so if this is part of the windows build looks eels but we've got",
    "start": "541470",
    "end": "548520"
  },
  {
    "text": "some really interesting kind of abstractions that docker has introduced and also Microsoft the Microsoft have",
    "start": "548520",
    "end": "555150"
  },
  {
    "text": "completely done it in the open more or less anyway and so you can see them I could go Windows io abstraction and so",
    "start": "555150",
    "end": "563670"
  },
  {
    "text": "you can see that duck with trying to work and collaborate with my aft in order to build something which feels",
    "start": "563670",
    "end": "569010"
  },
  {
    "text": "very natural and coherent to what the rest of the docker story is and I said",
    "start": "569010",
    "end": "575190"
  },
  {
    "text": "we get very natural and seamless experience from a development and production because it's actually part of",
    "start": "575190",
    "end": "581430"
  },
  {
    "text": "the engine itself it's not an add-on it's not a fork if not from out of they",
    "start": "581430",
    "end": "586590"
  },
  {
    "text": "build instead it embedded and it's integrated into the entire docker process and a build process and the",
    "start": "586590",
    "end": "592380"
  },
  {
    "text": "testing phases and everything would say go through in order to release the applications and so docker has made",
    "start": "592380",
    "end": "598020"
  },
  {
    "text": "effort most of the made effort to make it feel natural and consistent with and",
    "start": "598020",
    "end": "603150"
  },
  {
    "text": "the docker experience and alongside that obviously the windows needed to be",
    "start": "603150",
    "end": "608550"
  },
  {
    "text": "easier in order to be able to support these container concepts darker motived",
    "start": "608550",
    "end": "614220"
  },
  {
    "text": "have tried for many years in order to have containers at part of the operating system they've tried to secure operating",
    "start": "614220",
    "end": "620550"
  },
  {
    "text": "systems different research projects and it's only now with 2016 that they finally managed to introduce being able",
    "start": "620550",
    "end": "628830"
  },
  {
    "text": "to how processes which are thumb boxed and lob down and secured in different ways and her abstracted and thumb boxed",
    "start": "628830",
    "end": "637790"
  },
  {
    "text": "from other things winning on the system and as part of this story they needed to",
    "start": "637790",
    "end": "643589"
  },
  {
    "text": "add different aspects to the Windows operating system as a whole and",
    "start": "643589",
    "end": "648920"
  },
  {
    "text": "therefore key concepts which came with the introduction of Windows Server 2016",
    "start": "648920",
    "end": "654089"
  },
  {
    "text": "we have Windows server core and Windows Nano he either knew our plain systems designed to learn inside of container",
    "start": "654089",
    "end": "660960"
  },
  {
    "text": "and see the bootstrapping your process and given it all of the API that you're possessed needs and they field winning",
    "start": "660960",
    "end": "667650"
  },
  {
    "text": "on a Windows operating system virtual machine itself and then in order to manage we've got windows containers and windows",
    "start": "667650",
    "end": "674759"
  },
  {
    "text": "hyper-v containers they work and operate very similarly the main difference is",
    "start": "674759",
    "end": "680310"
  },
  {
    "text": "that hyper-v containers have a more advanced security model around them and we'll get more into the details as we",
    "start": "680310",
    "end": "687269"
  },
  {
    "text": "progress towards the end but just understand that food if of those being reality they work exactly the same way",
    "start": "687269",
    "end": "693660"
  },
  {
    "text": "they were going to same processes the same images hyper-v is just in a more secure mode and the architecture of",
    "start": "693660",
    "end": "700410"
  },
  {
    "text": "docker and windowed containers feels so he can system very coherent to what we saw before we have our operating system",
    "start": "700410",
    "end": "706769"
  },
  {
    "text": "we have two windows kernel which had got all of the hooks that containers need and then a dock of engine will talk to",
    "start": "706769",
    "end": "713670"
  },
  {
    "text": "the Windows kernel in order to launch processes such a sequel server asp.net applications is etc and Adam sure some",
    "start": "713670",
    "end": "723540"
  },
  {
    "text": "of you are aware with Linux containers the windows kernel or the Linux kernel it said every single process if you",
    "start": "723540",
    "end": "730259"
  },
  {
    "text": "think that shared same kernel and we're taking and trusting the security which",
    "start": "730259",
    "end": "736560"
  },
  {
    "text": "had been built in to make sure that of the applications called communicate and I can't break how and interfere with",
    "start": "736560",
    "end": "742829"
  },
  {
    "text": "other processes now in certain requirements differs entities some concerns that no no they were outbreaks",
    "start": "742829",
    "end": "751139"
  },
  {
    "text": "at the moment that no container breaches but it still raises film insurgency and",
    "start": "751139",
    "end": "756569"
  },
  {
    "text": "from question marks and this is where the Windows hyper-v container comes in it's specially designed to deliver a",
    "start": "756569",
    "end": "762899"
  },
  {
    "text": "separate kernel from the other containers which are running on the machine and so you can guarantee that",
    "start": "762899",
    "end": "769230"
  },
  {
    "text": "there's isolation because it's been backed it died of a hyper-v virtual machine and so now can be confident that",
    "start": "769230",
    "end": "775439"
  },
  {
    "text": "our sequel service process while it's still willing in a container it's running on a different kernel inside of",
    "start": "775439",
    "end": "781620"
  },
  {
    "text": "the virtual machine just said we were in think'll server natively the main difference is that we have the docker",
    "start": "781620",
    "end": "786810"
  },
  {
    "text": "images the dock workflow around that and this window the utility VM which had",
    "start": "786810",
    "end": "792300"
  },
  {
    "text": "been added is super lightweight it's starts 8 milliseconds it barely any",
    "start": "792300",
    "end": "799980"
  },
  {
    "text": "overhead and he can't really notice any performance impact and like winning a guest operating or",
    "start": "799980",
    "end": "805900"
  },
  {
    "text": "additional virtual machine instead of just there in order to be able to offer this separate Windows kernel and so the",
    "start": "805900",
    "end": "813880"
  },
  {
    "text": "reason it is important is that generally windows containers I've known of containers are secured they're effective",
    "start": "813880",
    "end": "819750"
  },
  {
    "text": "they're highly scalable except to an order benefits which I'm sure many of us",
    "start": "819750",
    "end": "824920"
  },
  {
    "text": "know and love these hyper-v containers comes in we're dealing with scenario if it's a shared hosting so if",
    "start": "824920",
    "end": "831580"
  },
  {
    "text": "you're willing a jaw or hurry coup or things you like at Skoda you may have",
    "start": "831580",
    "end": "836740"
  },
  {
    "text": "cold which is completely interested then our code may be maliciously targeting",
    "start": "836740",
    "end": "842260"
  },
  {
    "text": "other parts of your system now if you're willing something like assured that could be potentially dangerous because",
    "start": "842260",
    "end": "848260"
  },
  {
    "text": "they're constantly competitors which are winning on the same scene the different",
    "start": "848260",
    "end": "853420"
  },
  {
    "text": "government agents other things which probably don't want to be accidentally sharing information and again",
    "start": "853420",
    "end": "860650"
  },
  {
    "text": "multi-tenancy where you may have to myth which you're hosting we you don't want",
    "start": "860650",
    "end": "865690"
  },
  {
    "text": "them to be able to interact or interfere with the code which is happening on your system",
    "start": "865690",
    "end": "870700"
  },
  {
    "text": "and so this is where you have that added value of Windows hyper-v containers in",
    "start": "870700",
    "end": "876370"
  },
  {
    "text": "your Linux world you may have come across a concept core from Intel called clear containers it's the same concept",
    "start": "876370",
    "end": "882340"
  },
  {
    "text": "and the fame approach clear containers again wrap a Linux process inside of a",
    "start": "882340",
    "end": "887560"
  },
  {
    "text": "very small lightweight search machine in order to be able to deliver that separate kernel and Windows hyper-v",
    "start": "887560",
    "end": "893050"
  },
  {
    "text": "containers are delivering the same concept so we have these two win times and throw our application now needs in",
    "start": "893050",
    "end": "899680"
  },
  {
    "text": "order to have something which wins inside of the container itself and so the first weight through this in Windows",
    "start": "899680",
    "end": "907120"
  },
  {
    "text": "server core Windows server core is nearly Windows 32 compatible API which",
    "start": "907120",
    "end": "913540"
  },
  {
    "text": "means it's got all of the lovely parts of the windows kernel which are still in there it's got all of the functionality",
    "start": "913540",
    "end": "920920"
  },
  {
    "text": "and applications which you would expect from Windows itself it almost works in exactly the same way and you can use",
    "start": "920920",
    "end": "928180"
  },
  {
    "text": "existing tooling at least in packages in order to be able to win your applications as we saw because it's",
    "start": "928180",
    "end": "935350"
  },
  {
    "text": "windows and it's pretty much everything you would expect from a Windows operating system it's also rather large the base",
    "start": "935350",
    "end": "943120"
  },
  {
    "text": "images are roughly 10 gig vary in size and so you do have that initial",
    "start": "943120",
    "end": "948610"
  },
  {
    "text": "dependency in that initial hit when you start playing with containers and start deploying them but remember docker",
    "start": "948610",
    "end": "955450"
  },
  {
    "text": "images are layered and so you only need one copy of the operating system on the",
    "start": "955450",
    "end": "960670"
  },
  {
    "text": "machine if not you haven't download if 10 gigabyte operating system every single time you roll out an image",
    "start": "960670",
    "end": "966310"
  },
  {
    "text": "instead you just need that one layer in place and that will be purposed for all",
    "start": "966310",
    "end": "971680"
  },
  {
    "text": "of the different containers I would deploy which we'll see more in a moment on the flip side we have Windows Nano",
    "start": "971680",
    "end": "978510"
  },
  {
    "text": "windows Nano it's a new shiny operating system which had been completely stripped how is down to the bare",
    "start": "978510",
    "end": "985510"
  },
  {
    "text": "essentials of what Windows really needs in order to be able to run and so we're talking things like clustering storage",
    "start": "985510",
    "end": "991600"
  },
  {
    "text": "i/o networking to donate framework itself etc and so it's try to get it",
    "start": "991600",
    "end": "997630"
  },
  {
    "text": "down to something a little bit more reasonable and a little bit more size that you would expect from something",
    "start": "997630",
    "end": "1003990"
  },
  {
    "text": "comparable to the Linux world and as we thought it's about the twentieth of the size and so we know Civic or roughly 10",
    "start": "1003990",
    "end": "1010770"
  },
  {
    "text": "gig Windows Nano more a gig in size and we don't know know you may know that",
    "start": "1010770",
    "end": "1016829"
  },
  {
    "text": "Microsoft made a big deal of this it's gonna be like the future of how our playing systems learn on hyper-v they've",
    "start": "1016829",
    "end": "1022260"
  },
  {
    "text": "recently had a change of heart and so now Windows error will be solely focused on supporting Windows containers and",
    "start": "1022260",
    "end": "1030058"
  },
  {
    "text": "supporting applications winning inside of a container itself and if we're gonna do this allows them to reduce it even",
    "start": "1030059",
    "end": "1036780"
  },
  {
    "text": "more and for the now targeting Windows Nano to be more like 70 Meg or 80 Meg in size still have all of the same window",
    "start": "1036780",
    "end": "1043949"
  },
  {
    "text": "support through or support things like dotnet and exist in a they don't exist",
    "start": "1043949",
    "end": "1049470"
  },
  {
    "text": "in Windows binaries but that much smaller much reduced footprint even more than what it is today and so you can see",
    "start": "1049470",
    "end": "1056280"
  },
  {
    "text": "the Microsoft are still innovating still trying to improve this story of window containers and they're progressively",
    "start": "1056280",
    "end": "1062429"
  },
  {
    "text": "getting better and better and when you think about with what you should pick between Windows Live a corn windows no",
    "start": "1062429",
    "end": "1070140"
  },
  {
    "text": "no I make the analogy to Linux and how we have that so we got a boot to an Alpine and b2 is like the",
    "start": "1070140",
    "end": "1078210"
  },
  {
    "text": "operating system everyone owns and loves its got packages which everyone familiar with it's got a very well-established",
    "start": "1078210",
    "end": "1084750"
  },
  {
    "text": "API and pretty much you can take any Linux application run it on a little booty box or an imputed container and it",
    "start": "1084750",
    "end": "1092700"
  },
  {
    "text": "will work the side effect it is slightly larger and slightly bigger because it",
    "start": "1092700",
    "end": "1098820"
  },
  {
    "text": "got more API support and this is him to window server core we no no no is",
    "start": "1098820",
    "end": "1104670"
  },
  {
    "text": "similar to Alpine there is small they focus so streamlined however you may",
    "start": "1104670",
    "end": "1109799"
  },
  {
    "text": "have to have some modifications to your application in order for it to learn effectively of them properly in order to",
    "start": "1109799",
    "end": "1116340"
  },
  {
    "text": "be able to build and this is where I see the mindset of two differences so we",
    "start": "1116340",
    "end": "1122370"
  },
  {
    "text": "know they've acquired more for traditional applications applications which you don't want to modify you just",
    "start": "1122370",
    "end": "1128070"
  },
  {
    "text": "literally want to pick up and deploy at the container where we're not nano if",
    "start": "1128070",
    "end": "1133350"
  },
  {
    "text": "all modern it for your their core applications which you're actively working on and it can spend a little bit",
    "start": "1133350",
    "end": "1139950"
  },
  {
    "text": "more time optimizing a making sure that they were effectively and this is the differences so how did actually look how",
    "start": "1139950",
    "end": "1147929"
  },
  {
    "text": "do we start playing with these core technologies so the first thing we need",
    "start": "1147929",
    "end": "1153419"
  },
  {
    "text": "is docker so we need a windows build of docker on Windows server core 2016 and",
    "start": "1153419",
    "end": "1159360"
  },
  {
    "text": "so you then the beautiful PowerShell we can install the provider and install the",
    "start": "1159360",
    "end": "1166200"
  },
  {
    "text": "docker package and that will give us everything which we need in order to be starting winning windows containers",
    "start": "1166200",
    "end": "1173309"
  },
  {
    "text": "themselves in reality if we won't have something like a sure that's why we're",
    "start": "1173309",
    "end": "1180120"
  },
  {
    "text": "winning they have already got templates a machine which has been pre-configured and set up and so that they can learn",
    "start": "1180120",
    "end": "1185970"
  },
  {
    "text": "containers out of box so they don't need to go through this additional step and from the viewpoint of consumer sides",
    "start": "1185970",
    "end": "1193700"
  },
  {
    "text": "everything looks and feels consistent we still have a docker client they've got the commands which you can convert and that client can now talk to",
    "start": "1193700",
    "end": "1200640"
  },
  {
    "text": "Windows or Linux machines",
    "start": "1200640",
    "end": "1205880"
  },
  {
    "text": "one point to note before we get into details as the Linux Windows Linux",
    "start": "1205920",
    "end": "1212140"
  },
  {
    "text": "subsystem which was introduced and Windows 10 this is completely different",
    "start": "1212140",
    "end": "1217150"
  },
  {
    "text": "to Windows containers this is an awesome approach so that you can run Linux",
    "start": "1217150",
    "end": "1223120"
  },
  {
    "text": "binaries on Windows without natively this is a different concept to Windows",
    "start": "1223120",
    "end": "1230590"
  },
  {
    "text": "containers Windows containers allow us to learn native applications a native Windows binaries and selected thousand",
    "start": "1230590",
    "end": "1237250"
  },
  {
    "text": "to different problems it's not like was shoehorning on and translating docker Linux images to word on Windows we're",
    "start": "1237250",
    "end": "1243970"
  },
  {
    "text": "talking about full support so what is this Windows docker image which we all know which we can all build so we need",
    "start": "1243970",
    "end": "1251800"
  },
  {
    "text": "our base operating systems I said we need that for the support for that our applications have something to",
    "start": "1251800",
    "end": "1257380"
  },
  {
    "text": "learn inside of a container and so we've got Windows and we've got Windows Nano I need to sit at normal images on a",
    "start": "1257380",
    "end": "1264400"
  },
  {
    "text": "machine and you can launch them as you would any other container so in this case on my blue screen that's",
    "start": "1264400",
    "end": "1271120"
  },
  {
    "text": "my host I'm winning docker burn window server core and when in a command line and then within our container in the",
    "start": "1271120",
    "end": "1277750"
  },
  {
    "text": "black screen we have a command prompt separated isolated sandbox do everything else winning on our system and so my",
    "start": "1277750",
    "end": "1284290"
  },
  {
    "text": "hosts you can see some different scripts winnows as your folders yet that's not",
    "start": "1284290",
    "end": "1290770"
  },
  {
    "text": "visible in my container I view it expect now what actually happening in it covers",
    "start": "1290770",
    "end": "1297070"
  },
  {
    "text": "is a little bit more than what you would expect if you looked at what winning inside of a Linux machine Windows is",
    "start": "1297070",
    "end": "1302800"
  },
  {
    "text": "still Windows at the end of the day and so they still needs to be processes which exist in order to support the",
    "start": "1302800",
    "end": "1308920"
  },
  {
    "text": "applications and the processes which are winning and so we'll still see if we look at what's winning in front of",
    "start": "1308920",
    "end": "1314560"
  },
  {
    "text": "container things like FPS V the host and we'll still see PowerShell winning which",
    "start": "1314560",
    "end": "1321430"
  },
  {
    "text": "is the process which launched it other things like twisted installer etc these are there because processes",
    "start": "1321430",
    "end": "1328780"
  },
  {
    "text": "expect an assumed that these commands will be there and so there were window that in itself has to have these things",
    "start": "1328780",
    "end": "1335710"
  },
  {
    "text": "running in the background in order to be able to support it so this gives us a lair in an",
    "start": "1335710",
    "end": "1340900"
  },
  {
    "text": "infrastructure and make sure that anything willing inside of a container feels natural and feels like it's it's",
    "start": "1340900",
    "end": "1347410"
  },
  {
    "text": "running on Windows because actually it's a full Windows installation and so we're",
    "start": "1347410",
    "end": "1352870"
  },
  {
    "text": "trying to think about what a good example would be how can we demonstrate that this is how this will actually work",
    "start": "1352870",
    "end": "1360550"
  },
  {
    "text": "in reality and so try to find an example which is representative of certain applications which are dealt with in the",
    "start": "1360550",
    "end": "1367030"
  },
  {
    "text": "past and the one which I came up with was a beautiful asp.net MVC 2.0",
    "start": "1367030",
    "end": "1372850"
  },
  {
    "text": "application which job always quite handsome and a few other people built and released in May 2010 so it's been",
    "start": "1372850",
    "end": "1381280"
  },
  {
    "text": "sitting there on coal Plex for the last seven years if not been to",
    "start": "1381280",
    "end": "1386770"
  },
  {
    "text": "adopt me and we updated it anyway but it's got everything which the application needs it's been built so",
    "start": "1386770",
    "end": "1393460"
  },
  {
    "text": "let's see how we can take this exist an application and win it inside of container and then use the benefits of",
    "start": "1393460",
    "end": "1399400"
  },
  {
    "text": "docker and it brings so the first thing we need is a virtual machine sewn if",
    "start": "1399400",
    "end": "1404740"
  },
  {
    "text": "case I'm using a jaw a jaw I've got great support for windows container that you would expect and it's a much quicker",
    "start": "1404740",
    "end": "1410740"
  },
  {
    "text": "way that if you want to start playing and experimenting then you can use it or until cat coda have released it windows",
    "start": "1410740",
    "end": "1417730"
  },
  {
    "text": "contain a functionality which would have been this week if I didn't have Australian Wi-Fi but never mind",
    "start": "1417730",
    "end": "1425700"
  },
  {
    "text": "we nose and big windows Australian Wi-Fi",
    "start": "1425700",
    "end": "1431290"
  },
  {
    "text": "do not mix I made for a happy relationship so we now have our virtual",
    "start": "1431290",
    "end": "1436420"
  },
  {
    "text": "machine it's got everything which we need so we need to bring it up to a certain standard so this are you",
    "start": "1436420",
    "end": "1442240"
  },
  {
    "text": "chocolaty chocolaty it's awesome it was a revelation I hadn't come to Windows",
    "start": "1442240",
    "end": "1448180"
  },
  {
    "text": "for quite some time and so I didn't really have channel see you there but by using it it is just like the best",
    "start": "1448180",
    "end": "1454450"
  },
  {
    "text": "way to set up and install everything which windows needs and so if you haven't have played around with it I'd definitely recommend it but this allows",
    "start": "1454450",
    "end": "1460960"
  },
  {
    "text": "you to do things like chucko install docker this installed everything it's an alternative way than",
    "start": "1460960",
    "end": "1466870"
  },
  {
    "text": "the packages which I read and said before and this will give us duck client the server components and we",
    "start": "1466870",
    "end": "1474820"
  },
  {
    "text": "can now do things like docker PS and ducky images that beginning you can see",
    "start": "1474820",
    "end": "1480190"
  },
  {
    "text": "the sizes windows civic or 9.4 geek windows nano 800 meg and then hopefully",
    "start": "1480190",
    "end": "1486340"
  },
  {
    "text": "that will go down to more like 80 Meg in future releases so one point which I",
    "start": "1486340",
    "end": "1494140"
  },
  {
    "text": "want to highlight which is the problem with this screenshot is the youth of latest tags dupatta latest times are",
    "start": "1494140",
    "end": "1502150"
  },
  {
    "text": "very problematic because latest is a moving target you never quite know what latest is pointing to and so when you",
    "start": "1502150",
    "end": "1510310"
  },
  {
    "text": "actually look at what's available for the operating systems everything has a",
    "start": "1510310",
    "end": "1515350"
  },
  {
    "text": "built up and everything had a build number from Windows and if it's very similar to if you download the ISO or",
    "start": "1515350",
    "end": "1520990"
  },
  {
    "text": "download the ISO for memory and everything had particular builds and",
    "start": "1520990",
    "end": "1527460"
  },
  {
    "text": "particular patch versions and this is what are actually being pushed and",
    "start": "1527460",
    "end": "1532870"
  },
  {
    "text": "released onto the docker hub itself though that can build on and so while latest will give you the latest greatest",
    "start": "1532870",
    "end": "1539230"
  },
  {
    "text": "windows build it didn't give you there a good insight into what version of Windows that is it doesn't tell you what patches have been",
    "start": "1539230",
    "end": "1545440"
  },
  {
    "text": "applied it didn't tell you whether it's Windows 2016 ie that you exist on one",
    "start": "1545440",
    "end": "1551170"
  },
  {
    "text": "today or whether it's the new shiny nano server which is going to be released if a more opaque so instead I always",
    "start": "1551170",
    "end": "1557980"
  },
  {
    "text": "recommend that you pick pick a particular third set that version",
    "start": "1557980",
    "end": "1563260"
  },
  {
    "text": "and so you have a known starting point to start building your images and so",
    "start": "1563260",
    "end": "1569560"
  },
  {
    "text": "when you actually build and do it quickly instead of just download the latest and you pull up a particular",
    "start": "1569560",
    "end": "1574960"
  },
  {
    "text": "version and then that will download the latest updates the latest security patches and that Microsoft have rolled",
    "start": "1574960",
    "end": "1580900"
  },
  {
    "text": "out a part of the image now notice in this version we have Windows Live core",
    "start": "1580900",
    "end": "1586600"
  },
  {
    "text": "which was five weeks old with with knowing 9 gig when we updated the",
    "start": "1586600",
    "end": "1593260"
  },
  {
    "text": "particular version of Windows it's only downloading the latest layer it's only download in the security updates and",
    "start": "1593260",
    "end": "1598810"
  },
  {
    "text": "patches that have been applied based on what your system did them have already",
    "start": "1598810",
    "end": "1604890"
  },
  {
    "text": "and so in this case we're not downloading the full nine gig again instead we only download in Hainan 900",
    "start": "1604890",
    "end": "1610050"
  },
  {
    "text": "Meg which encapsulates all of the security updates have been released and a new builds I'm since the last how much",
    "start": "1610050",
    "end": "1616350"
  },
  {
    "text": "we pulled and so now we can be confident that we're building from a known image",
    "start": "1616350",
    "end": "1622080"
  },
  {
    "text": "we know the security updates are included and feel when myself do another that's Tuesday or rolled out some",
    "start": "1622080",
    "end": "1628470"
  },
  {
    "text": "updates we can pull down the latest image update the Windows version number and again be confident that we're",
    "start": "1628470",
    "end": "1634920"
  },
  {
    "text": "starting from that secure base and that's secure foundation so just like",
    "start": "1634920",
    "end": "1641010"
  },
  {
    "text": "with Linux containers we still need a doc file this docker file defines how",
    "start": "1641010",
    "end": "1647130"
  },
  {
    "text": "our application needs to be built and needs to be defined in order to win and",
    "start": "1647130",
    "end": "1652880"
  },
  {
    "text": "so in this case we're defining of",
    "start": "1652880",
    "end": "1658680"
  },
  {
    "text": "Windows server core and again given a particular version number so that we can be confident about what patches have or",
    "start": "1658680",
    "end": "1665610"
  },
  {
    "text": "haven't been applied and because it's now in Windows we can do things like power shop and so we can use with no",
    "start": "1665610",
    "end": "1672330"
  },
  {
    "text": "features and PowerShell features like install feature in this case installed the web server web server being iOS and",
    "start": "1672330",
    "end": "1680280"
  },
  {
    "text": "so if you build out again using exactly the same api's and conventions that we do with Linux containers we can say",
    "start": "1680280",
    "end": "1687450"
  },
  {
    "text": "build give a nice friendly name in this case I is and that will go ahead store",
    "start": "1687450",
    "end": "1692610"
  },
  {
    "text": "installer is on top of our windows and we'll now have a container which has got the windows setups",
    "start": "1692610",
    "end": "1698640"
  },
  {
    "text": "and is winning and thankfully Microsoft had also sought that it is probably a",
    "start": "1698640",
    "end": "1704700"
  },
  {
    "text": "very common use case and many people will probably want is at the dependency and for their applications and so they",
    "start": "1704700",
    "end": "1711000"
  },
  {
    "text": "have built a pre-image that you can use as your base image so you don't have to go down and install iOS each time you",
    "start": "1711000",
    "end": "1718920"
  },
  {
    "text": "need it and again when you look at the tags mugs are very explicit that nano",
    "start": "1718920",
    "end": "1726360"
  },
  {
    "text": "version that windows have core server server versions depending on what your application needs in order to be able to",
    "start": "1726360",
    "end": "1732900"
  },
  {
    "text": "win and it's got a build number included there so you can know what",
    "start": "1732900",
    "end": "1739110"
  },
  {
    "text": "building on and what releases have been included and so now we can use out our foundation we can say from yes",
    "start": "1739110",
    "end": "1746070"
  },
  {
    "text": "in this case Windows server core because it's a feed on net 2.0 it's probably",
    "start": "1746070",
    "end": "1752310"
  },
  {
    "text": "gonna need some more windows functionality and then what windows Quarters so he can't use nano but at",
    "start": "1752310",
    "end": "1759420"
  },
  {
    "text": "least I see we can't at this point in time but now we've got our ass installed",
    "start": "1759420",
    "end": "1764480"
  },
  {
    "text": "we can start customizing he container based on what our application needs and",
    "start": "1764480",
    "end": "1770250"
  },
  {
    "text": "so again it's a speed on there so we're gonna need to install windows feature we're going to install the on f45 if you",
    "start": "1770250",
    "end": "1778470"
  },
  {
    "text": "don't have framework and we need to configure the AP dotnet and the donna",
    "start": "1778470",
    "end": "1784200"
  },
  {
    "text": "framework itself and this will go ahead and add we building up our container will install these requirements it's a",
    "start": "1784200",
    "end": "1791100"
  },
  {
    "text": "now age and if we are so now we're automating the configuration of Windows",
    "start": "1791100",
    "end": "1797550"
  },
  {
    "text": "itself and so something which I'm sure there many of our scripts for our",
    "start": "1797550",
    "end": "1803160"
  },
  {
    "text": "deployments we can remove the default is website because it's no longer required we can make a nice directory for where",
    "start": "1803160",
    "end": "1810300"
  },
  {
    "text": "us application needs to live and then we can create a new iOS directory set things like the application pool the",
    "start": "1810300",
    "end": "1817110"
  },
  {
    "text": "port numbers and the physical path about where our application will be so far and so now as we're configuring our image",
    "start": "1817110",
    "end": "1823920"
  },
  {
    "text": "did he now configure in iOS to make sure that everything is in place as you would",
    "start": "1823920",
    "end": "1829320"
  },
  {
    "text": "expect so that other people know how to launch application we can say expose the",
    "start": "1829320",
    "end": "1836640"
  },
  {
    "text": "application is running on port 80 odds need to be made available and then finally we copy over our source code and",
    "start": "1836640",
    "end": "1843360"
  },
  {
    "text": "so the release which the team did for dinner was already pre-built and so we",
    "start": "1843360",
    "end": "1849660"
  },
  {
    "text": "don't have to go food the build process we can just take the existing build binaries and copy that into the",
    "start": "1849660",
    "end": "1856410"
  },
  {
    "text": "directory which I is expects and we can start serving our images so just as you",
    "start": "1856410",
    "end": "1864720"
  },
  {
    "text": "would expect from Linux it feel very same when you burn a duck a building windows ridden through all of their",
    "start": "1864720",
    "end": "1870390"
  },
  {
    "text": "commands we can feel that it's winning I asked configured everything which we need and then we can do a",
    "start": "1870390",
    "end": "1877100"
  },
  {
    "text": "beautiful dock of win and because well it will allow us to win the windows",
    "start": "1877100",
    "end": "1882980"
  },
  {
    "text": "container we can expose ports in a very similar way and now we have our beautiful new dinner application",
    "start": "1882980",
    "end": "1889340"
  },
  {
    "text": "winnings which has not been modified it hadn't been changed as I'm interred from the last seven years but we can affect",
    "start": "1889340",
    "end": "1895280"
  },
  {
    "text": "it we can effectively and easily darker eyes are an employer using docker api's",
    "start": "1895280",
    "end": "1902180"
  },
  {
    "text": "and then scaled that out for our application so this in their winning as",
    "start": "1902180",
    "end": "1907850"
  },
  {
    "text": "the windows container so again the normal standard containers which we knew",
    "start": "1907850",
    "end": "1913640"
  },
  {
    "text": "or don't know any love if we wanted to win this at the windows hyper-v container we simply define the isolation",
    "start": "1913640",
    "end": "1919490"
  },
  {
    "text": "which we expect and so we can say that the isolation isolation needs to be hyper-v and so when that container",
    "start": "1919490",
    "end": "1926150"
  },
  {
    "text": "starts it will be wrapped in its very small lightweight Thirds machine in a",
    "start": "1926150",
    "end": "1932510"
  },
  {
    "text": "slightly more secure mode than what we had before and this is now the",
    "start": "1932510",
    "end": "1938540"
  },
  {
    "text": "difference between running Windows container winning hyper-v container the image itself didn't change the way we",
    "start": "1938540",
    "end": "1944540"
  },
  {
    "text": "launch containers doesn't change we can just set this additional isolation mode and would he go to image it's fixed",
    "start": "1944540",
    "end": "1952070"
  },
  {
    "text": "missing changes everything which we have before they say man if we wanted to roll",
    "start": "1952070",
    "end": "1957260"
  },
  {
    "text": "out a new image we'd rebuild and we push it out and we release our new image and",
    "start": "1957260",
    "end": "1964360"
  },
  {
    "text": "this kind of feels a little bit like what it did with no dinner it was lift",
    "start": "1964360",
    "end": "1969620"
  },
  {
    "text": "and shift its I picked up an existing application I didn't need to change it but I could effectively and easily win",
    "start": "1969620",
    "end": "1976160"
  },
  {
    "text": "it inside of a container I'm Mike soft and are very aware that this is probably",
    "start": "1976160",
    "end": "1983180"
  },
  {
    "text": "gonna be the journey that most companies are taking they're gonna take existing we know thirty machines which they",
    "start": "1983180",
    "end": "1988480"
  },
  {
    "text": "companies don't want any easier way to manage probably would we move and reduce",
    "start": "1988480",
    "end": "1994400"
  },
  {
    "text": "some of the license fees and win them now inside of container and so tomatoes easier they've got a tool called image",
    "start": "1994400",
    "end": "2001750"
  },
  {
    "text": "to docker image the docker will take a we'll inspect a existing Windows machine",
    "start": "2001750",
    "end": "2009130"
  },
  {
    "text": "they would expect how it been configured what packages what window features are installed and as we know it will build",
    "start": "2009130",
    "end": "2016360"
  },
  {
    "text": "your docx file which is of the configuration of that virtual machine and then you can build that as a base",
    "start": "2016360",
    "end": "2023530"
  },
  {
    "text": "image use as your starting point and then deploy your application on top of it and so when you can see here when we",
    "start": "2023530",
    "end": "2031120"
  },
  {
    "text": "install it it's wind things like get Windows artifacts know it's got is it's",
    "start": "2031120",
    "end": "2037000"
  },
  {
    "text": "got MSM cute that's equal so configured and all of those will be encapsulated put into the docker file itself so this",
    "start": "2037000",
    "end": "2044860"
  },
  {
    "text": "gives us a really nice way that we can still continue to embrace this lift and shift mentality and a tooling around it",
    "start": "2044860",
    "end": "2051040"
  },
  {
    "text": "to support it and giving us this foundation to build upon and move applications into this new world but one",
    "start": "2051040",
    "end": "2058810"
  },
  {
    "text": "thing about having this I am immutable and unchanging image it what about Windows updates now if it's a full-blown",
    "start": "2058810",
    "end": "2065440"
  },
  {
    "text": "Windows operating system then we know the updates will be happening in the background and then we kind of break",
    "start": "2065440",
    "end": "2072550"
  },
  {
    "text": "that kind of mindset of containers if it's continue updating then everything",
    "start": "2072550",
    "end": "2078040"
  },
  {
    "text": "breaks so this is one of the bits where it window through the corners now though",
    "start": "2078040",
    "end": "2084580"
  },
  {
    "text": "are slightly different because certain things have been disabled because they don't need to be writable shouldn't be",
    "start": "2084580",
    "end": "2090250"
  },
  {
    "text": "willing inside of the container itself so one of these is Windows updates an",
    "start": "2090250",
    "end": "2097120"
  },
  {
    "text": "example is Windows Defender an anti-virus software malware detection etc because that should be happening on",
    "start": "2097120",
    "end": "2103660"
  },
  {
    "text": "a host and not inside the container itself so instead of Windows updates this is why the build number of the",
    "start": "2103660",
    "end": "2110110"
  },
  {
    "text": "document which we're using is important because that build number represents what updates have been applied and so we",
    "start": "2110110",
    "end": "2117310"
  },
  {
    "text": "can't expect Windows to keep itself up today because we know the updates aren't winning we want immutability from our",
    "start": "2117310",
    "end": "2124390"
  },
  {
    "text": "duck image so instead we word when I knew we these comes out we change our",
    "start": "2124390",
    "end": "2129670"
  },
  {
    "text": "build number rolled out and I'm be comforting instead of a thing changing in the covers",
    "start": "2129670",
    "end": "2135600"
  },
  {
    "text": "doctored might self to made it the more easy if you do something like doc you inspect",
    "start": "2135600",
    "end": "2141980"
  },
  {
    "text": "it shows you hashes of what's running so",
    "start": "2141980",
    "end": "2147530"
  },
  {
    "text": "if he didn't inspect inside production and said which security updates have",
    "start": "2147530",
    "end": "2153619"
  },
  {
    "text": "been applied it will give you the layers and then from the layers and from the hashes and the chars you can get back to",
    "start": "2153619",
    "end": "2160130"
  },
  {
    "text": "the original Windows version number which was actually used as that baseline information and again from a security",
    "start": "2160130",
    "end": "2166430"
  },
  {
    "text": "auditing point of view and monitoring and making sure that you are with them today this gives you some visibility if",
    "start": "2166430",
    "end": "2172940"
  },
  {
    "text": "you accidentally lose that docker file the doc file isn't available just like",
    "start": "2172940",
    "end": "2179420"
  },
  {
    "text": "we have with Windows containers with Linux container if we can persist data so we can use the same approaches and we",
    "start": "2179420",
    "end": "2185630"
  },
  {
    "text": "can mount him directories from volumes so like sauce on our hosts maps into",
    "start": "2185630",
    "end": "2191780"
  },
  {
    "text": "destination inside of a container so if we're winning things like sequel server and it's writing and persisting data",
    "start": "2191780",
    "end": "2197150"
  },
  {
    "text": "that can still be mapped onto a host using the same approaches that we have",
    "start": "2197150",
    "end": "2202640"
  },
  {
    "text": "with Linux and similarly we can start limiting them strict eing processes and",
    "start": "2202640",
    "end": "2207650"
  },
  {
    "text": "security around that container so in this case limiting how much of the CPU",
    "start": "2207650",
    "end": "2213740"
  },
  {
    "text": "shares it should have limiting the memory which that container can use in",
    "start": "2213740",
    "end": "2220069"
  },
  {
    "text": "exactly the same way that we can in Linux world and for those who are more",
    "start": "2220069",
    "end": "2228470"
  },
  {
    "text": "familiar or want to combine docker and the build processes or deployment",
    "start": "2228470",
    "end": "2234650"
  },
  {
    "text": "processes with existing scripts there is a PowerShell API and they can do things like get container image which is",
    "start": "2234650",
    "end": "2242540"
  },
  {
    "text": "basically which is the same with doing docker images and that will give you back oddity information but other",
    "start": "2242540",
    "end": "2248780"
  },
  {
    "text": "PowerShell object another power Salvage all if you can start piping it into other scripts I know the processes and",
    "start": "2248780",
    "end": "2255500"
  },
  {
    "text": "the same things like launching new containers instead of doing dock and room we can say new container it's a",
    "start": "2255500",
    "end": "2262130"
  },
  {
    "text": "little bit more Debose but it did allow us to integrate combined with other scripts in our system so from this point",
    "start": "2262130",
    "end": "2269750"
  },
  {
    "text": "we have no dinner we successfully built it based on iis and windows server",
    "start": "2269750",
    "end": "2275710"
  },
  {
    "text": "core it launched and everything seemed happy but we also have their dependencies and other things that need",
    "start": "2275710",
    "end": "2281260"
  },
  {
    "text": "to be winning inside in order for that application to work as expected and one",
    "start": "2281260",
    "end": "2286660"
  },
  {
    "text": "of those is sequel server so hopefully soft I've also made it possible to win",
    "start": "2286660",
    "end": "2292510"
  },
  {
    "text": "sequel server both are they Linux can tailor after migrating the source code but also now either windows container",
    "start": "2292510",
    "end": "2298869"
  },
  {
    "text": "and so if we want to take the sequel server which we all know and love from Windows that can successfully win either",
    "start": "2298869",
    "end": "2305710"
  },
  {
    "text": "windows container on our servers and they also have Windows Server sequel",
    "start": "2305710",
    "end": "2313450"
  },
  {
    "text": "server for Windows Express sequel server Express if we want to win it for",
    "start": "2313450",
    "end": "2318550"
  },
  {
    "text": "development purposes for example and it works in exactly the same way we'd",
    "start": "2318550",
    "end": "2324160"
  },
  {
    "text": "expect from winning Linux containers few advantages we get we need to set a",
    "start": "2324160",
    "end": "2330040"
  },
  {
    "text": "password such as password we need to accept the",
    "start": "2330040",
    "end": "2335800"
  },
  {
    "text": "end-user License Agreement because at the end of the day it's still Microsoft and if they'll has things like tick this",
    "start": "2335800",
    "end": "2341829"
  },
  {
    "text": "box in order to continue installing a process that's a little bit difficult",
    "start": "2341829",
    "end": "2346930"
  },
  {
    "text": "when you're winning at container so instead they you have to set the environment variable - yes - in decay",
    "start": "2346930",
    "end": "2353470"
  },
  {
    "text": "and finnaly ticking the box which no one ever reads so when we launch it will download all of the windows the sequel",
    "start": "2353470",
    "end": "2362650"
  },
  {
    "text": "server image and the wall of the layers and we can do things like docker logs",
    "start": "2362650",
    "end": "2367869"
  },
  {
    "text": "and view the output from sequel server in this case it started it kind of felt",
    "start": "2367869",
    "end": "2373569"
  },
  {
    "text": "the password complexity because I said password and suprisingly and so you have",
    "start": "2373569",
    "end": "2378640"
  },
  {
    "text": "to give it something a little bit more secure and long in order to be able to get it to successfully start but once it",
    "start": "2378640",
    "end": "2385480"
  },
  {
    "text": "started and we still got that thing through the ability and inside the logs configure I think was over started when",
    "start": "2385480",
    "end": "2392109"
  },
  {
    "text": "it beated chained TSA credentials based on what we set in what we passed in and now we can use that from our nerd inner",
    "start": "2392109",
    "end": "2399099"
  },
  {
    "text": "application to access it in exactly the same way as if it was installed and a host somewhere",
    "start": "2399099",
    "end": "2406240"
  },
  {
    "text": "so we now have these two containers we now need to be able to start them and stop them and manage them effectively",
    "start": "2406240",
    "end": "2412630"
  },
  {
    "text": "and so this is where docker compose comes in docker compose is now has a",
    "start": "2412630",
    "end": "2419410"
  },
  {
    "text": "Windows binary so it winds natively on Windows you thin chocolate II it's very simple and easy to install and have",
    "start": "2419410",
    "end": "2427119"
  },
  {
    "text": "exactly the same structure which would expect so we can define our two containers we've got sequel server our database",
    "start": "2427119",
    "end": "2435220"
  },
  {
    "text": "running sequel server defined ports the passwords environment variables and then",
    "start": "2435220",
    "end": "2440950"
  },
  {
    "text": "we've got our new dinner application at the bottom and we do docker compose up",
    "start": "2440950",
    "end": "2446710"
  },
  {
    "text": "and then that will bring up everything all the processes which are application needs and we have application when I",
    "start": "2446710",
    "end": "2454150"
  },
  {
    "text": "first did this I thought the team I thought the team had done a better job then kind of like what the box is so",
    "start": "2454150",
    "end": "2462550"
  },
  {
    "text": "when you'll folks typing and playing we name that I is an edge on Windows Server",
    "start": "2462550",
    "end": "2468910"
  },
  {
    "text": "rin a slightly different more secure mode and say the basically block of him and treated they fit winning if the",
    "start": "2468910",
    "end": "2476710"
  },
  {
    "text": "application itself detected that their fee was winning on a mobile device so once installed something more pretty like Firefox it operated and it worked",
    "start": "2476710",
    "end": "2484300"
  },
  {
    "text": "in exactly the same way and we had the entire application successfully deployed which I was pleasantly pleased with and",
    "start": "2484300",
    "end": "2491560"
  },
  {
    "text": "we back the awesome days of 2010 applications and like we can start",
    "start": "2491560",
    "end": "2497740"
  },
  {
    "text": "winning their dinners again which would be great so in order to make it accessible you can firewalls rules for",
    "start": "2497740",
    "end": "2506710"
  },
  {
    "text": "80 in iOS acceptor and in Azure and now",
    "start": "2506710",
    "end": "2513310"
  },
  {
    "text": "will operate in the same way and we can then because we're using a consistent API we use in a consistent experience",
    "start": "2513310",
    "end": "2520480"
  },
  {
    "text": "Aarthi icd process for Windows looks almost identical to what it would look like in Linux world we have our get lab",
    "start": "2520480",
    "end": "2527680"
  },
  {
    "text": "or CIPD teamcity etc and would start build the build is duck a build and",
    "start": "2527680",
    "end": "2533950"
  },
  {
    "text": "which calculates all of them window functionality which we need Purdue to the image we push it up to our registry",
    "start": "2533950",
    "end": "2539290"
  },
  {
    "text": "and then something like that compose in order to be able to download it and start it on",
    "start": "2539290",
    "end": "2544820"
  },
  {
    "text": "our server so if it's similar what is the actual difference obviously we can",
    "start": "2544820",
    "end": "2551960"
  },
  {
    "text": "win Windows binaries is how the kernel virtualization works so looking at in",
    "start": "2551960",
    "end": "2557450"
  },
  {
    "text": "the covers of what's happening on docker and Linux we have things which we know and love like the dock client this talks",
    "start": "2557450",
    "end": "2564710"
  },
  {
    "text": "of an API to the engine and the engine is broken up into different parts we sold 13 different problems like our",
    "start": "2564710",
    "end": "2570950"
  },
  {
    "text": "networking container D which is an obstruction over Linux api's and deform",
    "start": "2570950",
    "end": "2579490"
  },
  {
    "text": "Linux and how is this unboxing words is made or per things like the groups and namespaces and the capabilities that's",
    "start": "2579490",
    "end": "2588020"
  },
  {
    "text": "going to make in a container be contained and knitted what docker is configuring with Windows it looks and",
    "start": "2588020",
    "end": "2594380"
  },
  {
    "text": "feels very similar we still have think I can take P we still add for configuration for",
    "start": "2594380",
    "end": "2601010"
  },
  {
    "text": "configuring the windows networking and we still have things like control groups and namespaces and layering capabilities",
    "start": "2601010",
    "end": "2607120"
  },
  {
    "text": "it's very similar it feels very consistent and coherent the main",
    "start": "2607120",
    "end": "2613790"
  },
  {
    "text": "advantage main difference is that we thought this compute service and its compute service is an API into the",
    "start": "2613790",
    "end": "2621350"
  },
  {
    "text": "Windows kernel and so it means that while docker is the only one launch",
    "start": "2621350",
    "end": "2627020"
  },
  {
    "text": "container today going forwards anyone can buy a container runtime and",
    "start": "2627020",
    "end": "2632270"
  },
  {
    "text": "container API to launch container directly against the Windows kernel and so if you particularly don't want to go",
    "start": "2632270",
    "end": "2638510"
  },
  {
    "text": "via docker or you want to play around and customize it yourself then you have to capability than the API",
    "start": "2638510",
    "end": "2643850"
  },
  {
    "text": "in order to be able to do that and so dakka dakka and Microsoft are interdependent connected they're not",
    "start": "2643850",
    "end": "2649460"
  },
  {
    "text": "most of isn't dependent upon docker in order to deliver this container support instead anyone can write a",
    "start": "2649460",
    "end": "2656390"
  },
  {
    "text": "client on top of it what I think cool in terms of in the covers when it comes to",
    "start": "2656390",
    "end": "2662030"
  },
  {
    "text": "Windows hyper-v again we've got this problem Chad kernels and we've got this",
    "start": "2662030",
    "end": "2668150"
  },
  {
    "text": "problem of the security restrictions and so the Intel career containers it was on",
    "start": "2668150",
    "end": "2675619"
  },
  {
    "text": "Linux and Windows we have another so we started windows utility so when your",
    "start": "2675619",
    "end": "2681980"
  },
  {
    "text": "operating system boots up and this is how I get it performance alongside booting up Windows",
    "start": "2681980",
    "end": "2687140"
  },
  {
    "text": "it also boots up to a utility VM inside of hyper-v boots up windows utility",
    "start": "2687140",
    "end": "2693559"
  },
  {
    "text": "inside of hyper-v it then takes a freeze and a snapshot of that virtual machine",
    "start": "2693559",
    "end": "2700339"
  },
  {
    "text": "and basically puts it on a course and so it's running it's got everything it needs it's just not taking up any",
    "start": "2700339",
    "end": "2706190"
  },
  {
    "text": "resources our container it takes a snapshot or a fork of that virtual",
    "start": "2706190",
    "end": "2712460"
  },
  {
    "text": "machine which is winning but in a frozen state and then splits it and so the only",
    "start": "2712460",
    "end": "2717529"
  },
  {
    "text": "additional memory allocation start that virtual machine is using is actually the",
    "start": "2717529",
    "end": "2722720"
  },
  {
    "text": "bit which is required for the container all the other memory is in this frozen",
    "start": "2722720",
    "end": "2728240"
  },
  {
    "text": "shared State so very similar to doing copying right if you're not familiar",
    "start": "2728240",
    "end": "2735589"
  },
  {
    "text": "with how that works where the only things which you are persisting is changed windows and the utility vm is",
    "start": "2735589",
    "end": "2743900"
  },
  {
    "text": "basically doing up before memory and so this gives it that really fast launch",
    "start": "2743900",
    "end": "2749089"
  },
  {
    "text": "time thought to make that we weight anything visible from the container point of view they can't tell that",
    "start": "2749089",
    "end": "2755059"
  },
  {
    "text": "they're in this separate shared in this separate virtual machine but if they do",
    "start": "2755059",
    "end": "2760309"
  },
  {
    "text": "manage to prekow and attack of do is manage to get a day we can be confident they can interact if they write anything",
    "start": "2760309",
    "end": "2766730"
  },
  {
    "text": "to that virtual machine it's instantly forgotten and when I contain a stopped it completely gets removed removed from",
    "start": "2766730",
    "end": "2775099"
  },
  {
    "text": "our system and so this allows us to be secure allows it the images but what",
    "start": "2775099",
    "end": "2780230"
  },
  {
    "text": "about developers like we don't all want to go back to the days of winning a thorough operating system on our laptops",
    "start": "2780230",
    "end": "2785720"
  },
  {
    "text": "in order to be able to be confident that what we're building is what we deploy in production and so now we have support",
    "start": "2785720",
    "end": "2793400"
  },
  {
    "text": "for windows in Windows 10 we have container support and so we can build",
    "start": "2793400",
    "end": "2799039"
  },
  {
    "text": "and deploy and test windows containers on Windows 10 in exactly the same way",
    "start": "2799039",
    "end": "2804380"
  },
  {
    "text": "that we do Server 2016 the way this happened and a",
    "start": "2804380",
    "end": "2809990"
  },
  {
    "text": "way this works it by using that third machine this hyper-v hyper-v",
    "start": "2809990",
    "end": "2815120"
  },
  {
    "text": "functionality and so when you were in a container on Windows 10 it's wrapping it",
    "start": "2815120",
    "end": "2820640"
  },
  {
    "text": "inside of this hyper-v isolation mode and so that's what gives it the kernel",
    "start": "2820640",
    "end": "2825800"
  },
  {
    "text": "that's required to have windows container functionality and for this how we can test an experiment on different",
    "start": "2825800",
    "end": "2832940"
  },
  {
    "text": "operating systems and different version of windows because I said kernel it been repurposed inside tightly and so it when",
    "start": "2832940",
    "end": "2843470"
  },
  {
    "text": "you're on Windows 10 it looks and feels very similar to what we would know and love so this is Linux if you're winning",
    "start": "2843470",
    "end": "2850460"
  },
  {
    "text": "things like docker for Windows there's now an option if you go switch to Windows containers that will make the",
    "start": "2850460",
    "end": "2857150"
  },
  {
    "text": "client instead of talking to the Linux VM talk to the Windows VM and so when you do things like dock assertions",
    "start": "2857150",
    "end": "2863480"
  },
  {
    "text": "you'll see that it's now talking to a window the architecture and if he lists or the image if you have things like",
    "start": "2863480",
    "end": "2868690"
  },
  {
    "text": "Windows Nano which had been downloaded and so this allowed this to experiment and prototype and build and construct",
    "start": "2868690",
    "end": "2875030"
  },
  {
    "text": "both sides of the Linux and windows world so when it comes into production",
    "start": "2875030",
    "end": "2882430"
  },
  {
    "text": "we're not necessarily we don't want to go and remote desktop into every single Windows machine and do a dock of word",
    "start": "2882430",
    "end": "2889430"
  },
  {
    "text": "because that can be error-prone and time consuming instead we wanted more of her container orchestrations of that problem",
    "start": "2889430",
    "end": "2895280"
  },
  {
    "text": "for us so docker have their own solution called docker swarm and this allows has got",
    "start": "2895280",
    "end": "2902330"
  },
  {
    "text": "support for Windows containers for more importantly allows us to have hybrid modes and hybrid support for both",
    "start": "2902330",
    "end": "2909020"
  },
  {
    "text": "Windows and Linux containers winning within the same cluster and so in this case we're deploying two theories one is",
    "start": "2909020",
    "end": "2916370"
  },
  {
    "text": "a Windows hated speith nervous we are specifying a constraint we're saying",
    "start": "2916370",
    "end": "2922400"
  },
  {
    "text": "that this container should only ruin operating systems which are of type Windows it's a Windows container the",
    "start": "2922400",
    "end": "2928790"
  },
  {
    "text": "windows binary so we need window there in a first place and so when we deploy and tell swarm to deploy this container",
    "start": "2928790",
    "end": "2935540"
  },
  {
    "text": "they will thirds and identified Windows machine the most appropriate to deploy",
    "start": "2935540",
    "end": "2942140"
  },
  {
    "text": "application our container onto and then on the flipside when we come and deploy",
    "start": "2942140",
    "end": "2947819"
  },
  {
    "text": "our duct service we can set another constraint say and deploy on to Linux and that will deploy on to Linux modes",
    "start": "2947819",
    "end": "2955259"
  },
  {
    "text": "in future it would be nice sworn Cydia sure of eight images it",
    "start": "2955259",
    "end": "2961349"
  },
  {
    "text": "knows that one note for Windows I'm one it built for Linux so hopefully in future we can remove this definition of",
    "start": "2961349",
    "end": "2968279"
  },
  {
    "text": "the constraint but wouldn't it have been employed there all winning over an",
    "start": "2968279",
    "end": "2973289"
  },
  {
    "text": "overlay network so they can communicate and they can talk internally as if they",
    "start": "2973289",
    "end": "2979410"
  },
  {
    "text": "were on the same machine but you they cost machine different architectures but",
    "start": "2979410",
    "end": "2984420"
  },
  {
    "text": "for a viewpoint of the application it's all a seamless lovely experience and so has this hybrid mode built in today if",
    "start": "2984420",
    "end": "2992640"
  },
  {
    "text": "you were there am i talking yesterday with kubernetes cuba netted in a more advanced scheduler it got more",
    "start": "2992640",
    "end": "2999480"
  },
  {
    "text": "capabilities than what swarmed it at the moment at least and it's driven by some",
    "start": "2999480",
    "end": "3005690"
  },
  {
    "text": "of the thoughts and some of the opinions which came out to Google before it donated it to the cloud native foundation thanks to work I mugs off at",
    "start": "3005690",
    "end": "3015920"
  },
  {
    "text": "reader and at hat which I thought was a great collaboration and show the new",
    "start": "3015920",
    "end": "3021529"
  },
  {
    "text": "change in it the Microsoft landscape they've collaborated and added support inside kubernetes so that can also",
    "start": "3021529",
    "end": "3028369"
  },
  {
    "text": "deploy windows containers and so again very similar to how you have a hybrid swarm cluster you can all have a hybrid",
    "start": "3028369",
    "end": "3035329"
  },
  {
    "text": "kubernetes cluster which can manage both your windows containers and your linux applications through this single control",
    "start": "3035329",
    "end": "3041869"
  },
  {
    "text": "plane for scenarios such as deploying single server applications using single",
    "start": "3041869",
    "end": "3048920"
  },
  {
    "text": "server on Windows but then having your base modern shiny doneck core",
    "start": "3048920",
    "end": "3054410"
  },
  {
    "text": "application deployed G's in Linux and using that scale out about having everything in this one single deployment",
    "start": "3054410",
    "end": "3060589"
  },
  {
    "text": "approach it DCOs which have got lots great into I think",
    "start": "3060589",
    "end": "3068509"
  },
  {
    "text": "under the covers is powering the ashore container service and this is where it can you smile so at the Third's we swarm you have to",
    "start": "3068509",
    "end": "3075920"
  },
  {
    "text": "define the constraint with D cos you don't D cos has holes fingerprinting and so it understands the type of workloads",
    "start": "3075920",
    "end": "3082970"
  },
  {
    "text": "which you're asking it to learn and it will find the most available host for that machine to winner so if it of",
    "start": "3082970",
    "end": "3091040"
  },
  {
    "text": "topics we've got Linux we've got Windows and we've got something important like a jar file",
    "start": "3091040",
    "end": "3096109"
  },
  {
    "text": "which convert on both Windows or Linux things to be amazing JVM you give it into the DT OS scheduler which is",
    "start": "3096109",
    "end": "3103280"
  },
  {
    "text": "marathon and amezo in the covers and then it will map attack which host and that workload",
    "start": "3103280",
    "end": "3109970"
  },
  {
    "text": "should be written automatically so for example Linux you don't even on links nodes windows only on Windows but",
    "start": "3109970",
    "end": "3116359"
  },
  {
    "text": "something portable like Java it will pick the most available box based on available resources and other workloads",
    "start": "3116359",
    "end": "3123440"
  },
  {
    "text": "happening the windows azure the azure container service also has support for",
    "start": "3123440",
    "end": "3130099"
  },
  {
    "text": "windows containers you can specify that",
    "start": "3130099",
    "end": "3135230"
  },
  {
    "text": "you want um hi mr. zuv both Linux and",
    "start": "3135230",
    "end": "3141430"
  },
  {
    "text": "Windows machines and have that capabilities built-in and so now we have",
    "start": "3141430",
    "end": "3146570"
  },
  {
    "text": "this really great approach where we get this hybrid approach we can deploy things consistently whether it's on",
    "start": "3146570",
    "end": "3152089"
  },
  {
    "text": "Windows or Linux we can take a distant applications move them into this",
    "start": "3152089",
    "end": "3157099"
  },
  {
    "text": "container world and now deploy them in exactly the same way that we're deploying applications using things I",
    "start": "3157099",
    "end": "3163280"
  },
  {
    "text": "swore or kubernetes but where does the future hold and what does the future look like for containers so we have windows we",
    "start": "3163280",
    "end": "3171020"
  },
  {
    "text": "have Linux but we also have IOT we have armed devices we have raspberry PI's we have other things and cool complaints",
    "start": "3171020",
    "end": "3177770"
  },
  {
    "text": "like rezian are building experiences so they can deploy docker containers in exactly the same way but targeting arm",
    "start": "3177770",
    "end": "3185060"
  },
  {
    "text": "and iot devices and so now we have that consistent experience but we can target",
    "start": "3185060",
    "end": "3190190"
  },
  {
    "text": "everything including our small micro devices and they have really good demos",
    "start": "3190190",
    "end": "3195349"
  },
  {
    "text": "where when they do a darker deployment to one image you can see it rolling out",
    "start": "3195349",
    "end": "3202070"
  },
  {
    "text": "across other IOT devices in a cluster and kind of like a swarm mode",
    "start": "3202070",
    "end": "3207109"
  },
  {
    "text": "one of which is literally flying drums they deploy an image to a flying drone",
    "start": "3207109",
    "end": "3212569"
  },
  {
    "text": "either is going around and that will automatically update the other versions of the flying drone software running as",
    "start": "3212569",
    "end": "3219229"
  },
  {
    "text": "they're all flying within a cluster which is the definition of their own town time deployment so we have this we",
    "start": "3219229",
    "end": "3225890"
  },
  {
    "text": "have IOT devices we also have sequel server winning of the container so we don't have to go through the same",
    "start": "3225890",
    "end": "3230959"
  },
  {
    "text": "process and thiking 15 checkboxes in order to have sequel server winning",
    "start": "3230959",
    "end": "3236420"
  },
  {
    "text": "instead we can deploy other container books question in tow how long did it take until we have things like Visual",
    "start": "3236420",
    "end": "3242839"
  },
  {
    "text": "Studio winning other container why do we go through the steps of downloading 4 or",
    "start": "3242839",
    "end": "3248479"
  },
  {
    "text": "5 gig images to then spend another hour have an installed and optimize for a solution where if it's running inside of",
    "start": "3248479",
    "end": "3255440"
  },
  {
    "text": "a container that could be done in advance instead of having Stan are the updates which could potentially which a",
    "start": "3255440",
    "end": "3262489"
  },
  {
    "text": "game takes time and interferes with the fifth on we could download the latest layer just as we do with windows",
    "start": "3262489",
    "end": "3268609"
  },
  {
    "text": "containers and windows serve the core today and so change the commitment more reduced we can amend a bill time a much",
    "start": "3268609",
    "end": "3275809"
  },
  {
    "text": "better experience but also there's an boxed and so one version of Visual Studio wouldn't interact and interfere",
    "start": "3275809",
    "end": "3281900"
  },
  {
    "text": "or modify the registry of other visual studios so we can run things in parallel side-by-side because this is a whole",
    "start": "3281900",
    "end": "3289459"
  },
  {
    "text": "nature of what we're not containers and what containers I'd be timeful and this gets at a point",
    "start": "3289459",
    "end": "3295190"
  },
  {
    "text": "where we have everything being deployed as a container we have our Windows applications we have our Linux",
    "start": "3295190",
    "end": "3301279"
  },
  {
    "text": "applications we have our development experience and our development scripts and we have even have our door sensors",
    "start": "3301279",
    "end": "3307359"
  },
  {
    "text": "and other IOT devices all going through this docker container docker images and",
    "start": "3307359",
    "end": "3313219"
  },
  {
    "text": "dock over in style experiences and thanks to the cloud and services I swore",
    "start": "3313219",
    "end": "3318529"
  },
  {
    "text": "and kubernetes they can be deployed anywhere we can have hybrid clusters which are distributed across multiple",
    "start": "3318529",
    "end": "3324529"
  },
  {
    "text": "clouds would all manage our workloads and certainly the regional filiz bait",
    "start": "3324529",
    "end": "3329599"
  },
  {
    "text": "center or an even an entire cloud provider our systems will still learn still maintain a still and delivered a",
    "start": "3329599",
    "end": "3336410"
  },
  {
    "text": "performance would check we expect so this is all of fast-moving cabe containers especially windows",
    "start": "3336410",
    "end": "3343600"
  },
  {
    "text": "containers are coming and adding cool new functionality and if you want have",
    "start": "3343600",
    "end": "3348640"
  },
  {
    "text": "reasons why we built cutta cutta cutta code of a free interactive platform we've got different scenarios which",
    "start": "3348640",
    "end": "3354880"
  },
  {
    "text": "explain and go into more details about wire talk today and the platform where you can play and experiment and try different things out so with that as a",
    "start": "3354880",
    "end": "3363490"
  },
  {
    "text": "summary we talked about the four new concept which were introduced into",
    "start": "3363490",
    "end": "3368560"
  },
  {
    "text": "Windows Server 2016 we've got the new operating systems which is designed to",
    "start": "3368560",
    "end": "3373840"
  },
  {
    "text": "were not posted inside a container and delivered to support API that that",
    "start": "3373840",
    "end": "3379090"
  },
  {
    "text": "process needs if we come more traditional applications we target things like Windows server core if it's",
    "start": "3379090",
    "end": "3385330"
  },
  {
    "text": "a more modern application then we can use something which is a little bit more streamlined little bit more cut-down and",
    "start": "3385330",
    "end": "3390520"
  },
  {
    "text": "Windows Nano we've got Windows containers that allow us to process it in a sandbox secure nature but if we're",
    "start": "3390520",
    "end": "3397660"
  },
  {
    "text": "gonna run in and then flame or sensitive environment we've got Windows hyper-v container to give us that additional",
    "start": "3397660",
    "end": "3403180"
  },
  {
    "text": "security give us that additional set Pro kernel to keep our security auditors",
    "start": "3403180",
    "end": "3409210"
  },
  {
    "text": "happy we've now got support on Windows 10 so exactly what we've talked about the building of Windows images can",
    "start": "3409210",
    "end": "3416980"
  },
  {
    "text": "happen locally we can test to make sure applications work and then we can use that image and push it and win it on to",
    "start": "3416980",
    "end": "3423220"
  },
  {
    "text": "Windows Server 2016 and when it comes to winning a production we can do things",
    "start": "3423220",
    "end": "3428770"
  },
  {
    "text": "like swarm or hybrid kubernetes clusters and we'll start having that for that we just issue the workloads and that all",
    "start": "3428770",
    "end": "3435190"
  },
  {
    "text": "might find the most available most appropriate box regardless of underlying",
    "start": "3435190",
    "end": "3441100"
  },
  {
    "text": "operating system to deploy our workload on to in terms of next steps obsolete a",
    "start": "3441100",
    "end": "3447040"
  },
  {
    "text": "decoder if you want to play around with Windows containers do not know sure it's a great starting point as I said the",
    "start": "3447040",
    "end": "3452950"
  },
  {
    "text": "operating systems are fairly sizable downloads and so winning it in the cloud favor your local SSD and it's also",
    "start": "3452950",
    "end": "3459940"
  },
  {
    "text": "significantly quicker and we've got Windows 10 support so if you do want to play with it locally when you install",
    "start": "3459940",
    "end": "3466660"
  },
  {
    "text": "docker for Windows you can switch it and say switch to Windows containers and you can have an experiment with order",
    "start": "3466660",
    "end": "3472960"
  },
  {
    "text": "functionality what you need if have any questions please let me know please have me an email or drop me a",
    "start": "3472960",
    "end": "3477970"
  },
  {
    "text": "tweet and with that thank you very much enjoy the rest of your conference [Applause]",
    "start": "3477970",
    "end": "3488960"
  }
]