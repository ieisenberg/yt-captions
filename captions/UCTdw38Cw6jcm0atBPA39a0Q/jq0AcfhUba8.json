[
  {
    "start": "0",
    "end": "169000"
  },
  {
    "text": "okay I think it's about time hi welcome back thank you",
    "start": "4560",
    "end": "11970"
  },
  {
    "text": "that's the spirit so how many of you have been to my talk this morning about",
    "start": "11970",
    "end": "18060"
  },
  {
    "text": "the asp.net core stuff okay most of you and how many of you are building",
    "start": "18060",
    "end": "24980"
  },
  {
    "text": "server-side applications and client-side like on devices in the browser and so on",
    "start": "24980",
    "end": "31800"
  },
  {
    "text": "okay so you know traditionally I have been mostly all my life interested in in",
    "start": "31800",
    "end": "39510"
  },
  {
    "text": "in the server right and that's the reason why I have this open source project called identity server and so on",
    "start": "39510",
    "end": "45149"
  },
  {
    "text": "so my you know my main life happens on the server but obviously the only reason",
    "start": "45149",
    "end": "50969"
  },
  {
    "text": "you have a server is because you want to build clients right that's that's a probably of the main motivation for that",
    "start": "50969",
    "end": "57179"
  },
  {
    "text": "so I you know in my daily work I spend a lot of time working with customers and",
    "start": "57179",
    "end": "64040"
  },
  {
    "text": "you know working with them together and and discussing how they should build their clients and what types of clients",
    "start": "64040",
    "end": "70229"
  },
  {
    "text": "they're building and what the cultures are and so on and obviously the main reason they asked me is because they",
    "start": "70229",
    "end": "78180"
  },
  {
    "text": "want to build clients for you know like token based systems like open ID connect",
    "start": "78180",
    "end": "83610"
  },
  {
    "text": "in or off based systems and so on and that's basically what I'm you know what",
    "start": "83610",
    "end": "88799"
  },
  {
    "text": "I'm doing every day so this talk so when I wrote down the",
    "start": "88799",
    "end": "94439"
  },
  {
    "text": "abstract for this talk it was very ambitious yeah let's let's have a look at all the client types you can build and you know and so on and then I start",
    "start": "94439",
    "end": "100380"
  },
  {
    "text": "putting together the slides and I realize I have 40 free slides for 60 minutes so I hope we we pay we can pay",
    "start": "100380",
    "end": "111210"
  },
  {
    "text": "enough attention to every little detail here this is not an introduction to OAuth and OpenID Connect my assumption",
    "start": "111210",
    "end": "117479"
  },
  {
    "text": "must be that you at least know some of the basics and the protocols and you know like I have maybe have a little bit of practical experience already because",
    "start": "117479",
    "end": "125149"
  },
  {
    "text": "yeah it's it's it's a lot of stuff and I can't you know just fill in the basics",
    "start": "125149",
    "end": "130500"
  },
  {
    "text": "here we just did a two day workshop and this part here took us at least half a day in the workshop so that's like the",
    "start": "130500",
    "end": "137040"
  },
  {
    "text": "compressed version with no legs quicker speed learning if you like okay so um let's get started by",
    "start": "137040",
    "end": "143550"
  },
  {
    "text": "my name is Dominic I already uploaded the slide deck to speak attack comm so",
    "start": "143550",
    "end": "149880"
  },
  {
    "text": "you can download it from there I have put a lot of links to further reading material into the slides because",
    "start": "149880",
    "end": "156090"
  },
  {
    "text": "as I said after 60 minutes you probably have more questions than before so I you",
    "start": "156090",
    "end": "161670"
  },
  {
    "text": "know like give you a little bit more what you can you know read up on if you want to learn more about these things so",
    "start": "161670",
    "end": "168380"
  },
  {
    "text": "what are the objectives of the talk we um I want to basically discuss like the",
    "start": "168380",
    "end": "175080"
  },
  {
    "start": "169000",
    "end": "169000"
  },
  {
    "text": "common challenges you will face for building a client for an O or for an open D connect based system and it turns",
    "start": "175080",
    "end": "181860"
  },
  {
    "text": "out these challenges are always the same regardless what type of client you're building but then once you you know",
    "start": "181860",
    "end": "188420"
  },
  {
    "text": "you're building a very specific client obviously every client type has other",
    "start": "188420",
    "end": "194310"
  },
  {
    "text": "little cultures and things to look out for the good news is if you haven't you",
    "start": "194310",
    "end": "201060"
  },
  {
    "text": "know like you know started reading up on these things and it was very confusing it's getting easier okay there were new",
    "start": "201060",
    "end": "207299"
  },
  {
    "text": "there were new specs out there new guidance is out there especially in the world of when you're building JavaScript",
    "start": "207299",
    "end": "212970"
  },
  {
    "text": "based applications things actually get easier that's the good news okay they",
    "start": "212970",
    "end": "218730"
  },
  {
    "text": "they are they are basically consolidating some of the guidance that was before a bit fragmented into into",
    "start": "218730",
    "end": "226080"
  },
  {
    "text": "into more digestible documents and I think yeah we are on a good way of",
    "start": "226080",
    "end": "233489"
  },
  {
    "text": "making this you know accessible to mere mortals I think ma'am okay so why is it so hard",
    "start": "233489",
    "end": "244860"
  },
  {
    "text": "actually to to to to to learn about these things yeah and the credit that yonder is because it's complicated yeah",
    "start": "244860",
    "end": "251870"
  },
  {
    "start": "248000",
    "end": "248000"
  },
  {
    "text": "so historically that there were two big standards bodies out there on the",
    "start": "251870",
    "end": "256979"
  },
  {
    "text": "internet that take care of these standards on one hand there's the IETF write that published is this thing",
    "start": "256979",
    "end": "262470"
  },
  {
    "text": "called RFC's and or for example is an IETF standard but then you learn",
    "start": "262470",
    "end": "267990"
  },
  {
    "text": "somewhere that oh of is only half of the story also need to learn oh bloody connect and suddenly you you figure out well",
    "start": "267990",
    "end": "274289"
  },
  {
    "text": "that's a totally different company taking care of yeah that's just the so-called open ID foundation and in my",
    "start": "274289",
    "end": "280110"
  },
  {
    "text": "personal opinion what they should do is they should merge because these topics belong so closely together that you know",
    "start": "280110",
    "end": "287430"
  },
  {
    "text": "they shouldn't be fragmented guidance that you have to look up on you know two websites but this is I guess also",
    "start": "287430",
    "end": "294090"
  },
  {
    "text": "something political and this will not happen anytime soon but if you you know wanna want to just have a look at what's",
    "start": "294090",
    "end": "300330"
  },
  {
    "text": "out there these are the two websites you should have a look at okay and that's",
    "start": "300330",
    "end": "305610"
  },
  {
    "text": "probably really bad guidance because afterwards it will be even more confused so I tried to take all these specs that",
    "start": "305610",
    "end": "311940"
  },
  {
    "text": "exist on both and put them into a context and it took me quite a while and",
    "start": "311940",
    "end": "316949"
  },
  {
    "text": "that's how that looks like okay so there are there's a substantial number of",
    "start": "316949",
    "end": "322759"
  },
  {
    "text": "specifications out there and you know not not everyone here is probably",
    "start": "322759",
    "end": "328620"
  },
  {
    "text": "working full-time in security I do so I I think I read them all yeah and I",
    "start": "328620",
    "end": "333870"
  },
  {
    "text": "recently heard someone saying he counted all the pages of all the specs and it's double the number of worn piece okay so",
    "start": "333870",
    "end": "341510"
  },
  {
    "text": "it's a lot so what I'm trying to do now is kind of sort these things yeah may",
    "start": "341510",
    "end": "346680"
  },
  {
    "text": "make it more easy for YouTube you know to figure out what's important what's not so important okay so basically you know when we look at",
    "start": "346680",
    "end": "354539"
  },
  {
    "start": "350000",
    "end": "350000"
  },
  {
    "text": "the typical architecture picture that's the picture I'm always showing here we",
    "start": "354539",
    "end": "359550"
  },
  {
    "text": "see some servers we see some clients here and we sum and we see servers that become clients right and in the OAuth",
    "start": "359550",
    "end": "366900"
  },
  {
    "text": "world you basically make a distinction between so-called public clients and confidential clients and the definition",
    "start": "366900",
    "end": "375570"
  },
  {
    "text": "in the spec what's what a confidential client is is it basically says a client",
    "start": "375570",
    "end": "380580"
  },
  {
    "text": "that can securely store a secret okay and what that it means in in English is",
    "start": "380580",
    "end": "386639"
  },
  {
    "text": "it's typically something that is deployed on a server like like on a trusted machine right something that",
    "start": "386639",
    "end": "391860"
  },
  {
    "text": "runs in your data center maybe something that some some process that is running at a business partner that you know have",
    "start": "391860",
    "end": "398669"
  },
  {
    "text": "some trust in and so on and you know and the opposite of that is basically a",
    "start": "398669",
    "end": "403950"
  },
  {
    "text": "client who can't store a secret and these are typically things like you know running on in browsers running on",
    "start": "403950",
    "end": "409200"
  },
  {
    "text": "mobile phones running on on desktop computers right basically deployed out",
    "start": "409200",
    "end": "414810"
  },
  {
    "text": "outside of your control and obviously there is no point in having a secret because where how would you deploy the",
    "start": "414810",
    "end": "420660"
  },
  {
    "text": "secret probably not in the source code probably not you know in a config file",
    "start": "420660",
    "end": "426090"
  },
  {
    "text": "whatever it's not really a secret so we have to deal with these two client types in a different way ma'am so let's start",
    "start": "426090",
    "end": "433860"
  },
  {
    "text": "with the confidential ones because they are they are easier actually because we",
    "start": "433860",
    "end": "439020"
  },
  {
    "text": "have the luxury of you know being deployed on some trustworthy you know hardware or on a server or data",
    "start": "439020",
    "end": "444570"
  },
  {
    "text": "send or whatever anyway some regardless first of all the the challenges for building a client they look easy to",
    "start": "444570",
    "end": "450930"
  },
  {
    "text": "start with right it's a token based system so you want to interact with that you request a token you used to token",
    "start": "450930",
    "end": "456140"
  },
  {
    "text": "that's it right so let's have a look at how you request the token and this is",
    "start": "456140",
    "end": "462150"
  },
  {
    "start": "460000",
    "end": "460000"
  },
  {
    "text": "the so called OAuth client credential flow and this is the the approach you would use if you're doing like a server",
    "start": "462150",
    "end": "468000"
  },
  {
    "text": "to server style communication right you know like like one server talks to",
    "start": "468000",
    "end": "473070"
  },
  {
    "text": "another server they you know that the connection must be authenticated and so on and this is very easy right so that",
    "start": "473070",
    "end": "479220"
  },
  {
    "text": "the client goes to the token service it authenticates with the token service it has a client secret it's a it's a",
    "start": "479220",
    "end": "486000"
  },
  {
    "text": "confidential client so this secret is stored somewhere securely right it says okay give me a token for this API the",
    "start": "486000",
    "end": "492780"
  },
  {
    "text": "authorization server will authenticate the client make sure that this client has access to the API is he's asking for",
    "start": "492780",
    "end": "498480"
  },
  {
    "text": "and sent back the access token and then the client will use that access token",
    "start": "498480",
    "end": "503520"
  },
  {
    "text": "right these are the two fundamental steps request the token use the token so",
    "start": "503520",
    "end": "510060"
  },
  {
    "start": "510000",
    "end": "510000"
  },
  {
    "text": "you think the token is also easy you typically just take this token that you got from the token server you put it",
    "start": "510060",
    "end": "516419"
  },
  {
    "text": "on the authorization header of your HTTP call you should use the authorization",
    "start": "516419",
    "end": "521490"
  },
  {
    "text": "header it has a special meaning in HTTP it is a dedicated header for storing confident or transmitting confidential",
    "start": "521490",
    "end": "528360"
  },
  {
    "text": "stuff like credentials for example they typically don't show up in log files right and so on",
    "start": "528360",
    "end": "535020"
  },
  {
    "text": "there's actually an extra spec for that that just talks about how you should submit tokens and that's our of c6 750",
    "start": "535020",
    "end": "542379"
  },
  {
    "text": "they also have alternative means of transmitting this token they talk about",
    "start": "542379",
    "end": "547730"
  },
  {
    "text": "query strings and as a body but the payload data these are all you know",
    "start": "547730",
    "end": "555559"
  },
  {
    "text": "alternatives if you can always use the M the authorization header okay and then",
    "start": "555559",
    "end": "562610"
  },
  {
    "text": "the interesting part starts our token management okay so requesting your talking is easy",
    "start": "562610",
    "end": "567949"
  },
  {
    "text": "using the token is easy but what do you do in between right tokens need to be stored somewhere so",
    "start": "567949",
    "end": "573679"
  },
  {
    "text": "you need to make a decision where do I want to store my token like is it in memory do I use the distributed cache maybe because I have so many clients and",
    "start": "573679",
    "end": "580610"
  },
  {
    "text": "you know you want to share these tokens between the clients and even more",
    "start": "580610",
    "end": "585980"
  },
  {
    "text": "interesting is how do you deal with token expiration right the tokens typically have seen eat lifetimes okay",
    "start": "585980",
    "end": "592249"
  },
  {
    "text": "so you get a token it's valid for an hour 30 minutes 10 minutes whatever right you have to design all of your",
    "start": "592249",
    "end": "599509"
  },
  {
    "text": "client applications in a way that they can deal with the fact that the token has expired now there are two",
    "start": "599509",
    "end": "605509"
  },
  {
    "text": "fundamental approaches to to do this lifetime management one is what I call",
    "start": "605509",
    "end": "611209"
  },
  {
    "text": "proactive that's the one I am often use is basically you have some sort of cache",
    "start": "611209",
    "end": "616730"
  },
  {
    "text": "caching system okay and that could be in memory that could be distributed so you get the token it's valid for 60 minutes",
    "start": "616730",
    "end": "623149"
  },
  {
    "text": "you put it in the cache and put a cache lifetime of 59 minutes on it okay and then whenever you need to talk and you",
    "start": "623149",
    "end": "629480"
  },
  {
    "text": "get it from the cache and if it's there you use it when the token is gone from the cache that means it's probably very",
    "start": "629480",
    "end": "635899"
  },
  {
    "text": "expiring very soon so you get a new token put it in the cache again reuse or you use that use that new token ma'am",
    "start": "635899",
    "end": "644709"
  },
  {
    "text": "reactive is another approach that some libraries use it's basically tape they don't use caching or something like this",
    "start": "644829",
    "end": "651049"
  },
  {
    "text": "they just use the token use it use it use it until you get a 4-1 back from the API and before one typically means your",
    "start": "651049",
    "end": "657889"
  },
  {
    "text": "token is not good anymore and what you then do is you lazily get a new token and resend the request okay so these are",
    "start": "657889",
    "end": "664639"
  },
  {
    "text": "two two approaches that are often being used now so when we have that in mind",
    "start": "664639",
    "end": "670369"
  },
  {
    "start": "668000",
    "end": "668000"
  },
  {
    "text": "the challenges are a little bit more right requesting the token means okay which",
    "start": "670369",
    "end": "675380"
  },
  {
    "text": "protocol flow to use we just looked at client credentials and there are more is a user involved when a user is involved",
    "start": "675380",
    "end": "680840"
  },
  {
    "text": "then typically it's more complicated because you can't just simply do server to server api cause you have to involve",
    "start": "680840",
    "end": "686960"
  },
  {
    "text": "you is yeah managing the token where do I store the token yeah how do I renew",
    "start": "686960",
    "end": "693770"
  },
  {
    "text": "that token yeah do I require a long-lived access to this token meaning does the client application maybe require access",
    "start": "693770",
    "end": "701540"
  },
  {
    "text": "to the API after the user has left right like maybe it's a verification that the user has shut down his computer but",
    "start": "701540",
    "end": "707960"
  },
  {
    "text": "still in the background you're still having to process some data on behalf of the user so you have to extend basically",
    "start": "707960",
    "end": "713300"
  },
  {
    "text": "the token beyond the lifetime of the user session so to speak yeah so let's",
    "start": "713300",
    "end": "720050"
  },
  {
    "text": "have a look at user centric lines because that's where typically things become a little bit more some say",
    "start": "720050",
    "end": "725900"
  },
  {
    "text": "interesting some say complicated yeah depends how much you enjoy these technologies so",
    "start": "725900",
    "end": "732280"
  },
  {
    "text": "when you're building a UI like a user base like like a UI okay you typically",
    "start": "732280",
    "end": "740060"
  },
  {
    "text": "have more concerns than just having a token to call an API you want to authenticate the user first right and",
    "start": "740060",
    "end": "747200"
  },
  {
    "text": "that requires typically some sort of lock in workflow right in a browser for example you show a login page and you",
    "start": "747200",
    "end": "753320"
  },
  {
    "text": "might choose to login with a with an external authentication provider and there might be some redirects involved and so on but ultimately typically this",
    "start": "753320",
    "end": "763220"
  },
  {
    "text": "authentication will result in either you start a new session for this user or your joining an existing session yeah",
    "start": "763220",
    "end": "770420"
  },
  {
    "text": "think of single sign-on maybe this user is already locked onto a different application and then you want to join",
    "start": "770420",
    "end": "776480"
  },
  {
    "text": "that single sign-on session so you can give that user a single sign-on experience mam",
    "start": "776480",
    "end": "782180"
  },
  {
    "text": "once that is done you also want to have an access token to call api's on behalf",
    "start": "782180",
    "end": "788630"
  },
  {
    "text": "of that currently logged on user and then and that would be nice if from that",
    "start": "788630",
    "end": "795320"
  },
  {
    "text": "point on you don't have to bother that user anymore with any security related things right you have the access token",
    "start": "795320",
    "end": "801710"
  },
  {
    "text": "but if this token expires there must be some way how how to get a new access token without having to bother",
    "start": "801710",
    "end": "807020"
  },
  {
    "text": "the user again and again and again okay as I said this morning the best security systems are the ones that are for large",
    "start": "807020",
    "end": "814580"
  },
  {
    "text": "parts out of the way of the user okay um so ooofff has this thing called the",
    "start": "814580",
    "end": "821810"
  },
  {
    "text": "authorization code flow that's maybe the the mother of all or flows that the one",
    "start": "821810",
    "end": "827960"
  },
  {
    "text": "that first got created and let me quickly show you how that works as a refresher hopefully the idea is you are",
    "start": "827960",
    "end": "834290"
  },
  {
    "start": "832000",
    "end": "832000"
  },
  {
    "text": "in let's say in this case if the application the user starts you know",
    "start": "834290",
    "end": "839540"
  },
  {
    "text": "like it starts to use the application you have to lock him in you want an access token basically you are firing",
    "start": "839540",
    "end": "844880"
  },
  {
    "text": "offer a redirect to the token service you are using in this case omadi connect",
    "start": "844880",
    "end": "851450"
  },
  {
    "text": "to authenticate the user to get some tokens basically you say here okay I",
    "start": "851450",
    "end": "856610"
  },
  {
    "text": "want to know who the user is I need his email address and I need access to API one and API to and offline",
    "start": "856610",
    "end": "862220"
  },
  {
    "text": "access means I and I need I want to have a token that I can renew myself without",
    "start": "862220",
    "end": "868010"
  },
  {
    "text": "having to involve the user again and the",
    "start": "868010",
    "end": "873320"
  },
  {
    "text": "word code flow comes from this response type which is called code okay so what",
    "start": "873320",
    "end": "878870"
  },
  {
    "text": "the server will do is is if everything is fine the user is authenticated and so on and so forth the token service will",
    "start": "878870",
    "end": "885110"
  },
  {
    "start": "885000",
    "end": "885000"
  },
  {
    "text": "send back a so called authorization code to the server this code is just a random number right it has no meaning",
    "start": "885110",
    "end": "892040"
  },
  {
    "text": "whatsoever but once the client application has this code it can open a",
    "start": "892040",
    "end": "897950"
  },
  {
    "text": "server to server back-channel communication send that code in or fanta",
    "start": "897950",
    "end": "903800"
  },
  {
    "start": "901000",
    "end": "901000"
  },
  {
    "text": "kate with the token service yeah because it's a confidential client we can authenticate with the token service and",
    "start": "903800",
    "end": "908870"
  },
  {
    "text": "then the token service will send back all that all the tokens needed and you typically get spec free tokens the",
    "start": "908870",
    "end": "915410"
  },
  {
    "text": "identity token is the token for the front end which has to information about like the user ID and maybe his display",
    "start": "915410",
    "end": "921800"
  },
  {
    "text": "name and things like that and also authentication details the access token is the thing you're going to use later",
    "start": "921800",
    "end": "926990"
  },
  {
    "text": "on to talk to the api's and the Refresh token will be the thing that allows you to get new access tokens",
    "start": "926990",
    "end": "932540"
  },
  {
    "text": "programmatically once the old access token has expired okay so that that is widely deployed",
    "start": "932540",
    "end": "939620"
  },
  {
    "text": "many many besides out there I am using code flow ma'am but there were some issues with",
    "start": "939620",
    "end": "946489"
  },
  {
    "text": "code flow and you know that the whole recent date they they invented code flow",
    "start": "946489",
    "end": "952219"
  },
  {
    "text": "in the first place is is to not leak any data over the front channel over the browser right the browser is considered",
    "start": "952219",
    "end": "957769"
  },
  {
    "text": "to be that the weakest link in our chain yeah that's the thing on the on the user's machine it might sit in you know",
    "start": "957769",
    "end": "964069"
  },
  {
    "text": "like a Hecht Starbucks Wi-Fi network whatever so if if an attacker could",
    "start": "964069",
    "end": "969979"
  },
  {
    "text": "steal that code from the browser or from the Wi-Fi where it's being transmitted there's nothing the attacker can do",
    "start": "969979",
    "end": "976369"
  },
  {
    "text": "because he still is missing the client secret to turn this code indeed into the actual access token right",
    "start": "976369",
    "end": "983179"
  },
  {
    "text": "that's why code many people think that's the most secure way of doing it there is one weakness in code flow and",
    "start": "983179",
    "end": "989779"
  },
  {
    "start": "988000",
    "end": "988000"
  },
  {
    "text": "that is called token substitution attacks and the idea is this if an attacker can somehow steal a code maybe",
    "start": "989779",
    "end": "997309"
  },
  {
    "text": "maybe he can trick you to lock into a malicious web application and then the token server will send back a code",
    "start": "997309",
    "end": "1004569"
  },
  {
    "text": "representing you and the attacker can steal that code for example and then can take this code go to the application",
    "start": "1004569",
    "end": "1011619"
  },
  {
    "text": "login and on the way back exchange his code with your code right you're tricking that the server the client into",
    "start": "1011619",
    "end": "1019899"
  },
  {
    "text": "using his secret to turn the stolen code into tokens and now you can basically",
    "start": "1019899",
    "end": "1026699"
  },
  {
    "text": "impersonate that that victim that user using just the legitimate application",
    "start": "1026699",
    "end": "1031779"
  },
  {
    "text": "right because we basically cheated okay",
    "start": "1031779",
    "end": "1038699"
  },
  {
    "text": "this is a problem because basically there's there's no way to protect against it in or in pure or warf yeah so",
    "start": "1038699",
    "end": "1047139"
  },
  {
    "text": "that's why there are a couple of mitigation techniques out there the first mitigation technique comes and",
    "start": "1047139",
    "end": "1054909"
  },
  {
    "text": "is older to be honest comes from ultimately connect yeah so ultimately connect when they designed open to connect and you know open to",
    "start": "1054909",
    "end": "1060519"
  },
  {
    "text": "connect is is an extension to OAuth yeah to make it more secure I guess and also",
    "start": "1060519",
    "end": "1066190"
  },
  {
    "text": "to constrain some of the possibilities you have to make it more interoperable",
    "start": "1066190",
    "end": "1071369"
  },
  {
    "text": "the open connect guys introduce each two signatures to solve the problem okay",
    "start": "1071369",
    "end": "1077470"
  },
  {
    "text": "so we'll talk about this first and then I'm gonna show you the other one which is also used in in in many situations so",
    "start": "1077470",
    "end": "1085360"
  },
  {
    "start": "1083000",
    "end": "1083000"
  },
  {
    "text": "when you look at the that the solution that ultimately connect has to the token",
    "start": "1085360",
    "end": "1090730"
  },
  {
    "text": "substitution problem what they do is basically this when you are requesting or do during the authentication request",
    "start": "1090730",
    "end": "1097269"
  },
  {
    "text": "you are asking for two things that the code just like before but an additional identity token and what the",
    "start": "1097269",
    "end": "1104169"
  },
  {
    "text": "identity token is is a signed data structure coming from the token service and this data structure has information",
    "start": "1104169",
    "end": "1111700"
  },
  {
    "start": "1110000",
    "end": "1110000"
  },
  {
    "text": "again like who is the user and how did he lock in and and and more things but",
    "start": "1111700",
    "end": "1117730"
  },
  {
    "text": "it has something else in there it has a special claim called the C hash claim and what the C hash claim is is the hash",
    "start": "1117730",
    "end": "1125470"
  },
  {
    "text": "of the code okay so when you now get the identity token you can validate the",
    "start": "1125470",
    "end": "1130929"
  },
  {
    "text": "signature on the identity token with the public key material you know from your token service once you have that done",
    "start": "1130929",
    "end": "1137379"
  },
  {
    "text": "you get the C hash claim then you get the code you hash the code you compare the two values then you know that this",
    "start": "1137379",
    "end": "1143110"
  },
  {
    "text": "code actually belongs to the currently locked on user and it's not something that somebody tries to you know play",
    "start": "1143110",
    "end": "1148330"
  },
  {
    "text": "games on you okay that's how Oh buddy Connect solves the problem and for example this is for",
    "start": "1148330",
    "end": "1157659"
  },
  {
    "text": "example fully implemented in in asp.net core ok so if you're building an a spirit core application the built-in",
    "start": "1157659",
    "end": "1165250"
  },
  {
    "text": "omadi Connect handler fully supports hybrid flow all of the complicated crypto stuff you don't need to know",
    "start": "1165250",
    "end": "1171490"
  },
  {
    "text": "about these things it's all being handled internally yeah at the handler does the big channel communication it",
    "start": "1171490",
    "end": "1176649"
  },
  {
    "text": "does the authentication of the server it does the hashing it does the signature validations and and so on so forth okay",
    "start": "1176649",
    "end": "1183480"
  },
  {
    "text": "let me quickly show you that so oh by the way all the samples here they are I",
    "start": "1183480",
    "end": "1190419"
  },
  {
    "text": "have a link for them on the last slide so you don't you know you can try them",
    "start": "1190419",
    "end": "1197110"
  },
  {
    "text": "out yourself okay so that that that would be an a spirit core application",
    "start": "1197110",
    "end": "1202269"
  },
  {
    "text": "that is using token-based authentication and the typical recommendation is you",
    "start": "1202269",
    "end": "1208150"
  },
  {
    "text": "using the open ID connect handler for Microsoft that's this guy",
    "start": "1208150",
    "end": "1213880"
  },
  {
    "text": "and then you see your part you are you're pointing to your trustworthy token service you see here the response",
    "start": "1213880",
    "end": "1220630"
  },
  {
    "text": "type is code ID token so that's hybrid flow okay that that signals the authentication handler that",
    "start": "1220630",
    "end": "1226960"
  },
  {
    "text": "that he has to do all the extra work to protect yourself against hope the substitution and then you you know",
    "start": "1226960",
    "end": "1232029"
  },
  {
    "text": "specify some other things like which which which scopes do you want to request and and so on and so forth okay",
    "start": "1232029",
    "end": "1239940"
  },
  {
    "text": "when we run that you know it's as I said this morning it's mostly invisible because all of the stuff is happening",
    "start": "1240480",
    "end": "1246700"
  },
  {
    "text": "internally but basically that the user goes here he you know locks in if it's",
    "start": "1246700",
    "end": "1252730"
  },
  {
    "text": "the first time he's logging in he probably gets a consent screen or not depending how you configure this thing telling the user what information he's",
    "start": "1252730",
    "end": "1259809"
  },
  {
    "text": "about to release to the client application that depends on your you know business if you want to do or not",
    "start": "1259809",
    "end": "1266409"
  },
  {
    "text": "and you see now the users I signed in and here we have the access token okay",
    "start": "1266409",
    "end": "1273659"
  },
  {
    "text": "so that's that's the first part of the story and now as I said requesting to",
    "start": "1273659",
    "end": "1280419"
  },
  {
    "text": "token relatively easy using the token relatively easy all you need to do now is create an HTTP client set the",
    "start": "1280419",
    "end": "1286450"
  },
  {
    "text": "authorization header called the API that's how it works the tricky part obviously is now",
    "start": "1286450",
    "end": "1292059"
  },
  {
    "text": "managing to token again yeah so we need to store that token somewhere and we need to manage the lifetime of the token",
    "start": "1292059",
    "end": "1299580"
  },
  {
    "text": "so in a spirit core you have multiple options of doing that yeah so um the",
    "start": "1299580",
    "end": "1304899"
  },
  {
    "text": "handler itself hasn't has an eventing model so you can implement various events here that get called at various",
    "start": "1304899",
    "end": "1312789"
  },
  {
    "text": "stages they hand you over the tokens in an in a validated state so to speak and",
    "start": "1312789",
    "end": "1317860"
  },
  {
    "text": "now it now you could go just go to a database and store them somewhere so that you you know can access them anytime you want Microsoft has a",
    "start": "1317860",
    "end": "1326110"
  },
  {
    "text": "built-in feature I I showed that this morning already which automatically saves the tokens for you in what they",
    "start": "1326110",
    "end": "1332980"
  },
  {
    "text": "call the authentication session okay and that's why we can also see it here on",
    "start": "1332980",
    "end": "1339280"
  },
  {
    "text": "this page I'm just reading from the current of indications and that's where my code would crap that token from every time it's needed okay",
    "start": "1339280",
    "end": "1347770"
  },
  {
    "text": "I also showed this morning that you can plug in some extra extra stuff into your",
    "start": "1347770",
    "end": "1354600"
  },
  {
    "text": "into your session management to do automatic renewal of the token so basically here's an invent an event",
    "start": "1354600",
    "end": "1362380"
  },
  {
    "text": "called validate principal this gets fired every time a user sorry a cookie",
    "start": "1362380",
    "end": "1368980"
  },
  {
    "text": "comes in or our request comes into your web app and then you can look at the current access token can check the expiration of the current access token",
    "start": "1368980",
    "end": "1375610"
  },
  {
    "text": "and if it's about to expire maybe you have some threshold yeah like five minutes before one minutes before whatever then you basically open the",
    "start": "1375610",
    "end": "1385000"
  },
  {
    "text": "back-channel communication and then get a new token and then you update the token value in the session and again",
    "start": "1385000",
    "end": "1391750"
  },
  {
    "text": "your application code will just use that and can be unaware of the technical you know details here okay and yet a nice",
    "start": "1391750",
    "end": "1401320"
  },
  {
    "text": "thing you can do is if if you want to do that I mentioned earlier sometimes you might need API access after the user has",
    "start": "1401320",
    "end": "1409600"
  },
  {
    "text": "signed out from your application because you want to run some scheduled tasks or batch jobs or whatever then then",
    "start": "1409600",
    "end": "1415330"
  },
  {
    "text": "obviously you would you would keep that refresh token around for later use whenever you need it but in many",
    "start": "1415330",
    "end": "1421420"
  },
  {
    "text": "situations when the users actually signing out from your application you want to clean up all the tokens that you",
    "start": "1421420",
    "end": "1427150"
  },
  {
    "text": "accumulated and Dez Dez Dez there's another event here that is fired basically at sign out time and then you",
    "start": "1427150",
    "end": "1434050"
  },
  {
    "text": "can if you're talking service supports that just revoke that refresh token and invalidate it so even if it's good even",
    "start": "1434050",
    "end": "1440230"
  },
  {
    "text": "if somebody would steal it now it would be worthless but that that's a clean implementation in my opinion for a is",
    "start": "1440230",
    "end": "1448179"
  },
  {
    "text": "peanut core okay um a spirit Cora I must say I mean I'm I'm",
    "start": "1448179",
    "end": "1456160"
  },
  {
    "text": "spending a lot of time raising a core it's a pretty good and complete implementation of an open ID connect and",
    "start": "1456160",
    "end": "1462640"
  },
  {
    "text": "a wolf client yeah I've seen other programming environments where there are",
    "start": "1462640",
    "end": "1468160"
  },
  {
    "text": "by far not as feature-rich as what you get an ace net core I recently had to do an integration with PHP not me myself",
    "start": "1468160",
    "end": "1475710"
  },
  {
    "text": "thank God but you know to help someone doing that and they have by no means",
    "start": "1475710",
    "end": "1481860"
  },
  {
    "text": "these really good libraries you have to do a lot of things by hand okay so in",
    "start": "1481860",
    "end": "1490590"
  },
  {
    "text": "other words if you are having a system that supports hybrid flow that's good to",
    "start": "1490590",
    "end": "1496320"
  },
  {
    "text": "use okay there was some issues with hybrid flow as well and the main issue",
    "start": "1496320",
    "end": "1503700"
  },
  {
    "start": "1498000",
    "end": "1498000"
  },
  {
    "text": "is that it's not widely adopted I just mentioned that right with PHP for example there was no hybrid flow",
    "start": "1503700",
    "end": "1510650"
  },
  {
    "text": "implementation available I haven't looked or haven't made like a comprehensive study of all the platforms",
    "start": "1510650",
    "end": "1516780"
  },
  {
    "text": "but the reason why many people didn't implement hybrid flow is because it's actually quite incredible right you have",
    "start": "1516780",
    "end": "1524250"
  },
  {
    "text": "to do all this crypto verifying signatures hashing you know a lot of",
    "start": "1524250",
    "end": "1529350"
  },
  {
    "text": "things yeah that's why many platforms just stayed on plain code flow and just",
    "start": "1529350",
    "end": "1534480"
  },
  {
    "text": "ignored or the or are not aware of the problem with token substitution yeah the",
    "start": "1534480",
    "end": "1540480"
  },
  {
    "text": "other thing that comes up with hybrid flow and funnily enough oh bloody connect was created before gdpr yeah is",
    "start": "1540480",
    "end": "1547070"
  },
  {
    "text": "that when you are sending these identity token on the front channel you are potentially leaking identity information",
    "start": "1547070",
    "end": "1552780"
  },
  {
    "text": "over the browser okay and even if that identity token only contains the user ID",
    "start": "1552780",
    "end": "1559860"
  },
  {
    "text": "yeah depending on your Chi DPR consultant this might be considered personally identifiable information yeah",
    "start": "1559860",
    "end": "1566910"
  },
  {
    "text": "so the nice thing about the code flow like in its raw form is that it doesn't",
    "start": "1566910",
    "end": "1572280"
  },
  {
    "text": "leak anything across the front channel just this random number and everything else is happening on on the back channel",
    "start": "1572280",
    "end": "1578660"
  },
  {
    "text": "hybrid flow solves the substitution problem but you are getting this this",
    "start": "1578660",
    "end": "1583800"
  },
  {
    "text": "thing here which might or might not be an issue your subject ID your user ID shouldn't be anything personally",
    "start": "1583800",
    "end": "1589560"
  },
  {
    "text": "identifiable it's just a number right it's it's a user ID yeah but if you're adding more stuff to it like email",
    "start": "1589560",
    "end": "1595770"
  },
  {
    "text": "addresses and stuff and then potentially somebody might flag that because you are sending this over the the browser",
    "start": "1595770",
    "end": "1601950"
  },
  {
    "text": "Channel and that might not be okay now",
    "start": "1601950",
    "end": "1607070"
  },
  {
    "start": "1609000",
    "end": "1609000"
  },
  {
    "text": "let her switch gears and go to public clients and while we do that I will also",
    "start": "1609980",
    "end": "1615720"
  },
  {
    "text": "demonstrate to you the other mitigation technique for for-4 token substitution",
    "start": "1615720",
    "end": "1621440"
  },
  {
    "text": "public client as I said they are clients which are deployed on devices and in browsers and so on and you know normally",
    "start": "1621440",
    "end": "1629040"
  },
  {
    "text": "folk for confidential clients you have a one-to-one relationship between your client IDs and your client instance",
    "start": "1629040",
    "end": "1634380"
  },
  {
    "text": "right we have your app one and your app 2 and your app 3 and so on they are basically records in your",
    "start": "1634380",
    "end": "1639780"
  },
  {
    "text": "configuration database each of them have their own unique secret and so on yeah for public lines it is very common that",
    "start": "1639780",
    "end": "1646980"
  },
  {
    "text": "you just give that client type a client ID right so you you you write a mobile",
    "start": "1646980",
    "end": "1652380"
  },
  {
    "text": "client you call it mobile client you put it in the app store and five million people download the mobile client they",
    "start": "1652380",
    "end": "1658860"
  },
  {
    "text": "are all going to share the client ID right there will be no secret because as",
    "start": "1658860",
    "end": "1664560"
  },
  {
    "text": "I said there's no point in having a secret and for most parts this is okay",
    "start": "1664560",
    "end": "1671150"
  },
  {
    "text": "in some scenarios you can use an additional technique called dynamic",
    "start": "1671150",
    "end": "1677520"
  },
  {
    "text": "registration and the idea is that let's say you write your mobile client you give it like a bootstrap client ID",
    "start": "1677520",
    "end": "1683820"
  },
  {
    "text": "called mobile client you put it in the app store and the first time it's being run on them on a user's device you start",
    "start": "1683820",
    "end": "1690780"
  },
  {
    "text": "some additional authentication handshake and then register the client instance dynamically right and then you will get",
    "start": "1690780",
    "end": "1698640"
  },
  {
    "text": "back from the server a new client ID and the client secret and that's how you effectively can turn a public line into",
    "start": "1698640",
    "end": "1705270"
  },
  {
    "text": "a confidential client if that's a requirement but keep in mind this is this initial boot strapping",
    "start": "1705270",
    "end": "1711410"
  },
  {
    "text": "infrastructure must be created no and there's no no spec for there or whatever",
    "start": "1711410",
    "end": "1719160"
  },
  {
    "text": "it's basically something that you have to build into your system ok as an",
    "start": "1719160",
    "end": "1726270"
  },
  {
    "start": "1725000",
    "end": "1725000"
  },
  {
    "text": "example for for a public line let's start with an easy one which is native",
    "start": "1726270",
    "end": "1732450"
  },
  {
    "text": "mobile clients the good news is that I think like one year ago or so there's a",
    "start": "1732450",
    "end": "1740370"
  },
  {
    "text": "new spec out there called OAuth 2 for native applications it's written by the ietf you can tell because they used",
    "start": "1740370",
    "end": "1746850"
  },
  {
    "text": "the word oh of to hear if it would have been written by the open MIDI foundation it would be called OBE MIDI connect for",
    "start": "1746850",
    "end": "1752400"
  },
  {
    "text": "native applications them funnily enough the guy that wrote the spec he also made",
    "start": "1752400",
    "end": "1758100"
  },
  {
    "text": "reference implementations of the spec for both iOS and Android and guess what",
    "start": "1758100",
    "end": "1763560"
  },
  {
    "text": "he's using is using automatic Connect not Olaf okay and guess where these samples are hosted on the oak MIDI",
    "start": "1763560",
    "end": "1768900"
  },
  {
    "text": "Foundation github website so it's all you know our life could be much easier",
    "start": "1768900",
    "end": "1773970"
  },
  {
    "text": "if these two found you know organizations would just say okay let's let's join forces but yeah okay um this",
    "start": "1773970",
    "end": "1783420"
  },
  {
    "text": "spec here is not a protocol it's what they call a best current practice okay",
    "start": "1783420",
    "end": "1789060"
  },
  {
    "text": "and could they have to work current in there because obviously they change probably over time but it's pretty",
    "start": "1789060",
    "end": "1794130"
  },
  {
    "text": "pretty new and everything that's in there totally applies to today okay and",
    "start": "1794130",
    "end": "1799800"
  },
  {
    "text": "this is more like a guidance document like about patterns and anti patterns and tools and tones and typical",
    "start": "1799800",
    "end": "1805500"
  },
  {
    "text": "approaches and they actually really specifically look at i/o s and Android devices how you would do that for",
    "start": "1805500",
    "end": "1810810"
  },
  {
    "text": "example also a desktop Windows and Mac and so on and give you some guidance ma'am so one of the guidance they give",
    "start": "1810810",
    "end": "1818700"
  },
  {
    "text": "is don't do this what what is this this",
    "start": "1818700",
    "end": "1824010"
  },
  {
    "start": "1820000",
    "end": "1820000"
  },
  {
    "text": "is basically a mobile application bringing up its own native login dialog ma'am we all know these mam",
    "start": "1824010",
    "end": "1832140"
  },
  {
    "text": "companies want us to good to use good good passwords and then they force us to type them in on the mobile device into a",
    "start": "1832140",
    "end": "1838890"
  },
  {
    "text": "native dialogue mam it's a bit of a usability thing in awe of their test as",
    "start": "1838890",
    "end": "1846030"
  },
  {
    "text": "a flow called the resource owner password flow and the idea is basically you know you're harvesting the credentials here you're sending them to",
    "start": "1846030",
    "end": "1852450"
  },
  {
    "text": "the token service the token service validates the credential sends back a token hopefully then you store the token",
    "start": "1852450",
    "end": "1858300"
  },
  {
    "text": "in the secure data storage API available on the device and then from that point on you use the token okay I mean that's",
    "start": "1858300",
    "end": "1865530"
  },
  {
    "text": "not too bad I mean it's it's much better compared to you know applications I've",
    "start": "1865530",
    "end": "1870630"
  },
  {
    "text": "seen where they send the name and the password on every single API call okay so at least you exchange",
    "start": "1870630",
    "end": "1876070"
  },
  {
    "text": "the token had said that the password at some point into a token and hopefully you threw away the password ma'am the",
    "start": "1876070",
    "end": "1883450"
  },
  {
    "text": "problem is when I when I see these applications which is negative login dialogues I never know are they really",
    "start": "1883450",
    "end": "1888520"
  },
  {
    "text": "are they really throwing away my password or are they keeping it around",
    "start": "1888520",
    "end": "1893770"
  },
  {
    "text": "somewhere ma'am and yes it that there's a trick you can do well it's not really",
    "start": "1893770",
    "end": "1899680"
  },
  {
    "text": "a fun but III discovered by accident yeah so I got a new iPhone I I did a",
    "start": "1899680",
    "end": "1906220"
  },
  {
    "text": "backup of my iPhone and when you when you pick up your iPhone you have to do two backups right one is the application",
    "start": "1906220",
    "end": "1911860"
  },
  {
    "text": "backup and one is the keychain backup right the assumption is that all of the",
    "start": "1911860",
    "end": "1917020"
  },
  {
    "text": "secrets like passwords and tokens is one they are only stored in the keychain and not in the application space ma'am um so",
    "start": "1917020",
    "end": "1924190"
  },
  {
    "text": "I did that and I restore the backup on my new phone and just for akai okay so in theory all my applications are back",
    "start": "1924190",
    "end": "1931300"
  },
  {
    "text": "now and I should be locked out from all of them right because I haven't yet restored the keychain guess what",
    "start": "1931300",
    "end": "1938230"
  },
  {
    "text": "happened I was locked in too many of them why because they probably stored my",
    "start": "1938230",
    "end": "1943750"
  },
  {
    "text": "password just in their application directory okay so yeah not so nice um so",
    "start": "1943750",
    "end": "1951460"
  },
  {
    "text": "yes there's a trust issue here at least for me the usability just got a little",
    "start": "1951460",
    "end": "1956860"
  },
  {
    "text": "bit better in iOS 12 they now enable password managers for native login dialog that's quite nice actually but",
    "start": "1956860",
    "end": "1963520"
  },
  {
    "text": "still from from a user education point of view it you shouldn't educate your",
    "start": "1963520",
    "end": "1970660"
  },
  {
    "text": "users to type in their passwords in random places right it would be good if the login page always looks the same",
    "start": "1970660",
    "end": "1975940"
  },
  {
    "text": "it's always in the same place and you know probably when you're when you are concentrating on one single login page",
    "start": "1975940",
    "end": "1983350"
  },
  {
    "text": "in your organization the chances are that this thing is much smarter right you have your auditing and your locking",
    "start": "1983350",
    "end": "1988510"
  },
  {
    "text": "and maybe your fraud detection and your lock out and you know all the things that you probably would implement there but if every every application developer",
    "start": "1988510",
    "end": "1996190"
  },
  {
    "text": "create its own login page you know how good will that be I don't know the other",
    "start": "1996190",
    "end": "2002340"
  },
  {
    "text": "thing is obviously you can't do Federation here because if you want to support things like Google logins or you",
    "start": "2002340",
    "end": "2007680"
  },
  {
    "text": "know I don't know business-to-business dialog you can't do them because they require a browser and obviously the one thing you",
    "start": "2007680",
    "end": "2014160"
  },
  {
    "text": "don't want to do is ask your user for his Google password in your application right so long story short the guidance",
    "start": "2014160",
    "end": "2022380"
  },
  {
    "start": "2021000",
    "end": "2021000"
  },
  {
    "text": "says if you're building a native application you should use a browser for authentication okay and many people",
    "start": "2022380",
    "end": "2028260"
  },
  {
    "text": "don't like that especially the guys from the UI department often or the UX department even worse I guess they have",
    "start": "2028260",
    "end": "2035850"
  },
  {
    "text": "objections to that because they don't have full control over this they can't control every pixel right but from a",
    "start": "2035850",
    "end": "2042510"
  },
  {
    "text": "security point of view it makes a lot of sense yeah you already have this login system yeah you already have existing",
    "start": "2042510",
    "end": "2048139"
  },
  {
    "text": "investments into your open early connect server for example for the best thing to do is just spawn a browser go to the",
    "start": "2048140",
    "end": "2055290"
  },
  {
    "text": "login page you already have make the youth authenticate there and then there are ways to basically transfer the",
    "start": "2055290",
    "end": "2060990"
  },
  {
    "text": "tokens back to your to your native client ok before I show you actually how",
    "start": "2060990",
    "end": "2067230"
  },
  {
    "text": "that works I can show you how it how it looks ok that's my second favorite",
    "start": "2067230",
    "end": "2075389"
  },
  {
    "text": "version of Visual Studio and and for",
    "start": "2075390",
    "end": "2082409"
  },
  {
    "text": "some reason I have two two iPhones I don't know why and from all the things one is my iPhone 7",
    "start": "2082410",
    "end": "2089090"
  },
  {
    "text": "but basically let me just show you how that login workflow could look like on a",
    "start": "2089090",
    "end": "2096389"
  },
  {
    "text": "on a mobile device once it's up ok so",
    "start": "2096390",
    "end": "2105830"
  },
  {
    "text": "see my very nice UI design so there are",
    "start": "2105830",
    "end": "2112620"
  },
  {
    "text": "a couple of choices when it comes to opening a browser in these native application development systems one is",
    "start": "2112620",
    "end": "2119460"
  },
  {
    "text": "what they call a webview basically you embed a browser into the application right without all the chrome around it",
    "start": "2119460",
    "end": "2125970"
  },
  {
    "text": "so to speak this is not recommended at all yeah a.m. today the user can tell am",
    "start": "2125970",
    "end": "2131160"
  },
  {
    "text": "I really in a browser or just something that looks like my login page me you can't see the URL you can't inspect",
    "start": "2131160",
    "end": "2137220"
  },
  {
    "text": "certificates probably and so on so forth but also even more important this will",
    "start": "2137220",
    "end": "2143940"
  },
  {
    "text": "it's own isolated cookie container meaning if you want to support single sign-on in the native world then this",
    "start": "2143940",
    "end": "2150030"
  },
  {
    "text": "wouldn't work right but if you would spawn the system browser on the device chances are that the user might already",
    "start": "2150030",
    "end": "2156660"
  },
  {
    "text": "be logged on in the browser with that service that he wants to use Google for example or whatever and in that case you",
    "start": "2156660",
    "end": "2163740"
  },
  {
    "text": "could reuse an existing single sign-on session that already exists on the device okay so Apple gives you special",
    "start": "2163740",
    "end": "2170520"
  },
  {
    "text": "api's and Android as well to open and did they call it like a custom tab",
    "start": "2170520",
    "end": "2175920"
  },
  {
    "text": "basically think of it as opening a tab of the system browser inside your application it is the real the real",
    "start": "2175920",
    "end": "2182310"
  },
  {
    "text": "system browser in that case Safari you can you have access to all the cookies",
    "start": "2182310",
    "end": "2187890"
  },
  {
    "text": "that the normal Safari would have yeah and it's hardened in a way that you you",
    "start": "2187890",
    "end": "2193800"
  },
  {
    "text": "couldn't you wouldn't be able to lock keystrokes and things from from within the originating application okay",
    "start": "2193800",
    "end": "2203450"
  },
  {
    "text": "because this is a very special browser Apple will insert a little dialog here",
    "start": "2203450",
    "end": "2208650"
  },
  {
    "text": "saying hey be careful you are now going to sign in somewhere regardless of what",
    "start": "2208650",
    "end": "2213900"
  },
  {
    "text": "the app just said you're gonna do okay and it will it will show you the name of",
    "start": "2213900",
    "end": "2219060"
  },
  {
    "text": "the application on the screen and it will show you the name of the server that you're gonna authenticate with so",
    "start": "2219060",
    "end": "2224099"
  },
  {
    "text": "if your cables dead you click continue then it will render a login page okay so",
    "start": "2224099",
    "end": "2230730"
  },
  {
    "text": "I see I have multiple options here name and password and so on they also allow Google logins and I'm already locked on",
    "start": "2230730",
    "end": "2237750"
  },
  {
    "text": "to Google on my on my device so maybe I can just reuse it authentication session and here we are that worked no login page from Google",
    "start": "2237750",
    "end": "2244230"
  },
  {
    "text": "that's my consent screen I allowed that and now my access token and my refresh",
    "start": "2244230",
    "end": "2251609"
  },
  {
    "text": "token in my claims are back in the client application and now you know the trail right you store the refresh token",
    "start": "2251609",
    "end": "2257640"
  },
  {
    "text": "somewhere secure and whenever you need to renew the token you take the Refresh token open a connection get a new access",
    "start": "2257640",
    "end": "2263130"
  },
  {
    "text": "token and use that okay you should store that refresh token in the keychain I",
    "start": "2263130",
    "end": "2268800"
  },
  {
    "text": "hope I made that clear some applications to put additional",
    "start": "2268800",
    "end": "2274380"
  },
  {
    "text": "things on top where you you can put stuff into the keychain",
    "start": "2274380",
    "end": "2279420"
  },
  {
    "text": "and then additionally secure that item with let's say your fingerprint or your face ID for example so my my banking app",
    "start": "2279420",
    "end": "2286109"
  },
  {
    "text": "does that for example so every time I open the banking app I first have to do face ID that unlocks the keys in the",
    "start": "2286109",
    "end": "2293070"
  },
  {
    "text": "keychain and then they use that to access the banking api's okay so how",
    "start": "2293070",
    "end": "2301080"
  },
  {
    "text": "does it work but there are a couple of",
    "start": "2301080",
    "end": "2307980"
  },
  {
    "text": "approaches here but typically what you do is you register a so-called custom URI scheme so basically when you install",
    "start": "2307980",
    "end": "2315000"
  },
  {
    "text": "the application on the device you can say okay this URL belongs to me and the",
    "start": "2315000",
    "end": "2320130"
  },
  {
    "text": "recommendation is that this URL contains your company name so you can actually claim that this is really belonging to",
    "start": "2320130",
    "end": "2325320"
  },
  {
    "text": "the application and then the operating system knows about that and whenever the",
    "start": "2325320",
    "end": "2331080"
  },
  {
    "text": "system browser makes a redirect to this URL it will transfer control back to the",
    "start": "2331080",
    "end": "2336480"
  },
  {
    "text": "application that has registered for this URL and it will basically send you the",
    "start": "2336480",
    "end": "2341599"
  },
  {
    "text": "the code okay so in this case the code is coming back and then the Safari will call back into",
    "start": "2341599",
    "end": "2348690"
  },
  {
    "text": "the native application and we have to code then we can open the back-channel communication and we have our tokens",
    "start": "2348690",
    "end": "2357180"
  },
  {
    "text": "okay so for those who have looked",
    "start": "2357180",
    "end": "2363390"
  },
  {
    "text": "closely you will see that there are some extra parameters that you might haven't seen before and that is the other",
    "start": "2363390",
    "end": "2368780"
  },
  {
    "text": "mitigation technique for a code substitution it's called pixie or proof key for code exchange that's another",
    "start": "2368780",
    "end": "2376800"
  },
  {
    "text": "spec from the IETF yeah so it's for OAuth just silly but the idea is this um",
    "start": "2376800",
    "end": "2384570"
  },
  {
    "text": "it solves the exact same problem as the hybrid flow by preventing code",
    "start": "2384570",
    "end": "2390089"
  },
  {
    "text": "substitution how does that work let's go a couple of steps back here you can see",
    "start": "2390089",
    "end": "2395790"
  },
  {
    "text": "basically you are creating a so called code verifier that's a random number to detect like the client creates a random number",
    "start": "2395790",
    "end": "2401099"
  },
  {
    "text": "called code verifier then the client send hashes that random number and sends",
    "start": "2401099",
    "end": "2406140"
  },
  {
    "text": "that along and calls it the code challenge okay now on the server side",
    "start": "2406140",
    "end": "2411780"
  },
  {
    "text": "the token service will associate the coat challenge with the coat that he will emit and then when you open the",
    "start": "2411780",
    "end": "2417930"
  },
  {
    "text": "back-channel communication you are sending the clear text code verifier to",
    "start": "2417930",
    "end": "2423390"
  },
  {
    "text": "the token endpoint so what had what happens then is on the server side the server will take the code verifier will",
    "start": "2423390",
    "end": "2429510"
  },
  {
    "text": "hash it again and we'll compare the hash he got on the front channel with the hare she got on the back Channel and",
    "start": "2429510",
    "end": "2434790"
  },
  {
    "text": "that's how the client can prove that he basically is the same client on both legs okay and if somebody would",
    "start": "2434790",
    "end": "2440400"
  },
  {
    "text": "substitute a code now this hashing would fail and you have exactly the same end",
    "start": "2440400",
    "end": "2445410"
  },
  {
    "text": "result that the substitution wouldn't work anymore okay now which one is",
    "start": "2445410",
    "end": "2453000"
  },
  {
    "text": "better well they are they are they are very similar right I mean they they have the same end result the reason why",
    "start": "2453000",
    "end": "2458940"
  },
  {
    "text": "people prefer pixie these days is because all of the the heart crypto work",
    "start": "2458940",
    "end": "2464520"
  },
  {
    "text": "is happening on the server and not on the client okay so it's easier to create",
    "start": "2464520",
    "end": "2469950"
  },
  {
    "text": "client libraries because you don't have to pull in crypto libraries and do hashing and signature validation and so on",
    "start": "2469950",
    "end": "2475110"
  },
  {
    "text": "all you need to do is basically have a random number generator and a hash and",
    "start": "2475110",
    "end": "2481500"
  },
  {
    "text": "then all of the the harder stuff is basically happening on the server side and that's why my prediction will be",
    "start": "2481500",
    "end": "2490170"
  },
  {
    "text": "that this will be the more prevalent approach in the future and if you're talking service supports pick same I",
    "start": "2490170",
    "end": "2495390"
  },
  {
    "text": "would recommend you're using that it's it's very easy to use okay yeah talk",
    "start": "2495390",
    "end": "2502680"
  },
  {
    "text": "management III I mentioned that you should you should leverage secure data",
    "start": "2502680",
    "end": "2508140"
  },
  {
    "text": "storage API you have on the device you know keychain iOS on Windows we have DP API the data protection API same idea",
    "start": "2508140",
    "end": "2516030"
  },
  {
    "text": "you can put on additional biometrics for example and so on and so forth yeah again same idea maybe at logout time or",
    "start": "2516030",
    "end": "2523860"
  },
  {
    "text": "at uninstall time you want to revoke all these refresh tokens that you have accumulated here just to be clean now I",
    "start": "2523860",
    "end": "2530720"
  },
  {
    "text": "can show you another application that uses the same approach I'm just the github desktop client okay whatever that",
    "start": "2530720",
    "end": "2540480"
  },
  {
    "text": "means so when I sign in to the get a desktop",
    "start": "2540480",
    "end": "2546450"
  },
  {
    "text": "client you see basically I press the sign-in button it says okay you wanna sign with your browser because chances",
    "start": "2546450",
    "end": "2551880"
  },
  {
    "text": "are that if you are using github you already have a github authentication session on that machine so it will pop",
    "start": "2551880",
    "end": "2557640"
  },
  {
    "text": "up the browser I'm offended I say okay that's fine let's go back and now I'm",
    "start": "2557640",
    "end": "2563880"
  },
  {
    "text": "signed into the client now same idea Native Client leveraging the system browser to do its work okay",
    "start": "2563880",
    "end": "2574520"
  },
  {
    "text": "now oh yeah here what the client libraries that the upper ones are the native ones and you see they're from the",
    "start": "2575660",
    "end": "2582119"
  },
  {
    "start": "2576000",
    "end": "2576000"
  },
  {
    "text": "open ID Foundation funnily enough that the lower ones are the ones I wrote that I did that you just saw in the iOS app",
    "start": "2582119",
    "end": "2588570"
  },
  {
    "text": "it's a c-sharp library which works on multiple platforms so the big elephant",
    "start": "2588570",
    "end": "2593849"
  },
  {
    "start": "2591000",
    "end": "2591000"
  },
  {
    "text": "in the room ma'am is browser-based clients pass me a sparsa traditionally spas are really",
    "start": "2593849",
    "end": "2600660"
  },
  {
    "text": "hard to secure because they are running in a shared execution environment right a browser runs multiple applications at",
    "start": "2600660",
    "end": "2607140"
  },
  {
    "text": "the same time from different domains and they have multiple you know varying degree of trust okay and because we are",
    "start": "2607140",
    "end": "2615390"
  },
  {
    "text": "sharing so to speak one virtual machine with multiple applications there are all",
    "start": "2615390",
    "end": "2622290"
  },
  {
    "text": "kinds of attacks which are browser specific and they all have the word cross in there because you're crossing",
    "start": "2622290",
    "end": "2627390"
  },
  {
    "text": "so to speak a domain or a boundary yeah cross-site request forgery cross-site",
    "start": "2627390",
    "end": "2632520"
  },
  {
    "text": "scripting and so on we were discussing this for a long time that we that we",
    "start": "2632520",
    "end": "2639839"
  },
  {
    "text": "need actually is some something similar to or for native apps it would be nice if somebody would create a war for",
    "start": "2639839",
    "end": "2645240"
  },
  {
    "text": "sparse yeah because it's half and it would be nice to have a like a clear",
    "start": "2645240",
    "end": "2650300"
  },
  {
    "text": "document with guidance do this don't do this that's that's the recommended approach the dealer they were punting on",
    "start": "2650300",
    "end": "2657960"
  },
  {
    "text": "that for quite a while because it's it's a complicated topic but now finally just a couple of months ago the work has",
    "start": "2657960",
    "end": "2664109"
  },
  {
    "text": "started on a war for browser-based apps and you can track the status here they're currently on this on the second",
    "start": "2664109",
    "end": "2669810"
  },
  {
    "text": "of draft that's that's good okay so",
    "start": "2669810",
    "end": "2675349"
  },
  {
    "start": "2674000",
    "end": "2674000"
  },
  {
    "text": "browser-based applications historically had an number of issues you know like back in the days people used cookies with to",
    "start": "2675349",
    "end": "2681900"
  },
  {
    "text": "secure their HX calls this had cross-site request forgery problems you",
    "start": "2681900",
    "end": "2687990"
  },
  {
    "text": "can mitigate against cross-site request forgery attacks but that requires extra work you have to implement basically",
    "start": "2687990",
    "end": "2694290"
  },
  {
    "text": "ante forgery some kind of an D forgery measures yeah and in my my years of code",
    "start": "2694290",
    "end": "2702510"
  },
  {
    "text": "reviews I often have seen that people just didn't do it okay so potentially cross-site request",
    "start": "2702510",
    "end": "2708240"
  },
  {
    "text": "forgery so with that background do of or the IETF thought let's improve their",
    "start": "2708240",
    "end": "2715560"
  },
  {
    "text": "situation with OAuth okay so when we when we can create a profile for Olaf",
    "start": "2715560",
    "end": "2721950"
  },
  {
    "text": "that works in the browser we don't need cookies anymore and can use access tokens instead to secure our",
    "start": "2721950",
    "end": "2727950"
  },
  {
    "text": "api's okay and as you can see in 2011 it wasn't clear to everyone on the ITF why",
    "start": "2727950",
    "end": "2735090"
  },
  {
    "text": "you would ever write an application in JavaScript now that's a screenshot from",
    "start": "2735090",
    "end": "2740130"
  },
  {
    "text": "the original mail archives here part you know the work started in 2012 they",
    "start": "2740130",
    "end": "2748140"
  },
  {
    "text": "release this thing called the implicit flow you might have heard of the idea and imagine it's 2012 so they had to",
    "start": "2748140",
    "end": "2756960"
  },
  {
    "text": "create something that worked in browsers in 2012 ma'am and the code flow that was",
    "start": "2756960",
    "end": "2764100"
  },
  {
    "text": "already existing you know they could have used that but that requires a checks calls to the back-channel",
    "start": "2764100",
    "end": "2769890"
  },
  {
    "text": "communication right and in 2012 there was no legal way of doing cross-domain Ajax calls course didn't exist yet okay",
    "start": "2769890",
    "end": "2778560"
  },
  {
    "text": "so they came up with this implicit flow basically where they transport the",
    "start": "2778560",
    "end": "2785670"
  },
  {
    "start": "2782000",
    "end": "2782000"
  },
  {
    "text": "tokens over the URL okay and you know no one was really happy with that but that",
    "start": "2785670",
    "end": "2792210"
  },
  {
    "text": "was at least there was some existing guidance out there that there were threat models around it so if you read",
    "start": "2792210",
    "end": "2797490"
  },
  {
    "text": "the threat model you knew okay these are the issues we have to mitigate but essentially people didn't like the fact",
    "start": "2797490",
    "end": "2803070"
  },
  {
    "text": "that these tokens are on the URL for example there were implementations Falls that led to token leakage in the past",
    "start": "2803070",
    "end": "2810290"
  },
  {
    "text": "they end up in the browser history right because it's a URL again you could work around that and",
    "start": "2810290",
    "end": "2816990"
  },
  {
    "text": "someone's a fourth part all in all the implicit flow was never like the the",
    "start": "2816990",
    "end": "2824130"
  },
  {
    "text": "most favorite flow you know of okay just recently the discussion has started",
    "start": "2824130",
    "end": "2831420"
  },
  {
    "start": "2829000",
    "end": "2829000"
  },
  {
    "text": "again and the decision has been made and maybe you have heard about that or maybe not",
    "start": "2831420",
    "end": "2836960"
  },
  {
    "text": "and and you should know about it is now in 2019 cross-domain Ajax calls are a",
    "start": "2836960",
    "end": "2843810"
  },
  {
    "text": "solved problem right we have cause it's working so it's time to deprecate the implicit",
    "start": "2843810",
    "end": "2851520"
  },
  {
    "text": "flow okay there was a very very populist",
    "start": "2851520",
    "end": "2856770"
  },
  {
    "text": "ik blog post recently where somebody described it as every application using",
    "start": "2856770",
    "end": "2863760"
  },
  {
    "text": "inviscid flow is not vulnerable to some sort of attack that's not true okay so if you have an",
    "start": "2863760",
    "end": "2868950"
  },
  {
    "text": "application out there that uses implicit flow and you have used all the best practices and the mitigation techniques",
    "start": "2868950",
    "end": "2874230"
  },
  {
    "text": "and everything you don't have a new problem you just have the existing one okay if you are so in other words you",
    "start": "2874230",
    "end": "2883560"
  },
  {
    "text": "are not insecure then for four weeks ago okay but if you write a new application",
    "start": "2883560",
    "end": "2892050"
  },
  {
    "text": "today then I wouldn't recommend that you used the DD implicit flow again you",
    "start": "2892050",
    "end": "2898770"
  },
  {
    "text": "would say let's go to code flow with pixee instead so using the same the exact same flow that native is using and",
    "start": "2898770",
    "end": "2906300"
  },
  {
    "text": "the exact same flow that you would probably also use use on the server side if you have an implementation of that that is that supports it and the the",
    "start": "2906300",
    "end": "2914340"
  },
  {
    "text": "side effect of that is you know one of the things that my customers are struggling the most is when they read",
    "start": "2914340",
    "end": "2920700"
  },
  {
    "text": "all the specs they did they see oh there were five flows defined you know of which one do are used for which",
    "start": "2920700",
    "end": "2926730"
  },
  {
    "text": "application type am and with this new guidance it basically goes down to two flows client credential flow for server",
    "start": "2926730",
    "end": "2933869"
  },
  {
    "text": "to server and code flow with pixie for all the other application types okay and",
    "start": "2933869",
    "end": "2939930"
  },
  {
    "text": "I think that is actually helpful okay but the problem doesn't end with",
    "start": "2939930",
    "end": "2948730"
  },
  {
    "start": "2944000",
    "end": "2944000"
  },
  {
    "text": "the overflow right getting the token into the browser is one thing now we",
    "start": "2948730",
    "end": "2954730"
  },
  {
    "text": "have to store that token in the browser as well and also you know manage it yeah and that's where actually the real",
    "start": "2954730",
    "end": "2960820"
  },
  {
    "text": "trouble starts yeah so that there is no security to storage mechanism in a",
    "start": "2960820",
    "end": "2967630"
  },
  {
    "text": "browser wherever you store it if you have a cross-site scripting attack in your client application there's a",
    "start": "2967630",
    "end": "2973960"
  },
  {
    "text": "potential that the attacker can exfiltrate those tokens from your session storage your local storage your",
    "start": "2973960",
    "end": "2979090"
  },
  {
    "text": "index TP wherever you store it right and that means now that you know you",
    "start": "2979090",
    "end": "2984369"
  },
  {
    "text": "potentially have high powered tokens in your browser and an unknown cross-site",
    "start": "2984369",
    "end": "2991420"
  },
  {
    "text": "scripting vulnerability that you're not aware of allows an attacker to steal them okay you might say isn't cross-site",
    "start": "2991420",
    "end": "3001170"
  },
  {
    "text": "scripting a solved problem it's not okay many many frameworks have still",
    "start": "3001170",
    "end": "3008010"
  },
  {
    "text": "cross-site scripting problems there is actually a thing called",
    "start": "3008010",
    "end": "3013050"
  },
  {
    "text": "content security policy CSP which is specifically made to to mitigate against",
    "start": "3013050",
    "end": "3018750"
  },
  {
    "text": "cross-site scripting so how many of you in the audience actually heard of CSP before and how many are using it okay a",
    "start": "3018750",
    "end": "3026550"
  },
  {
    "text": "couple of you that's good CSP is the right way to go I fought at least until",
    "start": "3026550",
    "end": "3033720"
  },
  {
    "text": "I had a discussion with some people from the / team recently and they pointed me",
    "start": "3033720",
    "end": "3039600"
  },
  {
    "text": "to this video so whoever is using CSP please watch that video actually everybody watch that video okay it's a",
    "start": "3039600",
    "end": "3047640"
  },
  {
    "text": "video from from some researchers from Google right and they spied out the internet I think Google has the",
    "start": "3047640",
    "end": "3052830"
  },
  {
    "text": "technology for doing the idea and they found in total 1.6 million websites with",
    "start": "3052830",
    "end": "3059940"
  },
  {
    "text": "content security policy enabled which is not a lot right and from these 1.6",
    "start": "3059940",
    "end": "3065670"
  },
  {
    "text": "million they were able to bypass 90% of them ok and what's the bottom line here",
    "start": "3065670",
    "end": "3073920"
  },
  {
    "text": "C is please to complicate it ok for all of you that have used it you probably know what I'm talking about",
    "start": "3073920",
    "end": "3080100"
  },
  {
    "text": "you have to know a lot of things about CSP to apply it correctly they found",
    "start": "3080100",
    "end": "3085860"
  },
  {
    "text": "many website for example that load their let's say jQuery or whatever from some CDN for the white list that the CDN as a",
    "start": "3085860",
    "end": "3093480"
  },
  {
    "text": "legal script sauce for example what these guys found out is if this CDN has",
    "start": "3093480",
    "end": "3099210"
  },
  {
    "text": "a single JSONP endpoint enabled then you can abuse that white listed endpoint to",
    "start": "3099210",
    "end": "3105000"
  },
  {
    "text": "smuggle in script from a third party into your application and then do a cross-site scripting again yes I did",
    "start": "3105000",
    "end": "3110520"
  },
  {
    "text": "there are there are some subtleties here this is a really good video it not only",
    "start": "3110520",
    "end": "3115560"
  },
  {
    "text": "shows you how to bypass it it also gives you tips how to harden your CSP as well and in my opinion CSP is still the one",
    "start": "3115560",
    "end": "3121710"
  },
  {
    "text": "the one thing you should definitely definitely learn about how many of you",
    "start": "3121710",
    "end": "3130290"
  },
  {
    "text": "have heard of to HP token binding a couple of you so that was a very very promising technology that allowed you to",
    "start": "3130290",
    "end": "3136350"
  },
  {
    "text": "bind tokens to a browser okay more",
    "start": "3136350",
    "end": "3142110"
  },
  {
    "text": "technically to a TLS connection but it the end result would have been if",
    "start": "3142110",
    "end": "3147660"
  },
  {
    "text": "somebody can actually steal a token yrx SS from your browser he can't use it because the token is",
    "start": "3147660",
    "end": "3154380"
  },
  {
    "text": "worthless outside that specific browser okay because there is some extra crypto",
    "start": "3154380",
    "end": "3159420"
  },
  {
    "text": "stuff that you don't have access to from javascript okay guess what happened",
    "start": "3159420",
    "end": "3165020"
  },
  {
    "text": "Google after token binding has been ratified as an official RC goobie",
    "start": "3165020",
    "end": "3171210"
  },
  {
    "text": "decided to not implement it and that's",
    "start": "3171210",
    "end": "3176460"
  },
  {
    "text": "pretty much end of story right I mean what what such a such a standard is so",
    "start": "3176460",
    "end": "3182040"
  },
  {
    "text": "so useful but is so useless if not every browser vendor implements it right",
    "start": "3182040",
    "end": "3187200"
  },
  {
    "text": "because now certainly depends on the browser if you are secure or not and chrome has kind of like a bit of a market share yeah so long story short C",
    "start": "3187200",
    "end": "3198630"
  },
  {
    "text": "XSS is still the public enemy number one okay so we are working on honor on a",
    "start": "3198630",
    "end": "3208830"
  },
  {
    "start": "3205000",
    "end": "3205000"
  },
  {
    "text": "JavaScript client library we have switched after all of that guidance has been updated we have",
    "start": "3208830",
    "end": "3215430"
  },
  {
    "text": "switched to support code flow as well so if you're using our library which is called a YDC client chess",
    "start": "3215430",
    "end": "3221400"
  },
  {
    "text": "all you have to do is change the response type from impaired from ID token token to code and that's it the",
    "start": "3221400",
    "end": "3228780"
  },
  {
    "text": "rest of your application can stay the same okay if you have done your own implementation if you have to you know",
    "start": "3228780",
    "end": "3234210"
  },
  {
    "text": "figure out what to do the last thing I want to make you aware of if you are not",
    "start": "3234210",
    "end": "3239850"
  },
  {
    "start": "3236000",
    "end": "3236000"
  },
  {
    "text": "yet it's called same side cookies yeah that's a new a rather newish addition to",
    "start": "3239850",
    "end": "3247950"
  },
  {
    "text": "the w3c specs and you know the the reason why we went to tokens in the",
    "start": "3247950",
    "end": "3254460"
  },
  {
    "text": "first place was cross-site request forgery right and now tokens have the XSS problem",
    "start": "3254460",
    "end": "3260640"
  },
  {
    "text": "ma'am so what what what what would be really",
    "start": "3260640",
    "end": "3266160"
  },
  {
    "text": "helpful is if we could get first rid of cross-site request forgery yeah that was",
    "start": "3266160",
    "end": "3271980"
  },
  {
    "text": "historically not easy but now there's this thing called same side cookies and the idea behind same side cookies is that you can basically when you issue a",
    "start": "3271980",
    "end": "3279060"
  },
  {
    "text": "cookie you can instruct the browser to only send that cookie back if you are on",
    "start": "3279060",
    "end": "3284460"
  },
  {
    "text": "a page that came from the origin that issued the cookie in the first place okay and you wonder why hasn't this been",
    "start": "3284460",
    "end": "3292680"
  },
  {
    "text": "done five years ago or even even even earlier okay so basically same side",
    "start": "3292680",
    "end": "3301140"
  },
  {
    "text": "cookies can prevent all cross-origin usage of cookies okay and that's the",
    "start": "3301140",
    "end": "3308340"
  },
  {
    "text": "thing that brought us to tokens in the first place so you could actually much",
    "start": "3308340",
    "end": "3313470"
  },
  {
    "text": "you could add additional hardening on your applications by turning on the same side flags as well okay yeah you have to",
    "start": "3313470",
    "end": "3320160"
  },
  {
    "text": "be careful there were two settings one is called strict and one is called Lex strict probably will pray most of",
    "start": "3320160",
    "end": "3326730"
  },
  {
    "text": "applications if you haven't designed for it because it's very well strict now Lex means the browser will prevent all sorts",
    "start": "3326730",
    "end": "3334290"
  },
  {
    "text": "of posting cookies cross domain which is the main problem R'lyeh doing post Serket is not the main problem here as",
    "start": "3334290",
    "end": "3341850"
  },
  {
    "text": "you can see it is actually really well supported already--as by all of the current big",
    "start": "3341850",
    "end": "3350220"
  },
  {
    "text": "browsers okay my only concern is obviously that it's only on the latest",
    "start": "3350220",
    "end": "3355710"
  },
  {
    "text": "versions so far yeah so for example you see here iOS Safari if you go like one",
    "start": "3355710",
    "end": "3362220"
  },
  {
    "text": "one one version back to eleven they don't support it same for the Safari on Mac OS but you",
    "start": "3362220",
    "end": "3368520"
  },
  {
    "text": "know edge and Chrome and Firefox and so on they support that for quite a while now No so I can't give you unfortunately I",
    "start": "3368520",
    "end": "3378720"
  },
  {
    "text": "can't give you the one true solution to your spa problem well actually I can fix",
    "start": "3378720",
    "end": "3385920"
  },
  {
    "text": "cross-site scripting right because that's the root of all evil here ma'am",
    "start": "3385920",
    "end": "3391400"
  },
  {
    "text": "some of my customers said like this is all madness yeah we throw more and more",
    "start": "3391400",
    "end": "3396510"
  },
  {
    "start": "3392000",
    "end": "3392000"
  },
  {
    "text": "JavaScript at the thing and more and more JavaScript and more and more and we still don't solve the xs/s problem so",
    "start": "3396510",
    "end": "3402630"
  },
  {
    "text": "they came up with this architecture here which some people call the PFF architecture yeah back-end for front-end",
    "start": "3402630",
    "end": "3408030"
  },
  {
    "text": "and the idea is that you actually store all your tokens on the server so you don't even store them in the browser",
    "start": "3408030",
    "end": "3413840"
  },
  {
    "text": "okay and whenever you want to call an API the front-end basically uses a same",
    "start": "3413840",
    "end": "3419040"
  },
  {
    "text": "side cookie or maybe an T forgery to call the server then the server attaches",
    "start": "3419040",
    "end": "3424560"
  },
  {
    "text": "the access token and makes a server-to-server call in the backend to talk to the actual API okay",
    "start": "3424560",
    "end": "3431840"
  },
  {
    "text": "you stepped the silver bullet what do you think no it isn't right I mean still",
    "start": "3431840",
    "end": "3439800"
  },
  {
    "text": "if if you have a cross-site scripting vulnerability here then somebody can make the client call the BFF and the BFF",
    "start": "3439800",
    "end": "3445740"
  },
  {
    "text": "calls the back-end API now it's just a different threat model I think yeah some",
    "start": "3445740",
    "end": "3451740"
  },
  {
    "text": "people might be more comfortable with doing stuff server-side some people might be more comfortable doing stuff in",
    "start": "3451740",
    "end": "3456980"
  },
  {
    "text": "on the you know inclined side but",
    "start": "3456980",
    "end": "3462230"
  },
  {
    "text": "there's still no and no excuse for for not fixing your your cross-site scripting problems them so yes that's",
    "start": "3462230",
    "end": "3470190"
  },
  {
    "text": "the situation right now do we have time yes three minutes are",
    "start": "3470190",
    "end": "3478230"
  },
  {
    "start": "3473000",
    "end": "3473000"
  },
  {
    "text": "there any questions on that it's a lot of material and I had to run through that quite quickly because it's a lot of material but I hope you have an overview",
    "start": "3478230",
    "end": "3485580"
  },
  {
    "text": "now and this is a good list of further reading if you want to learn more about you know the specific type of client",
    "start": "3485580",
    "end": "3492960"
  },
  {
    "text": "that you have to write yes so the",
    "start": "3492960",
    "end": "3515280"
  },
  {
    "text": "question is so I mean so the question is",
    "start": "3515280",
    "end": "3524340"
  },
  {
    "text": "I don't even know what the question is but so that the answer is officially the",
    "start": "3524340",
    "end": "3531590"
  },
  {
    "text": "IETF is is planning to deprecate the implicit flow okay",
    "start": "3531590",
    "end": "3539150"
  },
  {
    "text": "that is in its very early stages and I think some lot of the details have to be",
    "start": "3539150",
    "end": "3544740"
  },
  {
    "text": "figured out yet what are the alternatives okay but the immediate alternative is use code plus pick C it",
    "start": "3544740",
    "end": "3552960"
  },
  {
    "text": "is actually more secure is a wrong word here but it's nicer in the sense of that",
    "start": "3552960",
    "end": "3558720"
  },
  {
    "text": "you can hide your tokens better from the front-end part as you just learned to be",
    "start": "3558720",
    "end": "3563760"
  },
  {
    "text": "honest in my opinion that the way you be you you bring their token in to the",
    "start": "3563760",
    "end": "3569070"
  },
  {
    "text": "front end yes that's one part of the story but I think the token storage problem is there much much more interesting one no I don't know about it",
    "start": "3569070",
    "end": "3577170"
  },
  {
    "text": "microsoft Gardens to be honest em but",
    "start": "3577170",
    "end": "3580609"
  },
  {
    "text": "yep no yes so the question is to win do",
    "start": "3586140",
    "end": "3592300"
  },
  {
    "text": "we need a client secret where public line no you never needed it right and that doesn't change anything here public",
    "start": "3592300",
    "end": "3598990"
  },
  {
    "text": "lines don't need client secrets because they are not secret I mean especially in JavaScript where would you put them",
    "start": "3598990",
    "end": "3605230"
  },
  {
    "text": "right and pixie is specifically designed to support public lines any other",
    "start": "3605230",
    "end": "3614650"
  },
  {
    "text": "question yes yes so yeah so you're",
    "start": "3614650",
    "end": "3632830"
  },
  {
    "text": "saying with pixie we also need crypto you're right but compared to crypto you need to",
    "start": "3632830",
    "end": "3639340"
  },
  {
    "text": "generate a random number in a hash - things like ours a signature validation and these things yeah yes and actually",
    "start": "3639340",
    "end": "3648790"
  },
  {
    "text": "there's another thing I haven't mentioned yet they're the w3c has this",
    "start": "3648790",
    "end": "3653830"
  },
  {
    "text": "thing called web crypto that was in the works for a long time but and the idea was to basically bake in cryptographic primitives into browsers themselves so",
    "start": "3653830",
    "end": "3661330"
  },
  {
    "text": "you don't have to use these weird JavaScript implementations of sha-256 anymore so you know I think I think",
    "start": "3661330",
    "end": "3670650"
  },
  {
    "text": "telling the client to do a simple hash is it's okay knowing how much crypto is",
    "start": "3670650",
    "end": "3679540"
  },
  {
    "text": "involved in a full hybrid flow implementation it's much easier okay but",
    "start": "3679540",
    "end": "3687100"
  },
  {
    "text": "yeah but the main the main thing that people really like about it is that it's actually just serve are taking care of",
    "start": "3687100",
    "end": "3692560"
  },
  {
    "text": "that and the client can make mistakes ma'am okay any other question good then thanks",
    "start": "3692560",
    "end": "3702100"
  },
  {
    "text": "for your time and enjoy the rest of the day thank you [Applause]",
    "start": "3702100",
    "end": "3710100"
  }
]