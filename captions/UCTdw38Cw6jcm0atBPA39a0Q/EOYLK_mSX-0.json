[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "and thank you for coming to my talk um thankfully you know after lunch when everybody's a little bit tired we're",
    "start": "8559",
    "end": "14639"
  },
  {
    "text": "gonna have like a really light topic talking about binary exploitation um",
    "start": "14639",
    "end": "21279"
  },
  {
    "text": "if you're if you're going to fall asleep like go to the back so i don't see you no just kidding um",
    "start": "22080",
    "end": "28560"
  },
  {
    "start": "28000",
    "end": "65000"
  },
  {
    "text": "so uh my talk this this is actually the first slide i made for my talk living in the",
    "start": "28560",
    "end": "35120"
  },
  {
    "text": "future um because we like to think we are living in the future like tech has come so far",
    "start": "35120",
    "end": "41600"
  },
  {
    "text": "we are you know things are so different and only yesterday i was talking to someone",
    "start": "41600",
    "end": "46800"
  },
  {
    "text": "and they said actually when you think about it like the stuff that we have now is basically the stuff we had 20 years",
    "start": "46800",
    "end": "53280"
  },
  {
    "text": "ago it just works now uh but but this talk is a little bit",
    "start": "53280",
    "end": "60079"
  },
  {
    "text": "about how this living in the future basically is sometimes just reliving the past",
    "start": "60079",
    "end": "66400"
  },
  {
    "start": "65000",
    "end": "138000"
  },
  {
    "text": "uh so i'm going to have uh this kind of uh split between systems programming which",
    "start": "66400",
    "end": "73280"
  },
  {
    "text": "is where i come from uh i do uh c plus plus programming uh sometimes do c",
    "start": "73280",
    "end": "78320"
  },
  {
    "text": "programming uh and binary exploitation which has sort of been uh",
    "start": "78320",
    "end": "83840"
  },
  {
    "text": "something i've been loving to play with for the past few years and and how these two disciplines have a",
    "start": "83840",
    "end": "90960"
  },
  {
    "text": "very distinct culture and and distinct communities that often don't overlap much",
    "start": "90960",
    "end": "96799"
  },
  {
    "text": "and therefore have uh their own lore and their own progression and what they learn and the tooling that they use",
    "start": "96799",
    "end": "103600"
  },
  {
    "text": "over time uh so i'm going to kind of of",
    "start": "103600",
    "end": "108640"
  },
  {
    "text": "i've envisioned that with these timelines so so i'm going to start at 2000. it was a randomly chosen number i",
    "start": "108640",
    "end": "113920"
  },
  {
    "text": "could have chosen something earlier and we're gonna bring it up until today and i'm going to show this is how i'm",
    "start": "113920",
    "end": "119920"
  },
  {
    "text": "going to try to illustrate the the distance in time um so for the boomers in the house uh 2",
    "start": "119920",
    "end": "127360"
  },
  {
    "text": "000 that was y2k um for the zoomers in the house taylor swift was 11 at that time",
    "start": "127360",
    "end": "135200"
  },
  {
    "text": "which is scary for all of us um okay so the the talk is called classic",
    "start": "135200",
    "end": "140879"
  },
  {
    "start": "138000",
    "end": "252000"
  },
  {
    "text": "vulnerabilities and uh i should introduce myself so my name is patricia also i'm a trainer and a consultant",
    "start": "140879",
    "end": "148000"
  },
  {
    "text": "i'm a c programmer i've been specializing in application security and then specifically in in",
    "start": "148000",
    "end": "154000"
  },
  {
    "text": "in c plus application security uh over the past few years uh i work for turtle",
    "start": "154000",
    "end": "160160"
  },
  {
    "text": "sec and a bunch of turtle psych people are here today so this is really awesome uh so this is a company that i helped uh",
    "start": "160160",
    "end": "167440"
  },
  {
    "text": "where i co-founded a few years ago and before that i worked at so my first real",
    "start": "167440",
    "end": "174480"
  },
  {
    "text": "job after university was at opera software working on the original opera browser back in 2005.",
    "start": "174480",
    "end": "180959"
  },
  {
    "text": "and then i was even a java consultant for a couple of years and uh and then i worked",
    "start": "180959",
    "end": "186080"
  },
  {
    "text": "at cisco making telepresence systems there and then i went back to making a browser and as someone reminded me uh",
    "start": "186080",
    "end": "193200"
  },
  {
    "text": "in the break i was also making browsers while i was at cisco so",
    "start": "193200",
    "end": "198720"
  },
  {
    "text": "um yes as i have a master's in computer science and my pronouns are cd",
    "start": "198720",
    "end": "205440"
  },
  {
    "text": "but what do i know about this topic like why why should i talk to you about it and i guess it's because of this",
    "start": "205440",
    "end": "211280"
  },
  {
    "text": "intersection of these two communities and i'm kind of on the middle of that so i i teach them classes in uh c plus plus",
    "start": "211280",
    "end": "218000"
  },
  {
    "text": "so i have this mod c plus plus fundamentals and intermediate uh but i also have a totally different class that",
    "start": "218000",
    "end": "223440"
  },
  {
    "text": "i teach which is called insecure c plus plus and in insecure people suppose i teach",
    "start": "223440",
    "end": "228959"
  },
  {
    "text": "uh teach c plus plus programmers basics of exploitation basically um and that's trying to bridge kind of",
    "start": "228959",
    "end": "236000"
  },
  {
    "text": "those two uh two communities it's a really fun class to teach",
    "start": "236000",
    "end": "241519"
  },
  {
    "text": "because i can get really advanced because these people already know c plus right so so there's so many things i",
    "start": "241519",
    "end": "247360"
  },
  {
    "text": "don't have to cover so i can actually cover a lot so it's a i've had a lot of fun with this",
    "start": "247360",
    "end": "253200"
  },
  {
    "start": "252000",
    "end": "315000"
  },
  {
    "text": "but let's go back in time uh so back to 2000. so",
    "start": "253200",
    "end": "258799"
  },
  {
    "text": "i'm sure everyone who was like sort of a semi-adult around 2000 know sort of where they were like new year's eve",
    "start": "258799",
    "end": "265280"
  },
  {
    "text": "2000. i was on a beach in costa rica at the time uh but what i think of when i think",
    "start": "265280",
    "end": "271120"
  },
  {
    "text": "more of this period of my life is that over here that's when i finish my",
    "start": "271120",
    "end": "276960"
  },
  {
    "text": "bachelor's degree it will help if i show you the graph it was there that that's when i finished",
    "start": "276960",
    "end": "283280"
  },
  {
    "text": "my bachelor's degree for people who don't like recognize this graph i can i can help you that was peak.com",
    "start": "283280",
    "end": "291199"
  },
  {
    "text": "that was when like if you knew one tag in html you could get hired",
    "start": "291199",
    "end": "296960"
  },
  {
    "text": "and uh it went literally downhill from there",
    "start": "296960",
    "end": "302160"
  },
  {
    "text": "and so when i and and that's unfortunately also when i started my bachelor's degree so so by the time i finished my bachelor's",
    "start": "302160",
    "end": "308320"
  },
  {
    "text": "degree it was absolutely impossible to get a job and so i got a master's degree",
    "start": "308320",
    "end": "313759"
  },
  {
    "text": "um but for the rest of you you might remember it as uh well okay i'm going to",
    "start": "314720",
    "end": "320400"
  },
  {
    "start": "315000",
    "end": "384000"
  },
  {
    "text": "remind 2000 was 22 years ago it's scary um but it was also the year that say my",
    "start": "320400",
    "end": "326320"
  },
  {
    "text": "name by destiny's child was on the charts and and nsync had bye bye bye and",
    "start": "326320",
    "end": "331680"
  },
  {
    "text": "for for i guess we'll have to go for the millennials in the house this was before beyonce and justin timberlake did their",
    "start": "331680",
    "end": "339120"
  },
  {
    "text": "solo careers so yeah i was listening to to the nsync",
    "start": "339120",
    "end": "344479"
  },
  {
    "text": "thing yesterday and dancing in the office um anyway and i said that on youtube now so it's over",
    "start": "344479",
    "end": "352720"
  },
  {
    "text": "um so but in july of 2000 another thing happened and and that's",
    "start": "352720",
    "end": "358319"
  },
  {
    "text": "sort of why i want to bring home how long time ago it was so in july 2000 solar designer also",
    "start": "358319",
    "end": "364240"
  },
  {
    "text": "known as alexander pesciac published what was was named and has been referred to",
    "start": "364240",
    "end": "369759"
  },
  {
    "text": "later also as as the first generic heap exploitation technique and uh so",
    "start": "369759",
    "end": "376160"
  },
  {
    "text": "we're going to spend uh most of this presentation probably on you understanding this technique",
    "start": "376160",
    "end": "383840"
  },
  {
    "text": "so he was he was targeting uh maluk implementations and and in his",
    "start": "383840",
    "end": "391280"
  },
  {
    "text": "description he was talking specifically about this douglas implementation of maluk but this went",
    "start": "391280",
    "end": "397759"
  },
  {
    "text": "back to to basically a good chunk of all of the malek implementations had similar",
    "start": "397759",
    "end": "403280"
  },
  {
    "text": "vulnerabilities and and and the reason for that and i i've thought about that a lot because i",
    "start": "403280",
    "end": "408560"
  },
  {
    "text": "teach this in my training um and i think the reason for that is that the the problem of malloc is such a",
    "start": "408560",
    "end": "414880"
  },
  {
    "text": "small problem uh and and the the constraints are are very very well known that people end up",
    "start": "414880",
    "end": "421360"
  },
  {
    "text": "having very similar implementations um so so the idea that that solar designer",
    "start": "421360",
    "end": "428160"
  },
  {
    "text": "had was if we could make some kind of portable exploit like if we were going",
    "start": "428160",
    "end": "434080"
  },
  {
    "text": "against the allocator the the system allocator uh then we could have some",
    "start": "434080",
    "end": "439919"
  },
  {
    "text": "kind of exploit that would work against many different applications and so so the the the time and effort we have to",
    "start": "439919",
    "end": "445759"
  },
  {
    "text": "put into it we could amoretize that over many different exploits",
    "start": "445759",
    "end": "452720"
  },
  {
    "text": "i mean there's economics and everything right um so uh so we're going to talk about that and",
    "start": "453199",
    "end": "458960"
  },
  {
    "start": "457000",
    "end": "723000"
  },
  {
    "text": "that it's often referred to as an unlike vulnerability or an unlinked exploit",
    "start": "458960",
    "end": "465199"
  },
  {
    "text": "and so i i'm going to do this through so the example that we're going to go through in detail is uh using uh an open",
    "start": "465199",
    "end": "472639"
  },
  {
    "text": "source application called uh chocolate doom so for uh well",
    "start": "472639",
    "end": "478960"
  },
  {
    "text": "i i i don't think i don't don't think the millennials played a lot of doom so maybe yeah some millennials played doom",
    "start": "478960",
    "end": "485520"
  },
  {
    "text": "right yes okay so so doom was it was a game released in",
    "start": "485520",
    "end": "491120"
  },
  {
    "text": "the 90s as this is the first version of it and it was very popular it was it's probably the the game that made like the",
    "start": "491120",
    "end": "498400"
  },
  {
    "text": "first person shooter kind of thing be a thing it had fantastic graphics as you can see",
    "start": "498400",
    "end": "504080"
  },
  {
    "text": "um it actually has like it has like a fake 3d kind of uh world it's not actually 3d",
    "start": "504080",
    "end": "511039"
  },
  {
    "text": "it's it's a really like interesting game it was written in c and it was it was open sourced uh in in 2007 or something",
    "start": "511039",
    "end": "519200"
  },
  {
    "text": "i think uh so the the code uh the linux port of it was uh was open source then",
    "start": "519200",
    "end": "524640"
  },
  {
    "text": "uh a lot of source ports of it has happened that have ported it to to various",
    "start": "524640",
    "end": "530080"
  },
  {
    "text": "different platforms and also to various different graphical frameworks windowing frameworks and",
    "start": "530080",
    "end": "535600"
  },
  {
    "text": "things like that one of the most popular ones is chocolate doom and so",
    "start": "535600",
    "end": "541200"
  },
  {
    "text": "i got coven not now but i did in january and then i got really tired and i was",
    "start": "541200",
    "end": "547440"
  },
  {
    "text": "like sitting in bed and i couldn't do anything but i was also like really really bored and so what i did was i took a port that had been done by um",
    "start": "547440",
    "end": "555760"
  },
  {
    "text": "a guy in the simplest puzzle community called jason turner and he made a c plus plus port of this because this is a c",
    "start": "555760",
    "end": "561440"
  },
  {
    "text": "application and so i spent you know my entire covet period just finishing that",
    "start": "561440",
    "end": "568000"
  },
  {
    "text": "so so i i had to use it for something so you're going to get it here um but but as a part of making this",
    "start": "568560",
    "end": "574800"
  },
  {
    "text": "presentation i wanted to go and see if this uh this application also had this kind of vulnerability and luckily for me",
    "start": "574800",
    "end": "581279"
  },
  {
    "text": "it did um so we're going to look at said malloc so",
    "start": "581279",
    "end": "586560"
  },
  {
    "text": "this is this is a as a c api that's built into doom it has two different",
    "start": "586560",
    "end": "592320"
  },
  {
    "text": "implementations but it basically the idea is that it's going to allocate memory for you uh but it also has some kind of metadata",
    "start": "592320",
    "end": "599760"
  },
  {
    "text": "uh that that it it stores we'll have a little bit look at what that means but",
    "start": "599760",
    "end": "605600"
  },
  {
    "text": "not too much we don't care too much about the metadata itself we just care that it's a linked list",
    "start": "605600",
    "end": "610880"
  },
  {
    "text": "um so if you're going to to call it so so here we have a typical call as what we call",
    "start": "610880",
    "end": "618560"
  },
  {
    "text": "said malloc we call it like we would do malloc normally we cast the return value to the pointer that it's supposed to",
    "start": "618560",
    "end": "625040"
  },
  {
    "text": "have it's going to return like a void star or something uh it's going to return a void star",
    "start": "625040",
    "end": "630160"
  },
  {
    "text": "and and it has some kind of like extra parameters here that's like tag and user",
    "start": "630160",
    "end": "635279"
  },
  {
    "text": "uh but we don't care too much about that so so this first section here is the the thing we're going to return from malloc",
    "start": "635279",
    "end": "641440"
  },
  {
    "text": "right so this is this void star pointer it's going to be the size of the thing that we're going to allocate",
    "start": "641440",
    "end": "647600"
  },
  {
    "text": "but in addition to that zed malek will also allocate space for this mem block so this is the metadata",
    "start": "647600",
    "end": "653839"
  },
  {
    "text": "section that comes before the the the section that has the data that we're going to give the user pointer to and and this kind of",
    "start": "653839",
    "end": "661120"
  },
  {
    "text": "structure is is exactly the kind of structure that that solar designer went",
    "start": "661120",
    "end": "666720"
  },
  {
    "text": "after in in this kind of technique um",
    "start": "666720",
    "end": "671920"
  },
  {
    "text": "so if you have a look at a member t so so this is going to be in the implementation for said mallox which is",
    "start": "671920",
    "end": "678079"
  },
  {
    "text": "called zed native for anyone who wants to follow along at home i'm using my file path but it works for chocolate",
    "start": "678079",
    "end": "684240"
  },
  {
    "text": "doom so then it will be znative.c um so this is the memory uh that we're",
    "start": "684240",
    "end": "691040"
  },
  {
    "text": "going to allocate and this is the men block t that comes before that and",
    "start": "691040",
    "end": "696240"
  },
  {
    "text": "and so here we have uh the the structure so it has like some ins uh uh",
    "start": "696240",
    "end": "702560"
  },
  {
    "text": "void star star and then this previous and next pointers uh so this was the tag we saw on the",
    "start": "702560",
    "end": "707920"
  },
  {
    "text": "previous slide and this is the user that we saw on the previous slide and we don't care about either of them really but you know now you can see where they",
    "start": "707920",
    "end": "713920"
  },
  {
    "text": "end up they end up in this structure what we're going to care about is this previous and next pointers here and",
    "start": "713920",
    "end": "720399"
  },
  {
    "text": "that's going to form a doubly linked list um so this is stored in the heap",
    "start": "720399",
    "end": "727040"
  },
  {
    "start": "723000",
    "end": "781000"
  },
  {
    "text": "in in this kind of manner so these mem blocks are linked in the in this list",
    "start": "727040",
    "end": "732160"
  },
  {
    "text": "that is as linked to from a global everything is a global in this wonderful application in this global",
    "start": "732160",
    "end": "740000"
  },
  {
    "text": "global array called allocated blocks and so we have a linked list that it links like this uh a doubly linked list for people who",
    "start": "740000",
    "end": "747120"
  },
  {
    "text": "don't remember their computer science is a linked a list that has both the next and a previous pointer",
    "start": "747120",
    "end": "753360"
  },
  {
    "text": "but you'll see more of that so so the idea here is and and the most important thing to see here",
    "start": "753360",
    "end": "758959"
  },
  {
    "text": "is that can i point with this one do you think okay i'm going to point uh is that the memblock is right next to",
    "start": "758959",
    "end": "766079"
  },
  {
    "text": "the memory that was allocated that's like the important thing to notice here is the laser",
    "start": "766079",
    "end": "774160"
  },
  {
    "text": "oh a very small laser but you can see here and here yeah",
    "start": "774160",
    "end": "779360"
  },
  {
    "text": "okay so if we go here uh so we're going to look at at",
    "start": "779360",
    "end": "784480"
  },
  {
    "start": "781000",
    "end": "820000"
  },
  {
    "text": "exploiting the the free function which is called z-free um i think the z is for zone zone malloc i",
    "start": "784480",
    "end": "792720"
  },
  {
    "text": "think it's for uh so so the first thing that uh free does is try to get a pointer to the men",
    "start": "792720",
    "end": "798399"
  },
  {
    "text": "block t so it takes uh it takes the the pointer that was going to be freed so ptr",
    "start": "798399",
    "end": "804720"
  },
  {
    "text": "and then it it will subtract the size of the memblock t to get uh pointer to the member t if this",
    "start": "804720",
    "end": "811920"
  },
  {
    "text": "is not your programming language don't worry about it it's not really important the important thing here is that in the",
    "start": "811920",
    "end": "816959"
  },
  {
    "text": "middle here we're going to call zed remove block okay so this is said remove block um",
    "start": "816959",
    "end": "824880"
  },
  {
    "start": "820000",
    "end": "889000"
  },
  {
    "text": "and what we will see here is as these two operations so anyone who",
    "start": "824880",
    "end": "830079"
  },
  {
    "text": "has implemented a doubly linked list at some point which is probably uh a long time ago uh then this is how you do the",
    "start": "830079",
    "end": "837120"
  },
  {
    "text": "the typical unlinking right you say uh my previous is next",
    "start": "837120",
    "end": "842720"
  },
  {
    "text": "should be my next i'll show you there is a picture um anyway let's do the picture",
    "start": "842720",
    "end": "850240"
  },
  {
    "text": "so so here we have our block uh so so here we have we're gonna do the the line 8 first so so block next prev so that",
    "start": "850240",
    "end": "858880"
  },
  {
    "text": "will be the blocks next's prev which is this",
    "start": "858880",
    "end": "864160"
  },
  {
    "text": "this pointer over here we're going to set that to blocks prev",
    "start": "864160",
    "end": "869199"
  },
  {
    "text": "so that is basically just bypassing our block and then we're going to do the same thing with the other one",
    "start": "869199",
    "end": "876320"
  },
  {
    "text": "um and so that's how you do like a typical unlinking and this will be useful",
    "start": "876320",
    "end": "883120"
  },
  {
    "text": "if you get a really really bad whiteboard interview then you it's like okay this is review for you",
    "start": "883120",
    "end": "888800"
  },
  {
    "text": "um so so there's a there's a couple of",
    "start": "888800",
    "end": "893920"
  },
  {
    "start": "889000",
    "end": "1417000"
  },
  {
    "text": "insights to this uh but but the the basic underlying insight here is that if",
    "start": "893920",
    "end": "899040"
  },
  {
    "text": "you can control both sides of an allocation so both sides of an equal sign in the application",
    "start": "899040",
    "end": "905519"
  },
  {
    "text": "then you can create what is called a write what where primitive it means that if i can uh if i can",
    "start": "905519",
    "end": "912720"
  },
  {
    "text": "decide where uh the where we're going to store a value and i'm go and i can also decide",
    "start": "912720",
    "end": "918320"
  },
  {
    "text": "what to store there then i can basically write whatever i want wherever i want in memory",
    "start": "918320",
    "end": "923440"
  },
  {
    "text": "um we'll look more into that so if we look at the same code again",
    "start": "923440",
    "end": "929600"
  },
  {
    "text": "like condensed a little bit like we did before so if it can can control block",
    "start": "929600",
    "end": "935279"
  },
  {
    "text": "prev then we can control where the allocation happens uh adjuster for the offset of",
    "start": "935279",
    "end": "940480"
  },
  {
    "text": "next we'll look at that later but but i'll just like okay so the here we have the where uh and if we can if we can control",
    "start": "940480",
    "end": "947920"
  },
  {
    "text": "block.net or arrow next then we can control what to write there so that's the other side of of the equal",
    "start": "947920",
    "end": "955120"
  },
  {
    "text": "sign so so that is the basic uh idea and of course you've already seen that block",
    "start": "955120",
    "end": "961279"
  },
  {
    "text": "prev and block next are both next to each other in memory right next to the memory that was",
    "start": "961279",
    "end": "967199"
  },
  {
    "text": "allocated right and we also know that they are going to be used in this manner",
    "start": "967199",
    "end": "974160"
  },
  {
    "text": "when we free okay so so the idea here is we're going to do",
    "start": "974160",
    "end": "979440"
  },
  {
    "text": "a little bit of a little bit of a memory corruption um and and then when when when the block is",
    "start": "979440",
    "end": "986480"
  },
  {
    "text": "is freed it will do this assignment for us uh so this is is uh often referred to as",
    "start": "986480",
    "end": "993279"
  },
  {
    "text": "a right what wear primitive and uh you can in this case you can do it anywhere in the application memory",
    "start": "993279",
    "end": "1001279"
  },
  {
    "text": "uh and if you if this was in it was a it was a privilege process then",
    "start": "1001279",
    "end": "1008079"
  },
  {
    "text": "you could do it in kernel memory um okay so the peripheral concept here is",
    "start": "1008079",
    "end": "1014399"
  },
  {
    "text": "is very uh i'll go through it but basically the idea is that we're going to corrupt",
    "start": "1014399",
    "end": "1020399"
  },
  {
    "text": "the the pointers and then we're going to free the memory and then we're going to show that by",
    "start": "1020399",
    "end": "1025918"
  },
  {
    "text": "freeing the memory uh we can execute our right what where primitive",
    "start": "1025919",
    "end": "1032159"
  },
  {
    "text": "okay so up here i i've i have three allocations here that's just to make sure we have a list",
    "start": "1032559",
    "end": "1039438"
  },
  {
    "text": "so i so so i i want like i want to have a next and the previous um so so it's the",
    "start": "1039439",
    "end": "1046160"
  },
  {
    "text": "middle one we're gonna go for so we've allocated it here uh here i'm doing the same as before",
    "start": "1046160",
    "end": "1051520"
  },
  {
    "text": "basically i'm just trying to get the pointer to the to the memblock t uh",
    "start": "1051520",
    "end": "1056799"
  },
  {
    "text": "and here i'm going to prepare where i want the right to go uh so so that's this where pointer",
    "start": "1056799",
    "end": "1063520"
  },
  {
    "text": "and then what i want to write there which is uh 42 42 42 42 and hex which is",
    "start": "1063520",
    "end": "1070559"
  },
  {
    "text": "what the cool hackers do and the fact that i said that means i am",
    "start": "1070559",
    "end": "1076000"
  },
  {
    "text": "not one of them um and and here i'm going to do the adjustment for for for for the distance",
    "start": "1076000",
    "end": "1082640"
  },
  {
    "text": "to next uh i'll i'll show you again later but basically the idea is that uh",
    "start": "1082640",
    "end": "1089039"
  },
  {
    "text": "when when next is is accessed uh it will add the distance to next from",
    "start": "1089039",
    "end": "1094960"
  },
  {
    "text": "the beginning of this member t and so here i'm just subtracting the same distance",
    "start": "1094960",
    "end": "1100559"
  },
  {
    "text": "so that when the add comes later it will be the actual pointer if you didn't understand that it's fine",
    "start": "1100559",
    "end": "1106559"
  },
  {
    "text": "but i will explain it again um so so on previous i'm going to write uh",
    "start": "1106559",
    "end": "1112880"
  },
  {
    "text": "where and on next i'm going to write what and then here's just a search is to",
    "start": "1112880",
    "end": "1119200"
  },
  {
    "text": "to see okay so right now where is an null pointer and then we're going to call free",
    "start": "1119200",
    "end": "1124559"
  },
  {
    "text": "and in free we're going to do this unlinking will happen and then afterwards where is no longer",
    "start": "1124559",
    "end": "1131520"
  },
  {
    "text": "null and and what where points to is this 42 42 42.",
    "start": "1131520",
    "end": "1136559"
  },
  {
    "text": "uh so so i um i found this and i didn't really know what to do",
    "start": "1136559",
    "end": "1142799"
  },
  {
    "text": "and because it felt like very silly i'm going to like report a vulnerability on a game that was like finished like i",
    "start": "1142799",
    "end": "1148559"
  },
  {
    "text": "don't know how long ago um but but i did i i reported it i submitted a pr and and they took it into",
    "start": "1148559",
    "end": "1156160"
  },
  {
    "text": "the chocolate dooms and i have like i have a commit on chocolate doom it's like wow",
    "start": "1156160",
    "end": "1161440"
  },
  {
    "text": "um but yes so where has been set to what um",
    "start": "1161440",
    "end": "1167840"
  },
  {
    "text": "but let's look at this a little bit uh more graphically for those who are inclined that way uh so so the previous",
    "start": "1167840",
    "end": "1175360"
  },
  {
    "text": "pointer block instead of pointing to what it should do which is blocks previous it points to uh",
    "start": "1175360",
    "end": "1182320"
  },
  {
    "text": "let's see this thing and here we have adjusted for next offset so we basically subtracted",
    "start": "1182320",
    "end": "1188240"
  },
  {
    "text": "the offset of next [Music] and that's no i actually have it on the",
    "start": "1188240",
    "end": "1193679"
  },
  {
    "text": "slide patricia yes um so give me a second i'll show you and",
    "start": "1193679",
    "end": "1198720"
  },
  {
    "text": "then we have where and then on the on the next pointer we have what and right down here i'll try to show you so so the",
    "start": "1198720",
    "end": "1206480"
  },
  {
    "text": "block uh arrow previous uh arrow next is actually",
    "start": "1206480",
    "end": "1212559"
  },
  {
    "text": "block arrow previous plus the offset of next all right so that's what i do here i",
    "start": "1212559",
    "end": "1218640"
  },
  {
    "text": "just adjust for it by subtracting the same amount because it's going to be added later",
    "start": "1218640",
    "end": "1224480"
  },
  {
    "text": "yeah so there's the traditional mitigation for this um and you will find it in most allocators or many allocators",
    "start": "1225520",
    "end": "1231120"
  },
  {
    "text": "today and it's it's very simple it's basically just checking that the pointers point to",
    "start": "1231120",
    "end": "1236559"
  },
  {
    "text": "what you think before you do something um and this was basically my patch as well",
    "start": "1236559",
    "end": "1242400"
  },
  {
    "text": "uh not exactly this but i had to fit in on the slide uh so so here we are checking this pointer",
    "start": "1242400",
    "end": "1248960"
  },
  {
    "text": "right so we're checking that block's previous is next is block and if it isn't we just exit",
    "start": "1248960",
    "end": "1256080"
  },
  {
    "text": "and then if it is then we can do the moving of the pointer and then the same thing here we're going",
    "start": "1256080",
    "end": "1262559"
  },
  {
    "text": "to check that blocks is next this previous um is block and if it isn't then we exit",
    "start": "1262559",
    "end": "1269440"
  },
  {
    "text": "but if it is then we're going to do the the wonderful moving on the pointer yeah",
    "start": "1269440",
    "end": "1274720"
  },
  {
    "text": "so this is the it's like this same check has been implemented like a ton of different places for this",
    "start": "1274720",
    "end": "1280320"
  },
  {
    "text": "exact same thing in many uh yeah um",
    "start": "1280320",
    "end": "1286159"
  },
  {
    "text": "so how would you exploit this in real life because what i showed you was a c program and you're like patricia yeah of course you can do like",
    "start": "1286159",
    "end": "1291760"
  },
  {
    "text": "you can do something or you can use malok and then do memory corruption and then do free",
    "start": "1291760",
    "end": "1297200"
  },
  {
    "text": "and it's not like super interesting and and usually what you would do instead you would have like some kind of hipaa",
    "start": "1297200",
    "end": "1302720"
  },
  {
    "text": "for overflow so if you had uh if you had an object next to this object in in the",
    "start": "1302720",
    "end": "1307760"
  },
  {
    "text": "heap then you would do a heap up for overflow and with that overflow overwrite these pointers and and",
    "start": "1307760",
    "end": "1313919"
  },
  {
    "text": "and then when that object is freed by the application at some point in the future then your rightwide wear primitive would",
    "start": "1313919",
    "end": "1320480"
  },
  {
    "text": "run and so how would that look like",
    "start": "1320480",
    "end": "1326080"
  },
  {
    "text": "so this is this is our object that to be free down here at the bottom and then we're going to have uh the",
    "start": "1326080",
    "end": "1332400"
  },
  {
    "text": "layout of this drop and block thing above here so this is uh",
    "start": "1332400",
    "end": "1338960"
  },
  {
    "text": "let's see okay give me a second here so this is for for a 64-bit platform so",
    "start": "1338960",
    "end": "1344559"
  },
  {
    "text": "that in a 64-bit platform where an int is a 32 is 32-bit because of course this is not",
    "start": "1344559",
    "end": "1350640"
  },
  {
    "text": "defined uh the size of int is like woohoo surprise",
    "start": "1350640",
    "end": "1355840"
  },
  {
    "text": "but but this is a normal normal platform and so so uh and then over here we have",
    "start": "1356080",
    "end": "1364080"
  },
  {
    "text": "on top of this we're going to have like the object that we're going to do the overflow so imagine that this is some kind of buffer that has a heap of",
    "start": "1364080",
    "end": "1370320"
  },
  {
    "text": "overflow vulnerability to it somehow uh and",
    "start": "1370320",
    "end": "1375679"
  },
  {
    "text": "so we're so when the overflow happens uh the rights will go down here it will",
    "start": "1375679",
    "end": "1381120"
  },
  {
    "text": "overflow the fields of the struct and then it will overwrite uh the previous pointer uh with the where and",
    "start": "1381120",
    "end": "1388400"
  },
  {
    "text": "and the next pointer with the what and then later at some point when the the the object to be freed is free then",
    "start": "1388400",
    "end": "1395360"
  },
  {
    "text": "this assignment will happen okay",
    "start": "1395360",
    "end": "1401200"
  },
  {
    "text": "so this this technique was presented in 2000",
    "start": "1401280",
    "end": "1406320"
  },
  {
    "text": "uh you know way back when uh what was it taylor swift was 11.",
    "start": "1406320",
    "end": "1413280"
  },
  {
    "text": "um so let's go to 2019. so uh in 2019 uh",
    "start": "1413280",
    "end": "1421120"
  },
  {
    "start": "1417000",
    "end": "1476000"
  },
  {
    "text": "this this same technique was used against android uh in uh an exploit uh",
    "start": "1421120",
    "end": "1427039"
  },
  {
    "text": "that it has been named bad binder uh and it was it was discovered",
    "start": "1427039",
    "end": "1432880"
  },
  {
    "text": "uh sort of uh through through intelligence gathering and then trying",
    "start": "1432880",
    "end": "1438960"
  },
  {
    "text": "to narrow down where the vulnerability was if if you're like super interested in this there's a really great talk",
    "start": "1438960",
    "end": "1445679"
  },
  {
    "text": "at offensive con last year by oh gosh maddie",
    "start": "1445679",
    "end": "1453039"
  },
  {
    "text": "okay i can i'll tweet the link to it later um",
    "start": "1453039",
    "end": "1458320"
  },
  {
    "text": "and uh yeah so this is the cve number for it uh for people who are not familiar with it this is this uh this is",
    "start": "1458320",
    "end": "1464720"
  },
  {
    "text": "sort of like a global bug database for vulnerabilities uh",
    "start": "1464720",
    "end": "1470159"
  },
  {
    "text": "and so that it has the 2019 is the year and then there's like just a number uh",
    "start": "1470159",
    "end": "1475679"
  },
  {
    "text": "increasing okay so from the cve it says use after free and binder.c",
    "start": "1475679",
    "end": "1482080"
  },
  {
    "text": "allows elevation of privilege from an application to the linux kernel",
    "start": "1482080",
    "end": "1487360"
  },
  {
    "text": "um but when it was discovered they didn't have that much data on it",
    "start": "1487360",
    "end": "1494639"
  },
  {
    "start": "1494000",
    "end": "1632000"
  },
  {
    "text": "but before before we get into to that i just want to give you some very like the",
    "start": "1496159",
    "end": "1501360"
  },
  {
    "text": "shortest intro to to to android ipc you've ever had in your entire life",
    "start": "1501360",
    "end": "1507279"
  },
  {
    "text": "and so if you've ever done like uh android development and making apps and stuff you know that there is this",
    "start": "1507279",
    "end": "1513039"
  },
  {
    "text": "wonderful ipc mechanism uh which is looks basically like uh um like a",
    "start": "1513039",
    "end": "1518240"
  },
  {
    "text": "function call or method call and you can generate this uh",
    "start": "1518240",
    "end": "1523520"
  },
  {
    "text": "the api that you program against and then you can call you can do calls into other apps or services or things running in other",
    "start": "1523520",
    "end": "1530640"
  },
  {
    "text": "processes uh so this is a really nice feature",
    "start": "1530640",
    "end": "1535760"
  },
  {
    "text": "and then and like from other platforms you might yeah i've done ipc before so but but",
    "start": "1535760",
    "end": "1542400"
  },
  {
    "text": "android's ipc is kind of cool like uh it's it's uh its legacy comes from palm",
    "start": "1542400",
    "end": "1547679"
  },
  {
    "text": "so they um okay for the zoomers in the house",
    "start": "1547679",
    "end": "1553679"
  },
  {
    "text": "we used to have something that kind of looked like a smartphone except you couldn't call anybody yes and and it was and they were called",
    "start": "1554960",
    "end": "1562000"
  },
  {
    "text": "palm pilots and and and uh rich rich people had them",
    "start": "1562000",
    "end": "1567039"
  },
  {
    "text": "um yes uh but basically the idea that that that",
    "start": "1567039",
    "end": "1572559"
  },
  {
    "text": "that came from palm and that was inherited into android was this idea of having having this kind of kernel driver",
    "start": "1572559",
    "end": "1580159"
  },
  {
    "text": "and so there's uh there's a this uh kernel driver here and when the call goes it actually does a constant contact",
    "start": "1580159",
    "end": "1586880"
  },
  {
    "text": "shift into the kernel driver which schedules uh the callee in to get the message and then when the",
    "start": "1586880",
    "end": "1593279"
  },
  {
    "text": "message is over it does the reverse and all the way back so this means you can get basically a synchronous function",
    "start": "1593279",
    "end": "1598559"
  },
  {
    "text": "call from an application to another application but it does involve this uh",
    "start": "1598559",
    "end": "1604720"
  },
  {
    "text": "this kernel magic um so this has this uh was for a long time patches on the kernel",
    "start": "1604720",
    "end": "1612320"
  },
  {
    "text": "linux kernel i think it still is or no did they merge it",
    "start": "1612320",
    "end": "1618240"
  },
  {
    "text": "okay yes and it is it is a super super cool tech in my opinion um",
    "start": "1618240",
    "end": "1625520"
  },
  {
    "text": "and it's basically a lot of like the underlying uh cool stuff in android that made android cool in my opinion",
    "start": "1625520",
    "end": "1632159"
  },
  {
    "start": "1632000",
    "end": "1761000"
  },
  {
    "text": "uh anyway so but how this was received at google was",
    "start": "1632159",
    "end": "1637360"
  },
  {
    "text": "basically they said that there's uh there's a nso group apparently has a vulnerability in android",
    "start": "1637360",
    "end": "1644000"
  },
  {
    "text": "uh and and and the the question was what is this",
    "start": "1644000",
    "end": "1649360"
  },
  {
    "text": "vulnerability uh all they got was that it was being used in the wilderness being used to to",
    "start": "1649360",
    "end": "1655840"
  },
  {
    "text": "to uh to do surveillance uh on people and for people who who don't know an",
    "start": "1655840",
    "end": "1662559"
  },
  {
    "text": "so group is an israeli technology firm they make something called pegasus which",
    "start": "1662559",
    "end": "1667760"
  },
  {
    "text": "is basically spyware uh and they sell it to",
    "start": "1667760",
    "end": "1673200"
  },
  {
    "text": "everybody okay no that's not true they they they sell it to governments and law",
    "start": "1673200",
    "end": "1678399"
  },
  {
    "text": "enforcement agencies everywhere uh which basically means that it's basically used for for all sorts of",
    "start": "1678399",
    "end": "1685840"
  },
  {
    "text": "surveillance of journalisms uh journalists activists any like it's just",
    "start": "1685840",
    "end": "1691440"
  },
  {
    "text": "in general like evil stuff um and that's my personal opinion which is",
    "start": "1691440",
    "end": "1696559"
  },
  {
    "text": "correct um but anyway but so so what google got was",
    "start": "1696559",
    "end": "1702559"
  },
  {
    "text": "that it is being used by pegasus they are selling this capability uh that they can they can root an android phone and",
    "start": "1702559",
    "end": "1708799"
  },
  {
    "text": "and and and and do uh surveillance of it uh but they didn't know a lot about it",
    "start": "1708799",
    "end": "1714480"
  },
  {
    "text": "so so basically what they gleaned was basically from from sales pitches from the nso group",
    "start": "1714480",
    "end": "1721520"
  },
  {
    "text": "and they had a bunch of different things that were available i'm just going to to say a couple of things so they they oh",
    "start": "1721520",
    "end": "1729039"
  },
  {
    "text": "give me a second there so they were told it was an arbitrary kernel read write primitive and this means that you could",
    "start": "1729039",
    "end": "1734480"
  },
  {
    "text": "read whatever you want or you can write whatever you want in in the kernel so in the memory",
    "start": "1734480",
    "end": "1740880"
  },
  {
    "text": "um and also that this config debug list",
    "start": "1740880",
    "end": "1746000"
  },
  {
    "text": "uh property uh breaks the primitive so if this was on it didn't work",
    "start": "1746000",
    "end": "1752720"
  },
  {
    "text": "there was a bunch of other things on which kernel versions and things like that and and again",
    "start": "1752720",
    "end": "1758000"
  },
  {
    "text": "i will tweet the link to the offensive con talk after um",
    "start": "1758000",
    "end": "1763840"
  },
  {
    "start": "1761000",
    "end": "1811000"
  },
  {
    "text": "but i just wanted to show you this bit here because if you had config debug list on",
    "start": "1763840",
    "end": "1770000"
  },
  {
    "text": "it would uh enable this and if you squint a little bit you might",
    "start": "1770000",
    "end": "1775120"
  },
  {
    "text": "recognize uh what's going on here it's going to check that previous is",
    "start": "1775120",
    "end": "1780640"
  },
  {
    "text": "next is not equal to entry or nexus previous is not equal to entry then it will panic corruption",
    "start": "1780640",
    "end": "1787600"
  },
  {
    "text": "um yeah so so so this is familiar because this is the standard unlink uh",
    "start": "1787600",
    "end": "1794240"
  },
  {
    "text": "vulnerability mitigation um now this was this was exploited in a",
    "start": "1794240",
    "end": "1800799"
  },
  {
    "text": "different way so here they were using a use after free and and the whole chain on and how it's",
    "start": "1800799",
    "end": "1807120"
  },
  {
    "text": "done is as more as explained in in the talk that i will tweet um",
    "start": "1807120",
    "end": "1812880"
  },
  {
    "start": "1811000",
    "end": "1883000"
  },
  {
    "text": "but a typical way that something like this could be exploited with a heap uh use after free",
    "start": "1812880",
    "end": "1818880"
  },
  {
    "text": "is like this so if you imagine that this is our heap and we have our previous and",
    "start": "1818880",
    "end": "1823919"
  },
  {
    "text": "next pointers up in there and then this section of of of the heap",
    "start": "1823919",
    "end": "1829679"
  },
  {
    "text": "is freed like something like the application freed this memory uh and and the map like",
    "start": "1829679",
    "end": "1836960"
  },
  {
    "text": "the previous and x pointer are still there but they're in like junk now",
    "start": "1836960",
    "end": "1842320"
  },
  {
    "text": "uh and if you have any access after this it might be okay",
    "start": "1842320",
    "end": "1848480"
  },
  {
    "text": "there it will be a use after free but you know it will you won't die um",
    "start": "1848480",
    "end": "1853600"
  },
  {
    "text": "but uh in exploitation here one way that you can do this is that you could have the uh have this memory allocated to you",
    "start": "1853600",
    "end": "1861440"
  },
  {
    "text": "and then you can fill it with something else so in this case you might want to fill the previous index pointer with",
    "start": "1861440",
    "end": "1867279"
  },
  {
    "text": "your what in your where and then later on when the application does the use after free",
    "start": "1867279",
    "end": "1873200"
  },
  {
    "text": "it will execute your read your your read write primitive or you write what we're primitive",
    "start": "1873200",
    "end": "1880480"
  },
  {
    "text": "um so that's how how that could be exploited um",
    "start": "1880559",
    "end": "1886240"
  },
  {
    "start": "1883000",
    "end": "1913000"
  },
  {
    "text": "actually how it was through a bunch of different a bunch of different linux system calls",
    "start": "1886240",
    "end": "1892960"
  },
  {
    "text": "and but since the unlinking itself is done in privileged code",
    "start": "1892960",
    "end": "1898640"
  },
  {
    "text": "this becomes a use after free leading to an arbitrary kernel read write primitive",
    "start": "1898640",
    "end": "1904000"
  },
  {
    "text": "and then this was used to overwrite uh some address limits in the kernel and then suddenly you had",
    "start": "1904000",
    "end": "1909519"
  },
  {
    "text": "access to it wherever you wanted yes",
    "start": "1909519",
    "end": "1915519"
  },
  {
    "start": "1913000",
    "end": "2080000"
  },
  {
    "text": "so how would you find this type of bug today well the good thing is uh that uh we",
    "start": "1915519",
    "end": "1921840"
  },
  {
    "text": "have address sanitizer today uh so address sanitizer was introduced in",
    "start": "1921840",
    "end": "1927679"
  },
  {
    "text": "in clang ten years ago more than ten years ago i guess it was quickly adopted into gcc",
    "start": "1927679",
    "end": "1936640"
  },
  {
    "text": "then there was i think one made for the linux kernel which was uh ksan",
    "start": "1936640",
    "end": "1943519"
  },
  {
    "text": "and there's been one made for almost every kernel i think and",
    "start": "1943519",
    "end": "1950240"
  },
  {
    "text": "and more recently also adapted for for uh",
    "start": "1950799",
    "end": "1955919"
  },
  {
    "text": "for the msvc compiler so for for the microsoft compiler and so it is basically everywhere now so",
    "start": "1955919",
    "end": "1962799"
  },
  {
    "text": "address sanitizer is a way of instrumenting uh loads and stores for memory to be able",
    "start": "1962799",
    "end": "1968320"
  },
  {
    "text": "to to detect uh access out to bounds in different ways",
    "start": "1968320",
    "end": "1974159"
  },
  {
    "text": "and this works on the stack on the heap and the global memory like all over the place uh so running with address sanitizer you",
    "start": "1974159",
    "end": "1981360"
  },
  {
    "text": "would have failed on this and since i'm okay so so i have certain certain aspects of my personality that doesn't",
    "start": "1981360",
    "end": "1987840"
  },
  {
    "text": "fit well with security culture so one of those was that when i found the vulnerability",
    "start": "1987840",
    "end": "1994000"
  },
  {
    "text": "i made a unit test that was the exploit and then i put it in ci because that's what you do",
    "start": "1994000",
    "end": "2002240"
  },
  {
    "text": "but then i had to turn off the exploit on the builds where i had address sanitizer because then they would fail",
    "start": "2002240",
    "end": "2008159"
  },
  {
    "text": "and you don't want build builds failing in your ci so um but",
    "start": "2008159",
    "end": "2013840"
  },
  {
    "text": "but address sanitizer is great it's a available on basically every platform so uh if uh if you're doing",
    "start": "2013840",
    "end": "2021120"
  },
  {
    "text": "any kind of uh native development uh definitely look into that um so other scientists would have found",
    "start": "2021120",
    "end": "2027519"
  },
  {
    "text": "this uh if you exercise the code in this manner",
    "start": "2027519",
    "end": "2032559"
  },
  {
    "text": "and that's where address sanitizer kind of",
    "start": "2032559",
    "end": "2037200"
  },
  {
    "text": "it won't do magic it's not enough to turn on address sanitizer in your builds on your ci and then run you know your",
    "start": "2037600",
    "end": "2044720"
  },
  {
    "text": "tests if your tests are not exercising the code in this way it will still not find them",
    "start": "2044720",
    "end": "2050320"
  },
  {
    "text": "uh so so the recommended way to find things like this is by using address sanitizer and fuzzing",
    "start": "2050320",
    "end": "2056560"
  },
  {
    "text": "i'm not going to to talk about fuzzing here but",
    "start": "2056560",
    "end": "2061839"
  },
  {
    "text": "and that is also the the the number one way of finding memory errors today by",
    "start": "2062000",
    "end": "2067440"
  },
  {
    "text": "security researchers uh when it comes to to this kind of exploitation it's it's a",
    "start": "2067440",
    "end": "2072720"
  },
  {
    "text": "combination of address sanitizer with some kind of fuzzing with a feedback mechanism",
    "start": "2072720",
    "end": "2080638"
  },
  {
    "text": "okay but let's go to 2002. i'm not going to go in increments of 2 okay",
    "start": "2081839",
    "end": "2088480"
  },
  {
    "text": "um actually i i okay i love this okay",
    "start": "2088480",
    "end": "2093839"
  },
  {
    "text": "for all of you who like actually like remember this it was awesome okay so it's awesome for many many",
    "start": "2093839",
    "end": "2099760"
  },
  {
    "text": "reasons but okay so this song came out in 2002 and and she's like writing on this",
    "start": "2099760",
    "end": "2105119"
  },
  {
    "text": "fantastic nokia phone with like a full keyboard is like awesome but writing like a text message in a spreadsheet and",
    "start": "2105119",
    "end": "2113920"
  },
  {
    "text": "it was great we loved it technology was this is like peak technology um",
    "start": "2113920",
    "end": "2120160"
  },
  {
    "text": "so 2002 20 years ago nelly was a superstar uh so so uh with the",
    "start": "2120160",
    "end": "2127839"
  },
  {
    "text": "the the hot in i can't even say it hot in her her and uh dilemma with kelly rowland which",
    "start": "2127839",
    "end": "2135119"
  },
  {
    "text": "had this wonderful scene by the way um actually i think i'm just gonna make a thread and like this like the theme",
    "start": "2135119",
    "end": "2141359"
  },
  {
    "text": "songs for this for this presentation um okay so so in 2002 uh there was a uh",
    "start": "2141359",
    "end": "2150079"
  },
  {
    "start": "2144000",
    "end": "2196000"
  },
  {
    "text": "a post in frack magazine so frack magazine was an online magazine uh that has been in",
    "start": "2150079",
    "end": "2157280"
  },
  {
    "text": "i i i think at least 30 years maybe 35 years or something like that's been",
    "start": "2157280",
    "end": "2162720"
  },
  {
    "text": "going uh so so it goes back all the way to to when you had the phone freakers and uh and things in in california and",
    "start": "2162720",
    "end": "2170640"
  },
  {
    "text": "and it's basically just publishing uh lots of articles by by uh by hackers on",
    "start": "2170640",
    "end": "2176079"
  },
  {
    "text": "lots of different things and so this one from from uh 2002 uh is basically just a",
    "start": "2176079",
    "end": "2181839"
  },
  {
    "text": "tutorial on different types of of the integer overflows which is what we're going to talk about now",
    "start": "2181839",
    "end": "2188560"
  },
  {
    "text": "uh so saying 2002 is just being generous uh this this this by 2002 integer overflows were old",
    "start": "2188560",
    "end": "2195839"
  },
  {
    "text": "news um but let's have a look at that so if you",
    "start": "2195839",
    "end": "2200880"
  },
  {
    "start": "2196000",
    "end": "2468000"
  },
  {
    "text": "are a c plus plus or c programmer the distinction between sign integer overflow and an unsigned integer wrap",
    "start": "2200880",
    "end": "2207359"
  },
  {
    "text": "around are like super important but if you are not you don't care and it doesn't matter um so",
    "start": "2207359",
    "end": "2214800"
  },
  {
    "text": "so one of them is undefined behavior the other is not uh for the sake of this presentation it actually makes no",
    "start": "2214800",
    "end": "2220720"
  },
  {
    "text": "difference so so the typical scenario that you want to attack with uh with",
    "start": "2220720",
    "end": "2228320"
  },
  {
    "text": "some kind of either some kind of overflow wrap around is this type of scenario so i'm going to",
    "start": "2228320",
    "end": "2235760"
  },
  {
    "text": "show you a type of scenario and then i'll i'll show you how it can be exploited in different ways",
    "start": "2235760",
    "end": "2241680"
  },
  {
    "text": "so here we have an if we're saying that uh first length plus second length is less than buff length so let's have a",
    "start": "2241680",
    "end": "2247680"
  },
  {
    "text": "look at what this looks like in picture form uh so we have this first which is some",
    "start": "2247680",
    "end": "2254160"
  },
  {
    "text": "kind of buffer it has some kind of length and then we have second which is some other kind of buffer and it has another",
    "start": "2254160",
    "end": "2260800"
  },
  {
    "text": "length and then we have this buff and it also has a length",
    "start": "2260800",
    "end": "2266000"
  },
  {
    "text": "so the idea that we're trying to do here is we're going to try to copy first and second into buff and we just want to",
    "start": "2266000",
    "end": "2272160"
  },
  {
    "text": "make sure that there's no overflow here uh so we want to see it basically ask",
    "start": "2272160",
    "end": "2279599"
  },
  {
    "text": "does first and second both fit into buff that is the thing we're trying to figure out",
    "start": "2279599",
    "end": "2285440"
  },
  {
    "text": "and so down here on line one you have like if first length plus second length is less than buff line",
    "start": "2285440",
    "end": "2292079"
  },
  {
    "text": "now if you're from most other computing languages uh you you do have",
    "start": "2292079",
    "end": "2299359"
  },
  {
    "text": "you do have wrap around for for your assigned integers and you probably don't even have",
    "start": "2299359",
    "end": "2304560"
  },
  {
    "text": "unsigned integers but may see sharp has unsigned integers right yeah um but they're going to wrap around",
    "start": "2304560",
    "end": "2311119"
  },
  {
    "text": "anyway uh so so it's fine the the problem here becomes what if the attacker can control",
    "start": "2311119",
    "end": "2318240"
  },
  {
    "text": "uh what you are thinking is the length of one of these so i'll show you on the next slide",
    "start": "2318240",
    "end": "2327200"
  },
  {
    "text": "okay so here we have the same code we had before uh but uh here we're going to be lying",
    "start": "2327200",
    "end": "2334560"
  },
  {
    "text": "so we have an attacker controlled length of second image in here",
    "start": "2334560",
    "end": "2339599"
  },
  {
    "text": "imagine an attack and control buffer as well and then the rest of it is the same",
    "start": "2339599",
    "end": "2346720"
  },
  {
    "text": "so the problem here is that when we send max int as second length",
    "start": "2346720",
    "end": "2352079"
  },
  {
    "text": "when we add and well any kind of smaller number to max int is going to wrap around it's going to become a small",
    "start": "2352079",
    "end": "2357920"
  },
  {
    "text": "number and this small number is going to be less than buff length and so we're going to pass this if test and we're going to",
    "start": "2357920",
    "end": "2364560"
  },
  {
    "text": "do the copy uh and that's going to give us a buffer",
    "start": "2364560",
    "end": "2371119"
  },
  {
    "text": "overflow right so if this is on the heap then this will now give us a heap of overflow",
    "start": "2371119",
    "end": "2376240"
  },
  {
    "text": "it's on the stack it will give us a stack buffer overflow um yeah",
    "start": "2376240",
    "end": "2382320"
  },
  {
    "text": "a different way is uh so so then you're thinking okay but i'm going to allocate buff to be like the right size",
    "start": "2382320",
    "end": "2388800"
  },
  {
    "text": "so instead of like having a buff length we're going to calculate it so we're going to do uh instead we're",
    "start": "2388800",
    "end": "2394480"
  },
  {
    "text": "going to say buff length is equal to first line plus plus second length",
    "start": "2394480",
    "end": "2399520"
  },
  {
    "text": "and then we're going to allocate that size and then we're going to do the copy you know",
    "start": "2399520",
    "end": "2405680"
  },
  {
    "text": "uh but unfortunately you know lying works uh so now we're going to do with an unsigned integer overflow",
    "start": "2405680",
    "end": "2413200"
  },
  {
    "text": "uh unsaid integer wraparound slide is wrong um",
    "start": "2413200",
    "end": "2418880"
  },
  {
    "text": "so so because the same idea happens here right there's going to be an overflow it's going to uh overflow around and the",
    "start": "2418880",
    "end": "2425440"
  },
  {
    "text": "result is going to be a small number um for if for signed integers it's probably",
    "start": "2425440",
    "end": "2431520"
  },
  {
    "text": "going to be negative for unsigned integers is going to be a small but positive number so here we are allocating a very small",
    "start": "2431520",
    "end": "2438400"
  },
  {
    "text": "buffer and then uh thinking it's fine and then we're going to do the copy which is",
    "start": "2438400",
    "end": "2443680"
  },
  {
    "text": "going to cause our overflow okay so this is the basic idea of that",
    "start": "2443680",
    "end": "2450000"
  },
  {
    "text": "technique so so we had this this uh this article in frack magazine from like 2002 where",
    "start": "2450000",
    "end": "2457839"
  },
  {
    "text": "this was considered in the security community to be known",
    "start": "2457839",
    "end": "2462960"
  },
  {
    "text": "no knowledge like this was like everybody knew this uh okay so let's go to 2017",
    "start": "2462960",
    "end": "2470720"
  },
  {
    "start": "2468000",
    "end": "2480000"
  },
  {
    "text": "and to chrome uh so so i'm going to show you just uh",
    "start": "2470720",
    "end": "2476960"
  },
  {
    "text": "so this is cv uh 2017 15 for 16. and if we go and look at the cve it says",
    "start": "2476960",
    "end": "2484480"
  },
  {
    "start": "2480000",
    "end": "2491000"
  },
  {
    "text": "heap buffer overflow and blob api in google chrome allowed a remote attacker to potentially exploit heap corruption",
    "start": "2484480",
    "end": "2492560"
  },
  {
    "start": "2491000",
    "end": "2539000"
  },
  {
    "text": "so i'm just going to show you the fix because i think it's enough to show you kind of how this works",
    "start": "2492560",
    "end": "2498560"
  },
  {
    "text": "uh so so this is the patch so this was the vulnerable uh cone",
    "start": "2498560",
    "end": "2505680"
  },
  {
    "text": "so here we have some addition of typical like an offset and the length",
    "start": "2505680",
    "end": "2511200"
  },
  {
    "text": "and then we're trying to see if that is greater than total size and instead it was replaced by this code",
    "start": "2511200",
    "end": "2516880"
  },
  {
    "text": "underneath here where they are going to check if adding these two will overflow or not",
    "start": "2516880",
    "end": "2523839"
  },
  {
    "text": "uh if it doesn't uh overflow then it will assign it to this local variable called nbyte",
    "start": "2523839",
    "end": "2530160"
  },
  {
    "text": "and then that that is used for the comparison",
    "start": "2530160",
    "end": "2534800"
  },
  {
    "text": "okay so let's go to 2021. and here we have a vulnerability in",
    "start": "2537920",
    "end": "2543440"
  },
  {
    "start": "2539000",
    "end": "2561000"
  },
  {
    "text": "apple ios and ipad os and mac os and all of the apolly things",
    "start": "2543440",
    "end": "2548880"
  },
  {
    "text": "so it was 2021 38.60 so from the cve",
    "start": "2548880",
    "end": "2554880"
  },
  {
    "text": "an integer overflow was addressed processing a maliciously crafted pdf may lead to arbitrary code execution",
    "start": "2554880",
    "end": "2562880"
  },
  {
    "text": "uh so this is this is the code that has the vulnerability we won't go in in detail i'm just going to like highlight",
    "start": "2562880",
    "end": "2569440"
  },
  {
    "text": "the interesting sections uh so here we have a 32-bit uh unsigned integer uh and here we are incrementing that",
    "start": "2569440",
    "end": "2577520"
  },
  {
    "text": "integer with attacker control data so now we can put in like a huge number here",
    "start": "2577520",
    "end": "2585280"
  },
  {
    "text": "then we are using that number that has been incremented with attacker controlled data",
    "start": "2585280",
    "end": "2591119"
  },
  {
    "text": "to allocate the buffer so if it if we manage to make it wrap around then at this point we're going to",
    "start": "2591119",
    "end": "2596800"
  },
  {
    "text": "allocate a buffer that is too small and then when we actually do the copying",
    "start": "2596800",
    "end": "2601920"
  },
  {
    "text": "into the buffer we are going to have our overflow",
    "start": "2601920",
    "end": "2606000"
  },
  {
    "text": "so how do we find those um so for for signed integer overflow is as as i",
    "start": "2609760",
    "end": "2617680"
  },
  {
    "text": "mentioned uh is undefined behavior in c and c plus plus that doesn't mean",
    "start": "2617680",
    "end": "2623599"
  },
  {
    "text": "anything outside of our communities but it basically for tooling purposes it means that the ub sanitizer undefined",
    "start": "2623599",
    "end": "2630560"
  },
  {
    "text": "behavior sanitizer will find them so if you manage to provoke this kind of behavior in",
    "start": "2630560",
    "end": "2636240"
  },
  {
    "text": "in in in the code uh then it will uh then you'd be sanitizer will scream at you",
    "start": "2636240",
    "end": "2642960"
  },
  {
    "text": "uh for unsigned integers it it won't because it's not undefined behavior",
    "start": "2642960",
    "end": "2648960"
  },
  {
    "text": "but there's an integer sanitizer that will tell you almost always uh any kind of wrap-around",
    "start": "2648960",
    "end": "2655599"
  },
  {
    "text": "overflow of an integer either signed or unsigned is usually unintended by the programmer",
    "start": "2655599",
    "end": "2662480"
  },
  {
    "text": "it's because it's not normal for like a human being to think that if you increment a number it's going to become",
    "start": "2662480",
    "end": "2668000"
  },
  {
    "text": "smaller it's just human beings don't work that way",
    "start": "2668000",
    "end": "2674079"
  },
  {
    "text": "um there are some features in sql spells 20 that will help with some of these things",
    "start": "2674079",
    "end": "2679920"
  },
  {
    "text": "and there might be more features in the future to help making uh these kinds of comparisons and",
    "start": "2679920",
    "end": "2685839"
  },
  {
    "text": "incrementations uh safer but let's go to 2010",
    "start": "2685839",
    "end": "2692000"
  },
  {
    "start": "2688000",
    "end": "2712000"
  },
  {
    "text": "and and actually 2010 here i'm just being extremely generous um so this is 12 years ago",
    "start": "2692000",
    "end": "2698960"
  },
  {
    "text": "where rihanna had the absolute fantastic song rude boy and and lady gaga had bad",
    "start": "2698960",
    "end": "2704720"
  },
  {
    "text": "romance because poker face was like a couple of years ago already can you imagine",
    "start": "2704720",
    "end": "2710640"
  },
  {
    "text": "wow 12 years ago also of course this man who some of you",
    "start": "2710640",
    "end": "2716240"
  },
  {
    "text": "might know released this product which was like a really oversized phone and and not like too small to be a computer",
    "start": "2716240",
    "end": "2722400"
  },
  {
    "text": "too big to be a phone and what would we ever use it for um so yeah so the ipad came out",
    "start": "2722400",
    "end": "2728800"
  },
  {
    "text": "in 2010 the original one which was like really thick",
    "start": "2728800",
    "end": "2733920"
  },
  {
    "start": "2731000",
    "end": "2787000"
  },
  {
    "text": "um but also in frac magazine",
    "start": "2733920",
    "end": "2739839"
  },
  {
    "text": "in 2010 came this wonderful post a eulogy for format stream",
    "start": "2739839",
    "end": "2745440"
  },
  {
    "text": "vulnerabilities and so so this is this is when the security community felt you know",
    "start": "2745440",
    "end": "2751040"
  },
  {
    "text": "it's over there's no more fun to be had with formats during vulnerabilities anymore",
    "start": "2751040",
    "end": "2756960"
  },
  {
    "text": "and you know they they had they had uh you know the post in 2002 going like ah",
    "start": "2756960",
    "end": "2762400"
  },
  {
    "text": "advances in in for mastering exploitation but by 2010 they were like it's over people",
    "start": "2762400",
    "end": "2769200"
  },
  {
    "text": "um and there were good reasons for this uh a lot of applications had fixed a lot of",
    "start": "2769200",
    "end": "2776480"
  },
  {
    "text": "these but also compilers had implemented uh warnings around these uh so so there was a lot of people had",
    "start": "2776480",
    "end": "2783119"
  },
  {
    "text": "fixed a lot of this but you know everything that's old is new again",
    "start": "2783119",
    "end": "2788640"
  },
  {
    "text": "so to understand for mastering vulnerabilities i'm going to give you a very quick introduction to uh",
    "start": "2788640",
    "end": "2795920"
  },
  {
    "text": "weird format string vulnerability or format string features a couple of lesser known for mastering",
    "start": "2795920",
    "end": "2802319"
  },
  {
    "text": "features uh so even if you don't know a lot of c you've probably done a printf at some",
    "start": "2802319",
    "end": "2808480"
  },
  {
    "text": "point in your career and that's all you need to know for this so",
    "start": "2808480",
    "end": "2813680"
  },
  {
    "text": "um so it has so so printf has like a ton of fun features",
    "start": "2813680",
    "end": "2819760"
  },
  {
    "text": "uh one of the features that you probably know uh is of course that that you will",
    "start": "2819760",
    "end": "2825359"
  },
  {
    "text": "pass in a string as the first argument and then you can pass in like who all sorts of like as many",
    "start": "2825359",
    "end": "2831280"
  },
  {
    "text": "many uh many more arguments as you want hopefully matching the",
    "start": "2831280",
    "end": "2836640"
  },
  {
    "text": "where they should be replacing the format string but that you know um this is c and we",
    "start": "2836640",
    "end": "2842880"
  },
  {
    "text": "we play fast and loose with things but in this case we're going to do like a really cool feature if you're going to make like a terminal application in c",
    "start": "2842880",
    "end": "2849760"
  },
  {
    "text": "this is like this is this will be very useful for you um so the idea here is that if you want to",
    "start": "2849760",
    "end": "2856319"
  },
  {
    "text": "make like columns maybe and you want things to align properly and things you can use this property here so here we're",
    "start": "2856319",
    "end": "2862960"
  },
  {
    "text": "saying that we want the column width to be 17 characters and then we're going to print a d which",
    "start": "2862960",
    "end": "2870000"
  },
  {
    "text": "is a as an integer so we're going to pick that from from our arguments which is then 10 right here",
    "start": "2870000",
    "end": "2876559"
  },
  {
    "text": "so that means that we're going to use uh 17 characters but",
    "start": "2876559",
    "end": "2883119"
  },
  {
    "text": "but printing 10 as a part of those 17. and you can also do",
    "start": "2883119",
    "end": "2888800"
  },
  {
    "text": "do this where you can actually pick the field with also from the arguments",
    "start": "2888800",
    "end": "2893839"
  },
  {
    "text": "to printf with this wonderful star functionality and and i'm not going to go into this but this is direct access",
    "start": "2893839",
    "end": "2900559"
  },
  {
    "text": "and this means you can like pick and choose which one of your parameters you're going to use for this",
    "start": "2900559",
    "end": "2906160"
  },
  {
    "text": "um so this is uh one feature but this feature is probably the most",
    "start": "2906160",
    "end": "2911680"
  },
  {
    "text": "important uh so this is uh",
    "start": "2911680",
    "end": "2916960"
  },
  {
    "text": "has let's go have this small program here so if we here we have this uh",
    "start": "2916960",
    "end": "2922640"
  },
  {
    "text": "integer num and then we're going to do a printf abcdef and then percent n",
    "start": "2922640",
    "end": "2929440"
  },
  {
    "text": "and then the address of num so so we're passing as our only argument the the the",
    "start": "2929440",
    "end": "2935119"
  },
  {
    "text": "point a pointer to to num which is here and then we're going to print num",
    "start": "2935119",
    "end": "2942559"
  },
  {
    "text": "uh so if we do this we run this program it will print abcdef",
    "start": "2942559",
    "end": "2949520"
  },
  {
    "text": "and then it will print six because this feature is that the printf",
    "start": "2949520",
    "end": "2954640"
  },
  {
    "text": "will actually write to memory how many characters it has written",
    "start": "2954640",
    "end": "2959680"
  },
  {
    "text": "now printer vulnerabilities has been used for a lot of fun stuff",
    "start": "2959680",
    "end": "2965119"
  },
  {
    "text": "today often the ones that are found are used to leak memory so because you can",
    "start": "2965119",
    "end": "2970640"
  },
  {
    "text": "if you can control the the format string so the first argument to printf and the best way to do that is if you",
    "start": "2970640",
    "end": "2976720"
  },
  {
    "text": "have any code that takes a user input of some kind and then it just does printf variable",
    "start": "2976720",
    "end": "2984559"
  },
  {
    "text": "and brace semicolon and then that attacker controlled string is actually a format string and you can",
    "start": "2984559",
    "end": "2990960"
  },
  {
    "text": "put whatever you want in there and it will just grab stuff from the stack and just",
    "start": "2990960",
    "end": "2996640"
  },
  {
    "text": "you know it's just it's just going to go like i assume the stuff is here or in or in or in or in the registers or you know",
    "start": "2996640",
    "end": "3003760"
  },
  {
    "text": "depending on the platform how this is implemented um so it's a good way of leaking memory",
    "start": "3003760",
    "end": "3010240"
  },
  {
    "text": "uh but it but with percent and it also writes memory so it doesn't only read memory with percent and it can write",
    "start": "3010240",
    "end": "3016079"
  },
  {
    "text": "memory as well um and you can combine these two",
    "start": "3016079",
    "end": "3021119"
  },
  {
    "text": "uh in fun ways uh so here we're using field with with 42 is our field width",
    "start": "3021119",
    "end": "3028480"
  },
  {
    "text": "and we're also using percent n so when we run this",
    "start": "3028480",
    "end": "3034000"
  },
  {
    "text": "it will it will print a 1 way over there and then it will print 42 because we",
    "start": "3034000",
    "end": "3040079"
  },
  {
    "text": "said that the field width should be 42 and so so in this way you can also also dictate",
    "start": "3040079",
    "end": "3046400"
  },
  {
    "text": "what values are written to memory because that is also a part of the format string",
    "start": "3046400",
    "end": "3052400"
  },
  {
    "text": "and this is just a very brief introduction to like weird stuff you can do with format strings and",
    "start": "3052559",
    "end": "3058480"
  },
  {
    "text": "from personal experience it's a terrible way to write an exploit it's really horrible and i do not",
    "start": "3058480",
    "end": "3065280"
  },
  {
    "text": "recommend but because you're basically programming using like percent s percent deeper",
    "start": "3065280",
    "end": "3073040"
  },
  {
    "text": "it's it's is really really bad uh but you know it works",
    "start": "3073040",
    "end": "3078079"
  },
  {
    "text": "okay so we were a reminder we were in 2002 that's when we had advances in format strings by",
    "start": "3078079",
    "end": "3084880"
  },
  {
    "text": "2010 it was like it's over people i'm sorry a eulogy for for mastering",
    "start": "3084880",
    "end": "3090319"
  },
  {
    "text": "uh but 2021 so apple ios",
    "start": "3090319",
    "end": "3097680"
  },
  {
    "start": "3092000",
    "end": "3158000"
  },
  {
    "text": "so some of you might have seen this on twitter because it was actually released on twitter uh so this is cv 2021 3800.",
    "start": "3097680",
    "end": "3105520"
  },
  {
    "text": "um and from from the cve it says joining a malicious wi-fi network may result in a",
    "start": "3105520",
    "end": "3112240"
  },
  {
    "text": "denial of service or arbitrary code execution [Laughter]",
    "start": "3112240",
    "end": "3118720"
  },
  {
    "text": "so i i i think the tweet will not be like like super surprising uh if you",
    "start": "3118720",
    "end": "3124319"
  },
  {
    "text": "notice here it says after joining my personal wi-fi with the ssid percent p percent s percent s",
    "start": "3124319",
    "end": "3131760"
  },
  {
    "text": "percent s percent s percent n um my iphone permanently disabled is",
    "start": "3131760",
    "end": "3137040"
  },
  {
    "text": "wi-fi functionality neither rebooting nor changing the ssid fixes in uh",
    "start": "3137040",
    "end": "3142640"
  },
  {
    "text": "because the whole the whole wi-fi stack if i understand correctly just just wasn't a cyclic reboot because it would",
    "start": "3142640",
    "end": "3147839"
  },
  {
    "text": "kept on like discovering this thing and they probably had some code that went printf ssid somewhere and and so it will",
    "start": "3147839",
    "end": "3154640"
  },
  {
    "text": "just crash and crash and crash yeah",
    "start": "3154640",
    "end": "3159520"
  },
  {
    "start": "3158000",
    "end": "3190000"
  },
  {
    "text": "okay so how how to find them right so so of course uh with any kind of uh",
    "start": "3159920",
    "end": "3167119"
  },
  {
    "text": "percent and you're writing to memory again so you're probably going to find that with address sanitizer uh but but",
    "start": "3167119",
    "end": "3173599"
  },
  {
    "text": "also gcc and clang have had uh for mastering warnings uh for many many years",
    "start": "3173599",
    "end": "3179440"
  },
  {
    "text": "and and this is also a shout out to to the technique of compiling your program with many compilers",
    "start": "3179440",
    "end": "3185680"
  },
  {
    "text": "which is a very good thing for finding different kinds of bugs",
    "start": "3185680",
    "end": "3190640"
  },
  {
    "text": "um okay so we have this split uh here between systems programming and",
    "start": "3190800",
    "end": "3197760"
  },
  {
    "text": "and binary exploitation and unfortunately for me the overlap between these two groups is",
    "start": "3197760",
    "end": "3203599"
  },
  {
    "text": "very very small and if you talk to a lot of people who do binary exploitation they will just tell",
    "start": "3203599",
    "end": "3210400"
  },
  {
    "text": "you that they're really terrible programmers and and just write shitty c and that's all",
    "start": "3210400",
    "end": "3215920"
  },
  {
    "text": "they do on the other side you have have a c and c plus plus programmers who generally",
    "start": "3215920",
    "end": "3221359"
  },
  {
    "text": "don't really know how this exploit business works and so",
    "start": "3221359",
    "end": "3226400"
  },
  {
    "text": "we need some kind of overlap here to learn from each other or we're going to continue making the same mistakes over",
    "start": "3226400",
    "end": "3231599"
  },
  {
    "text": "and over again so so we had the span in time from 2000 to",
    "start": "3231599",
    "end": "3237200"
  },
  {
    "text": "2022 and and we keep on seeing bugs that we",
    "start": "3237200",
    "end": "3242720"
  },
  {
    "text": "should have like been able to to eliminate a long time ago but we keep on making the same mistakes",
    "start": "3242720",
    "end": "3250119"
  },
  {
    "text": "and so yeah so we'd like to think that we are living in the future we have the technology",
    "start": "3250640",
    "end": "3256160"
  },
  {
    "text": "uh and and uh and the mp3 players are much better now than they were",
    "start": "3256160",
    "end": "3263200"
  },
  {
    "text": "i i i have to say i think it was like 2001 when the original ipod was released which i still think is like an awesome",
    "start": "3263280",
    "end": "3270000"
  },
  {
    "text": "piece of technology um you could like it had a hard drive you",
    "start": "3270000",
    "end": "3275119"
  },
  {
    "text": "could like have all of your music in there it was awesome for its time it was absolutely amazing and okay sorry um",
    "start": "3275119",
    "end": "3283440"
  },
  {
    "text": "i got distracted um so so we'd like to think we're living in the future but maybe we're just kind of",
    "start": "3283440",
    "end": "3288720"
  },
  {
    "text": "living in a more like functional version of 2000 um",
    "start": "3288720",
    "end": "3294480"
  },
  {
    "start": "3293000",
    "end": "3371000"
  },
  {
    "text": "so we we need some way to to have the past inform the future and that that requires us to to to learn from each",
    "start": "3294480",
    "end": "3301520"
  },
  {
    "text": "other and be open to listening to people from other communities and maybe have more of a cross-pollination between",
    "start": "3301520",
    "end": "3306720"
  },
  {
    "text": "communities where we actually go and talk and listen to each other more",
    "start": "3306720",
    "end": "3311920"
  },
  {
    "text": "um and the funny thing is i'm going to do a version of this talk at a c plus plus conference",
    "start": "3311920",
    "end": "3317680"
  },
  {
    "text": "on friday and they're going to understand",
    "start": "3317680",
    "end": "3323520"
  },
  {
    "text": "uh parts of this presentation that maybe for most of you what's like woohoo",
    "start": "3323520",
    "end": "3328640"
  },
  {
    "text": "but they're not going like some parts of this uh presentation that you probably thought was like",
    "start": "3328640",
    "end": "3335119"
  },
  {
    "text": "totally normal they won't understand and and so this whole talk is kind of",
    "start": "3335119",
    "end": "3340319"
  },
  {
    "text": "balancing that that edge between these two communities trying to like kind of show",
    "start": "3340319",
    "end": "3346079"
  },
  {
    "text": "uh the two sides of the same coin and and i and i am a seepless plus",
    "start": "3346079",
    "end": "3351839"
  },
  {
    "text": "programmer so i also have to say that you know don't hate on c plus plus just because of this",
    "start": "3351839",
    "end": "3358720"
  },
  {
    "text": "it is it is it is a really fun language and and uh it's an amazingly complex",
    "start": "3359520",
    "end": "3364880"
  },
  {
    "text": "language but it is a super fun and uh and um i just want to thank you for all for coming and if you have any questions",
    "start": "3364880",
    "end": "3371680"
  },
  {
    "text": "i i do have a few minutes yes it's okay",
    "start": "3371680",
    "end": "3377710"
  },
  {
    "text": "[Applause]",
    "start": "3377710",
    "end": "3383920"
  },
  {
    "text": "any questions come on one question",
    "start": "3383920",
    "end": "3390760"
  },
  {
    "text": "the consequences of it if you override the buffer will just lead to a crash or",
    "start": "3401040",
    "end": "3406799"
  },
  {
    "text": "can you exploit it somewhere yeah for example we could use it for the first one right because for",
    "start": "3406799",
    "end": "3413280"
  },
  {
    "text": "the first one to do to do the exploitation of the let's see if i can go back to the slider",
    "start": "3413280",
    "end": "3419760"
  },
  {
    "text": "i'm really good at max by the way okay that was let's see if i can find that",
    "start": "3419920",
    "end": "3425040"
  },
  {
    "text": "so if we go to here uh",
    "start": "3425040",
    "end": "3430640"
  },
  {
    "start": "3430000",
    "end": "3599000"
  },
  {
    "text": "let's see uh so so imagine that that uh the overflow that we had",
    "start": "3430640",
    "end": "3436640"
  },
  {
    "text": "was here right so so we had a buffer that was allocated on the heap",
    "start": "3436640",
    "end": "3442319"
  },
  {
    "text": "and we had an overflow vulnerability here so now we can overwrite down here",
    "start": "3442319",
    "end": "3448000"
  },
  {
    "text": "overwriting uh here with the where and the what that we want later on when this is freed",
    "start": "3448000",
    "end": "3455280"
  },
  {
    "text": "then we will uh we'll do our right right where and and that's often what you see today",
    "start": "3455280",
    "end": "3460960"
  },
  {
    "text": "is that most uh exploitation of a modern applications involve a chain like that",
    "start": "3460960",
    "end": "3468000"
  },
  {
    "text": "uh so so you will have uh have for example a hepa for overflow reading",
    "start": "3468000",
    "end": "3473760"
  },
  {
    "text": "leading to this use after free which you know things like that uh so yeah it's a good",
    "start": "3473760",
    "end": "3479760"
  },
  {
    "text": "question",
    "start": "3479760",
    "end": "3482079"
  },
  {
    "text": "well okay so i might my experience with c sharp is like very small but i have like a talk",
    "start": "3490960",
    "end": "3497520"
  },
  {
    "text": "um no so so uh the the thing is what you will often see with with uh vermobilities and and and c",
    "start": "3497520",
    "end": "3505280"
  },
  {
    "text": "sharp and java and things if you're going to go for native uh vulnerabilities there you'll have to go",
    "start": "3505280",
    "end": "3511280"
  },
  {
    "text": "against the the the virtual machine in some sort or against some kind of of",
    "start": "3511280",
    "end": "3516400"
  },
  {
    "text": "native api so so anytime c sharp is using some kind of underlying",
    "start": "3516400",
    "end": "3523119"
  },
  {
    "text": "native api uh but you will also see for example in another type of managed language which",
    "start": "3523119",
    "end": "3528480"
  },
  {
    "text": "is like javascript and [Music] then it's often today going against uh",
    "start": "3528480",
    "end": "3534960"
  },
  {
    "text": "the jit so so and creating memory errors in the jit",
    "start": "3534960",
    "end": "3540400"
  },
  {
    "text": "um just in time compiler um and and you could probably do that with",
    "start": "3540400",
    "end": "3546880"
  },
  {
    "text": "with c sharp stuff as well but it's not as interesting so i don't think the research is like as advanced because",
    "start": "3546880",
    "end": "3552160"
  },
  {
    "text": "it's much more fun if you go to a website and that causes you to be exploited locally",
    "start": "3552160",
    "end": "3557359"
  },
  {
    "text": "um yeah but i i'm not like a super expert in c sharp sorry yeah",
    "start": "3557359",
    "end": "3564798"
  },
  {
    "text": "well the the plan is okay so the plan is um i'm i'm so so my plan is that i want to make a",
    "start": "3567839",
    "end": "3575119"
  },
  {
    "text": "follow-up training to my my insecure sleepless plus and and the idea there is that the whole training is going to be",
    "start": "3575119",
    "end": "3581040"
  },
  {
    "text": "exploiting doom basically so so i'm basically now just like",
    "start": "3581040",
    "end": "3586640"
  },
  {
    "text": "looking around finding vulnerabilities and then the idea is that that the students will then set up chains and then do stuff like i don't know like get",
    "start": "3586640",
    "end": "3593599"
  },
  {
    "text": "more lives or shoot or i don't know stuff uh so so that's the plan i haven't gotten that far with it yet but but it's",
    "start": "3593599",
    "end": "3600720"
  },
  {
    "text": "it's the beginning of that yeah any more questions oh",
    "start": "3600720",
    "end": "3607280"
  },
  {
    "text": "yes go yes i was wondering",
    "start": "3607280",
    "end": "3612960"
  },
  {
    "text": "this kind um exploit if you're running in the cloud and if you need access to the host",
    "start": "3612960",
    "end": "3618559"
  },
  {
    "text": "or is it am i safer in the cloud",
    "start": "3618559",
    "end": "3622720"
  },
  {
    "text": "okay are you safer in the cloud um but the thing is",
    "start": "3623760",
    "end": "3628960"
  },
  {
    "text": "the the the this type of application basically is based around getting and that's the same true basically for",
    "start": "3628960",
    "end": "3635599"
  },
  {
    "text": "anything you need to get your data in somehow and if you're running in the cloud you are getting data in somehow or",
    "start": "3635599",
    "end": "3641040"
  },
  {
    "text": "you're just standing there and not doing anything so so you're getting requests you're getting things",
    "start": "3641040",
    "end": "3646079"
  },
  {
    "text": "anything that you're running on any vulnerabilities there will be an issue for you too so if any",
    "start": "3646079",
    "end": "3651839"
  },
  {
    "text": "kind of uh like for example you had many years ago you had heartbleed",
    "start": "3651839",
    "end": "3656960"
  },
  {
    "text": "vulnerability which would then you know leak all of your keys in the cloud and anything that you have that is",
    "start": "3656960",
    "end": "3663680"
  },
  {
    "text": "accessible from from this virtual this container or whatever it is that is",
    "start": "3663680",
    "end": "3669839"
  },
  {
    "text": "running i will also be accessible for anyone who has breached uh you and so that would be all your",
    "start": "3669839",
    "end": "3675440"
  },
  {
    "text": "customer data and those kinds of things so so yeah it's it's",
    "start": "3675440",
    "end": "3681760"
  },
  {
    "text": "and i think today that's probably more popular like going after cloud stuff because there's that's where",
    "start": "3681760",
    "end": "3688559"
  },
  {
    "text": "the data is um yeah i was basically going to add to that my original question was",
    "start": "3688559",
    "end": "3695440"
  },
  {
    "text": "what exploit is there really for do because you're running doom as a local user into special privileges it doesn't",
    "start": "3695440",
    "end": "3701200"
  },
  {
    "text": "do much network communication with any at all so by exploiting do what you actually achieve",
    "start": "3701200",
    "end": "3707040"
  },
  {
    "text": "and then the flip of the flip side of that is that when you run stuff in the cloud it's all based on network uh",
    "start": "3707040",
    "end": "3712160"
  },
  {
    "text": "transactions and running on other people's systems so i would say that an exploit is much more likely",
    "start": "3712160",
    "end": "3718240"
  },
  {
    "text": "in a cloud scenario or is it much more damaging in a class scenario certainly than it is for a local application yeah",
    "start": "3718240",
    "end": "3723839"
  },
  {
    "text": "no so so okay so let's okay let's see if i can uh because i forgot to repeat questions earlier um so how how would",
    "start": "3723839",
    "end": "3730480"
  },
  {
    "text": "you if you want to go you can go by the way okay i won't be like i won't be offended um",
    "start": "3730480",
    "end": "3735599"
  },
  {
    "text": "uh uh yeah so so uh what kind of interesting ways can you attack doom so one of the things one of the cool",
    "start": "3735599",
    "end": "3741680"
  },
  {
    "text": "features of doom for people who were like playing with doom like in the in the 90s was also that it had like",
    "start": "3741680",
    "end": "3747280"
  },
  {
    "text": "network playing so you could play uh on your local area network with other",
    "start": "3747280",
    "end": "3752880"
  },
  {
    "text": "other people also playing dooms you had multiplayer um capabilities but like in the lan",
    "start": "3752880",
    "end": "3758720"
  },
  {
    "text": "a kind of scenario okay this is like for i'm sorry young people but you know",
    "start": "3758720",
    "end": "3764799"
  },
  {
    "text": "it was it was the technology at the time uh so so there was a network uh player mode for for for doom but also in",
    "start": "3764799",
    "end": "3771520"
  },
  {
    "text": "addition you had to load the game uh from a file and you also have saved file um",
    "start": "3771520",
    "end": "3777680"
  },
  {
    "text": "and and saved file or saved game files have been used uh to to uh to root uh",
    "start": "3777680",
    "end": "3783839"
  },
  {
    "text": "lots of of the different devices um and and also the game itself it's a binary file so you have to download it",
    "start": "3783839",
    "end": "3790640"
  },
  {
    "text": "from the internet and so if you're it's a typical like pirating kind of thing you're just gonna go and grab a file from the internet and you run it on your",
    "start": "3790640",
    "end": "3797440"
  },
  {
    "text": "machine uh so so there are hopefully a bunch of different ways",
    "start": "3797440",
    "end": "3803039"
  },
  {
    "text": "that we can and if there's not enough ways to make it vulnerable i can make new ways",
    "start": "3803039",
    "end": "3811318"
  },
  {
    "text": "that's the whole point um yeah any more questions",
    "start": "3812480",
    "end": "3818079"
  },
  {
    "text": "rude um okay uh no okay so so the thing the the truth of the matter is that",
    "start": "3830079",
    "end": "3835119"
  },
  {
    "text": "basically uh even if you're in a managed language what you're running on is usually written in these languages uh so",
    "start": "3835119",
    "end": "3840960"
  },
  {
    "text": "so your operating systems your compilers your vms your so it's fun for me to go to java conferences because i can go to",
    "start": "3840960",
    "end": "3847280"
  },
  {
    "text": "any kind of java talk that is like from the people who are making the vms it's just c plus",
    "start": "3847280",
    "end": "3852799"
  },
  {
    "text": "plus all the way it's like it's like when your vm crashes and it says segmentation fault it's like",
    "start": "3852799",
    "end": "3858640"
  },
  {
    "text": "yes thank you this is our world um so so yes you you can live in a sort",
    "start": "3858640",
    "end": "3863920"
  },
  {
    "text": "of like um a pretend environment where you can abstract yourself from the machine but the machine is over always there and it",
    "start": "3863920",
    "end": "3870720"
  },
  {
    "text": "is always you know there's a there's it's just yeah it's bits all the way",
    "start": "3870720",
    "end": "3876720"
  },
  {
    "text": "um but yeah few like i i love that i i think this is fun so",
    "start": "3876720",
    "end": "3883280"
  },
  {
    "text": "um any more questions no okay go",
    "start": "3883280",
    "end": "3888360"
  },
  {
    "text": "[Applause]",
    "start": "3888360",
    "end": "3893739"
  },
  {
    "text": "you",
    "start": "3899760",
    "end": "3901839"
  }
]