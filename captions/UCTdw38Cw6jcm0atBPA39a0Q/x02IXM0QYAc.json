[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "Hey good morning NDC Minnesota hopefully",
    "start": "5420",
    "end": "10440"
  },
  {
    "text": "you're here for the right talk docker on Windows it's gonna be a very kind of",
    "start": "10440",
    "end": "15750"
  },
  {
    "text": "fast-paced session and there's a lot of demos for us to get through so it's not too many slides well we'll just kind of",
    "start": "15750",
    "end": "22500"
  },
  {
    "text": "start off with an introduction to myself so I'm currently a software developer",
    "start": "22500",
    "end": "29390"
  },
  {
    "text": "also very passionate about site reliability engineering so I'm advocate for that within our",
    "start": "29390",
    "end": "34920"
  },
  {
    "text": "company and I'm also co-organizer over Shropshire Deb's user group for",
    "start": "34920",
    "end": "40620"
  },
  {
    "text": "developers based in Shropshire UK so if you've not noticed already my accent isn't from around here so apologies if",
    "start": "40620",
    "end": "48420"
  },
  {
    "text": "you can't understand me as well so the aim of this session we're going to go",
    "start": "48420",
    "end": "55199"
  },
  {
    "start": "51000",
    "end": "92000"
  },
  {
    "text": "through and what docker is and why you'd potentially want to use it we're then",
    "start": "55199",
    "end": "60870"
  },
  {
    "text": "going to look at okay moving forward to Matt if you want to get started how do you do that on Windows next we're gonna",
    "start": "60870",
    "end": "68250"
  },
  {
    "text": "take a dotnet Core MVC application that's running inside Visual Studio and",
    "start": "68250",
    "end": "73470"
  },
  {
    "text": "then we're going to convert that to both build and deploy using docker and then",
    "start": "73470",
    "end": "79530"
  },
  {
    "text": "lastly we're going to look at how can we use a feature of CloudFlare called agro tunnel to then expose our container",
    "start": "79530",
    "end": "86130"
  },
  {
    "text": "securely to the Internet making use of all of cloud less services as well so",
    "start": "86130",
    "end": "93540"
  },
  {
    "start": "92000",
    "end": "127000"
  },
  {
    "text": "what are containers so containers wrap up a piece of software in a complete file system that contains everything",
    "start": "93540",
    "end": "101010"
  },
  {
    "text": "that it needs to run including the code the runtime the system tools and that's also the system libraries it's basically",
    "start": "101010",
    "end": "109050"
  },
  {
    "text": "just a way of saying we package up your application and its dependencies",
    "start": "109050",
    "end": "114440"
  },
  {
    "text": "containers as well I also know what we call a running instance of an image so",
    "start": "114440",
    "end": "120750"
  },
  {
    "text": "we actually build a image and then we create a container from that from the image so what is docker exactly so",
    "start": "120750",
    "end": "131870"
  },
  {
    "start": "127000",
    "end": "185000"
  },
  {
    "text": "docker was kind of started in around 2000 and with its initial release with its first",
    "start": "131870",
    "end": "139200"
  },
  {
    "text": "full production release for Linux in 2014 so a Linux is docker is a tool that",
    "start": "139200",
    "end": "147500"
  },
  {
    "text": "builds on the concept of containers and images and is one of the various implementations of that and that then",
    "start": "147500",
    "end": "154500"
  },
  {
    "text": "allows us to create those containers and as of a few years ago we can now do that on Windows as well so you can run it on",
    "start": "154500",
    "end": "160650"
  },
  {
    "text": "Linux Windows and Mac OS although today we're focusing just on the window side of things cool features are coming out",
    "start": "160650",
    "end": "169260"
  },
  {
    "text": "all the time for the Windows platform but just because of its age compared to the looks it's not as mature so and",
    "start": "169260",
    "end": "176900"
  },
  {
    "text": "occasionally you will see features out there that just unfortunately don't work on Windows at the moment but they are actively working on a lot of those so",
    "start": "176900",
    "end": "186450"
  },
  {
    "start": "185000",
    "end": "265000"
  },
  {
    "text": "how can containers help you and your work I think we've all we've all been",
    "start": "186450",
    "end": "191970"
  },
  {
    "text": "there we've all kind of wrote some code we've deployed it it kind of worked in dev or it worked on my machine and then",
    "start": "191970",
    "end": "198990"
  },
  {
    "text": "we get to production and it burns Darin usually because of configuration drift",
    "start": "198990",
    "end": "205020"
  },
  {
    "text": "or because of missing runtimes on those servers and traditionally ups used to be the people to try and clear that up for",
    "start": "205020",
    "end": "211410"
  },
  {
    "text": "us so what dr. help docker tries to help us with that and that's because it can then help us",
    "start": "211410",
    "end": "218459"
  },
  {
    "text": "to reduce those deployment issues because we're using the same container to run on our local machine that then we",
    "start": "218459",
    "end": "224250"
  },
  {
    "text": "are on the dev machine on the QA machine and in also production and it also",
    "start": "224250",
    "end": "229950"
  },
  {
    "text": "helped kind of reduce the kind of single point of failure as well from a human perspective people that have worked and",
    "start": "229950",
    "end": "236550"
  },
  {
    "text": "some organizations might know there's kind of one or two people that kind of know everything and when productions on",
    "start": "236550",
    "end": "241680"
  },
  {
    "text": "fire those the people that go and rescue it and we kind of have to then guess and trust them to know what's going on where",
    "start": "241680",
    "end": "247190"
  },
  {
    "text": "docker in containers forces you to put some of that configuration into the container so it's documented that way",
    "start": "247190",
    "end": "254510"
  },
  {
    "text": "and then when you want to release in various various environments the only difference is you inject different",
    "start": "254510",
    "end": "259980"
  },
  {
    "text": "configuration through environment variables or configuration files so if",
    "start": "259980",
    "end": "267150"
  },
  {
    "start": "265000",
    "end": "345000"
  },
  {
    "text": "you're going to use vodka or any other can containerization technology there is",
    "start": "267150",
    "end": "272550"
  },
  {
    "text": "going to be some mindset changes that you're gonna have to kind of go through so the first one is a lot of us are used",
    "start": "272550",
    "end": "281280"
  },
  {
    "text": "to you kind of having snow what we call snowflake servers so somebody hand-built them the documentation is very poor it's",
    "start": "281280",
    "end": "288540"
  },
  {
    "text": "really hard to recreate that server when it dies or if you want to scale that server so you need to start treating",
    "start": "288540",
    "end": "294360"
  },
  {
    "text": "kind of your docker containers as cattle rather than a snowflakes and one way we",
    "start": "294360",
    "end": "300360"
  },
  {
    "text": "do that like I mentioned in the previous slide is configuration through code so we put all of our configuration into the",
    "start": "300360",
    "end": "306870"
  },
  {
    "text": "doctor file so we know exactly what what goes into that image what configurations needed and building",
    "start": "306870",
    "end": "313530"
  },
  {
    "text": "on the kind of mindset changes if the container starts misbehaving unlike the",
    "start": "313530",
    "end": "319080"
  },
  {
    "text": "old days where you go and troubleshoot that server you don't with containers you typically just kill that container and spin up a new instance of the",
    "start": "319080",
    "end": "324750"
  },
  {
    "text": "container and typically that will resolve most of your issues and that also plays in well with stuff like chaos",
    "start": "324750",
    "end": "331110"
  },
  {
    "text": "monkey from Netflix which then randomly kill some of their containers and services and then you can see how your",
    "start": "331110",
    "end": "336840"
  },
  {
    "text": "infrastructure responds to that so that's a good tool that wouldn't you get a bit more in depth with docker that you",
    "start": "336840",
    "end": "342420"
  },
  {
    "text": "can start looking at chaos engineering as well so what are the differences",
    "start": "342420",
    "end": "348120"
  },
  {
    "start": "345000",
    "end": "437000"
  },
  {
    "text": "between virtual machines and containers so on the left hand side of the image",
    "start": "348120",
    "end": "355050"
  },
  {
    "text": "we've got a traditional kind of virtual machine setup so we've got our infrastructure we've got our host",
    "start": "355050",
    "end": "361380"
  },
  {
    "text": "operating system which is obviously probably to be Windows Server or potentially VMware or something to that",
    "start": "361380",
    "end": "367290"
  },
  {
    "text": "that nature sorry and that also includes the hypervisor we think about big thick",
    "start": "367290",
    "end": "373560"
  },
  {
    "text": "guest OS is on top libraries that we need for the application and then our application itself but it's very",
    "start": "373560",
    "end": "379560"
  },
  {
    "text": "wasteful in this approach because you've got a separate big fat OS install for",
    "start": "379560",
    "end": "384870"
  },
  {
    "text": "every every application whereas on the right hand side with the container",
    "start": "384870",
    "end": "390930"
  },
  {
    "text": "approach you can see that we actually share the operating system from the host and that the only difference is then we",
    "start": "390930",
    "end": "397260"
  },
  {
    "text": "just we've just got our application and the libraries that our application depends on and we run that on top",
    "start": "397260",
    "end": "402600"
  },
  {
    "text": "the darker engine and the advantages of using containers in this scenario is",
    "start": "402600",
    "end": "409290"
  },
  {
    "text": "that containers are extremely lightweight compared to virtual machines which means that they're a lot smaller footprint faster startup times and also",
    "start": "409290",
    "end": "418290"
  },
  {
    "text": "more bit more reliable as we've covered in previous slides so using containers you can have a lot more instances of",
    "start": "418290",
    "end": "424590"
  },
  {
    "text": "your application running on the same amount of infrastructure and then you can independently scale whichever",
    "start": "424590",
    "end": "429600"
  },
  {
    "text": "service that you need rather than scaling a whole server that's running ten applications for example in the",
    "start": "429600",
    "end": "439230"
  },
  {
    "text": "windows world however that we've actually got two types of containers we've got something we call Windows",
    "start": "439230",
    "end": "445440"
  },
  {
    "text": "Server containers and we've also got hyper-v containers as you can probably see the hyper-v container is a little",
    "start": "445440",
    "end": "452010"
  },
  {
    "text": "bit more like a virtual machine it does have a separate Windows kernel so it doesn't share the kernel from the host",
    "start": "452010",
    "end": "457860"
  },
  {
    "text": "but that Windows kernel and the OS is a lot smaller than what you traditionally stay on a VM by a few degrees the reason",
    "start": "457860",
    "end": "467700"
  },
  {
    "text": "that we've got two two different types as well you can use both on Windows Server 2016 but on Windows 10 you're",
    "start": "467700",
    "end": "474780"
  },
  {
    "text": "limited to the hyper-v containers only and that's because Windows 10 doesn't have some of the supports needed for",
    "start": "474780",
    "end": "480780"
  },
  {
    "text": "Windows Server containers if you're working in a very kind of secure environment as well you'll probably want",
    "start": "480780",
    "end": "487140"
  },
  {
    "text": "to be looking towards the hyper-v containers just because there's a higher degree of separation there because you have got your own kernel so if you want",
    "start": "487140",
    "end": "497220"
  },
  {
    "start": "494000",
    "end": "623000"
  },
  {
    "text": "to get started with docker how do you do that so doc oh I've got a product called",
    "start": "497220",
    "end": "503940"
  },
  {
    "text": "docker for Windows with me two seconds",
    "start": "503940",
    "end": "512180"
  },
  {
    "text": "so this link in the slides talks you to take take to the dacha documentation",
    "start": "516419",
    "end": "521680"
  },
  {
    "text": "which walks you through the installation but it's basically just download the exe install it and then you can go away",
    "start": "521680",
    "end": "527829"
  },
  {
    "text": "straight ahead and launch it it's probably a little bit hard to see on the on the screen but you've got Ducker in",
    "start": "527829",
    "end": "535089"
  },
  {
    "text": "the bottom right hand corner here and then you can right-click it and you've got various settings so currently I'm in",
    "start": "535089",
    "end": "540190"
  },
  {
    "text": "Windows mode so it's get offering me to switch to Linux containers at the moment",
    "start": "540190",
    "end": "545950"
  },
  {
    "text": "you can if you're on the stable branch of docker for Windows you can only run Windows all in its containers there is",
    "start": "545950",
    "end": "552910"
  },
  {
    "text": "an experimental feature that's currently in the release at the moment if you turn on experimental mode where you can",
    "start": "552910",
    "end": "558010"
  },
  {
    "text": "actually run Windows and Linux container side by side and then Network them together",
    "start": "558010",
    "end": "563790"
  },
  {
    "text": "so once you've actually installed docker it also during the installation install",
    "start": "573180",
    "end": "579120"
  },
  {
    "text": "hyper-v if you haven't got that enabled as well and you also need to enable virtualization in the BIOS as well so if",
    "start": "579120",
    "end": "586080"
  },
  {
    "text": "you haven't done that it'll prompt you to do that before doctor for Windows will actually work if you're on Windows",
    "start": "586080",
    "end": "591930"
  },
  {
    "text": "7 or 8 or 10 home there is a product called docker toolbox but that's their",
    "start": "591930",
    "end": "598950"
  },
  {
    "text": "kind of legacy product which they but they're not really pushing as much anymore but that does allow you to run kind of Linux based containers using a",
    "start": "598950",
    "end": "606510"
  },
  {
    "text": "different hypervisor other than hyper-v such as VirtualBox and then once you've",
    "start": "606510",
    "end": "612450"
  },
  {
    "text": "installed it you'll get this little pop-up and dr. I'll say doctors know up and running and that you can then go",
    "start": "612450",
    "end": "617940"
  },
  {
    "text": "ahead and open up para shell and start start playing with docker so for our",
    "start": "617940",
    "end": "625170"
  },
  {
    "start": "623000",
    "end": "994000"
  },
  {
    "text": "first demo we're going to go through the docker hub some of the basic dr commands",
    "start": "625170",
    "end": "630330"
  },
  {
    "text": "and then and then get our first container up and running using a pre-built pre-built image in the demo",
    "start": "630330",
    "end": "639900"
  },
  {
    "text": "we're actually gonna be using what we call the docker hub so the dr. hope is a public registry and the public registry",
    "start": "639900",
    "end": "645630"
  },
  {
    "text": "is just a way of people being able to share images but docker has recently come out with something called the dr.",
    "start": "645630",
    "end": "651690"
  },
  {
    "text": "store which they're slowly to one of my great people onto and before today we are just going to focus on the docker",
    "start": "651690",
    "end": "658200"
  },
  {
    "text": "hub",
    "start": "658200",
    "end": "660470"
  },
  {
    "text": "so I'm just gonna head over to the docker hub and I'm gonna search for a prebuilt",
    "start": "664480",
    "end": "669550"
  },
  {
    "text": "image that I've gone ahead and built ahead of time for us that I this is the",
    "start": "669550",
    "end": "677560"
  },
  {
    "text": "particular image here it's something that I just created quickly so you can see that I've added a description or or",
    "start": "677560",
    "end": "683320"
  },
  {
    "text": "anything of that nature yet we if we pop over to the tags section",
    "start": "683320",
    "end": "689500"
  },
  {
    "text": "it's a tags in docker a basically version so I've got this image here",
    "start": "689500",
    "end": "694600"
  },
  {
    "text": "called hello duck or 101 but you can have multiple versions of that but of that image so you could have version 1 2",
    "start": "694600",
    "end": "701320"
  },
  {
    "text": "3 4 and typically in Dhaka latest always points to whatever the latest build is so when you build you tag it with both",
    "start": "701320",
    "end": "708100"
  },
  {
    "text": "the version number from your build system and also latest as well and then push that up to your registry whether it",
    "start": "708100",
    "end": "714160"
  },
  {
    "text": "be docker hub or an internal registry or private registry in the cloud so I'm",
    "start": "714160",
    "end": "719560"
  },
  {
    "text": "just gonna head out head over to Hera she'll know is that big enough for",
    "start": "719560",
    "end": "726160"
  },
  {
    "text": "everybody ok I'm then gonna ask doctor to go and",
    "start": "726160",
    "end": "731170"
  },
  {
    "text": "pull that image from the docker store for us",
    "start": "731170",
    "end": "735600"
  },
  {
    "text": "if I don't specify the latest tag darker by default we'll add that for us and",
    "start": "741930",
    "end": "747090"
  },
  {
    "text": "pull all that but I'm gonna be explicit in these commands because it's a little bit easier to talk through so I don't",
    "start": "747090",
    "end": "754710"
  },
  {
    "text": "have this image locally but you can see that some of the what we call the layers already do exist so doc your images are",
    "start": "754710",
    "end": "763260"
  },
  {
    "text": "built on layers so every every kind of like command or action in the docker file which we'll see in the next demo is",
    "start": "763260",
    "end": "770190"
  },
  {
    "text": "kind of a separate layer and that's really handy so if you're using the same back like we call base image between",
    "start": "770190",
    "end": "775950"
  },
  {
    "text": "multiple layers you only have two all that data once and Duncan knows it's already got that that layer cached for",
    "start": "775950",
    "end": "781080"
  },
  {
    "text": "you on your machine so it's already gone ahead and pulled the other layers that it hasn't got and it's told us it's then",
    "start": "781080",
    "end": "787380"
  },
  {
    "text": "downloaded a newer newer image for us so we can go ahead now and run that image",
    "start": "787380",
    "end": "796010"
  },
  {
    "text": "now if I wish to run this command as it is it would run up the container for us",
    "start": "799700",
    "end": "805170"
  },
  {
    "text": "but it would keep hold of my console and any output from that machine would come straight to my console because I don't",
    "start": "805170",
    "end": "811290"
  },
  {
    "text": "want that I'm gonna give it the dash D option for detached mode so it'll start up the process for us and think like",
    "start": "811290",
    "end": "817770"
  },
  {
    "text": "give me my console back so that we can continue to work so doc is gonna go in",
    "start": "817770",
    "end": "826920"
  },
  {
    "text": "spirit spin up that process for us and when that's finished it should give me the console back in a moment",
    "start": "826920",
    "end": "833510"
  },
  {
    "text": "okay so that's now running so with docker if you want to see what containers are running the command these",
    "start": "840230",
    "end": "846330"
  },
  {
    "text": "docker PS so if we run that we can see that in the container and it has wrapped",
    "start": "846330",
    "end": "853470"
  },
  {
    "text": "the text unfortunately but the container OD is the same kind of Shore random ID",
    "start": "853470",
    "end": "859110"
  },
  {
    "text": "that you've got the top there but we only seen the first X characters for that we then can see the image name that",
    "start": "859110",
    "end": "867660"
  },
  {
    "text": "we that we've used the command that's currently running within that container which is what we call the entry point",
    "start": "867660",
    "end": "873830"
  },
  {
    "text": "we've then got the status for it so it was a created 26 seconds ago it's been",
    "start": "873830",
    "end": "879540"
  },
  {
    "text": "up for 12 seconds and we can see here that it's exposing pour 8 0 8 1 and then",
    "start": "879540",
    "end": "886649"
  },
  {
    "text": "lastly if you don't give your containers a name when you run them dock has got just a dictionary and it randomly picks",
    "start": "886649",
    "end": "893040"
  },
  {
    "text": "two words and mashes them together so if ever you've seen any other doctor talks you all as you go away and play with",
    "start": "893040",
    "end": "899339"
  },
  {
    "text": "yourself you'll see the occasional earth funny funny names if you want to be able",
    "start": "899339",
    "end": "905670"
  },
  {
    "text": "to see the logs in the container which I've see is quite important we've got the docker logs command so we can either",
    "start": "905670",
    "end": "912390"
  },
  {
    "text": "use part of the container ID or we can use the name for this so I'm just going to use the first few digits or character",
    "start": "912390",
    "end": "921149"
  },
  {
    "text": "sorry of the container ID and you can see that doc was gone away and grabbed",
    "start": "921149",
    "end": "926579"
  },
  {
    "text": "all those logs for us and then brought them to the console so we can see that we're hosting in production mode we're",
    "start": "926579",
    "end": "932070"
  },
  {
    "text": "listening on port 8/8 oh sorry I there are 8-1 and it tells us what the",
    "start": "932070",
    "end": "937800"
  },
  {
    "text": "application started so that's great but we currently don't have a way to know what IP address that containers use them",
    "start": "937800",
    "end": "944120"
  },
  {
    "text": "so this is where the docker inspector command comes in so dock or inspect command will allow us",
    "start": "944120",
    "end": "950070"
  },
  {
    "text": "to kind of inspect all the properties of that container so I'm just going to give it the container reference again and it",
    "start": "950070",
    "end": "958890"
  },
  {
    "text": "outputs a lot of data",
    "start": "958890",
    "end": "962029"
  },
  {
    "text": "so we can see the created day the ID the arguments but the bit that we're",
    "start": "964520",
    "end": "971750"
  },
  {
    "text": "interested in is towards the end of the file oh sorry output we've got this networks",
    "start": "971750",
    "end": "979670"
  },
  {
    "text": "section here and we can see here that we've got the IP address of our container now so if I copy that and head",
    "start": "979670",
    "end": "987290"
  },
  {
    "text": "back over to the browser so you can see",
    "start": "987290",
    "end": "996170"
  },
  {
    "text": "that this webpage now which is the NDC homepage which I've just scraped and put into a dotnet container running MVC is",
    "start": "996170",
    "end": "1004330"
  },
  {
    "text": "loaded and you can see that we've also in the CSS HTML view we've got the load time as well so that's the very basics",
    "start": "1004330",
    "end": "1012610"
  },
  {
    "text": "obviously of how do I pull a container how do I run that container hello",
    "start": "1012610",
    "end": "1017920"
  },
  {
    "text": "inspector how do I look at the logs after that's not very useful for us day-to-day we're going to want to build",
    "start": "1017920",
    "end": "1023290"
  },
  {
    "text": "our own applications into the containers so let's go ahead and we'll we'll do",
    "start": "1023290",
    "end": "1028390"
  },
  {
    "text": "that we will stop the container just to free up the resources so I'm just going to",
    "start": "1028390",
    "end": "1035110"
  },
  {
    "text": "quickly get a container ID again so",
    "start": "1035110",
    "end": "1043300"
  },
  {
    "text": "doctors then reiterated back to me what what container it's stopped but this time if we run docker PS the container",
    "start": "1043300",
    "end": "1050559"
  },
  {
    "text": "isn't there anymore except if we add - I - that will see",
    "start": "1050559",
    "end": "1055660"
  },
  {
    "text": "that actually the container is still there except it's now exited state so",
    "start": "1055660",
    "end": "1061150"
  },
  {
    "text": "that's still there on disk obviously wanting to be a good citizen of this docker house I'm going to clean that up image so I clean that container up now",
    "start": "1061150",
    "end": "1068200"
  },
  {
    "text": "so I'm good if issue the docker RM command and just remove that container",
    "start": "1068200",
    "end": "1074850"
  },
  {
    "text": "and now if we were in Dhaka PS that's why again it's complete completely gone",
    "start": "1074850",
    "end": "1080020"
  },
  {
    "text": "so demo - I'll - roll straight into that",
    "start": "1080020",
    "end": "1086320"
  },
  {
    "text": "we're going to take application which I'll show you running inside visual",
    "start": "1086320",
    "end": "1091450"
  },
  {
    "text": "studio now and we're going to build that into a doclet container as well as also",
    "start": "1091450",
    "end": "1098820"
  },
  {
    "text": "using a compose file and then spin that up as well",
    "start": "1098930",
    "end": "1103790"
  },
  {
    "text": "it's gonna meet some files from testing okay so this is our application inside",
    "start": "1113290",
    "end": "1122049"
  },
  {
    "text": "Visual Studio basic MVC application so we've got our controllers we've got our",
    "start": "1122049",
    "end": "1127809"
  },
  {
    "text": "views so I'm just going to spin this spin this up so we can see what it's like this is actually the Microsoft",
    "start": "1127809",
    "end": "1133330"
  },
  {
    "text": "music store database sample application so some of you have may have seen this before but it's just an easy and quick",
    "start": "1133330",
    "end": "1140110"
  },
  {
    "text": "quick demo",
    "start": "1140110",
    "end": "1143190"
  },
  {
    "start": "1161000",
    "end": "1540000"
  },
  {
    "text": "so here's our Music Store application we can see that we got some albums across the bottom here so we can just click on",
    "start": "1162160",
    "end": "1168400"
  },
  {
    "text": "turn any of those add it to our car as we'd expect and also remove it from our",
    "start": "1168400",
    "end": "1173440"
  },
  {
    "text": "cart so nothing special but just a basic website it's using sequel server on my",
    "start": "1173440",
    "end": "1179830"
  },
  {
    "text": "machine at the moment so as part of the demo we'll we'll look at using a database container as well I'm if you",
    "start": "1179830",
    "end": "1188350"
  },
  {
    "text": "are a visual studio user there is actually a plugin that you can get I'm seeing you can come down to sorry if",
    "start": "1188350",
    "end": "1195220"
  },
  {
    "text": "you're on the project you can say add dr. support and that I'll go away and",
    "start": "1195220",
    "end": "1200320"
  },
  {
    "text": "then create you some of the doctor files that we've saw but I'm gonna do that manually this time so I'm going to come",
    "start": "1200320",
    "end": "1206980"
  },
  {
    "text": "back to our directory I'm gonna create a",
    "start": "1206980",
    "end": "1212260"
  },
  {
    "text": "file called docker file with no file extension and I'm just gonna open that",
    "start": "1212260",
    "end": "1219130"
  },
  {
    "text": "up",
    "start": "1219130",
    "end": "1221370"
  },
  {
    "text": "so the first thing that you'll see most doctor files is the from statement so",
    "start": "1236210",
    "end": "1241590"
  },
  {
    "text": "that all the from command sorry and that tells us what base image are we going to use for this so because we've got a",
    "start": "1241590",
    "end": "1250340"
  },
  {
    "text": "asp.net core application I'm gonna use a image from Microsoft and this kind of",
    "start": "1250340",
    "end": "1257460"
  },
  {
    "text": "syntax highlighting of all the images here that's a plug-in that you can get for a visual studio code as well",
    "start": "1257460",
    "end": "1265130"
  },
  {
    "text": "so I'm gonna take their asp.net core build image so the build image is a lot",
    "start": "1276430",
    "end": "1283000"
  },
  {
    "text": "bigger than the standard image but it's got all of the build but build tools in the image that we need in order to",
    "start": "1283000",
    "end": "1289960"
  },
  {
    "text": "compile our code and then I'm also going to take the Nano server version of the",
    "start": "1289960",
    "end": "1295270"
  },
  {
    "text": "image so you've got nano server or Windows server core images if you're",
    "start": "1295270",
    "end": "1301870"
  },
  {
    "text": "running on Windows typically you want to try to use nano server where possible because I think is a lot more lightweight and a lot more cut down",
    "start": "1301870",
    "end": "1308140"
  },
  {
    "text": "compared to the Windows server core image and typically if you were an Internet core you can use the Nano",
    "start": "1308140",
    "end": "1313150"
  },
  {
    "text": "server image but if you're trying to use the full framework then you'll have to go to Windows server core so now that",
    "start": "1313150",
    "end": "1319810"
  },
  {
    "text": "we've got our from statement we need to tell doctor to copy some of our source code into this container so we can do",
    "start": "1319810",
    "end": "1325900"
  },
  {
    "text": "that using the copy command so I'm going to say copy from the root directory which is where the daka file exists and",
    "start": "1325900",
    "end": "1332980"
  },
  {
    "text": "copy it in just to the current location within the doctor file you can use a work work dir command to set a",
    "start": "1332980",
    "end": "1340060"
  },
  {
    "text": "particular folder within the container if you want so if you want it to always be in a certain folder you can do that but I'm happy with it just being at the",
    "start": "1340060",
    "end": "1346180"
  },
  {
    "text": "root for this demo we're then going to go ahead and tell docker to run the",
    "start": "1346180",
    "end": "1353020"
  },
  {
    "text": "dotnet publish commands that we're going to build build our website",
    "start": "1353020",
    "end": "1359280"
  },
  {
    "text": "telling that I want the release version of my website instead of debug",
    "start": "1366640",
    "end": "1372660"
  },
  {
    "text": "and then I'm going to ask it to say target in the.net core framework 2.0",
    "start": "1387360",
    "end": "1392620"
  },
  {
    "text": "because the sample application just target multiple runtimes and frameworks and then I'm going to put the output",
    "start": "1392620",
    "end": "1398530"
  },
  {
    "text": "from that publish command in just a slash output from the root I'm then",
    "start": "1398530",
    "end": "1406180"
  },
  {
    "text": "going to set my working directory to that output folder of our output that",
    "start": "1406180",
    "end": "1411580"
  },
  {
    "text": "we've just built and then we're going to use the entry point say run dotnet and",
    "start": "1411580",
    "end": "1420930"
  },
  {
    "text": "then we'll give it our D allow",
    "start": "1420930",
    "end": "1424890"
  },
  {
    "text": "so that's everything that we need in our dacha foil so we're using the base image we're copying our files into the image",
    "start": "1431960",
    "end": "1438679"
  },
  {
    "text": "we're doing a dotnet publish which I'll do the build for us we're then changing into the output directory and then we're",
    "start": "1438679",
    "end": "1445700"
  },
  {
    "text": "using our entry point command then telnet to start off with our website they allow so if I say back file and",
    "start": "1445700",
    "end": "1453350"
  },
  {
    "text": "head back over to perish I'll note our",
    "start": "1453350",
    "end": "1462080"
  },
  {
    "text": "docket to go ahead and build that image for us so I'm gonna tag it with my name",
    "start": "1462080",
    "end": "1468019"
  },
  {
    "text": "and then Music Store latest and then I'm",
    "start": "1468019",
    "end": "1474470"
  },
  {
    "text": "gonna put a full-stop or a period after the name of the tag so that's just giving darker the context over where to",
    "start": "1474470",
    "end": "1480950"
  },
  {
    "text": "start to copy those files from from the previous command so we're just saying use the root of the demo2 folder so doc",
    "start": "1480950",
    "end": "1491809"
  },
  {
    "text": "is now gonna go through step by step each of the each of these kind of step creates a separate layer so you can see",
    "start": "1491809",
    "end": "1497539"
  },
  {
    "text": "that we've got a separate ID for each layer the dotnet publish is probably going to take around a minute and a half",
    "start": "1497539",
    "end": "1503809"
  },
  {
    "text": "or two minutes just based on the Wi-Fi speed and some kind of unique",
    "start": "1503809",
    "end": "1510429"
  },
  {
    "text": "performance issues that doctor has on Windows compared to Linux so we'll let",
    "start": "1510429",
    "end": "1516379"
  },
  {
    "text": "that run for a moment",
    "start": "1516379",
    "end": "1520899"
  },
  {
    "text": "just while that's running I'll quickly show you something so if you're interested in any of the source code for",
    "start": "1539170",
    "end": "1548050"
  },
  {
    "start": "1540000",
    "end": "1620000"
  },
  {
    "text": "these demos it's all online on github and there's a link on the last slide for it but you've got everything that you'd",
    "start": "1548050",
    "end": "1557680"
  },
  {
    "text": "want to go through any of these demos including readme files which I'll take you through exactly the same steps",
    "start": "1557680",
    "end": "1564030"
  },
  {
    "text": "step-by-step giving you the commands and explain to you them what what they do so right that'll be available as well for",
    "start": "1564030",
    "end": "1570520"
  },
  {
    "text": "you",
    "start": "1570520",
    "end": "1572700"
  },
  {
    "text": "looks like the Wi-Fi is really fast today",
    "start": "1589279",
    "end": "1593080"
  },
  {
    "text": "well that's well that's really as well I'll quickly just jump back to our docket file so at the moment where I was",
    "start": "1618460",
    "end": "1625820"
  },
  {
    "start": "1620000",
    "end": "1770000"
  },
  {
    "text": "he using the asp net core build image obviously if you were to be doing this",
    "start": "1625820",
    "end": "1631130"
  },
  {
    "text": "in production you don't want to be kind of running you're running your compiled source code using that base image and so",
    "start": "1631130",
    "end": "1637940"
  },
  {
    "text": "doctors actually got something called multi stage builds so if I was to go into this file and put in a second from",
    "start": "1637940",
    "end": "1644120"
  },
  {
    "text": "statement for example and use just their",
    "start": "1644120",
    "end": "1649520"
  },
  {
    "text": "normal asp net core image that's basically just the just the runtime",
    "start": "1649520",
    "end": "1655760"
  },
  {
    "text": "without all of the extra tools and then what i could do is i could give this this top build staff an alias such as",
    "start": "1655760",
    "end": "1661880"
  },
  {
    "text": "build and then this one is runtime and",
    "start": "1661880",
    "end": "1668600"
  },
  {
    "text": "then and then further down here i can",
    "start": "1668600",
    "end": "1675230"
  },
  {
    "text": "then go and copy the output so i can reference the top container using the build tag and say go into the the",
    "start": "1675230",
    "end": "1681470"
  },
  {
    "text": "basically build container and copy my compiled output and open it into this other container and what that will do is",
    "start": "1681470",
    "end": "1687289"
  },
  {
    "text": "it will give you a much much smaller and image size which is what you ideally want to be running in production so i'm",
    "start": "1687289",
    "end": "1695120"
  },
  {
    "text": "just gonna back out those changes so it",
    "start": "1695120",
    "end": "1701240"
  },
  {
    "text": "looks like it's still going",
    "start": "1701240",
    "end": "1704408"
  },
  {
    "text": "there we are finally so you can see in the steps it's gone ahead and used that",
    "start": "1714980",
    "end": "1722570"
  },
  {
    "text": "base image it's copied our files it's when our publish command its then change directions into our output directory and",
    "start": "1722570",
    "end": "1729380"
  },
  {
    "text": "then it set the final step to our entry point which is our music store website and then it successfully tells us that",
    "start": "1729380",
    "end": "1736520"
  },
  {
    "text": "it's tagged the image as well with the tag that I gave it now as I mentioned before this website actually depends on",
    "start": "1736520",
    "end": "1742790"
  },
  {
    "text": "a database and at the moment I haven't set up my docker instance to be able to",
    "start": "1742790",
    "end": "1748040"
  },
  {
    "text": "access the resources on my host machine so I'm going to give it a database container for that for the web application to successfully start off so",
    "start": "1748040",
    "end": "1756130"
  },
  {
    "text": "I'm gonna go ahead and create a docker compose file and I am gonna cheat and",
    "start": "1756130",
    "end": "1763820"
  },
  {
    "text": "just add one that I prepared earlier",
    "start": "1763820",
    "end": "1767860"
  },
  {
    "start": "1770000",
    "end": "2110000"
  },
  {
    "text": "so a docker compose file allows you to spin up your services or images sorry",
    "start": "1772460",
    "end": "1779509"
  },
  {
    "text": "so I'm declaring on my services here so I've got one service called music store",
    "start": "1779509",
    "end": "1784700"
  },
  {
    "text": "web which is just a name that I'm giving to that particular service I then give it the image which is the one that we've",
    "start": "1784700",
    "end": "1790369"
  },
  {
    "text": "just built locally I'm then gonna tell it to expose port 80 from the container to port 80 on the host and then going to",
    "start": "1790369",
    "end": "1799159"
  },
  {
    "text": "give it an environment environment string for the database and you can see",
    "start": "1799159",
    "end": "1804649"
  },
  {
    "text": "here for the data source we call in music - store - dB and that's actually",
    "start": "1804649",
    "end": "1811190"
  },
  {
    "text": "the name of the service here which is a database image that I've gone ahead and pre-created ahead of time for us just",
    "start": "1811190",
    "end": "1817909"
  },
  {
    "text": "just because of time limitations and then I'm also going to expose that port",
    "start": "1817909",
    "end": "1823009"
  },
  {
    "text": "there but one of the key things is is this depends on attribute so I'm basically saying the mute the web",
    "start": "1823009",
    "end": "1829879"
  },
  {
    "text": "container depends on the database container so what docker will do is go ahead and start like database container for me",
    "start": "1829879",
    "end": "1836360"
  },
  {
    "text": "first wait for the process to return back let it start it and then go ahead and start the web container up for me as",
    "start": "1836360",
    "end": "1842509"
  },
  {
    "text": "well and as you can see here I don't really have a very secure password either but it's not it just for the demo",
    "start": "1842509",
    "end": "1848559"
  },
  {
    "text": "if you're going to be running this in production you'd want something like secret management or configuration",
    "start": "1848559",
    "end": "1855350"
  },
  {
    "text": "money's been tight stuff to look into that so with the docker file now sorry",
    "start": "1855350",
    "end": "1865039"
  },
  {
    "text": "they can pose file we can do docker compose oh so that's going to say to",
    "start": "1865039",
    "end": "1874220"
  },
  {
    "text": "Daka go ahead and spin me up all those services that are in my Dhaka file so",
    "start": "1874220",
    "end": "1883700"
  },
  {
    "text": "it's going ahead and creating the database container first because it knows that that's depended on by the web",
    "start": "1883700",
    "end": "1888909"
  },
  {
    "text": "service and that'll take a few seconds sequel",
    "start": "1888909",
    "end": "1895720"
  },
  {
    "text": "server containers on windows are currently around about 15 gigs so it'll take a few seconds for that plot to spin",
    "start": "1895720",
    "end": "1902050"
  },
  {
    "text": "up",
    "start": "1902050",
    "end": "1904170"
  },
  {
    "text": "the same as I did on the docker room command as well I get the dash D flag as well so fridge attached mode so when",
    "start": "1927360",
    "end": "1934170"
  },
  {
    "text": "that's finished I should get my console back",
    "start": "1934170",
    "end": "1937760"
  },
  {
    "text": "so it's finished creating the DB container name for me it's gone ahead and started the web container as well so",
    "start": "1944130",
    "end": "1950549"
  },
  {
    "text": "just Before we jump into that I'm going to run docker PS to see my running containers again I can see that I've got",
    "start": "1950549",
    "end": "1957090"
  },
  {
    "text": "both of them started now my web container is exposing port 80 as I defined in the darker file sorry in the",
    "start": "1957090",
    "end": "1964380"
  },
  {
    "text": "compose file and also my sequel server container is also exposing port 143 as",
    "start": "1964380",
    "end": "1970500"
  },
  {
    "text": "well I'm just quickly going to go ahead and have a look at the logs of the web",
    "start": "1970500",
    "end": "1976500"
  },
  {
    "text": "container to make sure it's started up successfully we can see that there's a",
    "start": "1976500",
    "end": "1985080"
  },
  {
    "text": "load of just output from entity framework and bits and pieces like that but the important thing is we can see that our web application is started for",
    "start": "1985080",
    "end": "1992580"
  },
  {
    "text": "us so it's gonna clear that and again",
    "start": "1992580",
    "end": "1999780"
  },
  {
    "text": "we're going to use the inspector command to go and get the IP address of our web container there we have it right there",
    "start": "1999780",
    "end": "2011230"
  },
  {
    "text": "and there we have our music store application running inside a docker container and just like before to read",
    "start": "2019870",
    "end": "2026049"
  },
  {
    "text": "him from the database we're able to update the database as well so I'll quickly just hop back to parish",
    "start": "2026049",
    "end": "2034539"
  },
  {
    "text": "our second and this time we'll get the IP address of the database container and",
    "start": "2034539",
    "end": "2041529"
  },
  {
    "text": "we'll just connect it to that container and just make sure that everything's there is weird expect which we already know but we'll just show that so I'm",
    "start": "2041529",
    "end": "2056349"
  },
  {
    "text": "just going to use sea port operations studio",
    "start": "2056349",
    "end": "2062190"
  },
  {
    "text": "so by default and the only username that exists was si which we then set the password in the compose file for si to",
    "start": "2072830",
    "end": "2079960"
  },
  {
    "text": "the really secure one of NDC and 2018 oh",
    "start": "2079960",
    "end": "2086950"
  },
  {
    "text": "can we we can see that we've got a music store tape si database and then we can",
    "start": "2090820",
    "end": "2096200"
  },
  {
    "text": "see that we've got data in our albums table and that's this is the data that",
    "start": "2096200",
    "end": "2102710"
  },
  {
    "text": "was actually just being displayed on our home page so all this is running it inside a container so can database",
    "start": "2102710",
    "end": "2113300"
  },
  {
    "start": "2110000",
    "end": "2235000"
  },
  {
    "text": "containers are really useful for kind of dev or automatic acceptance tests",
    "start": "2113300",
    "end": "2118850"
  },
  {
    "text": "environment you probably don't want to be using them in production but for like running in a eighties they're really",
    "start": "2118850",
    "end": "2124520"
  },
  {
    "text": "useful because you can spin up a new instance of your database container with with your wallet web container or your console app whatever your application is",
    "start": "2124520",
    "end": "2131690"
  },
  {
    "text": "that from any andhaka run your automated tests and then just tear down the whole environment every time so that you",
    "start": "2131690",
    "end": "2137210"
  },
  {
    "text": "bought a fresh environment every time that you want to run your tests",
    "start": "2137210",
    "end": "2141550"
  },
  {
    "text": "so the the last part of the demo is we've gone through the daka basics we've",
    "start": "2153400",
    "end": "2159490"
  },
  {
    "text": "got our web container up at the moment using our database that's got our application in there I'm quickly going",
    "start": "2159490",
    "end": "2165250"
  },
  {
    "text": "to show you how to use a cloud flare to kind of expose that that web container to the Internet securely so for those of",
    "start": "2165250",
    "end": "2172720"
  },
  {
    "text": "you that don't know cloud Fire was founded in around 2009 I am they currently operate in a approximately 150",
    "start": "2172720",
    "end": "2180160"
  },
  {
    "text": "datacenters to date and they offer features such as CDN DDoS DNS web",
    "start": "2180160",
    "end": "2185950"
  },
  {
    "text": "security what web optimization and a lot more other features as well for this",
    "start": "2185950",
    "end": "2191260"
  },
  {
    "text": "demo we're going to use a feature of that it's called agro tunnel and agro tunnel as you'll see from the demo will",
    "start": "2191260",
    "end": "2198250"
  },
  {
    "text": "allow us to expose our local environment that's running on my machine to the Internet through their data centers and",
    "start": "2198250",
    "end": "2204010"
  },
  {
    "text": "then we'll be able to access it and take advantage of all of their security features as well I'll go tunnel is this",
    "start": "2204010",
    "end": "2210910"
  },
  {
    "text": "he's in concept very similar to engross if anyone's ever used that before on any of your machines it's very similar but",
    "start": "2210910",
    "end": "2218050"
  },
  {
    "text": "obviously clay play gives you the extra security benefits as well so",
    "start": "2218050",
    "end": "2228090"
  },
  {
    "text": "if you want to get started with our I'll go to an all I've seen you need to go and sign up for CloudFlare but they've",
    "start": "2234470",
    "end": "2240500"
  },
  {
    "start": "2235000",
    "end": "2435000"
  },
  {
    "text": "got they said developer's documentation website and it takes you through kind of I'll go how you can get that running and",
    "start": "2240500",
    "end": "2248900"
  },
  {
    "text": "then they've got this really helpful your first tunnel guide so it tells you to go and enable the feature then",
    "start": "2248900",
    "end": "2256040"
  },
  {
    "text": "download their kind of service called CloudFlare D and that's available for Linux and Windows and Mac OS and you can",
    "start": "2256040",
    "end": "2264109"
  },
  {
    "text": "also burn it in a docker container as well if you wanted to it then walks you through kind of the login process using",
    "start": "2264109",
    "end": "2271520"
  },
  {
    "text": "their CLI I've already gone ahead and done that process on my machine so we're actually ready to go and establish our",
    "start": "2271520",
    "end": "2277579"
  },
  {
    "text": "own tunnel so if I hit up back over to parish shell so I've already gone ahead",
    "start": "2277579",
    "end": "2290329"
  },
  {
    "text": "and downloaded that for Windows I've also gone ahead and got my certificate",
    "start": "2290329",
    "end": "2296230"
  },
  {
    "text": "as well in this directory for my domain and it's it's really easy so it's gonna",
    "start": "2296230",
    "end": "2306170"
  },
  {
    "text": "say played for a day or actually sorry",
    "start": "2306170",
    "end": "2311440"
  },
  {
    "text": "first we all need to get the IP address of our web container going so I don't remember that for my head",
    "start": "2311440",
    "end": "2318338"
  },
  {
    "text": "so I'm gonna give it the URL to that container on my machine I'm also gonna",
    "start": "2338260",
    "end": "2343420"
  },
  {
    "text": "say hostname so I'm gonna go for NTC actually pulled up here at UK I'm just gonna run that",
    "start": "2343420",
    "end": "2350770"
  },
  {
    "text": "from the command line this time so we can see that the CloudFlare D service is started off its establish connections to",
    "start": "2350770",
    "end": "2358570"
  },
  {
    "text": "my nearest data center of theirs where they operate and now if I head back over to my browser I can go to URL we can see",
    "start": "2358570",
    "end": "2369430"
  },
  {
    "text": "that we've got our web application as well so I've gone all the way back out to the Internet through cloud players",
    "start": "2369430",
    "end": "2374680"
  },
  {
    "text": "data centers and then back to my machine securely so that's useful",
    "start": "2374680",
    "end": "2379960"
  },
  {
    "text": "obviously if you're if you've got like a client and your kind of a design agency and you quickly want to show the client what you're working on you could use a",
    "start": "2379960",
    "end": "2386500"
  },
  {
    "text": "service like this to show that obviously going more towards production and you",
    "start": "2386500",
    "end": "2392230"
  },
  {
    "text": "could use the agro tunnel feature so that you don't have to open up any ports in your firewall you don't need any",
    "start": "2392230",
    "end": "2399040"
  },
  {
    "text": "network engineers you could you could run this process as a window service or in a container and just expose your web",
    "start": "2399040",
    "end": "2405640"
  },
  {
    "text": "application to the internet that way and obviously benefit from all of their security features as well and just to",
    "start": "2405640",
    "end": "2416980"
  },
  {
    "text": "prove that that wasn't faked you can see here in the output you can see the requests that were being made by my",
    "start": "2416980",
    "end": "2422200"
  },
  {
    "text": "browser so you can make sure that I wasn't pulling the wool over your eyes",
    "start": "2422200",
    "end": "2428099"
  },
  {
    "text": "so if you are going to use docker there's a few considerations to go",
    "start": "2434370",
    "end": "2439780"
  },
  {
    "start": "2435000",
    "end": "2639000"
  },
  {
    "text": "through one of those is login so by default as you've seen doc it keeps",
    "start": "2439780",
    "end": "2445420"
  },
  {
    "text": "track of those logs in what we call the JSON login driver so it just writes those logs to disk in JSON format",
    "start": "2445420",
    "end": "2451560"
  },
  {
    "text": "obviously if you're going to use this in production for example you'd want to",
    "start": "2451560",
    "end": "2457210"
  },
  {
    "text": "look at some of the other logging drivers for vadhaka or have your application log directly to",
    "start": "2457210",
    "end": "2463990"
  },
  {
    "text": "it like a syslog server but doctor has got something called the docker logging driver and that gives you the ability to",
    "start": "2463990",
    "end": "2471310"
  },
  {
    "text": "easily integrate with with other vendors such as Splunk for example those serve a ship with a native driver you can",
    "start": "2471310",
    "end": "2478060"
  },
  {
    "text": "configure that we or Splunk account details and doctor will automatically then just ship those logs for you",
    "start": "2478060",
    "end": "2483310"
  },
  {
    "text": "straight to Splunk so what you do is just write to the console and everything gets sent for you at a host level",
    "start": "2483310",
    "end": "2488650"
  },
  {
    "text": "meaning that you haven't got configure those per application the other",
    "start": "2488650",
    "end": "2493690"
  },
  {
    "text": "consideration is monitoring I know from",
    "start": "2493690",
    "end": "2499300"
  },
  {
    "text": "an environment I previously came from we kind of had a handful of servers we kind of got good at monitoring those handful",
    "start": "2499300",
    "end": "2504880"
  },
  {
    "text": "of servers but but that process work scale to container so you have to think about how are we going to monitor",
    "start": "2504880",
    "end": "2511000"
  },
  {
    "text": "potentially hundreds of containers that are running so you'll probably want to look at tools such as like New Relic or",
    "start": "2511000",
    "end": "2517000"
  },
  {
    "text": "dynaTrace and stuff like that if not already docker containers do have health",
    "start": "2517000",
    "end": "2522550"
  },
  {
    "text": "checks that you can register as well so docker will periodically check the health of those containers for you and if they're not healthy or kill the",
    "start": "2522550",
    "end": "2528790"
  },
  {
    "text": "container and restart it back up again for you deployment strategy is another",
    "start": "2528790",
    "end": "2534370"
  },
  {
    "text": "kind of change that you'll have to look into again you're gonna be using",
    "start": "2534370",
    "end": "2540160"
  },
  {
    "text": "containers so it's how do we get those containers into production versus kind",
    "start": "2540160",
    "end": "2546580"
  },
  {
    "text": "of like hand copying files which I've seen some places do i'll see don't start that's bad",
    "start": "2546580",
    "end": "2551730"
  },
  {
    "text": "the other one is close to him so you'll want to look at how do we cluster multiple instances of the docker engine",
    "start": "2551730",
    "end": "2558040"
  },
  {
    "text": "together and I've see that's good for scalability and also reliability you don't want just a single document all of",
    "start": "2558040",
    "end": "2564430"
  },
  {
    "text": "your containers you can help it Sadako have got their own called docker swarm and the worse",
    "start": "2564430",
    "end": "2570549"
  },
  {
    "text": "the result or those available such as kubernetes or Mae sauce so you have to",
    "start": "2570549",
    "end": "2575619"
  },
  {
    "text": "just work out what's best for you most people these days are traditionally going towards kubernetes now and even",
    "start": "2575619",
    "end": "2582429"
  },
  {
    "text": "doctors kind of embracing kubernetes support I believe that's something to",
    "start": "2582429",
    "end": "2587499"
  },
  {
    "text": "look into load balancing Dhaka has got some built",
    "start": "2587499",
    "end": "2593019"
  },
  {
    "text": "in load balancing so if I had multiple instances of my service running it will",
    "start": "2593019",
    "end": "2598689"
  },
  {
    "text": "actually low balance between the multiple nodes for me well you might want to look at hey Dex hello banks between two different docker",
    "start": "2598689",
    "end": "2606729"
  },
  {
    "text": "clusters potentially as I mentioned previously secrets management so",
    "start": "2606729",
    "end": "2612839"
  },
  {
    "text": "traditionally the way that you passed up into into document anuses through environment variables and we saw that in",
    "start": "2612839",
    "end": "2618880"
  },
  {
    "text": "the doc can pose while with the connection string for example but ideally I don't want my passwords in",
    "start": "2618880",
    "end": "2624309"
  },
  {
    "text": "clear-text obviously you'd lock down who'd got access to the document flow structure but you still want to maybe",
    "start": "2624309",
    "end": "2630609"
  },
  {
    "text": "look at secrets management using in vault is one of the products but there's",
    "start": "2630609",
    "end": "2636459"
  },
  {
    "text": "different ways to do that there's some",
    "start": "2636459",
    "end": "2641829"
  },
  {
    "text": "resources and these are all hyperlinks that are that are available for you there in the slides which one github and",
    "start": "2641829",
    "end": "2649779"
  },
  {
    "text": "I'll tweet our link to those in a minute doctor documentation is really really",
    "start": "2649779",
    "end": "2656619"
  },
  {
    "text": "good they've got really strong documentation so if you've got a hey you know what does this command do or how",
    "start": "2656619",
    "end": "2662559"
  },
  {
    "text": "can I do this their documentation is really good you've got the docker plugin for visual studio codes I always use",
    "start": "2662559",
    "end": "2667899"
  },
  {
    "text": "them in the demo and then on the right hand side you've got docker plug-ins for TFS if you're a TFS shop or vs yes sure",
    "start": "2667899",
    "end": "2675579"
  },
  {
    "text": "but one thing you will need to look into is the last link on the right which is the Windows Server container license in",
    "start": "2675579",
    "end": "2682809"
  },
  {
    "text": "its last time I looked it was very complex licensing model so good luck",
    "start": "2682809",
    "end": "2687880"
  },
  {
    "text": "with that one so thank you very much everybody and please leave feedback on",
    "start": "2687880",
    "end": "2694089"
  },
  {
    "start": "2691000",
    "end": "2815000"
  },
  {
    "text": "the way out any questions",
    "start": "2694089",
    "end": "2698849"
  },
  {
    "text": "yeah yeah yes the GSMA is I haven't used",
    "start": "2699670",
    "end": "2731059"
  },
  {
    "text": "those personally the a you would need to do something like that last time I",
    "start": "2731059",
    "end": "2737180"
  },
  {
    "text": "looked into them the support was very bleeding-edge so we we chose and so did",
    "start": "2737180",
    "end": "2744319"
  },
  {
    "text": "we so yeah yeah we did look into that but unfortunately at the time it wasn't that",
    "start": "2744319",
    "end": "2749630"
  },
  {
    "text": "usable for us yeah",
    "start": "2749630",
    "end": "2754720"
  },
  {
    "text": "any other questions yeah",
    "start": "2755710",
    "end": "2760690"
  },
  {
    "text": "yeah so it all comes down to the file system driver that doctor uses on",
    "start": "2763890",
    "end": "2770530"
  },
  {
    "text": "Windows it's got a bad reputation for being extremely slow so if you were to",
    "start": "2770530",
    "end": "2775599"
  },
  {
    "text": "run the same build on a Linux based host versus a windows-based host we typically",
    "start": "2775599",
    "end": "2781480"
  },
  {
    "text": "see in our build times on the Linux host be at least roughly three times less",
    "start": "2781480",
    "end": "2787570"
  },
  {
    "text": "than on a Windows host but dotnet core does give you the ability to run on",
    "start": "2787570",
    "end": "2793480"
  },
  {
    "text": "Linux oh it's it's one of those things expensive your window shop or Linux shop some companies err more on the window",
    "start": "2793480",
    "end": "2799810"
  },
  {
    "text": "side some are anymore",
    "start": "2799810",
    "end": "2807060"
  },
  {
    "text": "okay thank you very much everybody",
    "start": "2807900",
    "end": "2812099"
  }
]