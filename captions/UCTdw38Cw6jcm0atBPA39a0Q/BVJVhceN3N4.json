[
  {
    "text": "good morning everyone and welcome to developing flexible authorization capabilities with asp.net core",
    "start": "9440",
    "end": "17279"
  },
  {
    "text": "I'm Jason Taylor a solution architect for ssw I help customers develop deploy and test",
    "start": "17279",
    "end": "24060"
  },
  {
    "text": "custom Solutions in the cloud you can find me on GitHub at jasontaylordiff or on my blog",
    "start": "24060",
    "end": "29880"
  },
  {
    "text": "jasontaylor.dev today I'd like to show you authorization",
    "start": "29880",
    "end": "35820"
  },
  {
    "text": "with asp.net core we'll look at authorization asp.net core the standard approach and a flexible approach we'll",
    "start": "35820",
    "end": "42600"
  },
  {
    "text": "look at authorization and Blazer webassembly and we'll look at some code three demos and I'll summarize it for",
    "start": "42600",
    "end": "49680"
  },
  {
    "text": "you at the end before we get started I just want to let you know that ssw has a cool new ssw",
    "start": "49680",
    "end": "55379"
  },
  {
    "text": "Rewards app you can download this app from the app store by searching for ssw you can scan codes at ssw talks and",
    "start": "55379",
    "end": "64198"
  },
  {
    "text": "events to earn points and collect prizes",
    "start": "64199",
    "end": "69320"
  },
  {
    "text": "a little bit of background information before we get started so authentication is the process of",
    "start": "69600",
    "end": "76740"
  },
  {
    "text": "determining a user's identity whereas authorization is the process of",
    "start": "76740",
    "end": "81840"
  },
  {
    "text": "determining what resources a user has access to now authentication is independent of",
    "start": "81840",
    "end": "88619"
  },
  {
    "text": "authorization but you need to remember that authorization requires an authenticated user",
    "start": "88619",
    "end": "95280"
  },
  {
    "text": "so authorization determines access to resources but what exactly are resources well resources can be a number of things",
    "start": "95280",
    "end": "102060"
  },
  {
    "text": "such as data files views and features",
    "start": "102060",
    "end": "108438"
  },
  {
    "text": "authorization also includes defining and enforcing access control rules as",
    "start": "108500",
    "end": "113759"
  },
  {
    "text": "policies which are then used by the system to Grant or reject access",
    "start": "113759",
    "end": "119159"
  },
  {
    "text": "requests to specified resources the focus of this talk will be",
    "start": "119159",
    "end": "124200"
  },
  {
    "text": "authorization with asp.net core I'll demonstrate a typical approach",
    "start": "124200",
    "end": "129420"
  },
  {
    "text": "using role-based access control and then a flexible approach using",
    "start": "129420",
    "end": "134599"
  },
  {
    "text": "permissions-based access control and you'll see that with the flexible approach for sufficiently complex",
    "start": "134599",
    "end": "140459"
  },
  {
    "text": "problems that this will save you a lot of time and money improving your maintainability of your code",
    "start": "140459",
    "end": "147599"
  },
  {
    "text": "and generally the happiness of your developers so the talk will be built using sorry",
    "start": "147599",
    "end": "153840"
  },
  {
    "text": "that code will be built using Blazer webassembly and asp.net core and I'll share a link to the code and slides at",
    "start": "153840",
    "end": "160020"
  },
  {
    "text": "the end so authorization with asbnet core",
    "start": "160020",
    "end": "165180"
  },
  {
    "text": "it supports very simple authorization capabilities such as authentic such as",
    "start": "165180",
    "end": "170519"
  },
  {
    "text": "authorizing an authenticated user or allowing Anonymous access for a user",
    "start": "170519",
    "end": "176400"
  },
  {
    "text": "but it also includes sophisticated authorization capabilities such as role-based claim space policy-based",
    "start": "176400",
    "end": "183560"
  },
  {
    "text": "resource-based and view based authorization in addition it's easy to create custom",
    "start": "183560",
    "end": "188940"
  },
  {
    "text": "authorization policies and it's also easy to customize the authorization Behavior using middleware",
    "start": "188940",
    "end": "196920"
  },
  {
    "text": "let's take a look at some examples so first with simple authorization we can use the authorize attribute on a",
    "start": "196920",
    "end": "203640"
  },
  {
    "text": "controller action or razor page in this example the authorized attribute",
    "start": "203640",
    "end": "208920"
  },
  {
    "text": "has been applied to the account controller and that means that users of the account controller can only access",
    "start": "208920",
    "end": "215760"
  },
  {
    "text": "login and log out if they're authenticated which of course is a big problem because",
    "start": "215760",
    "end": "221700"
  },
  {
    "text": "they they can't log in unless they're authorized we can fix that we'll move the",
    "start": "221700",
    "end": "226739"
  },
  {
    "text": "authorizer tribute down to logout so now Anonymous users can access login and",
    "start": "226739",
    "end": "232920"
  },
  {
    "text": "authenticated users can access logout here's another example where we've again",
    "start": "232920",
    "end": "237959"
  },
  {
    "text": "applied authorized to the account controller and we've simply applied allow Anonymous to the login so that",
    "start": "237959",
    "end": "245040"
  },
  {
    "text": "means all of the actions within this controller will require authenticated user except for the login action",
    "start": "245040",
    "end": "253980"
  },
  {
    "text": "now let's look at authorization with roles again using the authorized attribute we can specify roles for a",
    "start": "253980",
    "end": "261419"
  },
  {
    "text": "particular action so in this case we've applied the authorized attribute to the administrator controller and specified",
    "start": "261419",
    "end": "268320"
  },
  {
    "text": "the administrator's role that means to access the actions within this controller it requires an authenticated",
    "start": "268320",
    "end": "274320"
  },
  {
    "text": "user who is a member of the administrator's role next up we have the authorized attribute",
    "start": "274320",
    "end": "280919"
  },
  {
    "text": "specifying two roles that means the user must be a member of either the administrator's role or the accounts",
    "start": "280919",
    "end": "288240"
  },
  {
    "text": "role and finally we have two authorized attributes both specifying individual",
    "start": "288240",
    "end": "293520"
  },
  {
    "text": "roles and this means that the user must be a member of both the administrators and the accounts roles so you can see",
    "start": "293520",
    "end": "300479"
  },
  {
    "text": "the authorized attribute is quite flexible you can apply it in a variety of different ways to divide to Define",
    "start": "300479",
    "end": "306900"
  },
  {
    "text": "your access policy next up we have authorization with",
    "start": "306900",
    "end": "312120"
  },
  {
    "text": "policies which is really the engine of the ASP net core authorization system with policy-based authorization we can",
    "start": "312120",
    "end": "319440"
  },
  {
    "text": "again use the authorizer tribute to specify a policy in this case access to",
    "start": "319440",
    "end": "325139"
  },
  {
    "text": "the employee controller will be strictly restricted to users who meet the requirements of the employees only",
    "start": "325139",
    "end": "331500"
  },
  {
    "text": "policy how do we Define that well generally these policies are defined",
    "start": "331500",
    "end": "336660"
  },
  {
    "text": "when you're defining your services so we've added a policy called employees only and added a single requirement and",
    "start": "336660",
    "end": "344400"
  },
  {
    "text": "that is that this the authenticated user requires a claim employee number but we",
    "start": "344400",
    "end": "350220"
  },
  {
    "text": "don't much need to worry about what value it is just that they have that claim",
    "start": "350220",
    "end": "355740"
  },
  {
    "text": "now we'll look at authorization in Blazer webassembly it's important to remember that Blazer webassembly is an",
    "start": "355740",
    "end": "361680"
  },
  {
    "text": "asp.net core technology so it supports many of the same authorization capabilities",
    "start": "361680",
    "end": "367979"
  },
  {
    "text": "so it supports simple authorization capabilities such as allowing Anonymous access or restricting on access to",
    "start": "367979",
    "end": "375240"
  },
  {
    "text": "certain capabilities it includes the same sophisticated authorization capabilities such as role",
    "start": "375240",
    "end": "381120"
  },
  {
    "text": "claims and policy based and it includes additional authorization components such",
    "start": "381120",
    "end": "386520"
  },
  {
    "text": "as authorized View and authorized route View the important thing about Blazer",
    "start": "386520",
    "end": "392699"
  },
  {
    "text": "webassembly is that it's running in the client so it's important to remember that the authorization you place there",
    "start": "392699",
    "end": "398100"
  },
  {
    "text": "like the validation that you place there is really only to improve the UI and user experience we can conditionally",
    "start": "398100",
    "end": "404520"
  },
  {
    "text": "show and hide items but all of that can be bypassed by the user by disabling",
    "start": "404520",
    "end": "409979"
  },
  {
    "text": "JavaScript or crafting an attack so we still need to enforce authorization on the server side",
    "start": "409979",
    "end": "416759"
  },
  {
    "text": "let's have a look at some examples with blazer so for simple authorization again we can use the authorized attribute on a",
    "start": "416759",
    "end": "423360"
  },
  {
    "text": "routable page so in this case we've simply applied the tribute which means that only authenticated users can access",
    "start": "423360",
    "end": "429479"
  },
  {
    "text": "the home page here the authorized attribute has specified two roles so an authenticated",
    "start": "429479",
    "end": "436139"
  },
  {
    "text": "user who is either a member of Administrators or the accounts role and here we've specified the employees",
    "start": "436139",
    "end": "442860"
  },
  {
    "text": "only policy so only a authenticated user who meets the requirements of the employees only policy can access the",
    "start": "442860",
    "end": "449460"
  },
  {
    "text": "users page authorization with views so we apply authorization sorry the authorized view",
    "start": "449460",
    "end": "457080"
  },
  {
    "text": "to selectively display content three examples here you can see the home",
    "start": "457080",
    "end": "462599"
  },
  {
    "text": "link is only accessible to authenticated users the counter link is only accessible to authenticated users who",
    "start": "462599",
    "end": "469380"
  },
  {
    "text": "are a member of one of those roles and finally the users link is only accessible to the employees",
    "start": "469380",
    "end": "476599"
  },
  {
    "text": "next up we have the authorized view where we're specifying what to show if the user is not authorized so you can",
    "start": "476819",
    "end": "483060"
  },
  {
    "text": "see here the login link will be displayed if the user is not authorized",
    "start": "483060",
    "end": "488220"
  },
  {
    "text": "let's have a look at what it takes using the typical approach with ASP net core",
    "start": "488220",
    "end": "493259"
  },
  {
    "text": "authorization being role-based authorization let's have a look at what it takes to add a new role to an",
    "start": "493259",
    "end": "499860"
  },
  {
    "text": "existing application and in this in this scenario we're going to add an auditor role to support certain requirements",
    "start": "499860",
    "end": "508020"
  },
  {
    "text": "let's have a look at the application quickly so this is the application it's Blazer webassembly hosted on asp.net",
    "start": "508020",
    "end": "514260"
  },
  {
    "text": "core at the moment I've built in some capabilities to manage the users you can see there's an admin and an auditor user",
    "start": "514260",
    "end": "521159"
  },
  {
    "text": "and in this form we can actually assign different roles so we're going to go ahead and create an Auditor's role for",
    "start": "521159",
    "end": "527700"
  },
  {
    "text": "the auditor for a little bit of fun we can also see the claims that are associated with the user in this case I'm logged in as the",
    "start": "527700",
    "end": "534899"
  },
  {
    "text": "administrator and I can see the administrator sorry the role claim which has a single value of Administrators",
    "start": "534899",
    "end": "542640"
  },
  {
    "text": "so to add a new role we'll go to the",
    "start": "542640",
    "end": "547680"
  },
  {
    "text": "database initializer that's where I've defined the roles for this application so we'll duplicate this code I love to",
    "start": "547680",
    "end": "554279"
  },
  {
    "text": "copy and paste and uh I love multi-cursor too",
    "start": "554279",
    "end": "560339"
  },
  {
    "text": "so we specify the auditor's role and then here using asp.net core identity",
    "start": "560339",
    "end": "565860"
  },
  {
    "text": "we'll go ahead and create the Auditors role again copying and pasting",
    "start": "565860",
    "end": "572720"
  },
  {
    "text": "and foreigners there we go so when the application starts up in development it",
    "start": "572820",
    "end": "579180"
  },
  {
    "text": "will automatically create that Auditor's role for me and I can assign the auditor to that role",
    "start": "579180",
    "end": "585959"
  },
  {
    "text": "just minimize that but that's not the only change we need to make because we're not actually using",
    "start": "585959",
    "end": "591839"
  },
  {
    "text": "the auditor's role anywhere so let's start at the front end and apply the auditor's role where necessary the first",
    "start": "591839",
    "end": "598200"
  },
  {
    "text": "thing that I'd like to update is the nav menu not that one",
    "start": "598200",
    "end": "604500"
  },
  {
    "text": "nav menu there we go so in the nav menu I'd like to give the",
    "start": "604500",
    "end": "611880"
  },
  {
    "text": "auditor access to let's see to see the counter so we put in the",
    "start": "611880",
    "end": "618899"
  },
  {
    "text": "auditor's role there uh to be able to see the weather forecast",
    "start": "618899",
    "end": "624839"
  },
  {
    "text": "so we'll put in the Auditors role there and also to see a list of users that'll",
    "start": "624839",
    "end": "630779"
  },
  {
    "text": "give them a little bit more access than what I want but I don't have actually fine-grained control of authorization on",
    "start": "630779",
    "end": "637200"
  },
  {
    "text": "users so they'll be able to see the users but they'll also be able to edit the users so that's a bit problematic but that's okay we'll stick with that so",
    "start": "637200",
    "end": "645300"
  },
  {
    "text": "that's the nav menu if I was to run it now they could see the nav menu but they wouldn't be able to access any of the",
    "start": "645300",
    "end": "651240"
  },
  {
    "text": "pages because they're all secured as well so let's have a look at the counter page",
    "start": "651240",
    "end": "658220"
  },
  {
    "text": "and we can see that's administrators and accounts we can go ahead and add auditors fetch data",
    "start": "658860",
    "end": "666680"
  },
  {
    "text": "okay same thing and the users page",
    "start": "670440",
    "end": "675779"
  },
  {
    "text": "that's in users index all right",
    "start": "675779",
    "end": "682140"
  },
  {
    "text": "now that takes care of the front end but we have controllers in the back end which also require authorization so",
    "start": "682140",
    "end": "688500"
  },
  {
    "text": "we're protecting the resources on the back end of course so we can start with the weather forecast controller which",
    "start": "688500",
    "end": "694680"
  },
  {
    "text": "Powers the fetch data",
    "start": "694680",
    "end": "698779"
  },
  {
    "text": "and we can also update the user's controller",
    "start": "700620",
    "end": "707240"
  },
  {
    "text": "and I think that's it so let's run the application again and",
    "start": "708779",
    "end": "713880"
  },
  {
    "text": "see how it works",
    "start": "713880",
    "end": "716839"
  },
  {
    "text": "so so far we've had to make a bunch of code changes we'll need to eventually test this application deploy it and",
    "start": "719760",
    "end": "727079"
  },
  {
    "text": "we'll also need to document these authorization requirements at the moment these requirements are only declared in",
    "start": "727079",
    "end": "733440"
  },
  {
    "text": "code so we'll need a separate piece of documentation that we can share with the business so they can understand who has",
    "start": "733440",
    "end": "739380"
  },
  {
    "text": "access to what and of course we're going to need to keep that document up to date which as developers something we're very",
    "start": "739380",
    "end": "745200"
  },
  {
    "text": "good at all right over here",
    "start": "745200",
    "end": "751620"
  },
  {
    "text": "let's see if we can see that new Auditors roll and assign the auditor we can that's a good start",
    "start": "751620",
    "end": "759860"
  },
  {
    "text": "just need to click on it there we go save that and then I'll go ahead and log out",
    "start": "761519",
    "end": "768480"
  },
  {
    "text": "and log back in as an auditor",
    "start": "768480",
    "end": "772220"
  },
  {
    "text": "here we go so that's good I can see counter fetch data and users",
    "start": "779700",
    "end": "785339"
  },
  {
    "text": "I can access counter I can access fetch data and I can also access the data",
    "start": "785339",
    "end": "790440"
  },
  {
    "text": "coming back from the server I can access users unfortunately I have",
    "start": "790440",
    "end": "796320"
  },
  {
    "text": "a little bit more access than what I need because I don't have fine grown grain control of that access",
    "start": "796320",
    "end": "803779"
  },
  {
    "text": "so we need something a little bit more than that",
    "start": "803940",
    "end": "808100"
  },
  {
    "text": "all right so what would it look like if we had a better system what would it look like if we had flexible",
    "start": "809519",
    "end": "815220"
  },
  {
    "text": "authorization with asp.net core well first I'd like it to be easy for me",
    "start": "815220",
    "end": "820860"
  },
  {
    "text": "to add new roles and configure Access Control following that I'd like it to be easy to",
    "start": "820860",
    "end": "826800"
  },
  {
    "text": "reconfigure access control for existing roles for large organizations and large",
    "start": "826800",
    "end": "832139"
  },
  {
    "text": "applications these things change all the time I was in a one Organization for",
    "start": "832139",
    "end": "837180"
  },
  {
    "text": "eight years and they went through three restructures with different team names my role didn't change but my team name",
    "start": "837180",
    "end": "842820"
  },
  {
    "text": "did and that affected a lot of the systems I would like to be able to remove roles",
    "start": "842820",
    "end": "848040"
  },
  {
    "text": "without impacting existing Access Control checks we can't do that right now if we want to go and remove roles",
    "start": "848040",
    "end": "854279"
  },
  {
    "text": "we've got code changes testing building deploying and documentation updates",
    "start": "854279",
    "end": "859560"
  },
  {
    "text": "I would like to easily view Access Control policies I really don't want to maintain any documentation on that",
    "start": "859560",
    "end": "866760"
  },
  {
    "text": "and I'd like to support all of the above as standard application features I want",
    "start": "866760",
    "end": "872399"
  },
  {
    "text": "this to be the experience that's provided to the end users of the application so let's have a look at this adding a",
    "start": "872399",
    "end": "879120"
  },
  {
    "text": "new role again the same Auditor's role but this time using a flexible approach to authorization",
    "start": "879120",
    "end": "886560"
  },
  {
    "text": "so we'll close down basic auth",
    "start": "886560",
    "end": "890660"
  },
  {
    "text": "and load up flexible loss",
    "start": "894839",
    "end": "898820"
  },
  {
    "text": "a little bit of a preview there of the permissions but we'll run the application first",
    "start": "911160",
    "end": "919699"
  },
  {
    "text": "you get in there this is my new super fast laptop",
    "start": "928920",
    "end": "935000"
  },
  {
    "text": "always a little bit slower on stage okay let's log in",
    "start": "935279",
    "end": "940680"
  },
  {
    "text": "I'll log in again as administrator",
    "start": "940680",
    "end": "944540"
  },
  {
    "text": "and here we have a couple of new features we've got roles so let's go in and create an Auditor's role",
    "start": "947399",
    "end": "955459"
  },
  {
    "text": "that's done now let's go and Define access control for the auditor's role",
    "start": "956160",
    "end": "961620"
  },
  {
    "text": "so here it is and here are all the permissions that are available in the system you can see that these",
    "start": "961620",
    "end": "966899"
  },
  {
    "text": "permissions are a lot more fine-grained a lot more associated with the actual functionality in the application",
    "start": "966899",
    "end": "972600"
  },
  {
    "text": "for the auditor I really just want them to be able to access the counter the forecast and to view the users not to be",
    "start": "972600",
    "end": "980339"
  },
  {
    "text": "able to manage the users so I think we'll just leave it at that now those changes are already saved so",
    "start": "980339",
    "end": "986820"
  },
  {
    "text": "we can go ahead and log out and log back in as the auditor oh actually I forgot to assign the auditor roll to the",
    "start": "986820",
    "end": "992880"
  },
  {
    "text": "auditor so I have to do that first",
    "start": "992880",
    "end": "996320"
  },
  {
    "text": "ah",
    "start": "1003500",
    "end": "1006399"
  },
  {
    "text": "okay so we'll go to users",
    "start": "1008899",
    "end": "1013600"
  },
  {
    "text": "and assign that role so you can assign one or more roles to",
    "start": "1016820",
    "end": "1021980"
  },
  {
    "text": "users and of course the user is going to inherit the permissions that have been assigned to those roles",
    "start": "1021980",
    "end": "1029418"
  },
  {
    "text": "all right so back out and in as the auditor",
    "start": "1029419",
    "end": "1036640"
  },
  {
    "text": "okay this is looking good we have access to counter we have access to fetch data we have access to view the users not to",
    "start": "1042500",
    "end": "1049940"
  },
  {
    "text": "edit the users and we can also see claims which is nice you can see the auditor's role has been added as a claim",
    "start": "1049940",
    "end": "1057980"
  },
  {
    "text": "we also have this new permissions claim which is has an interesting value of 100. we'll get to that soon first I'd",
    "start": "1057980",
    "end": "1065360"
  },
  {
    "text": "like to compare the standard approach with the flexible approach",
    "start": "1065360",
    "end": "1070960"
  },
  {
    "text": "so with the standard approach we had to make code changes we had to test those",
    "start": "1073220",
    "end": "1078860"
  },
  {
    "text": "changes which we didn't do we had to build and deploy and we had to document those changes which we also didn't do",
    "start": "1078860",
    "end": "1084799"
  },
  {
    "text": "there's probably going to be some bug fixes on the way because we're actually impacting quite a few components within",
    "start": "1084799",
    "end": "1090380"
  },
  {
    "text": "the system with the flexible approach we actually weren't required so we just had free time that could have been completed by",
    "start": "1090380",
    "end": "1096980"
  },
  {
    "text": "an administrator or an end user and that's excellent we don't have to focus on these basic concerns means we can",
    "start": "1096980",
    "end": "1103640"
  },
  {
    "text": "start delivering new requirements we can start delivering business value I'd like to talk about how the flexible",
    "start": "1103640",
    "end": "1110840"
  },
  {
    "text": "approach works first let's think about the permissions so permissions define granular access to",
    "start": "1110840",
    "end": "1116960"
  },
  {
    "text": "resources we saw that when we were able to provide fine-grained control of the user's feature we could either view",
    "start": "1116960",
    "end": "1123380"
  },
  {
    "text": "users or edit users of course both it was easy for developers to create",
    "start": "1123380",
    "end": "1129500"
  },
  {
    "text": "permissions and we'll have a demonstration of that later and permissions are created generally when",
    "start": "1129500",
    "end": "1135260"
  },
  {
    "text": "you're creating a new feature so we don't have to go in and manage authorization independently it's only",
    "start": "1135260",
    "end": "1140360"
  },
  {
    "text": "when we're creating a new feature or if the access policy changes it's a very normal development flow permissions are",
    "start": "1140360",
    "end": "1147200"
  },
  {
    "text": "not assigned directly to a user rather permissions are assigned to a role and",
    "start": "1147200",
    "end": "1152299"
  },
  {
    "text": "the user will inherit the permissions of any assigned roles so it makes it easy for us to create and compose access",
    "start": "1152299",
    "end": "1159679"
  },
  {
    "text": "policies using roles and permissions and assign users the necessary permissions",
    "start": "1159679",
    "end": "1165620"
  },
  {
    "text": "as a by assigning the necessary roles so with flexible authorization roles are",
    "start": "1165620",
    "end": "1172100"
  },
  {
    "text": "only used to define a logical grouping of users administrators can of course create new",
    "start": "1172100",
    "end": "1177679"
  },
  {
    "text": "roles as required and rename roles if the if the if required administrators",
    "start": "1177679",
    "end": "1182900"
  },
  {
    "text": "assign permissions to roles but we don't use roles for authorization because if",
    "start": "1182900",
    "end": "1189500"
  },
  {
    "text": "we do that we won't be independent of organizational changes and we'll have to update our code quite often",
    "start": "1189500",
    "end": "1197419"
  },
  {
    "text": "how does it work under the hood the engine well it's built entirely using",
    "start": "1197419",
    "end": "1202700"
  },
  {
    "text": "policy-based authorization and this is something that really excites me we're using asp.net core authorization out of",
    "start": "1202700",
    "end": "1209900"
  },
  {
    "text": "the box to extend the authorization process we're not writing the security ourself we're just defining some new",
    "start": "1209900",
    "end": "1216799"
  },
  {
    "text": "requirements we can use the custom authorization",
    "start": "1216799",
    "end": "1221919"
  },
  {
    "text": "authorized attribute to specify required permissions and required permissions are then",
    "start": "1221919",
    "end": "1228380"
  },
  {
    "text": "translated into a policy name so we'll have a look at that shortly where we're using the authorized attribute before to",
    "start": "1228380",
    "end": "1234620"
  },
  {
    "text": "specify a role we'll be using the authorizer tribute to specify the required permissions",
    "start": "1234620",
    "end": "1241460"
  },
  {
    "text": "we will generate these policies dynamically using an asp.net core custom policy",
    "start": "1241460",
    "end": "1248900"
  },
  {
    "text": "provider so let's have a look at the code",
    "start": "1248900",
    "end": "1253840"
  },
  {
    "text": "get rid of this okay let's start here with the permissions",
    "start": "1256880",
    "end": "1262520"
  },
  {
    "text": "so you can see with permissions we're using an enum but we've applied the flag",
    "start": "1262520",
    "end": "1269059"
  },
  {
    "text": "attribute and that allows us to use and combine these permissions in very",
    "start": "1269059",
    "end": "1274940"
  },
  {
    "text": "interesting ways in fact I've got a dot net interactive notebook that we can",
    "start": "1274940",
    "end": "1280760"
  },
  {
    "text": "look at to understand that a little bit better",
    "start": "1280760",
    "end": "1284740"
  },
  {
    "text": "mm-hmm Let's Go full screen full screen there we go",
    "start": "1286640",
    "end": "1294440"
  },
  {
    "text": "kind of better Okay so we've got a simple example of some permissions here you can see that each value is specified",
    "start": "1294440",
    "end": "1301460"
  },
  {
    "text": "as a power of two starting at 1 through to 16. we have some interesting values",
    "start": "1301460",
    "end": "1306919"
  },
  {
    "text": "some interesting Flags we've got none which is all zeros and we've got all which is the complement of none all ones",
    "start": "1306919",
    "end": "1315260"
  },
  {
    "text": "so none would indicate no permissions whereas all would indicate all permissions now these are using flags",
    "start": "1315260",
    "end": "1322100"
  },
  {
    "text": "and you can see that this flag here indicates the permission of a",
    "start": "1322100",
    "end": "1328400"
  },
  {
    "text": "and this flag here indicates the permission of B now we can do some interesting things with flags if we",
    "start": "1328400",
    "end": "1335059"
  },
  {
    "text": "wanted to say that the user had permissions A and C as shown here then",
    "start": "1335059",
    "end": "1340340"
  },
  {
    "text": "we can simply add them together so zero zero zero zero one plus zero",
    "start": "1340340",
    "end": "1346280"
  },
  {
    "text": "zero one zero zero equals zero zero one zero one or five and so that value of 5",
    "start": "1346280",
    "end": "1353440"
  },
  {
    "text": "distinctly represents permissions A and C so using enum Flags we can represent",
    "start": "1353440",
    "end": "1360260"
  },
  {
    "text": "the user's permissions using a single number so let's have a look at some demonstrations here we've got the user",
    "start": "1360260",
    "end": "1366980"
  },
  {
    "text": "permissions of a and c and the required permissions of A and B sorry A or B okay",
    "start": "1366980",
    "end": "1373539"
  },
  {
    "text": "and so for a user to be authorized based",
    "start": "1373539",
    "end": "1379100"
  },
  {
    "text": "on the required permissions they need permission either A or B and in this case the user has a",
    "start": "1379100",
    "end": "1386059"
  },
  {
    "text": "let's have a look at what we could do with flags outputting the permissions as a string that didn't work",
    "start": "1386059",
    "end": "1391760"
  },
  {
    "text": "I didn't I've got to run this block first we'll try again",
    "start": "1391760",
    "end": "1396820"
  },
  {
    "text": "there we go so if we simply output these user permissions as a string it provides",
    "start": "1397220",
    "end": "1402679"
  },
  {
    "text": "us a comma separated value of the permissions that the user has and the required required permissions we can",
    "start": "1402679",
    "end": "1409100"
  },
  {
    "text": "also output their integer values so five and three",
    "start": "1409100",
    "end": "1417380"
  },
  {
    "text": "we can check permissions using the bitwise and operator",
    "start": "1417380",
    "end": "1422480"
  },
  {
    "text": "so we can see the user permissions are A and C the required permissions are A and B and they are authorized",
    "start": "1422480",
    "end": "1430360"
  },
  {
    "text": "we can add permissions to existing user permissions using the logical or",
    "start": "1430700",
    "end": "1435860"
  },
  {
    "text": "operator so you can see that now the user permissions are a b NC",
    "start": "1435860",
    "end": "1441740"
  },
  {
    "text": "and we can remove permissions using the logical xor or exclusive or operator",
    "start": "1441740",
    "end": "1447559"
  },
  {
    "text": "so now the permissions are back to Just A and C we need to do something interesting with",
    "start": "1447559",
    "end": "1453380"
  },
  {
    "text": "these permissions and I think I'll just show you one of these authorized attributes let's say on the user's",
    "start": "1453380",
    "end": "1459260"
  },
  {
    "text": "controller so here we've got authorize and we've specified",
    "start": "1459260",
    "end": "1466580"
  },
  {
    "text": "the required permissions view users or manage users now when ASP comes to evaluate that",
    "start": "1466580",
    "end": "1474559"
  },
  {
    "text": "access policy it doesn't actually have an authorization policy to do that it has",
    "start": "1474559",
    "end": "1480200"
  },
  {
    "text": "to generate one so we do that by first creating a policy name and the policy name is simply",
    "start": "1480200",
    "end": "1487820"
  },
  {
    "text": "permissions with the value of the required permissions so the int value",
    "start": "1487820",
    "end": "1493220"
  },
  {
    "text": "so if we run this now the required permissions are a and b or",
    "start": "1493220",
    "end": "1498740"
  },
  {
    "text": "the value 3 and so the policy name that we will create is called permissions",
    "start": "1498740",
    "end": "1503780"
  },
  {
    "text": "three and this provides us with a very easy out of the box way to utilize asp.net",
    "start": "1503780",
    "end": "1510679"
  },
  {
    "text": "core policy-based authorization now here we're just going to update the",
    "start": "1510679",
    "end": "1516080"
  },
  {
    "text": "required permissions so we can see creating a different policy name the permissions are a b and c 7 and the",
    "start": "1516080",
    "end": "1523880"
  },
  {
    "text": "policy name will be permission seven so now we have the capability to create a",
    "start": "1523880",
    "end": "1530720"
  },
  {
    "text": "policy name but we also need to be able to later on get the required permissions based on that policy name",
    "start": "1530720",
    "end": "1537140"
  },
  {
    "text": "so here we will get the permissions value from the policy Name by finding",
    "start": "1537140",
    "end": "1542779"
  },
  {
    "text": "that integer value the policy name is called permission seven we can pull that back out and know that that requires",
    "start": "1542779",
    "end": "1549080"
  },
  {
    "text": "permissions a b or c that's as complicated as it gets now we get to",
    "start": "1549080",
    "end": "1556279"
  },
  {
    "text": "just use the asp.net core authorization capabilities to do the rest so the first thing that I want to look",
    "start": "1556279",
    "end": "1563480"
  },
  {
    "text": "at is the application claims Factory",
    "start": "1563480",
    "end": "1568940"
  },
  {
    "text": "and this is just a little helper find it hang on try again app claims",
    "start": "1568940",
    "end": "1576140"
  },
  {
    "text": "principal Factory so what this will do is add the new",
    "start": "1576140",
    "end": "1581840"
  },
  {
    "text": "permission claim to the user you saw that before when we looked at the claims we had something like permissions 100.",
    "start": "1581840",
    "end": "1589220"
  },
  {
    "text": "so first it will have find all of the roles associated with the user then for",
    "start": "1589220",
    "end": "1595640"
  },
  {
    "text": "each of those roles it will add those permissions to the user permissions and",
    "start": "1595640",
    "end": "1601279"
  },
  {
    "text": "then simply add that value as a string to the claim so if I had permission",
    "start": "1601279",
    "end": "1607100"
  },
  {
    "text": "seven I would have a claim permissions 7. very simple little bit of infrastructure",
    "start": "1607100",
    "end": "1614480"
  },
  {
    "text": "next up we have the flexible authorization policy provider",
    "start": "1614480",
    "end": "1619940"
  },
  {
    "text": "and this is responsible for dynamically creating authorization policies only",
    "start": "1619940",
    "end": "1626059"
  },
  {
    "text": "when required it's very lazy about it because we don't really know what policies will be required we don't",
    "start": "1626059",
    "end": "1633020"
  },
  {
    "text": "really know what features the user will try to access so we just create these in",
    "start": "1633020",
    "end": "1638179"
  },
  {
    "text": "a lazy fashion so there can only be one authorization policy provider so we",
    "start": "1638179",
    "end": "1643220"
  },
  {
    "text": "derive the flexible authorization policy Provider from the default one you can see that when a policy is",
    "start": "1643220",
    "end": "1650000"
  },
  {
    "text": "required it calls this get policy async method now the first thing that we do is",
    "start": "1650000",
    "end": "1655700"
  },
  {
    "text": "just call the base class and try and get that policy whatever the name is and if it exists then we're done",
    "start": "1655700",
    "end": "1661880"
  },
  {
    "text": "but if it doesn't exist if the policy is null and the policy name is a valid",
    "start": "1661880",
    "end": "1669020"
  },
  {
    "text": "permissions policy name then we have some work to do so the first thing we'll do is get the",
    "start": "1669020",
    "end": "1675679"
  },
  {
    "text": "actual permissions flags from the policy name so if it's permission seven we'll",
    "start": "1675679",
    "end": "1681380"
  },
  {
    "text": "take that seven and cast it back into an enumeration then using the authorization",
    "start": "1681380",
    "end": "1687860"
  },
  {
    "text": "policy Builder we simply build a policy based on that now our policy has a",
    "start": "1687860",
    "end": "1694279"
  },
  {
    "text": "single requirement the permission authorization requirement and the only thing we have to pass into it is the",
    "start": "1694279",
    "end": "1700700"
  },
  {
    "text": "required permissions we already have that so it's a very simple policy having done that it's just a matter of adding",
    "start": "1700700",
    "end": "1707600"
  },
  {
    "text": "the policy specifying the name and the policy itself next time that same authorization check needs to occur it",
    "start": "1707600",
    "end": "1714679"
  },
  {
    "text": "won't be building the policy again that'll be a one-time thing okay so let's have a look at this",
    "start": "1714679",
    "end": "1721700"
  },
  {
    "text": "permission authorization requirement it's even simpler we simply pass in the",
    "start": "1721700",
    "end": "1727400"
  },
  {
    "text": "permissions and it stores it in a property so how does this authorization",
    "start": "1727400",
    "end": "1732679"
  },
  {
    "text": "requirement actually get handled well we have a permission authorization Handler",
    "start": "1732679",
    "end": "1741158"
  },
  {
    "text": "and this is where we actually look at the permissions that the user has by",
    "start": "1741559",
    "end": "1747080"
  },
  {
    "text": "grabbing their permissions claim converting it back into a permissions",
    "start": "1747080",
    "end": "1752360"
  },
  {
    "text": "type and then using the bitwise add operator to determine if there are any",
    "start": "1752360",
    "end": "1758120"
  },
  {
    "text": "permissions in common and that means that the user will have at least one of the required permissions which is fine",
    "start": "1758120",
    "end": "1764419"
  },
  {
    "text": "now if that is then successful we're done we don't need to check anything else and we",
    "start": "1764419",
    "end": "1771559"
  },
  {
    "text": "will exit and that user will be authorized and of course if there are multiple authorized attributes then it",
    "start": "1771559",
    "end": "1777799"
  },
  {
    "text": "will come back and check against a second policy for that user so that means that even with this permissions-based authorization approach",
    "start": "1777799",
    "end": "1784880"
  },
  {
    "text": "we can Define very uh we can we can have well-defined access policies by",
    "start": "1784880",
    "end": "1791720"
  },
  {
    "text": "organizing the attributes to express the requirements that we have",
    "start": "1791720",
    "end": "1797440"
  },
  {
    "text": "next let's have a look at the authorizer tribute so this is a special authorized",
    "start": "1797600",
    "end": "1803840"
  },
  {
    "text": "attribute that is built into the flexible shared authorization capabilities",
    "start": "1803840",
    "end": "1809059"
  },
  {
    "text": "but again it's just extending the out-of-the-box authorizer tribute and all it's doing is allowing us to supply",
    "start": "1809059",
    "end": "1816440"
  },
  {
    "text": "some permissions now you can see here it doesn't store the permissions it stores the policy",
    "start": "1816440",
    "end": "1823340"
  },
  {
    "text": "name and that is a very normal behavior for the existing authorizer tribute we can already Supply a policy",
    "start": "1823340",
    "end": "1830720"
  },
  {
    "text": "you can see that here we can say employees only well here we're pretty",
    "start": "1830720",
    "end": "1835820"
  },
  {
    "text": "much doing the same thing but instead of saying permissions A and C we're saying",
    "start": "1835820",
    "end": "1842299"
  },
  {
    "text": "permissions three in a roundabout way we do that by when setting the policy we will set generate",
    "start": "1842299",
    "end": "1849559"
  },
  {
    "text": "a policy name given the value of permissions and when returning it we will pull the permissions back out of",
    "start": "1849559",
    "end": "1855860"
  },
  {
    "text": "the policy name so again this is just driven by ASP net",
    "start": "1855860",
    "end": "1860899"
  },
  {
    "text": "core policy-based authorization now if you do have some more procedural",
    "start": "1860899",
    "end": "1866659"
  },
  {
    "text": "code to write and you'd like to assess authorization requirements within that then you use the authorization service",
    "start": "1866659",
    "end": "1873559"
  },
  {
    "text": "and this is built into asp.net core authorization and I've simply added an",
    "start": "1873559",
    "end": "1878720"
  },
  {
    "text": "extension method so that you can assess your authorization requirements against the required permissions",
    "start": "1878720",
    "end": "1885140"
  },
  {
    "text": "using the same approach we take in the permissions and convert it to a policy name if that policy doesn't exist",
    "start": "1885140",
    "end": "1891919"
  },
  {
    "text": "asp.net core will automatically generate that policy for us and authorize against those required permissions",
    "start": "1891919",
    "end": "1899899"
  },
  {
    "text": "all right so that's quite a lot to cover so we'll pause there for a moment and take",
    "start": "1899899",
    "end": "1906440"
  },
  {
    "text": "questions yes",
    "start": "1906440",
    "end": "1909340"
  },
  {
    "text": "three and four yeah yes yeah",
    "start": "1915799",
    "end": "1923080"
  },
  {
    "text": "yeah of course well that some of those values that you specified aren't powers of two",
    "start": "1924020",
    "end": "1930080"
  },
  {
    "text": "so they represent combinations of flags rather than individual flags and so when",
    "start": "1930080",
    "end": "1936559"
  },
  {
    "text": "you look at the permissions here they're all powers of two so three and four well",
    "start": "1936559",
    "end": "1942140"
  },
  {
    "text": "three is actually a and b and 4 is actually C so three and four uh comes to",
    "start": "1942140",
    "end": "1949100"
  },
  {
    "text": "seven so that's one plus two plus four so that's a b and c",
    "start": "1949100",
    "end": "1954679"
  },
  {
    "text": "no problem yes",
    "start": "1954679",
    "end": "1958179"
  },
  {
    "text": "in this case yeah so in in this scenario in this in this",
    "start": "1962960",
    "end": "1968539"
  },
  {
    "text": "specific one so the enumeration is backed by an INT so 32 maximum values",
    "start": "1968539",
    "end": "1973659"
  },
  {
    "text": "excluding none and all all is really useful",
    "start": "1973659",
    "end": "1978860"
  },
  {
    "text": "um actually I I'll I'll just show you one thing that I really love about all and then we'll come back to the maximum",
    "start": "1978860",
    "end": "1983960"
  },
  {
    "text": "value so if we go to the DB initializer we'll try no that's in another project",
    "start": "1983960",
    "end": "1989960"
  },
  {
    "text": "DB initializer when I initialize the administrator's role they always get assigned",
    "start": "1989960",
    "end": "1996559"
  },
  {
    "text": "permissions all and it's so easy to do that so when we add a new permission they automatically have it if we update",
    "start": "1996559",
    "end": "2001960"
  },
  {
    "text": "the permissions they automatically have it so yes the permissions that I'm currently using are restricted to 32",
    "start": "2001960",
    "end": "2008440"
  },
  {
    "text": "permissions if I change it to long it'll be restricted to 64 permissions 64 is",
    "start": "2008440",
    "end": "2013899"
  },
  {
    "text": "pretty good but it's not going to work for every solution so at that point we have to decide what we want to do next",
    "start": "2013899",
    "end": "2019720"
  },
  {
    "text": "so we could start storing permissions in the database alongside the roles and they could have an identity against each",
    "start": "2019720",
    "end": "2026380"
  },
  {
    "text": "individual permission obviously we're not going to then be able to store the",
    "start": "2026380",
    "end": "2032500"
  },
  {
    "text": "um the permissions in such a nice way using a single value will have multiple",
    "start": "2032500",
    "end": "2037899"
  },
  {
    "text": "claims representing the permissions that are available or we could have something like comma separated values representing",
    "start": "2037899",
    "end": "2043779"
  },
  {
    "text": "the permissions that are available so we'll have to take a different approach but the result will be the same roles",
    "start": "2043779",
    "end": "2049480"
  },
  {
    "text": "and permissions will be stored using claims and they will be assessed using Dynamic authorization policies in",
    "start": "2049480",
    "end": "2055358"
  },
  {
    "text": "asp.net core any other questions",
    "start": "2055359",
    "end": "2061138"
  },
  {
    "text": "no problem let's continue",
    "start": "2061599",
    "end": "2065280"
  },
  {
    "text": "I'd like to provide one final demonstration add in a new permission this would be typically completed by",
    "start": "2066879",
    "end": "2073118"
  },
  {
    "text": "developers when they're building new requirements the auditor currently does not have",
    "start": "2073119",
    "end": "2079240"
  },
  {
    "text": "access to the access control page and they would like to see who has access to what so let's give that a try",
    "start": "2079240",
    "end": "2087780"
  },
  {
    "text": "so the first thing that we'll need to do is update the permissions",
    "start": "2088060",
    "end": "2093760"
  },
  {
    "text": "not that one this one",
    "start": "2093760",
    "end": "2099339"
  },
  {
    "text": "so we have the next value to be view Access Control",
    "start": "2099339",
    "end": "2107859"
  },
  {
    "text": "128. okay",
    "start": "2108160",
    "end": "2113680"
  },
  {
    "text": "we'll stop that so now we need to apply the policy for",
    "start": "2113680",
    "end": "2120099"
  },
  {
    "text": "view Access Control where it's necessary let's start on the client again",
    "start": "2120099",
    "end": "2127180"
  },
  {
    "text": "so make that a bit smaller so we'll go over here",
    "start": "2127180",
    "end": "2134700"
  },
  {
    "text": "to oh I'll use the sorry I'll use the shortcuts a little bit easier to find",
    "start": "2135180",
    "end": "2140920"
  },
  {
    "text": "things when I don't have a mouse nav menu okay so access control is down the",
    "start": "2140920",
    "end": "2148060"
  },
  {
    "text": "bottom here and currently only users with permissions configure Access Control",
    "start": "2148060",
    "end": "2154480"
  },
  {
    "text": "so we'll say configure or view Access Control",
    "start": "2154480",
    "end": "2160980"
  },
  {
    "text": "all right next up we need to change the access control page itself",
    "start": "2163540",
    "end": "2169180"
  },
  {
    "text": "so I think that's at Access Control index good and we can see here the only real place",
    "start": "2169180",
    "end": "2177040"
  },
  {
    "text": "that can make a change is the import so let's use the authorize View now I can't use the out of the box",
    "start": "2177040",
    "end": "2184000"
  },
  {
    "text": "authorized view so I created an extension on that flexible authorized View",
    "start": "2184000",
    "end": "2190300"
  },
  {
    "text": "and will say that the authorized users must have",
    "start": "2190300",
    "end": "2197819"
  },
  {
    "text": "hopefully let's clean this up a little bit",
    "start": "2198579",
    "end": "2202920"
  },
  {
    "text": "we'll say authorized and not authorized",
    "start": "2203800",
    "end": "2210119"
  },
  {
    "text": "okay now I really wanted to find some permissions here not coming up",
    "start": "2211900",
    "end": "2218859"
  },
  {
    "text": "let's find out why flexible authorized View",
    "start": "2218859",
    "end": "2226599"
  },
  {
    "text": "whoops I'm making a big mess I gotta stop okay making it worse all right trying",
    "start": "2226599",
    "end": "2233200"
  },
  {
    "text": "again flexible authorized for you",
    "start": "2233200",
    "end": "2238680"
  },
  {
    "text": "so the flexible authorized view has the parameter permissions which is interesting it's not coming up",
    "start": "2239800",
    "end": "2246460"
  },
  {
    "text": "for me so uh let's just exploded",
    "start": "2246460",
    "end": "2252339"
  },
  {
    "text": "so let's go back here and",
    "start": "2252339",
    "end": "2260039"
  },
  {
    "text": "I will just put that in clipboard save the changes do a quick build",
    "start": "2260079",
    "end": "2266320"
  },
  {
    "text": "see if we get oh that's not going to build see if we get a better result",
    "start": "2266320",
    "end": "2272400"
  },
  {
    "text": "thanks Brendan I'm glad you're here today that's awesome",
    "start": "2277900",
    "end": "2283839"
  },
  {
    "text": "permissions Dot",
    "start": "2283839",
    "end": "2287339"
  },
  {
    "text": "so ah no well no yeah you're right you're right that is right permissions dot uh",
    "start": "2290680",
    "end": "2298240"
  },
  {
    "text": "configure Access Control there we go so that's nice and easy to use",
    "start": "2298240",
    "end": "2305320"
  },
  {
    "text": "and then we can say if you can configure Access Control then you get the standard check box",
    "start": "2305320",
    "end": "2313500"
  },
  {
    "text": "and if you're not authorized we'll just do a quick and dirty and we'll say you",
    "start": "2314020",
    "end": "2320260"
  },
  {
    "text": "can't change it and once more it's disabled",
    "start": "2320260",
    "end": "2325300"
  },
  {
    "text": "okay one last change to make we have to protect authorization on the back end so",
    "start": "2325300",
    "end": "2332079"
  },
  {
    "text": "let's load up the access control controller",
    "start": "2332079",
    "end": "2339180"
  },
  {
    "text": "you'll probably just call that the Access Controller it would would be fine",
    "start": "2339579",
    "end": "2346078"
  },
  {
    "text": "there we go so currently the entire uh controller is restricted to configure",
    "start": "2346900",
    "end": "2353920"
  },
  {
    "text": "Access Control so we'll take that away and we've got two actions in here one to",
    "start": "2353920",
    "end": "2361359"
  },
  {
    "text": "get the configuration so that'll be our view access control or depending on how we Define our permissions it might be",
    "start": "2361359",
    "end": "2367599"
  },
  {
    "text": "view or configure but our administrators have all so we'll just go View",
    "start": "2367599",
    "end": "2374140"
  },
  {
    "text": "and then over here for update configuration of course",
    "start": "2374140",
    "end": "2379960"
  },
  {
    "text": "configure Access Control so we'll go ahead and run that now and",
    "start": "2379960",
    "end": "2385000"
  },
  {
    "text": "see if it's working as expected for the auditor can they view Access Control do they have read-only access",
    "start": "2385000",
    "end": "2392640"
  },
  {
    "text": "wait for it to start up looking good a bit of a mess here",
    "start": "2401740",
    "end": "2408540"
  },
  {
    "text": "that's not good all right again",
    "start": "2409900",
    "end": "2415320"
  },
  {
    "text": "okay hang on a sec this is flexible off",
    "start": "2420460",
    "end": "2425980"
  },
  {
    "text": "so it must be running on a different port and that's the old basic auth one",
    "start": "2425980",
    "end": "2431700"
  },
  {
    "text": "here we go now logging in auditor",
    "start": "2436420",
    "end": "2443220"
  },
  {
    "text": "I knew that has happened I've got to learn to copy and paste more",
    "start": "2450579",
    "end": "2455640"
  },
  {
    "text": "okay we can't see Access Control so that's no good",
    "start": "2458400",
    "end": "2464619"
  },
  {
    "text": "I'm just gonna of course I forgot to assign order to the permission",
    "start": "2464619",
    "end": "2471160"
  },
  {
    "text": "that's let's leave that there so I don't have to type in the password more than I have to",
    "start": "2471160",
    "end": "2476200"
  },
  {
    "text": "and go to incognito logging in admin",
    "start": "2476200",
    "end": "2483099"
  },
  {
    "text": "whoops I mean I'm gonna have to bring a whole desk next time I'll bring a desk an",
    "start": "2483099",
    "end": "2488920"
  },
  {
    "text": "extra monitor a keyboard a mouse and my headset",
    "start": "2488920",
    "end": "2494339"
  },
  {
    "text": "we'll be right at home",
    "start": "2495339",
    "end": "2498420"
  },
  {
    "text": "okay here we are we can see everything scrolling down we've got view access",
    "start": "2502300",
    "end": "2507760"
  },
  {
    "text": "control so we'll grant that to our auditors we can come over here and do a quick refresh",
    "start": "2507760",
    "end": "2513760"
  },
  {
    "text": "they've got Access Control and they're not authorized to access the resource we can fix that too",
    "start": "2513760",
    "end": "2520720"
  },
  {
    "text": "so let's go to access control index now of course I'm trying to",
    "start": "2520720",
    "end": "2526420"
  },
  {
    "text": "demonstrate how easy the flexible authorization approach is so don't take this part as an example",
    "start": "2526420",
    "end": "2533619"
  },
  {
    "text": "so we'll go to the top here and change",
    "start": "2533619",
    "end": "2538960"
  },
  {
    "text": "that to configure or view Access Control try again there we go",
    "start": "2538960",
    "end": "2548040"
  },
  {
    "text": "now hot reload doesn't tend to work very well for me so we'll just run it again",
    "start": "2549880",
    "end": "2558299"
  },
  {
    "text": "sometimes it's working really nicely I have the best results when I go dot net watch run rather through Visual Studio",
    "start": "2559720",
    "end": "2567280"
  },
  {
    "text": "which is very nice",
    "start": "2567280",
    "end": "2570420"
  },
  {
    "text": "that's the administrator and that's the auditor so now you can",
    "start": "2572440",
    "end": "2579940"
  },
  {
    "text": "see they have access to access control they can't change anything and so",
    "start": "2579940",
    "end": "2585099"
  },
  {
    "text": "there's our documentation right we can see who has access to what when",
    "start": "2585099",
    "end": "2590440"
  },
  {
    "text": "developers create new features they Define the necessary access policies using permissions rather than roles",
    "start": "2590440",
    "end": "2598980"
  },
  {
    "text": "okay so in summary today we looked at authorization with",
    "start": "2599380",
    "end": "2605680"
  },
  {
    "text": "ASP net core I demonstrated the typical approach using role-based access control",
    "start": "2605680",
    "end": "2611319"
  },
  {
    "text": "and you saw that for a simple requirement such as adding an auditor role it was a lot of work we had to",
    "start": "2611319",
    "end": "2618819"
  },
  {
    "text": "develop test deploy and document changes which of course we forgot to do",
    "start": "2618819",
    "end": "2625000"
  },
  {
    "text": "I then showed a flexible approach using permissions-based authorization and with",
    "start": "2625000",
    "end": "2630460"
  },
  {
    "text": "this approach it was trivial to add a new auditor role now for small applications with a small",
    "start": "2630460",
    "end": "2637960"
  },
  {
    "text": "amount of users the standard approach is probably fine if you just have one or two roles say administrators and users",
    "start": "2637960",
    "end": "2645099"
  },
  {
    "text": "then the flexible approach could be Overkill but for production applications in large",
    "start": "2645099",
    "end": "2650560"
  },
  {
    "text": "Enterprise typically a flexible approach will be essential it's the only thing",
    "start": "2650560",
    "end": "2655720"
  },
  {
    "text": "that will isolate you from those organization changes and help you deliver to deliver business value rather",
    "start": "2655720",
    "end": "2662980"
  },
  {
    "text": "than making changes to support that sort of thing and this is going to result in putting",
    "start": "2662980",
    "end": "2668980"
  },
  {
    "text": "the power into the hands of the application users and administrators rather than the Developers",
    "start": "2668980",
    "end": "2676240"
  },
  {
    "text": "so you can find the code and slides on GitHub if you're Keen to learn more",
    "start": "2676240",
    "end": "2681880"
  },
  {
    "text": "so that's at github.com jasontaylorduff flexible asp.net core",
    "start": "2681880",
    "end": "2686920"
  },
  {
    "text": "authorization as promised here's the QR code for the",
    "start": "2686920",
    "end": "2693220"
  },
  {
    "text": "ssw rewards app you can scan that code earn some points and win some prizes",
    "start": "2693220",
    "end": "2700119"
  },
  {
    "text": "I hope you've enjoyed my talk today it's great to see so many of you in person thank you",
    "start": "2700119",
    "end": "2707578"
  },
  {
    "text": "[Applause] we've got plenty of time for questions",
    "start": "2708460",
    "end": "2714400"
  },
  {
    "text": "if anyone has any more yes",
    "start": "2714400",
    "end": "2719880"
  },
  {
    "text": "yeah no problem so when you're loading the permissions dynamically I think that",
    "start": "2728560",
    "end": "2733720"
  },
  {
    "text": "the best approach is to have a c-sharp file representing the identification and",
    "start": "2733720",
    "end": "2739300"
  },
  {
    "text": "the name of those permissions as constants that will give you some nice flexibility to apply those permissions",
    "start": "2739300",
    "end": "2745780"
  },
  {
    "text": "in the same way but then you'll need an additional process to sync those permissions to the database okay and I",
    "start": "2745780",
    "end": "2753040"
  },
  {
    "text": "like to do that when when the application is initialized and basically",
    "start": "2753040",
    "end": "2758560"
  },
  {
    "text": "what it will do is go and make sure all of those permissions are in the database and if not it will go and create them",
    "start": "2758560",
    "end": "2765880"
  },
  {
    "text": "and of course the permissions enumeration I showed is quite simple I would also want to add some attributes",
    "start": "2765880",
    "end": "2771940"
  },
  {
    "text": "to that so that we can have a description so that we can have a display name those sorts of things but I",
    "start": "2771940",
    "end": "2777520"
  },
  {
    "text": "wanted to focus on the engine behind the scenes so that you could see how to implement it",
    "start": "2777520",
    "end": "2783060"
  },
  {
    "text": "any other questions",
    "start": "2783579",
    "end": "2786359"
  },
  {
    "text": "can you can you say that again sorry contact the method with the authorized",
    "start": "2793540",
    "end": "2799359"
  },
  {
    "text": "actually what you did in the back end can you can you tag the",
    "start": "2799359",
    "end": "2804819"
  },
  {
    "text": "method with the authorized attribute",
    "start": "2804819",
    "end": "2808380"
  },
  {
    "text": "that that's the thing that ideally unless you're going to specify the",
    "start": "2810660",
    "end": "2816400"
  },
  {
    "text": "permission name or identifier by hand I think it's best to have some some kind",
    "start": "2816400",
    "end": "2822880"
  },
  {
    "text": "of C sharp compiled object to represent those permissions so if you need to have",
    "start": "2822880",
    "end": "2828460"
  },
  {
    "text": "them in the database by all means do that but sync it based off that C sharp class keep it synced based off that C",
    "start": "2828460",
    "end": "2835720"
  },
  {
    "text": "sharp class now that gives you the advantage of being able to query and join and easily associate additional",
    "start": "2835720",
    "end": "2842200"
  },
  {
    "text": "information while also being able to use those authorized attributes",
    "start": "2842200",
    "end": "2848099"
  },
  {
    "text": "any other questions yes",
    "start": "2849280",
    "end": "2853859"
  },
  {
    "text": "implementation decide to switch how hard oh well you've you let's have a",
    "start": "2868200",
    "end": "2875200"
  },
  {
    "text": "look at the card so it is all contained",
    "start": "2875200",
    "end": "2882220"
  },
  {
    "text": "in this particular project within the shared project",
    "start": "2882220",
    "end": "2887319"
  },
  {
    "text": "in a single folder called authorization",
    "start": "2887319",
    "end": "2894579"
  },
  {
    "text": "so essentially your changes will be limited to this set of files and to any",
    "start": "2897339",
    "end": "2902920"
  },
  {
    "text": "authorized attributes that you've applied or anywhere where you have used those permissions so the impact of the",
    "start": "2902920",
    "end": "2909640"
  },
  {
    "text": "change will be fairly limited but it will cost depend on how many access policies you've actually applied the",
    "start": "2909640",
    "end": "2916300"
  },
  {
    "text": "nice thing is is that when you move from permissions enumeration to something else it'll be breaking changes and",
    "start": "2916300",
    "end": "2922480"
  },
  {
    "text": "you'll see those in the output and you'll be able to fix them one at a time so not too bad of course if you went to",
    "start": "2922480",
    "end": "2929380"
  },
  {
    "text": "something like a static class with constants then it's almost the same",
    "start": "2929380",
    "end": "2935859"
  },
  {
    "text": "you'll be replacing those little or operators uh but yeah otherwise not too",
    "start": "2935859",
    "end": "2941740"
  },
  {
    "text": "difficult yes",
    "start": "2941740",
    "end": "2947440"
  },
  {
    "text": "yes",
    "start": "2947440",
    "end": "2949800"
  },
  {
    "text": "at all yeah that's right that income I didn't think about operator overloading well that is cool",
    "start": "2954000",
    "end": "2961900"
  },
  {
    "text": "yeah yeah",
    "start": "2961900",
    "end": "2966180"
  },
  {
    "text": "that's right if you make it behave exactly the same as Nina no changes",
    "start": "2969099",
    "end": "2975040"
  },
  {
    "text": "and it's still very descriptive a little bit more descriptive than when you say authorized roles we have to know that",
    "start": "2975040",
    "end": "2982119"
  },
  {
    "text": "it's all when we read the permissions value we know that it's all because it's using the or operator so permissions a",
    "start": "2982119",
    "end": "2989500"
  },
  {
    "text": "or permissions B rather than administrators comma accounts",
    "start": "2989500",
    "end": "2995020"
  },
  {
    "text": "it's going to be easy I think to just put an array of",
    "start": "2995020",
    "end": "3000140"
  },
  {
    "text": "it'll be easier to what sorry",
    "start": "3000240",
    "end": "3003560"
  },
  {
    "text": "yeah and you could think about having multiple arrays of bit Flags",
    "start": "3006240",
    "end": "3012180"
  },
  {
    "text": "yes it gets a bit more difficult to manage because in the back end we're",
    "start": "3012180",
    "end": "3017700"
  },
  {
    "text": "creating a policy name so we'd have to think about the max length of that policy name and if we have multiple",
    "start": "3017700",
    "end": "3023460"
  },
  {
    "text": "arrays of bit flags and we're saying uh that the permissions can come from any",
    "start": "3023460",
    "end": "3030900"
  },
  {
    "text": "of those enumerations it's just a bit tricky I think we can do it but yeah",
    "start": "3030900",
    "end": "3038539"
  },
  {
    "text": "okay yeah well hopefully soon we'll get 128 bit and then then we'll have 128 options to",
    "start": "3044220",
    "end": "3051599"
  },
  {
    "text": "play with Maybe all right thanks again everyone I'll be",
    "start": "3051599",
    "end": "3058440"
  },
  {
    "text": "around all day so feel free to come off and chat and we can look at the code and and talk options",
    "start": "3058440",
    "end": "3063540"
  },
  {
    "text": "see ya thank you [Applause]",
    "start": "3063540",
    "end": "3071389"
  }
]