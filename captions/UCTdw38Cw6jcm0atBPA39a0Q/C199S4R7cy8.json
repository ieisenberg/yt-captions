[
  {
    "start": "0",
    "end": "154000"
  },
  {
    "text": "hey uh hi everyone uh thank you for uh tuning into my session at uh MDC Osa",
    "start": "8200",
    "end": "16600"
  },
  {
    "text": "today I wish I was there in person to to uh to speak but uh I'm glad that I can",
    "start": "16600",
    "end": "23519"
  },
  {
    "text": "do it uh online so uh I hope that you had a great lunch uh everyone so so uh I",
    "start": "23519",
    "end": "31240"
  },
  {
    "text": "will start uh so I'm going to be speaking about uh developer fundamentals",
    "start": "31240",
    "end": "37559"
  },
  {
    "text": "for serverless uh. net uh with Asher uh durable",
    "start": "37559",
    "end": "43680"
  },
  {
    "text": "functions and uh let me see uh let me start by sharing about myself I'm uh",
    "start": "43680",
    "end": "51320"
  },
  {
    "text": "Jonah Anderson I'm a software developer and at Forefront Consulting",
    "start": "51320",
    "end": "57039"
  },
  {
    "text": "it's an IT consulting company here in Sweden I code uh full",
    "start": "57039",
    "end": "63198"
  },
  {
    "text": "stock.now I also mentor to inspire others uh into Tech so uh when I'm not",
    "start": "78360",
    "end": "86439"
  },
  {
    "text": "public speaking I have a lot of uh Hobbies I have a laber uh puppy I like",
    "start": "86439",
    "end": "92439"
  },
  {
    "text": "to play chess I heard from one of my friends that are there in the conference that uh some speakers are playing chess",
    "start": "92439",
    "end": "99640"
  },
  {
    "text": "so I'm gonna I'm I'm missing that fun um I also uh I'm also writing a book about",
    "start": "99640",
    "end": "106439"
  },
  {
    "text": "Asher which is actually my first book and I also like uh gardening and I've",
    "start": "106439",
    "end": "112040"
  },
  {
    "text": "been working from home uh for the past year and I use a dis desk bike when I'm",
    "start": "112040",
    "end": "118920"
  },
  {
    "text": "remote working and I also like uh playing chess uh and reading books so uh",
    "start": "118920",
    "end": "125079"
  },
  {
    "text": "today uh it it is a uh developer fundamentals and what I plan to do is uh",
    "start": "125079",
    "end": "131680"
  },
  {
    "text": "to discuss and share with you what seress is uh Asher functions what is",
    "start": "131680",
    "end": "137640"
  },
  {
    "text": "durable functions uh the different application patterns of durable functions that will help uh solve uh",
    "start": "137640",
    "end": "144879"
  },
  {
    "text": "complex problems uh in uh development uh a demo and uh some recommended uh",
    "start": "144879",
    "end": "152640"
  },
  {
    "text": "learning resources so I want to share with you about uh this story uh well I started",
    "start": "152640",
    "end": "160760"
  },
  {
    "start": "154000",
    "end": "154000"
  },
  {
    "text": "computer science and also software development uh in school and I had uh",
    "start": "160760",
    "end": "166800"
  },
  {
    "text": "this story or heard this story about the dining philosophers problem in which uh there's a scenario of uh five",
    "start": "166800",
    "end": "173959"
  },
  {
    "text": "philosophers and they had only five Chopsticks in the table and uh a",
    "start": "173959",
    "end": "180680"
  },
  {
    "text": "philosopher uh each of them needs to use both Chopsticks in order to uh from left",
    "start": "180680",
    "end": "186480"
  },
  {
    "text": "to right in order to eat otherwise he or she can't eat so the the purpose of this",
    "start": "186480",
    "end": "193000"
  },
  {
    "text": "uh dining philosophers problem I mean uh problem is that there's a risk of uh",
    "start": "193000",
    "end": "198519"
  },
  {
    "text": "having an issue of Deadlock and of course uh the uh if there's a deadlock",
    "start": "198519",
    "end": "203920"
  },
  {
    "text": "that means uh there's a survation which means that uh all of the philosophers will won't be able to to eat if each of",
    "start": "203920",
    "end": "210920"
  },
  {
    "text": "them picks the the Chopstick from left to right so what's my point in this uh",
    "start": "210920",
    "end": "217040"
  },
  {
    "text": "philosophers uh toi so my point here is that uh in programming especially I that",
    "start": "217040",
    "end": "224640"
  },
  {
    "text": "works in development uh daily as my job I one of the worst things or one of the",
    "start": "224640",
    "end": "231760"
  },
  {
    "text": "challenges that I've experienced when I was beginning programming was dealing with concurrency or deadlock problems in",
    "start": "231760",
    "end": "239599"
  },
  {
    "text": "uh in development and the definition of a deadlock in Tech terms.com is that",
    "start": "239599",
    "end": "247000"
  },
  {
    "text": "when deadlock happens when a program uh cannot access a resource because it's uh",
    "start": "247000",
    "end": "252920"
  },
  {
    "text": "of course it's a blocked just like what you see in the gift image there if all of the cars are like uh are doesn't have",
    "start": "252920",
    "end": "261160"
  },
  {
    "text": "any rules to follow then it will be uh cause or it will be a problem so uh we",
    "start": "261160",
    "end": "267639"
  },
  {
    "text": "experienc this as well in uh software development so uh for me I believe that",
    "start": "267639",
    "end": "274880"
  },
  {
    "text": "based on my experience that the problems that we have in software development like uh concurrency racing conditions or",
    "start": "274880",
    "end": "282680"
  },
  {
    "text": "deadlock can be solved with serous Solutions like Asher functions or",
    "start": "282680",
    "end": "288039"
  },
  {
    "text": "durable functions so uh before we dig deeper into what Asher functions or",
    "start": "288039",
    "end": "294400"
  },
  {
    "start": "290000",
    "end": "290000"
  },
  {
    "text": "durable functions are we going to look into what seress is so serverless is",
    "start": "294400",
    "end": "302320"
  },
  {
    "text": "actually not really uh serverless it's uh it means it just means that uh",
    "start": "302320",
    "end": "308720"
  },
  {
    "text": "there's an obstruction of servers and the good thing about serverless is that",
    "start": "308720",
    "end": "314440"
  },
  {
    "text": "uh there's uh a an automate you can automate your processes your business processes and break your business",
    "start": "314440",
    "end": "321639"
  },
  {
    "text": "process into a logic or small functions and uh you can uh pay as you go or you",
    "start": "321639",
    "end": "328919"
  },
  {
    "text": "can pay only for uh the instances or the tasks that are running and uh because of",
    "start": "328919",
    "end": "336960"
  },
  {
    "text": "you don't have to worry about maintaining or updating the servers uh",
    "start": "336960",
    "end": "342400"
  },
  {
    "text": "because uh the cloud provider is taking care of that for us we focus more on",
    "start": "342400",
    "end": "347440"
  },
  {
    "text": "delivering and we get more de developer productivity and uh serverless gives us",
    "start": "347440",
    "end": "354319"
  },
  {
    "text": "a lot of possibilities in integrating with other Asher services or cloud services or external apis without uh",
    "start": "354319",
    "end": "362919"
  },
  {
    "text": "without limitations because you can code it in the major languages that we have",
    "start": "362919",
    "end": "368039"
  },
  {
    "text": "today and uh it it is autoscaling which is hard to do if you have the unpromised",
    "start": "368039",
    "end": "374440"
  },
  {
    "text": "or normal uh like traditional H uh infrastructure so uh I'm I'm in Sweden",
    "start": "374440",
    "end": "382800"
  },
  {
    "text": "right now and in Sweden we like to uh to F uh the FICA is the word that we use",
    "start": "382800",
    "end": "389880"
  },
  {
    "text": "when we spend time uh taking or taking a brew a brew good A cup of brewed coffee",
    "start": "389880",
    "end": "396440"
  },
  {
    "text": "with something sweet so I decided to do a serverless uh sweet Swedish F",
    "start": "396440",
    "end": "402400"
  },
  {
    "text": "comparison with what the technologies that we have uh today so for example I",
    "start": "402400",
    "end": "407720"
  },
  {
    "text": "compare M lith as a layered cake in which uh we have everything in one place",
    "start": "407720",
    "end": "413039"
  },
  {
    "text": "we have uh our databases as servers web servers and uh uh everything everything",
    "start": "413039",
    "end": "419800"
  },
  {
    "text": "are monitoring in one place like a on promise that data center so it that's monolith like a layered cake and then",
    "start": "419800",
    "end": "427000"
  },
  {
    "text": "micro services are like cupcakes in which you have uh each cupcake is like a",
    "start": "427000",
    "end": "433440"
  },
  {
    "text": "micros service in which you have uh each service has its purpose one microservice",
    "start": "433440",
    "end": "438720"
  },
  {
    "text": "that take cares of users one service is uh taking care of the billing and you",
    "start": "438720",
    "end": "444680"
  },
  {
    "text": "know how it how it works with microservices so they're like uh cupcakes and then there's also",
    "start": "444680",
    "end": "450199"
  },
  {
    "text": "containers that's a pretty Trend today so they are like uh uh cookies in a box",
    "start": "450199",
    "end": "455800"
  },
  {
    "text": "uh you can carry it ever uh carry it anytime you want everything is in there",
    "start": "455800",
    "end": "460840"
  },
  {
    "text": "you can go in a picnic so just like also in containers it's easy to carry it's light it's also fast easy to deploy and",
    "start": "460840",
    "end": "468720"
  },
  {
    "text": "you have everything in one place and last but not the least is also the serverless so they are like small",
    "start": "468720",
    "end": "475440"
  },
  {
    "text": "candies they're very tiny but it serves its purpose to to to have something",
    "start": "475440",
    "end": "480599"
  },
  {
    "text": "sweet and just like also uh serverless functions or the serverless technology",
    "start": "480599",
    "end": "486000"
  },
  {
    "text": "that we have today we can uh we can uh focus on uh doing or coding the logic",
    "start": "486000",
    "end": "493400"
  },
  {
    "text": "that we need in our uh applications to deliver and my point with this uh",
    "start": "493400",
    "end": "500639"
  },
  {
    "text": "serverless uh comparison it's not actually to make you uh to make you",
    "start": "500639",
    "end": "506840"
  },
  {
    "text": "hungry after you had your lunch but I know that you have something sweet and some coffee already uh after lunch but",
    "start": "506840",
    "end": "513719"
  },
  {
    "text": "my point in this uh server last swe uh sweet Swedish uh comparison is that the",
    "start": "513719",
    "end": "519760"
  },
  {
    "text": "more uh the more we go to the left which is the monolith of course we have more",
    "start": "519760",
    "end": "525800"
  },
  {
    "text": "control because we have everything on premise and everything is in there but the more we go from left to right that",
    "start": "525800",
    "end": "532320"
  },
  {
    "text": "means that we have uh better productivity we deliver faster uh to our",
    "start": "532320",
    "end": "538839"
  },
  {
    "text": "clients so this is uh this is uh a scenario in which uh in which it is",
    "start": "538839",
    "end": "545120"
  },
  {
    "text": "dependent to uh what kind of problems that we are trying uh to",
    "start": "545120",
    "end": "551240"
  },
  {
    "text": "solve so what is uh servol as functions I mean aser functions so Asher functions",
    "start": "551240",
    "end": "557240"
  },
  {
    "text": "is a a compute service you can uh Create It On Demand uh in different ways uh",
    "start": "557240",
    "end": "564760"
  },
  {
    "text": "it's pay as you go and it's uh the major feature of it is uh it's event driven",
    "start": "564760",
    "end": "571480"
  },
  {
    "text": "you focus as a developer you focus on the logic which means that you have better productivity you don't have to",
    "start": "571480",
    "end": "578279"
  },
  {
    "text": "worry about infrastructures and as mentioned it can integrate well with",
    "start": "578279",
    "end": "584440"
  },
  {
    "text": "other services and API and uh so basically AER functions is uh code the",
    "start": "584440",
    "end": "592640"
  },
  {
    "text": "logic that we write uh as developers in different languages and it's uh events",
    "start": "592640",
    "end": "598640"
  },
  {
    "text": "and data so since it's event driven it's depend it gets triggered or it's",
    "start": "598640",
    "end": "603839"
  },
  {
    "text": "dependent on the events for example events can be an HTTP trigger a cosmos",
    "start": "603839",
    "end": "610480"
  },
  {
    "text": "DB Trigger or a service bus uh trigger and other uh triggers that's supported",
    "start": "610480",
    "end": "616440"
  },
  {
    "text": "in Asher functions and the data is the Bindings that we have for input and",
    "start": "616440",
    "end": "621640"
  },
  {
    "text": "output the the data in and out uh in our function app so that is uh ashure",
    "start": "621640",
    "end": "627480"
  },
  {
    "text": "functions and then uh we also have uh Asher durable functions which is the",
    "start": "627480",
    "end": "633440"
  },
  {
    "text": "main topic of the session today so durable functions is an extension of uh",
    "start": "633440",
    "end": "638959"
  },
  {
    "text": "Asher functions in which you are allowed or which is useful if you want to write",
    "start": "638959",
    "end": "645760"
  },
  {
    "text": "stateful workflow in the serverless environment and the main feature the",
    "start": "645760",
    "end": "650920"
  },
  {
    "text": "great thing about durable functions is that uh it manages it checkpoints and it",
    "start": "650920",
    "end": "656560"
  },
  {
    "text": "restarts the state for us which uh which which is not uh normal or possible in a",
    "start": "656560",
    "end": "661880"
  },
  {
    "text": "normal Asher functions and the technology behind uh the durable functions is uh the durable test",
    "start": "661880",
    "end": "669440"
  },
  {
    "text": "framework and you can develop it with C JavaScript python uh FSH and Powershell",
    "start": "669440",
    "end": "677760"
  },
  {
    "text": "and in this session I will be doing my demo and C uh because that's uh my my",
    "start": "677760",
    "end": "683680"
  },
  {
    "text": "language uh and that's uh what I code and uh uh next is",
    "start": "683680",
    "end": "689839"
  },
  {
    "text": "uh next is uh this one so uh what differs Asher functions from durable",
    "start": "689839",
    "end": "695800"
  },
  {
    "text": "functions so uh it's a common question um because there there durable functions",
    "start": "695800",
    "end": "702160"
  },
  {
    "text": "is an extension but uh Asher functions is uh stateless and durable functions",
    "start": "702160",
    "end": "708320"
  },
  {
    "text": "are uh stateful which means that if you have a use case or a business problem",
    "start": "708320",
    "end": "715000"
  },
  {
    "text": "that requires it to be long running and stateful then uh durable functions are",
    "start": "715000",
    "end": "721079"
  },
  {
    "text": "worth uh checking out so uh before you can get started uh developing workflows",
    "start": "721079",
    "end": "728240"
  },
  {
    "start": "723000",
    "end": "723000"
  },
  {
    "text": "with durable functions there uh it is important to know the different uh types",
    "start": "728240",
    "end": "735120"
  },
  {
    "text": "uh of uh the the the technology so uh there are four durable functions typ uh",
    "start": "735120",
    "end": "742760"
  },
  {
    "text": "it's first is uh the client functions so client functions uh are triggered by the",
    "start": "742760",
    "end": "749720"
  },
  {
    "text": "orchestration trigger binding and in here this is uh this is the starting",
    "start": "749720",
    "end": "754920"
  },
  {
    "text": "point of your workflow and client functions can be an HTTP Trigger or a",
    "start": "754920",
    "end": "760320"
  },
  {
    "text": "blob trigger an event this is where the event starts and uh and the orchestrator",
    "start": "760320",
    "end": "767800"
  },
  {
    "text": "functions this is uh the heart of your workflow because this is where you write",
    "start": "767800",
    "end": "773560"
  },
  {
    "text": "your test your workflow how your test or activities uh would be executed and when",
    "start": "773560",
    "end": "780480"
  },
  {
    "text": "they are executed and uh the next uh type is uh activity functions and",
    "start": "780480",
    "end": "788079"
  },
  {
    "text": "activity functions this is where you write your uh logic and this is uh the",
    "start": "788079",
    "end": "793560"
  },
  {
    "text": "unit of test that you need to perform in your uh workflow and how they are called",
    "start": "793560",
    "end": "799600"
  },
  {
    "text": "depends on how you design your workflow in your orchestrator or the pattern that",
    "start": "799600",
    "end": "805120"
  },
  {
    "text": "you use which I will be discussing uh on the later uh in the later section of",
    "start": "805120",
    "end": "810480"
  },
  {
    "text": "this presentation and there's also another uh type uh which is called uh The Entity uh",
    "start": "810480",
    "end": "818199"
  },
  {
    "text": "functions which is uh ideal in using uh using or reading or updating uh durable",
    "start": "818199",
    "end": "825959"
  },
  {
    "text": "entities and the difference between the entity functions compared to client functions orchestrator and activity",
    "start": "825959",
    "end": "832759"
  },
  {
    "text": "functions is that uh entity functions can only be triggered with uh entity Tri",
    "start": "832759",
    "end": "839240"
  },
  {
    "text": "Tri and uh it's supported only from uh durable functions 2.0 and above as well",
    "start": "839240",
    "end": "846839"
  },
  {
    "text": "as there are only three languages supported for entity functions those are",
    "start": "846839",
    "end": "851920"
  },
  {
    "text": "net JavaScript and uh python so uh of all the types that we",
    "start": "851920",
    "end": "859000"
  },
  {
    "text": "see here I want to focus on uh the the orchestrator because uh the orchestrator",
    "start": "859000",
    "end": "866759"
  },
  {
    "text": "that's where we write our workflow so that means that the orchestrator is",
    "start": "866759",
    "end": "872440"
  },
  {
    "text": "our friend however the orchestrator is also strick why is that because uh the",
    "start": "872440",
    "end": "881399"
  },
  {
    "text": "orchestrator is deterministic which means that whatever we write in the work uh in the",
    "start": "881399",
    "end": "888240"
  },
  {
    "text": "orchestrator for our workflow it needs to be specific and uh like designed in a",
    "start": "888240",
    "end": "894399"
  },
  {
    "text": "deterministic way and why is that it's because the entire",
    "start": "894399",
    "end": "899560"
  },
  {
    "text": "uh workflow uh will be replayed so uh the technology behind this uh was uh can",
    "start": "899560",
    "end": "908480"
  },
  {
    "text": "be read about more at uh deterministic uh apis uh on this uh link and uh there",
    "start": "908480",
    "end": "916440"
  },
  {
    "text": "are some Co code constraints uh to follow when uh you're writing uh your uh",
    "start": "916440",
    "end": "923560"
  },
  {
    "text": "workflow so this is how it looks with uh determined uh orchestrator so as we can",
    "start": "923560",
    "end": "930680"
  },
  {
    "text": "see here we have uh a a a workflow with",
    "start": "930680",
    "end": "936000"
  },
  {
    "text": "uh an orchestrator with several activity functions so that's how it looks and",
    "start": "936000",
    "end": "941120"
  },
  {
    "text": "this is also to the right we see isolated Asher functions with a no",
    "start": "941120",
    "end": "947040"
  },
  {
    "text": "orchestrator and the difference between left and right here for example on the right of uh if you have an asure",
    "start": "947040",
    "end": "953279"
  },
  {
    "text": "function or a function app that's uh hosted uh or provisioned in a different",
    "start": "953279",
    "end": "959000"
  },
  {
    "text": "Resource Group and the The Logical uh machine in Asher or in the cloud gets",
    "start": "959000",
    "end": "965440"
  },
  {
    "text": "restarted uh there's a possibility that you loses its state however if you have a long running stateful workflow to the",
    "start": "965440",
    "end": "972920"
  },
  {
    "text": "left with a workflow where you deign uh how things are done then it would be uh",
    "start": "972920",
    "end": "979360"
  },
  {
    "text": "easier to control as uh as a developer and uh here's uh the uh",
    "start": "979360",
    "end": "986480"
  },
  {
    "start": "984000",
    "end": "984000"
  },
  {
    "text": "orchestrator code uh constraint which means there are dos and don'ts uh that",
    "start": "986480",
    "end": "993319"
  },
  {
    "text": "that are good to know before you start coding uh durable functions so the first",
    "start": "993319",
    "end": "1000759"
  },
  {
    "text": "red it's very red uh so the first don't is uh of course uh because uh the",
    "start": "1000759",
    "end": "1006800"
  },
  {
    "text": "orchestrator is uh deterministic uh it's not uh allowed to I mean it's not",
    "start": "1006800",
    "end": "1013560"
  },
  {
    "text": "recommended to uh Generate random numbers uh for example example uh like",
    "start": "1013560",
    "end": "1020639"
  },
  {
    "text": "IDs uh in our user management and uh connection strings uh blocking apis like",
    "start": "1020639",
    "end": "1028558"
  },
  {
    "text": "uh thread sleep and runs and of course infinite loops and uh also current",
    "start": "1028559",
    "end": "1035240"
  },
  {
    "text": "datetime because uh current datetime is not deterministic it changes every",
    "start": "1035240",
    "end": "1040640"
  },
  {
    "text": "milliseconds so what you can do instead is that uh if you really need to create",
    "start": "1040640",
    "end": "1046240"
  },
  {
    "text": "a random number or WID then there's a method in the orchestration context",
    "start": "1046240",
    "end": "1051360"
  },
  {
    "text": "called newd and you can also pass your uh connection string or configuration in",
    "start": "1051360",
    "end": "1057400"
  },
  {
    "text": "the activity functions and uh if you really need to do some control of uh",
    "start": "1057400",
    "end": "1064000"
  },
  {
    "text": "like threads or iy sync uh like asynchronous processes there's actually",
    "start": "1064000",
    "end": "1069600"
  },
  {
    "text": "great uh methods already in the durable orchestration context and if you really",
    "start": "1069600",
    "end": "1075320"
  },
  {
    "text": "need to repeat the process or have a look what you can do is make use of the",
    "start": "1075320",
    "end": "1080600"
  },
  {
    "text": "method create as new and call another uh method or activity uh function uh in",
    "start": "1080600",
    "end": "1087360"
  },
  {
    "text": "your orchestrator and uh there's also uh uh a method called you specific for daytime",
    "start": "1087360",
    "end": "1095240"
  },
  {
    "text": "Uh current Q Toc daytime if you need to have the daytime in your",
    "start": "1095240",
    "end": "1100600"
  },
  {
    "text": "orchestrator so so those are the do and don'ts and these are only the some of",
    "start": "1100600",
    "end": "1106679"
  },
  {
    "text": "the things that I listed out there are more actually in the link that you see uh",
    "start": "1106679",
    "end": "1112600"
  },
  {
    "text": "below so um so now we have uh the different types uh of durable functions",
    "start": "1112600",
    "end": "1120440"
  },
  {
    "text": "uh we we learned more about our friend the orchestrator and now we need to we also",
    "start": "1120440",
    "end": "1126360"
  },
  {
    "text": "need to know the basic of what are the common patterns application patterns",
    "start": "1126360",
    "end": "1131799"
  },
  {
    "text": "that we can do with uh durable functions so uh there are uh six documented uh",
    "start": "1131799",
    "end": "1139320"
  },
  {
    "text": "patterns uh in the Microsoft docs uh the first pattern is called uh function",
    "start": "1139320",
    "end": "1145960"
  },
  {
    "text": "chaining and then the second one is fan out fan in and then we also have the",
    "start": "1145960",
    "end": "1152919"
  },
  {
    "text": "third pattern Asic HTTP API and then there's the monitor pattern and then",
    "start": "1152919",
    "end": "1160559"
  },
  {
    "text": "human interaction pattern and then there's also the aggregator pattern so",
    "start": "1160559",
    "end": "1167120"
  },
  {
    "start": "1167000",
    "end": "1167000"
  },
  {
    "text": "the function chaining is is the first pattern so as the word itself uh says",
    "start": "1167120",
    "end": "1173000"
  },
  {
    "text": "it's uh it's a chain of uh sequence or sequence of tests so we have h a first",
    "start": "1173000",
    "end": "1180200"
  },
  {
    "text": "function here that passed in the data to function to the function two to function",
    "start": "1180200",
    "end": "1186039"
  },
  {
    "text": "three so on and so forth so uh it if you need uh to solve a problem that requires",
    "start": "1186039",
    "end": "1193520"
  },
  {
    "text": "uh like that requires a sequence of action that are stateful and long",
    "start": "1193520",
    "end": "1198720"
  },
  {
    "text": "running then function chaining is ideal pattern to use so basically the output",
    "start": "1198720",
    "end": "1203960"
  },
  {
    "text": "of function one is a required input of function two so on and so forth depending on how long is your uh is your",
    "start": "1203960",
    "end": "1212559"
  },
  {
    "text": "uh chain so function chaining in action uh looks like this behind the scenes so",
    "start": "1212559",
    "end": "1220360"
  },
  {
    "start": "1214000",
    "end": "1214000"
  },
  {
    "text": "uh so for example you have uh uh an function up which is uh triggered by an",
    "start": "1220360",
    "end": "1226640"
  },
  {
    "text": "HTTP Trigger or a blob trigger or a cosmos ZB trigger so what happens is",
    "start": "1226640",
    "end": "1232080"
  },
  {
    "text": "that your orchestration gets started so when the orchestration get started with",
    "start": "1232080",
    "end": "1237520"
  },
  {
    "text": "any type of trigger that you have um the Activity one is scheduled and when",
    "start": "1237520",
    "end": "1243880"
  },
  {
    "text": "Activity one is doing its job the orchestrator sleeps Activity one is done",
    "start": "1243880",
    "end": "1249440"
  },
  {
    "text": "the orchestrator wakes up uh activity two is scheduled uh and then the",
    "start": "1249440",
    "end": "1254840"
  },
  {
    "text": "orchestration orchestrator sleeps again and then and Activity one is done and",
    "start": "1254840",
    "end": "1261320"
  },
  {
    "text": "then the orchestration is completed but that's only the first uh set so once",
    "start": "1261320",
    "end": "1267559"
  },
  {
    "text": "when the when uh the event another event or another trigger happens the entire",
    "start": "1267559",
    "end": "1273679"
  },
  {
    "text": "process or the entire workflow will be replaced so the orchestrator just Waits",
    "start": "1273679",
    "end": "1279640"
  },
  {
    "text": "uh for the next event uh to come so this is a function chaining pattern example",
    "start": "1279640",
    "end": "1286000"
  },
  {
    "text": "uh uh in action so um so the orchestrator is our friend he he or she",
    "start": "1286000",
    "end": "1293799"
  },
  {
    "text": "is strick because he's deterministic we have to be certain in what we write in our workflow but it can be also a a",
    "start": "1293799",
    "end": "1302559"
  },
  {
    "text": "sleepy head just like my dog so but uh but it is good for us uh developers",
    "start": "1302559",
    "end": "1308679"
  },
  {
    "text": "because um I mean even generally for organization that are using serverless",
    "start": "1308679",
    "end": "1314400"
  },
  {
    "text": "uh Computing it's because when the orchestrator sleeps in a a c stateful",
    "start": "1314400",
    "end": "1320159"
  },
  {
    "text": "workflow you are not being charged for the activities that are not uh running",
    "start": "1320159",
    "end": "1326320"
  },
  {
    "text": "so you only pay for what you use which is one of the uh great benefits of U",
    "start": "1326320",
    "end": "1332720"
  },
  {
    "text": "making use of serverless Technologies like uh Asher functions or durable",
    "start": "1332720",
    "end": "1339120"
  },
  {
    "text": "functions so uh how does uh how does uh",
    "start": "1339120",
    "end": "1344320"
  },
  {
    "text": "um function chaining Works uh or looks in the code so as we you can see here this is H something probably some of you",
    "start": "1344320",
    "end": "1351760"
  },
  {
    "text": "have seen this in the docs Microsoft documentation but here's a very very",
    "start": "1351760",
    "end": "1356960"
  },
  {
    "text": "simple uh ex example of uh function chaining in C uh where we have uh uh a",
    "start": "1356960",
    "end": "1365080"
  },
  {
    "text": "function name called Low sequence and in our or uh in our orchestrator through",
    "start": "1365080",
    "end": "1370799"
  },
  {
    "text": "the context we have a list of train strings uh to output and then you say uh",
    "start": "1370799",
    "end": "1377279"
  },
  {
    "text": "hello to to the different cities that we have and return it as as uh output and",
    "start": "1377279",
    "end": "1385159"
  },
  {
    "text": "then the second pattern is uh a fan out fan in pattern which is useful in",
    "start": "1385159",
    "end": "1391240"
  },
  {
    "text": "different uh use case scenario so fan out fan in pattern is useful for example",
    "start": "1391240",
    "end": "1398200"
  },
  {
    "text": "if you want to execute U multiple functions in parallel and you want to",
    "start": "1398200",
    "end": "1404279"
  },
  {
    "text": "aggregate the results uh as one when it's done and this is uh useful uh if",
    "start": "1404279",
    "end": "1410880"
  },
  {
    "text": "you have uh use case scenarios or tasks that you want to run in in parallel and",
    "start": "1410880",
    "end": "1418159"
  },
  {
    "text": "uh this is not easy to do uh it's not it's not easy to keep the states in a normal uh normal uh functions without",
    "start": "1418159",
    "end": "1426559"
  },
  {
    "text": "using durable so this is how it looks in uh code for example in C uh you're we are",
    "start": "1426559",
    "end": "1434520"
  },
  {
    "text": "trying to uh back up site content and and in here we have a root directory",
    "start": "1434520",
    "end": "1442360"
  },
  {
    "text": "that we're trying to uh get from Spring and uh we have a list of files and that",
    "start": "1442360",
    "end": "1448120"
  },
  {
    "text": "we want to back up and you do it by through the context by calling activity async and called the method I mean the",
    "start": "1448120",
    "end": "1456720"
  },
  {
    "text": "activity get file list and then return it and then you go through uh the loop",
    "start": "1456720",
    "end": "1462120"
  },
  {
    "text": "of their list of files and then uh copy it to uh blob storage uh in the loop and",
    "start": "1462120",
    "end": "1468480"
  },
  {
    "text": "then you use this you kind of like combine it with uh uh the the fan in",
    "start": "1468480",
    "end": "1473760"
  },
  {
    "text": "when you do the fan this is where the fan in comes comes when you use the the task when all method and then you return",
    "start": "1473760",
    "end": "1480799"
  },
  {
    "text": "the result of of that so that is a a simple uh ex",
    "start": "1480799",
    "end": "1486480"
  },
  {
    "text": "example and then uh the third pattern is called uh async HTTP uh API pattern in",
    "start": "1486480",
    "end": "1495039"
  },
  {
    "text": "which uh it is uh useful if you want to solve problems of long running",
    "start": "1495039",
    "end": "1500720"
  },
  {
    "text": "operations for external clients especially with HTTP endpoints so this",
    "start": "1500720",
    "end": "1506440"
  },
  {
    "start": "1506000",
    "end": "1506000"
  },
  {
    "text": "is a simple uh example that I have uh I hope that you can see the the code even",
    "start": "1506440",
    "end": "1512760"
  },
  {
    "text": "if it's black but um here we have uh I created a simple function to check if my",
    "start": "1512760",
    "end": "1519760"
  },
  {
    "text": "website is available and I have my orchestration uh context with a trigger",
    "start": "1519760",
    "end": "1526760"
  },
  {
    "text": "and in my tri catch block I I created uh my URL and then I also uh created the",
    "start": "1526760",
    "end": "1534960"
  },
  {
    "text": "object for durable HTTP response which is long running and uh I called uh the",
    "start": "1534960",
    "end": "1542000"
  },
  {
    "text": "method uh call HTTP a sync uh through the durable orchestration context and I",
    "start": "1542000",
    "end": "1548279"
  },
  {
    "text": "used the method uh get passed in my uh URL and uh uh I have below that I have",
    "start": "1548279",
    "end": "1557039"
  },
  {
    "text": "my HTT uh HTTP code a check through if else condition to check what's the",
    "start": "1557039",
    "end": "1563640"
  },
  {
    "text": "status code and then depending on the status code that I have I throw in an exception or I can process further or",
    "start": "1563640",
    "end": "1571159"
  },
  {
    "text": "lug the content of the result and so this is uh an example of async HTP API",
    "start": "1571159",
    "end": "1577600"
  },
  {
    "text": "pattern that's a stateful and uh long running and the next uh pattern is the",
    "start": "1577600",
    "end": "1584159"
  },
  {
    "text": "monitor pattern which is very useful if you want uh as the word itself it's uh",
    "start": "1584159",
    "end": "1589760"
  },
  {
    "text": "commonly used for monitoring especially uh pulling uh uh pulling our or uh",
    "start": "1589760",
    "end": "1597279"
  },
  {
    "text": "monitoring job status or for you to clean up for example and you want to you",
    "start": "1597279",
    "end": "1603880"
  },
  {
    "text": "have a use case or a a problem or task that you want to do uh recurring and",
    "start": "1603880",
    "end": "1609120"
  },
  {
    "text": "long process so this is uh an example like uh monitoring job status uh task",
    "start": "1609120",
    "end": "1616399"
  },
  {
    "start": "1611000",
    "end": "1611000"
  },
  {
    "text": "for example where we have have a timer in your wild Loop you set an expiration",
    "start": "1616399",
    "end": "1622520"
  },
  {
    "text": "time and uh you're checking what is the status if the status is completed you're",
    "start": "1622520",
    "end": "1628440"
  },
  {
    "text": "you're calling another activity called send alert and then uh in your white Loop you have your uh check uh the",
    "start": "1628440",
    "end": "1636240"
  },
  {
    "text": "orchestrator sleeps until uh the next uh the next uh uh scheduled tests are done",
    "start": "1636240",
    "end": "1643679"
  },
  {
    "text": "and you use a durable timer for that through the context which is that commonly used with context that uh",
    "start": "1643679",
    "end": "1650760"
  },
  {
    "text": "create timer your next check and your uh cancellation uh",
    "start": "1650760",
    "end": "1656480"
  },
  {
    "text": "token and uh the next pattern the fifth pattern is called a human interaction",
    "start": "1656480",
    "end": "1663159"
  },
  {
    "text": "pattern and this is uh ideal if you have a use case that requires uh automation",
    "start": "1663159",
    "end": "1670200"
  },
  {
    "text": "of business processes uh that requires human interaction what you can do one",
    "start": "1670200",
    "end": "1675440"
  },
  {
    "text": "good example is request approval uh process uh business process so in way",
    "start": "1675440",
    "end": "1681480"
  },
  {
    "text": "for example you have uh approval for like uh like a a paperwork that you need",
    "start": "1681480",
    "end": "1688080"
  },
  {
    "text": "someone someone's uh input for approval so what you can do is you can have a dur",
    "start": "1688080",
    "end": "1696159"
  },
  {
    "text": "durable uh timer that uh you can have in your workflow and you have um uh you're",
    "start": "1696159",
    "end": "1703000"
  },
  {
    "text": "waiting for external events so for example if a person responds to an email",
    "start": "1703000",
    "end": "1708559"
  },
  {
    "text": "or notifications uh uh you can uh have a check on that otherwise the durable",
    "start": "1708559",
    "end": "1715480"
  },
  {
    "text": "timer will uh process uh the approval after a certain timeout or otherwise uh",
    "start": "1715480",
    "end": "1722399"
  },
  {
    "text": "the process will be uh escalated so as uh as documented as well uh you can see",
    "start": "1722399",
    "end": "1729799"
  },
  {
    "text": "an example in the code here for approval workflow where uh in your uh in your uh",
    "start": "1729799",
    "end": "1737320"
  },
  {
    "text": "code you have a durable timeout uh or durable timer with uh a timer or a",
    "start": "1737320",
    "end": "1745039"
  },
  {
    "text": "timeout and then you have a condition when any of those like the timer or the",
    "start": "1745039",
    "end": "1750880"
  },
  {
    "text": "external event uh from a person for example responding to an email replying to an SMS then you can process the",
    "start": "1750880",
    "end": "1758480"
  },
  {
    "text": "approval otherwise you can escalate it to uh to maybe forward it to another",
    "start": "1758480",
    "end": "1764600"
  },
  {
    "text": "person and uh the keyword or the method that is used for human interaction is",
    "start": "1764600",
    "end": "1771440"
  },
  {
    "text": "the waight for external event uh method uh through the durable orchestration uh",
    "start": "1771440",
    "end": "1778799"
  },
  {
    "text": "context and the last pattern is uh the aggregator",
    "start": "1778799",
    "end": "1783919"
  },
  {
    "text": "pattern which is uh used to aggregate uh data uh over a period of time as one",
    "start": "1783919",
    "end": "1791440"
  },
  {
    "text": "entity and uh it's commonly used for uh durable or stateful entities uh this is",
    "start": "1791440",
    "end": "1797840"
  },
  {
    "text": "how how uh a few examples here for in which you have a counter with uh with uh",
    "start": "1797840",
    "end": "1805240"
  },
  {
    "text": "different switch case for add reset or get and also if you want to uh to use",
    "start": "1805240",
    "end": "1812120"
  },
  {
    "text": "the uh durable I entity client uh as well so you can read more about uh",
    "start": "1812120",
    "end": "1819080"
  },
  {
    "text": "durable functions entities uh through the documentation here",
    "start": "1819080",
    "end": "1824600"
  },
  {
    "text": "below and uh so those are the six uh patterns so we have the human",
    "start": "1824600",
    "end": "1830440"
  },
  {
    "text": "interaction pattern uh the function chaining pattern so the different patterns so you can use this depending",
    "start": "1830440",
    "end": "1837120"
  },
  {
    "text": "on the the scenario that you're trying to solve and we also have uh another",
    "start": "1837120",
    "end": "1842960"
  },
  {
    "text": "feature of durable functions which is sub orchestration which means that you can actually create as many patterns as",
    "start": "1842960",
    "end": "1850840"
  },
  {
    "text": "you want uh like in different forms depending on what you're trying or how complex is the scenario that you're",
    "start": "1850840",
    "end": "1858240"
  },
  {
    "text": "trying to solve so in durable functions you can have Sub orchestration in your",
    "start": "1858240",
    "end": "1863360"
  },
  {
    "text": "orchestration in your workflow and it is possible to do only in a few languages",
    "start": "1863360",
    "end": "1869559"
  },
  {
    "text": "so far uh net uh JavaScript and uh Python and this is how it looks in the",
    "start": "1869559",
    "end": "1876279"
  },
  {
    "text": "code uh as documented uh what we have here is that we're try we have a",
    "start": "1876279",
    "end": "1883159"
  },
  {
    "text": "function name called provision uh new devices and then we have uh our Dural",
    "start": "1883159",
    "end": "1889559"
  },
  {
    "text": "orchestration context we have a list of strings of devices and uh and uh what we",
    "start": "1889559",
    "end": "1896880"
  },
  {
    "text": "have here is that we have a loop of the devices in ID and what we're in each uh",
    "start": "1896880",
    "end": "1904200"
  },
  {
    "text": "device ID we're uh calling the sub orchestrator uh here to provision uh to",
    "start": "1904200",
    "end": "1911880"
  },
  {
    "text": "provision uh the device by calling device provisioning orchestration and",
    "start": "1911880",
    "end": "1918080"
  },
  {
    "text": "then it combines uh the the method uh for finding finding in which is the the",
    "start": "1918080",
    "end": "1925200"
  },
  {
    "text": "one all um method and as for as as for developing",
    "start": "1925200",
    "end": "1930840"
  },
  {
    "start": "1928000",
    "end": "1928000"
  },
  {
    "text": "Asher functions uh there's a limitless of uh opportunities uh we had we can",
    "start": "1930840",
    "end": "1937279"
  },
  {
    "text": "code it in uh the Asher portal uh you can also use the cloud command line uh",
    "start": "1937279",
    "end": "1943960"
  },
  {
    "text": "uh also uh but for developing locally uh we can use our favorite idea tools like",
    "start": "1943960",
    "end": "1949840"
  },
  {
    "text": "the visual studio VSS code and in order to have your function apps or Asher",
    "start": "1949840",
    "end": "1956320"
  },
  {
    "text": "functions running locally you would need to install the recent version of Asher functions core tools that are often",
    "start": "1956320",
    "end": "1963600"
  },
  {
    "text": "updated and uh for working with HTTP requests uh it's good to have postmen of",
    "start": "1963600",
    "end": "1969559"
  },
  {
    "text": "course you can also use your web browser if you want but um I recommend Postman",
    "start": "1969559",
    "end": "1975080"
  },
  {
    "text": "because you see a lot of stuff and uh Asher storage Explorer is also good to",
    "start": "1975080",
    "end": "1980960"
  },
  {
    "text": "have because as as we that worked with Asher functions we're aware that our",
    "start": "1980960",
    "end": "1986080"
  },
  {
    "text": "Asher uh the function app needs to be integrated or connected to uh Asher",
    "start": "1986080",
    "end": "1991960"
  },
  {
    "text": "storage that's where you store the instance logs and the web jobs uh behind",
    "start": "1991960",
    "end": "1997120"
  },
  {
    "text": "it so it's good to have uh Asher storage uh Explorer and uh supported languages",
    "start": "1997120",
    "end": "2003960"
  },
  {
    "text": "uh has a lot of options for us C Java power uh Python and",
    "start": "2003960",
    "end": "2011200"
  },
  {
    "start": "2011000",
    "end": "2011000"
  },
  {
    "text": "typescript and if you're uh into full stock development uh that's one of the",
    "start": "2011200",
    "end": "2017880"
  },
  {
    "text": "great things with serverless and aure functions because you can you can integrate it with every almost",
    "start": "2017880",
    "end": "2023559"
  },
  {
    "text": "everything and it's uh and you can also uh integrate it specifically with uh",
    "start": "2023559",
    "end": "2030039"
  },
  {
    "text": "Asher static web apps uh those who work uh has worked with Asher stter web apps",
    "start": "2030039",
    "end": "2036279"
  },
  {
    "text": "you can create a react laser view in Asher static web apps but you can also",
    "start": "2036279",
    "end": "2042480"
  },
  {
    "text": "integrate uh Asher functions uh with API support uh in the STA Asher static web",
    "start": "2042480",
    "end": "2049079"
  },
  {
    "text": "apps and then if you already have an existing Asher functions published in",
    "start": "2049079",
    "end": "2054320"
  },
  {
    "text": "production you can bring your use the feature bring your own functions to implement to integrate your your uh",
    "start": "2054320",
    "end": "2062158"
  },
  {
    "text": "static web apps or web apps with uh existing Asher functions",
    "start": "2062159",
    "end": "2068118"
  },
  {
    "start": "2067000",
    "end": "2067000"
  },
  {
    "text": "and uh one of the things that I would like to share with you is the orchestration uh instance detail details",
    "start": "2068119",
    "end": "2075280"
  },
  {
    "text": "uh this is aide good if you're trying to like if you want if you're developing",
    "start": "2075280",
    "end": "2081240"
  },
  {
    "text": "and you want to control what's going on with your workflow so uh this is uh an",
    "start": "2081240",
    "end": "2087638"
  },
  {
    "text": "example of uh orchestration details on an HTTP uh uh Trigger or request",
    "start": "2087639",
    "end": "2094158"
  },
  {
    "text": "workflow that I had so uh in my Postman I worked locally so uh worked locally",
    "start": "2094159",
    "end": "2100320"
  },
  {
    "text": "and this this was the screenshot uh taken then and one of the properties",
    "start": "2100320",
    "end": "2107160"
  },
  {
    "text": "that are good to know are uh the instance ID so this is good to have if",
    "start": "2107160",
    "end": "2113000"
  },
  {
    "text": "you want to redo or uh stop the process or process uh the logic further and",
    "start": "2113000",
    "end": "2119320"
  },
  {
    "text": "there's also a property for uh or URL for uh racing the event terminating",
    "start": "2119320",
    "end": "2125160"
  },
  {
    "text": "purging or restarting you your uh orchestration so this restart is good",
    "start": "2125160",
    "end": "2131400"
  },
  {
    "text": "because probably it failure can happen so there's no perfect application so as",
    "start": "2131400",
    "end": "2138160"
  },
  {
    "text": "developers it's our it's not only our job to like develop but it's also our",
    "start": "2138160",
    "end": "2143680"
  },
  {
    "text": "job to solve problems or bugs so these are good uh properties to know within",
    "start": "2143680",
    "end": "2149680"
  },
  {
    "text": "your orchestration details that it's good to control and you can also use",
    "start": "2149680",
    "end": "2154960"
  },
  {
    "text": "this to monitor or do logging for example if if you want to make sure that if something breaks in production you",
    "start": "2154960",
    "end": "2161880"
  },
  {
    "text": "know what orchestration or what instance is uh causing the problem so that is",
    "start": "2161880",
    "end": "2167800"
  },
  {
    "text": "something that I want to share with you and uh of course uh coding uh durable",
    "start": "2167800",
    "end": "2173640"
  },
  {
    "text": "functions what are good to know uh application insights you can use that",
    "start": "2173640",
    "end": "2178880"
  },
  {
    "text": "for monitoring and uh aser storage Explorer as I already mentioned and uh",
    "start": "2178880",
    "end": "2186000"
  },
  {
    "text": "when it comes to uh Side by uh when it comes to updating or making changes to",
    "start": "2186000",
    "end": "2191839"
  },
  {
    "text": "the function apps that's already in production it's good to uh to uh to keep",
    "start": "2191839",
    "end": "2197480"
  },
  {
    "text": "in mind to have conscious B versioning uh deployment with braking change and",
    "start": "2197480",
    "end": "2203160"
  },
  {
    "text": "then make use of the deployment slots that we have already available uh in",
    "start": "2203160",
    "end": "2208240"
  },
  {
    "text": "Asher within the function apps and uh I actually uh watch our uh keynote this",
    "start": "2208240",
    "end": "2215560"
  },
  {
    "text": "morning and I find it really interesting about security uh I know that uh there",
    "start": "2215560",
    "end": "2222119"
  },
  {
    "text": "are still challenges when it comes to security especially with sir realize that you're talking with apis external",
    "start": "2222119",
    "end": "2228760"
  },
  {
    "text": "apis here and there so as a developer we have a responsibility to to secure our",
    "start": "2228760",
    "end": "2235680"
  },
  {
    "text": "applications and I highly recommend uh Asher key Volt or Asher configurations",
    "start": "2235680",
    "end": "2241560"
  },
  {
    "text": "that uh that that we have available when you're developing your uh serverless uh",
    "start": "2241560",
    "end": "2247200"
  },
  {
    "text": "function functions and uh when it comes to error handling uh usually uh with AER",
    "start": "2247200",
    "end": "2255040"
  },
  {
    "text": "functions or durable functions you get this common error uh exception function",
    "start": "2255040",
    "end": "2260440"
  },
  {
    "text": "failed exception and what you can do to handle or to prevent these errors is to",
    "start": "2260440",
    "end": "2267599"
  },
  {
    "text": "uh call another function activity uh you can also make use of the",
    "start": "2267599",
    "end": "2273119"
  },
  {
    "text": "automatic retry on uh failure uh of course the typ Tri catch block uh and",
    "start": "2273119",
    "end": "2279319"
  },
  {
    "text": "there's also a durable timer which is uh very good uh if you want to take control",
    "start": "2279319",
    "end": "2285480"
  },
  {
    "text": "just like what the example that I showed on the human interaction pattern in which you don't if if that person for",
    "start": "2285480",
    "end": "2293400"
  },
  {
    "text": "example doesn't reply at all because uh he or she doesn't have access to her or",
    "start": "2293400",
    "end": "2299680"
  },
  {
    "text": "her his email so it's good that you have this control uh in your workflow like uh",
    "start": "2299680",
    "end": "2305000"
  },
  {
    "text": "using a timer and and and also there's a new feature in uh durable functions",
    "start": "2305000",
    "end": "2312319"
  },
  {
    "text": "that's recently released this year that's called durable functions monitor that you can see on on GitHub uh through",
    "start": "2312319",
    "end": "2320800"
  },
  {
    "text": "this link and this is how it looks when you try to to make use of the automatic rri",
    "start": "2320800",
    "end": "2328520"
  },
  {
    "start": "2323000",
    "end": "2323000"
  },
  {
    "text": "so you have a timer orchestrator with a rryy so in this very simple example you",
    "start": "2328520",
    "end": "2335000"
  },
  {
    "text": "are trying to uh uh use use the method call activity with retry a sync and what",
    "start": "2335000",
    "end": "2342280"
  },
  {
    "text": "you do is you create a variable with retry options uh creating an instance of",
    "start": "2342280",
    "end": "2347359"
  },
  {
    "text": "retry options and then you choose the time span of your retry and how many",
    "start": "2347359",
    "end": "2354839"
  },
  {
    "text": "times you want to try to do an attempt for uh the retry and then this is a",
    "start": "2354839",
    "end": "2361520"
  },
  {
    "text": "simple example of a tri catch blocks for example we have a function name called",
    "start": "2361520",
    "end": "2367680"
  },
  {
    "text": "transfer funds within your context or workflow and then you have uh of course",
    "start": "2367680",
    "end": "2374480"
  },
  {
    "text": "you're doing a bank process here debit or credit if something goes wrong with",
    "start": "2374480",
    "end": "2380240"
  },
  {
    "text": "the transaction what you can do is you can catch it uh by calling another",
    "start": "2380240",
    "end": "2385760"
  },
  {
    "text": "activity uh an activity functions called uh credit account to return or transfer",
    "start": "2385760",
    "end": "2392599"
  },
  {
    "text": "the amount that uh didn't went through uh back to uh to that uh person's",
    "start": "2392599",
    "end": "2398599"
  },
  {
    "text": "account and uh unit testing is also supported in durable functions uh common",
    "start": "2398599",
    "end": "2405040"
  },
  {
    "text": "Frameworks like mock or xunit is also supported so you can unit test both your",
    "start": "2405040",
    "end": "2411359"
  },
  {
    "text": "orchestrator and your activity uh functions uh as well and deployment so deployment uh you",
    "start": "2411359",
    "end": "2419480"
  },
  {
    "text": "can deploy your Asher functions or durable functions as Windows uh in",
    "start": "2419480",
    "end": "2424680"
  },
  {
    "text": "Windows and Linux in Asher and you can can also uh deploy it as container uh",
    "start": "2424680",
    "end": "2430800"
  },
  {
    "text": "and even in Asher container registry and as for cicd you can use GI off actions",
    "start": "2430800",
    "end": "2437880"
  },
  {
    "text": "and arm templates if you're want to uh make use of arm and infrastructure as a",
    "start": "2437880",
    "end": "2444200"
  },
  {
    "text": "code and if you already have an existing uh publish app uh in in production you",
    "start": "2444200",
    "end": "2450079"
  },
  {
    "text": "can also publish using your publish uh Pub XML uh file uh from that you have",
    "start": "2450079",
    "end": "2457560"
  },
  {
    "text": "saved uh locally and recently uh after dat night",
    "start": "2457560",
    "end": "2463079"
  },
  {
    "start": "2460000",
    "end": "2460000"
  },
  {
    "text": "uh there's a new service that was announced it's called Asher container apps if you're interested to develop",
    "start": "2463079",
    "end": "2470560"
  },
  {
    "text": "serverless uh containers so um it's a fully managed",
    "start": "2470560",
    "end": "2475599"
  },
  {
    "text": "serverless containers built for microservices and it scales uh it scales",
    "start": "2475599",
    "end": "2481720"
  },
  {
    "text": "Dynam dynamically um uh using a d Dapper",
    "start": "2481720",
    "end": "2487000"
  },
  {
    "text": "and kada and also recently there's uh a",
    "start": "2487000",
    "end": "2492960"
  },
  {
    "text": "release of the new version of aser functions uh 4.0 that supports uhet uh 6.0 and other",
    "start": "2492960",
    "end": "2502720"
  },
  {
    "text": "uh latest version of languages as well as Uh custom",
    "start": "2502720",
    "end": "2508319"
  },
  {
    "text": "handlers so I want to share with you since we talked about security and our keynote this morning was about security",
    "start": "2508319",
    "end": "2515400"
  },
  {
    "text": "it was a really great uh one I learned a lot from it I also want to share about",
    "start": "2515400",
    "end": "2521560"
  },
  {
    "text": "uh Cloud Katana that I by Roberto Rodriguez that I personally uh uh uh",
    "start": "2521560",
    "end": "2528280"
  },
  {
    "text": "assisted and volunteered to to brainstorm about using durable functions",
    "start": "2528280",
    "end": "2534079"
  },
  {
    "text": "uh for security for uh Security in Asher so uh what it is is that it's coded in",
    "start": "2534079",
    "end": "2541480"
  },
  {
    "text": "Powershell uh and then it uses durable functions uh to ex uh to assil",
    "start": "2541480",
    "end": "2548000"
  },
  {
    "text": "attack and defense uh attack uh in the cloud through Asher ad and this is open",
    "start": "2548000",
    "end": "2554559"
  },
  {
    "text": "source and as far as I know uh Rober Roberto is looking for contributors to",
    "start": "2554559",
    "end": "2560240"
  },
  {
    "text": "like contribute in uh Cloud security using ser servus and the technologies",
    "start": "2560240",
    "end": "2565960"
  },
  {
    "text": "that we have so if you're interested you can uh check it out uh as well so now",
    "start": "2565960",
    "end": "2572119"
  },
  {
    "start": "2572000",
    "end": "2572000"
  },
  {
    "text": "it's time for demo I have limited uh time uh time is over soon we will see if",
    "start": "2572119",
    "end": "2578000"
  },
  {
    "text": "we have time for questions as well so my demo is about uh a serverless uh",
    "start": "2578000",
    "end": "2584319"
  },
  {
    "text": "function chaining example a very simple one just to show how durable functions",
    "start": "2584319",
    "end": "2590200"
  },
  {
    "text": "can be integrated with different services so what I have is I have an Asher blob",
    "start": "2590200",
    "end": "2596240"
  },
  {
    "text": "trigger and what it does when it's triggered uh when I upload an image to my aure storage for example it when it",
    "start": "2596240",
    "end": "2603200"
  },
  {
    "text": "gets triggered the orchestration starts and uh what it does is then when my",
    "start": "2603200",
    "end": "2610240"
  },
  {
    "text": "orchestrator starts uh gets started I will be passing in my blob image data",
    "start": "2610240",
    "end": "2616440"
  },
  {
    "text": "and send that uh that message uh to my Asher service bus q and then when it's",
    "start": "2616440",
    "end": "2623480"
  },
  {
    "text": "done it's going to send an SMS and call uh using a twio",
    "start": "2623480",
    "end": "2628680"
  },
  {
    "text": "API and uh also when it's done it's going to send uh notification email",
    "start": "2628680",
    "end": "2634880"
  },
  {
    "text": "using send gr so in this example you see that uh it has an Asher storage here and",
    "start": "2634880",
    "end": "2641400"
  },
  {
    "text": "then this is an Asher service and durable functions integrates well as",
    "start": "2641400",
    "end": "2646720"
  },
  {
    "text": "well with external apis like tlio and uh s grids and uh my expected uh the this",
    "start": "2646720",
    "end": "2655240"
  },
  {
    "text": "uh example by the way is on my GitHub repo if you want to try it out a created",
    "start": "2655240",
    "end": "2661440"
  },
  {
    "text": "a template uh for that as well with instructions and uh my expected results",
    "start": "2661440",
    "end": "2667520"
  },
  {
    "text": "for my demo would be like this so I get uh uh an SMS I get uh a call I get a",
    "start": "2667520",
    "end": "2675079"
  },
  {
    "text": "message in my service box and I will be Al also getting an email so let me just",
    "start": "2675079",
    "end": "2683240"
  },
  {
    "text": "see if I can show you some code okay so here I have let's see so before I start",
    "start": "2683240",
    "end": "2692800"
  },
  {
    "text": "I want to show you my uh scen screen I hope that",
    "start": "2692800",
    "end": "2697920"
  },
  {
    "text": "you're seeing the code right now and not my presentation yes so what I have here is",
    "start": "2697920",
    "end": "2704640"
  },
  {
    "text": "that uh I have um so I have a simple uh",
    "start": "2704640",
    "end": "2709839"
  },
  {
    "text": "Simple app called durable storage up and what I have here is that I am organizing",
    "start": "2709839",
    "end": "2718920"
  },
  {
    "text": "my functions uh into different parts depending on its type so I have my trigger I have my orchestration orchestr",
    "start": "2718920",
    "end": "2727400"
  },
  {
    "text": "and I have my different activities and uh in my trigger uh which",
    "start": "2727400",
    "end": "2733280"
  },
  {
    "text": "is the starting point my client function I have uh an i durable uh C orchestration client in",
    "start": "2733280",
    "end": "2741800"
  },
  {
    "text": "which I have my blog trigger connection and uh in here this in line",
    "start": "2741800",
    "end": "2748440"
  },
  {
    "text": "38 this is where I Kickstart or call my orchestrator to start the workflow so I",
    "start": "2748440",
    "end": "2754839"
  },
  {
    "text": "saved my instance ID as a just up for logging and I passed in my Asher blob uh",
    "start": "2754839",
    "end": "2761760"
  },
  {
    "text": "item and in my orchestrator uh this is where I do my simple uh function",
    "start": "2761760",
    "end": "2767960"
  },
  {
    "text": "chaining example so here I have the context and uh my first chain is to send",
    "start": "2767960",
    "end": "2774640"
  },
  {
    "text": "the message uh to the service boss and then if it's uh done I'm going to send",
    "start": "2774640",
    "end": "2780079"
  },
  {
    "text": "an SMS and then I'm going to send a call and notification uh call and then email",
    "start": "2780079",
    "end": "2787559"
  },
  {
    "text": "and then uh those are just the few simple ones and then each activity I have uh everything process here the",
    "start": "2787559",
    "end": "2795200"
  },
  {
    "text": "logic that I have for uh sending to service bus uh sending a call for",
    "start": "2795200",
    "end": "2801280"
  },
  {
    "text": "example and also uh sending an email through the Sy grid API and I have uh",
    "start": "2801280",
    "end": "2807319"
  },
  {
    "text": "everything loc since I'm working locally for now so I have all my settings in the",
    "start": "2807319",
    "end": "2812760"
  },
  {
    "text": "local uh file and uh this the settings can be also used with uh Asher uh key",
    "start": "2812760",
    "end": "2819880"
  },
  {
    "text": "volt so I'm going to try to run this I actually prepared a number of images",
    "start": "2819880",
    "end": "2827160"
  },
  {
    "text": "from Uso uh today for a demo let me just uh try to start my uh function I hope it",
    "start": "2827160",
    "end": "2836200"
  },
  {
    "text": "works usually this you get challenges with live demos but uh I hope this works",
    "start": "2836200",
    "end": "2842160"
  },
  {
    "text": "so I can show you and let's see",
    "start": "2842160",
    "end": "2847200"
  },
  {
    "text": "so so what I have here I have my visual my function app running locally so I",
    "start": "2847200",
    "end": "2853520"
  },
  {
    "text": "know that because I have uh this one showing and I also have my local files",
    "start": "2853520",
    "end": "2862520"
  },
  {
    "text": "here so few pictures let me just try to compress everything in one place and",
    "start": "2862520",
    "end": "2868240"
  },
  {
    "text": "then I also have an Asher storage uh Explorer that's already connected to my",
    "start": "2868240",
    "end": "2874559"
  },
  {
    "text": "uh Asher storage uh aser subscription and this was the container Asher storage",
    "start": "2874559",
    "end": "2881119"
  },
  {
    "text": "container The Blob container that I have set in my uh code so I will get um I",
    "start": "2881119",
    "end": "2889119"
  },
  {
    "text": "will get uh one image here uh it's an image of Oso so I will upload",
    "start": "2889119",
    "end": "2897480"
  },
  {
    "text": "it and what it does it should uh uh trigger my orchestration or function",
    "start": "2897480",
    "end": "2905119"
  },
  {
    "text": "chaining as you can see here and I should be also getting an SMS and call",
    "start": "2905119",
    "end": "2913359"
  },
  {
    "text": "right now but I won't answer so it happen so quick uh those uh series of",
    "start": "2913359",
    "end": "2919240"
  },
  {
    "text": "events but uh what this what it does is that uh it is uh so what's happening is",
    "start": "2919240",
    "end": "2925880"
  },
  {
    "text": "that I started my orchestration triggered by uh The Blob trigger with this uh",
    "start": "2925880",
    "end": "2932599"
  },
  {
    "text": "image called Osa Norway uh JPEG and you heard I got also an email and uh it",
    "start": "2932599",
    "end": "2938920"
  },
  {
    "text": "started the orchestration with that ID and then uh I log everything so it also",
    "start": "2938920",
    "end": "2944559"
  },
  {
    "text": "sent the message to my service boss I send an SMS via twio so everything is",
    "start": "2944559",
    "end": "2951079"
  },
  {
    "text": "logged so if I upload one more thing uh one more image it should be uh shown so",
    "start": "2951079",
    "end": "2957480"
  },
  {
    "text": "if I check on my uh Asher portal right",
    "start": "2957480",
    "end": "2962520"
  },
  {
    "text": "now and refresh it and check on my service bus",
    "start": "2962520",
    "end": "2968599"
  },
  {
    "text": "um let's see I should be able to see one message in my service bus uh",
    "start": "2968599",
    "end": "2975680"
  },
  {
    "text": "que uh using the service BS Explorer so I'm going to just do a pick uh on my",
    "start": "2975680",
    "end": "2982920"
  },
  {
    "text": "messages uh I had messages before in my que so let's see",
    "start": "2982920",
    "end": "2989280"
  },
  {
    "text": "picking and there should be something that's uh the latest should be today at",
    "start": "2989280",
    "end": "2995000"
  },
  {
    "text": "13 uh two minutes ago this one and and",
    "start": "2995000",
    "end": "3001640"
  },
  {
    "text": "this is the message that I tried to send so and this is the picture of Oslo uh",
    "start": "3001640",
    "end": "3010280"
  },
  {
    "text": "Norway in which I wish I was there today and you are all there yeah so this is uh",
    "start": "3010280",
    "end": "3017160"
  },
  {
    "text": "my uh demo and uh before I switch back to um my presentation let me just uh",
    "start": "3017160",
    "end": "3025319"
  },
  {
    "text": "stop uh this one and finish uh finish it up um so so",
    "start": "3025319",
    "end": "3032040"
  },
  {
    "text": "those are the uh expected results that I had so this is a very very simple ex uh",
    "start": "3032040",
    "end": "3038040"
  },
  {
    "text": "example uh just for demo purposes but you can do a lot of things with durable",
    "start": "3038040",
    "end": "3043240"
  },
  {
    "text": "functions and if you want to get started learning about durable functions uh you",
    "start": "3043240",
    "end": "3048799"
  },
  {
    "text": "can yeah there there are great documentations and Microsoft website and",
    "start": "3048799",
    "end": "3054000"
  },
  {
    "text": "I also recommend Asher functions University by Mark duer um he is also an",
    "start": "3054000",
    "end": "3059440"
  },
  {
    "text": "Asher MVP that creates uh like content about durable functions in all levels",
    "start": "3059440",
    "end": "3066000"
  },
  {
    "text": "beginners or advanced level and uh there's a great example of uh of",
    "start": "3066000",
    "end": "3071319"
  },
  {
    "text": "serverless projects in Asher serverless uh community that you can uh contribute",
    "start": "3071319",
    "end": "3076920"
  },
  {
    "text": "and also try to use to try it out and uh",
    "start": "3076920",
    "end": "3082079"
  },
  {
    "text": "I want to share also about uh my Usher User Group Sweden which is a Meetup",
    "start": "3082079",
    "end": "3089040"
  },
  {
    "text": "Group uh so if you're interested to speak or to just learn about Asher you can join us uh in our Meetup Group the",
    "start": "3089040",
    "end": "3096520"
  },
  {
    "text": "event is free so it's about knowledge sharing and about uh all about community",
    "start": "3096520",
    "end": "3102119"
  },
  {
    "text": "so feel free to uh check it out and I want to end my session uh with this uh",
    "start": "3102119",
    "end": "3108040"
  },
  {
    "text": "image that uh as a developer I love serverless because I can solve comp complex problems just like the example I",
    "start": "3108040",
    "end": "3115040"
  },
  {
    "text": "showed you I can build modern apps and it makes me productive uh thank you so",
    "start": "3115040",
    "end": "3121280"
  },
  {
    "text": "much uh takum from in Swedish so if you have questions feel free to post it or",
    "start": "3121280",
    "end": "3127000"
  },
  {
    "text": "you can also uh uh ask me or connect with me through uh Twitter uh LinkedIn or uh web",
    "start": "3127000",
    "end": "3134599"
  },
  {
    "text": "my website so thank you so much I hope you learned something",
    "start": "3134599",
    "end": "3141200"
  },
  {
    "text": "thank you um let's see do we have any questions or time",
    "start": "3146640",
    "end": "3154480"
  },
  {
    "text": "like eight minutes we have let's see let me just uh",
    "start": "3154480",
    "end": "3160119"
  },
  {
    "text": "check okay all right um can I track can I I",
    "start": "3161079",
    "end": "3168640"
  },
  {
    "text": "have a questions already can I track visualize the state of durable function",
    "start": "3168640",
    "end": "3175040"
  },
  {
    "text": "task instances or it's just uh through uh logs um you can actually uh uh track",
    "start": "3175040",
    "end": "3183960"
  },
  {
    "text": "it using application uh Insight so thank you for the question Michael",
    "start": "3183960",
    "end": "3190000"
  },
  {
    "text": "and can all types of triggers be used to start uh the",
    "start": "3190000",
    "end": "3195040"
  },
  {
    "text": "orchestration um yes as long as it's supported by Asher functions you can uh",
    "start": "3195040",
    "end": "3201000"
  },
  {
    "text": "do that except the entity uh entity uh type",
    "start": "3201000",
    "end": "3206920"
  },
  {
    "text": "and will the slide be available yes I will I will share it with the organizers",
    "start": "3206920",
    "end": "3212880"
  },
  {
    "text": "or uh uh later if you want a copy of the sites uh cnra and Microsoft",
    "start": "3212880",
    "end": "3219200"
  },
  {
    "text": "recommendation infra puts functions and being it but need a Premium plan so no",
    "start": "3219200",
    "end": "3225440"
  },
  {
    "text": "more pay as you go um for anonymous question I think if you use a Premium",
    "start": "3225440",
    "end": "3233160"
  },
  {
    "text": "plan then it's not uh pay as you go if I I understood your question",
    "start": "3233160",
    "end": "3240079"
  },
  {
    "text": "yes so yeah thank you uh thank you so much for watching",
    "start": "3240079",
    "end": "3247880"
  }
]