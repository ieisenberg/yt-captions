[
  {
    "text": "I did so also uh seven years ago I did a talk on this uh trying to place the",
    "start": "240",
    "end": "6839"
  },
  {
    "text": "different context on a timeline and seeing that um what's actually going on and how the",
    "start": "6839",
    "end": "14099"
  },
  {
    "text": "moving parts are and how they relate to each other so my goal back then was to",
    "start": "14099",
    "end": "20820"
  },
  {
    "text": "try to map it to history and see how it affected each other and how it comes to be the way it was uh back then in in",
    "start": "20820",
    "end": "28619"
  },
  {
    "text": "2016 I guess so uh and",
    "start": "28619",
    "end": "35000"
  },
  {
    "text": "I also try to argue that this Tech fatigue concept that's it's a lot of churn a lot of a lot of changes actually",
    "start": "35280",
    "end": "42719"
  },
  {
    "text": "comes from that in the JavaScript land all of the explorations and iterations",
    "start": "42719",
    "end": "48360"
  },
  {
    "text": "and changes to API and to technology is always historically happened in a user",
    "start": "48360",
    "end": "55680"
  },
  {
    "text": "land so for in in.net context for many years you had this closed uh Source",
    "start": "55680",
    "end": "62219"
  },
  {
    "text": "ecosystem that had some sort of release log every now and then and again but in",
    "start": "62219",
    "end": "67439"
  },
  {
    "text": "JavaScript land and in front end world this was entirely different because every Innovation happens more or less in",
    "start": "67439",
    "end": "74820"
  },
  {
    "text": "the open in user land so it's kind of changed the dynamic so the conclusions",
    "start": "74820",
    "end": "80880"
  },
  {
    "text": "and the technologies that are the outcomes of those iterations um is comparatively what we'll see from",
    "start": "80880",
    "end": "88799"
  },
  {
    "text": "other propertarian libraries and ecosystems but in in front end",
    "start": "88799",
    "end": "94320"
  },
  {
    "text": "this was happening in inducer land so point I was trying to make was that you",
    "start": "94320",
    "end": "99360"
  },
  {
    "text": "don't have to follow on on all these but I think this is about to change and I think it has changed for the most so I",
    "start": "99360",
    "end": "107460"
  },
  {
    "text": "will argue that now in in in later years even now 10 years later",
    "start": "107460",
    "end": "114479"
  },
  {
    "text": "uh or seven years later I was talking about react then and we can talk about",
    "start": "114479",
    "end": "120720"
  },
  {
    "text": "react now so 10 years is a long time but in this six or seven years that's passed",
    "start": "120720",
    "end": "127860"
  },
  {
    "text": "now there hasn't been a lot of talk about tech fatigue even though it's been just as much exploration just as much",
    "start": "127860",
    "end": "134760"
  },
  {
    "text": "iterations just as much many different implementations there there's been but",
    "start": "134760",
    "end": "140160"
  },
  {
    "text": "it hasn't felt like such a churn and I suspect that it wouldn't from this point",
    "start": "140160",
    "end": "145560"
  },
  {
    "text": "on either feel like such a churn so I'll talk in this presentation just just uh",
    "start": "145560",
    "end": "152580"
  },
  {
    "text": "some about that so this is an interesting picture still",
    "start": "152580",
    "end": "157980"
  },
  {
    "text": "because um not much has changed in reality like",
    "start": "157980",
    "end": "164280"
  },
  {
    "text": "broad picture stuff since that presentation seven years ago if we're",
    "start": "164280",
    "end": "169739"
  },
  {
    "text": "drawing the timeline further out it's still react that's the most dominant or",
    "start": "169739",
    "end": "175319"
  },
  {
    "text": "any sort of Library that's abstraction wise architecture wise the same so of",
    "start": "175319",
    "end": "181140"
  },
  {
    "text": "course there are other as well but here I'm thinking about the overall",
    "start": "181140",
    "end": "187260"
  },
  {
    "text": "architecture and the thought patterns that were used in making applications and in a sense that's that's still the",
    "start": "187260",
    "end": "194340"
  },
  {
    "text": "same so it seems like in in 2013 when when",
    "start": "194340",
    "end": "201120"
  },
  {
    "text": "um Pete hunt did a presentation on the jsconf um",
    "start": "201120",
    "end": "206659"
  },
  {
    "text": "in Europe I think um he was having a talk that that went",
    "start": "206659",
    "end": "212159"
  },
  {
    "text": "something like um read thinking best practices or something like that and it turns out in my way uh in my sense at",
    "start": "212159",
    "end": "219060"
  },
  {
    "text": "least that now we see 10 years later that same thought pattern the same architecture is still applied and almost",
    "start": "219060",
    "end": "225720"
  },
  {
    "text": "every other libraries and and Frameworks are still using that same patterns with",
    "start": "225720",
    "end": "231180"
  },
  {
    "text": "some sort of variations of course and think about this this is actually kind of major because",
    "start": "231180",
    "end": "237420"
  },
  {
    "text": "react and component libraries such as react feels like a new thing but in fact",
    "start": "237420",
    "end": "243959"
  },
  {
    "text": "we have lived longer with react than we have with jQuery before react gutter but",
    "start": "243959",
    "end": "250860"
  },
  {
    "text": "in contrast jQuery felt like an age or a full-grown",
    "start": "250860",
    "end": "257639"
  },
  {
    "text": "personage because it's had such a profound impact in how",
    "start": "257639",
    "end": "263699"
  },
  {
    "text": "we did applications and it's changed the way we're thinking about it",
    "start": "263699",
    "end": "269060"
  },
  {
    "text": "in the same way that react started and did that tectonic change in",
    "start": "269060",
    "end": "274380"
  },
  {
    "text": "architectural thought patterns in 30 2013. so",
    "start": "274380",
    "end": "280320"
  },
  {
    "text": "and what's interesting as well is that all the libraries in the same sphere and",
    "start": "280320",
    "end": "287639"
  },
  {
    "text": "in the same in the same landscape with the same with the same",
    "start": "287639",
    "end": "292979"
  },
  {
    "text": "architectural patterns it feels like they get a lot of criticism they get criticized a lot for",
    "start": "292979",
    "end": "300180"
  },
  {
    "text": "having changed their apis and having changed in Exploration I think this is the same thing we saw previously that we",
    "start": "300180",
    "end": "308280"
  },
  {
    "text": "get to see a more open iteration and more open exploration of",
    "start": "308280",
    "end": "313560"
  },
  {
    "text": "apis and patterns so it feels like a lot but in fact you can write almost the",
    "start": "313560",
    "end": "320100"
  },
  {
    "text": "same way of react today as you could in 2014 you can take the code from 2014 and",
    "start": "320100",
    "end": "326280"
  },
  {
    "text": "run it in the modern day react and think about that it's like for more than",
    "start": "326280",
    "end": "332100"
  },
  {
    "text": "jQuery existed before this change we can still have the same code and that's it's",
    "start": "332100",
    "end": "338340"
  },
  {
    "text": "a major feat in in web development but it also means that there hasn't been any large",
    "start": "338340",
    "end": "344520"
  },
  {
    "text": "Paradigm shifts since then so there have been a lot of different",
    "start": "344520",
    "end": "350660"
  },
  {
    "text": "implementations and and good ones that change um variations of how we do it but",
    "start": "350660",
    "end": "358320"
  },
  {
    "text": "there's a difference between developer experience and and Paradigm shifts where the the former change how you work but",
    "start": "358320",
    "end": "366600"
  },
  {
    "text": "the Larry changed how you think and since I argue that since 2013 there hasn't",
    "start": "366600",
    "end": "374100"
  },
  {
    "text": "been a major shift in how we think about producing software and producing web",
    "start": "374100",
    "end": "380039"
  },
  {
    "text": "applications since then so even though there's a lot of different Frameworks and libraries that",
    "start": "380039",
    "end": "386639"
  },
  {
    "text": "that change how we work there hasn't been any other change I would think",
    "start": "386639",
    "end": "394100"
  },
  {
    "text": "in 2006 Gmail launched their single page application",
    "start": "394199",
    "end": "402319"
  },
  {
    "text": "uh on on phones and that sparked like the the dawn of",
    "start": "402319",
    "end": "407880"
  },
  {
    "text": "the single page applications I in my book so since then",
    "start": "407880",
    "end": "413639"
  },
  {
    "text": "everyone identified that everything we distributed through the web should be an application and everything we",
    "start": "413639",
    "end": "419940"
  },
  {
    "text": "distributed through the web should be a single page application so that's the tool and that's the hammer we used and",
    "start": "419940",
    "end": "425340"
  },
  {
    "text": "everything was a single page application internets were single page applications internet has every internet had like",
    "start": "425340",
    "end": "433500"
  },
  {
    "text": "functions and comments and and social media aspects of it and of course as a",
    "start": "433500",
    "end": "440819"
  },
  {
    "text": "single page application at least during those years of",
    "start": "440819",
    "end": "445979"
  },
  {
    "text": "from from the 2010s so around my figuring is is around 2015 I guess",
    "start": "445979",
    "end": "454800"
  },
  {
    "text": "we're beginning to think okay let's realize not everything is a single",
    "start": "454800",
    "end": "461160"
  },
  {
    "text": "page application so if it's not a single page application it has to be a static page so from that moment on everything",
    "start": "461160",
    "end": "468360"
  },
  {
    "text": "was trying to be static side generation generated sites",
    "start": "468360",
    "end": "474960"
  },
  {
    "text": "uh we had some static site generation before this but this is when it was",
    "start": "474960",
    "end": "481979"
  },
  {
    "text": "started to and the technology was so that it was possible to use it as a general purpose application thing but",
    "start": "481979",
    "end": "489180"
  },
  {
    "text": "then we had some issues with Dynamic data and started experimenting with how",
    "start": "489180",
    "end": "494220"
  },
  {
    "text": "to do Dynamic while doing static and that's an important thing I think when we see to the Future in what's",
    "start": "494220",
    "end": "501599"
  },
  {
    "text": "what's the next Generation architectural pattern",
    "start": "501599",
    "end": "506120"
  },
  {
    "text": "so the truth is of course apps are both Dynamic and they are static and they're",
    "start": "509280",
    "end": "515459"
  },
  {
    "text": "everything in between so there's no problem created equally and",
    "start": "515459",
    "end": "520800"
  },
  {
    "text": "there are wildly different solutions to the different problems we often forget to address what kind of",
    "start": "520800",
    "end": "527820"
  },
  {
    "text": "solution we're trying to make so we're trying to treat everything like in single page application or everything",
    "start": "527820",
    "end": "533880"
  },
  {
    "text": "like status static sites today we use terms like CSR instead and SSG these are just",
    "start": "533880",
    "end": "541440"
  },
  {
    "text": "acronyms it's not important to be there I mostly included so that there wasn't",
    "start": "541440",
    "end": "547680"
  },
  {
    "text": "anyone like oh but you forgot about incremental static regeneration and",
    "start": "547680",
    "end": "553920"
  },
  {
    "text": "whatnot and that's not the different different parts of SSG I didn't forget",
    "start": "553920",
    "end": "559019"
  },
  {
    "text": "it but it's too complex and too too much but also it isn't",
    "start": "559019",
    "end": "564300"
  },
  {
    "text": "it hasn't changed necessarily what were how we're approaching building",
    "start": "564300",
    "end": "570060"
  },
  {
    "text": "applications it's a step towards that but it's a part between uh if we're",
    "start": "570060",
    "end": "575100"
  },
  {
    "text": "looking at the Specter from totally Dynamic pages in single page applications over to the total static",
    "start": "575100",
    "end": "581580"
  },
  {
    "text": "static site generation so it's a specter and and it's it's somewhere along those lines",
    "start": "581580",
    "end": "587640"
  },
  {
    "text": "so but again I don't think these have dramatically changed how we approach writing software",
    "start": "587640",
    "end": "593160"
  },
  {
    "text": "it has improved some of the developer experiences that should improves some of the Waves were working there are a lot",
    "start": "593160",
    "end": "599700"
  },
  {
    "text": "of tools that help us do better products and compensate for the lack of support",
    "start": "599700",
    "end": "605940"
  },
  {
    "text": "from the different outer rims of the of the specter but this I think is also",
    "start": "605940",
    "end": "614339"
  },
  {
    "text": "um applicable to think about it in in product management or product development terms so there's a",
    "start": "614339",
    "end": "621600"
  },
  {
    "text": "fairly common model in product development that's Double Diamond model that's all about converging and",
    "start": "621600",
    "end": "627120"
  },
  {
    "text": "diverging in in Exploration and I think what we're seeing again is",
    "start": "627120",
    "end": "633959"
  },
  {
    "text": "um continuous Divergent in in the technology and kind of a lack of",
    "start": "633959",
    "end": "641120"
  },
  {
    "text": "conversions because when everything is optional and everything is selectable so",
    "start": "641120",
    "end": "649440"
  },
  {
    "text": "you can select what you want from the different parts it's hard to converge to a common platform but I again",
    "start": "649440",
    "end": "657779"
  },
  {
    "text": "I think um this is what we're seeing lack of Divergent but we save a lot of",
    "start": "657779",
    "end": "663660"
  },
  {
    "text": "convergence um but but again I think this is about to change and I think it's about to",
    "start": "663660",
    "end": "669240"
  },
  {
    "text": "change because of three aspects The Meta Frameworks and I'll explain all of these and and go into the detail afterwards",
    "start": "669240",
    "end": "676560"
  },
  {
    "text": "but the meta Frameworks is um I think that's the main reason why",
    "start": "676560",
    "end": "681959"
  },
  {
    "text": "we're seeing more convergence because we're getting more opinionated stuff that allows us to enforce more",
    "start": "681959",
    "end": "688560"
  },
  {
    "text": "conversions um and we'll look at the server client",
    "start": "688560",
    "end": "693600"
  },
  {
    "text": "relationship that's possible due to that convergence and then we'll see uh some more about",
    "start": "693600",
    "end": "700680"
  },
  {
    "text": "data loading and ownership of data and state as a consequence of of",
    "start": "700680",
    "end": "706440"
  },
  {
    "text": "the relationship of server and clients and we'll walk into this with the three",
    "start": "706440",
    "end": "712140"
  },
  {
    "text": "important W's what why and how So Meta Frameworks what even is it",
    "start": "712140",
    "end": "722519"
  },
  {
    "text": "this is a term I've heard I guess for a year now uh it's kind of silly",
    "start": "722519",
    "end": "729120"
  },
  {
    "text": "um because what is a meta framework and how is it not a framework spoiler it's a",
    "start": "729120",
    "end": "734940"
  },
  {
    "text": "framework but I think we're slowly painting ourselves in a corner in in the",
    "start": "734940",
    "end": "741959"
  },
  {
    "text": "front-end world where we've been calling what was actually kind of libraries calling them Frameworks and suddenly",
    "start": "741959",
    "end": "748560"
  },
  {
    "text": "we're getting Frameworks that manages those Frameworks and we have no way of calling them or",
    "start": "748560",
    "end": "754860"
  },
  {
    "text": "finding a new term for them so it just automatically instead of framework Frameworks it's meta Frameworks I guess",
    "start": "754860",
    "end": "761459"
  },
  {
    "text": "but essentially it's just Frameworks it's just baggage for for poor naming",
    "start": "761459",
    "end": "768600"
  },
  {
    "text": "from from from before and I think this is more clear if you see on some of the examples here",
    "start": "768600",
    "end": "775620"
  },
  {
    "text": "so on the left hand side is what's kind of libraries but also Frameworks",
    "start": "775620",
    "end": "781019"
  },
  {
    "text": "and on the right hand side it's it's the meta Frameworks as as complementary to",
    "start": "781019",
    "end": "788279"
  },
  {
    "text": "those so react for instance has next yeah that is remix things like spelled as swell",
    "start": "788279",
    "end": "794220"
  },
  {
    "text": "kits quick quick City you have other things like Astro which is multi",
    "start": "794220",
    "end": "800399"
  },
  {
    "text": "libraries integrated so you can do alpine solid reacts Astro lit whatever",
    "start": "800399",
    "end": "807660"
  },
  {
    "text": "and bake that down to a common um meta framework",
    "start": "807660",
    "end": "814620"
  },
  {
    "text": "and this is kind of interesting because it tightens the relationship and gets more opinionated and we'll see an",
    "start": "814620",
    "end": "820920"
  },
  {
    "text": "example of that soon but I think a really good study case for this is the",
    "start": "820920",
    "end": "827279"
  },
  {
    "text": "relationship between react and next because in this world we also have to see what's the custodianship what's the",
    "start": "827279",
    "end": "834240"
  },
  {
    "text": "owners and what's the maintainers of those Technologies so um here it's natural also to talk about",
    "start": "834240",
    "end": "841740"
  },
  {
    "text": "meta and versaille and so it's not Loosely coupled",
    "start": "841740",
    "end": "849060"
  },
  {
    "text": "Loosely coupled thing because it's beginning to be some sort of some",
    "start": "849060",
    "end": "854639"
  },
  {
    "text": "symbiosis between those Technologies and between those teams and we can see that",
    "start": "854639",
    "end": "861480"
  },
  {
    "text": "first of all versaille has hired some of the the core maintainers from from react",
    "start": "861480",
    "end": "866700"
  },
  {
    "text": "and also you see employees from meta for instance referring to them as colleagues",
    "start": "866700",
    "end": "872279"
  },
  {
    "text": "which is a term I think is not use at random I think it's very very like",
    "start": "872279",
    "end": "878519"
  },
  {
    "text": "it's they're starting to build some sort of collaboration culture between",
    "start": "878519",
    "end": "883820"
  },
  {
    "text": "both meta and versaille and that means that not only is the meta framework",
    "start": "883820",
    "end": "892740"
  },
  {
    "text": "um taking the framework itself and doing something with it but it's a tightly",
    "start": "892740",
    "end": "898320"
  },
  {
    "text": "coupled collaboration which can create newer things so when looking",
    "start": "898320",
    "end": "905339"
  },
  {
    "text": "back at this what's the advantages of that so you can do exploration in a much",
    "start": "905339",
    "end": "911100"
  },
  {
    "text": "broader sense than before you can do a lot more things because you do you do",
    "start": "911100",
    "end": "916139"
  },
  {
    "text": "more you have the choice of changing more on the meta framework and when",
    "start": "916139",
    "end": "921480"
  },
  {
    "text": "you're doing collaboration between the framework itself and The Meta framework you can achieve even more",
    "start": "921480",
    "end": "928199"
  },
  {
    "text": "so you get more of alignment more of opinions which was considered bads in",
    "start": "928199",
    "end": "933959"
  },
  {
    "text": "the front-end world we were proud of having flexibility and having the Power of Choice we can do whatever we want in",
    "start": "933959",
    "end": "941160"
  },
  {
    "text": "in front of me if States management doesn't suit you do something else and we still kind of have that but I think",
    "start": "941160",
    "end": "948000"
  },
  {
    "text": "there's a scale between flexibility and opinions and opinionated Frameworks",
    "start": "948000",
    "end": "954180"
  },
  {
    "text": "so there's kind of a trade-off but I also think that opinions here and",
    "start": "954180",
    "end": "959579"
  },
  {
    "text": "opinionated Frameworks allow for enforcing a paradigm shift quicker and more clearly than ever before so the",
    "start": "959579",
    "end": "966360"
  },
  {
    "text": "rise of meta Frameworks I think of incubated this this what I think is is",
    "start": "966360",
    "end": "972720"
  },
  {
    "text": "tectonic shift and in how we think about architecture",
    "start": "972720",
    "end": "977899"
  },
  {
    "text": "so one example this is the relationship between the server and the client",
    "start": "978240",
    "end": "985860"
  },
  {
    "text": "again we saw that over the years we've done many different ways of doing applications from Spas to",
    "start": "985860",
    "end": "992699"
  },
  {
    "text": "ssgs and whatever behind this is some sort of poll match between server and the client and how we",
    "start": "992699",
    "end": "1000740"
  },
  {
    "text": "view as the main source of truth and how we view it",
    "start": "1000740",
    "end": "1006320"
  },
  {
    "text": "as State machine or whatever so let's just",
    "start": "1006320",
    "end": "1011660"
  },
  {
    "text": "start at the beginning and see at the jQuery model so back in the just after",
    "start": "1011660",
    "end": "1017120"
  },
  {
    "text": "the dhtml time this is how we we used to roll out",
    "start": "1017120",
    "end": "1022459"
  },
  {
    "text": "Dynamic applications in web2o so you send over some some",
    "start": "1022459",
    "end": "1029319"
  },
  {
    "text": "HTML from the server through HTTP most likely from servers like",
    "start": "1029319",
    "end": "1037480"
  },
  {
    "text": "net or whatever or PHP even and you do over the server and then you look at the",
    "start": "1037480",
    "end": "1045500"
  },
  {
    "text": "server Point select specific nodes and make those specific nodes Dynamic if",
    "start": "1045500",
    "end": "1053000"
  },
  {
    "text": "they're changing you're changing only that node and ignore the rest of the page",
    "start": "1053000",
    "end": "1059120"
  },
  {
    "text": "this is this the traditional jQuery model so",
    "start": "1059120",
    "end": "1064700"
  },
  {
    "text": "when we're transitioning over to single page applications or what's what we now",
    "start": "1064700",
    "end": "1069740"
  },
  {
    "text": "usually call client-side rendering this is kind of different we're just sending a blank page sending that over",
    "start": "1069740",
    "end": "1076640"
  },
  {
    "text": "the wire and build the application on the client side so the client side has now total control of what your",
    "start": "1076640",
    "end": "1083059"
  },
  {
    "text": "application is and if you're doing changes there the changes happen on the",
    "start": "1083059",
    "end": "1088220"
  },
  {
    "text": "client side and essentially it happens for the entire page",
    "start": "1088220",
    "end": "1094100"
  },
  {
    "text": "there are some technologies that mitigate this but in in [Music] Theory and in practice it changes the",
    "start": "1094100",
    "end": "1102500"
  },
  {
    "text": "entire page every time this is also another drawback of this is that when you're having the source of Truth and",
    "start": "1102500",
    "end": "1109460"
  },
  {
    "text": "and the the original state in the client you'll have to do a lot of communication",
    "start": "1109460",
    "end": "1115580"
  },
  {
    "text": "with the external and that's the magical threshold of http so over there even though we have local",
    "start": "1115580",
    "end": "1123260"
  },
  {
    "text": "servers and local whatever there is an overhead and especially with systems that are are",
    "start": "1123260",
    "end": "1129559"
  },
  {
    "text": "like um One Plus o of n",
    "start": "1129559",
    "end": "1134559"
  },
  {
    "text": "uh commands like firstly fetch this and for every element of this do this so again we can mitigate",
    "start": "1135080",
    "end": "1142640"
  },
  {
    "text": "that with things like graphql BFFs servers whatever but in any case you'll",
    "start": "1142640",
    "end": "1149600"
  },
  {
    "text": "have to do a lot more information gathering from the client over to the server this is error prone this is",
    "start": "1149600",
    "end": "1155960"
  },
  {
    "text": "slower and there has a lot of drawbacks there are some some advantages as well",
    "start": "1155960",
    "end": "1161840"
  },
  {
    "text": "of course but there are also drawbacks so given those drawbacks",
    "start": "1161840",
    "end": "1168799"
  },
  {
    "text": "there have been a lot of service hide rendering Focus so instead of doing",
    "start": "1168799",
    "end": "1174200"
  },
  {
    "text": "server-side rendering um a client-side rendering exclusively you do hydration so you're sending the",
    "start": "1174200",
    "end": "1181820"
  },
  {
    "text": "initial page from before and then hydrate on the client side and essentially from there",
    "start": "1181820",
    "end": "1189200"
  },
  {
    "text": "on out it's the same so if you're changing something in that you're changing the entire page and",
    "start": "1189200",
    "end": "1196880"
  },
  {
    "text": "again if you're doing a lot of communication with servers and whatnot you're doing a lot of overheads it's the",
    "start": "1196880",
    "end": "1203480"
  },
  {
    "text": "same from the point on uh after the client has received the information there is still the same drawbacks as",
    "start": "1203480",
    "end": "1211039"
  },
  {
    "text": "client-side rendering but what we get is more robust we get",
    "start": "1211039",
    "end": "1216200"
  },
  {
    "text": "search mod search engine optimizations we get easier support for for",
    "start": "1216200",
    "end": "1224179"
  },
  {
    "text": "accessibility so there are advantages of doing this but still there are a lot of disadvantages",
    "start": "1224179",
    "end": "1230480"
  },
  {
    "text": "so a more perhaps newer term is Island",
    "start": "1230480",
    "end": "1236240"
  },
  {
    "text": "architecture and partial hydration again it's a couple of years old but it's it's still fairly new in in thought pattern",
    "start": "1236240",
    "end": "1243980"
  },
  {
    "text": "wise but instead of sending over and hydrating the entire",
    "start": "1243980",
    "end": "1249260"
  },
  {
    "text": "application again on the client side you're just marking specific points from",
    "start": "1249260",
    "end": "1254660"
  },
  {
    "text": "your server and saying this this is done the dynamic run everything else is",
    "start": "1254660",
    "end": "1260900"
  },
  {
    "text": "static ignore that and in this case you only change the specific item",
    "start": "1260900",
    "end": "1268760"
  },
  {
    "text": "um that you have marked for this and it also means that you you can send less",
    "start": "1268760",
    "end": "1275179"
  },
  {
    "text": "information from the server to the client because you're explicitly marking",
    "start": "1275179",
    "end": "1280820"
  },
  {
    "text": "something as this is what I want to be dynamic",
    "start": "1280820",
    "end": "1285860"
  },
  {
    "text": "we also have something else that's resumability it's a bit newer again and and",
    "start": "1285860",
    "end": "1292159"
  },
  {
    "text": "um maybe not as as known but it's still used fairly widely in some circles so",
    "start": "1292159",
    "end": "1299419"
  },
  {
    "text": "instead of of doing the partial hydration uh automatically on the client",
    "start": "1299419",
    "end": "1305240"
  },
  {
    "text": "side we're sending over static sites and marking that this",
    "start": "1305240",
    "end": "1311120"
  },
  {
    "text": "when we're interacting with this and if something happens uh like an event then",
    "start": "1311120",
    "end": "1318140"
  },
  {
    "text": "we're initiating the the dynamicness again this is really a",
    "start": "1318140",
    "end": "1324559"
  },
  {
    "text": "like a high level walkthrough but we'll look into how this is in practice uh",
    "start": "1324559",
    "end": "1329780"
  },
  {
    "text": "soon so if we're doing changes here when we're interacting only those components",
    "start": "1329780",
    "end": "1336020"
  },
  {
    "text": "or knowledge those nodes in the Dom tree is changed well let's back to to partial hydration",
    "start": "1336020",
    "end": "1342380"
  },
  {
    "text": "first because this is the the start of the tectonic shift I think",
    "start": "1342380",
    "end": "1347900"
  },
  {
    "text": "um so if we're looking at this this isn't",
    "start": "1347900",
    "end": "1353000"
  },
  {
    "text": "far off from how I describe the JK model from so instead of having the client ask",
    "start": "1353000",
    "end": "1361220"
  },
  {
    "text": "the the um source of Truth and and the the original data in the State Management we're",
    "start": "1361220",
    "end": "1368480"
  },
  {
    "text": "moving that to the server this has a huge huge advantage",
    "start": "1368480",
    "end": "1374059"
  },
  {
    "text": "that's instead of crossing the magical threshold of HTTP",
    "start": "1374059",
    "end": "1380059"
  },
  {
    "text": "we're doing the entire application fetching from different servers closer",
    "start": "1380059",
    "end": "1385400"
  },
  {
    "text": "to the server itself so we're reducing risks we're um increasing ability to",
    "start": "1385400",
    "end": "1393039"
  },
  {
    "text": "mitigate errors so it's more resilient and",
    "start": "1393039",
    "end": "1399400"
  },
  {
    "text": "it's it can be cached in different ways across different users so there has a lot of advantages",
    "start": "1399400",
    "end": "1406520"
  },
  {
    "text": "in doing this and we're changing so that not everything is on the client but only",
    "start": "1406520",
    "end": "1412000"
  },
  {
    "text": "what actually needs to be on the client so there are a couple of implementations",
    "start": "1412000",
    "end": "1417500"
  },
  {
    "text": "of this with different semantics and different ways of doing it but I think in essence",
    "start": "1417500",
    "end": "1425960"
  },
  {
    "text": "the change in thought pattern is the same so it's a shift from",
    "start": "1425960",
    "end": "1432320"
  },
  {
    "text": "a client first perspective to a server first perspective and that changes the entire way your mental model Works in",
    "start": "1432320",
    "end": "1439100"
  },
  {
    "text": "how you write applications so it's not a developer experience thing it's it's a",
    "start": "1439100",
    "end": "1444200"
  },
  {
    "text": "paradigm shift thing so here's an example in in next year so",
    "start": "1444200",
    "end": "1449419"
  },
  {
    "text": "next JS since 13.4 I guess has defaulted to instead of",
    "start": "1449419",
    "end": "1456620"
  },
  {
    "text": "using a client-side first thinking to server-side First thinking meaning that",
    "start": "1456620",
    "end": "1462559"
  },
  {
    "text": "every component you write unless otherwise specific specified is a server-side thing",
    "start": "1462559",
    "end": "1471020"
  },
  {
    "text": "um this is a pragma key over here with the use client on the right hand side it's",
    "start": "1471020",
    "end": "1477740"
  },
  {
    "text": "not important the details here but it's it's kind of important to see that it's",
    "start": "1477740",
    "end": "1483380"
  },
  {
    "text": "um changed how we structure and how we think about it because again when it's server side first it means that uh what",
    "start": "1483380",
    "end": "1490820"
  },
  {
    "text": "happens to Secrets what happens to database connections what happens to um whatever interaction with file",
    "start": "1490820",
    "end": "1497419"
  },
  {
    "text": "systems or whatever everything of that is hidden away from this from the client",
    "start": "1497419",
    "end": "1502760"
  },
  {
    "text": "but explicitly where it says this is a client side this will be transferred",
    "start": "1502760",
    "end": "1508880"
  },
  {
    "text": "over so it's a cleaner uh cleaner um separation between where the contexts",
    "start": "1508880",
    "end": "1516500"
  },
  {
    "text": "are in what context is thing running",
    "start": "1516500",
    "end": "1521620"
  },
  {
    "text": "so and also it's interesting to see that this actually works by having you can",
    "start": "1521620",
    "end": "1528200"
  },
  {
    "text": "have children of client-side things that are server-side things",
    "start": "1528200",
    "end": "1533779"
  },
  {
    "text": "it's kind of a track but essentially it just means that when opening a server",
    "start": "1533779",
    "end": "1539059"
  },
  {
    "text": "page from this it starts streaming from the nodes from top down so when meeting",
    "start": "1539059",
    "end": "1546020"
  },
  {
    "text": "a client-side component it can have server-side asset",
    "start": "1546020",
    "end": "1552380"
  },
  {
    "text": "children not as com as a property but as a child because it's uh streamed as text",
    "start": "1552380",
    "end": "1559700"
  },
  {
    "text": "input and serialized as a Json structure so this is an example of of output in",
    "start": "1559700",
    "end": "1566539"
  },
  {
    "text": "the browser when running in a simple example like I showed before and again",
    "start": "1566539",
    "end": "1573200"
  },
  {
    "text": "it serializes the the HTML structure as as Json and then outputs that specific",
    "start": "1573200",
    "end": "1581539"
  },
  {
    "text": "part of what is dynamic as dynamic the other parts is just static HTML and",
    "start": "1581539",
    "end": "1590419"
  },
  {
    "text": "has no code other than than what's outputted from the server as HTML",
    "start": "1590419",
    "end": "1596960"
  },
  {
    "text": "another fine example I think is is Astro so asteroids mainly a meta framework for",
    "start": "1596960",
    "end": "1603260"
  },
  {
    "text": "doing static sites but it's also kind of coined or kind of",
    "start": "1603260",
    "end": "1612020"
  },
  {
    "text": "popularized the term Island architecture which is the same as as partial hydration as I shown in in xjs in",
    "start": "1612020",
    "end": "1618500"
  },
  {
    "text": "essence but there is a lot of it's a bit different in how you use it in after you",
    "start": "1618500",
    "end": "1624980"
  },
  {
    "text": "have directives and you have the separation between what is run on the server and what is run on",
    "start": "1624980",
    "end": "1631580"
  },
  {
    "text": "the client so what is in the front matter syntax here as it's probably seen",
    "start": "1631580",
    "end": "1636740"
  },
  {
    "text": "in things like markdown that's the threshold for HTTP in a way so what is",
    "start": "1636740",
    "end": "1643340"
  },
  {
    "text": "inside the the front matter happens on the server it just code behind if you",
    "start": "1643340",
    "end": "1650419"
  },
  {
    "text": "will and you can access that from the code below which is outputted to the",
    "start": "1650419",
    "end": "1657500"
  },
  {
    "text": "server to the client again everything you write in Astro for instance",
    "start": "1657500",
    "end": "1663200"
  },
  {
    "text": "here we can use react components and and swell components as I said before but and Astro components as a no as its own",
    "start": "1663200",
    "end": "1671299"
  },
  {
    "text": "markup language but everything by default is server stuff",
    "start": "1671299",
    "end": "1678140"
  },
  {
    "text": "you have to explicitly Mark with the directive things like this client loads and that",
    "start": "1678140",
    "end": "1684620"
  },
  {
    "text": "says this particular case is dynamic so only send code and client-side code",
    "start": "1684620",
    "end": "1691700"
  },
  {
    "text": "that's relevant for this component everything else static ignore it but",
    "start": "1691700",
    "end": "1696919"
  },
  {
    "text": "this one this is dynamic there are other directors directives as",
    "start": "1696919",
    "end": "1702679"
  },
  {
    "text": "well things like um uh lazy or in view which is",
    "start": "1702679",
    "end": "1708440"
  },
  {
    "text": "treaties are static but if it gets scrolled into view for instance",
    "start": "1708440",
    "end": "1713960"
  },
  {
    "text": "um then you can load the data so if I think the prime example is a carousel",
    "start": "1713960",
    "end": "1719779"
  },
  {
    "text": "that's further down on your page that requires a lot of JavaScript but only 10",
    "start": "1719779",
    "end": "1726620"
  },
  {
    "text": "of your users see uh just defer loading of that",
    "start": "1726620",
    "end": "1732320"
  },
  {
    "text": "um to the bottom again the most important part here isn't Astro",
    "start": "1732320",
    "end": "1738860"
  },
  {
    "text": "isn't an xjs but it's the default thought pattern has changed",
    "start": "1738860",
    "end": "1745340"
  },
  {
    "text": "from thinking how can we access the server from the client from",
    "start": "1745340",
    "end": "1751820"
  },
  {
    "text": "from that to okay we're doing a server here and some of our output is dynamic",
    "start": "1751820",
    "end": "1759919"
  },
  {
    "text": "flips the entire relationship so by default just server just output just",
    "start": "1759919",
    "end": "1767720"
  },
  {
    "text": "HTML but some cases can be dynamic",
    "start": "1767720",
    "end": "1773480"
  },
  {
    "text": "um and some cases can be changed on the client side as well but that's opt-in instead of of uh opt",
    "start": "1773480",
    "end": "1781039"
  },
  {
    "text": "out in a way so there are also some safety advantages of this like I said um in previous implementations of next",
    "start": "1781039",
    "end": "1788179"
  },
  {
    "text": "where we're doing server-side um server-side rendering you can easily",
    "start": "1788179",
    "end": "1795799"
  },
  {
    "text": "leak API keys for instance because it relies on tree shaking to to clear the",
    "start": "1795799",
    "end": "1804020"
  },
  {
    "text": "data from the different bundles which means that if you're adding something that's not tree shakable it can be",
    "start": "1804020",
    "end": "1810320"
  },
  {
    "text": "outputted to the client they had some solutions where you can copy paste your code and see what would be tree shaped",
    "start": "1810320",
    "end": "1817520"
  },
  {
    "text": "that's very cumbersome and hard to use but this also means like I said Runner",
    "start": "1817520",
    "end": "1824360"
  },
  {
    "text": "is changing from thinking client-side first over to server side",
    "start": "1824360",
    "end": "1829520"
  },
  {
    "text": "first this also means we're changing and flipping how we're doing loading so",
    "start": "1829520",
    "end": "1835220"
  },
  {
    "text": "instead of trying to collect all information to the client we have now",
    "start": "1835220",
    "end": "1840700"
  },
  {
    "text": "have more on the server so this is what I mean about data",
    "start": "1840700",
    "end": "1845899"
  },
  {
    "text": "loading and ownership so",
    "start": "1845899",
    "end": "1851000"
  },
  {
    "text": "when moving everything to the server",
    "start": "1851000",
    "end": "1855100"
  },
  {
    "text": "with with out normal hydration you have to be dynamic still we're not",
    "start": "1856220",
    "end": "1863779"
  },
  {
    "text": "we're not we're not just creating static Pages we're still doing still having",
    "start": "1863779",
    "end": "1869480"
  },
  {
    "text": "requirements of doing things dynamically but it changes",
    "start": "1869480",
    "end": "1875899"
  },
  {
    "text": "the structure of how you do it so I think this is a May third major major change that we'll see a lot more of and",
    "start": "1875899",
    "end": "1884179"
  },
  {
    "text": "I'll do some examples here as well so this is from quick which I believe is is a",
    "start": "1884179",
    "end": "1891260"
  },
  {
    "text": "framework created by one of the previous angular people I don't know but it's",
    "start": "1891260",
    "end": "1897020"
  },
  {
    "text": "still um jsx it reminds you of things like react but there are some different",
    "start": "1897020",
    "end": "1903140"
  },
  {
    "text": "ergonomics but it again it doesn't matter but quick uses resumability so again it",
    "start": "1903140",
    "end": "1912260"
  },
  {
    "text": "changes that everything is static unless otherwise told so but it does so in a different way so I'll show an example",
    "start": "1912260",
    "end": "1918919"
  },
  {
    "text": "this given the but we have this counter which is the classic example I guess",
    "start": "1918919",
    "end": "1925220"
  },
  {
    "text": "um we get this output so plus increment a decrement and a",
    "start": "1925220",
    "end": "1932419"
  },
  {
    "text": "number this doesn't do anything it's just HTML it just outputs HTML no",
    "start": "1932419",
    "end": "1938120"
  },
  {
    "text": "JavaScript whatsoever with a few changes in the carryouts but",
    "start": "1938120",
    "end": "1943820"
  },
  {
    "text": "for point being is it's mostly HTML but",
    "start": "1943820",
    "end": "1949340"
  },
  {
    "text": "look at this so the button itself is has a reference to it and it has a odd",
    "start": "1949340",
    "end": "1957380"
  },
  {
    "text": "hashing or something that seems oddly specific so",
    "start": "1957380",
    "end": "1963740"
  },
  {
    "text": "we can reduce these the example of this to this just ignore the fact that I've written",
    "start": "1963740",
    "end": "1970880"
  },
  {
    "text": "href here instead of button click but it's the same principle so",
    "start": "1970880",
    "end": "1977000"
  },
  {
    "text": "given that you have an HTML output they also include a global event",
    "start": "1977000",
    "end": "1982880"
  },
  {
    "text": "listener that listens to every click you ever do on the web page and when you're",
    "start": "1982880",
    "end": "1987980"
  },
  {
    "text": "doing a click it tries to match and see is this something that I want to handle so when clicking",
    "start": "1987980",
    "end": "1995659"
  },
  {
    "text": "on that button it goes over and importing using esm",
    "start": "1995659",
    "end": "2002019"
  },
  {
    "text": "modules an important importing that specific file as referenced and that",
    "start": "2002019",
    "end": "2007899"
  },
  {
    "text": "specific function that is is exported so in this example we can see that for",
    "start": "2007899",
    "end": "2014799"
  },
  {
    "text": "the first increment that refers to a specific export in that module that is",
    "start": "2014799",
    "end": "2020200"
  },
  {
    "text": "dynamically loaded when clicking on it",
    "start": "2020200",
    "end": "2023940"
  },
  {
    "text": "so this is an example of the running so we've seen that when loading the page there isn't that in JavaScript it's",
    "start": "2025600",
    "end": "2031480"
  },
  {
    "text": "embedded in the page but when clicking on it you get the um this the function itself",
    "start": "2031480",
    "end": "2040120"
  },
  {
    "text": "but also you can ask them doesn't it go against the principle I just said of uh reducing the number of",
    "start": "2040120",
    "end": "2047799"
  },
  {
    "text": "calls this will maximize the latency so every time you increase every time you",
    "start": "2047799",
    "end": "2054158"
  },
  {
    "text": "click on something that's intractable you're downloading a small chunk of something that's incredible incredibly",
    "start": "2054159",
    "end": "2061800"
  },
  {
    "text": "wasteful for for latency and overhead and especially if you're not using",
    "start": "2061800",
    "end": "2067240"
  },
  {
    "text": "things like cdns and having service close to your client but the way they",
    "start": "2067240",
    "end": "2072339"
  },
  {
    "text": "mitigate It Is by using service worker so preemptively for every page you're opening they're caching essentially the",
    "start": "2072339",
    "end": "2080080"
  },
  {
    "text": "every intellectual element in there so if you see here it's loaded from service",
    "start": "2080080",
    "end": "2085898"
  },
  {
    "text": "worker instead of actually downloaded so um they're kind of mitigating that",
    "start": "2085899",
    "end": "2092220"
  },
  {
    "text": "instead so the initial load will still load some code but it's",
    "start": "2092220",
    "end": "2098500"
  },
  {
    "text": "um when revisiting the site for instance it's not not as bad",
    "start": "2098500",
    "end": "2104560"
  },
  {
    "text": "and but this is an example of of something Quake calls RPC and RPC as we",
    "start": "2104560",
    "end": "2110079"
  },
  {
    "text": "know is is remote procedure call and it's existed for for generations of",
    "start": "2110079",
    "end": "2115480"
  },
  {
    "text": "developers um so it's just the fact that giving some",
    "start": "2115480",
    "end": "2121839"
  },
  {
    "text": "sort of invocation or command at some sort of service I'm trying remotely to",
    "start": "2121839",
    "end": "2128400"
  },
  {
    "text": "trigger that and get the result of course in quick world this is just",
    "start": "2128400",
    "end": "2135280"
  },
  {
    "text": "HTTP but again HTTP is some sort of RPC",
    "start": "2135280",
    "end": "2141839"
  },
  {
    "text": "you're executing a specific command on a server and getting the results so this",
    "start": "2141839",
    "end": "2147460"
  },
  {
    "text": "isn't a fancy new protocol or or some specific thing is just an import",
    "start": "2147460",
    "end": "2152740"
  },
  {
    "text": "statement referencing a specific type of URL that's quick",
    "start": "2152740",
    "end": "2157859"
  },
  {
    "text": "as as constructed so in this quick example we're still dynamic",
    "start": "2157859",
    "end": "2164500"
  },
  {
    "text": "um the RPC is more how to load codes and not State and we're in in this way we're",
    "start": "2164500",
    "end": "2172300"
  },
  {
    "text": "still having the state and the source of Truth in the client side",
    "start": "2172300",
    "end": "2177520"
  },
  {
    "text": "not on the server side but this is an example of how we can change how data",
    "start": "2177520",
    "end": "2183339"
  },
  {
    "text": "loading is we can see another example of that using server actions in next this",
    "start": "2183339",
    "end": "2189460"
  },
  {
    "text": "was launched as Alpha for a month ago I guess in in in",
    "start": "2189460",
    "end": "2194760"
  },
  {
    "text": "for next.js so it's in Alpha in next.js 13.4",
    "start": "2194760",
    "end": "2200859"
  },
  {
    "text": "again what I want you to take out of this is the switch between who owns the state",
    "start": "2200859",
    "end": "2208060"
  },
  {
    "text": "and switch between who owns the data so this is obviously a ludicrous uh code and and not something that's recommended",
    "start": "2208060",
    "end": "2215920"
  },
  {
    "text": "but it shows that if we're doing uh",
    "start": "2215920",
    "end": "2221920"
  },
  {
    "text": "State on the server we can expose that and handle that on the server side",
    "start": "2221920",
    "end": "2228339"
  },
  {
    "text": "we can see the running example uh after a while to see how it works but",
    "start": "2228339",
    "end": "2234040"
  },
  {
    "text": "if we're seeing here the output is just HTML with a button",
    "start": "2234040",
    "end": "2240640"
  },
  {
    "text": "and when trying to click the button if we're adding a breakpoint for the xhr we",
    "start": "2240640",
    "end": "2246520"
  },
  {
    "text": "can see that when doing a bottom click it just actually does a fetch underneath",
    "start": "2246520",
    "end": "2253480"
  },
  {
    "text": "to itself in the same",
    "start": "2253480",
    "end": "2258700"
  },
  {
    "text": "at the same URL with something called Next action with an action ID there so",
    "start": "2258700",
    "end": "2265000"
  },
  {
    "text": "this action ID as sent to a header is the same as seen in the HTML itself",
    "start": "2265000",
    "end": "2271500"
  },
  {
    "text": "and in fact we can see that this is",
    "start": "2271500",
    "end": "2276520"
  },
  {
    "text": "um just a form with specific IDs on each button so when clicking the different",
    "start": "2276520",
    "end": "2281800"
  },
  {
    "text": "buttons we can see that it works but even though um and and we can even",
    "start": "2281800",
    "end": "2287560"
  },
  {
    "text": "disable JavaScript and it will still work as as same intended because the way",
    "start": "2287560",
    "end": "2293500"
  },
  {
    "text": "the RPC here works is they identify what is marked with the pragma key as you",
    "start": "2293500",
    "end": "2299740"
  },
  {
    "text": "server extract that as a separate endpoint in in the same file essentially so",
    "start": "2299740",
    "end": "2307000"
  },
  {
    "text": "instead of being a get request it's a post request as uh",
    "start": "2307000",
    "end": "2312160"
  },
  {
    "text": "I think forms only support get them posts maybe others as well but yeah",
    "start": "2312160",
    "end": "2318099"
  },
  {
    "text": "so then when doing a post request through the form to the site itself with",
    "start": "2318099",
    "end": "2324760"
  },
  {
    "text": "the Header information or with the form information of the button with a name they can map it to a specific action on",
    "start": "2324760",
    "end": "2332260"
  },
  {
    "text": "the server side so this is um maybe a more",
    "start": "2332260",
    "end": "2338400"
  },
  {
    "text": "an other example of RPC but it's still unpacked RPC and we can do server",
    "start": "2339460",
    "end": "2345579"
  },
  {
    "text": "loading with this as well instead of just doing through a form where we can get server information",
    "start": "2345579",
    "end": "2351000"
  },
  {
    "text": "where it then extracts as its separate API a separate endpoint and then do a",
    "start": "2351000",
    "end": "2357640"
  },
  {
    "text": "post request or a get request from that endpoint but in the code it seems like just a function call",
    "start": "2357640",
    "end": "2364740"
  },
  {
    "text": "this is this is Major in a way because this means that interactions with data and state is",
    "start": "2365619",
    "end": "2374200"
  },
  {
    "text": "Progressive enhancement proof by default because here I just I didn't write any",
    "start": "2374200",
    "end": "2379480"
  },
  {
    "text": "specific code for handling uh data here on the server side or the client side it",
    "start": "2379480",
    "end": "2386020"
  },
  {
    "text": "just works without JavaScript and there's not much points per se to",
    "start": "2386020",
    "end": "2392640"
  },
  {
    "text": "absolutely not support JavaScript um there isn't many doing turning off their",
    "start": "2392640",
    "end": "2400839"
  },
  {
    "text": "JavaScript other it also means that if something fails it",
    "start": "2400839",
    "end": "2406720"
  },
  {
    "text": "can degrade to to a lower form of working so we're building in complexity",
    "start": "2406720",
    "end": "2412900"
  },
  {
    "text": "um instead of instead of going complexity first this is of course not without its",
    "start": "2412900",
    "end": "2419740"
  },
  {
    "text": "caveats so it can one major drawback is obviously that's",
    "start": "2419740",
    "end": "2427119"
  },
  {
    "text": "there are a lot more there's a lot more distance from what we're writing to what",
    "start": "2427119",
    "end": "2433000"
  },
  {
    "text": "we're observing in the client side so before we're just doing bundling of",
    "start": "2433000",
    "end": "2439300"
  },
  {
    "text": "sites and we're having Source maps to match from the bundle over to the actual",
    "start": "2439300",
    "end": "2444640"
  },
  {
    "text": "source code when there's extractions and creating different API points that we don't see",
    "start": "2444640",
    "end": "2451420"
  },
  {
    "text": "and it's abstracted away from us there's a larger distance so it might make it",
    "start": "2451420",
    "end": "2456700"
  },
  {
    "text": "harder to debug but the advantages are it's real closer",
    "start": "2456700",
    "end": "2462820"
  },
  {
    "text": "to real semantic coupling and and coupling of data so",
    "start": "2462820",
    "end": "2468520"
  },
  {
    "text": "complexity cannot be created or destroyed only transformed from one form to another obviously not true I create",
    "start": "2468520",
    "end": "2474640"
  },
  {
    "text": "complexity every day but also not not true because I think often when we're",
    "start": "2474640",
    "end": "2481300"
  },
  {
    "text": "trying to introduce architecture to reduce complexity um we're not really reducing complexity",
    "start": "2481300",
    "end": "2488320"
  },
  {
    "text": "we're just shuffling complexity around and I think this is true for this case as well because before we had",
    "start": "2488320",
    "end": "2494740"
  },
  {
    "text": "the major drawback of server client relationship and server loading before",
    "start": "2494740",
    "end": "2499960"
  },
  {
    "text": "was that um things that are supposed to be semantically coupled",
    "start": "2499960",
    "end": "2506700"
  },
  {
    "text": "are architecturally Loosely coupled so we're trying to mental model our way",
    "start": "2506700",
    "end": "2514000"
  },
  {
    "text": "around loading data but now with this we're changing that",
    "start": "2514000",
    "end": "2520420"
  },
  {
    "text": "around to being things that are semantically coupled are actually technically Loosely coupled",
    "start": "2520420",
    "end": "2528700"
  },
  {
    "text": "because it's degrees of different separations of um",
    "start": "2528700",
    "end": "2533859"
  },
  {
    "text": "of how we're interacting with them from protocol to protocol Etc",
    "start": "2533859",
    "end": "2539079"
  },
  {
    "text": "but again it doesn't reduce complexity it's just a different type of complexity and I think it's",
    "start": "2539079",
    "end": "2545260"
  },
  {
    "text": "um it's a matter of finding the complexities and abstractions you can live with so I think those three major building",
    "start": "2545260",
    "end": "2553480"
  },
  {
    "text": "blocks um now will change not only how we work",
    "start": "2553480",
    "end": "2560320"
  },
  {
    "text": "but how we think about building a web web applications",
    "start": "2560320",
    "end": "2565720"
  },
  {
    "text": "so if we make a large a much larger gent in how we think about",
    "start": "2565720",
    "end": "2572680"
  },
  {
    "text": "it not only how we work with it so meta Frameworks are more opinionated causing",
    "start": "2572680",
    "end": "2578020"
  },
  {
    "text": "it to be able to converge more and enforce opinions a lot more it means",
    "start": "2578020",
    "end": "2583839"
  },
  {
    "text": "that we can see larger changes but I think maybe it was it will lead to lower churn",
    "start": "2583839",
    "end": "2592300"
  },
  {
    "text": "as well because we won't see the entire exploration and iteration phase",
    "start": "2592300",
    "end": "2597660"
  },
  {
    "text": "and we see that the method Frameworks uses their opportunity to do so and they use their power to to enforce their",
    "start": "2597660",
    "end": "2604900"
  },
  {
    "text": "opinions as intended before I think front-end developers was mostly against",
    "start": "2604900",
    "end": "2611619"
  },
  {
    "text": "having two opinionated things I think maybe that's about to change",
    "start": "2611619",
    "end": "2618040"
  },
  {
    "text": "um and and also think that seeing how they're changing things and flipping the",
    "start": "2618040",
    "end": "2623980"
  },
  {
    "text": "relationship and server and client uh um to being server first instead of",
    "start": "2623980",
    "end": "2629200"
  },
  {
    "text": "Client First it means that we need new ways to interact with data we need new",
    "start": "2629200",
    "end": "2635079"
  },
  {
    "text": "ways to do State Management we need new ways to load data and it changes who",
    "start": "2635079",
    "end": "2641440"
  },
  {
    "text": "retains the ownership of that data so again it isn't without trade-offs",
    "start": "2641440",
    "end": "2647740"
  },
  {
    "text": "but the advantages you get is lower timed interaction less transfer data we",
    "start": "2647740",
    "end": "2653680"
  },
  {
    "text": "get more robust Solutions and",
    "start": "2653680",
    "end": "2659099"
  },
  {
    "text": "last but not least we get progressive enhancements by default something that's been been lacking for many solutions for",
    "start": "2659099",
    "end": "2667240"
  },
  {
    "text": "the last seven years so one important part of this paradigm shift",
    "start": "2667240",
    "end": "2672760"
  },
  {
    "text": "I think it's it's um it moves kind of the the the way we're",
    "start": "2672760",
    "end": "2681760"
  },
  {
    "text": "able to evolve systems over time because it's a lot easier to move to more",
    "start": "2681760",
    "end": "2688240"
  },
  {
    "text": "abstractions and more tooling than it is to move to less so for instance moving",
    "start": "2688240",
    "end": "2693280"
  },
  {
    "text": "and going from a fully fledged single page application over to a server-side rendered Progressive enhanced Solutions",
    "start": "2693280",
    "end": "2700060"
  },
  {
    "text": "or a subpart of a solution as really really hard moving from just uh server",
    "start": "2700060",
    "end": "2705400"
  },
  {
    "text": "generated stuff over to more Dynamic subpart is much easier because it's from",
    "start": "2705400",
    "end": "2711160"
  },
  {
    "text": "a lower degree of abstractions to a higher degree so I think the movement here",
    "start": "2711160",
    "end": "2718060"
  },
  {
    "text": "to being server first uh is will be a big part of the next generation of the",
    "start": "2718060",
    "end": "2724180"
  },
  {
    "text": "the server and the way we think about creating web applications so it's more",
    "start": "2724180",
    "end": "2730060"
  },
  {
    "text": "than just server-side rendering and it's more than just data but it's I think it's building blocks build building on",
    "start": "2730060",
    "end": "2737200"
  },
  {
    "text": "each other to to converge a lot more than before",
    "start": "2737200",
    "end": "2742599"
  },
  {
    "text": "also I think it's getting more polarized in a way in what we're creating",
    "start": "2742599",
    "end": "2749619"
  },
  {
    "text": "um because this we will still see these single page",
    "start": "2749619",
    "end": "2755380"
  },
  {
    "text": "applications we will still see the uh static site generated content",
    "start": "2755380",
    "end": "2761740"
  },
  {
    "text": "um but I think it's more important than ever to to think about the",
    "start": "2761740",
    "end": "2769420"
  },
  {
    "text": "um think about the advice we get and see if is this applicable to my problem area",
    "start": "2769420",
    "end": "2776140"
  },
  {
    "text": "and it's disapplicable to me um and I think we're probably moving",
    "start": "2776140",
    "end": "2781720"
  },
  {
    "text": "into a time that we'll see more and more transition into server first thinking but it will probably take a time before",
    "start": "2781720",
    "end": "2789760"
  },
  {
    "text": "it does so that's it uh questions comments to",
    "start": "2789760",
    "end": "2797500"
  },
  {
    "text": "Twitter also I have two Norwegian podcasts in in strange dialects",
    "start": "2797500",
    "end": "2802660"
  },
  {
    "text": "um so I mentioned all that so in Hope for getting listeners",
    "start": "2802660",
    "end": "2808440"
  },
  {
    "text": "I think crucial thing see that and send me a message if",
    "start": "2808440",
    "end": "2814960"
  },
  {
    "text": "there's any comments well they're not I'm done",
    "start": "2814960",
    "end": "2820078"
  },
  {
    "text": "[Applause]",
    "start": "2820700",
    "end": "2823430"
  }
]