[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "hey everyone thanks for coming my name is Jimmy Bogart you can find me",
    "start": "9380",
    "end": "15000"
  },
  {
    "text": "on twitter @ @j Bogard and this presentation as long with a slice it'll be on my github I get out of that comm",
    "start": "15000",
    "end": "21630"
  },
  {
    "text": "/j Bogart I blog a little bit on my blog at Jimmy Bogart calm and there's some",
    "start": "21630",
    "end": "27030"
  },
  {
    "text": "other junk about me and today I want to talk about distributed transactions or",
    "start": "27030",
    "end": "32308"
  },
  {
    "text": "really for me this was the rude awakening I get when I move system's past just a single database and now I",
    "start": "32309",
    "end": "38699"
  },
  {
    "text": "have to worry about multiple resources and multiple databases so for most of my career that kind of apps for building",
    "start": "38699",
    "end": "45960"
  },
  {
    "text": "were much simpler I typically just had a single application and the database and",
    "start": "45960",
    "end": "51210"
  },
  {
    "text": "when I wanted to perform operations against it I just wrote regular sequel wasn't that difficult to do so when I",
    "start": "51210",
    "end": "56640"
  },
  {
    "text": "performed it updates I could read the information back out and I can expect to be able to read the information that I",
    "start": "56640",
    "end": "62579"
  },
  {
    "text": "just wrote because databases have all that acid stuff and then write atomic consistent something about I and then",
    "start": "62579",
    "end": "71759"
  },
  {
    "text": "there's a D in there as well so with all those things put together then everything is good with my application I don't have to worry about things as a",
    "start": "71759",
    "end": "77940"
  },
  {
    "text": "developer now if I want to do more complex stuff let's say I want to have multiple updates I could do this with",
    "start": "77940",
    "end": "83550"
  },
  {
    "text": "sequel I can make multiple writes and then be able to read back out and get everything that I expect now if",
    "start": "83550",
    "end": "90929"
  },
  {
    "text": "something goes wrong with that picture that is let's say I'm making multiple updates and the second update fail for",
    "start": "90929",
    "end": "96450"
  },
  {
    "text": "whatever reason then want to make sure that either the entire operation succeeds or fails so I as a developer",
    "start": "96450",
    "end": "102660"
  },
  {
    "text": "need to wrap this entire operation in a transaction so that whenever I make a",
    "start": "102660",
    "end": "108179"
  },
  {
    "text": "update with these two items the entire operation either succeeds or fails so by",
    "start": "108179",
    "end": "113610"
  },
  {
    "text": "wrapping a transaction everything either goes in or none of it goes in okay so",
    "start": "113610",
    "end": "119250"
  },
  {
    "text": "for most the systems and applications I work with this is just fine I just I just basically as long as like I use",
    "start": "119250",
    "end": "125099"
  },
  {
    "text": "transactions then my systems will work just fine the first time this picture",
    "start": "125099",
    "end": "130619"
  },
  {
    "text": "didn't work with me is when I had a slight wrinkle in my system and that I didn't have just a single app and a single database but I had two databases",
    "start": "130619",
    "end": "137370"
  },
  {
    "text": "to work with so something like an e-commerce application in which I would have to update some status in the sales database for an",
    "start": "137370",
    "end": "144840"
  },
  {
    "text": "order and then I would need to update the inventory in a sock database to make sure I deduct the stock for the order",
    "start": "144840",
    "end": "150569"
  },
  {
    "text": "that the customer placed and I've wrapped it's in a transaction and everything was good right wrong no this",
    "start": "150569",
    "end": "159690"
  },
  {
    "text": "is we start to get those really nice really nasty gnarly error messages from sequel server about like cannot connect",
    "start": "159690",
    "end": "167040"
  },
  {
    "text": "to distributed transaction coordinator and so you'd start to Google things and you get like a bunch of Stack Overflow",
    "start": "167040",
    "end": "172110"
  },
  {
    "text": "questions and answers of what is this crazy cryptic error message it basically",
    "start": "172110",
    "end": "177120"
  },
  {
    "text": "says you need to enable this thing known as a distributed transaction to be able to have a transaction going against to",
    "start": "177120",
    "end": "183360"
  },
  {
    "text": "sequel databases so that was my first very rude awakening that I can't just assume that everything",
    "start": "183360",
    "end": "189300"
  },
  {
    "text": "is going to work between all these different resources so what is a distributed transaction it's just a",
    "start": "189300",
    "end": "194730"
  },
  {
    "start": "191000",
    "end": "400000"
  },
  {
    "text": "database transaction in which two or more network hosts are involved and the",
    "start": "194730",
    "end": "199980"
  },
  {
    "text": "most common protocol for this is known as the two-phase commit more known colloquially colloquially as to PC so",
    "start": "199980",
    "end": "208380"
  },
  {
    "text": "the to PC looks something like this first of all you have to have some kind of coordinator to be able to coordinate",
    "start": "208380",
    "end": "214350"
  },
  {
    "text": "the transactions and get these two different resources and these resources most the time are databases but they",
    "start": "214350",
    "end": "219390"
  },
  {
    "text": "could be other things that support transactions can be things like message brokers message queues file systems I",
    "start": "219390",
    "end": "225540"
  },
  {
    "text": "guess web services if you really want to go that route just two different resources that support transactions so",
    "start": "225540",
    "end": "231239"
  },
  {
    "text": "you have this other external coordinator that has to coordinate this double transaction between these two different",
    "start": "231239",
    "end": "236519"
  },
  {
    "text": "resources so the two-face comes in first with a preparer face that says resource",
    "start": "236519",
    "end": "242610"
  },
  {
    "text": "a are you good to go waits for acknowledgement back and it says resource B are you good to go waits for that acknowledgment back and",
    "start": "242610",
    "end": "249000"
  },
  {
    "text": "once it's receive acknowledgments from all the resources saying the transaction looks good then the second phase of the",
    "start": "249000",
    "end": "255120"
  },
  {
    "text": "protocol kicks in and says okay everyone's now good to commit this transaction now the problem is that this",
    "start": "255120",
    "end": "262130"
  },
  {
    "text": "this protocol is not bulletproof so if something goes wrong in like the second",
    "start": "262130",
    "end": "267990"
  },
  {
    "text": "phase of this commit protocol that it can still be in this bad inner minion or",
    "start": "267990",
    "end": "273210"
  },
  {
    "text": "intermittent state and that the resource a has still committed his transaction but resource B has not and now I have no really no way",
    "start": "273210",
    "end": "280170"
  },
  {
    "text": "to really go back and say I'm sorry resource say something went wrong can you please undo that thing that you just did because other people could be using",
    "start": "280170",
    "end": "287280"
  },
  {
    "text": "resource a and doing other other actions on top of it so even if we start to",
    "start": "287280",
    "end": "295370"
  },
  {
    "text": "enable all these different infrastructure components is not a bulletproof protocol and there are more",
    "start": "295370",
    "end": "300960"
  },
  {
    "text": "bulletproof protocols there's like a three phase commit in phase commit basically just try to add more and more",
    "start": "300960",
    "end": "306810"
  },
  {
    "text": "Network calls to say okay everybody seriously tell me if you're good like please tell me everything's good and then then never hopefully everything",
    "start": "306810",
    "end": "313470"
  },
  {
    "text": "goes okay but this adds a lot of overhead you see all those arrows those are additional Network calls that have to happen in order to support this kind",
    "start": "313470",
    "end": "319920"
  },
  {
    "text": "of behavior additionally not every single kind of resource supports this kind of activity if I'm using sequel",
    "start": "319920",
    "end": "326520"
  },
  {
    "text": "server then yes I can use this distributed transaction coordinator unless one of the sequel servers is",
    "start": "326520",
    "end": "334050"
  },
  {
    "text": "using that always-on feature they always on being a redundant instance of sequel",
    "start": "334050",
    "end": "339390"
  },
  {
    "text": "server so that if one of them goes down the other one can just pick up and keep going well this doesn't support the distributed transaction coordinator",
    "start": "339390",
    "end": "344850"
  },
  {
    "text": "because it's a lot more complicated to do or of your nature as writer even though I might have two sequel databases",
    "start": "344850",
    "end": "351330"
  },
  {
    "text": "does not support distributed transactions if I just take my sequel server instances and move them to the",
    "start": "351330",
    "end": "356340"
  },
  {
    "text": "cloud some message brokers do supports transactions so I can transactionally",
    "start": "356340",
    "end": "363870"
  },
  {
    "text": "right to a database and read or write from a queue if it the queue is amid some queue but if I'm using rabbitmq",
    "start": "363870",
    "end": "370950"
  },
  {
    "text": "then I can't do this or really any other message broker out there so as your service bus rabbitmq any of the more",
    "start": "370950",
    "end": "376560"
  },
  {
    "text": "modern ones explicitly don't support this kind of protocol and what we ran into on our system was a no sequel",
    "start": "376560",
    "end": "383910"
  },
  {
    "text": "database initially it was MongoDB and we moved it to cosmos DB and this one does",
    "start": "383910",
    "end": "389640"
  },
  {
    "text": "not support any kind of two-phase commit at all so if I have multiple writes to the same no sequel database then I can't",
    "start": "389640",
    "end": "395520"
  },
  {
    "text": "wrap all those write operations in a transaction just in a single instance so",
    "start": "395520",
    "end": "400530"
  },
  {
    "start": "400000",
    "end": "462000"
  },
  {
    "text": "just to sum things up for two-phase commit I can do transactions and a single resource",
    "start": "400530",
    "end": "405660"
  },
  {
    "text": "because that's what databases are good at transactions across identical resources",
    "start": "405660",
    "end": "410709"
  },
  {
    "text": "no we can't do that transactions across disparate resources so talking to a",
    "start": "410709",
    "end": "416049"
  },
  {
    "text": "database and talking to a broker we can't do that either and then transactions across multiple items inside a single database there's",
    "start": "416049",
    "end": "422589"
  },
  {
    "text": "basically the yes sequel world and the no sequel world so yes sequel yes you can do it and then the no sequel world",
    "start": "422589",
    "end": "427899"
  },
  {
    "text": "you can't despite what some of their documentation says so where I ran into",
    "start": "427899",
    "end": "435189"
  },
  {
    "text": "this recently was a client that was moving from everything being inside a single database to this new world of",
    "start": "435189",
    "end": "440439"
  },
  {
    "text": "micro services and no sequel databases so they were moving to a situation where they are using cosmos DB a document",
    "start": "440439",
    "end": "447579"
  },
  {
    "text": "database has all their new data stores and then using a message broker initially RabbitMQ as the piece that",
    "start": "447579",
    "end": "453729"
  },
  {
    "text": "would communicate between all their different services none of this supported any of transactions but that's",
    "start": "453729",
    "end": "459549"
  },
  {
    "text": "in stopped them from assuming so so in this example I'll show it's a basically",
    "start": "459549",
    "end": "465939"
  },
  {
    "start": "462000",
    "end": "603000"
  },
  {
    "text": "order fulfillment for for an e-commerce website will be consuming messages from RabbitMQ will have multiple rights",
    "start": "465939",
    "end": "473289"
  },
  {
    "text": "against cosmos DB will be producing messages via RabbitMQ and then all this",
    "start": "473289",
    "end": "478419"
  },
  {
    "text": "inside a single assumed transactional activity so looks something like this we",
    "start": "478419",
    "end": "484179"
  },
  {
    "text": "would we would retrieve the order request out of the database approve the order requests and say update inside the",
    "start": "484179",
    "end": "491559"
  },
  {
    "text": "database now that's one transaction right there update item is a single atomic operation and at this point down I'm now in outs",
    "start": "491559",
    "end": "499539"
  },
  {
    "text": "I'm now outside of that transaction the first operation has committed successfully so the next thing I do is I",
    "start": "499539",
    "end": "505599"
  },
  {
    "text": "loop through the order request and find all the line items in it and then deduct stock from my stock items for each",
    "start": "505599",
    "end": "511749"
  },
  {
    "text": "individual line item now at this point this is where I started to get a little cross-eyed because if something fails in",
    "start": "511749",
    "end": "518948"
  },
  {
    "text": "this operation then my my order request was still approved so I'm in this weird",
    "start": "518949",
    "end": "525100"
  },
  {
    "text": "middle state even if let's say a couple of the stock items succeed but then one of them fails then I'm on this awesome",
    "start": "525100",
    "end": "531490"
  },
  {
    "text": "this weird middle state of my order request being approved some of the stock items being deducted but one of them did",
    "start": "531490",
    "end": "537370"
  },
  {
    "text": "not and then finally we're trying to communicate to the outside world in this case the RabbitMQ to notify the user that yes",
    "start": "537370",
    "end": "545140"
  },
  {
    "text": "my order was successful and your daily ship shortly so this code is what I saw",
    "start": "545140",
    "end": "550810"
  },
  {
    "text": "coming in and all of this you know if I was in the sequel MSM cool and then I",
    "start": "550810",
    "end": "557110"
  },
  {
    "text": "could just wrap this inside a distributed transaction and it would all succeed or all fail but basically",
    "start": "557110",
    "end": "562300"
  },
  {
    "text": "anything past that I no longer in a transaction but it's very easy to write code that assumes that I am well I saw",
    "start": "562300",
    "end": "569770"
  },
  {
    "text": "this and said okay right we can't do trend a distributed transaction so what should we do next and I found a paper by",
    "start": "569770",
    "end": "575650"
  },
  {
    "text": "a guy named Pat Holland who is actually one of the original developers and designers of the Microsoft distributed",
    "start": "575650",
    "end": "581590"
  },
  {
    "text": "transaction coordinator and once he left Microsoft to go to I think Amazon initially or maybe Salesforce realize",
    "start": "581590",
    "end": "588400"
  },
  {
    "text": "that you can't do this you can't like he can't port the wait entire wall during a transaction it just doesn't scale so it",
    "start": "588400",
    "end": "594400"
  },
  {
    "text": "wrote a paper about life beyond distributed transactions and apostates opinion and that's why the title of this",
    "start": "594400",
    "end": "600460"
  },
  {
    "text": "talk is at apostates implementation and his epiphany inside of that was to assume that I have a transactional",
    "start": "600460",
    "end": "606910"
  },
  {
    "start": "603000",
    "end": "652000"
  },
  {
    "text": "boundary around a single item record resource he has different names for but the basic idea is that I can only assume",
    "start": "606910",
    "end": "612850"
  },
  {
    "text": "a transaction across one than one single item now if I want to coordinate activities between multiple resources or",
    "start": "612850",
    "end": "620170"
  },
  {
    "text": "multiple items then a needing some way to communicate intent between one resource and the next so he has this",
    "start": "620170",
    "end": "625810"
  },
  {
    "text": "idea of messages inside of each of those transactional boundaries to be able to communicate intents for an one resource",
    "start": "625810",
    "end": "632620"
  },
  {
    "text": "or entity to another each of the different entities would keep track of",
    "start": "632620",
    "end": "637660"
  },
  {
    "text": "different messages to know what activities have been completed what activities still need to be done and",
    "start": "637660",
    "end": "643450"
  },
  {
    "text": "then finally had this like really fancy picture of your messages flowing between different entities and that's all that's",
    "start": "643450",
    "end": "649300"
  },
  {
    "text": "really happy happy fluffily language but the problem that we saw was that this there was no code to any of this only",
    "start": "649300",
    "end": "655750"
  },
  {
    "start": "652000",
    "end": "904000"
  },
  {
    "text": "pictures and when we googled around to see who was actually try to do this no one really had any solid implementations",
    "start": "655750",
    "end": "661570"
  },
  {
    "text": "and the ones we saw were very specific to individual kinds of databases or resources so we needed to take that",
    "start": "661570",
    "end": "667540"
  },
  {
    "text": "picture and try to implement it inside of Cosmos dB so it looks something like this now",
    "start": "667540",
    "end": "674260"
  },
  {
    "text": "cosmos DB is a multi-model database that supports a lot of different kinds of models inside of",
    "start": "674260",
    "end": "679390"
  },
  {
    "text": "it we were using it mainly as a document database that is a drop-in replacement for MongoDB which is really cheap and",
    "start": "679390",
    "end": "686170"
  },
  {
    "text": "you're fair on the free version but as soon as you want to scale it selling becomes really expensive so we went with cosmos DB and cosmos DB has a concept of",
    "start": "686170",
    "end": "693640"
  },
  {
    "text": "documents and the documents for us would contain the business data so when I had two documents that I need to coordinate",
    "start": "693640",
    "end": "700810"
  },
  {
    "text": "some activity they would each have their own business data now the next thing I needed to do was coordinate",
    "start": "700810",
    "end": "706650"
  },
  {
    "text": "communication between each and each of these different documents knowing that my transactional boundary is going to be",
    "start": "706650",
    "end": "712510"
  },
  {
    "text": "just that one document self so we introduced the concept of an outbox in",
    "start": "712510",
    "end": "718240"
  },
  {
    "text": "each of our documents to represent a place to hold messages I would send from one resource to the next so those out",
    "start": "718240",
    "end": "725740"
  },
  {
    "text": "boxes would contain the messages I intended to communicate to the outside world that wasn't enough though because",
    "start": "725740",
    "end": "732040"
  },
  {
    "text": "we needed to be able to understand what messages we've received and processed them so each of our documents also included an inbox to also keep track of",
    "start": "732040",
    "end": "739960"
  },
  {
    "text": "the individual messages so because our transactional boundary was individual",
    "start": "739960",
    "end": "745390"
  },
  {
    "text": "documents that's what we had a stuff.the in boxes and out boxes inside of those documents because that was a",
    "start": "745390",
    "end": "751090"
  },
  {
    "text": "transactional boundary that we were dealing with so whatever our messages",
    "start": "751090",
    "end": "756520"
  },
  {
    "text": "look like well for us it just started out with an interface I am a document message and we included just one",
    "start": "756520",
    "end": "761860"
  },
  {
    "text": "property on there which was the ID the reason why we need to identify individual document messages as we'll see a little bit later is I needed to be",
    "start": "761860",
    "end": "768400"
  },
  {
    "text": "able to distinguish one document message from the other an ID is the easiest way for us to do so the next thing we did",
    "start": "768400",
    "end": "775780"
  },
  {
    "text": "was created a base document class and this included the inbox and the outbox as well as some base properties like ID",
    "start": "775780",
    "end": "782890"
  },
  {
    "text": "and e tag - for concurrency and this document base class was the document base for all the different Cosmos to be",
    "start": "782890",
    "end": "789400"
  },
  {
    "text": "documents that we would save inside of our instance then at the bottom we've had some methods to be able to to be",
    "start": "789400",
    "end": "795820"
  },
  {
    "text": "able to process to send messages to receive messages and then to complete messages so sending a message was fairly",
    "start": "795820",
    "end": "804220"
  },
  {
    "text": "straightforward when I wanted to send a message on a document you would basically hand the",
    "start": "804220",
    "end": "809710"
  },
  {
    "text": "and the document message to the document entity and it would just add the message",
    "start": "809710",
    "end": "814960"
  },
  {
    "text": "to the outbox so it's not like it's not actually sending the message along anywhere at",
    "start": "814960",
    "end": "820030"
  },
  {
    "text": "this point it's really just recording the message on itself so that something else can then take that message and",
    "start": "820030",
    "end": "825730"
  },
  {
    "text": "dispatch it out to the second document so the business code looks something",
    "start": "825730",
    "end": "832330"
  },
  {
    "text": "like this this is the but this is the code whenever I click the button on a shopping cart page and say go ahead and",
    "start": "832330",
    "end": "837640"
  },
  {
    "text": "place the order so there's a normal chunk of assigning all the business data in this case I'm taking the shopping",
    "start": "837640",
    "end": "842830"
  },
  {
    "text": "cart information and stuffing it into an order request and most of the time our systems just stop here like I'm just I'm",
    "start": "842830",
    "end": "849280"
  },
  {
    "text": "taking the information creating an entity setting the business data and then I'm done but I'm not done because I",
    "start": "849280",
    "end": "855430"
  },
  {
    "text": "have to communicate the message to other documents to be able to take the next step in the process of processing the",
    "start": "855430",
    "end": "862000"
  },
  {
    "text": "order so the next step was to send a message in this case order created so",
    "start": "862000",
    "end": "868660"
  },
  {
    "text": "that something else can take that order created message and then be able to do whatever the next step in the process",
    "start": "868660",
    "end": "873910"
  },
  {
    "text": "was so a lot of my methods look like this there was assigning a lot of",
    "start": "873910",
    "end": "879220"
  },
  {
    "text": "business data and then calling send to say I need to send a message out to say I need to continue this process out with",
    "start": "879220",
    "end": "885580"
  },
  {
    "text": "other documents so with this in place we have the ability to create a document",
    "start": "885580",
    "end": "892090"
  },
  {
    "text": "set the business data and then record messages in my outbox that's not enough right we actually need to take those",
    "start": "892090",
    "end": "897580"
  },
  {
    "text": "messages and dispatch them to additional documents then then do whatever the next next step in the business process is so",
    "start": "897580",
    "end": "904690"
  },
  {
    "text": "with this we used a dispatcher a dispatcher is responsible for taking messages out of out boxes and",
    "start": "904690",
    "end": "910950"
  },
  {
    "text": "dispatching them to other documents in boxes to then process that message so",
    "start": "910950",
    "end": "917290"
  },
  {
    "text": "looks something like this let's think of it I've had three documents participating in a quote-unquote business transaction but not an actual",
    "start": "917290",
    "end": "923680"
  },
  {
    "text": "database transaction and so the only way I can communicate between these different documents is through these",
    "start": "923680",
    "end": "928990"
  },
  {
    "text": "inboxes and out boxes on each of the individual documents so it starts off",
    "start": "928990",
    "end": "934570"
  },
  {
    "text": "with the initial operation that's set some business data and it also writes some messages to it outbox and this is",
    "start": "934570",
    "end": "941920"
  },
  {
    "text": "the first train action in this overall request now from here announced we'll be able to we'll",
    "start": "941920",
    "end": "947720"
  },
  {
    "text": "have to be able to recover from anything going wrong so and some other parts later we'll show how to have",
    "start": "947720",
    "end": "953180"
  },
  {
    "text": "recoverability if something goes wrong with this operation so the dispatcher then sees that there",
    "start": "953180",
    "end": "959000"
  },
  {
    "text": "is a document with messages ready to process takes a message out of the outbox of that individual document and",
    "start": "959000",
    "end": "966140"
  },
  {
    "text": "then dispatches it to other documents that are interested in it each",
    "start": "966140",
    "end": "972470"
  },
  {
    "text": "individual document will process the message by mutating whatever it has in",
    "start": "972470",
    "end": "977570"
  },
  {
    "text": "its business data but also recording the messages received in an inbox and that",
    "start": "977570",
    "end": "983210"
  },
  {
    "text": "becomes its own individual transaction the document message dispatcher is",
    "start": "983210",
    "end": "990050"
  },
  {
    "text": "fairly simple it just says a method called dispatch and it's dispatching messages from this individual document",
    "start": "990050",
    "end": "996050"
  },
  {
    "text": "but I have to be able to link messages to other documents and so for that we",
    "start": "996050",
    "end": "1001330"
  },
  {
    "text": "introduced another class to be able to link messages from a document to another",
    "start": "1001330",
    "end": "1007690"
  },
  {
    "text": "document to be able to dispatch to and so for this we had a document message handler and this is the class that would",
    "start": "1007690",
    "end": "1014950"
  },
  {
    "text": "handle messages from an outbox and then know how to dispatch them to the inbox of another document the dispatcher looks",
    "start": "1014950",
    "end": "1025000"
  },
  {
    "text": "something like this we would loop through the outbox of an individual document say if for each message in that",
    "start": "1025000",
    "end": "1032890"
  },
  {
    "text": "outbox of that documents we would find the handler for that document message",
    "start": "1032890",
    "end": "1038400"
  },
  {
    "text": "call handle on that handler completes the message on the original document and",
    "start": "1038400",
    "end": "1044230"
  },
  {
    "text": "it finally updates the original document saying that message is now complete",
    "start": "1044230",
    "end": "1049590"
  },
  {
    "text": "those document message handlers basically had three steps in them they would locate these documents to mutates",
    "start": "1049590",
    "end": "1058360"
  },
  {
    "text": "or did a bet dispatch to then they would pass the message to that document to say",
    "start": "1058360",
    "end": "1063940"
  },
  {
    "text": "go ahead and handle this message and then finally well I have to update again so that's the next step in the process",
    "start": "1063940",
    "end": "1069040"
  },
  {
    "text": "to have that transaction to say now the message that I've dispatched to that ibanez item is now complete",
    "start": "1069040",
    "end": "1076830"
  },
  {
    "text": "so inside that handle method these also look like this these methods would take",
    "start": "1077499",
    "end": "1083659"
  },
  {
    "text": "that incoming message and then call receive with that message as well as all the business logic necessary to be able",
    "start": "1083659",
    "end": "1090049"
  },
  {
    "text": "to process that message so in this case I'm doing some business logic to see if my this is like an order fulfillment if",
    "start": "1090049",
    "end": "1097759"
  },
  {
    "text": "everything looks ok so I'm mutating some of my own business data and then finally if I have other things I need to",
    "start": "1097759",
    "end": "1103549"
  },
  {
    "text": "communicate to other documents then we'll go ahead and send those messages as well so he could have the case where",
    "start": "1103549",
    "end": "1109909"
  },
  {
    "text": "a document starts with a message that initiates another documents messages and then initiates more documents messages",
    "start": "1109909",
    "end": "1116389"
  },
  {
    "text": "so you can have this kind of cascading behavior going on know what happens when",
    "start": "1116389",
    "end": "1123200"
  },
  {
    "start": "1122000",
    "end": "1328000"
  },
  {
    "text": "things go wrong cuz this is what I think about a lot in my systems when I don't have transactions to roll back and have to worry about things going wrong along",
    "start": "1123200",
    "end": "1129559"
  },
  {
    "text": "each step of the way so what happens when I'm trying to dispatch messages to",
    "start": "1129559",
    "end": "1135919"
  },
  {
    "text": "multiple documents and then something goes wrong with one of the subsequent documents what do we do now I need a way",
    "start": "1135919",
    "end": "1142429"
  },
  {
    "text": "to be able to recover from this kind of failure and so what we wound up doing is when we detected an exception with",
    "start": "1142429",
    "end": "1150019"
  },
  {
    "text": "something going wrong with on these documents then we just trap the exception and send an offline message to",
    "start": "1150019",
    "end": "1156049"
  },
  {
    "text": "another queue to say ok do you need to retry this one offline so go ahead and take that and then offline be able to",
    "start": "1156049",
    "end": "1163729"
  },
  {
    "text": "retry this entire operation so what does it look like to retry this entire",
    "start": "1163729",
    "end": "1171019"
  },
  {
    "text": "picture making sure that we don't accidentally do things like deduct stock twice charge the customer twice how can",
    "start": "1171019",
    "end": "1177799"
  },
  {
    "text": "we build our infrastructure so that each of these operations can execute at least",
    "start": "1177799",
    "end": "1182840"
  },
  {
    "text": "once so retry logic would look something like this we would take that message off",
    "start": "1182840",
    "end": "1188899"
  },
  {
    "text": "of the queue that says you need to retry this document and we would start the operation all over again we would take a message out of the op",
    "start": "1188899",
    "end": "1195049"
  },
  {
    "text": "box from the document and dispatch that message to all the different document message handlers from ones that had",
    "start": "1195049",
    "end": "1201649"
  },
  {
    "text": "already processed it they would look at their inbox to say how have I already",
    "start": "1201649",
    "end": "1207320"
  },
  {
    "text": "processed this message if I already processed this message then there's nothing to do for subsequent",
    "start": "1207320",
    "end": "1215180"
  },
  {
    "text": "ones they haven't processed the message yet so they'll go through the entire business logic of receiving the message",
    "start": "1215180",
    "end": "1222020"
  },
  {
    "text": "doing whatever it needs to do with this business data and then finally recording that message on it's inbox so when that",
    "start": "1222020",
    "end": "1228620"
  },
  {
    "text": "finally completes for all the different handlers of that individual document",
    "start": "1228620",
    "end": "1233900"
  },
  {
    "text": "message then finally I can go back to the original document and say go ahead and remove that document from your",
    "start": "1233900",
    "end": "1239990"
  },
  {
    "text": "outbox and that becomes its own individual transaction so each step",
    "start": "1239990",
    "end": "1245450"
  },
  {
    "text": "along the way here we could have some sort of failure and be able to recover gracefully from that and retry the",
    "start": "1245450",
    "end": "1250880"
  },
  {
    "text": "entire operation all over again so that received method we saw earlier",
    "start": "1250880",
    "end": "1257180"
  },
  {
    "text": "inside the handle in a document all this is doing is checking to see if I've",
    "start": "1257180",
    "end": "1262550"
  },
  {
    "text": "already processed the message in Inbox so that's just a matter of looking at does my inbox contain that message my",
    "start": "1262550",
    "end": "1268700"
  },
  {
    "text": "inbox contains a message then I have nothing to do I can just return and I'm finished if I haven't processed that",
    "start": "1268700",
    "end": "1275690"
  },
  {
    "text": "message before then I go ahead and perform whatever business object that you asked me to and the final step of",
    "start": "1275690",
    "end": "1280760"
  },
  {
    "text": "the operation and then is to add that message to the inbox so that if this method happens to call a second time",
    "start": "1280760",
    "end": "1286820"
  },
  {
    "text": "then it just quits and says I've already received this message so this provides us built-in idempotency which is I can",
    "start": "1286820",
    "end": "1294290"
  },
  {
    "text": "execute this handler multiple times and the resulting operation only executes once so this gives us at least once",
    "start": "1294290",
    "end": "1301400"
  },
  {
    "text": "delivery with exactly once processing this last step in the process to",
    "start": "1301400",
    "end": "1307970"
  },
  {
    "text": "complete a document message that says I've dispatched the message to all the different interested handlers completing",
    "start": "1307970",
    "end": "1314270"
  },
  {
    "text": "it is just removing the message from the outbox so ideally once everything is finished processing all of our out boxes",
    "start": "1314270",
    "end": "1320630"
  },
  {
    "text": "are empty we've delivered everything to who we expected to the next piece is",
    "start": "1320630",
    "end": "1329270"
  },
  {
    "start": "1328000",
    "end": "1539000"
  },
  {
    "text": "actually dispatching this is something we had to go to the business to figure out what it makes the most sense for the end user we could have the case where I",
    "start": "1329270",
    "end": "1336800"
  },
  {
    "text": "have one document that generates messages that dispatches to other documents to generate messages and so on",
    "start": "1336800",
    "end": "1341990"
  },
  {
    "text": "and so on so we could have the case where a really complex kind of web of interactions where I kick off the",
    "start": "1341990",
    "end": "1347390"
  },
  {
    "text": "process with one document and it has a cascading effects to other documents so",
    "start": "1347390",
    "end": "1352760"
  },
  {
    "text": "we had to make sure that whenever we're performing an operation then we had to keep track of all these different",
    "start": "1352760",
    "end": "1358250"
  },
  {
    "text": "documents that were in play because I even know who has messages in their outbox and we did that with the unit of",
    "start": "1358250",
    "end": "1364250"
  },
  {
    "text": "work pattern now if you've ever used entity framework and any framework or or in hibernate they even implement this",
    "start": "1364250",
    "end": "1369710"
  },
  {
    "text": "pattern for you so entity framework for example has a unit to work they just encapsulated it inside the DB",
    "start": "1369710",
    "end": "1374780"
  },
  {
    "text": "context so you have to think about it but I am in cosmos DB lands and I don't think the AF core provider for cosmos DB",
    "start": "1374780",
    "end": "1381470"
  },
  {
    "text": "is quite ready yet so there is no unit of work available for me today so I had to invent this so what happened was as I",
    "start": "1381470",
    "end": "1388340"
  },
  {
    "text": "was interacting with documents each document would add itself to the unit of work so that at the end of the process I",
    "start": "1388340",
    "end": "1394760"
  },
  {
    "text": "knew all the different documents that were being dealt with in this single",
    "start": "1394760",
    "end": "1400970"
  },
  {
    "text": "transaction so when something failed as part of cascading all these different",
    "start": "1400970",
    "end": "1406310"
  },
  {
    "text": "documents through then the univer work and say oops something went wrong go ahead and retry this one individual",
    "start": "1406310",
    "end": "1411740"
  },
  {
    "text": "document offline so when I want to restart it it would basically start at the top and cascade all those operations",
    "start": "1411740",
    "end": "1417710"
  },
  {
    "text": "down again until it finally could hopefully succeed that last document at the end ok so let's look an example of",
    "start": "1417710",
    "end": "1425300"
  },
  {
    "text": "this we had to also invent our own document DB repository interface I know",
    "start": "1425300",
    "end": "1431510"
  },
  {
    "text": "Li don't like to use repositories but when dealing with Kosmos TP you only really have an API a client API to work",
    "start": "1431510",
    "end": "1437900"
  },
  {
    "text": "with so we created a repository to help wrap some of those client operations with cosmos DB and so our document DB",
    "start": "1437900",
    "end": "1445130"
  },
  {
    "text": "repository look more or less like what a DB context would I'd have the ability to create a document delete one get one by",
    "start": "1445130",
    "end": "1453290"
  },
  {
    "text": "ID I could find them by some by some where clause and then finally I can also",
    "start": "1453290",
    "end": "1458570"
  },
  {
    "text": "update a document this repository would interact with the unit of work they",
    "start": "1458570",
    "end": "1465200"
  },
  {
    "text": "needed work is where it kept all the documents that were interacted with with on one single logical request so the",
    "start": "1465200",
    "end": "1471410"
  },
  {
    "text": "unit work kind of kept track of individual documents so if I went to the same document multiple times in a request I could go to my unit work",
    "start": "1471410",
    "end": "1477590"
  },
  {
    "text": "can say find this document and if it already exists then use that existing instance so I could find a document",
    "start": "1477590",
    "end": "1483770"
  },
  {
    "text": "register one complete unit of work or reset it in the case of failures so it",
    "start": "1483770",
    "end": "1490909"
  },
  {
    "text": "completes look something like this I would try to find documents in my local",
    "start": "1490909",
    "end": "1496370"
  },
  {
    "text": "cache to see if they had any messages in their outbox and for each of while I",
    "start": "1496370",
    "end": "1501500"
  },
  {
    "text": "still had documents to process with messages in their outbox I would dispatch the outbox messages for",
    "start": "1501500",
    "end": "1508309"
  },
  {
    "text": "their documents and if something went wrong there was an exception that happened then I would go ahead and call",
    "start": "1508309",
    "end": "1513440"
  },
  {
    "text": "an offline dispatcher which is basically just dropping a message in a queue so",
    "start": "1513440",
    "end": "1519080"
  },
  {
    "text": "those look good for us and that we could have complex cascading behaviors with messages being generated and sent out",
    "start": "1519080",
    "end": "1525289"
  },
  {
    "text": "two additional out boxes and continue to try to complete all the operations within the one request with this",
    "start": "1525289",
    "end": "1530960"
  },
  {
    "text": "dispatcher the inbox I'm sorry the dispatcher the unit of work and the repositories but it still wasn't good",
    "start": "1530960",
    "end": "1537860"
  },
  {
    "text": "enough because we could still have something go really really wrong so let's look at the case where I've got",
    "start": "1537860",
    "end": "1544429"
  },
  {
    "start": "1539000",
    "end": "1880000"
  },
  {
    "text": "all these different cascading documents and then something goes wrong not with",
    "start": "1544429",
    "end": "1549679"
  },
  {
    "text": "the document itself but something crashes inside of the unit at work and I don't actually get to dispatch the retry",
    "start": "1549679",
    "end": "1555320"
  },
  {
    "text": "for that one individual document so we want to make sure we can handle the scenario where my unit of work fails",
    "start": "1555320",
    "end": "1561350"
  },
  {
    "text": "like someone plugged pull the plug or tripped over the cord something like that and then something went catastrophic ly wrong we never wanted",
    "start": "1561350",
    "end": "1567980"
  },
  {
    "text": "the case where we had met where we had documents with messages in their outbox sitting waiting to get processed and",
    "start": "1567980",
    "end": "1573710"
  },
  {
    "text": "they're just sitting and waiting forever so we need to have some kind of failsafe",
    "start": "1573710",
    "end": "1578980"
  },
  {
    "text": "process they could look at messages or documents that have messages in their outbox and have some kind of offline",
    "start": "1578980",
    "end": "1585710"
  },
  {
    "text": "processor for them now this will really depend on the database that you're using we were using cosmos DB which has an",
    "start": "1585710",
    "end": "1592909"
  },
  {
    "text": "ability to execute code any time something changes with any document so",
    "start": "1592909",
    "end": "1598909"
  },
  {
    "text": "it's kind of like a database trigger but it's it's then calling c-sharp code that you control so this trigger is listening",
    "start": "1598909",
    "end": "1606950"
  },
  {
    "text": "for document changes and it will get called whenever this document changes occur you",
    "start": "1606950",
    "end": "1614460"
  },
  {
    "text": "can also give this database trigger a a delay so we gave it basically our sixty",
    "start": "1614460",
    "end": "1621059"
  },
  {
    "text": "second delay that says you know don't don't try to process changes immediately wait like 60 seconds give this process a",
    "start": "1621059",
    "end": "1628019"
  },
  {
    "text": "chance to complete before I try to see if there's anything else offline and I want to process you could also do this",
    "start": "1628019",
    "end": "1635249"
  },
  {
    "text": "something like a nightly batch job it just says you know just just look at all the documents that anything has anything",
    "start": "1635249",
    "end": "1640470"
  },
  {
    "text": "in the outbox we found this to be a lot more efficient and reactive so that if something went wrong we could immediately take that message and say",
    "start": "1640470",
    "end": "1647190"
  },
  {
    "text": "OOP there's a fail to document go ahead and add that document to the retry key Oh so the document changed feed observer",
    "start": "1647190",
    "end": "1657090"
  },
  {
    "text": "looks something like this you get a list of documents that have changed and so I just loop over all the documents that",
    "start": "1657090",
    "end": "1663149"
  },
  {
    "text": "have changed in that 60-second delay and just says if there are still messages in",
    "start": "1663149",
    "end": "1668609"
  },
  {
    "text": "the outbox for the documents then go ahead and queue another message to my offline processor then we'll go ahead",
    "start": "1668609",
    "end": "1674669"
  },
  {
    "text": "and reduce patch the messages from those documents from the out boxes to the inboxes this is about the point the",
    "start": "1674669",
    "end": "1682049"
  },
  {
    "text": "process where our client was really regretting that going sequel has a lot",
    "start": "1682049",
    "end": "1688590"
  },
  {
    "text": "of work to do this but it's true it does take a lot of work to be able to introduce reliable communication between",
    "start": "1688590",
    "end": "1693840"
  },
  {
    "text": "different resources I don't have those transactions anymore so we started building on top of this",
    "start": "1693840",
    "end": "1700980"
  },
  {
    "text": "more complex coordination so in the initial example if I was just having databases for fulfilling an order",
    "start": "1700980",
    "end": "1708059"
  },
  {
    "text": "request I could transactionally look at the stock information in the stock database the order information and say",
    "start": "1708059",
    "end": "1714450"
  },
  {
    "text": "right let's just wrap this whole thing in a transaction and say either whole order succeeds or the whole old or fails",
    "start": "1714450",
    "end": "1720809"
  },
  {
    "text": "based on my ability to fulfill their stock but I can't do that anymore because I don't have a transaction across an entire operation so we had to",
    "start": "1720809",
    "end": "1728220"
  },
  {
    "text": "introduce the concept of sagas to be able to coordinate the transaction between recording the business process",
    "start": "1728220",
    "end": "1734580"
  },
  {
    "text": "between all these different resources because I can no longer trans actually",
    "start": "1734580",
    "end": "1739590"
  },
  {
    "text": "complete an order and deduct stock inside a single transaction I have to split those into two",
    "start": "1739590",
    "end": "1744900"
  },
  {
    "text": "and we need to use some kind of coordinated activity in this case using saga is to be able to have that",
    "start": "1744900",
    "end": "1750540"
  },
  {
    "text": "coordinated business process so our",
    "start": "1750540",
    "end": "1756020"
  },
  {
    "text": "overall business logic said an order can be fulfilled when the order request has",
    "start": "1756020",
    "end": "1762690"
  },
  {
    "text": "been approved by a human saying everything looks good here and when all the stock is confirmed but we can't do",
    "start": "1762690",
    "end": "1770309"
  },
  {
    "text": "this inside a single transaction so we have to use these documents and the messages to coordinate this overall activity so we introduced this middle",
    "start": "1770309",
    "end": "1778710"
  },
  {
    "text": "piece which was this saga that coordinated these two at resources be able to handle all the business logic of",
    "start": "1778710",
    "end": "1784559"
  },
  {
    "text": "can in order succeed or fail so this order fulfillment saga started off by",
    "start": "1784559",
    "end": "1790590"
  },
  {
    "text": "the order request saying okay someone's go ahead and someone's clicked a button and so I need to notify the order for",
    "start": "1790590",
    "end": "1796950"
  },
  {
    "text": "Finland saga that orders been created the order fulfillment saga received this message looks at the order information",
    "start": "1796950",
    "end": "1804270"
  },
  {
    "text": "it says right based on this order I need to have stock requests for all the different stock items so it create",
    "start": "1804270",
    "end": "1811140"
  },
  {
    "text": "additional stock stock request messages for all the different line items and",
    "start": "1811140",
    "end": "1816840"
  },
  {
    "text": "amounts for all the different stock items and those that all individually get delivered to different stock",
    "start": "1816840",
    "end": "1822240"
  },
  {
    "text": "documents each different stock document will look at that message and say do I have enough stock to be able to fulfill",
    "start": "1822240",
    "end": "1828720"
  },
  {
    "text": "this request yes yes yes those that get delivered back to our original order",
    "start": "1828720",
    "end": "1835050"
  },
  {
    "text": "fulfillment documents that's keeping track of all the different stock requests and whether they're all",
    "start": "1835050",
    "end": "1840300"
  },
  {
    "text": "confirmed or denied and then once it's received all the confirmations for all the stock items finally I can send that",
    "start": "1840300",
    "end": "1846030"
  },
  {
    "text": "message back to the order request to say it's been good oh we had one last thing though someone has to approve the order",
    "start": "1846030",
    "end": "1852480"
  },
  {
    "text": "so the order request would get notified our would receive the order approve",
    "start": "1852480",
    "end": "1858920"
  },
  {
    "text": "request from the end-user and if the order is approved it would send an event to order fulfillment and once order",
    "start": "1858920",
    "end": "1865530"
  },
  {
    "text": "fulfillment has received the message that the orders been approved and all the stock items have been confirmed then",
    "start": "1865530",
    "end": "1872460"
  },
  {
    "text": "the order fulfillment is successful and it can notify the order request that everything's good and then finally my order is",
    "start": "1872460",
    "end": "1878310"
  },
  {
    "text": "complete so let's look at a demo of this all in action",
    "start": "1878310",
    "end": "1885320"
  },
  {
    "start": "1880000",
    "end": "2304000"
  },
  {
    "text": "okay so I've got a web app that has cosmos TV going and the web app is able",
    "start": "1892909",
    "end": "1899340"
  },
  {
    "text": "to add items to a carts I can hit place order and then finally has a page to say",
    "start": "1899340",
    "end": "1905070"
  },
  {
    "text": "do I want to approve or reject that order and what I've done is set breakpoints and all the different",
    "start": "1905070",
    "end": "1910860"
  },
  {
    "text": "handlers inside all the documents so we can see what it looks like to have these methods and messages going back and",
    "start": "1910860",
    "end": "1916799"
  },
  {
    "text": "forth but it all starts off at the end-user going to a website to order some information so in this case I just",
    "start": "1916799",
    "end": "1923519"
  },
  {
    "text": "downloaded the adventure works database that's like got a lot of product catalog junk in it and made a awful-looking",
    "start": "1923519",
    "end": "1929340"
  },
  {
    "text": "websites to be able to place orders for stuff I could have sprinkled some",
    "start": "1929340",
    "end": "1934740"
  },
  {
    "text": "bootstrap on this I think that would've been good alright so I'm going to in this case I'm ordering mountain bike so",
    "start": "1934740",
    "end": "1939899"
  },
  {
    "text": "I'm gonna add a mountain bike to my cart I can go view my carts and then finally",
    "start": "1939899",
    "end": "1946350"
  },
  {
    "text": "I can check out now when I click checkout this is gonna initiate the order request order fulfillment process",
    "start": "1946350",
    "end": "1952259"
  },
  {
    "text": "so once I click this we're gonna start to see a lot of breakpoints getting hit so I hit check out checkout starts by",
    "start": "1952259",
    "end": "1959190"
  },
  {
    "text": "creating an order request so I'm passing in a shopping carts and part of that",
    "start": "1959190",
    "end": "1964740"
  },
  {
    "text": "will be to take the shopping cart and fill all the information on my order request the next part though is to send",
    "start": "1964740",
    "end": "1971190"
  },
  {
    "text": "an order created method a message out the door ok so at this point I've sent",
    "start": "1971190",
    "end": "1979710"
  },
  {
    "text": "the owner I've sent the order created message and what's receiving it is an",
    "start": "1979710",
    "end": "1984749"
  },
  {
    "text": "order fulfillment the order fulfillment document handles that order created",
    "start": "1984749",
    "end": "1990419"
  },
  {
    "text": "message and says ok now that the order has been created I'm going to record all the line item information that is all",
    "start": "1990419",
    "end": "1998129"
  },
  {
    "text": "the different line items I need to keep track of what product ID it is and how many they ordered and then for each item",
    "start": "1998129",
    "end": "2004100"
  },
  {
    "text": "in my line items I'm going to send a stock request so that the stock items can then check to see if they have",
    "start": "2004100",
    "end": "2010399"
  },
  {
    "text": "enough stock to fulfill this order just want to hit f5 again now I'm on the",
    "start": "2010399",
    "end": "2017360"
  },
  {
    "text": "stock document the stock document has received the message for a request for stock I can see that it's amount request",
    "start": "2017360",
    "end": "2024679"
  },
  {
    "text": "is 1 for product I D 772 and this point is going to check to see if it has enough stock to fulfill",
    "start": "2024679",
    "end": "2030530"
  },
  {
    "text": "the request so looks like the amount the quantity available says 96 so I got a",
    "start": "2030530",
    "end": "2035780"
  },
  {
    "text": "bunch of these bikes the amount requested is just one so if I have enough stock then I'll go ahead and",
    "start": "2035780",
    "end": "2041210"
  },
  {
    "text": "deduct the stock available from the amount requested and send a message back saying yep stock request confirmed so at",
    "start": "2041210",
    "end": "2051980"
  },
  {
    "text": "this point the order fulfillment saga has received the stock request",
    "start": "2051980",
    "end": "2057889"
  },
  {
    "text": "confirmation message and it's going to record that the stock has been confirmed on that line item now let's receive this",
    "start": "2057890",
    "end": "2065899"
  },
  {
    "text": "message it needs to check to see if my order fulfillment is finished and we'll",
    "start": "2065900",
    "end": "2073700"
  },
  {
    "text": "come back to that so at this point I can go back to the user interface and I see",
    "start": "2073700",
    "end": "2079610"
  },
  {
    "text": "that my order is has a status of new and I can either accept or reject this order",
    "start": "2079610",
    "end": "2086270"
  },
  {
    "text": "or approve or reject so approving would",
    "start": "2086270",
    "end": "2091399"
  },
  {
    "text": "kick off the approval process which is a notification to my fulfillment that the orders been approved so once I click",
    "start": "2091400",
    "end": "2097820"
  },
  {
    "text": "approve here it's going to set my status of my order request as approved and then",
    "start": "2097820",
    "end": "2104420"
  },
  {
    "text": "send an order approved message to my order fulfillment to be able to check",
    "start": "2104420",
    "end": "2110450"
  },
  {
    "text": "stock information and go on so now I'm",
    "start": "2110450",
    "end": "2115490"
  },
  {
    "text": "back an order fulfillment order fulfillment says I'm handling the order approve message I will set a flag saying",
    "start": "2115490",
    "end": "2122630"
  },
  {
    "text": "orders approved as true and then finally I need to check to see if I'm successful in the check for success method it will",
    "start": "2122630",
    "end": "2130490"
  },
  {
    "text": "look to see have all of my line-item stock been confirmed and has the order",
    "start": "2130490",
    "end": "2138890"
  },
  {
    "text": "been approved and if both of those two things are true then they can send a message back that says order fulfillment",
    "start": "2138890",
    "end": "2145580"
  },
  {
    "text": "is successful so this is the",
    "start": "2145580",
    "end": "2151250"
  },
  {
    "text": "encapsulation of my business logic for I can only have I can only fulfill an order if all of my line items have",
    "start": "2151250",
    "end": "2158330"
  },
  {
    "text": "enough stock and the orders been approved my order",
    "start": "2158330",
    "end": "2165440"
  },
  {
    "text": "request receives the order fulfillment successful message and then finally sets the status of the order to completed so",
    "start": "2165440",
    "end": "2174380"
  },
  {
    "text": "when I go back to the website we can see the order status is updated now it says completed let's look at",
    "start": "2174380",
    "end": "2183470"
  },
  {
    "text": "cosmos DB to see what these documents look like inside of there so this is order ID Bab some some",
    "start": "2183470",
    "end": "2189859"
  },
  {
    "text": "something-something and if you go to our eyes or ashore cosmos DB emulator as I'm",
    "start": "2189859",
    "end": "2197210"
  },
  {
    "text": "not crazy enough to try to connect directly to Azure at a conference let's",
    "start": "2197210",
    "end": "2202490"
  },
  {
    "text": "look at our documents so these are the order requests and I had one that was",
    "start": "2202490",
    "end": "2208640"
  },
  {
    "text": "Bab something something something so that's this one down here and then over",
    "start": "2208640",
    "end": "2214160"
  },
  {
    "text": "on the right we have the business data of here are items that we ordered here is now the status that says the status",
    "start": "2214160",
    "end": "2220700"
  },
  {
    "text": "is completed here's the customer information the total information and then finally down at the bottom you can",
    "start": "2220700",
    "end": "2225950"
  },
  {
    "text": "see here's our inbox our inbox includes an array of those messages and this",
    "start": "2225950",
    "end": "2232760"
  },
  {
    "text": "array messages includes the order fulfillment successful message for that",
    "start": "2232760",
    "end": "2237830"
  },
  {
    "text": "older fulfillment I can also look at my order fulfillment document to see all",
    "start": "2237830",
    "end": "2244250"
  },
  {
    "text": "the different messages in it saw box it's got a cheat and pick the one at the very bottom because I think that should be the one so in this one we can see",
    "start": "2244250",
    "end": "2252890"
  },
  {
    "text": "multiple messages in its inbox will see the order created message when the order",
    "start": "2252890",
    "end": "2258470"
  },
  {
    "text": "was initially created we'll see the stock request confirmation message they've received from the stock items and then finally it or see the order",
    "start": "2258470",
    "end": "2265369"
  },
  {
    "text": "approved message from the original order request when the user click that button",
    "start": "2265369",
    "end": "2270910"
  },
  {
    "text": "so be keeping track of all the messages it's received that's how we can make",
    "start": "2271750",
    "end": "2277130"
  },
  {
    "text": "sure that none of these messages accidentally get processed twice so I don't I cannot accidentally deduct",
    "start": "2277130",
    "end": "2282980"
  },
  {
    "text": "multiple stock for the same order request it'll only effectively happen once all",
    "start": "2282980",
    "end": "2290390"
  },
  {
    "text": "right let's look at some failure scenarios",
    "start": "2290390",
    "end": "2297230"
  },
  {
    "start": "2304000",
    "end": "2403000"
  },
  {
    "text": "our next business logic says an order can be cancelled when a stock request is",
    "start": "2304680",
    "end": "2310060"
  },
  {
    "text": "denied or the request is rejected so we now have to deal this this kind of human",
    "start": "2310060",
    "end": "2316660"
  },
  {
    "text": "element that's there could be kind of a background process that said the stock request was denied or a user could click",
    "start": "2316660",
    "end": "2322690"
  },
  {
    "text": "the button to say go ahead and reject that order so let's look at the first example of stock request being denied so",
    "start": "2322690",
    "end": "2330760"
  },
  {
    "text": "I have this case where I'm sending multiple requests down to the stock items to the stock database and for each",
    "start": "2330760",
    "end": "2336550"
  },
  {
    "text": "of the different stock requests it's confirming and deducting the de individual stock remember though each of",
    "start": "2336550",
    "end": "2342490"
  },
  {
    "text": "these different stock requests are individual documents with individual transactions so I can't trans actually",
    "start": "2342490",
    "end": "2347710"
  },
  {
    "text": "do the entire set of stock requests all at once so when one of them gets denied",
    "start": "2347710",
    "end": "2353170"
  },
  {
    "text": "for not enough stock that my order fulfillment saga is the thing that needs to restore things back to the way it",
    "start": "2353170",
    "end": "2359020"
  },
  {
    "text": "used to be so in this case if I have some things confirmed and some things denied I need to have compensating",
    "start": "2359020",
    "end": "2366100"
  },
  {
    "text": "actions to be able to restore things back where they used to be now if I was inside a single database with a single",
    "start": "2366100",
    "end": "2371710"
  },
  {
    "text": "transaction the transaction will handle the rollback of restoring stock I don't have that though I don't have a",
    "start": "2371710",
    "end": "2377140"
  },
  {
    "text": "transaction across all this so I needed to have compensating actions to effectively undo the original operations",
    "start": "2377140",
    "end": "2383370"
  },
  {
    "text": "so I will have stock return requested messages being sent back to the stock",
    "start": "2383370",
    "end": "2389140"
  },
  {
    "text": "item I also notify the order request saying you need to cancel this order because I don't have enough stock so if",
    "start": "2389140",
    "end": "2396520"
  },
  {
    "text": "you would request is complete but not in the way the end user probably wanted it to be so let's look at a demo of a stock",
    "start": "2396520",
    "end": "2406120"
  },
  {
    "start": "2403000",
    "end": "2633000"
  },
  {
    "text": "rejection in action",
    "start": "2406120",
    "end": "2409260"
  },
  {
    "text": "now I've cheated ahead of time I've made one of the individual stock items not",
    "start": "2416150",
    "end": "2422600"
  },
  {
    "text": "have enough stock so I just will know which one to pick so I'm gonna do the",
    "start": "2422600",
    "end": "2428450"
  },
  {
    "text": "same thing where I have mountain bikes but I've I've changed this first mountain bike to only have one",
    "start": "2428450",
    "end": "2433550"
  },
  {
    "text": "individual stock item so there's only one mountain bike and stocks will do is will add two to our carts and then add",
    "start": "2433550",
    "end": "2440450"
  },
  {
    "text": "another one to show what happens with partial success and failure and then now when we check out yep I've got two the",
    "start": "2440450",
    "end": "2445670"
  },
  {
    "text": "ones that I don't have enough stock items for and then one that I do so once I hit checkout kicks out the order",
    "start": "2445670",
    "end": "2452750"
  },
  {
    "text": "requests please go from there we start the order fulfillment process so this is",
    "start": "2452750",
    "end": "2457910"
  },
  {
    "text": "gonna send multiple stock requests now its individual stock items so the first stock request is for the one I think",
    "start": "2457910",
    "end": "2464240"
  },
  {
    "text": "that doesn't have enough amount requested to and the quantity available is zero so I don't have enough stock",
    "start": "2464240",
    "end": "2471880"
  },
  {
    "text": "this is the one for the next item that says this is the one for the one item",
    "start": "2471880",
    "end": "2477620"
  },
  {
    "text": "but the quantity available is ninety five so I've got plenty of stock available for this one each of those",
    "start": "2477620",
    "end": "2482930"
  },
  {
    "text": "sins a stock request confirmation or denied this one's going to confirm it then one will deny it and now I've got",
    "start": "2482930",
    "end": "2490010"
  },
  {
    "text": "the handling on the order fulfillment that's handling the stock request denied message so it has say oops I don't have",
    "start": "2490010",
    "end": "2496310"
  },
  {
    "text": "enough stock so I need to go ahead and cancel this order the cancelation will set the flag it was like this orders",
    "start": "2496310",
    "end": "2502370"
  },
  {
    "text": "been cancelled and then process the cancellation process and the cancellation will first notify the end",
    "start": "2502370",
    "end": "2509030"
  },
  {
    "text": "user and the order request to say go ahead and notify that the the orders",
    "start": "2509030",
    "end": "2515240"
  },
  {
    "text": "been cancelled and then for each of the line items where my stock has been confirmed then go ahead and return that",
    "start": "2515240",
    "end": "2521150"
  },
  {
    "text": "stock so in this case I'm getting the",
    "start": "2521150",
    "end": "2527240"
  },
  {
    "text": "order the canceled order request message for order request so all it's going to do is say set the status to cancelled",
    "start": "2527240",
    "end": "2535420"
  },
  {
    "text": "now we have an issue here I'm now receiving the stock request confirmed",
    "start": "2535510",
    "end": "2540560"
  },
  {
    "text": "message so I'm receiving not messages not quite in the order I had hoped so one of the things in this kind of process we need",
    "start": "2540560",
    "end": "2546620"
  },
  {
    "text": "to be able to handle messages are arriving not and quite the order we had hoped them to arrive so",
    "start": "2546620",
    "end": "2551780"
  },
  {
    "text": "if I can't assume messages arriving in a specific order I basically have to check to see what my status is again to make",
    "start": "2551780",
    "end": "2557720"
  },
  {
    "text": "sure if I need to cancel the order I'm processing the complete cancellation so",
    "start": "2557720",
    "end": "2562810"
  },
  {
    "text": "this will say yes I've confirmed the stock I will check to see if I'm cancelling",
    "start": "2562810",
    "end": "2568790"
  },
  {
    "text": "like oh wait I'm cancelled but have confirmed it so what I need to do now is then go return the stock for that",
    "start": "2568790",
    "end": "2575300"
  },
  {
    "text": "individual line item returning the stock is just setting the flag to say Iver",
    "start": "2575300",
    "end": "2581810"
  },
  {
    "text": "I've requested a return and sending another message back to the stock item to say go ahead and return that stock",
    "start": "2581810",
    "end": "2589150"
  },
  {
    "text": "returning the stock on my stock document isn't just putting them putting the",
    "start": "2589150",
    "end": "2594980"
  },
  {
    "text": "amount back into the pot so this I was trying to buy one of these bikes and it",
    "start": "2594980",
    "end": "2601430"
  },
  {
    "text": "says go ahead and increment the stock now back to where it was based on the stock return so now if I go to the UI",
    "start": "2601430",
    "end": "2611200"
  },
  {
    "text": "and assure my status that's cancelled because I could not complete the entire order okay so the",
    "start": "2611200",
    "end": "2621800"
  },
  {
    "text": "last piece I want to look at is going to be the human pushing the button to",
    "start": "2621800",
    "end": "2628940"
  },
  {
    "text": "reject the order so we said an order can",
    "start": "2628940",
    "end": "2635720"
  },
  {
    "start": "2633000",
    "end": "2673000"
  },
  {
    "text": "be canceled when a stock is denied or the request is rejected so in the case of a rejected request we could have had",
    "start": "2635720",
    "end": "2644000"
  },
  {
    "text": "all the stock been confirmed so in the order fulfillment document we need to receive that order rejected and then",
    "start": "2644000",
    "end": "2649190"
  },
  {
    "text": "process that cancellation so it'll be a matter of looking at all the different stock items in there and saying has this",
    "start": "2649190",
    "end": "2655190"
  },
  {
    "text": "stock been confirmed if the stocks been confirmed go ahead and request a return for that stock we've already seen the",
    "start": "2655190",
    "end": "2663080"
  },
  {
    "text": "stock return requested and that'll just re increment the stock back up and then finally our order is again completes but",
    "start": "2663080",
    "end": "2669410"
  },
  {
    "text": "not the way the end user I'd hoped I guess so let's look at a demo this",
    "start": "2669410",
    "end": "2678280"
  },
  {
    "start": "2673000",
    "end": "2827000"
  },
  {
    "text": "okay so back on my orders I'm gonna pick pick items that I dunno have stock",
    "start": "2687599",
    "end": "2695410"
  },
  {
    "text": "associated with them so that would not be the first one would that be the second one so I had a couple of those go",
    "start": "2695410",
    "end": "2702160"
  },
  {
    "text": "view my cart go ahead and check out we've seen this before it's going to go ahead and handle the ordered order",
    "start": "2702160",
    "end": "2708130"
  },
  {
    "text": "created request stock it's going to deduct the stock confirm the stock and",
    "start": "2708130",
    "end": "2714359"
  },
  {
    "text": "now I have the ability to reject my order so because I have confirmed some",
    "start": "2714359",
    "end": "2724420"
  },
  {
    "text": "of my stock by rejecting it I have to go back and perform those compensating actions just say go ahead and put the",
    "start": "2724420",
    "end": "2729490"
  },
  {
    "text": "stock back on the shelves so when I reject it's going to send a message for",
    "start": "2729490",
    "end": "2736269"
  },
  {
    "text": "order rejected setting the saddest or rejected the order fulfillment saga will",
    "start": "2736269",
    "end": "2744099"
  },
  {
    "text": "receive that message saying oh the orders been rejected go ahead and record that and then from there go ahead and",
    "start": "2744099",
    "end": "2749619"
  },
  {
    "text": "cancel the order Kent's in the order is going to loop",
    "start": "2749619",
    "end": "2757359"
  },
  {
    "text": "through all my stock items to see which ones have been confirmed and then return all the stock items based on the ones",
    "start": "2757359",
    "end": "2763750"
  },
  {
    "text": "that have been confirmed from the stock stock will then go put the return of the",
    "start": "2763750",
    "end": "2772539"
  },
  {
    "text": "amount requested back on the shelves so of course go back here I can see now my",
    "start": "2772539",
    "end": "2779380"
  },
  {
    "text": "status has been changed rejected and all of my all of my stock has been restored",
    "start": "2779380",
    "end": "2786180"
  },
  {
    "text": "so the reason why we had to introduce this middle component this order fulfillment saga is to be able to handle",
    "start": "2786180",
    "end": "2791799"
  },
  {
    "text": "the partial success partial failure scenarios so when it learns of a failure from one direction it can perform the",
    "start": "2791799",
    "end": "2797680"
  },
  {
    "text": "compensating actions in the other direction so that over fulfilling piece is really the thing that is that middle",
    "start": "2797680",
    "end": "2802869"
  },
  {
    "text": "ground between the order request and the stock to be able to handle this more complex business process",
    "start": "2802869",
    "end": "2810299"
  },
  {
    "text": "so",
    "start": "2813520",
    "end": "2816520"
  },
  {
    "start": "2827000",
    "end": "2924000"
  },
  {
    "text": "so in this demonstration I showed all the different documents inside a single running process so you can look at that",
    "start": "2828420",
    "end": "2835170"
  },
  {
    "text": "and say well okay sure we could just say don't use cosmos DB and then instead use",
    "start": "2835170",
    "end": "2841950"
  },
  {
    "text": "a database that actually supports these transactions but I find more and more in the systems that I'm dealing with as we",
    "start": "2841950",
    "end": "2847859"
  },
  {
    "text": "move more towards smaller systems and smaller boundaries I can't guarantee these transactional boundaries across the entire system so I",
    "start": "2847859",
    "end": "2854549"
  },
  {
    "text": "have to introduce this concept of messages between different systems and in some way of handling that partial",
    "start": "2854549",
    "end": "2859950"
  },
  {
    "text": "success and partial fulfillment failure scenario so I see this very often in something like microcircuits where each",
    "start": "2859950",
    "end": "2865589"
  },
  {
    "text": "individual micro service needs to communicate to other micro services about things that have happened and it",
    "start": "2865589",
    "end": "2870809"
  },
  {
    "text": "can do so via this out box pattern so from taking this out box I can take these messages and then dispatch them",
    "start": "2870809",
    "end": "2877500"
  },
  {
    "text": "not now to directly to other individual documents but now through a translator and an actual real world broker to other",
    "start": "2877500",
    "end": "2885150"
  },
  {
    "text": "micro services that can then receive that message process pass them to its",
    "start": "2885150",
    "end": "2890430"
  },
  {
    "text": "own internal dispatcher and then finally use the inbox pattern on its side to actually perform whatever operation it",
    "start": "2890430",
    "end": "2896400"
  },
  {
    "text": "needs to do so while I could just say you know it's just if I'm in a database",
    "start": "2896400",
    "end": "2902759"
  },
  {
    "text": "just use the transactions for the database as I move toward this role well my databases are physically separate I",
    "start": "2902759",
    "end": "2908220"
  },
  {
    "text": "don't want to reintroduce the coupling by introducing a transaction between these overall sequel resources so I can",
    "start": "2908220",
    "end": "2914849"
  },
  {
    "text": "use the concept of an outbox and inbox to facilitate reliable communication and processing between all these different",
    "start": "2914849",
    "end": "2921420"
  },
  {
    "text": "service boundaries so some other situations where we've seen this come up",
    "start": "2921420",
    "end": "2928130"
  },
  {
    "start": "2924000",
    "end": "2971000"
  },
  {
    "text": "something like a sequel server and rabbitmq so even though sequel is a relational database where I can do this",
    "start": "2928130",
    "end": "2934440"
  },
  {
    "text": "more complex operations I can't trans actually write to a database and produce messages at the same time so it could have the scenario",
    "start": "2934440",
    "end": "2941670"
  },
  {
    "text": "where I'm trying to write to the database send a message something goes wrong and my message is just sitting out",
    "start": "2941670",
    "end": "2948240"
  },
  {
    "text": "there or it could have the case where I do send the message the transaction fails rolls back databases in is",
    "start": "2948240",
    "end": "2954900"
  },
  {
    "text": "consistent but I've no defined downstream consumers so by using this inbox out products pattern it allows me",
    "start": "2954900",
    "end": "2961619"
  },
  {
    "text": "to still be a to have reliable communication with these resources that we'll never be able to have any kind of coordinated",
    "start": "2961619",
    "end": "2968490"
  },
  {
    "text": "transaction so how do we do this well it starts off by finding the transactional",
    "start": "2968490",
    "end": "2974700"
  },
  {
    "start": "2971000",
    "end": "3037000"
  },
  {
    "text": "boundaries that epiphany that said we can only reliably have transactions with one resource or entity at a time that's",
    "start": "2974700",
    "end": "2981990"
  },
  {
    "text": "really gonna depend on whatever resource I'm looking at so something like a no sequel database it's transactional",
    "start": "2981990",
    "end": "2989070"
  },
  {
    "text": "boundaries are individual documents so that would mean that I identify inbox and outbox inside each of those",
    "start": "2989070",
    "end": "2994800"
  },
  {
    "text": "individual documents to purl I have this reliable cue mate communication and coordination",
    "start": "2994800",
    "end": "3000220"
  },
  {
    "text": "what about sequel server well sequel is",
    "start": "3000220",
    "end": "3005960"
  },
  {
    "text": "a simple it's yes sequel so it's it's transactional boundary is the entire database or connects that I'm working",
    "start": "3005960",
    "end": "3012440"
  },
  {
    "text": "with so that means I don't want I don't need a stuff in boxes and out boxes inside of each database table row",
    "start": "3012440",
    "end": "3018770"
  },
  {
    "text": "instead I can just have kind of one global outbox for the entire database I'm referring to and that is my place",
    "start": "3018770",
    "end": "3025550"
  },
  {
    "text": "where I'm storing communication temporarily with the outside world yes",
    "start": "3025550",
    "end": "3033920"
  },
  {
    "text": "and we talked about the micro services yes yes yes yes yes so what are our lessons here distributor transactions",
    "start": "3033920",
    "end": "3041810"
  },
  {
    "start": "3037000",
    "end": "3173000"
  },
  {
    "text": "are quote easy when I'm local and everything is on one single box distributed transactions actually work",
    "start": "3041810",
    "end": "3048260"
  },
  {
    "text": "pretty well that's because we don't have to make any sort of network hops distributed transactions are hard slash",
    "start": "3048260",
    "end": "3055010"
  },
  {
    "text": "impossible when I'm distributed which is ironic because they're called distributed transactions but they suck",
    "start": "3055010",
    "end": "3061250"
  },
  {
    "text": "when you're actually distributed so we need to find the transactional boundary whatever resources were working with so",
    "start": "3061250",
    "end": "3069020"
  },
  {
    "text": "databases this would be the database no sequel databases this is typically individual records and something like a",
    "start": "3069020",
    "end": "3075050"
  },
  {
    "text": "message queue or message broker that transactions are really individual messages at a time and finally I use an",
    "start": "3075050",
    "end": "3082730"
  },
  {
    "text": "outbox with each of these kinds of resources to facilitate communication between each of these different",
    "start": "3082730",
    "end": "3088550"
  },
  {
    "text": "resources and we can use patterns like the saga pattern to be able to handle these parcels success in partial failure",
    "start": "3088550",
    "end": "3095570"
  },
  {
    "text": "scenarios our clients lesson at the end was we should have su sequel but you know",
    "start": "3095570",
    "end": "3103010"
  },
  {
    "text": "that's that's kind of the whole II dug ourselves into but for a lot of our clients as they're moving to a more distributed systems and they need to",
    "start": "3103010",
    "end": "3109130"
  },
  {
    "text": "have this kind of reliable coordination between these different resources this kind of pattern is really the only way that's possible to have that reliable",
    "start": "3109130",
    "end": "3115720"
  },
  {
    "text": "communication being facilitated so we don't have to introduce distributed",
    "start": "3115720",
    "end": "3121609"
  },
  {
    "text": "transactions if you find yourself in the case that's you think you may need one of these kind of heavily coordinated",
    "start": "3121609",
    "end": "3127010"
  },
  {
    "text": "transactions it may not be even available for you or impossible so in",
    "start": "3127010",
    "end": "3132230"
  },
  {
    "text": "those cases this pattern can enable you to still have that kind of transactional behavior and then the saga pattern",
    "start": "3132230",
    "end": "3137869"
  },
  {
    "text": "allows you to be able to gracefully rollback as necessary so that was life",
    "start": "3137869",
    "end": "3143990"
  },
  {
    "text": "beyond distributed transactions and apostates implementation as opposed just a paper with pictures this this running",
    "start": "3143990",
    "end": "3151579"
  },
  {
    "text": "codebase you can find on my github com at github at the adventureworks cosmos so this full example you can find there",
    "start": "3151579",
    "end": "3158030"
  },
  {
    "text": "otherwise you can also find this presentation on my presentations repository if you have any questions I'll be hanging out afterwards otherwise",
    "start": "3158030",
    "end": "3163520"
  },
  {
    "text": "I hope you have a great rest of the conference thank you [Applause]",
    "start": "3163520",
    "end": "3174389"
  }
]