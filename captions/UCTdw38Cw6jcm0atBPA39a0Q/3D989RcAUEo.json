[
  {
    "text": "my name's Chris Ryan I am not a 3D Graphics expert I play one on stage",
    "start": "4759",
    "end": "11040"
  },
  {
    "text": "sometimes but this is something I just do for the fun of it it uh all around",
    "start": "11040",
    "end": "18560"
  },
  {
    "text": "engineer see where' my clicker go the previous slide slide bait it this is",
    "start": "18560",
    "end": "24840"
  },
  {
    "text": "what most of my slides look like we're going to cover 2D points 3D",
    "start": "24840",
    "end": "32758"
  },
  {
    "text": "points and vectors describe the difference between a point and a vector",
    "start": "32759",
    "end": "38200"
  },
  {
    "text": "uh polygons little Aster at the bottom first everybody in 3D Graphics uses",
    "start": "38200",
    "end": "44840"
  },
  {
    "text": "their own terms for lots of different overlapping terms I may intermix between some of them I hope that doesn't get too",
    "start": "44840",
    "end": "51879"
  },
  {
    "text": "confusing most of the concepts are actually very simple normally in 3D",
    "start": "51879",
    "end": "56960"
  },
  {
    "text": "Graphics you want the oo and the O's and make it Gary sounding so you pay the graphics people a whole bunch it's",
    "start": "56960",
    "end": "63920"
  },
  {
    "text": "simple simple math this have a bunch of fancy names behind it like some you know",
    "start": "63920",
    "end": "69479"
  },
  {
    "text": "linear algebra but U we're going to handle some Matrix math matrix",
    "start": "69479",
    "end": "76000"
  },
  {
    "text": "transforms and how we change dots pixels uh three-dimensional dots and",
    "start": "76000",
    "end": "83560"
  },
  {
    "text": "rotate them around move them that type of stuff um",
    "start": "83560",
    "end": "90280"
  },
  {
    "text": "uh we're going to learn a little bit about the difference between you transform it from a model to a world to",
    "start": "93000",
    "end": "98520"
  },
  {
    "text": "a view and then the screen and then the The Matrix operations that do all those",
    "start": "98520",
    "end": "105520"
  },
  {
    "text": "we're going to talk about surfaces or textures that's what you paint the surface with they call them textures but",
    "start": "105520",
    "end": "111320"
  },
  {
    "text": "they're flat um I'm going to describe and learn",
    "start": "111320",
    "end": "117039"
  },
  {
    "text": "what rasterization is and how that actually done um we're going to do the when you",
    "start": "117039",
    "end": "124079"
  },
  {
    "text": "take a 3D set of coordinates and you squish it and you flatten it to a 2d and how that gets on the screen there's",
    "start": "124079",
    "end": "131039"
  },
  {
    "text": "something that my little demo app here has which is a a fine perspective",
    "start": "131039",
    "end": "137560"
  },
  {
    "text": "interpolation error also called derivative derivative discont tucy in",
    "start": "137560",
    "end": "144080"
  },
  {
    "text": "interpolation and show you why some of my math doesn't quite Jive up add a",
    "start": "144080",
    "end": "149239"
  },
  {
    "text": "couple ways to get around it I don't know all of the fancy math there are other ways of doing it but it's much",
    "start": "149239",
    "end": "155560"
  },
  {
    "text": "more expensive math operations um going to describe what a",
    "start": "155560",
    "end": "161120"
  },
  {
    "text": "depth buffer is whoops get back there um",
    "start": "161120",
    "end": "166360"
  },
  {
    "text": "a and the actual display buffer and if we have time I'm going to talk about a",
    "start": "166360",
    "end": "171920"
  },
  {
    "text": "couple multi-threaded op optimizations I classically trained in",
    "start": "171920",
    "end": "177480"
  },
  {
    "text": "hardware and software um my primary language is C++ the little",
    "start": "177480",
    "end": "184120"
  },
  {
    "text": "demo app I have is in C++ it's incredibly huge 1,500",
    "start": "184120",
    "end": "192080"
  },
  {
    "text": "lines the executable is 56k not 56 Meg",
    "start": "192080",
    "end": "198959"
  },
  {
    "text": "56k that's the whole thing and that's including a little bit of the app that's actually a Windows SDK that's the",
    "start": "198959",
    "end": "206400"
  },
  {
    "text": "framework for driving this I do not use a third party uh rendering library or coordinate stuff",
    "start": "206400",
    "end": "212680"
  },
  {
    "text": "I'll do all the math everything myself the O the only thing that I don't do is bit blit on the screen I make a bit map",
    "start": "212680",
    "end": "219720"
  },
  {
    "text": "and tell Windows a bit blitt it on there um I've worked in an extremely",
    "start": "219720",
    "end": "225360"
  },
  {
    "text": "large complex problem spaces I don't like the word complex I think if it's complex you're not doing it right it",
    "start": "225360",
    "end": "231159"
  },
  {
    "text": "should be simple um I mostly work history of working in Do's windows and embedded I",
    "start": "231159",
    "end": "240200"
  },
  {
    "text": "know some Linux I'm not an expert at it um I've worked in many different",
    "start": "240200",
    "end": "247079"
  },
  {
    "text": "domains uh some things will not cover in very much depth uh multiscale surface or Texture",
    "start": "247640",
    "end": "256199"
  },
  {
    "text": "options and ways of dealing with those I may throw a couple of them at you uh not",
    "start": "256199",
    "end": "262479"
  },
  {
    "text": "going to handle a whole lot of dealing with light sources um or aliasing and you may have",
    "start": "262479",
    "end": "270320"
  },
  {
    "text": "heard of aliasing in other Graphics when you have a diagonal line that goes from",
    "start": "270320",
    "end": "275639"
  },
  {
    "text": "here to here rather than just having a square stair step it interpolating pixels on either side to soften up the",
    "start": "275639",
    "end": "282000"
  },
  {
    "text": "edge I'm not going to bother dealing with that where did you",
    "start": "282000",
    "end": "287400"
  },
  {
    "text": "go okay um some of the stuff that you'll see on",
    "start": "288440",
    "end": "295560"
  },
  {
    "text": "the screen will drive your mind crazy I'm going to have some graph where objects will be appearing to",
    "start": "295560",
    "end": "302479"
  },
  {
    "text": "collide and actually go inside of each other the human mind doesn't like that",
    "start": "302479",
    "end": "308919"
  },
  {
    "text": "but that's because human mind well my Graphics engine that I wrote for this uh",
    "start": "308919",
    "end": "315840"
  },
  {
    "text": "does not have a physics engine in it and doesn't understand collisions points are points and it just draws between the",
    "start": "315840",
    "end": "321440"
  },
  {
    "text": "points but it was actually a demonstration that shows how the depth buffer works on every",
    "start": "321440",
    "end": "328160"
  },
  {
    "text": "pixel so there's other some other uh Vector math which I'm not not going to",
    "start": "328160",
    "end": "333400"
  },
  {
    "text": "cover uh but in theory experts may use some of that I I",
    "start": "333400",
    "end": "341240"
  },
  {
    "text": "didn't okay you have 3D shapes how do you draw a 3D shape we don't have nice",
    "start": "341240",
    "end": "347600"
  },
  {
    "text": "curves and smooth edges and stuff like that we do it with lots of different triangles and we each triangle also",
    "start": "347600",
    "end": "355759"
  },
  {
    "text": "called poly or polygon has a surface that gets painted on it you more and",
    "start": "355759",
    "end": "361520"
  },
  {
    "text": "more triangles you do the more simulated the shape is so",
    "start": "361520",
    "end": "367319"
  },
  {
    "text": "the the all the triangles are called edges and vertexes vertexes are the",
    "start": "367319",
    "end": "374000"
  },
  {
    "text": "points in 3D space that we map the edges are just imaginary lines that connect",
    "start": "374000",
    "end": "383319"
  },
  {
    "text": "these so even though that's just some crude uh",
    "start": "383319",
    "end": "388759"
  },
  {
    "text": "triangle drawing you can recognize that that's a dolphin the more triangles you use the",
    "start": "388759",
    "end": "394599"
  },
  {
    "text": "more smooth of a surface that it looks like you get so the first one you can almost tell it's a rabbit but by the",
    "start": "394599",
    "end": "401080"
  },
  {
    "text": "time you get to the end if you had enough colored surfaces that would look like much more like a",
    "start": "401080",
    "end": "407720"
  },
  {
    "text": "rabbit you've probably all seen the classic teapot this is",
    "start": "407720",
    "end": "413199"
  },
  {
    "text": "wireframe uh typically no there's squares on here we don't we don't really",
    "start": "413199",
    "end": "418720"
  },
  {
    "text": "do squares you can do squares with wire frames if you want to just see the silhouette around it we do lots of",
    "start": "418720",
    "end": "426919"
  },
  {
    "text": "triangles so why do we do triangles three points Define a plane if you have",
    "start": "426919",
    "end": "432039"
  },
  {
    "text": "a fourth point you don't know it's on the plane and then when you try and paint a flat surface between those three",
    "start": "432039",
    "end": "438520"
  },
  {
    "text": "points you can't bend it around the corner so we just goes three points and the interior area there even though it",
    "start": "438520",
    "end": "445199"
  },
  {
    "text": "defines the entire plane a point",
    "start": "445199",
    "end": "450280"
  },
  {
    "text": "is just a spot off of a CO in a coordinate plane",
    "start": "450280",
    "end": "455919"
  },
  {
    "text": "it doesn't represent anything other than a position a vector represents a",
    "start": "455919",
    "end": "462080"
  },
  {
    "text": "direction and a magnitude but not a the the starting point if you you can add a",
    "start": "462080",
    "end": "469639"
  },
  {
    "text": "vector to a point and move a point you can subtract two points and get the",
    "start": "469639",
    "end": "475280"
  },
  {
    "text": "vector between them of how to get from one to the other you can add and subtract vectors you basically just add",
    "start": "475280",
    "end": "482120"
  },
  {
    "text": "them head to tail head to tail and that makes a new Vector you cannot um add",
    "start": "482120",
    "end": "489840"
  },
  {
    "text": "points that would make no sense um points are stored we have an X",
    "start": "489840",
    "end": "497280"
  },
  {
    "text": "Y and Z coordinate but we actually store them in a 4X one or 1 by4 Matrix",
    "start": "497280",
    "end": "504360"
  },
  {
    "text": "depending on how you call it points out of math",
    "start": "504360",
    "end": "510720"
  },
  {
    "text": "correctness and um a way to tell which is which is we",
    "start": "510720",
    "end": "519479"
  },
  {
    "text": "write a point with the the y or the W parameter is a one and a vector with a",
    "start": "519479",
    "end": "526800"
  },
  {
    "text": "zero if you sub and this if you end up subtracting two points that one the one",
    "start": "526800",
    "end": "532399"
  },
  {
    "text": "at the end when you subtract that off that ends up as a zero and it shows you have a vector through the C++ I did i'",
    "start": "532399",
    "end": "539680"
  },
  {
    "text": "keep it type safe also and all my operators know which you're subtracting and what what it does and returns their",
    "start": "539680",
    "end": "545800"
  },
  {
    "text": "proper type but if you just had a 4x1 and you didn't know if it was a point or vector",
    "start": "545800",
    "end": "551760"
  },
  {
    "text": "you could look and see based on if that was a one or a zero if it was a point or",
    "start": "551760",
    "end": "557920"
  },
  {
    "text": "vector matrix multiplication that's mostly what we end up doing and you",
    "start": "558800",
    "end": "564680"
  },
  {
    "text": "probably had to do some of this in junior high math Maybe",
    "start": "564680",
    "end": "569920"
  },
  {
    "text": "freshman or sophomore in in high school basically you just end up your x",
    "start": "569920",
    "end": "577720"
  },
  {
    "text": "times each of the First Column your y * the second Z * the 3 m * the 4th it's",
    "start": "577720",
    "end": "584120"
  },
  {
    "text": "written out this way and this is a four parameters in parentheses that are",
    "start": "584120",
    "end": "591240"
  },
  {
    "text": "clustered together into to this new Vector um if you're going to multiply a",
    "start": "591240",
    "end": "596880"
  },
  {
    "text": "4x4 array that gets a little more comp complex and you would think it takes up",
    "start": "596880",
    "end": "602560"
  },
  {
    "text": "a lot of time to do number crunching it's actually not too bad it's all of the first row times the second times the",
    "start": "602560",
    "end": "610480"
  },
  {
    "text": "First Column first row times the second column on and on and on till it ends up",
    "start": "610480",
    "end": "616120"
  },
  {
    "text": "with producing a new array that's a 4x4 internally I store a matric is an",
    "start": "616120",
    "end": "624560"
  },
  {
    "text": "array of floats is a 4x4 array the reason we use float floats is they're",
    "start": "624560",
    "end": "631640"
  },
  {
    "text": "relatively fast in internal inside to the hardware of the CPU you think you",
    "start": "631640",
    "end": "638600"
  },
  {
    "text": "might a float is four bits some you might think we'd want to use eight bits for more accuracy it's if you're dealing",
    "start": "638600",
    "end": "646760"
  },
  {
    "text": "with numbers of that much you don't need that many decimals and that much huge of a mantisa for the significance on it so",
    "start": "646760",
    "end": "654120"
  },
  {
    "text": "that's fast enough also for transferring back and forth to a GPU if you're going to do the math in a g PPU it natively",
    "start": "654120",
    "end": "661480"
  },
  {
    "text": "knows floats and it does good enough on those uh you could actually modern gpus",
    "start": "661480",
    "end": "668079"
  },
  {
    "text": "can do doubles but it's Overkill there and it's double the transfer time of in",
    "start": "668079",
    "end": "673440"
  },
  {
    "text": "and out of memory so and that becomes significant um for points and vectors I",
    "start": "673440",
    "end": "682200"
  },
  {
    "text": "have a base class it's I call data 4 all my own madeup mechanisms um and it's just 4 point",
    "start": "682200",
    "end": "689320"
  },
  {
    "text": "point or four coordinates XYZ and W I derive from that and I have a type",
    "start": "689320",
    "end": "696320"
  },
  {
    "text": "specific vector and point and each of these has the the they're not yet",
    "start": "696320",
    "end": "702360"
  },
  {
    "text": "operators they're just functions for you can doing cross products and you can add and subtract and",
    "start": "702360",
    "end": "708720"
  },
  {
    "text": "multiply uh these and they all come out as type correct C++ is very typ",
    "start": "708720",
    "end": "714920"
  },
  {
    "text": "sensitive and to protect you from yourself you can't can't get the wrong",
    "start": "714920",
    "end": "720360"
  },
  {
    "text": "answer back when you're multiplying or adding different",
    "start": "720360",
    "end": "725399"
  },
  {
    "text": "types um the main uh operations that you're going to",
    "start": "726079",
    "end": "732040"
  },
  {
    "text": "do with Matrix on these is you're going to scale you're going to make something bigger or smaller in different",
    "start": "732040",
    "end": "737720"
  },
  {
    "text": "coordinates translate is to Move It from one point to another rotate around the",
    "start": "737720",
    "end": "743760"
  },
  {
    "text": "x- axis y AIS or z-axis and orthonormal basis",
    "start": "743760",
    "end": "750079"
  },
  {
    "text": "show you a picture of that it's a big word it doesn't mean much so",
    "start": "750079",
    "end": "756519"
  },
  {
    "text": "scaling X Y and Z you have something that's a small",
    "start": "760320",
    "end": "767519"
  },
  {
    "text": "object and you multiply it out whoops oh another thing that uh and",
    "start": "767519",
    "end": "775480"
  },
  {
    "text": "we'll hit this occasionally standard convention is your objects you you deal with are",
    "start": "775480",
    "end": "782680"
  },
  {
    "text": "typically uh between zero and one plus or minus um",
    "start": "782680",
    "end": "789160"
  },
  {
    "text": "so unit one measurement you want that bigger you can multiply in different",
    "start": "789160",
    "end": "795959"
  },
  {
    "text": "directions and you can squish it also so I pretend this is the same model",
    "start": "795959",
    "end": "803639"
  },
  {
    "text": "so it's flatter longer wider we've placed it on there you want",
    "start": "803639",
    "end": "810880"
  },
  {
    "text": "it even bigger you just multiply and stretch it every object has its own",
    "start": "810880",
    "end": "817600"
  },
  {
    "text": "origin where it considers its Center uh because when you want to uh",
    "start": "817600",
    "end": "823160"
  },
  {
    "text": "scale something and you multiply that that's where that is taken effect of or when you move it that's where it's done",
    "start": "823160",
    "end": "829920"
  },
  {
    "text": "when you rotate it it rotates around the axis oh we got bigger objects and",
    "start": "829920",
    "end": "835720"
  },
  {
    "text": "flatter and another one too pretend they all have the same skin surfaces on them",
    "start": "835720",
    "end": "842480"
  },
  {
    "text": "so scaling you can multiply X Y and Z at the same time in different amounts they",
    "start": "842480",
    "end": "849839"
  },
  {
    "text": "don't have to be linear so that's how you can do make something wide and flat",
    "start": "849839",
    "end": "855600"
  },
  {
    "text": "at the same time uh translating you say I want to",
    "start": "855600",
    "end": "861279"
  },
  {
    "text": "move it to this coordinate relative to the object's",
    "start": "861279",
    "end": "866959"
  },
  {
    "text": "origin you move it laterally or you know in",
    "start": "866959",
    "end": "872440"
  },
  {
    "text": "zspace or wherever you want",
    "start": "872440",
    "end": "879079"
  },
  {
    "text": "rotating around the object's origin easy to make the object origin in",
    "start": "880560",
    "end": "887320"
  },
  {
    "text": "the middle and it's around the x",
    "start": "887320",
    "end": "891880"
  },
  {
    "text": "axis Y axis or z-axis",
    "start": "892639",
    "end": "900320"
  },
  {
    "text": "now this isn't going to make a lot of sense yet but if you have something",
    "start": "907240",
    "end": "913720"
  },
  {
    "text": "that's existing in this point in space out here sometimes you want to look at",
    "start": "913720",
    "end": "919800"
  },
  {
    "text": "that from a different perspective and so you want it to have its own",
    "start": "919800",
    "end": "926399"
  },
  {
    "text": "different uh axis basis so all of a sudden now this object",
    "start": "926399",
    "end": "933120"
  },
  {
    "text": "sitting here and it's stored in these coordinates you can translate that",
    "start": "933120",
    "end": "939000"
  },
  {
    "text": "into X well this is X Y and Z no nomenclature for this varies but it'd be",
    "start": "939000",
    "end": "946440"
  },
  {
    "text": "UV and N origin to origin matches up so",
    "start": "946440",
    "end": "951680"
  },
  {
    "text": "the origins the z00 0 are going to be in the same spot but it's now going to be",
    "start": "951680",
    "end": "957240"
  },
  {
    "text": "potentially twisted and we'll show you in a little while of how you would potentially do that where you're not",
    "start": "957240",
    "end": "963480"
  },
  {
    "text": "doing it from a twisted you're actually dealing with a different new",
    "start": "963480",
    "end": "968160"
  },
  {
    "text": "origin um to combine some of these operations you",
    "start": "972560",
    "end": "979160"
  },
  {
    "text": "can multiply The Matrix together and then multiply The Matrix times the point",
    "start": "979160",
    "end": "985360"
  },
  {
    "text": "and do that more as a collective operation but it's order",
    "start": "985360",
    "end": "991240"
  },
  {
    "text": "sensitive so you got your object is living at the origin and you want to move it laterally",
    "start": "992120",
    "end": "999759"
  },
  {
    "text": "and then rotate it do did you really want to rotate it and then move it laterally or actually rotate and then",
    "start": "999759",
    "end": "1006160"
  },
  {
    "text": "laterally so it's order sensitive and you can see in the diagram here how that ends up making a difference if you do",
    "start": "1006160",
    "end": "1012880"
  },
  {
    "text": "one versus the other",
    "start": "1012880",
    "end": "1017519"
  },
  {
    "text": "matrix multiplication is basically left to right and I call this V for Vector uh",
    "start": "1020160",
    "end": "1026720"
  },
  {
    "text": "vectors or points are the same mathematically the same difference and if you have your M1 Matrix that say is a",
    "start": "1026720",
    "end": "1035280"
  },
  {
    "text": "rotate and then M2 is a uh translate and",
    "start": "1035280",
    "end": "1040600"
  },
  {
    "text": "M3 is a scaling Factor it would take the point or vector",
    "start": "1040600",
    "end": "1047720"
  },
  {
    "text": "times M1 and then multiply times M2 and then times M3 if you had a whole bunch",
    "start": "1047720",
    "end": "1053720"
  },
  {
    "text": "of points you were doing this too that's three Matrix operations you're doing for every single point but if you can",
    "start": "1053720",
    "end": "1060480"
  },
  {
    "text": "combine all these Matrix in order M1 M2 M3 into a single Matrix just called M",
    "start": "1060480",
    "end": "1067160"
  },
  {
    "text": "then you can multiply it times that point and you can go through your whole list of points and multiply that one",
    "start": "1067160",
    "end": "1072360"
  },
  {
    "text": "simple Matrix against your entire list of points and that way you didn't have",
    "start": "1072360",
    "end": "1077880"
  },
  {
    "text": "to do M1 M2 2 M3 M1 M2 M2 M3 Etc and",
    "start": "1077880",
    "end": "1083240"
  },
  {
    "text": "therefore you've just done onethird as much math okay not going to really talk about",
    "start": "1083240",
    "end": "1090799"
  },
  {
    "text": "Vector scaling Vector length and what normalization means that's basically",
    "start": "1090799",
    "end": "1095960"
  },
  {
    "text": "converting it just a unit length of one there's important reasons for that uh what cross products are or dot products",
    "start": "1095960",
    "end": "1102360"
  },
  {
    "text": "are and why they're useful or why do we want to uh square up",
    "start": "1102360",
    "end": "1108240"
  },
  {
    "text": "vectors a model has surfaces on it you we don't really care",
    "start": "1108240",
    "end": "1116480"
  },
  {
    "text": "what's on the inside there as far as we're concerned there is nothing on the inside because you can't see it it's",
    "start": "1116480",
    "end": "1121520"
  },
  {
    "text": "only you only see the outside surfaces a model is a collection of polygons or the",
    "start": "1121520",
    "end": "1129600"
  },
  {
    "text": "triangles some people call this a 3D object or just simply an",
    "start": "1129600",
    "end": "1135000"
  },
  {
    "text": "object um the code for that is a triplet of points the three different",
    "start": "1135000",
    "end": "1140400"
  },
  {
    "text": "coordinates that form the triangle uh and this is just how I've done it for my little uh program I'm not",
    "start": "1140400",
    "end": "1147400"
  },
  {
    "text": "trying to sell you the use of mine this is just for modeling so you'll understand how it works a surface ID is",
    "start": "1147400",
    "end": "1155520"
  },
  {
    "text": "what we're going to be painting on there and it actually has a sub ID also and you'll see that coming up in a couple SL",
    "start": "1155520",
    "end": "1162120"
  },
  {
    "text": "slides a mesh is a collection of points so that Cube we were looking at",
    "start": "1162120",
    "end": "1170720"
  },
  {
    "text": "is a series of triangular surfaces on there that we're going to paint on there",
    "start": "1171480",
    "end": "1177880"
  },
  {
    "text": "with his up arrow and the",
    "start": "1177880",
    "end": "1183240"
  },
  {
    "text": "uh right most left most sorry my dyslexia is striking in Reverse",
    "start": "1183240",
    "end": "1188720"
  },
  {
    "text": "directions here um is what the actual surface is it's a bit map of an up with",
    "start": "1188720",
    "end": "1196760"
  },
  {
    "text": "an arrow on it and since we not we don't actually do squares we're doing triangles we cut it in half we have two",
    "start": "1196760",
    "end": "1202840"
  },
  {
    "text": "different triangles all of the examples I've used in my stuff I'm doing here are",
    "start": "1202840",
    "end": "1208080"
  },
  {
    "text": "right angle triangles they do not need to be right angle triangles if you have some really irregular shape like a",
    "start": "1208080",
    "end": "1215760"
  },
  {
    "text": "soccer ball and you subdivide that up into a lot of different triangles you're actually going to end up with no right",
    "start": "1215760",
    "end": "1222360"
  },
  {
    "text": "triangles that doesn't matter the triangles",
    "start": "1222360",
    "end": "1229559"
  },
  {
    "text": "here are the coordinates on a plus or minus one Cube and this is one surface",
    "start": "1231159",
    "end": "1237039"
  },
  {
    "text": "on that this is what the a surface looks like and a surface",
    "start": "1237039",
    "end": "1242919"
  },
  {
    "text": "has two different parts to it this would be zero and this would be one and these are the coordinates that map it into a",
    "start": "1242919",
    "end": "1249360"
  },
  {
    "text": "the 2D coordinate system here um back to what my mesh is mesh is",
    "start": "1249360",
    "end": "1258320"
  },
  {
    "text": "a collection of all these polygon objects which have the triplets of",
    "start": "1258320",
    "end": "1264600"
  },
  {
    "text": "points in them and the surface ID when we multiply a matrix onto a mesh it goes",
    "start": "1264600",
    "end": "1273080"
  },
  {
    "text": "through every uh polygon in its collection in",
    "start": "1273080",
    "end": "1278320"
  },
  {
    "text": "the vector and then it multiplies every Point each of the three points in each",
    "start": "1278320",
    "end": "1283840"
  },
  {
    "text": "of the the polygons okay",
    "start": "1283840",
    "end": "1289919"
  },
  {
    "text": "uh this is a cubical Earth globe so it's the same idea very similar",
    "start": "1289919",
    "end": "1298159"
  },
  {
    "text": "Cube got the ID of this and then each of the different surfaces we're going to paint on here and this would be Surface",
    "start": "1298159",
    "end": "1305080"
  },
  {
    "text": "Two and Surface three and four five 8 and nine and the coordinates for each of",
    "start": "1305080",
    "end": "1312480"
  },
  {
    "text": "these are in this table and and the index is implied for which surface they",
    "start": "1312480",
    "end": "1318120"
  },
  {
    "text": "are um so a surface doesn't have to be",
    "start": "1318120",
    "end": "1324440"
  },
  {
    "text": "exclusively only a single triangle or even just two triangles it can be an entirely large",
    "start": "1324440",
    "end": "1332360"
  },
  {
    "text": "bit map with void space or sometimes if you really want to reuse space you could put dummy data in there and use other",
    "start": "1332360",
    "end": "1339600"
  },
  {
    "text": "images in there just to conserve space as it is what I done as just black",
    "start": "1339600",
    "end": "1345600"
  },
  {
    "text": "space okay a model uh is a three the 3D",
    "start": "1346440",
    "end": "1353640"
  },
  {
    "text": "object there's all the triangles on the make up the different sides and how they",
    "start": "1353640",
    "end": "1359760"
  },
  {
    "text": "would end up getting painted with the UPS from each of the different surfaces this happens to show the sides darker",
    "start": "1359760",
    "end": "1366799"
  },
  {
    "text": "because there was a light source from the other side I'm not really going to handle much about worry about light sources at this point but if we want to",
    "start": "1366799",
    "end": "1374640"
  },
  {
    "text": "think we can talk about it later about how simple it is to handle some of that",
    "start": "1374640",
    "end": "1380520"
  },
  {
    "text": "each model has its own coordinate system that it's based on where its origin is but",
    "start": "1380520",
    "end": "1387559"
  },
  {
    "text": "the first thing you want to do is place it in the",
    "start": "1387559",
    "end": "1392799"
  },
  {
    "text": "world um the world everything is has its own new",
    "start": "1392799",
    "end": "1398240"
  },
  {
    "text": "origin so we've started its origin we moved",
    "start": "1398240",
    "end": "1404600"
  },
  {
    "text": "it and we maybe elevated I can't let this in float forever so we'll say we",
    "start": "1404600",
    "end": "1409840"
  },
  {
    "text": "placed it there we make another copy of that",
    "start": "1409840",
    "end": "1415039"
  },
  {
    "text": "model and move it and rotate it and put it over you know in its own",
    "start": "1415039",
    "end": "1420240"
  },
  {
    "text": "space we do this again and this time we actually rotate it hopefully it doesn't",
    "start": "1420240",
    "end": "1426240"
  },
  {
    "text": "roll off the table and that one's going to lie",
    "start": "1426240",
    "end": "1430799"
  },
  {
    "text": "down come on my clicking it's driving me crazy model space so each M each model",
    "start": "1433679",
    "end": "1440360"
  },
  {
    "text": "has a its own Matrix of where it's moved to the you know translate and if scaling",
    "start": "1440360",
    "end": "1449000"
  },
  {
    "text": "rotating uh so I don't have a much larger bottle but if we scaled it we would have a monster bottle or",
    "start": "1449000",
    "end": "1455520"
  },
  {
    "text": "potentially a little Teensy one um and it's placed in the in the",
    "start": "1455520",
    "end": "1462559"
  },
  {
    "text": "world and its uh based off the origin of the of the of what you're calling the world and",
    "start": "1462559",
    "end": "1471080"
  },
  {
    "text": "potentially we're not going to really deal with it but there's a light source that's going to be shining on this we're",
    "start": "1471080",
    "end": "1477520"
  },
  {
    "text": "not going to really handle that but other 3D engines do and so there's bright sides and",
    "start": "1477520",
    "end": "1483559"
  },
  {
    "text": "Shadows on this I'm not going to be handling transparency these bottles are transparent that adds a little more",
    "start": "1483559",
    "end": "1491080"
  },
  {
    "text": "complications um but that's just painting tricks so the coordinate space is we",
    "start": "1491080",
    "end": "1497840"
  },
  {
    "text": "have the space which is the coordinates that the model itself uses and then when",
    "start": "1497840",
    "end": "1503600"
  },
  {
    "text": "we move it into the world and then where we're viewing it from your camera your",
    "start": "1503600",
    "end": "1509559"
  },
  {
    "text": "point of view and then we so that's kind of going",
    "start": "1509559",
    "end": "1515320"
  },
  {
    "text": "from uh how do I describe it's in the OKAY model space is",
    "start": "1515320",
    "end": "1522679"
  },
  {
    "text": "each object having its own coordinate system the world is the world space we're dealing with the view space is",
    "start": "1522679",
    "end": "1529039"
  },
  {
    "text": "where you be viewing it from a perspective and then the screen space is when we've skewed the perspective based",
    "start": "1529039",
    "end": "1537039"
  },
  {
    "text": "on depth and the it kind of squishes it so that even if things that are the same",
    "start": "1537039",
    "end": "1543520"
  },
  {
    "text": "size when they're further away they actually look smaller so you can kind of",
    "start": "1543520",
    "end": "1549480"
  },
  {
    "text": "see in this diagram on the screen here the back triangle on that cube is a little bit uh smaller than the close one",
    "start": "1549480",
    "end": "1557640"
  },
  {
    "text": "and I'll show you how we do that it's just yet another set of Matrix multiplications we do so the view space",
    "start": "1557640",
    "end": "1564399"
  },
  {
    "text": "is wherever we're viewing from we're going to be viewing from out here and our camera",
    "start": "1564399",
    "end": "1573279"
  },
  {
    "text": "has a its point of view of how it's going to be looking at us and so when",
    "start": "1573279",
    "end": "1579880"
  },
  {
    "text": "we're talking about that uh redoing the coordinate system on that that's basically this again but the origins",
    "start": "1579880",
    "end": "1586679"
  },
  {
    "text": "aren't the same we translate we do the origin translation and then we translate",
    "start": "1586679",
    "end": "1592520"
  },
  {
    "text": "where its Center is I'll show you the math on that in a second um view space okay so this is",
    "start": "1592520",
    "end": "1600760"
  },
  {
    "text": "going World space to view space that's where we tilt it and we're looking at it from an angle we haven't done the",
    "start": "1600760",
    "end": "1606520"
  },
  {
    "text": "perspective view on it yet so the depth is it's in Z but it's not squished",
    "start": "1606520",
    "end": "1613360"
  },
  {
    "text": "together the depth doesn't make things smaller yet that's where screen space is",
    "start": "1613360",
    "end": "1618600"
  },
  {
    "text": "when you have a camera and you're looking at something you have your view that you're",
    "start": "1618600",
    "end": "1623720"
  },
  {
    "text": "looking at that has a certain angle that you're you're uh that you're looking at",
    "start": "1623720",
    "end": "1630960"
  },
  {
    "text": "it and there's a front clipping Zone in a back clipping Zone anything closer than this you want to ignore anything",
    "start": "1630960",
    "end": "1637200"
  },
  {
    "text": "further away you want to ignore but your view of the size of what's behind",
    "start": "1637200",
    "end": "1643679"
  },
  {
    "text": "you the furthest away is actually much wider than what you're seeing close",
    "start": "1643679",
    "end": "1649840"
  },
  {
    "text": "um but that also means something that's further away of a unit size is much smaller of a",
    "start": "1649840",
    "end": "1657760"
  },
  {
    "text": "percentage of the full view so that's why something further away looks smaller",
    "start": "1657760",
    "end": "1662880"
  },
  {
    "text": "because it's a smaller percentage of the back plane um there's three different Matrix",
    "start": "1662880",
    "end": "1671480"
  },
  {
    "text": "operations that happened for this from the point of view field of view and the",
    "start": "1671480",
    "end": "1676919"
  },
  {
    "text": "viewport I combine those into a single Matrix operation",
    "start": "1676919",
    "end": "1683399"
  },
  {
    "text": "um and I do that just to create a single Matrix that I can do this transpose",
    "start": "1683399",
    "end": "1689720"
  },
  {
    "text": "from part of what's involved in this is the point of view is where am I viewing",
    "start": "1689720",
    "end": "1696640"
  },
  {
    "text": "it from what direction am I because I could be right here but there's nothing",
    "start": "1696640",
    "end": "1701760"
  },
  {
    "text": "saying I'm looking over there I could be doing my viewport looking over here and I'm and I'm not going to see those also",
    "start": "1701760",
    "end": "1708200"
  },
  {
    "text": "which way is up if I'm looking at something and then turn my camera or my head the objects look like they're going",
    "start": "1708200",
    "end": "1714159"
  },
  {
    "text": "a different direction so we have three different vectors that take that into account so we have the point The View",
    "start": "1714159",
    "end": "1721919"
  },
  {
    "text": "and the up I kind of think of it this way use the thumb being the up and",
    "start": "1721919",
    "end": "1728200"
  },
  {
    "text": "that's the direction I'm pointing or the way things are going to be okay we've seen this before this is",
    "start": "1728200",
    "end": "1735600"
  },
  {
    "text": "just the transitions we're doing again um world Matrix you play you rotate your",
    "start": "1735600",
    "end": "1742640"
  },
  {
    "text": "object and you translate it and you multiply those Matrix and that's your",
    "start": "1742640",
    "end": "1748760"
  },
  {
    "text": "Matrix for multiplying against the points of an object to move it to where you want in the world and the",
    "start": "1748760",
    "end": "1755440"
  },
  {
    "text": "transformation pipeline is you from model space to World space camera space",
    "start": "1755440",
    "end": "1760960"
  },
  {
    "text": "perspective space there's some clipping operations that you can do I've actually skipped those and homogeneous screen",
    "start": "1760960",
    "end": "1769519"
  },
  {
    "text": "space um it's an extra divide operation that happens and the points once you've",
    "start": "1769519",
    "end": "1777279"
  },
  {
    "text": "scaled them and done all this math to them and the point of view and stuff the W parameter for points is no longer",
    "start": "1777279",
    "end": "1785240"
  },
  {
    "text": "one it's some funky number that we end up going through and",
    "start": "1785240",
    "end": "1790440"
  },
  {
    "text": "doing a perspective divide on and we'll hit that in a minute that scales thing",
    "start": "1790440",
    "end": "1795720"
  },
  {
    "text": "for perspective view that makes the back back the further away something is that",
    "start": "1795720",
    "end": "1801399"
  },
  {
    "text": "that makes it smaller looking okay here's the world space The",
    "start": "1801399",
    "end": "1806519"
  },
  {
    "text": "View space where we have the multiple axes we have the axes of the origin of",
    "start": "1806519",
    "end": "1811840"
  },
  {
    "text": "where things are at and then the origin from the view of the camera and so we got",
    "start": "1811840",
    "end": "1820279"
  },
  {
    "text": "XYZ uh uvn for these",
    "start": "1820279",
    "end": "1825600"
  },
  {
    "text": "vectors and then we have the x y and z that is the origin of where the camera space is at now we really didn't look",
    "start": "1825600",
    "end": "1833679"
  },
  {
    "text": "too in in too much depth of uh when these before but the X Y and Z on the",
    "start": "1833679",
    "end": "1841120"
  },
  {
    "text": "bottom there that looks a lot like when we were doing the Translating of moving something between different positions",
    "start": "1841120",
    "end": "1849760"
  },
  {
    "text": "and these matrixes the uvn is a lot like when we translated the origin there and",
    "start": "1849760",
    "end": "1857039"
  },
  {
    "text": "they are these are the two different pages and we have the translation Matrix",
    "start": "1857039",
    "end": "1862320"
  },
  {
    "text": "and the orthogonal uh normal basis and if you",
    "start": "1862320",
    "end": "1867639"
  },
  {
    "text": "notice this Matrix looks a lot like this one plus a",
    "start": "1867639",
    "end": "1873399"
  },
  {
    "text": "lot like this one and there's some complicated math behind how that works but you can see that that's actually how",
    "start": "1873399",
    "end": "1879279"
  },
  {
    "text": "they're doing these in one operation internally somebody figured out that you can multiply these together and that it",
    "start": "1879279",
    "end": "1886279"
  },
  {
    "text": "works out to be this way so you don't actually have to do two separate uh Matrix operations that it's all",
    "start": "1886279",
    "end": "1892559"
  },
  {
    "text": "combined it's some of it's magic you have to just kind of accept it works okay our perspective view we",
    "start": "1892559",
    "end": "1899840"
  },
  {
    "text": "talked about that a little bit before it kind of has its own coordinate system now these show The X Y and Z axis having",
    "start": "1899840",
    "end": "1907760"
  },
  {
    "text": "arrows on them going different directions from different Origins the emphasis the the direction",
    "start": "1907760",
    "end": "1916600"
  },
  {
    "text": "of the vector of your axis is more of convention every system uses",
    "start": "1916600",
    "end": "1922279"
  },
  {
    "text": "different coordinate systems of which way they consider up in for X and Y and",
    "start": "1922279",
    "end": "1927639"
  },
  {
    "text": "Z and where the origins are it's whatever engine you're using of how it will be uh uh set up I I'm not sure if",
    "start": "1927639",
    "end": "1936480"
  },
  {
    "text": "this is the same as mine this is some slides like pictures I had",
    "start": "1936480",
    "end": "1942679"
  },
  {
    "text": "borrowed um the field of view we were talking about from the camera we uh looking P at there the math on that is",
    "start": "1942679",
    "end": "1950240"
  },
  {
    "text": "the field of view and then the aspect ratio of what window you're going to project this into",
    "start": "1950240",
    "end": "1956799"
  },
  {
    "text": "on your screen is it a you know a 4x3 a 19 by 16 or whatever that is um the last",
    "start": "1956799",
    "end": "1967240"
  },
  {
    "text": "step is of the pipeline is perspective divide so we divide the X Y and Z by the",
    "start": "1967240",
    "end": "1975840"
  },
  {
    "text": "W parameter in each point and this does the scales the depth",
    "start": "1975840",
    "end": "1984320"
  },
  {
    "text": "appropriate for you this is even more magic I don't even know the math on this one but it",
    "start": "1984320",
    "end": "1990600"
  },
  {
    "text": "works um these are all the different uh math operations that my library that I",
    "start": "1990600",
    "end": "1997120"
  },
  {
    "text": "wrote for myself handles all the the basic types of points Vector Matrix and meshes and I",
    "start": "1997120",
    "end": "2004320"
  },
  {
    "text": "have multiple versions of meshes of worlds and screens those are all",
    "start": "2004320",
    "end": "2010679"
  },
  {
    "text": "different meshes that I can multiply Matrix upon I just change the name on them through using but you can multiply",
    "start": "2010679",
    "end": "2019600"
  },
  {
    "text": "a vector times a matrix uh a you a",
    "start": "2019600",
    "end": "2025760"
  },
  {
    "text": "uh Point times a Matrix Matrix times matrixes and then a matrix times a mesh",
    "start": "2025760",
    "end": "2033039"
  },
  {
    "text": "and a mesh is a the collection of all those different polygons and if you can actually if you actually had multiple",
    "start": "2033039",
    "end": "2040320"
  },
  {
    "text": "objects when you place them into your world you've added them together and that's kind of in the whole world mesh",
    "start": "2040320",
    "end": "2046679"
  },
  {
    "text": "of there's now all the polygons that Define each of the different you know",
    "start": "2046679",
    "end": "2052240"
  },
  {
    "text": "pieces of candy and the water bottles and where they were placed and so those",
    "start": "2052240",
    "end": "2057520"
  },
  {
    "text": "are all in the same big Uber me mesh and so when you multiply a matrix against",
    "start": "2057520",
    "end": "2064320"
  },
  {
    "text": "that mesh every single point in there gets multiplied across this it's if you",
    "start": "2064320",
    "end": "2070800"
  },
  {
    "text": "have millions of points that's M millions of Matrix multiplications you have to do which is why you'd want to",
    "start": "2070800",
    "end": "2076358"
  },
  {
    "text": "combine all your matrixes and not do them repeatedly that combining I showed you",
    "start": "2076359",
    "end": "2082158"
  },
  {
    "text": "before another form of the types on these and the types are",
    "start": "2082159",
    "end": "2088079"
  },
  {
    "text": "correct um the mesh because a",
    "start": "2088079",
    "end": "2095000"
  },
  {
    "text": "uh uh is you used for can also do all these different Matrix operations and a",
    "start": "2095720",
    "end": "2102040"
  },
  {
    "text": "mesh is also the model the world and the screen are all kind of the same type of mesh they're just a collection of points",
    "start": "2102040",
    "end": "2109320"
  },
  {
    "text": "in a vector they're actually collections of polygons that have each have three",
    "start": "2109320",
    "end": "2115119"
  },
  {
    "text": "points in them The Triplets of points so we we got our textures we talked",
    "start": "2115119",
    "end": "2121960"
  },
  {
    "text": "about and there are the uh triangle let",
    "start": "2121960",
    "end": "2127119"
  },
  {
    "text": "say the bottom botom corner of that up sign and that gets painted on a rotated",
    "start": "2127119",
    "end": "2133320"
  },
  {
    "text": "and distorted triangle of the side of the up on the",
    "start": "2133320",
    "end": "2140760"
  },
  {
    "text": "cube as you rotate them they effectively get stretched however we don't stretch",
    "start": "2140760",
    "end": "2148119"
  },
  {
    "text": "this triangle we know that each of these points in the triangle that has a",
    "start": "2148119",
    "end": "2155920"
  },
  {
    "text": "surface and I call these surface Z surface one Surface 2 those",
    "start": "2155920",
    "end": "2161319"
  },
  {
    "text": "map to what the points were on the cube of 0.1 0.1.2 but there's a rule for this if",
    "start": "2161319",
    "end": "2171960"
  },
  {
    "text": "you so you got these the points that go in this direction if you take your um",
    "start": "2172000",
    "end": "2178359"
  },
  {
    "text": "fingers and you wrap them in the direction that they go around that triangle your thumb will be pointing up",
    "start": "2178359",
    "end": "2187880"
  },
  {
    "text": "when you go to paint it on the surface that's the direction of the up",
    "start": "2187880",
    "end": "2193720"
  },
  {
    "text": "that your fingers curl so it's forwards here we actually assigned it to a cube",
    "start": "2193720",
    "end": "2200280"
  },
  {
    "text": "and did it backwards so our fingers curl we have to turn around and our fingers",
    "start": "2200280",
    "end": "2206480"
  },
  {
    "text": "curling is the way that it's curling there the thumb is pointed away from us",
    "start": "2206480",
    "end": "2213079"
  },
  {
    "text": "so that image is actually backwards we're looking at the back of the surface the painting on there and so in this",
    "start": "2213079",
    "end": "2220280"
  },
  {
    "text": "case the word up is backwards and you'll see that how uh",
    "start": "2220280",
    "end": "2226119"
  },
  {
    "text": "show you an example in the demo later of how you can see the backside of some of these",
    "start": "2226119",
    "end": "2232599"
  },
  {
    "text": "objects okay so we have two different types of buffers we have an IM image buffer that we actually paint the image",
    "start": "2232599",
    "end": "2239280"
  },
  {
    "text": "into and then we have a z buffer that handles the depth also called a depth",
    "start": "2239280",
    "end": "2244800"
  },
  {
    "text": "buffer um it's more of consider in just gray scale because it's just a",
    "start": "2244800",
    "end": "2250520"
  },
  {
    "text": "measurement of how close it is to us as we're going through rasterizing we're",
    "start": "2250520",
    "end": "2255800"
  },
  {
    "text": "going to take every point that we're looking at and say how far away is that point from me is what I've already",
    "start": "2255800",
    "end": "2262440"
  },
  {
    "text": "painted on the screen further away or closer if it's closer the point I have",
    "start": "2262440",
    "end": "2268119"
  },
  {
    "text": "is behind it it's hidden so I don't paint it if it is uh closer I would then",
    "start": "2268119",
    "end": "2274119"
  },
  {
    "text": "paint that pixel um you can also do some uh Z clipping at",
    "start": "2274119",
    "end": "2280920"
  },
  {
    "text": "this point for if that's further away depth than you really wanted to handle or not I don't bother with that just",
    "start": "2280920",
    "end": "2287720"
  },
  {
    "text": "because of my simple examples I'm doing but I'll show you I actually have a way",
    "start": "2287720",
    "end": "2292960"
  },
  {
    "text": "through my application my little test app that will show you what the zbuffer looks like and you can see the different",
    "start": "2292960",
    "end": "2299119"
  },
  {
    "text": "depths on it so we've seen this before",
    "start": "2299119",
    "end": "2305359"
  },
  {
    "text": "um it's the you the 1 by one by one Cube and the surfaces for it and how the PT",
    "start": "2305359",
    "end": "2312560"
  },
  {
    "text": "surfaces are painted on there so when we go to",
    "start": "2312560",
    "end": "2318000"
  },
  {
    "text": "paint this triangle here which maps to these coordinates here there's two",
    "start": "2318000",
    "end": "2324000"
  },
  {
    "text": "things that we need to uh take care of each color for each pixel on every point",
    "start": "2324000",
    "end": "2329400"
  },
  {
    "text": "in there and the depth to figure out if we actually even want to paint that or not but we don't know what the depth is",
    "start": "2329400",
    "end": "2337760"
  },
  {
    "text": "in the middle of this triangle we only know the depths at the at the points we had defined so when we've rotated things",
    "start": "2337760",
    "end": "2345079"
  },
  {
    "text": "around so this point might be at a one particular depth",
    "start": "2345079",
    "end": "2351760"
  },
  {
    "text": "away from us and this one may be because it's angled away may be significantly",
    "start": "2351760",
    "end": "2358000"
  },
  {
    "text": "further away so it has much deeper depth um so we basically need to do a",
    "start": "2358000",
    "end": "2365040"
  },
  {
    "text": "linear interpolation between here and here in each of the points and know",
    "start": "2365040",
    "end": "2371200"
  },
  {
    "text": "we're 75% of the way between these two points therefore the depth is 72% of the",
    "start": "2371200",
    "end": "2378880"
  },
  {
    "text": "way and as we're going through this and",
    "start": "2378880",
    "end": "2385240"
  },
  {
    "text": "painting this uh we start with these two",
    "start": "2385240",
    "end": "2390640"
  },
  {
    "text": "edges and we go between every Point pixel by pixel on every line each raster",
    "start": "2390640",
    "end": "2397400"
  },
  {
    "text": "that's what it's called rasterization and so it's the top point",
    "start": "2397400",
    "end": "2403000"
  },
  {
    "text": "to the point on the left and the top point to the point on the right across step every single Pixel",
    "start": "2403000",
    "end": "2411240"
  },
  {
    "text": "then that's with the every single Pixel that's on our screen in our bit map that we're going to be looking",
    "start": "2411240",
    "end": "2417760"
  },
  {
    "text": "at so we have our depth we know our Points each one of those has a depth for",
    "start": "2417760",
    "end": "2424280"
  },
  {
    "text": "convenience in mathematical Simplicity I cut this triangle in half and make two",
    "start": "2424280",
    "end": "2429880"
  },
  {
    "text": "triangles and so I rasterize between these two lines all the way across and",
    "start": "2429880",
    "end": "2436000"
  },
  {
    "text": "then these two lines all the way across down to the same Point again so",
    "start": "2436000",
    "end": "2442200"
  },
  {
    "text": "interpolation we know the depth here we know the depth here we know that",
    "start": "2442200",
    "end": "2447720"
  },
  {
    "text": "we're some percentage of the way down we also know that we when we're going to",
    "start": "2447720",
    "end": "2454240"
  },
  {
    "text": "level across here on the screen that's going to intersect it this point over here this point is a percentage of the",
    "start": "2454240",
    "end": "2461200"
  },
  {
    "text": "wave between here and here here we know the depth here we know the depth so we interpolate here so as we're going ac",
    "start": "2461200",
    "end": "2468560"
  },
  {
    "text": "across the screen pixel by pixel we interpolate again between the depths on",
    "start": "2468560",
    "end": "2475079"
  },
  {
    "text": "either side and that tells us what the exact depth is at that point that's when",
    "start": "2475079",
    "end": "2480359"
  },
  {
    "text": "we make the decision is that depth further away or closer than what may",
    "start": "2480359",
    "end": "2485960"
  },
  {
    "text": "have already been it's the depth if there was never anything painted there there was no depth it's kind of an in",
    "start": "2485960",
    "end": "2491800"
  },
  {
    "text": "infinite distance away we then painted and we add ourselves to our depth buffer",
    "start": "2491800",
    "end": "2497040"
  },
  {
    "text": "at that point we also add ourselves to the U the color of the image buffer but",
    "start": "2497040",
    "end": "2503560"
  },
  {
    "text": "for that then that's put the bottom half the triangle would then that would make a",
    "start": "2503560",
    "end": "2510280"
  },
  {
    "text": "grayscale depth how far away we are but now we need to do the actual image of",
    "start": "2510280",
    "end": "2515839"
  },
  {
    "text": "the surface that we've painted on on there same rasterization and we're doing a similar",
    "start": "2515839",
    "end": "2523400"
  },
  {
    "text": "in interpolation of how far down the sides we are straight across but now we have",
    "start": "2523400",
    "end": "2531640"
  },
  {
    "text": "our triangle from the source so this point is in 3D space this Point's in 3D",
    "start": "2531640",
    "end": "2536880"
  },
  {
    "text": "space and this Point's in 3D space but they align with this point this point and this point but you notice it's",
    "start": "2536880",
    "end": "2544280"
  },
  {
    "text": "stretched so the diagonal line where we cut this in half is a certain percentage",
    "start": "2544280",
    "end": "2551720"
  },
  {
    "text": "across here that is what would be equivalent of a cross here so as we",
    "start": "2551720",
    "end": "2559240"
  },
  {
    "text": "are tracing we say we're in the bottom half of the triangle now and we've",
    "start": "2559240",
    "end": "2565240"
  },
  {
    "text": "interpolated across to here and and we're going straight across here that",
    "start": "2565240",
    "end": "2570480"
  },
  {
    "text": "now maps to this percentage across here and this percentage across here and now",
    "start": "2570480",
    "end": "2576359"
  },
  {
    "text": "we interpolate across be the middle again and so that means we're this far across and so we know at that very",
    "start": "2576359",
    "end": "2582760"
  },
  {
    "text": "particular Point we've now gone from yellow to red and so that we would be painting the red that's at that pixel",
    "start": "2582760",
    "end": "2591760"
  },
  {
    "text": "point and we would end up with so we we had our mesh and when as",
    "start": "2591760",
    "end": "2597680"
  },
  {
    "text": "we're rasterizing this this is made up of 12 different surfaces or the of the",
    "start": "2597680",
    "end": "2607119"
  },
  {
    "text": "triangle and we iterate through each of those uh the triangles that are on there",
    "start": "2607119",
    "end": "2613200"
  },
  {
    "text": "and paint those on and we end up with something that looks like our Cube um there's a mathematical problem",
    "start": "2613200",
    "end": "2620520"
  },
  {
    "text": "that happens though because of the interpolation we're doing when we're",
    "start": "2620520",
    "end": "2625839"
  },
  {
    "text": "our grid is flat and we're interpolating",
    "start": "2625839",
    "end": "2631000"
  },
  {
    "text": "across this triangle here everything's looks fine when we're perfect ly",
    "start": "2631000",
    "end": "2638440"
  },
  {
    "text": "flat um but when we start twisting this at an angle this that triangle there is",
    "start": "2638440",
    "end": "2645760"
  },
  {
    "text": "this triangle and if we go say went 10% down on this side to the 10% point on",
    "start": "2645760",
    "end": "2656200"
  },
  {
    "text": "the uh uh hypotenuse or the long side here uh everything fine",
    "start": "2656200",
    "end": "2664880"
  },
  {
    "text": "10% 20% interpolation works fine but then when we're doing the other side of the triangle we go from the 10% point to",
    "start": "2664880",
    "end": "2672480"
  },
  {
    "text": "the 10% 20% 20% you notice these lines do not line up and there's a",
    "start": "2672480",
    "end": "2679359"
  },
  {
    "text": "mathematical error in that and so there's a way of correcting for",
    "start": "2679359",
    "end": "2685200"
  },
  {
    "text": "that if you even though we've only ever defined this triangle having three",
    "start": "2685200",
    "end": "2692040"
  },
  {
    "text": "points you can imagine there's a fourth Point hiding out there",
    "start": "2692040",
    "end": "2697640"
  },
  {
    "text": "and when you go to twist this thing the the your furthest away Edge is",
    "start": "2697640",
    "end": "2703880"
  },
  {
    "text": "going to be narrow but your closer Edge is actually going to be uh much wider",
    "start": "2703880",
    "end": "2710280"
  },
  {
    "text": "that's why our uh the slope the diagonals we had on there from the 10%",
    "start": "2710280",
    "end": "2715880"
  },
  {
    "text": "to 20% points failed this imaginary point if we were to have kept track of",
    "start": "2715880",
    "end": "2721920"
  },
  {
    "text": "that and run it through all the same Matrix transforms as an imaginary Cube",
    "start": "2721920",
    "end": "2727880"
  },
  {
    "text": "this point would map to this point and we could easily do the 10% there to the 10% there 20% there the 20% there and",
    "start": "2727880",
    "end": "2736720"
  },
  {
    "text": "that would even this out such we wouldn't be getting that funny air of",
    "start": "2736720",
    "end": "2742000"
  },
  {
    "text": "where they were colliding together at sharp angles",
    "start": "2742000",
    "end": "2749400"
  },
  {
    "text": "um this is the entire example of my pipeline in my application I have a",
    "start": "2749559",
    "end": "2756359"
  },
  {
    "text": "model passed into me I scale it and place it I rotate it I make a copy of it",
    "start": "2756359",
    "end": "2764359"
  },
  {
    "text": "I place it and rotate it again I place it um or actually pardon me I I made",
    "start": "2764359",
    "end": "2770359"
  },
  {
    "text": "three different models I rotate and translate for four different depths this",
    "start": "2770359",
    "end": "2777119"
  },
  {
    "text": "each of these rotate on an x y and a z and this the last one mathematically in",
    "start": "2777119",
    "end": "2782880"
  },
  {
    "text": "theory kind of impossible I multiply rotate on the XY and z- axis but",
    "start": "2782880",
    "end": "2788599"
  },
  {
    "text": "remember Matrix operations happen in order it rotates on the X and then the Y",
    "start": "2788599",
    "end": "2795400"
  },
  {
    "text": "and then the Z and then I move it and so this so as I added each one of these",
    "start": "2795400",
    "end": "2802040"
  },
  {
    "text": "models as I've multiplied them out I add them to the world they just become more collections of points in the",
    "start": "2802040",
    "end": "2809599"
  },
  {
    "text": "world so and I get the point of view field of view and viewport multiply",
    "start": "2809599",
    "end": "2816359"
  },
  {
    "text": "those together together and it uh multiply that across",
    "start": "2816359",
    "end": "2821400"
  },
  {
    "text": "all the points in the world and that becomes my screen then I do that perspective divide that's where we go",
    "start": "2821400",
    "end": "2826839"
  },
  {
    "text": "through and divide every point every X Y and Z by the W and then I get my screen",
    "start": "2826839",
    "end": "2833640"
  },
  {
    "text": "and this is my mesh of coordinates that have been retranslated to the camera view and what",
    "start": "2833640",
    "end": "2841720"
  },
  {
    "text": "the camera up is and uh all the points flattened so the X",
    "start": "2841720",
    "end": "2849040"
  },
  {
    "text": "and Y are X and Y from the perspective where the camera is and the Z is the depth of",
    "start": "2849040",
    "end": "2856160"
  },
  {
    "text": "how far away it is from each of those points so this would be the depth of my",
    "start": "2856160",
    "end": "2861599"
  },
  {
    "text": "four different objects is some of them you they have all been rotated some are",
    "start": "2861599",
    "end": "2866800"
  },
  {
    "text": "further some are closer in my application I happen to show Closer",
    "start": "2866800",
    "end": "2872599"
  },
  {
    "text": "numbers as darker there again that's just my mathematical way of keeping track of it",
    "start": "2872599",
    "end": "2880480"
  },
  {
    "text": "and then this is how they would each of those surfaces would be painted yellow doesn't give a whole lot of",
    "start": "2880480",
    "end": "2885839"
  },
  {
    "text": "differentiation but the Earth you know like the oceans kind of",
    "start": "2885839",
    "end": "2891079"
  },
  {
    "text": "overlap and so they don't get a whole lot there I'll show you some better ones demo",
    "start": "2891079",
    "end": "2898880"
  },
  {
    "text": "um this is the wireframe of what's generated and each of the",
    "start": "2922160",
    "end": "2928319"
  },
  {
    "text": "triangles that's with each of",
    "start": "2928319",
    "end": "2932200"
  },
  {
    "text": "those this is the depth buffer of actually as they're being",
    "start": "2933400",
    "end": "2939760"
  },
  {
    "text": "drawn and I'm a geek so I go for the numbers this is drawing 30 frames a",
    "start": "2939760",
    "end": "2946920"
  },
  {
    "text": "second and it is processing 30 million pixels per second",
    "start": "2946920",
    "end": "2954559"
  },
  {
    "text": "as it's rasterizing across each one of each one of these cubes has 12 triangle big triangles on them they take up a lot",
    "start": "2954559",
    "end": "2961440"
  },
  {
    "text": "of area and so as I'm going across rasterizing every one of them including all the hidden sides cuz you don't know",
    "start": "2961440",
    "end": "2968000"
  },
  {
    "text": "what's hidden until you've actually rasterized across it and look at the points um this is a single threaded",
    "start": "2968000",
    "end": "2976839"
  },
  {
    "text": "application that is running um on a so it's on One Core it's one8 of the the",
    "start": "2976839",
    "end": "2984359"
  },
  {
    "text": "processor in this machine um and I'm running it's at full",
    "start": "2984359",
    "end": "2990798"
  },
  {
    "text": "HD and this is the image that's on there the up",
    "start": "2992200",
    "end": "2998640"
  },
  {
    "text": "you've seen the Earth that we were",
    "start": "3000480",
    "end": "3003880"
  },
  {
    "text": "showing this is Frankie Frankie is my puppy who's no",
    "start": "3006000",
    "end": "3011680"
  },
  {
    "text": "longer with us but the pre interpolation",
    "start": "3011680",
    "end": "3016839"
  },
  {
    "text": "air type thing that I was talking about I was looking at him and I'm going is it an optical illusion or is his nose",
    "start": "3016839",
    "end": "3027559"
  },
  {
    "text": "moving as he tilts and it turns out it actually is",
    "start": "3027559",
    "end": "3033760"
  },
  {
    "text": "his nose is tilting because of that perspective divide as it's hitting in",
    "start": "3033760",
    "end": "3038839"
  },
  {
    "text": "angles it's being drawn at slightly the wrong",
    "start": "3038839",
    "end": "3044040"
  },
  {
    "text": "place and you can see it in here and let's slow this down so you can see a",
    "start": "3045880",
    "end": "3051359"
  },
  {
    "text": "little better see when it's flat it looks just",
    "start": "3051359",
    "end": "3056640"
  },
  {
    "text": "just fine but as it starts getting to get sharp angles you see the",
    "start": "3056640",
    "end": "3065400"
  },
  {
    "text": "diagonal across the perfectly Square now the diagonal across",
    "start": "3065400",
    "end": "3071839"
  },
  {
    "text": "here is looking like they're leaning in towards each other there is another form",
    "start": "3071839",
    "end": "3078680"
  },
  {
    "text": "of 3D math for locating rather than doing straight interpolation of what",
    "start": "3078680",
    "end": "3084640"
  },
  {
    "text": "pixel you grab out of the surface that deals with some math that I don't",
    "start": "3084640",
    "end": "3090640"
  },
  {
    "text": "understand but basically you have you are three points in of our surface and",
    "start": "3090640",
    "end": "3098319"
  },
  {
    "text": "our three points of our triangle and it does a equal distance ratio mumbo jumbo",
    "start": "3098319",
    "end": "3105280"
  },
  {
    "text": "between these uh points and it's basically the distance Vector from each",
    "start": "3105280",
    "end": "3110880"
  },
  {
    "text": "of the uh coordinates of the PO Corner points and it comes up with a",
    "start": "3110880",
    "end": "3116640"
  },
  {
    "text": "equilibrium point from a different triangle and that's the point that it",
    "start": "3116640",
    "end": "3121799"
  },
  {
    "text": "goes to get it out of and it doesn't have to deal with that interpolation here now I mentioned I going to show",
    "start": "3121799",
    "end": "3130760"
  },
  {
    "text": "you okay well here's Frankie again and this is mixed this is half of",
    "start": "3130760",
    "end": "3137559"
  },
  {
    "text": "the up Cube and half of the Frankie Cube let's make this a little bigger so you",
    "start": "3137559",
    "end": "3142960"
  },
  {
    "text": "can see it better you can see edges Collide as they go through each other uh",
    "start": "3142960",
    "end": "3151280"
  },
  {
    "text": "because there's no surface engine these are surfaces in our mind only these are not real hard surfaces the human mind is",
    "start": "3151280",
    "end": "3159480"
  },
  {
    "text": "used to seeing when two cubes Collide they Collide and they don't go through each",
    "start": "3159480",
    "end": "3165720"
  },
  {
    "text": "other but if we were to get rid of leave half a Franky there and get rid of all",
    "start": "3165720",
    "end": "3171480"
  },
  {
    "text": "those UPS we can see through the cube and we can see the these edges intersect",
    "start": "3171480",
    "end": "3177880"
  },
  {
    "text": "with each other like right there and some of the",
    "start": "3177880",
    "end": "3185640"
  },
  {
    "text": "points there and it can really get hard on our eyes almost like daggers of the",
    "start": "3185640",
    "end": "3190960"
  },
  {
    "text": "mind to see these things intersect with each other and Collide and it becomes really",
    "start": "3190960",
    "end": "3199440"
  },
  {
    "text": "hard to Envision now I talked",
    "start": "3199440",
    "end": "3205280"
  },
  {
    "text": "about um looking at the backside of a",
    "start": "3205280",
    "end": "3213440"
  },
  {
    "text": "cube see without the surfaces in there we can see through and",
    "start": "3216480",
    "end": "3222400"
  },
  {
    "text": "see as this surface is being painted we can see the the opposite side of the",
    "start": "3222400",
    "end": "3229280"
  },
  {
    "text": "cube over there and because some sides were surfaces were using the the the",
    "start": "3229280",
    "end": "3236520"
  },
  {
    "text": "winding One Way versus the other if you realize this was the backside of the",
    "start": "3236520",
    "end": "3243240"
  },
  {
    "text": "surface this is actually showing Frankie facing two different directions one is",
    "start": "3243240",
    "end": "3248480"
  },
  {
    "text": "because he's facing looking um this way actually these both",
    "start": "3248480",
    "end": "3256680"
  },
  {
    "text": "look like his nose is going the same way but we're looking at the back side of it",
    "start": "3256680",
    "end": "3261880"
  },
  {
    "text": "where this Cube rotates around now he's actually facing the other way so surfaces are more like a painted",
    "start": "3261880",
    "end": "3268640"
  },
  {
    "text": "cellophane where you can see through them uh what else did I want to show you",
    "start": "3268640",
    "end": "3275160"
  },
  {
    "text": "in this uh with the depth buffer you can",
    "start": "3275160",
    "end": "3280960"
  },
  {
    "text": "see some of the collisions are happening here again",
    "start": "3280960",
    "end": "3285960"
  },
  {
    "text": "also now the offset is how far these cubes are away from each other and the",
    "start": "3288040",
    "end": "3293079"
  },
  {
    "text": "scale is how big they are so you can see some of the edges",
    "start": "3293079",
    "end": "3299359"
  },
  {
    "text": "colliding through on the depth uh with each other and then you",
    "start": "3299359",
    "end": "3304480"
  },
  {
    "text": "can kind of Envision of why it looks like they're colliding because when",
    "start": "3304480",
    "end": "3310280"
  },
  {
    "text": "they're at the same point The Depths look the same um but when you can see through it",
    "start": "3310280",
    "end": "3316599"
  },
  {
    "text": "you can see the depths that are further behind or not slicing through",
    "start": "3316599",
    "end": "3322000"
  },
  {
    "text": "this and if we go back to the image very confused",
    "start": "3322000",
    "end": "3328960"
  },
  {
    "text": "image um Solid Surfaces here we can see the",
    "start": "3328960",
    "end": "3335319"
  },
  {
    "text": "cubes of the earth that are colliding with each other and going through each",
    "start": "3335319",
    "end": "3342039"
  },
  {
    "text": "other",
    "start": "3343280",
    "end": "3346280"
  },
  {
    "text": "okay um some potential that was all handled single threaded",
    "start": "3349680",
    "end": "3357359"
  },
  {
    "text": "let me check my time here oh I think I'm running short on time I believe here but I'll make it",
    "start": "3357359",
    "end": "3363119"
  },
  {
    "text": "quick um and that's because I had one big buffer that was the size of the",
    "start": "3363119",
    "end": "3368760"
  },
  {
    "text": "screen that I was painting into another way to do this faster would be to take",
    "start": "3368760",
    "end": "3374760"
  },
  {
    "text": "each one of the triangles the polygons and paint them into their own surface",
    "start": "3374760",
    "end": "3381559"
  },
  {
    "text": "and depth buffer and then go and combine all of those",
    "start": "3381559",
    "end": "3387599"
  },
  {
    "text": "together but we end up with a couple problems as we combine all of them together say we're doing this each and",
    "start": "3387599",
    "end": "3394880"
  },
  {
    "text": "we we painted each one of these in their own thread and then we throw them into collection and we then share them out to",
    "start": "3394880",
    "end": "3403319"
  },
  {
    "text": "each individual threads and each threads then multiplies them joins them together and joins them together and joins them",
    "start": "3403319",
    "end": "3408760"
  },
  {
    "text": "together in theory that seems like could be fast we subdivided the work we're doing it across eight different cores",
    "start": "3408760",
    "end": "3415000"
  },
  {
    "text": "except each one of these the bit map images has a significant amount of",
    "start": "3415000",
    "end": "3422000"
  },
  {
    "text": "memory of both the image and the depth buffer which is effectively a monochrome",
    "start": "3422000",
    "end": "3428720"
  },
  {
    "text": "uh bit map and when you move these from one thread to another it takes a long",
    "start": "3428720",
    "end": "3434200"
  },
  {
    "text": "time to load that memory in the other thread in the cache and the CPU takes a",
    "start": "3434200",
    "end": "3440960"
  },
  {
    "text": "long time to move the things back and forth so a way to get around potentially get around that this one was showing",
    "start": "3440960",
    "end": "3448839"
  },
  {
    "text": "joining those all together another way to do that would be take some of all these triangles and put them in each",
    "start": "3448839",
    "end": "3456599"
  },
  {
    "text": "different threads and then you have a full image that you add the triangles",
    "start": "3456599",
    "end": "3463079"
  },
  {
    "text": "one at a time doing this in multiple different threads then you finally join the data together from all the threads",
    "start": "3463079",
    "end": "3469480"
  },
  {
    "text": "and you end up with our final painted object",
    "start": "3469480",
    "end": "3474640"
  },
  {
    "text": "uh running short on time so I'm going to kind of skip some of this uh",
    "start": "3474640",
    "end": "3480680"
  },
  {
    "text": "texturing the image can be at multiple different scales sometimes they'll",
    "start": "3480680",
    "end": "3485960"
  },
  {
    "text": "actually pre-draw these at multiple different sizes so you get to choose which one you're out of and which one",
    "start": "3485960",
    "end": "3491920"
  },
  {
    "text": "would be the sharpest image to deal with you also dealing with when you are",
    "start": "3491920",
    "end": "3497039"
  },
  {
    "text": "looking at a particular pixel on the interpolation in the surface are you",
    "start": "3497039",
    "end": "3503559"
  },
  {
    "text": "actually looking at a single Pixel or are you looking at it what covers multiple pixels that is actually",
    "start": "3503559",
    "end": "3509359"
  },
  {
    "text": "straight up aligned so this is assuming it's a single Pixel this is a region of",
    "start": "3509359",
    "end": "3515400"
  },
  {
    "text": "pixels so kind of averages the color this one also covers a multiple multitude of uh pixels in the actual",
    "start": "3515400",
    "end": "3522799"
  },
  {
    "text": "surface and picks the average color there uh this is showing how it would do some of the average",
    "start": "3522799",
    "end": "3530039"
  },
  {
    "text": "interpolations questions yes can we connect with you on LinkedIn yes",
    "start": "3530039",
    "end": "3537559"
  },
  {
    "text": "right there yeah um the source code for this and a copy of the slides in PDF format",
    "start": "3537559",
    "end": "3544760"
  },
  {
    "text": "you can get them from that teeny URL um I am on LinkedIn make sure to",
    "start": "3544760",
    "end": "3552079"
  },
  {
    "text": "send a comment uh I get hundreds of invites a day and if I if I don't know",
    "start": "3552079",
    "end": "3558319"
  },
  {
    "text": "who it is and they don't say how I know them ignore ignore and if I Mark you as",
    "start": "3558319",
    "end": "3564240"
  },
  {
    "text": "a don't I do not know lincolin has a a ranking score and if you get too many I",
    "start": "3564240",
    "end": "3569400"
  },
  {
    "text": "don't knows they will um oh battery run I'm plugged",
    "start": "3569400",
    "end": "3575880"
  },
  {
    "text": "in okay maybe I'm not I guess that's the end of my presentation thank you very much um oh",
    "start": "3575880",
    "end": "3585000"
  },
  {
    "text": "was I going to say LinkedIn if you get too many of the I don't knows they may suspend your rights to invite other",
    "start": "3585000",
    "end": "3590760"
  },
  {
    "text": "people to connect I think they've gotten a little bit away from that being that they just realized it's all part of the",
    "start": "3590760",
    "end": "3597160"
  },
  {
    "text": "pyramid scheme and they want more and more people so more questions about any",
    "start": "3597160",
    "end": "3602359"
  },
  {
    "text": "of my weird math that is doing on this oh this application I saying",
    "start": "3602359",
    "end": "3608680"
  },
  {
    "text": "56k you single-threaded application handling you know even if on a bigger",
    "start": "3608680",
    "end": "3614799"
  },
  {
    "text": "machine at home it can handle 60 million pixels per second at 60 frames a second",
    "start": "3614799",
    "end": "3621640"
  },
  {
    "text": "laptop's a little underpowered so it still only does 30 frames a second at full",
    "start": "3621640",
    "end": "3627440"
  },
  {
    "text": "HD so you have any plans on running on the GPU um I've thought about that as it",
    "start": "3627440",
    "end": "3635000"
  },
  {
    "text": "turns out the Matrix multiplications and all that is actually very",
    "start": "3635000",
    "end": "3640960"
  },
  {
    "text": "lightweight um first of all I don't have that many points on my screen if I had",
    "start": "3640960",
    "end": "3646720"
  },
  {
    "text": "thousands and thousands and thousands of points that might become a little faster but because you multiply all your",
    "start": "3646720",
    "end": "3652400"
  },
  {
    "text": "matrixes together first then multiplying that across the mesh is still relatively lightweight",
    "start": "3652400",
    "end": "3659920"
  },
  {
    "text": "and you probably spend more time copying in and out of the GPU than it would be worth um the ra the most of the time is",
    "start": "3659920",
    "end": "3666640"
  },
  {
    "text": "spent in rasterization of interpolating and going down every single Pixel follow",
    "start": "3666640",
    "end": "3672599"
  },
  {
    "text": "up so for your use case it doesn't really make any sense to go that I could",
    "start": "3672599",
    "end": "3678799"
  },
  {
    "text": "it it doesn't I don't think at this point uh game engines definitely they",
    "start": "3678799",
    "end": "3684440"
  },
  {
    "text": "have determined that it makes a difference for them they're dealing with a lot more points than I'm dealing with",
    "start": "3684440",
    "end": "3689760"
  },
  {
    "text": "just for my simple little demo app on this yes you considered using it for a",
    "start": "3689760",
    "end": "3695520"
  },
  {
    "text": "game or something just test the abity I'm breaking one of my own rules well two",
    "start": "3695520",
    "end": "3702920"
  },
  {
    "text": "things the speaker should always repeat the question back and so he was asking back there if I've considered porting to",
    "start": "3702920",
    "end": "3709559"
  },
  {
    "text": "gpus and then you were asking about alternate uses if I ever have thought about writing a game or doing that I",
    "start": "3709559",
    "end": "3716480"
  },
  {
    "text": "don't have that level of imagination I'm very orthagonal I draw squares I've tried to do some of this",
    "start": "3716480",
    "end": "3723760"
  },
  {
    "text": "with a do decahedron uh 12-sided object and wrap a globe with that I was having problems",
    "start": "3723760",
    "end": "3730680"
  },
  {
    "text": "with cordinates and visualizing that so it so I have more",
    "start": "3730680",
    "end": "3738720"
  },
  {
    "text": "questions okay the other question rule that I was about to break is of going",
    "start": "3738720",
    "end": "3743799"
  },
  {
    "text": "over can never go over you guys deserve your break so I will take questions uh",
    "start": "3743799",
    "end": "3750359"
  },
  {
    "text": "off tape here in a minute if people want have more and we can talk about so thank",
    "start": "3750359",
    "end": "3756039"
  },
  {
    "text": "you very much",
    "start": "3756039",
    "end": "3759400"
  }
]