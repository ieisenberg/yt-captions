[
  {
    "text": "all right hello everyone thank you so much for joining me for an hour today at ndc london",
    "start": "7359",
    "end": "15360"
  },
  {
    "text": "we're here to talk about observable web applications why you should have",
    "start": "15360",
    "end": "21119"
  },
  {
    "text": "observability in your client side how client-side observability can help you better understand the whole of your",
    "start": "21119",
    "end": "28400"
  },
  {
    "text": "software system and how to go about doing it but when i say observability what does",
    "start": "28400",
    "end": "34399"
  },
  {
    "text": "that mean",
    "start": "34399",
    "end": "37039"
  },
  {
    "text": "well i think observability is the ability to understand the state",
    "start": "39600",
    "end": "45680"
  },
  {
    "text": "and behavior of a system without needing to stop it from running so the",
    "start": "45680",
    "end": "51760"
  },
  {
    "text": "difference from debugging is in you don't need to like turn it off and run it in debug mode and",
    "start": "51760",
    "end": "57600"
  },
  {
    "text": "attach your tools to it in order to see what's happening observability is able to understand",
    "start": "57600",
    "end": "62640"
  },
  {
    "text": "what's happening and how it's performing without needing to stop it",
    "start": "62640",
    "end": "67680"
  },
  {
    "text": "and this seems like a good thing to have to me it lets us make better more stable and more reliable",
    "start": "67680",
    "end": "74880"
  },
  {
    "text": "applications how do we apply this idea to web",
    "start": "74880",
    "end": "80240"
  },
  {
    "text": "applications specifically though well web applications are",
    "start": "80240",
    "end": "86080"
  },
  {
    "text": "a lot like icebergs i like icebergs this whole presentation will have a lot",
    "start": "86080",
    "end": "91119"
  },
  {
    "text": "of icebergs so i hope you like icebergs too web applications",
    "start": "91119",
    "end": "96799"
  },
  {
    "text": "are a lot like icebergs some applications are small like this one at",
    "start": "96799",
    "end": "104399"
  },
  {
    "text": "not poutine dot fyi created by my friend lemon this is a website basically just shows",
    "start": "104399",
    "end": "111600"
  },
  {
    "text": "you different foods from around the world that call themselves poutine but are not poutine the poutine being",
    "start": "111600",
    "end": "119040"
  },
  {
    "text": "the famous canadian dish of french fries cheese curds and gravy",
    "start": "119040",
    "end": "124479"
  },
  {
    "text": "and here's all the ways different restaurants messed up that formula this application is relatively small you",
    "start": "124479",
    "end": "131520"
  },
  {
    "text": "can get your head around it you could see the code and see exactly what it was doing",
    "start": "131520",
    "end": "137520"
  },
  {
    "text": "but some web applications are huge so big the one developer cannot fully",
    "start": "137520",
    "end": "144080"
  },
  {
    "text": "understand everything about it here's an example this is a large uh online retailer in my area",
    "start": "144080",
    "end": "152160"
  },
  {
    "text": "target.com it's a huge huge e-commerce site that runs lots and lots of things has",
    "start": "152160",
    "end": "159760"
  },
  {
    "text": "teams of hundreds of developers maintaining it it's so big that one person could not",
    "start": "159760",
    "end": "165360"
  },
  {
    "text": "hope to understand everything about the whole system as a weird one-off",
    "start": "165360",
    "end": "170480"
  },
  {
    "text": "this iceberg specifically is was a picture off the coast of canada and it always",
    "start": "170480",
    "end": "176959"
  },
  {
    "text": "kind of looked to me like a giant monster flipping off the canadians",
    "start": "176959",
    "end": "182080"
  },
  {
    "text": "i don't know if anybody else sees that but regardless of the size of the web app that you work on all of",
    "start": "182080",
    "end": "189360"
  },
  {
    "text": "them are treacherous there's all kinds of weird hidden bits in a web app",
    "start": "189360",
    "end": "196800"
  },
  {
    "text": "weakened parts they break apart in unpredictable ways because web apps are really complicated",
    "start": "196800",
    "end": "202879"
  },
  {
    "text": "delivering over the web is incredibly treacherous and all these apps have skeletons that",
    "start": "202879",
    "end": "209120"
  },
  {
    "text": "they're hiding some obviously more literally than others",
    "start": "209120",
    "end": "214560"
  },
  {
    "text": "but most importantly web applications like icebergs have a lot going on",
    "start": "214560",
    "end": "221200"
  },
  {
    "text": "below the surface only about 1 8 of an iceberg is visible above the",
    "start": "221200",
    "end": "226799"
  },
  {
    "text": "water and while the ratio between how much code is in your front end",
    "start": "226799",
    "end": "231840"
  },
  {
    "text": "and how much code is in your back end might differ a little bit we all know there's a lot of complexity",
    "start": "231840",
    "end": "238000"
  },
  {
    "text": "happening beneath the waves of your web application historically when companies have looked",
    "start": "238000",
    "end": "244879"
  },
  {
    "text": "at observability efforts they've all been focused below the water line",
    "start": "244879",
    "end": "249920"
  },
  {
    "text": "looking at server side their services and how they're interacting together in",
    "start": "249920",
    "end": "255120"
  },
  {
    "text": "real time and understanding that is really important understanding the platform's performance activity and",
    "start": "255120",
    "end": "262880"
  },
  {
    "text": "capacity of all of your back-end services is really really important and i don't want to dissuade you from doing that",
    "start": "262880",
    "end": "270080"
  },
  {
    "text": "all the connections between them tracing calls and understanding dependencies are really critical to understand how",
    "start": "270080",
    "end": "276960"
  },
  {
    "text": "your system is running but ultimately the user the end user the",
    "start": "276960",
    "end": "282800"
  },
  {
    "text": "people that we're building this for don't care about any of that they only",
    "start": "282800",
    "end": "288080"
  },
  {
    "text": "care about the client side",
    "start": "288080",
    "end": "293440"
  },
  {
    "text": "client-side is the culmination of all the work that our systems do manifested in a ui",
    "start": "293440",
    "end": "300479"
  },
  {
    "text": "and whether we like it or not it's not it's the only thing that most customers",
    "start": "300479",
    "end": "306160"
  },
  {
    "text": "care about the search button is throwing an error is always the",
    "start": "306160",
    "end": "311840"
  },
  {
    "text": "problem never that your inventory service is offline",
    "start": "311840",
    "end": "317600"
  },
  {
    "text": "client side of our application is usually where issues are triaged",
    "start": "318080",
    "end": "323360"
  },
  {
    "text": "it's very very common for your web application or your web uh your web development team",
    "start": "323360",
    "end": "330080"
  },
  {
    "text": "to act as support triage for big parts of the organization because often they're the ones who are",
    "start": "330080",
    "end": "337120"
  },
  {
    "text": "interacting with the customers directly or bugs get reported as a ui side bug even if the root cause is a",
    "start": "337120",
    "end": "343680"
  },
  {
    "text": "back end failure and because users perceive our system",
    "start": "343680",
    "end": "350880"
  },
  {
    "text": "here from the client side observability gives us insight into the real user",
    "start": "350880",
    "end": "357120"
  },
  {
    "text": "experience of our applications but as a bonus if we're able to see our",
    "start": "357120",
    "end": "363360"
  },
  {
    "text": "client side and understand what our users are experiencing as a bonus",
    "start": "363360",
    "end": "369199"
  },
  {
    "text": "we get to see we get to observe our application from the client side we",
    "start": "369199",
    "end": "374720"
  },
  {
    "text": "get a low resolution glimpse of what's happening below the water if you weren't monitoring you weren't",
    "start": "374720",
    "end": "382080"
  },
  {
    "text": "having any observability on the back end of your system if all you did was monitor the client side of your",
    "start": "382080",
    "end": "388479"
  },
  {
    "text": "application you'd still get an idea of whether or not your services are online",
    "start": "388479",
    "end": "394080"
  },
  {
    "text": "if the client side is is working great chances are the back end is working okay if the",
    "start": "394080",
    "end": "400080"
  },
  {
    "text": "client side is going down probably the backend service is failing server issues",
    "start": "400080",
    "end": "406000"
  },
  {
    "text": "will manifest themselves in client-side problems so the perspective that we observe our",
    "start": "406000",
    "end": "414000"
  },
  {
    "text": "system from is super important let me tell you a little story about",
    "start": "414000",
    "end": "419360"
  },
  {
    "text": "a system that i built where the perspective of observability was really really important so",
    "start": "419360",
    "end": "427199"
  },
  {
    "text": "the application had a thick client side written in angular and it talks to a whole bunch of",
    "start": "427199",
    "end": "433680"
  },
  {
    "text": "services in the back end well we needed to make sure that",
    "start": "433680",
    "end": "438800"
  },
  {
    "text": "our services stayed online we were using a popular cloud provider and there was all kinds of uh platform",
    "start": "438800",
    "end": "445680"
  },
  {
    "text": "as a service you know advantages that we were taking but we wanted to make sure that all these",
    "start": "445680",
    "end": "451039"
  },
  {
    "text": "different services that we needed were all online and so we wrote a little checker service",
    "start": "451039",
    "end": "456960"
  },
  {
    "text": "that was part of it that would you know run example transactions and and call different things",
    "start": "456960",
    "end": "462800"
  },
  {
    "text": "to make sure that everything was running and we were pretty proud of that i was pretty proud of that i was like oh this",
    "start": "462800",
    "end": "468319"
  },
  {
    "text": "is pretty cool i like that a lot that would get into a situation where the checker",
    "start": "468319",
    "end": "473680"
  },
  {
    "text": "was saying hey everything's great nothing to worry about but the clients were reporting errors that something was",
    "start": "473680",
    "end": "480319"
  },
  {
    "text": "down trouble with this is is that because we wrote the checker inside that same",
    "start": "480319",
    "end": "486240"
  },
  {
    "text": "bubble that our services ran in that anything that happened on the edge of that network would still",
    "start": "486240",
    "end": "492720"
  },
  {
    "text": "take down our services from the perspective of client so a dns issue an edge routing issue a proxy issue",
    "start": "492720",
    "end": "500479"
  },
  {
    "text": "would all take down our services and be totally blind to us so which we we got a little smarter",
    "start": "500479",
    "end": "508479"
  },
  {
    "text": "we said okay well maybe we shouldn't run the checker in the same cloud provider that we run our primary stuff in let's",
    "start": "508479",
    "end": "514640"
  },
  {
    "text": "move it external let's move them just to something else and so we pulled the code out and we ran",
    "start": "514640",
    "end": "520640"
  },
  {
    "text": "it in two separate providers that were looking at the services and this was a lot better it was a lot",
    "start": "520640",
    "end": "526880"
  },
  {
    "text": "more reliable but we would still occasionally run into issues where the client would say hey things",
    "start": "526880",
    "end": "533600"
  },
  {
    "text": "are offline but both the checkers would be fine well often the data center providers the",
    "start": "533600",
    "end": "541040"
  },
  {
    "text": "infrastructure providers run on big you know high-performance back-end networks where they can talk to",
    "start": "541040",
    "end": "547600"
  },
  {
    "text": "each other really really well and really really fast but that last mile of connecting to your clients is a lot",
    "start": "547600",
    "end": "555120"
  },
  {
    "text": "less reliable and so clients would see network connection issues to our services",
    "start": "555120",
    "end": "560800"
  },
  {
    "text": "even though our checkers said everything is online now to the client our service was",
    "start": "560800",
    "end": "566560"
  },
  {
    "text": "offline and that is the perspective that matters",
    "start": "566560",
    "end": "571920"
  },
  {
    "text": "so we have one third third uh take at this problem and we ported the checking uh logic",
    "start": "571920",
    "end": "579680"
  },
  {
    "text": "into part of our client-side application so our clients themselves would report whether or not",
    "start": "579680",
    "end": "586160"
  },
  {
    "text": "they're able to connect to our services that was",
    "start": "586160",
    "end": "591200"
  },
  {
    "text": "really really well it worked really really well for us because it reported one for one how are our clients doing",
    "start": "591200",
    "end": "598800"
  },
  {
    "text": "if our client was offline if our client was unable to talk to the search service we knew right away and we could start",
    "start": "598800",
    "end": "605920"
  },
  {
    "text": "digging into what was causing it so because of all of these things i've",
    "start": "605920",
    "end": "611920"
  },
  {
    "text": "talked about that the client side is paramount for the user that the client side is the",
    "start": "611920",
    "end": "619920"
  },
  {
    "text": "triage point for problems in your system and because symptoms of back end issues will",
    "start": "619920",
    "end": "626480"
  },
  {
    "text": "manifest themselves in client-side problems not only should client-side concerns be a big part of",
    "start": "626480",
    "end": "633600"
  },
  {
    "text": "your application observability efforts but it might be the most important place",
    "start": "633600",
    "end": "639040"
  },
  {
    "text": "to add observability to your application so today here's what we're going to talk",
    "start": "639040",
    "end": "644800"
  },
  {
    "text": "about we're going to talk about the general architecture of applica of client-side applications",
    "start": "644800",
    "end": "650560"
  },
  {
    "text": "and how it cracks i'm not sure if everybody watching this right now is familiar with client-side development",
    "start": "650560",
    "end": "656640"
  },
  {
    "text": "so we're going to do a quick 10 000 foot view of how this is laid out",
    "start": "656640",
    "end": "662320"
  },
  {
    "text": "we're going to talk about three techniques to better instrument our client-side application",
    "start": "662320",
    "end": "668640"
  },
  {
    "text": "for better observability we're going to look at error tracking to see when our applications just outright",
    "start": "668640",
    "end": "674720"
  },
  {
    "text": "break we're gonna look at performance monitoring to see how well is our app",
    "start": "674720",
    "end": "679839"
  },
  {
    "text": "uh how the performance of our application is is going for our users and we're gonna look at usage analytics",
    "start": "679839",
    "end": "686480"
  },
  {
    "text": "so we can better understand how our end users are interacting with the system and finally we'll talk about the",
    "start": "686480",
    "end": "693279"
  },
  {
    "text": "limitations of client-side instrumentation for application observability because it",
    "start": "693279",
    "end": "698480"
  },
  {
    "text": "can't do everything there is no silver bullet who am i uh in case you care i am todd",
    "start": "698480",
    "end": "706079"
  },
  {
    "text": "gardner uh i've been at ndc london a whole bunch of times uh this is my first time attending",
    "start": "706079",
    "end": "712240"
  },
  {
    "text": "remotely i am what you would call a full iceberg developer uh having developed on both client-side",
    "start": "712240",
    "end": "719519"
  },
  {
    "text": "and server-side in a number of different languages and platforms i am from stillwater minnesota in the",
    "start": "719519",
    "end": "725440"
  },
  {
    "text": "united states uh that my state has been in the news quite a bit in the last year",
    "start": "725440",
    "end": "730720"
  },
  {
    "text": "uh but we are all okay here when i am not presenting at a conference",
    "start": "730720",
    "end": "737839"
  },
  {
    "text": "uh from ndc i work a lot with a product called track js which is a javascript error monitoring",
    "start": "737839",
    "end": "744560"
  },
  {
    "text": "tool uh that i co-founded about seven years ago uh it's pretty cool",
    "start": "744560",
    "end": "750800"
  },
  {
    "text": "and most recently i've been working on something new called request metrics which is a real user monitoring",
    "start": "750800",
    "end": "757360"
  },
  {
    "text": "service that has been coming together quite nicely and spending most of my time on that in",
    "start": "757360",
    "end": "764639"
  },
  {
    "text": "the last year as we're going through this if you see",
    "start": "764639",
    "end": "769920"
  },
  {
    "text": "something that you like that that is you can find insightful whatever take a photo or screen cap of your",
    "start": "769920",
    "end": "777120"
  },
  {
    "text": "screen and tweet it out uh todd h gardner and dc london it helps promote the conference it helps promote",
    "start": "777120",
    "end": "782720"
  },
  {
    "text": "me and helps me get a fee bit of feedback on what bits you like and what bits you don't",
    "start": "782720",
    "end": "789759"
  },
  {
    "text": "okay let's get into it let's talk about client side architecture so if you're working",
    "start": "790240",
    "end": "797839"
  },
  {
    "text": "on a server-side maybe microservice application which is which is very",
    "start": "797839",
    "end": "803200"
  },
  {
    "text": "popular these days client-side has millions",
    "start": "803200",
    "end": "809519"
  },
  {
    "text": "millions of distributed instances of your application no matter how",
    "start": "809519",
    "end": "814959"
  },
  {
    "text": "fine-grained your micro services may be you have way more instances of your",
    "start": "814959",
    "end": "820079"
  },
  {
    "text": "client-side application than you would ever have microservices because",
    "start": "820079",
    "end": "825839"
  },
  {
    "text": "each browser each user opening a browser is its own running instance of your client-side",
    "start": "825839",
    "end": "832880"
  },
  {
    "text": "application some are running on great big hardware",
    "start": "832880",
    "end": "838000"
  },
  {
    "text": "on fast networks like most of us now running on developer class machines connected to",
    "start": "838000",
    "end": "844079"
  },
  {
    "text": "great big network connections others are running on old heart android phones",
    "start": "844079",
    "end": "850560"
  },
  {
    "text": "on poor 3g networks in a train but all of them have the same basic",
    "start": "850560",
    "end": "857600"
  },
  {
    "text": "structure inside of them the browser this is the client-side environment this",
    "start": "857600",
    "end": "864560"
  },
  {
    "text": "is our runtime everything that we do is managed by it limited by it",
    "start": "864560",
    "end": "869760"
  },
  {
    "text": "and run by it we ask the browser to do something and we pray that it does the thing that",
    "start": "869760",
    "end": "875839"
  },
  {
    "text": "we wanted it to do within the browser we are building a",
    "start": "875839",
    "end": "881279"
  },
  {
    "text": "user interface using html as our medium this is most importantly the browser is",
    "start": "881279",
    "end": "888399"
  },
  {
    "text": "letting us render this thing we create html elements we style them we add animations we do",
    "start": "888399",
    "end": "895360"
  },
  {
    "text": "click events transitions that all make up the modern web experience and to that user interface",
    "start": "895360",
    "end": "903360"
  },
  {
    "text": "we attach network interactions we we attach things to make the user",
    "start": "903360",
    "end": "909279"
  },
  {
    "text": "interface functional to respond to things with new data",
    "start": "909279",
    "end": "914320"
  },
  {
    "text": "we reach out over the network to the back end or to other client-side services to pull in data pull in interesting",
    "start": "914320",
    "end": "921839"
  },
  {
    "text": "things that we want to show the user this is things like fetch xhr",
    "start": "921839",
    "end": "927440"
  },
  {
    "text": "jsonp websockets and plain old http requests",
    "start": "927440",
    "end": "933839"
  },
  {
    "text": "the app code is how we glue these things together this is how we do all of the logic in",
    "start": "933839",
    "end": "940240"
  },
  {
    "text": "our core application code which is also running on the browser's runtime",
    "start": "940240",
    "end": "945440"
  },
  {
    "text": "on a super basic level this is just about gluing a user interface to network",
    "start": "945440",
    "end": "951279"
  },
  {
    "text": "interactions and vice versa our browser instance",
    "start": "951279",
    "end": "956959"
  },
  {
    "text": "can sometimes even reach out to other client-side applications and embed third parties inside our",
    "start": "956959",
    "end": "963519"
  },
  {
    "text": "runtime through either application code that's going to interact with us or iframes and run a runtime within a",
    "start": "963519",
    "end": "971040"
  },
  {
    "text": "runtime sometimes these are big components and these are all big components",
    "start": "971040",
    "end": "978880"
  },
  {
    "text": "of the web browser and any one of them can crack and cause interesting problems for",
    "start": "978880",
    "end": "984880"
  },
  {
    "text": "our clients for example application code our application code is running in",
    "start": "984880",
    "end": "991920"
  },
  {
    "text": "javascript and javascript is not always the easiest language",
    "start": "991920",
    "end": "999440"
  },
  {
    "text": "javascript has some rough edges around asynchronous execution functional context and evolving syntax",
    "start": "999440",
    "end": "1006639"
  },
  {
    "text": "compatibility errors in our app code are inevitable",
    "start": "1006639",
    "end": "1012079"
  },
  {
    "text": "even for the most disciplined developers there are going to be bugs that slip out into the system",
    "start": "1012079",
    "end": "1019600"
  },
  {
    "text": "networks the networks that we run on are volatile and sometimes manipulative",
    "start": "1019600",
    "end": "1024959"
  },
  {
    "text": "and will change how things are running many end users connect through the networks",
    "start": "1024959",
    "end": "1030079"
  },
  {
    "text": "and are slow and drop data and it's not even all or nothing sometimes two-thirds of your network",
    "start": "1030079",
    "end": "1037520"
  },
  {
    "text": "payloads will come through just fine but one javascript file will fail or one network request as part of your",
    "start": "1037520",
    "end": "1044240"
  },
  {
    "text": "application will fail leaving your application in a partially functional state",
    "start": "1044240",
    "end": "1053120"
  },
  {
    "text": "third parties are going to update their code when you least expect it probably and when those",
    "start": "1053120",
    "end": "1058799"
  },
  {
    "text": "integrations go down when those third parties change something does your app fall back gracefully",
    "start": "1058799",
    "end": "1066640"
  },
  {
    "text": "and users users huh software would be so much easier without",
    "start": "1066640",
    "end": "1071760"
  },
  {
    "text": "the users users do unexpected things sometimes why would anybody click that element 17",
    "start": "1071760",
    "end": "1078840"
  },
  {
    "text": "times users will do things to your app that you never expected",
    "start": "1078840",
    "end": "1084400"
  },
  {
    "text": "and they might even manipulate their own experience by modifying their browser instance",
    "start": "1084400",
    "end": "1089679"
  },
  {
    "text": "with automations and injected scripts and plug-ins and extensions that break your code sometimes",
    "start": "1089679",
    "end": "1098400"
  },
  {
    "text": "browser bugs themselves happen browsers are changing especially today",
    "start": "1098400",
    "end": "1105520"
  },
  {
    "text": "they are they're updating their apis and their implementations constantly and bugs are creeping in",
    "start": "1105520",
    "end": "1111520"
  },
  {
    "text": "sometimes firefox and chrome and safari will all have the same api and all say that they're compatible with it but",
    "start": "1111520",
    "end": "1117840"
  },
  {
    "text": "they all have slightly different connotations within it",
    "start": "1117840",
    "end": "1123280"
  },
  {
    "text": "most likely uh when you think you have a browser bug it's purely a browser incompatibility",
    "start": "1123280",
    "end": "1129360"
  },
  {
    "text": "that we failed to account for in our code there's at least five major browser implementations today that most people",
    "start": "1129360",
    "end": "1136000"
  },
  {
    "text": "need to care about and each has subtle documented difference in their capability performance or how their apis",
    "start": "1136000",
    "end": "1144320"
  },
  {
    "text": "work and since users get to control the client run time of your application you",
    "start": "1144320",
    "end": "1150880"
  },
  {
    "text": "don't get to dictate what browser your end users use many bugs are",
    "start": "1150880",
    "end": "1156240"
  },
  {
    "text": "simply incompatible clients like user hitting your site with internet explorer nobody likes",
    "start": "1156240",
    "end": "1162880"
  },
  {
    "text": "internet explorer why would you use internet explorer so we have a complicated environment",
    "start": "1162880",
    "end": "1172080"
  },
  {
    "text": "with millions of clients that can all break in unpredictable ways but yet this part of",
    "start": "1172080",
    "end": "1178559"
  },
  {
    "text": "our application is paramount to our users so what do we do",
    "start": "1178559",
    "end": "1184880"
  },
  {
    "text": "well let's start with air tracking let's look at when the whole thing falls apart how",
    "start": "1184880",
    "end": "1190480"
  },
  {
    "text": "do we know about it so when i say error tracking what i mean is",
    "start": "1190480",
    "end": "1196160"
  },
  {
    "text": "a method of recording unhandled exceptional states in our browsers",
    "start": "1196160",
    "end": "1201760"
  },
  {
    "text": "application code or network requests so these major components of our app",
    "start": "1201760",
    "end": "1206960"
  },
  {
    "text": "when something unexpected has happened we need a way to record that to count it",
    "start": "1206960",
    "end": "1212799"
  },
  {
    "text": "to aggregate them all together and know what problems are happening in our distributed client instances",
    "start": "1212799",
    "end": "1221760"
  },
  {
    "text": "so we need an example in order to talk about things in so here is an example application that",
    "start": "1221760",
    "end": "1227440"
  },
  {
    "text": "we're going to talk about here's a website that i actually had no affiliation with at all but i like their",
    "start": "1227440",
    "end": "1232480"
  },
  {
    "text": "products a lot and it's called minnesotapureclear.com and this is one of those companies that",
    "start": "1232480",
    "end": "1238559"
  },
  {
    "text": "sell those giant uh ultra clear ice cubes that they use for the expensive cocktails",
    "start": "1238559",
    "end": "1244880"
  },
  {
    "text": "so like the ice cube that like fills up the whole glass so uh they make ice ultimately they just",
    "start": "1244880",
    "end": "1252400"
  },
  {
    "text": "make ice but it's really good ice cream application operates on both the client side and the",
    "start": "1252400",
    "end": "1259600"
  },
  {
    "text": "server side both above the water line and below it above the water line there's three core",
    "start": "1259600",
    "end": "1266400"
  },
  {
    "text": "pages there's a shopping cart a product details page and checkout these called back-end",
    "start": "1266400",
    "end": "1275039"
  },
  {
    "text": "services around customers products and orders there's even a third party reach",
    "start": "1275039",
    "end": "1282400"
  },
  {
    "text": "out where the client side will reach out to a third-party service called stripe to do credit card processing it's",
    "start": "1282400",
    "end": "1290159"
  },
  {
    "text": "a client-side interaction that only using javascript to punch out to stripe and return a token for processing",
    "start": "1290159",
    "end": "1298799"
  },
  {
    "text": "we need to understand how air tracking is going to plug into that code plug in to the client side unfortunately",
    "start": "1300159",
    "end": "1308480"
  },
  {
    "text": "there isn't a unified way for errors to manifest themselves in the browser",
    "start": "1308480",
    "end": "1314159"
  },
  {
    "text": "there's not one function that you can attach to and say tell me about errors there's",
    "start": "1314159",
    "end": "1319280"
  },
  {
    "text": "not one place that that happens it could be a globally unfilled exception or it",
    "start": "1319280",
    "end": "1325280"
  },
  {
    "text": "could be a network request that failed maybe something wrote a console error to the con or",
    "start": "1325280",
    "end": "1331039"
  },
  {
    "text": "wrote an air to the console because of this attaching uh error tracking code doesn't",
    "start": "1331039",
    "end": "1337760"
  },
  {
    "text": "plug in very easily and often we need to wrap different components of the browser",
    "start": "1337760",
    "end": "1343360"
  },
  {
    "text": "in order to catch errors from them directly here's an example of how that kind of thing works",
    "start": "1343360",
    "end": "1350640"
  },
  {
    "text": "this is an error wrapping function in javascript javascript allows you to redefine core",
    "start": "1350640",
    "end": "1357039"
  },
  {
    "text": "functions of the browser core functions of the platform and we can use that in order to add uh",
    "start": "1357039",
    "end": "1364240"
  },
  {
    "text": "instrumentation to our functions in this case we're wrapping console.console.error",
    "start": "1364240",
    "end": "1371679"
  },
  {
    "text": "we take a copy of that function as a rich error and then redefine it as our",
    "start": "1371679",
    "end": "1378080"
  },
  {
    "text": "own function that takes one or more messages and we'll do something with it something",
    "start": "1378080",
    "end": "1383840"
  },
  {
    "text": "we'll send it to our backend system or we'll aggregate it with our with with",
    "start": "1383840",
    "end": "1389200"
  },
  {
    "text": "other telemetry about what's happening and then we call through to the original function",
    "start": "1389200",
    "end": "1394480"
  },
  {
    "text": "with the original messages and this allows us to inject ourselves in all kinds of interesting places of",
    "start": "1394480",
    "end": "1400559"
  },
  {
    "text": "our client-side code and better understand what's happening",
    "start": "1400559",
    "end": "1406159"
  },
  {
    "text": "so what would we do in that basic situation well if we could capture all of these",
    "start": "1406480",
    "end": "1412159"
  },
  {
    "text": "errors all these errors happening from the code we could maybe even augment them with additional context",
    "start": "1412159",
    "end": "1418880"
  },
  {
    "text": "often a javascript error would just say you know n is undefined and i don't know why n is",
    "start": "1418880",
    "end": "1424400"
  },
  {
    "text": "undefined i don't even know what n is but if i could better understand what state my application was in what user it",
    "start": "1424400",
    "end": "1432159"
  },
  {
    "text": "was and what their session id happened to be and attach that to an error i could learn",
    "start": "1432159",
    "end": "1438960"
  },
  {
    "text": "more and so by adding some custom functions around that we could augment our errors before we",
    "start": "1438960",
    "end": "1445039"
  },
  {
    "text": "send them back so what kind of services would that look",
    "start": "1445039",
    "end": "1450960"
  },
  {
    "text": "like if we're able to capture errors through a set of function wrapping and and listening at different points",
    "start": "1450960",
    "end": "1457520"
  },
  {
    "text": "and augment those errors with additional contacts we need to send them back to some sort",
    "start": "1457520",
    "end": "1463760"
  },
  {
    "text": "of metrics api in our system store the data in a data structure and",
    "start": "1463760",
    "end": "1468880"
  },
  {
    "text": "do enhancements deduplication matching any other kind of analytics needed it",
    "start": "1468880",
    "end": "1476159"
  },
  {
    "text": "probably also needs to provide some alerting functionality so that you know when something happens",
    "start": "1476159",
    "end": "1481679"
  },
  {
    "text": "alternatively there is a number of tools available in that space to help you i build one of them called track gs that",
    "start": "1481679",
    "end": "1488400"
  },
  {
    "text": "i'm probably biased but i think it's pretty great",
    "start": "1488400",
    "end": "1492799"
  },
  {
    "text": "um all right",
    "start": "1498840",
    "end": "1502799"
  },
  {
    "text": "but what kind of errors are we talking about here like what you probably all write really",
    "start": "1504640",
    "end": "1511120"
  },
  {
    "text": "good code and so it's not like there's bugs in your system but error tracking in this way will",
    "start": "1511120",
    "end": "1517039"
  },
  {
    "text": "still catch things they'll still catch important failures things like type air strike checkout is",
    "start": "1517039",
    "end": "1523840"
  },
  {
    "text": "undefined this is a real air that was caught on pure and clear minnesota ice",
    "start": "1523840",
    "end": "1530000"
  },
  {
    "text": "and stripe stripe is there our checkout mechanism it's how we take credit cards stripe checkout is",
    "start": "1530000",
    "end": "1536880"
  },
  {
    "text": "undefined how would this happen well with some of our analytics we can see that this is",
    "start": "1536880",
    "end": "1542480"
  },
  {
    "text": "happening on our checkout page which which we could understand you know that's where we use stripe",
    "start": "1542480",
    "end": "1547520"
  },
  {
    "text": "it happens immediately on page load and packed in all browsers",
    "start": "1547520",
    "end": "1554400"
  },
  {
    "text": "if we capture this error and have the stack trace and source code for it we could see exactly where it's",
    "start": "1554400",
    "end": "1559760"
  },
  {
    "text": "happening and point to this script and it's happening right here we load a script from",
    "start": "1559760",
    "end": "1565799"
  },
  {
    "text": "js.stripe.com which is supposed to provide a stripe checkout api",
    "start": "1565799",
    "end": "1570880"
  },
  {
    "text": "and then we call that api to do something and then the magic of the third party happens",
    "start": "1570880",
    "end": "1576799"
  },
  {
    "text": "so why would this fail well what happens if js.stripe.com is down or",
    "start": "1576799",
    "end": "1584320"
  },
  {
    "text": "we fail to do a dns lookup or maybe the ssl handshake fails because our certificate is expired",
    "start": "1584320",
    "end": "1591440"
  },
  {
    "text": "any number of things can fail when you're reaching out to a new domain there's a whole nother set of overhead",
    "start": "1591440",
    "end": "1597520"
  },
  {
    "text": "that the browser has to do especially when it's reaching up to a different origin",
    "start": "1597520",
    "end": "1602799"
  },
  {
    "text": "and those things can make it fail and so stripe checkout would not be defined if stripe js didn't",
    "start": "1602799",
    "end": "1609679"
  },
  {
    "text": "exist and therefore the whole checkout mechanism would not work",
    "start": "1609679",
    "end": "1614880"
  },
  {
    "text": "does our application in this case handle that well this code doesn't this is a",
    "start": "1614880",
    "end": "1622159"
  },
  {
    "text": "very common error in client-side applications and most of them don't consider the",
    "start": "1622159",
    "end": "1627919"
  },
  {
    "text": "failure states of what happens when they're third parties or when their own scripts become unavailable",
    "start": "1627919",
    "end": "1634400"
  },
  {
    "text": "how do we fall back and don't show the user a checkout page that is broken",
    "start": "1634400",
    "end": "1641840"
  },
  {
    "text": "so this error impacted the checkout page and prevented some users from giving us",
    "start": "1643039",
    "end": "1648559"
  },
  {
    "text": "money services especially third-party services like stripe are never 100 reliable and we found a",
    "start": "1648559",
    "end": "1656480"
  },
  {
    "text": "bug here in our code that we didn't have a graceful fallback",
    "start": "1656480",
    "end": "1661840"
  },
  {
    "text": "when stripe was on offline let's look at another example of an error track unexpected token",
    "start": "1661840",
    "end": "1669679"
  },
  {
    "text": "angle bracket i bet many of you might have seen this air during your",
    "start": "1669679",
    "end": "1675039"
  },
  {
    "text": "development minnesota ice had this air on the shopping cart page",
    "start": "1675039",
    "end": "1680240"
  },
  {
    "text": "and the air tracking agent that they used uh showed them that this error would happen",
    "start": "1680240",
    "end": "1685600"
  },
  {
    "text": "immediately after a network request to the customers api",
    "start": "1685600",
    "end": "1691760"
  },
  {
    "text": "if we have the source code we're able to track exactly what was happening and we see it's part of this xhr request",
    "start": "1691760",
    "end": "1699679"
  },
  {
    "text": "we're setting up a new network transaction to go and send a uh a request to slash customers slash",
    "start": "1699679",
    "end": "1707679"
  },
  {
    "text": "me and when that comes back we parse the json to get you know our response object but",
    "start": "1707679",
    "end": "1714240"
  },
  {
    "text": "the error is being thrown immediately on json.parse why would json.parse explode with an",
    "start": "1714240",
    "end": "1721919"
  },
  {
    "text": "unexpected token oftentimes there are lots of layers in",
    "start": "1721919",
    "end": "1729360"
  },
  {
    "text": "our system between the client and the server load balancers",
    "start": "1729360",
    "end": "1734559"
  },
  {
    "text": "proxy servers gateways if any of these services go offline or",
    "start": "1734559",
    "end": "1740240"
  },
  {
    "text": "are misconfigured they can sometimes return errors and when they return errors they often",
    "start": "1740240",
    "end": "1746559"
  },
  {
    "text": "will return it in this form as a http error page and if our application is expecting json",
    "start": "1746559",
    "end": "1754159"
  },
  {
    "text": "and we get an http error page we'll try and parse",
    "start": "1754159",
    "end": "1759279"
  },
  {
    "text": "html as json and get unexpected token angle bracket this sort of error",
    "start": "1759279",
    "end": "1767200"
  },
  {
    "text": "affected our shopping cart and the ability to call customers but it also showed us a failure",
    "start": "1767200",
    "end": "1772720"
  },
  {
    "text": "condition for our customer service the customer service by itself is not",
    "start": "1772720",
    "end": "1778159"
  },
  {
    "text": "the only part we need to consider all of the bits between the service",
    "start": "1778159",
    "end": "1783279"
  },
  {
    "text": "and the consumer in our monitoring",
    "start": "1783279",
    "end": "1787600"
  },
  {
    "text": "error tracking gives us a better perspective into the completeness of our client-side",
    "start": "1788960",
    "end": "1794559"
  },
  {
    "text": "application for our customers it shows us browser incompatibilities",
    "start": "1794559",
    "end": "1800080"
  },
  {
    "text": "logical bugs in our code and third-party service failures and the api availability of our",
    "start": "1800080",
    "end": "1806640"
  },
  {
    "text": "application the real api ability availability not some false internal metric it gives",
    "start": "1806640",
    "end": "1814080"
  },
  {
    "text": "us real time and historical view of which components are offline or",
    "start": "1814080",
    "end": "1820840"
  },
  {
    "text": "broken uh what if a service is is not running right now",
    "start": "1820840",
    "end": "1826159"
  },
  {
    "text": "and what is the impact on a customer but what happens if a service is not",
    "start": "1826159",
    "end": "1832240"
  },
  {
    "text": "offline not broken but it's degrading how would we know that",
    "start": "1832240",
    "end": "1838640"
  },
  {
    "text": "well that's let's turn to our second point performance monitoring",
    "start": "1838640",
    "end": "1844159"
  },
  {
    "text": "performance monitoring is is going to help us understand when our system is slowing down",
    "start": "1844159",
    "end": "1851039"
  },
  {
    "text": "but not quite broken what do i mean when i say performance",
    "start": "1851039",
    "end": "1857520"
  },
  {
    "text": "performance monitoring specifically on the web is measuring the user perceived timings",
    "start": "1858320",
    "end": "1865279"
  },
  {
    "text": "of network transmissions user flows or functions the purpose of this",
    "start": "1865279",
    "end": "1871679"
  },
  {
    "text": "is to better understand the experience our end users are having with our site and whether or not they feel like our",
    "start": "1871679",
    "end": "1878480"
  },
  {
    "text": "site is slow or fast",
    "start": "1878480",
    "end": "1882320"
  },
  {
    "text": "so how do we measure this how do we get performance monitoring information we can plug an agent into the browser",
    "start": "1883519",
    "end": "1890960"
  },
  {
    "text": "just like everything else that we would do with the client side unlike error tracking modern browsers",
    "start": "1890960",
    "end": "1896399"
  },
  {
    "text": "provide a really accurate set of apis to measure performance and so this is relatively",
    "start": "1896399",
    "end": "1901840"
  },
  {
    "text": "easy to do here's an example",
    "start": "1901840",
    "end": "1907360"
  },
  {
    "text": "we would include an agent some sort of performance agent or observability agent in your code and",
    "start": "1907360",
    "end": "1914080"
  },
  {
    "text": "there's an api called the performance api which provides lots and lots of information gives us the timings of all",
    "start": "1914080",
    "end": "1921200"
  },
  {
    "text": "kinds of network transactions how long each step of a loading environment takes as well as custom",
    "start": "1921200",
    "end": "1927440"
  },
  {
    "text": "things like how long does it take the user to click add to cart once the page is loaded",
    "start": "1927440",
    "end": "1935679"
  },
  {
    "text": "we can build all of those things through interacting with the api in building custom metrics and such the",
    "start": "1935679",
    "end": "1943039"
  },
  {
    "text": "agent just needs to pluck off what bits of the performance that we want and it needs to send that off to our",
    "start": "1943039",
    "end": "1949440"
  },
  {
    "text": "servers again a performance agent like an error tracking agent would need to take that",
    "start": "1949440",
    "end": "1954640"
  },
  {
    "text": "data from the client side and send it somewhere else to be aggregated so that we could see a top-level perspective of how all of",
    "start": "1954640",
    "end": "1962640"
  },
  {
    "text": "our clients are doing this can be part of your core system storing the data and",
    "start": "1962640",
    "end": "1967679"
  },
  {
    "text": "data structure and providing charting and reporting and alerting capabilities forward",
    "start": "1967679",
    "end": "1972960"
  },
  {
    "text": "alternatively there's a number of tools available in this space as well i've been working on one there and that",
    "start": "1972960",
    "end": "1979279"
  },
  {
    "text": "is pretty cool um called request metrics which aims to make this pretty easy and cheap",
    "start": "1979279",
    "end": "1985919"
  },
  {
    "text": "but what does performance monitoring plus let's let's look at some examples from",
    "start": "1985919",
    "end": "1992080"
  },
  {
    "text": "minnesota ice first kind of performance alert is a",
    "start": "1992080",
    "end": "1997279"
  },
  {
    "text": "time based change so we normally expect a particular api",
    "start": "1997279",
    "end": "2002320"
  },
  {
    "text": "to run at a certain level performance it's going to respond within so many milliseconds and if it stops",
    "start": "2002320",
    "end": "2009279"
  },
  {
    "text": "doing that in aggregate like the median performance jumps by 500 percent well that's that's",
    "start": "2009279",
    "end": "2017039"
  },
  {
    "text": "an interesting that's an interesting thing to look at here's an example of that error and how it would be reflected",
    "start": "2017039",
    "end": "2023279"
  },
  {
    "text": "some charting we see that normally the the error or the performance rate of",
    "start": "2023279",
    "end": "2029120"
  },
  {
    "text": "the system is real real fast it's uh",
    "start": "2029120",
    "end": "2034960"
  },
  {
    "text": "the moving average is like 300 and some milliseconds so super quick response time but all of",
    "start": "2034960",
    "end": "2041039"
  },
  {
    "text": "a sudden it jumps up really really high and the average spikes up into over two seconds quite a",
    "start": "2041039",
    "end": "2048398"
  },
  {
    "text": "bit slower than we saw before so there was a uh",
    "start": "2048399",
    "end": "2053760"
  },
  {
    "text": "like a 20-ish or a 15-minute period of this error that or this performance slowdown that",
    "start": "2053760",
    "end": "2059919"
  },
  {
    "text": "impacted our customers the bottom chart here is called a flame",
    "start": "2059919",
    "end": "2065280"
  },
  {
    "text": "chart and it's really common in performance monitoring applications the area shows an increase in traffic",
    "start": "2065280",
    "end": "2072878"
  },
  {
    "text": "during this time and the warmer colors being shown indicate the performance has been slower",
    "start": "2072879",
    "end": "2079280"
  },
  {
    "text": "so you want lots of traffic and cool colors uh cool blues and greens and that sort of",
    "start": "2079280",
    "end": "2086079"
  },
  {
    "text": "thing in an ideal world so the increase in in traffic here may have been",
    "start": "2086079",
    "end": "2091760"
  },
  {
    "text": "related to the performance decrease",
    "start": "2091760",
    "end": "2096079"
  },
  {
    "text": "what does this impact well the orders api is called during the checkout process so",
    "start": "2096960",
    "end": "2103520"
  },
  {
    "text": "this is a really big deal this is where minnesota ice makes money but we don't yet know why it's slowed",
    "start": "2103520",
    "end": "2111200"
  },
  {
    "text": "down we just know that it slowed down from the end user's perspective and this is where the role of",
    "start": "2111200",
    "end": "2117920"
  },
  {
    "text": "server-side observability tooling comes in this is where your server monitoring",
    "start": "2117920",
    "end": "2123760"
  },
  {
    "text": "your server logs your server capacity tools would be able to respond and say why did this increase in performance",
    "start": "2123760",
    "end": "2130079"
  },
  {
    "text": "slow it down did we hit some sort of database threshold did we hit some sort of top out our ram on the box whatever",
    "start": "2130079",
    "end": "2138960"
  },
  {
    "text": "but what we do know is that this slowed down significantly from the end user's perception from",
    "start": "2138960",
    "end": "2145760"
  },
  {
    "text": "their perspective they saw this as an issue and that that should be more important",
    "start": "2145760",
    "end": "2153359"
  },
  {
    "text": "than any internal server-side measurement let's have another look at an example of",
    "start": "2153359",
    "end": "2159040"
  },
  {
    "text": "a performance alert now cart has a high layout shift",
    "start": "2159040",
    "end": "2165760"
  },
  {
    "text": "what is a layout shift layout shift is part of a newer set of performance metrics called the core",
    "start": "2165760",
    "end": "2173040"
  },
  {
    "text": "web vitals the google has been very very prominent about pushing so much that the core web vitals are",
    "start": "2173040",
    "end": "2179440"
  },
  {
    "text": "going to be part of search ranking this year layout shift is this really",
    "start": "2179440",
    "end": "2186880"
  },
  {
    "text": "annoying experience that you might have run into a web page is loading and just as you want to click something",
    "start": "2186880",
    "end": "2194160"
  },
  {
    "text": "an ad pops in and pushes things out of the way it doesn't have to be an ad",
    "start": "2194160",
    "end": "2199359"
  },
  {
    "text": "layout shift happens anytime something that has already been painted",
    "start": "2199359",
    "end": "2204560"
  },
  {
    "text": "in the in the web page is moved around because of asynchronous loading",
    "start": "2204560",
    "end": "2210560"
  },
  {
    "text": "so we try to click a button but we miss because something got injected this is",
    "start": "2210560",
    "end": "2216480"
  },
  {
    "text": "really frustrating for end users so we can monitor that there are apis to",
    "start": "2216480",
    "end": "2222000"
  },
  {
    "text": "monitor this those those actions on our web page and we can report",
    "start": "2222000",
    "end": "2227599"
  },
  {
    "text": "when the cart page has a high layout shift it's usually called in a metric called",
    "start": "2227599",
    "end": "2233839"
  },
  {
    "text": "the cumulative layout shift the total number of times and the size of the pixel area that",
    "start": "2233839",
    "end": "2240400"
  },
  {
    "text": "moved the acronym that you might have seen referenced is cls something",
    "start": "2240400",
    "end": "2247040"
  },
  {
    "text": "is causing a lot of it on the cart page perhaps trying to load you know an",
    "start": "2247040",
    "end": "2253839"
  },
  {
    "text": "asynchronous a bit of related products perhaps marketing dropped a new tag on the page",
    "start": "2253839",
    "end": "2260079"
  },
  {
    "text": "without us knowing about but it's reflecting a negative cumulative layout shift score",
    "start": "2260079",
    "end": "2266480"
  },
  {
    "text": "here's how web vitals are usually shown they're usually just as green yellow and red green being",
    "start": "2266480",
    "end": "2272960"
  },
  {
    "text": "good experience yellow being an okay experience and red being a bad experience and",
    "start": "2272960",
    "end": "2278560"
  },
  {
    "text": "usually what we're looking for is about 75 mark so what is the excuse that 75",
    "start": "2278560",
    "end": "2284640"
  },
  {
    "text": "of our users have unfortunately in this case it looks like the 75 mark is over",
    "start": "2284640",
    "end": "2290960"
  },
  {
    "text": "the red threshold it over 75 of our users are having a poor experience right now so this is a",
    "start": "2290960",
    "end": "2297520"
  },
  {
    "text": "situation that we should definitely look into and fix",
    "start": "2297520",
    "end": "2302160"
  },
  {
    "text": "especially because i want to underline it the web vitals are going to be part of your search ranking in the very near",
    "start": "2302640",
    "end": "2309680"
  },
  {
    "text": "future and so a e-commerce company like minnesota ice would be very very uh tied to their",
    "start": "2309680",
    "end": "2316880"
  },
  {
    "text": "search rankings and if they lose search rankings that's going to affect the bottom line of their business",
    "start": "2316880",
    "end": "2323760"
  },
  {
    "text": "let's move on to the third part of this usage analytics and how it ties to",
    "start": "2324480",
    "end": "2330720"
  },
  {
    "text": "client-side observability usage analytics you've probably heard",
    "start": "2330720",
    "end": "2336720"
  },
  {
    "text": "that maybe you've even used it what i call this is measuring user",
    "start": "2336720",
    "end": "2342880"
  },
  {
    "text": "traffic movement and actions through our web pages",
    "start": "2342880",
    "end": "2348400"
  },
  {
    "text": "it's a valuable insight for everyone not just your marketing team because it",
    "start": "2348400",
    "end": "2354400"
  },
  {
    "text": "shows what your users are actually doing and how they're actually interacting with the things",
    "start": "2354400",
    "end": "2360320"
  },
  {
    "text": "that we've built usage analytics doesn't really need",
    "start": "2360320",
    "end": "2366000"
  },
  {
    "text": "anything too complicated from the browser it's just some user code on when",
    "start": "2366000",
    "end": "2371760"
  },
  {
    "text": "you want to mark an interesting action and how long it might have taken we rely on some application code to",
    "start": "2371760",
    "end": "2378880"
  },
  {
    "text": "specify to specifically tell us when something noteworthy has happened",
    "start": "2378880",
    "end": "2384720"
  },
  {
    "text": "here's an example it probably looks really similar to other uh analytics tools you've used you pull",
    "start": "2384800",
    "end": "2391359"
  },
  {
    "text": "in an agent either an analytics agent or a general observability agent and when you want to record something",
    "start": "2391359",
    "end": "2397599"
  },
  {
    "text": "you send an event a custom event a page view a video watch uh add to cart and then",
    "start": "2397599",
    "end": "2404640"
  },
  {
    "text": "whatever extra properties you want it should look real familiar especially if you use the popular tools",
    "start": "2404640",
    "end": "2410960"
  },
  {
    "text": "like google analytics once we have the data we need to funnel",
    "start": "2410960",
    "end": "2417839"
  },
  {
    "text": "it off to our services again because the data on the client side doesn't do us any good",
    "start": "2417839",
    "end": "2423040"
  },
  {
    "text": "we need to understand what our analytics are in aggregate pulling it back to our system putting it",
    "start": "2423040",
    "end": "2428560"
  },
  {
    "text": "in the data structure managing that data etc alternatively there's of course",
    "start": "2428560",
    "end": "2434000"
  },
  {
    "text": "a number of third-party services that do this most famously you've seen google google",
    "start": "2434000",
    "end": "2439680"
  },
  {
    "text": "analytics and their free product there's a privacy focused one called fathom that's really good",
    "start": "2439680",
    "end": "2445200"
  },
  {
    "text": "and recently cloudflare has announced a new privacy uh privacy focus analytics tool as part of",
    "start": "2445200",
    "end": "2452079"
  },
  {
    "text": "their suite of tools but pretty it's pretty basic but for a lot of websites it would be sufficient",
    "start": "2452079",
    "end": "2460400"
  },
  {
    "text": "um there's thousands and thousands more so i might have excluded your favorite analytics tool but there's lots and lots",
    "start": "2460560",
    "end": "2466880"
  },
  {
    "text": "of options there but why should you do this why what observability questions",
    "start": "2466880",
    "end": "2472560"
  },
  {
    "text": "does analytics answer for us ultimately what analytics is answering",
    "start": "2472560",
    "end": "2480079"
  },
  {
    "text": "for us is whether or not a change has been acceptable if we fixed a bug or we've improved",
    "start": "2480079",
    "end": "2487200"
  },
  {
    "text": "performance or we've changed a feature is that a good thing did we do a good job did we accomplish",
    "start": "2487200",
    "end": "2494480"
  },
  {
    "text": "our goal and the goals of our end users when something changes in our system it's analytics that can tell us whether",
    "start": "2494480",
    "end": "2501440"
  },
  {
    "text": "or not we were successful analytics tells us this with a concept",
    "start": "2501440",
    "end": "2507599"
  },
  {
    "text": "called funnels a funnel is the cons concept that we use",
    "start": "2507599",
    "end": "2513359"
  },
  {
    "text": "to look at our analytics data let's look at an example so at the top",
    "start": "2513359",
    "end": "2519040"
  },
  {
    "text": "we have our traffic all of our all the people who visit our account and we consider those the people coming",
    "start": "2519040",
    "end": "2526240"
  },
  {
    "text": "in to our funnel we defined the start of this funnel event like landing on our page they landed on the",
    "start": "2526240",
    "end": "2533440"
  },
  {
    "text": "front page of minnesota ice and we measure all the traffic that starts",
    "start": "2533440",
    "end": "2538640"
  },
  {
    "text": "the fun itself is one or more events that we want the user to complete",
    "start": "2538640",
    "end": "2545359"
  },
  {
    "text": "as part of their visit we want them to go to their shopping cart page we want or we want them to go the product page",
    "start": "2545359",
    "end": "2551280"
  },
  {
    "text": "we want something to their cart and we want them to check out some of the users will do those things",
    "start": "2551280",
    "end": "2558240"
  },
  {
    "text": "and those are completions somebody successfully completed the funnel other people won't finish everything and",
    "start": "2558240",
    "end": "2565359"
  },
  {
    "text": "those abandoned out what um this the ratio of completions",
    "start": "2565359",
    "end": "2574480"
  },
  {
    "text": "teaches us how effective our application is at getting the user to complete a task let's look at an",
    "start": "2574480",
    "end": "2581839"
  },
  {
    "text": "example the checkout flow for minnesota ice is super important this is where they",
    "start": "2581839",
    "end": "2588720"
  },
  {
    "text": "make money as it is for all e-commerce stores and it's comprised of a checkout page",
    "start": "2588720",
    "end": "2596240"
  },
  {
    "text": "and third-party integration with stripe and a server-side interaction with the",
    "start": "2596240",
    "end": "2603520"
  },
  {
    "text": "order service let's look at some analytics to see how well this is working",
    "start": "2603520",
    "end": "2610960"
  },
  {
    "text": "we define our funnel as all of the traffic that lands on the checkout page there could be other",
    "start": "2610960",
    "end": "2617280"
  },
  {
    "text": "steps in this funnel such as entering a payment method providing a shipping address",
    "start": "2617280",
    "end": "2622560"
  },
  {
    "text": "or selecting the shipping method today on minnesota ice about 25 percent",
    "start": "2622560",
    "end": "2629040"
  },
  {
    "text": "of users complete this funnel purchasing their cart which is a little bit better than the average for the market that they",
    "start": "2629040",
    "end": "2635280"
  },
  {
    "text": "play in the rest of the users in their shopping cart for whatever reason they decide they want cheap crappy ice",
    "start": "2635280",
    "end": "2642560"
  },
  {
    "text": "and don't complete so that's pretty good that's that's a",
    "start": "2642560",
    "end": "2647920"
  },
  {
    "text": "pretty good baseline for what things uh should be but what if it changes what",
    "start": "2647920",
    "end": "2653359"
  },
  {
    "text": "if what if we want to change things around well earlier we saw there was a performance problem with our",
    "start": "2653359",
    "end": "2660240"
  },
  {
    "text": "orders api that normally that api returns in about 300 milliseconds",
    "start": "2660240",
    "end": "2666240"
  },
  {
    "text": "and we saw that orders endpoint started slowing down significantly sometimes you know a thousand",
    "start": "2666240",
    "end": "2672800"
  },
  {
    "text": "milliseconds or worse the i throughout this seemed okay things",
    "start": "2672800",
    "end": "2678079"
  },
  {
    "text": "worked but they were slower is it okay like do we need to task our developers",
    "start": "2678079",
    "end": "2684560"
  },
  {
    "text": "with uh understanding and fixing that performance problem or is it just okay and then the user",
    "start": "2684560",
    "end": "2691440"
  },
  {
    "text": "won't mind the usage analytics funnel can answer that for us",
    "start": "2691440",
    "end": "2697519"
  },
  {
    "text": "so the orders api also changed the funnel during the time that the",
    "start": "2697680",
    "end": "2703119"
  },
  {
    "text": "performance api changed we can look and see at our funnel and see if there's any correlation",
    "start": "2703119",
    "end": "2709599"
  },
  {
    "text": "and in fact in this case there was that the purchases the the completions of our funnel went",
    "start": "2709599",
    "end": "2715920"
  },
  {
    "text": "from 25 down to 12 percent at this time we",
    "start": "2715920",
    "end": "2721440"
  },
  {
    "text": "know that these are tied we know that these are correlated and as i'm sure we're all sick of",
    "start": "2721440",
    "end": "2726960"
  },
  {
    "text": "hearing correlation does not equal causation we don't know what caused this drop-off",
    "start": "2726960",
    "end": "2733040"
  },
  {
    "text": "it could be market factors it could be it was really cold that day and nobody really wants to buy ice it could be any number of things",
    "start": "2733040",
    "end": "2740800"
  },
  {
    "text": "but we do know that at the same time the performance slowed down the purchases",
    "start": "2740800",
    "end": "2746800"
  },
  {
    "text": "fell off if this was my money and i was making the decisions",
    "start": "2746800",
    "end": "2752160"
  },
  {
    "text": "i think i'd call that thousand millisecond response time unacceptable for my users and start",
    "start": "2752160",
    "end": "2757599"
  },
  {
    "text": "reviewing those changes and how to fix that",
    "start": "2757599",
    "end": "2762400"
  },
  {
    "text": "okay we've talked about error tracking performance monitoring and usage",
    "start": "2762640",
    "end": "2768400"
  },
  {
    "text": "analytics let's look at some limitations here even if we added",
    "start": "2768400",
    "end": "2773760"
  },
  {
    "text": "all three of these cons to our system we still wouldn't know anything about it we would know most",
    "start": "2773760",
    "end": "2780400"
  },
  {
    "text": "things we would have a much better handle on end user experience but there are some things that client-side observability can't do",
    "start": "2780400",
    "end": "2789520"
  },
  {
    "text": "first limitation if there is no traffic you won't know anything sometimes",
    "start": "2789520",
    "end": "2796160"
  },
  {
    "text": "applications are very cyclical and you might have weekends when literally nobody is on the system you might have a",
    "start": "2796160",
    "end": "2803839"
  },
  {
    "text": "holiday nobody's on the system you might be just launching and there's nobody online yet",
    "start": "2803839",
    "end": "2809760"
  },
  {
    "text": "if you don't have any clients you have nothing to observe and so you don't get any perspective",
    "start": "2809760",
    "end": "2816000"
  },
  {
    "text": "into whether your server-side system is operating correctly if there are no clients arguably though",
    "start": "2816000",
    "end": "2823040"
  },
  {
    "text": "whether your server-side system is operating is probably a little less important if you don't have any clients but a absence of traffic does not tell",
    "start": "2823040",
    "end": "2830960"
  },
  {
    "text": "you that the system is online you'd have to have some other way of knowing that",
    "start": "2830960",
    "end": "2837440"
  },
  {
    "text": "the second limitation and probably the worst in my opinion is the client side information is really",
    "start": "2838640",
    "end": "2845839"
  },
  {
    "text": "really noisy because you have millions of distributed instances",
    "start": "2845839",
    "end": "2850960"
  },
  {
    "text": "your error data your performance data and your analytics data is going to come in it's",
    "start": "2850960",
    "end": "2856240"
  },
  {
    "text": "going to have lots and lots of noise in it you're going to have a bunch of users who are having good experiences",
    "start": "2856240",
    "end": "2862240"
  },
  {
    "text": "you're going to have a few people who access your system from outer mongolia on a 10 year old android phone and",
    "start": "2862240",
    "end": "2868079"
  },
  {
    "text": "nothing is going well for them you have a huge range of people interacting and you need to",
    "start": "2868079",
    "end": "2873839"
  },
  {
    "text": "sort through that noise to figure out what the signal is there's a bunch of of statistical",
    "start": "2873839",
    "end": "2879680"
  },
  {
    "text": "tooling and charting modeling that we can use to understand this but it does have a certain amount of",
    "start": "2879680",
    "end": "2884880"
  },
  {
    "text": "mental overhead in order to look at this data and understand what it means third-party tools can help here a lot",
    "start": "2884880",
    "end": "2892720"
  },
  {
    "text": "but there's only so much we can do limitation number three data privacy",
    "start": "2892720",
    "end": "2900800"
  },
  {
    "text": "we're collecting a lot of data from the client side as part of observability efforts",
    "start": "2900800",
    "end": "2906720"
  },
  {
    "text": "that client-side data is often nvu's data it is information about the user and",
    "start": "2906720",
    "end": "2912559"
  },
  {
    "text": "their browser and what they're clicking on and how fast their system is and where they're located and that sort of",
    "start": "2912559",
    "end": "2918559"
  },
  {
    "text": "thing and so this needs to be balanced against data privacy the end user has an expectation of",
    "start": "2918559",
    "end": "2924960"
  },
  {
    "text": "privacy that we do not want to violate this this is especially important today",
    "start": "2924960",
    "end": "2930079"
  },
  {
    "text": "with the rise of legislation such as the gdpr and the californian ccpa and many others",
    "start": "2930079",
    "end": "2935839"
  },
  {
    "text": "around the world but we need to be very careful not to capture personally identifiable data about end",
    "start": "2935839",
    "end": "2942720"
  },
  {
    "text": "users limitation number four networks and",
    "start": "2942720",
    "end": "2949119"
  },
  {
    "text": "geography sometimes you'll have a bunch of really slow clients due to external factors that",
    "start": "2949119",
    "end": "2956480"
  },
  {
    "text": "are totally beyond your control if your website doesn't cater to an audience of people",
    "start": "2956480",
    "end": "2962960"
  },
  {
    "text": "people in siberia a bunch of traffic from siberia can create all kinds of trouble for your",
    "start": "2962960",
    "end": "2970079"
  },
  {
    "text": "performance expectations you might get a whole bunch of traffic and skew your averages and your medians",
    "start": "2970079",
    "end": "2976160"
  },
  {
    "text": "to be way slower than they would be but it's really just a bunch of people or a bunch of bots that you don't really",
    "start": "2976160",
    "end": "2982400"
  },
  {
    "text": "care about this is part a big part of the noise problem",
    "start": "2982400",
    "end": "2988000"
  },
  {
    "text": "traceability traceability is a really important concept in most",
    "start": "2989440",
    "end": "2994480"
  },
  {
    "text": "observability conversations the client side doesn't really give you a very good perspective in that",
    "start": "2994480",
    "end": "3001040"
  },
  {
    "text": "if you have a deep uh set of microservices that call each other a really valuable",
    "start": "3001040",
    "end": "3007760"
  },
  {
    "text": "tool for you is to understand how one service calls another and to pass that traceability uh that string of",
    "start": "3007760",
    "end": "3015280"
  },
  {
    "text": "traceability through on those calls obviously the client side can't really show you all of that you",
    "start": "3015280",
    "end": "3022079"
  },
  {
    "text": "probably do not want to reveal all of that to your client side to monitor it is just a shell on the top if you",
    "start": "3022079",
    "end": "3028720"
  },
  {
    "text": "have a complex back-end system you probably still want to have an observability and traceability effort",
    "start": "3028720",
    "end": "3036000"
  },
  {
    "text": "below the water let's recap today we talked about",
    "start": "3036000",
    "end": "3043839"
  },
  {
    "text": "client-side observability and how it gives you an end user centric perspective",
    "start": "3043839",
    "end": "3050960"
  },
  {
    "text": "into how your application is operating i'm arguing that is in fact the most important part of",
    "start": "3050960",
    "end": "3057839"
  },
  {
    "text": "any observability effort in your company because it reflects what the user actually cares about",
    "start": "3057839",
    "end": "3064880"
  },
  {
    "text": "we talked about error tracking as a way to understand the exceptional states that happen in your",
    "start": "3064880",
    "end": "3070640"
  },
  {
    "text": "client side caused by service failures or compatibility issues we talked about",
    "start": "3070640",
    "end": "3075920"
  },
  {
    "text": "performance monitoring to understand how your services might degrade or how the structure of your system",
    "start": "3075920",
    "end": "3081760"
  },
  {
    "text": "might cause frustrating experiences and we talked about analytics to",
    "start": "3081760",
    "end": "3086880"
  },
  {
    "text": "understand whether our performance and errors and features are actually doing good things for the user",
    "start": "3086880",
    "end": "3094319"
  },
  {
    "text": "i spend a lot of time thinking and working and making slides and making architectures",
    "start": "3094319",
    "end": "3100640"
  },
  {
    "text": "and coding on this topic most of my ideas on this are codified in",
    "start": "3100640",
    "end": "3106000"
  },
  {
    "text": "a couple of the things that i work on most of my ideas are on air tracking are in track js where we try and solve a",
    "start": "3106000",
    "end": "3112400"
  },
  {
    "text": "bunch of noise problems we capture things like the browsers the pages users affected",
    "start": "3112400",
    "end": "3118319"
  },
  {
    "text": "inline code references and telemetry about like how did the user get to this error and",
    "start": "3118319",
    "end": "3124079"
  },
  {
    "text": "most recently in request metrics where we're trying to solve noise and distribution problems to",
    "start": "3124079",
    "end": "3129839"
  },
  {
    "text": "give you a better simpler perspective on how your how end users are experiencing the",
    "start": "3129839",
    "end": "3135520"
  },
  {
    "text": "performance of your site uh that's what i work on most time and",
    "start": "3135520",
    "end": "3140800"
  },
  {
    "text": "this was observable web applications i hope it was valuable for you and i will be here for q a if anybody",
    "start": "3140800",
    "end": "3147680"
  },
  {
    "text": "has any questions or would like to chat with me more thank you so much for your time and your",
    "start": "3147680",
    "end": "3154640"
  },
  {
    "text": "attention",
    "start": "3161079",
    "end": "3164079"
  }
]