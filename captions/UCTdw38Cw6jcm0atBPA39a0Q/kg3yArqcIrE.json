[
  {
    "text": "so this break is intended apparently more people are coming in so this is the",
    "start": "4000",
    "end": "9240"
  },
  {
    "text": "real queue so uh I take it that you can hear me cool um it's nice to see so many",
    "start": "9240",
    "end": "18320"
  },
  {
    "text": "people interested in grpc Inn net here today because uh I I will admit that",
    "start": "18320",
    "end": "25760"
  },
  {
    "text": "grpc is a niche Topic in a way uh and people at conferences are interested in",
    "start": "25760",
    "end": "31960"
  },
  {
    "text": "what it is and what it can do but they never get to put it in real production",
    "start": "31960",
    "end": "38239"
  },
  {
    "text": "environments yeah so I really hope in the next years this will change so grpc",
    "start": "38239",
    "end": "44239"
  },
  {
    "text": "deep dive I'm going to show you a lot of things today but also I'm going to show you a lot of uh theoretical stuff so my",
    "start": "44239",
    "end": "51640"
  },
  {
    "text": "name is ARA skto I'm from Romania I'm a software architect uh I teach. net from time to time uh I often blog um more",
    "start": "51640",
    "end": "59640"
  },
  {
    "text": "often now that before uh you can find me at ira. codes yay I always congratulate",
    "start": "59640",
    "end": "66479"
  },
  {
    "text": "me for that domain it was a money I spent a while ago um I wrote a",
    "start": "66479",
    "end": "74520"
  },
  {
    "text": "book hopefully this will change so if you know someone that wants to learn web",
    "start": "74520",
    "end": "80520"
  },
  {
    "text": "API this might be the book step-by-step approach but you're not here to uh to",
    "start": "80520",
    "end": "86159"
  },
  {
    "text": "hear about my book you're here to hear about grpc and and I'm going to ask you who here loves monoliths because I know",
    "start": "86159",
    "end": "94360"
  },
  {
    "text": "that is popular nowadays monoliths right so um",
    "start": "94360",
    "end": "100600"
  },
  {
    "text": "we're hearing a lot of modular monoliths or microservices it's it's a hype",
    "start": "100600",
    "end": "106479"
  },
  {
    "text": "nowadays but I'm going to admit that for me as a developer the monolith",
    "start": "106479",
    "end": "112000"
  },
  {
    "text": "application was very nice to work with uh I remember huge solutions that when",
    "start": "112000",
    "end": "117039"
  },
  {
    "text": "we built we could go outside and gather coffee because that amount of time it took to to build the entire solution",
    "start": "117039",
    "end": "124119"
  },
  {
    "text": "well I think back in the day like 15 years ago that was due to the resources",
    "start": "124119",
    "end": "129840"
  },
  {
    "text": "of the PCS that we had for development and not to the monolit itself uh the",
    "start": "129840",
    "end": "136440"
  },
  {
    "text": "deal with these monoliths is that it these are not impossible to scale but to",
    "start": "136440",
    "end": "141720"
  },
  {
    "text": "scale a monolith uh it's very costly because you also scale the things that",
    "start": "141720",
    "end": "147760"
  },
  {
    "text": "you don't want to scale It's All or Nothing you scale it all or not at all okay so",
    "start": "147760",
    "end": "155360"
  },
  {
    "text": "uh also when it comes to deployments we might have some bad",
    "start": "155360",
    "end": "160560"
  },
  {
    "text": "experiences again there it's also All or nothing either the deploy works or it",
    "start": "160560",
    "end": "165800"
  },
  {
    "text": "doesn't okay we have tools and Technologies to prevent that but we realized that when the applications are",
    "start": "165800",
    "end": "172560"
  },
  {
    "text": "written like this front end and back end in the same application things are not",
    "start": "172560",
    "end": "177760"
  },
  {
    "text": "going smoothly every single time but we started with these kind of applications",
    "start": "177760",
    "end": "183200"
  },
  {
    "text": "with monoliths or modular or not everything were all together right so I",
    "start": "183200",
    "end": "188959"
  },
  {
    "text": "remember ASP MVC for example it was basically a similar app architecture",
    "start": "188959",
    "end": "195319"
  },
  {
    "text": "wise we have front end uh that was rendered from the server side and then we started to have a small separation in",
    "start": "195319",
    "end": "202560"
  },
  {
    "text": "it or web forms anyone web forms yay",
    "start": "202560",
    "end": "207640"
  },
  {
    "text": "cheers to you web forms uh then we realized that rest as a",
    "start": "207640",
    "end": "213040"
  },
  {
    "text": "concept was a thing and we started to create abis and front-end apps and then",
    "start": "213040",
    "end": "219439"
  },
  {
    "text": "we started to distribute them and we started to have things like this a frontend app that consumes several apis",
    "start": "219439",
    "end": "226879"
  },
  {
    "text": "or several backends right and what happens behind those backends were",
    "start": "226879",
    "end": "232000"
  },
  {
    "text": "either we had a single database or we had several databases or why not we",
    "start": "232000",
    "end": "237959"
  },
  {
    "text": "could integrate with different other seconds so architecture in here it was",
    "start": "237959",
    "end": "243400"
  },
  {
    "text": "pretty messy so those kinds of architectures allowed us to have a thing",
    "start": "243400",
    "end": "248879"
  },
  {
    "text": "like this where polyglot environment was possible uh now we could consume maybe a",
    "start": "248879",
    "end": "256160"
  },
  {
    "text": "Go app from a node.js that talks with the net core app and stuff like that",
    "start": "256160",
    "end": "261519"
  },
  {
    "text": "because we had a common ground between all of them and that Common Ground was",
    "start": "261519",
    "end": "267320"
  },
  {
    "text": "left while while you you can rest so I'm going to ask you and I'm",
    "start": "267320",
    "end": "272919"
  },
  {
    "text": "going to ask you to be uh honest who here ever has written a rest",
    "start": "272919",
    "end": "279440"
  },
  {
    "text": "API yay so pretty much every single person in this room written has written",
    "start": "279440",
    "end": "285440"
  },
  {
    "text": "rest apis cool another question so who here ever wrote a truly rest API it",
    "start": "285440",
    "end": "293960"
  },
  {
    "text": "those guidelines I see no hands one hand two hands three hands cool because basically",
    "start": "293960",
    "end": "303000"
  },
  {
    "text": "let's face it we kind of do HTTP apis right we expose Json over HTTP",
    "start": "303000",
    "end": "311400"
  },
  {
    "text": "to be consumed from other consumers right so we do not follow all the rest",
    "start": "311400",
    "end": "317360"
  },
  {
    "text": "principles in it whole we handpicked every single principle guiding principle",
    "start": "317360",
    "end": "322520"
  },
  {
    "text": "around rest that suited us right so at least nowadays we're using the right",
    "start": "322520",
    "end": "327639"
  },
  {
    "text": "verbs at least hopefully status codes right so we're leveraging the power of",
    "start": "327639",
    "end": "333440"
  },
  {
    "text": "HTTP protocol itself which is which is a plus because I remember a day when uh",
    "start": "333440",
    "end": "341080"
  },
  {
    "text": "the team wrote end points where we use post as a",
    "start": "341080",
    "end": "347360"
  },
  {
    "text": "main verb either to create a new res resource either to update an existing",
    "start": "347360",
    "end": "352880"
  },
  {
    "text": "resource that wasn't the way to go right so what's wrong with rest well nothing",
    "start": "352880",
    "end": "358400"
  },
  {
    "text": "is wrong with rest because basically no one will ever replace rest unless we",
    "start": "358400",
    "end": "365199"
  },
  {
    "text": "have the special scenario for it so it's nothing wrong with rest itself it has its own purpose and grpc is not here to",
    "start": "365199",
    "end": "373000"
  },
  {
    "text": "replace rest itself it has and it always",
    "start": "373000",
    "end": "378160"
  },
  {
    "text": "it will always have its own applicability right there are other Technologies we need to be aware of as",
    "start": "378160",
    "end": "385240"
  },
  {
    "text": "blazer for example or grpc right so here it comes remote procedure calls so a",
    "start": "385240",
    "end": "392280"
  },
  {
    "text": "remote procedur call as a concept has been around since the 60 y we tend to",
    "start": "392280",
    "end": "397639"
  },
  {
    "text": "reinvent the wheel or at least some of the concepts tend to resurface from time",
    "start": "397639",
    "end": "403039"
  },
  {
    "text": "to time right so RPC as a concept will make a system behave like um it's in the",
    "start": "403039",
    "end": "409039"
  },
  {
    "text": "same uh process maybe even though it isn't so we have here some",
    "start": "409039",
    "end": "416720"
  },
  {
    "text": "code that does some things for example we have a bounded context creates an",
    "start": "416720",
    "end": "422599"
  },
  {
    "text": "order passes in an order object then we have a payment processing the payment for that order and then if the payment",
    "start": "422599",
    "end": "429440"
  },
  {
    "text": "is successful maybe we arrange the shipping for that specific order right",
    "start": "429440",
    "end": "435000"
  },
  {
    "text": "nothing fancy here it's method calls right is there anything that tells us",
    "start": "435000",
    "end": "441160"
  },
  {
    "text": "that we're calling across the network for every single line of code here for every single statement except the F no",
    "start": "441160",
    "end": "449199"
  },
  {
    "text": "there is isn't because the purpose of an RPC concept is to make the network",
    "start": "449199",
    "end": "455759"
  },
  {
    "text": "communication transparent okay so now we're calling a method but in fact we're",
    "start": "455759",
    "end": "461120"
  },
  {
    "text": "doing a request over the network okay but we're kind of not aware of it so",
    "start": "461120",
    "end": "466720"
  },
  {
    "text": "this is where rest uh differs from grpc okay because with rest we will have HTTP",
    "start": "466720",
    "end": "473479"
  },
  {
    "text": "clients where we would do requests consciously okay we have a client and we",
    "start": "473479",
    "end": "479520"
  },
  {
    "text": "create a request we're going to pass in a parameter and we're going to pass the response back look at the status code",
    "start": "479520",
    "end": "485720"
  },
  {
    "text": "and um things like that but with RPC well we just call methods send",
    "start": "485720",
    "end": "490759"
  },
  {
    "text": "parameters and that's it so it's nothing telling us that Well Network call",
    "start": "490759",
    "end": "496560"
  },
  {
    "text": "Network call because it's a distributed system okay so RPC will it has this",
    "start": "496560",
    "end": "502000"
  },
  {
    "text": "colum method looking f for us as developers it's prone to errors because of that we maybe tend to abuse it",
    "start": "502000",
    "end": "510159"
  },
  {
    "text": "but the main goal is to have a distributed system behave like a monolith for our life to be easier yeah",
    "start": "510159",
    "end": "517680"
  },
  {
    "text": "so um how it does it is by making the network communication transparent we",
    "start": "517680",
    "end": "523279"
  },
  {
    "text": "look through it and it's like it's not there so enough with the concept what is",
    "start": "523279",
    "end": "529399"
  },
  {
    "text": "grpc right so grpc has been around for a while since that time started as a",
    "start": "529399",
    "end": "536240"
  },
  {
    "text": "Google sa internal project they open sourced it and and in September 2019 we",
    "start": "536240",
    "end": "541760"
  },
  {
    "text": "got it in net qu with bad tooling but we got it and then it opened up our eyes",
    "start": "541760",
    "end": "548079"
  },
  {
    "text": "and we realize okay that's another tool to learn and another tool to learn to to",
    "start": "548079",
    "end": "553399"
  },
  {
    "text": "have in our tool belt so what happened back then is with grpc is that we got it",
    "start": "553399",
    "end": "560240"
  },
  {
    "text": "in visual studio and we got a new type of project in Visual Studio grpc service",
    "start": "560240",
    "end": "566399"
  },
  {
    "text": "and what the IDE did was to basically wrap a a compiler with visual cubes okay",
    "start": "566399",
    "end": "574440"
  },
  {
    "text": "because if we want to work with grpc we can run command lines and get the same",
    "start": "574440",
    "end": "579560"
  },
  {
    "text": "thing but the ID makes it easier for us so JPC it's contract based we will have",
    "start": "579560",
    "end": "586040"
  },
  {
    "text": "no code references so I'm going to show you what I mean by this it uses http2 so",
    "start": "586040",
    "end": "592000"
  },
  {
    "text": "um up your speed so learn about http2 because this is used under the hood",
    "start": "592000",
    "end": "597560"
  },
  {
    "text": "which will make it f faster it has an different serialization uh of type",
    "start": "597560",
    "end": "602839"
  },
  {
    "text": "protuff which gives us smaller payloads and it's available in many languages and this is very powerful because once we",
    "start": "602839",
    "end": "610600"
  },
  {
    "text": "have a this file written we can compile it to obtain code in go or no GS",
    "start": "610600",
    "end": "617720"
  },
  {
    "text": "JavaScript or in C++ or in C only by having this this common ground and that",
    "start": "617720",
    "end": "624839"
  },
  {
    "text": "code generation out of the box comes by using the compiler of this protool protocol buffers file so where it sits",
    "start": "624839",
    "end": "632959"
  },
  {
    "text": "if we would have a rest API we would have a client that makes a request to a server super simple okay now in between",
    "start": "632959",
    "end": "640360"
  },
  {
    "text": "we introduced this special file named Proto which is written in a special",
    "start": "640360",
    "end": "646399"
  },
  {
    "text": "language that is neither C neither Java uh named protocol buffers it's a",
    "start": "646399",
    "end": "652160"
  },
  {
    "text": "specification file that allows us to write code that is agnostic of any",
    "start": "652160",
    "end": "657360"
  },
  {
    "text": "language that we know so now that we have this in between we can write this file that has a special syntax as I told",
    "start": "657360",
    "end": "665240"
  },
  {
    "text": "you for example in the first line we have to specify that we have Proto three",
    "start": "665240",
    "end": "670720"
  },
  {
    "text": "as the syntax then we have to specify that for CP we want to uh that this to",
    "start": "670720",
    "end": "676480"
  },
  {
    "text": "be generated under my first grpc namespace otherwise we will generate it",
    "start": "676480",
    "end": "682560"
  },
  {
    "text": "as fibon and then what will we do we just specify what we want to expose so",
    "start": "682560",
    "end": "689480"
  },
  {
    "text": "here we have the keyword service named fibo and inside it we have an RPC",
    "start": "689480",
    "end": "694519"
  },
  {
    "text": "operation named compute Fibonacci of type requested number that returns a Fibonacci",
    "start": "694519",
    "end": "700440"
  },
  {
    "text": "result okay next what we have to do is to specify which are the types that this",
    "start": "700440",
    "end": "707320"
  },
  {
    "text": "service is using so we specify that by using the keyword message we give it the",
    "start": "707320",
    "end": "712360"
  },
  {
    "text": "type name and then inside it we Define the parameters okay so bear in mind that",
    "start": "712360",
    "end": "718360"
  },
  {
    "text": "number equal one that is not an assignment is the order in the by string okay so we we have more we would have",
    "start": "718360",
    "end": "725480"
  },
  {
    "text": "equal 2 equal three um stuff like that so what basically happens is that the",
    "start": "725480",
    "end": "731480"
  },
  {
    "text": "protocol compiler takes this file wraps it and generates code and that code is",
    "start": "731480",
    "end": "737600"
  },
  {
    "text": "written in whatever we want and need okay so a service becomes a method a",
    "start": "737600",
    "end": "744720"
  },
  {
    "text": "message type becomes a C Class yeah so we take code and you use it to basically",
    "start": "744720",
    "end": "752079"
  },
  {
    "text": "consume and uh expose these kind of operations so this is pretty similar to",
    "start": "752079",
    "end": "758279"
  },
  {
    "text": "let's say wisle remember soap in a way",
    "start": "758279",
    "end": "763360"
  },
  {
    "text": "we had that file where we specifi what operations are available which are the types and it was very cumbersome well we",
    "start": "763360",
    "end": "771279"
  },
  {
    "text": "kind of can compare this with wisle files wisle uh Pages because we look",
    "start": "771279",
    "end": "777720"
  },
  {
    "text": "inside here say okay we have message named the requested number and this will become a CP class okay so um in this",
    "start": "777720",
    "end": "786040"
  },
  {
    "text": "perspective those are similar but grpc is super power powerful because of that",
    "start": "786040",
    "end": "791800"
  },
  {
    "text": "actually so we have on grpc four types or modes that work um on the protocol",
    "start": "791800",
    "end": "800320"
  },
  {
    "text": "level so we have unary server streaming client streaming and bir directional streaming uh keep in mind that when we",
    "start": "800320",
    "end": "807639"
  },
  {
    "text": "have grpc we we have a connection on http2 and inside that connection all",
    "start": "807639",
    "end": "813600"
  },
  {
    "text": "these four mode can can work okay so the unary one is where a unary a client",
    "start": "813600",
    "end": "821360"
  },
  {
    "text": "opens up a Communication channel to a server the server receiv receives a request and replies we specify s uh such",
    "start": "821360",
    "end": "829480"
  },
  {
    "text": "a request by simply saying hey this is an RPC operation or method uh it's name",
    "start": "829480",
    "end": "835480"
  },
  {
    "text": "like this it has an input parameter and it returns that yeah it's very easy for",
    "start": "835480",
    "end": "840680"
  },
  {
    "text": "the server streaming part still the client needs to open up the communication channel so it's not",
    "start": "840680",
    "end": "846519"
  },
  {
    "text": "possible directly like signal R for example where uh the server opens up a communication Channel and sends data",
    "start": "846519",
    "end": "853079"
  },
  {
    "text": "still the client needs to hey I want to talk with you and then it will open a Communication channel so server",
    "start": "853079",
    "end": "859720"
  },
  {
    "text": "streaming when it sends back several chunks of data over the same TCP",
    "start": "859720",
    "end": "865800"
  },
  {
    "text": "connection to show that method is like that we simply add the keyword stream",
    "start": "865800",
    "end": "872399"
  },
  {
    "text": "towards the part that it interest is us so here returns a stream of Fibonacci",
    "start": "872399",
    "end": "877839"
  },
  {
    "text": "result that means the server will send back as a response several chunks of",
    "start": "877839",
    "end": "882920"
  },
  {
    "text": "data so in return client streaming does the reverse opens up a communication",
    "start": "882920",
    "end": "889120"
  },
  {
    "text": "Channel then it sends several chunks of data and the server responds with only",
    "start": "889120",
    "end": "894600"
  },
  {
    "text": "one yeah many in single out that's the the difference so think about scenari where we want to",
    "start": "894600",
    "end": "902360"
  },
  {
    "text": "upload files we can chunk them and send them over the same DP connection without",
    "start": "902360",
    "end": "908519"
  },
  {
    "text": "opening new DCP connection every single time for each uh bit or maybe if we want",
    "start": "908519",
    "end": "915279"
  },
  {
    "text": "to collect data from time to time from different sensors that would be a good scenario right so no communication",
    "start": "915279",
    "end": "922839"
  },
  {
    "text": "Channel open every single time so we depict this as being stream keyword to",
    "start": "922839",
    "end": "928160"
  },
  {
    "text": "the part that has many uh bits in this part the client is sending many and it",
    "start": "928160",
    "end": "934279"
  },
  {
    "text": "gets one single thing back the easiest one B directional is a combination of",
    "start": "934279",
    "end": "940040"
  },
  {
    "text": "the previous two when we have several ins and several outs okay and we simply",
    "start": "940040",
    "end": "946120"
  },
  {
    "text": "add the keyword stream to the both part to the input parameter and to the result",
    "start": "946120",
    "end": "951480"
  },
  {
    "text": "cool enough with the talking um let's see some code first of all",
    "start": "951480",
    "end": "959319"
  },
  {
    "text": "you'll uh okay I'm going to escape",
    "start": "959319",
    "end": "964120"
  },
  {
    "text": "this so you you will have access to this source code if you want to run it yourself so uh don't worry about it so",
    "start": "966160",
    "end": "973560"
  },
  {
    "text": "first we will see here a grpc project the default template that gives you um a",
    "start": "973560",
    "end": "981440"
  },
  {
    "text": "few things out of the box so we have the program CS that is already familiar we have the app setting. Json of course and",
    "start": "981440",
    "end": "988199"
  },
  {
    "text": "then we have two two new files folders in fact we see here that we have no",
    "start": "988199",
    "end": "993519"
  },
  {
    "text": "controllers as we would have in web API for example but we have a protos and",
    "start": "993519",
    "end": "1000600"
  },
  {
    "text": "services so this Proto file is the specification that that I show you where",
    "start": "1000600",
    "end": "1006240"
  },
  {
    "text": "in protocol buffers language we specify what we want to expose we want to expose",
    "start": "1006240",
    "end": "1011279"
  },
  {
    "text": "a service named greeter with an operation named say hello that gets a hello request in and returns a hello",
    "start": "1011279",
    "end": "1018519"
  },
  {
    "text": "reply okay and then we Define the types that become C classes so after the",
    "start": "1018519",
    "end": "1024400"
  },
  {
    "text": "compilation these two types become C classes and I'm going to show you this",
    "start": "1024400",
    "end": "1030839"
  },
  {
    "text": "if you look in object debug version you're going to find the protos and then you'll see two c classes",
    "start": "1030839",
    "end": "1039839"
  },
  {
    "text": "so these two c classes have funky code with a wording here do not edit because",
    "start": "1039839",
    "end": "1047319"
  },
  {
    "text": "that's the code generation bit yeah so you'll see that funky stuff is happening but that",
    "start": "1047319",
    "end": "1054559"
  },
  {
    "text": "funky stuff uh helps us to not reinvent the wheel we simply pass in the protocol",
    "start": "1054559",
    "end": "1059840"
  },
  {
    "text": "file and then we'll be able to consume it from a consumer okay um and also grid",
    "start": "1059840",
    "end": "1065840"
  },
  {
    "text": "JPC is a simle class yeah so in 2019 this thing didn't happen very well in in",
    "start": "1065840",
    "end": "1073440"
  },
  {
    "text": "visual studio and you always had to again delete the file and recompile to make sure that the classes that you're",
    "start": "1073440",
    "end": "1078840"
  },
  {
    "text": "specifying are visible yeah so if you get uh things like this things are going",
    "start": "1078840",
    "end": "1084799"
  },
  {
    "text": "great the compiler was invoked so I'm going to hide this so once we have this specification yeah this is what I want",
    "start": "1084799",
    "end": "1091600"
  },
  {
    "text": "to expose then we can give the actual implementation to those okay so how we",
    "start": "1091600",
    "end": "1097600"
  },
  {
    "text": "can do this simply by adding a class we name it a service the template names this greater service and you'll see here",
    "start": "1097600",
    "end": "1104799"
  },
  {
    "text": "that it extends a base class well this Base Class is generated by in that funky",
    "start": "1104799",
    "end": "1110640"
  },
  {
    "text": "code that I just show you by the compiler and we're be we are able sorry so we are able to just dig in",
    "start": "1110640",
    "end": "1120080"
  },
  {
    "text": "and override what we need in a yeah so we can override the say hello method",
    "start": "1120080",
    "end": "1125480"
  },
  {
    "text": "that comes from the base class we use inheritance polymorphism and things from object-oriented programming that we",
    "start": "1125480",
    "end": "1132039"
  },
  {
    "text": "already know and give actual business logic in there yeah so that is it is you get Base Class generated you override to",
    "start": "1132039",
    "end": "1139559"
  },
  {
    "text": "provide your own logic okay in other way this greater service",
    "start": "1139559",
    "end": "1145760"
  },
  {
    "text": "can have everything that you need you can inject repository DB contacts other",
    "start": "1145760",
    "end": "1151159"
  },
  {
    "text": "services that you need in there to actually have the business logic implementer bloggers whatever you need",
    "start": "1151159",
    "end": "1158600"
  },
  {
    "text": "it's a simple class all together okay so with this being",
    "start": "1158600",
    "end": "1164520"
  },
  {
    "text": "done uh you'll notice here that under the packages there's nothing",
    "start": "1164520",
    "end": "1169720"
  },
  {
    "text": "fancy just things that are common and this is everything that you need to know",
    "start": "1169720",
    "end": "1175840"
  },
  {
    "text": "about the basic uh template yeah so now let's see it in action in here you'll",
    "start": "1175840",
    "end": "1181559"
  },
  {
    "text": "see a server implemented because you need something to be up and running in order to consume it yeah so in here you",
    "start": "1181559",
    "end": "1188880"
  },
  {
    "text": "have the grid Proto where we have four methods in order to see how these are",
    "start": "1188880",
    "end": "1195880"
  },
  {
    "text": "going we have a method of type request with a property name content value and",
    "start": "1195880",
    "end": "1201120"
  },
  {
    "text": "the message of type response which has a message okay so I defined this four and",
    "start": "1201120",
    "end": "1208120"
  },
  {
    "text": "I also gave those some implementation because we have to consume something so",
    "start": "1208120",
    "end": "1213360"
  },
  {
    "text": "I use the same approach I extended the base class and then I went here and",
    "start": "1213360",
    "end": "1219520"
  },
  {
    "text": "override every single method that I exposed because if I do this you'll see",
    "start": "1219520",
    "end": "1227400"
  },
  {
    "text": "that is uh is suggested say hello once you start like",
    "start": "1227400",
    "end": "1233200"
  },
  {
    "text": "this whoop once you start writing public",
    "start": "1233200",
    "end": "1240480"
  },
  {
    "text": "override now I have everything implemented but you'll get prompted by IDE what you can override in here okay",
    "start": "1240480",
    "end": "1248320"
  },
  {
    "text": "so let's look at the first one which is of type un you'll see that it's named say hello it has one request parameter",
    "start": "1248320",
    "end": "1255760"
  },
  {
    "text": "the deal with this request parameter is that that it has to be present it's not",
    "start": "1255760",
    "end": "1261720"
  },
  {
    "text": "like with a void method that has no parameters you pass nothing you have to",
    "start": "1261720",
    "end": "1266880"
  },
  {
    "text": "pass something even though that's something might be empty and you generate there a message that has",
    "start": "1266880",
    "end": "1272240"
  },
  {
    "text": "nothing in it but you simply have to pass it in and then you'll see that you",
    "start": "1272240",
    "end": "1277520"
  },
  {
    "text": "have a second parameter that is named server call context from where we can",
    "start": "1277520",
    "end": "1282960"
  },
  {
    "text": "you can extract things like the HTTP context which said at the protocol level",
    "start": "1282960",
    "end": "1289000"
  },
  {
    "text": "this is the same thing that you get in web API for example or in MVC okay you extract it from there or if you want to",
    "start": "1289000",
    "end": "1296840"
  },
  {
    "text": "extract the user information if you have authentication enabled you can go there",
    "start": "1296840",
    "end": "1302000"
  },
  {
    "text": "and just extract claims you can uh get the context um certificates whatever you",
    "start": "1302000",
    "end": "1308799"
  },
  {
    "text": "want to get from the HTTP level you can get it from there okay also you can uh",
    "start": "1308799",
    "end": "1315880"
  },
  {
    "text": "mimic like request headers and you can access those but those request headers",
    "start": "1315880",
    "end": "1322840"
  },
  {
    "text": "as they are depicted here are specific to grpc request and by the end of the",
    "start": "1322840",
    "end": "1328360"
  },
  {
    "text": "talk you'll understand what's the difference cool so now that the service uh it's implemented I'm going to save it",
    "start": "1328360",
    "end": "1335640"
  },
  {
    "text": "and I'm going to have two console uh up so I'm going to do net",
    "start": "1335640",
    "end": "1342039"
  },
  {
    "text": "run and I'm going to have a server up and running yeah listening um for",
    "start": "1342039",
    "end": "1347840"
  },
  {
    "text": "requests and on the right hand side I will have the client that will consume This Server",
    "start": "1347840",
    "end": "1354400"
  },
  {
    "text": "operations okay so I'm going to show you how the client looks and I have here an",
    "start": "1354400",
    "end": "1359679"
  },
  {
    "text": "unary folder that contains a console app the easiest way to test things console",
    "start": "1359679",
    "end": "1366320"
  },
  {
    "text": "apps okay so you'll see as I told you there are no code",
    "start": "1366320",
    "end": "1372000"
  },
  {
    "text": "references so now that I have the server uper running I'm not clicking anywhere",
    "start": "1372000",
    "end": "1377559"
  },
  {
    "text": "here to say add project reference to reference the server okay but what I do",
    "start": "1377559",
    "end": "1382720"
  },
  {
    "text": "is to edit the Cs project and to add a",
    "start": "1382720",
    "end": "1388640"
  },
  {
    "text": "node this is the node specific here so it's a protuff link that points to that",
    "start": "1388640",
    "end": "1395240"
  },
  {
    "text": "protocol file from the server yeah so also behaves like a client grpc services",
    "start": "1395240",
    "end": "1401600"
  },
  {
    "text": "equaling client yeah so this tells the the server basically hey this app",
    "start": "1401600",
    "end": "1406720"
  },
  {
    "text": "behaves like a client and also you'll see here small thing",
    "start": "1406720",
    "end": "1411919"
  },
  {
    "text": "link uh that creates a rather funy looking folder is here you see a small",
    "start": "1411919",
    "end": "1420240"
  },
  {
    "text": "arrow in there it creates like a virtual folder for the protocol files so you can see it at the the project level so if",
    "start": "1420240",
    "end": "1427640"
  },
  {
    "text": "you click in it and you open the protocol file you'll see that basically the same one that comes from here from",
    "start": "1427640",
    "end": "1434840"
  },
  {
    "text": "the server part in here yeah but I do not reference code so in our case we won't get any",
    "start": "1434840",
    "end": "1442559"
  },
  {
    "text": "spaghetti code distributed by new get packages just because we create clients",
    "start": "1442559",
    "end": "1448400"
  },
  {
    "text": "to distribute in the application stuff like that simply",
    "start": "1448400",
    "end": "1453799"
  },
  {
    "text": "the things that have these two parts in common is the protocol file so now you can I know store it in a different",
    "start": "1453799",
    "end": "1461039"
  },
  {
    "text": "repository and point the projects to that or find the mechanism in order to distribute the protocol files because",
    "start": "1461039",
    "end": "1467279"
  },
  {
    "text": "that's your source of through now okay so a thing that Visual Studio did which",
    "start": "1467279",
    "end": "1474320"
  },
  {
    "text": "I really like is to allow us to do this so right click uh not project",
    "start": "1474320",
    "end": "1482480"
  },
  {
    "text": "reference add and you have here connected service that's an option that",
    "start": "1482480",
    "end": "1487760"
  },
  {
    "text": "now works and you click the plus sign and you'll select here grpc click next",
    "start": "1487760",
    "end": "1493880"
  },
  {
    "text": "I'm going to go there and browse and find your specific uh protocol file that you want to use for example I'm going go",
    "start": "1493880",
    "end": "1500360"
  },
  {
    "text": "to the server part I'm going to use the protos I'm going to select the protos I'm going to click open and in here we",
    "start": "1500360",
    "end": "1507760"
  },
  {
    "text": "going to select which kind of application I am in context so for example I'm going to behave like a",
    "start": "1507760",
    "end": "1513880"
  },
  {
    "text": "client I'm going to select that also if you have a grpc running somewhere in",
    "start": "1513880",
    "end": "1519760"
  },
  {
    "text": "Cloud you can point the URL in there and it will uh also help you to generate the",
    "start": "1519760",
    "end": "1524919"
  },
  {
    "text": "code and if you click next and then finish what what this will do is to add",
    "start": "1524919",
    "end": "1530600"
  },
  {
    "text": "all the packages that you need without you needing to think M I need the grpc tools or other package it will install",
    "start": "1530600",
    "end": "1538039"
  },
  {
    "text": "everything for you so it makes it very straightforward to work with it because if you look here there are a few",
    "start": "1538039",
    "end": "1544080"
  },
  {
    "text": "packages namely four that you need to install every single time yeah and by",
    "start": "1544080",
    "end": "1549120"
  },
  {
    "text": "using this ID shortcut just gets it out of your hair okay so this is the UN one",
    "start": "1549120",
    "end": "1556080"
  },
  {
    "text": "and by looking at the code to see how easy it is to be consumed you'll see that it's very",
    "start": "1556080",
    "end": "1562200"
  },
  {
    "text": "similar to what you already know from web API but this time we're opening something that is called grpc channel so",
    "start": "1562200",
    "end": "1570720"
  },
  {
    "text": "this channel is like a virtual pipe I can say that points to a specific",
    "start": "1570720",
    "end": "1577720"
  },
  {
    "text": "address where the server is up and running and allows you to connect to it in order to get data through and from so",
    "start": "1577720",
    "end": "1585640"
  },
  {
    "text": "I will know that this is the port where my server lives and then I I will be",
    "start": "1585640",
    "end": "1590880"
  },
  {
    "text": "able to create a client you see Greer Greer client to deal with this uh Greer",
    "start": "1590880",
    "end": "1596000"
  },
  {
    "text": "client is that is autogenerated or generated for us I didn't write it it's there for us to",
    "start": "1596000",
    "end": "1603679"
  },
  {
    "text": "use um and we simply pass in the channel and we have a client ready to use that's",
    "start": "1603679",
    "end": "1608960"
  },
  {
    "text": "it so in order to actually make the request you can say hey client and we're",
    "start": "1608960",
    "end": "1614279"
  },
  {
    "text": "going to be prompted with the options that we have so we have here here the bir directional client stream say hello",
    "start": "1614279",
    "end": "1621440"
  },
  {
    "text": "server stream and stuff like that so all our methods are there just because we share the protocol buffers file with",
    "start": "1621440",
    "end": "1628600"
  },
  {
    "text": "this specific project okay so I'm going to leave in the say hello we have to",
    "start": "1628600",
    "end": "1633919"
  },
  {
    "text": "pass in the request part so I created an object here I a new request type call it",
    "start": "1633919",
    "end": "1641559"
  },
  {
    "text": "instantiate content value put something in it and then pass it in as a parameter",
    "start": "1641559",
    "end": "1647760"
  },
  {
    "text": "okay so now let's say it's running so we have the server listening and we have on",
    "start": "1647760",
    "end": "1654399"
  },
  {
    "text": "the right hand side the client.net",
    "start": "1654399",
    "end": "1660320"
  },
  {
    "text": "run so hopefully",
    "start": "1660559",
    "end": "1666039"
  },
  {
    "text": "hopefully you see it's sending hello NDC and then I get hello back with hello",
    "start": "1666039",
    "end": "1672679"
  },
  {
    "text": "NDC value from Local Host 5000 server",
    "start": "1672679",
    "end": "1678399"
  },
  {
    "text": "this is the commander acting out on the server side here on the left we can see",
    "start": "1678399",
    "end": "1683519"
  },
  {
    "text": "some information about what really happened in the request so you'll see that the request finished this is the",
    "start": "1683519",
    "end": "1689519"
  },
  {
    "text": "protocol version that it was used it was a post request remember the comparison",
    "start": "1689519",
    "end": "1695840"
  },
  {
    "text": "with whistle and soap everything Post Yeah in JPC everything get a post so we",
    "start": "1695840",
    "end": "1702519"
  },
  {
    "text": "have no way of using other verbs than post because this is how it works it packs everything and it sends everything",
    "start": "1702519",
    "end": "1708720"
  },
  {
    "text": "as post even though you're calling to get something yeah so in here you'll see",
    "start": "1708720",
    "end": "1714679"
  },
  {
    "text": "that is calling the operation name say hello it gets 200 as being the okay",
    "start": "1714679",
    "end": "1719919"
  },
  {
    "text": "status code and it's of M type application grpc and it took this amount",
    "start": "1719919",
    "end": "1724960"
  },
  {
    "text": "of time yeah so this happens with every single request that we're going to do",
    "start": "1724960",
    "end": "1730320"
  },
  {
    "text": "Post requests so this is the unary the other ones you'll see here we have",
    "start": "1730320",
    "end": "1737200"
  },
  {
    "text": "client streaming which is similar a console project that will stream to the server by looping to",
    "start": "1737200",
    "end": "1744720"
  },
  {
    "text": "this value and simply writing to the request stream the I value the index value and sending a new request type",
    "start": "1744720",
    "end": "1752399"
  },
  {
    "text": "every single time yeah so remember this happens inside the HTTP protocol so inside the HTTP protocol there are small",
    "start": "1752399",
    "end": "1759279"
  },
  {
    "text": "bits that travel while the connection is open yeah so one level below the protocol level okay so let's see running",
    "start": "1759279",
    "end": "1768880"
  },
  {
    "text": "client streaming server the same",
    "start": "1768880",
    "end": "1774559"
  },
  {
    "text": "listening client is streaming so supposedly now the client will send that",
    "start": "1775320",
    "end": "1780880"
  },
  {
    "text": "Loop index is sending what happens yeah so that's why on the left",
    "start": "1780880",
    "end": "1789000"
  },
  {
    "text": "hand side we see I got a request with content value and this I'm going to make it smaller a bit and you'll see here the",
    "start": "1789000",
    "end": "1796799"
  },
  {
    "text": "request has finished http2 post client stream the status code of typ",
    "start": "1796799",
    "end": "1802640"
  },
  {
    "text": "application grpc okay and in here we got this value as being the last value that",
    "start": "1802640",
    "end": "1809000"
  },
  {
    "text": "the server received a single response a similar thing will happen",
    "start": "1809000",
    "end": "1814159"
  },
  {
    "text": "with the server streaming but kind of in",
    "start": "1814159",
    "end": "1819240"
  },
  {
    "text": "Reverse oh couldn't find what server streaming",
    "start": "1819240",
    "end": "1826200"
  },
  {
    "text": "apparently M Miss fingers crossed so now the servers",
    "start": "1828120",
    "end": "1836640"
  },
  {
    "text": "will send many bits of data to our client",
    "start": "1836640",
    "end": "1842559"
  },
  {
    "text": "if this is what intended to show you so you're getting timed out okay why it timed out because I configured it uh as",
    "start": "1842559",
    "end": "1850039"
  },
  {
    "text": "such so if we look at the server streaming project still a console nothing changed but we'll have here",
    "start": "1850039",
    "end": "1859639"
  },
  {
    "text": "for address we have a client we can call the cancellation token Source that's",
    "start": "1859639",
    "end": "1865600"
  },
  {
    "text": "super powerful and we can make a streaming call but also we can set a",
    "start": "1865600",
    "end": "1871720"
  },
  {
    "text": "deadline with that request so basically we're saying hey uh if you do not hear",
    "start": "1871720",
    "end": "1876919"
  },
  {
    "text": "back or response in this amount of time kill it yeah so this why we get the",
    "start": "1876919",
    "end": "1882320"
  },
  {
    "text": "streaming timed out so if I basically",
    "start": "1882320",
    "end": "1887919"
  },
  {
    "text": "comment this out it's better to have everything like this because I know it will",
    "start": "1887919",
    "end": "1894679"
  },
  {
    "text": "work and I run it",
    "start": "1894679",
    "end": "1898398"
  },
  {
    "text": "again you'll see that we get a lot of hellos from the server okay with another",
    "start": "1899960",
    "end": "1907240"
  },
  {
    "text": "additional things that I'm going to show you too so server sent these values back",
    "start": "1907240",
    "end": "1913240"
  },
  {
    "text": "in uh one thing to emphasize is that this happens over single TCP connection",
    "start": "1913240",
    "end": "1919159"
  },
  {
    "text": "yeah so no new uh connection are open do net run for bir",
    "start": "1919159",
    "end": "1926240"
  },
  {
    "text": "directional and we wait these are not such big",
    "start": "1927760",
    "end": "1934399"
  },
  {
    "text": "values just because yeah so we have sending this eyes and that we get the eyes back yeah",
    "start": "1934399",
    "end": "1941960"
  },
  {
    "text": "these are ordered because this is how it behaves but don't expect the ordering to",
    "start": "1941960",
    "end": "1947639"
  },
  {
    "text": "be like this in every single case because it's not okay cool let's get back to",
    "start": "1947639",
    "end": "1955679"
  },
  {
    "text": "it grpc has a concept not only that it has some different ways that um of",
    "start": "1955679",
    "end": "1964039"
  },
  {
    "text": "handling things but it also has status codes that are different so we know we",
    "start": "1964039",
    "end": "1970039"
  },
  {
    "text": "all know the status codes 401 I'm a teapot yeah 404 from HTTP okay but when",
    "start": "1970039",
    "end": "1977559"
  },
  {
    "text": "you we're talking about grpc we're talking about a collection collection an",
    "start": "1977559",
    "end": "1983159"
  },
  {
    "text": "enumeration in fact in code of 16 of them that are specific to grpc because",
    "start": "1983159",
    "end": "1988519"
  },
  {
    "text": "grpc request happens underneath the HTTP protocol so we get uh doubling of status",
    "start": "1988519",
    "end": "1995399"
  },
  {
    "text": "codes okay so these are different so how can we know that something is happening",
    "start": "1995399",
    "end": "2001320"
  },
  {
    "text": "bad or not depending on the status CES that we we have well we look at the",
    "start": "2001320",
    "end": "2008880"
  },
  {
    "text": "exceptions I hope this is big enough so when something bad happens we throw exceptions and those exceptions are of",
    "start": "2008880",
    "end": "2016320"
  },
  {
    "text": "type RPC exception okay and um we can filter by a specific property of that",
    "start": "2016320",
    "end": "2023000"
  },
  {
    "text": "RPC exception and we look at this status code enum which is that that I told you we",
    "start": "2023000",
    "end": "2031440"
  },
  {
    "text": "have okay out of range permission denied unavailable unknown aborted cancel data",
    "start": "2031440",
    "end": "2039480"
  },
  {
    "text": "loss and stuff like that these are specific to grpc itself okay and if you want to distinguish between uh all of",
    "start": "2039480",
    "end": "2046840"
  },
  {
    "text": "these we simply can catch differently and just look at the status code and I",
    "start": "2046840",
    "end": "2052760"
  },
  {
    "text": "don't know log things or do your own business logic in there yeah but this is how you can differentiate by status",
    "start": "2052760",
    "end": "2060320"
  },
  {
    "text": "codes and grpc Status codes because those things are different okay um I have some some more",
    "start": "2060320",
    "end": "2068200"
  },
  {
    "text": "things here like request headers and request headers are a funny thing so we",
    "start": "2068200",
    "end": "2075280"
  },
  {
    "text": "have request headers at the protocol level but we also have request header at grpc level which is are nothing more",
    "start": "2075280",
    "end": "2083040"
  },
  {
    "text": "than key value pairs that are added to the grpc request itself um yeah so this",
    "start": "2083040",
    "end": "2091079"
  },
  {
    "text": "is just a second going to have you here",
    "start": "2091079",
    "end": "2097119"
  },
  {
    "text": "request headers with get value and stuff like that yeah key values that are added to the grpc request itself uh these are",
    "start": "2097800",
    "end": "2105839"
  },
  {
    "text": "funny types named metadata of type entry where we pass in a key and a value and",
    "start": "2105839",
    "end": "2112240"
  },
  {
    "text": "that's what we use and we simply attach them to the either response where we",
    "start": "2112240",
    "end": "2118079"
  },
  {
    "text": "read them so depending on where you're sending them uh we're using the same type metadata entry but if we're sending",
    "start": "2118079",
    "end": "2126200"
  },
  {
    "text": "it with the response we attach them to something that is called response trailers and if we send them with the",
    "start": "2126200",
    "end": "2132880"
  },
  {
    "text": "grpc request we attach them to the request itself yeah so it that's why I told you that it's a funny thing like",
    "start": "2132880",
    "end": "2139640"
  },
  {
    "text": "this so we have say hello in here we have metad data entry first key give it",
    "start": "2139640",
    "end": "2146480"
  },
  {
    "text": "a value second key give it a value and then we passed in as the headers with",
    "start": "2146480",
    "end": "2151880"
  },
  {
    "text": "the request itself and I'm going to leave this commented out here just to you to be able to run it yourself yeah",
    "start": "2151880",
    "end": "2159839"
  },
  {
    "text": "so basically they had no way of um tackling the things that are neither",
    "start": "2159839",
    "end": "2165920"
  },
  {
    "text": "part of the request itself for grpc and they didn't belong either at the HTTP",
    "start": "2165920",
    "end": "2171400"
  },
  {
    "text": "protocol level so they had to invent things yeah so this why they invented this key value pairs to attach either",
    "start": "2171400",
    "end": "2178839"
  },
  {
    "text": "with the request of grpc either sended the end under the name trailers the",
    "start": "2178839",
    "end": "2184920"
  },
  {
    "text": "thing with trailers is that for example if we have a server streaming the",
    "start": "2184920",
    "end": "2190359"
  },
  {
    "text": "trailers are sent at the end only when all the messages are finished to be sent",
    "start": "2190359",
    "end": "2196599"
  },
  {
    "text": "so we if we have 20 uh responses to send the trailers will get at the end yeah so",
    "start": "2196599",
    "end": "2203280"
  },
  {
    "text": "this is the the main difference cool so this is one thing response and request",
    "start": "2203280",
    "end": "2209079"
  },
  {
    "text": "trailers and some other things that we can tweak is that with JPC we",
    "start": "2209079",
    "end": "2216240"
  },
  {
    "text": "can uh tweak for example the maximum receive message size with grpc you",
    "start": "2216240",
    "end": "2222680"
  },
  {
    "text": "cannot send like gigabytes of data with a grpc request yeah so you will have to",
    "start": "2222680",
    "end": "2228119"
  },
  {
    "text": "tweak in different scenarios maybe you do not want things that are bigger than",
    "start": "2228119",
    "end": "2233359"
  },
  {
    "text": "two megabytes you can tweak those in here or to send or receive a similar",
    "start": "2233359",
    "end": "2238760"
  },
  {
    "text": "thing we can configure things like compression levels which is very useful in some cases we can specify the",
    "start": "2238760",
    "end": "2246000"
  },
  {
    "text": "compression algorithms or you can add your own yeah so this is a case by case scenario if you want to",
    "start": "2246000",
    "end": "2254119"
  },
  {
    "text": "uh twe this in a way also we have a things that is named Interceptor an",
    "start": "2254119",
    "end": "2261240"
  },
  {
    "text": "Interceptor uh it works in a way like a middleware these middle Wares at",
    "start": "2261240",
    "end": "2266280"
  },
  {
    "text": "application Level but Interceptor work at grpc level so depending on the part",
    "start": "2266280",
    "end": "2272680"
  },
  {
    "text": "where you're putting them either on the client side or on the server side those are called server Interceptor or client",
    "start": "2272680",
    "end": "2279520"
  },
  {
    "text": "interceptors yeah basically a way of injecting yourself into the requests of the grpc pipeline and the",
    "start": "2279520",
    "end": "2287079"
  },
  {
    "text": "response in a similar way but not application wide just per grpc request",
    "start": "2287079",
    "end": "2293160"
  },
  {
    "text": "security related well we have all authentication types that we have with",
    "start": "2293160",
    "end": "2299839"
  },
  {
    "text": "web API with one small mention that if you have scenarios where you have",
    "start": "2299839",
    "end": "2306079"
  },
  {
    "text": "Windows Authentication maybe you have uh that won't work due to",
    "start": "2306079",
    "end": "2311760"
  },
  {
    "text": "the fact of http2 that won't work with Windows authentication but when it comes",
    "start": "2311760",
    "end": "2318240"
  },
  {
    "text": "to authentication at grpc we have two ways of adding that at the channel level so you can put things like uh claims",
    "start": "2318240",
    "end": "2326720"
  },
  {
    "text": "that will be generic and every client that will be created with that specific channel will have the same um",
    "start": "2326720",
    "end": "2333880"
  },
  {
    "text": "authentication things or at the connection level yeah so if you want it to be wider or smaller or",
    "start": "2333880",
    "end": "2341079"
  },
  {
    "text": "you want to combine both of them yeah supported client certificates jvt o",
    "start": "2341079",
    "end": "2348920"
  },
  {
    "text": "open ID WS Federation you can check Microsoft documentation if you have a funky scenario around it but since it's",
    "start": "2348920",
    "end": "2355960"
  },
  {
    "text": "a request you can add things in that specific request by using guess what",
    "start": "2355960",
    "end": "2361280"
  },
  {
    "text": "headers right the key value pairs that you we we add and from there you can extract some things",
    "start": "2361280",
    "end": "2368000"
  },
  {
    "text": "so there are some other things that grpc should do awesome and I want to talk with you about those because are very",
    "start": "2368000",
    "end": "2374720"
  },
  {
    "text": "important and I think these are more important than how the the internals work uh and one of them is named grpc",
    "start": "2374720",
    "end": "2382680"
  },
  {
    "text": "transcoding and this transcoding",
    "start": "2382680",
    "end": "2387680"
  },
  {
    "text": "is not very um not viable it is viable but",
    "start": "2388920",
    "end": "2395200"
  },
  {
    "text": "it's not very stable at the current moment and here you will find a project named",
    "start": "2395200",
    "end": "2400880"
  },
  {
    "text": "transcoding I did another uh app just because for the current time they're",
    "start": "2400880",
    "end": "2407280"
  },
  {
    "text": "still working at it and um it makes other projects misbehave so",
    "start": "2407280",
    "end": "2414200"
  },
  {
    "text": "for example right now if you have this API and you want to write unit or integration test well your unit or",
    "start": "2414200",
    "end": "2419800"
  },
  {
    "text": "integration test won't work just because you're adding these things manually and it won't know how to reference them and",
    "start": "2419800",
    "end": "2426520"
  },
  {
    "text": "the things that you're adding manually is this folder structure um Google API notation Proto",
    "start": "2426520",
    "end": "2433599"
  },
  {
    "text": "and HTTP Proto funky thing you have to download them manually and to add here",
    "start": "2433599",
    "end": "2439400"
  },
  {
    "text": "yeah right any we google. api. protos version",
    "start": "2439400",
    "end": "2446640"
  },
  {
    "text": "2.3.0 I believe we've eded Theo files into the",
    "start": "2446640",
    "end": "2454640"
  },
  {
    "text": "yay yay but at the moment when I I wrote this this was like a manual thing I said",
    "start": "2455280",
    "end": "2461319"
  },
  {
    "text": "I look forward to the moment where they will integrate everything because I think uh it's super powerful so",
    "start": "2461319",
    "end": "2468160"
  },
  {
    "text": "basically what it happens here is that you have a specification that allow you",
    "start": "2468160",
    "end": "2473280"
  },
  {
    "text": "to also expose your grpc operations also as HTTP endpoints",
    "start": "2473280",
    "end": "2481839"
  },
  {
    "text": "in the browser um and I think this will steer a lot of people to actually use",
    "start": "2481839",
    "end": "2487040"
  },
  {
    "text": "this because before I said okay I have this Downstream API that needs to get data",
    "start": "2487040",
    "end": "2492599"
  },
  {
    "text": "from another service grpc might be a good fit but in the end I might also",
    "start": "2492599",
    "end": "2497680"
  },
  {
    "text": "want to expose this to be consumed in the wild like from the browser yeah so",
    "start": "2497680",
    "end": "2503119"
  },
  {
    "text": "uh now we can do that by using grpc transcoding so what we have to do is to",
    "start": "2503119",
    "end": "2508160"
  },
  {
    "text": "install a few packages and one of them is uh Json transcoding okay and this",
    "start": "2508160",
    "end": "2513920"
  },
  {
    "text": "will allow us to say hey I have this operation uh named say hello that gets a hello request in and returns a hello",
    "start": "2513920",
    "end": "2520720"
  },
  {
    "text": "reply uh but expose this under this end point V1 gror and have this parameter",
    "start": "2520720",
    "end": "2527640"
  },
  {
    "text": "bound from the uh the the URL also and this is very very nice so if I run this",
    "start": "2527640",
    "end": "2533680"
  },
  {
    "text": "I should have here H transcoding somewhere I should have",
    "start": "2533680",
    "end": "2540520"
  },
  {
    "text": "the and I also have rymy because I simply don't want",
    "start": "2544240",
    "end": "2549599"
  },
  {
    "text": "to fiddle around transcoding so I have the server",
    "start": "2549599",
    "end": "2554920"
  },
  {
    "text": "running at this specific uh Port so now if I open the browser and I pass it",
    "start": "2554920",
    "end": "2563400"
  },
  {
    "text": "like so I have this port V1 grter and the name is going to be",
    "start": "2568000",
    "end": "2573760"
  },
  {
    "text": "NDC I get this back yay which is very cool but keep in mind this in browser",
    "start": "2573760",
    "end": "2581520"
  },
  {
    "text": "it's not full and twpc this is application Jason that gets transcoded",
    "start": "2581520",
    "end": "2588000"
  },
  {
    "text": "yeah to grpc yeah and it's it's done by this package out of the box and it's",
    "start": "2588000",
    "end": "2593400"
  },
  {
    "text": "super nice because right everyone every this package uh does it for us cool um",
    "start": "2593400",
    "end": "2600599"
  },
  {
    "text": "another thing that I want to show you because now it's more stable uh it's related to the reflection part so you",
    "start": "2600599",
    "end": "2607839"
  },
  {
    "text": "have to install another package named uh server reflection and This Server reflection reflection package if you",
    "start": "2607839",
    "end": "2615200"
  },
  {
    "text": "enable the middleware at JPC reflection um it will allow us to open",
    "start": "2615200",
    "end": "2621760"
  },
  {
    "text": "Postman for example uh Postman is a tool that I personally use but I think it's U",
    "start": "2621760",
    "end": "2627319"
  },
  {
    "text": "the same in other tools you click new you select GPC and here you were asked to paste in",
    "start": "2627319",
    "end": "2634920"
  },
  {
    "text": "an URL but I don't think this is the URL that I have to paste so I'm going to look through here",
    "start": "2634920",
    "end": "2643760"
  },
  {
    "text": "49 fingers crossed not that where are",
    "start": "2643760",
    "end": "2649680"
  },
  {
    "text": "you uh this one paste in without ports and stuff",
    "start": "2649680",
    "end": "2657280"
  },
  {
    "text": "because it grpc and here we'll be prompted to select okay how do you want to access what that server has you can",
    "start": "2657280",
    "end": "2664119"
  },
  {
    "text": "either import the Proto file which is very nice for development and you can use server reflection and of course it",
    "start": "2664119",
    "end": "2670839"
  },
  {
    "text": "says that you cannot load server",
    "start": "2670839",
    "end": "2674720"
  },
  {
    "text": "reflection initial S initial seven good cat I'm going to use server",
    "start": "2677599",
    "end": "2684480"
  },
  {
    "text": "refection demo Gods I haven't prayed to them today",
    "start": "2684480",
    "end": "2689880"
  },
  {
    "text": "enough yeah so we have to have this like lock and it discovers that I have a",
    "start": "2689880",
    "end": "2695640"
  },
  {
    "text": "single hello which is UN by the signs of it yeah and",
    "start": "2695640",
    "end": "2701240"
  },
  {
    "text": "it's very nice for example because you can use this a s a similar thing if it's deployed in the cloud for example I just",
    "start": "2701240",
    "end": "2707359"
  },
  {
    "text": "recently tested with aure and I deployed at grpc service and I tested it from Postman and it it was very nice okay",
    "start": "2707359",
    "end": "2715640"
  },
  {
    "text": "getting back to our stuff here uh I realized I didn't show you uh that we",
    "start": "2715640",
    "end": "2721200"
  },
  {
    "text": "also have here a Swagger yeah because now we expose an endo right and we can",
    "start": "2721200",
    "end": "2728240"
  },
  {
    "text": "also document that endpoint yeah and we can use it here in in the",
    "start": "2728240",
    "end": "2735240"
  },
  {
    "text": "browser okay by heart uh",
    "start": "2735240",
    "end": "2741720"
  },
  {
    "text": "sorry I simply cannot keep this in mind where the Swagger lives index and stuff",
    "start": "2741720",
    "end": "2748760"
  },
  {
    "text": "like that so I won't bother with it Swagger Swagger Json it's index something I'm",
    "start": "2748760",
    "end": "2755480"
  },
  {
    "text": "going to try if it works in the first dry I'm going to show you if",
    "start": "2755480",
    "end": "2760920"
  },
  {
    "text": "not okay yay yeah so it's the open API",
    "start": "2760920",
    "end": "2766040"
  },
  {
    "text": "like documenting the what we have in here which are the parameter schema and",
    "start": "2766040",
    "end": "2772400"
  },
  {
    "text": "stuff like that 200 as a success yeah so it's in",
    "start": "2772400",
    "end": "2777680"
  },
  {
    "text": "there okay so transcoding uh and another thing that um it's very important and I",
    "start": "2777680",
    "end": "2785480"
  },
  {
    "text": "have like a few more minutes to show you it's related to transal fold handling",
    "start": "2785480",
    "end": "2790680"
  },
  {
    "text": "and I'm going to go here so what libraries are you using for",
    "start": "2790680",
    "end": "2795920"
  },
  {
    "text": "transient fault handling except except poing poly",
    "start": "2795920",
    "end": "2802119"
  },
  {
    "text": "sorry no no other libraries out there cool so uh where are",
    "start": "2802119",
    "end": "2810400"
  },
  {
    "text": "you come on client",
    "start": "2813359",
    "end": "2819440"
  },
  {
    "text": "streaming uh uh",
    "start": "2821200",
    "end": "2826960"
  },
  {
    "text": "extras here are the extras Yeah so basically uh we can configure the tri",
    "start": "2826960",
    "end": "2832559"
  },
  {
    "text": "policies uh we can configure the maximum attempts the initial back off maximum back off and of course what are the",
    "start": "2832559",
    "end": "2839440"
  },
  {
    "text": "retriable status codes because not all of them would going to be like considered retriable for our specific",
    "start": "2839440",
    "end": "2845599"
  },
  {
    "text": "business case so we have an available and internal okay uh you pass in the",
    "start": "2845599",
    "end": "2850920"
  },
  {
    "text": "request and we simply use it whenever we're doing the request by passing in",
    "start": "2850920",
    "end": "2856720"
  },
  {
    "text": "options and the method config in there um cool one thing that I want you to",
    "start": "2856720",
    "end": "2862960"
  },
  {
    "text": "notice in here that we can configure either a retry policy or hedging one the",
    "start": "2862960",
    "end": "2868240"
  },
  {
    "text": "difference between the two of them is that the ret try will try to make a request say if that's successful we",
    "start": "2868240",
    "end": "2874440"
  },
  {
    "text": "going to do another one if that's successful I'm going to retrying stuff like that applying your algorithm the",
    "start": "2874440",
    "end": "2880520"
  },
  {
    "text": "heding policy will like fire five of them and you're going to pick the first one that comes back successful and going",
    "start": "2880520",
    "end": "2888319"
  },
  {
    "text": "to cancel uh the rest of them so Hing again and",
    "start": "2888319",
    "end": "2893359"
  },
  {
    "text": "retry okay so let's see where I did the call here balancer balancer around drop",
    "start": "2893359",
    "end": "2901680"
  },
  {
    "text": "in where is the redry I haven't look at this",
    "start": "2901680",
    "end": "2907960"
  },
  {
    "text": "request oh no so I have the default method config that I have to pass in here okay",
    "start": "2910200",
    "end": "2918359"
  },
  {
    "text": "that happens when I want to use two examples in one I get",
    "start": "2918359",
    "end": "2926319"
  },
  {
    "text": "myself confused so this is their Tri policy and this is the actual",
    "start": "2926319",
    "end": "2934640"
  },
  {
    "text": "request and since I'm here here I have to mimic in a way that we're getting an",
    "start": "2934640",
    "end": "2941599"
  },
  {
    "text": "exception so in the client streaming here say hello sorry want to see a thing",
    "start": "2941599",
    "end": "2946960"
  },
  {
    "text": "like this if the grpc previous RPC attempts is present this is how it",
    "start": "2946960",
    "end": "2953599"
  },
  {
    "text": "discovers that it's a ret tried attempt or is the initial one it looks at the request header at those keys and tries",
    "start": "2953599",
    "end": "2960280"
  },
  {
    "text": "to identify if uh we have something similar so in here I'm going to uncomment this I'm going to also stop",
    "start": "2960280",
    "end": "2967079"
  },
  {
    "text": "the server from running because I want to build it again",
    "start": "2967079",
    "end": "2972440"
  },
  {
    "text": "okay and I'm going to run",
    "start": "2972440",
    "end": "2976240"
  },
  {
    "text": "it yeah so what will happen is the first time we're going to do the request uh we're going to see hey uh this is a",
    "start": "2979000",
    "end": "2985319"
  },
  {
    "text": "previous attemp we have this key if not we're going to throw an exception and the next time is going to when it's",
    "start": "2985319",
    "end": "2990440"
  },
  {
    "text": "going to be retried we will act as it is in there so let's see the server is",
    "start": "2990440",
    "end": "2997480"
  },
  {
    "text": "running supposedly and then we should go to the extra grpc and run this",
    "start": "2997480",
    "end": "3004720"
  },
  {
    "text": "two net",
    "start": "3006160",
    "end": "3009440"
  },
  {
    "text": "run and",
    "start": "3012799",
    "end": "3016079"
  },
  {
    "text": "hopefully client streaming extras okay come on",
    "start": "3018680",
    "end": "3027119"
  },
  {
    "text": "okay yay so we got hello back with NDC London value from this specific server",
    "start": "3027119",
    "end": "3033040"
  },
  {
    "text": "so it looks like it worked nothing fancy right but now if we look on the server",
    "start": "3033040",
    "end": "3038960"
  },
  {
    "text": "bit supposedly we should get something that is red I'm going to maximize this",
    "start": "3038960",
    "end": "3044920"
  },
  {
    "text": "or not because it's going to disappear but we have this here so we have a fail the server Interceptor has a",
    "start": "3044920",
    "end": "3053520"
  },
  {
    "text": "thing that hey uh sorry I'm going to throw us status code of internal for the",
    "start": "3053520",
    "end": "3059040"
  },
  {
    "text": "grpc I'm not here try again and you see how when I configured the the retry",
    "start": "3059040",
    "end": "3064640"
  },
  {
    "text": "policy on the calling party everything worked so behind the scenes it has been",
    "start": "3064640",
    "end": "3071200"
  },
  {
    "text": "an exception it has being retried but as a consumer I'm not seeing that and",
    "start": "3071200",
    "end": "3077520"
  },
  {
    "text": "that's basically full tolerance example at heart right so um if we add in here",
    "start": "3077520",
    "end": "3086440"
  },
  {
    "text": "uh uh I'm going to stop and run again um it should run with Visual",
    "start": "3086440",
    "end": "3092839"
  },
  {
    "text": "Studio because if I want that so the BG start new",
    "start": "3092839",
    "end": "3098359"
  },
  {
    "text": "instance to actually show you how it happens so",
    "start": "3098359",
    "end": "3105160"
  },
  {
    "text": "running fingers crossed n so it didn't it didn't stop",
    "start": "3105480",
    "end": "3114520"
  },
  {
    "text": "for some reason but yeah it looks at this specific header if you want to debug it and you watch there you can add",
    "start": "3114520",
    "end": "3120880"
  },
  {
    "text": "the watch and you can see how the the counter it increases and it increases up",
    "start": "3120880",
    "end": "3126000"
  },
  {
    "text": "until it reaches what you specified in here maximum attempts and when it it's",
    "start": "3126000",
    "end": "3131920"
  },
  {
    "text": "five it stops retrying because this is how you configure it okay so stopping",
    "start": "3131920",
    "end": "3137599"
  },
  {
    "text": "here and the next bit that I want to show you is the client side load balancing where you can configure a",
    "start": "3137599",
    "end": "3144799"
  },
  {
    "text": "policy I'm going to close this in I'm going to comment it out okay and I have this",
    "start": "3144799",
    "end": "3154040"
  },
  {
    "text": "back so basically now we can configure if we know that we will have two server",
    "start": "3154040",
    "end": "3159880"
  },
  {
    "text": "instances or three or four that are up and ready to serve requests we can",
    "start": "3159880",
    "end": "3165240"
  },
  {
    "text": "configure this Statics resolver Factory or uh a DNS resolver Factory we have two",
    "start": "3165240",
    "end": "3171119"
  },
  {
    "text": "of them so we can configure the addresses and then we can pass the resolver factor make it a single ton",
    "start": "3171119",
    "end": "3177799"
  },
  {
    "text": "because we do not need different um ones and we pass in here what are the load",
    "start": "3177799",
    "end": "3184520"
  },
  {
    "text": "balancing configuration we can have round robin or if you have pick first",
    "start": "3184520",
    "end": "3189799"
  },
  {
    "text": "these are the two available but if you want to implement your own you're free to implement your own so what will",
    "start": "3189799",
    "end": "3196400"
  },
  {
    "text": "happen is I will have the server up and running one of them is already there I",
    "start": "3196400",
    "end": "3203520"
  },
  {
    "text": "have another instance that I have to uh run under a different",
    "start": "3203520",
    "end": "3212119"
  },
  {
    "text": "port so 5,000 and 50002 I'm building this fingers",
    "start": "3214599",
    "end": "3220839"
  },
  {
    "text": "crossed yeah so this is up and running the first one is up and running waiting",
    "start": "3220839",
    "end": "3226839"
  },
  {
    "text": "and now what happens if I run the extra drpc several times I should",
    "start": "3226839",
    "end": "3235200"
  },
  {
    "text": "get the response back but not before I commented out the exception part because that",
    "start": "3235200",
    "end": "3242720"
  },
  {
    "text": "was client streaming it will ret every single time",
    "start": "3242720",
    "end": "3248079"
  },
  {
    "text": "but even so let's see extra JPC",
    "start": "3248079",
    "end": "3255280"
  },
  {
    "text": "yep I have to comment this to prevent it for bothering us so",
    "start": "3255280",
    "end": "3262040"
  },
  {
    "text": "server one run again server this we can",
    "start": "3262040",
    "end": "3269839"
  },
  {
    "text": "close server two this is the",
    "start": "3269839",
    "end": "3277000"
  },
  {
    "text": "port what do you have in",
    "start": "3277000",
    "end": "3281040"
  },
  {
    "text": "mind fingers crossed now okay this is running the second one",
    "start": "3283160",
    "end": "3290040"
  },
  {
    "text": "should be up and running this is running cool yay we should have I'm going to",
    "start": "3290040",
    "end": "3295280"
  },
  {
    "text": "clear this again net",
    "start": "3295280",
    "end": "3300720"
  },
  {
    "text": "run it should get one of the ports so the first one that responded is the",
    "start": "3301119",
    "end": "3307920"
  },
  {
    "text": "server instance for 5,000 now if I run it",
    "start": "3307920",
    "end": "3314040"
  },
  {
    "text": "again should get the second one or",
    "start": "3314839",
    "end": "3321480"
  },
  {
    "text": "not uh no build or no dash",
    "start": "3323799",
    "end": "3330880"
  },
  {
    "text": "build yay yeah so the first one and second one so it's load balancing done right uh",
    "start": "3334160",
    "end": "3342319"
  },
  {
    "text": "this is particularly useful and it's already used by people that are using",
    "start": "3342319",
    "end": "3347599"
  },
  {
    "text": "kubernetes in their teex stack yeah when they spinning up new pods this comes in",
    "start": "3347599",
    "end": "3352920"
  },
  {
    "text": "head and I'm talking about people that are not NE neily in the doet space in",
    "start": "3352920",
    "end": "3358079"
  },
  {
    "text": "other languages if they use protocol buffers they used to use this specific",
    "start": "3358079",
    "end": "3363599"
  },
  {
    "text": "um technique cool so these are the main parts related to",
    "start": "3363599",
    "end": "3371960"
  },
  {
    "text": "grpc so you can have DNS resolver Factory also if you have DNS there",
    "start": "3371960",
    "end": "3377200"
  },
  {
    "text": "configured but I I didn't configure it locally pick first round robin and you",
    "start": "3377200",
    "end": "3383000"
  },
  {
    "text": "can Implement your own the benefits of using JPC are related to Performance versus size payload and stuff like that",
    "start": "3383000",
    "end": "3390280"
  },
  {
    "text": "and also polygot environments so if you have or want to have um a distributed",
    "start": "3390280",
    "end": "3397520"
  },
  {
    "text": "system that would talk with different languages not only CP and.net this is",
    "start": "3397520",
    "end": "3402720"
  },
  {
    "text": "super super handy so you have point-to-point communication low Network usage as a benefit it's contract based",
    "start": "3402720",
    "end": "3410319"
  },
  {
    "text": "smaller payloads where httv too uh supports different streaming types out of the box without you using another",
    "start": "3410319",
    "end": "3417760"
  },
  {
    "text": "tool or technology that you have to manage uh and starting net six it can be",
    "start": "3417760",
    "end": "3423119"
  },
  {
    "text": "configured to run with HTTP three as if two weren't enough yeah so quick",
    "start": "3423119",
    "end": "3429039"
  },
  {
    "text": "downsides is that you'll still have temporal coupling it has its own purpose",
    "start": "3429039",
    "end": "3435240"
  },
  {
    "text": "but you have to think if maybe messaging were broker or brokerless things might",
    "start": "3435240",
    "end": "3441240"
  },
  {
    "text": "be handy or not for your system so um not human readable that's a remaining",
    "start": "3441240",
    "end": "3447000"
  },
  {
    "text": "from uh one year ago Postman does everything that you need to do with grpc translates the binary payloads to for us",
    "start": "3447000",
    "end": "3454599"
  },
  {
    "text": "to to use you have to have better testing you'll have to also test the",
    "start": "3454599",
    "end": "3459799"
  },
  {
    "text": "services to integrate test them and so on you'll have also to focus on cic",
    "start": "3459799",
    "end": "3466319"
  },
  {
    "text": "better than you're doing it with web API for example because now you'll have a single source of through or you should",
    "start": "3466319",
    "end": "3473599"
  },
  {
    "text": "the protocol files and you'll have to make sure that those are in good shape yeah uh you'll have no caching because",
    "start": "3473599",
    "end": "3480720"
  },
  {
    "text": "HTTP to post um so in summary it's great for",
    "start": "3480720",
    "end": "3487480"
  },
  {
    "text": "microservices communication if you have Downstream apis that you want to um communicate with each other and also",
    "start": "3487480",
    "end": "3495480"
  },
  {
    "text": "have a look and keep in mind that transcoding is a technology that might gives us the flexibility we need with",
    "start": "3495480",
    "end": "3501680"
  },
  {
    "text": "also exposing it to the browser and keep in mind that distributed systems are all about trade-off there is no specific",
    "start": "3501680",
    "end": "3508119"
  },
  {
    "text": "technology that solves it all yeah so it might solve three things and get into four things bad so we should know the",
    "start": "3508119",
    "end": "3515440"
  },
  {
    "text": "tools that we have at our disposal in order to make informed decisions so next",
    "start": "3515440",
    "end": "3520880"
  },
  {
    "text": "step grpc web because this is a different thing HTP 2 and three if you want to study more about the these and",
    "start": "3520880",
    "end": "3527960"
  },
  {
    "text": "two one books yeah JPC for WCF uh Developers for a fellow speaker Mar Mark",
    "start": "3527960",
    "end": "3533640"
  },
  {
    "text": "Randall and if you want to Deep dive in j.net from Zero to Hero on Dom Train by",
    "start": "3533640",
    "end": "3540200"
  },
  {
    "text": "yours truly so thanks for listening I'm here for questions and also you're free",
    "start": "3540200",
    "end": "3545880"
  },
  {
    "text": "to DM me if you have specific question I'm gladly respond them thank you",
    "start": "3545880",
    "end": "3554759"
  }
]