[
  {
    "text": "hello I hope you can hear me because I cannot tell if you can hear me welcome",
    "start": "7160",
    "end": "13320"
  },
  {
    "text": "uh there is still room upstairs so I see two places",
    "start": "13320",
    "end": "20560"
  },
  {
    "text": "three stairs",
    "start": "20560",
    "end": "24080"
  },
  {
    "text": "also thank you for being here uh I see a lot of people up curently interested in what grpc is in net are you looking to",
    "start": "26400",
    "end": "34280"
  },
  {
    "text": "replace your rest apis with something or you do not know yet cool uh",
    "start": "34280",
    "end": "40680"
  },
  {
    "text": "today we're going to do a a deep dive into what net grpc has to offer uh you're going to see a lot of Code by the",
    "start": "40680",
    "end": "47120"
  },
  {
    "text": "end uh and you also going to have access to the repository that I'm using so you can uh you able to run it yourself so um",
    "start": "47120",
    "end": "56160"
  },
  {
    "text": "about me or not about me yeah because",
    "start": "56160",
    "end": "62160"
  },
  {
    "text": "apparently Windows 11 before a talk it's awesome for the first time so don't do",
    "start": "62160",
    "end": "68439"
  },
  {
    "text": "that um my name is dku I'm from Romania uh I'm a software architect uh and AET",
    "start": "68439",
    "end": "75320"
  },
  {
    "text": "consultant I do a lot of work around the communities so I organize a user group and a small small small conference in",
    "start": "75320",
    "end": "81920"
  },
  {
    "text": "Romania I teachnet and I blog but I recently been hacked so I don't have",
    "start": "81920",
    "end": "88520"
  },
  {
    "text": "blog there remove the DNS um and recently it has just been published uh",
    "start": "88520",
    "end": "95399"
  },
  {
    "text": "web API for beginners so if you know someone that tries to switch from I don't know desktop development to web",
    "start": "95399",
    "end": "102360"
  },
  {
    "text": "that uh might be the book for uh for the person so uh apis right because I'm",
    "start": "102360",
    "end": "109799"
  },
  {
    "text": "assuming I'm not allowed to assume actually so I'm going to ask how many of you are doing uh",
    "start": "109799",
    "end": "115600"
  },
  {
    "text": "apis cool a lot of you all of you so you're work working on their web",
    "start": "115600",
    "end": "121719"
  },
  {
    "text": "environments with rest apis right so we have to talk about rest since we're",
    "start": "121719",
    "end": "127320"
  },
  {
    "text": "talking about grpc uh and some people are uh saying that grpc should be like in a fight with",
    "start": "127320",
    "end": "135000"
  },
  {
    "text": "rest apis which is not really the case so how many of you are doing like fully",
    "start": "135000",
    "end": "141480"
  },
  {
    "text": "rest apis following all the Sixx constraints with hate and all the",
    "start": "141480",
    "end": "147640"
  },
  {
    "text": "ceremonies around it right how many of you a few of you",
    "start": "147640",
    "end": "154440"
  },
  {
    "text": "nice so what I realized during the years is that uh developers including me we're",
    "start": "154440",
    "end": "160280"
  },
  {
    "text": "just following a few of the guidelines that R rest tried to impose basically rest tried to impose um The Common Sense",
    "start": "160280",
    "end": "169200"
  },
  {
    "text": "around HTTP basically forcing us to use headers the right verbs the right status",
    "start": "169200",
    "end": "176920"
  },
  {
    "text": "code and such like that well um we cannot talk about apis rest and fancy",
    "start": "176920",
    "end": "183519"
  },
  {
    "text": "things without talking about a monolith because that's where we started it and apparently with the modular monolith",
    "start": "183519",
    "end": "190920"
  },
  {
    "text": "that's where we are going back so uh monolith I'm going to make a full",
    "start": "190920",
    "end": "196879"
  },
  {
    "text": "disclaimer here um I really enjoyed working with monoliths because everything was very easy you had a huge",
    "start": "196879",
    "end": "203959"
  },
  {
    "text": "amount of source code if ever wanted something in there you can you could go",
    "start": "203959",
    "end": "209439"
  },
  {
    "text": "ahead instantiate that class use it everything was there and another pork of using a monolith was that long build",
    "start": "209439",
    "end": "217400"
  },
  {
    "text": "times I remember uh with bad Hardware build a solution that was huge took a",
    "start": "217400",
    "end": "224360"
  },
  {
    "text": "significant time so I could go away and grab a coffee and enjoy uh the start of",
    "start": "224360",
    "end": "230560"
  },
  {
    "text": "the work yeah so uh the Cons with the monolith is that people say that it's",
    "start": "230560",
    "end": "236799"
  },
  {
    "text": "hard to scale I mean you can scale it of course but but not without significant uh costs it has bad uh bad bad user",
    "start": "236799",
    "end": "245239"
  },
  {
    "text": "experience it has low high low times so for example if you have components in",
    "start": "245239",
    "end": "250640"
  },
  {
    "text": "your monolith that are not used you'll still need those to be working in order",
    "start": "250640",
    "end": "256160"
  },
  {
    "text": "for the other components to work yeah so uh it's easy to start with a monolit but",
    "start": "256160",
    "end": "261440"
  },
  {
    "text": "you have a single code base for everything which is bummer yeah so big bill from the cloud providers so then",
    "start": "261440",
    "end": "268880"
  },
  {
    "text": "people started to realize that well it's not that cool to work with those uh the",
    "start": "268880",
    "end": "274759"
  },
  {
    "text": "we started to have in net at least a framework like ASP MVC when we had server site uh that rendered HTML but",
    "start": "274759",
    "end": "282720"
  },
  {
    "text": "still it was everything around an onion architecture everything was self-contained and then fast forward in",
    "start": "282720",
    "end": "289360"
  },
  {
    "text": "a few years we had a front end written in whatever JS your preference and a",
    "start": "289360",
    "end": "295080"
  },
  {
    "text": "back end that has a database where sever databases and",
    "start": "295080",
    "end": "300759"
  },
  {
    "text": "moving on the future is distributed because now that easy application that consuming that was consuming a back end",
    "start": "300759",
    "end": "307639"
  },
  {
    "text": "so an API now it became something like this we have several apis consumed by",
    "start": "307639",
    "end": "314080"
  },
  {
    "text": "the same front end and then the front end or the back end API consumed another",
    "start": "314080",
    "end": "319240"
  },
  {
    "text": "uh backend API and we we started to have things that are not so easy to maintain anymore and work a straight but we",
    "start": "319240",
    "end": "325880"
  },
  {
    "text": "needed those because uh due to the increase of uh of the web right now our",
    "start": "325880",
    "end": "331319"
  },
  {
    "text": "user users are not willing to expect that hey uh this takes 10 seconds to",
    "start": "331319",
    "end": "337080"
  },
  {
    "text": "load no they will be gone before you have time to figure it out so now we",
    "start": "337080",
    "end": "343479"
  },
  {
    "text": "have things like this or at least we could have like node.js talking with a go talking with the net core API and",
    "start": "343479",
    "end": "349960"
  },
  {
    "text": "stuff like that which is a poly polyglot environment but we have rest for",
    "start": "349960",
    "end": "355520"
  },
  {
    "text": "everything right and as we see uh rest is is not used as it's supposed to be so",
    "start": "355520",
    "end": "361840"
  },
  {
    "text": "rest is in a way the Common Ground between any other uh language that we",
    "start": "361840",
    "end": "367000"
  },
  {
    "text": "could use inside our system so what is wrong with rest where basically there's",
    "start": "367000",
    "end": "372039"
  },
  {
    "text": "nothing wrong with rest as long as we use it for the right purpose because if",
    "start": "372039",
    "end": "377080"
  },
  {
    "text": "we have customer facing apis to the outside world we should use it yeah it's",
    "start": "377080",
    "end": "382360"
  },
  {
    "text": "not there to be replaced but as many of us started doing microservices well the first thing when",
    "start": "382360",
    "end": "388479"
  },
  {
    "text": "you start micros service architecture or you maybe I know you have a monolith and you want to split it so the first thing",
    "start": "388479",
    "end": "394800"
  },
  {
    "text": "that you do so at least it's what I did what say okay I'm going to extract this part I'm going to put it somewhere else",
    "start": "394800",
    "end": "401160"
  },
  {
    "text": "it's going to be a new service and that service will serve data to whever want uh to get data from so what do you do",
    "start": "401160",
    "end": "408639"
  },
  {
    "text": "you create a HTTP client because that's the first thing that you want to do yeah create an HTTP client get data from",
    "start": "408639",
    "end": "415800"
  },
  {
    "text": "there use it and so on and so forth we're not talking about messaging system because those are an entirely different",
    "start": "415800",
    "end": "422560"
  },
  {
    "text": "story um but the incremental way of basically extracting microservices from",
    "start": "422560",
    "end": "428599"
  },
  {
    "text": "a monolith is to is simple like this step by step yeah HTTP clients then move",
    "start": "428599",
    "end": "434240"
  },
  {
    "text": "it in a messaging architecture and stuff like that yeah so incremental and evolve",
    "start": "434240",
    "end": "439319"
  },
  {
    "text": "your architecture and you'll say that there is nothing wrong with rest we're going to use",
    "start": "439319",
    "end": "445120"
  },
  {
    "text": "rest until God knows when but there are other Technologies out there that we",
    "start": "445120",
    "end": "450879"
  },
  {
    "text": "need to be aware of and one of them is remote procedure calls and this is a",
    "start": "450879",
    "end": "456120"
  },
  {
    "text": "concept that was burn around since the 70s and as you see there are a few",
    "start": "456120",
    "end": "462440"
  },
  {
    "text": "Concepts that tend to resurface from time to time so RPC as a as a thing as a",
    "start": "462440",
    "end": "469840"
  },
  {
    "text": "concept will make a system um behave like monolith in a transpar a",
    "start": "469840",
    "end": "475120"
  },
  {
    "text": "transparent uh way so for example if we look at this code you'll see that we have an order uh we",
    "start": "475120",
    "end": "483879"
  },
  {
    "text": "have an API or uh whatever service called called create order payment status we process the payment for uh",
    "start": "483879",
    "end": "490599"
  },
  {
    "text": "that order and then if the payment is successful we arrange the shipping for it yeah looking at this code it looks",
    "start": "490599",
    "end": "498440"
  },
  {
    "text": "like it's in the same system I mean if you're looking at this you're not necessarily understanding that you're",
    "start": "498440",
    "end": "505159"
  },
  {
    "text": "basically doing HTTP calls to somewhere to a API yeah so the code is very",
    "start": "505159",
    "end": "510759"
  },
  {
    "text": "familiar for a developer it has a column method approach you're not using HTTP",
    "start": "510759",
    "end": "516518"
  },
  {
    "text": "clients to create new requests and to get data from so uh",
    "start": "516519",
    "end": "522320"
  },
  {
    "text": "basically whenever we're calling one of these method we're going over the network we're getting data back we get",
    "start": "522320",
    "end": "529040"
  },
  {
    "text": "the result from there and we do the same every single time we're we're calling such method so RPC as a generic concept",
    "start": "529040",
    "end": "536080"
  },
  {
    "text": "will make the code look local familiar to the developer yeah you won't have to orchestrate anything you do not have",
    "start": "536080",
    "end": "543079"
  },
  {
    "text": "HTTP clients to be uh obvious that you're doing a network call so it has",
    "start": "543079",
    "end": "548720"
  },
  {
    "text": "this call a method get some data or send some data by calling a method and it's",
    "start": "548720",
    "end": "553959"
  },
  {
    "text": "prone to errors because it's transparent to us but its primary goal is to make",
    "start": "553959",
    "end": "560800"
  },
  {
    "text": "the network communication transparent is like it's not there yeah so what if now",
    "start": "560800",
    "end": "567079"
  },
  {
    "text": "we have like a distributed system like a monolith and we do not care uh it's the",
    "start": "567079",
    "end": "573079"
  },
  {
    "text": "consumer's job to retry in case something bad happens is the consumer's",
    "start": "573079",
    "end": "578480"
  },
  {
    "text": "job to take care of whatever full tolerance and resiliency uh it's in your system yeah",
    "start": "578480",
    "end": "586120"
  },
  {
    "text": "so fast forward in a few years we get grpc and obviously G comes from Google",
    "start": "586120",
    "end": "594399"
  },
  {
    "text": "yeah it started uh in 2001 so it's not a new technology uh of course started",
    "start": "594399",
    "end": "600839"
  },
  {
    "text": "internally uh at Google and then after a few years they open sourced it uh and",
    "start": "600839",
    "end": "606680"
  },
  {
    "text": "then fast forward a few years 2019 we got it in net because grpc is basically",
    "start": "606680",
    "end": "612959"
  },
  {
    "text": "a specification that was implemented by many languages uh and net was laid to",
    "start": "612959",
    "end": "618200"
  },
  {
    "text": "the party so it it has been around in Java it has been around in go but net",
    "start": "618200",
    "end": "624120"
  },
  {
    "text": "got it in 2019 with a lot of Errors around it the tooling was not good but",
    "start": "624120",
    "end": "629920"
  },
  {
    "text": "now a lot of things have have improved so grpc uh it's contract based uh as we",
    "start": "629920",
    "end": "637480"
  },
  {
    "text": "will see you we will create a contract that will be the Common Ground between a",
    "start": "637480",
    "end": "642519"
  },
  {
    "text": "consumer and the server and by using this we will have no",
    "start": "642519",
    "end": "647920"
  },
  {
    "text": "more code references so we won won't have like right click add the project",
    "start": "647920",
    "end": "653120"
  },
  {
    "text": "reference to a specific package that lives inside the same solution to be able to use that so that won't be there",
    "start": "653120",
    "end": "658440"
  },
  {
    "text": "anymore the single thing that is common to any um consumer and any server that",
    "start": "658440",
    "end": "664279"
  },
  {
    "text": "implements grpc it's uh the protocol buffer files that we will see it uses http2 so",
    "start": "664279",
    "end": "671800"
  },
  {
    "text": "basically if you're still using HTTP 1 nope sorry it's not for you it deits",
    "start": "671800",
    "end": "678360"
  },
  {
    "text": "the purpose it uses http2 which makes it faster and du the the way the http2",
    "start": "678360",
    "end": "684399"
  },
  {
    "text": "works uh it allow you to have uh full duplex communication like a client in a",
    "start": "684399",
    "end": "689760"
  },
  {
    "text": "server streaming in the same collection which is awesome and also it has another thing",
    "start": "689760",
    "end": "696120"
  },
  {
    "text": "which is uh protuff serialization it works with binary data so no more Json",
    "start": "696120",
    "end": "701440"
  },
  {
    "text": "no more uh things to decode and human read for us and of course it's available",
    "start": "701440",
    "end": "706600"
  },
  {
    "text": "in many languages so if you have a component in your system that is written in node that needs to get data from net",
    "start": "706600",
    "end": "713560"
  },
  {
    "text": "or from java this is good for you yeah so because you have this contract that",
    "start": "713560",
    "end": "719279"
  },
  {
    "text": "it's known uh by every single language and another thing that is very cool is that that it does code generation out of",
    "start": "719279",
    "end": "726279"
  },
  {
    "text": "the box the compiler the protoc C compiler will generate C classes C types",
    "start": "726279",
    "end": "731880"
  },
  {
    "text": "for us and we will be able to just use those so if you look at the traditional",
    "start": "731880",
    "end": "737959"
  },
  {
    "text": "client request um so a client requests something from a server and the server",
    "start": "737959",
    "end": "743040"
  },
  {
    "text": "process the request and responds back now in we're introducing something in between which is this this interface",
    "start": "743040",
    "end": "750120"
  },
  {
    "text": "called Proto written in protocol buffer syntax so there's this so we're",
    "start": "750120",
    "end": "756600"
  },
  {
    "text": "basically interrupting the communication with making the client aware of what the server has to offer and the server is",
    "start": "756600",
    "end": "764360"
  },
  {
    "text": "basically exposing what it has to offer to the client yeah so the protocol file",
    "start": "764360",
    "end": "769800"
  },
  {
    "text": "looks very easy it has a funky syntax uh funky given the fact that uh it's very",
    "start": "769800",
    "end": "775760"
  },
  {
    "text": "similar to soap it's it's rather uh",
    "start": "775760",
    "end": "781639"
  },
  {
    "text": "declarative uh there are extensions for visual studio and Jet brains Raider and um Visual Studio code that help you with",
    "start": "781639",
    "end": "790199"
  },
  {
    "text": "uh intelligence and stuff like that so first thing that you'll have to do is to Define that hey I'm using this uh",
    "start": "790199",
    "end": "796399"
  },
  {
    "text": "protocol buffers 3 version of the syntax there is also a version two that is not",
    "start": "796399",
    "end": "801680"
  },
  {
    "text": "advisable to be used um and you're saying Hey I want to generate a namespace in C called my first RPC and",
    "start": "801680",
    "end": "810320"
  },
  {
    "text": "then I want to generate a package called Fibonacci the package is used for interop",
    "start": "810320",
    "end": "816720"
  },
  {
    "text": "interoperability so if you have a node talking with the uh net core that will",
    "start": "816720",
    "end": "821959"
  },
  {
    "text": "be the Nam space that you going to use and then you just go ahead and Define your services so services are the actual",
    "start": "821959",
    "end": "829120"
  },
  {
    "text": "implementation for um for the specific um types so service called fibo it's an",
    "start": "829120",
    "end": "836079"
  },
  {
    "text": "RPC operation called compute Fibonacci that get the requested number and Returns the Fibonacci result it's rather",
    "start": "836079",
    "end": "843360"
  },
  {
    "text": "straightforward say hey I have this it's an RPC method call like this it has an input and it has an output right and the",
    "start": "843360",
    "end": "851240"
  },
  {
    "text": "Funky thing is that you cannot have like a method without parameters in grpc you",
    "start": "851240",
    "end": "857800"
  },
  {
    "text": "will have to have a type that has nothing in it but you will still have to",
    "start": "857800",
    "end": "862839"
  },
  {
    "text": "have a type yeah same happens for the result yeah it returns something even",
    "start": "862839",
    "end": "868120"
  },
  {
    "text": "though that's something is empty it has to have a bit of memory um moving on WE Define messages",
    "start": "868120",
    "end": "876040"
  },
  {
    "text": "these messages become C classes C types that we can use in our C code and we can",
    "start": "876040",
    "end": "883839"
  },
  {
    "text": "define properties using the types that uh protocol buffer uh buffers expose for",
    "start": "883839",
    "end": "888880"
  },
  {
    "text": "us uh for example in requested number we have an in32 called number equals one",
    "start": "888880",
    "end": "895279"
  },
  {
    "text": "well the equals one it's not an assignment we're not assigning to filled uh the value of one we're basically",
    "start": "895279",
    "end": "902120"
  },
  {
    "text": "saying that the number is the first uh property in the binary string",
    "start": "902120",
    "end": "907399"
  },
  {
    "text": "so if we'd have more we would add more and just equal two three and stuff like that or if we want to remove something",
    "start": "907399",
    "end": "913800"
  },
  {
    "text": "for versioning purposes we'll just skip a few numbers and um add something more so uh some",
    "start": "913800",
    "end": "922320"
  },
  {
    "text": "other things around grpc is that it supports grpc modes and these modes are",
    "start": "922320",
    "end": "928199"
  },
  {
    "text": "basically um some people are called them modes or method types it's basically types of",
    "start": "928199",
    "end": "934240"
  },
  {
    "text": "requests that you can do with uh with JPC you have unary server streaming",
    "start": "934240",
    "end": "940440"
  },
  {
    "text": "client streaming and bir directional this happens uh these types can happen over a single TCP connection like we",
    "start": "940440",
    "end": "947600"
  },
  {
    "text": "used to In traditional uh web and they look very nice uh so unary we have a",
    "start": "947600",
    "end": "954920"
  },
  {
    "text": "client that initiates a communication to a server that implements the grpc protocol buffer file and then the server",
    "start": "954920",
    "end": "962560"
  },
  {
    "text": "responds back how you would Define such thing just by simply calling uh I have",
    "start": "962560",
    "end": "967720"
  },
  {
    "text": "an RPC method named uh compute Fibonacci gets an input uh request number and",
    "start": "967720",
    "end": "973279"
  },
  {
    "text": "returns a Fibonacci result for the next ones the the client still has to",
    "start": "973279",
    "end": "978800"
  },
  {
    "text": "initiate the communication so uh the client Say Hey I want something from you I want this method so",
    "start": "978800",
    "end": "985720"
  },
  {
    "text": "it opens the communication Channel with the server and the server will be able to send in the same connection uh",
    "start": "985720",
    "end": "991639"
  },
  {
    "text": "several chunks of data so one single connection and several chunks of data",
    "start": "991639",
    "end": "997120"
  },
  {
    "text": "and if you were to Define such a method you would just put the stream keyword to the part that it's streaming so in our",
    "start": "997120",
    "end": "1005040"
  },
  {
    "text": "case if the server streams we have to add the stream keywords towards the end and um that",
    "start": "1005040",
    "end": "1012199"
  },
  {
    "text": "would be it if we're on the client to stream we'll just go ahead and add the stream keyword to the part that uh is in",
    "start": "1012199",
    "end": "1019199"
  },
  {
    "text": "for example the client opens a communication Channel sends a lot of data and it will get one response back",
    "start": "1019199",
    "end": "1027120"
  },
  {
    "text": "yeah so think about scenarios where I don't know you want to upload L large files you can upload those in chunks",
    "start": "1027120",
    "end": "1033640"
  },
  {
    "text": "over single TCP connection that uh that is opened uh you can also collect data from different servers uh and it's uh",
    "start": "1033640",
    "end": "1041678"
  },
  {
    "text": "here if you want to Define this is just by adding uh the stream keyword towards the part that is supposed to be",
    "start": "1041679",
    "end": "1049039"
  },
  {
    "text": "many bir directional is a combination of the previous two just add the stream",
    "start": "1049039",
    "end": "1055320"
  },
  {
    "text": "keyword to the then to the end and you're done yeah so let's see some",
    "start": "1055320",
    "end": "1062120"
  },
  {
    "text": "code first of all going to make sure that this",
    "start": "1062120",
    "end": "1067200"
  },
  {
    "text": "is visible uh okay so I have here a lot of",
    "start": "1067200",
    "end": "1073520"
  },
  {
    "text": "uh small small projects one of them being a server project",
    "start": "1073520",
    "end": "1079080"
  },
  {
    "text": "that has even a lot of files that they're not necessarily interesting for you right now but you can look at the",
    "start": "1079080",
    "end": "1085159"
  },
  {
    "text": "code and um see for yourself so if you want to build a service it's similar as",
    "start": "1085159",
    "end": "1090559"
  },
  {
    "text": "you would uh build a web API you simply go and say hey I want to add a new",
    "start": "1090559",
    "end": "1097679"
  },
  {
    "text": "project to the solution and that project will have a",
    "start": "1097679",
    "end": "1104200"
  },
  {
    "text": "grpc see there is already a template and you give it a name and you",
    "start": "1104200",
    "end": "1109880"
  },
  {
    "text": "click next and basically accept what the default interface shows you and you'll",
    "start": "1109880",
    "end": "1117240"
  },
  {
    "text": "have a running working um service yeah so um what you can have is a program CS",
    "start": "1117240",
    "end": "1126000"
  },
  {
    "text": "that's the same program CS that we all know from any other types of uh projects web API MVC and stuff like that is there",
    "start": "1126000",
    "end": "1134080"
  },
  {
    "text": "the here is the place where you wire things uh you have an app setting Json",
    "start": "1134080",
    "end": "1139400"
  },
  {
    "text": "that's there and it won't go anywhere uh you can of course add packages if you",
    "start": "1139400",
    "end": "1145080"
  },
  {
    "text": "want and as you'll see one of the packages that is uh already installed it's called grpc SP netcore so it",
    "start": "1145080",
    "end": "1152840"
  },
  {
    "text": "already has all the functionality that you need for implementing this and it has a folder where",
    "start": "1152840",
    "end": "1159919"
  },
  {
    "text": "supposedly your protocol files will live if you have uh several of them and",
    "start": "1159919",
    "end": "1165480"
  },
  {
    "text": "another folder called services that that is basically the actual code the implementation for what you define so",
    "start": "1165480",
    "end": "1172960"
  },
  {
    "text": "what we'll have here is a great uh is the example pretty much that I showed you already a surface defined called say",
    "start": "1172960",
    "end": "1179840"
  },
  {
    "text": "hello gets a hello request and returns a hello reply these are types that you can",
    "start": "1179840",
    "end": "1185280"
  },
  {
    "text": "use to populate and uh and use but for",
    "start": "1185280",
    "end": "1190840"
  },
  {
    "text": "whatever operation you define here you will have to give an implementation in the corresponding service so",
    "start": "1190840",
    "end": "1199320"
  },
  {
    "text": "supposedly the service will have every operation that you define that you want to expose like in here so once you go",
    "start": "1199320",
    "end": "1208000"
  },
  {
    "text": "there and implement it you'll see that you have I'm going to just delete this for for a bit and say hi I want to pop",
    "start": "1208000",
    "end": "1215960"
  },
  {
    "text": "to override this and it will show you what you have",
    "start": "1215960",
    "end": "1223000"
  },
  {
    "text": "in the protocol file available for overwriting yeah so in here we have the say hello",
    "start": "1223000",
    "end": "1229320"
  },
  {
    "text": "and inside to say hello I'm going to undo this because I don't want you to",
    "start": "1229320",
    "end": "1234600"
  },
  {
    "text": "see me like mistyping so what we have we have an input so it's a type of hello request and the second parameter that",
    "start": "1234600",
    "end": "1242280"
  },
  {
    "text": "you cannot get rid of so by default grpc comes with this second parameter that",
    "start": "1242280",
    "end": "1247400"
  },
  {
    "text": "you'll have to mock whenever you're doing a unit or integration test for this this server called context is a",
    "start": "1247400",
    "end": "1254440"
  },
  {
    "text": "wrapper and it wraps the grpc context and it allows you to have access to the",
    "start": "1254440",
    "end": "1260600"
  },
  {
    "text": "HTTP context on top of it so thinking about this we have like the normal HTTP",
    "start": "1260600",
    "end": "1267559"
  },
  {
    "text": "context that we use in web API or MVC apps and behind it we have the small",
    "start": "1267559",
    "end": "1273520"
  },
  {
    "text": "grpc calls Yeah so basically we have two levels of headers of metadata that we",
    "start": "1273520",
    "end": "1280520"
  },
  {
    "text": "can um can access yeah so once you have this you'll have to make sure that the",
    "start": "1280520",
    "end": "1286799"
  },
  {
    "text": "services are ready registered here see that we have like a map grpc service and",
    "start": "1286799",
    "end": "1293440"
  },
  {
    "text": "this is the service name so the platform will take care of instantiating and access uh give you access to this and of",
    "start": "1293440",
    "end": "1300840"
  },
  {
    "text": "course make sure that you have at grpc middleware to this so basically a grpc",
    "start": "1300840",
    "end": "1307919"
  },
  {
    "text": "service is nothing more fancy than a console app than the web API has yeah so",
    "start": "1307919",
    "end": "1313360"
  },
  {
    "text": "this is pretty much it uh what else I have to show you this",
    "start": "1313360",
    "end": "1318760"
  },
  {
    "text": "one uh by looking in the project file per se you'll have here an item group",
    "start": "1318760",
    "end": "1324480"
  },
  {
    "text": "this is helpful if you want to debug things because usually when you add a protocol uh file uh it's not added in",
    "start": "1324480",
    "end": "1331720"
  },
  {
    "text": "here by default so you have to make it available to the uh project so you will have to add another line for the protuff",
    "start": "1331720",
    "end": "1339200"
  },
  {
    "text": "and to include the path where it can find these protocol files um the deal is",
    "start": "1339200",
    "end": "1344960"
  },
  {
    "text": "that as a best practice whenever you're having grpc service is uh you will work with this protocol files to share around",
    "start": "1344960",
    "end": "1352799"
  },
  {
    "text": "so if you have service a talking with service B uh the Common Ground between",
    "start": "1352799",
    "end": "1357840"
  },
  {
    "text": "them is the protocol file and the tendency would be to have a copy of the Proto file in service a and a copy of",
    "start": "1357840",
    "end": "1363360"
  },
  {
    "text": "the protocol file in service B which is an anti pattern and a bad practice um",
    "start": "1363360",
    "end": "1369720"
  },
  {
    "text": "what I advise you to do is to have a separate rapper separate folder where you keep the protocol files and you will",
    "start": "1369720",
    "end": "1375400"
  },
  {
    "text": "have only one source of Truth and just pointing out the the C project path to",
    "start": "1375400",
    "end": "1381480"
  },
  {
    "text": "that folder in order to make those uh discoverable yeah so once you add this",
    "start": "1381480",
    "end": "1386960"
  },
  {
    "text": "it's a project that it's up and running with the demo with the small demo so",
    "start": "1386960",
    "end": "1392440"
  },
  {
    "text": "moving to our example we have a server that in our",
    "start": "1392440",
    "end": "1397840"
  },
  {
    "text": "case will expose all four methods and we will be able to use those so we haveo",
    "start": "1397840",
    "end": "1404240"
  },
  {
    "text": "hello say hello request uh one that's returns a stream of responses a stream",
    "start": "1404240",
    "end": "1410559"
  },
  {
    "text": "of requests uh and uh bir directional yeah as you've seen I'm I re name this",
    "start": "1410559",
    "end": "1416640"
  },
  {
    "text": "as being the request to make it more aware U to make you more aware towards the HTTP client server a request",
    "start": "1416640",
    "end": "1424520"
  },
  {
    "text": "response pattern cool and once we have this uh we can run it and we can can",
    "start": "1424520",
    "end": "1430080"
  },
  {
    "text": "call it so we're able to call it and to test every single part of it just by uh",
    "start": "1430080",
    "end": "1436919"
  },
  {
    "text": "using I'm using using console apps because that's the best interface for some cases has the best UI um and you",
    "start": "1436919",
    "end": "1444200"
  },
  {
    "text": "say that hey um I'm going to have a channel a channel is like a higher um",
    "start": "1444200",
    "end": "1450720"
  },
  {
    "text": "ground where you can configure things like like authentication compression things um response sizes request sizes",
    "start": "1450720",
    "end": "1458679"
  },
  {
    "text": "for grpc and then uh we get this Channel and pass it in to a client greater gter",
    "start": "1458679",
    "end": "1467520"
  },
  {
    "text": "client and if I am going to have 12 in it I'm going to show you that this is very",
    "start": "1467520",
    "end": "1473440"
  },
  {
    "text": "funky and lowlevel and modifiable but not advisable to be",
    "start": "1473440",
    "end": "1479159"
  },
  {
    "text": "modified um this is the code generation part that grpc does Yeah so basically it",
    "start": "1479159",
    "end": "1484760"
  },
  {
    "text": "will generate a St static partial class called grer uh containing the service",
    "start": "1484760",
    "end": "1489840"
  },
  {
    "text": "name and everything that we we defined in the protocol file like in here yeah",
    "start": "1489840",
    "end": "1496480"
  },
  {
    "text": "it has p a package called grd it has the name SP space server and stuff like that so it generates a few things for us one",
    "start": "1496480",
    "end": "1503279"
  },
  {
    "text": "of them being the greater gritter client yeah so we're able now to use this",
    "start": "1503279",
    "end": "1509520"
  },
  {
    "text": "client uh to issue requests so this client it will show us what are the",
    "start": "1509520",
    "end": "1516919"
  },
  {
    "text": "methods in the interface in the protocol file and we'll just look at the",
    "start": "1516919",
    "end": "1522760"
  },
  {
    "text": "signature populate fields in there and just call them and the easiest thing that uh I can do is to show you an",
    "start": "1522760",
    "end": "1531520"
  },
  {
    "text": "instance of the server running sorry not this but this one so uh in",
    "start": "1531520",
    "end": "1539919"
  },
  {
    "text": "here I'm going toet build net run uh the server and you'll see that it's simply",
    "start": "1539919",
    "end": "1546279"
  },
  {
    "text": "the console that expects us to make requests I also enabled I think debug or",
    "start": "1546279",
    "end": "1552320"
  },
  {
    "text": "Trace logging just to show that how it discovers things it discovers to say",
    "start": "1552320",
    "end": "1558080"
  },
  {
    "text": "hello server stream client stream and bir directional so all the four methods that we we have in the interface and",
    "start": "1558080",
    "end": "1564840"
  },
  {
    "text": "then uh you see that it listens on this port one from HTTP and one for",
    "start": "1564840",
    "end": "1570399"
  },
  {
    "text": "https yeah so uh it waits for us to do requests and on the right hand side uh I",
    "start": "1570399",
    "end": "1578440"
  },
  {
    "text": "will run the console app yeah so I'm going to do like doet run for",
    "start": "1578440",
    "end": "1584398"
  },
  {
    "text": "it see I'm sending this value an exclamation mark and I get hello back",
    "start": "1586600",
    "end": "1593200"
  },
  {
    "text": "with this value from Local Host 5000 server so I also added the port in there",
    "start": "1593200",
    "end": "1599360"
  },
  {
    "text": "because I want to demo um some other things and one thing I'm going to do on the server side in here is to show you",
    "start": "1599360",
    "end": "1606960"
  },
  {
    "text": "what kind of requests are made so it says it's an http2 request it's a post",
    "start": "1606960",
    "end": "1613240"
  },
  {
    "text": "request so the thing with grpc is that you have only post no get no put no",
    "start": "1613240",
    "end": "1618360"
  },
  {
    "text": "nothing just post it sends things uh and you'll see that this in here it's kind",
    "start": "1618360",
    "end": "1624760"
  },
  {
    "text": "of an URL but it's only the path towards the operation that we exposed it's of M",
    "start": "1624760",
    "end": "1631039"
  },
  {
    "text": "type application grpc uh and uh it returned a 200 status",
    "start": "1631039",
    "end": "1636679"
  },
  {
    "text": "code remember whatever you're seeing here here it's at the HTTP level it's",
    "start": "1636679",
    "end": "1642320"
  },
  {
    "text": "the status code that we all know it's the M types that are available this is",
    "start": "1642320",
    "end": "1647799"
  },
  {
    "text": "top level HTTP okay so this is unary so if we look",
    "start": "1647799",
    "end": "1654880"
  },
  {
    "text": "here um created a Channel created a client by passing the channel sending an",
    "start": "1654880",
    "end": "1660799"
  },
  {
    "text": "object this request that we defined in protocol buffer file and simply calling the method and writing it back into the",
    "start": "1660799",
    "end": "1668000"
  },
  {
    "text": "console that's it nothing more it's nothing fancy yeah so let's look at the other um types the server is still up",
    "start": "1668000",
    "end": "1675519"
  },
  {
    "text": "and running we don't need it to uh to do something uh special uh we're going to",
    "start": "1675519",
    "end": "1680919"
  },
  {
    "text": "test the client streaming the client streaming means that the client will be the one that will send a lot of things",
    "start": "1680919",
    "end": "1686440"
  },
  {
    "text": "chunks of things to the server and it will get back one response so let's do this net",
    "start": "1686440",
    "end": "1692919"
  },
  {
    "text": "run and as a result you should see that the server side is like writing",
    "start": "1692919",
    "end": "1700679"
  },
  {
    "text": "things it takes a while I don't know how um what number I did I did a for Loop",
    "start": "1701399",
    "end": "1709399"
  },
  {
    "text": "that I'm writing it to the console say that it's done so this is the last",
    "start": "1709399",
    "end": "1715080"
  },
  {
    "text": "um okay so the server site got a lot of things it says that it executed",
    "start": "1715080",
    "end": "1720600"
  },
  {
    "text": "endpoints it got values stuff like that and",
    "start": "1720600",
    "end": "1725960"
  },
  {
    "text": "the hello I'm not moving too much at least okay uh so the client said okay",
    "start": "1727720",
    "end": "1735720"
  },
  {
    "text": "the the server received this value as the less value looking at the code for it the client streaming uh is the same",
    "start": "1735720",
    "end": "1743559"
  },
  {
    "text": "so it's basically creating a channel and passing that channel to a client that is generated for us and it's simply using",
    "start": "1743559",
    "end": "1751240"
  },
  {
    "text": "uh uses um a try catch and write thing to the request stream so I'm going to",
    "start": "1751240",
    "end": "1756760"
  },
  {
    "text": "create the client stream and I'm going to have a for Loop that goes to this value and then I'm simply creating new",
    "start": "1756760",
    "end": "1763720"
  },
  {
    "text": "types and sending and writing them Asing to the request stream this this might look funky at first but uh in the end",
    "start": "1763720",
    "end": "1771720"
  },
  {
    "text": "it's just having a connection open in which you just write until you're done",
    "start": "1771720",
    "end": "1777039"
  },
  {
    "text": "writing so that's the concept behind it and then you respond you wait the response from the server and the server",
    "start": "1777039",
    "end": "1784159"
  },
  {
    "text": "will uh will respond with only one thing of type response writing this to the console and you're done yeah so one",
    "start": "1784159",
    "end": "1792760"
  },
  {
    "text": "thing I want to mention here uh beforehand is that",
    "start": "1792760",
    "end": "1798080"
  },
  {
    "text": "um try catch and you'll see here that we have RPC exception so whenever something",
    "start": "1798080",
    "end": "1804760"
  },
  {
    "text": "bad happens uh in uh grpc service you're",
    "start": "1804760",
    "end": "1810000"
  },
  {
    "text": "catching or you're throwing exception and it will throw exception and those types are RPC exception that will have",
    "start": "1810000",
    "end": "1817399"
  },
  {
    "text": "status codes yeah one thing to to remember that those status codes are not",
    "start": "1817399",
    "end": "1823039"
  },
  {
    "text": "part of the 63 one that we're used to at HTTP level these are grpc status codes",
    "start": "1823039",
    "end": "1830399"
  },
  {
    "text": "and you'll see there are 16 of them like aborted not found already exist data",
    "start": "1830399",
    "end": "1836399"
  },
  {
    "text": "loss deadline exceeded Fair precondition stuff like that so you can",
    "start": "1836399",
    "end": "1841880"
  },
  {
    "text": "use that to basically uh cover ground around the scenarios that you have so if",
    "start": "1841880",
    "end": "1848159"
  },
  {
    "text": "you if you say hey uh I want to make this grpc call but if I do not get back",
    "start": "1848159",
    "end": "1853679"
  },
  {
    "text": "um in a timely manner in two seconds the response then this means that you can throw away the connection it's fine",
    "start": "1853679",
    "end": "1860039"
  },
  {
    "text": "close it I don't need that anymore yeah so how do you do and treat uh exception",
    "start": "1860039",
    "end": "1866080"
  },
  {
    "text": "is just by looking at the status codes related to the grpc that comes back yeah so this is one thing that uh it's worth",
    "start": "1866080",
    "end": "1874240"
  },
  {
    "text": "mentioning testing the other part still the servers is are running and we're",
    "start": "1874240",
    "end": "1879679"
  },
  {
    "text": "going to do the server stream which means that the server will push back a lot of things to the client and we're",
    "start": "1879679",
    "end": "1886159"
  },
  {
    "text": "seeing things in the client side I'm going to do net run and run not X",
    "start": "1886159",
    "end": "1895880"
  },
  {
    "text": "run see Ser it's the same approach for Loop and I'm taking the I and writing it",
    "start": "1896279",
    "end": "1902159"
  },
  {
    "text": "back so the servers streams so we're streaming like string",
    "start": "1902159",
    "end": "1907760"
  },
  {
    "text": "things but we also could stream like data types complex types and",
    "start": "1907760",
    "end": "1913159"
  },
  {
    "text": "stuff and we're here yeah and the same happen Happ s with the grpc part uh the",
    "start": "1913159",
    "end": "1919880"
  },
  {
    "text": "bir directional one sorry if I run this console that is net",
    "start": "1919880",
    "end": "1927080"
  },
  {
    "text": "run you'll see that you get both um the",
    "start": "1927080",
    "end": "1932399"
  },
  {
    "text": "client sends an i in a loop going to 10 this time and it receives back the same",
    "start": "1932399",
    "end": "1938840"
  },
  {
    "text": "responses like send us the the server the server receives this why does this",
    "start": "1938840",
    "end": "1945880"
  },
  {
    "text": "happen okay yeah so it sends an i and gets back the same eyes uh the thing is that the the",
    "start": "1945880",
    "end": "1952919"
  },
  {
    "text": "messages are not in not ordered are happening in the same connection but",
    "start": "1952919",
    "end": "1958440"
  },
  {
    "text": "they're not ordered it just happens to be order in my situation but don't expect it to be order the fact is",
    "start": "1958440",
    "end": "1965600"
  },
  {
    "text": "that when you're sending like a production in data there yeah you'll",
    "start": "1965600",
    "end": "1971120"
  },
  {
    "text": "have data that supposedly it's not part of the whole like chunk of",
    "start": "1971120",
    "end": "1977720"
  },
  {
    "text": "bites of data from a huge file or stuff like that you'll have to have way in which you say oh okay so this goes here",
    "start": "1977720",
    "end": "1984399"
  },
  {
    "text": "and this goes there to make the hole so um there are a few things tweaks that",
    "start": "1984399",
    "end": "1990399"
  },
  {
    "text": "you'll have to to do if you have such a scenario so we're done with this so",
    "start": "1990399",
    "end": "1996279"
  },
  {
    "text": "getting back to our code um there are a few things that I need to mention before we we we continue",
    "start": "1996279",
    "end": "2004679"
  },
  {
    "text": "and those things are related to some things that grpc should do good I'm",
    "start": "2004679",
    "end": "2011039"
  },
  {
    "text": "not going to open this um because it will take a lot of time to display there",
    "start": "2011039",
    "end": "2017399"
  },
  {
    "text": "so first thing to keep in mind is that St status codes at the grpc level are not status codes as we know in HTTP in",
    "start": "2017399",
    "end": "2024919"
  },
  {
    "text": "web API uh everything that we can throw and treat is an RPC exception what kind",
    "start": "2024919",
    "end": "2031559"
  },
  {
    "text": "of RPC exception it's up to us to basically uh address we can have uh",
    "start": "2031559",
    "end": "2037159"
  },
  {
    "text": "request headers response headers that is not what we used to know",
    "start": "2037159",
    "end": "2042720"
  },
  {
    "text": "we still have the HTTP ones yeah so we have HTTP headers except content type and Customs ones custom ones that we can",
    "start": "2042720",
    "end": "2050480"
  },
  {
    "text": "add but at the grpc call we don't have that anymore due to the fact The http2",
    "start": "2050480",
    "end": "2057800"
  },
  {
    "text": "Works differently yeah so what we have is a thing called trailers that is basically a key value",
    "start": "2057800",
    "end": "2064638"
  },
  {
    "text": "pair that we add for hgr PC response and we can have a look at that by looking at",
    "start": "2064639",
    "end": "2071440"
  },
  {
    "text": "our service where I added an example for it",
    "start": "2071440",
    "end": "2077079"
  },
  {
    "text": "yeah so I already told you that the server call context the second parameter that you get allows you to access things",
    "start": "2077079",
    "end": "2083440"
  },
  {
    "text": "at the HTTP level and one of them being the request headers http1 yeah uh and",
    "start": "2083440",
    "end": "2091079"
  },
  {
    "text": "then you can get values like the user agent if you're interested in I don't know culture content up type stuff like",
    "start": "2091079",
    "end": "2097680"
  },
  {
    "text": "that and also you can do things like this you can extract from there the",
    "start": "2097680",
    "end": "2104079"
  },
  {
    "text": "context that we know and from there we can access like the user if we want we",
    "start": "2104079",
    "end": "2109440"
  },
  {
    "text": "can access the claims of the user we can use auth authorization authentication details um but this time we have two",
    "start": "2109440",
    "end": "2118720"
  },
  {
    "text": "places where we can add authentication one of them being at the HTTP level we all know about that but we also can",
    "start": "2118720",
    "end": "2125760"
  },
  {
    "text": "authenticate each individual GPC call that happens somehow inside the single um the single G the single HTTP",
    "start": "2125760",
    "end": "2133079"
  },
  {
    "text": "connection and we can do that at two levels globally and per call a thing",
    "start": "2133079",
    "end": "2139119"
  },
  {
    "text": "that we didn't have before with web API so getting back to uh what I wanted",
    "start": "2139119",
    "end": "2146400"
  },
  {
    "text": "to show you is that per call we can add things that are called response",
    "start": "2146400",
    "end": "2153240"
  },
  {
    "text": "trailers and these are things like um key Val value pairs called metadata",
    "start": "2153240",
    "end": "2159319"
  },
  {
    "text": "entries that you can add in there and you can mimic basically the a header at a lower level yeah so",
    "start": "2159319",
    "end": "2167960"
  },
  {
    "text": "you can also extract those from the client part from the respon just by looking at the same collection type yeah",
    "start": "2167960",
    "end": "2174520"
  },
  {
    "text": "so of course you can um do something like this sorry you can have something",
    "start": "2174520",
    "end": "2181000"
  },
  {
    "text": "like context dot uh response headers response trailers to clear them and stuff like",
    "start": "2181000",
    "end": "2188319"
  },
  {
    "text": "that or we can do hey uh I want to get the user context and from the uh HTTP context I",
    "start": "2188319",
    "end": "2194880"
  },
  {
    "text": "want to access the the request and then to extract things so anything that you",
    "start": "2194880",
    "end": "2200920"
  },
  {
    "text": "would do in a web API at the context level you can do it here also because",
    "start": "2200920",
    "end": "2206800"
  },
  {
    "text": "that's not gone it's there we just add another level below it okay um another thing uh it's uh",
    "start": "2206800",
    "end": "2217160"
  },
  {
    "text": "related to the request headers still we have the HTTP ones but if we want to",
    "start": "2217160",
    "end": "2223240"
  },
  {
    "text": "send data that is not part of the model we can send it by adding metadata when",
    "start": "2223240",
    "end": "2229400"
  },
  {
    "text": "we do the call so it's like some other uh abstraction on top of",
    "start": "2229400",
    "end": "2235800"
  },
  {
    "text": "it okay now uh some things that you might uh tweak during development of",
    "start": "2235800",
    "end": "2243599"
  },
  {
    "text": "such service is around uh compression algorithms you can use compression",
    "start": "2243599",
    "end": "2249000"
  },
  {
    "text": "algorithms you can use gzip you can use uh your own compression provider if you want uh you can say uh what is the",
    "start": "2249000",
    "end": "2255920"
  },
  {
    "text": "maximum receed message size for the grpc so you're referring like per call yeah",
    "start": "2255920",
    "end": "2261599"
  },
  {
    "text": "so you're opening a connection and you will have several calls grpc calls each individual call can can be limited like",
    "start": "2261599",
    "end": "2269160"
  },
  {
    "text": "uh by using this Max receive Max send and you say hey I'm using small data I",
    "start": "2269160",
    "end": "2275800"
  },
  {
    "text": "want to use just 20K of data do there configure that and anything goes below",
    "start": "2275800",
    "end": "2282800"
  },
  {
    "text": "that it will break it will show an exception so this way you can control",
    "start": "2282800",
    "end": "2287880"
  },
  {
    "text": "how how much data you're sending for each individual call and if we're talking uh I already",
    "start": "2287880",
    "end": "2295640"
  },
  {
    "text": "talked about this so if we're talking about authentication types well we're",
    "start": "2295640",
    "end": "2301040"
  },
  {
    "text": "talking two places Channel level which means that in here in the",
    "start": "2301040",
    "end": "2308760"
  },
  {
    "text": "client we can say what are the credential types that",
    "start": "2308760",
    "end": "2314040"
  },
  {
    "text": "we can use so we can use insecure because it's like demo environment but we can also send claims you can add",
    "start": "2314040",
    "end": "2320839"
  },
  {
    "text": "authentication authorization in there and you can configure what you sent everything that is available with the",
    "start": "2320839",
    "end": "2326920"
  },
  {
    "text": "web API is available here too yeah so for example if you want to use aure ad",
    "start": "2326920",
    "end": "2333920"
  },
  {
    "text": "or enter how is it called now you you can also use that yeah so what it",
    "start": "2333920",
    "end": "2338960"
  },
  {
    "text": "matters is that your server knows how to decode what authentication details you're sending that's",
    "start": "2338960",
    "end": "2345400"
  },
  {
    "text": "it okay so what it supported pretty much",
    "start": "2345400",
    "end": "2351200"
  },
  {
    "text": "everything so sky is the limit every scenario is pretty much covered um client",
    "start": "2351200",
    "end": "2358400"
  },
  {
    "text": "certificates so pfx PM FM stuff like that jvt that's the most common scenario",
    "start": "2358400",
    "end": "2364520"
  },
  {
    "text": "in API so you can move around here um and since we're we get this out of our",
    "start": "2364520",
    "end": "2371960"
  },
  {
    "text": "way what JPC should do awesome and when I say should is because it doesn't do in",
    "start": "2371960",
    "end": "2378599"
  },
  {
    "text": "all situations so I have to be fair in it so one thing that it should do asum",
    "start": "2378599",
    "end": "2384000"
  },
  {
    "text": "is the thing called grpc transcoding yeah so long story short when you have",
    "start": "2384000",
    "end": "2389240"
  },
  {
    "text": "grpc Services uh some people will say hey um no kend do I have apis that are",
    "start": "2389240",
    "end": "2395240"
  },
  {
    "text": "consumed internally in my system but I also have the same API exposed to the",
    "start": "2395240",
    "end": "2401920"
  },
  {
    "text": "outside word to whatever consumer that I don't know so I cannot go to grpc and do that so what grpc transcoding will do is",
    "start": "2401920",
    "end": "2410400"
  },
  {
    "text": "to allow you to expose the grpc service as a rest API rest rest API yeah",
    "start": "2410400",
    "end": "2419520"
  },
  {
    "text": "so I have here uh an API that's uh super easy it has a service exposed with a",
    "start": "2419520",
    "end": "2426119"
  },
  {
    "text": "meth say hello and what we do is to say hey um I kind of want to have the option of",
    "start": "2426119",
    "end": "2433839"
  },
  {
    "text": "using a get method uh under this pads inside my",
    "start": "2433839",
    "end": "2440480"
  },
  {
    "text": "API and if you add this along a few with a few other things you'll be able to",
    "start": "2440480",
    "end": "2446640"
  },
  {
    "text": "call the service like internally with GPC method say clients um say hello and",
    "start": "2446640",
    "end": "2452640"
  },
  {
    "text": "in your browser yeah because grpc transcoding uh is able to translate HTTP",
    "start": "2452640",
    "end": "2460119"
  },
  {
    "text": "one to grpc service but in fact you won't have like a full Communication in",
    "start": "2460119",
    "end": "2466319"
  },
  {
    "text": "from the browser to the back end just because browser are not implementing",
    "start": "2466319",
    "end": "2471440"
  },
  {
    "text": "this standard yet if we're talking about a frontend app or a client app that runs in a browser talking with a grpc service",
    "start": "2471440",
    "end": "2479720"
  },
  {
    "text": "we're talking about grpc web which is a total different implementation of it",
    "start": "2479720",
    "end": "2485079"
  },
  {
    "text": "yeah so yet we won't have uh end to end communication using grpc we cannot yeah",
    "start": "2485079",
    "end": "2492599"
  },
  {
    "text": "so um we have this package called grpc",
    "start": "2492599",
    "end": "2499040"
  },
  {
    "text": "transcoding that we need to install yeah so um and another thing",
    "start": "2499040",
    "end": "2505280"
  },
  {
    "text": "that I will show you is that we can have Swagger just as we have in rest apis so another thing that you have to",
    "start": "2505280",
    "end": "2513400"
  },
  {
    "text": "do manually just once is to go on Google GitHub and get this under the same",
    "start": "2513400",
    "end": "2519520"
  },
  {
    "text": "structure so there is this structure called Google inside it's a folder called API and inside it to protocol",
    "start": "2519520",
    "end": "2526280"
  },
  {
    "text": "files uh yeah I know you're looking funny what this yeah I don't know uh why",
    "start": "2526280",
    "end": "2533599"
  },
  {
    "text": "they started to implement this uh this spec transcoding that it's already available in many languages but I think",
    "start": "2533599",
    "end": "2539520"
  },
  {
    "text": "they didn't get up to speed with the tooling around it and you have to do this manually grab the files put it",
    "start": "2539520",
    "end": "2545359"
  },
  {
    "text": "there and then you imported in your protocol file definition so um in your",
    "start": "2545359",
    "end": "2551200"
  },
  {
    "text": "protocol file you'll have to say hey I'm going to import this because I need it",
    "start": "2551200",
    "end": "2556559"
  },
  {
    "text": "because this is the thing that allows me to uh expose this as also a different",
    "start": "2556559",
    "end": "2561880"
  },
  {
    "text": "end point which is funky yet I hoping that I know till maybe next year given",
    "start": "2561880",
    "end": "2569359"
  },
  {
    "text": "ago they will implement this yeah so these two files that we're asked to have",
    "start": "2569359",
    "end": "2575319"
  },
  {
    "text": "here is just a funky rule around this so",
    "start": "2575319",
    "end": "2581359"
  },
  {
    "text": "that allows us to wrap our protocol um operations into uh things like this get",
    "start": "2581359",
    "end": "2588280"
  },
  {
    "text": "stuff like that uh patch we can also have bodies we can also uh basically",
    "start": "2588280",
    "end": "2595480"
  },
  {
    "text": "bind parameters values from the URL uh that's very that's very nice but let's",
    "start": "2595480",
    "end": "2601200"
  },
  {
    "text": "see it in action so once you get all the cere",
    "start": "2601200",
    "end": "2606839"
  },
  {
    "text": "ceremony out of your way like facing the files importing in your protocol file installing these packages uh you would",
    "start": "2606839",
    "end": "2614720"
  },
  {
    "text": "be able to do something like this add grpc and on top of grpc add Json trans",
    "start": "2614720",
    "end": "2620599"
  },
  {
    "text": "coding yeah so because what it happens is is Json translated to grpc Binary and",
    "start": "2620599",
    "end": "2627200"
  },
  {
    "text": "back again yeah so this runs and",
    "start": "2627200",
    "end": "2633760"
  },
  {
    "text": "hopefully not this this run on this specific",
    "start": "2634119",
    "end": "2639920"
  },
  {
    "text": "port and I can do something like this I'm",
    "start": "2639920",
    "end": "2645160"
  },
  {
    "text": "going to zoom in so look what I did um I have the Local Host this is the port uh",
    "start": "2645160",
    "end": "2652040"
  },
  {
    "text": "and I added in there a path called V1 grter and a parameter called name yeah",
    "start": "2652040",
    "end": "2657800"
  },
  {
    "text": "so instead of name I'm just going to say hello",
    "start": "2657800",
    "end": "2662960"
  },
  {
    "text": "NDC and it gets the request uh returns back this so looking at the",
    "start": "2663839",
    "end": "2669920"
  },
  {
    "text": "server side you'll see that it runs the transcoding API and it gets this",
    "start": "2669920",
    "end": "2675800"
  },
  {
    "text": "executed endpoint V1 grer with a name that gots uh that is binded from the URL",
    "start": "2675800",
    "end": "2682880"
  },
  {
    "text": "I said that the request finished it's an http2 it's a get this time yeah so at the browser level from the client uh we",
    "start": "2682880",
    "end": "2691079"
  },
  {
    "text": "do this time get requests yeah not not post but those get translated uh and in",
    "start": "2691079",
    "end": "2696400"
  },
  {
    "text": "the end are um becoming binary and from",
    "start": "2696400",
    "end": "2702200"
  },
  {
    "text": "binary again so once we do this um you realize that in fact you have grpc",
    "start": "2702200",
    "end": "2709359"
  },
  {
    "text": "service and you also have a rest service mimicked right and what you can do is",
    "start": "2709359",
    "end": "2715280"
  },
  {
    "text": "just to add Swagger on it because that's the way we document rest apis right so we just add Swagger there is the",
    "start": "2715280",
    "end": "2721720"
  },
  {
    "text": "separate implementation of swagger uh grpc Swagger as you see it's",
    "start": "2721720",
    "end": "2727160"
  },
  {
    "text": "0.3 so it's like beyond the Inception it's just started and what it will do is",
    "start": "2727160",
    "end": "2733520"
  },
  {
    "text": "just it will scan the protocol files look for the options and um extract",
    "start": "2733520",
    "end": "2739240"
  },
  {
    "text": "those in the into the URL so hopefully I can remember the Swagger",
    "start": "2739240",
    "end": "2747000"
  },
  {
    "text": "page link going to reset the zoom yeah so",
    "start": "2747000",
    "end": "2752160"
  },
  {
    "text": "it's Swagger index HTML that's the root the default one that I added and you will see that the name of the service is",
    "start": "2752160",
    "end": "2758559"
  },
  {
    "text": "whatever that we added and it exposes a get request that lives under this specific path yeah the deal is that this",
    "start": "2758559",
    "end": "2767040"
  },
  {
    "text": "parameter here needs if you have a complex type that you want to bind that to it will need to be in the protocol",
    "start": "2767040",
    "end": "2774640"
  },
  {
    "text": "file type so say hey I get this and I'm going to shove it in this specific type that gets called to the uh grpc uh",
    "start": "2774640",
    "end": "2782880"
  },
  {
    "text": "service but if you want you also can uh executed in here it will work just same",
    "start": "2782880",
    "end": "2788440"
  },
  {
    "text": "uh as it works for rest API yeah so this is grpc transcoding and also you can use like",
    "start": "2788440",
    "end": "2796280"
  },
  {
    "text": "Postman for this if you want to uh to execute uh",
    "start": "2796280",
    "end": "2801480"
  },
  {
    "text": "grpc um I said that these are things that supposedly go and work with grpc",
    "start": "2801480",
    "end": "2811400"
  },
  {
    "text": "supposedly uh because just when you if you have more than one file here more",
    "start": "2811400",
    "end": "2817520"
  },
  {
    "text": "than one import and we have more projects that use this protocol file things will go nuts uh so that's",
    "start": "2817520",
    "end": "2826720"
  },
  {
    "text": "why I wanted to show you this and that's why I created a separate project and not use the the initial protocol file um",
    "start": "2826720",
    "end": "2833800"
  },
  {
    "text": "they have an issue with Imports so if you have this import here and you're using the same protocol file else where",
    "start": "2833800",
    "end": "2840680"
  },
  {
    "text": "the project won't build try to F found to find solution around it but uh uh",
    "start": "2840680",
    "end": "2846280"
  },
  {
    "text": "Beyond me right now so uh this is pretty much it with the transcoding part uh so",
    "start": "2846280",
    "end": "2854559"
  },
  {
    "text": "mindful of the time one thing that I think I didn't show you uh and as a long",
    "start": "2854559",
    "end": "2860400"
  },
  {
    "text": "story short when it first appeared Visual Studio was not nice at all I mean",
    "start": "2860400",
    "end": "2865640"
  },
  {
    "text": "the generated code that lives there and usually leaves I'm going to show you where it lives so it lives in object",
    "start": "2865640",
    "end": "2874319"
  },
  {
    "text": "debug net version and you'll see supposedly a protocol file sorry not",
    "start": "2874319",
    "end": "2882160"
  },
  {
    "text": "here in BBG you should see the protocol file in",
    "start": "2882160",
    "end": "2887920"
  },
  {
    "text": "there somewhere uh the server just a sec bin",
    "start": "2887920",
    "end": "2894599"
  },
  {
    "text": "sorry object debug it should generate the files for protos yay finally yeah so",
    "start": "2894599",
    "end": "2900319"
  },
  {
    "text": "the server generates here under this uh wonderful folder the code that",
    "start": "2900319",
    "end": "2906640"
  },
  {
    "text": "works for us see there there are two classes one is the type containing all",
    "start": "2906640",
    "end": "2911720"
  },
  {
    "text": "the types and one is the Grid grpc or the service implementation that contains",
    "start": "2911720",
    "end": "2917040"
  },
  {
    "text": "the client per se yeah so if you're not seeing this here so or something is not",
    "start": "2917040",
    "end": "2923040"
  },
  {
    "text": "right you can delete this and rebuild the project and those will reappear um magically running yeah so I think I told",
    "start": "2923040",
    "end": "2931640"
  },
  {
    "text": "you that with grpc you won't have code references like like add project",
    "start": "2931640",
    "end": "2936680"
  },
  {
    "text": "reference reference the project that you need so let me show you here in the UN",
    "start": "2936680",
    "end": "2941760"
  },
  {
    "text": "project uh looking at the dependency see there is no project although we're using",
    "start": "2941760",
    "end": "2948359"
  },
  {
    "text": "the server yeah so how we can like make sure that the protocol file are",
    "start": "2948359",
    "end": "2954240"
  },
  {
    "text": "accessible in here so starting 2019 and now we have the option of right clicking",
    "start": "2954240",
    "end": "2961359"
  },
  {
    "text": "a project and we have something like add sorry I'm going to stop",
    "start": "2961359",
    "end": "2968280"
  },
  {
    "text": "this so right click uh add connected service it's a funny new options that we",
    "start": "2968280",
    "end": "2975720"
  },
  {
    "text": "have now so inside that connected service it's a thing that does wonders",
    "start": "2975720",
    "end": "2981000"
  },
  {
    "text": "for us and connect service and it will open up a screen and",
    "start": "2981000",
    "end": "2987599"
  },
  {
    "text": "inside the screen uh it will be we will be prompted to see what reference do we need we need an open API a grpc or WC F",
    "start": "2987599",
    "end": "2995760"
  },
  {
    "text": "web service and of course we click the plus we select what we want to select",
    "start": "2995760",
    "end": "3000880"
  },
  {
    "text": "and of course stay away of this uh and move and select JPC click next browse",
    "start": "3000880",
    "end": "3008680"
  },
  {
    "text": "until you find the server that's why I told you that you should have like a",
    "start": "3008680",
    "end": "3014079"
  },
  {
    "text": "separate project where you keep the protocol files to prevent you from doing all kind of sped references in your code",
    "start": "3014079",
    "end": "3021200"
  },
  {
    "text": "so I'm going to the server part looking for protocol files select grid prot to.",
    "start": "3021200",
    "end": "3026839"
  },
  {
    "text": "open and from here we have to select what kind of things we want here so",
    "start": "3026839",
    "end": "3032480"
  },
  {
    "text": "whether we want to behave like a client like a server like a client and a server at the same time or we want to only the",
    "start": "3032480",
    "end": "3039119"
  },
  {
    "text": "messages I mean the types that we Define with the keyword message which are the C types maybe we need only those from in a",
    "start": "3039119",
    "end": "3047440"
  },
  {
    "text": "specific project and we can like help the compiler send the right Flags to generate only those for us yeah because",
    "start": "3047440",
    "end": "3054720"
  },
  {
    "text": "basically visual Studio doesn't do any magic any more magic then wrap in a visual way the executable that generates",
    "start": "3054720",
    "end": "3063000"
  },
  {
    "text": "code for C SHP that gets uh flags and stuff like that just like net run does",
    "start": "3063000",
    "end": "3068640"
  },
  {
    "text": "you can net run no build in a similar manner you have like protoc C flags for",
    "start": "3068640",
    "end": "3075040"
  },
  {
    "text": "CP and stuff like that it's all in their documentation if you ever need it so um",
    "start": "3075040",
    "end": "3080559"
  },
  {
    "text": "client click finish and you'll see that it also installs some",
    "start": "3080559",
    "end": "3085960"
  },
  {
    "text": "packages it won't install in my case but we move on um and one thing nice about",
    "start": "3085960",
    "end": "3093880"
  },
  {
    "text": "using this is that you won't have to think what packages do I need I am a client so what kind of packages it's",
    "start": "3093880",
    "end": "3100640"
  },
  {
    "text": "client do whatever and what do I need it will do it for you yeah",
    "start": "3100640",
    "end": "3106440"
  },
  {
    "text": "so this is a thing that I wanted to show you yeah so no code references no project references the only thing that",
    "start": "3106440",
    "end": "3112559"
  },
  {
    "text": "is common is the protocol file that travels around yeah",
    "start": "3112559",
    "end": "3117640"
  },
  {
    "text": "okay let's see what else so done with the grpc transcoding uh another thing that is",
    "start": "3117640",
    "end": "3124359"
  },
  {
    "text": "really my favorite is about Transit fault handling with the grpc call with",
    "start": "3124359",
    "end": "3130319"
  },
  {
    "text": "the channel you can say hey um in case something bad happens you should retry",
    "start": "3130319",
    "end": "3136839"
  },
  {
    "text": "and you should retry using this policy and that's a thing that uh it's done out",
    "start": "3136839",
    "end": "3141960"
  },
  {
    "text": "of the box with the grpc client and without us in ining additional tools",
    "start": "3141960",
    "end": "3147000"
  },
  {
    "text": "like poly or other tool that you use for Trans fault handling and we're going to",
    "start": "3147000",
    "end": "3153799"
  },
  {
    "text": "go here in the unary part and comment something and uncomment some other",
    "start": "3153799",
    "end": "3159799"
  },
  {
    "text": "things so going to say hey um yep not",
    "start": "3159799",
    "end": "3166200"
  },
  {
    "text": "here where is it am I right",
    "start": "3166200",
    "end": "3172160"
  },
  {
    "text": "place apparently I'm not here in the right place let's see transcoding",
    "start": "3172160",
    "end": "3178200"
  },
  {
    "text": "[Music] API",
    "start": "3178200",
    "end": "3184000"
  },
  {
    "text": "what what",
    "start": "3184200",
    "end": "3187480"
  },
  {
    "text": "happened ype I'm going to open another solution just for the fun of",
    "start": "3191480",
    "end": "3196559"
  },
  {
    "text": "it so we have here in the unity on the",
    "start": "3196559",
    "end": "3201720"
  },
  {
    "text": "server in here we have a thing that I will have to uncomment just to make sure that uh the",
    "start": "3201720",
    "end": "3209359"
  },
  {
    "text": "retries are are working so for example I have the say hello method that in which",
    "start": "3209359",
    "end": "3215079"
  },
  {
    "text": "I will mimic that it throws an error so how does this server knows if it's a",
    "start": "3215079",
    "end": "3220720"
  },
  {
    "text": "retry or if it's the first call to that specific method it's just by looking at",
    "start": "3220720",
    "end": "3226319"
  },
  {
    "text": "this call grpc previous RPC attempts this is a header that is added with the",
    "start": "3226319",
    "end": "3231440"
  },
  {
    "text": "grpc call and this is the way that the server looks magically and say okay are you retrying that or is the first time",
    "start": "3231440",
    "end": "3237799"
  },
  {
    "text": "you calling me yeah so I'm using this just to mimic that something goes wrong",
    "start": "3237799",
    "end": "3243040"
  },
  {
    "text": "yeah so I'm looking if the header is present I'm going to move on and if it's not I'm going to throw an exception with",
    "start": "3243040",
    "end": "3250040"
  },
  {
    "text": "this particular message so I think in the extras fingers crossed here yeah so I",
    "start": "3250040",
    "end": "3259000"
  },
  {
    "text": "have like this I have a retry policy that I have to configure I want maximum two attempts I want to back off a bit uh",
    "start": "3259000",
    "end": "3267880"
  },
  {
    "text": "and I want to treat the retriable status C is unavailable which I'm retrying and",
    "start": "3267880",
    "end": "3273880"
  },
  {
    "text": "the deadline exceeded you can pick whatever suits your business needs um but I'm going to just use this so you",
    "start": "3273880",
    "end": "3280720"
  },
  {
    "text": "were saying hey in case this happen so in case you get an unavailable or you a",
    "start": "3280720",
    "end": "3285799"
  },
  {
    "text": "deadline exceeded then consider it a retriable and just retry so what we're",
    "start": "3285799",
    "end": "3291359"
  },
  {
    "text": "going to do is to take this policy and use it with our",
    "start": "3291359",
    "end": "3299480"
  },
  {
    "text": "request [Music]",
    "start": "3299480",
    "end": "3304829"
  },
  {
    "text": "and should work yeah so uh Channel with retry so we're creating a new channel",
    "start": "3305960",
    "end": "3312599"
  },
  {
    "text": "and passing the options and that options contain a retry policy yeah so this might be a lot of ceremony at the",
    "start": "3312599",
    "end": "3320000"
  },
  {
    "text": "beginning but when you're calling this from I don't know an MVC app web API or such it's done only once in startup and",
    "start": "3320000",
    "end": "3327039"
  },
  {
    "text": "it's easier in terms of uh what you have to configure in there so we're passing in the channel uh to the client and",
    "start": "3327039",
    "end": "3333480"
  },
  {
    "text": "we're just calling say hello right so I'm going to stop the server because I think I made the",
    "start": "3333480",
    "end": "3339240"
  },
  {
    "text": "change in there going to shut it down going to run it and build",
    "start": "3339240",
    "end": "3347440"
  },
  {
    "text": "again okay it listens and since we don't need it this",
    "start": "3349319",
    "end": "3355440"
  },
  {
    "text": "and we don't need this so here is still a client for a server and I'm going to",
    "start": "3355440",
    "end": "3361319"
  },
  {
    "text": "net run it it will build I'm going to show you what",
    "start": "3361319",
    "end": "3366960"
  },
  {
    "text": "happens yes so it looks like we kind of got the response back yeah we called we",
    "start": "3368240",
    "end": "3374240"
  },
  {
    "text": "got we got the response but look what happened on the server side hey server",
    "start": "3374240",
    "end": "3382599"
  },
  {
    "text": "side what anyways cool uh you see the",
    "start": "3382760",
    "end": "3387839"
  },
  {
    "text": "red supposedly what happens show me the",
    "start": "3387839",
    "end": "3395799"
  },
  {
    "text": "error here I had to stop it yeah so I get like this starting to receive a call",
    "start": "3395799",
    "end": "3401799"
  },
  {
    "text": "of type you it's called say hello because that's the only method that I had in there and I got this hey an error",
    "start": "3401799",
    "end": "3408400"
  },
  {
    "text": "was thrown and it said that is's an RPC exception called status with this",
    "start": "3408400",
    "end": "3413880"
  },
  {
    "text": "internal status code with a detail called not there try again yeah so",
    "start": "3413880",
    "end": "3419079"
  },
  {
    "text": "basically it retried itself without us knowing we just saw the response stay there yeah so we saw the",
    "start": "3419079",
    "end": "3426599"
  },
  {
    "text": "response but the client in a way is not a word it just looks there so uh one thing that is very nice is that it",
    "start": "3426599",
    "end": "3433200"
  },
  {
    "text": "happens transparently we just have to configure it yeah it is there for us and",
    "start": "3433200",
    "end": "3438240"
  },
  {
    "text": "it's transparent uh and you can configure like a retry policy if you want or hedging policy one of or the",
    "start": "3438240",
    "end": "3445119"
  },
  {
    "text": "other but that's it yeah so um uh it's a good practice to have such things",
    "start": "3445119",
    "end": "3451839"
  },
  {
    "text": "because if Network fails maybe second time you try uh things will uh get",
    "start": "3451839",
    "end": "3458359"
  },
  {
    "text": "together okay so uh another thing that I I I will show you it's around deadlines",
    "start": "3458359",
    "end": "3466000"
  },
  {
    "text": "or because I have such little time you're going to see it uh in the",
    "start": "3466000",
    "end": "3471160"
  },
  {
    "text": "documentation what I have to show you it's this trans fa handling out of the",
    "start": "3471160",
    "end": "3477400"
  },
  {
    "text": "box cool client side load balancing how cool is that it's still in the library",
    "start": "3477400",
    "end": "3483640"
  },
  {
    "text": "it works so usually when you're spinning up new server instances new API",
    "start": "3483640",
    "end": "3490119"
  },
  {
    "text": "instances uh and you have them in a load balancer you'll have to install tools like I don't know Linker whatever yeah",
    "start": "3490119",
    "end": "3497319"
  },
  {
    "text": "uh but this thing does this out of the box so what I'm going to do is just to",
    "start": "3497319",
    "end": "3504000"
  },
  {
    "text": "stop the server now because the server has that awesome uh throw exception that",
    "start": "3504000",
    "end": "3510039"
  },
  {
    "text": "we do not want and need now I'm going to come in this out and I say hey I will",
    "start": "3510039",
    "end": "3515839"
  },
  {
    "text": "run the server cool and then I'm going to run",
    "start": "3515839",
    "end": "3521000"
  },
  {
    "text": "another server on the another Port yeah so I'm going to net run at this URL and now",
    "start": "3521000",
    "end": "3529640"
  },
  {
    "text": "going to have two server instances waiting yeah uh it's waiting on this",
    "start": "3529640",
    "end": "3534920"
  },
  {
    "text": "port and the first console Waits on this port cool enough um let's run the",
    "start": "3534920",
    "end": "3544319"
  },
  {
    "text": "client fingers crossed it got a hello back from 5,000 in one cool I'm going to",
    "start": "3544319",
    "end": "3552520"
  },
  {
    "text": "run it again run it again I",
    "start": "3552520",
    "end": "3559280"
  },
  {
    "text": "said w there is a small catch let's",
    "start": "3562720",
    "end": "3568200"
  },
  {
    "text": "see so yeah there is the catch that I have",
    "start": "3568200",
    "end": "3574119"
  },
  {
    "text": "to stop this and use the second one because there's a different example so uh request new request and this is the",
    "start": "3574119",
    "end": "3582599"
  },
  {
    "text": "one DNS resolver practice channel channel channel channel",
    "start": "3582599",
    "end": "3589799"
  },
  {
    "text": "yes so basically now when we're running the client it will know to balance bance",
    "start": "3589799",
    "end": "3594920"
  },
  {
    "text": "itself using a balancing uh policy that we said there you can have like round",
    "start": "3594920",
    "end": "3600079"
  },
  {
    "text": "robin 5,000 5,000 in1 I",
    "start": "3600079",
    "end": "3609160"
  },
  {
    "text": "said what let's look at the policy again so we're saying like this",
    "start": "3609280",
    "end": "3616839"
  },
  {
    "text": "we have to have a balancer address we have a server that runs here and a server that runs here so we have a",
    "start": "3616839",
    "end": "3623119"
  },
  {
    "text": "factory we take the Factory and we created a channel by passing it in round robin config the",
    "start": "3623119",
    "end": "3630440"
  },
  {
    "text": "channel is called the Channel and then we're going to say that we get the channel pass it",
    "start": "3630440",
    "end": "3638079"
  },
  {
    "text": "in and we should get back the thing H it looks fine to me at",
    "start": "3638079",
    "end": "3646640"
  },
  {
    "text": "least and it let's check if the both so this",
    "start": "3646640",
    "end": "3653520"
  },
  {
    "text": "runs 5,000 run the second",
    "start": "3653520",
    "end": "3660079"
  },
  {
    "text": "instance 5,000 And1 listens cool let's see again fingers",
    "start": "3660079",
    "end": "3666920"
  },
  {
    "text": "crossed if not is",
    "start": "3666920",
    "end": "3671119"
  },
  {
    "text": "documented No it should be like getting this different uh the different uh Port",
    "start": "3672079",
    "end": "3677960"
  },
  {
    "text": "back from here sorry am I no it's just STS because the",
    "start": "3677960",
    "end": "3685039"
  },
  {
    "text": "console executes rights and stops and the next time that I'm I'm going [Music]",
    "start": "3685039",
    "end": "3690960"
  },
  {
    "text": "to yes I didn't pray enough to the demo",
    "start": "3690960",
    "end": "3696440"
  },
  {
    "text": "Gods so uh you see it balances itself I don't really know how that happens but",
    "start": "3696440",
    "end": "3701839"
  },
  {
    "text": "it happens and it's awesome because whenever you want want to have a new instance you can create a policy either",
    "start": "3701839",
    "end": "3707440"
  },
  {
    "text": "to pick first and just pass it on the round robin or maybe why not Implement something like three times here two",
    "start": "3707440",
    "end": "3713799"
  },
  {
    "text": "times there and throw an exception and back again yeah so uh I'm way above my",
    "start": "3713799",
    "end": "3720279"
  },
  {
    "text": "time uh thank you for uh listening uh I",
    "start": "3720279",
    "end": "3725359"
  },
  {
    "text": "have the resources like here so you can download the repo and",
    "start": "3725359",
    "end": "3730720"
  },
  {
    "text": "play around um I'll be around if you have any questions uh thank you for being here I",
    "start": "3730720",
    "end": "3737480"
  },
  {
    "text": "know it was a lot of uh grpc hanging around so thank you for having me",
    "start": "3737480",
    "end": "3743359"
  },
  {
    "text": "here",
    "start": "3743359",
    "end": "3746359"
  }
]