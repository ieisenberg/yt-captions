[
  {
    "start": "0",
    "end": "63000"
  },
  {
    "text": "you get started here so my name is norm Johansson I am a senior software",
    "start": "5100",
    "end": "10599"
  },
  {
    "text": "developer at AWS where I focus on dotnet technology on 82's and today we're going",
    "start": "10599",
    "end": "16358"
  },
  {
    "text": "to talk about creating service applications with AWS",
    "start": "16359",
    "end": "22170"
  },
  {
    "text": "so my main goals is to teach you how you can use done at core 2.0 with Oedipus",
    "start": "25880",
    "end": "32070"
  },
  {
    "text": "lambda a deus lambda is generally the the heart of a service application on a dress and then we're going to take a",
    "start": "32070",
    "end": "39300"
  },
  {
    "text": "step back and see what does it take to really build a full service application and if I have time I'm gonna hopefully",
    "start": "39300",
    "end": "45690"
  },
  {
    "text": "talk a little bit about some how you could do some of this in CI CD systems as well",
    "start": "45690",
    "end": "51800"
  },
  {
    "text": "so anyways lambda is the the heart of your service application this is going to provide the compute power to be able",
    "start": "52820",
    "end": "59149"
  },
  {
    "text": "to run your service applications who runs your code but what it is it's a fully managed",
    "start": "59149",
    "end": "65869"
  },
  {
    "start": "63000",
    "end": "63000"
  },
  {
    "text": "compute environment you basically just give it your package bundle and you tell lambda what function",
    "start": "65869",
    "end": "71390"
  },
  {
    "text": "in that package a bumbling boat and then take care of making sure you all have all the infrastructure needed to run that code and it doesn't on demand it's",
    "start": "71390",
    "end": "78830"
  },
  {
    "text": "gonna provide that compute capacity as requests are going to be passed into the system it's not meant for a long-running",
    "start": "78830",
    "end": "86710"
  },
  {
    "text": "batch job the most time you can run for a per request is 300 seconds like I said",
    "start": "86710",
    "end": "94190"
  },
  {
    "text": "at the vent base so those events can come out from the web HTTP events basically you could front your lambda",
    "start": "94190",
    "end": "100460"
  },
  {
    "text": "functions with Amazon API gateway or you could have it being triggered by service",
    "start": "100460",
    "end": "106550"
  },
  {
    "text": "event many 80 bit services like Amazon s3 which is our object storage system or",
    "start": "106550",
    "end": "111770"
  },
  {
    "text": "Amazon DynamoDB or management sequel system will a signal out event that lambda will run on base up those events",
    "start": "111770",
    "end": "118850"
  },
  {
    "text": "you can use that to find some your workflows to manipulate your database as as things change you can also write",
    "start": "118850",
    "end": "126679"
  },
  {
    "text": "custom event define your own event use any of the Atos SDKs and invoke your",
    "start": "126679",
    "end": "131750"
  },
  {
    "text": "lambda functions passing in those events there now when it comes to building for lambda",
    "start": "131750",
    "end": "138390"
  },
  {
    "text": "you're charged just on how much time it takes to actually run your code you're not you're not provisioning any",
    "start": "138390",
    "end": "144989"
  },
  {
    "text": "resources for this you just it's just on how long it takes to run your code you",
    "start": "144989",
    "end": "150030"
  },
  {
    "text": "don't have to think about I need X amount of servers or anything like that",
    "start": "150030",
    "end": "155090"
  },
  {
    "start": "155000",
    "end": "155000"
  },
  {
    "text": "now I do spend a lot of my time out there and get how to helping other done end developers work with lambda and I",
    "start": "155940",
    "end": "162540"
  },
  {
    "text": "see the V there's still a lot of confusion on how Len to work so I kind of wanted to take this sort of a 10,000 foot overview of what's going on under",
    "start": "162540",
    "end": "169320"
  },
  {
    "text": "the covers at lambda and this is a gross simplification but hopefully it kind of gives you an idea of what's going on so",
    "start": "169320",
    "end": "176190"
  },
  {
    "text": "imagine here we have our lambda function deployed we get an event the lemons going to take",
    "start": "176190",
    "end": "182260"
  },
  {
    "text": "that event and it's going to go and create a compute environment on-the-fly to handle that event that's why you're",
    "start": "182260",
    "end": "188410"
  },
  {
    "text": "here the term cold start where it actually creates the compute environment it's going to start up the runtime in",
    "start": "188410",
    "end": "193750"
  },
  {
    "text": "our case for net it's going to start up the dotnet core runtime and then it's going to process our event now once that",
    "start": "193750",
    "end": "200170"
  },
  {
    "text": "events done and there's nothing else coming in lambda just freezes that environment including any state that",
    "start": "200170",
    "end": "206320"
  },
  {
    "text": "you've set up in that dotnet core runtime and initialization even that's also frozen in there so if you make",
    "start": "206320",
    "end": "212230"
  },
  {
    "text": "another call comes in well I'm just going to say well I have this frozen one let's just solve that out and reuse that",
    "start": "212230",
    "end": "219070"
  },
  {
    "text": "one and that's your warm start where it's just going to reuse an existing compute environment and any of the",
    "start": "219070",
    "end": "224290"
  },
  {
    "text": "things that you've already cached initialize will already be set up for you so when that's done and there's no",
    "start": "224290",
    "end": "231100"
  },
  {
    "text": "more events the lambda will freeze that as well now what happens if you get multiple events coming in in this case",
    "start": "231100",
    "end": "237070"
  },
  {
    "text": "we have two events coming in lemons going to take those in it's going to reuse that one compute environment that",
    "start": "237070",
    "end": "243070"
  },
  {
    "text": "it already created but it doesn't know how long that's going to take to run that that could take a few milliseconds",
    "start": "243070",
    "end": "248470"
  },
  {
    "text": "I could take five minutes and lambda is all about horizontal scaling so we make sure with the 14 things as much in",
    "start": "248470",
    "end": "253810"
  },
  {
    "text": "parallel so it's just going to go create another compute environment to handle that request this is a lambda really has",
    "start": "253810",
    "end": "259989"
  },
  {
    "text": "that horizontal scaling because it's always going to create in compute environment to handle the scaled events coming into your system",
    "start": "259989",
    "end": "267569"
  },
  {
    "text": "is done lambdas gonna freeze those environments and then after some other inactivity land what's eventually going",
    "start": "268900",
    "end": "274540"
  },
  {
    "text": "to go reclaim those compute environment now what's happening all inside that group box is just all a distracted way",
    "start": "274540",
    "end": "280780"
  },
  {
    "text": "up from your point of view you're just invoking functions and you're paying how long it takes to run that code within",
    "start": "280780",
    "end": "285850"
  },
  {
    "text": "there not any of the compute environments that were set aside for that",
    "start": "285850",
    "end": "290728"
  },
  {
    "start": "290000",
    "end": "290000"
  },
  {
    "text": "now for.net core which means you're going to create a project that's targeting that core up 2.0 you build",
    "start": "292479",
    "end": "298270"
  },
  {
    "text": "that project up and you would package it up and you could package it up with dotnet publish when you run down and",
    "start": "298270",
    "end": "304120"
  },
  {
    "text": "publish that copies your applications DLL and any of its dependency DLO now I",
    "start": "304120",
    "end": "310270"
  },
  {
    "text": "highly recommend though if you do use one of our provided tools out there either the Adria's toolkit for visual",
    "start": "310270",
    "end": "316449"
  },
  {
    "text": "studio or we have extensions to the dotnet CLI to package this up because what we're going to do with our tooling",
    "start": "316449",
    "end": "322990"
  },
  {
    "text": "is we're going to optimize the package that doesn't publish great for example when you run down that publish by",
    "start": "322990",
    "end": "329979"
  },
  {
    "text": "default it's going to go and create a publish folder that will work on any environment it's going to make it so it works on Windows and Mac and Linux and",
    "start": "329979",
    "end": "336279"
  },
  {
    "text": "include all those dependencies but when we're using lambda we know that this is going to be running on a Linux",
    "start": "336279",
    "end": "341830"
  },
  {
    "text": "environment so we can tell it dotnet publish just include dependencies you need for Linux which will create you a",
    "start": "341830",
    "end": "347499"
  },
  {
    "text": "smaller package bundle and the smaller package one will you have the quicker code sir or the the shorter cold-start",
    "start": "347499",
    "end": "353349"
  },
  {
    "text": "you will have when he came for us to defining what the",
    "start": "353349",
    "end": "359750"
  },
  {
    "start": "356000",
    "end": "356000"
  },
  {
    "text": "programming model was our main goal was just keep it simple let's not cause create a big framework that could be",
    "start": "359750",
    "end": "366260"
  },
  {
    "text": "restrictive we really only wanted you to just tell us what is the method in that package bundle the call that's that's",
    "start": "366260",
    "end": "372620"
  },
  {
    "text": "really the framework it is this signature of that method is pretty flexible you could take no parameters in",
    "start": "372620",
    "end": "379760"
  },
  {
    "text": "there maybe this is just a dotnet function you want to call at a scheduled basis and it has no input or if this is",
    "start": "379760",
    "end": "386660"
  },
  {
    "text": "responding to an event you could have it taken a parameter for that event optionally and most common you will have",
    "start": "386660",
    "end": "392870"
  },
  {
    "text": "it taken I'll and a context object the context object is going to give you information about your running",
    "start": "392870",
    "end": "399020"
  },
  {
    "text": "environment it also has API that you can use to do logging as well then when you",
    "start": "399020",
    "end": "404600"
  },
  {
    "text": "create the function of lambda part of the API is you have to specify that function handler string this is what",
    "start": "404600",
    "end": "411320"
  },
  {
    "text": "identified in that package bundle what method to call and for dotnet the syntax",
    "start": "411320",
    "end": "416450"
  },
  {
    "text": "is passing in the assembly name double colon the type name and then double call in the method name with that information",
    "start": "416450",
    "end": "422780"
  },
  {
    "text": "we figure out what method to call and because the programming model is so simple we could also add F sharp report",
    "start": "422780",
    "end": "429530"
  },
  {
    "text": "as well because it's just a Dinoco runtime that's just looking at that stirring to final method and last week",
    "start": "429530",
    "end": "434960"
  },
  {
    "text": "we ship new versions of our tooling that allow you to create F sharp projects or",
    "start": "434960",
    "end": "440720"
  },
  {
    "text": "lambda inside of the studio so that's that overview let's take a",
    "start": "440720",
    "end": "446340"
  },
  {
    "text": "look at what this would be like actually inside the studio",
    "start": "446340",
    "end": "451010"
  },
  {
    "text": "here's been a studio I have a baby but",
    "start": "451629",
    "end": "456999"
  },
  {
    "text": "still get installed there we go which",
    "start": "456999",
    "end": "462819"
  },
  {
    "text": "has this main view this is Explorer which allows you to manage some of your resources here um if you don't have to",
    "start": "462819",
    "end": "468219"
  },
  {
    "text": "took it installed you can go to tools extensions go online just serve 80s and",
    "start": "468219",
    "end": "474699"
  },
  {
    "text": "there's I took it there so just go and click that and install it once you have your account set up you can click on add",
    "start": "474699",
    "end": "481059"
  },
  {
    "text": "just add your credentials on here to be able to do your lambda bit with deployments from here the toolkit allows",
    "start": "481059",
    "end": "487300"
  },
  {
    "text": "you to have multiple profiles in there some multiple accounts in there and you give each one a name the name default",
    "start": "487300",
    "end": "494409"
  },
  {
    "text": "has some special meaning to us is when you create one of the adverse SDK it has",
    "start": "494409",
    "end": "500860"
  },
  {
    "text": "a whole chain of logic it uses to find where your credentials are and if for example you didn't specify any",
    "start": "500860",
    "end": "507159"
  },
  {
    "text": "credentials information and you didn't specify profile when you setup your SDK it will go say oh do you have a default",
    "start": "507159",
    "end": "513039"
  },
  {
    "text": "profile registered on your machine and just use those credentials and that way you're just basically running it based",
    "start": "513039",
    "end": "518860"
  },
  {
    "text": "off the credentials provided by your environment and not embedding anything in your actual application now to create",
    "start": "518860",
    "end": "525910"
  },
  {
    "text": "a project we just go file new projects under c-sharp we have a double lambda where we",
    "start": "525910",
    "end": "531620"
  },
  {
    "text": "have really two different project types in here we have the lambda project type which is where you're going to create a single lambda function and deploy that",
    "start": "531620",
    "end": "537950"
  },
  {
    "text": "to lambda and then you go configure your event sources for them we also have the",
    "start": "537950",
    "end": "542960"
  },
  {
    "text": "service application where you can deploy multiple resources all together we're going to take a deeper look at that later right now we do the lambda project",
    "start": "542960",
    "end": "550460"
  },
  {
    "text": "which like I said before we also have these same templates for f-sharp if you have F sharp developers out there",
    "start": "550460",
    "end": "558370"
  },
  {
    "text": "we're going to do C sharp here and a lender project",
    "start": "558650",
    "end": "564980"
  },
  {
    "text": "and then we have a collection of blueprint that you can use to help get started with some of that initial code or like example listening to s3 events",
    "start": "564980",
    "end": "572600"
  },
  {
    "text": "like you hear a list and create this to create a lambda function that has all of the that boilerplate code for listening",
    "start": "572600",
    "end": "578899"
  },
  {
    "text": "to as the event now I've actually already created a project I'm going to just switch over to that take a look at",
    "start": "578899",
    "end": "584750"
  },
  {
    "text": "that it's really the classic example that you see in in lamda is most example is like",
    "start": "584750",
    "end": "592040"
  },
  {
    "text": "I want to be able to listen to when new images are uploaded to s3 and create a thumbnail for that image so that's what",
    "start": "592040",
    "end": "598700"
  },
  {
    "text": "this project it so we take a look at our code",
    "start": "598700",
    "end": "604570"
  },
  {
    "text": "we have the Cyril either assembly attribute but by default what lambda",
    "start": "607529",
    "end": "612600"
  },
  {
    "text": "knows what to do is to pass you in a stream as your input and take out the ticker extreme that back is respond but",
    "start": "612600",
    "end": "620699"
  },
  {
    "text": "if you register a serializer it'll actually convert that stream which is really a stream of a JSON document into",
    "start": "620699",
    "end": "627149"
  },
  {
    "text": "your dotnet type so in our code before we're going to see we're going to take an s3 event not a stream and that's",
    "start": "627149",
    "end": "632660"
  },
  {
    "text": "supported by adding this in there now we have a default constructor for",
    "start": "632660",
    "end": "639310"
  },
  {
    "text": "this it's the method that you're pointing to by that function handler is an instance method then that type has to",
    "start": "639310",
    "end": "644890"
  },
  {
    "text": "have a default constructor and that default that constructor is",
    "start": "644890",
    "end": "650399"
  },
  {
    "text": "only going to be invoked that first time the lambda function is invoked in that compute environment this is where you",
    "start": "650399",
    "end": "656129"
  },
  {
    "text": "can do any initial setting up things that you don't want to do for every function application in our case we were",
    "start": "656129",
    "end": "661319"
  },
  {
    "text": "creating an s3 client and we only want to do that one for our mutation let's",
    "start": "661319",
    "end": "667529"
  },
  {
    "text": "just take a look at some of the code here here's our function handler string so this is a method that we're actually",
    "start": "667529",
    "end": "672779"
  },
  {
    "text": "going to call it's taking in an s3 event object and it's asynchronous so we're",
    "start": "672779",
    "end": "678629"
  },
  {
    "text": "gonna return back attack and lambda is going to basically wait to see when that test says it's done to report back that the lambda function has completed that",
    "start": "678629",
    "end": "684989"
  },
  {
    "text": "event so then we're going to go make sure that the object uploaded is one of our",
    "start": "684989",
    "end": "691640"
  },
  {
    "text": "supportive type this is a hash set of all the extensions that we support and notice I have all these contacts logger",
    "start": "691640",
    "end": "698180"
  },
  {
    "text": "lines this is how we can do logging and lambda is that we can write into this statements here and every lambda",
    "start": "698180",
    "end": "705260"
  },
  {
    "text": "function has what's called a cloud watch log group which captures all of the log into there you can it also captures all",
    "start": "705260",
    "end": "712190"
  },
  {
    "text": "of your standard out in sanitary so if you have any council write lines those will also be written back to the log",
    "start": "712190",
    "end": "717770"
  },
  {
    "text": "grip as well now cuz dynacord doesn't have a system",
    "start": "717770",
    "end": "723510"
  },
  {
    "text": "that drawing to do image manipulation to do image vanillish image manipulation in dotnet core I am using this library out",
    "start": "723510",
    "end": "730800"
  },
  {
    "text": "here called magic net which is there using imagemagick that's what this code",
    "start": "730800",
    "end": "736830"
  },
  {
    "text": "here is doing is it's just we're going to download the object from s3 and use image magic to go and create a thumbnail",
    "start": "736830",
    "end": "745640"
  },
  {
    "text": "ever use s3 the basic primitives of s3 is you have a bucket that contains all of your object and an object has a key",
    "start": "746610",
    "end": "753120"
  },
  {
    "text": "that identifies where it is now what I'm doing here is I'm going to say for all the thumbnails take the last part of the",
    "start": "753120",
    "end": "759540"
  },
  {
    "text": "key information which is just a string and I want to just put the word thumbnails of the prefix this is how I",
    "start": "759540",
    "end": "765540"
  },
  {
    "text": "can kind of partition some of the data in my bucket so this is what thumbnails will go and then we'll put that object",
    "start": "765540",
    "end": "772500"
  },
  {
    "text": "back up that's our function let's take a look at how we would deploy that we can",
    "start": "772500",
    "end": "778680"
  },
  {
    "text": "do that by right clicking and we can say publish page with lambda",
    "start": "778680",
    "end": "784370"
  },
  {
    "text": "a lot of this has already filled up for us the reason it's filled out as part of our blueprints as we write this defaults",
    "start": "784690",
    "end": "789910"
  },
  {
    "text": "file here um that has a lot of the initial settings for us set up by the blueprint which is the name of the",
    "start": "789910",
    "end": "795670"
  },
  {
    "text": "assembly and the type and the method name and as I go through this wizard I make settings and I have this check all",
    "start": "795670",
    "end": "801490"
  },
  {
    "text": "the settings they make in the wizard will be saved in that file so when I do deployments in the future it'll just",
    "start": "801490",
    "end": "806650"
  },
  {
    "text": "reuse all that information also going to allow me to when I switch to the command-line deployment it will reuse",
    "start": "806650",
    "end": "813790"
  },
  {
    "text": "that same file that I can just use that same deployment back and forth between the toolkit and MEDLINE but let's call",
    "start": "813790",
    "end": "820900"
  },
  {
    "text": "this NDC afternoon Oh an injury site or",
    "start": "820900",
    "end": "827530"
  },
  {
    "text": "I don't have any time number ten I came to brow many times I practice this dog here",
    "start": "827530",
    "end": "833130"
  },
  {
    "text": "so in the next screen that most important we have to do is we have to give it a roll the roll is what is",
    "start": "834810",
    "end": "840330"
  },
  {
    "text": "basically it can be signed to our lambda function and it was giving the lambda service to act on our behalf because our",
    "start": "840330",
    "end": "846960"
  },
  {
    "text": "service our lambda function has to access s3 and by default lambda just can't go access s3 on our behalf you",
    "start": "846960",
    "end": "853380"
  },
  {
    "text": "have to give it permission to do it the role that you assign to it is what gives it that permission from the styler",
    "start": "853380",
    "end": "860190"
  },
  {
    "text": "box I could create new ones a new role based on some of the default policies out there my could also craft one on the",
    "start": "860190",
    "end": "866700"
  },
  {
    "text": "IM console identity access module egg Duty necklace management console I've just already set up a role already I'm",
    "start": "866700",
    "end": "873450"
  },
  {
    "text": "going to just reuse that one now Memory here this is really what it",
    "start": "873450",
    "end": "878540"
  },
  {
    "text": "comes to Atlanta this is the birth where your vertical scaling comes into play as you add as you assign more memory to",
    "start": "878540",
    "end": "885680"
  },
  {
    "text": "Year lambda function it also increases the amount of CPU power your lambda function is so this is your slider bar",
    "start": "885680",
    "end": "891530"
  },
  {
    "text": "or how much vertical scaling you need we can also pass environment metals but I'm",
    "start": "891530",
    "end": "897230"
  },
  {
    "text": "gonna leave everything else on default and just upload so what's going on basically we're",
    "start": "897230",
    "end": "902960"
  },
  {
    "text": "running doesn't publish we're running published with all the parameters to no publish this up for a Linux environment and then we're telling lamb to go create",
    "start": "902960",
    "end": "910010"
  },
  {
    "text": "a function for it with that bundle and this is going to bring up our lamb to view which is kind of come up from the",
    "start": "910010",
    "end": "915920"
  },
  {
    "text": "Explorer",
    "start": "915920",
    "end": "918279"
  },
  {
    "text": "view we can hear I could put in a sample request this is the JSON document representing our sample and there's an",
    "start": "921059",
    "end": "928049"
  },
  {
    "text": "examples here of some of them for example this is what an s3 put looks like I could then go fill this in with",
    "start": "928049",
    "end": "933779"
  },
  {
    "text": "real values and then just push invoke to book our lambda function I could some of",
    "start": "933779",
    "end": "939689"
  },
  {
    "text": "the configuration I can also go set up some of the event sources from the toolkit we have just a few of the event",
    "start": "939689",
    "end": "945179"
  },
  {
    "text": "sources you can set up from here a lot of the other places in a dress you would go to their console to get those",
    "start": "945179",
    "end": "950219"
  },
  {
    "text": "configured so for us we want to configure the this an s3 bucket to listen to the first let's go create an",
    "start": "950219",
    "end": "956999"
  },
  {
    "text": "s3 bucket the norm images",
    "start": "956999",
    "end": "963410"
  },
  {
    "text": "someone has already claimed that bucket every bucket name is global unique so",
    "start": "968190",
    "end": "974710"
  },
  {
    "text": "we're gonna call this Norman between BC surely known as second Allan okay that bucket is created now we can",
    "start": "974710",
    "end": "982230"
  },
  {
    "text": "just go here and say I want to use the s3 event type and I want to say here's",
    "start": "982230",
    "end": "989070"
  },
  {
    "text": "my bucket and I don't want every object uploaded to this bucket I only want or excuse me",
    "start": "989070",
    "end": "994750"
  },
  {
    "text": "I don't want every object in this bucket sent into our lambda function I only want ones that have a prefix in their",
    "start": "994750",
    "end": "1000870"
  },
  {
    "text": "object P of images so when I upload anything into my new bucket which has an",
    "start": "1000870",
    "end": "1006090"
  },
  {
    "text": "object key in the start of that is emitted it will invoke our lambda function okay and so now it's all",
    "start": "1006090",
    "end": "1013320"
  },
  {
    "text": "configured and set up for us to go so we go up on our bucket up here I'm going to",
    "start": "1013320",
    "end": "1020790"
  },
  {
    "text": "create a folder called images",
    "start": "1020790",
    "end": "1023930"
  },
  {
    "text": "images here Apolo",
    "start": "1026790",
    "end": "1033260"
  },
  {
    "text": "it's uploading so here this image on full-size any Soundgarden fans this is the original black hole son",
    "start": "1037460",
    "end": "1043819"
  },
  {
    "text": "in Seattle my kids are climbing all over it there",
    "start": "1043820",
    "end": "1049180"
  },
  {
    "text": "that should have run and there we go now up here we should see here that thumbnails folder is their lambda",
    "start": "1049180",
    "end": "1055490"
  },
  {
    "text": "function just picked up those events and created our thumbnail so click on our black hole son now we can see now we",
    "start": "1055490",
    "end": "1060770"
  },
  {
    "text": "have that small one we didn't have to deploy any compute environments we just deployed our lambda functions set up",
    "start": "1060770",
    "end": "1065780"
  },
  {
    "text": "that event source and it got all that configure for you",
    "start": "1065780",
    "end": "1072280"
  },
  {
    "text": "if you look back at our functions view and go to logs refresh that",
    "start": "1072280",
    "end": "1078960"
  },
  {
    "text": "we have a lot of logs actually I'm gonna click on these we can see this positive thing the reason we're seeing so many",
    "start": "1079170",
    "end": "1085950"
  },
  {
    "text": "different log files is this goes again back to Howell and is horizontally scaling we sit in a bunch of and all at",
    "start": "1085950",
    "end": "1091500"
  },
  {
    "text": "once the lambda and landed in wait for one images done in time work on the next one it created multiple multiple compute",
    "start": "1091500",
    "end": "1098700"
  },
  {
    "text": "environment and each compute environment has its own log string for that so that's how you can see how it did scale",
    "start": "1098700",
    "end": "1104520"
  },
  {
    "text": "out that way the last thing I wanted to show before we switch back to slide is",
    "start": "1104520",
    "end": "1109980"
  },
  {
    "text": "if we look at the CS prons file one of the things we add in there is this",
    "start": "1109980",
    "end": "1115350"
  },
  {
    "text": "reference the Amazon lambda tool and this is a dotnet feel like tool reference this is what allows us to",
    "start": "1115350",
    "end": "1121080"
  },
  {
    "text": "switch back and forth very easily between the visual studio and the command-line it's also the trigger we're",
    "start": "1121080",
    "end": "1126270"
  },
  {
    "text": "using in the toolkit to know when to show that publish option basically our",
    "start": "1126270",
    "end": "1131340"
  },
  {
    "text": "logic in the toolkit is is this project a dotnet core project and does it reference Amazon lambda tools if it does",
    "start": "1131340",
    "end": "1136740"
  },
  {
    "text": "then we assume this is something you intend to deploy the lambda so if we go to the command line I can say dotnet",
    "start": "1136740",
    "end": "1147980"
  },
  {
    "text": "land figure that we can see here are some of the commands that you can do from the command line and that deploy",
    "start": "1147980",
    "end": "1154980"
  },
  {
    "text": "function is the same one we just did in the wizard and because everything got written to that defaults file of",
    "start": "1154980",
    "end": "1160530"
  },
  {
    "text": "everything we we saved you know there's the function name and the handler I can",
    "start": "1160530",
    "end": "1165960"
  },
  {
    "text": "actually just say dotnet land deploy function and I don't have to pass any of",
    "start": "1165960",
    "end": "1171600"
  },
  {
    "text": "the argument it'll just rerun that same deployment I can override any of the settings in that file by passing those",
    "start": "1171600",
    "end": "1177240"
  },
  {
    "text": "arguments on the command line okay",
    "start": "1177240",
    "end": "1184289"
  },
  {
    "start": "1185000",
    "end": "1185000"
  },
  {
    "text": "one more thing though we created a project from visual studio you can also create a lambda project from the command",
    "start": "1185340",
    "end": "1191800"
  },
  {
    "text": "line as well we have a package other color Amazon lambda template that you",
    "start": "1191800",
    "end": "1196900"
  },
  {
    "text": "can install with the.net new command done that new - I in the package name once you do that then all those same",
    "start": "1196900",
    "end": "1203530"
  },
  {
    "text": "lender projects that we have in Visual Studio are available from the command line as well so now that we know how we",
    "start": "1203530",
    "end": "1212770"
  },
  {
    "text": "compare to a lambda function a server this application is usually a lot more than just a single lambda function it's",
    "start": "1212770",
    "end": "1219310"
  },
  {
    "text": "usually made up of a several lambda functions and other eight of its resources a common anatomy of acerbic",
    "start": "1219310",
    "end": "1227380"
  },
  {
    "start": "1225000",
    "end": "1225000"
  },
  {
    "text": "application is you would use a base lambda or your compute power and then",
    "start": "1227380",
    "end": "1232390"
  },
  {
    "text": "for storage you probably use Amazon s3 as object storage or maybe Amazon",
    "start": "1232390",
    "end": "1238120"
  },
  {
    "text": "dynamic no I know to be as our management sequel database in a servlet",
    "start": "1238120",
    "end": "1244540"
  },
  {
    "text": "application you're often having lots of different pieces and therefore usually working asynchronously you have to work",
    "start": "1244540",
    "end": "1250150"
  },
  {
    "text": "on how you're going to communicate between others communication we have Amazon sequel temple huge service for",
    "start": "1250150",
    "end": "1256330"
  },
  {
    "text": "your queues and simple notification service to broadcast messages with topic as well as we also have all those",
    "start": "1256330",
    "end": "1262780"
  },
  {
    "text": "service event as well to manage your communication now if you have a large",
    "start": "1262780",
    "end": "1268450"
  },
  {
    "text": "workflow that you want to build something that just can't really gun be done in just one lambda function you can",
    "start": "1268450",
    "end": "1273820"
  },
  {
    "text": "use a bit step function to define that workflow which you're building is a state machine and have it mapped through",
    "start": "1273820",
    "end": "1279550"
  },
  {
    "text": "all your lambda function for each stage it needs to go through that",
    "start": "1279550",
    "end": "1284039"
  },
  {
    "start": "1284000",
    "end": "1284000"
  },
  {
    "text": "have multiple database resources we're going to go we need to make sure that everything is connected up the right way",
    "start": "1285860",
    "end": "1290870"
  },
  {
    "text": "we really don't want to go clicking through all the different consoles to make sure all this is set up we want an easy repeatable way to deploy it a tub",
    "start": "1290870",
    "end": "1297380"
  },
  {
    "text": "is CloudFormation is the ATIS tool that you use for this basically what you do",
    "start": "1297380",
    "end": "1302690"
  },
  {
    "text": "is you write a template file which can be written either JSON or yamo that declares these are all the resources I",
    "start": "1302690",
    "end": "1308779"
  },
  {
    "text": "need and these are how they're connected up as well and then when you deploy them it's called a stack and it's going to",
    "start": "1308779",
    "end": "1314600"
  },
  {
    "text": "create all those resources just as one unit and this is really great for your dev test cycle when I want to go here at",
    "start": "1314600",
    "end": "1321679"
  },
  {
    "text": "my own personal stack of everything go run this instantiate this template do my testing and then I can just delete the",
    "start": "1321679",
    "end": "1328549"
  },
  {
    "text": "stack and it'll take care of clearing out all those resources that I created but we didn't just leave anything else orphaned in our account now to",
    "start": "1328549",
    "end": "1339289"
  },
  {
    "start": "1337000",
    "end": "1337000"
  },
  {
    "text": "demonstrate a surface application I wrote a demo application that we're gonna walk through it's called my video",
    "start": "1339289",
    "end": "1344360"
  },
  {
    "text": "tag cloud generator what the goal of this is is we're going to take a URL of some video from summer online and",
    "start": "1344360",
    "end": "1350120"
  },
  {
    "text": "generate a tag cloud of what being said in that video we're gonna do that all thoroughly now to do that conversion",
    "start": "1350120",
    "end": "1360200"
  },
  {
    "start": "1357000",
    "end": "1357000"
  },
  {
    "text": "though that's going to potentially take a long time especially depending on how long that video is so this is where",
    "start": "1360200",
    "end": "1365450"
  },
  {
    "text": "we're going to define a state machine that manages the flow of that conversion from a video to our tag cloud I'm not",
    "start": "1365450",
    "end": "1371659"
  },
  {
    "text": "going to die too much into this light because we're going to jump just into the code and see how they fell word",
    "start": "1371659",
    "end": "1376929"
  },
  {
    "text": "let's do and I'm just point out too I'm going to at the end of this slide I'm gonna have a link to all the code then",
    "start": "1376929",
    "end": "1382549"
  },
  {
    "text": "going to demo for everybody wants to see that I don't have time to go through every part of it",
    "start": "1382549",
    "end": "1388840"
  },
  {
    "text": "you project this is my step function project",
    "start": "1388840",
    "end": "1394200"
  },
  {
    "text": "and I created this from that wizard up there as a new project any bus lambdas",
    "start": "1394200",
    "end": "1400570"
  },
  {
    "text": "serverless and I have my step function blueprint there to help get how my get set up for",
    "start": "1400570",
    "end": "1406750"
  },
  {
    "text": "that now this project is different in the lamda project in that it contained the",
    "start": "1406750",
    "end": "1413430"
  },
  {
    "text": "CloudFormation template which is going to be the driver for our deployment and for the state the step functions limp we",
    "start": "1413430",
    "end": "1420060"
  },
  {
    "text": "also have a state machine that JSON file that defined the whole workflow that we're going to use for this machine now",
    "start": "1420060",
    "end": "1426150"
  },
  {
    "text": "I just have the JSON one here in the console they actually have a designer for this but I'm gonna take a look at Jason one cuz I think he gets a better",
    "start": "1426150",
    "end": "1433230"
  },
  {
    "text": "clear what's going on underneath the covers so here we're gonna start off saying what is what what point in our",
    "start": "1433230",
    "end": "1440820"
  },
  {
    "text": "state machine now we're gonna start with and it's gonna start with our transfer video to s3 path which is each one of",
    "start": "1440820",
    "end": "1447990"
  },
  {
    "text": "these nodes have a type this one is a type path a task is something that a lambda function is going to handle so",
    "start": "1447990",
    "end": "1455670"
  },
  {
    "text": "when it gets to the state can invoke this lambda function let's take a look at that lambda function that encode here",
    "start": "1455670",
    "end": "1464510"
  },
  {
    "text": "does this then close this down it's going to call this code here to",
    "start": "1464840",
    "end": "1471220"
  },
  {
    "text": "basically go and download our video from somewhere and upload it to s3 in the",
    "start": "1471220",
    "end": "1477680"
  },
  {
    "text": "lambs environment you always have access to writing to the temp folder that's read temporal storage can be now notice",
    "start": "1477680",
    "end": "1485660"
  },
  {
    "text": "in this lambda function I am taking in a state object and returning back this data object this is a class that I wrote",
    "start": "1485660",
    "end": "1491540"
  },
  {
    "text": "for my work machine work state machine",
    "start": "1491540",
    "end": "1496360"
  },
  {
    "text": "all the information that I need while going through this work for my input into this is I needed an the essentially",
    "start": "1497440",
    "end": "1503860"
  },
  {
    "text": "display name of this video I want some unique ID for this video that I can",
    "start": "1503860",
    "end": "1509980"
  },
  {
    "text": "refer to it later and what's the URL that I want to convert to now every one",
    "start": "1509980",
    "end": "1515980"
  },
  {
    "text": "of the lambda functions part of my state machine they're going to take this state object and as its input and they're",
    "start": "1515980",
    "end": "1521350"
  },
  {
    "text": "going to return it back out and that's how we can keep the state running through our whole workflow and we can add more data to it so you can see I",
    "start": "1521350",
    "end": "1530200"
  },
  {
    "text": "think it's in the upload here I'm stayed up I'm setting the the link to",
    "start": "1530200",
    "end": "1537110"
  },
  {
    "text": "the s3 euro that's how we can build up our state there",
    "start": "1537110",
    "end": "1542370"
  },
  {
    "text": "you minutes ago now we need to trance",
    "start": "1542370",
    "end": "1550090"
  },
  {
    "text": "in s3 we need to get the transcript out of it and we have a service called Amazon transcribe which will take the",
    "start": "1550090",
    "end": "1556360"
  },
  {
    "text": "link to a video in s3 and will couldn't create us a transcription for transcript for now that can take a while to run",
    "start": "1556360",
    "end": "1563320"
  },
  {
    "text": "depending on the video so let's just take a look so that lamb flesh we're gonna take that",
    "start": "1563320",
    "end": "1569740"
  },
  {
    "text": "same state object in using our transcribed service we're gonna go start",
    "start": "1569740",
    "end": "1575200"
  },
  {
    "text": "a job and we're gonna record the name of that job this is just all we're gonna do",
    "start": "1575200",
    "end": "1581410"
  },
  {
    "text": "in that note it just started that job and now we need to go see how long we have to stay at this point our state",
    "start": "1581410",
    "end": "1587110"
  },
  {
    "text": "machine tool that is complete how we do that is first we're just going to sleep",
    "start": "1587110",
    "end": "1592150"
  },
  {
    "text": "for five seconds do that the next stage will sleep and then after that we're",
    "start": "1592150",
    "end": "1597370"
  },
  {
    "text": "going to call our get pass I get our get status for transcription pass transcribe",
    "start": "1597370",
    "end": "1604120"
  },
  {
    "text": "pass and that justice does it simply get on that using our client",
    "start": "1604120",
    "end": "1610330"
  },
  {
    "text": "we're gonna go list our jobs passing in the name of our job and we're going to go sit the job status based off of what",
    "start": "1610330",
    "end": "1617650"
  },
  {
    "text": "the service returned and we're sending it on that state object with that transcription jobs data now if we look",
    "start": "1617650",
    "end": "1626410"
  },
  {
    "text": "at our state machine we can have it's going to move next to this conditional or choice type which we can look at our",
    "start": "1626410",
    "end": "1633910"
  },
  {
    "text": "state object this is using a JSON path if that's how that functions treat file",
    "start": "1633910",
    "end": "1639040"
  },
  {
    "text": "your state is a JSON document we can use a JSON path in there to see if it's currently equal to complete let's move",
    "start": "1639040",
    "end": "1645610"
  },
  {
    "text": "on to the next step if it's still in progress let's have it go back in a loop",
    "start": "1645610",
    "end": "1650830"
  },
  {
    "text": "back to the sleep State we can keep pulling on this with our step functions so that job is done then once that's",
    "start": "1650830",
    "end": "1658480"
  },
  {
    "text": "done we'll go into our processing our output which is where we're basically go",
    "start": "1658480",
    "end": "1664030"
  },
  {
    "text": "take our transcript and copy to our s3 bucket and another function that's going",
    "start": "1664030",
    "end": "1669100"
  },
  {
    "text": "to go and examine our transcript to find all of our common terms that we'll use in our cloud or tag clause now I'm not",
    "start": "1669100",
    "end": "1676000"
  },
  {
    "text": "going to go through all that code it's pretty similar to saying before again all the code is available to you if you want to get deeper into that",
    "start": "1676000",
    "end": "1683149"
  },
  {
    "text": "but so now we want to deploy this and this is a cloud formation deployment I'm going to deploy it first and then we'll",
    "start": "1683149",
    "end": "1688669"
  },
  {
    "text": "take a look at the CloudFormation template while it's the point so we're going to right click there and then the",
    "start": "1688669",
    "end": "1697129"
  },
  {
    "text": "deployment is a little different on this case is now we're not deploying a single function we're deploying a cloud formation template which create the stat",
    "start": "1697129",
    "end": "1703129"
  },
  {
    "text": "we've got to give it a stack name NDC cloud and then we have to give it s3",
    "start": "1703129",
    "end": "1712429"
  },
  {
    "text": "bucket the reason we're giving an s3 bucket is what we're doing deployment is we're building the package bundle and",
    "start": "1712429",
    "end": "1718700"
  },
  {
    "text": "we're going to upload that package bundle to s3 and then we're going to go modify the CloudFormation template for",
    "start": "1718700",
    "end": "1723889"
  },
  {
    "text": "all of our lambda functions in there and say where is the code for that where we just put it up in f3 I'm just going",
    "start": "1723889",
    "end": "1730489"
  },
  {
    "text": "to push publish and that they go so this is going to do that bill and then upload to s3",
    "start": "1730489",
    "end": "1737320"
  },
  {
    "text": "but now it's initiating with confirmation if they go create this stack and it launches the stack view",
    "start": "1743919",
    "end": "1750139"
  },
  {
    "text": "which is going to start returning back events of all these resources coming online while that's doing that let's",
    "start": "1750139",
    "end": "1756769"
  },
  {
    "text": "take a look at the cloud formation template so here define all of our resources here we've got 1 2 3 4 5",
    "start": "1756769",
    "end": "1764659"
  },
  {
    "text": "lambda functions we're deploying an s3 bucket we are creating and I am role for",
    "start": "1764659",
    "end": "1770299"
  },
  {
    "text": "to give our permission for overtime to functions and as well as defining our state machine",
    "start": "1770299",
    "end": "1775730"
  },
  {
    "text": "Graydon's bucket was very simple we damps that any property left the name empty if we wanted to Brandon we wanted",
    "start": "1775730",
    "end": "1781519"
  },
  {
    "text": "to generate a name so we made sure every time we deploy a unique name when it",
    "start": "1781519",
    "end": "1787129"
  },
  {
    "text": "comes to defining the lambda function here is a function handler string that we served before would identify in our",
    "start": "1787129",
    "end": "1793490"
  },
  {
    "text": "package bundle what is the name of the method we want to call here's we're going to refer to the role",
    "start": "1793490",
    "end": "1799639"
  },
  {
    "text": "that we're creating down below this is what's gonna assign permissions to it I should mention too this is our cloud",
    "start": "1799639",
    "end": "1804950"
  },
  {
    "text": "formation area video 3 - where we do have some intellisense as well for a lot of thing",
    "start": "1804950",
    "end": "1810940"
  },
  {
    "text": "we also were passing an environment variable so this is we created a bucket up before but our code needs to know",
    "start": "1812000",
    "end": "1817879"
  },
  {
    "text": "what's the name of the bucket to use they were passing the name in that bucket as an environment variable into our lambda function so then in my code I",
    "start": "1817879",
    "end": "1825799"
  },
  {
    "text": "my utility code that's going to go look to grab that bucket out of the environment variable so that's how my",
    "start": "1825799",
    "end": "1830809"
  },
  {
    "text": "code knows which bucket to use or storing all of this tactile information",
    "start": "1830809",
    "end": "1836710"
  },
  {
    "text": "now the code this is blank like I mentioned before and the deployment code went through",
    "start": "1838020",
    "end": "1843640"
  },
  {
    "text": "this file after word after uploaded s3 and updated those fields to where it just put up our deployment package",
    "start": "1843640",
    "end": "1851010"
  },
  {
    "text": "now the other lambda function declarations are very similar just really changing the function hello",
    "start": "1851010",
    "end": "1856510"
  },
  {
    "text": "strength here's our I am role that we have created this is where basically we have to tell the lint allow the lambda",
    "start": "1856510",
    "end": "1862960"
  },
  {
    "text": "service to give it permission to assume in a role for us and then these are the",
    "start": "1862960",
    "end": "1868450"
  },
  {
    "text": "permissions it's allowed to act act at court it can access the transcribe service it can access the s3 service and",
    "start": "1868450",
    "end": "1874270"
  },
  {
    "text": "this one also gives it access to writing cloud watch law this one is still pretty",
    "start": "1874270",
    "end": "1879760"
  },
  {
    "text": "permitted permission if I really wanted to walk down I could lock this down to individual actions as well as individual",
    "start": "1879760",
    "end": "1885490"
  },
  {
    "text": "resources though it could only access just the resources that I want the other",
    "start": "1885490",
    "end": "1893140"
  },
  {
    "text": "one in don't show here is this is our state machine definition notice here",
    "start": "1893140",
    "end": "1898659"
  },
  {
    "text": "that the state machine definition is actually blank one of the two features that we added to our dotnet tooling if",
    "start": "1898659",
    "end": "1904149"
  },
  {
    "text": "we wanted to be give you the ability to define your state machine in a separate file that are trying to fit that in there so we had a written in the other",
    "start": "1904149",
    "end": "1911919"
  },
  {
    "text": "file and then in that default file we have this parameter called template substitution which is allows us with a",
    "start": "1911919",
    "end": "1918789"
  },
  {
    "text": "JSON path point to that and say replace what that's pointing to to the contents in the file this is allowing us to",
    "start": "1918789",
    "end": "1926190"
  },
  {
    "text": "compose a cloud permission to put with multiple file and the last two",
    "start": "1926190",
    "end": "1933100"
  },
  {
    "text": "parameters I wanted to talk about is this is the first part of our service application it's creating our state",
    "start": "1933100",
    "end": "1940029"
  },
  {
    "text": "machine it's creating our bucket and other parts of our application need to be able to find out what is our state",
    "start": "1940029",
    "end": "1945820"
  },
  {
    "text": "machine and what is our bucket that we're using so we're going to publish those that information up to what's",
    "start": "1945820",
    "end": "1951130"
  },
  {
    "text": "called the parameter store and with that then our other other parts of our",
    "start": "1951130",
    "end": "1958029"
  },
  {
    "text": "service application can then go look up that information to find out where do I go start an execution that or where do I",
    "start": "1958029",
    "end": "1963309"
  },
  {
    "text": "go get my s3 bucket information so this should all be deployed now it",
    "start": "1963309",
    "end": "1969889"
  },
  {
    "text": "should've actually got pretty quick so it started a finished a1 3001 the Seattle time and then 1:20 so it took",
    "start": "1969889",
    "end": "1978289"
  },
  {
    "text": "about a minute to create all those resources for now if we were to go to",
    "start": "1978289",
    "end": "1983690"
  },
  {
    "text": "the step function console here's the state machine that we just created the",
    "start": "1983690",
    "end": "1989119"
  },
  {
    "text": "CloudFormation template and I can start an execution here and so the state going",
    "start": "1989119",
    "end": "1995690"
  },
  {
    "text": "through execution is a JSON document so which going to be sterilized into our",
    "start": "1995690",
    "end": "2000789"
  },
  {
    "text": "net state object I have a sample of what that would look like",
    "start": "2000789",
    "end": "2007470"
  },
  {
    "text": "so we have to specify the video name and an ID for and some video let's go out to",
    "start": "2009690",
    "end": "2016270"
  },
  {
    "text": "TED Talks and see if we can find video let's see what Bill Gates is up to",
    "start": "2016270",
    "end": "2023309"
  },
  {
    "text": "it is video I'll be that link",
    "start": "2023909",
    "end": "2030619"
  },
  {
    "text": "you call this delegate and we just need some",
    "start": "2031389",
    "end": "2038609"
  },
  {
    "text": "unique idea we're gonna call this first video then we'll start that up that's",
    "start": "2038609",
    "end": "2045989"
  },
  {
    "text": "going to begin our execution we can actually see how that execution is going through our system on the tonsil oh we",
    "start": "2045989",
    "end": "2052559"
  },
  {
    "text": "can see all those step that we define in that JSON file here you can also see right now is 50 copying that file to s3",
    "start": "2052559",
    "end": "2060319"
  },
  {
    "text": "you can look here we can see this is the input that were pressed into it into",
    "start": "2060319",
    "end": "2065549"
  },
  {
    "text": "that state and that's complete we get an output that wouldn't in this case we're gonna have filled in the s3 URL for so",
    "start": "2065549",
    "end": "2075210"
  },
  {
    "text": "while this is creating our first video let's keep moving on oh we can see the first stage is now complete and we've",
    "start": "2075210",
    "end": "2082589"
  },
  {
    "text": "got an s3 URL for that so now that we",
    "start": "2082589",
    "end": "2089940"
  },
  {
    "start": "2089000",
    "end": "2089000"
  },
  {
    "text": "have our serval is back in creating our tag cloud information we want to expose a REST API so that we can create our",
    "start": "2089940",
    "end": "2097740"
  },
  {
    "text": "client with this is a mobile app or web app web app we're going to create an EPA",
    "start": "2097740",
    "end": "2102900"
  },
  {
    "text": "REST API using Amazon API gateway and there's three api's we really have to care about here we want an API get to",
    "start": "2102900",
    "end": "2110849"
  },
  {
    "text": "get all of the tag summary information we want to get a get to get all the individual details all the tag category",
    "start": "2110849",
    "end": "2117240"
  },
  {
    "text": "for a particular one and we want to be able to post to this API so we can start a new job now each of these api's can be",
    "start": "2117240",
    "end": "2125490"
  },
  {
    "text": "backed by different resources in our case we're going to back everything up with a lambda function you could have some of these backed up with some load",
    "start": "2125490",
    "end": "2131849"
  },
  {
    "text": "balance application or any two instances or s3 bucket or just some other HTM",
    "start": "2131849",
    "end": "2137579"
  },
  {
    "text": "fluid out there now one of the interesting things that",
    "start": "2137579",
    "end": "2143100"
  },
  {
    "start": "2140000",
    "end": "2140000"
  },
  {
    "text": "we've been working on in our data core and lambda tooling is the ability to run a spinet core as a actual lambda",
    "start": "2143100",
    "end": "2149760"
  },
  {
    "text": "function instead of running as a webserver just run an edit lambda function this allows us to basically",
    "start": "2149760",
    "end": "2155220"
  },
  {
    "text": "reuse the common framework that we we know with a phonetic or all those",
    "start": "2155220",
    "end": "2160410"
  },
  {
    "text": "extensions in middle report we don't have to learn a new program model local development is a lot is really easy",
    "start": "2160410",
    "end": "2166470"
  },
  {
    "text": "because we all know how to do f5 for a clinical application and debug from there when we launch the dotnet core one",
    "start": "2166470",
    "end": "2173670"
  },
  {
    "text": "out support we launched this part of preview one of the biggest drawbacks though was the package bundle size if",
    "start": "2173670",
    "end": "2180090"
  },
  {
    "text": "you include all the basement record dependencies but with two oh there has",
    "start": "2180090",
    "end": "2185550"
  },
  {
    "text": "that package store in there which means all the 800 core dependencies are already pre-installed in the target",
    "start": "2185550",
    "end": "2190890"
  },
  {
    "text": "environment and their pre did it for the environment as well so when we run down to publish it doesn't include any a",
    "start": "2190890",
    "end": "2197250"
  },
  {
    "text": "spinet core dependencies which means we can still have a small package bundle and I have to reduce I'm cold certain",
    "start": "2197250",
    "end": "2203180"
  },
  {
    "text": "now this is made available because we had a package other called Amazon lambda a SONET core server this nuga package",
    "start": "2203180",
    "end": "2210360"
  },
  {
    "text": "basically makes it so we can replace kestrel which is the default web server for an asymmetric application with",
    "start": "2210360",
    "end": "2216960"
  },
  {
    "text": "Amazon API gateway it handles all the conversions of the request responses",
    "start": "2216960",
    "end": "2222180"
  },
  {
    "text": "between Amazon API gateway and a spinet for so let's go create our Web API no so",
    "start": "2222180",
    "end": "2231240"
  },
  {
    "text": "here is our a Centocor application it's very similar to any agent application you have if you want to take an existing",
    "start": "2231240",
    "end": "2238260"
  },
  {
    "text": "a spinet core application you basically add that nougat package out there and the that done that landed tools",
    "start": "2238260",
    "end": "2245220"
  },
  {
    "text": "reference into your CS products clock if you want to create a new one with everything pre-configured you would say",
    "start": "2245220",
    "end": "2250650"
  },
  {
    "text": "add new project surplice again and then we have a",
    "start": "2250650",
    "end": "2256080"
  },
  {
    "text": "blueprint for the web api we also have a blueprint that's also a full wet it's gonna wipe with write your pages and",
    "start": "2256080",
    "end": "2261660"
  },
  {
    "text": "things like that the main difference we have this is",
    "start": "2261660",
    "end": "2267410"
  },
  {
    "text": "between the regular a Sonic 4 blueprint or project template is we renamed program TF file which is that initial",
    "start": "2267410",
    "end": "2275260"
  },
  {
    "text": "file that does the bootstrap before your web host we rename that to local entry",
    "start": "2275260",
    "end": "2280849"
  },
  {
    "text": "point just to signify that you use this for when you do your local development but when you're running in lambda",
    "start": "2280849",
    "end": "2285890"
  },
  {
    "text": "it's the lambda entry point that's being used so this is the entry point that",
    "start": "2285890",
    "end": "2291309"
  },
  {
    "text": "starts everything it's sort of replacing what be done typically in the program for us file and all this code is doing",
    "start": "2291309",
    "end": "2298430"
  },
  {
    "text": "is it going to inherit from the base class in that nougat package and the one method that you need to override is the",
    "start": "2298430",
    "end": "2305150"
  },
  {
    "text": "anit method which you typically within we're gonna add the startup class so this is the minimum you have to do in",
    "start": "2305150",
    "end": "2311270"
  },
  {
    "text": "fact in this project the only lambda specific code I have is this this code right here everything else is just",
    "start": "2311270",
    "end": "2317450"
  },
  {
    "text": "standard a spinet core so here is my tag",
    "start": "2317450",
    "end": "2322490"
  },
  {
    "text": "controller so here's my get for all and",
    "start": "2322490",
    "end": "2329079"
  },
  {
    "text": "then we have to get the all the individual data and then I have a post I",
    "start": "2329079",
    "end": "2335359"
  },
  {
    "text": "can post new job so this is what I'm going to take I'm going to take from the web I'm going to take that my name in my",
    "start": "2335359",
    "end": "2341660"
  },
  {
    "text": "video I'm going to create a state object generating a new unique ID and then",
    "start": "2341660",
    "end": "2347240"
  },
  {
    "text": "start an execution it's gonna kick off the first thing that we deployed the execution engine now to deploy this",
    "start": "2347240",
    "end": "2356680"
  },
  {
    "text": "we have a clot formation template and I'm going to deploy this again first and then we'll look at the cloud formation template as it's going out like that I'm",
    "start": "2356680",
    "end": "2372820"
  },
  {
    "text": "going to give this a bucket to store things in now this template has",
    "start": "2372820",
    "end": "2378460"
  },
  {
    "text": "parameters coming in this is identifying what were the parentis the parameter store name that we want to grab for the",
    "start": "2378460",
    "end": "2385390"
  },
  {
    "text": "state machine and they stored the s3 bucket so that's how we're transferring",
    "start": "2385390",
    "end": "2391060"
  },
  {
    "text": "that information here so this is how I could have had a beta and a gamma and just pass some different names for these",
    "start": "2391060",
    "end": "2396130"
  },
  {
    "text": "I'm leaving things everything at the default but you could say you could have different stages with this publish",
    "start": "2396130",
    "end": "2405569"
  },
  {
    "text": "well that's gonna go spin that up now if we look at our template this template is",
    "start": "2417250",
    "end": "2422420"
  },
  {
    "text": "actually pretty simple up here is those parameters that we declared that says these parameters are",
    "start": "2422420",
    "end": "2428330"
  },
  {
    "text": "coming with it we're gonna the value of these are going to come from the name of the parameter store variable I don't",
    "start": "2428330",
    "end": "2436670"
  },
  {
    "text": "think I should let me quickly show where that was at I go back to the console ec2",
    "start": "2436670",
    "end": "2444580"
  },
  {
    "text": "parameter store these were the variables that were set up during that first appointment and these are the ones I",
    "start": "2444770",
    "end": "2450990"
  },
  {
    "text": "going to get to sucked out as part of this CloudFormation template and put into our code",
    "start": "2450990",
    "end": "2456950"
  },
  {
    "text": "now we only have one resource for creating this one it's called a service function which is actually sort of a",
    "start": "2458210",
    "end": "2464370"
  },
  {
    "text": "meta meta resource it is going to create a lots of other resources out of it it's going to create our lambda function it's",
    "start": "2464370",
    "end": "2470430"
  },
  {
    "text": "going to set up our i''m role and in the events section here it's also going to define how this lambda function is going",
    "start": "2470430",
    "end": "2476610"
  },
  {
    "text": "to be connected to it to that door in this case we are going to connect it to an API that's going to go create an API",
    "start": "2476610",
    "end": "2482790"
  },
  {
    "text": "a API gateway REST API and for the path we're using this proxy Sinta what this",
    "start": "2482790",
    "end": "2490470"
  },
  {
    "text": "is saying is we're all requests coming in to our REST API starting with /go and just send that",
    "start": "2490470",
    "end": "2498030"
  },
  {
    "text": "request into our lambda function because we're running at a center core plication we're going to let a spinet core handle",
    "start": "2498030",
    "end": "2504210"
  },
  {
    "text": "the routing to our right controller in our code we're not going to let it be done by a peg gateway I also have the",
    "start": "2504210",
    "end": "2511230"
  },
  {
    "text": "environment variables coming in so this is how we're going to pass into our application use this execution this date",
    "start": "2511230",
    "end": "2518100"
  },
  {
    "text": "machine and use this s3 bucket for you",
    "start": "2518100",
    "end": "2522770"
  },
  {
    "text": "and because they spent a core environment variables are just part of the configuration system we look at our",
    "start": "2524120",
    "end": "2529160"
  },
  {
    "text": "configuration or controller we took in the AI configuration object and we just",
    "start": "2529160",
    "end": "2534770"
  },
  {
    "text": "asked out of the config object it gave me the state machine R so that's how we're able to pass that configuration between our different parts of",
    "start": "2534770",
    "end": "2540440"
  },
  {
    "text": "applications we deployed again this took about a",
    "start": "2540440",
    "end": "2547260"
  },
  {
    "text": "minute to do I have a euro I'm going to launch postman up here",
    "start": "2547260",
    "end": "2554510"
  },
  {
    "text": "test this out API that clouds",
    "start": "2554580",
    "end": "2560480"
  },
  {
    "text": "and so here we are calling API a sonic replication service Li we",
    "start": "2565290",
    "end": "2571119"
  },
  {
    "text": "got back to the first video that we launched initially we got a complete date which tells me that that video has",
    "start": "2571119",
    "end": "2576400"
  },
  {
    "text": "gone through the whole workflow system for we can also start creating new more jobs do a post and I have some this is a",
    "start": "2576400",
    "end": "2586300"
  },
  {
    "text": "soccer and Freedoms TED talk but that one",
    "start": "2586300",
    "end": "2592950"
  },
  {
    "text": "you I D and two one more growing fresh air",
    "start": "2593390",
    "end": "2604510"
  },
  {
    "text": "so now we've added two more executions going on to our application so our REST",
    "start": "2606760",
    "end": "2612080"
  },
  {
    "text": "API did the post which submitted the execution job and now our state machine is running through the workflow for",
    "start": "2612080",
    "end": "2617600"
  },
  {
    "text": "those video now that we've done that we",
    "start": "2617600",
    "end": "2624970"
  },
  {
    "text": "should also see if you would get never get all three the one that we just",
    "start": "2624970",
    "end": "2631250"
  },
  {
    "text": "submitted the complete day to know if it is still in progress now we've done",
    "start": "2631250",
    "end": "2639830"
  },
  {
    "text": "we've got our back in we have our Web API now for me waited the scariest part which is the front end that is always",
    "start": "2639830",
    "end": "2646100"
  },
  {
    "text": "very daunting to me but one of the things I always like doing with these talk sir that gives me an excuse to go and try new technology and so what I",
    "start": "2646100",
    "end": "2654230"
  },
  {
    "text": "think is been really really interesting and can play very key into the source platform is how it blazer fit images the",
    "start": "2654230",
    "end": "2661250"
  },
  {
    "start": "2658000",
    "end": "2658000"
  },
  {
    "text": "eaves Anderson gave a great talk earlier today showing a lot of its good benefits of essentially it's gonna allow us to",
    "start": "2661250",
    "end": "2666890"
  },
  {
    "text": "run c-sharp and razor pate is actually in the browser using web assembly and",
    "start": "2666890",
    "end": "2674260"
  },
  {
    "text": "the initial fear is this another Silverlight but this is actually all using standard that the browser's",
    "start": "2674260",
    "end": "2680030"
  },
  {
    "text": "already implementing so for me to get this to work I didn't sell anything in my browser still pretty early days for",
    "start": "2680030",
    "end": "2685400"
  },
  {
    "text": "Blazer and point three version came out last last week there's no debugging yet",
    "start": "2685400",
    "end": "2692630"
  },
  {
    "text": "in Visual Studio so this did for me to create this front-end I didn't have to go back to doing print statements all over the place to find",
    "start": "2692630",
    "end": "2698720"
  },
  {
    "text": "out where things are going and the prints name it showed up in the browsers you know you know they button developer",
    "start": "2698720",
    "end": "2705410"
  },
  {
    "text": "tool because it's all running there now the reason I thought this would be interesting though it's because we're",
    "start": "2705410",
    "end": "2711770"
  },
  {
    "start": "2709000",
    "end": "2709000"
  },
  {
    "text": "talking about servlets and a blazer is not even needing any compute power then all we just really need is just",
    "start": "2711770",
    "end": "2717530"
  },
  {
    "text": "something to host our static data which that's where Amazon s3 works really great at because me3 is a perfect tool",
    "start": "2717530",
    "end": "2723620"
  },
  {
    "text": "for delivering static content and you can configure your s3 buckets to",
    "start": "2723620",
    "end": "2728980"
  },
  {
    "text": "basically act like a website and it works really well and with the fact that",
    "start": "2728980",
    "end": "2734530"
  },
  {
    "text": "we have a basinet core lamda back in as well to do all of our computational work",
    "start": "2734530",
    "end": "2739750"
  },
  {
    "text": "back there and we can keep with our debt pooling on the client side so let's see",
    "start": "2739750",
    "end": "2746500"
  },
  {
    "text": "how I did this so I don't wanna go and",
    "start": "2746500",
    "end": "2752200"
  },
  {
    "text": "I'm assuming a lot you probably went to Steve's talk today so I'm not gonna cover or try to repeat everything he",
    "start": "2752200",
    "end": "2757750"
  },
  {
    "text": "said did he did a much better job than I would have done but this is basically looks pretty similar taste magnification",
    "start": "2757750",
    "end": "2764050"
  },
  {
    "text": "we have razor pages I have two in this case an index page just going at the",
    "start": "2764050",
    "end": "2769660"
  },
  {
    "text": "booth which basically has a form give me the video name in the URL and on the",
    "start": "2769660",
    "end": "2774940"
  },
  {
    "text": "button click I'm going to go and submit a job to my birthday P I and then the",
    "start": "2774940",
    "end": "2783370"
  },
  {
    "text": "other video or the other razor page is going to go on this thing",
    "start": "2783370",
    "end": "2788650"
  },
  {
    "text": "and picking the parameter of the ID and when the ID is set we're going to go",
    "start": "2788650",
    "end": "2795070"
  },
  {
    "text": "load the data and for me this is cool because the data might not be available yet so what I did is I just started",
    "start": "2795070",
    "end": "2800920"
  },
  {
    "text": "using the the.net concert for the voyage been using is I set up a timer and then kept polling making that rest call until",
    "start": "2800920",
    "end": "2806830"
  },
  {
    "text": "I got the data I wanted but one thing I need to do before I run this though is I",
    "start": "2806830",
    "end": "2812920"
  },
  {
    "text": "have to put in the URL to the API we just Boyd is",
    "start": "2812920",
    "end": "2820950"
  },
  {
    "text": "this locally",
    "start": "2826890",
    "end": "2829548"
  },
  {
    "text": "basically what does local the local different levar's it bends up a mini aceman of course server that's returning",
    "start": "2832450",
    "end": "2837609"
  },
  {
    "text": "back to static content of our blade replication",
    "start": "2837609",
    "end": "2842190"
  },
  {
    "text": "Oh things are",
    "start": "2844490",
    "end": "2851300"
  },
  {
    "text": "jaysus blazer one of the things that I have found and I keep forgetting to",
    "start": "2851300",
    "end": "2856340"
  },
  {
    "text": "clean up it see if you currently saw both your debug and release folder it gets with you doesn't know which been",
    "start": "2856340",
    "end": "2865610"
  },
  {
    "text": "folders view I'm sure will be fake",
    "start": "2865610",
    "end": "2870190"
  },
  {
    "text": "you so here is now our blazer application",
    "start": "2870750",
    "end": "2876760"
  },
  {
    "text": "I didn't bear too much from the initial project template if you've seen that but it's showing here's our bill gates blue",
    "start": "2876760",
    "end": "2882400"
  },
  {
    "text": "pad cloud where he is talking about money and problems in California soccer",
    "start": "2882400",
    "end": "2891220"
  },
  {
    "text": "man soccer is like my freedom and immigration doing plants and all then",
    "start": "2891220",
    "end": "2900280"
  },
  {
    "text": "generated server asleep your application but now we still have to figure out how we're gonna do the front end purposefully so let's deploy that so",
    "start": "2900280",
    "end": "2912690"
  },
  {
    "text": "first we need to do is we need to do we need to do a dotnet publish on it I'm",
    "start": "2912690",
    "end": "2918730"
  },
  {
    "text": "going to go to the command line I'm going to do dotnet publish - see it's",
    "start": "2918730",
    "end": "2924520"
  },
  {
    "text": "about published correctly don't really smoke which is why I keep having been in",
    "start": "2924520",
    "end": "2930550"
  },
  {
    "text": "release right but now that is created we go look",
    "start": "2930550",
    "end": "2938569"
  },
  {
    "text": "and release publish this so this is all of our static content that we do need to",
    "start": "2938569",
    "end": "2945019"
  },
  {
    "text": "host now in native us the easiest way to do that is to shoot us three for that so",
    "start": "2945019",
    "end": "2951049"
  },
  {
    "text": "I'm gonna go create another bucket is my ND cui one if someone's probably already",
    "start": "2951049",
    "end": "2959990"
  },
  {
    "text": "cooking the other book I'm just gonna go",
    "start": "2959990",
    "end": "2965150"
  },
  {
    "text": "and copy this over now if I was doing a real deployment I would script this out",
    "start": "2965150",
    "end": "2970839"
  },
  {
    "text": "but believe it we're all cutting engine so coming up with the right chain of pull TPU that's how it copied over there",
    "start": "2970839",
    "end": "2978500"
  },
  {
    "text": "while that's copying over the one change we need to make through the bucket but click on properties is we have a website",
    "start": "2978500",
    "end": "2986660"
  },
  {
    "text": "property here I can just say I want to enable us at a website I have to say what is the default page the index page",
    "start": "2986660",
    "end": "2993579"
  },
  {
    "text": "HTML that's created part of the blazer blueprint which has essentially the",
    "start": "2993579",
    "end": "2999380"
  },
  {
    "text": "bootstrap code to the launch blazer save that and that's all uploaded so click",
    "start": "2999380",
    "end": "3008980"
  },
  {
    "text": "our link we now have a service laser application",
    "start": "3008980",
    "end": "3016650"
  },
  {
    "text": "talking to our service a spinet core application has been using our service state machine to process all of our",
    "start": "3016650",
    "end": "3023610"
  },
  {
    "text": "video and create tag clubs for all of the shooting things out there all right",
    "start": "3023610",
    "end": "3034130"
  },
  {
    "text": "now for CI ICD we have a couple options out of the book that Avis supports well",
    "start": "3034280",
    "end": "3040710"
  },
  {
    "text": "you can always make anything new any of your own I'm using ATP services the main",
    "start": "3040710",
    "end": "3046560"
  },
  {
    "start": "3044000",
    "end": "3044000"
  },
  {
    "text": "services you have we have a whole code suite of services code commit is the get course control provider code build is",
    "start": "3046560",
    "end": "3054450"
  },
  {
    "text": "our docker base build system which is again I've got open up a service platform because again you're just",
    "start": "3054450",
    "end": "3060360"
  },
  {
    "text": "saying I want to run a build with this instruction file in the docker image and it runs everything you don't set up the machines for it code pipelines allows",
    "start": "3060360",
    "end": "3067860"
  },
  {
    "text": "you to connect your source your build and your deployments all together it doesn't have to be using the A to B",
    "start": "3067860",
    "end": "3074460"
  },
  {
    "text": "services you can use other services like github or Jenkins a pipeline for service",
    "start": "3074460",
    "end": "3082980"
  },
  {
    "text": "deployment would look something like this where you're going to take your source coke might is your source and",
    "start": "3082980",
    "end": "3088170"
  },
  {
    "text": "your build you're going to use our command line tools you'd run that dotnet",
    "start": "3088170",
    "end": "3093810"
  },
  {
    "text": "LEM to package CI command what that does is it's going to do all the building of your application upload that to s3",
    "start": "3093810",
    "end": "3100250"
  },
  {
    "text": "modify your CloudFormation template to point to that and then pass that confirmation to your deploy stage which",
    "start": "3100250",
    "end": "3106530"
  },
  {
    "text": "is where your needs CloudFormation to do the actual rollout of your application now the other thing that we",
    "start": "3106530",
    "end": "3114750"
  },
  {
    "start": "3113000",
    "end": "3113000"
  },
  {
    "text": "have because we know there's a lot of adult a lot of data developers use BSES video team services or they're using TFS",
    "start": "3114750",
    "end": "3121200"
  },
  {
    "text": "on premise is we also released a set of extension or tasks that you can add to",
    "start": "3121200",
    "end": "3127230"
  },
  {
    "text": "your account and be able to do these deployments from here we have a lot of them for the common services as well in",
    "start": "3127230",
    "end": "3134400"
  },
  {
    "text": "fact if I here is my build definition that is set",
    "start": "3134400",
    "end": "3142540"
  },
  {
    "text": "up to go and say this is my stack name -",
    "start": "3142540",
    "end": "3147670"
  },
  {
    "text": "three bucket and where am i coated my project is we have a lot of other contacts as well and this is an open",
    "start": "3147670",
    "end": "3155560"
  },
  {
    "text": "source project that we are always taking input on and what we should all should be adding to it",
    "start": "3155560",
    "end": "3160920"
  },
  {
    "text": "that was the demo just to do so that is the recap here so hopefully you learned",
    "start": "3162390",
    "end": "3169150"
  },
  {
    "text": "a lot about lambda how that works how you can build a service application you CloudFormation template for that use",
    "start": "3169150",
    "end": "3177130"
  },
  {
    "text": "step functions if you have a wallet or large work large processes you want to build out I highly recommend getting",
    "start": "3177130",
    "end": "3184330"
  },
  {
    "text": "started with the toolkit we've got a lot of tools to help you get started there if you're not using visual studio you can use the Amazon lambda tools from the",
    "start": "3184330",
    "end": "3190780"
  },
  {
    "text": "command line and the end of Amazon lambda templates the create project from there that one",
    "start": "3190780",
    "end": "3198310"
  },
  {
    "text": "thing I want to point out here this is the link to all the material I did show it off today so I just push this up to",
    "start": "3198310",
    "end": "3204490"
  },
  {
    "text": "github it contains all the slide if you want the slides as well as the demo code",
    "start": "3204490",
    "end": "3210040"
  },
  {
    "text": "as well you're welcome through that code as well",
    "start": "3210040",
    "end": "3214140"
  },
  {
    "text": "I am us on Twitter my name is socket norm on Twitter you ever had any 80 but not questions feel free to reach out to",
    "start": "3216670",
    "end": "3222550"
  },
  {
    "text": "me if you have any questions while you're at the conference and you want to get together so I just reach out to me that we can get together and talk there",
    "start": "3222550",
    "end": "3228130"
  },
  {
    "text": "I make one of the main contributors for the dotnet developer blog there and",
    "start": "3228130",
    "end": "3234040"
  },
  {
    "text": "these are some of the github projects that I work on if you're doing down at lambda that first one is talking to be",
    "start": "3234040",
    "end": "3239140"
  },
  {
    "text": "the most useful one of where to get help at that Thanks I'm be sure to put the",
    "start": "3239140",
    "end": "3244270"
  },
  {
    "text": "speaker evaluation",
    "start": "3244270",
    "end": "3247350"
  }
]