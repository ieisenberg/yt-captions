[
  {
    "text": "oh well good morning good evening or good afternoon depending on where you are when you're watching this uh talk here",
    "start": "6000",
    "end": "12639"
  },
  {
    "text": "so my name is walken siblogel and today i'm going to be talking about why you should consider web assembly in your next front-end",
    "start": "12639",
    "end": "19840"
  },
  {
    "text": "project so this is the agenda for today first we",
    "start": "19840",
    "end": "26240"
  },
  {
    "text": "will look into what is web assembly and then we will go through what the does and hello world in web assembly",
    "start": "26240",
    "end": "33120"
  },
  {
    "text": "what does that look like and we'll also look into how can we er how can we use rust in order to compile a program down",
    "start": "33120",
    "end": "41040"
  },
  {
    "text": "to webin down to webassembly and we have some examples like a game of life example",
    "start": "41040",
    "end": "46239"
  },
  {
    "text": "that we're going to go through and we're also going to discuss a little bit more about performance about some real world examples what are",
    "start": "46239",
    "end": "53039"
  },
  {
    "text": "the future plans for webassembly and looking to other frameworks that are using webassembly",
    "start": "53039",
    "end": "59440"
  },
  {
    "text": "and we get the intersection that i've called new old and then we draw some conclusions and finally i",
    "start": "59440",
    "end": "66240"
  },
  {
    "text": "have some references for those of you who would like to look into this a little bit further on",
    "start": "66240",
    "end": "74560"
  },
  {
    "text": "but before we start i'm just going to give you some background information but me so my background is",
    "start": "75520",
    "end": "82080"
  },
  {
    "text": "i've been working with process automation and robotics and right now i'm working as a manager",
    "start": "82080",
    "end": "87200"
  },
  {
    "text": "for ai and big data internal reading consultancy company called miles and my educational background this",
    "start": "87200",
    "end": "93200"
  },
  {
    "text": "master's in electrical engineering and also a master's degree in behavioral science i'm also quite involved in the local",
    "start": "93200",
    "end": "99360"
  },
  {
    "text": "user community here in oslos i'm part of the norwegian dot net user group i'm also part of oslo",
    "start": "99360",
    "end": "104799"
  },
  {
    "text": "ai and i'm a microsoft ai mp and now as of 2021 i've started",
    "start": "104799",
    "end": "112399"
  },
  {
    "text": "an online ai school together with eve party called ai42 so i'm going to give you a little bit",
    "start": "112399",
    "end": "118560"
  },
  {
    "text": "more information about that at the very end of my presentation and if you want to get in contact with",
    "start": "118560",
    "end": "126079"
  },
  {
    "text": "me you can reach me on these following social media and if you have any questions during",
    "start": "126079",
    "end": "131599"
  },
  {
    "text": "my talk you can either put them into the webex chat or into the slack chat",
    "start": "131599",
    "end": "139520"
  },
  {
    "text": "so first of all here what is webassembly so um so there was a group formed in",
    "start": "140720",
    "end": "147920"
  },
  {
    "text": "2015 consisting of all the major web browser vendors",
    "start": "147920",
    "end": "152959"
  },
  {
    "text": "and in 2017 the first draft of a web assembly was released and",
    "start": "152959",
    "end": "158959"
  },
  {
    "text": "in 2018 it was a w3c public draft that was published and what",
    "start": "158959",
    "end": "164000"
  },
  {
    "text": "this means for us is that we can use webassembly in any of the major browsers firefox or chrome or",
    "start": "164000",
    "end": "171920"
  },
  {
    "text": "safari or internet explorer or edge and we can both use them on the desktop version but also on the",
    "start": "171920",
    "end": "178959"
  },
  {
    "text": "mobile version so if we take a high-level view of",
    "start": "178959",
    "end": "185200"
  },
  {
    "text": "javascript and webassembly we can say that javascript is as we know a high-level language it's very flexible and",
    "start": "185200",
    "end": "191680"
  },
  {
    "text": "expressive and it's dynamic type you don't need to compile and it has a huge ecosystem of",
    "start": "191680",
    "end": "197519"
  },
  {
    "text": "mpm packages and other things that you can use whereas webassembly is a low-level",
    "start": "197519",
    "end": "202720"
  },
  {
    "text": "assembly-like language we will quite soon have a look at what it looks like and it has a compact",
    "start": "202720",
    "end": "208000"
  },
  {
    "text": "binary format and it has near native performance and the way that you use webassembly is",
    "start": "208000",
    "end": "214480"
  },
  {
    "text": "you use a high level language like c or c plus or raster go and then you compile down",
    "start": "214480",
    "end": "220480"
  },
  {
    "text": "this high level language down to the web assembly formats",
    "start": "220480",
    "end": "227280"
  },
  {
    "text": "so this example is taken from a blog series by link clark that you can as you can look at on this link here but",
    "start": "227280",
    "end": "234319"
  },
  {
    "text": "basically what it tries to illustrate here that is that regularly or usually what you have is that you have a high level language like c or c",
    "start": "234319",
    "end": "240480"
  },
  {
    "text": "plus plus and then you compilers will take this high level language and then we'll translate it to an intermediate",
    "start": "240480",
    "end": "247040"
  },
  {
    "text": "representation and then another part of the compiler will compile it down to the target architecture so in this case",
    "start": "247040",
    "end": "253599"
  },
  {
    "text": "either x86 architecture or arm architecture",
    "start": "253599",
    "end": "258639"
  },
  {
    "text": "but now with webassembly what we have here is we have a situation where we have code that will be executed over the web",
    "start": "258639",
    "end": "264479"
  },
  {
    "text": "and we don't really know on which target architecture will run on so webassembly is a machine language for",
    "start": "264479",
    "end": "270320"
  },
  {
    "text": "a conceptual machine so what have we can say that we have web assembly instructions we can also",
    "start": "270320",
    "end": "275360"
  },
  {
    "text": "call them virtual instructions so the browser will download the web assembly and then can compile it down to",
    "start": "275360",
    "end": "281360"
  },
  {
    "text": "the target architecture and web assembly which is also abbreviated wasp",
    "start": "281360",
    "end": "287440"
  },
  {
    "text": "as i mentioned here it's a new browser standard which is very powerful because that makes it so that we as web",
    "start": "287440",
    "end": "294479"
  },
  {
    "text": "developers can use it in any type of browser and part of the reason why webassembly",
    "start": "294479",
    "end": "300320"
  },
  {
    "text": "was so quickly out on the market was that it's based on on a previous project called",
    "start": "300320",
    "end": "306919"
  },
  {
    "text": "asm.js so if you're interested in the history i recommend you to have a look a little bit more into that",
    "start": "306919",
    "end": "313440"
  },
  {
    "text": "and web assembly is an intermediate language so it's similar to in java you have you have byte code and the c sharp you",
    "start": "313440",
    "end": "319440"
  },
  {
    "text": "have the msi language and it's strongly typed with four different types you have 32-bit integers",
    "start": "319440",
    "end": "325759"
  },
  {
    "text": "64-bit integers 32-bit floats and 64-bit floats",
    "start": "325759",
    "end": "331840"
  },
  {
    "text": "so now we will have a first look at here at the hello and what's example here and then",
    "start": "333120",
    "end": "339600"
  },
  {
    "text": "the most programming languages when you write the hello world example then you actually print that the hello world text but now",
    "start": "339600",
    "end": "347039"
  },
  {
    "text": "as you saw here before we don't really have we don't have any string representation so it's actually quite tedious to do a",
    "start": "347039",
    "end": "354080"
  },
  {
    "text": "hello world example in wasm so what people you should do instead is that they make",
    "start": "354080",
    "end": "359600"
  },
  {
    "text": "a simple addition or multiplication or mathematical operation here",
    "start": "359600",
    "end": "365120"
  },
  {
    "text": "so that's what we're going to do here for our first vosm example here so we're using a format here called wat",
    "start": "365120",
    "end": "372400"
  },
  {
    "text": "which stands for webassembly text format and in this format we define a module",
    "start": "372400",
    "end": "378240"
  },
  {
    "text": "that we and the function that we call add two and then we define the input parameters",
    "start": "378240",
    "end": "383280"
  },
  {
    "text": "so in this case we want to have two 32-bit integers as input parameters and then as a result we",
    "start": "383280",
    "end": "389199"
  },
  {
    "text": "want to have one 32-bit integrat and webassembly is a stack based language so you can",
    "start": "389199",
    "end": "395440"
  },
  {
    "text": "push and pop onto the stack so first we get local zero and we get local one",
    "start": "395440",
    "end": "401520"
  },
  {
    "text": "so we get what is on the stack and then we use an already built in function in",
    "start": "401520",
    "end": "406720"
  },
  {
    "text": "webassembly which is the add function so there are some 70 different functions that we can use",
    "start": "406720",
    "end": "413280"
  },
  {
    "text": "and then of that we need to define what do we want if we have a calling program",
    "start": "413280",
    "end": "418319"
  },
  {
    "text": "what will this calling program use in order to call this function so then we need to export add two as a",
    "start": "418319",
    "end": "424240"
  },
  {
    "text": "module and also this function name add two",
    "start": "424240",
    "end": "428720"
  },
  {
    "text": "and here's actually we can have a look at what this looks like so there's um",
    "start": "429919",
    "end": "436560"
  },
  {
    "text": "there's a tool here called what to was where we can actually see what would this look like uh web assembly code and",
    "start": "436560",
    "end": "443520"
  },
  {
    "text": "as you can see here it's uh very similar to assembly language here so maybe you can see some",
    "start": "443520",
    "end": "450720"
  },
  {
    "text": "parts in this code where they do actually the i32 add operation and so on",
    "start": "450720",
    "end": "457199"
  },
  {
    "text": "but then in order for us to use this then we can create a simple html page and then what we do",
    "start": "458000",
    "end": "464960"
  },
  {
    "text": "is we do fetch on this add.wasm which is a binary file and then after that we read it into an",
    "start": "464960",
    "end": "471599"
  },
  {
    "text": "array buffer and then since this since webassembly is standard we can just call",
    "start": "471599",
    "end": "477039"
  },
  {
    "text": "web assembly dot instantiate with this byte array that we just read in and then we can define that we want to",
    "start": "477039",
    "end": "485120"
  },
  {
    "text": "use this add to module and then we can just do an alert add to and then put in some",
    "start": "485120",
    "end": "491520"
  },
  {
    "text": "integers and then we will have a web assembly um",
    "start": "491520",
    "end": "497039"
  },
  {
    "text": "result on our uh on our in our web browser so that's a simple",
    "start": "497039",
    "end": "503919"
  },
  {
    "text": "example here on how we can use a webassembly here",
    "start": "503919",
    "end": "509120"
  },
  {
    "text": "and then there's also a tool here called wasp code explorer so that is if you already have a",
    "start": "509120",
    "end": "514159"
  },
  {
    "text": "webassembly and you want to see what is actually what is the textual",
    "start": "514159",
    "end": "519518"
  },
  {
    "text": "format of this webassembly binary format then you can use the awesome code explorer and then you can load",
    "start": "519519",
    "end": "526160"
  },
  {
    "text": "your wasm into that and then you will get a texture representation as you can see here on",
    "start": "526160",
    "end": "532000"
  },
  {
    "text": "the right hand side but as i said here we don't really want",
    "start": "532000",
    "end": "538399"
  },
  {
    "text": "to be writing the webassembly by hand so instead what we would like to",
    "start": "538399",
    "end": "544320"
  },
  {
    "text": "do in order to be more productive is we want to use a high-level language and then we want to be able to compile",
    "start": "544320",
    "end": "549760"
  },
  {
    "text": "this high-level language down to webassembly so one of this language that we can use is called",
    "start": "549760",
    "end": "555839"
  },
  {
    "text": "rust so now i'm going to give you a quick introduction here to rust",
    "start": "555839",
    "end": "561120"
  },
  {
    "text": "so what's this system programming language from mozilla and it has a syntax similar to c or c plus is strongly typed and it",
    "start": "561120",
    "end": "568800"
  },
  {
    "text": "compiles down to native code and one of the the design criterias when they developed",
    "start": "568800",
    "end": "575519"
  },
  {
    "text": "trust was that it should be memory safe guarantee and that means that you you will not",
    "start": "575519",
    "end": "581760"
  },
  {
    "text": "have any memory losses in your programmer",
    "start": "581760",
    "end": "590640"
  },
  {
    "text": "and if we want to use rusty in combination with webassembly we need to learn a little bit about the tool chain",
    "start": "590640",
    "end": "597040"
  },
  {
    "text": "so in west we have uh rust app which is an installer for this system program language trust and we also have cargo",
    "start": "597040",
    "end": "604000"
  },
  {
    "text": "which is the package manager so cargo is very similar to mpm so when we make a package in rest we",
    "start": "604000",
    "end": "611680"
  },
  {
    "text": "can upload them to the crates.io which has the package registry for rust",
    "start": "611680",
    "end": "618320"
  },
  {
    "text": "and then rust ceo rest compile so if we have a program here like a",
    "start": "618320",
    "end": "625680"
  },
  {
    "text": "function main and we print out hello world then we can use rust compiled to compile this rast",
    "start": "625680",
    "end": "631680"
  },
  {
    "text": "program and then on the windows machine we get an exe file and then we can just execute",
    "start": "631680",
    "end": "636959"
  },
  {
    "text": "the exe file and we get hello world out on the console",
    "start": "636959",
    "end": "642079"
  },
  {
    "text": "you can also use cargo here so if you use cargo new hello world then it will create the fold",
    "start": "642959",
    "end": "648560"
  },
  {
    "text": "structure and hello world project for us so it will both have a source folder",
    "start": "648560",
    "end": "655360"
  },
  {
    "text": "with a main rust file and a cargo.tml file so the",
    "start": "655360",
    "end": "660959"
  },
  {
    "text": "tommen file is like a package description so in this in the domain file you define a name for your package a",
    "start": "660959",
    "end": "667839"
  },
  {
    "text": "version and also the author and you can also define dependencies if you have dependencies on other",
    "start": "667839",
    "end": "674800"
  },
  {
    "text": "on other crates and then we have the main dot rust file where we define our",
    "start": "674800",
    "end": "680240"
  },
  {
    "text": "program so if we want to run this we can just use cargo run so what it will do it will compile our",
    "start": "680240",
    "end": "687200"
  },
  {
    "text": "hello world program and after that we it will also run the",
    "start": "687200",
    "end": "692560"
  },
  {
    "text": "axe file that will also be generated",
    "start": "692560",
    "end": "697120"
  },
  {
    "text": "so last we also have some different types types so we have both primitive types",
    "start": "698959",
    "end": "704320"
  },
  {
    "text": "and primitive constructs so some of the primitive types is both booleans integral and floats",
    "start": "704320",
    "end": "710000"
  },
  {
    "text": "and charts and strings and we also have some primitive constructs like arrays and function pointers and",
    "start": "710000",
    "end": "715600"
  },
  {
    "text": "references so now we're going to go through here so",
    "start": "715600",
    "end": "721519"
  },
  {
    "text": "how can we do here if we write the rust program and then we want to compile it down to wasm and then we",
    "start": "721519",
    "end": "727200"
  },
  {
    "text": "want to use this uh this awesome on",
    "start": "727200",
    "end": "732720"
  },
  {
    "text": "on the web page how can we do this so the first step here is to compile our",
    "start": "732720",
    "end": "738639"
  },
  {
    "text": "rasp program down to awesome so first thing that we do is we install the rust toolchain which",
    "start": "738639",
    "end": "744480"
  },
  {
    "text": "i was just talking about which is this rust up cargo and rust compressed compiler and then we need to add a compiler",
    "start": "744480",
    "end": "752800"
  },
  {
    "text": "target and this compiler target is called wasp32 unknown unknown so that informs our compiler that that",
    "start": "752800",
    "end": "760320"
  },
  {
    "text": "we want to compile down to webassembly and then after that we can install something called the was",
    "start": "760320",
    "end": "766399"
  },
  {
    "text": "binding so the was binding will generate bindings from our javascript program to rust and",
    "start": "766399",
    "end": "772959"
  },
  {
    "text": "web assembly and it looks something like like this",
    "start": "772959",
    "end": "778639"
  },
  {
    "text": "so first that's similar to our previous example we have this tumble file or the package file with the",
    "start": "778639",
    "end": "785920"
  },
  {
    "text": "final name for a package and the version and author and",
    "start": "785920",
    "end": "791440"
  },
  {
    "text": "we can also define what kind of library is this so in this case we call it a c",
    "start": "791440",
    "end": "796880"
  },
  {
    "text": "die lib which is the format for the wasom and then we define some",
    "start": "796880",
    "end": "802399"
  },
  {
    "text": "dependencies like here we say it says that that we need to have it depending on this was binding so in order for us to be able to",
    "start": "802399",
    "end": "809600"
  },
  {
    "text": "call a web assembly from our javascript application",
    "start": "809600",
    "end": "815839"
  },
  {
    "text": "then we have our rust program so in this in this program here we first defined",
    "start": "816079",
    "end": "823680"
  },
  {
    "text": "that we are dependent here on the was buying gents we do that by using",
    "start": "823680",
    "end": "828800"
  },
  {
    "text": "extern crate and then we define which is this crate that we are depending upon",
    "start": "828800",
    "end": "834160"
  },
  {
    "text": "and then after that we can mark up here that we want to be able to use an external",
    "start": "834160",
    "end": "839920"
  },
  {
    "text": "function here so the external function is the regular javascript alert function",
    "start": "839920",
    "end": "845199"
  },
  {
    "text": "and then after that we can use rust and we just define a grid function and that we have a",
    "start": "845199",
    "end": "851519"
  },
  {
    "text": "string as in input and then we use the regular javascript function and we format hello and then the name",
    "start": "851519",
    "end": "858399"
  },
  {
    "text": "that we had as an input parameter here",
    "start": "858399",
    "end": "862320"
  },
  {
    "text": "and after that we can use a tool it was pack init in order to package our",
    "start": "864160",
    "end": "870560"
  },
  {
    "text": "our example here into a package that we can then publish as an npm package so you can see",
    "start": "870560",
    "end": "877760"
  },
  {
    "text": "here there are four different files it's the wasm file and then it's a typescript file and the javascript file",
    "start": "877760",
    "end": "883920"
  },
  {
    "text": "and also a package.json file and then we can just use npm publish as with any other npm package",
    "start": "883920",
    "end": "890720"
  },
  {
    "text": "and we can publish our package up to npm and then we can see here on npm we got",
    "start": "890720",
    "end": "896000"
  },
  {
    "text": "this hello was silver package so now we will have a quick look here also what",
    "start": "896000",
    "end": "902160"
  },
  {
    "text": "what does these four different files what do they contain",
    "start": "902160",
    "end": "906800"
  },
  {
    "text": "so the first file was this typescript file so in the typescript file we we get the listing here of the functions",
    "start": "908240",
    "end": "915680"
  },
  {
    "text": "that we can call in our webassembly so we have this grid function that we would like to be able to",
    "start": "915680",
    "end": "920959"
  },
  {
    "text": "call and then we have the hello was silver.js so this is this glue file that i was",
    "start": "920959",
    "end": "927680"
  },
  {
    "text": "talking about before here so that you can actually call from your javascript application down to the web assembly",
    "start": "927680",
    "end": "933440"
  },
  {
    "text": "so if i have a quick look at what it says here it says it tries to tries to pass a string down",
    "start": "933440",
    "end": "939120"
  },
  {
    "text": "to the web assembly and then it returns webassembly.greet which is this function that we were",
    "start": "939120",
    "end": "944720"
  },
  {
    "text": "using and then finally the freeze up the memory for us and then we have the package.json",
    "start": "944720",
    "end": "951680"
  },
  {
    "text": "file which is a regular package json so if you want to use this",
    "start": "951680",
    "end": "958480"
  },
  {
    "text": "we can create a webpack config and in this we just define an entry for",
    "start": "958480",
    "end": "964000"
  },
  {
    "text": "a web application and then we have a package.json where we say where we say that we need to depend on",
    "start": "964000",
    "end": "971040"
  },
  {
    "text": "our hello wasp silver npm package",
    "start": "971040",
    "end": "976000"
  },
  {
    "text": "then we can create as we did before we can create an index.html file and in this index we just refer to",
    "start": "976560",
    "end": "984240"
  },
  {
    "text": "an index.js file and then in the index.js file we import our hello was silver package",
    "start": "984240",
    "end": "991199"
  },
  {
    "text": "and then assumptuously we can load this yay and run this js.greet function with",
    "start": "991199",
    "end": "996800"
  },
  {
    "text": "some input so if we run this in the browser we get on",
    "start": "996800",
    "end": "1003759"
  },
  {
    "text": "on the alert here we get the hello and then the input that we that we entered",
    "start": "1003759",
    "end": "1011519"
  },
  {
    "text": "so this is where i'm just going to take a little bit there to drink",
    "start": "1011519",
    "end": "1016720"
  },
  {
    "text": "so these were some simple examples here on how we can use a high level language and then compile",
    "start": "1021120",
    "end": "1026720"
  },
  {
    "text": "it down to web assembly but now we're gonna we'll have a quick look here",
    "start": "1026720",
    "end": "1032319"
  },
  {
    "text": "at a little bit more complex example here which is the game of life",
    "start": "1032319",
    "end": "1039199"
  },
  {
    "text": "so so yes the review here so the game of life is is a simulation so you simulate some",
    "start": "1039199",
    "end": "1048000"
  },
  {
    "text": "some cells that can reproduce so if you have so there are some routes to these games so if you have a live cell with fewer",
    "start": "1048000",
    "end": "1054640"
  },
  {
    "text": "than two live neighbors it will die because it will be underpopulated and if you have a live cell with two or",
    "start": "1054640",
    "end": "1061520"
  },
  {
    "text": "three live neighbors it relieves on to the next generation in the simulation and if you",
    "start": "1061520",
    "end": "1066640"
  },
  {
    "text": "have a live cell with more than three live neighbors it will die because it will be overpopulated and then so so if",
    "start": "1066640",
    "end": "1072799"
  },
  {
    "text": "you have any dead cell with exactly three live neighbors it will become a lifestyle because of reproduction",
    "start": "1072799",
    "end": "1079280"
  },
  {
    "text": "um and and this is also an example that you can have a look",
    "start": "1079280",
    "end": "1085039"
  },
  {
    "text": "at from the rosters official pages here",
    "start": "1085039",
    "end": "1090080"
  },
  {
    "text": "but if we have a look at what this looks like and then",
    "start": "1090080",
    "end": "1096320"
  },
  {
    "text": "we can run this simulation so now we can see it simulates this different cells and then we can also we",
    "start": "1096320",
    "end": "1103200"
  },
  {
    "text": "made an event and there's no i push on the pause button like this and",
    "start": "1103200",
    "end": "1109120"
  },
  {
    "text": "then i can manually go in and add some cells so i added some cells in the middle and",
    "start": "1109120",
    "end": "1114400"
  },
  {
    "text": "then we continue with our simulation so let's have",
    "start": "1114400",
    "end": "1123600"
  },
  {
    "text": "have we got some more interactivity into our wasam um so the way that we did this was we",
    "start": "1123600",
    "end": "1130559"
  },
  {
    "text": "again we have the tommel file cargo the tamil which looks similar to what it looks before",
    "start": "1130559",
    "end": "1136320"
  },
  {
    "text": "the dependency on this was by and then so that we can code it from a javascript application",
    "start": "1136320",
    "end": "1141919"
  },
  {
    "text": "and then over here we have a library.rust file and in this rest file we define this",
    "start": "1141919",
    "end": "1147840"
  },
  {
    "text": "universe or they like the simulation their game plan so we define how many",
    "start": "1147840",
    "end": "1153120"
  },
  {
    "text": "yeah how many cells should it be like the width and the height and we also define some getters",
    "start": "1153120",
    "end": "1159679"
  },
  {
    "text": "and sectors for the width and height and as you can see here down to the right we define the toggle cell function so",
    "start": "1159679",
    "end": "1166720"
  },
  {
    "text": "with the toggle file cell function that's where we can add this interactivity so that we can go in and manually",
    "start": "1166720",
    "end": "1173039"
  },
  {
    "text": "uh manually check cell here then that's",
    "start": "1173039",
    "end": "1178480"
  },
  {
    "text": "also similar to what we had before here we have a typescript file under this type file we define all the different",
    "start": "1178480",
    "end": "1184960"
  },
  {
    "text": "functions that we can call from the outside so for example we can call uh",
    "start": "1184960",
    "end": "1190640"
  },
  {
    "text": "this universe that we were looking at and we can call render and the width and the height and we can also call this toggle cell",
    "start": "1190640",
    "end": "1198000"
  },
  {
    "text": "function and then we have this javascript file",
    "start": "1198000",
    "end": "1204000"
  },
  {
    "text": "which is this blue file so similar to what we have had in the previous examples so here for example",
    "start": "1204000",
    "end": "1209520"
  },
  {
    "text": "when we get the width it tries to return awesome dot universe underscore width",
    "start": "1209520",
    "end": "1215440"
  },
  {
    "text": "with a pointer and for example with the toggle cell it tries to call this was.universe and",
    "start": "1215440",
    "end": "1221600"
  },
  {
    "text": "then toggle cell and then the argument which is the like the x and y",
    "start": "1221600",
    "end": "1227840"
  },
  {
    "text": "coordinate in the simulation",
    "start": "1227840",
    "end": "1232320"
  },
  {
    "text": "and then we have here our index.html file and we are we're defining here a",
    "start": "1232880",
    "end": "1240240"
  },
  {
    "text": "bootstrap.js file and then the bootstrap.js file we are importing an index file here so",
    "start": "1240240",
    "end": "1247919"
  },
  {
    "text": "this is our index.js file where we define we import the universe and then we",
    "start": "1247919",
    "end": "1253840"
  },
  {
    "text": "add some advanced event listeners and then for example you can see a little bit further down below",
    "start": "1253840",
    "end": "1259440"
  },
  {
    "text": "we call this universe.toggle.com with the row and the column",
    "start": "1259440",
    "end": "1265360"
  },
  {
    "text": "so now as i mentioned here one of the criterias here with wasom is that its binary and it should",
    "start": "1267679",
    "end": "1273679"
  },
  {
    "text": "be very very performant so let's have a quick look here at",
    "start": "1273679",
    "end": "1279600"
  },
  {
    "text": "what that can look like so so there are some people that have made",
    "start": "1279600",
    "end": "1285760"
  },
  {
    "text": "some investigations here so you can see here on on the y-axis you have the time in",
    "start": "1285760",
    "end": "1292720"
  },
  {
    "text": "milliseconds and then you have either javascript or web assembly in three different browsers",
    "start": "1292720",
    "end": "1298799"
  },
  {
    "text": "so on the we start out with chrome and then we have firefox in the middle and then to the right",
    "start": "1298799",
    "end": "1304080"
  },
  {
    "text": "we have safari and then you can see in this box in the box plot we can see that",
    "start": "1304080",
    "end": "1311840"
  },
  {
    "text": "the javascript is is usually is much slower than what the web assembly is but",
    "start": "1311840",
    "end": "1317760"
  },
  {
    "text": "maybe what is more important here is that there is a much more spread among the values here so",
    "start": "1317760",
    "end": "1324799"
  },
  {
    "text": "what that means in practice is that when you run javascript you can see that there's you there's a",
    "start": "1324799",
    "end": "1330799"
  },
  {
    "text": "quite a big spread between the performance for example in firefox",
    "start": "1330799",
    "end": "1335840"
  },
  {
    "text": "but whereas if you look at the web assembly you can see that the spread is much much lower which",
    "start": "1335840",
    "end": "1342000"
  },
  {
    "text": "means that we can we can count on the webassembly performance",
    "start": "1342000",
    "end": "1347360"
  },
  {
    "text": "uh that it will be very very similar when we run it the new time uh another time or we should also take",
    "start": "1347360",
    "end": "1354000"
  },
  {
    "text": "into account here that we've had javascript has been around for quite a long time whereas and uh therefore uh the browser",
    "start": "1354000",
    "end": "1361760"
  },
  {
    "text": "and the javascript engine has been optimized for for performance whereas that's not",
    "start": "1361760",
    "end": "1367200"
  },
  {
    "text": "really the case here with web assembly web assembly is a much newer player in this field so we can",
    "start": "1367200",
    "end": "1373520"
  },
  {
    "text": "count on with time that it will be more optimized and that this time",
    "start": "1373520",
    "end": "1379919"
  },
  {
    "text": "differences will be even larger that the tab assembly will be much faster",
    "start": "1379919",
    "end": "1385600"
  },
  {
    "text": "here than javascript so i'm going to go through some real",
    "start": "1385600",
    "end": "1391840"
  },
  {
    "text": "world examples here so um so one of the",
    "start": "1391840",
    "end": "1398159"
  },
  {
    "text": "one of the use cases here for webassembly is actually if you already have an application which is written in sac",
    "start": "1398159",
    "end": "1405039"
  },
  {
    "text": "or c plus and you want to expose this for a larger audience on the web then webassembly is a great use case for",
    "start": "1405039",
    "end": "1411679"
  },
  {
    "text": "this because then you can you can compile down your application to",
    "start": "1411679",
    "end": "1417280"
  },
  {
    "text": "uh to webassembly and then you can write a wrapper in javascript and then you can make a web application out to it so that's",
    "start": "1417280",
    "end": "1424240"
  },
  {
    "text": "one good example of how we can use webassembly and this is",
    "start": "1424240",
    "end": "1429360"
  },
  {
    "text": "an example of a digital signal processing library which was written in nc and then they uh compiled this down to",
    "start": "1429360",
    "end": "1437520"
  },
  {
    "text": "webassembly and then they could expose this dsp library on the web so if you want to have a look more there",
    "start": "1437520",
    "end": "1444480"
  },
  {
    "text": "is a github library on this link here and then if we",
    "start": "1444480",
    "end": "1450960"
  },
  {
    "text": "run this then it would be looking like this so this is both for videos and for",
    "start": "1451279",
    "end": "1457279"
  },
  {
    "text": "images so here we can do image manipulation in real time and we can choose some different",
    "start": "1457279",
    "end": "1462960"
  },
  {
    "text": "types of manipulations here on the left hand menu so all of this has been implemented",
    "start": "1462960",
    "end": "1470559"
  },
  {
    "text": "in c but then we have compiled it down to webassembly and then we can call it in we can use it",
    "start": "1470559",
    "end": "1476400"
  },
  {
    "text": "then on the web then another example is from autocad",
    "start": "1476400",
    "end": "1483039"
  },
  {
    "text": "so so autocad they have been in the business for a very long time and what they do is they",
    "start": "1483039",
    "end": "1488880"
  },
  {
    "text": "specialize on drawings so um so yes for some history here so",
    "start": "1488880",
    "end": "1496559"
  },
  {
    "text": "autocad in 2010 flash was sort of the latest latest uh",
    "start": "1496559",
    "end": "1502000"
  },
  {
    "text": "technical advancement so what they did is they used a flash application in order to be able",
    "start": "1502000",
    "end": "1507679"
  },
  {
    "text": "to view these autocad drawings on the web and then if we fell forward to 2014",
    "start": "1507679",
    "end": "1514000"
  },
  {
    "text": "or 2015 then it was html5 and javascript which was what was the greatest technologies then",
    "start": "1514000",
    "end": "1519679"
  },
  {
    "text": "they used that in order to build a viewer for the drawings as that you can view on the web and then",
    "start": "1519679",
    "end": "1526559"
  },
  {
    "text": "in 2016 they made they used another compiler m-scripting and then they could",
    "start": "1526559",
    "end": "1533600"
  },
  {
    "text": "uh compile this down to m-script and with that",
    "start": "1533600",
    "end": "1539039"
  },
  {
    "text": "and then in 2017 in autocad they have a format called dwg so they made a real wg-based",
    "start": "1539039",
    "end": "1547039"
  },
  {
    "text": "viewer and now in 2018 they had a web app launched",
    "start": "1547039",
    "end": "1554000"
  },
  {
    "text": "which is using webassembly for that and if we have a look at how they structure their application",
    "start": "1554000",
    "end": "1561200"
  },
  {
    "text": "they uh they're still using the same c plus plus code as they've had in their uh",
    "start": "1561200",
    "end": "1568880"
  },
  {
    "text": "in uh in their previous generations of their product but what they did is they made",
    "start": "1568880",
    "end": "1574080"
  },
  {
    "text": "a small layer here in webassembly so that this web assembly could call down to the c plus plus code",
    "start": "1574080",
    "end": "1580000"
  },
  {
    "text": "and then you could call from uh from your web application you can call from javascript code down through",
    "start": "1580000",
    "end": "1585440"
  },
  {
    "text": "web assembly down to the autocad core um core code",
    "start": "1585440",
    "end": "1591200"
  },
  {
    "text": "and i think this is also a good example of the sig of the of a different differentiation of",
    "start": "1591200",
    "end": "1598159"
  },
  {
    "text": "responsibilities here that you have three different layers and you can have different developers working on the different layers",
    "start": "1598159",
    "end": "1603679"
  },
  {
    "text": "so this means that they could still keep their expertise in the autocad core functionality and then",
    "start": "1603679",
    "end": "1610480"
  },
  {
    "text": "they could have other developers work on generating a good front-end for their web application",
    "start": "1610480",
    "end": "1618000"
  },
  {
    "text": "i'm gonna say a couple of words here about some future plans for",
    "start": "1619520",
    "end": "1624840"
  },
  {
    "text": "webassembly so maybe maybe you've noticed here that i've been talking about this",
    "start": "1624840",
    "end": "1630720"
  },
  {
    "text": "glue code that we get there from the voice bind gen so the glue code is",
    "start": "1630720",
    "end": "1635919"
  },
  {
    "text": "is a code which sits in between the javascript application and the web assembly",
    "start": "1635919",
    "end": "1641360"
  },
  {
    "text": "and what's next in plan is they would like to be able to get rid of this glue code so that we",
    "start": "1641360",
    "end": "1647360"
  },
  {
    "text": "could actually call webassembly directly from the dome or from a web api and you could also see",
    "start": "1647360",
    "end": "1653919"
  },
  {
    "text": "here that we were when we were using web assembly we always needed to go through like a bootstrap.js or an index.js file",
    "start": "1653919",
    "end": "1660480"
  },
  {
    "text": "that we were loading assumptions but they also would like to get rid of that and instead have like a direct import or",
    "start": "1660480",
    "end": "1667279"
  },
  {
    "text": "was mean javascript like yeah like other npm packages or other packages and they would also like to be able to",
    "start": "1667279",
    "end": "1673600"
  },
  {
    "text": "support more more languages so i should say also that right now",
    "start": "1673600",
    "end": "1679600"
  },
  {
    "text": "it's uh it is only working here with languages that doesn't",
    "start": "1679600",
    "end": "1686000"
  },
  {
    "text": "have garbage collectors so for example java and c c sharp they have a garbage collector",
    "start": "1686000",
    "end": "1691600"
  },
  {
    "text": "but we can't use that in watson as as of now",
    "start": "1691600",
    "end": "1697840"
  },
  {
    "text": "but another interesting thing that you can use webassembly for is something that you can call serverless webassembly so",
    "start": "1698159",
    "end": "1704399"
  },
  {
    "text": "a server web assembly is not only for the browser so there are different providers like cloudflare and fastly they support",
    "start": "1704399",
    "end": "1711360"
  },
  {
    "text": "this serverless webassembly and what are these two it leads to fast launch time you don't",
    "start": "1711360",
    "end": "1718080"
  },
  {
    "text": "need to rewrite javascript then you can have more lightweight applications",
    "start": "1718080",
    "end": "1723279"
  },
  {
    "text": "so an example of how this could look like is this here so let's imagine that you have some data",
    "start": "1723279",
    "end": "1728960"
  },
  {
    "text": "processing uh modules so either you can have this branding on the server side so you just",
    "start": "1728960",
    "end": "1734159"
  },
  {
    "text": "have a regular front end and then you have the data processing on the backend side",
    "start": "1734159",
    "end": "1739200"
  },
  {
    "text": "or you can have everything on the front end so you have some client-side javascript",
    "start": "1739200",
    "end": "1745039"
  },
  {
    "text": "or you can run it as a client-side web assembly so then you compile maybe you have your data processing as a c",
    "start": "1745039",
    "end": "1751520"
  },
  {
    "text": "library so then you just compile your c library down to web assembly and then you can use it in the front end or you can compile your",
    "start": "1751520",
    "end": "1759279"
  },
  {
    "text": "c library to webassembly and then you can use it as a serverless function here also using web assemblies",
    "start": "1759279",
    "end": "1765520"
  },
  {
    "text": "that's that is what we call serverless web assembly",
    "start": "1765520",
    "end": "1770158"
  },
  {
    "text": "then there are also been discussions here about something called vos your webassembly system interface",
    "start": "1771760",
    "end": "1779039"
  },
  {
    "text": "so here the idea is that we will have webassembly which actually runs outside of the browser and we can also think about this as a",
    "start": "1779039",
    "end": "1785919"
  },
  {
    "text": "web assembly as a language for a conceptual machine but then we need to have some sort of an",
    "start": "1785919",
    "end": "1792159"
  },
  {
    "text": "interface for both of the conceptual operating system and the idea here is that this should be run on all types of",
    "start": "1792159",
    "end": "1798399"
  },
  {
    "text": "operating systems so this is also an example here from lin clark here",
    "start": "1798399",
    "end": "1804159"
  },
  {
    "text": "so usually what happens is if you have an application and it was wants to",
    "start": "1804159",
    "end": "1810559"
  },
  {
    "text": "to operate on your hard drive for example you need to have some sort of negotiation and then you can call something which is",
    "start": "1810559",
    "end": "1816559"
  },
  {
    "text": "called pulse function which can go directly down to your operating system and execute",
    "start": "1816559",
    "end": "1822080"
  },
  {
    "text": "functions so the idea is we have some sort of mediator that the web assembly can call and he",
    "start": "1822080",
    "end": "1827919"
  },
  {
    "text": "can ask the mediator to to approve him in order to be able to execute and write",
    "start": "1827919",
    "end": "1833679"
  },
  {
    "text": "read and write functions on the operating system",
    "start": "1833679",
    "end": "1838880"
  },
  {
    "text": "so that has actually been implemented here so if you want to know more you can go and look up the versa the web assembly",
    "start": "1839279",
    "end": "1845039"
  },
  {
    "text": "system interface so we're going to have a quick look at how this could",
    "start": "1845039",
    "end": "1850640"
  },
  {
    "text": "how this could look like so in this in this example here we have a",
    "start": "1850640",
    "end": "1856880"
  },
  {
    "text": "webassembly module where we want to write something down to disk and then return it out on",
    "start": "1856880",
    "end": "1862320"
  },
  {
    "text": "the console so what we can do here is we can use a",
    "start": "1862320",
    "end": "1867519"
  },
  {
    "text": "special run time which is called was some time so wasn't time is special specifically developed for this",
    "start": "1867519",
    "end": "1874399"
  },
  {
    "text": "voicey interface so you can use the wasp time and then you can execute this demo.what file and",
    "start": "1874399",
    "end": "1880640"
  },
  {
    "text": "then we get hello world and then you can also compile this what wat file",
    "start": "1880640",
    "end": "1888799"
  },
  {
    "text": "down to the wason format and then we can just execute our wasom",
    "start": "1888799",
    "end": "1894880"
  },
  {
    "text": "which is our web assembly in there was some time uh runtime and what was also interesting",
    "start": "1894880",
    "end": "1901279"
  },
  {
    "text": "here so what we did here was that we could actually we could store something in memory and then we could read it back",
    "start": "1901279",
    "end": "1907039"
  },
  {
    "text": "and then we could console out this from the memory and we could also use there's",
    "start": "1907039",
    "end": "1912320"
  },
  {
    "text": "also polyfill so if you want to use this in your web web application that's also possible to",
    "start": "1912320",
    "end": "1918840"
  },
  {
    "text": "do so now we will have a quick look also at",
    "start": "1918840",
    "end": "1924159"
  },
  {
    "text": "some other frameworks that are using webassembly so one of these frameworks",
    "start": "1924159",
    "end": "1930799"
  },
  {
    "text": "is called pyodide so in um with pyrolyte what you can do here is you can bring",
    "start": "1930799",
    "end": "1936960"
  },
  {
    "text": "the python runtime to the browser through webassembly i can also with that you can also bring",
    "start": "1936960",
    "end": "1942720"
  },
  {
    "text": "with you some different python libraries like numpy or pandas or matplotlib",
    "start": "1942720",
    "end": "1948640"
  },
  {
    "text": "and then the beauty of this is instead of using you know regular",
    "start": "1948640",
    "end": "1953840"
  },
  {
    "text": "jupiter notebooks which can be a little bit complicated if you want to share your",
    "start": "1953840",
    "end": "1958880"
  },
  {
    "text": "material with with some other developers you can just upload this on a regular web page and",
    "start": "1958880",
    "end": "1964559"
  },
  {
    "text": "then share your results through that and there is also some examples on how",
    "start": "1964559",
    "end": "1972320"
  },
  {
    "text": "we can use matplotlib in order to do some plottings here so yeah so what is important here is",
    "start": "1972320",
    "end": "1978320"
  },
  {
    "text": "that you know now we can make use of all these rich ecosystems that exist in the python world so for example",
    "start": "1978320",
    "end": "1985200"
  },
  {
    "text": "with pa with pandas and with matplotlib and we can use it on the web by using this iodide and",
    "start": "1985200",
    "end": "1992000"
  },
  {
    "text": "paradide functionality another example is assembly script",
    "start": "1992000",
    "end": "1999919"
  },
  {
    "text": "so what assembly script does it's it's a subset of typescript that you can use",
    "start": "1999919",
    "end": "2005200"
  },
  {
    "text": "so it will generate a webassembly module here so for example here we have a rotate",
    "start": "2005200",
    "end": "2010720"
  },
  {
    "text": "function we have some input and some output and then",
    "start": "2010720",
    "end": "2016480"
  },
  {
    "text": "we uh what is important here this that we are responsible here for allocating and de-allocating of memory",
    "start": "2016480",
    "end": "2023360"
  },
  {
    "text": "so when we're using this from assembly script we need to go to the memory allocate for our code and then we also need to",
    "start": "2023360",
    "end": "2029840"
  },
  {
    "text": "remember to free it up when we finished with our execution",
    "start": "2029840",
    "end": "2035600"
  },
  {
    "text": "and then we have also blazer so so there's been several talks about laser so i'm just gonna through this a",
    "start": "2037039",
    "end": "2043279"
  },
  {
    "text": "little bit faster but basically you can have placer uh on the server like you have client events that will be sent back",
    "start": "2043279",
    "end": "2049520"
  },
  {
    "text": "through signalr or you can have it run on the client using web assembly",
    "start": "2049520",
    "end": "2055358"
  },
  {
    "text": "so the history band blazer is actually steve sanderson he presented this at nbc 2017 and then the mono team was invested",
    "start": "2055359",
    "end": "2064240"
  },
  {
    "text": "because mono can be used as a compiled target for web assembly the sumono is an open",
    "start": "2064240",
    "end": "2071040"
  },
  {
    "text": "source uh distribution of the dot net framework and then uh around the same time they",
    "start": "2071040",
    "end": "2077839"
  },
  {
    "text": "play the net team that interested in blazer and then they sort of collaborated in order to get blazer out",
    "start": "2077839",
    "end": "2086560"
  },
  {
    "text": "so basically what you do is you compile your um your c sharp code down to dot net",
    "start": "2086560",
    "end": "2092320"
  },
  {
    "text": "assemblies and then since we can run this mono uh framework in webassembly we can also",
    "start": "2092320",
    "end": "2098960"
  },
  {
    "text": "run this network assemblies also in webassembly in the in the browser here so one of the",
    "start": "2098960",
    "end": "2106800"
  },
  {
    "text": "canonical examples here is a is a counter you can define the counter function and then you can just",
    "start": "2106800",
    "end": "2114880"
  },
  {
    "text": "increase increase the counter here and the way that this looks like if you would look",
    "start": "2114880",
    "end": "2120160"
  },
  {
    "text": "if you would look in the developer tools is this so it's quite interesting here to have",
    "start": "2120160",
    "end": "2127119"
  },
  {
    "text": "you know we both have the blazer app dll and then we also have like the uh",
    "start": "2127119",
    "end": "2133040"
  },
  {
    "text": "ms lib dll and the dot net standard dll and you know at least in the past we",
    "start": "2133040",
    "end": "2138160"
  },
  {
    "text": "were not really used to see these types of dll in the browser so i think this opens up for",
    "start": "2138160",
    "end": "2144079"
  },
  {
    "text": "a lot of new possibilities and especially for you know for some developers that are",
    "start": "2144079",
    "end": "2150240"
  },
  {
    "text": "not so terribly familiar with the javascript development then this could be a great tool there because",
    "start": "2150240",
    "end": "2156160"
  },
  {
    "text": "then they can use the same tool which is visual studio and they can also use the same language as they've been using before which is",
    "start": "2156160",
    "end": "2162880"
  },
  {
    "text": "c-sharp and develop a full-fledged web application without having to rely on javascript or",
    "start": "2162880",
    "end": "2169760"
  },
  {
    "text": "other similar similar tools i'm just gonna have something to drink",
    "start": "2169760",
    "end": "2176000"
  },
  {
    "text": "but this is not exclusive to c sharp so if we have some some f sharp developers here amongst us",
    "start": "2184000",
    "end": "2190400"
  },
  {
    "text": "there's also concern called bolero where you can use left version f sharp in web assembly so i recommend you to have",
    "start": "2190400",
    "end": "2198720"
  },
  {
    "text": "a quick look here at bolero if you're interested more into into that",
    "start": "2198720",
    "end": "2205599"
  },
  {
    "text": "so now we've come to the chapter here called new old",
    "start": "2209920",
    "end": "2215599"
  },
  {
    "text": "so the question is have we not seen this before so for those of us who have who have",
    "start": "2215599",
    "end": "2221440"
  },
  {
    "text": "been around for some time maybe we remember activex or maybe we remember remember flash",
    "start": "2221440",
    "end": "2226720"
  },
  {
    "text": "or maybe we remember silverlight so what happened with all of these three technologies was that",
    "start": "2226720",
    "end": "2232160"
  },
  {
    "text": "there were people many companies that were focusing a lot on these technologies but",
    "start": "2232160",
    "end": "2237760"
  },
  {
    "text": "then they got a little bit burned because you know these technologies support just",
    "start": "2237760",
    "end": "2243119"
  },
  {
    "text": "disappeared and and the question is can the same thing happen here to webassembly",
    "start": "2243119",
    "end": "2249119"
  },
  {
    "text": "and i would say that with webassembly it's a different type of situation because all of this all these activex f",
    "start": "2249119",
    "end": "2257200"
  },
  {
    "text": "flash and silverlight they're very pro proprietary technologies uh whereas webassembly is",
    "start": "2257200",
    "end": "2264240"
  },
  {
    "text": "actually a w3c standard so so that gives me much more confidence in",
    "start": "2264240",
    "end": "2271359"
  },
  {
    "text": "in relying on web assembly so i don't think it will take this",
    "start": "2271359",
    "end": "2278400"
  },
  {
    "text": "route that these three technologies took before",
    "start": "2278400",
    "end": "2285520"
  },
  {
    "text": "now i've come to the end here on my presentation so um so the question is here what can we",
    "start": "2285520",
    "end": "2291200"
  },
  {
    "text": "conclude with because when maybe a year or a year and a half ago",
    "start": "2291200",
    "end": "2296880"
  },
  {
    "text": "then you could read a lot of articles about webassembly and they said that javascript is dead and that web assembly",
    "start": "2296880",
    "end": "2303520"
  },
  {
    "text": "would take over everything so the question is here should we go for webassembly all the things well i don't",
    "start": "2303520",
    "end": "2310800"
  },
  {
    "text": "really think so i think that webassembly is yet another tool in your toolbox",
    "start": "2310800",
    "end": "2316160"
  },
  {
    "text": "so it can be really great for some applications like for example the applications that we're looking at a little bit here is that if you",
    "start": "2316160",
    "end": "2322960"
  },
  {
    "text": "already have um if you already have an application that you have developed in ce or super plus and you want to expose",
    "start": "2322960",
    "end": "2329760"
  },
  {
    "text": "this to a wider audience on the web then web assembly is a great uh it's a great tool for that but we can",
    "start": "2329760",
    "end": "2337200"
  },
  {
    "text": "also see at least up till now that we there's a lot of uh tooling that needs to be put into",
    "start": "2337200",
    "end": "2344560"
  },
  {
    "text": "place because it's not it's not super straightforward to to do all of these things so i think there's a",
    "start": "2344560",
    "end": "2351760"
  },
  {
    "text": "lot of things that can be done in order to simplify for us developers to take to start uh",
    "start": "2351760",
    "end": "2357839"
  },
  {
    "text": "working with webassembly so i don't think for those who are working with javascript they",
    "start": "2357839",
    "end": "2363839"
  },
  {
    "text": "they don't need to be afraid i think that javascript and webassembly are complementary technologies so they are",
    "start": "2363839",
    "end": "2370240"
  },
  {
    "text": "not overlapping but they serve different purpose purposes",
    "start": "2370240",
    "end": "2376480"
  },
  {
    "text": "and then i have also some references here so uh app so you can have a look at",
    "start": "2377599",
    "end": "2383200"
  },
  {
    "text": "there is both on mozilla and uh on the webassembly",
    "start": "2383200",
    "end": "2388480"
  },
  {
    "text": "official pages there's both developers guide and startups for those you who would like to to",
    "start": "2388480",
    "end": "2395200"
  },
  {
    "text": "get into this field and also i've also added some links here to blazer for those of you who are",
    "start": "2395200",
    "end": "2401200"
  },
  {
    "text": "interested more into that and then finally here before i finish",
    "start": "2401200",
    "end": "2407680"
  },
  {
    "text": "it's gonna take a little bit more to drink",
    "start": "2407680",
    "end": "2412480"
  },
  {
    "text": "yeah so finally here before i finish i would just like to take the opportunity here to talk a little bit about",
    "start": "2415599",
    "end": "2421440"
  },
  {
    "text": "this ai 42 school that i was talking about so af42 is an online as school that",
    "start": "2421440",
    "end": "2427680"
  },
  {
    "text": "me and another ai mep called eve party started now in january 2021",
    "start": "2427680",
    "end": "2434640"
  },
  {
    "text": "and the idea here with the af42 is we would like to give everyone here",
    "start": "2434640",
    "end": "2439760"
  },
  {
    "text": "on the planet the possibility of getting into machine learning ai and data science so the way that we",
    "start": "2439760",
    "end": "2446560"
  },
  {
    "text": "have done this is that we have invited industry experts and recognized speakers and they will have sessions that we will",
    "start": "2446560",
    "end": "2453040"
  },
  {
    "text": "be streaming two times a month on wednesdays so what we're doing is we start out with",
    "start": "2453040",
    "end": "2459520"
  },
  {
    "text": "mathematics and statistics and probability theory and after that we will move gradually into languages like python r",
    "start": "2459520",
    "end": "2466400"
  },
  {
    "text": "and scala and also into tools such as databricks and power bi they will also look at how can you stop",
    "start": "2466400",
    "end": "2473040"
  },
  {
    "text": "a machine learning pipeline or more advanced topics like reinforcement learning or explainable ai",
    "start": "2473040",
    "end": "2481839"
  },
  {
    "text": "we will also have some workshops so that you can put theory into practice and all of this is for free so you just",
    "start": "2482000",
    "end": "2488640"
  },
  {
    "text": "need to register here so if you're interested i suggest that you can scan our qr code so you can either see our",
    "start": "2488640",
    "end": "2495680"
  },
  {
    "text": "previous lectures on youtube or you can get notified here through",
    "start": "2495680",
    "end": "2500880"
  },
  {
    "text": "meetup when we announce our next lecture and you can follow us on instagram on twitter",
    "start": "2500880",
    "end": "2507359"
  },
  {
    "text": "and on facebook and we are also associated with the global ai community",
    "start": "2507359",
    "end": "2513040"
  },
  {
    "text": "so you will be able to see our sessions also on the global ai community youtube channel",
    "start": "2513040",
    "end": "2519760"
  },
  {
    "text": "and we sponsored by microsoft and we also have a graphic designer by levante bongor and",
    "start": "2519760",
    "end": "2526560"
  },
  {
    "text": "our introduction music by mynamery",
    "start": "2526560",
    "end": "2531838"
  },
  {
    "text": "so that is all for me so if you have any comments or questions you can always reach me on",
    "start": "2532160",
    "end": "2538640"
  },
  {
    "text": "twitter where my name is or you can send me an email on the following email address",
    "start": "2538640",
    "end": "2545760"
  },
  {
    "text": "so that i would like to thank you for your attention and your time and i wish you a continued good ndc london thank you so",
    "start": "2545760",
    "end": "2555680"
  },
  {
    "text": "much you",
    "start": "2562839",
    "end": "2569119"
  }
]