[
  {
    "text": "and there my microphone is live so that's good if you haven't gotten the",
    "start": "7680",
    "end": "12759"
  },
  {
    "text": "chance to enjoy the demo yet feel free to do that it's it's a bit funny actually that even though I try to make",
    "start": "12759",
    "end": "19400"
  },
  {
    "text": "like a very contained experience where you can't do anything wrong then I still you still find some way to to inject",
    "start": "19400",
    "end": "26920"
  },
  {
    "text": "some questionable stuff so I got some nice photos now probably a good blog post but yeah it's uh it's fun and some",
    "start": "26920",
    "end": "35960"
  },
  {
    "text": "of you even found a way to put text in uh I'm not actually surprised because this is a very simple app with basically",
    "start": "35960",
    "end": "42559"
  },
  {
    "text": "no input validation uh so so yeah it's probably a lot worse stuff that you can do so I guess I'm asking for",
    "start": "42559",
    "end": "50199"
  },
  {
    "text": "trouble uh but super fun uh I think we should probably continue on um before",
    "start": "50199",
    "end": "58359"
  },
  {
    "text": "more risky stuff happens uh so anyway good morning everyone and",
    "start": "58359",
    "end": "63559"
  },
  {
    "text": "thanks for coming to my talk uh I'm going to talk a bit about realtime",
    "start": "63559",
    "end": "68720"
  },
  {
    "text": "experiences or I guess more the technology behind uh real time uh",
    "start": "68720",
    "end": "74640"
  },
  {
    "text": "connections on the web and the app that you just saw that you got to play around with is kind of what we'll use as the",
    "start": "74640",
    "end": "81560"
  },
  {
    "text": "basis for this and talk a bit about how it works because uh what I feel like",
    "start": "81560",
    "end": "87479"
  },
  {
    "text": "when whenever we talk about the these kinds of real time applications everyone",
    "start": "87479",
    "end": "93000"
  },
  {
    "text": "kind of thinks that they're super Advanced that that you need some kind of magic Frameworks that inject a ton of",
    "start": "93000",
    "end": "100119"
  },
  {
    "text": "code to make this happen uh but the truth is that you can actually build something like this very easily and",
    "start": "100119",
    "end": "107079"
  },
  {
    "text": "that's what we're going to look at and just to be super clear when I say real",
    "start": "107079",
    "end": "112560"
  },
  {
    "text": "time real time connection and what I mean is some kind of application that",
    "start": "112560",
    "end": "118560"
  },
  {
    "text": "sends or receives data in real time so as soon as you send the data something",
    "start": "118560",
    "end": "124039"
  },
  {
    "text": "is supposed to happen either you receive data from someone else say a chat message or something like that or you",
    "start": "124039",
    "end": "130920"
  },
  {
    "text": "use the data to control something else and the goal is to reduce the latency uh so the app that you just got",
    "start": "130920",
    "end": "138200"
  },
  {
    "text": "to play around with uses something called Event Source and it's actually just about 20 lines of JavaScript both",
    "start": "138200",
    "end": "145319"
  },
  {
    "text": "on the server and on the client and of course some CSS in there to make look pretty but it doesn't have to be more",
    "start": "145319",
    "end": "152480"
  },
  {
    "text": "advanced than that it doesn't use any JavaScript Frameworks other than a simple HTTP server it uses this",
    "start": "152480",
    "end": "159519"
  },
  {
    "text": "interface called the vent source and the server simply sends back uh a very",
    "start": "159519",
    "end": "165640"
  },
  {
    "text": "specific HTTP response and keeps the connection open and we're going to get back to more how this H how this works",
    "start": "165640",
    "end": "174080"
  },
  {
    "text": "uh but what's funny is that I just discovered this way of doing it in relation to some kind of interview",
    "start": "174080",
    "end": "180440"
  },
  {
    "text": "assignment I used uh or I went through uh a couple of years ago and I was",
    "start": "180440",
    "end": "185640"
  },
  {
    "text": "surprised that just this is super simple but why is nobody talking about it I",
    "start": "185640",
    "end": "191120"
  },
  {
    "text": "feel like as soon as you mention real time everyone's straight onto the websocket verb everything has to be",
    "start": "191120",
    "end": "198519"
  },
  {
    "text": "websocket and I get it websockets are super cool and just the way that they work gives you a lot of cool",
    "start": "198519",
    "end": "205440"
  },
  {
    "text": "opportunities that you can make you can make your own protocols you can basically do anything but for a lot of",
    "start": "205440",
    "end": "211239"
  },
  {
    "text": "cases it might be Overkill uh and especially for prototyping purposes for",
    "start": "211239",
    "end": "216400"
  },
  {
    "text": "hackathons and just if you want to transmit data one way so uh what I want",
    "start": "216400",
    "end": "221680"
  },
  {
    "text": "to talk about today is uh I had two goals when I set out to write this talk",
    "start": "221680",
    "end": "227159"
  },
  {
    "text": "the first one was to tell more people about s also known as Event Source or",
    "start": "227159",
    "end": "232799"
  },
  {
    "text": "also known as server sent events or event streaming and the second one was",
    "start": "232799",
    "end": "238040"
  },
  {
    "text": "to figure out why nobody talks about it and",
    "start": "238040",
    "end": "244280"
  },
  {
    "text": "uh my name is bcta I sing in AC choire I have two big dogs back on the Family",
    "start": "244560",
    "end": "251200"
  },
  {
    "text": "Farm I do a lot of gaming both new and old and uh uh about two years ago I",
    "start": "251200",
    "end": "258840"
  },
  {
    "text": "started this company that specializes in in uh consulting or Contracting work in",
    "start": "258840",
    "end": "264199"
  },
  {
    "text": "Tech where we specialize in getting people that that are kind of the bridge between technology and communication and",
    "start": "264199",
    "end": "271039"
  },
  {
    "text": "culture because those are things that I burn for uh so today we're going to talk",
    "start": "271039",
    "end": "276440"
  },
  {
    "text": "about uh some techniques some technologies that basically fall into three different categories uh but what",
    "start": "276440",
    "end": "283440"
  },
  {
    "text": "we're going to talk about is very heavily based on the web so I feel like the place that we should start is the",
    "start": "283440",
    "end": "290360"
  },
  {
    "text": "the foundation of web and everyone of course know that that's HTTP HTTP is the",
    "start": "290360",
    "end": "296800"
  },
  {
    "text": "way your browser downloads stuff it download more or less anything at this",
    "start": "296800",
    "end": "301919"
  },
  {
    "text": "point in the beginning it was a bit more limited uh but it Powers so much of our",
    "start": "301919",
    "end": "307120"
  },
  {
    "text": "day-to-day and I feel that we talk so little about it as web developers I feel",
    "start": "307120",
    "end": "312199"
  },
  {
    "text": "like if you're an SRE or you work with Ops then you talk a lot more about HTTP",
    "start": "312199",
    "end": "318600"
  },
  {
    "text": "but uh if you if you make applications for it I believe that if you know some of the details behind it know some",
    "start": "318600",
    "end": "325319"
  },
  {
    "text": "things about versioning and what kind of features you have available kind of the pros and cons of newer and old versions",
    "start": "325319",
    "end": "332520"
  },
  {
    "text": "then you can make better applications uh so let's just start at the beginning this and the guy in the",
    "start": "332520",
    "end": "340120"
  },
  {
    "text": "middle there is Tim burners Lee he used to work at CERN and in 1981 he kind of",
    "start": "340120",
    "end": "346199"
  },
  {
    "text": "invented the internet and what he gave us this first time around is uh uh is",
    "start": "346199",
    "end": "354400"
  },
  {
    "text": "HTTP and a simple HTML and the URI and some other other stuff and uh this first",
    "start": "354400",
    "end": "362960"
  },
  {
    "text": "version of HTTP is what we later called HTTP 0.9 and uh this is all that there is so",
    "start": "362960",
    "end": "370560"
  },
  {
    "text": "there's a request and a response you only had the get method for example and",
    "start": "370560",
    "end": "375720"
  },
  {
    "text": "you gave it a path to some kind of document the document had to be HTML and",
    "start": "375720",
    "end": "380880"
  },
  {
    "text": "you get that HTML back uh of course uh",
    "start": "380880",
    "end": "385919"
  },
  {
    "text": "after this and after this kind of took off uh there were no standards being enforced or anything so back in the old",
    "start": "385919",
    "end": "392720"
  },
  {
    "text": "days everyone kind of jumped on this because it was getting more popular and they made their own features on top of",
    "start": "392720",
    "end": "399319"
  },
  {
    "text": "this uh and it turned into a lovely chaos that I'm sure a lot of you have been working in at some point uh but",
    "start": "399319",
    "end": "407199"
  },
  {
    "text": "thankfully the HTTP working group was established in 1996 and they kind of did",
    "start": "407199",
    "end": "412919"
  },
  {
    "text": "the work to go out in the industry and find uh try to discover how people were doing this and actually document it and",
    "start": "412919",
    "end": "420720"
  },
  {
    "text": "what they came up with in 1996 was this HTTP 1.0 and and here you see that we",
    "start": "420720",
    "end": "428479"
  },
  {
    "text": "have some more features already we have uh headers for example which was new uh",
    "start": "428479",
    "end": "434639"
  },
  {
    "text": "we actually have a versioning scheme right now we have response codes and",
    "start": "434639",
    "end": "439840"
  },
  {
    "text": "reasons and we have content types and you see also in the response there we have linked a file with a different",
    "start": "439840",
    "end": "446240"
  },
  {
    "text": "format because this was the first time that HTTP actually let you download other other things than actual text well",
    "start": "446240",
    "end": "453639"
  },
  {
    "text": "in a standardized manner I guess uh but from there uh the next year in",
    "start": "453639",
    "end": "460080"
  },
  {
    "text": "1997 uh the HTTP working group came together and made HTTP 1.1 which",
    "start": "460080",
    "end": "466319"
  },
  {
    "text": "actually was the first standardized version and it brought with it a lot of new features like uh persistent and",
    "start": "466319",
    "end": "473960"
  },
  {
    "text": "pipeline connections virtual hosting those kind of stuff that are under the hood but you also got stuff like content",
    "start": "473960",
    "end": "480960"
  },
  {
    "text": "negotiation meaning that the browser could finally tell the server something about what kind of content it wanted and",
    "start": "480960",
    "end": "487039"
  },
  {
    "text": "then you could return that you also got caching and a lot more methods like put delete trace and options and this is",
    "start": "487039",
    "end": "495039"
  },
  {
    "text": "what the response looks like now we have content type that tells something about what you're getting back we have some",
    "start": "495039",
    "end": "501440"
  },
  {
    "text": "encoding we have uh a lot of Juicy stuff uh also one that's called transfer",
    "start": "501440",
    "end": "507039"
  },
  {
    "text": "encoding chunked which will become a relevant later in this talk so during",
    "start": "507039",
    "end": "512959"
  },
  {
    "text": "this time there was the big browser war between a Netscape Navigator and Internet Explorer and this was 1995 to",
    "start": "512959",
    "end": "521159"
  },
  {
    "text": "2001 and uh in 1995 these are the founders of of Netscape by the way and",
    "start": "521159",
    "end": "527640"
  },
  {
    "text": "they hired this guy called Brendan Ike in 1995 and they tasked him with",
    "start": "527640",
    "end": "533600"
  },
  {
    "text": "creating some kind of scripting language for their browser because they wanted interactivity uh and uh he did that and",
    "start": "533600",
    "end": "541519"
  },
  {
    "text": "uh made a like a simple version based on lisp and it couldn't really do that much",
    "start": "541519",
    "end": "546680"
  },
  {
    "text": "at that point it could basically just validate forms uh before sending them uh but from there uh some very",
    "start": "546680",
    "end": "554480"
  },
  {
    "text": "smart people at Microsoft and made something called xhr or XML HTTP request",
    "start": "554480",
    "end": "561959"
  },
  {
    "text": "uh which was the first time you could actually send requests in the browser in the background so this was initially",
    "start": "561959",
    "end": "568079"
  },
  {
    "text": "called uh active X and I'm sure a lot of you have seen that before and and the",
    "start": "568079",
    "end": "573760"
  },
  {
    "text": "idea was to kind of separate the request and the response from the actual loading",
    "start": "573760",
    "end": "579040"
  },
  {
    "text": "of the document that happens in the browser so that you can do updates in in the",
    "start": "579040",
    "end": "584560"
  },
  {
    "text": "background uh and uh the next thing that we got was uh this thing right here that's called the Dom and I'm sure a lot",
    "start": "584560",
    "end": "591440"
  },
  {
    "text": "of you have seen it it's the document object model and this let you use the scripting language that brend and I came",
    "start": "591440",
    "end": "597800"
  },
  {
    "text": "up with to kind of modify the document that the browser is currently viewing allowing for creating uh uh",
    "start": "597800",
    "end": "606120"
  },
  {
    "text": "interactivity uh and the Dom as well in the beginning it only let you work on",
    "start": "606120",
    "end": "611240"
  },
  {
    "text": "forms and Tool tips and that kind of stuff but it became more advanced after a while and these days you could do",
    "start": "611240",
    "end": "617079"
  },
  {
    "text": "basically anything with this uh but based on these Technologies uh this guy",
    "start": "617079",
    "end": "622560"
  },
  {
    "text": "called Jesse James Garrett he coined the term Ajax and Ajax stands for asynchronous JavaScript and XML and uh",
    "start": "622560",
    "end": "631240"
  },
  {
    "text": "it was kind of a word to Define how you would go from not only creating web pages but also creating uh interactive",
    "start": "631240",
    "end": "640120"
  },
  {
    "text": "applications uh by using HTML the Dom uh some kind of uh formatted data like XML",
    "start": "640120",
    "end": "648639"
  },
  {
    "text": "or Json uh xhr the XML HTTP request that we saw and",
    "start": "648639",
    "end": "654480"
  },
  {
    "text": "JavaScript and uh now at this point in history we kind of have all our ingredients to look at the first",
    "start": "654480",
    "end": "661040"
  },
  {
    "text": "technique and the first technique is called polling the first technique to create realtime applications and polling",
    "start": "661040",
    "end": "668680"
  },
  {
    "text": "works I'm sure a lot of you have seen it before uh it works by asking for data",
    "start": "668680",
    "end": "673800"
  },
  {
    "text": "again and again and again until you get more data and uh uh maybe not that",
    "start": "673800",
    "end": "680279"
  },
  {
    "text": "efficient you have a lot of waiting in this kind of case you do a lot of unnecessary requests uh but it was it",
    "start": "680279",
    "end": "687639"
  },
  {
    "text": "was normal at the time and this was how that you could do it you made a function you used the xhr to send a request uh",
    "start": "687639",
    "end": "695279"
  },
  {
    "text": "and you did that again in a certain amount of time uh so by adjusting the",
    "start": "695279",
    "end": "701079"
  },
  {
    "text": "frequency of how often you run you could get the latency or the time until you get new data to be shorter but at the",
    "start": "701079",
    "end": "707880"
  },
  {
    "text": "same time you would put more strain on your server so to summarize uh the",
    "start": "707880",
    "end": "713079"
  },
  {
    "text": "polling technique it requires nothing special from uh your server uh and the client implementation",
    "start": "713079",
    "end": "720720"
  },
  {
    "text": "is super simple everyone knows how to make a loop uh scalability is a bit poor because you put so much uh strain on",
    "start": "720720",
    "end": "727360"
  },
  {
    "text": "your server imagine you have a thousand active users uh or more and they're all",
    "start": "727360",
    "end": "732720"
  },
  {
    "text": "kind of pushing and and making requests to your server all the time it's a good way to kind of Doss yourself uh the data",
    "start": "732720",
    "end": "740800"
  },
  {
    "text": "Direction at this point is one way so you get data from the server to the client and the latency has the potential",
    "start": "740800",
    "end": "746800"
  },
  {
    "text": "to be big uh and uh and that kind of sums up a polling for us so this worked",
    "start": "746800",
    "end": "753079"
  },
  {
    "text": "on a lot of services at the time was using this but uh it was not kind of good enough so people wanted a better",
    "start": "753079",
    "end": "760120"
  },
  {
    "text": "way to do things and this led to the word a comet which is uh Alex Russell's",
    "start": "760120",
    "end": "767120"
  },
  {
    "text": "uh attempt at kind of making a name for this new movement and he said that an",
    "start": "767120",
    "end": "772320"
  },
  {
    "text": "old web technology is slowly being resurrected from the depths of History browser features that have gone",
    "start": "772320",
    "end": "777959"
  },
  {
    "text": "untouched for years are once again being employed to bring better responsiveness to UI so it's a bit interesting that you",
    "start": "777959",
    "end": "784560"
  },
  {
    "text": "actually go to the past to to find Technologies to do this thing um and",
    "start": "784560",
    "end": "791839"
  },
  {
    "text": "this is a picture of him by the way he's also the owner of the blink API which Powers a lot of",
    "start": "791839",
    "end": "797720"
  },
  {
    "text": "browsers and uh this also brings us to the next technique that you could use to",
    "start": "797720",
    "end": "802800"
  },
  {
    "text": "implement real time and it it's a bit more interesting than polling I guess but it has a lot of similarity I ities",
    "start": "802800",
    "end": "809600"
  },
  {
    "text": "which is why it's called Uh long Pauling uh so what you do in Long Pauling is",
    "start": "809600",
    "end": "814920"
  },
  {
    "text": "that you send the same request as you would do for for a polling implementation to get data but what uh",
    "start": "814920",
    "end": "822680"
  },
  {
    "text": "uh you get from the server is basically this so the server will will keep you there and say nothing for a while and",
    "start": "822680",
    "end": "830920"
  },
  {
    "text": "then something happens and you get some data and by doing this you basically get",
    "start": "830920",
    "end": "836600"
  },
  {
    "text": "some kind of interactive cue that the client doesn't have to care about uh and",
    "start": "836600",
    "end": "841839"
  },
  {
    "text": "as long as soon as the data that you're interested is available the server will give it to you and thereby eliminating",
    "start": "841839",
    "end": "848320"
  },
  {
    "text": "the latency uh but without requiring that much more from the client and uh uh so that means that the",
    "start": "848320",
    "end": "855639"
  },
  {
    "text": "client Implement implementation is exactly the same we just rename the function because you still want to do uh",
    "start": "855639",
    "end": "862399"
  },
  {
    "text": "you still want to make the request again because the server won't tell you anything more than what it has at that",
    "start": "862399",
    "end": "868079"
  },
  {
    "text": "exact point uh so you continue and the server implementation could look like this uh",
    "start": "868079",
    "end": "874600"
  },
  {
    "text": "you get some kind of uh uh uh ask for data a get request you put the",
    "start": "874600",
    "end": "880120"
  },
  {
    "text": "connection somewhere you have access to it but you don't do anything specific with it and you make sure to not close",
    "start": "880120",
    "end": "885839"
  },
  {
    "text": "it uh but then in the post controller for example where you receive data uh",
    "start": "885839",
    "end": "891639"
  },
  {
    "text": "whenever you receive data you Loop through your array you write that data out to all the pending requests and then",
    "start": "891639",
    "end": "898000"
  },
  {
    "text": "you close them at the same same time and you reset your queue so it's a very naive example if you use this uh clients",
    "start": "898000",
    "end": "905079"
  },
  {
    "text": "that are in the middle of reconnecting for example they won't get messages so it's not a very robust example but you",
    "start": "905079",
    "end": "912040"
  },
  {
    "text": "could easily uh uh go around this if you wanted uh so to summarize long polling",
    "start": "912040",
    "end": "920959"
  },
  {
    "text": "uh the basic difference here is that you keep the connection open from the server",
    "start": "920959",
    "end": "926399"
  },
  {
    "text": "uh and then the client doesn't have to change any thing the scalability is a lot better because you don't have to do",
    "start": "926399",
    "end": "932480"
  },
  {
    "text": "all those uh extra requests uh you still pull but use pull a lot less and the",
    "start": "932480",
    "end": "939079"
  },
  {
    "text": "direction for data here is still one way you can only send data from the server to the client uh and the latency is",
    "start": "939079",
    "end": "946399"
  },
  {
    "text": "basically gone but for a bit less data if you have a lot of data then uh then",
    "start": "946399",
    "end": "952360"
  },
  {
    "text": "uh this becomes kind of a big problem especially uh where you are in the reconnecting step",
    "start": "952360",
    "end": "959759"
  },
  {
    "text": "uh so the session is still stateless that means that uh uh that the server won't know you're the same person the",
    "start": "959759",
    "end": "965759"
  },
  {
    "text": "next time you connect because they are all actually separate requests under the hood and now all of a sudden you have",
    "start": "965759",
    "end": "972040"
  },
  {
    "text": "this small uh infrastructure requirement uh that um you have to keep the",
    "start": "972040",
    "end": "978199"
  },
  {
    "text": "connection open and in esec and especially in complex uh HTTP setups",
    "start": "978199",
    "end": "984680"
  },
  {
    "text": "where you have a lot of ingresses and maybe proxies of some sort uh a lot of those Services have a lot of opinions",
    "start": "984680",
    "end": "991920"
  },
  {
    "text": "about how long HTTP connections are supposed to live so that's kind of thing you should check if you're going to do",
    "start": "991920",
    "end": "998639"
  },
  {
    "text": "this uh but uh at this point everyone we kind of",
    "start": "998639",
    "end": "1003800"
  },
  {
    "text": "still uh okay we have a good real time technique right now but everything is",
    "start": "1003800",
    "end": "1010079"
  },
  {
    "text": "kind of based on Hacks upon HTTP uh to use HTTP in ways it was not",
    "start": "1010079",
    "end": "1015959"
  },
  {
    "text": "meant to be used uh so this is what kind of inspired Ian Hixon and Michael Carter",
    "start": "1015959",
    "end": "1021560"
  },
  {
    "text": "in the HTTP working group to start uh making ideas for how to improve this and",
    "start": "1021560",
    "end": "1027880"
  },
  {
    "text": "what's interesting is that they did all this discussion on IRC which is an open platform so you can actually find the",
    "start": "1027880",
    "end": "1034400"
  },
  {
    "text": "IRC logs from when they actually discussed how the web cycle was supposed to look and be shaped and that's very",
    "start": "1034400",
    "end": "1041640"
  },
  {
    "text": "interesting uh at least to me so that brings us on to the web socket and at",
    "start": "1041640",
    "end": "1046839"
  },
  {
    "text": "this point we switch the product because the websocket is completely",
    "start": "1046839",
    "end": "1052960"
  },
  {
    "text": "different from HTTP and that is by Design um you still send oh my monitor",
    "start": "1052960",
    "end": "1060799"
  },
  {
    "text": "screen just gave up eyes back no worries uh you still send a get request because",
    "start": "1060799",
    "end": "1066840"
  },
  {
    "text": "the websocket is designed to be backwards compatible with HTTP because all the browsers are very good at HTTP",
    "start": "1066840",
    "end": "1073320"
  },
  {
    "text": "so you send a get request but you specify a couple of extra headers uh like upgrade upgrade websocket and",
    "start": "1073320",
    "end": "1080159"
  },
  {
    "text": "connection upgrade and this is supposed to tell the server you're talking to that hey I want to actually switch",
    "start": "1080159",
    "end": "1085919"
  },
  {
    "text": "protocol over to talk websocket instead and you also have some different headers",
    "start": "1085919",
    "end": "1091640"
  },
  {
    "text": "that you can supply the SEC websocket key and the protocol and version and",
    "start": "1091640",
    "end": "1097320"
  },
  {
    "text": "they are kind of uh tools for the server to do websockets in a different way you can use the protocol to kind of choose",
    "start": "1097320",
    "end": "1104559"
  },
  {
    "text": "between uh channels that's at least how far I've understood it and the websocket",
    "start": "1104559",
    "end": "1109720"
  },
  {
    "text": "key is kind of um an attempt at doing a crypto cryptographic key verification",
    "start": "1109720",
    "end": "1116080"
  },
  {
    "text": "kind of thing I read the RFC on that and it's basically concatenating some kind of hardcoded string so I didn't quite",
    "start": "1116080",
    "end": "1122360"
  },
  {
    "text": "get it uh but uh but if you want to look up more into that go to the RFC it's",
    "start": "1122360",
    "end": "1127720"
  },
  {
    "text": "very interesting and it's very well written uh so what you get back if the",
    "start": "1127720",
    "end": "1133200"
  },
  {
    "text": "handshake part works out fine is this response right here so you get a normal",
    "start": "1133200",
    "end": "1139159"
  },
  {
    "text": "HTTP response it echoes some headers back to you uh upgrade and and",
    "start": "1139159",
    "end": "1144760"
  },
  {
    "text": "connection upgrade and then it says accept and then it returns a value to you which is the concatenated string for",
    "start": "1144760",
    "end": "1151600"
  },
  {
    "text": "the crypto cryptography thing uh and then you get some information about",
    "start": "1151600",
    "end": "1157080"
  },
  {
    "text": "which of the sub channels that you wanted that you got which is chat in this example and from this point on what",
    "start": "1157080",
    "end": "1165440"
  },
  {
    "text": "uh the two uh partners are communicating with is no longer longer HTTP uh this is now a a lowlevel binary",
    "start": "1165440",
    "end": "1174120"
  },
  {
    "text": "format and it runs on top of TCP which is kind of the lower level in the",
    "start": "1174120",
    "end": "1180240"
  },
  {
    "text": "networking stack you can say that websocket is kind of on the same level as HTTP in the in the model of the",
    "start": "1180240",
    "end": "1187760"
  },
  {
    "text": "internet and I kind of feel like I want to talk about how the internet works but I think that's going to be uh a",
    "start": "1187760",
    "end": "1193840"
  },
  {
    "text": "different talk because you have so many levels but uh uh at this point you start",
    "start": "1193840",
    "end": "1199919"
  },
  {
    "text": "exchanging frames which are binary made up of a certain format where you have",
    "start": "1199919",
    "end": "1205320"
  },
  {
    "text": "bits signifying what kind of packet it is and then you have data in it that has to be split over frames and it's a whole",
    "start": "1205320",
    "end": "1212559"
  },
  {
    "text": "thing but it works very well uh so from the client uh all browsers now have good",
    "start": "1212559",
    "end": "1218799"
  },
  {
    "text": "support for using web sockets you point it to a uh a websocket URL which is a",
    "start": "1218799",
    "end": "1225640"
  },
  {
    "text": "WSS is kind of the protocol that they chose that's the encrypted one WS is the",
    "start": "1225640",
    "end": "1231039"
  },
  {
    "text": "unencrypted one and you say which protocol or sub channel that you wanted and from there on you can attach events",
    "start": "1231039",
    "end": "1237280"
  },
  {
    "text": "to it so you tell the browser that whenever you receive this kind of event do this and you don't have to worry",
    "start": "1237280",
    "end": "1243280"
  },
  {
    "text": "about the binary format and everything that's more of a uh if you wanted to implement this from the bottom up uh on",
    "start": "1243280",
    "end": "1250600"
  },
  {
    "text": "the server however this is not always that straightforward it depends a lot on",
    "start": "1250600",
    "end": "1256159"
  },
  {
    "text": "the framework that you're using to do HTT P because the thing is that HTTP is",
    "start": "1256159",
    "end": "1262039"
  },
  {
    "text": "is one framework and is one protocol but websocket is a completely different one so you have to support that one as well",
    "start": "1262039",
    "end": "1269480"
  },
  {
    "text": "and if you want to run the websocket server on the same server that returns your HTTP then you have to make sure",
    "start": "1269480",
    "end": "1276440"
  },
  {
    "text": "that they talk together because the handshake part will still happen in in",
    "start": "1276440",
    "end": "1281840"
  },
  {
    "text": "HTTP so if you wanted to do this in Express for example which is very commonly used JavaScript framework you",
    "start": "1281840",
    "end": "1288400"
  },
  {
    "text": "have have to use a different package called Express WS unless you want to implement it yourself then you get some",
    "start": "1288400",
    "end": "1295039"
  },
  {
    "text": "nice uh ws. on uh listeners and syntactic sugar that kind of looks like",
    "start": "1295039",
    "end": "1300919"
  },
  {
    "text": "uh Express uh but what we see if we dive a bit further into this and how the",
    "start": "1300919",
    "end": "1306799"
  },
  {
    "text": "express WS framework actually works it uses a different uh framework again WS",
    "start": "1306799",
    "end": "1313679"
  },
  {
    "text": "which is a very pure implementation of websocket for JavaScript which is very good Library so it does a lot of stuff",
    "start": "1313679",
    "end": "1320960"
  },
  {
    "text": "but you still have to work on making sure that your HTTP and your websocket is",
    "start": "1320960",
    "end": "1326960"
  },
  {
    "text": "integrated um yeah so to summarize websockets uh websockets are a",
    "start": "1326960",
    "end": "1333600"
  },
  {
    "text": "completely different thing you have a handshake part and then you have the protocol the communication itself uh the",
    "start": "1333600",
    "end": "1341559"
  },
  {
    "text": "handshake tells the browser switches protocol over to talking so you go from HTTP to a different language and then",
    "start": "1341559",
    "end": "1348799"
  },
  {
    "text": "you have this custom data format that is what you transmit and the client implementation when using websockets is",
    "start": "1348799",
    "end": "1355320"
  },
  {
    "text": "very simple scalability is very good because you open one connection and you can transfer data both ways which is the",
    "start": "1355320",
    "end": "1363200"
  },
  {
    "text": "big Improvement here all the other channels that we talked about you could only get data from the server to your",
    "start": "1363200",
    "end": "1368919"
  },
  {
    "text": "client unless you started requests in the background uh but in the websocket",
    "start": "1368919",
    "end": "1374120"
  },
  {
    "text": "you can send everything so it kind of looks a bit like how desktop top applications used to be and that's also",
    "start": "1374120",
    "end": "1381080"
  },
  {
    "text": "a bit interesting because uh uh before doing this on the web and in the days",
    "start": "1381080",
    "end": "1386520"
  },
  {
    "text": "when the web was very simple you did these kinds of things in desktop applications instead because it gave you",
    "start": "1386520",
    "end": "1393240"
  },
  {
    "text": "better control over stuff like this and it's also why I think if you go to a job",
    "start": "1393240",
    "end": "1399039"
  },
  {
    "text": "that has some sort of Legacy software and it's a desktop application it typically it's a well defined for the",
    "start": "1399039",
    "end": "1405880"
  },
  {
    "text": "time I think so it's it's a thing you'll and find uh but at this point the",
    "start": "1405880",
    "end": "1411240"
  },
  {
    "text": "latency is basically none uh the session now all of a sudden is stateful it means",
    "start": "1411240",
    "end": "1417120"
  },
  {
    "text": "that if you've opened this connection if you've opened this tunnel then the server can actually be somewhat sure",
    "start": "1417120",
    "end": "1423240"
  },
  {
    "text": "that that is the same person I'm talking to and it can can store data along the",
    "start": "1423240",
    "end": "1428799"
  },
  {
    "text": "way uh but it also opens up a bit of requirements for your infrastructure",
    "start": "1428799",
    "end": "1434480"
  },
  {
    "text": "because now you not only have to support HTTP you have to make sure sure that this more generic TCP also works in all",
    "start": "1434480",
    "end": "1443000"
  },
  {
    "text": "the chains in your setup and I'm sure that uh for a lot of cases it will work",
    "start": "1443000",
    "end": "1448080"
  },
  {
    "text": "out of the box but uh I also think that it's a thing to test and uh my point is",
    "start": "1448080",
    "end": "1454840"
  },
  {
    "text": "that when you have websockets uh and you have HTTP then you have two different",
    "start": "1454840",
    "end": "1459960"
  },
  {
    "text": "things you have two uh quite complex components that need to work together so",
    "start": "1459960",
    "end": "1465799"
  },
  {
    "text": "uh it puts a bit of requirements on is of course it isn't impossible or",
    "start": "1465799",
    "end": "1471279"
  },
  {
    "text": "anything like that it's very easy to do with modern Frameworks but it's it's uh",
    "start": "1471279",
    "end": "1476360"
  },
  {
    "text": "something else to consider uh but um we see that there's a",
    "start": "1476360",
    "end": "1481600"
  },
  {
    "text": "gap here in this table and it kind of feels like there should be something that's simpler to",
    "start": "1481600",
    "end": "1488240"
  },
  {
    "text": "use but gives you a lot of the same things and this is where server Cent",
    "start": "1488240",
    "end": "1493720"
  },
  {
    "text": "event comes in let's try to just keep it simple and uh so let me show you what uh",
    "start": "1493720",
    "end": "1500000"
  },
  {
    "text": "server sent events are you start out with the same get request where you ask",
    "start": "1500000",
    "end": "1505159"
  },
  {
    "text": "for some data uh you specify a couple of uh no wa the client doesn't have to",
    "start": "1505159",
    "end": "1510799"
  },
  {
    "text": "specify anything actually but when you get to the response uh this is what it'll look like you'll get a 200 uh it",
    "start": "1510799",
    "end": "1518480"
  },
  {
    "text": "will say uh a couple of special headers called uh content type text event stream",
    "start": "1518480",
    "end": "1527240"
  },
  {
    "text": "and it'll also say I have to search for them now because I've forgotten uh okay but that's the most",
    "start": "1527240",
    "end": "1534559"
  },
  {
    "text": "important one for older versions of HTTP the transfer encoding chunk was also",
    "start": "1534559",
    "end": "1539720"
  },
  {
    "text": "very important because it it gave HTTP the opportunity to not just give you",
    "start": "1539720",
    "end": "1545600"
  },
  {
    "text": "everything at once you could give it in in chunks uh but in HTTP 2 this works a",
    "start": "1545600",
    "end": "1552279"
  },
  {
    "text": "lot different but what happens is you get the headers first it tells you event stream it tells you to keep the",
    "start": "1552279",
    "end": "1558360"
  },
  {
    "text": "Connection open and then you wait for a while something happens on the server and you get this piece of text it says",
    "start": "1558360",
    "end": "1565000"
  },
  {
    "text": "ID is something and it says event is something else and then it gives you",
    "start": "1565000",
    "end": "1570120"
  },
  {
    "text": "some data but then the connection is still open the server isn't finished yet",
    "start": "1570120",
    "end": "1575200"
  },
  {
    "text": "but it will keep you there for a while until something else happens and then you get another event separated by two",
    "start": "1575200",
    "end": "1582279"
  },
  {
    "text": "line breaks it has another ID it might have a different event name it might",
    "start": "1582279",
    "end": "1587640"
  },
  {
    "text": "have some other data and this is the basis of how uh an event stream or",
    "start": "1587640",
    "end": "1593360"
  },
  {
    "text": "server scent events work uh you need some kind of way to parse this in the",
    "start": "1593360",
    "end": "1599039"
  },
  {
    "text": "browser you could write it directly by using fetch or XML HTTP request but the",
    "start": "1599039",
    "end": "1604880"
  },
  {
    "text": "browser gives us a nice interface to do it for us so you say new event source",
    "start": "1604880",
    "end": "1610120"
  },
  {
    "text": "and you give it the URL and then you can register listeners so every time one of",
    "start": "1610120",
    "end": "1615279"
  },
  {
    "text": "those events come in you can get something to happen and on the server side this is what the implementation",
    "start": "1615279",
    "end": "1621240"
  },
  {
    "text": "looks like you still have that same list of connections from the long pulling example uh and the first thing you have",
    "start": "1621240",
    "end": "1627919"
  },
  {
    "text": "to do is uh when a request comes in is to return the status to 200 and these",
    "start": "1627919",
    "end": "1633640"
  },
  {
    "text": "specific headers so the content type the cache control and the connection keep",
    "start": "1633640",
    "end": "1638960"
  },
  {
    "text": "alive and after that you have uh an HTTP tunnel that that in practice looks a lot",
    "start": "1638960",
    "end": "1646360"
  },
  {
    "text": "like a webset but is only one way and there you can write data on that format",
    "start": "1646360",
    "end": "1652200"
  },
  {
    "text": "and you have native support for parsing that in the browser which is pretty cool",
    "start": "1652200",
    "end": "1657240"
  },
  {
    "text": "is what I think at least so to summarize server sent events you keep the",
    "start": "1657240",
    "end": "1662360"
  },
  {
    "text": "connection open you use a specific format the client implementation is",
    "start": "1662360",
    "end": "1667440"
  },
  {
    "text": "super simple just as simple as the web socket uh the scalability is is actually",
    "start": "1667440",
    "end": "1672799"
  },
  {
    "text": "very good because in HTTP 1.1 you had to use the this special transfer encoding",
    "start": "1672799",
    "end": "1680240"
  },
  {
    "text": "chunk thing and there were some requirements on uh how many open connections you could have towards a",
    "start": "1680240",
    "end": "1686399"
  },
  {
    "text": "server at a given time but all of those were fixed in HTTP 2 and uh uh that kind",
    "start": "1686399",
    "end": "1692679"
  },
  {
    "text": "of means that the overhead by doing it this way uh and overcoming the fact that",
    "start": "1692679",
    "end": "1698200"
  },
  {
    "text": "you could only send data from the server to the client by doing requests in the background normal HTTP requests in",
    "start": "1698200",
    "end": "1705919"
  },
  {
    "text": "practice it would be more or less as efficient as using websockets uh because",
    "start": "1705919",
    "end": "1711120"
  },
  {
    "text": "of the way HTTP 2 Works under the hood but only this time you didn't have to",
    "start": "1711120",
    "end": "1716480"
  },
  {
    "text": "worry about any sort of extra server implementation or extra protocol or or",
    "start": "1716480",
    "end": "1721760"
  },
  {
    "text": "switching over to it or anything like that you'd get all of this quite amazing",
    "start": "1721760",
    "end": "1726880"
  },
  {
    "text": "functionality just out of the box uh so yeah the direction is still",
    "start": "1726880",
    "end": "1732159"
  },
  {
    "text": "one way but a short mindset change could kind of do that for us the session now",
    "start": "1732159",
    "end": "1738279"
  },
  {
    "text": "is is stateful as well if you have one of those streams open you are sure that it's the same client that you're talking",
    "start": "1738279",
    "end": "1744320"
  },
  {
    "text": "to and you have the same infrastructure requirements as the long paing example you have to keep the connection open but",
    "start": "1744320",
    "end": "1751559"
  },
  {
    "text": "this time it's just normal HTTP uh and that's kind of our",
    "start": "1751559",
    "end": "1757399"
  },
  {
    "text": "introduction into all of these uh Technologies so just uh a note about",
    "start": "1757399",
    "end": "1762640"
  },
  {
    "text": "security if we have time uh so the web socket doesn't do Authentication in",
    "start": "1762640",
    "end": "1768440"
  },
  {
    "text": "itself you uh can use those security headers or or stuff like that but you",
    "start": "1768440",
    "end": "1773640"
  },
  {
    "text": "have to implement some kind of verification yourself there's a lot of ways to do that you could have some kind",
    "start": "1773640",
    "end": "1780000"
  },
  {
    "text": "of uh endpoint first that returns a unique URL with Dynamic URLs uh for each",
    "start": "1780000",
    "end": "1787120"
  },
  {
    "text": "client so that there's some kind of uu ID in there and another interesting",
    "start": "1787120",
    "end": "1792360"
  },
  {
    "text": "thing is that the Event Source interface in the browser it doesn't let you specify any headers so it will Al always",
    "start": "1792360",
    "end": "1799039"
  },
  {
    "text": "be a normal get request so you can use stuff like cookies but you can't specify",
    "start": "1799039",
    "end": "1804360"
  },
  {
    "text": "jwt's in the in header for example so that's uh a bit of an interesting uh",
    "start": "1804360",
    "end": "1810919"
  },
  {
    "text": "limitation that I want to learn more about is what I feel uh so at this point going back to",
    "start": "1810919",
    "end": "1817519"
  },
  {
    "text": "the app that we saw in the beginning and I'm pretty sure I lost internet right now so if you wanted to do more",
    "start": "1817519",
    "end": "1824080"
  },
  {
    "text": "destructive damage then we're going to have to do that next time uh but this this app that you just saw what it did",
    "start": "1824080",
    "end": "1830399"
  },
  {
    "text": "was it allowed you to send uh emojis to a server and those emojis were being",
    "start": "1830399",
    "end": "1835960"
  },
  {
    "text": "sent back to all the clients that were connected and they were also being displayed on screen and uh the",
    "start": "1835960",
    "end": "1841919"
  },
  {
    "text": "implementation is this this is the server implementation so it has uh a get",
    "start": "1841919",
    "end": "1847799"
  },
  {
    "text": "end point that lets you subscribe to the events where I do exactly the same as for the introduction to event stream I",
    "start": "1847799",
    "end": "1855639"
  },
  {
    "text": "write the headers I write the status code and I flush them I put the client in a list and then uh every time you",
    "start": "1855639",
    "end": "1863600"
  },
  {
    "text": "want to send a message every time someone else sends a message you just Loop through that array of connections",
    "start": "1863600",
    "end": "1869519"
  },
  {
    "text": "and you construct one of these ID event data uh containers to send and uh the",
    "start": "1869519",
    "end": "1876559"
  },
  {
    "text": "interesting thing is that since you have the event name you can send arbitrary event events this way you don't have to",
    "start": "1876559",
    "end": "1883200"
  },
  {
    "text": "send only one type and uh because of the way the Event Source interface works in",
    "start": "1883200",
    "end": "1889279"
  },
  {
    "text": "the browser you can specify the name of the event when you add an event listener",
    "start": "1889279",
    "end": "1894480"
  },
  {
    "text": "and you'll get out of the box custom functions for each type of event so uh",
    "start": "1894480",
    "end": "1899919"
  },
  {
    "text": "the chat application it has uh three different kinds of events it has a ping event just to keep the clients uh",
    "start": "1899919",
    "end": "1907240"
  },
  {
    "text": "connected uh and it has a new message event whenever a new message comes in",
    "start": "1907240",
    "end": "1912799"
  },
  {
    "text": "and it has a a new person connected event so that every time someone connects it can update the counter at",
    "start": "1912799",
    "end": "1918760"
  },
  {
    "text": "the top uh so yeah and uh other than that it uses the document object model directly",
    "start": "1918760",
    "end": "1926080"
  },
  {
    "text": "just to add a new div uh whenever something happens so no Frameworks at",
    "start": "1926080",
    "end": "1931480"
  },
  {
    "text": "all uh and uh when it comes to what you can use real time stuff for and this is",
    "start": "1931480",
    "end": "1938000"
  },
  {
    "text": "kind of my whole idea is that uh if you can make this simpler if it's easier to",
    "start": "1938000",
    "end": "1943200"
  },
  {
    "text": "implement Real Time stuff that means there's basically no limit to what you can do so I don't know how many of you",
    "start": "1943200",
    "end": "1948639"
  },
  {
    "text": "do host Eurovision parties but they're usually a big hit at my house and we do them every year and we also have our own",
    "start": "1948639",
    "end": "1955880"
  },
  {
    "text": "custom voting app but the thing with Eurovision is that there are a lot of songs every every show uh so you kind of",
    "start": "1955880",
    "end": "1963440"
  },
  {
    "text": "want this to move quickly but you don't want your guest to be on the phone their whole time so uh with Event Source and",
    "start": "1963440",
    "end": "1969600"
  },
  {
    "text": "with this event stream I made a way to to go to the next song from from my",
    "start": "1969600",
    "end": "1974639"
  },
  {
    "text": "phone and then whenever someone else open their phone the page would be switched for them automatically without",
    "start": "1974639",
    "end": "1981159"
  },
  {
    "text": "using a native app just with a normal browser so it kind of shows that uh you don't necessarily need to use Real Time",
    "start": "1981159",
    "end": "1988200"
  },
  {
    "text": "Communication to transmit a lot of data but you can use it to give uh uh to make",
    "start": "1988200",
    "end": "1994080"
  },
  {
    "text": "it feeling instantaneous and make it feel a bit of a different experience",
    "start": "1994080",
    "end": "1999480"
  },
  {
    "text": "because it's always cool when things kind of happen just by themselves and when someone else does",
    "start": "1999480",
    "end": "2006519"
  },
  {
    "text": "things uh so um that was a bit about how all of this works uh but uh I thought it",
    "start": "2006519",
    "end": "2013080"
  },
  {
    "text": "could be interesting to kind of dive a bit into uh a lot of the commonly used Frameworks for doing real time and kind",
    "start": "2013080",
    "end": "2019799"
  },
  {
    "text": "of look into what they actually do under the hood because uh this is what I find so interesting about learning how a",
    "start": "2019799",
    "end": "2026320"
  },
  {
    "text": "protocol actually works is seeing how we use it from dayto day because most people don't implement this from the",
    "start": "2026320",
    "end": "2032639"
  },
  {
    "text": "ground up so this is a a library called socket IO and put all of the their inner",
    "start": "2032639",
    "end": "2039840"
  },
  {
    "text": "workings in a different Library called engine IO which kind of does the heavy lifting and here we can see that it will",
    "start": "2039840",
    "end": "2046919"
  },
  {
    "text": "try to upgrade uh the connection that you're currently using so if you use",
    "start": "2046919",
    "end": "2052398"
  },
  {
    "text": "socket iio you can kind of give it you need a socket iio server and you need a socket.io client and you point it there",
    "start": "2052399",
    "end": "2059878"
  },
  {
    "text": "and uh uh and it it will kind of try out to see how far it can upgrade you it",
    "start": "2059879",
    "end": "2065320"
  },
  {
    "text": "will start with something simple like pulling or long polling and then it will see are you able to run event stream in",
    "start": "2065320",
    "end": "2072480"
  },
  {
    "text": "your infrastructure setup are you able to run web sockets and then it will upgrade you and uh uh the transports",
    "start": "2072480",
    "end": "2079079"
  },
  {
    "text": "directory is collapsed right there but if you open it you can see a different file for each technique that we've been",
    "start": "2079079",
    "end": "2085638"
  },
  {
    "text": "through and if we continue a bit uh this was actually in relation to someone I spoke to earlier at this conference and",
    "start": "2085639",
    "end": "2093240"
  },
  {
    "text": "they were using um using Firebase and they were like yeah we're using Firebase websockets and I'm like hm that is",
    "start": "2093240",
    "end": "2100160"
  },
  {
    "text": "interesting how does that work so I tried to figure out how that works and the internet was very quiet about how",
    "start": "2100160",
    "end": "2107320"
  },
  {
    "text": "this works I think some kind of Firebase employee went and said that this is proprietary we don't we don't share this",
    "start": "2107320",
    "end": "2113880"
  },
  {
    "text": "but you can look at this uh this uh Java framework is is actually",
    "start": "2113880",
    "end": "2119359"
  },
  {
    "text": "JavaScript and to get an idea of how it works and there we see that it actually has a relationship to different kind of",
    "start": "2119359",
    "end": "2126680"
  },
  {
    "text": "real-time protocol it it will try web socket first it kind of looks like and then it will try moving over to Long",
    "start": "2126680",
    "end": "2133280"
  },
  {
    "text": "polling and I'm sure since web socket is such a pure implementation it's only",
    "start": "2133280",
    "end": "2139119"
  },
  {
    "text": "like a step above TCP so you can send anything uh then they probably made",
    "start": "2139119",
    "end": "2145119"
  },
  {
    "text": "their own format on top of this which which runs over this tunnel so that's pretty cool uh the next one since this",
    "start": "2145119",
    "end": "2152599"
  },
  {
    "text": "is a net Conference of course we have to look at some net this is signal R and I",
    "start": "2152599",
    "end": "2157680"
  },
  {
    "text": "I think uh I think I was at a talk yesterday where someone was using signal R oh it was a robot arm uh if you",
    "start": "2157680",
    "end": "2164839"
  },
  {
    "text": "haven't seen that one yet you should uh you should go see it on YouTube when it comes out that was super cool uh so a",
    "start": "2164839",
    "end": "2171400"
  },
  {
    "text": "signal R is kind of like socket iio is a framework for doing real time but making",
    "start": "2171400",
    "end": "2176720"
  },
  {
    "text": "it a bit more technique agnostic and uh we see it it kind of",
    "start": "2176720",
    "end": "2182680"
  },
  {
    "text": "looks like it's doing the same thing as socket iio I was really searching to find the kind of upgrade uh mentality uh",
    "start": "2182680",
    "end": "2190359"
  },
  {
    "text": "but I couldn't find it so uh I guess I have to look more deeper next time but we can see that it has uh implementation",
    "start": "2190359",
    "end": "2198520"
  },
  {
    "text": "files for all of the different techniques and at this point SS for example so I'm sure that if you use",
    "start": "2198520",
    "end": "2204800"
  },
  {
    "text": "signal R and your infrastructure doesn't support websocket then signal R also will fall back uh fall back to that",
    "start": "2204800",
    "end": "2213200"
  },
  {
    "text": "technique uh which is also cool and here you see they've actually implemented their own way to parse this text that we",
    "start": "2213200",
    "end": "2219880"
  },
  {
    "text": "just saw where you see data colon and trim so which is pretty cool always cool",
    "start": "2219880",
    "end": "2225880"
  },
  {
    "text": "to see how how the the things that actually happen further down in the stack actually uh that we used them and",
    "start": "2225880",
    "end": "2232560"
  },
  {
    "text": "often without thinking about it so yeah and uh I think we're nearing",
    "start": "2232560",
    "end": "2238359"
  },
  {
    "text": "the end for me uh I used a lot of resources uh when building this and uh I looked a lot into the",
    "start": "2238359",
    "end": "2244960"
  },
  {
    "text": "history and this blog post from website so.org was very helpful uh but didn't",
    "start": "2244960",
    "end": "2250920"
  },
  {
    "text": "really give me insight into why nobody's talking about this I feel like uh it",
    "start": "2250920",
    "end": "2256359"
  },
  {
    "text": "maybe be because we have so many cool Frameworks now that lets us do all these kinds of realtime stuff uh under the",
    "start": "2256359",
    "end": "2262720"
  },
  {
    "text": "hood and choose the best protocol that there is but I still think that having a relationship to what actually happens",
    "start": "2262720",
    "end": "2269920"
  },
  {
    "text": "will make you a better developer because uh then you could spend shorter time in",
    "start": "2269920",
    "end": "2275359"
  },
  {
    "text": "implementing the real time if if you only use event stream or if you know that you have an htdp setup then you",
    "start": "2275359",
    "end": "2282480"
  },
  {
    "text": "know that you can jump straight onto uh straight onto event stream or if you do",
    "start": "2282480",
    "end": "2287760"
  },
  {
    "text": "transmit a lot of data up then you know that websocket is probably what you need",
    "start": "2287760",
    "end": "2292880"
  },
  {
    "text": "and I know one of the stands at the show floor actually has this game that you can control from your phone and uh I'm",
    "start": "2292880",
    "end": "2299680"
  },
  {
    "text": "pretty sure that they use websocket uh because that moved very quickly so that was very cool go try",
    "start": "2299680",
    "end": "2306160"
  },
  {
    "text": "that game uh another a lot of resources I used came from this company so I kind of felt like",
    "start": "2306160",
    "end": "2312839"
  },
  {
    "text": "I had to do a shout out to them uh I think they make some kind of realtime server thing so go check them out they",
    "start": "2312839",
    "end": "2320040"
  },
  {
    "text": "produce a lot of good articles and uh I think now we're getting near to the end",
    "start": "2320040",
    "end": "2327079"
  },
  {
    "text": "and uh if there are any questions please feel free to come with them and I'm going to see if um uh",
    "start": "2327079",
    "end": "2333520"
  },
  {
    "text": "because I mean this is Norway so nobody wants to ask questions but uh if if I",
    "start": "2333520",
    "end": "2339800"
  },
  {
    "text": "can get this to refresh then maybe we have slido and I still think we're doing a",
    "start": "2339800",
    "end": "2346040"
  },
  {
    "text": "bit good on time so we have some time for",
    "start": "2346040",
    "end": "2350440"
  },
  {
    "text": "questions and if anyone raises their hands they'll try to see you oh there's a question",
    "start": "2355680",
    "end": "2365240"
  },
  {
    "text": "is a com yeah you said was father internet yeah I think",
    "start": "2367839",
    "end": "2375640"
  },
  {
    "text": "that's a little disrespect for the other people because his inventor",
    "start": "2375640",
    "end": "2381560"
  },
  {
    "text": "of web not yes that is a very good point so",
    "start": "2381560",
    "end": "2386680"
  },
  {
    "text": "what you said was it was a bit disrespectful to other people to say that Tim berners Lee was the inventor of",
    "start": "2386680",
    "end": "2391960"
  },
  {
    "text": "the internet and I totally agree there's probably a lot of people uh making the internet possible but he kind of I guess",
    "start": "2391960",
    "end": "2399240"
  },
  {
    "text": "he gave us the starting ideas to kind of move in that direction on the",
    "start": "2399240",
    "end": "2406040"
  },
  {
    "text": "web yes so on the web not the internet cool Hello",
    "start": "2406040",
    "end": "2414040"
  },
  {
    "text": "World so you're using signal R for sending system notifications to the user",
    "start": "2416400",
    "end": "2422640"
  },
  {
    "text": "any thoughts um uh I think uh that using one of those",
    "start": "2422640",
    "end": "2428560"
  },
  {
    "text": "Frameworks is actually pretty good because you don't have to worry about the implementation but if you I guess if",
    "start": "2428560",
    "end": "2434359"
  },
  {
    "text": "you want to take more control and kind of move away from using all those Frameworks which there are some",
    "start": "2434359",
    "end": "2440280"
  },
  {
    "text": "arguments for doing that for example sustainability where uh if you have less",
    "start": "2440280",
    "end": "2445680"
  },
  {
    "text": "code running you kind of spend less power doing stuff and if you know that your infrastructure can take http2 for",
    "start": "2445680",
    "end": "2452839"
  },
  {
    "text": "example there's no reason for switching to Event Source when you only send data one",
    "start": "2452839",
    "end": "2458720"
  },
  {
    "text": "way and I have to uh go next there we",
    "start": "2458720",
    "end": "2465680"
  },
  {
    "text": "go so we did that one hello",
    "start": "2467560",
    "end": "2472359"
  },
  {
    "text": "NC is Event Source a standard of the web or an emergent property of a web",
    "start": "2474920",
    "end": "2481760"
  },
  {
    "text": "Technologies I'm not sure if I understand what an emergent property of web Technologies means but uh Event",
    "start": "2481760",
    "end": "2489720"
  },
  {
    "text": "Source is kind of it's the JavaScript uh interface that we have in the browser to",
    "start": "2489720",
    "end": "2495160"
  },
  {
    "text": "parse uh this this way of sending an event stream and it's very standard in",
    "start": "2495160",
    "end": "2501560"
  },
  {
    "text": "the browser so all the browsers have support for this even the most obscure ones and I think I looked at caniuse.com",
    "start": "2501560",
    "end": "2508920"
  },
  {
    "text": "before this and there was nothing holding you back from using this very well",
    "start": "2508920",
    "end": "2514599"
  },
  {
    "text": "supported uh so yeah it's",
    "start": "2514599",
    "end": "2521359"
  },
  {
    "text": "good how can websockets be used in a distributed system oh my God you're",
    "start": "2521359",
    "end": "2527079"
  },
  {
    "text": "really putting me on the spot uh yeah uh websockets when it comes to distribution",
    "start": "2527079",
    "end": "2532680"
  },
  {
    "text": "is I think a subject for a whole different talk by itself because um you",
    "start": "2532680",
    "end": "2539040"
  },
  {
    "text": "can uh host it on different servers and you can have proxies in front and kind",
    "start": "2539040",
    "end": "2544240"
  },
  {
    "text": "of make sure the hand shaking works perfectly to kind of move you over but",
    "start": "2544240",
    "end": "2549960"
  },
  {
    "text": "uh there's a lot of gotchas I think that you need to think about",
    "start": "2549960",
    "end": "2555720"
  },
  {
    "text": "um and other I also think that authentication at that point becomes",
    "start": "2555720",
    "end": "2561280"
  },
  {
    "text": "something you should make sure you have uh so and there probably a lot of",
    "start": "2561280",
    "end": "2567079"
  },
  {
    "text": "companies that have good solutions for this but um I think I don't have the details for it but it's possible but",
    "start": "2567079",
    "end": "2574119"
  },
  {
    "text": "it's tedious because you have to keep those connections open and you have to distribute them out and make sure that",
    "start": "2574119",
    "end": "2579319"
  },
  {
    "text": "you don't do everything from the same servers",
    "start": "2579319",
    "end": "2586079"
  },
  {
    "text": "good can you do normal HTTP requests uh the whole event source connection is",
    "start": "2586079",
    "end": "2592000"
  },
  {
    "text": "open for you to wake a communication yes and that is very interesting actually uh",
    "start": "2592000",
    "end": "2597800"
  },
  {
    "text": "uh because back in HTTP 1.1 uh uh um you whenever you did that",
    "start": "2597800",
    "end": "2604400"
  },
  {
    "text": "you would open another TCP connection with with its own separate HTTP flow uh",
    "start": "2604400",
    "end": "2610160"
  },
  {
    "text": "but in http2 what happens under the hood is that it will actually reuse the connection for you uh completely",
    "start": "2610160",
    "end": "2617760"
  },
  {
    "text": "automatically uh and um uh which uh makes it very efficient",
    "start": "2617760",
    "end": "2624200"
  },
  {
    "text": "and has actually led to some people saying that http2 could be kind of the killer of the web socket and I'm not",
    "start": "2624200",
    "end": "2632040"
  },
  {
    "text": "sure if that's going to happen because the web socket gives you so much uh flexibility in defining your own",
    "start": "2632040",
    "end": "2637480"
  },
  {
    "text": "protocol but when it comes to efficiency uh HTTP give give HTTP 2 gives you this",
    "start": "2637480",
    "end": "2643960"
  },
  {
    "text": "multiplexed connection that lets you send data up and down so it makes it very uh",
    "start": "2643960",
    "end": "2650119"
  },
  {
    "text": "efficient uh for two-way communication yes so the the way that you then make",
    "start": "2650119",
    "end": "2655319"
  },
  {
    "text": "the two-way connection is that uh you open the event stream to get data down and then you do H CDP requests on the",
    "start": "2655319",
    "end": "2662079"
  },
  {
    "text": "side normal ones that you do normal posts and they will just magically be more efficient",
    "start": "2662079",
    "end": "2667599"
  },
  {
    "text": "but make sure that you check your network column so that you know it's http2 because if it's 1.1 then uh then",
    "start": "2667599",
    "end": "2674359"
  },
  {
    "text": "it's a whole different story [Music]",
    "start": "2674359",
    "end": "2680160"
  },
  {
    "text": "okay any big differences in stability between websockets and",
    "start": "2680160",
    "end": "2686200"
  },
  {
    "text": "ssse I'm not really sure about that so I think you're going to have to ask me",
    "start": "2686200",
    "end": "2691559"
  },
  {
    "text": "later and then I'm going to think about it first uh",
    "start": "2691559",
    "end": "2698480"
  },
  {
    "text": "water ball at Tito every stand is using web socket yes uh so they use signal",
    "start": "2698480",
    "end": "2704440"
  },
  {
    "text": "that was the game I was talking about by the way where you control the ball from your phone uh so would Event Source",
    "start": "2704440",
    "end": "2710960"
  },
  {
    "text": "enable us to go through a web proxy yes it would uh but it also means that you",
    "start": "2710960",
    "end": "2716760"
  },
  {
    "text": "have to make sure that you push the data uh in separate requests while you have",
    "start": "2716760",
    "end": "2722200"
  },
  {
    "text": "this connection open and I think actually from your setup since you push so much data you push data every time",
    "start": "2722200",
    "end": "2728960"
  },
  {
    "text": "you actually flick your phone uh it might be that websockets is actually the best way to do it for you but I would",
    "start": "2728960",
    "end": "2735000"
  },
  {
    "text": "definitely try it out with HTTP 2 and kind of push requests often and see if there's a big difference in performance",
    "start": "2735000",
    "end": "2741559"
  },
  {
    "text": "because that would be very interesting good so are we still good on",
    "start": "2741559",
    "end": "2748400"
  },
  {
    "text": "time yeah I think so how do would you persist data for example in your voting",
    "start": "2748400",
    "end": "2754720"
  },
  {
    "text": "app uh yes so in the Eurovision voting app uh the API will persist the data in",
    "start": "2754720",
    "end": "2761960"
  },
  {
    "text": "a database in a normal way and that's kind of the big Pro by by not working",
    "start": "2761960",
    "end": "2768319"
  },
  {
    "text": "outside of HTTP well I guess it it doesn't really matter if you use some",
    "start": "2768319",
    "end": "2774079"
  },
  {
    "text": "kind of database that you store data in you have transactions and it doesn't matter if you have websockets at all so",
    "start": "2774079",
    "end": "2779880"
  },
  {
    "text": "long as you adhere to your transactions and make sure that everyone else does it as well of course I think it becomes a",
    "start": "2779880",
    "end": "2786000"
  },
  {
    "text": "different topic if you distribute but then um You probably use different services to make sure that distribution",
    "start": "2786000",
    "end": "2792720"
  },
  {
    "text": "works like it add this or or something like",
    "start": "2792720",
    "end": "2797000"
  },
  {
    "text": "that so yeah is it possible to use Event Source with Asher native services like",
    "start": "2797800",
    "end": "2803280"
  },
  {
    "text": "message bus uh I don't really know actually I've never used that on Asher so uh if",
    "start": "2803280",
    "end": "2810880"
  },
  {
    "text": "someone knows that uh we can talk about it later uh and and um have I explored the",
    "start": "2810880",
    "end": "2819400"
  },
  {
    "text": "push API in this context and the push API if if uh uh if I get what I think",
    "start": "2819400",
    "end": "2826559"
  },
  {
    "text": "you're getting at uh I read some about it and the push API I think it was a new",
    "start": "2826559",
    "end": "2831760"
  },
  {
    "text": "feature of http2 and it's meant to to push uh static files to you in the",
    "start": "2831760",
    "end": "2838920"
  },
  {
    "text": "background and it's not really meant for this sort of streaming of data or realtime communication so I think it's",
    "start": "2838920",
    "end": "2846319"
  },
  {
    "text": "meant for something else but it might also be that I misunderstood your question but uh ah cool more",
    "start": "2846319",
    "end": "2855079"
  },
  {
    "text": "questions uh have you needed some kind of preventions in your code for avoiding",
    "start": "2855079",
    "end": "2860440"
  },
  {
    "text": "duplicates and similar problems in your voting app that is such a good question thank you for asking that because I",
    "start": "2860440",
    "end": "2866640"
  },
  {
    "text": "forget everything uh so another Pro with the Event Source interface in your browser is that uh you remember the IDS",
    "start": "2866640",
    "end": "2874880"
  },
  {
    "text": "that you saw in the event stream format you had the ID you had the event and you had the data the ID is supposed to",
    "start": "2874880",
    "end": "2881520"
  },
  {
    "text": "identify that event and if you send it again then the browser will actually remember that you have handled this",
    "start": "2881520",
    "end": "2887960"
  },
  {
    "text": "event before and it will make sure that your listener isn't called again which gives you um which basically fixes this",
    "start": "2887960",
    "end": "2894599"
  },
  {
    "text": "for you uh exactly for my voting app it was not a problem because I used it more",
    "start": "2894599",
    "end": "2899680"
  },
  {
    "text": "for for timing and getting stuff to happen so we didn't uh use that much data that way we never actually trans",
    "start": "2899680",
    "end": "2907079"
  },
  {
    "text": "the voting information we just pull that down in normal get requests uh but of course we could have sent it uh with",
    "start": "2907079",
    "end": "2915400"
  },
  {
    "text": "um uh with the event stream okay so how will HTTP CH HTTP 3 change the picture",
    "start": "2915400",
    "end": "2924960"
  },
  {
    "text": "and uh about realtime techniques and that's also a very interesting question because uh if we go back to http 1.1 we",
    "start": "2924960",
    "end": "2932920"
  },
  {
    "text": "remember it was um uh uh it it was a bit poor when when it comes to event stream",
    "start": "2932920",
    "end": "2938200"
  },
  {
    "text": "you had uh the maximum connections of T of six open connections and then you had",
    "start": "2938200",
    "end": "2944200"
  },
  {
    "text": "http2 which did a lot of stuff under the hood to make it more efficient to use connections with HTTP 3 the major thing",
    "start": "2944200",
    "end": "2952559"
  },
  {
    "text": "that happened there was that we switched out the underlying protocol of",
    "start": "2952559",
    "end": "2957599"
  },
  {
    "text": "everything because in the network layer all the previous HTTP versions use something called TCP which uh uh on the",
    "start": "2957599",
    "end": "2965200"
  },
  {
    "text": "network level is you esta publish a handshake and then you have a connection and then you transfer data and this all",
    "start": "2965200",
    "end": "2970799"
  },
  {
    "text": "happens below HTTP in the stack but in HTTP 3 uh uh at least the proposal is",
    "start": "2970799",
    "end": "2977720"
  },
  {
    "text": "I'm not really sure where HTTP 3 is on distribution or usage yet uh but we",
    "start": "2977720",
    "end": "2983160"
  },
  {
    "text": "switched it to be something called quip I think and someone correct me if it's",
    "start": "2983160",
    "end": "2988240"
  },
  {
    "text": "if it's wrong but it's a a protocol I think designed by Google that is based on on more of the UDP way of doing it if",
    "start": "2988240",
    "end": "2996920"
  },
  {
    "text": "you know your network that means basically that you you send information out but uh different from TCP is that",
    "start": "2996920",
    "end": "3004559"
  },
  {
    "text": "you don't really care about the data being received so with TCP it's a",
    "start": "3004559",
    "end": "3010160"
  },
  {
    "text": "synchronous thing so I create a connection with you and then I send you data but with UDP you just throw it out",
    "start": "3010160",
    "end": "3016799"
  },
  {
    "text": "and then you hope someone catches it and that's kind of the basis of uh uh and I",
    "start": "3016799",
    "end": "3021920"
  },
  {
    "text": "don't know the details about quit but it uses kind of the same idea I think",
    "start": "3021920",
    "end": "3027160"
  },
  {
    "text": "and uh uh the interesting thing about HTTP HTTP 3 is that it has something",
    "start": "3027160",
    "end": "3034799"
  },
  {
    "text": "completely new uh and I found it I think I added a picture of",
    "start": "3034799",
    "end": "3040760"
  },
  {
    "text": "it didn't I no I forgot uh okay but",
    "start": "3040760",
    "end": "3046119"
  },
  {
    "text": "there's another thing that you can use that's supposed to be even better than websockets and uh it it was uh I think",
    "start": "3046119",
    "end": "3053400"
  },
  {
    "text": "it was called data flow or something which is uh uh a protocol that you can",
    "start": "3053400",
    "end": "3059359"
  },
  {
    "text": "use on top of HTTP 3 which is supposed to be more integrated in your browser and even more stable so uh definitely",
    "start": "3059359",
    "end": "3067240"
  },
  {
    "text": "have a look at that and uh I think uh that's it for me uh today and I was",
    "start": "3067240",
    "end": "3074000"
  },
  {
    "text": "supposed to say one more thing yes one more thing is thank you all for going down this Rabbit Hole of realtime",
    "start": "3074000",
    "end": "3079799"
  },
  {
    "text": "Technologies with me uh I at least think it's super interesting to kind of dive down and figure out how do stuff",
    "start": "3079799",
    "end": "3086000"
  },
  {
    "text": "actually work and I remember I talked to someone on the show floor yesterday and they were like yeah it's so tedious now",
    "start": "3086000",
    "end": "3093000"
  },
  {
    "text": "when we ship desktop applications we basically ship a whole browser and I kind of feel the same that uh maybe if",
    "start": "3093000",
    "end": "3099520"
  },
  {
    "text": "we took more care and kind of avoided using so many Frameworks maybe we could be a bit more efficient and everything",
    "start": "3099520",
    "end": "3105720"
  },
  {
    "text": "would be more a bit more quick and all that so yeah uh hit me up on masteron if",
    "start": "3105720",
    "end": "3111359"
  },
  {
    "text": "you want to point out everything I did wrong it's probably a whole bunch of things uh and end if you have things to",
    "start": "3111359",
    "end": "3117720"
  },
  {
    "text": "tell me about these Technologies and uh from there thank you so much",
    "start": "3117720",
    "end": "3125319"
  }
]