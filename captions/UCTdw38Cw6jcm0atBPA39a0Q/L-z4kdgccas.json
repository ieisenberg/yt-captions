[
  {
    "text": "okay good morning everyone how are we",
    "start": "3870",
    "end": "9389"
  },
  {
    "text": "good good to hear looks like we've just got a few more people coming in but I'll I'll get",
    "start": "9389",
    "end": "15429"
  },
  {
    "text": "started my name is Jim Pelletier I'm a software developer from Melbourne",
    "start": "15429",
    "end": "20920"
  },
  {
    "text": "Australia it's really exciting to be over here for me I've been a software developer for about",
    "start": "20920",
    "end": "27939"
  },
  {
    "text": "ten years or so in in Melbourne all that time mainly working in the web development space c-sharp mainly we",
    "start": "27939",
    "end": "35710"
  },
  {
    "text": "obviously JavaScript and that sort of thing on the front end a lot of that time I've spent working with teams and a",
    "start": "35710",
    "end": "41080"
  },
  {
    "text": "lot of that time I've spent working with sometimes new stuff but a lot of legacy code as well so today I'm gonna talk",
    "start": "41080",
    "end": "47440"
  },
  {
    "text": "about a tool called end append that I've used recently to do some static analysis on legacy code and how that helped a",
    "start": "47440",
    "end": "54250"
  },
  {
    "text": "team I was working with lately I've got about pretty close to an hour's worth of",
    "start": "54250",
    "end": "60159"
  },
  {
    "text": "content today so there's not gonna be a lot of time for questions at the end maybe only five minutes or so that being",
    "start": "60159",
    "end": "65680"
  },
  {
    "text": "said there are a lot of lulls in the talk where I'm going to be doing live demos I'm more than happy if you want to",
    "start": "65680",
    "end": "71560"
  },
  {
    "text": "raise your hand if I don't see you yell out and to top stop and take questions along the way I'm also going to try very",
    "start": "71560",
    "end": "77320"
  },
  {
    "text": "hard to not get carried away and let my Australian accent take over too much so hopefully you can all understand me",
    "start": "77320",
    "end": "83710"
  },
  {
    "text": "again if there's times that are hard to understand me I'm more than happy to have someone asked me to repeat what",
    "start": "83710",
    "end": "90340"
  },
  {
    "text": "I've said so what we're gonna go through",
    "start": "90340",
    "end": "96220"
  },
  {
    "text": "today is I'm going to talk a little bit about how over my career I kept coming",
    "start": "96220",
    "end": "102850"
  },
  {
    "text": "back to trying to use end append and what it was that that I was trying to do with it a little bit of a quick tour",
    "start": "102850",
    "end": "110320"
  },
  {
    "text": "around the tool itself just to give you a brief familiarity with the tool who's",
    "start": "110320",
    "end": "116830"
  },
  {
    "text": "actually used in independent before okay so maybe the little less than half so",
    "start": "116830",
    "end": "122920"
  },
  {
    "text": "very good just to give everyone a brief overview of what the tool can do then",
    "start": "122920",
    "end": "128080"
  },
  {
    "text": "I'm gonna talk to you about a specific problem that I was solving with the team recently where we had a big mess of code",
    "start": "128080",
    "end": "134440"
  },
  {
    "text": "that we inherited that we needed improve and how we use the tool specifically to do that so just talking",
    "start": "134440",
    "end": "145930"
  },
  {
    "text": "about how independent kept coming into my life I guess over the years I've always tried to work on greenfield",
    "start": "145930",
    "end": "152380"
  },
  {
    "text": "projects when I was especially when I was younger it was something I was really excited about because these are the projects where we can choose new",
    "start": "152380",
    "end": "160360"
  },
  {
    "text": "tools technologies and techniques that allow us to build features faster and",
    "start": "160360",
    "end": "166660"
  },
  {
    "text": "you know build a lot of value while also maintaining the ability to change quickly as we discover new things about",
    "start": "166660",
    "end": "172600"
  },
  {
    "text": "our users and the requirements and and how we want to build things and that kind of stuff and it's just sometimes I",
    "start": "172600",
    "end": "178570"
  },
  {
    "text": "found a little bit more fun but over time I've come to realize that while the",
    "start": "178570",
    "end": "185050"
  },
  {
    "text": "greenfield projects and choosing all the latest tools and technologies are great",
    "start": "185050",
    "end": "190260"
  },
  {
    "text": "legacy code bases are always there you know they're usually the code that is",
    "start": "190680",
    "end": "196090"
  },
  {
    "text": "actually generating most of the revenue for the business or providing most of the value at the time so even if you're building the next big thing that",
    "start": "196090",
    "end": "202390"
  },
  {
    "text": "projects being paid for by a legacy code base that's making money now so not only",
    "start": "202390",
    "end": "209890"
  },
  {
    "text": "are these really important pieces of code but you often need to understand them very well in order to either",
    "start": "209890",
    "end": "215050"
  },
  {
    "text": "replace them or pull them apart or improve them so I think what I've learned over time is that it's really",
    "start": "215050",
    "end": "221019"
  },
  {
    "text": "important to respect the legacy code and also understand not only how to build",
    "start": "221019",
    "end": "226570"
  },
  {
    "text": "new and better software but how to improve and protect the code that we have so this is where our independence",
    "start": "226570",
    "end": "232959"
  },
  {
    "text": "basically at a really high level and depending is a tool that you can use to query your codebase it's a tool that I'm",
    "start": "232959",
    "end": "243040"
  },
  {
    "text": "only new for its ability to write rules around code that tell you when someone's",
    "start": "243040",
    "end": "249040"
  },
  {
    "text": "doing something wrong or when someone's checked in some code that breaks a rule it's been around for a really long time",
    "start": "249040",
    "end": "254049"
  },
  {
    "text": "and it's something that instead of my ten twelve year career I can't remember a time when we sort of would get",
    "start": "254049",
    "end": "260410"
  },
  {
    "text": "frustrated and someone wouldn't say hey try and depend",
    "start": "260410",
    "end": "264930"
  },
  {
    "text": "I suppose what generally would happen is a codebase tends to grow right someone",
    "start": "266500",
    "end": "273970"
  },
  {
    "text": "writes in code puts it into production and then someone adds another feature and adds another feature and then repurpose is another",
    "start": "273970",
    "end": "279760"
  },
  {
    "text": "feature and it slowly grows and grows and slowly tangles up add time to that",
    "start": "279760",
    "end": "285820"
  },
  {
    "text": "equation of not just the code growing but people moving on teams naturally churning new techniques and tools coming",
    "start": "285820",
    "end": "293200"
  },
  {
    "text": "into play and what often would happen is a new group of developers would find themselves dealing with a code base that",
    "start": "293200",
    "end": "298270"
  },
  {
    "text": "someone else has written when different techniques were in vogue when different",
    "start": "298270",
    "end": "304510"
  },
  {
    "text": "decisions were made and for reasons that no one knows anymore and this is when people sort of start to you know to",
    "start": "304510",
    "end": "311770"
  },
  {
    "text": "frown a lot more and start to what go why did they do it this way and and make",
    "start": "311770",
    "end": "316810"
  },
  {
    "text": "it really hard to understand this is where the despair starts to send in and set in and this is the part where",
    "start": "316810",
    "end": "322150"
  },
  {
    "text": "someone would normally go hey maybe independent art does that sound like familiar story to anyone nods so that's",
    "start": "322150",
    "end": "330820"
  },
  {
    "text": "that's the idea that an independent helped you untangle that sort of stuff what would usually happen at this point",
    "start": "330820",
    "end": "337720"
  },
  {
    "text": "is that I would download the independence trial is they haven't a 30-day trial on the website and I'd quickly become overwhelmed and depends a",
    "start": "337720",
    "end": "345130"
  },
  {
    "text": "really powerful tool there's a lot in the box especially if you download and install it and point it at your existing",
    "start": "345130",
    "end": "351280"
  },
  {
    "text": "legacy code base and it's gonna be a lot of problems there so I definitely I",
    "start": "351280",
    "end": "358300"
  },
  {
    "text": "think for the first two or three times I tried to use this tool really failed to get any value from it and succeed in",
    "start": "358300",
    "end": "364210"
  },
  {
    "text": "making any improvements so it wasn't",
    "start": "364210",
    "end": "369520"
  },
  {
    "text": "until really recently when I was working with a team who basically had a single",
    "start": "369520",
    "end": "375130"
  },
  {
    "text": "class with tens and tens of thousands of lines of code in it and basically we wanted to understand how to break that",
    "start": "375130",
    "end": "381580"
  },
  {
    "text": "up and and make that more understandable and more usable for us that combined",
    "start": "381580",
    "end": "388540"
  },
  {
    "text": "with the fact that I had to prepare for this talk where I finally sat down and read all the documentation it's been a",
    "start": "388540",
    "end": "394060"
  },
  {
    "text": "while doing that did I really start to come to understand the tool so what I'm hoping to do today is give you an overview of",
    "start": "394060",
    "end": "400180"
  },
  {
    "text": "both the knowledge that I gained by reading all the documentation so that maybe you don't have to as well as I'm gonna do a little simulation of that",
    "start": "400180",
    "end": "408130"
  },
  {
    "text": "spaghetti mess of that giant god class that we broke up as a team and show you how we went about doing that so just",
    "start": "408130",
    "end": "418090"
  },
  {
    "text": "moving briefly into a quick overview of what's inside independ as i said before",
    "start": "418090",
    "end": "425140"
  },
  {
    "text": "and as i'll show you in a minute independent its core is a tool to query",
    "start": "425140",
    "end": "431050"
  },
  {
    "text": "your code so you do things like give me all the methods that are named this so you write the queries for your code and",
    "start": "431050",
    "end": "439440"
  },
  {
    "text": "with that you can turn those crews enjoy the rules quality gates or things that",
    "start": "439440",
    "end": "446110"
  },
  {
    "text": "you train metrics that you can track over time so all of those driven by queries as such there's a number of",
    "start": "446110",
    "end": "451600"
  },
  {
    "text": "visualizations that you get with n depend which are also driven by queries so you select a number of code elements",
    "start": "451600",
    "end": "458710"
  },
  {
    "text": "of some kind and then you can view various metrics of them or see how those code elements depend on each other and",
    "start": "458710",
    "end": "465490"
  },
  {
    "text": "there's a couple of ways to view those dependencies so what I want to do say is",
    "start": "465490",
    "end": "471970"
  },
  {
    "text": "I'm going to load up an old old open source project it's sort of had some time to grow so we can show you",
    "start": "471970",
    "end": "477850"
  },
  {
    "text": "something that's that's sort of a real-world scenario so n units a unit",
    "start": "477850",
    "end": "483100"
  },
  {
    "text": "testing library that I'm sure a lot of you bit will be familiar with and I'm gonna show you a little quickly around",
    "start": "483100",
    "end": "490030"
  },
  {
    "text": "that",
    "start": "490030",
    "end": "492240"
  },
  {
    "text": "okay so I've got an unit open here and see it's got a bunch of assemblies and",
    "start": "500420",
    "end": "506740"
  },
  {
    "text": "I've got independ installed which is a Visual Studio extension so up here I",
    "start": "506740",
    "end": "512960"
  },
  {
    "text": "actually need to attach independent project to the current visual studio solution and I have to basically show it",
    "start": "512960",
    "end": "519710"
  },
  {
    "text": "the assemblies and appendix assemblies source code PDB files and a couple of",
    "start": "519710",
    "end": "525980"
  },
  {
    "text": "other things into account when it runs its analysis to do the kinds of things you're about to see so for this",
    "start": "525980",
    "end": "531350"
  },
  {
    "text": "particular sometimes you can just add it from the solution I'm actually gonna add it from the assemblies because any units",
    "start": "531350",
    "end": "536720"
  },
  {
    "text": "got a slightly different build structure",
    "start": "536720",
    "end": "543700"
  },
  {
    "text": "so it's got a binary folder in the in the source root there and I'm just going to choose the Donnie at four five one so",
    "start": "543700",
    "end": "553520"
  },
  {
    "text": "we select the assemblies and start the analysis you can see it sort of just",
    "start": "553520",
    "end": "560390"
  },
  {
    "text": "runs through like a build process in the bottom right hand corner down here and see a little progress bar and once it's",
    "start": "560390",
    "end": "570380"
  },
  {
    "text": "done we can start to have a look through",
    "start": "570380",
    "end": "576370"
  },
  {
    "text": "so it pops up a little hash tml report I'm not gonna look at that today what I'm gonna show you through is the",
    "start": "590630",
    "end": "595819"
  },
  {
    "text": "dashboard which is in Visual Studio so",
    "start": "595819",
    "end": "601880"
  },
  {
    "text": "as that loads we can basically see that when the analysis was run roughly the",
    "start": "601880",
    "end": "608990"
  },
  {
    "text": "size of code it it's uh it it analyzed what all the types are how many",
    "start": "608990",
    "end": "614630"
  },
  {
    "text": "assemblies and all that sort of stuff it's got some interesting things it's got some some ideas on how it calculates",
    "start": "614630",
    "end": "620990"
  },
  {
    "text": "debt this thing says it's got 89 man days of debt which is an interesting little metric I've not really played a",
    "start": "620990",
    "end": "627019"
  },
  {
    "text": "lot with that you might you can also see that it's got this baseline here same project so I've only done one analysis",
    "start": "627019",
    "end": "634550"
  },
  {
    "text": "on this project so far but you can do multiple analysis over time and you can see you can choose the baseline to",
    "start": "634550",
    "end": "641120"
  },
  {
    "text": "compare it to so you can start to do comparisons between what the code looks like today and what it looked like during a previous analysis but today I'm",
    "start": "641120",
    "end": "648920"
  },
  {
    "text": "just gonna show you around quickly so it's gonna click on this this is saying there's four failed quality gates if I",
    "start": "648920",
    "end": "656060"
  },
  {
    "text": "open it up all I really wanted to do was just show you that this opens the the queries and rules Explorer so this is really the heart of what independ does",
    "start": "656060",
    "end": "663470"
  },
  {
    "text": "at queries cards so if I did something like open this object-oriented design",
    "start": "663470",
    "end": "669680"
  },
  {
    "text": "and opened a query that said avoid interfaces that are too big we're gonna",
    "start": "669680",
    "end": "677000"
  },
  {
    "text": "have this over here and I might just see",
    "start": "677000",
    "end": "682490"
  },
  {
    "text": "if I can zoom in on that for you so what",
    "start": "682490",
    "end": "690620"
  },
  {
    "text": "we're looking at here and stop this moving is the heart of what independent",
    "start": "690620",
    "end": "696680"
  },
  {
    "text": "queries code right so what you're looking at is something that's very much like link in fact the syntax is exactly the same but what end event does is it",
    "start": "696680",
    "end": "702800"
  },
  {
    "text": "provides you with the object model to query over to look at your code so this is from I in types that are mine so just",
    "start": "702800",
    "end": "711050"
  },
  {
    "text": "my code type so it provides sort of that sort of thing and then you just write a linked query so there's obviously reasonably complicated query to decide",
    "start": "711050",
    "end": "718730"
  },
  {
    "text": "if a method is too interface is too big you can see there it's sort of saying where",
    "start": "718730",
    "end": "724220"
  },
  {
    "text": "the methods of more than 10 and then it creates this little object to output and",
    "start": "724220",
    "end": "730760"
  },
  {
    "text": "it comes down here and says basically I matched five types that interfaces that are too big",
    "start": "730760",
    "end": "738070"
  },
  {
    "text": "from there we turn this into a rule by just adding this little worn if",
    "start": "738340",
    "end": "744700"
  },
  {
    "text": "statement at the very top and so that rules gonna fail or or warn you if more",
    "start": "744700",
    "end": "750920"
  },
  {
    "text": "than none of these break the rule so",
    "start": "750920",
    "end": "758210"
  },
  {
    "text": "just opening these again we've got a query we define the rule by adding the warn if statement you can do things like",
    "start": "758210",
    "end": "764960"
  },
  {
    "text": "add see it says there fail if so that's gonna actually be a quality gate you can",
    "start": "764960",
    "end": "771080"
  },
  {
    "text": "use those to fail the builds and then the last kind of rule is these trend",
    "start": "771080",
    "end": "776540"
  },
  {
    "text": "metrics so let's see code size so we might have some trend that just defines",
    "start": "776540",
    "end": "785180"
  },
  {
    "text": "the sum of the number of lines of my code train metrics our difference of rules or quality gates in that they will",
    "start": "785180",
    "end": "792530"
  },
  {
    "text": "be able to be shown in these sorts of graphs down here which we don't have any lines on at the moment because I've only",
    "start": "792530",
    "end": "799670"
  },
  {
    "text": "done one analysis of this code base so",
    "start": "799670",
    "end": "805120"
  },
  {
    "text": "that's what the queries and the rules look like just moving on to some of the",
    "start": "805120",
    "end": "811010"
  },
  {
    "text": "visualizations just clicked on this number of types over here and it's",
    "start": "811010",
    "end": "816230"
  },
  {
    "text": "brought up a query that has just shown all the types so I've got almost 1500",
    "start": "816230",
    "end": "822950"
  },
  {
    "text": "types in this there's a little button here that says export to graph so",
    "start": "822950",
    "end": "832959"
  },
  {
    "text": "actually let's not do that one it's gonna be way too big let's do a number of assemblies right so nine assemblies",
    "start": "835070",
    "end": "840690"
  },
  {
    "text": "then I can export that to a graph and then that'll graph these with the dependencies between them",
    "start": "840690",
    "end": "846690"
  },
  {
    "text": "I can choose whether the size of the box is based on the number of I'll construct",
    "start": "846690",
    "end": "851720"
  },
  {
    "text": "instructions or the cyclomatic complexity where the edge thickness is dependent on the number of dependencies",
    "start": "851720",
    "end": "858330"
  },
  {
    "text": "between methods or members and that kind of thing as well so we can then do",
    "start": "858330",
    "end": "872190"
  },
  {
    "text": "things like modify this graph if you were to zoom in here I'll just get rid of this so we can see it a little better",
    "start": "872190",
    "end": "879560"
  },
  {
    "text": "you can see that one's some kind of system class that's accidentally being picked up we might not want that in",
    "start": "879560",
    "end": "885000"
  },
  {
    "text": "there so I can remove that manually you can also actually go back and edit that",
    "start": "885000",
    "end": "890220"
  },
  {
    "text": "query manually to maybe constrict constrain via the namespace that it's",
    "start": "890220",
    "end": "896430"
  },
  {
    "text": "seen or the string that the name is or something like that as well you can zoom in so right click on there and view the",
    "start": "896430",
    "end": "902640"
  },
  {
    "text": "internal dependencies of that so I've gone from the assembly level down down into the namespace level and if I go",
    "start": "902640",
    "end": "911730"
  },
  {
    "text": "even further I can go into the type level so this is the graph of the types",
    "start": "911730",
    "end": "920970"
  },
  {
    "text": "inside this project and as you can see now it starts to become a little bit useless and this is also one of the",
    "start": "920970",
    "end": "926070"
  },
  {
    "text": "hurdles I often hear when I was trying to use n depend if you try and actually look at anything of any decent size",
    "start": "926070",
    "end": "931830"
  },
  {
    "text": "these dependency graphs are a great way to ensure it if we look at it as a human but in reality the amount of information",
    "start": "931830",
    "end": "937980"
  },
  {
    "text": "you can get from this graph is quite quite low you can see some interesting things you can see this sort of tree",
    "start": "937980",
    "end": "944640"
  },
  {
    "text": "like structure going on if I highlight things you can see the way that they depend up and down so there's definitely",
    "start": "944640",
    "end": "950610"
  },
  {
    "text": "a kind of layered architecture this is what a layered architecture looks like when you do this kind of stuff with independent but like I said ultimately",
    "start": "950610",
    "end": "958620"
  },
  {
    "text": "we need something better to view these sort of large structures something that's been added since I started writing this talk is this little hint up",
    "start": "958620",
    "end": "965010"
  },
  {
    "text": "the top which is fantastic and it says basically this is too hard for you to look at try",
    "start": "965010",
    "end": "970339"
  },
  {
    "text": "using the dependency matrix instead which is really helpful until you try",
    "start": "970339",
    "end": "976579"
  },
  {
    "text": "and make sense of that to be fair",
    "start": "976579",
    "end": "982879"
  },
  {
    "text": "there's some really great guidance in the independent documentation that tells you exactly how to read this and and how",
    "start": "982879",
    "end": "988369"
  },
  {
    "text": "to read it in useful ways and I'll show you that quickly today basically what",
    "start": "988369",
    "end": "994850"
  },
  {
    "text": "you're looking at here and I won't even bother zooming in so that you can read it but across the top here what you've",
    "start": "994850",
    "end": "1000939"
  },
  {
    "text": "got is all the types inside this inside the analysis or inside the what are zoom",
    "start": "1000939",
    "end": "1006369"
  },
  {
    "text": "in on the the namespace inside this namespace right so they're all across",
    "start": "1006369",
    "end": "1011559"
  },
  {
    "text": "the top they're also repeated down the side and if there is a dot that means",
    "start": "1011559",
    "end": "1018369"
  },
  {
    "text": "that the string assert class over on the left depends on the does class on the",
    "start": "1018369",
    "end": "1025390"
  },
  {
    "text": "top and you can tell that by the fact that the arrow points from the left and",
    "start": "1025390",
    "end": "1030428"
  },
  {
    "text": "up if I was to come down here we've got",
    "start": "1030429",
    "end": "1036428"
  },
  {
    "text": "text over here you've got the same dependency but back the other way represented the other way so you tend to",
    "start": "1036429",
    "end": "1043178"
  },
  {
    "text": "get mainly symmetrical views like this along that diagonal because that's repeated in both both both dimensions so",
    "start": "1043179",
    "end": "1053140"
  },
  {
    "text": "that's what we're looking at and then that's great how do I make sense out of that well there's a couple of",
    "start": "1053140",
    "end": "1058210"
  },
  {
    "text": "interesting things we can see here the first thing we can see is these big long lines so there's big long lines are",
    "start": "1058210",
    "end": "1065620"
  },
  {
    "text": "generally going to be a problem right well it's what you see when you see a big long line like this is that almost",
    "start": "1065620",
    "end": "1071620"
  },
  {
    "text": "everything in this namespace is going to depend on this type that means any",
    "start": "1071620",
    "end": "1076720"
  },
  {
    "text": "changes to that type are likely gonna break any everything else or ever anything else in this namespace this is",
    "start": "1076720",
    "end": "1083830"
  },
  {
    "text": "an interesting case because if you actually know sorry don't do that we how do we view it oh yeah there we go",
    "start": "1083830",
    "end": "1093059"
  },
  {
    "text": "it's actually an empty class so this is probably just used for a reflection or",
    "start": "1093059",
    "end": "1098470"
  },
  {
    "text": "something like that to load things up so it's a bit a little bit of a false false positive but if this was actually doing something",
    "start": "1098470",
    "end": "1106390"
  },
  {
    "text": "meaningful it would likely be something that we might want to look at ways to refactor it the other thing to look at",
    "start": "1106390",
    "end": "1115900"
  },
  {
    "text": "on the graphs like this are groups like this this square not necessarily a hollow square this one also is very",
    "start": "1115900",
    "end": "1122440"
  },
  {
    "text": "interesting what this basically says is that everything in the borders of this",
    "start": "1122440",
    "end": "1129070"
  },
  {
    "text": "square and they're very rarely as well-defined as that but everything within those borders are dependent on",
    "start": "1129070",
    "end": "1135400"
  },
  {
    "text": "each other and especially in the case like this where all this is blacked out and there are no dependencies sort of on",
    "start": "1135400",
    "end": "1141670"
  },
  {
    "text": "the the cross the cross horizontal and vertical this is a really highly",
    "start": "1141670",
    "end": "1147880"
  },
  {
    "text": "cohesive group of types that don't depend on any other types in this namespace so I probably a candidate for removal into another one so that",
    "start": "1147880",
    "end": "1154840"
  },
  {
    "text": "dependencies don't grow between these types and other types where they shouldn't this one's a little less clear",
    "start": "1154840",
    "end": "1160780"
  },
  {
    "text": "but still you know it'd be worth looking at why that type that I've clicked on there if you follow the red line across",
    "start": "1160780",
    "end": "1168160"
  },
  {
    "text": "the left doesn't need to depend on all those other types or can we separate that somehow to make this an independent group of types so if I was to open one",
    "start": "1168160",
    "end": "1181900"
  },
  {
    "text": "of the types in this group of types here",
    "start": "1181900",
    "end": "1186330"
  },
  {
    "text": "okay and it so happens that the reason these are all dependent on each other is",
    "start": "1191660",
    "end": "1197160"
  },
  {
    "text": "they're part of a class hierarchy so if I follow this up to the top of this hierarchy so I prefer am at a data",
    "start": "1197160",
    "end": "1205230"
  },
  {
    "text": "source I can then right-click on this and open up the end append menu where I",
    "start": "1205230",
    "end": "1213180"
  },
  {
    "text": "can then select all the types that use this type directly and indirectly so again we're looking at dependencies of",
    "start": "1213180",
    "end": "1219090"
  },
  {
    "text": "this type and so if I select all of those is in query that end append will generate for me I can export those to a",
    "start": "1219090",
    "end": "1226260"
  },
  {
    "text": "graph and now what I'm looking at on this graph that's the wrong one let's",
    "start": "1226260",
    "end": "1235560"
  },
  {
    "text": "try that again sorry I just need to actually limit it",
    "start": "1235560",
    "end": "1240570"
  },
  {
    "text": "to that namespace that I was looking at before so where t dot parent namespace",
    "start": "1240570",
    "end": "1248870"
  },
  {
    "text": "no parent assembly will be easier dot",
    "start": "1249470",
    "end": "1254940"
  },
  {
    "text": "name and unit framework because I'm just",
    "start": "1254940",
    "end": "1265980"
  },
  {
    "text": "excluding all of the test assemblies and all that sort of stuff as well so that's brought it down to about 40 types so if",
    "start": "1265980",
    "end": "1272730"
  },
  {
    "text": "I cut that to a graph it's a little bit more sensible to look at and what I'm now looking at is the graft version of",
    "start": "1272730",
    "end": "1281150"
  },
  {
    "text": "this cohesive group of types and these other couple that have sort of been",
    "start": "1281150",
    "end": "1287670"
  },
  {
    "text": "pulled in here right and all of their dependencies as well so what you end up",
    "start": "1287670",
    "end": "1294630"
  },
  {
    "text": "with is this tree here this is that hierarchy that is that really clearly",
    "start": "1294630",
    "end": "1300810"
  },
  {
    "text": "defines square and you can see that just through this one dependency here it's",
    "start": "1300810",
    "end": "1307050"
  },
  {
    "text": "linked to a whole another tree of types so this would be an example of how you've I've now used the dependency",
    "start": "1307050",
    "end": "1313350"
  },
  {
    "text": "matrix and the dependency graph to get a really good understanding of the fact that you know this group of types and",
    "start": "1313350",
    "end": "1319830"
  },
  {
    "text": "this group of types are linked but only by a very small amount so maybe there's a way that I could employ some other kind of pattern or",
    "start": "1319830",
    "end": "1326070"
  },
  {
    "text": "something to break that dependency and therefore get some more flexibility in my code so those are the two main views",
    "start": "1326070",
    "end": "1335130"
  },
  {
    "text": "we're going to be using today's I go through the exercise of breaking up that code there is one other one that I have not had much use for but I will bring up",
    "start": "1335130",
    "end": "1342420"
  },
  {
    "text": "really quickly just so that you're aware of it the completeness I guess if I open",
    "start": "1342420",
    "end": "1349230"
  },
  {
    "text": "a query like this so this is just all",
    "start": "1349230",
    "end": "1355080"
  },
  {
    "text": "the assemblies that we've got analyzed at the moment and open them in what's",
    "start": "1355080",
    "end": "1360150"
  },
  {
    "text": "called this tree map this is like a heat map of all the types what you're looking",
    "start": "1360150",
    "end": "1366690"
  },
  {
    "text": "at here is a series of squares each square represents an assembly and then a",
    "start": "1366690",
    "end": "1371850"
  },
  {
    "text": "square inside that would represent a namespace and then the smallest unit of square which is down there is a method",
    "start": "1371850",
    "end": "1378180"
  },
  {
    "text": "and that's because I've got selected the method level in this box the size of the boxes is the size of the code and then",
    "start": "1378180",
    "end": "1385140"
  },
  {
    "text": "revile instructions in this instance and then the color is the cyclomatic complexity so we've sort of defined 56",
    "start": "1385140",
    "end": "1392030"
  },
  {
    "text": "and cyclomatic complexity is just a bit of a heuristic on how complex the code",
    "start": "1392030",
    "end": "1397260"
  },
  {
    "text": "is for anyone that's not familiar with it we decided 56 is red I could easily say that I don't want anything over 27 and",
    "start": "1397260",
    "end": "1404280"
  },
  {
    "text": "then that would give us things to to further investigate all right",
    "start": "1404280",
    "end": "1414889"
  },
  {
    "text": "so back to the spaghetti I've been talking about this whole time so",
    "start": "1422780",
    "end": "1431010"
  },
  {
    "text": "basically what happened to me and and my team was that we basically inherited a",
    "start": "1431010",
    "end": "1437520"
  },
  {
    "text": "bunch of code and people who wrote that code at some point were given some what",
    "start": "1437520",
    "end": "1443250"
  },
  {
    "text": "I like to do what I like to call the victims of architectural advice in that someone at some point decided to tell",
    "start": "1443250",
    "end": "1450450"
  },
  {
    "text": "them that hey you should put your code your business logic in a business layer so they did they created one class and",
    "start": "1450450",
    "end": "1456750"
  },
  {
    "text": "they called it the business and they proceeded to just sort of put all the code into that over time because that",
    "start": "1456750",
    "end": "1462090"
  },
  {
    "text": "was what they were told they should do I suppose there wasn't really much context provided so what happened is of course",
    "start": "1462090",
    "end": "1468030"
  },
  {
    "text": "that over time this class grew and grew and grew and grew not only do grow outwards in size it",
    "start": "1468030",
    "end": "1473700"
  },
  {
    "text": "sort of grew inwards as well by that I mean that you had small little methods",
    "start": "1473700",
    "end": "1479640"
  },
  {
    "text": "refactored out that didn't really make much sense the business context and you had other methods reuse parts of other",
    "start": "1479640",
    "end": "1486120"
  },
  {
    "text": "methods that really should probably shouldn't have and what happened is basically it just became very hard to to",
    "start": "1486120",
    "end": "1493140"
  },
  {
    "text": "really follow all the code through one transaction got to the point where the",
    "start": "1493140",
    "end": "1500490"
  },
  {
    "text": "team were still managing to make changes in this code but that was happening very slowly and ultimately we were kind of",
    "start": "1500490",
    "end": "1509430"
  },
  {
    "text": "worried every time we make a change about if we'd broken anything else because everything depended on each other",
    "start": "1509430",
    "end": "1514590"
  },
  {
    "text": "there weren't any unit tests over this code so refactoring it also was very",
    "start": "1514590",
    "end": "1519870"
  },
  {
    "text": "difficult because we couldn't tell if we'd broken something else by change by",
    "start": "1519870",
    "end": "1526080"
  },
  {
    "text": "trying to refactor one single thing what we were really trying to do is just do",
    "start": "1526080",
    "end": "1532200"
  },
  {
    "text": "what I call compiler safe refactoring so that is you know extract methods onto a new type of rename methods or break",
    "start": "1532200",
    "end": "1538590"
  },
  {
    "text": "methods into small methods and that sort of stuff but like we said we couldn't really even do that because we were worried about",
    "start": "1538590",
    "end": "1545100"
  },
  {
    "text": "breaking other things and that's where in depends what I came in to help so what I'm going to open up next is",
    "start": "1545100",
    "end": "1553230"
  },
  {
    "text": "sort of a simulation of that so what",
    "start": "1553230",
    "end": "1561220"
  },
  {
    "text": "I've got here is I wrote some cards that basically just generated a bunch of types which I'll open here so I've got",
    "start": "1561220",
    "end": "1569110"
  },
  {
    "text": "my god class here that's oh sorry there",
    "start": "1569110",
    "end": "1581050"
  },
  {
    "text": "we go so I've got my god class here in my",
    "start": "1581050",
    "end": "1590010"
  },
  {
    "text": "spaghetti namespace and so I've just literally just generated a random bunch",
    "start": "1590010",
    "end": "1595260"
  },
  {
    "text": "of methods and these methods randomly call each other which is a rough",
    "start": "1595260",
    "end": "1600300"
  },
  {
    "text": "approximation of the kind of code where we're dealing with it's a little bit",
    "start": "1600300",
    "end": "1606030"
  },
  {
    "text": "harder to follow because the names are actually random you know one of the things that will become apparent though",
    "start": "1606030",
    "end": "1611460"
  },
  {
    "text": "is that once the code looks like this is very hard to start to think about what the domain might look like underneath it",
    "start": "1611460",
    "end": "1618290"
  },
  {
    "text": "so what I'm gonna do first is actually just write a query and show you what the",
    "start": "1619010",
    "end": "1625140"
  },
  {
    "text": "dependencies between these methods looks like so if I need to open the project",
    "start": "1625140",
    "end": "1634370"
  },
  {
    "text": "let's just open that one",
    "start": "1635720",
    "end": "1639470"
  },
  {
    "text": "and I'll just analyze",
    "start": "1646880",
    "end": "1650570"
  },
  {
    "text": "okay so I'm going to from em in methods can",
    "start": "1656230",
    "end": "1665159"
  },
  {
    "text": "you guys read that or do it like me resume you know at the back seems okay",
    "start": "1665159",
    "end": "1671509"
  },
  {
    "text": "from em in methods where m dot parent",
    "start": "1671509",
    "end": "1677210"
  },
  {
    "text": "namespace dot name equals spaghetti",
    "start": "1677210",
    "end": "1686898"
  },
  {
    "text": "select M probably spelt spaghetti wrong",
    "start": "1688909",
    "end": "1696049"
  },
  {
    "text": "[Music] all right there are all the methods this",
    "start": "1705910",
    "end": "1713600"
  },
  {
    "text": "is open is the end unit assembly I've happened the wrong project okay",
    "start": "1713600",
    "end": "1721090"
  },
  {
    "text": "here we go all right from em in methods where I'm",
    "start": "1723580",
    "end": "1735200"
  },
  {
    "text": "actually going to go to my parent parent type dot name equals God because it's",
    "start": "1735200",
    "end": "1745880"
  },
  {
    "text": "easier to spell select the methods so",
    "start": "1745880",
    "end": "1753170"
  },
  {
    "text": "there we go about 25 methods and if I bought those to a graph you can see this",
    "start": "1753170",
    "end": "1760730"
  },
  {
    "text": "is not the right graph I need to build and analyze again that's from my last practice run last night",
    "start": "1760730",
    "end": "1767770"
  },
  {
    "text": "okay so I got 47 now and this is what the graph looks like so this graph is",
    "start": "1786940",
    "end": "1793389"
  },
  {
    "text": "really right on the edge of something that might be useful I mean we can see some interesting things like okay",
    "start": "1793389",
    "end": "1799389"
  },
  {
    "text": "everything's sort of dependent on this statement and there's a bit of a hierarchy going that way but it gets",
    "start": "1799389",
    "end": "1808840"
  },
  {
    "text": "tricky because we might say that you know there's almost another tree growing out over here but it sort of starts to",
    "start": "1808840",
    "end": "1816099"
  },
  {
    "text": "get tangled and turn that tooltip off starts to get tangled in through here and we really you know can't separate",
    "start": "1816099",
    "end": "1823330"
  },
  {
    "text": "these two very clearly so instead of viewing this on the graph of course I'm",
    "start": "1823330",
    "end": "1830200"
  },
  {
    "text": "going to go and reach for the dependency matrix instead",
    "start": "1830200",
    "end": "1834659"
  },
  {
    "text": "and from here to me the most obvious thing that immediately jumps out is obviously this giant line so that's the",
    "start": "1845049",
    "end": "1854200"
  },
  {
    "text": "the stateless method that you can see and what I'm gonna do today and what we looked at doing as a team was actually",
    "start": "1854200",
    "end": "1860619"
  },
  {
    "text": "just to begin by extracting these methods into separate classes one of the biggest problems we've got going on at",
    "start": "1860619",
    "end": "1866440"
  },
  {
    "text": "the moment is that all these methods because they're all next to each other in the class they can all start",
    "start": "1866440",
    "end": "1871629"
  },
  {
    "text": "representing other more and more and more the first thing we want to do is start breaking that up and just elevate the dependencies to a class level so",
    "start": "1871629",
    "end": "1878320"
  },
  {
    "text": "that we're not looking at every possible dependency at once in a real scenario",
    "start": "1878320",
    "end": "1884440"
  },
  {
    "text": "you might be able to use some some more imaginative refactorings and this we use things like in the end of passing in",
    "start": "1884440",
    "end": "1891389"
  },
  {
    "text": "function parameters to other methods and stuff like that to do some some better refactorings but today I'm just going to",
    "start": "1891389",
    "end": "1897190"
  },
  {
    "text": "extract things into different classes and maybe we can see if that provides much value or not so I'm just gonna",
    "start": "1897190",
    "end": "1902919"
  },
  {
    "text": "follow this through I'm gonna grab this stateless method and I am going to put",
    "start": "1902919",
    "end": "1909730"
  },
  {
    "text": "it into a new class I guess as well something that we did is you could sort of run along and see what else is going",
    "start": "1909730",
    "end": "1916359"
  },
  {
    "text": "to come with this as you grab it and see whether it's something you wanted to do one of the things that my team got as a",
    "start": "1916359",
    "end": "1923799"
  },
  {
    "text": "benefit by using independent do this kind of thing is not only were we able",
    "start": "1923799",
    "end": "1928960"
  },
  {
    "text": "to see the places to make the cuts better but we were able to get a little bit of a look into what its gonna try",
    "start": "1928960",
    "end": "1935559"
  },
  {
    "text": "and look like to pull those methods out in the past what we often found was that as we tried to do a refactoring like",
    "start": "1935559",
    "end": "1941049"
  },
  {
    "text": "this large-scale refactoring like this we'd sort of get half a day a day two days in start to worry that it wasn't",
    "start": "1941049",
    "end": "1946989"
  },
  {
    "text": "gonna work and we sort of chickened out and stopped it in the end",
    "start": "1946989",
    "end": "1952210"
  },
  {
    "text": "what this allowed us to do is have the confidence we spent about two to three weeks mobbing on this as a team of about",
    "start": "1952210",
    "end": "1957399"
  },
  {
    "text": "five people and by the time we got to the end it was we had the confidence all the way through that we were actually",
    "start": "1957399",
    "end": "1963009"
  },
  {
    "text": "making progress and this was a good thing to do so I'm just gonna call this",
    "start": "1963009",
    "end": "1970960"
  },
  {
    "text": "class state even though it's got a method called stateless in it because the methods are all just rubbish names anyway I'm just gonna follow this",
    "start": "1970960",
    "end": "1977109"
  },
  {
    "text": "through and grab the methods that it needs and pull them across this does become a very",
    "start": "1977109",
    "end": "1986320"
  },
  {
    "text": "mechanical process became quite boring to do over a course of two to three weeks but what does start to happen as",
    "start": "1986320",
    "end": "1997780"
  },
  {
    "text": "you do this is that the methods you pull start to give you an idea of what this",
    "start": "1997780",
    "end": "2006090"
  },
  {
    "text": "class is so you know whatever these four methods add up to being that will",
    "start": "2006090",
    "end": "2011910"
  },
  {
    "text": "generally start to become a domain concept that you can do so I've grabbed all of these now and I know that I've",
    "start": "2011910",
    "end": "2016920"
  },
  {
    "text": "got everything that's required by this little group of methods in this class so what I need to do now is go and fix all",
    "start": "2016920",
    "end": "2023220"
  },
  {
    "text": "these references so I'm just for the sake of demonstrations going to pull in",
    "start": "2023220",
    "end": "2034290"
  },
  {
    "text": "a class and just create an instance of it so that all these things can be used just do a quick find and replace",
    "start": "2034290",
    "end": "2044480"
  },
  {
    "text": "oops too many underscores",
    "start": "2054950",
    "end": "2060250"
  },
  {
    "text": "hopefully that a logo green and then there's a couple of other instances and",
    "start": "2073510",
    "end": "2080899"
  },
  {
    "text": "managed to get a V in there what's going on here readable it needs to be public",
    "start": "2080900",
    "end": "2086389"
  },
  {
    "text": "as well so there's readable as well what",
    "start": "2086390",
    "end": "2097520"
  },
  {
    "text": "we can do now though as well because we've so stateless needs to be called from outside of the class and readable does but we can make these to private",
    "start": "2097520",
    "end": "2105610"
  },
  {
    "text": "and we can tell that because nothing breaks so again we using the compiler to verify our refactorings all the time and",
    "start": "2105610",
    "end": "2111560"
  },
  {
    "text": "that at this point allows us to refactor under stateless and readable in any way we want with net with knowing that we",
    "start": "2111560",
    "end": "2118280"
  },
  {
    "text": "didn't break anything else and this is where we derived a lot of value out of going through this exercise the same",
    "start": "2118280",
    "end": "2123590"
  },
  {
    "text": "time while at this point the god class is maintaining a dependency on the",
    "start": "2123590",
    "end": "2129170"
  },
  {
    "text": "stateless class over time as we replace all of this stuff we'll hopefully see that the god class might actually",
    "start": "2129170",
    "end": "2135320"
  },
  {
    "text": "evaporate and that that one point of coupling might just start to disappear",
    "start": "2135320",
    "end": "2141880"
  },
  {
    "text": "so now that I've done that I'm gonna rebuild and reanalyze and we'll take a",
    "start": "2141880",
    "end": "2147530"
  },
  {
    "text": "look at how those graphs have changed I'll actually pull that up so that you",
    "start": "2147530",
    "end": "2153080"
  },
  {
    "text": "can see it change this is what it looked",
    "start": "2153080",
    "end": "2158630"
  },
  {
    "text": "like before and when we run a new analysis this is what we get now so not",
    "start": "2158630",
    "end": "2164690"
  },
  {
    "text": "a lot better but we can start to do things like",
    "start": "2164690",
    "end": "2169780"
  },
  {
    "text": "see little groups like this down here I don't know how easily you can see that",
    "start": "2175170",
    "end": "2181330"
  },
  {
    "text": "but to me if I sort of squint and look blurry there is a group of methods down",
    "start": "2181330",
    "end": "2188080"
  },
  {
    "text": "here that I could start to extract so I'm gonna select one of those and I've you know obviously gone through and had",
    "start": "2188080",
    "end": "2194620"
  },
  {
    "text": "a little bit of a look at this earlier and you can see by following the cross members here that maybe it's not such a",
    "start": "2194620",
    "end": "2201310"
  },
  {
    "text": "bad method there's nothing on the vertical that's going to come with it when I try and grab that there's only a couple of things over on the left when I",
    "start": "2201310",
    "end": "2208510"
  },
  {
    "text": "try and grab that that's going to come that's not inside this little group so I'm hoping that that would be a good",
    "start": "2208510",
    "end": "2214420"
  },
  {
    "text": "candidate for me to try and extract another group of sort of highly casing methods so if I follow this through this",
    "start": "2214420",
    "end": "2227110"
  },
  {
    "text": "is based here so I'm gonna grab that I'm gonna put it in a new class called I don't know base class or something like",
    "start": "2227110",
    "end": "2232900"
  },
  {
    "text": "that something sensible like that and",
    "start": "2232900",
    "end": "2239940"
  },
  {
    "text": "just go through grab all of these if",
    "start": "2239940",
    "end": "2246220"
  },
  {
    "text": "anyone's got any questions at this point I'd be more than happy to to talk and answer the question while I do this yeah",
    "start": "2246220",
    "end": "2254640"
  },
  {
    "text": "I mean I don't think so the method I'm describing here isn't",
    "start": "2257440",
    "end": "2263500"
  },
  {
    "text": "really the way to do it yeah sorry yeah",
    "start": "2263500",
    "end": "2269349"
  },
  {
    "text": "of course so the question was is there any tool that would be able to do this",
    "start": "2269349",
    "end": "2275650"
  },
  {
    "text": "process for you this process being taking that dependency graph and grabbing all the things out of it for",
    "start": "2275650",
    "end": "2282190"
  },
  {
    "text": "you thanks for the reminder and the answer was no I don't not that I'm aware",
    "start": "2282190",
    "end": "2288460"
  },
  {
    "text": "of I think one of the reasons why that tool doesn't exist is that you know",
    "start": "2288460",
    "end": "2293470"
  },
  {
    "text": "while this is a fairly straightforward way of doing it I'm not sure that the 100% mechanical way I'm going about",
    "start": "2293470",
    "end": "2299950"
  },
  {
    "text": "doing it today and that is by just sort of extracting everything in classes learning those classes depending on each other is really the exact way you go",
    "start": "2299950",
    "end": "2307329"
  },
  {
    "text": "about doing it in practice you'd probably look for you know more appropriate ways to do that kind of",
    "start": "2307329",
    "end": "2313660"
  },
  {
    "text": "refactoring",
    "start": "2313660",
    "end": "2316260"
  },
  {
    "text": "which one was that said it against her",
    "start": "2320690",
    "end": "2326759"
  },
  {
    "text": "eyes can't quite heat okay so you",
    "start": "2326759",
    "end": "2332309"
  },
  {
    "text": "thinking Val what needs to go back let's",
    "start": "2332309",
    "end": "2338880"
  },
  {
    "text": "say it herbal is what I wanted",
    "start": "2338880",
    "end": "2347088"
  },
  {
    "text": "oops now we're in trouble ah maybe I",
    "start": "2353370",
    "end": "2364470"
  },
  {
    "text": "shouldn't try dancing questions while I was doing this okay driven we did want",
    "start": "2364470",
    "end": "2372350"
  },
  {
    "text": "great and then each variable we want as",
    "start": "2373010",
    "end": "2378930"
  },
  {
    "text": "well there it is",
    "start": "2378930",
    "end": "2385340"
  },
  {
    "text": "okay so this class actually needs to and this is this is this sort of the downfall of this method in that it you",
    "start": "2390569",
    "end": "2397210"
  },
  {
    "text": "know it starts to bring all its still tangled at some level right state yes",
    "start": "2397210",
    "end": "2405599"
  },
  {
    "text": "and this is called base class so add this up here",
    "start": "2411180",
    "end": "2418500"
  },
  {
    "text": "and spawns a little bit more manual but there's not as many so he did based we",
    "start": "2433280",
    "end": "2440390"
  },
  {
    "text": "did iterable principle invalid",
    "start": "2440390",
    "end": "2447430"
  },
  {
    "text": "so if I have a look at this then I'd want to make I think I think I can make this one private I can tell by looking",
    "start": "2459099",
    "end": "2466449"
  },
  {
    "text": "over on the scrubber on the right nothing broke invalid was definitely I think used was it yeah that broke",
    "start": "2466449",
    "end": "2475239"
  },
  {
    "text": "something and so obviously we it's really important that every step we make all of these private that we can was",
    "start": "2475239",
    "end": "2481719"
  },
  {
    "text": "iterable it a rule we can't make private",
    "start": "2481719",
    "end": "2486729"
  },
  {
    "text": "either so only only one made private at this point but what that has allowed us",
    "start": "2486729",
    "end": "2492489"
  },
  {
    "text": "to do is again to cut down on the number of types or methods in the original class so if I rebuild there and then",
    "start": "2492489",
    "end": "2499779"
  },
  {
    "text": "actually run the analysis again we get to have a look at the improved graph now",
    "start": "2499779",
    "end": "2510880"
  },
  {
    "text": "this is starting to become a little bit more sensible and understandable now that we've sort of taken those two things out whether they were great cuts",
    "start": "2510880",
    "end": "2516819"
  },
  {
    "text": "to make or not the intuitions a little bit harder to use on the dependency matrix what we can see here is that this",
    "start": "2516819",
    "end": "2522729"
  },
  {
    "text": "statement looks like a really good separated class except for the fact that",
    "start": "2522729",
    "end": "2529569"
  },
  {
    "text": "it starts to cross over at the abstract method and the simple method so this is",
    "start": "2529569",
    "end": "2536469"
  },
  {
    "text": "where we can start to to make some more sensible choices about the refactoring and on what I'm gonna do is for the sake",
    "start": "2536469",
    "end": "2542499"
  },
  {
    "text": "of quickness I'm just gonna grab abstract and simple out into their own class we'll just call that a common dependencies class or something like",
    "start": "2542499",
    "end": "2548709"
  },
  {
    "text": "that and then that's going to allow us to grep get that whole tree out without",
    "start": "2548709",
    "end": "2554859"
  },
  {
    "text": "pulling all of this one too and this is where we really started to see the domain model start to emerge out of this",
    "start": "2554859",
    "end": "2561249"
  },
  {
    "text": "mess so if I find actually I can do it",
    "start": "2561249",
    "end": "2567819"
  },
  {
    "text": "back from here if we find simple",
    "start": "2567819",
    "end": "2571380"
  },
  {
    "text": "and then abstract and they're going to",
    "start": "2588800",
    "end": "2599910"
  },
  {
    "text": "need those two dependencies which are",
    "start": "2599910",
    "end": "2605700"
  },
  {
    "text": "abstracts going to take aspect with it as well I know aspect will be able to be made",
    "start": "2605700",
    "end": "2613110"
  },
  {
    "text": "private so what I need I need state and",
    "start": "2613110",
    "end": "2621920"
  },
  {
    "text": "base class oops",
    "start": "2621920",
    "end": "2629660"
  },
  {
    "text": "and add this common dependencies to the god class",
    "start": "2637040",
    "end": "2642220"
  },
  {
    "text": "right so then in rebuild again back to the graph reanalyze and now we can see",
    "start": "2667140",
    "end": "2678700"
  },
  {
    "text": "that this this tree here is completely separated from the rest of it so I can start to pull that out into its own",
    "start": "2678700",
    "end": "2684069"
  },
  {
    "text": "class as well so I'll take that and yo",
    "start": "2684069",
    "end": "2692940"
  },
  {
    "text": "yeah sure so one of the things you can start seeing the matrix as you start to",
    "start": "2694500",
    "end": "2700839"
  },
  {
    "text": "see a little bit of clear air developing between the types as well so if I'll find statement for you there it is so",
    "start": "2700839",
    "end": "2714940"
  },
  {
    "text": "you can see that statements got no dependencies on anything else that can't be right statements got dependency on XML this",
    "start": "2714940",
    "end": "2722589"
  },
  {
    "text": "group here though right this square I don't hit anything else on",
    "start": "2722589",
    "end": "2728170"
  },
  {
    "text": "the vertical or the horizontal so you can see that that group of cohesive things now can come out cleanly this",
    "start": "2728170",
    "end": "2737829"
  },
  {
    "text": "isn't quite clean yet this group down here you've got a few little dependencies on it as well so that would",
    "start": "2737829",
    "end": "2744640"
  },
  {
    "text": "be the sort of the next place you might want to look at why these were dependent on each other and is there something you could do about that so I'm going to for",
    "start": "2744640",
    "end": "2754960"
  },
  {
    "text": "the sake of just showing you what this finally looks like at the end grab this one out here now this is quite a long",
    "start": "2754960",
    "end": "2762540"
  },
  {
    "text": "refactoring to do because there's a lot of that's a reasonably big tree that",
    "start": "2762540",
    "end": "2767980"
  },
  {
    "text": "we're pulling out there but interestingly now because that's the only public method statement you know I start to get an idea a better idea of",
    "start": "2767980",
    "end": "2775119"
  },
  {
    "text": "what this might be this might be my statement maker or something like that",
    "start": "2775119",
    "end": "2782730"
  },
  {
    "text": "we're really starting to see a domain type come out of all this I'll just go",
    "start": "2782730",
    "end": "2788050"
  },
  {
    "text": "and grab all of these",
    "start": "2788050",
    "end": "2790800"
  },
  {
    "text": "you can see that most of the methods in that gold cloth now are actually calling out to something else as well so my hope would be that that would sort of start",
    "start": "2814990",
    "end": "2821349"
  },
  {
    "text": "to evaporate and all the coal sites that originally called the gaud class could be replaced with calls to the new",
    "start": "2821349",
    "end": "2827890"
  },
  {
    "text": "classes that we're creating here leaving only the dependencies between those classes as the ones that you need to",
    "start": "2827890",
    "end": "2833950"
  },
  {
    "text": "worry about",
    "start": "2833950",
    "end": "2836279"
  },
  {
    "text": "amount of read sometimes you get building up on the scrollbar the right gets a little scary I think um it's",
    "start": "2868730",
    "end": "2875630"
  },
  {
    "text": "worth noting as well that when we were doing this for two or three weeks mob programming was probably a big part of",
    "start": "2875630",
    "end": "2881210"
  },
  {
    "text": "our success as well what we've found is a team that when we're doing something is a group when it's a bit scary like",
    "start": "2881210",
    "end": "2887480"
  },
  {
    "text": "this having the team there to sort of encourage you and keep the courage levels up when one person is ready to",
    "start": "2887480",
    "end": "2892730"
  },
  {
    "text": "give up someone else has got the energy to press on and that sort of thing so it might also be worth noting okay and then",
    "start": "2892730",
    "end": "2902090"
  },
  {
    "text": "we need state base class and common",
    "start": "2902090",
    "end": "2914480"
  },
  {
    "text": "dependencies",
    "start": "2914480",
    "end": "2917020"
  },
  {
    "text": "now don't need to go and change the god class because I pulled everything out this time so it's completely separated",
    "start": "2927740",
    "end": "2933210"
  },
  {
    "text": "from it so I should be able to build now and then you know this is not going to",
    "start": "2933210",
    "end": "2941190"
  },
  {
    "text": "change a lot here but if I reanalyze obviously all of those types will disappear and we start the problem over",
    "start": "2941190",
    "end": "2948900"
  },
  {
    "text": "again and we start to say right maybe this looks like a good one the one",
    "start": "2948900",
    "end": "2954120"
  },
  {
    "text": "to grab our auto wire you know what can we grab or is a JMS that's only got one",
    "start": "2954120",
    "end": "2959310"
  },
  {
    "text": "link through scope so maybe scope can become a common dependency and then we've got two more trees to grab in that",
    "start": "2959310",
    "end": "2964350"
  },
  {
    "text": "sort of thing one of the reasons I really wanted to finish that refactoring as well is because originally if you",
    "start": "2964350",
    "end": "2973020"
  },
  {
    "text": "remember when we had the 45 methods in our original thing where that really tangled graph of the methods between it",
    "start": "2973020",
    "end": "2978230"
  },
  {
    "text": "we can now start to do another graph and if I start a new query here I'm actually",
    "start": "2978230",
    "end": "2985200"
  },
  {
    "text": "going to say from T in types where T dot",
    "start": "2985200",
    "end": "2991740"
  },
  {
    "text": "parent name space equals dot name equals",
    "start": "2991740",
    "end": "3001000"
  },
  {
    "text": "spaghetti hopefully I'll spell it right select T before we were trying to work",
    "start": "3001000",
    "end": "3011120"
  },
  {
    "text": "out which parts of our code dependent on each other by clearing the methods inside the single god class now that",
    "start": "3011120",
    "end": "3016790"
  },
  {
    "text": "we've elevated those method dependencies to be actually method dependencies between classes we can start to run the",
    "start": "3016790",
    "end": "3022580"
  },
  {
    "text": "query of how those classes depend on each other and we start to get a graph like this which is while obviously is",
    "start": "3022580",
    "end": "3028970"
  },
  {
    "text": "still a mess much more easy for us to reason about and start to decide how are the main concepts depend on each other",
    "start": "3028970",
    "end": "3034970"
  },
  {
    "text": "this is obviously pretty random because I randomly generated it but when we did",
    "start": "3034970",
    "end": "3040580"
  },
  {
    "text": "this without real domain classes things started to become clear about what should and should not depend on each",
    "start": "3040580",
    "end": "3045740"
  },
  {
    "text": "other okay so that's the end of the demo",
    "start": "3045740",
    "end": "3053210"
  },
  {
    "text": "today and pretty close to the end of the talk as well",
    "start": "3053210",
    "end": "3059140"
  },
  {
    "text": "what we got left to say so I suppose I mean I've actually probably iterated",
    "start": "3061819",
    "end": "3068579"
  },
  {
    "text": "this fairly well throughout the demos that what we did here today was much simpler than we did in real life it was",
    "start": "3068579",
    "end": "3075030"
  },
  {
    "text": "a small problem it was one that I had tweaked a little bit so that it worked",
    "start": "3075030",
    "end": "3080309"
  },
  {
    "text": "well today there were a lot more dead ends and were backing up going on when we do this as a team as well as there",
    "start": "3080309",
    "end": "3087960"
  },
  {
    "text": "were some more thoughtful decisions about the kinds of refactorings we did",
    "start": "3087960",
    "end": "3093059"
  },
  {
    "text": "rather than just extracting everything to classes and having those classes depend on each other as well yeah and so",
    "start": "3093059",
    "end": "3103380"
  },
  {
    "text": "that's what I wanted to show you guys today thank you all for for sitting through some lengthy coding sessions",
    "start": "3103380",
    "end": "3109859"
  },
  {
    "text": "there I'm glad it all went well I'm more than happy we've got about almost close to 2 5 or 6 minutes left now to take",
    "start": "3109859",
    "end": "3116339"
  },
  {
    "text": "questions if anyone's got any yeah did",
    "start": "3116339",
    "end": "3128490"
  },
  {
    "text": "we find many bugs yeah I understand so the question is did we find many bugs",
    "start": "3128490",
    "end": "3134040"
  },
  {
    "text": "while we were doing this kind of refactoring no and I think we did I mean",
    "start": "3134040",
    "end": "3140790"
  },
  {
    "text": "if we were to be adding better types to things or if we were would you actually",
    "start": "3140790",
    "end": "3146069"
  },
  {
    "text": "read a lot of the code to be honest we sort of looked at what Matt Method calls that method yeah yeah just pull it with",
    "start": "3146069",
    "end": "3152040"
  },
  {
    "text": "it and so any bugs that were in the code just kind of came came with the code what we did find was a lot of dead code",
    "start": "3152040",
    "end": "3158549"
  },
  {
    "text": "we found a lot of code that sort of called in circular ways that shouldn't have been saw we could cut it off there",
    "start": "3158549",
    "end": "3164960"
  },
  {
    "text": "and we found duplicated code as well that maybe shouldn't have been so we did",
    "start": "3164960",
    "end": "3170910"
  },
  {
    "text": "find those things as we went through this process yeah did the functionality of the code",
    "start": "3170910",
    "end": "3179339"
  },
  {
    "text": "change so because we the question is did the functionality of the code change after we've refactored it no it didn't",
    "start": "3179339",
    "end": "3186510"
  },
  {
    "text": "so it was purely of functionality preserving refactoring we were trying to do but we didn't have any unit tests and we",
    "start": "3186510",
    "end": "3192730"
  },
  {
    "text": "weren't really sure considering the amount of refactoring we did over through three weeks and thousands tens of thousands lines of code we did do a",
    "start": "3192730",
    "end": "3198609"
  },
  {
    "text": "full manual regression test or a light manual regression test over the whole",
    "start": "3198609",
    "end": "3203710"
  },
  {
    "text": "codebase and we didn't find any bugs either so maybe one or two or something like that were just copy-paste errors so",
    "start": "3203710",
    "end": "3210009"
  },
  {
    "text": "it was a pretty reliable thing way to do it yeah yeah right so the question is is",
    "start": "3210009",
    "end": "3223420"
  },
  {
    "text": "there a scale issue with independ now I'm gonna answer it in two ways and",
    "start": "3223420",
    "end": "3228789"
  },
  {
    "text": "hopefully I'll tell me if I don't answer the question correctly in terms of how much code can it physically crunch",
    "start": "3228789",
    "end": "3234849"
  },
  {
    "text": "through and analyze it's pretty good I mean I've I've run it over some some fairly big projects it you know it takes",
    "start": "3234849",
    "end": "3241089"
  },
  {
    "text": "a little while to do that that first analysis but when it does that first analysis it builds a big in-memory model",
    "start": "3241089",
    "end": "3248440"
  },
  {
    "text": "of it so the query after that is always quite quick so might gets slower on the initial analysis the querying is always",
    "start": "3248440",
    "end": "3255970"
  },
  {
    "text": "very fast so I'd often as well because we were working within one class I",
    "start": "3255970",
    "end": "3263349"
  },
  {
    "text": "limited the scope of most of the assemblies that we loaded to just a single assembly that we were working",
    "start": "3263349",
    "end": "3268809"
  },
  {
    "text": "inside of as well the second way I might have interpreted",
    "start": "3268809",
    "end": "3275079"
  },
  {
    "text": "that question though is how does this end up end scale in terms of being able to a human interpreter it's once the",
    "start": "3275079",
    "end": "3282700"
  },
  {
    "text": "code gets to a certain size and that's largely what I've been focusing on today as well so while indepen can actually",
    "start": "3282700",
    "end": "3288039"
  },
  {
    "text": "load in a lot of code often there's not a lot of point loading in too much code because you can't understand it anyway",
    "start": "3288039",
    "end": "3293499"
  },
  {
    "text": "at some point that that dependency graph becomes too smaller rate as well",
    "start": "3293499",
    "end": "3299818"
  },
  {
    "text": "yeah yeah so that comes back to this",
    "start": "3307550",
    "end": "3315360"
  },
  {
    "text": "right every other time I picked up and depend out of general frustration I've not made much headway with it because",
    "start": "3315360",
    "end": "3322050"
  },
  {
    "text": "I've not known what I was trying to do in this scenario with this team I knew that we had one giant god class and what",
    "start": "3322050",
    "end": "3330300"
  },
  {
    "text": "I wanted to do is break up that class you might have a different problem you might have one assembly that's too big",
    "start": "3330300",
    "end": "3335610"
  },
  {
    "text": "and it's slowing down your build process you could use a similar process to the one I've shown you today but it might be a slightly different level so you know I",
    "start": "3335610",
    "end": "3343650"
  },
  {
    "text": "guess what I'm trying to show you is one thing that we did very specifically but also hopefully you can see that how you",
    "start": "3343650",
    "end": "3349950"
  },
  {
    "text": "might got to abstract this method to suit what your problem is yeah yep",
    "start": "3349950",
    "end": "3365010"
  },
  {
    "text": "yes so indirect dependencies the question is what about indirect dependencies when you use reflection and things like",
    "start": "3365010",
    "end": "3371160"
  },
  {
    "text": "that so obviously they can be a bit of a problem and depend on some interesting",
    "start": "3371160",
    "end": "3376890"
  },
  {
    "text": "things though there's a hmm there's one",
    "start": "3376890",
    "end": "3382290"
  },
  {
    "text": "particular metric in it that I'll bring it up something about dead code yeah",
    "start": "3382290",
    "end": "3390290"
  },
  {
    "text": "right potentially dead types is what it's called so it finds potentially dead",
    "start": "3390290",
    "end": "3397020"
  },
  {
    "text": "types or potentially dead methods and that kind of thing and it defines quite",
    "start": "3397020",
    "end": "3405450"
  },
  {
    "text": "a complex query to define if something is dependent on by anything else and the",
    "start": "3405450",
    "end": "3411750"
  },
  {
    "text": "way this actually defines if something is dependent on doesn't just look at the code and see if there's a reference to",
    "start": "3411750",
    "end": "3417210"
  },
  {
    "text": "it it actually checks if the code can compile without it so if there are compile-time dependencies on it somehow",
    "start": "3417210",
    "end": "3423240"
  },
  {
    "text": "as well that kind of thing will fail too but reflection I think would probably be outside the scope of what independe can",
    "start": "3423240",
    "end": "3429750"
  },
  {
    "text": "do as far as I understand it",
    "start": "3429750",
    "end": "3433010"
  },
  {
    "text": "okay we're probably done thanks so much for all your time today",
    "start": "3435050",
    "end": "3441080"
  },
  {
    "text": "[Applause]",
    "start": "3441920",
    "end": "3446538"
  }
]