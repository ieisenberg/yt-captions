[
  {
    "text": "hi everyone my name is Michael styp um I'm",
    "start": "5680",
    "end": "11160"
  },
  {
    "text": "the author of the hot chocolate graph librari and.net called hot chocolate and",
    "start": "11160",
    "end": "16560"
  },
  {
    "text": "I'm also a member of the graph Quil technical steering committee the body that is behind the evolution of the",
    "start": "16560",
    "end": "23039"
  },
  {
    "text": "graph quare specification and at the moment I'm working within the graph quare",
    "start": "23039",
    "end": "28800"
  },
  {
    "text": "foundation on on a new specification for distributed",
    "start": "28800",
    "end": "34599"
  },
  {
    "text": "graphql so before we dive into what distributed graph Quil is and what you",
    "start": "34840",
    "end": "40399"
  },
  {
    "text": "can do with it or why you should even care let's talk a bit about graph qu why graph Quil is so",
    "start": "40399",
    "end": "48719"
  },
  {
    "text": "good so back when graph came out and that is like in 2016 like grafa is",
    "start": "48719",
    "end": "55559"
  },
  {
    "text": "already around since 2012 for people who don't know it but in 2016 was the point",
    "start": "55559",
    "end": "63359"
  },
  {
    "text": "where Facebook essentially open sourced graph qu and people were like very amazed",
    "start": "63359",
    "end": "71280"
  },
  {
    "text": "about how graphql changes the flow that you have in building",
    "start": "71280",
    "end": "78360"
  },
  {
    "text": "applications especially front end Engineers were starting to push the backend Engineers to introduce graph",
    "start": "78920",
    "end": "84799"
  },
  {
    "text": "quare to their specification because with graph quare we no longer think",
    "start": "84799",
    "end": "89960"
  },
  {
    "text": "think about response or request patterns or what requests you need in a back end",
    "start": "89960",
    "end": "96600"
  },
  {
    "text": "to to build your front end we are rather thinking about",
    "start": "96600",
    "end": "102560"
  },
  {
    "text": "data and what that means is that graph qu essentially has one very specific",
    "start": "102799",
    "end": "109280"
  },
  {
    "text": "aspect in its query language which is called a fragment and the fragment in graph qu is essentially the Primitive",
    "start": "109280",
    "end": "116280"
  },
  {
    "text": "for composition sounds complex but is actually a way to specify for your youri",
    "start": "116280",
    "end": "122920"
  },
  {
    "text": "components the data contract so in this example for instance",
    "start": "122920",
    "end": "128160"
  },
  {
    "text": "we can see that the ticker component uh uses a fragment here which",
    "start": "128160",
    "end": "134040"
  },
  {
    "text": "is called ticker entry this ticker entry contract describes basically the data",
    "start": "134040",
    "end": "140360"
  },
  {
    "text": "contract for one component in our",
    "start": "140360",
    "end": "145480"
  },
  {
    "text": "U but there's nothing about how to fetch this data right there's nothing about",
    "start": "146760",
    "end": "151879"
  },
  {
    "text": "how to get this data transport wise or whatever if we did the same with rest we",
    "start": "151879",
    "end": "159319"
  },
  {
    "text": "would probably have a call there to fetch the data and then uh maybe massage it a bit and put it in our component but",
    "start": "159319",
    "end": "167000"
  },
  {
    "text": "with graph Quil I just specify what data I really need and then it's resolved",
    "start": "167000",
    "end": "173879"
  },
  {
    "text": "somehow so how that works is actually that when we build our components our UI",
    "start": "173879",
    "end": "180879"
  },
  {
    "text": "components we collocate the data contract so our fragment up here so we",
    "start": "180879",
    "end": "188680"
  },
  {
    "text": "specify what this component needs for data and then we use the",
    "start": "188680",
    "end": "194239"
  },
  {
    "text": "data down there in our visualization part the same thing works in Blazer if",
    "start": "194239",
    "end": "199360"
  },
  {
    "text": "you're more into Blazer but this is a here a react component which uses",
    "start": "199360",
    "end": "206280"
  },
  {
    "text": "relay so by by building our application by putting our components together",
    "start": "207920",
    "end": "214360"
  },
  {
    "text": "stacking them like little Leo blocks together we accidentally building a graph qu request a graph",
    "start": "214360",
    "end": "222879"
  },
  {
    "text": "query let me show you that with the actual application so that is the actual application I'm referring to in my",
    "start": "222879",
    "end": "230360"
  },
  {
    "text": "slides and if I run that you can see oh Wi-Fi uh you can see that this component",
    "start": "230360",
    "end": "237519"
  },
  {
    "text": "actually just has a single request to my back end although I have um like a ton of",
    "start": "237519",
    "end": "245879"
  },
  {
    "text": "components here on my page like I have the sticker here I have here graphs I",
    "start": "245879",
    "end": "252560"
  },
  {
    "text": "have a couple of lists here but it's a single request that I do to my back end",
    "start": "252560",
    "end": "258359"
  },
  {
    "text": "if I look into that you can see then we have here this query where we have a lot",
    "start": "258359",
    "end": "264400"
  },
  {
    "text": "of these fragments like this is built by building my application so accidentally",
    "start": "264400",
    "end": "270000"
  },
  {
    "text": "we came up with this graph query and this works because in graph we",
    "start": "270000",
    "end": "276680"
  },
  {
    "text": "have this unified API this unified schema in which we reason about types",
    "start": "276680",
    "end": "283639"
  },
  {
    "text": "rather than exposing certain requests right we we're basically modeling an",
    "start": "283639",
    "end": "290720"
  },
  {
    "text": "interface to our core business domain and this allows us to to build a",
    "start": "290720",
    "end": "297880"
  },
  {
    "text": "much richer back end for our frontend",
    "start": "297880",
    "end": "303600"
  },
  {
    "text": "engineers and that works because graph is a monolith and that's also why",
    "start": "307199",
    "end": "312560"
  },
  {
    "text": "frontend Engineers love graph because they have this single schema where they can pick and choose data from uh that",
    "start": "312560",
    "end": "320160"
  },
  {
    "text": "they want to use in their components it's strongly typed uh and I just have to go to this",
    "start": "320160",
    "end": "327039"
  },
  {
    "text": "one thing to get everything and when Facebook started with graph qu",
    "start": "327039",
    "end": "335000"
  },
  {
    "text": "they built graph qu as a sin layer over their business layer that's how graph started so Facebook actually had a",
    "start": "335000",
    "end": "341960"
  },
  {
    "text": "monolith running for 500 million users and um they just had this sin",
    "start": "341960",
    "end": "349000"
  },
  {
    "text": "layer to expose the business layer in a much richer way to their front end engineers and suddenly we could build",
    "start": "349000",
    "end": "355440"
  },
  {
    "text": "for different uh application types device types uh uh experiences without",
    "start": "355440",
    "end": "362520"
  },
  {
    "text": "doing compromises or creating hundreds of specified request in our arrest or GP",
    "start": "362520",
    "end": "369199"
  },
  {
    "text": "grpc end points but there are also problems to",
    "start": "369199",
    "end": "375479"
  },
  {
    "text": "that right we have a monolith and we maybe have a ton of",
    "start": "375479",
    "end": "381240"
  },
  {
    "text": "teams around that that are working on this monol and when I worked back then when",
    "start": "381240",
    "end": "388360"
  },
  {
    "text": "graph actually came out at a Swiss insurance company we were",
    "start": "388360",
    "end": "393880"
  },
  {
    "text": "quite happy with the monolist in the beginning but as we added more and more teams to our project to build on",
    "start": "393880",
    "end": "400440"
  },
  {
    "text": "different parts of our data graph we um started to seeing some problems with",
    "start": "400440",
    "end": "406120"
  },
  {
    "text": "this approach while for the front end it's amazing like we have this one monolith you can pick and choose",
    "start": "406120",
    "end": "412280"
  },
  {
    "text": "whatever you want it can make problems in your back end where you suddenly are",
    "start": "412280",
    "end": "418160"
  },
  {
    "text": "standing on each other's foot by when you deploy or change something think about your your team wants to",
    "start": "418160",
    "end": "425440"
  },
  {
    "text": "update the net core version or wants to use a completely different technology",
    "start": "425440",
    "end": "430800"
  },
  {
    "text": "and the other team doesn't want to do that so you're kind of blocking each",
    "start": "430800",
    "end": "436680"
  },
  {
    "text": "other and uh while a monolist is quite good if you want to do code changes",
    "start": "436680",
    "end": "443280"
  },
  {
    "text": "across the graph uh it kind of also limits your flexibility so we started to see",
    "start": "443280",
    "end": "450440"
  },
  {
    "text": "difficulties to scale our graph and not in the way like throughput or data",
    "start": "450440",
    "end": "456240"
  },
  {
    "text": "scaling like we had problems to scale our graph to add more develop developers",
    "start": "456240",
    "end": "462560"
  },
  {
    "text": "to work on that thing so we reflected a bit back then",
    "start": "462560",
    "end": "469840"
  },
  {
    "text": "and uh when you look at how graph Quil was originally adapted when it came out",
    "start": "469840",
    "end": "475680"
  },
  {
    "text": "uh it kind of was you it kind of was used as a gateway ology on day one right",
    "start": "475680",
    "end": "482240"
  },
  {
    "text": "because people were or exactly front end Engineers were taking graph JS and they",
    "start": "482240",
    "end": "489360"
  },
  {
    "text": "would spin up a server and basically wrap the rest end points that their",
    "start": "489360",
    "end": "495319"
  },
  {
    "text": "backend Engineers provided because the backend Engineers were not immediately",
    "start": "495319",
    "end": "500919"
  },
  {
    "text": "ready to jump ships to graph so the front Engineers kind of created a BFF",
    "start": "500919",
    "end": "506960"
  },
  {
    "text": "with graph to rep the rest and points that were existing into",
    "start": "506960",
    "end": "512640"
  },
  {
    "text": "graph and if you look at that architecture we already see that we",
    "start": "512640",
    "end": "517839"
  },
  {
    "text": "still have this unified API that we want to have where we can shape how our business model should look like but we",
    "start": "517839",
    "end": "526120"
  },
  {
    "text": "also have like uh Downstream Services where each team could work",
    "start": "526120",
    "end": "533040"
  },
  {
    "text": "on and that is actually already distributed graph if you think of it in",
    "start": "533040",
    "end": "538600"
  },
  {
    "text": "a simple case right we have a graph qu Gateway and then we have Downstream services with whatever technology you",
    "start": "538600",
    "end": "545480"
  },
  {
    "text": "want to have there as graph evolved also the technique around evolved this so",
    "start": "545480",
    "end": "552600"
  },
  {
    "text": "initially we introduced or the graph ecosystem introduced something called schema stitching and everybody did that",
    "start": "552600",
    "end": "559600"
  },
  {
    "text": "a bit differently so what is schema stitching basically formalizing graph",
    "start": "559600",
    "end": "565360"
  },
  {
    "text": "Quil as a Gateway where we have Downstream graph services that we stitch together into",
    "start": "565360",
    "end": "573480"
  },
  {
    "text": "one graph this way each of our teams that",
    "start": "573480",
    "end": "579480"
  },
  {
    "text": "cares about a certain domain aspect or organizational aspect in our code can",
    "start": "579480",
    "end": "585399"
  },
  {
    "text": "own the part of their graph but it still had problems here",
    "start": "585399",
    "end": "590920"
  },
  {
    "text": "right because like in schema stitching as well in this uh in this initial",
    "start": "590920",
    "end": "596959"
  },
  {
    "text": "primitive approach we have the problem that you kind of have still this Gateway",
    "start": "596959",
    "end": "602320"
  },
  {
    "text": "as a monolith where you have to kind of negotiate if one person is doing a",
    "start": "602320",
    "end": "608160"
  },
  {
    "text": "change to their Downstream Services they always have to also do a change to the Gateway right to the composite schema",
    "start": "608160",
    "end": "617440"
  },
  {
    "text": "here so schema stitching when we talk about time frame a bit here so",
    "start": "617440",
    "end": "622519"
  },
  {
    "text": "graphically came out 2016 in 2017 we had",
    "start": "622519",
    "end": "627800"
  },
  {
    "text": "this new approaches of schema Stitch ching and there were tons of other",
    "start": "627800",
    "end": "634240"
  },
  {
    "text": "things coming off out after that like Apollo Federation there was was an",
    "start": "634240",
    "end": "639320"
  },
  {
    "text": "approach from atlassian uh we with hot chocolate had our own schema stitching version um and",
    "start": "639320",
    "end": "646680"
  },
  {
    "text": "the problem here was there is no open standard and there was also no",
    "start": "646680",
    "end": "652279"
  },
  {
    "text": "interoperability if you choose one approach you couldn't go with tools from the other company and that kind of had",
    "start": "652279",
    "end": "660120"
  },
  {
    "text": "this not so nice effect that you kind of was locked into one of these",
    "start": "660120",
    "end": "666639"
  },
  {
    "text": "vendors so the guild and chili cream The Guild is also a company in the graph",
    "start": "666639",
    "end": "672839"
  },
  {
    "text": "ecosystem and chili cream is my company we started working towards an open",
    "start": "672839",
    "end": "678440"
  },
  {
    "text": "stunard under the graph foundation and as we started our journey",
    "start": "678440",
    "end": "683839"
  },
  {
    "text": "there there were companies like IBM AWS haura quickly latching on to create a",
    "start": "683839",
    "end": "689639"
  },
  {
    "text": "new standard in the graph grid ecosystem and that is uh called the",
    "start": "689639",
    "end": "695160"
  },
  {
    "text": "composite schema specification the Prototype was originally called fusion um but now the",
    "start": "695160",
    "end": "701399"
  },
  {
    "text": "more formal name is the composite schema spec and if you're interested in the specification process then you can also",
    "start": "701399",
    "end": "709600"
  },
  {
    "text": "uh join these meetings it's now under the graph go foundation and uh there's this composite schema specification",
    "start": "709600",
    "end": "716360"
  },
  {
    "text": "repository so if you're interested you can join that",
    "start": "716360",
    "end": "723040"
  },
  {
    "text": "effort so with this approach we want to embrace graph we didn't want to take",
    "start": "723040",
    "end": "729040"
  },
  {
    "text": "over these um kind of vendor locked Solutions where you even maybe broke a",
    "start": "729040",
    "end": "736560"
  },
  {
    "text": "bit the graph qu contract we really want to embrace graph qu as is and we want to",
    "start": "736560",
    "end": "743279"
  },
  {
    "text": "allow any schema or any graph quare server to be part of such a distributed schema",
    "start": "743279",
    "end": "750320"
  },
  {
    "text": "and we also want to support and use all the graph C patterns what are graph C patterns typically we refer to the",
    "start": "750320",
    "end": "757399"
  },
  {
    "text": "Enterprise graph C patterns like the relay server patterns like the node pattern uh or the cursor based uh",
    "start": "757399",
    "end": "765399"
  },
  {
    "text": "pagination patterns and whatnot so with this new approach and I",
    "start": "765399",
    "end": "771480"
  },
  {
    "text": "show you some codes from from the first prototypes that we have uh formalizes a",
    "start": "771480",
    "end": "777399"
  },
  {
    "text": "bit the naming scheme here so when we talk about this part in the middle we actually talking about the composite",
    "start": "777399",
    "end": "784000"
  },
  {
    "text": "schema and the downstream services are Source",
    "start": "784000",
    "end": "789519"
  },
  {
    "text": "schemas Behind These Source schemas can be still your microservices or what not",
    "start": "789519",
    "end": "795079"
  },
  {
    "text": "depending on how you how complex you want to build that the idea behind that is that each team can own a part of the",
    "start": "795079",
    "end": "802240"
  },
  {
    "text": "graph and can drive changes from the source schemas to the composite schema",
    "start": "802240",
    "end": "807639"
  },
  {
    "text": "without reloading or redeploying the Gateway",
    "start": "807639",
    "end": "813720"
  },
  {
    "text": "right this approach is meant to be collaborative so you are working with",
    "start": "813720",
    "end": "819440"
  },
  {
    "text": "other teams on this graph and we want to basically uh unblock",
    "start": "819440",
    "end": "825800"
  },
  {
    "text": "you and collaborative me means really that you and your teammates have an",
    "start": "825800",
    "end": "832160"
  },
  {
    "text": "understanding about what certain types mean in your schema like what is a user",
    "start": "832160",
    "end": "837560"
  },
  {
    "text": "what is a review what is a product right you have a shared understanding of your",
    "start": "837560",
    "end": "842839"
  },
  {
    "text": "business model and it's composable and compos composable means that types can exist",
    "start": "842839",
    "end": "851120"
  },
  {
    "text": "across graphs like you can have the same type in different versions existing on",
    "start": "851120",
    "end": "858959"
  },
  {
    "text": "different subgraphs for instance in this example we have a user type that lives on the accounts",
    "start": "858959",
    "end": "866040"
  },
  {
    "text": "service and on the account service this user type has maybe an ID name birthday",
    "start": "866040",
    "end": "871880"
  },
  {
    "text": "username but it also lives on the review service and on the review service the user is a same user but has different",
    "start": "871880",
    "end": "879240"
  },
  {
    "text": "properties we have some overlap here like IDE and name but we also have a field reviews because this user",
    "start": "879240",
    "end": "886759"
  },
  {
    "text": "represents on the review service the author of some reviews so this user maybe has the reviews collection of the",
    "start": "886759",
    "end": "894199"
  },
  {
    "text": "revs he or she wrote when the graphical comp composite",
    "start": "894199",
    "end": "899519"
  },
  {
    "text": "schema specification composes the composite schema it can merge these",
    "start": "899519",
    "end": "905440"
  },
  {
    "text": "types because we know semantically they are the same that means we can kind of",
    "start": "905440",
    "end": "910880"
  },
  {
    "text": "integrate them and we have now overlapping data",
    "start": "910880",
    "end": "915920"
  },
  {
    "text": "and we'll show you in the demo actually what the that can do um in the query",
    "start": "915920",
    "end": "921880"
  },
  {
    "text": "planning process and we have data that is specific to one or the other subgraph",
    "start": "921880",
    "end": "927560"
  },
  {
    "text": "like bir data and username or only lives on accounts and reviews only lives on",
    "start": "927560",
    "end": "933240"
  },
  {
    "text": "reviews this approach is evolvable and what we mean with that is that's evolvable by each team so each team can",
    "start": "933240",
    "end": "941519"
  },
  {
    "text": "evolve the schema in isolation so the accounts team for instance can introduce a new feel to that type without talking",
    "start": "941519",
    "end": "949040"
  },
  {
    "text": "to the revie the revie team right they can just add that because it's in their",
    "start": "949040",
    "end": "955120"
  },
  {
    "text": "domain and then it will just merge the moment they publish their Source schema",
    "start": "955120",
    "end": "961319"
  },
  {
    "text": "the schema will merge and the new field will be available so there's no blocking anymore or no coordination for",
    "start": "961319",
    "end": "969759"
  },
  {
    "text": "deployment but if the revie team for instance introduces a new field that we",
    "start": "969759",
    "end": "975160"
  },
  {
    "text": "already introduced with a different type so there's a mismatch in this instance we get a compile error right when we are",
    "start": "975160",
    "end": "981959"
  },
  {
    "text": "building our source schema so you have compile time security that you're not breaking the composed graph",
    "start": "981959",
    "end": "990519"
  },
  {
    "text": "this approach is is explicit and that means we are not guessing what you mean we are looking at the types it's atics",
    "start": "990519",
    "end": "997399"
  },
  {
    "text": "and at annotations let's have a look at that so",
    "start": "997399",
    "end": "1002720"
  },
  {
    "text": "I prepared a little demo here and in this demo I have basically a webshop API",
    "start": "1002720",
    "end": "1009519"
  },
  {
    "text": "we have here our Gateway and uh let's get that out of the way and let's just",
    "start": "1009519",
    "end": "1014920"
  },
  {
    "text": "start our Gateway this Gateway is not yet configured it's configured the",
    "start": "1014920",
    "end": "1021440"
  },
  {
    "text": "configuration is basically the schema of each subgraph or of each Source schema",
    "start": "1021440",
    "end": "1028400"
  },
  {
    "text": "so we have here four Source schemas there's an accounts schema here that's a",
    "start": "1028400",
    "end": "1034438"
  },
  {
    "text": "node service and this node service has a schema that cares just about users we",
    "start": "1034439",
    "end": "1040480"
  },
  {
    "text": "have here user with display name birth date and a couple of other types right",
    "start": "1040480",
    "end": "1045880"
  },
  {
    "text": "so the first thing to get this schema into to our Gateway is to compose it so",
    "start": "1045880",
    "end": "1052120"
  },
  {
    "text": "we go to our console and then we say Fusion compose we point to the Gateway",
    "start": "1052120",
    "end": "1059679"
  },
  {
    "text": "and we also point to the subgraph or the source schema that we want to compose",
    "start": "1059679",
    "end": "1065559"
  },
  {
    "text": "into our Gateway so I'm running that against the account subgraph here and",
    "start": "1065559",
    "end": "1070960"
  },
  {
    "text": "then I already can go to our Gateway as I said it's hot reload so we can just go",
    "start": "1070960",
    "end": "1077320"
  },
  {
    "text": "here let me just get that away here okay and then we can have a look at",
    "start": "1077320",
    "end": "1085039"
  },
  {
    "text": "our schema and then we can see that all the types that I had in accounts are now",
    "start": "1085039",
    "end": "1091240"
  },
  {
    "text": "available through my Gateway maybe you have noticed that I didn't even start my uh subgraph here so",
    "start": "1091240",
    "end": "1099080"
  },
  {
    "text": "this is still not running uh my node server but I already have on my Gateway all the informations",
    "start": "1099080",
    "end": "1105440"
  },
  {
    "text": "about the schema I could even run it because it could have happen that",
    "start": "1105440",
    "end": "1110520"
  },
  {
    "text": "sometimes your subgraph maybe is not available anymore so the Gateway has to cope with",
    "start": "1110520",
    "end": "1116640"
  },
  {
    "text": "that right so we can go here to the users and then maybe uh select the nodes",
    "start": "1116640",
    "end": "1122880"
  },
  {
    "text": "and from the nodes we take the name so the username and what happens here is basically that the thing is not there",
    "start": "1122880",
    "end": "1131120"
  },
  {
    "text": "and we do this thing that we would do in graphql and would deliver a partial result at this point there's no point to",
    "start": "1131120",
    "end": "1137960"
  },
  {
    "text": "a partial result because the whole server is down but um if some of your",
    "start": "1137960",
    "end": "1143200"
  },
  {
    "text": "subgraphs at some point in time are offline then we just compose partial results as Allowed by the graph",
    "start": "1143200",
    "end": "1150080"
  },
  {
    "text": "specification right and then your front end can decide if it wants to deal with",
    "start": "1150080",
    "end": "1155400"
  },
  {
    "text": "partial results or just reject them okay let's start actually the",
    "start": "1155400",
    "end": "1160919"
  },
  {
    "text": "downstream service here and then let's go back to our Gateway rerun that and then the data is",
    "start": "1160919",
    "end": "1168400"
  },
  {
    "text": "just there okay that's not very impressive um but it will become more",
    "start": "1168400",
    "end": "1175280"
  },
  {
    "text": "exciting as we go um but when we look at this is we cannot really see what's",
    "start": "1175280",
    "end": "1182000"
  },
  {
    "text": "happening here and in into banana cake pop banana cake is this graph IDE here",
    "start": "1182000",
    "end": "1187919"
  },
  {
    "text": "we have built in a query plan visualizer so we can say tell me what's actually",
    "start": "1187919",
    "end": "1193320"
  },
  {
    "text": "happening in this request and then we can have a look what is happening here",
    "start": "1193320",
    "end": "1198840"
  },
  {
    "text": "in this instance we are fetching from the account subgraph some data and then we compose it we can also look at the",
    "start": "1198840",
    "end": "1206400"
  },
  {
    "text": "texal representation here you can see that the initial request is coming in",
    "start": "1206400",
    "end": "1211440"
  },
  {
    "text": "and then we have a sequence in which we resolve the data in this case from the account subgraph",
    "start": "1211440",
    "end": "1218480"
  },
  {
    "text": "right okay because we just have one subgraph integrated here uh it's not",
    "start": "1218480",
    "end": "1224559"
  },
  {
    "text": "very exciting let's do a bit more so let's for start the uh product",
    "start": "1224559",
    "end": "1232159"
  },
  {
    "text": "subgraph uh so also a node server and uh I'm going to go ahead and",
    "start": "1232159",
    "end": "1239640"
  },
  {
    "text": "start all of them and then we can uh start composing them into our graph so the first thing I",
    "start": "1239640",
    "end": "1247679"
  },
  {
    "text": "want to compose into that is actually the reviews service that's the one we",
    "start": "1247679",
    "end": "1253679"
  },
  {
    "text": "also had in the slides so I'm going here and say Fusion compose Rev into my",
    "start": "1253679",
    "end": "1259720"
  },
  {
    "text": "Gateway so when I go back to my Gateway and refresh my schema here I can",
    "start": "1259720",
    "end": "1266559"
  },
  {
    "text": "see that I have now more types so I have now a mutation type here subscription type and also if I look at my root",
    "start": "1266559",
    "end": "1274400"
  },
  {
    "text": "Fields here I have products I have reviews I can dive from the user now here into the reviews so the types are",
    "start": "1274400",
    "end": "1282320"
  },
  {
    "text": "now integrated from these two services and from the reviews I could go again to",
    "start": "1282320",
    "end": "1289120"
  },
  {
    "text": "the user um and I also have here hint to the product product at the moment just has",
    "start": "1289120",
    "end": "1295960"
  },
  {
    "text": "an ID but I could query that so let's maybe get the reviews of this",
    "start": "1295960",
    "end": "1303520"
  },
  {
    "text": "user uh and the reviews and then we want the body of the",
    "start": "1304480",
    "end": "1312919"
  },
  {
    "text": "review run that and have a look at the pray plan",
    "start": "1313520",
    "end": "1319000"
  },
  {
    "text": "and what is surprising is that we get all the data now from reviews because we know about",
    "start": "1319000",
    "end": "1327720"
  },
  {
    "text": "overlaps in my presentation I had in both Services ID and name in both",
    "start": "1327720",
    "end": "1333360"
  },
  {
    "text": "Services these are overlapping data and uh the composite schema specification",
    "start": "1333360",
    "end": "1339159"
  },
  {
    "text": "takes advantage of this overlapping data and can rewrite the credit planner to",
    "start": "1339159",
    "end": "1345880"
  },
  {
    "text": "only get the data from one hop right right you want to reduce the request that you're doing to your Downstream",
    "start": "1345880",
    "end": "1352279"
  },
  {
    "text": "services so what we are doing is basically um figuring out that we can",
    "start": "1352279",
    "end": "1358400"
  },
  {
    "text": "get all the data that is requested here actually from the reviews graph instead of the accounts graph the moment I'm",
    "start": "1358400",
    "end": "1366039"
  },
  {
    "text": "asking here for instance for the birth date day uh some data that is only available on the accounts",
    "start": "1366039",
    "end": "1372799"
  },
  {
    "text": "subgraph um we are rewriting this thing here you can see now we are getting still the biggest block top of data from",
    "start": "1372799",
    "end": "1379360"
  },
  {
    "text": "the reviews graph and then we are going here to the accounts graph and you can see this graph will export basically the",
    "start": "1379360",
    "end": "1387760"
  },
  {
    "text": "user ID we are feeding that in as a batch into the next request so if you",
    "start": "1387760",
    "end": "1393440"
  },
  {
    "text": "look into the Json here you can see that this is the request we sent to rev now",
    "start": "1393440",
    "end": "1399679"
  },
  {
    "text": "we are over fetching the user ID because we didn't request that here and then we",
    "start": "1399679",
    "end": "1404919"
  },
  {
    "text": "are feeding that into the next request as a batch you can see we are feeding",
    "start": "1404919",
    "end": "1410919"
  },
  {
    "text": "here an array of user IDs into the next request and get uh batched out here the",
    "start": "1410919",
    "end": "1416720"
  },
  {
    "text": "birth date then we are composing the graph and you still have the standard graphical result here now with the birth",
    "start": "1416720",
    "end": "1424120"
  },
  {
    "text": "date and then the reviews here okay let's put some more stuff in",
    "start": "1424120",
    "end": "1430360"
  },
  {
    "text": "there uh to make it a bit more interesting so for instance we can go",
    "start": "1430360",
    "end": "1436000"
  },
  {
    "text": "now to the products catalog because we have this reviews about the uh about a",
    "start": "1436000",
    "end": "1441320"
  },
  {
    "text": "product by a user and now we are integrating here the products",
    "start": "1441320",
    "end": "1446559"
  },
  {
    "text": "catalog and then we can have a look at our schema again so when we go now in our query",
    "start": "1446559",
    "end": "1453840"
  },
  {
    "text": "type here I can go in users user go through reviews and now we have products",
    "start": "1453840",
    "end": "1459880"
  },
  {
    "text": "and you have all the data about products like the picture of the product we have the name of the product we have a weight",
    "start": "1459880",
    "end": "1466840"
  },
  {
    "text": "of the product we have a dimension so we have a lot more information about the product so we could for instance now",
    "start": "1466840",
    "end": "1474120"
  },
  {
    "text": "query here the product the product name for instance is interesting to us uh rerun that and then",
    "start": "1474120",
    "end": "1481960"
  },
  {
    "text": "you can see the query planner has adapted to this uh we now have here",
    "start": "1481960",
    "end": "1487640"
  },
  {
    "text": "these initial fetch bu to reviews but then we parallelize and fetch two",
    "start": "1487640",
    "end": "1493760"
  },
  {
    "text": "batches for all the products in our list and all the accounts in our list from these other two subgraphs so the CR plan",
    "start": "1493760",
    "end": "1501960"
  },
  {
    "text": "evolves and makes sure that the data is always resolved in the most efficient",
    "start": "1501960",
    "end": "1507159"
  },
  {
    "text": "way from your Downstream Services okay so let's do one more thing",
    "start": "1507159",
    "end": "1514600"
  },
  {
    "text": "and then we can have a look at some other aspects of this so we have here",
    "start": "1514600",
    "end": "1520159"
  },
  {
    "text": "also a service that is called shipping and shipping just has an algorithm to",
    "start": "1520159",
    "end": "1525720"
  },
  {
    "text": "estimate the the shipping time that the product needs if you want to order it so",
    "start": "1525720",
    "end": "1531080"
  },
  {
    "text": "we're going to just compose it naively as far as we went now I didn't",
    "start": "1531080",
    "end": "1538960"
  },
  {
    "text": "do anything to my subgraphs I just said okay this is a subgraph composite uh and",
    "start": "1538960",
    "end": "1544960"
  },
  {
    "text": "the composition figured everything out automatically so when we go now to shipping",
    "start": "1544960",
    "end": "1551840"
  },
  {
    "text": "here and I compose that in and refresh that then you can see",
    "start": "1551840",
    "end": "1559279"
  },
  {
    "text": "that the shipping uh graph that we integrated now into our",
    "start": "1559279",
    "end": "1564960"
  },
  {
    "text": "product yeah there's a deliver uh the delivery estimate so when this product",
    "start": "1565399",
    "end": "1570679"
  },
  {
    "text": "would be available for shipping a maximum time and a minimum time but you can see this has arguments so in order",
    "start": "1570679",
    "end": "1578200"
  },
  {
    "text": "to calculate the shipping estimate we actually need a size and weight and we",
    "start": "1578200",
    "end": "1583320"
  },
  {
    "text": "need a zip code for this product actually when we look here at the product from the product service we",
    "start": "1583320",
    "end": "1590120"
  },
  {
    "text": "already have the information in the dimensions object but this lives on a different graph so what we can do now is",
    "start": "1590120",
    "end": "1599520"
  },
  {
    "text": "actually give our composition uh a bit of metadata to",
    "start": "1599520",
    "end": "1606320"
  },
  {
    "text": "be able to resolve this data automatically and not expose it as",
    "start": "1606320",
    "end": "1611880"
  },
  {
    "text": "arguments here so what I do is I go here to my shipping's subgraph and I can add",
    "start": "1611880",
    "end": "1618919"
  },
  {
    "text": "another graphql document that's the schema extensions.",
    "start": "1618919",
    "end": "1625919"
  },
  {
    "text": "graphql and then I could say I want to extend the product and by extending the product that's standard graph syntax let",
    "start": "1625919",
    "end": "1633600"
  },
  {
    "text": "me actually zoom in that is standard graph C syntax here",
    "start": "1633600",
    "end": "1638640"
  },
  {
    "text": "where I say I want to extend the product to enrich it with some metadata and then I could say I want to require this size",
    "start": "1638640",
    "end": "1645640"
  },
  {
    "text": "here and I want to require the weight here and I'm specifying that this value",
    "start": "1645640",
    "end": "1651799"
  },
  {
    "text": "comes actually from Dimension and then from the size property that is standard",
    "start": "1651799",
    "end": "1657360"
  },
  {
    "text": "graph qu syntax it's the uh selection syntax that we anyway have in graph qu",
    "start": "1657360",
    "end": "1662720"
  },
  {
    "text": "that is relatively to the product if I had a typo in here we would get a build",
    "start": "1662720",
    "end": "1668480"
  },
  {
    "text": "error so there is no magic string it's compiled so when I go now to my",
    "start": "1668480",
    "end": "1674679"
  },
  {
    "text": "composition here I can say Fusion compos again",
    "start": "1674679",
    "end": "1681240"
  },
  {
    "text": "so while I'm composing here my Gateway never restarts because what we do in the",
    "start": "1681240",
    "end": "1686480"
  },
  {
    "text": "Gateway when the new schema comes in is actually all the requests that are running at the moment will finish",
    "start": "1686480",
    "end": "1692320"
  },
  {
    "text": "executing against the old schema while we are slowly phasing in a new schema",
    "start": "1692320",
    "end": "1698840"
  },
  {
    "text": "version so now let's go quickly to our Gateway here we refresh that if I look",
    "start": "1698840",
    "end": "1705080"
  },
  {
    "text": "at my product here then you can see we don't have any arguments anymore to provide this data",
    "start": "1705080",
    "end": "1712000"
  },
  {
    "text": "because the Gateway now resolves this data internally so if I run here my",
    "start": "1712000",
    "end": "1717519"
  },
  {
    "text": "query and uh want to get the delivery estimate I have to provide the ZIP",
    "start": "1717519",
    "end": "1725559"
  },
  {
    "text": "code but I no longer have to provide any other information so when I run that you can",
    "start": "1726120",
    "end": "1734039"
  },
  {
    "text": "see that our quy plan gets bigger so we have here this parallel resolve still the products and the accounts but then",
    "start": "1734039",
    "end": "1741720"
  },
  {
    "text": "in the product here you can see we are exporting so we are getting in the",
    "start": "1741720",
    "end": "1746960"
  },
  {
    "text": "product ID but we are exporting into the query plan the product Dimension size",
    "start": "1746960",
    "end": "1752080"
  },
  {
    "text": "and weight and that is consumed by the shipping uh subgraph to produce the last",
    "start": "1752080",
    "end": "1759640"
  },
  {
    "text": "piece of information and if we look at that we can see here that we are producing for this user has a review and",
    "start": "1759640",
    "end": "1767519"
  },
  {
    "text": "the review in this case um produces uh the delivery estimate here and the data",
    "start": "1767519",
    "end": "1774399"
  },
  {
    "text": "is completely resolved internally",
    "start": "1774399",
    "end": "1779919"
  },
  {
    "text": "okay so let's do one more aspect of that so while I compos there like I I don't",
    "start": "1779919",
    "end": "1787360"
  },
  {
    "text": "have to care about transport that is what the Gateway actually does for me so we figure out what uh what each subgraph",
    "start": "1787360",
    "end": "1794320"
  },
  {
    "text": "speaks is it GPC is it um is it standard graphical over HTTP is it websockets or",
    "start": "1794320",
    "end": "1802039"
  },
  {
    "text": "whatever and we also recognize each graph qu feature like at the moment we",
    "start": "1802039",
    "end": "1807720"
  },
  {
    "text": "just did queries right but you can already see that we also support subscriptions here and that is real time",
    "start": "1807720",
    "end": "1814360"
  },
  {
    "text": "querying on my Downstream graph quer servers and we are composing these query plans in real time that means let me",
    "start": "1814360",
    "end": "1822880"
  },
  {
    "text": "quickly go to My Demo here uh I could open another",
    "start": "1822880",
    "end": "1828679"
  },
  {
    "text": "and banana cake pop instance is that already on the right",
    "start": "1828679",
    "end": "1836000"
  },
  {
    "text": "one no quickly sign",
    "start": "1836000",
    "end": "1844120"
  },
  {
    "text": "into no not this one",
    "start": "1845720",
    "end": "1851840"
  },
  {
    "text": "yeah actually let me just grab this guy",
    "start": "1854679",
    "end": "1859919"
  },
  {
    "text": "here okay so I'm just grabbing the URL to my",
    "start": "1863120",
    "end": "1869399"
  },
  {
    "text": "Gateway pasting that in I don't care and then we can just do a",
    "start": "1869399",
    "end": "1876919"
  },
  {
    "text": "subscription here so I will subscribe to the reviews of my",
    "start": "1876919",
    "end": "1884240"
  },
  {
    "text": "gateway and I can run that and what you can see is nothing because like we subscribed the subscription basically is",
    "start": "1885399",
    "end": "1892799"
  },
  {
    "text": "we subscribed to a message bus and now we are waiting for something to happen in this case we're waiting for a review",
    "start": "1892799",
    "end": "1898960"
  },
  {
    "text": "to be written and just to show you uh like in this instance I'm just going here for body and stars but I also could",
    "start": "1898960",
    "end": "1906360"
  },
  {
    "text": "get the author and all the data that we have on the standard queries right so",
    "start": "1906360",
    "end": "1911679"
  },
  {
    "text": "this is waiting now for something to happen so let me just quickly open here",
    "start": "1911679",
    "end": "1917440"
  },
  {
    "text": "a ation and hope this",
    "start": "1917440",
    "end": "1922720"
  },
  {
    "text": "works and now I can create a new review here and uh in this case the product ID",
    "start": "1922720",
    "end": "1930279"
  },
  {
    "text": "is wrong or which one okay let me quickly fix",
    "start": "1930279",
    "end": "1937480"
  },
  {
    "text": "that so we need some correct IDs for the user and for the product",
    "start": "1937720",
    "end": "1947159"
  },
  {
    "text": "okay so I'm grabbing this user ID",
    "start": "1948600",
    "end": "1952760"
  },
  {
    "text": "here as an author so we are writing um this for this review in the context",
    "start": "1953679",
    "end": "1961639"
  },
  {
    "text": "of this author and then we are also grabbing here the product",
    "start": "1961639",
    "end": "1967720"
  },
  {
    "text": "ID sorry and we just paste that",
    "start": "1968039",
    "end": "1973638"
  },
  {
    "text": "in okay let's re arrange that and we run that and you can see",
    "start": "1976120",
    "end": "1982240"
  },
  {
    "text": "it's in real time so also real time data just composes in this subgraph so if one",
    "start": "1982240",
    "end": "1987919"
  },
  {
    "text": "team decides to have a new realtime API we could just go here for instance",
    "start": "1987919",
    "end": "1994679"
  },
  {
    "text": "into our shipping graph and we could say okay we want to now have a new graph",
    "start": "1994679",
    "end": "2000360"
  },
  {
    "text": "quer subscription this is my subgraph so I could just introduce here a standard",
    "start": "2000360",
    "end": "2005720"
  },
  {
    "text": "class subscription class there this is my subscription just",
    "start": "2005720",
    "end": "2013039"
  },
  {
    "text": "subscribe subscription type and then we could um like a subscription typically",
    "start": "2013039",
    "end": "2020320"
  },
  {
    "text": "has a stream so I could just have here Asun inable as a",
    "start": "2020320",
    "end": "2025480"
  },
  {
    "text": "stream and that is a string um on",
    "start": "2025480",
    "end": "2032240"
  },
  {
    "text": "Fu let's make it as and then we would do maybe uh task.",
    "start": "2033600",
    "end": "2041600"
  },
  {
    "text": "wait just to have some delay in",
    "start": "2041600",
    "end": "2046039"
  },
  {
    "text": "there ah delay sorry maybe one second or let's wait two",
    "start": "2047720",
    "end": "2057359"
  },
  {
    "text": "seconds then we return here a string like a yield",
    "start": "2057800",
    "end": "2064760"
  },
  {
    "text": "return and and we could repeat that one two so this would raise three",
    "start": "2066560",
    "end": "2074839"
  },
  {
    "text": "events is that good no this needs to be static and then we have the actual event",
    "start": "2074839",
    "end": "2082358"
  },
  {
    "text": "this is our stream and then we have the actual event",
    "start": "2082359",
    "end": "2089079"
  },
  {
    "text": "hook static and this returns just the string on fu",
    "start": "2089079",
    "end": "2097440"
  },
  {
    "text": "okay and this gets an event message it's bit unscripted here this",
    "start": "2100640",
    "end": "2107359"
  },
  {
    "text": "the payload and then we just return in this case the the payload this is our",
    "start": "2107359",
    "end": "2113440"
  },
  {
    "text": "standard resolver typically you have a you do other stuff like loading something from the database or whatever",
    "start": "2113440",
    "end": "2120520"
  },
  {
    "text": "this is our subscribe resolver and we subscribe",
    "start": "2120520",
    "end": "2125760"
  },
  {
    "text": "with our stream so so this is how we subscribe to the",
    "start": "2125800",
    "end": "2131440"
  },
  {
    "text": "data so I did this change just to my shipping",
    "start": "2131440",
    "end": "2136480"
  },
  {
    "text": "subgraph and now I can go to my shipping subgraph just restart it",
    "start": "2136480",
    "end": "2142079"
  },
  {
    "text": "maybe so in order to get the schema dumped in hot chocolate we have like",
    "start": "2142079",
    "end": "2148280"
  },
  {
    "text": "this schema export where we can output the",
    "start": "2148280",
    "end": "2153400"
  },
  {
    "text": "schema so I run that and then we should have here a subscription type and you can see here's",
    "start": "2153400",
    "end": "2161319"
  },
  {
    "text": "our on Fu event we can now run our subgraph",
    "start": "2161319",
    "end": "2167280"
  },
  {
    "text": "again then compose this",
    "start": "2167280",
    "end": "2171400"
  },
  {
    "text": "thing and then we have the chain uh the change in our",
    "start": "2172359",
    "end": "2179520"
  },
  {
    "text": "Gateway and could call that like the the the cycle to get that in your graph is",
    "start": "2179520",
    "end": "2185440"
  },
  {
    "text": "very quickly like you can really Drive Chang from your subgraphs to the overall",
    "start": "2185440",
    "end": "2190720"
  },
  {
    "text": "Gateway so if I refresh that I have a new schema and then I can just ask for",
    "start": "2190720",
    "end": "2196040"
  },
  {
    "text": "the subscription that I have here on Fu run that and then I should get three",
    "start": "2196040",
    "end": "2202440"
  },
  {
    "text": "events this is the first second and then the third is coming and then this is a",
    "start": "2202440",
    "end": "2208280"
  },
  {
    "text": "finite subscription so it will unsubscribe and it's done just to show you a bit the cycle",
    "start": "2208280",
    "end": "2214440"
  },
  {
    "text": "from going from your subgraph to the company it schema is very quickly like",
    "start": "2214440",
    "end": "2220240"
  },
  {
    "text": "the turnaround is very quickly just basically uh publish your subgraph and then the overall schema is U being",
    "start": "2220240",
    "end": "2230480"
  },
  {
    "text": "composed okay let's talk a bit about the key things that we have in the composite",
    "start": "2230880",
    "end": "2236920"
  },
  {
    "text": "schema specification like the configuration is decentralized and what that means is your subgraph is the",
    "start": "2236920",
    "end": "2244319"
  },
  {
    "text": "configuration and that's actually what I did there I changed changed something in the subgraph and it changed the overall",
    "start": "2244319",
    "end": "2252079"
  },
  {
    "text": "graph and that really um unblocks your teams they can ship in isolation they",
    "start": "2252079",
    "end": "2259240"
  },
  {
    "text": "can work in isolation without coordinating every change like you are coordinating because it's collaborative",
    "start": "2259240",
    "end": "2266240"
  },
  {
    "text": "what certain types mean but in your domain you can just do it's a declarative approach and that",
    "start": "2266240",
    "end": "2274520"
  },
  {
    "text": "means like uh if we cannot infer something from your types you just",
    "start": "2274520",
    "end": "2281560"
  },
  {
    "text": "annotate it with these directives that we use like the require directive you basically give us declarative",
    "start": "2281560",
    "end": "2288160"
  },
  {
    "text": "information about what things mean in your graph we do composition on build",
    "start": "2288160",
    "end": "2294000"
  },
  {
    "text": "that's what I do on the console typically that runs in your cicd pipeline so the moment you ship in your",
    "start": "2294000",
    "end": "2300920"
  },
  {
    "text": "CCD pipeline you wouldn't run this uh Fusion compost command which will",
    "start": "2300920",
    "end": "2306400"
  },
  {
    "text": "publish that to your gateway and Publishing it to your gateway what does it mean it could be a",
    "start": "2306400",
    "end": "2312560"
  },
  {
    "text": "blob storage or whatever where your gateway listens to and the the standard",
    "start": "2312560",
    "end": "2318440"
  },
  {
    "text": "that we are working on the composite schema standard is open it's under the it's developed under the graph",
    "start": "2318440",
    "end": "2324640"
  },
  {
    "text": "Foundation uh and the graph Foundation is part of the Linux foundation so it makes sure that this stet is under",
    "start": "2324640",
    "end": "2332880"
  },
  {
    "text": "published under a permissible license and everybody can um implement it on",
    "start": "2332880",
    "end": "2338079"
  },
  {
    "text": "their own so it's um available across platforms and we are working with companies like AWS to get it um more",
    "start": "2338079",
    "end": "2345760"
  },
  {
    "text": "widely adapted so Source schemas in this approach can be valid on their own as I",
    "start": "2345760",
    "end": "2352440"
  },
  {
    "text": "said we are embracing all graph curve features and best practices and uh like",
    "start": "2352440",
    "end": "2358920"
  },
  {
    "text": "the last thing is overlapping data overlapping data can be used to improve performance that's the first thing I",
    "start": "2358920",
    "end": "2364440"
  },
  {
    "text": "showed right when we when after we introduced this rev subgraph we were",
    "start": "2364440",
    "end": "2370280"
  },
  {
    "text": "still just fetching from one graph because we recognized there was overlapping data and we could reduce the",
    "start": "2370280",
    "end": "2377520"
  },
  {
    "text": "impact to your Downstream systems so let's talk about query planning a bit so",
    "start": "2377520",
    "end": "2383480"
  },
  {
    "text": "query planning uh we looked at that like we looked at the shapes there what we do",
    "start": "2383480",
    "end": "2389000"
  },
  {
    "text": "in hot chocolate is essentially getting you a quick query plan immediately um",
    "start": "2389000",
    "end": "2395200"
  },
  {
    "text": "and we are using a cheap algorithm to do that basically we're figuring out the biggest chunk that we can get from",
    "start": "2395200",
    "end": "2401599"
  },
  {
    "text": "somewhere and then we're getting smaller and smaller we are doing also after that",
    "start": "2401599",
    "end": "2408640"
  },
  {
    "text": "something called profile guided optimizations so we are trying to figure out a faster query plan and then we are",
    "start": "2408640",
    "end": "2416040"
  },
  {
    "text": "issuing this query plan to 20% of your machines if we've see that the open",
    "start": "2416040",
    "end": "2422400"
  },
  {
    "text": "Telemetry feedback implies that this is not good uh or it's not lot faster then",
    "start": "2422400",
    "end": "2428359"
  },
  {
    "text": "we are um dropping this cray plan if it's good we are expanding it to 100% of",
    "start": "2428359",
    "end": "2434160"
  },
  {
    "text": "your machines so your qu plan can become faster over",
    "start": "2434160",
    "end": "2440400"
  },
  {
    "text": "time this is all driven by om Telemetry let me show you that a bit like uh",
    "start": "2440400",
    "end": "2446599"
  },
  {
    "text": "banana cake pop has like a whole suit to it this is for instance our Gateway",
    "start": "2446599",
    "end": "2454359"
  },
  {
    "text": "overview and where you can see for instance at this point we have here three clients a web client a mobile",
    "start": "2456079",
    "end": "2462119"
  },
  {
    "text": "client and some other clients that that are not doing so much but you can see here is my Gateway um and I can also see",
    "start": "2462119",
    "end": "2469960"
  },
  {
    "text": "my subgraphs here I could drill into for instance the review subgraph here um",
    "start": "2469960",
    "end": "2475920"
  },
  {
    "text": "have an overview at what is happening this is available at development time we are integrating that at the moment with",
    "start": "2475920",
    "end": "2482560"
  },
  {
    "text": "Aspire so you get also the real time Telemetry from as directly in that",
    "start": "2482560",
    "end": "2488720"
  },
  {
    "text": "dashboard our dashboard is a bit U nicer than the Aspire Aspire dashboard but the data is",
    "start": "2488720",
    "end": "2495920"
  },
  {
    "text": "then coming in this instance from the Aspire instance so you get immediately your your data but more optimized of",
    "start": "2495920",
    "end": "2502880"
  },
  {
    "text": "graph and the the Gateway request we can see for instance uh this is the downstream request that we get to this",
    "start": "2502880",
    "end": "2511000"
  },
  {
    "text": "subgraph and uh we are doing for instance here two database requests",
    "start": "2511000",
    "end": "2516839"
  },
  {
    "text": "where we can can see also in here this is a subgraph it uses data loader so we can also see that the data is being uh",
    "start": "2516839",
    "end": "2524560"
  },
  {
    "text": "batched so that's why we have this Gap here first we resolve basically the main",
    "start": "2524560",
    "end": "2530800"
  },
  {
    "text": "data and then we are batching these uh four resolvers that we have here in one go to the database before we uh",
    "start": "2530800",
    "end": "2537960"
  },
  {
    "text": "transform the request you get all these deep insights into how your subgraph is",
    "start": "2537960",
    "end": "2543640"
  },
  {
    "text": "uh working and you can also have that on the overall graph like I could go also into the distributed view",
    "start": "2543640",
    "end": "2551040"
  },
  {
    "text": "here and get uh insights for instance into my Gateway for instance here we are",
    "start": "2551040",
    "end": "2557599"
  },
  {
    "text": "going into the gateway and you see down here we going into the subgraph uh and",
    "start": "2557599",
    "end": "2562839"
  },
  {
    "text": "in the subgraph we're going in the database and then we going in another graph server so you can also see that in",
    "start": "2562839",
    "end": "2569559"
  },
  {
    "text": "a distributed way that makes it very very simple to optimize this",
    "start": "2569559",
    "end": "2575040"
  },
  {
    "text": "thing uh and to um grow your solution with your uh Piers what you also uh get",
    "start": "2575040",
    "end": "2583200"
  },
  {
    "text": "is like I talked about deployments like the thing uh where you uh ship a new",
    "start": "2583200",
    "end": "2589280"
  },
  {
    "text": "subgraph you can see that in real time that are the real time deployments that come in uh this the fusion will make",
    "start": "2589280",
    "end": "2596520"
  },
  {
    "text": "sure that you don't break the overall graph um and that we do in composition",
    "start": "2596520",
    "end": "2602480"
  },
  {
    "text": "for instance here the deployment failed we could also see what actually failed there",
    "start": "2602480",
    "end": "2607720"
  },
  {
    "text": "um by have to go a bit back here uh there you can see for instance there was a breaking change so what we checked",
    "start": "2607720",
    "end": "2614680"
  },
  {
    "text": "there is we compiled the overall composite schema and then we figured out it would break one of your clients so we",
    "start": "2614680",
    "end": "2622319"
  },
  {
    "text": "know which queries actually each of your clients uses and that is because in graph C we compile basically the clients",
    "start": "2622319",
    "end": "2629520"
  },
  {
    "text": "against the back end and then we also know which version of which client uses",
    "start": "2629520",
    "end": "2634839"
  },
  {
    "text": "actually which field of your graph so when you do a change to that uh we",
    "start": "2634839",
    "end": "2640839"
  },
  {
    "text": "will stop you from doing that and saying okay this Fields orders for instance that's a breaking change that breaks",
    "start": "2640839",
    "end": "2648040"
  },
  {
    "text": "these two or three client versions that you have out there first make sure that these clients don't send requests to",
    "start": "2648040",
    "end": "2654240"
  },
  {
    "text": "your graph C server anymore like deprecate them and then we allow you to do the change or you force this through",
    "start": "2654240",
    "end": "2661680"
  },
  {
    "text": "so you will never break your clients like when uh people talk about graph",
    "start": "2661680",
    "end": "2667640"
  },
  {
    "text": "doesn't need versioning it's because of these kinds of tooling that we have in the graph quare space where we make sure",
    "start": "2667640",
    "end": "2674720"
  },
  {
    "text": "that you really never break a client and you know which client actually uses uh what kind of data from your overall",
    "start": "2674720",
    "end": "2681760"
  },
  {
    "text": "graph and then you can uh do some uh educated decisions based on this",
    "start": "2681760",
    "end": "2689599"
  },
  {
    "text": "data okay with this I'm actually uh almost",
    "start": "2689599",
    "end": "2695480"
  },
  {
    "text": "through yeah this we have hard like as I said we're working uh with a couple of",
    "start": "2695480",
    "end": "2702119"
  },
  {
    "text": "other companies that are also early adopted like AWS you can use Fusion uh and the composite schema specification",
    "start": "2702119",
    "end": "2709280"
  },
  {
    "text": "with absc for instance there's a blog post on AWS so if you're on AWS you can",
    "start": "2709280",
    "end": "2714800"
  },
  {
    "text": "uh work with that if you're using UNG um we also working with hazur on that if",
    "start": "2714800",
    "end": "2720800"
  },
  {
    "text": "you using haura you can also combine that with that I'm basically done if you",
    "start": "2720800",
    "end": "2726640"
  },
  {
    "text": "want to follow me or uh hit me up on uh Twitter or slack you can do that and uh",
    "start": "2726640",
    "end": "2733440"
  },
  {
    "text": "I'm open for question we have 10 more minutes so if you have questions go",
    "start": "2733440",
    "end": "2740640"
  },
  {
    "text": "ahead so we're using it uh at one of the biggest retailers in",
    "start": "2744240",
    "end": "2749480"
  },
  {
    "text": "Switzerland um but the specification is at stage zero so you can like the",
    "start": "2749480",
    "end": "2755640"
  },
  {
    "text": "implementation is Val it but the specification changes over the next year",
    "start": "2755640",
    "end": "2761520"
  },
  {
    "text": "I think the the composite schema specification as is will be stable in",
    "start": "2761520",
    "end": "2767319"
  },
  {
    "text": "around 12 months uh but if you don't mind uh changing like what that means is",
    "start": "2767319",
    "end": "2773920"
  },
  {
    "text": "the basically the um directives and uh composition rules may change but uh yeah",
    "start": "2773920",
    "end": "2781839"
  },
  {
    "text": "you can use already in production if if you don't mind to doing a",
    "start": "2781839",
    "end": "2789280"
  },
  {
    "text": "change uh you mean uh like uh from a cicd standpoint",
    "start": "2795280",
    "end": "2802440"
  },
  {
    "text": "yeah yeah yeah so",
    "start": "2802559",
    "end": "2810119"
  },
  {
    "text": "um let me show you maybe I'm working at the moment on a demo with Aspire so you",
    "start": "2810119",
    "end": "2817000"
  },
  {
    "text": "can basically use an Aspire thing I'm at the moment reworking like David fowers example of the eShop I",
    "start": "2817000",
    "end": "2824960"
  },
  {
    "text": "don't know if anybody saw that uh maybe in three four days I will have it done",
    "start": "2824960",
    "end": "2831559"
  },
  {
    "text": "um but this is basically the approach so what the fusion Gateway is is basically",
    "start": "2831559",
    "end": "2836880"
  },
  {
    "text": "one code file it's a asp.net core server",
    "start": "2836880",
    "end": "2842359"
  },
  {
    "text": "here it it has one package that the hot chocolate Fusion package",
    "start": "2842359",
    "end": "2847480"
  },
  {
    "text": "uh and the only setup you have here is Fusion Gateway server in this instance we have the configure from cloud because",
    "start": "2847480",
    "end": "2854240"
  },
  {
    "text": "it runs in Aspire so uh everything is basically configured in your aspire",
    "start": "2854240",
    "end": "2860400"
  },
  {
    "text": "host I don't know if you guys already are familiar with Aspire but this is how",
    "start": "2860400",
    "end": "2865800"
  },
  {
    "text": "you set basically the orchestration between the Gateway up uh in this case for inst I said so I'm still migrating",
    "start": "2865800",
    "end": "2873160"
  },
  {
    "text": "here uh I have one subgraph that's a catalog API that they have there and then I integrated that with my Gateway",
    "start": "2873160",
    "end": "2879800"
  },
  {
    "text": "like with this with reference uh to the catalog API this is the way I configure",
    "start": "2879800",
    "end": "2885280"
  },
  {
    "text": "that here that is also all build time so when I build this solution when I build the apphost here it actually composes so",
    "start": "2885280",
    "end": "2894200"
  },
  {
    "text": "it's very easy to uh to deploy it with the Spire you basically set that up in",
    "start": "2894200",
    "end": "2899559"
  },
  {
    "text": "your C CD pipeline the moment you compile the produ project you know that it composes and then you can",
    "start": "2899559",
    "end": "2907280"
  },
  {
    "text": "um uh deploy it with with the Aspire standards that you have here you don't",
    "start": "2907280",
    "end": "2912400"
  },
  {
    "text": "have to use Aspire you could also just deploy it as a simple container so the Gateway could also just be a simple",
    "start": "2912400",
    "end": "2918960"
  },
  {
    "text": "container the coolest thing really with Aspire is the Telemetry inides that you",
    "start": "2918960",
    "end": "2924000"
  },
  {
    "text": "get at development um and all the Integrations that we do with banana cake pop in it and so it's a quite nice",
    "start": "2924000",
    "end": "2932200"
  },
  {
    "text": "experience but you could also just say I'm using this Gateway here um and we",
    "start": "2932200",
    "end": "2938200"
  },
  {
    "text": "have like there is for instance if I go into the gateway here uh you could also",
    "start": "2938200",
    "end": "2944160"
  },
  {
    "text": "say configure from a file and then you have a blob storage there and that's where you put your composition output so",
    "start": "2944160",
    "end": "2951640"
  },
  {
    "text": "the composition output uh just let me show you so what I",
    "start": "2951640",
    "end": "2957559"
  },
  {
    "text": "did here is basically a local composition so when I run this composition tool what it does here is",
    "start": "2957559",
    "end": "2963319"
  },
  {
    "text": "basically dump this Gateway fgp that here is uh basically a glorified zip so",
    "start": "2963319",
    "end": "2971079"
  },
  {
    "text": "I could just uh that's the composition output let me just go reveal and",
    "start": "2971079",
    "end": "2979520"
  },
  {
    "text": "finder just come yeah so I could unzip that and then you can see there's",
    "start": "2980359",
    "end": "2986960"
  },
  {
    "text": "basically a graphical schema in there uh with all the composition uh",
    "start": "2986960",
    "end": "2995160"
  },
  {
    "text": "rules that is actually the public exposed graph quare schema what we use to run the Gateway",
    "start": "2995160",
    "end": "3002040"
  },
  {
    "text": "and uh run the query planning is this Fusion graph quare which is a heavily annotated graph C",
    "start": "3002040",
    "end": "3007799"
  },
  {
    "text": "schema where you actually can uh see what's what is happening here so if I",
    "start": "3007799",
    "end": "3013559"
  },
  {
    "text": "call node then I have resol to accounts like these are all the metadata that I",
    "start": "3013559",
    "end": "3021079"
  },
  {
    "text": "have to the various subgraphs or uh this R variable declaration here tells me",
    "start": "3021079",
    "end": "3027160"
  },
  {
    "text": "that I need to get some data that I need to feed into uh the subgraphs so this is",
    "start": "3027160",
    "end": "3033400"
  },
  {
    "text": "heavily annotated schema and that is being produced so you can use a blob",
    "start": "3033400",
    "end": "3038799"
  },
  {
    "text": "storage to configure it if you don't want to use Aspire um or whatnot could also be just uh locally on Prem uh just",
    "start": "3038799",
    "end": "3047559"
  },
  {
    "text": "dump it on the file",
    "start": "3047559",
    "end": "3051000"
  },
  {
    "text": "system yeah terms of like so um in terms of linking the the various nodes so you",
    "start": "3053200",
    "end": "3060799"
  },
  {
    "text": "yeah showed the example of the reviews to product um and so the internal like",
    "start": "3060799",
    "end": "3067680"
  },
  {
    "text": "definition of that is it that you um when you're storing the review You've",
    "start": "3067680",
    "end": "3072760"
  },
  {
    "text": "Got a product ID field but then you've got the type which",
    "start": "3072760",
    "end": "3078839"
  },
  {
    "text": "is product and the sub field which is ID so how would you link got a product so",
    "start": "3078839",
    "end": "3084920"
  },
  {
    "text": "how you link is basically you have these partial types um for",
    "start": "3084920",
    "end": "3090480"
  },
  {
    "text": "instance uh if you have somewhere where you just have a user ID in the graphco schema you would have a user which",
    "start": "3090480",
    "end": "3097280"
  },
  {
    "text": "hasn't just the ID you don't have to have the user object in your C but you have to have the user in your graph so",
    "start": "3097280",
    "end": "3105040"
  },
  {
    "text": "you have to tell us this ID doesn't just mean user ID it's actually from the type user so linking is always that you have",
    "start": "3105040",
    "end": "3113880"
  },
  {
    "text": "types and then we see okay this is the same type like user and user we can",
    "start": "3113880",
    "end": "3119640"
  },
  {
    "text": "squash in so if I wanted to introduce for instance let's have a look",
    "start": "3119640",
    "end": "3125680"
  },
  {
    "text": "[Music] um so when I am here in reviews I just",
    "start": "3125680",
    "end": "3131960"
  },
  {
    "text": "have it in in a type here I have product but product actually just has an",
    "start": "3131960",
    "end": "3137119"
  },
  {
    "text": "ID right and a reviews on it because that is what the review service knows",
    "start": "3137119",
    "end": "3143160"
  },
  {
    "text": "about uh the product service so we have we have a notion of product in this",
    "start": "3143160",
    "end": "3149400"
  },
  {
    "text": "subgraph but we don't know anything else about the product we just have the ID and we know that these kinds of um",
    "start": "3149400",
    "end": "3159440"
  },
  {
    "text": "reviews this is how I can get reviews for products so I model that in this",
    "start": "3159440",
    "end": "3164520"
  },
  {
    "text": "graph type this type doesn't need to exist in your database it's just a kind of a stop type where I say the like",
    "start": "3164520",
    "end": "3171880"
  },
  {
    "text": "product in my subgraph can have reviews and then we integrate that with your vph",
    "start": "3171880",
    "end": "3178280"
  },
  {
    "text": "so it's very simple to do that other",
    "start": "3178280",
    "end": "3185520"
  },
  {
    "text": "questions is what you've done with Fusion a sort of competitor to like I've seen mesh before is it the same kind of",
    "start": "3192680",
    "end": "3199400"
  },
  {
    "text": "thing no so so we are working with the Guild on it and also our PO is working on it m um as I said this is not like we",
    "start": "3199400",
    "end": "3207920"
  },
  {
    "text": "putting a specification on GitHub it's under the graphical foundation so it's under the standard body that is actually",
    "start": "3207920",
    "end": "3215680"
  },
  {
    "text": "building the graph quare specification so when you go here to the gra this is in the graph C",
    "start": "3215680",
    "end": "3222000"
  },
  {
    "text": "organization and uh we are working there like uh for instance like Martin here is",
    "start": "3222000",
    "end": "3228480"
  },
  {
    "text": "from Apollo it's also like we are working in a collaborative approach with",
    "start": "3228480",
    "end": "3233960"
  },
  {
    "text": "all the other graph companies out there there to build an open standard that everybody can adapt that means for you",
    "start": "3233960",
    "end": "3240559"
  },
  {
    "text": "as a user you can take that and then you can mix also the tooling if you for",
    "start": "3240559",
    "end": "3246040"
  },
  {
    "text": "instance like banana cake pop from us you can you can use that and then you maybe like mash there's already an or",
    "start": "3246040",
    "end": "3252839"
  },
  {
    "text": "pull request that integrates Fusion in mash um and then you could combine these",
    "start": "3252839",
    "end": "3257920"
  },
  {
    "text": "tools and they just work uh out of the box together that's the idea that we have at the moment you have a PO",
    "start": "3257920",
    "end": "3264240"
  },
  {
    "text": "Federation for instance you have schema stitching you have a I forgot the thing",
    "start": "3264240",
    "end": "3269599"
  },
  {
    "text": "um that atlassian did but they are all kind of vendor locked Solutions and that",
    "start": "3269599",
    "end": "3275280"
  },
  {
    "text": "means you're loged into Apollo Studio into whatever tooling uh everybody has",
    "start": "3275280",
    "end": "3281240"
  },
  {
    "text": "and the idea is to open that up and um have a standard core specification that",
    "start": "3281240",
    "end": "3286839"
  },
  {
    "text": "still makes it possible for each of the vendors to have like maybe a very good",
    "start": "3286839",
    "end": "3292280"
  },
  {
    "text": "solution for authorization uh that is not part of the standard",
    "start": "3292280",
    "end": "3297599"
  },
  {
    "text": "but that might be the the reason why you go for Apollo or for the guild but the",
    "start": "3297599",
    "end": "3304400"
  },
  {
    "text": "core specification the core tooling will be open source cool thank",
    "start": "3304400",
    "end": "3310240"
  },
  {
    "text": "you more questions we have time four more",
    "start": "3310240",
    "end": "3317559"
  },
  {
    "text": "minutes otherwise you can also hit me up I'm still uh today and tomorrow at the",
    "start": "3318680",
    "end": "3324000"
  },
  {
    "text": "conference so if you want to have a chat about graph there you",
    "start": "3324000",
    "end": "3329640"
  },
  {
    "text": "invited to come over awesome thank you",
    "start": "3329640",
    "end": "3335690"
  },
  {
    "text": "[Applause]",
    "start": "3335690",
    "end": "3342020"
  }
]