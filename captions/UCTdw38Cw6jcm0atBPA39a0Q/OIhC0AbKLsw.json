[
  {
    "text": "hello oh I'm on Hey hi Sydney",
    "start": "6660",
    "end": "11670"
  },
  {
    "text": "can I just call you all Sydney would that be all right so welcome my name's Michelle we're here",
    "start": "11670",
    "end": "19240"
  },
  {
    "text": "for an hour right and I'm thinking I'm gonna pack two platforms and a quick review in an hour are you ready for that",
    "start": "19240",
    "end": "26170"
  },
  {
    "text": "it's okay good all right so my name's Michelle LaRue Bustamante I'm",
    "start": "26170",
    "end": "32199"
  },
  {
    "text": "here from San Diego and I'm part of a company called salon so we do architecture consulting and many other",
    "start": "32199",
    "end": "39520"
  },
  {
    "text": "things but of late you know I've actually been building a docker and service fabric and micro services practice so we've actually been playing",
    "start": "39520",
    "end": "45610"
  },
  {
    "text": "a lot with both of the platforms and just finished a hackathon on service fabric which was really fun and I think",
    "start": "45610",
    "end": "52180"
  },
  {
    "text": "it'd be great to just have a little bit of an open dialogue while I show you some demos and talk a little bit about I",
    "start": "52180",
    "end": "57280"
  },
  {
    "text": "guess the sentiment and the feeling that I get with the teams that we've been working with the various platforms and",
    "start": "57280",
    "end": "62530"
  },
  {
    "text": "and a few of them you know on Amazon on Azure so it's a fun space and it's a very vibrant space right now who loves",
    "start": "62530",
    "end": "69819"
  },
  {
    "text": "micro services okay you're not sure yet that's all right it's a buzzword right just like",
    "start": "69819",
    "end": "76119"
  },
  {
    "text": "SOA from way back so yes I'm on fire today let's go so docker and service",
    "start": "76119",
    "end": "82810"
  },
  {
    "text": "fabric ready to go let's talk about micro services the too long didn't read",
    "start": "82810",
    "end": "88149"
  },
  {
    "text": "version cuz there's plenty of those sessions here but just a quick digest hello world 1992 who remembers that me",
    "start": "88149",
    "end": "95530"
  },
  {
    "text": "neither okay hello world today yes that's about it",
    "start": "95530",
    "end": "100690"
  },
  {
    "text": "right who can build an app today without dealing with mobile responsive web",
    "start": "100690",
    "end": "105929"
  },
  {
    "text": "devices on the front api's on the back maybe some API management in the middle",
    "start": "105929",
    "end": "111069"
  },
  {
    "text": "because that's the new thing as well everything's got a back end we've got services and tiers and you know api's",
    "start": "111069",
    "end": "118840"
  },
  {
    "text": "and web apps so it's complicated right I mean I remember being able to build one thing I mean I kind of remember being",
    "start": "118840",
    "end": "125229"
  },
  {
    "text": "able to build one thing executable and run away for lunch and come back and hope it compiled and now it's like all",
    "start": "125229",
    "end": "130539"
  },
  {
    "text": "these things everywhere but that in itself is not microservices right this is just you know building apps today",
    "start": "130539",
    "end": "136629"
  },
  {
    "text": "usually a lot of facets and you have different team members that are experts in the various areas right not everybody",
    "start": "136629",
    "end": "142060"
  },
  {
    "text": "does mobile not everybody does back-end and security and all the things but how did we get here so we started with",
    "start": "142060",
    "end": "148719"
  },
  {
    "text": "monolith which in the old days was one big thing like an executable today's monolith is really just an app that's",
    "start": "148719",
    "end": "155560"
  },
  {
    "text": "not well decoupled and you know when we started with the big monolith back in the day the decoupling started in a",
    "start": "155560",
    "end": "162519"
  },
  {
    "text": "different way right we started with trying to break down data and scale it in the back end so we had the client and",
    "start": "162519",
    "end": "169209"
  },
  {
    "text": "the server right and then eventually that moved into distributed components like you know we had Corbeau we had D",
    "start": "169209",
    "end": "175449"
  },
  {
    "text": "comm and the idea behind those were I'd be able to distribute components and",
    "start": "175449",
    "end": "180699"
  },
  {
    "text": "scale somehow and then eventually we realized that in the scale either because of connections right and so then",
    "start": "180699",
    "end": "187689"
  },
  {
    "text": "we move to the interoperable version of that which would have been SOA that old buzzword and service-oriented",
    "start": "187689",
    "end": "193569"
  },
  {
    "text": "architectures promise was to decouple but also help you with isolation and",
    "start": "193569",
    "end": "198599"
  },
  {
    "text": "segmentation of business functions right so almost micro service like right that",
    "start": "198599",
    "end": "203680"
  },
  {
    "text": "perspective there's a lot of synergies between that time and the things we talked about and the things that we're",
    "start": "203680",
    "end": "210370"
  },
  {
    "text": "talking about today it's just there's more to it now right and more pieces so",
    "start": "210370",
    "end": "215549"
  },
  {
    "text": "service-oriented architecture was another sense of decoupling and then we moved to let's distribute things across",
    "start": "215549",
    "end": "221109"
  },
  {
    "text": "the cloud and build paths and services that we can leverage in our ecosystem right so now we're stitching together",
    "start": "221109",
    "end": "227590"
  },
  {
    "text": "things from other people from us from our development team from you know from",
    "start": "227590",
    "end": "233709"
  },
  {
    "text": "third parties and and again paths as well so you know just a continuation of",
    "start": "233709",
    "end": "238840"
  },
  {
    "text": "the decoupling of the reuse and so on and now micro services so you know the point of micro services yet another",
    "start": "238840",
    "end": "245169"
  },
  {
    "text": "layer of decoupling only hopefully maybe done better if we're going to embrace this approach we have to embrace a",
    "start": "245169",
    "end": "252459"
  },
  {
    "text": "couple of other things that will make it successful like the whole DevOps story right without automation and DevOps you",
    "start": "252459",
    "end": "259750"
  },
  {
    "text": "probably simply can't be successful with micro services because now there's just and you might argue well we should be",
    "start": "259750",
    "end": "265960"
  },
  {
    "text": "doing that anyways right so in a way maybe it's forcing us to better practices forcing us to think about better practices because now we're",
    "start": "265960",
    "end": "272139"
  },
  {
    "text": "decoupling ups to a smaller granularity and therefore having to have ways to",
    "start": "272139",
    "end": "277300"
  },
  {
    "text": "manage that better makes sense so decoupling it's so hot right now that is",
    "start": "277300",
    "end": "283629"
  },
  {
    "text": "sort of where we're heading and the idea is we take this picture and",
    "start": "283629",
    "end": "289389"
  },
  {
    "text": "turn it into smaller units of functionality that we can isolate from one another that we can",
    "start": "289389",
    "end": "297220"
  },
  {
    "text": "have a separate life cycle of development deployment management update and the real goal behind all of this",
    "start": "297220",
    "end": "303400"
  },
  {
    "text": "really is not the developer and not the technology people it's the business because the business wants to say I want",
    "start": "303400",
    "end": "309310"
  },
  {
    "text": "new features here in here and they're tired of waiting for those new features because we're afraid how many people are",
    "start": "309310",
    "end": "314740"
  },
  {
    "text": "ever afraid to update the apps they work on today because of regression testing okay right because of course you have",
    "start": "314740",
    "end": "322030"
  },
  {
    "text": "regression tests across the entire application and every moving part to where you're not afraid to do that right",
    "start": "322030",
    "end": "328509"
  },
  {
    "text": "so you know the promise of this is hopefully that sense of isolation if we",
    "start": "328509",
    "end": "333729"
  },
  {
    "text": "do it right there is that if right like you have to do it right so put another way I can build a very badly designed",
    "start": "333729",
    "end": "340479"
  },
  {
    "text": "monolith and I can build a very badly designed microservices architecture as well which means I still have to design",
    "start": "340479",
    "end": "346960"
  },
  {
    "text": "I still have to take a step back and try to think through what am I actually doing here yes okay so that's my TL DR",
    "start": "346960",
    "end": "354639"
  },
  {
    "text": "on that front and then talking design one of the things I like to talk about is how do we approach thinking about",
    "start": "354639",
    "end": "361360"
  },
  {
    "text": "design before we look at the platform so I've had to go into some customers where they don't know yet if they want to go",
    "start": "361360",
    "end": "367000"
  },
  {
    "text": "with docker or service fabric literally or maybe they're going with docker but they don't know yet if they're going to",
    "start": "367000",
    "end": "372729"
  },
  {
    "text": "go with docker on Amazon or Azure or they don't know yet if they want to use docker data center or mezzos TCOs or go",
    "start": "372729",
    "end": "380919"
  },
  {
    "text": "with a raw docker deployment where they pick and choose the tooling themselves and manage it themselves using swarm and",
    "start": "380919",
    "end": "387509"
  },
  {
    "text": "deciding behind the scenes whether they want to use console or whether they want a zookeeper and the list goes on right",
    "start": "387509",
    "end": "393520"
  },
  {
    "text": "so there are some choices and that's a good thing and a bad thing sometimes and",
    "start": "393520",
    "end": "399009"
  },
  {
    "text": "so before you even get there you can actually take this step back and just look at your app right how do I break",
    "start": "399009",
    "end": "405250"
  },
  {
    "text": "down an app into parts how do I break it into these you know separate functional services these these segments of",
    "start": "405250",
    "end": "413620"
  },
  {
    "text": "functionality that can have their own lifecycle and update cycle now I know",
    "start": "413620",
    "end": "418990"
  },
  {
    "text": "what you're thinking maybe that of course how can I possibly know that",
    "start": "418990",
    "end": "424090"
  },
  {
    "text": "these can have their own lifetime or lifecycle and update cycle and the answer is well you might not get it perfect the first time but you can take",
    "start": "424090",
    "end": "431590"
  },
  {
    "text": "a shot at it so I always suggest take a shot at it first take a look at the services across your app so this is an",
    "start": "431590",
    "end": "437410"
  },
  {
    "text": "order system it's got you know the typical things that you have you have customers you have orders you have",
    "start": "437410",
    "end": "442720"
  },
  {
    "text": "shopping carts you have products and fulfillment on the backend these are separate functions that might have",
    "start": "442720",
    "end": "448060"
  },
  {
    "text": "different behavior different workflows different interactions with the backends",
    "start": "448060",
    "end": "453910"
  },
  {
    "text": "the corporation and/or the customer and then maybe there's some reuse services at the back related to notifications and",
    "start": "453910",
    "end": "460900"
  },
  {
    "text": "emails and whatnot but at the end of the day they have their own functionality that they can own which means they might",
    "start": "460900",
    "end": "466660"
  },
  {
    "text": "get updated separately you might have different teams on them suggestions services payment services",
    "start": "466660",
    "end": "473440"
  },
  {
    "text": "accounts and managing the users and the accounts and the permissions so the list",
    "start": "473440",
    "end": "478780"
  },
  {
    "text": "goes on this is just an example if you can try to break that up and then look at the data and say okay well which of",
    "start": "478780",
    "end": "484510"
  },
  {
    "text": "these has isolated state what are these services owned what are the actual you",
    "start": "484510",
    "end": "490750"
  },
  {
    "text": "know back-end that each of these services could say this is my I prime the primary owner of this",
    "start": "490750",
    "end": "497699"
  },
  {
    "text": "data model if you will now that doesn't mean there aren't the concept of",
    "start": "497699",
    "end": "503139"
  },
  {
    "text": "relations because we all know when you update an order you might have to relate it to a customer and likewise when I",
    "start": "503139",
    "end": "509229"
  },
  {
    "text": "edit my customer you know I want to maybe go and look at their orders or something like that so there are the",
    "start": "509229",
    "end": "515050"
  },
  {
    "text": "need to have these query patterns through the system that might somehow have the need to pull together data and",
    "start": "515050",
    "end": "521669"
  },
  {
    "text": "I always suggest don't try to tackle that problem first when you're looking at the micro services architecture",
    "start": "521669",
    "end": "528480"
  },
  {
    "text": "tackle that after you've looked at these are logical segments of my application",
    "start": "528480",
    "end": "534080"
  },
  {
    "text": "and then let's think about well what are the potential relations and we can't",
    "start": "534080",
    "end": "540350"
  },
  {
    "text": "really fully answer that question until you actually know the query patterns through the system you need to understand I'm going to need to get this",
    "start": "540350",
    "end": "546620"
  },
  {
    "text": "data this way to understand whether or not you could go get that from two collections or two services or whether",
    "start": "546620",
    "end": "553730"
  },
  {
    "text": "or not it could be eventually consistent on the back end where you have a collection of the aggregate data that",
    "start": "553730",
    "end": "561950"
  },
  {
    "text": "you can query in different ad hoc ways while still correlating you know the data primarily with the service owner so",
    "start": "561950",
    "end": "568970"
  },
  {
    "text": "there's interesting choices there which is why I say try not to solve that problem first now this is not really a",
    "start": "568970",
    "end": "574910"
  },
  {
    "text": "talk about how do I design all of my micro services obviously we could talk about that in lots of different ways but",
    "start": "574910",
    "end": "580640"
  },
  {
    "text": "I just wanted to give a taste of that because what I find is that sometimes you can leverage a piece of a platform",
    "start": "580640",
    "end": "586250"
  },
  {
    "text": "to solve some of these problems and I think that's part of what I want to get to so thinking about the services in the",
    "start": "586250",
    "end": "592490"
  },
  {
    "text": "breakdown and thinking about the fact that some of that data model might just be a cache which means maybe it's a cluster of cash or Redis or something",
    "start": "592490",
    "end": "598880"
  },
  {
    "text": "right is that going to be a container or is it going to be a service in animal Amazon or in Azure I don't know that's",
    "start": "598880",
    "end": "605240"
  },
  {
    "text": "where we start tying in the platform and making decisions that we leverage pieces of our platform so that's why I say",
    "start": "605240",
    "end": "612440"
  },
  {
    "text": "think of it this way first and then apply the platform and the tools you might be able to leverage",
    "start": "612440",
    "end": "617980"
  },
  {
    "text": "another thing might be there are no data at the backend in terms of you know",
    "start": "617980",
    "end": "623570"
  },
  {
    "text": "maybe I'm leveraging an aggregate data model way back there that's not owned by the service but I'm talking to an",
    "start": "623570",
    "end": "629720"
  },
  {
    "text": "analytics engine or something like that doing some machine learning and so on so again you're just trying to isolate what",
    "start": "629720",
    "end": "636050"
  },
  {
    "text": "are these services have state one of these services have function and maybe leverage other pass functions what of",
    "start": "636050",
    "end": "643070"
  },
  {
    "text": "these are just you know executable functions like email you know it's just an email service it doesn't have to hold",
    "start": "643070",
    "end": "648649"
  },
  {
    "text": "a state it's just going to do some stuff so get that out there and then maybe you know think about what the front-end",
    "start": "648649",
    "end": "654800"
  },
  {
    "text": "looks like now some people talk about micro services in a way where even the UI part is owned by the service meaning",
    "start": "654800",
    "end": "660829"
  },
  {
    "text": "we might omit some of the representation and that's something that you can decide",
    "start": "660829",
    "end": "667830"
  },
  {
    "text": "upon so I don't I usually try not to go there right away because I think that adds complexity to your development and",
    "start": "667830",
    "end": "675960"
  },
  {
    "text": "life cycle of development it's a lot easier to think about your front-end as these things that maybe I will compartmentalize enough that they have",
    "start": "675960",
    "end": "682950"
  },
  {
    "text": "their own update life cycle like subdomains across the system but at the same time not necessarily worry about",
    "start": "682950",
    "end": "688830"
  },
  {
    "text": "container izing them right away so that's that's a choice - it's a style it depends on the team and what you're",
    "start": "688830",
    "end": "694410"
  },
  {
    "text": "accustomed to what you're ready to do make sense so there's just an idea of a picture moving along now we talk about",
    "start": "694410",
    "end": "701280"
  },
  {
    "text": "platforms yeah so docker obviously docker is somewhat of a poster",
    "start": "701280",
    "end": "706860"
  },
  {
    "text": "child of the you know of the micro services world and it's a really nice",
    "start": "706860",
    "end": "712230"
  },
  {
    "text": "platform to work with it's lightweight it feels good for developers it feels",
    "start": "712230",
    "end": "717240"
  },
  {
    "text": "good for DevOps there are some things we have to consider once we get past the isn't as awesome but luckily there are",
    "start": "717240",
    "end": "724590"
  },
  {
    "text": "answers to those considerations so I kind of wanted to start with the simple you know parts which is you know the",
    "start": "724590",
    "end": "731580"
  },
  {
    "text": "first and the first thing we think about when we think about containerization is how lightweight it is right so when we",
    "start": "731580",
    "end": "737970"
  },
  {
    "text": "deal with virtualization we usually have the guest OS this is the classic discussion and when we deal with",
    "start": "737970",
    "end": "743340"
  },
  {
    "text": "containers we're talking about very lightweight binary sitting on top",
    "start": "743340",
    "end": "749130"
  },
  {
    "text": "of you know the VM to where I can actually have density beyond what I would with the virtualization stack so",
    "start": "749130",
    "end": "758090"
  },
  {
    "text": "example would be 33% of CPU being used here or i/o and when you look over at",
    "start": "758090",
    "end": "764850"
  },
  {
    "text": "the container side it's 2% you know that's just one number it depends on your app but there have been some folks",
    "start": "764850",
    "end": "770940"
  },
  {
    "text": "that have published stats of their real deployments when they moved from virtualization to containerization and",
    "start": "770940",
    "end": "776730"
  },
  {
    "text": "their real stats so there's nothing to argue it's fast it's light it gives you more server density we have to talk",
    "start": "776730",
    "end": "784200"
  },
  {
    "text": "about what the meaning of server density is though and how we achieve it successfully okay so hold that thought",
    "start": "784200",
    "end": "791220"
  },
  {
    "text": "so you know and the other promise of this of course is the idea that whatever I build in a container the image that is",
    "start": "791220",
    "end": "797520"
  },
  {
    "text": "the base of the container is immutable which means if it works on my machine it's gonna work when I publish it to the",
    "start": "797520",
    "end": "803250"
  },
  {
    "text": "development environment to the UAE environment and to prod and we love that",
    "start": "803250",
    "end": "808629"
  },
  {
    "text": "right because now I actually have predictability so one of the things I've seen in terms of using docker I've had",
    "start": "808629",
    "end": "815620"
  },
  {
    "text": "companies that are just small companies that are startups and it's one guy and",
    "start": "815620",
    "end": "820839"
  },
  {
    "text": "it's nice for him to be able to know that he can build and test and run and build these containers that maybe he's",
    "start": "820839",
    "end": "827860"
  },
  {
    "text": "not even doing clustered operations with swarm it's just there's a couple of machines load-balanced and we only have",
    "start": "827860",
    "end": "834399"
  },
  {
    "text": "one instance of each container on each box but he can manage that and it's",
    "start": "834399",
    "end": "839949"
  },
  {
    "text": "manageable and it can work on his machine and he can deploy it and link the containers and it still works in the",
    "start": "839949",
    "end": "845290"
  },
  {
    "text": "cloud right so there's something nice and and lightweight and agile about that",
    "start": "845290",
    "end": "850300"
  },
  {
    "text": "very nice and then of course when we get into production distributed environments",
    "start": "850300",
    "end": "856240"
  },
  {
    "text": "we have to deal with things like well how do I really achieve the dynamic deployments with load balancing and and",
    "start": "856240",
    "end": "864220"
  },
  {
    "text": "density across the machines so I'm gonna get to that in a minute okay so let's talk about just docker pure first how",
    "start": "864220",
    "end": "872439"
  },
  {
    "text": "many people already played with it yeah okay so then you know you'll know all this stuff basically let's see if I can",
    "start": "872439",
    "end": "880709"
  },
  {
    "text": "so let's go to which of my environments it looks like actually I",
    "start": "880709",
    "end": "887170"
  },
  {
    "text": "have a working internet I've had a couple of interesting things going on there this week but it seems like it's",
    "start": "887170",
    "end": "893769"
  },
  {
    "text": "all good okay so I'm going to just go and take a look",
    "start": "893769",
    "end": "899649"
  },
  {
    "text": "at a quick a couple of demos and",
    "start": "899649",
    "end": "908150"
  },
  {
    "text": "I'm going to start with just docker basics just for the sake of those that are new and then I'm going to talk a",
    "start": "908780",
    "end": "914610"
  },
  {
    "text": "little bit about my sauce as one example of how you can manage the distributed and environment for example",
    "start": "914610",
    "end": "922130"
  },
  {
    "text": "oops I can type okay so first thing I'm",
    "start": "922130",
    "end": "927870"
  },
  {
    "text": "gonna do is just you know and let me see if I can get this all moved up a little notch in case it's not easy to see",
    "start": "927870",
    "end": "935210"
  },
  {
    "text": "how many people can see past that it looks like it's a bit low you're getting okay there alright that should be good",
    "start": "935210",
    "end": "941580"
  },
  {
    "text": "so what I'm gonna do first is just okay so let's take a look at the images I have on the machine so I have a couple",
    "start": "941580",
    "end": "948600"
  },
  {
    "text": "of things that I've downloaded and then I've got this one that I want to delete actually so that was me not finishing my",
    "start": "948600",
    "end": "955380"
  },
  {
    "text": "cleanup so I'm going to show you how do you delete an image isn't that awesome so demo demo one oops wait sorry",
    "start": "955380",
    "end": "964270"
  },
  {
    "text": "[Music] I",
    "start": "964270",
    "end": "970370"
  },
  {
    "text": "I think I'll do it this way hang on our docker I didn't say dogger so",
    "start": "970370",
    "end": "977510"
  },
  {
    "text": "demo1",
    "start": "978680",
    "end": "981680"
  },
  {
    "text": "my tab isn't working",
    "start": "985370",
    "end": "989300"
  },
  {
    "text": "okay let me see what's running docker PS shows me what docker images are running",
    "start": "991040",
    "end": "996690"
  },
  {
    "text": "I think I left something still as a container here so we're gonna have to take a look at that and that's where we",
    "start": "996690",
    "end": "1005000"
  },
  {
    "text": "are okay so see that demo demo 1 so I need to get rid of that guy and that one is called",
    "start": "1005000",
    "end": "1010720"
  },
  {
    "text": "yes image demo demo 1 and the name is",
    "start": "1010720",
    "end": "1017350"
  },
  {
    "text": "demo 1 oh there we go ok so we're going to say remove",
    "start": "1019960",
    "end": "1027730"
  },
  {
    "text": "demo there we go ok",
    "start": "1029320",
    "end": "1035350"
  },
  {
    "text": "and we'll say",
    "start": "1035350",
    "end": "1038919"
  },
  {
    "text": "got to get my name again okay and I'm gonna remove the image demo",
    "start": "1041909",
    "end": "1049139"
  },
  {
    "text": "demo one okay so instead of showing you that after I show it you two before it's",
    "start": "1049139",
    "end": "1054609"
  },
  {
    "text": "all good okay so docker images now is clean of that and",
    "start": "1054609",
    "end": "1060749"
  },
  {
    "text": "there we go alright so first things first I have a application here so I'm",
    "start": "1060749",
    "end": "1066940"
  },
  {
    "text": "gonna just show you that app dot yes and in that app it's really just an Express",
    "start": "1066940",
    "end": "1073720"
  },
  {
    "text": "app with node very simple just for the sake of showing you know a message so Ola from node on host so instead of I",
    "start": "1073720",
    "end": "1080619"
  },
  {
    "text": "don't know Ola will type something else just to show that it's updated because Ola would be San Diego right",
    "start": "1080619",
    "end": "1087519"
  },
  {
    "text": "where are we crikey is that how you spell that I don't know somebody said that to me this week I thought it was",
    "start": "1087519",
    "end": "1093249"
  },
  {
    "text": "fun so there you go okay okay so there's an edit on apps yes so this",
    "start": "1093249",
    "end": "1099549"
  },
  {
    "text": "is just a simple node app let me go to my Joker file so you",
    "start": "1099549",
    "end": "1105090"
  },
  {
    "text": "know I build my app I'm in sublime I'm in my favorite editor I'm",
    "start": "1105090",
    "end": "1110759"
  },
  {
    "text": "basically you know doing development the usual way but instead of you know",
    "start": "1110759",
    "end": "1116139"
  },
  {
    "text": "running it directly in Express or being on Windows VM and running it in iis and",
    "start": "1116139",
    "end": "1121509"
  },
  {
    "text": "so on right I can containerize it so I created a docker file and I say look my base image is going to be whatever",
    "start": "1121509",
    "end": "1128529"
  },
  {
    "text": "operating environment I plan to deploy to so this is Linux based right so I'm gonna choose a base image that's based",
    "start": "1128529",
    "end": "1134379"
  },
  {
    "text": "on the same version of Ubuntu or whatever is my plan to deploy in this case I chose notes limb you know it's",
    "start": "1134379",
    "end": "1140739"
  },
  {
    "text": "limb just gave me a prepackaged version of node a lightweight version of node that I could run this example on which",
    "start": "1140739",
    "end": "1147279"
  },
  {
    "text": "was also based on the same you know Linux space image so the idea is like an",
    "start": "1147279",
    "end": "1152769"
  },
  {
    "text": "onion I'm layering on top so I can build these base images that I don't have to change or mutate and then I can add my",
    "start": "1152769",
    "end": "1159399"
  },
  {
    "text": "software to the end right so here what I'm doing is running node mom running Express getting those things installed",
    "start": "1159399",
    "end": "1165159"
  },
  {
    "text": "and then moving my source over so we're basically copying the source over and then we're exposing the internal port so",
    "start": "1165159",
    "end": "1172119"
  },
  {
    "text": "that's the internal image when it runs as a container there's an internal port and then that will be mapped to the",
    "start": "1172119",
    "end": "1177760"
  },
  {
    "text": "dynamically created or fixed port that we choose when we run the container so there's the concept of the internal port",
    "start": "1177760",
    "end": "1183580"
  },
  {
    "text": "and then the external port that's on the VM now that's going to become important",
    "start": "1183580",
    "end": "1188770"
  },
  {
    "text": "when we think about distributing those containers across your cluster and",
    "start": "1188770",
    "end": "1194140"
  },
  {
    "text": "because you're probably not going to want to fix the port you're gonna want that to be dynamic so that it can be load balanced right but we'll get to",
    "start": "1194140",
    "end": "1199510"
  },
  {
    "text": "that and then we're just gonna say where the entry point of the app is right so",
    "start": "1199510",
    "end": "1205090"
  },
  {
    "text": "this is going to be running like a node app and so we're gonna save this I don't think I even changed it and that's my",
    "start": "1205090",
    "end": "1212320"
  },
  {
    "text": "docker file so docker build and we'll say demo",
    "start": "1212320",
    "end": "1221160"
  },
  {
    "text": "demo 1 dot so we're basically gonna build the image and that's going to go ahead and",
    "start": "1221940",
    "end": "1229270"
  },
  {
    "text": "fetch NPM and you know add those things to the image and build this immutable image which is the thing that I can run",
    "start": "1229270",
    "end": "1235240"
  },
  {
    "text": "is a container so now this immutable image is the thing that I could publish to a docker hub registry or wherever my",
    "start": "1235240",
    "end": "1242500"
  },
  {
    "text": "registry is for my company which is another important discussion where do I publish these things so we'll come back",
    "start": "1242500",
    "end": "1248710"
  },
  {
    "text": "to that and then we've got the concept of you know so right now I'm just gonna run it locally I'm not publishing yet",
    "start": "1248710",
    "end": "1254590"
  },
  {
    "text": "but when I do publish that means that theoretically I could have a process that will pull that image and push it",
    "start": "1254590",
    "end": "1260500"
  },
  {
    "text": "out to the VMS in the cloud for example for my dev QA you know acceptance and or",
    "start": "1260500",
    "end": "1266740"
  },
  {
    "text": "staging and prod right so right now I'm just running locally I should have this image so we'll say docker images and",
    "start": "1266740",
    "end": "1274030"
  },
  {
    "text": "here we go I've got docker demos demo one again so docker run",
    "start": "1274030",
    "end": "1282299"
  },
  {
    "text": "we'll call this demo one and",
    "start": "1282299",
    "end": "1286590"
  },
  {
    "text": "port 80 80 80 80 and then",
    "start": "1288030",
    "end": "1295700"
  },
  {
    "text": "demo demo one image and go so let's do",
    "start": "1296539",
    "end": "1303899"
  },
  {
    "text": "this docker PS do we have it running yes so that should mean that I can browse to",
    "start": "1303899",
    "end": "1309269"
  },
  {
    "text": "that and go to 8080 so localhost and",
    "start": "1309269",
    "end": "1316460"
  },
  {
    "text": "8080 oops no tell you something wrong oh",
    "start": "1316460",
    "end": "1325908"
  },
  {
    "text": "sorry that's my fault excuse me it's not localhost because I'm running this in",
    "start": "1326570",
    "end": "1331590"
  },
  {
    "text": "kinematic and it's a VirtualBox so oops",
    "start": "1331590",
    "end": "1336049"
  },
  {
    "text": "okay so crikey there you go now we know it was the right one at least right don't spell that right I don't know yeah",
    "start": "1336980",
    "end": "1343919"
  },
  {
    "text": "okay all right so I don't think that constitutes a demo fail because it",
    "start": "1343919",
    "end": "1349049"
  },
  {
    "text": "actually went so there you go all right so so that's just one example so here I",
    "start": "1349049",
    "end": "1354389"
  },
  {
    "text": "am am in my development environment I'm running this is nice and clean you see how fast that was there right I mean not building of the app because obviously",
    "start": "1354389",
    "end": "1360630"
  },
  {
    "text": "I'd have to write some code can't do that for you but you know if I go docker",
    "start": "1360630",
    "end": "1365789"
  },
  {
    "text": "PS I can see that the containers running I can say docker stop and",
    "start": "1365789",
    "end": "1370850"
  },
  {
    "text": "that will be stopped so if I go back over here and",
    "start": "1370850",
    "end": "1375929"
  },
  {
    "text": "refresh it's obviously going to be gone make an update publish it again docker",
    "start": "1375929",
    "end": "1381570"
  },
  {
    "text": "start demo one and then superfast and there",
    "start": "1381570",
    "end": "1389010"
  },
  {
    "text": "you go now of course it's only got three lines of code but still it's always fast it's pretty fast there you go so once",
    "start": "1389010",
    "end": "1395880"
  },
  {
    "text": "I'm ready to publish then I'm probably going to get some sort of process where I check in and it produces an image so",
    "start": "1395880",
    "end": "1400980"
  },
  {
    "text": "you can do that automatically with docker hub for example you can obviously use Jenkins and have a build step that",
    "start": "1400980",
    "end": "1407789"
  },
  {
    "text": "actually does the darker build for you from your repo link it up to bitbucket link it up to your github repo git repo",
    "start": "1407789",
    "end": "1414870"
  },
  {
    "text": "whatever that is and then if you wanted you could do full automation CI CD although I find that it in our latest",
    "start": "1414870",
    "end": "1421760"
  },
  {
    "text": "you know projects together with our teams that do all that stuff I'm not a CI CD person I just listen to what they",
    "start": "1421760",
    "end": "1428820"
  },
  {
    "text": "advise and you know it just seems like the control over that step scene it's more appropriate you know we do the",
    "start": "1428820",
    "end": "1434400"
  },
  {
    "text": "automatically build and get the image into the repo but we don't necessarily want that automatically pushing out to",
    "start": "1434400",
    "end": "1439620"
  },
  {
    "text": "prod or whatnot we want to have some control especially since you might be checking in a lot and that means you'd be building a lot as well right it's all",
    "start": "1439620",
    "end": "1446429"
  },
  {
    "text": "just a thought at the end of the day what I was going to show you there though is that in my github repo you can",
    "start": "1446429",
    "end": "1453540"
  },
  {
    "text": "do things like connect sorry version you're",
    "start": "1453540",
    "end": "1458570"
  },
  {
    "text": "let's see which one I want to show you hang on you can do things like when you check in or push it will you can tag it",
    "start": "1458570",
    "end": "1465990"
  },
  {
    "text": "and have it version the",
    "start": "1465990",
    "end": "1471650"
  },
  {
    "text": "deployments for you so you can have v1 and have that title latest and then check in v2 and make that the latest and",
    "start": "1471650",
    "end": "1477540"
  },
  {
    "text": "v3 make that the latest so you can have the concept of which version do we want to pull so you always have this immutable image still and then maybe you",
    "start": "1477540",
    "end": "1484500"
  },
  {
    "text": "know QA is always on the latest but if you're using another secondary QA or UAT",
    "start": "1484500",
    "end": "1490860"
  },
  {
    "text": "maybe that one should be the one before because they're still stabilizing on that before it goes to production gets",
    "start": "1490860",
    "end": "1496440"
  },
  {
    "text": "promoted so something like that so I can also do things like check in to github",
    "start": "1496440",
    "end": "1502320"
  },
  {
    "text": "and have that automatically linked so for example this guy although here let's go to CI",
    "start": "1502320",
    "end": "1507890"
  },
  {
    "text": "this is an automated build so basically if I check in a change to that",
    "start": "1507890",
    "end": "1513090"
  },
  {
    "text": "particular one it will automatically run a build so let's see what happens here I'm gonna go into",
    "start": "1513090",
    "end": "1520460"
  },
  {
    "text": "let's see what directory I'm in there we go hello world CI",
    "start": "1520460",
    "end": "1527570"
  },
  {
    "text": "okay so this is another docker file very similar simple if I wanted to make a",
    "start": "1527570",
    "end": "1533520"
  },
  {
    "text": "change and then let's say I make this this is hello",
    "start": "1533520",
    "end": "1540000"
  },
  {
    "text": "from San Diego so now we're not in San Diego anymore so we'll call this Sydney",
    "start": "1540000",
    "end": "1547720"
  },
  {
    "text": "and escape save and now we'll do a job",
    "start": "1547720",
    "end": "1552940"
  },
  {
    "text": "sorry get commit new location and then get bush",
    "start": "1552940",
    "end": "1563820"
  },
  {
    "text": "and then while that's doing that I can go over here and I can see if the build",
    "start": "1563820",
    "end": "1569049"
  },
  {
    "text": "is running I think I'm an error last build but that's okay it should show that I'm gonna start a build in about a second you'll see that popping up here",
    "start": "1569049",
    "end": "1575710"
  },
  {
    "text": "one of these moments and it'll q-see start the build so then I'm gonna have",
    "start": "1575710",
    "end": "1581440"
  },
  {
    "text": "an image in this repository and the images in the repository like I said can",
    "start": "1581440",
    "end": "1586720"
  },
  {
    "text": "be version can be tagged and then eventually you'll pull the image you",
    "start": "1586720",
    "end": "1591850"
  },
  {
    "text": "want and run it locally so for example I can go back to this repo here and",
    "start": "1591850",
    "end": "1597600"
  },
  {
    "text": "let's say I go to here and say docker",
    "start": "1597600",
    "end": "1604590"
  },
  {
    "text": "well let's see Joker yes and what yes Hey",
    "start": "1604590",
    "end": "1612450"
  },
  {
    "text": "okay so I'm just gonna take a look and see ooh I'm not scrolling the right place there",
    "start": "1612450",
    "end": "1619210"
  },
  {
    "text": "we go docker demos ok good so I don't have one yet for the hello world so",
    "start": "1619210",
    "end": "1624940"
  },
  {
    "text": "we're gonna do a docker run",
    "start": "1624940",
    "end": "1628980"
  },
  {
    "text": "hello world CI P 80 80 or 81 and",
    "start": "1630090",
    "end": "1637950"
  },
  {
    "text": "then we'll call that das blonde",
    "start": "1637950",
    "end": "1643259"
  },
  {
    "text": "hello world CI and",
    "start": "1643259",
    "end": "1648690"
  },
  {
    "text": "[Music] that's probably it wait what'd I miss",
    "start": "1648690",
    "end": "1655240"
  },
  {
    "text": "what is oh I forgot a space",
    "start": "1655240",
    "end": "1660269"
  },
  {
    "text": "yep okay so dr. PS what do we have running HelloWorld CI",
    "start": "1660440",
    "end": "1667490"
  },
  {
    "text": "if I don't have that locally it would pull it from the repo and run it so that would be the equivalent of what we end",
    "start": "1667490",
    "end": "1672660"
  },
  {
    "text": "up doing when we push from Jenkins or something right okay so why don't I go through all that because there are some",
    "start": "1672660",
    "end": "1680460"
  },
  {
    "text": "things that are simple and then there is the concept of I want to build this application it's",
    "start": "1680460",
    "end": "1687180"
  },
  {
    "text": "a solution with many services I want to deploy that to a cluster out on you know",
    "start": "1687180",
    "end": "1692580"
  },
  {
    "text": "in my cloud basically right load-balanced cluster and so I need the ability to potentially and I'm gonna use",
    "start": "1692580",
    "end": "1699510"
  },
  {
    "text": "Azure container service as an example just because but either way the idea is I'm probably going to want to have an",
    "start": "1699510",
    "end": "1705480"
  },
  {
    "text": "orchestration engine which is clustered and that's going to be responsible for scheduling deployments of all of the",
    "start": "1705480",
    "end": "1711840"
  },
  {
    "text": "services meaning that I have a mechanism whereby I can you know set up things",
    "start": "1711840",
    "end": "1718710"
  },
  {
    "text": "like service discovery set up load balancing across those services have health and restarts on the services so",
    "start": "1718710",
    "end": "1726360"
  },
  {
    "text": "when a service is no longer responding somebody's listening to that heartbeat somebody's restarting the service or",
    "start": "1726360",
    "end": "1731460"
  },
  {
    "text": "somebody's replacing it and making sure there's another one running so all of those things are the stuff of complexity",
    "start": "1731460",
    "end": "1737970"
  },
  {
    "text": "those are the things you don't do when your one guy you know in a dev shop you",
    "start": "1737970",
    "end": "1743880"
  },
  {
    "text": "know deploying to a load-balanced pair of machines you need tools for that otherwise you're building your own tools",
    "start": "1743880",
    "end": "1750960"
  },
  {
    "text": "otherwise you're picking from all the open-source tools which do exist out there and becoming an expert at one of",
    "start": "1750960",
    "end": "1756750"
  },
  {
    "text": "them to figure out how you're going to manage this stuff but UI helps and you know tools help simplify a lot of these",
    "start": "1756750",
    "end": "1763860"
  },
  {
    "text": "process and they've come a long way you know a year ago when I was doing discussions about docker it would be",
    "start": "1763860",
    "end": "1769140"
  },
  {
    "text": "that we didn't quite have networking baked and now you know docker what is it",
    "start": "1769140",
    "end": "1774240"
  },
  {
    "text": "1.2 now yeah I always get the numbers right wrong but I guess the point being the",
    "start": "1774240",
    "end": "1781470"
  },
  {
    "text": "latest release right now has all of that functional we've got service discovery baked in swarm is working better than it",
    "start": "1781470",
    "end": "1789210"
  },
  {
    "text": "did before now they have the docker data center which is the kind of proprietary version that is a paid",
    "start": "1789210",
    "end": "1796730"
  },
  {
    "text": "version a licensed version of all the tools in a package ready for you including the registry where you would",
    "start": "1796730",
    "end": "1803299"
  },
  {
    "text": "publish your your your actual images and so that's",
    "start": "1803299",
    "end": "1808340"
  },
  {
    "text": "where we get into things like although I'm not showing it on this picture somewhere over here is a registry right",
    "start": "1808340",
    "end": "1813470"
  },
  {
    "text": "somewhere over here is the place where our private images for our corporate organization and get published and",
    "start": "1813470",
    "end": "1819740"
  },
  {
    "text": "promoted between dev and QA and prod and so on and so I probably don't want to",
    "start": "1819740",
    "end": "1825440"
  },
  {
    "text": "put that in docker hub you know open registry I'm either going to pay for a private registry or I'm gonna host it",
    "start": "1825440",
    "end": "1830900"
  },
  {
    "text": "myself and hosting it yourself is not trivial you have to make sure that that's a",
    "start": "1830900",
    "end": "1836090"
  },
  {
    "text": "first-class citizen that it's got disaster recovery around it and so on right so having that come in a package",
    "start": "1836090",
    "end": "1842510"
  },
  {
    "text": "like docker datacenter is helpful having that available to you in places like",
    "start": "1842510",
    "end": "1847940"
  },
  {
    "text": "Amazon where they have a service for that is is helpful in Azure we don't",
    "start": "1847940",
    "end": "1853850"
  },
  {
    "text": "necessarily have that built in but we do have things like mesosphere talk data",
    "start": "1853850",
    "end": "1860510"
  },
  {
    "text": "center operating system a DC OS which at least provide the tools around the orchestration with swarm or marathon",
    "start": "1860510",
    "end": "1867380"
  },
  {
    "text": "which is the the one that I'm going to be using and also the agent node management around that so where you have",
    "start": "1867380",
    "end": "1874640"
  },
  {
    "text": "these scale sets which is the VM that has docker engine on it and the agent that listens to marathon so that the",
    "start": "1874640",
    "end": "1881270"
  },
  {
    "text": "heartbeats of your service are being sent somewhere and so that something can monitor manage and listen to those",
    "start": "1881270",
    "end": "1887330"
  },
  {
    "text": "health heartbeats and handle scaling you ask for more services send those across the nodes right so",
    "start": "1887330",
    "end": "1894320"
  },
  {
    "text": "with that again just thinking about how you design more of a real system putting",
    "start": "1894320",
    "end": "1899900"
  },
  {
    "text": "another perspective you're gonna have on Azure for example and again this would be different on Amazon and various",
    "start": "1899900",
    "end": "1905870"
  },
  {
    "text": "deployments just as an example you're gonna have your load balancer coming in with requests and you're going to want that to load balance across your if",
    "start": "1905870",
    "end": "1914240"
  },
  {
    "text": "you're using websites and putting those in containers as well as your services behind the scenes in containers and",
    "start": "1914240",
    "end": "1919970"
  },
  {
    "text": "those can be distributed across again any number of nodes in your cluster possibly multiple tiers",
    "start": "1919970",
    "end": "1925910"
  },
  {
    "text": "and then you want to have that load balancing dynamic discovery working make sense so with that an example of this",
    "start": "1925910",
    "end": "1932570"
  },
  {
    "text": "again there are many tools for this if you use the docker DCOs with marathon then you're going to have a marathon",
    "start": "1932570",
    "end": "1937670"
  },
  {
    "text": "load balancer endpoint that you could have on each node in your agent cluster and then that will keep track of the",
    "start": "1937670",
    "end": "1945380"
  },
  {
    "text": "services across all the nodes so that when a request comes in for service one",
    "start": "1945380",
    "end": "1950840"
  },
  {
    "text": "it knows where all the service ones live and there could be three on one machine and one on another machine and several",
    "start": "1950840",
    "end": "1957470"
  },
  {
    "text": "you know across many machines because of server density which is where we get into when I schedule services and say I",
    "start": "1957470",
    "end": "1964010"
  },
  {
    "text": "want 20 instances and I only have 5 machines that means each machine potentially gets multiple instances just",
    "start": "1964010",
    "end": "1969800"
  },
  {
    "text": "to help with managing requests and and isolating those in those individual containers right makes sense ok all",
    "start": "1969800",
    "end": "1978470"
  },
  {
    "text": "right so yes so I guess to that let's have a",
    "start": "1978470",
    "end": "1983630"
  },
  {
    "text": "quick look I'm gonna go to here and",
    "start": "1983630",
    "end": "1991300"
  },
  {
    "text": "so what I have right now is I'm tunneled in actually to 8989 local is to a Adger",
    "start": "1991360",
    "end": "2000750"
  },
  {
    "text": "deployment of the azure container service so there's a template for this I've got a template that's deployed",
    "start": "2000750",
    "end": "2006670"
  },
  {
    "text": "right now which is a single node for the management orchestration cluster it's not a cluster sorry it's a management",
    "start": "2006670",
    "end": "2012580"
  },
  {
    "text": "node and then I've got three other nodes and so what I'm gonna do is just give you a quick example of what kinds of",
    "start": "2012580",
    "end": "2019930"
  },
  {
    "text": "things I might do for I'm going to start with you know marathon load balancer I'm going to install that package here",
    "start": "2019930",
    "end": "2026070"
  },
  {
    "text": "so we're gonna install that package on the cluster and what that's going to do",
    "start": "2026070",
    "end": "2032680"
  },
  {
    "text": "is put the agent node on each of my three agents which is my my my server",
    "start": "2032680",
    "end": "2040600"
  },
  {
    "text": "notes right and then it's going to install the marathon management load balancer in the in the management node",
    "start": "2040600",
    "end": "2049120"
  },
  {
    "text": "so that I can actually go and take a look so it looks like this is done I don't know yeah okay",
    "start": "2049120",
    "end": "2056000"
  },
  {
    "text": "so gut so now I'm gonna go to the dashboard so this dashboard shows me",
    "start": "2056000",
    "end": "2061099"
  },
  {
    "text": "actually how many nodes I have I think there's my three connected nodes to the cluster",
    "start": "2061099",
    "end": "2067330"
  },
  {
    "text": "now it has these components which are related to the load bouncer that I just installed I",
    "start": "2068080",
    "end": "2074618"
  },
  {
    "text": "don't have any tasks actively running right now I don't have any failures",
    "start": "2074619",
    "end": "2079970"
  },
  {
    "text": "right now that's good so it's giving me a bit of a dashboard a bit of a visual around what's going on in the health of",
    "start": "2079970",
    "end": "2085608"
  },
  {
    "text": "the cluster makes sense okay now with that let's go over to this guy and so",
    "start": "2085609",
    "end": "2093888"
  },
  {
    "text": "this and I'm gonna just refresh this is my marathon interface so let's get this",
    "start": "2093889",
    "end": "2099140"
  },
  {
    "text": "reloaded and",
    "start": "2099140",
    "end": "2104619"
  },
  {
    "text": "I'm so happy Internet's working that makes all the difference doesn't it what else would I do up here yeah although",
    "start": "2104619",
    "end": "2112070"
  },
  {
    "text": "that might have been fun to watch for a second but anyway okay so I've got this",
    "start": "2112070",
    "end": "2117950"
  },
  {
    "text": "marathon load balancer right now and I'm actually going to widen this up so we can see the full screen as much as",
    "start": "2117950",
    "end": "2123320"
  },
  {
    "text": "possible and yeah okay so what I'm going to do is create an application now I",
    "start": "2123320",
    "end": "2128650"
  },
  {
    "text": "would automatically and and push out the application that way but you can",
    "start": "2128650",
    "end": "2134150"
  },
  {
    "text": "describe in a JSON file what you're going to push and and have that be scheduled so what I'm gonna do is go",
    "start": "2134150",
    "end": "2140660"
  },
  {
    "text": "over here and grab this JSON file and what it does is it describes a couple of",
    "start": "2140660",
    "end": "2146990"
  },
  {
    "text": "important things one is okay I'm going to deploy a web app call the web and then I'm using Network Bridge which",
    "start": "2146990",
    "end": "2153890"
  },
  {
    "text": "means that it's going to dynamically assign ports to every one of the instances I deploy and that's really",
    "start": "2153890",
    "end": "2160430"
  },
  {
    "text": "important because we obviously need it to be dynamic and we want the marathon load balancer to automatically know",
    "start": "2160430",
    "end": "2165740"
  },
  {
    "text": "where all those instances live and that's what's going to be provided for us for 10,000 is how the marathon load",
    "start": "2165740",
    "end": "2172010"
  },
  {
    "text": "balancer will look for this service so basically port 10,000 requests to",
    "start": "2172010",
    "end": "2178130"
  },
  {
    "text": "marathon load balancer know okay we're gonna go and look for all the web instances this app so I've got to have",
    "start": "2178130",
    "end": "2186440"
  },
  {
    "text": "three instances to start with and I guess that's the main thing and this is the host we're going to be",
    "start": "2186440",
    "end": "2192310"
  },
  {
    "text": "hitting which is my asher host okay so I could have different subdomains for different services if I",
    "start": "2192310",
    "end": "2198970"
  },
  {
    "text": "want to do something more complex like routing with forward slash service one two three I have to add a little bit",
    "start": "2198970",
    "end": "2205030"
  },
  {
    "text": "more logic but we're going to just leave that alone for now because you know it's an hour okay so I've got that copy to the",
    "start": "2205030",
    "end": "2210970"
  },
  {
    "text": "clipboard so let's get away from that for a sec and go to",
    "start": "2210970",
    "end": "2217980"
  },
  {
    "text": "JSON mode which means I can paste this guy in and",
    "start": "2217980",
    "end": "2223810"
  },
  {
    "text": "say create application and now you can see it's deploying alright it's pretty fast at some point what we're gonna see",
    "start": "2223810",
    "end": "2231460"
  },
  {
    "text": "is all three instances are running there you go okay I should be able to hit that",
    "start": "2231460",
    "end": "2237609"
  },
  {
    "text": "service let's see if I have a link handy over here there so",
    "start": "2237609",
    "end": "2245010"
  },
  {
    "text": "here's the service now eventually if I keep refreshing we're gonna see this port change right",
    "start": "2245010",
    "end": "2251740"
  },
  {
    "text": "this is the internal health requests coming from the internal server so there's health pings to see if the",
    "start": "2251740",
    "end": "2257170"
  },
  {
    "text": "service is alive at each instance this is showing me you know this is my web",
    "start": "2257170",
    "end": "2263230"
  },
  {
    "text": "app right so as I hit it it's showing me this information so this is coming from inside the app and at some point when I",
    "start": "2263230",
    "end": "2270070"
  },
  {
    "text": "keep refreshing we should see that it changes from you know one seven to 1703 to something",
    "start": "2270070",
    "end": "2278859"
  },
  {
    "text": "else because there's about three different I don't know it's just taking time see connecting I",
    "start": "2278859",
    "end": "2284790"
  },
  {
    "text": "know you're out there somewhere while you're thinking I'm gonna come back over",
    "start": "2284790",
    "end": "2290050"
  },
  {
    "text": "here okay so you can see here I've got ten this is the internal IPS that were",
    "start": "2290050",
    "end": "2295450"
  },
  {
    "text": "dynamically allocated to the instances so I've got a five oh five oh five but",
    "start": "2295450",
    "end": "2301089"
  },
  {
    "text": "these are the ports the unique ports that were assigned so if I kind of come in here and look at each port I should",
    "start": "2301089",
    "end": "2307540"
  },
  {
    "text": "see oops that's not what I meant to do sorry I meant to go here and see that that's",
    "start": "2307540",
    "end": "2313780"
  },
  {
    "text": "1702 and then if I go back here again and click on this one this is 1703 you",
    "start": "2313780",
    "end": "2321099"
  },
  {
    "text": "see and so on right so each of these guys has their own separate IP",
    "start": "2321099",
    "end": "2326890"
  },
  {
    "text": "dynamically allocated now while I'm doing this I'm gonna go ahead and scale this and add like 24 or maybe more let's",
    "start": "2326890",
    "end": "2334700"
  },
  {
    "text": "go to I don't know 40 what the heck right so let's scale the application so now what we're gonna see is that it's",
    "start": "2334700",
    "end": "2341030"
  },
  {
    "text": "you know gonna start adding you see staging staging staging all the tasks if",
    "start": "2341030",
    "end": "2347300"
  },
  {
    "text": "I come over here we're gonna see ten staging see it's processing the",
    "start": "2347300",
    "end": "2353330"
  },
  {
    "text": "tasks getting it done it's gonna give me some errors if I ask for too many nodes",
    "start": "2353330",
    "end": "2358430"
  },
  {
    "text": "that more than it kind of handle resource wise to deploy things like that so far so good across my nose failure",
    "start": "2358430",
    "end": "2365630"
  },
  {
    "text": "rates increasing so we've got issues it's going down okay right that's",
    "start": "2365630",
    "end": "2371960"
  },
  {
    "text": "exciting I just want to stay here and watch that for a minute okay so shiny things",
    "start": "2371960",
    "end": "2378580"
  },
  {
    "text": "why is that not working I'm not sure I think it's just internet I'm gonna hand",
    "start": "2378580",
    "end": "2385370"
  },
  {
    "text": "away that but it should be working because you saw it work the first time right",
    "start": "2385370",
    "end": "2390670"
  },
  {
    "text": "and away",
    "start": "2390670",
    "end": "2393910"
  },
  {
    "text": "I'm just gonna let that refresh and think come on really come on you could do it",
    "start": "2396100",
    "end": "2403360"
  },
  {
    "text": "well while it's thinking what we do know is",
    "start": "2406510",
    "end": "2412100"
  },
  {
    "text": "that it's staged a bunch of these guys and that maybe there are Samaras you can actually go in and look at the",
    "start": "2412100",
    "end": "2417200"
  },
  {
    "text": "standardout and errors and so on so it's it's pretty interesting right so it's it's still working on it it's only got",
    "start": "2417200",
    "end": "2424670"
  },
  {
    "text": "11 of the 40 delight it just deployed it's still thinking but I guess the point that I'm really trying to make is",
    "start": "2424670",
    "end": "2430220"
  },
  {
    "text": "that the scheduling distributed the nose across more of these across the whole",
    "start": "2430220",
    "end": "2438970"
  },
  {
    "text": "cluster to where each of these nodes now has more services on them so I've got",
    "start": "2438970",
    "end": "2444290"
  },
  {
    "text": "six staged each node is going to show me what it's got available",
    "start": "2444290",
    "end": "2449770"
  },
  {
    "text": "what it's got scheduled well this is the total scheduled so that's not correct but and then this is 1703 and you'll see",
    "start": "2449770",
    "end": "2458330"
  },
  {
    "text": "that we probably hit the other ones here so 1706 so you can get the idea of the distribution across all the nodes right",
    "start": "2458330",
    "end": "2464990"
  },
  {
    "text": "and the most important part of that is that now with Marathon load balance are built in like this I can just hit the",
    "start": "2464990",
    "end": "2471920"
  },
  {
    "text": "port 80 IP that you saw totally working right and and it will figure out which know to",
    "start": "2471920",
    "end": "2480410"
  },
  {
    "text": "hit right so that's that's really pretty sweet and we didn't have that before so",
    "start": "2480410",
    "end": "2485600"
  },
  {
    "text": "I think that what the message I'm trying to give you is that the tools are evolving nicely to where if you spend",
    "start": "2485600",
    "end": "2491420"
  },
  {
    "text": "some time with them you can actually you know manage this stuff and have all these multiple little services running",
    "start": "2491420",
    "end": "2497090"
  },
  {
    "text": "around and build in some sort of health monitoring recovery when when services",
    "start": "2497090",
    "end": "2503450"
  },
  {
    "text": "are no longer working have them replaced and so on because the tools can do that you just have to sort of spend some time",
    "start": "2503450",
    "end": "2508820"
  },
  {
    "text": "with them and understand where to watch for the alerts and you know where to set",
    "start": "2508820",
    "end": "2514430"
  },
  {
    "text": "up your health monitoring endpoint which is usually a default 200 response that kind of thing okay okay",
    "start": "2514430",
    "end": "2521510"
  },
  {
    "text": "so that's a quick look at the docker side you know again the point being",
    "start": "2521510",
    "end": "2528460"
  },
  {
    "text": "the simplicity is really elegant around just working with containers and pushing",
    "start": "2528460",
    "end": "2533600"
  },
  {
    "text": "them out and having them you know the image is immutable and running them and they work everywhere and the idea of the",
    "start": "2533600",
    "end": "2538820"
  },
  {
    "text": "tooling helping me with the scale and distribution load-balancing really takes",
    "start": "2538820",
    "end": "2544380"
  },
  {
    "text": "a load off it just means make sure you're thinking about that right so let's talk then about service fabric",
    "start": "2544380",
    "end": "2551190"
  },
  {
    "text": "because there's a couple other topics that we haven't hit on which is maybe like the state management aspect so if I have services and I've got this concept",
    "start": "2551190",
    "end": "2558510"
  },
  {
    "text": "of each service should own a certain data model and state and I want that state to scale and you know the first",
    "start": "2558510",
    "end": "2565800"
  },
  {
    "text": "thought I might have is well I certainly don't want to build you know Redis and link that into my container structure",
    "start": "2565800",
    "end": "2572850"
  },
  {
    "text": "because then it's not clustered and it's not reliable and I would need that Redis",
    "start": "2572850",
    "end": "2578190"
  },
  {
    "text": "to be clustered and reliable and have a quorum when I write to it so that I know and Redis is a bad idea maybe that's",
    "start": "2578190",
    "end": "2584790"
  },
  {
    "text": "more of a you know caching type of model so let's talk about MongoDB or Cassandra or something like that the point being I",
    "start": "2584790",
    "end": "2591330"
  },
  {
    "text": "still need to think about the state right what is that ownership of state for each of these services that I'm",
    "start": "2591330",
    "end": "2597030"
  },
  {
    "text": "putting in my micro service architecture and I don't really get that for free in the docker world although you know I can",
    "start": "2597030",
    "end": "2604290"
  },
  {
    "text": "build that I could have a MongoDB cluster I can decide to use collections",
    "start": "2604290",
    "end": "2609570"
  },
  {
    "text": "as my vertical behind the services and then I can figure out how I'm going to relate those things whether I'm gonna",
    "start": "2609570",
    "end": "2615660"
  },
  {
    "text": "use event sourcing models for if I update an order let's let's you know",
    "start": "2615660",
    "end": "2621360"
  },
  {
    "text": "create a trigger that will also update the customer table and make a relation",
    "start": "2621360",
    "end": "2626610"
  },
  {
    "text": "you know doing things like that can get complex like event sourcing or can be you know super simple if it's just a",
    "start": "2626610",
    "end": "2634020"
  },
  {
    "text": "relational transaction and then there's somewhere in the middle there right it just depends on the model it depends on",
    "start": "2634020",
    "end": "2640020"
  },
  {
    "text": "the query patterns and that's where the hard part comes in typically but let's talk about maybe service fabric because",
    "start": "2640020",
    "end": "2646770"
  },
  {
    "text": "some of the tools that they provide actually build some of that in which I think is neat so we've got this other perspective on microservices and tooling",
    "start": "2646770",
    "end": "2653850"
  },
  {
    "text": "that adds some value in a different way but then and then flickers because I",
    "start": "2653850",
    "end": "2660150"
  },
  {
    "text": "don't know why really you will give it a good session rating",
    "start": "2660150",
    "end": "2668760"
  },
  {
    "text": "you I don't know what that is have I done something wrong",
    "start": "2668760",
    "end": "2674600"
  },
  {
    "text": "brand at the back have I have I said something that",
    "start": "2674600",
    "end": "2680220"
  },
  {
    "text": "offended the projector should I reconnect",
    "start": "2680220",
    "end": "2685610"
  },
  {
    "text": "is there is there a reason for this I",
    "start": "2685610",
    "end": "2690740"
  },
  {
    "text": "just did that I'm gonna try again",
    "start": "2690740",
    "end": "2696380"
  },
  {
    "text": "okay calm down sister let's try again I'm doing that slowly",
    "start": "2696380",
    "end": "2705210"
  },
  {
    "text": "because maybe it will isn't that wonderful okay",
    "start": "2705210",
    "end": "2711230"
  },
  {
    "text": "hold everything good thoughts of people good thoughts",
    "start": "2712850",
    "end": "2718069"
  },
  {
    "text": "are you kidding me okay tell you what we're not gonna do the slideshow we're just gonna show the slides because that",
    "start": "2720170",
    "end": "2726690"
  },
  {
    "text": "appears to be okay so the animation will be pretend like",
    "start": "2726690",
    "end": "2732350"
  },
  {
    "text": "so I don't know what that is okay so as your service fabric again you know I'm",
    "start": "2732350",
    "end": "2739950"
  },
  {
    "text": "focusing on this as a platform because it is the microservices sort of pads platform that Microsoft has pulled",
    "start": "2739950",
    "end": "2746250"
  },
  {
    "text": "together and it is pretty sweet in some other ways so it's very different from the docker experience because you're",
    "start": "2746250",
    "end": "2752400"
  },
  {
    "text": "gonna be Visual Studio you're gonna be in your familiar environment as a potential topology you know I'm gonna",
    "start": "2752400",
    "end": "2759060"
  },
  {
    "text": "still maybe have my friend and web apps that I could deploy in pass and keep nice and simple but they're gonna call",
    "start": "2759060",
    "end": "2764280"
  },
  {
    "text": "back maybe into a services tier so one of the things I wanted to touch on is the idea that when you think micro",
    "start": "2764280",
    "end": "2770040"
  },
  {
    "text": "services it may only be the services layer that become the micro services that you want scaling and and and",
    "start": "2770040",
    "end": "2777150"
  },
  {
    "text": "deploying in the middle tier and having those frequent lifecycle updates and feature editions but the websites are",
    "start": "2777150",
    "end": "2783210"
  },
  {
    "text": "still the way they are and then maybe there's a back-end that's still the way it is so you're inserting yourself in",
    "start": "2783210",
    "end": "2788730"
  },
  {
    "text": "the middle as a micro service layer and that's a good way to consider migrating for example take a few pieces that need",
    "start": "2788730",
    "end": "2794970"
  },
  {
    "text": "to scale and that you want to compartmentalize and start pushing those into the micro services tier",
    "start": "2794970",
    "end": "2801190"
  },
  {
    "text": "so that might be one model and I'm just illustrating that here as well right so I've got my cluster at the back which is",
    "start": "2801190",
    "end": "2807339"
  },
  {
    "text": "my virtual network with with my actor",
    "start": "2807339",
    "end": "2813369"
  },
  {
    "text": "service fabric cluster and actually I I put here I actually this is Web API and",
    "start": "2813369",
    "end": "2821109"
  },
  {
    "text": "services so I'm actually not really showing the front end on this I just got confused on myself so the front end here",
    "start": "2821109",
    "end": "2828339"
  },
  {
    "text": "what I mean by that is you need a way to get in to the service fabric cluster the cluster actually by default if you",
    "start": "2828339",
    "end": "2835230"
  },
  {
    "text": "create stateless stateful services actors and so on those actually are not",
    "start": "2835230",
    "end": "2841060"
  },
  {
    "text": "accessible to outside the cluster unless you expose an HTTP endpoint which would",
    "start": "2841060",
    "end": "2846250"
  },
  {
    "text": "be like an Owen based service web API if you will and then I could put an API",
    "start": "2846250",
    "end": "2851290"
  },
  {
    "text": "management gateway in front of this or just have a web app call it directly so this is the whole cluster is what I",
    "start": "2851290",
    "end": "2857680"
  },
  {
    "text": "should have been saying so the load balancers coming into the cluster and I'm opening up port 80 services that are",
    "start": "2857680",
    "end": "2864040"
  },
  {
    "text": "just traditional web stateless services and then I'm calling back into my",
    "start": "2864040",
    "end": "2869160"
  },
  {
    "text": "stateless or stateful compute so each service can be either a stateless thing that is scaled out across the naming",
    "start": "2869160",
    "end": "2876849"
  },
  {
    "text": "service which is not accessible to the outside world outside of a cluster or a",
    "start": "2876849",
    "end": "2881890"
  },
  {
    "text": "stateful compute which could be anything from a it can be you know again you can have",
    "start": "2881890",
    "end": "2889240"
  },
  {
    "text": "guest esse cuticles which are Java which are other platforms you can also have managed code which is your traditional",
    "start": "2889240",
    "end": "2895780"
  },
  {
    "text": "dotnet application you know c-sharp code and so on you've got the concept of",
    "start": "2895780",
    "end": "2901690"
  },
  {
    "text": "stateless and stateful reliable services the reliability aspect comes really with",
    "start": "2901690",
    "end": "2907359"
  },
  {
    "text": "the state which is I can have a service that has the concept of state and then it will replicate that state across the",
    "start": "2907359",
    "end": "2913630"
  },
  {
    "text": "nodes and make sure there's a quorum any time I do a safe and make sure that if I",
    "start": "2913630",
    "end": "2918849"
  },
  {
    "text": "can't save to the quorum to complete a quorum then it will reject the message so we can guarantee that it's been saved",
    "start": "2918849",
    "end": "2926920"
  },
  {
    "text": "and replicated before we get a return from the method if you will and I can",
    "start": "2926920",
    "end": "2932200"
  },
  {
    "text": "have stateful services like reliable cues so now I can potentially replace my other cueing mechanisms if I'm in this",
    "start": "2932200",
    "end": "2939100"
  },
  {
    "text": "micro-services space with just a reliable cue that I know will hold on to",
    "start": "2939100",
    "end": "2944170"
  },
  {
    "text": "the message literally until it runs and so it's durable and it's replicated and",
    "start": "2944170",
    "end": "2951190"
  },
  {
    "text": "it's guaranteed yeah so we use that a lot and then there's actors so an actor",
    "start": "2951190",
    "end": "2957040"
  },
  {
    "text": "model is interesting because you have your traditional sort of perspective on actors which is IOT is a classic example",
    "start": "2957040",
    "end": "2963850"
  },
  {
    "text": "right east device isn't after it holds a state and then you know when it's hydrated it's there in memory and",
    "start": "2963850",
    "end": "2969970"
  },
  {
    "text": "accessible quickly and replicated across the cluster so it's available to any requests and then when it hasn't been",
    "start": "2969970",
    "end": "2975790"
  },
  {
    "text": "used for a while or there's too many requests in parallel millions of things running around it will flush the ones",
    "start": "2975790",
    "end": "2981520"
  },
  {
    "text": "that are not so active so that it can conserve you know compute memory and so on but it still preserves the stage it's",
    "start": "2981520",
    "end": "2989440"
  },
  {
    "text": "still concert it's still preserved make sense so all that's handled for you but",
    "start": "2989440",
    "end": "2994930"
  },
  {
    "text": "actors also have another interesting value prop and that is I can do things like workflows I can create a workflow",
    "start": "2994930",
    "end": "3001560"
  },
  {
    "text": "where I kick off a job from a cue and the actors job is to negotiate the process of completing a payment order or",
    "start": "3001560",
    "end": "3009450"
  },
  {
    "text": "something like that and it's going to send an email to the user and a notification and save something to our",
    "start": "3009450",
    "end": "3015090"
  },
  {
    "text": "distributed store maybe save something to our analytic back-end so that we have not only the state in the cluster that",
    "start": "3015090",
    "end": "3021750"
  },
  {
    "text": "is replicated and durable but also a copy of state for queries on the backend like ad hoc queries so that's where we",
    "start": "3021750",
    "end": "3029010"
  },
  {
    "text": "get into the idea that an actor doesn't have to just be typical actor model perspective it can also be a workflow",
    "start": "3029010",
    "end": "3034890"
  },
  {
    "text": "management tool and then you can chain them start with pulling something off the queue calling another actor and",
    "start": "3034890",
    "end": "3041070"
  },
  {
    "text": "another actor and the state is managed by the actor so we always know where we are in the workflow it's done yeah so",
    "start": "3041070",
    "end": "3047130"
  },
  {
    "text": "it's really an interesting model so when you do a new project in Visual",
    "start": "3047130",
    "end": "3053040"
  },
  {
    "text": "Studio you're just going to have a symbol similar experience you usually do but you'll start with a template that creates a service fabric project and",
    "start": "3053040",
    "end": "3059760"
  },
  {
    "text": "you'll have this concept of I have on my github I know you can't really see right now wait let me make it a bit bigger",
    "start": "3059760",
    "end": "3066589"
  },
  {
    "text": "in my github repo I have already posted a pretty comprehensive readme and I'm",
    "start": "3066589",
    "end": "3074130"
  },
  {
    "text": "just trying to get back here on this entity calculator app and what that has",
    "start": "3074130",
    "end": "3079200"
  },
  {
    "text": "is a an example of this actor workflow model with reminders that do triggers an",
    "start": "3079200",
    "end": "3085650"
  },
  {
    "text": "event sourcing so it's pretty interesting if I do say so myself okay",
    "start": "3085650",
    "end": "3090920"
  },
  {
    "text": "but the point is that the app owns the services so if I you know again just",
    "start": "3090920",
    "end": "3097380"
  },
  {
    "text": "trying to scroll down here without losing the page ya know that's where a slide deck would",
    "start": "3097380",
    "end": "3105749"
  },
  {
    "text": "be nice like you know animations and such here why don't we do this",
    "start": "3105749",
    "end": "3110900"
  },
  {
    "text": "that's what I meant to do okay sorry",
    "start": "3110900",
    "end": "3117059"
  },
  {
    "text": "yeah what can you fix Oh",
    "start": "3117059",
    "end": "3121410"
  },
  {
    "text": "is this all on film hey how's it going",
    "start": "3124859",
    "end": "3129660"
  },
  {
    "text": "hey don't worry about it it's fine I already scrolled it up I'm sorry",
    "start": "3135299",
    "end": "3141989"
  },
  {
    "text": "okay I didn't hear what he just said okay so",
    "start": "3142499",
    "end": "3151890"
  },
  {
    "text": "click what show okay but I thought the slideshow was broken didn't we establish that it won't",
    "start": "3152519",
    "end": "3160509"
  },
  {
    "text": "be broken now are we fixed what was the problem get that on film at least",
    "start": "3160509",
    "end": "3167489"
  },
  {
    "text": "my god I mean don't leave me hanging like this okay",
    "start": "3167489",
    "end": "3173279"
  },
  {
    "text": "alright so basically the idea is that the app owns the services it deploys so",
    "start": "3173279",
    "end": "3178839"
  },
  {
    "text": "when I create a service fabric application I'm gonna add services to it like here's my queue my reliable queue",
    "start": "3178839",
    "end": "3184299"
  },
  {
    "text": "and here's my actor and another actor and here's my stateless service but the problem you can already probably gather",
    "start": "3184299",
    "end": "3189699"
  },
  {
    "text": "is how is that a micro service if I'm putting everything in one app how is",
    "start": "3189699",
    "end": "3194709"
  },
  {
    "text": "that if I deploy all that together how is that a micro service it doesn't feel the same as docker right when I'm in",
    "start": "3194709",
    "end": "3199959"
  },
  {
    "text": "docker have a thing it's an image I'm building an image and I'm gonna push that one little light thing up and over the wall and it's gonna work and then",
    "start": "3199959",
    "end": "3207039"
  },
  {
    "text": "I'm gonna have to stitch that to another thing and another thing and that's where the networking comes in and the load balancing across containers and so on",
    "start": "3207039",
    "end": "3213179"
  },
  {
    "text": "but you know the point is not that you can't do that here the point is that the",
    "start": "3213179",
    "end": "3218890"
  },
  {
    "text": "sense the way you go about it is different I'm gonna have this app it's gonna be the whole thing while I'm building it by myself but when I have a",
    "start": "3218890",
    "end": "3225099"
  },
  {
    "text": "team across you know countries and distributed partners I'm going to have to build additional apps that just",
    "start": "3225099",
    "end": "3230829"
  },
  {
    "text": "deploy the one or two services that go together all the time and that becomes my unit of deployment lifecycle",
    "start": "3230829",
    "end": "3237069"
  },
  {
    "text": "publishing and update and you can also with apps deploy one update to one of",
    "start": "3237069",
    "end": "3242859"
  },
  {
    "text": "the pieces in the app and it only deploy that one thing version that one thing but therefore version the whole app and",
    "start": "3242859",
    "end": "3248910"
  },
  {
    "text": "even do rollbacks and such so we'll talk about that now that app slide dick again which is awesome by the way thanks for",
    "start": "3248910",
    "end": "3255420"
  },
  {
    "text": "you know that here's an example of what I'm going to run right now is an app that has a web",
    "start": "3255420",
    "end": "3262800"
  },
  {
    "text": "front-end go through API management to hit the load balancer and hit my stateless Web Services and it's going to",
    "start": "3262800",
    "end": "3268770"
  },
  {
    "text": "place orders for like a concert like ticket orders or something we just did this for a hackathon actually so it's",
    "start": "3268770",
    "end": "3275100"
  },
  {
    "text": "really kind of fun and the backend stateful services we have a queue and that queue is going to be the",
    "start": "3275100",
    "end": "3281310"
  },
  {
    "text": "asynchronous process that we know is guaranteed reliable durable queued message to figure out if after receiving",
    "start": "3281310",
    "end": "3289080"
  },
  {
    "text": "that you know that that credit-card",
    "start": "3289080",
    "end": "3294560"
  },
  {
    "text": "token from because we never want to hold all that stuff in the backend we only get the token that says yes your credit",
    "start": "3294980",
    "end": "3301650"
  },
  {
    "text": "card can handle the processing and then we queue that and then we talked to the credit card ordering and we see if we",
    "start": "3301650",
    "end": "3307080"
  },
  {
    "text": "can process the order and if there's enough tickets for you you know how sometimes you order something on manna Amazon and then after they say oh sorry",
    "start": "3307080",
    "end": "3313290"
  },
  {
    "text": "we didn't have it in stock after all and it gave you the message that kind of thing so making it a sync so it can",
    "start": "3313290",
    "end": "3318360"
  },
  {
    "text": "scale when there's a lady Gaga concert in town and a million people go to order at once we need to queue all those",
    "start": "3318360",
    "end": "3323640"
  },
  {
    "text": "orders we can't possibly hit them all at once make sense so we're queuing it up in a state full service and then the",
    "start": "3323640",
    "end": "3329970"
  },
  {
    "text": "actor picking up the queue when it can and now there's each order is an actor",
    "start": "3329970",
    "end": "3335430"
  },
  {
    "text": "so there's like potentially millions of orders all at once processing as they can and when they complete it's durable",
    "start": "3335430",
    "end": "3343530"
  },
  {
    "text": "is persisted and we can always get back to that order and so in order to have a queue queryable pattern on the backend",
    "start": "3343530",
    "end": "3350340"
  },
  {
    "text": "we store in an adoptee b so we actually fire it off to an azure queue and a function which is another form of Micra",
    "start": "3350340",
    "end": "3355920"
  },
  {
    "text": "service and Azure like a lambda and Amazon will pick up that queue and take",
    "start": "3355920",
    "end": "3362250"
  },
  {
    "text": "that order and process you know saving it to a store that we can query ad hoc in the meantime my actors are still",
    "start": "3362250",
    "end": "3368610"
  },
  {
    "text": "available so that the person that just placed the order can be waiting on the website and see success or something",
    "start": "3368610",
    "end": "3373680"
  },
  {
    "text": "like that so it doesn't get put to rest or retire until it's not active for a",
    "start": "3373680",
    "end": "3379290"
  },
  {
    "text": "while right so until it's purged so let's talk about that let's go into service fabric and",
    "start": "3379290",
    "end": "3386570"
  },
  {
    "text": "I'm just gonna start by showing what that looks like",
    "start": "3386570",
    "end": "3391910"
  },
  {
    "text": "so here is my application completed right so I'm not",
    "start": "3391910",
    "end": "3397260"
  },
  {
    "text": "gonna start a new app anybody can do that you create a new app you're going to get this service fabric app what",
    "start": "3397260",
    "end": "3402270"
  },
  {
    "text": "should we see here and it's showing a list of my services in there and so you know my services are these guys right so",
    "start": "3402270",
    "end": "3410220"
  },
  {
    "text": "I've got an actor an order actor I've got a service which is my cue and then I've got the Web API front-end that's",
    "start": "3410220",
    "end": "3416130"
  },
  {
    "text": "picking up the requests and so when I run this what it's doing actually if I take a look at",
    "start": "3416130",
    "end": "3423119"
  },
  {
    "text": "the local cluster let me just go there my local cluster",
    "start": "3423119",
    "end": "3428930"
  },
  {
    "text": "shows that I have an app already deployed and that it's available in running and in my local cluster if I",
    "start": "3428930",
    "end": "3436920"
  },
  {
    "text": "were to you know just to illustrate that I have a partition available and so on let me do that",
    "start": "3436920",
    "end": "3444170"
  },
  {
    "text": "honking horns really Wow okay so what I'm gonna do is I'm going",
    "start": "3444589",
    "end": "3452220"
  },
  {
    "text": "to take a look at this is my actual API endpoint at localhost 8080 - it's the",
    "start": "3452220",
    "end": "3458160"
  },
  {
    "text": "entry point to the whole service fiber cluster and I have a place to place an order here for example I can go oh not",
    "start": "3458160",
    "end": "3465720"
  },
  {
    "text": "delete how about we go to orders and I can you know post an order",
    "start": "3465720",
    "end": "3471839"
  },
  {
    "text": "for example right and so if I place an order here and try it out then it's",
    "start": "3471839",
    "end": "3477150"
  },
  {
    "text": "going to hit the API and and run it I can also do that though in my cluster that's in the cloud by just coming up to",
    "start": "3477150",
    "end": "3483810"
  },
  {
    "text": "this website and placing an order so if I go over to",
    "start": "3483810",
    "end": "3489349"
  },
  {
    "text": "web UI orders and it's just thinking a little",
    "start": "3489349",
    "end": "3497630"
  },
  {
    "text": "can always check the cluster it looks good there are no orders right now I can go",
    "start": "3499220",
    "end": "3506340"
  },
  {
    "text": "to the front I can place an order all right so order tickets now and I can",
    "start": "3506340",
    "end": "3512070"
  },
  {
    "text": "place one order or I can do this thing which is load test so I'm going to go ahead and make a load test of 100 orders",
    "start": "3512070",
    "end": "3519950"
  },
  {
    "text": "so let's let that post so what that's done is queued up to the function to do",
    "start": "3519950",
    "end": "3525480"
  },
  {
    "text": "100 orders and it's going to go and iterate through that and in the meantime I have these partitions that I've",
    "start": "3525480",
    "end": "3531450"
  },
  {
    "text": "created so I have this queue it's durable and upfront because it's a",
    "start": "3531450",
    "end": "3536550"
  },
  {
    "text": "stateful service when I talk about state co-located with the service I'm actually able to decide up front with a queue how",
    "start": "3536550",
    "end": "3544050"
  },
  {
    "text": "many partitions do I think I need how many concurrent you know requests for orders when Lady gaga comes to town do I",
    "start": "3544050",
    "end": "3550800"
  },
  {
    "text": "think I'm gonna need because you want to pick the highest number first and then if I only have three nodes in my cluster",
    "start": "3550800",
    "end": "3556020"
  },
  {
    "text": "it'll distribute those partitions across the three nodes but if I grow to 50 now and soar 100 nodes or 3,000 nodes then",
    "start": "3556020",
    "end": "3563100"
  },
  {
    "text": "it will distribute those partitions across all of the nodes and it will track all of that for me all I have to",
    "start": "3563100",
    "end": "3569430"
  },
  {
    "text": "do is decide how many do I need when we're thinking about data partitioning it's a little bit different because now",
    "start": "3569430",
    "end": "3574740"
  },
  {
    "text": "you're going to think oh all the customers that begin with the letter A BC through Z those are my partitions so",
    "start": "3574740",
    "end": "3580710"
  },
  {
    "text": "I'm thinking about what is the finest grain thing that's reasonable for looking up partitions so you think about",
    "start": "3580710",
    "end": "3586980"
  },
  {
    "text": "that upfront but the rest is done for you because the state has managed if that makes sense so you can see if i",
    "start": "3586980",
    "end": "3592320"
  },
  {
    "text": "refresh if it hasn't finished processing I should get a look at how many things",
    "start": "3592320",
    "end": "3597780"
  },
  {
    "text": "are in the queue it's still loading up here so let's see or it might have finished who knows let's see if I can do",
    "start": "3597780",
    "end": "3603900"
  },
  {
    "text": "that again and I'm gonna run another one because I",
    "start": "3603900",
    "end": "3609930"
  },
  {
    "text": "think it might actually be done because it's in Azure so it's probably not so slow",
    "start": "3609930",
    "end": "3615380"
  },
  {
    "text": "I'm gonna do one more and then I'm gonna go to load test and it should show me",
    "start": "3615380",
    "end": "3620430"
  },
  {
    "text": "like I said partitions with stuff in it there we go 3 2 2 3 so it's distributing",
    "start": "3620430",
    "end": "3626100"
  },
  {
    "text": "the requests across the partitions you see that so as the loads coming in and it's doing that all for me and it's",
    "start": "3626100",
    "end": "3632740"
  },
  {
    "text": "persisting it makes sense so I think that's just one aspect to know about it the other thing is that each individual",
    "start": "3632740",
    "end": "3638500"
  },
  {
    "text": "order of this processing is its own unit every single ticket order is an",
    "start": "3638500",
    "end": "3644470"
  },
  {
    "text": "actor which means the partitioning is per order which means it scales to the",
    "start": "3644470",
    "end": "3649480"
  },
  {
    "text": "widest amount there could be millions of those things running around which is the purpose of actors but the state is persisted and I didn't have to think",
    "start": "3649480",
    "end": "3655329"
  },
  {
    "text": "about it all I had to do is decide what is the order ID or the thing that will be my partition number that is unique",
    "start": "3655329",
    "end": "3661599"
  },
  {
    "text": "which is my ticket order ID make sense okay so what gets really interesting is",
    "start": "3661599",
    "end": "3668230"
  },
  {
    "text": "when I go into visual studio and do things like hey let's make something fail and try to do a deployment or a",
    "start": "3668230",
    "end": "3674650"
  },
  {
    "text": "rollback so if I want to do an upgrade in place let me see about this one",
    "start": "3674650",
    "end": "3680099"
  },
  {
    "text": "I'll just run one example of a contrived exception let's close this down for a",
    "start": "3680099",
    "end": "3687430"
  },
  {
    "text": "sec and what's happening is you can inform service fabric of your health so",
    "start": "3687430",
    "end": "3693430"
  },
  {
    "text": "if you feel like something should be a service failure which should trigger a rollback or or at least trigger UI",
    "start": "3693430",
    "end": "3700540"
  },
  {
    "text": "notifications of failure right then I can indicate hey we've not been able to",
    "start": "3700540",
    "end": "3706240"
  },
  {
    "text": "contact a payment service for you know like at least three ties let's report the error or I can't even run my config",
    "start": "3706240",
    "end": "3713349"
  },
  {
    "text": "is wrong let's report the error immediately and so when I deployed this change that I just made so let's go",
    "start": "3713349",
    "end": "3719980"
  },
  {
    "text": "ahead and do it publish to the cluster I'm gonna go and publish and I'm gonna",
    "start": "3719980",
    "end": "3726760"
  },
  {
    "text": "choose to do this locally for now just because that'll probably be a bit faster and I'm gonna say hey I want to upgrade",
    "start": "3726760",
    "end": "3734079"
  },
  {
    "text": "the application which means I'm going to take the application as I have it and I don't want to lose",
    "start": "3734079",
    "end": "3740200"
  },
  {
    "text": "any state I just want to upgrade Institue which means it's going to roll in my update to the services and if",
    "start": "3740200",
    "end": "3746650"
  },
  {
    "text": "everything's healthy and state the new services and retire the old ones without me having to do anything and so if I go",
    "start": "3746650",
    "end": "3754540"
  },
  {
    "text": "and configure the upgrade settings it'll let me choose things like a monitored upgrade and the failure action will be",
    "start": "3754540",
    "end": "3761440"
  },
  {
    "text": "rollback so there's that and then lastly I need to version the manifest so what",
    "start": "3761440",
    "end": "3766589"
  },
  {
    "text": "is my change right I'm changing the order service so the new version is going to be one point one let's say and",
    "start": "3766589",
    "end": "3773220"
  },
  {
    "text": "that's going to now version the application right so okay yeah yeah yeah",
    "start": "3773220",
    "end": "3779720"
  },
  {
    "text": "okay so I'm think probably I think that",
    "start": "3779720",
    "end": "3785160"
  },
  {
    "text": "should do it and then I'm going to try and do a publish so this will do a publish locally and if I look at my",
    "start": "3785160",
    "end": "3791549"
  },
  {
    "text": "local cluster while it's publishing we should be able to watch this is my local right we should be able to watch",
    "start": "3791549",
    "end": "3799400"
  },
  {
    "text": "the status upgrade in progress you see that",
    "start": "3799400",
    "end": "3804930"
  },
  {
    "text": "and we should be able to watch let's see if we can get to oh",
    "start": "3804930",
    "end": "3812328"
  },
  {
    "text": "that's weird I'm not seeing what I'm expecting",
    "start": "3813619",
    "end": "3820970"
  },
  {
    "text": "oh that's so strange okay I don't sure why that's happening I must have deployed you know what it is I deployed",
    "start": "3831780",
    "end": "3837810"
  },
  {
    "text": "it to the cloud I didn't deploy it to local so my upgrade is going to the wrong spot it's not really upgrading",
    "start": "3837810",
    "end": "3843900"
  },
  {
    "text": "there you go let's try that again I can fix this",
    "start": "3843900",
    "end": "3849140"
  },
  {
    "text": "I'm sorry it's rebuilding right now sorry",
    "start": "3849140",
    "end": "3856400"
  },
  {
    "text": "yeah yeah I think the failure though is related to what I just said well we'll see yeah",
    "start": "3859760",
    "end": "3867019"
  },
  {
    "text": "your cluster ooh yeah okay I'm gonna choose the right cluster angles and",
    "start": "3868790",
    "end": "3875790"
  },
  {
    "text": "we're gonna do an upgrade and we're gonna just check that I've got the right",
    "start": "3875790",
    "end": "3880980"
  },
  {
    "text": "version so I'm gonna version this service package",
    "start": "3880980",
    "end": "3886760"
  },
  {
    "text": "okay well we're at time so I'm going to just give this a shot and",
    "start": "3886760",
    "end": "3893210"
  },
  {
    "text": "what I should see then in my cluster up here is if the upgrades in progress I",
    "start": "3893210",
    "end": "3899460"
  },
  {
    "text": "don't know why it showed upgrade in progress or maybe I was just getting confused because it said zero and that",
    "start": "3899460",
    "end": "3904800"
  },
  {
    "text": "should have been a tickler it wasn't doing it let's see so it's still building",
    "start": "3904800",
    "end": "3911010"
  },
  {
    "text": "probably I won't show up here until it's finished building so while that's building I'm gonna let that go for a sec",
    "start": "3911010",
    "end": "3917100"
  },
  {
    "text": "and then let's just sort of again wrap up the discussion so a couple things hey I've got screenshots for",
    "start": "3917100",
    "end": "3923610"
  },
  {
    "text": "things that maybe you didn't see it so for example of creating progress that happened okay so the target version will",
    "start": "3923610",
    "end": "3931890"
  },
  {
    "text": "show what it's going to move to and then it'll show you how it's getting through the upgrade domains across the notes while it's happening and when it's done",
    "start": "3931890",
    "end": "3939480"
  },
  {
    "text": "it should show you the new version which means it was successful yeah when it fails it will show you exceptions and",
    "start": "3939480",
    "end": "3947250"
  },
  {
    "text": "we'll actually while it's upgrading eventually show rollback in progress and",
    "start": "3947250",
    "end": "3952470"
  },
  {
    "text": "so it actually won't deploy the new services so that's a really helpful interesting thing",
    "start": "3952470",
    "end": "3957890"
  },
  {
    "text": "so it's it's interesting when you compare the platform's right this picture is really just showing what I",
    "start": "3957890",
    "end": "3964290"
  },
  {
    "text": "suggested before which is the thing that I have on my github which is a hierarchical set of actors to where when",
    "start": "3964290",
    "end": "3971559"
  },
  {
    "text": "I create a new sales order in New York it actually updates the totals for you si and then Americas and in global with",
    "start": "3971559",
    "end": "3977950"
  },
  {
    "text": "reminders which are durable that remind themselves when the actors finished saving its state to go tell its parent",
    "start": "3977950",
    "end": "3984549"
  },
  {
    "text": "to save and so on and so on and so it's creating this chain of actors saving updated state to where eventually I",
    "start": "3984549",
    "end": "3991119"
  },
  {
    "text": "actually have a correct total across all the way up to global of all of the sales orders across the organization so that",
    "start": "3991119",
    "end": "3997839"
  },
  {
    "text": "eventually that event sourcing model is actually kind of a thing you can build into service fabric really easily and I",
    "start": "3997839",
    "end": "4005760"
  },
  {
    "text": "think that's pretty neat because that's a very complicated model to build so that's something to look at you can read my blog about that and then I think I've",
    "start": "4005760",
    "end": "4014369"
  },
  {
    "text": "already covered this so let's keep moving on there we've talked about the density and scale",
    "start": "4014369",
    "end": "4021450"
  },
  {
    "text": "we talked about partitions so there's just a visual around that so I guess it comes down to this so when you think",
    "start": "4021450",
    "end": "4027779"
  },
  {
    "text": "about choosing a platform you know we've talked about how you break down your services that you might want to consider State and ownership of state and then",
    "start": "4027779",
    "end": "4034980"
  },
  {
    "text": "you might want to consider how do I relate the state and how do i do aggregate ad hoc queries so and then",
    "start": "4034980",
    "end": "4040680"
  },
  {
    "text": "there's the side of it which is the managing of the networking and the clustering and the density of services",
    "start": "4040680",
    "end": "4045930"
  },
  {
    "text": "across the nodes but I've now showed you two platforms that actually can handle the density and distribution and",
    "start": "4045930",
    "end": "4052079"
  },
  {
    "text": "automatic port mapping and load balancing of the actual services which",
    "start": "4052079",
    "end": "4057359"
  },
  {
    "text": "is kind of cool right I would say and then you know the whole idea of registry",
    "start": "4057359",
    "end": "4063750"
  },
  {
    "text": "and discovery is related to that when I ever deploy another service it registers with the discovery system so that when",
    "start": "4063750",
    "end": "4070349"
  },
  {
    "text": "somebody wants to call it you know the load balanced environment knows how to find you know instances of the service",
    "start": "4070349",
    "end": "4077160"
  },
  {
    "text": "across all of your notes right self-healing another thing the rollback",
    "start": "4077160",
    "end": "4082529"
  },
  {
    "text": "that I just showed you for example and being able to detect when a service is not working so having those pings in",
    "start": "4082529",
    "end": "4088890"
  },
  {
    "text": "place both of those environments do that so it's just a matter of leveraging the tools available to you instead of going",
    "start": "4088890",
    "end": "4094170"
  },
  {
    "text": "raw docker for example you can do similar things with docker data center although that doesn't have all of the UI",
    "start": "4094170",
    "end": "4100528"
  },
  {
    "text": "built-in you can do similar things with Amazon ec2 container services but again",
    "start": "4100529",
    "end": "4105838"
  },
  {
    "text": "doesn't have the whole UI built in so one of the choices that we've recently gone through is that you know the DC OS",
    "start": "4105839",
    "end": "4112349"
  },
  {
    "text": "doesn't have to be on a sure container services but in general that platform",
    "start": "4112349",
    "end": "4117659"
  },
  {
    "text": "has you know with marathon the tooling and the visuals around managing the ecosystem and the discovery and the load",
    "start": "4117659",
    "end": "4123750"
  },
  {
    "text": "balancing and the health and so that's nice and then with service pack you get a little bit of the same with a different development experience and the",
    "start": "4123750",
    "end": "4130409"
  },
  {
    "text": "state management side of it is really sweet on the service fabric side so you know finding the right fit for you is",
    "start": "4130409",
    "end": "4136619"
  },
  {
    "text": "probably going to be obviously what platform are you sort of having an affinity to naturally what do you know",
    "start": "4136619",
    "end": "4142650"
  },
  {
    "text": "already Linux windows etc what's more comfortable time line cost time to",
    "start": "4142650",
    "end": "4149639"
  },
  {
    "text": "market and whether or not you have time to learn that new ecosystem or environment or you can think about",
    "start": "4149639",
    "end": "4155670"
  },
  {
    "text": "things like migrating slowly right so one thing we know is micro services are part of your future our future",
    "start": "4155670",
    "end": "4162650"
  },
  {
    "text": "she's creepy I just think it's funny so we can take a quick look and see if",
    "start": "4162650",
    "end": "4168480"
  },
  {
    "text": "that works although that could be a good or bad thing to end the show for",
    "start": "4168480",
    "end": "4173778"
  },
  {
    "text": "mmm let's see what we got over here I'm taking a risk we'll see if it upgraded I",
    "start": "4173779",
    "end": "4181380"
  },
  {
    "text": "don't know what you saw the picture right so there okay",
    "start": "4181380",
    "end": "4188389"
  },
  {
    "text": "thanks for coming out for an hour and a bit more I hope that was enjoyable to you and even with the comic relief in",
    "start": "4188389",
    "end": "4194909"
  },
  {
    "text": "the middle so have a great day [Applause]",
    "start": "4194909",
    "end": "4203408"
  }
]