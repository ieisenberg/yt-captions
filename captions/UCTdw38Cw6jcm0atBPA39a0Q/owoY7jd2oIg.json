[
  {
    "text": "so basically I declare a class slap on a bunch of attributes and then some magic happens right so um but then I was like",
    "start": "5240",
    "end": "14400"
  },
  {
    "text": "okay is it really a unit test or not we're going to answer this these questions throughout the talk but I felt",
    "start": "14400",
    "end": "20080"
  },
  {
    "text": "quite certain it wouldn't take me long to actually be able to write a class with a bunch of attributes and then have",
    "start": "20080",
    "end": "25480"
  },
  {
    "text": "a good and reliable Benchmark really simple right but I was really wrong",
    "start": "25480",
    "end": "31360"
  },
  {
    "text": "because writing sort of that class or that skeleton for a benchmark that was",
    "start": "31360",
    "end": "36559"
  },
  {
    "text": "indeed very very simple because it's just a bunch of code I know C I know how to slap attributes on a class right but",
    "start": "36559",
    "end": "42520"
  },
  {
    "text": "sort of the mindboggling part for me was that I was trying to figure out what should I actually take into account in",
    "start": "42520",
    "end": "49079"
  },
  {
    "text": "The Benchmark right what should I actually try to measure and uh I mean I",
    "start": "49079",
    "end": "55120"
  },
  {
    "text": "write codes and sometimes my code is not the best code sometimes it's very entangled and has a bunch of",
    "start": "55120",
    "end": "60600"
  },
  {
    "text": "dependencies right but usually when you look at these block FST online you see very simple code someone calls a static",
    "start": "60600",
    "end": "66360"
  },
  {
    "text": "method right but your code or my at least I can only talk about my code my code is not as perfect as all the other",
    "start": "66360",
    "end": "73119"
  },
  {
    "text": "examples on the internet so I was like how do I actually isolate my code so that I can measure it without basically",
    "start": "73119",
    "end": "79439"
  },
  {
    "text": "investing tons and tons of time in actually refactoring this code so that I can actually Benchmark it and then what",
    "start": "79439",
    "end": "86360"
  },
  {
    "text": "I was also thinking when I do these steps in order to Benchmark what should I sort of cut away from my code so that",
    "start": "86360",
    "end": "92320"
  },
  {
    "text": "I'm actually measuring the things that I want to see to observe right without taking countless noise into account that",
    "start": "92320",
    "end": "98840"
  },
  {
    "text": "sort of deviates my attention to parts that I'm not actually want to focus on and then the other thing was also how do",
    "start": "98840",
    "end": "104960"
  },
  {
    "text": "I go through this sort of cycle of measure change and measure so that I actually know that I'm improving things",
    "start": "104960",
    "end": "111640"
  },
  {
    "text": "without burning away my allotted budget that what I what I did I have because um",
    "start": "111640",
    "end": "117079"
  },
  {
    "text": "I I started make no longer making a fuss about shop title so I call myself principal chocolate lover these days",
    "start": "117079",
    "end": "122960"
  },
  {
    "text": "because I think chob titles are useless right but uh as a matter of fact I'm not a performance engineer my goal is I need",
    "start": "122960",
    "end": "130440"
  },
  {
    "text": "to write business code that makes an impact for our customers right and you're probably also another performance",
    "start": "130440",
    "end": "135480"
  },
  {
    "text": "engineer so that means you have only a limited budget available to actually invest into performance investigations",
    "start": "135480",
    "end": "142400"
  },
  {
    "text": "and I must say sometimes I consider sort of these performance optimizations just",
    "start": "142400",
    "end": "147599"
  },
  {
    "text": "to feed my inner geek and I do that in front of the TV while watching some TV series and trying to improve the overall",
    "start": "147599",
    "end": "154319"
  },
  {
    "text": "situation right so that means by by the nature of it at some point I need to go to bed right that's or actually I have a",
    "start": "154319",
    "end": "161239"
  },
  {
    "text": "hack because I know I get I tend to go over over midnight so I have a hack at home that switches off my internet",
    "start": "161239",
    "end": "167959"
  },
  {
    "text": "around midnight so that I actually go to bed and not spend too much time right so essentially what I want to say is we",
    "start": "167959",
    "end": "173640"
  },
  {
    "text": "only have limited time available and we want to use the time that we have in in sort of efficient ways but then the",
    "start": "173640",
    "end": "179640"
  },
  {
    "text": "question question is why do we even should we even bother to actually do this performance optimizations right so",
    "start": "179640",
    "end": "185319"
  },
  {
    "text": "for code that is executed at scale the overall throughput and memory characteristics they really really",
    "start": "185319",
    "end": "191040"
  },
  {
    "text": "matter right and especially today where we start to realize more and more that",
    "start": "191040",
    "end": "197159"
  },
  {
    "text": "we're living on planet Earth which has scarse resources available right we have energy and we consume energy Cod that is",
    "start": "197159",
    "end": "203720"
  },
  {
    "text": "executed in data centers consumes energy so we need to make sure that the code that we execute is as efficiently as",
    "start": "203720",
    "end": "209840"
  },
  {
    "text": "possible and that's sort of the green it movement right but even if you're saying well Daniel don't bother me with this",
    "start": "209840",
    "end": "215239"
  },
  {
    "text": "green it stuff I heard enough about it I'm kind of tired of it at the end of the day when you think about when you're",
    "start": "215239",
    "end": "221360"
  },
  {
    "text": "going to sort of move towards the cloud or maybe you're all are already in the cloud what you have there is you have a",
    "start": "221360",
    "end": "228000"
  },
  {
    "text": "credit card associated with your cloud account right and then you have sort of arbitrary numbers and the cloud venders",
    "start": "228000",
    "end": "234360"
  },
  {
    "text": "make it really really deceiving for us because we don't really know we have we have some arbitrary metrics and then get",
    "start": "234360",
    "end": "240280"
  },
  {
    "text": "turned somehow into charging our credit card right sometimes it's premium messaging unit throughput units premium",
    "start": "240280",
    "end": "247079"
  },
  {
    "text": "messaging throughput units or whatever or some gigabytes per second some arbitrary metrics right but at the end",
    "start": "247079",
    "end": "252599"
  },
  {
    "text": "of the day what it means we are going to get charged for the code that is executed in the cloud so what we want to",
    "start": "252599",
    "end": "258840"
  },
  {
    "text": "make sure is we want to make sure our code is as efficiently as possible so that we only ever get charged what we",
    "start": "258840",
    "end": "264639"
  },
  {
    "text": "really want to pay for the services that uh we are using but let me give you more",
    "start": "264639",
    "end": "270000"
  },
  {
    "text": "practical example so Microsoft has this sort of blog post series um where they sort of talk about sort of the internal",
    "start": "270000",
    "end": "276320"
  },
  {
    "text": "movements of uh of teams that are sort of migrating codes internally in Microsoft and this one here is uh from",
    "start": "276320",
    "end": "284199"
  },
  {
    "text": "the Microsoft teams and infrastructure Services team and they have this quote we are able to see Azure compute cost",
    "start": "284199",
    "end": "291039"
  },
  {
    "text": "reduction of up to 50% per month on average we observe 24% of monthly cost",
    "start": "291039",
    "end": "296639"
  },
  {
    "text": "reduction after migrating to net 6 the reduction in course reduced ashes spend by",
    "start": "296639",
    "end": "302360"
  },
  {
    "text": "24% so what they did is essentially they blocked about their journey of moving from NET Framework to net 6 right so by",
    "start": "302360",
    "end": "310080"
  },
  {
    "text": "just moving from NET Framework to net 6 and leveraging some more programming techniques and the improvements that the",
    "start": "310080",
    "end": "317320"
  },
  {
    "text": "net runtime team did over time they were able to reduce the cloud cost spending",
    "start": "317320",
    "end": "323080"
  },
  {
    "text": "by over 24% and I can guarantee you even if you manage to reduce the cloud cost of 5 or",
    "start": "323080",
    "end": "330319"
  },
  {
    "text": "10% your boss is going to be super super happy right and 24% is actually amazing",
    "start": "330319",
    "end": "337440"
  },
  {
    "text": "right so in this talk I sort of have summarized my personal lessons on how to",
    "start": "337440",
    "end": "342600"
  },
  {
    "text": "make performance optimizations actionable so that you have a structured approach that you can leverage when you",
    "start": "342600",
    "end": "348600"
  },
  {
    "text": "doing performance optimizations but it all starts for me essentially as a",
    "start": "348600",
    "end": "354360"
  },
  {
    "text": "reasonable team or as a reasonable senior or even software engineer I think you need to be become performance aware",
    "start": "354360",
    "end": "361400"
  },
  {
    "text": "what does that mean when well one of the key principles that I always try to",
    "start": "361400",
    "end": "366840"
  },
  {
    "text": "apply uh for myself is I want to make explicit tradeoffs whenever I make decisions together with my teams for my",
    "start": "366840",
    "end": "374000"
  },
  {
    "text": "code for my architecture and also for my performance decision making right so",
    "start": "374000",
    "end": "379280"
  },
  {
    "text": "this also applies to Performance and you should be performance aware but my f",
    "start": "379280",
    "end": "384479"
  },
  {
    "text": "Friend Martin B bio from jet brins once famously said um and you need when you're going to go on a hike in certain",
    "start": "384479",
    "end": "391479"
  },
  {
    "text": "types of countries you need to become bare aware um for example when you're hiking in Canada the likelihood of you",
    "start": "391479",
    "end": "398759"
  },
  {
    "text": "crossing the path of a bear it's there essentially I did some research in preparation for this talk and I I saw",
    "start": "398759",
    "end": "406039"
  },
  {
    "text": "that bears in Switzerland where I live they have actually disappeared for more than a 100 years and in 2005 there was",
    "start": "406039",
    "end": "412840"
  },
  {
    "text": "like one single brown bear that crossed from from from North Italy into the",
    "start": "412840",
    "end": "418000"
  },
  {
    "text": "South Switzerland border and from there on we had a bear again in Switzerland but I'm totally digressing here so what",
    "start": "418000",
    "end": "424599"
  },
  {
    "text": "I want you to say basically is similar to being bearware you have to be and",
    "start": "424599",
    "end": "430080"
  },
  {
    "text": "you're preparing yourself for the likelihood of a bear to cross your path you know how to deal with a situation",
    "start": "430080",
    "end": "435840"
  },
  {
    "text": "like a bear right and here in this talk I want to teach you some key lessons that you can learn to become slowly",
    "start": "435840",
    "end": "442160"
  },
  {
    "text": "performance aware and then start applying when you actually uh need it good and then usually I get the question",
    "start": "442160",
    "end": "449000"
  },
  {
    "text": "what perform performance aware does it mean I have to go all in no not at all and I'm going to talk about this in fact",
    "start": "449000",
    "end": "455919"
  },
  {
    "text": "I always start with The Simple Solution first so what I do is I basically think",
    "start": "455919",
    "end": "460960"
  },
  {
    "text": "about the business requirements whatever I want to implement and then what I'm going to do is I'm going to write a",
    "start": "460960",
    "end": "466199"
  },
  {
    "text": "bunch of test whether I do test development test first or test after doesn't really matter to me I'm not",
    "start": "466199",
    "end": "471599"
  },
  {
    "text": "religious about that but I want to have some test in place so that I I actually know that the thing is working then I",
    "start": "471599",
    "end": "478599"
  },
  {
    "text": "write the simplest thing that sort of fulfills those tests and the requirement that I have and then I basically usually",
    "start": "478599",
    "end": "485280"
  },
  {
    "text": "ship this uh because only when I ship the code I know that he actually does um",
    "start": "485280",
    "end": "490520"
  },
  {
    "text": "or or at least in our C cicd environment but what I also do is I make a sort of a",
    "start": "490520",
    "end": "496080"
  },
  {
    "text": "step back and ask myself a bunch of questions and the first question I usually ask myself is um how is this",
    "start": "496080",
    "end": "502919"
  },
  {
    "text": "code going to be executed at scale and what would be the memory characteristics of this code B and this is purely based",
    "start": "502919",
    "end": "509280"
  },
  {
    "text": "on some God feeling based on my over 15 years of sort of experience being in the net space right so I basically look at",
    "start": "509280",
    "end": "515440"
  },
  {
    "text": "the code and try to reason how it should would behave that simplest solution and",
    "start": "515440",
    "end": "521000"
  },
  {
    "text": "then I'm going to ask myself are there some simple lwh hanging fruits that I can do to accelerate uh this this code",
    "start": "521000",
    "end": "528360"
  },
  {
    "text": "that I'm looking at right and then what I'm also going to do I'm going to think about well are there things that can",
    "start": "528360",
    "end": "535000"
  },
  {
    "text": "move away from the hot path by simply restructuring the code a bit as an example right so for example instead of",
    "start": "535000",
    "end": "542240"
  },
  {
    "text": "instantiating a bite array every time I have the request I ask myself well is this code going to be executed in a loop",
    "start": "542240",
    "end": "549079"
  },
  {
    "text": "is there some multi threading involved yes or no or can I basically move the bite array allocation outside of the",
    "start": "549079",
    "end": "554560"
  },
  {
    "text": "loop and then just reuse the same bite array because then instead of you creating a new bite array every time the",
    "start": "554560",
    "end": "560160"
  },
  {
    "text": "loop is iteration is executed I only do it once and then I can basically amortise the cost of that b that's one",
    "start": "560160",
    "end": "566800"
  },
  {
    "text": "simple strategy I I do and then I also ask myself the question what part is under my control and what isn't really",
    "start": "566800",
    "end": "573680"
  },
  {
    "text": "right because sometimes I'm working with a third party wender Library maybe if I'm lucky that one is open source and",
    "start": "573680",
    "end": "579800"
  },
  {
    "text": "maybe I can sort of contribute to that third party Library can improve the code when I see something but that's not",
    "start": "579800",
    "end": "585480"
  },
  {
    "text": "always possible sometimes I work with close close uh Source library or sometimes I have to work with code from",
    "start": "585480",
    "end": "591839"
  },
  {
    "text": "another team right so and then if I see some problems I first have to basically make sure that I need to go to them make",
    "start": "591839",
    "end": "598600"
  },
  {
    "text": "sure I have my stuff has priority in their backlogs and stuff like that right so I need to understand what is is",
    "start": "598600",
    "end": "605519"
  },
  {
    "text": "actually in my control and what isn't really because that's that context really matters for me to make sort of",
    "start": "605519",
    "end": "610839"
  },
  {
    "text": "performance optimizations and explicit tra tradeoffs and then also because I told you I have a limited budget",
    "start": "610839",
    "end": "616720"
  },
  {
    "text": "available always I have to think about what optimizations can I apply now can I",
    "start": "616720",
    "end": "621760"
  },
  {
    "text": "sort of defer to a later stage in time when I know more about the characteristics of the code and how it's",
    "start": "621760",
    "end": "627040"
  },
  {
    "text": "being executed at scale and when should I I stop right because I must confess these types of performance optimizations",
    "start": "627040",
    "end": "633079"
  },
  {
    "text": "for me they're highly addictive right and at some point I was like oh it's like an Adin in rush you like one more",
    "start": "633079",
    "end": "638680"
  },
  {
    "text": "and one more allocation well one less allocation and a bit more uh throughput and whatnot but at some point it's like",
    "start": "638680",
    "end": "644959"
  },
  {
    "text": "yeah we're reaching a point of diminishing return right so what I want to say is it's important to find the",
    "start": "644959",
    "end": "651399"
  },
  {
    "text": "right balance the problem is I cannot give you like a cheat sheet here in this talk to say this is always going to be",
    "start": "651399",
    "end": "657839"
  },
  {
    "text": "the right balance so you it's really the context of finding right balance matters a lot um I I gave a talk last year at NC",
    "start": "657839",
    "end": "665880"
  },
  {
    "text": "that was called performance tricks I learned from contributing to open source.net packages the QR code is here",
    "start": "665880",
    "end": "671440"
  },
  {
    "text": "if you're interested to see optimization techniques for c.net that give you sort of hints how you can make your c.net",
    "start": "671440",
    "end": "678079"
  },
  {
    "text": "code faster this is going to be the talk today I'm not going to talk about specific C and. Net things that's out of",
    "start": "678079",
    "end": "684800"
  },
  {
    "text": "scope for this talk but and by the way if you can't make a a picture of the QR code I also have resources at the end of",
    "start": "684800",
    "end": "691279"
  },
  {
    "text": "the talk so that you can sort of go back back to this talk okay so I sort of when",
    "start": "691279",
    "end": "697560"
  },
  {
    "text": "I started doing this performance optimization I started asking myself what do I actually do in order to sort",
    "start": "697560",
    "end": "703320"
  },
  {
    "text": "of find the right approach and I came up with this sort of great I feel great mechanical approach uh to do performance",
    "start": "703320",
    "end": "710079"
  },
  {
    "text": "optimizations in a very structured way so what I do first is I always start in",
    "start": "710079",
    "end": "715760"
  },
  {
    "text": "the performance loop with profiling so what I do is I create a sample or test",
    "start": "715760",
    "end": "722200"
  },
  {
    "text": "harness and that sample and test harness basically reproduces the scenario that I",
    "start": "722200",
    "end": "727639"
  },
  {
    "text": "want to sort of profile and what I then do I always take at least a CPU and a",
    "start": "727639",
    "end": "734560"
  },
  {
    "text": "memory profile that's the bare minimum that I do because I always need to see those two views and by the way if you",
    "start": "734560",
    "end": "741760"
  },
  {
    "text": "have a reasonably reasonably um large system you're always going to have iob",
    "start": "741760",
    "end": "747000"
  },
  {
    "text": "bound stuff as well database call HTP call and whatnot right so iob bound stuff is usually hundreds and thousands",
    "start": "747000",
    "end": "753279"
  },
  {
    "text": "of times slower than CPU memory stuff so you should also look into your ey bound",
    "start": "753279",
    "end": "758399"
  },
  {
    "text": "stuff so a test harness should also reproduce that that's out of scope for today's talk because today I'm only",
    "start": "758399",
    "end": "764160"
  },
  {
    "text": "going to focus on CPU and memory in the interest of of time okay so and what I",
    "start": "764160",
    "end": "769839"
  },
  {
    "text": "do is with that sort of test harness I can then attach a profiler and then I get sort of profiling snapshots out of",
    "start": "769839",
    "end": "776079"
  },
  {
    "text": "it flame graphs and whatnot and then the next thing what I do is basically from",
    "start": "776079",
    "end": "781800"
  },
  {
    "text": "what what I see from these profiling snap snapshots I get an overview of what's actually going on in the code",
    "start": "781800",
    "end": "788440"
  },
  {
    "text": "right I see the memory allocations I see the CPU that is spent and then with that it allows me to sort of navigate and",
    "start": "788440",
    "end": "795240"
  },
  {
    "text": "focus on the parts that I want to focus on and then I start sort of improving the hot path that I I see and the",
    "start": "795240",
    "end": "802360"
  },
  {
    "text": "question is usually what is the hot path actually right because what your profiler might show you it might show",
    "start": "802360",
    "end": "808160"
  },
  {
    "text": "you like different things that are slow different things that are allocating lots and lots of stuff and where should",
    "start": "808160",
    "end": "814040"
  },
  {
    "text": "you actually focus on so I try to not sort of get hung up too much on sort of",
    "start": "814040",
    "end": "819600"
  },
  {
    "text": "oh I'm I'm picking the one with the biggest allocations or I'm picking the one with the most CPU spend because",
    "start": "819600",
    "end": "825959"
  },
  {
    "text": "contextually what really matters is what do I know about the code base in",
    "start": "825959",
    "end": "831120"
  },
  {
    "text": "question right so because in order to do improvements to a CO code base you need a lot of context because that context",
    "start": "831120",
    "end": "838360"
  },
  {
    "text": "helps you to make the right tradeoffs to actually improve it right so what it means is I basically take the thing that",
    "start": "838360",
    "end": "844000"
  },
  {
    "text": "I have the most context upon or I know I have sort of the the biggest impact with",
    "start": "844000",
    "end": "849199"
  },
  {
    "text": "my knowledge and then I start improving that and I apply the philosophy of 1%",
    "start": "849199",
    "end": "855199"
  },
  {
    "text": "improvements and what I want to say is instead of caring about oh this is the biggest priority I start applying",
    "start": "855199",
    "end": "862800"
  },
  {
    "text": "hundreds of small improvements 1% improvements over time and the compounding effect of all these",
    "start": "862800",
    "end": "868360"
  },
  {
    "text": "improvements over over the code base they actually add up and they start to matter over time and as a matter of fact",
    "start": "868360",
    "end": "874000"
  },
  {
    "text": "the net team does exactly the same right every time you read this giant book of",
    "start": "874000",
    "end": "879560"
  },
  {
    "text": "from Steven tab about the performance blog post these are hundreds of thousands of PRS that do small tweaks",
    "start": "879560",
    "end": "887360"
  },
  {
    "text": "here and there and there and over time that's what gives you the big bang for bucks in the net improvements blog post",
    "start": "887360",
    "end": "893639"
  },
  {
    "text": "right that's exactly the the same uh philosophy and what what's also",
    "start": "893639",
    "end": "899440"
  },
  {
    "text": "important before I really improve things I always make sure that I have reasonable test coverage in place right",
    "start": "899440",
    "end": "905639"
  },
  {
    "text": "because without test coverage in place I could actually make things faster but",
    "start": "905639",
    "end": "911279"
  },
  {
    "text": "that doesn't help when it's utterly broken right so because then it's the fastest sorry for the worksheet solution",
    "start": "911279",
    "end": "918079"
  },
  {
    "text": "in place so that's not going to be helpful for for anyone good and then uh",
    "start": "918079",
    "end": "923720"
  },
  {
    "text": "what I usually do is essentially um I I sort of start then benchmarking and",
    "start": "923720",
    "end": "928959"
  },
  {
    "text": "comparing my improvements and then what I also do is I have sort of an inner loop in this",
    "start": "928959",
    "end": "934079"
  },
  {
    "text": "performance Loop because sometimes when I do improvements and then do a benchmark I learn more about my",
    "start": "934079",
    "end": "940839"
  },
  {
    "text": "assumptions about the code and that gives me new ideas how I can improve the code and then I basically go through",
    "start": "940839",
    "end": "946839"
  },
  {
    "text": "this inner loop of sort of improve Benchmark improve Benchmark and I usually do in the benchmarking stage I",
    "start": "946839",
    "end": "952600"
  },
  {
    "text": "do with",
    "start": "952600",
    "end": "955079"
  },
  {
    "text": "um a less St statistically significant way of getting a result because all I",
    "start": "959440",
    "end": "965120"
  },
  {
    "text": "want to see is I want to sort of see a North a direction whether I'm going in the right direction or whether my",
    "start": "965120",
    "end": "971040"
  },
  {
    "text": "improvements are actually making things worse that's what I care about at this stage okay and then um I basically that",
    "start": "971040",
    "end": "979560"
  },
  {
    "text": "is a step that Mo most of the time gets forgotten I basically go back into the test harness take my improvements that I",
    "start": "979560",
    "end": "986199"
  },
  {
    "text": "did once I'm reasonably certain that I'm I'm basically going to the final solution and I put it back into that uh",
    "start": "986199",
    "end": "992959"
  },
  {
    "text": "sort of profiling harness or test harness or sample whatever you want to call it and actually trying to find out",
    "start": "992959",
    "end": "999959"
  },
  {
    "text": "whether the things are actually making an impact from the macro perspective and then at the end of the day I ship it",
    "start": "999959",
    "end": "1007519"
  },
  {
    "text": "because this sounds so obvious but the amount of time I have seen sort of code",
    "start": "1007519",
    "end": "1012639"
  },
  {
    "text": "and improvements linging around just on the cicd system and not being shipped that it's it's crazy because at the end",
    "start": "1012639",
    "end": "1019240"
  },
  {
    "text": "of the day all we do is we're making assumptions we make assumptions with our Benchmark with our Improvement how the",
    "start": "1019240",
    "end": "1025720"
  },
  {
    "text": "code is going to behave so I advise you to ship the code fire on your monitoring",
    "start": "1025720",
    "end": "1031240"
  },
  {
    "text": "system your Telemetry stuff right and actually find out in the real grandom scheme when you're getting when your",
    "start": "1031240",
    "end": "1038280"
  },
  {
    "text": "requests are getting in from the users whether the stuff is actually uh giving you the results that you were hoping for",
    "start": "1038280",
    "end": "1044678"
  },
  {
    "text": "right and then let me give you a a a sort of a an example how I did this with",
    "start": "1044679",
    "end": "1051320"
  },
  {
    "text": "an service bus and by the way um I'm a I'm a framework and Library engineer so",
    "start": "1051320",
    "end": "1056360"
  },
  {
    "text": "I'm going to use an example out of my profession but you might be thinking yeah but Daniel come on framework and",
    "start": "1056360",
    "end": "1062080"
  },
  {
    "text": "libraries is a completely different sort of context than actually me as an application developer so what I'm going",
    "start": "1062080",
    "end": "1068080"
  },
  {
    "text": "to show you here with examples of answer response is 100% applicable as a",
    "start": "1068080",
    "end": "1073160"
  },
  {
    "text": "structured approach also to your application code so please bear with me a little bit okay and so answer response",
    "start": "1073160",
    "end": "1079679"
  },
  {
    "text": "is basically a messaging framework and abstraction and what it does it sort of connects to message sking systems like",
    "start": "1079679",
    "end": "1086640"
  },
  {
    "text": "Amazon s Amazon sqs SNS rabit mq as service bus and it sort of pumps",
    "start": "1086640",
    "end": "1091880"
  },
  {
    "text": "messages from q's and then it evokes arbitrary customer code that the customer puts uh into the framework and",
    "start": "1091880",
    "end": "1099919"
  },
  {
    "text": "while before it invokes sort of the code what it does it does detalization of",
    "start": "1099919",
    "end": "1105120"
  },
  {
    "text": "code it does unit of work management it go sort of inter interacts with persistence like Dynamo DB and hibernate",
    "start": "1105120",
    "end": "1112440"
  },
  {
    "text": "Entity framework SQL Server whatever right but I don't want to go more in details about an response because that's",
    "start": "1112440",
    "end": "1118840"
  },
  {
    "text": "not the focus of today's talk if you want to know more about en response you can go to go. particular.net",
    "start": "1118840",
    "end": "1124600"
  },
  {
    "text": "nc- Porto d202 24- quick start but the most critical infrastructure piece of an",
    "start": "1124600",
    "end": "1131440"
  },
  {
    "text": "respon is the answer response uh uh pipeline uh and what the answer response",
    "start": "1131440",
    "end": "1137039"
  },
  {
    "text": "pipeline does is whenever a message comes in it essentially sort of invokes a series of behaviors and essentially",
    "start": "1137039",
    "end": "1144520"
  },
  {
    "text": "what the sort of the core offensive response follows the open close principle what what it does is it has a",
    "start": "1144520",
    "end": "1150480"
  },
  {
    "text": "very thin core and then it has a bunch of behaviors that could get plugged in where we essentially implement the",
    "start": "1150480",
    "end": "1156320"
  },
  {
    "text": "features that we provide for our customers but customers can also plug in into the framework to do their stuff and",
    "start": "1156320",
    "end": "1162440"
  },
  {
    "text": "these are those behaviors that are going to be executed but for those that are not familiar uh with for example answer",
    "start": "1162440",
    "end": "1168960"
  },
  {
    "text": "response maybe you have heard of the ASP cor middleware ASP cor middleware is",
    "start": "1168960",
    "end": "1174360"
  },
  {
    "text": "very very similar like behaviors you declare a class you have a next delegate and then you can basically uh an invoke",
    "start": "1174360",
    "end": "1181400"
  },
  {
    "text": "asnc is called and then it's you can do await next and before the next you can basically do work that becomes before",
    "start": "1181400",
    "end": "1188360"
  },
  {
    "text": "everything that is called after the the rest of sort of the pipeline and then everything that comes on line 11 is when",
    "start": "1188360",
    "end": "1195720"
  },
  {
    "text": "the the rest of the pipeline is going to be executed and an response sort of",
    "start": "1195720",
    "end": "1201440"
  },
  {
    "text": "behaviors are very similar you inherit from a class you define um some state that comes in and then you have an",
    "start": "1201440",
    "end": "1207760"
  },
  {
    "text": "invoke method and you have an await next where you sort of have stuff that becomes before the next and then stuff",
    "start": "1207760",
    "end": "1213840"
  },
  {
    "text": "that you have after uh the next and in here all sort of the magic of the framework happens we do diarization we",
    "start": "1213840",
    "end": "1220760"
  },
  {
    "text": "do uh unit of work management we do resolve stuff from um sort of scope dependencies from the ioc container and",
    "start": "1220760",
    "end": "1227600"
  },
  {
    "text": "we call into Dynamo DB Cosmos DB everything happens essentially there so",
    "start": "1227600",
    "end": "1233159"
  },
  {
    "text": "what that means is essentially this part the pipeline part of an response needs",
    "start": "1233159",
    "end": "1238200"
  },
  {
    "text": "to be super fast because we never want to be in a situation where the custom comes to us and says um we think your",
    "start": "1238200",
    "end": "1244400"
  },
  {
    "text": "framework is not really working right we usually the best is when we can point out no it's actually your code it's not",
    "start": "1244400",
    "end": "1249440"
  },
  {
    "text": "the framework code so so that's why we want to make sure things are essentially uh working as fast as possible so what",
    "start": "1249440",
    "end": "1258600"
  },
  {
    "text": "what I do is so we now with this example we're stepping into sort of the first uh",
    "start": "1258600",
    "end": "1263840"
  },
  {
    "text": "step of the performance Loop and that's the profiling part right so what I'm going to do is I I want to get an",
    "start": "1263840",
    "end": "1271080"
  },
  {
    "text": "overview with the profile of the problem domain at hand and I want to see what's going on in the code that is going to be",
    "start": "1271080",
    "end": "1277799"
  },
  {
    "text": "executed and then what I usually do I take tools I I'm a big fan of the chat brains tools I usually use trace or",
    "start": "1277799",
    "end": "1285480"
  },
  {
    "text": "memory to sort of get an overview of the me M profile and of the CPU profile by",
    "start": "1285480",
    "end": "1291440"
  },
  {
    "text": "attaching to that profiling harness I want to I want to be very clear um so",
    "start": "1291440",
    "end": "1297120"
  },
  {
    "text": "maybe you have a visual studio license maybe you prefer Visual Studio performance tooling every any tool get",
    "start": "1297120",
    "end": "1304080"
  },
  {
    "text": "that gets gets you started with doing that it doesn't really matter whether you're you don't like Chet brains or you",
    "start": "1304080",
    "end": "1310559"
  },
  {
    "text": "like Visual Studio more or when maybe you're saying well I actually don't have the budget to B basically have a paid",
    "start": "1310559",
    "end": "1317159"
  },
  {
    "text": "license but I still want to do this performance optimizations and those profiling sessions what you can do is",
    "start": "1317159",
    "end": "1323159"
  },
  {
    "text": "there is a tool if you're on Windows there's a tool called perfu you can download it it's free and then you can",
    "start": "1323159",
    "end": "1329400"
  },
  {
    "text": "attach pervie to your profiling harnesses and basically achieve the same result that you would achieve with those",
    "start": "1329400",
    "end": "1336279"
  },
  {
    "text": "commercial tools I have to warn you perfu is a fairly Advanced tool I",
    "start": "1336279",
    "end": "1341520"
  },
  {
    "text": "confess every time I'm using perfu I have to Google cheat cheat cheet perfu to find all the commands because it's a",
    "start": "1341520",
    "end": "1348039"
  },
  {
    "text": "very C itic tool but what I also do is usually when I do these types of",
    "start": "1348039",
    "end": "1353320"
  },
  {
    "text": "profiling um investigations I use more than one tool and the reason is quite",
    "start": "1353320",
    "end": "1358600"
  },
  {
    "text": "simple sometimes I don't know yet what the problem is and having multiple views",
    "start": "1358600",
    "end": "1365880"
  },
  {
    "text": "basically a cockpit of multiple things that show me multiple aspects is a good",
    "start": "1365880",
    "end": "1371200"
  },
  {
    "text": "thing so I might actually use Visual Studio performance profiling tools together with the chat brains tools or",
    "start": "1371200",
    "end": "1376840"
  },
  {
    "text": "the chat brains tools together with person you right because sometimes it's really I know it when I see it and",
    "start": "1376840",
    "end": "1383120"
  },
  {
    "text": "having multiple Tools in place give me exactly uh that good let me show you how",
    "start": "1383120",
    "end": "1389360"
  },
  {
    "text": "a test harness looks like for this example with an resp plus so what I do",
    "start": "1389360",
    "end": "1394520"
  },
  {
    "text": "is I create basically a simple console application uh with some with some coding there that sort of initializes",
    "start": "1394520",
    "end": "1401279"
  },
  {
    "text": "answer response and has a few hooking points that that I control so what I do is first um I'm I'm set up Anice bu with",
    "start": "1401279",
    "end": "1409679"
  },
  {
    "text": "msmq because I did this test on Windows msmq is already there it's super fast I",
    "start": "1409679",
    "end": "1415120"
  },
  {
    "text": "don't need to set up any Cloud infrastructure I know it's very outdated old and Rusty right and some people are",
    "start": "1415120",
    "end": "1420720"
  },
  {
    "text": "like and msmq uh but it just works and it's available so I did that because I",
    "start": "1420720",
    "end": "1426000"
  },
  {
    "text": "want to get most of the things all the hurdles out of the way so that I can do my job then I sort of configure a",
    "start": "1426000",
    "end": "1432039"
  },
  {
    "text": "reasonably fast serializer and this is the system text Chas and serializer because I'm not interested in measuring",
    "start": "1432039",
    "end": "1438520"
  },
  {
    "text": "serialization subsystem I'm just interested in actually measuring the execution speed of the pipeline and then",
    "start": "1438520",
    "end": "1445400"
  },
  {
    "text": "what I also do is I basically configured an response with the inmemory persistence and here again the reason is",
    "start": "1445400",
    "end": "1451559"
  },
  {
    "text": "simple because I know that IO stuff I talked about this at the beginning is sometimes hundred of thousands of times",
    "start": "1451559",
    "end": "1458120"
  },
  {
    "text": "slower than CPU memory I want to and I want to focus on the optimizations of the pipeline I basically use a",
    "start": "1458120",
    "end": "1464400"
  },
  {
    "text": "persistence that is not going to involve any iob bound stuff so that I don't won have this noise in in the profiler",
    "start": "1464400",
    "end": "1471000"
  },
  {
    "text": "snapshots that I'm going to look at and then I have a bunch of console right lines and console read lines and it's",
    "start": "1471000",
    "end": "1477240"
  },
  {
    "text": "basically simple it is sort of hooking points where where the console says to me hey now is the stuff over that you",
    "start": "1477240",
    "end": "1483720"
  },
  {
    "text": "don't want to measure and now it's a start starting that you actually want to have a look at and then what I do is um",
    "start": "1483720",
    "end": "1490159"
  },
  {
    "text": "I know with my context there are two sort of pipelines there's the publish Pipeline and that's when a message goes",
    "start": "1490159",
    "end": "1495720"
  },
  {
    "text": "into the queue and that's what I'm doing and basically uh sort of in concurrently sending a",
    "start": "1495720",
    "end": "1501320"
  },
  {
    "text": "thousand messages public publishing a thousand messages to essentially to the queue that's what I'm doing here and",
    "start": "1501320",
    "end": "1507960"
  },
  {
    "text": "then um what I'm doing is on the other hand I know that when I'm sending messages and I'm receiving messages",
    "start": "1507960",
    "end": "1514480"
  },
  {
    "text": "again on the other hand there is the receive pipeline going to be invoked so what I do is I basically attach a",
    "start": "1514480",
    "end": "1520559"
  },
  {
    "text": "simpler a simple Handler and basically a consumer of that message that does nothing um because I don't want to",
    "start": "1520559",
    "end": "1526360"
  },
  {
    "text": "measure the execution of the Handler I want to measure everything that comes before I execute sort of the code that",
    "start": "1526360",
    "end": "1532240"
  },
  {
    "text": "is there right so I use my context my knowledge of the framework to basically to understand what is the Bare",
    "start": "1532240",
    "end": "1538440"
  },
  {
    "text": "Essentials that I can put in place so that I get a reasonable overview and that's sort of the receive receive",
    "start": "1538440",
    "end": "1543840"
  },
  {
    "text": "pipeline here good now that I have this in place you might be asking Daniel now",
    "start": "1543840",
    "end": "1549720"
  },
  {
    "text": "you showed me all this with answer respon that's nice and nice and fine but what can I learn from this well I have",
    "start": "1549720",
    "end": "1556279"
  },
  {
    "text": "sort of summarized for you what are the important things you need to into take into account when you define a harness",
    "start": "1556279",
    "end": "1563279"
  },
  {
    "text": "the first one is super obvious you're like Daniel come on stating the obvious here you need to compile it and execute",
    "start": "1563279",
    "end": "1569440"
  },
  {
    "text": "it in release mode I'm having this here because the amount of times I fell into",
    "start": "1569440",
    "end": "1574760"
  },
  {
    "text": "this strap it's staggering because but by default the all Visual Studio R is in debug mode right because you always",
    "start": "1574760",
    "end": "1581720"
  },
  {
    "text": "attaches developer the debugger and there you have to con con switch to the",
    "start": "1581720",
    "end": "1587000"
  },
  {
    "text": "release mode otherwise the results will not be the same and then the harness need to run a few seconds and keep the",
    "start": "1587000",
    "end": "1594159"
  },
  {
    "text": "overhead minimal right you need to make contextual decisions to remove all the",
    "start": "1594159",
    "end": "1599360"
  },
  {
    "text": "noise there and it needs to run more than just a few hundred milliseconds because otherwise you're not going to see anything right so that's an",
    "start": "1599360",
    "end": "1605919"
  },
  {
    "text": "important characteristic of a of a harness then one good practice is disable the tiar chit compilation uh",
    "start": "1605919",
    "end": "1612600"
  },
  {
    "text": "because the tiar Chet compilation has a few impacts and that might might hide a few problems that that you have so",
    "start": "1612600",
    "end": "1619840"
  },
  {
    "text": "that's a good practice to sort of depending on the scenario that you're looking at to sort of disable that and",
    "start": "1619840",
    "end": "1625320"
  },
  {
    "text": "then what you also want to excuse me what you also want to do is you want to emit the full debug the full symbols and",
    "start": "1625320",
    "end": "1631320"
  },
  {
    "text": "you do that with debug type pdb only and debug symbols true because when you look at the stack tra the call Stacks and",
    "start": "1631320",
    "end": "1637919"
  },
  {
    "text": "everything in the profilers you want to see what's going on you want to have back references to the code to do your",
    "start": "1637919",
    "end": "1643720"
  },
  {
    "text": "investigations so these are the things that you need to take into account for a harness",
    "start": "1643720",
    "end": "1649039"
  },
  {
    "text": "but now let's have a look into sort of the memory characteristics of what's going to happen in this specific example",
    "start": "1649039",
    "end": "1656039"
  },
  {
    "text": "I have here a screenshot of dot memory and I'm starting with memory allocations",
    "start": "1656039",
    "end": "1662360"
  },
  {
    "text": "first and the reason is pretty simple one of the things or the biggest",
    "start": "1662360",
    "end": "1668080"
  },
  {
    "text": "slowdowns still for up to today in c.net applications out there are memory",
    "start": "1668080",
    "end": "1674640"
  },
  {
    "text": "allocations and actually David fer recently tweeted about about this as well they have Telemetry about c.net",
    "start": "1674640",
    "end": "1681200"
  },
  {
    "text": "systems and one of the biggest slowdowns of c c code out there still today is",
    "start": "1681200",
    "end": "1686760"
  },
  {
    "text": "memory stream to array or bite array allocations uh out there because you can get a lot of bang for the buck if you",
    "start": "1686760",
    "end": "1693919"
  },
  {
    "text": "starting with memory allocations first another thing is complexity usually what",
    "start": "1693919",
    "end": "1699000"
  },
  {
    "text": "I have found out based on my experience it's easier for me to sort of optimize",
    "start": "1699000",
    "end": "1704480"
  },
  {
    "text": "code that has memory allocations than going down sort of the the mind mind bugling part of trying to understand",
    "start": "1704480",
    "end": "1710159"
  },
  {
    "text": "algorithmic complexity and then doing CPU type of optimizations right but your",
    "start": "1710159",
    "end": "1715200"
  },
  {
    "text": "mileage may may vary okay so I'm looking here and what I see is when I sort of",
    "start": "1715200",
    "end": "1720279"
  },
  {
    "text": "look into the publish pipeline I see lots of bite AR R array and stream",
    "start": "1720279",
    "end": "1725720"
  },
  {
    "text": "reader allocations and message to permission allocations and whatnot but using my domain knowledge and my focus",
    "start": "1725720",
    "end": "1732320"
  },
  {
    "text": "that I want to optimize the pipeline execution I actually know that I have to focus on this one right",
    "start": "1732320",
    "end": "1738720"
  },
  {
    "text": "and you're looking at this and it's 20 megab of allocations in the pipeline and",
    "start": "1738720",
    "end": "1744080"
  },
  {
    "text": "well you you might be thinking but Daniel come on you have like hundreds of megabytes of allocations over there and",
    "start": "1744080",
    "end": "1750559"
  },
  {
    "text": "now you're focusing on 20 megabytes I'm going to talk about that a little a little bit uh more but then before we",
    "start": "1750559",
    "end": "1756880"
  },
  {
    "text": "jump to conclusions we should look at the receive part right because we have two pipelines that are going to be",
    "start": "1756880",
    "end": "1762760"
  },
  {
    "text": "invoked so again I'm looking at the memory allocations and I see lot lot of sort of message extens XML text reader",
    "start": "1762760",
    "end": "1769799"
  },
  {
    "text": "implementation um sort of allocations and again using my do domain knowledge I",
    "start": "1769799",
    "end": "1775120"
  },
  {
    "text": "know that this funk of behavior context of task that is stuff that is coming from the receive pipeline execution so",
    "start": "1775120",
    "end": "1782519"
  },
  {
    "text": "I'm looking at 27 megabytes of U allocations here and again the question",
    "start": "1782519",
    "end": "1789039"
  },
  {
    "text": "is like okay we're essentially tbing in from hundreds of megabyte allocations that we saw on those screen screenshots",
    "start": "1789039",
    "end": "1795840"
  },
  {
    "text": "onto 20 megabytes of allocations isn't that completely nuts shouldn't we then get rid of all the other optim all all",
    "start": "1795840",
    "end": "1803279"
  },
  {
    "text": "the other allocations first well the thing is it really depends and here",
    "start": "1803279",
    "end": "1809399"
  },
  {
    "text": "again and I want to tell you that's the same for your code you have the knowledge about your domain how things",
    "start": "1809399",
    "end": "1815039"
  },
  {
    "text": "are going to be executed I have that with Anice bu and there is actually Contex contextual things that I have to",
    "start": "1815039",
    "end": "1821640"
  },
  {
    "text": "take into account so for example I use the msmq transport and all most of the",
    "start": "1821640",
    "end": "1826960"
  },
  {
    "text": "allocations in those screenshot they were coming from the msmq transport and msmq has a diminishing user base most of",
    "start": "1826960",
    "end": "1833360"
  },
  {
    "text": "our customers today they're moving to as service pass rabbit mq or whatnot and so msmq is not really relevant anymore",
    "start": "1833360",
    "end": "1840399"
  },
  {
    "text": "right so I can basically blend out sort of these allocations or maybe it's also",
    "start": "1840399",
    "end": "1845640"
  },
  {
    "text": "maybe I'm not an msmq expert right and ramping up my knowledge would take up too much of my allocated budget that I",
    "start": "1845640",
    "end": "1852279"
  },
  {
    "text": "have to do these types of performance optimizations so it doesn't really make sense for me to invest more time there",
    "start": "1852279",
    "end": "1859279"
  },
  {
    "text": "and then um again I told you about this 1% Improvement philosophy right when I",
    "start": "1859279",
    "end": "1865240"
  },
  {
    "text": "do lots and lots of optimizations 1% improvements all over my c-base sort of",
    "start": "1865240",
    "end": "1870679"
  },
  {
    "text": "these sort of iterative gains over the H path will essentially have a compounding",
    "start": "1870679",
    "end": "1875919"
  },
  {
    "text": "effect uh over time and then what I also have to take into account is when I sort",
    "start": "1875919",
    "end": "1881279"
  },
  {
    "text": "of optimize for pipeline allocations I'm actually improving the cold pace for",
    "start": "1881279",
    "end": "1886760"
  },
  {
    "text": "every customer out there independent of the transport so basically even though I'm focusing on 20 megabytes of",
    "start": "1886760",
    "end": "1893039"
  },
  {
    "text": "allocation I'm essentially doing the biggest bang for the buck right um and again you have to make up those",
    "start": "1893039",
    "end": "1900039"
  },
  {
    "text": "trade-offs and I advise you if you do that together with your team maybe also do sort of a decision log maybe a",
    "start": "1900039",
    "end": "1906440"
  },
  {
    "text": "performance investigation decision log so you write down the trade-offs that you're making when you're doing when",
    "start": "1906440",
    "end": "1912360"
  },
  {
    "text": "you're looking at sort of these profiler snapshots so that you can control where you're going so the context really",
    "start": "1912360",
    "end": "1918279"
  },
  {
    "text": "matters of the code and you only have the context because you are the expert together with your team in your specific",
    "start": "1918279",
    "end": "1924760"
  },
  {
    "text": "code base good and let's have a look at sort of uh the other memory allocations",
    "start": "1924760",
    "end": "1930840"
  },
  {
    "text": "we can see here when we zoom in um that we have other 15 allocations there then",
    "start": "1930840",
    "end": "1937440"
  },
  {
    "text": "when I with what I can do is with for example the chap brain tools I can filter into a name space and I can",
    "start": "1937440",
    "end": "1943760"
  },
  {
    "text": "filter for answer response Pipeline and then I see all the allocations that are happen happening in the ENT response",
    "start": "1943760",
    "end": "1949559"
  },
  {
    "text": "pipeline so again maybe you have good clean name spaces in your code right and maybe you're focusing on AIT specific",
    "start": "1949559",
    "end": "1956320"
  },
  {
    "text": "shipping feature whatever so what you can do is you can use this tool to sort of zoom in into the shipping domain",
    "start": "1956320",
    "end": "1962399"
  },
  {
    "text": "right and then you see all the allocations in the shipping domain so that allows you to sort of zoom in into",
    "start": "1962399",
    "end": "1967559"
  },
  {
    "text": "the things that actually matter now that I have an understanding of the memory characteristic let's go into the CPU",
    "start": "1967559",
    "end": "1973840"
  },
  {
    "text": "characteristics and like I mentioned we always want to have two profiles memory and CPU right and now we're going to",
    "start": "1973840",
    "end": "1980240"
  },
  {
    "text": "sort of look into the CP where does the code actually spend unnecessary uh CPU",
    "start": "1980240",
    "end": "1985440"
  },
  {
    "text": "cycles and where can can we potentially make further improvements and one of the great things one of the good tools is",
    "start": "1985440",
    "end": "1992840"
  },
  {
    "text": "what what the the tool is called Flame graphs and I know this is very blurry on",
    "start": "1992840",
    "end": "1998159"
  },
  {
    "text": "the screen but you don't have to focus on what's actually written there because one of the great things about flame",
    "start": "1998159",
    "end": "2003360"
  },
  {
    "text": "graphs is you can see here there are bars right and there is a bar over there",
    "start": "2003360",
    "end": "2008519"
  },
  {
    "text": "which is the entry point into the publish Pipeline and the length of the bar on the top and we read it from top",
    "start": "2008519",
    "end": "2014799"
  },
  {
    "text": "to bottom represents sort of the execution time it takes for everything underneath to be",
    "start": "2014799",
    "end": "2021320"
  },
  {
    "text": "executed why is that important well it's a super handy visual tool where we can see we have a bunch of red stuff which",
    "start": "2021320",
    "end": "2028679"
  },
  {
    "text": "is in my context of knowledge so of the infrastructure code that is getting executed and we have a bunch of orange",
    "start": "2028679",
    "end": "2034799"
  },
  {
    "text": "stuff over here that is the actual business logic that is getting executed and just by looking at without knowing",
    "start": "2034799",
    "end": "2041440"
  },
  {
    "text": "Nan nanc milliseconds whatever just by looking at this flame graph I can already see that the relationship",
    "start": "2041440",
    "end": "2047960"
  },
  {
    "text": "between the infrastructure stuff and the business code is kind of wacky right so I already know something is off here by",
    "start": "2047960",
    "end": "2056240"
  },
  {
    "text": "just looking at the at the FL uh at the flame graph right so that's a really handy tool and when we zoom in we can",
    "start": "2056240",
    "end": "2063200"
  },
  {
    "text": "see this even better we can see now this is like super off right because what we have have is we have mutate outgoing",
    "start": "2063200",
    "end": "2069760"
  },
  {
    "text": "message behavior and that's for you business logic and then we have chish chish chish chish chish and then we have",
    "start": "2069760",
    "end": "2076240"
  },
  {
    "text": "apply uh reply address behavior in voke and that means we basically have lots of",
    "start": "2076240",
    "end": "2082158"
  },
  {
    "text": "stuff that we are not really interested in that some infrastructure glue that gets executed that we might be able to",
    "start": "2082159",
    "end": "2088599"
  },
  {
    "text": "get rid of and the the the flame graph tells us that already but you might be thinking yeah Daniel you know it's",
    "start": "2088599",
    "end": "2094638"
  },
  {
    "text": "almost evening I'm already a little bit tired all this flame GR stuff it's a little bit over my head aren't there",
    "start": "2094639",
    "end": "2101520"
  },
  {
    "text": "other ways to do this yes uh most of the tools they actually have sort of an hot path or a hotspot view for example race",
    "start": "2101520",
    "end": "2110079"
  },
  {
    "text": "race has a hotspot View and what you see there is you can sort of zoom in into a namespace and here I'm zooming into the",
    "start": "2110079",
    "end": "2116400"
  },
  {
    "text": "publish Pipeline and then it gives me sort of uh CPU wall clock times and whatever we don't have to go into that",
    "start": "2116400",
    "end": "2123079"
  },
  {
    "text": "part but it basically gives me percentage of how much time is the code actually spending in CPU so when we zoom",
    "start": "2123079",
    "end": "2130520"
  },
  {
    "text": "in what we can see here is we have 20% of the behavior chain invoke and",
    "start": "2130520",
    "end": "2135920"
  },
  {
    "text": "12.3% of the behavior invoker invoke so basically this tells me",
    "start": "2135920",
    "end": "2141520"
  },
  {
    "text": "32.3% of the CPU is spent in infrastructure code that's what this sort of screenshot tells me here but",
    "start": "2141520",
    "end": "2148640"
  },
  {
    "text": "then again we need to look at the receive part right because we want to get an a holistic overview and what we",
    "start": "2148640",
    "end": "2153920"
  },
  {
    "text": "can see here is when we zoom in we have sort of a 99.2% % and 4.8% so in total",
    "start": "2153920",
    "end": "2160440"
  },
  {
    "text": "14% if I can do the math right that is sort of spent in infrastructure code but",
    "start": "2160440",
    "end": "2166000"
  },
  {
    "text": "the cool thing is the flame graph has already shown me that but hasn't given me exact numbers but now here I have",
    "start": "2166000",
    "end": "2171960"
  },
  {
    "text": "exact numbers again sometimes you need multiple tools to actually see uh what's what's going what's going on good now",
    "start": "2171960",
    "end": "2180400"
  },
  {
    "text": "that I have a good overview I can start sort of improving things right but I want to say again as a reminder hold on",
    "start": "2180400",
    "end": "2187720"
  },
  {
    "text": "your horses because it's very crucial that you have tests in place if if you",
    "start": "2187720",
    "end": "2192839"
  },
  {
    "text": "have forgotten to ride tests or if your colleagues have forgotten to write test at least put some basic stuff into place",
    "start": "2192839",
    "end": "2199040"
  },
  {
    "text": "so that you can make sure that you're not breaking the code and what I have done is I have sort of because I have",
    "start": "2199040",
    "end": "2204200"
  },
  {
    "text": "already done these contextual investigations with the profiling snapshot it gave me lots of great ideas",
    "start": "2204200",
    "end": "2210960"
  },
  {
    "text": "how I might be able to sort of improve the code so what I did is I wrote a bunch of unit tests and acceptance test",
    "start": "2210960",
    "end": "2217599"
  },
  {
    "text": "test that make sure the things that I have in mind will not break the existing",
    "start": "2217599",
    "end": "2223400"
  },
  {
    "text": "code right because that gives me the freedom to actually get started with it",
    "start": "2223400",
    "end": "2228560"
  },
  {
    "text": "and if you're interested to see what actual improvements I've done there's a bunch of block post that I wrote it's 10",
    "start": "2228560",
    "end": "2235400"
  },
  {
    "text": "times faster execution with compiled expression trees and how we achiev five times faster pipeline execution by",
    "start": "2235400",
    "end": "2241040"
  },
  {
    "text": "removing closure allocations you can find the blog post on gold particular.net",
    "start": "2241040",
    "end": "2246200"
  },
  {
    "text": "nc- portal -224 D pipeline but I'm not going to more into that and I know these",
    "start": "2246200",
    "end": "2252960"
  },
  {
    "text": "are very click bait titles right but that's how the internet work but as a matter of fact we actually improved the",
    "start": "2252960",
    "end": "2259359"
  },
  {
    "text": "performance of the pipeline 10 times and five times good but now let's look into",
    "start": "2259359",
    "end": "2265960"
  },
  {
    "text": "how we are going to sort of a benchmark the pipeline so right I told you about",
    "start": "2265960",
    "end": "2272240"
  },
  {
    "text": "all these block posts that we see and usually the block post they show some Ben mark this is calling some little I",
    "start": "2272240",
    "end": "2279040"
  },
  {
    "text": "don't know string manipulation or some static method and this is super super easy right but code that we have out",
    "start": "2279040",
    "end": "2286400"
  },
  {
    "text": "there or at least the code that I write is usually super super messy right uh",
    "start": "2286400",
    "end": "2291880"
  },
  {
    "text": "because it evolves over time I have to deal with existing assumptions and whatnot so it's not that easy it's not",
    "start": "2291880",
    "end": "2297680"
  },
  {
    "text": "just a static method that I can essentially uh call or as sort of as Gordon Ramsey would say software is a",
    "start": "2297680",
    "end": "2304720"
  },
  {
    "text": "disgusting fasing mess um but essentially um what I want to do is I",
    "start": "2304720",
    "end": "2310040"
  },
  {
    "text": "want to sort of think about usually code that we have has numerous dependencies",
    "start": "2310040",
    "end": "2315200"
  },
  {
    "text": "that are getting called and what I want to find I want to find a way how I can take my existing code without doing",
    "start": "2315200",
    "end": "2322040"
  },
  {
    "text": "crazy amounts of reaing and putting it onto a Ben under a benchmark and I found",
    "start": "2322040",
    "end": "2327800"
  },
  {
    "text": "a way and I'm it's a little bit of a controversial way because I'm going to sort of show you how you can copy paste",
    "start": "2327800",
    "end": "2335119"
  },
  {
    "text": "codes and then know as developers are like oh Daniel your copy and pasted code that's the root of all evil but bear",
    "start": "2335119",
    "end": "2341720"
  },
  {
    "text": "with me okay so what I essentially have done is I sort of what I sort of usually",
    "start": "2341720",
    "end": "2348160"
  },
  {
    "text": "to get started with I take the code in place and copy it into a dedicated repository or a dedicated folder and um",
    "start": "2348160",
    "end": "2356359"
  },
  {
    "text": "I just basically take everything that is relevant from that specific code path and I put it somewhere else and then",
    "start": "2356359",
    "end": "2363920"
  },
  {
    "text": "what I do is I basically take the code think about the trade of that I'm going to make for the benchmarking purposes",
    "start": "2363920",
    "end": "2370040"
  },
  {
    "text": "the things that are just pure noise that I don't want to see and then I basically strip it down to the Bare Essentials to",
    "start": "2370040",
    "end": "2377280"
  },
  {
    "text": "to create a controllable environment because one of the benefits this has also is that while my team is working on",
    "start": "2377280",
    "end": "2383640"
  },
  {
    "text": "the other code we're not influencing each other at all and I also don't have",
    "start": "2383640",
    "end": "2389119"
  },
  {
    "text": "to basically refactor the actual production code in order for my benchmarking sort of narrowing down to",
    "start": "2389119",
    "end": "2396800"
  },
  {
    "text": "then basically damage the production code for something that I don't want to damage because I'm just trying to",
    "start": "2396800",
    "end": "2402200"
  },
  {
    "text": "measure what's going on um so I show you here screenshot what I have done and",
    "start": "2402200",
    "end": "2407680"
  },
  {
    "text": "this screenshot just you don't have to understand what's there but basically what I want to show you is the pipeline",
    "start": "2407680",
    "end": "2413040"
  },
  {
    "text": "is not just a single static method the pipeline is lots and lots of components and classes that interact with each",
    "start": "2413040",
    "end": "2419520"
  },
  {
    "text": "other right so I took the entire essentially answer response Pipeline and put it into a a a repository and then",
    "start": "2419520",
    "end": "2427400"
  },
  {
    "text": "what I did in this specific example is uh I basically said okay which behaviors",
    "start": "2427400",
    "end": "2432720"
  },
  {
    "text": "which plugable stuff in the framework is not relevant for my performance in investigations so I removed all of those",
    "start": "2432720",
    "end": "2439520"
  },
  {
    "text": "and then what I did as well is I basically said to myself well I don't need to measure I'm not comparing I",
    "start": "2439520",
    "end": "2445760"
  },
  {
    "text": "don't know AAC against structure map against Microsoft extensions dependency abstraction I don't care about that so",
    "start": "2445760",
    "end": "2452079"
  },
  {
    "text": "basically I removed essentially all the dependency injection stuff with simply new up classes because it's not relevant",
    "start": "2452079",
    "end": "2459280"
  },
  {
    "text": "for my Benchmark because I want to measure the pipeline execution speed and then what I also did is I replaced all",
    "start": "2459280",
    "end": "2465839"
  },
  {
    "text": "the iind operations by just returning task completed task okay and some of you",
    "start": "2465839",
    "end": "2471680"
  },
  {
    "text": "that might be more advanced softare Engineers that have already listened to talks about Asing weight you might be saying but Daniel I know you're cheating",
    "start": "2471680",
    "end": "2478640"
  },
  {
    "text": "here because when you're doing returning task complet the task you're not actively yielding the threat to the",
    "start": "2478640",
    "end": "2483920"
  },
  {
    "text": "threat pool and therefore your benchmark is super artificial and is not going to work out you're right and wrong at the",
    "start": "2483920",
    "end": "2489920"
  },
  {
    "text": "same time because again what matters is the context right because what I want to",
    "start": "2489920",
    "end": "2495520"
  },
  {
    "text": "measure is the raw execution speed of the pipeline so yielding here is not",
    "start": "2495520",
    "end": "2500599"
  },
  {
    "text": "relevant because I'm going to synchronously execute the pipeline over iterations that's one thing the other",
    "start": "2500599",
    "end": "2506119"
  },
  {
    "text": "thing is a tool like like benchmark.us analysis of the code in",
    "start": "2506119",
    "end": "2512119"
  },
  {
    "text": "place so essentially that yielding would blend in in the statistical analysis and would not be relevant for this specific",
    "start": "2512119",
    "end": "2518400"
  },
  {
    "text": "scenario again I want to give you the full context here good and I said copy",
    "start": "2518400",
    "end": "2524599"
  },
  {
    "text": "pasting code right because uh I told you you need to become performance aware",
    "start": "2524599",
    "end": "2529920"
  },
  {
    "text": "right and what I want to give you I want to give you this approach so that you can start building up a performance",
    "start": "2529920",
    "end": "2535240"
  },
  {
    "text": "culture because I know that you can't just go to an NC talk and then say Oh",
    "start": "2535240",
    "end": "2540480"
  },
  {
    "text": "Daniel told me we should become performance aware go back to your job and then sort of um be the evangelist",
    "start": "2540480",
    "end": "2547359"
  },
  {
    "text": "tomorrow you will be performance aware right that stuff takes time it takes months and years to build up a",
    "start": "2547359",
    "end": "2553240"
  },
  {
    "text": "performance culture and usually when you're the one that sort of heard all these principles and you're going back",
    "start": "2553240",
    "end": "2558800"
  },
  {
    "text": "to your work you want an approach because you're becoming the expert the performance expert right and you want to",
    "start": "2558800",
    "end": "2564880"
  },
  {
    "text": "have an approach that you can teach your colleagues that gets you started with and that lets you build up sort of this",
    "start": "2564880",
    "end": "2571640"
  },
  {
    "text": "uh performance culture so what I want to say this copypaste in the code approach it's sort of the 880 80 20% rule it's",
    "start": "2571640",
    "end": "2578920"
  },
  {
    "text": "very good for code that rarely ever changes right but of course this approach does not discover any",
    "start": "2578920",
    "end": "2585640"
  },
  {
    "text": "regressions I'm going to quickly talk about regressions a little bit later but it's a good structured approach to get",
    "start": "2585640",
    "end": "2591280"
  },
  {
    "text": "you started building up this P performance culture gradually because one of the things that you have to take",
    "start": "2591280",
    "end": "2597720"
  },
  {
    "text": "into account when you're going down the path of oh we want to execute these benchmarks on the cicd environment you",
    "start": "2597720",
    "end": "2604680"
  },
  {
    "text": "have to start asking yourself how can we rely run those benchmarks on a cicd environment then you have to ask",
    "start": "2604680",
    "end": "2611000"
  },
  {
    "text": "yourself how do we set up the cicd environment is it good if we're executing on our shared Ash devops",
    "start": "2611000",
    "end": "2618240"
  },
  {
    "text": "GitHub Runners is that's going to give us reliable results or not maybe not and what Hardware do we need right so you",
    "start": "2618240",
    "end": "2624640"
  },
  {
    "text": "need to ask yourself a bunch of more questions than you might be actually willing to take on as a team again",
    "start": "2624640",
    "end": "2630440"
  },
  {
    "text": "that's why I showed you this sort of more pragmatic approach to get started with good now that we have have that",
    "start": "2630440",
    "end": "2637440"
  },
  {
    "text": "sort of sort of aligned together at the beginning I sort of told you I had this",
    "start": "2637440",
    "end": "2642720"
  },
  {
    "text": "sort of conceptual understanding that The Benchmark is like a unit test right because it's like okay I'm going to I'm",
    "start": "2642720",
    "end": "2648960"
  },
  {
    "text": "just going to declare a class and add a bunch of attributes but as a matter of",
    "start": "2648960",
    "end": "2654520"
  },
  {
    "text": "fact this is actually a wrong conceptual understanding that I had at the time of a benchmark because a unit test what a",
    "start": "2654520",
    "end": "2661680"
  },
  {
    "text": "unit test has it essentially has two results it's either it's green or red or",
    "start": "2661680",
    "end": "2667119"
  },
  {
    "text": "or it's passed or failed right but when you execute the Benchmark what you get",
    "start": "2667119",
    "end": "2673040"
  },
  {
    "text": "is you get statistical results you get lots of numbers especially out of it um",
    "start": "2673040",
    "end": "2679359"
  },
  {
    "text": "that that are not green or red you get you're getting a distribution of values of what's going on uh that under the",
    "start": "2679359",
    "end": "2686000"
  },
  {
    "text": "scenario that you're benchmarking then what is also important is that a",
    "start": "2686000",
    "end": "2691599"
  },
  {
    "text": "benchmark needs to be executed until the results are stable and that means it",
    "start": "2691599",
    "end": "2696839"
  },
  {
    "text": "needs needs to be executed potentially hundreds and thousands of times so already the runtime difference between a",
    "start": "2696839",
    "end": "2703160"
  },
  {
    "text": "benchmark and a unit test a unit test is going to be executed in three four maybe 10 milliseconds The Benchmark will",
    "start": "2703160",
    "end": "2708920"
  },
  {
    "text": "potentially take minutes up to hours depending on the scenario right then",
    "start": "2708920",
    "end": "2714640"
  },
  {
    "text": "again it takes minutes up to hours and then what's also important is while in unit testing or testing scenarios we",
    "start": "2714640",
    "end": "2721119"
  },
  {
    "text": "usually focus on sort of all the permutations of scenarios that we can think of with benchmarking we have to",
    "start": "2721119",
    "end": "2728280"
  },
  {
    "text": "focus on the most common cases on the frequently used hot path with the",
    "start": "2728280",
    "end": "2733680"
  },
  {
    "text": "required amount of permutations and this is really really crucial I'm saying a",
    "start": "2733680",
    "end": "2738720"
  },
  {
    "text": "required amount of permutations is because you can think about the more permutations you're sort of willing to",
    "start": "2738720",
    "end": "2744760"
  },
  {
    "text": "take on the longer it actually takes to execute all those permutations right and the longer it actually takes you to",
    "start": "2744760",
    "end": "2751359"
  },
  {
    "text": "actually get results to get meaningful insights about what is going on and then",
    "start": "2751359",
    "end": "2756520"
  },
  {
    "text": "what's also important here is you need to derive the cases that you permutate on from production scenarios so that you",
    "start": "2756520",
    "end": "2764640"
  },
  {
    "text": "actually have reliable results from your benchmark otherwise your benchmark is compl completely sort of uh synthetical",
    "start": "2764640",
    "end": "2771800"
  },
  {
    "text": "and doesn't give you what you actually want want to see good here I have a concrete example from measuring the an",
    "start": "2771800",
    "end": "2778920"
  },
  {
    "text": "response Pipeline and I'm going to zoom in don't worry too much the code is not too important I'm just going to show you",
    "start": "2778920",
    "end": "2785319"
  },
  {
    "text": "to essentially walk you through some some of the features of Benchmark net so the first thing that I'm doing is I'm",
    "start": "2785319",
    "end": "2790760"
  },
  {
    "text": "sort of um creating the pipeline so I use this Global setup and what Global setup basically means is I'm going to do",
    "start": "2790760",
    "end": "2797839"
  },
  {
    "text": "a bunch of stuff that you should not be measuring",
    "start": "2797839",
    "end": "2801880"
  },
  {
    "text": "benchmark.pl scenarios that's not something I want to measure I want to measure right now what is the",
    "start": "2802960",
    "end": "2808319"
  },
  {
    "text": "performance the throughput the memory characteristics of the pipeline execution that's what I do here so",
    "start": "2808319",
    "end": "2814240"
  },
  {
    "text": "that's the global setup setting up the pipeline and then what I did here I have",
    "start": "2814240",
    "end": "2819359"
  },
  {
    "text": "parameters and these are the permutations for The Benchmark so I went back as an example to sales force and I",
    "start": "2819359",
    "end": "2825800"
  },
  {
    "text": "was think I was thinking okay a pipeline has a deepness okay and I looked at the",
    "start": "2825800",
    "end": "2831599"
  },
  {
    "text": "the cases that we have in sales for from our customer I looked at our documentation and samples I looked at our internal usage and I saw a",
    "start": "2831599",
    "end": "2839160"
  },
  {
    "text": "reasonably um deep pipeline is 10 20 and 40 so basically I derived I could have",
    "start": "2839160",
    "end": "2845200"
  },
  {
    "text": "picked 15 numbers 20 numbers right but I need to sort of find reasonable numbers",
    "start": "2845200",
    "end": "2850520"
  },
  {
    "text": "that give me an impression how does the deepness of the pipeline actually sort of um relate to sort of the pipeline",
    "start": "2850520",
    "end": "2858960"
  },
  {
    "text": "execution or does it not relate to it right so that's what I'm trying to sort of derive from and then uh what I also",
    "start": "2858960",
    "end": "2865200"
  },
  {
    "text": "do is I it's on the top I added this short run attribute and again here the idea is the short run attribute is to",
    "start": "2865200",
    "end": "2871800"
  },
  {
    "text": "get um a result in a quick amount of time I don't want to have yet the statistic iCal relevant result I just",
    "start": "2871800",
    "end": "2878800"
  },
  {
    "text": "want to see in which direction I'm going and then I add the memory diagnoser so that I also get an overview not just",
    "start": "2878800",
    "end": "2884240"
  },
  {
    "text": "about sort of the the CPU stuff but also about the memory stuff and then down here I basically have the The Benchmark",
    "start": "2884240",
    "end": "2890960"
  },
  {
    "text": "of the pipeline that I have the Baseline is basically the thing that I have before my optimization and then below I",
    "start": "2890960",
    "end": "2898079"
  },
  {
    "text": "have the The Benchmark of the pipeline after my optimization so that I can compare those two depending on the",
    "start": "2898079",
    "end": "2904640"
  },
  {
    "text": "permutations of The Benchmark that I'm sort of executing good and then I want to of",
    "start": "2904640",
    "end": "2911480"
  },
  {
    "text": "course because I'm showing you this practical example with OS i al also want to give you away best practices you can",
    "start": "2911480",
    "end": "2918240"
  },
  {
    "text": "take into account for for your own benchmarks so a benchmark should always follow sort of the single responsibility",
    "start": "2918240",
    "end": "2925520"
  },
  {
    "text": "principle like any other sort of um sort of class or method that you have in your",
    "start": "2925520",
    "end": "2930920"
  },
  {
    "text": "code bases so the idea is a benchmark should Benchmark a single scenario to go",
    "start": "2930920",
    "end": "2936839"
  },
  {
    "text": "back to my previous example right I said I remove the warmup of the pipeline because that's not part of my scenario I",
    "start": "2936839",
    "end": "2943599"
  },
  {
    "text": "could also have said I want to measure the warmup of the pipeline but bonding",
    "start": "2943599",
    "end": "2948880"
  },
  {
    "text": "those two things into the same Benchmark it's going to give me different results so I basically say I'm going to measure",
    "start": "2948880",
    "end": "2955480"
  },
  {
    "text": "the execution of the pipeline and that's the single responsibility of The Benchmark under the permutations of that",
    "start": "2955480",
    "end": "2961559"
  },
  {
    "text": "specific scenario then a benchmark should have no side effects benchmarks are going to to get executed in",
    "start": "2961559",
    "end": "2968720"
  },
  {
    "text": "iterations when you have state like fields and classes and stuff or even",
    "start": "2968720",
    "end": "2974040"
  },
  {
    "text": "your own internal code when it's going to accumulate State over every iteration Over The Benchmark obviously that is",
    "start": "2974040",
    "end": "2981119"
  },
  {
    "text": "going to influence right the results of previous uh of of of the the next",
    "start": "2981119",
    "end": "2986960"
  },
  {
    "text": "iterations you should make sure that this is not going to happen because it's going to skew the result one thing",
    "start": "2986960",
    "end": "2992599"
  },
  {
    "text": "that's also super important is that we have the Justus in time compiler and any code that looks like it's not going to",
    "start": "2992599",
    "end": "2999319"
  },
  {
    "text": "be used will get optimized Away by the Justus in time compiler so you need to make sure that the code that you have in",
    "start": "2999319",
    "end": "3005839"
  },
  {
    "text": "place in your benchmark is going to get used otherwise the justtin time compiler will remove the entire code and then you",
    "start": "3005839",
    "end": "3012200"
  },
  {
    "text": "basically measuring nothing okay",
    "start": "3012200",
    "end": "3016359"
  },
  {
    "text": "benchmark.us class that you can call that does consumer. consume and then your code is going to be consumed then",
    "start": "3019040",
    "end": "3025040"
  },
  {
    "text": "you don't have that problem then I advise you to sort of take something like Benchmark to net to delegate all",
    "start": "3025040",
    "end": "3031040"
  },
  {
    "text": "the heavy lifting to a a framework or a library that does benchmarking the right",
    "start": "3031040",
    "end": "3036160"
  },
  {
    "text": "way so stop using stopwatches and stuff like that that's not a reliable way to do benchmarking okay and then I also",
    "start": "3036160",
    "end": "3044160"
  },
  {
    "text": "advise you to always make the benchmarking code AS explicit as possible so I mean don't I'm I'm not",
    "start": "3044160",
    "end": "3051520"
  },
  {
    "text": "religious about this if you're a fan of War please use War but I just want to make sure that you understand understand",
    "start": "3051520",
    "end": "3056880"
  },
  {
    "text": "that when you have stuff like implicit casting in things like that right and you're looking at The Benchmark and",
    "start": "3056880",
    "end": "3062119"
  },
  {
    "text": "you're trying to understand why something is behaving the way it's behaving and you have lots of Magic",
    "start": "3062119",
    "end": "3067359"
  },
  {
    "text": "Magical code that is not visible in The Benchmark that you're looking at you're not going to find ways to sort of find",
    "start": "3067359",
    "end": "3074599"
  },
  {
    "text": "problems in the code right so that's that's why it's important to make it as explicit as possible and then there's",
    "start": "3074599",
    "end": "3081079"
  },
  {
    "text": "one thing that I I want to mention because i' I've",
    "start": "3081079",
    "end": "3086599"
  },
  {
    "text": "suffer from that as well right you're you're sort of you wrote this nice little Benchmark and like yooo uh now I",
    "start": "3086599",
    "end": "3092880"
  },
  {
    "text": "can measure the things in place and then you're you're look at your calendar see oh a meeting is coming up and then you're sitting in a zoom or a teams",
    "start": "3092880",
    "end": "3099040"
  },
  {
    "text": "meeting and like I'm really bored shouldn't I just kick off this Benchmark that's not a good idea because one of",
    "start": "3099040",
    "end": "3105079"
  },
  {
    "text": "the things that benchmarks benchmarks are quite CPU and memory intensive and",
    "start": "3105079",
    "end": "3110400"
  },
  {
    "text": "I'm not going to bash on teams everyone has their own opinions um but the tools",
    "start": "3110400",
    "end": "3115680"
  },
  {
    "text": "like the those calling tools the remote call tools are quite resource intensive on CPU memory GPU and whatnot so this",
    "start": "3115680",
    "end": "3122839"
  },
  {
    "text": "influences The Benchmark that you're running so please execute this man Mark go grab a coffee and then we standing",
    "start": "3122839",
    "end": "3129400"
  },
  {
    "text": "the 10th time on the same day at the coffee machine and your boss is coming Daniel what are you doing at the coffee",
    "start": "3129400",
    "end": "3134599"
  },
  {
    "text": "machine again you say hey boss I'm optimizing the code I'm squeezing out the 10% for my bonus and I'm making the",
    "start": "3134599",
    "end": "3140599"
  },
  {
    "text": "code faster right so make sure that you're basically managing these things",
    "start": "3140599",
    "end": "3145640"
  },
  {
    "text": "uh explicitly good I can highly recommend Benchmark net uh it's a super",
    "start": "3145640",
    "end": "3151319"
  },
  {
    "text": "uh slick tool because it's it's written and used by also the net performance",
    "start": "3151319",
    "end": "3157119"
  },
  {
    "text": "team by the net teams it's it's super uh reliable because I can tell you",
    "start": "3157119",
    "end": "3162319"
  },
  {
    "text": "benchmarking is really really hard I would say I have already a good amount of experience with benchmarking but",
    "start": "3162319",
    "end": "3168480"
  },
  {
    "text": "still I'm making countless mistakes with those things so if you have a framework or a library that sort of helps you to",
    "start": "3168480",
    "end": "3175599"
  },
  {
    "text": "guide you through not make all the mistakes that the community has already learned from that's the best way to",
    "start": "3175599",
    "end": "3181920"
  },
  {
    "text": "actually write The Benchmark right and again what it for example what it does it isolates the code it runs it in sort",
    "start": "3181920",
    "end": "3188520"
  },
  {
    "text": "of dedicated processes so that you don't have static State influencing each other it does statistical analysis and it",
    "start": "3188520",
    "end": "3196319"
  },
  {
    "text": "executes the code until the results are stable it removes outliers and stuff",
    "start": "3196319",
    "end": "3201440"
  },
  {
    "text": "like that so all the things that you you would have to reinvent you don't have to do that anymore with Ben mark.net",
    "start": "3201440",
    "end": "3208319"
  },
  {
    "text": "good now let's have a look at sort of uh one other thing I have usually when we",
    "start": "3208319",
    "end": "3214720"
  },
  {
    "text": "talk about benchmarking we we say I I told you you should only ever me do the",
    "start": "3214720",
    "end": "3219920"
  },
  {
    "text": "common cases right not special cases not exception cases but again every guideline that you hear at a conference",
    "start": "3219920",
    "end": "3226559"
  },
  {
    "text": "in a talk should always put into context of your specific thing that you're doing",
    "start": "3226559",
    "end": "3231640"
  },
  {
    "text": "right don't follow guidelines and things that speaker tell you at conferences blindly and I want to give you here an",
    "start": "3231640",
    "end": "3237280"
  },
  {
    "text": "example so what I was thinking is I want to measure the execution speed but because we are a messaging framework um",
    "start": "3237280",
    "end": "3245000"
  },
  {
    "text": "there are cases when a programmer writes I don't know a bad code that throws for",
    "start": "3245000",
    "end": "3250520"
  },
  {
    "text": "example null reference exception it's possible that hundreds and thousands of messages will essentially go through a",
    "start": "3250520",
    "end": "3256359"
  },
  {
    "text": "series of um exceptions and then eventually go into the AQ so that means",
    "start": "3256359",
    "end": "3261720"
  },
  {
    "text": "that exception case that you would normally not Benchmark in my case is",
    "start": "3261720",
    "end": "3266920"
  },
  {
    "text": "actually something I want to Benchmark because I want to make sure that my code is also fast under exception cases so",
    "start": "3266920",
    "end": "3273160"
  },
  {
    "text": "what I do is I basically set up in a global setup a pipeline U with behaviors",
    "start": "3273160",
    "end": "3278960"
  },
  {
    "text": "and at the bottom sort of at at the at the Deep exent of the pipeline I added a",
    "start": "3278960",
    "end": "3284200"
  },
  {
    "text": "behavior that froze an exception so that basically the exception bubbles through the entire call stack that's what I did",
    "start": "3284200",
    "end": "3290200"
  },
  {
    "text": "so basically that's the scenario that I'm measuring and then what I do is I basically have the optimization before",
    "start": "3290200",
    "end": "3296760"
  },
  {
    "text": "and sorry the the code before with a TR catch and then after so I'm violating my",
    "start": "3296760",
    "end": "3302480"
  },
  {
    "text": "own guidelines that I just told told you today but I wanted to make this example so that you understand you have to take",
    "start": "3302480",
    "end": "3308880"
  },
  {
    "text": "it into context these guidelines on the things that you are doing as well good",
    "start": "3308880",
    "end": "3314240"
  },
  {
    "text": "and then I'm going to skip this one in the interest of time so one of the things that then is usually forgotten",
    "start": "3314240",
    "end": "3320359"
  },
  {
    "text": "most people stop here right was like yeah I've done it perfect uh ship it to",
    "start": "3320359",
    "end": "3325559"
  },
  {
    "text": "production but what I then usually do is I take sort of all these improvements",
    "start": "3325559",
    "end": "3330839"
  },
  {
    "text": "that I measured and put into sort of my code and put it back into the test",
    "start": "3330839",
    "end": "3336240"
  },
  {
    "text": "harness or the profiling harness that I used at the beginning why is it important we want to see it under the",
    "start": "3336240",
    "end": "3341760"
  },
  {
    "text": "scenario again right because what we did is we did a bunch of improvements we potentially measured only parts of it",
    "start": "3341760",
    "end": "3348400"
  },
  {
    "text": "right with benchmarking comparison because that's also not a never a perfect picture and then I put it back",
    "start": "3348400",
    "end": "3353839"
  },
  {
    "text": "into the harness so that I can actually see whether the things are actually improve things in the grand scheme of",
    "start": "3353839",
    "end": "3359240"
  },
  {
    "text": "things and this is what what it did there because all those tools also the perfu they store snapshots on disk so",
    "start": "3359240",
    "end": "3366559"
  },
  {
    "text": "what you can do is right you can store the snapshot from your your performance investigation before store it on dis and",
    "start": "3366559",
    "end": "3372880"
  },
  {
    "text": "then you compare it to the after result and when we zoom in we can see that",
    "start": "3372880",
    "end": "3378039"
  },
  {
    "text": "previously we had uh 20 megabytes of behavior chain allocations on the right",
    "start": "3378039",
    "end": "3383440"
  },
  {
    "text": "side these are no longer there but some other alloc are now showing up so we see we already have improved sort of in the",
    "start": "3383440",
    "end": "3390240"
  },
  {
    "text": "grand scheme of things the memory allocations then when we look at the receive pipeline what you can see here",
    "start": "3390240",
    "end": "3397240"
  },
  {
    "text": "is essentially previously we had Funk of behavior context of task allocations 27",
    "start": "3397240",
    "end": "3403160"
  },
  {
    "text": "megab they're gone on the right side and the overall allocations um in the",
    "start": "3403160",
    "end": "3408720"
  },
  {
    "text": "profiling harness they're also lower so we know we achieved something and then",
    "start": "3408720",
    "end": "3413920"
  },
  {
    "text": "when we look at the memory uh memory characteristics as well or for example at the call stack what we can see here",
    "start": "3413920",
    "end": "3420319"
  },
  {
    "text": "is on the left side we essentially have the call stack before and on the right side we already see that everything has",
    "start": "3420319",
    "end": "3426760"
  },
  {
    "text": "been shrinking so that means we're also going to be faster uh in production that",
    "start": "3426760",
    "end": "3431799"
  },
  {
    "text": "also gives me a good overview of what's going on and then we can also zoom in uh basically on by selecting the namespace",
    "start": "3431799",
    "end": "3439559"
  },
  {
    "text": "and we can see all the sort of the the the previous display class allocations",
    "start": "3439559",
    "end": "3444799"
  },
  {
    "text": "and what not they're all gone and we can tap ourselves on the shoulder we actually achieved something we improved",
    "start": "3444799",
    "end": "3451039"
  },
  {
    "text": "um the the memory characteristics and then when we look at the CPU characteristics well previously we had",
    "start": "3451039",
    "end": "3457359"
  },
  {
    "text": "sort of a bunch of red stuff and uh like lots of red stuff and a little bit of orange stuff when we look at the flame",
    "start": "3457359",
    "end": "3463559"
  },
  {
    "text": "graphs what we can see is the after picture is now the relationship between sort of the red infrastructure part and",
    "start": "3463559",
    "end": "3470760"
  },
  {
    "text": "the orange sort of um business code logic has also drastically improved so we know that we have actually achieved",
    "start": "3470760",
    "end": "3477160"
  },
  {
    "text": "something good um so overall uh what we can what we what I have achieved there",
    "start": "3477160",
    "end": "3483559"
  },
  {
    "text": "is I sort of also get rid of 30 32.3% of sort of CPU C CPU uh overhead uh on the",
    "start": "3483559",
    "end": "3492000"
  },
  {
    "text": "on the published Pipeline and for 40 14% of CP overhead on on the received",
    "start": "3492000",
    "end": "3498319"
  },
  {
    "text": "pipeline so but let me give you before I wrap up a little bit of uh an overview",
    "start": "3498319",
    "end": "3504319"
  },
  {
    "text": "of I talked about C copy pasting code and I told you this approach is great to get started but but it doesn't give you",
    "start": "3504319",
    "end": "3510839"
  },
  {
    "text": "any sort of regression testing right so you don't know whether something is actually breaking so there is a really",
    "start": "3510839",
    "end": "3517079"
  },
  {
    "text": "easy way there is a tool that is called uh resolve compare it's in the net performance repository and they also",
    "start": "3517079",
    "end": "3524000"
  },
  {
    "text": "have guidelines around that and what you do is you essentially take",
    "start": "3524000",
    "end": "3529720"
  },
  {
    "text": "benchmark.us and then you tell it with Dash artifacts to store the artifacts in one folder and then you you basically",
    "start": "3533520",
    "end": "3540920"
  },
  {
    "text": "forward your g j where you did your improvements you execute the same uh uh the same Benchmark with and you store",
    "start": "3540920",
    "end": "3548119"
  },
  {
    "text": "the artifacts in an after folder and then you take essentially this result compare tool which is a net executable",
    "start": "3548119",
    "end": "3554640"
  },
  {
    "text": "at Global tool and you just basically tell it hey here is the Baseline and here is the after line and here's my",
    "start": "3554640",
    "end": "3560920"
  },
  {
    "text": "threshold and what this tool gives you an exit code and then you could essentially in your cicd pipeline you",
    "start": "3560920",
    "end": "3568200"
  },
  {
    "text": "could essentially prevent regressions from happening for crucial infrastructure code right but does it",
    "start": "3568200",
    "end": "3574559"
  },
  {
    "text": "mean you have to store all the benchmarks that you're writing no I would not advise you to do that again",
    "start": "3574559",
    "end": "3579839"
  },
  {
    "text": "executing benchmarks is expensive keeping them around maintaining them is also expensive so I would advise you to",
    "start": "3579839",
    "end": "3586240"
  },
  {
    "text": "basically keep the most important benchmarks around for the most important crucial infrastructure and do this only",
    "start": "3586240",
    "end": "3591720"
  },
  {
    "text": "for that but you have to be careful um and and essentially when you're",
    "start": "3591720",
    "end": "3597760"
  },
  {
    "text": "executing stuff on the cicd environment uh there was a great blog post oh excuse",
    "start": "3597760",
    "end": "3604400"
  },
  {
    "text": "me from it's a little bit laggy from Andre akinin from Chet brains he looked at the performance stability of GitHub",
    "start": "3604400",
    "end": "3610480"
  },
  {
    "text": "actions so basically shared cicd infrastructure and the results are not",
    "start": "3610480",
    "end": "3615760"
  },
  {
    "text": "reliable so he looked the quote the CPU Bond benchmarks are much more stable the memory discbound benchmarks but the",
    "start": "3615760",
    "end": "3622359"
  },
  {
    "text": "average performance level still can be up to three times different the cross build so that means once you start going",
    "start": "3622359",
    "end": "3628400"
  },
  {
    "text": "down the path of executing your benchmarks in your cicd environment you need to have a good infrastructure in",
    "start": "3628400",
    "end": "3635000"
  },
  {
    "text": "place that allows you to give stable results because otherwise you cannot rust your benchmarks right so go read",
    "start": "3635000",
    "end": "3641119"
  },
  {
    "text": "this blog post and take this into account when you embark on this journey good I want to wrap up so I showed you",
    "start": "3641119",
    "end": "3648240"
  },
  {
    "text": "here with examples with ENT service bus a very practical approach that helps you to sort of do performance improvements",
    "start": "3648240",
    "end": "3655280"
  },
  {
    "text": "in your code as well by doing profiling improving benchmarking profiling and chipping with an inner loop of doing",
    "start": "3655280",
    "end": "3661079"
  },
  {
    "text": "improving and benchmarking and I truly believe and I've used it also in application code this approach that I",
    "start": "3661079",
    "end": "3667039"
  },
  {
    "text": "showed you with a framework on Library also makes you successful with your application code and then use this",
    "start": "3667039",
    "end": "3674240"
  },
  {
    "text": "approach to sort of um and together with with profiling to observe how the small changes over time are actually making a",
    "start": "3674240",
    "end": "3680640"
  },
  {
    "text": "compounding effect and I want to hammer this home I advise you because I hear this all the time people look at code",
    "start": "3680640",
    "end": "3687200"
  },
  {
    "text": "and say this code is crap let's rewrite the entire code I've never seen this being being successful for the first",
    "start": "3687200",
    "end": "3693599"
  },
  {
    "text": "time I advise you do small incremental improvements with this approach because what you're going to learn is you're",
    "start": "3693599",
    "end": "3699200"
  },
  {
    "text": "going to learn a ton about your code you're going to learn a ton about all the assumptions that you're making and",
    "start": "3699200",
    "end": "3704480"
  },
  {
    "text": "that knowledge will crucially guide you once you actually decide that you actually need to rewrite this code to",
    "start": "3704480",
    "end": "3711680"
  },
  {
    "text": "find a better approach because if you just rewrite from the beginning beginning just based on a gut feeling",
    "start": "3711680",
    "end": "3716760"
  },
  {
    "text": "that this code is crap you're going to make the same mistake and the new code is also going to be crap right so use",
    "start": "3716760",
    "end": "3722599"
  },
  {
    "text": "this structure approach to make you successful I have all the resources of this talk including an extensive handout",
    "start": "3722599",
    "end": "3728599"
  },
  {
    "text": "on github.com MAR Beyond Simple benchmarks if you have more questions I'm still available today at the",
    "start": "3728599",
    "end": "3734680"
  },
  {
    "text": "particular software Booth please add also your ratings hopefully the green card into the box and reach out to me",
    "start": "3734680",
    "end": "3741640"
  },
  {
    "text": "over social media business card whatever and give me some structured feedback and I reffle until the end of tomorrow two",
    "start": "3741640",
    "end": "3748319"
  },
  {
    "text": "Chet brains license for everyone that is so kind to reach out to me thank you very much",
    "start": "3748319",
    "end": "3755160"
  }
]