[
  {
    "text": "to noon I feel a word of congratulations is in order your last breakout session for it",
    "start": "6580",
    "end": "12230"
  },
  {
    "text": "for this year so well Doug you've made it right so this would be a fairly",
    "start": "12230",
    "end": "17689"
  },
  {
    "text": "leisurely session so I'll try to keep a quiet high level we'll run to about 4550 minutes so I'll leave plenty of time for",
    "start": "17689",
    "end": "23990"
  },
  {
    "text": "questions at the end but the major question we'll look to answer today is how do we as API developers choose",
    "start": "23990",
    "end": "29930"
  },
  {
    "text": "between grukk UL g PRC and rest so to get to that answer we're actually going",
    "start": "29930",
    "end": "36200"
  },
  {
    "text": "to do quite a few things so we're going to go through first of all a tour of API",
    "start": "36200",
    "end": "42530"
  },
  {
    "text": "styles and we'll look at them over time due to do if my clicker was working",
    "start": "42530",
    "end": "51010"
  },
  {
    "text": "so API Styles overtime and what we're going to do from here is get an idea of",
    "start": "62010",
    "end": "67380"
  },
  {
    "text": "how the thinking in our industry has evolved we're actually gonna stare at about 20-30 years ago and then look at",
    "start": "67380",
    "end": "74260"
  },
  {
    "text": "all the major technologies that we've seen along the time we're gonna see where they're different and actually quite where there's a lot of similarity",
    "start": "74260",
    "end": "80140"
  },
  {
    "text": "between them and we're then gonna take a bit of a pivot and we're going to look at how we actually make architectural",
    "start": "80140",
    "end": "86320"
  },
  {
    "text": "decisions so we're gonna look at the properties with rural water systems to exposure a beer and then we'll look at",
    "start": "86320",
    "end": "92890"
  },
  {
    "text": "how we make decisions or implement constraints which will then yield those properties as well so very much an",
    "start": "92890",
    "end": "98470"
  },
  {
    "text": "outside-in view to it so with that context set within going to look at a",
    "start": "98470",
    "end": "104830"
  },
  {
    "text": "few the conversations that are happening in the API industry today and take some",
    "start": "104830",
    "end": "110860"
  },
  {
    "text": "of their rather blankets black-and-white statements and peel back the covers and then see how they actually really way up",
    "start": "110860",
    "end": "117310"
  },
  {
    "text": "so add a little bit of nuance to each one of those points so we're gonna allowing us to make a more informed decision such that if you look to choose",
    "start": "117310",
    "end": "123880"
  },
  {
    "text": "one of these API still Styles maybe in your company or I gave maybe in your own",
    "start": "123880",
    "end": "129130"
  },
  {
    "text": "time that you'll be able to make a more informed decision and finally with that knowledge where they gonna look at some",
    "start": "129130",
    "end": "134650"
  },
  {
    "text": "sample scenarios and then choose based on that maybe what's the simplest of the most appropriate one to choose so before",
    "start": "134650",
    "end": "141460"
  },
  {
    "text": "all that a little bit about myself so my name is Rob Crowley I am the head of engineering for a company called Vista",
    "start": "141460",
    "end": "147460"
  },
  {
    "text": "Technology so automated fare collections very similar to the oyster care that you might be aware of in London and previous",
    "start": "147460",
    "end": "154180"
  },
  {
    "text": "till as I was a principal consultant for Telstra purple in Australia so pretty",
    "start": "154180",
    "end": "159280"
  },
  {
    "text": "much my entire career has been in designing operating and running distributed system so API is are very",
    "start": "159280",
    "end": "165880"
  },
  {
    "text": "close to my hat I'm also the co-organizers for DDD Perth the largest",
    "start": "165880",
    "end": "171220"
  },
  {
    "text": "IT conference in Western Australia so about 800 attendees every year so that's grown beautifully and I'm also available",
    "start": "171220",
    "end": "177250"
  },
  {
    "text": "on the socials at Rob D Crowley so if there's any questions that come up throughout this session or if you'd like",
    "start": "177250",
    "end": "182740"
  },
  {
    "text": "to get in contact maybe you've taken one of the ideas in love with it please reach out I'd be absolutely delighted to help so I'd like to share a little bit",
    "start": "182740",
    "end": "190990"
  },
  {
    "text": "about why I'm giving this talk today and I really have to confess it's a slightly selfish motivation",
    "start": "190990",
    "end": "197140"
  },
  {
    "text": "because my Twitter timeline is an absolute tire fire you see what I joined",
    "start": "197140",
    "end": "202870"
  },
  {
    "text": "Twitter I'm I started reading about the same time when my interest in rest started and I followed my caimans in",
    "start": "202870",
    "end": "209409"
  },
  {
    "text": "Eric wild and I'll host of other luminaries in the API space and it was very much all this rest orientated",
    "start": "209409",
    "end": "215379"
  },
  {
    "text": "content that I was getting it everything was going grand for about four or five years until 2015 and graphic you all got",
    "start": "215379",
    "end": "221500"
  },
  {
    "text": "released I started following a whole host of new people it turns out these groups don't agree a lot so suddenly I",
    "start": "221500",
    "end": "229030"
  },
  {
    "text": "would have one tweet that would come out and say you should really do this and then 17 18 different rebuttals that would come out and say don't touch it",
    "start": "229030",
    "end": "235510"
  },
  {
    "text": "and in fact there's many of the conversations that we'll look at today as well so maybe one little example so back in 25th of May last year my",
    "start": "235510",
    "end": "244329"
  },
  {
    "text": "birthday I saw this tweet it's 2019 you should learn grati well I said absolutely why don't I share the love so",
    "start": "244329",
    "end": "250450"
  },
  {
    "text": "they're ago retweeted 15 seconds later Aaron Powell he's actually one of my good friends came back it's just fancy",
    "start": "250450",
    "end": "256449"
  },
  {
    "text": "OData well this is a little bit of a playful exchange often the ones that I see are quite close-minded and again as",
    "start": "256449",
    "end": "263470"
  },
  {
    "text": "a as a community I really want us to be able to learn and keep our minds open and it's not actually it's not just on",
    "start": "263470",
    "end": "268720"
  },
  {
    "text": "Twitter but it's also blog posts so this came out in 2017 and it's basically",
    "start": "268720",
    "end": "276520"
  },
  {
    "text": "declaring rest as being defunct it's calling it the new soak that it's obsolete but at the same time we have",
    "start": "276520",
    "end": "283180"
  },
  {
    "text": "other blog posts that are saying rest api czar rest in peace and everything",
    "start": "283180",
    "end": "288400"
  },
  {
    "text": "you know that building from now on should be great q well which is it little bit confronting for me because",
    "start": "288400",
    "end": "293949"
  },
  {
    "text": "i've spent 10 years of my life building rest api there's suddenly old and information defunct and not valuable anymore surely not but there's also this",
    "start": "293949",
    "end": "303520"
  },
  {
    "text": "I got a strange sense of deja vu when I was reading some of these these articles and history has a strange way of",
    "start": "303520",
    "end": "310539"
  },
  {
    "text": "repeating itself and I actually think we've been here before so if you're a 2017 there let's wind the clock back a",
    "start": "310539",
    "end": "318250"
  },
  {
    "text": "little bit more back to 2010 and in this case Roy fielding had just released his",
    "start": "318250",
    "end": "324490"
  },
  {
    "text": "dissertation rest was really on vogue and we were calling so to date and that rest was gonna replace",
    "start": "324490",
    "end": "330430"
  },
  {
    "text": "everything about soap another article from about the same time so soap is",
    "start": "330430",
    "end": "335800"
  },
  {
    "text": "officially dead long live arrests so there's very many similarities here so",
    "start": "335800",
    "end": "341620"
  },
  {
    "text": "what can we draw from this so if soap is dead and rest is the new",
    "start": "341620",
    "end": "347770"
  },
  {
    "text": "soap does that make graph QL the new rest surely not",
    "start": "347770",
    "end": "353560"
  },
  {
    "text": "but yes you see graph QL is indeed the new rest paraquad I've never actually seen pair",
    "start": "353560",
    "end": "361420"
  },
  {
    "text": "two but I'm sure it'll be fantastic but the probable a lot of these articles have is they're very Pro one side and",
    "start": "361420",
    "end": "369340"
  },
  {
    "text": "they're not balanced so again when we want to take it to where companies or make a decision ourselves I often feel",
    "start": "369340",
    "end": "375790"
  },
  {
    "text": "we can end up making a choice of the technology itself and not the properties",
    "start": "375790",
    "end": "380830"
  },
  {
    "text": "or the characteristics that is imbibes and how it then matches to the problem",
    "start": "380830",
    "end": "386440"
  },
  {
    "text": "that we have at hand so I guess what can we learn from that so we could be rather",
    "start": "386440",
    "end": "392170"
  },
  {
    "text": "whimsically just say maybe we just don't like XML and we get on with us but I",
    "start": "392170",
    "end": "397210"
  },
  {
    "text": "think we'd be missing a rather large point there because really I feel the the issue is deeper seeded I feel many",
    "start": "397210",
    "end": "404200"
  },
  {
    "text": "of our API consumers so the people consuming our API s using them every day reading our",
    "start": "404200",
    "end": "410620"
  },
  {
    "text": "documentation calling them are unsatisfied and frustrated and I think that's a far deeper seeded problem so",
    "start": "410620",
    "end": "417070"
  },
  {
    "text": "how can we build products that truly give the experience we wish and I repeat our community is small so again let's",
    "start": "417070",
    "end": "424690"
  },
  {
    "text": "not get hung up on one technology or another let's work together and see of all the tools that we have available to",
    "start": "424690",
    "end": "431140"
  },
  {
    "text": "us how can we work and choose the most effective one so it's all sounds of a",
    "start": "431140",
    "end": "436390"
  },
  {
    "text": "dreamy doesn't it so imagine if there were no protocols no hypermedia Hills to",
    "start": "436390",
    "end": "443080"
  },
  {
    "text": "die on no media types wouldn't that be a wonderful world we wouldn't have to argue about technology at all we'd all",
    "start": "443080",
    "end": "449290"
  },
  {
    "text": "just get on beautifully unfortunately that's not the way that API is work API",
    "start": "449290",
    "end": "456970"
  },
  {
    "text": "is we need to have a contract between two parties we need to have protocols and specifications such the two parties that are otherwise",
    "start": "456970",
    "end": "463600"
  },
  {
    "text": "separated can have a conversation and understand the semantics and the syntax of the messages passed across the wire",
    "start": "463600",
    "end": "469480"
  },
  {
    "text": "there's no escape for this so we will always be locked and looking at wire formats semantic constructs have our",
    "start": "469480",
    "end": "475990"
  },
  {
    "text": "messages so we need to do a way that we can understand them better and actually see some of the similarities between",
    "start": "475990",
    "end": "481960"
  },
  {
    "text": "them so to that let's look at API technologies over time and we'll start",
    "start": "481960",
    "end": "488740"
  },
  {
    "text": "back in 1991 with a middleware called core map and this was an RPC framework",
    "start": "488740",
    "end": "494470"
  },
  {
    "text": "so remote procedure calls so that's a phrase coined by Bruce Nelson and one of",
    "start": "494470",
    "end": "500230"
  },
  {
    "text": "the oldest styles of distributed computing interactions and in fact this was actually deemed at the time going to",
    "start": "500230",
    "end": "505840"
  },
  {
    "text": "be the future of e-commerce on the web however it soon fell out of favor for",
    "start": "505840",
    "end": "512110"
  },
  {
    "text": "XML of all things then in 1993 remote data access got released and that's a",
    "start": "512110",
    "end": "519159"
  },
  {
    "text": "way of querying data from a database over a network interface so if you're thinking from there",
    "start": "519160",
    "end": "525010"
  },
  {
    "text": "it kind of sounds like a query interface and it absolutely is so the client thin defining the shape of the data that it",
    "start": "525010",
    "end": "531430"
  },
  {
    "text": "was you got sent to the server the server would then process it pass the",
    "start": "531430",
    "end": "536920"
  },
  {
    "text": "query retrieve the data send it back to the client in 1998 we got a formal",
    "start": "536920",
    "end": "542800"
  },
  {
    "text": "specification for RPC released by Microsoft and that was based on XML sapphire we had a strug contract for how",
    "start": "542800",
    "end": "549640"
  },
  {
    "text": "to build these distributed systems however one year later again from Microsoft so Doug box one of the authors of the",
    "start": "549640",
    "end": "555850"
  },
  {
    "text": "four tenets of SOA released soap and soap again very much at RPC based and we",
    "start": "555850",
    "end": "561400"
  },
  {
    "text": "had wisdom as the interface of the contract force and this really formed",
    "start": "561400",
    "end": "566500"
  },
  {
    "text": "the vast majority of the api's that would built in this early 2000 phase so",
    "start": "566500",
    "end": "573880"
  },
  {
    "text": "in 2000 we did have Roy fielding released his rest dissertation which imagine if we could build a POS that",
    "start": "573880",
    "end": "579610"
  },
  {
    "text": "were in harmony with the web and we had this little bit of two and fourth for the next three to four years whirling",
    "start": "579610",
    "end": "584830"
  },
  {
    "text": "around pretty much in parallel sometimes soap starting to fade a little bit into the background and rest API is becoming",
    "start": "584830",
    "end": "591340"
  },
  {
    "text": "a bit more popular mainly by companies like Twitter or Facebook that were released public api's at the time in 2005 we see",
    "start": "591340",
    "end": "599430"
  },
  {
    "text": "Jason starting to take over from XML and in 2007 we see Oh data so under the",
    "start": "599430",
    "end": "605430"
  },
  {
    "text": "moniker of a better way to rest so released by Microsoft again touching the same style as remote data access so",
    "start": "605430",
    "end": "612060"
  },
  {
    "text": "allowing clients a huge amount of flexibility in the queries that they shaped so instead of a canonical URI as",
    "start": "612060",
    "end": "619430"
  },
  {
    "text": "the uniform interface in rest would define we could have clients defining",
    "start": "619430",
    "end": "624840"
  },
  {
    "text": "any shape of data they want so incredibly flexible so empowering the client rather than having it defined by the server and that's a paradigm that",
    "start": "624840",
    "end": "631770"
  },
  {
    "text": "was really embraced by graph tol in 2015 as well where they very much have",
    "start": "631770",
    "end": "637640"
  },
  {
    "text": "mutations for the rights which are actually very much like our PC and then query api's for the read side so it's",
    "start": "637640",
    "end": "645540"
  },
  {
    "text": "actually not that different to many of the other techniques that we've been using before and then in 2016 we got the",
    "start": "645540",
    "end": "652470"
  },
  {
    "text": "latest incarnation of an RPC framework so G RPC and very much a focus on",
    "start": "652470",
    "end": "658050"
  },
  {
    "text": "performance and code generation but again very much building on what we saw with JSON RPC and XML RPC before us so",
    "start": "658050",
    "end": "665820"
  },
  {
    "text": "that's the technologies itself let's have a look at what was happening in the industry at that point in time so when",
    "start": "665820",
    "end": "673260"
  },
  {
    "text": "we were building API is back in the 230 mm s it was very much for one provider and one consumer and they were very",
    "start": "673260",
    "end": "681150"
  },
  {
    "text": "direct stovepipe integrations and this changed quite a bit with web 2.0 in 2010 when we were",
    "start": "681150",
    "end": "688860"
  },
  {
    "text": "started to build api's for many consumers so instead of specialized for one consumer one partner you could then",
    "start": "688860",
    "end": "695670"
  },
  {
    "text": "have many consumers so falling more into a conformist model if you follow Eric Evans and that was really a massive",
    "start": "695670",
    "end": "701670"
  },
  {
    "text": "change so instead of trying to optimize for one use case we actually wanted very flexible api's and I think we'll see",
    "start": "701670",
    "end": "709890"
  },
  {
    "text": "that continuing to evolve as we build richer more complex systems as well and",
    "start": "709890",
    "end": "715080"
  },
  {
    "text": "truly embrace cloud native I think we'll see many too many interactions so far more service server-to-server lattices",
    "start": "715080",
    "end": "720870"
  },
  {
    "text": "of api's building and again if you I mentioned a couple of names as we go through like zenyk Zdenek who talks",
    "start": "720870",
    "end": "726840"
  },
  {
    "text": "quite a lot about this next eva loose of api's so across all this time and",
    "start": "726840",
    "end": "731880"
  },
  {
    "text": "different techniques men still classify all of these technologies and we put",
    "start": "731880",
    "end": "737640"
  },
  {
    "text": "them in buckets like this so query API is where we want to empower our clients to retrieve the data that want or we're",
    "start": "737640",
    "end": "743880"
  },
  {
    "text": "favoring flexibility we have flat file API was very popular in the early 2000 so EDI or electronic data interchange so",
    "start": "743880",
    "end": "752190"
  },
  {
    "text": "still absolutely perfect maybe if you have a flat file extract from your financial system and you need to do",
    "start": "752190",
    "end": "757649"
  },
  {
    "text": "month end report again it doesn't need to be real-time it is absolutely still a valid form of API and if this is batch",
    "start": "757649",
    "end": "765839"
  },
  {
    "text": "and a synchronous that this is the streaming api's are absolutely real time so you can think about serving video or",
    "start": "765839",
    "end": "772470"
  },
  {
    "text": "maybe stop price updates but you think a lot of very rapid potentially",
    "start": "772470",
    "end": "777570"
  },
  {
    "text": "bi-directional communication across the wire as well we have RPC api's so again G RPC XML RPC",
    "start": "777570",
    "end": "785990"
  },
  {
    "text": "with very much calls and again with the RPC paradigm it's one component calling",
    "start": "785990",
    "end": "793260"
  },
  {
    "text": "another component across a distributed network but almost pretending that that distributed network is not there so",
    "start": "793260",
    "end": "799140"
  },
  {
    "text": "we're treating that as a facade across it whereas what web api is we spit up a HTTP client we embrace the web and this",
    "start": "799140",
    "end": "807360"
  },
  {
    "text": "web api is really where the majority of our REST API or HTTP endpoint api's would land so I guess if the the overall",
    "start": "807360",
    "end": "816450"
  },
  {
    "text": "angle of this talk is to say which is the best API style I think I have to confess now and it might be difficult to",
    "start": "816450",
    "end": "822420"
  },
  {
    "text": "last talk and the last day to suddenly be told that there is no single best API",
    "start": "822420",
    "end": "827640"
  },
  {
    "text": "style computing has had right so there",
    "start": "827640",
    "end": "833399"
  },
  {
    "text": "is always a best style for your problem at hand and that's the key thing that I want to take away from today don't",
    "start": "833399",
    "end": "839670"
  },
  {
    "text": "choose a technology and fit a problem to it let's look at the shape of the characteristics of your system and then",
    "start": "839670",
    "end": "844949"
  },
  {
    "text": "we could work backwards what would that process look like so we can get some",
    "start": "844949",
    "end": "850050"
  },
  {
    "text": "guidance here again from Roy fielding the man behind rest and he says the properties of this obvious system are",
    "start": "850050",
    "end": "856260"
  },
  {
    "text": "induced by the set of constraints within an architecture so rest itself defines a set of constraint",
    "start": "856260",
    "end": "862520"
  },
  {
    "text": "some one of them is the uniform interface constraint so with that it says that any resource in a restful api",
    "start": "862520",
    "end": "870990"
  },
  {
    "text": "can be accessed through a canonical you arrived and then what you can do with it is denn defined by the HTTP method the",
    "start": "870990",
    "end": "877050"
  },
  {
    "text": "HTTP methods or verbs that are that are associated with that particular resource and what we get as a property of that",
    "start": "877050",
    "end": "885360"
  },
  {
    "text": "constraint is simplicity that you have a uniform interface and irrespective of the API you know how to interact with it",
    "start": "885360",
    "end": "892760"
  },
  {
    "text": "however there's a trade-off to it because we're putting in an abstraction that could potentially cost us",
    "start": "892760",
    "end": "897930"
  },
  {
    "text": "efficiency or performance so again there's not always pluses to these we have to trade off some of the",
    "start": "897930",
    "end": "904110"
  },
  {
    "text": "constraints but it's not just about the architecture themselves there's many other types of constraints that we need",
    "start": "904110",
    "end": "909570"
  },
  {
    "text": "to factor into the systems that we're building so there's business constraints so who",
    "start": "909570",
    "end": "914790"
  },
  {
    "text": "are you building for are you building to a customer who has their own release schedule that you can't align to maybe",
    "start": "914790",
    "end": "921480"
  },
  {
    "text": "you don't have controller influence over us maybe there's specific capabilities",
    "start": "921480",
    "end": "926550"
  },
  {
    "text": "so if your customer is only capable of consuming flat files well good luck building a G RPC API for",
    "start": "926550",
    "end": "933000"
  },
  {
    "text": "them so again you might have certain constraints that are defined by that or performance constraint scalability",
    "start": "933000",
    "end": "938190"
  },
  {
    "text": "constraints that we can also have technical constraints so again how is",
    "start": "938190",
    "end": "943860"
  },
  {
    "text": "this system going to operate how is it going to be robust or resilience where do you trade-off between the two so",
    "start": "943860",
    "end": "950820"
  },
  {
    "text": "again looking ass viii fallacies of distributed computing thinking again how do we build that characteristics",
    "start": "950820",
    "end": "957899"
  },
  {
    "text": "potentially looks out native architecture into the api's we build so again very different if you were deploying to your own data centers and",
    "start": "957899",
    "end": "966510"
  },
  {
    "text": "then finally we have the most interesting ones all the human factors around our systems so if we're building",
    "start": "966510",
    "end": "972029"
  },
  {
    "text": "products then how do we keep these products healthy and sustainable over time so we have to factor in things like",
    "start": "972029",
    "end": "979079"
  },
  {
    "text": "the knowledge and expertise of the teams so unless your teams know HTTP really well then it can be challenging to build",
    "start": "979079",
    "end": "985260"
  },
  {
    "text": "a truly effective restful api because what it does leverage all of the",
    "start": "985260",
    "end": "990300"
  },
  {
    "text": "semantics of the underlying protocol there's the rub you need to understand it inside and out and",
    "start": "990300",
    "end": "995550"
  },
  {
    "text": "could be quite a steep learning curve you also have to think about how you own those systems so Conway's law an",
    "start": "995550",
    "end": "1000860"
  },
  {
    "text": "observation that says the systems we build with mirror them in communication patterns within an organization so how",
    "start": "1000860",
    "end": "1006019"
  },
  {
    "text": "do we build our teams that align them to the products that we build so once we take all of those constraints be it",
    "start": "1006019",
    "end": "1014060"
  },
  {
    "text": "business technical or socio technical we can then see all of the properties that will be imbued in the system both around",
    "start": "1014060",
    "end": "1020750"
  },
  {
    "text": "the ecosystem so all of the operational concerns but also then of the software",
    "start": "1020750",
    "end": "1026030"
  },
  {
    "text": "system itself and what I do whenever I'm designing a new system I always start",
    "start": "1026030",
    "end": "1032150"
  },
  {
    "text": "here I always that what are the properties that my system needs to have how is it going to need to be security",
    "start": "1032150",
    "end": "1039949"
  },
  {
    "text": "scalability what are other features that I need to do and then once you have a clear idea of the characteristics of",
    "start": "1039949",
    "end": "1046550"
  },
  {
    "text": "your system they're looking at what constraints you can apply that will yield those properties so how might we",
    "start": "1046550",
    "end": "1055520"
  },
  {
    "text": "be able to do that in a broader sense so again we have a bit of guidance here that says well there's no best",
    "start": "1055520",
    "end": "1061970"
  },
  {
    "text": "architectural style that's suitable for every problem we can compare architectural stars by looking at the",
    "start": "1061970",
    "end": "1068210"
  },
  {
    "text": "properties and again looking at the constraints the particular architectural style will apply and this was actually",
    "start": "1068210",
    "end": "1074240"
  },
  {
    "text": "my original premise for today's talk so I was a little bit disappointed to find out about ten minutes into my research",
    "start": "1074240",
    "end": "1080660"
  },
  {
    "text": "that someone's actually already done it so this gentleman called Zdenek Nemec",
    "start": "1080660",
    "end": "1085790"
  },
  {
    "text": "who gave the keynote at Nordic API is at the end of 2018 has done a very good",
    "start": "1085790",
    "end": "1091419"
  },
  {
    "text": "comparison between rest and graph QL in a low level of detail that takes all of the of the constraints that are defined",
    "start": "1091419",
    "end": "1099380"
  },
  {
    "text": "by rest itself and then additional operational constraints and now also then complies it and contrast it with",
    "start": "1099380",
    "end": "1105260"
  },
  {
    "text": "graph UL and this is graph UL of the ecosystem about 18 months ago so some",
    "start": "1105260",
    "end": "1110960"
  },
  {
    "text": "things have changed but you're still going to broad viewer a comparison between the two so again from that I",
    "start": "1110960",
    "end": "1116480"
  },
  {
    "text": "will share this and all of the slides and resources afterwards so no need to take photos as we go through but we're",
    "start": "1116480",
    "end": "1122900"
  },
  {
    "text": "going to do something a little bit different then and we're going to go back and look at some of the conversations that are happening",
    "start": "1122900",
    "end": "1128669"
  },
  {
    "text": "the industry we're going to take these myths or blanket statements then we're actually gonna ask a little bit more",
    "start": "1128669",
    "end": "1134279"
  },
  {
    "text": "questions and we're gonna go that little bit deeper and see is this actually true or to what degree so first of all let's",
    "start": "1134279",
    "end": "1143159"
  },
  {
    "text": "go back to this article that I referenced in the first couple of slides that declared rest api is a rest in peace api's long live graph QL so",
    "start": "1143159",
    "end": "1151200"
  },
  {
    "text": "clearly the author here saw no more value in rest api's and we have another",
    "start": "1151200",
    "end": "1156749"
  },
  {
    "text": "article at the same time that said graph UL would do to rest what Jason did to XML is it really that clear-cut so again",
    "start": "1156749",
    "end": "1166440"
  },
  {
    "text": "let's look at the thinking of the paradigms on the pinning graph QL so on",
    "start": "1166440",
    "end": "1172019"
  },
  {
    "text": "the query side it is very much remote data access and on the right side it is RPC so actually really nothing",
    "start": "1172019",
    "end": "1180499"
  },
  {
    "text": "incredibly revolutionary there and it's actually got a fair amount of HTTP or or rest semantics thrown in as well and",
    "start": "1180499",
    "end": "1189590"
  },
  {
    "text": "then let's have a look at G RPC itself so again a little bit different but G",
    "start": "1189590",
    "end": "1195210"
  },
  {
    "text": "RPC ties itself specifically to HTTP 2 while graph QL declares itself as",
    "start": "1195210",
    "end": "1201659"
  },
  {
    "text": "protocol agnostic in a similar way to graph QL G RPC always uses HTTP 2 as the",
    "start": "1201659",
    "end": "1207690"
  },
  {
    "text": "transport and he HTTP 2 is actually very specific here so I'd hate you to be what dot X it has to be 2 as a minimum and",
    "start": "1207690",
    "end": "1215489"
  },
  {
    "text": "the reason for that is that it leverages a lot of the streaming capabilities of",
    "start": "1215489",
    "end": "1220529"
  },
  {
    "text": "HT db2 for its functionality on the transport and schema side it uses",
    "start": "1220529",
    "end": "1228029"
  },
  {
    "text": "protocol buffers or protobuf and that is both for the schema so the wisdom you",
    "start": "1228029",
    "end": "1233789"
  },
  {
    "text": "could think in a soap API or an open API ramble or API blueprints contract in a",
    "start": "1233789",
    "end": "1241950"
  },
  {
    "text": "restful api and then also as the data exchange format over the wire and g RPC",
    "start": "1241950",
    "end": "1248399"
  },
  {
    "text": "is incredibly flexible for the types of interaction that support between a client and the server so it supports",
    "start": "1248399",
    "end": "1254759"
  },
  {
    "text": "traditional request response so one request from the client of one response back also known as a unary operation",
    "start": "1254759",
    "end": "1261660"
  },
  {
    "text": "but also more complex interactions such as service streaming so one request from",
    "start": "1261660",
    "end": "1267660"
  },
  {
    "text": "the client can yield multiple responses from the server we also have the inverse that the client could stream multiple",
    "start": "1267660",
    "end": "1274560"
  },
  {
    "text": "updates to the server and then be only get a single response back or we could",
    "start": "1274560",
    "end": "1279900"
  },
  {
    "text": "have bi-directional streaming as well so again G RPC is wonderful for real-time",
    "start": "1279900",
    "end": "1285650"
  },
  {
    "text": "interactions between api's where you have data changing very quickly you need to have synchronous interactions or",
    "start": "1285650",
    "end": "1292350"
  },
  {
    "text": "integrations between them but if we look at rest it's quite different again so if",
    "start": "1292350",
    "end": "1300450"
  },
  {
    "text": "G RPC and graph QL are really data over HTTP or data over the wire rest is a",
    "start": "1300450",
    "end": "1308610"
  },
  {
    "text": "state machine over HTTP or a workflow and this is a really key point and when",
    "start": "1308610",
    "end": "1317850"
  },
  {
    "text": "I talk about a state machine what I'm really looking at is that word hypermedia so again the bit of always",
    "start": "1317850",
    "end": "1323550"
  },
  {
    "text": "kind of throws people out if you're looking at the Richardson maturity model it's this thing up at layer 3 but it's",
    "start": "1323550",
    "end": "1328740"
  },
  {
    "text": "actually not that far at a concept if we where it's actually Everywhere's the",
    "start": "1328740",
    "end": "1333960"
  },
  {
    "text": "underlying paradigm of the web so if you just look at this really basic HTML page we have hyper media controls here and",
    "start": "1333960",
    "end": "1340140"
  },
  {
    "text": "the fact we have three of them first of all we have an image tag and the semantics of an image tag so whatever",
    "start": "1340140",
    "end": "1347450"
  },
  {
    "text": "resource is referenced by this URL when we dereference it it will take the",
    "start": "1347450",
    "end": "1352830"
  },
  {
    "text": "contents of that and put it in the align space we have an anchor tag that says when you dereference that link you will",
    "start": "1352830",
    "end": "1359100"
  },
  {
    "text": "then be navigated to that page we have a form which says when we submit it it",
    "start": "1359100",
    "end": "1365100"
  },
  {
    "text": "will take the data that we've captured in that form is send it to the server so are these these are all affordances",
    "start": "1365100",
    "end": "1371130"
  },
  {
    "text": "which have been sent by the server which then have well-understood semantics of the client so in the same way we could",
    "start": "1371130",
    "end": "1378600"
  },
  {
    "text": "have a a restful response where we can provide links to the client and the",
    "start": "1378600",
    "end": "1384060"
  },
  {
    "text": "client could then use the link relation that would follow that linked is a terrible where could it go next so if",
    "start": "1384060",
    "end": "1389400"
  },
  {
    "text": "you have an approval process so you might put in an order and I might then go to a pending State",
    "start": "1389400",
    "end": "1394780"
  },
  {
    "text": "invite them be approved when you've taken payment and finally shipped and at any point you control the next",
    "start": "1394780",
    "end": "1400570"
  },
  {
    "text": "navigations of valid state transitions for us so anywhere where I'm thinking that there is a flow and I want to be",
    "start": "1400570",
    "end": "1407050"
  },
  {
    "text": "able to then tie down the transitions between that rest is a wonderful choice",
    "start": "1407050",
    "end": "1412210"
  },
  {
    "text": "for that and since as I mentioned quite a bit about hypermedia I really have to",
    "start": "1412210",
    "end": "1418180"
  },
  {
    "text": "say this next line is that rest does require hate EOS so hypermedia is the engine of application state and I feel",
    "start": "1418180",
    "end": "1426670"
  },
  {
    "text": "that this is quite an important point and I don't mean it to be confrontational apologize if it does but",
    "start": "1426670",
    "end": "1432250"
  },
  {
    "text": "I feel a lot of the pain a lot of the backlash that we're seeing about restful",
    "start": "1432250",
    "end": "1437260"
  },
  {
    "text": "api is our rest dish api's is that we've taken some of the parts of arrest and then other parts are",
    "start": "1437260",
    "end": "1443140"
  },
  {
    "text": "a bit difficult or maybe we haven't been able to implement adequately for a number of reasons and it delivers a suboptimal experience and I feel that's",
    "start": "1443140",
    "end": "1449590"
  },
  {
    "text": "a lot of the tension that we sort of see you the community right there so I would really implore you don't",
    "start": "1449590",
    "end": "1455320"
  },
  {
    "text": "build rest assure I'm firmly of the opinion that from many api's if for",
    "start": "1455320",
    "end": "1463540"
  },
  {
    "text": "whatever reason you can't make the use case force or the knowledge within the team or the client you could actually",
    "start": "1463540",
    "end": "1470470"
  },
  {
    "text": "get a much better result by either building it in an RPC style or a graph QL style so for our less effort and get",
    "start": "1470470",
    "end": "1477010"
  },
  {
    "text": "a better outcome for us and that's actually okay because again it's not we",
    "start": "1477010",
    "end": "1483730"
  },
  {
    "text": "shouldn't start by saying I want to build a G RPC API and work backwards it's just saying okay with all the",
    "start": "1483730",
    "end": "1488830"
  },
  {
    "text": "constraints that I have what's the best outcome that could have so and if your API is mostly actions so an example of",
    "start": "1488830",
    "end": "1496840"
  },
  {
    "text": "this could be the slack API it's an RPC API it's heavily action based and a lot",
    "start": "1496840",
    "end": "1503200"
  },
  {
    "text": "again the tension with REST API zhe's where we have an action orientated interface and we're trying to squidge it",
    "start": "1503200",
    "end": "1509380"
  },
  {
    "text": "into a restful URL so we end up with this resource slash increment or those",
    "start": "1509380",
    "end": "1516610"
  },
  {
    "text": "sort of actions that you spend a lot of time bytes chellie about URL structures and yeah I don't really feel as that",
    "start": "1516610",
    "end": "1523300"
  },
  {
    "text": "valuable but if however your API is mostly prod and you're manipulating related",
    "start": "1523300",
    "end": "1530009"
  },
  {
    "text": "resources or there is a workflow then rest is a wonderful choice and in fact",
    "start": "1530009",
    "end": "1535259"
  },
  {
    "text": "if there is one person you should read a lot of content from one effects someone who I've taken quite a bit of content",
    "start": "1535259",
    "end": "1540299"
  },
  {
    "text": "for their blog post is actually Phil sturgeon so he could take a lot from he he writes a blog post called a Piz won't",
    "start": "1540299",
    "end": "1546539"
  },
  {
    "text": "hate and why he's got a lot of very strong opinions and a lot of things there's a lot of experience behind it so",
    "start": "1546539",
    "end": "1553229"
  },
  {
    "text": "I thoroughly encouraged you to follow Phil and this is a again just a proving",
    "start": "1553229",
    "end": "1559619"
  },
  {
    "text": "that there's even the creators of these of these technologies don't see those being perfect for all use cases this is",
    "start": "1559619",
    "end": "1566219"
  },
  {
    "text": "lee byron i like what are the creations of graph QL and he says that graph QL is a wonderful choice for Clyde to server",
    "start": "1566219",
    "end": "1573690"
  },
  {
    "text": "interactions but he doesn't really see the value of it for server-to-server communications so very much where you",
    "start": "1573690",
    "end": "1579299"
  },
  {
    "text": "have a client that has or maybe multiple clients with different data needs that's wonderful cuz we're empowering the client to select the data that it",
    "start": "1579299",
    "end": "1585749"
  },
  {
    "text": "needs but for server-to-server calls gr pc or even rest to be a fair better",
    "start": "1585749",
    "end": "1590879"
  },
  {
    "text": "choice so API Styles they address",
    "start": "1590879",
    "end": "1596909"
  },
  {
    "text": "different problem spaces if we're building rest dish api's whether it be",
    "start": "1596909",
    "end": "1602700"
  },
  {
    "text": "for internally within your team or two customers consider whether you could get a better outcome for less effort with",
    "start": "1602700",
    "end": "1611070"
  },
  {
    "text": "exploring graph QL or RPC and I'm not saying that they are better I'm just saying that to build a REST API requires",
    "start": "1611070",
    "end": "1617909"
  },
  {
    "text": "a high level of experience a dedication and you often don't see the payoff in a",
    "start": "1617909",
    "end": "1623429"
  },
  {
    "text": "short time but it's really being able to evolve over decades is where the power",
    "start": "1623429",
    "end": "1629039"
  },
  {
    "text": "of rests comes in and that might not be the shape of your problem at all so consider that and G OPC is wonderful for",
    "start": "1629039",
    "end": "1636809"
  },
  {
    "text": "synchronous communications between internal services this to sports many different interaction bottles you get a huge amount of flexibility there so with",
    "start": "1636809",
    "end": "1646229"
  },
  {
    "text": "other statement I saw that was being passed around quite a bit and this one still comes up is graph QL breaks",
    "start": "1646229",
    "end": "1652529"
  },
  {
    "text": "caching but what kind of caging surely not all",
    "start": "1652529",
    "end": "1659899"
  },
  {
    "text": "caching because if we look at caching there's actually many kinds we can either cash in the client so that could",
    "start": "1659899",
    "end": "1665629"
  },
  {
    "text": "be your browser cache we could cache on the server side also known as",
    "start": "1665629",
    "end": "1670669"
  },
  {
    "text": "application casing or we can have Network Asian or intermediary caging so",
    "start": "1670669",
    "end": "1675889"
  },
  {
    "text": "again case boxes that might sit between the client and the server so let's take a look at that",
    "start": "1675889",
    "end": "1681099"
  },
  {
    "text": "so with HTTP caching we can have these intermediate casing proxies so you can",
    "start": "1681099",
    "end": "1686570"
  },
  {
    "text": "think squid our varnish however with graph QL and G RPC while we",
    "start": "1686570",
    "end": "1693409"
  },
  {
    "text": "absolutely can still do service education so retrieve something from the database may be sticking in Redis and",
    "start": "1693409",
    "end": "1699559"
  },
  {
    "text": "then send it back to the client or on the client side we can still have in the case of graph QL a denormalize client",
    "start": "1699559",
    "end": "1705529"
  },
  {
    "text": "cache or you could store it in the browser cache but you cannot do the",
    "start": "1705529",
    "end": "1711079"
  },
  {
    "text": "intermediary caching proxy and that's for a number of reasons not only in graft you're generally uses posts which",
    "start": "1711079",
    "end": "1717469"
  },
  {
    "text": "are cashable but why are intermediate asian proxies important that if we could",
    "start": "1717469",
    "end": "1722599"
  },
  {
    "text": "still get a lot of the benefit from the server side of the client and it really",
    "start": "1722599",
    "end": "1727669"
  },
  {
    "text": "comes down to proximity to the client so what the speed of light is fast about 300,000 kilometers per second it is not",
    "start": "1727669",
    "end": "1734869"
  },
  {
    "text": "infinitely fast particularly if you're going over copper wire so we're going with the refractive index jobs Wally so",
    "start": "1734869",
    "end": "1741559"
  },
  {
    "text": "again if you can get your data closer to the client they will get it more quickly",
    "start": "1741559",
    "end": "1746649"
  },
  {
    "text": "so again from a performance perspective very valuable you could also then localize the data",
    "start": "1746649",
    "end": "1752359"
  },
  {
    "text": "for a number of clients prevent more expensive calls coming back into your network as well so how are we start",
    "start": "1752359",
    "end": "1759469"
  },
  {
    "text": "trying to achieve this support for intermediary proxy caches with graph QL",
    "start": "1759469",
    "end": "1764599"
  },
  {
    "text": "Lin and there's been a bit of a shift in the community over the last year about it and instead of using posts and pretty",
    "start": "1764599",
    "end": "1772969"
  },
  {
    "text": "much using HTTP as a as a dumb pipe there's no kind of champion by Apollo in",
    "start": "1772969",
    "end": "1779659"
  },
  {
    "text": "the in the node space or one of the providers they're allowing you to use queries with an HTTP GET request and",
    "start": "1779659",
    "end": "1787099"
  },
  {
    "text": "also using persisted queries which are again queries precomputed and exists on the server so",
    "start": "1787099",
    "end": "1792470"
  },
  {
    "text": "instead of having to pass large queries over the wire you can send it ID then have a hydration of the server but this",
    "start": "1792470",
    "end": "1799460"
  },
  {
    "text": "is not part of a standard so this is still very much things that have emerged from various area of the community which",
    "start": "1799460",
    "end": "1806720"
  },
  {
    "text": "is a bit of a shame because that's actually one of the big power of graph UL that you had a specification for graph QL which removed a lot of the",
    "start": "1806720",
    "end": "1815060"
  },
  {
    "text": "ambiguity or the challenges that people were building with rest which was more of an architectural style and there was",
    "start": "1815060",
    "end": "1820910"
  },
  {
    "text": "no specification which we could implement there is however no graph Q well specification for HTTP so again",
    "start": "1820910",
    "end": "1828620"
  },
  {
    "text": "there's still a big lack there's still a big gap there so many of the cases for problems that have actually been solved",
    "start": "1828620",
    "end": "1834440"
  },
  {
    "text": "by the rest community number of years ago decades ago we're still solving them",
    "start": "1834440",
    "end": "1840920"
  },
  {
    "text": "today in graph QL so there's still a lot of bite shedding that's happening in the community another thing to consider as",
    "start": "1840920",
    "end": "1848150"
  },
  {
    "text": "well is whether your API is authenticated so whether it's open or whether against you will have an",
    "start": "1848150",
    "end": "1854540"
  },
  {
    "text": "authorization header with either a session cookie or a bearer token or some other form of identity or personalized",
    "start": "1854540",
    "end": "1860750"
  },
  {
    "text": "data in there because what we should be aware of there is that intermediary caches will not cache authenticated",
    "start": "1860750",
    "end": "1868760"
  },
  {
    "text": "traffic by default so again if all of your content is fairly real-time and",
    "start": "1868760",
    "end": "1875050"
  },
  {
    "text": "tied to a specific identity then that changes your landscape particularly as",
    "start": "1875050",
    "end": "1880520"
  },
  {
    "text": "well and actually intermediary occasions might be a concern for you at all okay",
    "start": "1880520",
    "end": "1886730"
  },
  {
    "text": "so we've already got a little bit of nuance so breaks caching but there's three different types of caching do all",
    "start": "1886730",
    "end": "1891770"
  },
  {
    "text": "of them apply to me maybe not and there's another thing that you should be aware of as well is they're more",
    "start": "1891770",
    "end": "1898130"
  },
  {
    "text": "customizable your API is generally the less cashable it will be so in the case",
    "start": "1898130",
    "end": "1906200"
  },
  {
    "text": "of a REST API where we have a uniform",
    "start": "1906200",
    "end": "1911270"
  },
  {
    "text": "interface we might have slash users slash one and we'll get a very good case record for that because the second we",
    "start": "1911270",
    "end": "1916700"
  },
  {
    "text": "retrieved that record there's nothing else I could do with it so the cased version whether it be for expiration",
    "start": "1916700",
    "end": "1922040"
  },
  {
    "text": "based or etags you can generally be served to other users as well as other clients",
    "start": "1922040",
    "end": "1927499"
  },
  {
    "text": "however the second we start adding query parameters to it so maybe being able to select a subset of fields or put an",
    "start": "1927499",
    "end": "1934639"
  },
  {
    "text": "order or audit again we're creating a unique identity there and we're reducing the number or the likelihood of someone",
    "start": "1934639",
    "end": "1940999"
  },
  {
    "text": "else making that same request and now imagine with graphically well where every client can make any query",
    "start": "1940999",
    "end": "1947749"
  },
  {
    "text": "that they want so that's a huge level of level of power that you're giving to your clients so again the Keysha bility",
    "start": "1947749",
    "end": "1955489"
  },
  {
    "text": "of that will decline so the more customizable you make your API again",
    "start": "1955489",
    "end": "1961039"
  },
  {
    "text": "just consider that you will actually be losing or complicating your life on the caching side again so everything's a",
    "start": "1961039",
    "end": "1968480"
  },
  {
    "text": "trade-off so actually you might be thinking actually for the API building no Casey is it that important for me at all so",
    "start": "1968480",
    "end": "1975409"
  },
  {
    "text": "maybe I actually dead veer towards one option or the other so the takeaways are",
    "start": "1975409",
    "end": "1981499"
  },
  {
    "text": "occasionally is that there are many different types of caching and they apply to different scenarios so highly",
    "start": "1981499",
    "end": "1986899"
  },
  {
    "text": "customizable API is where the clients are afforded a huge amount of flexibility in the data they request",
    "start": "1986899",
    "end": "1992139"
  },
  {
    "text": "they benefit less if Network ation is valuable to you that absolutely looking",
    "start": "1992139",
    "end": "1998389"
  },
  {
    "text": "at a restful api could be a really good choice because you will be able to get data more easily to the age and best",
    "start": "1998389",
    "end": "2005499"
  },
  {
    "text": "practices are absolutely still emerging for graph QL and G RPC in this space as I mentioned before there still a lot of",
    "start": "2005499",
    "end": "2011919"
  },
  {
    "text": "the communities are still relatively immature in comparison to rest so there is still quite a lot of bike sharing",
    "start": "2011919",
    "end": "2017559"
  },
  {
    "text": "that happens in the area this is one of",
    "start": "2017559",
    "end": "2022600"
  },
  {
    "text": "my favorites REST API czar inefficient",
    "start": "2022600",
    "end": "2027840"
  },
  {
    "text": "what do we do with this like how can you respond to it and I think what we really have to start looking at is what was",
    "start": "2027840",
    "end": "2033789"
  },
  {
    "text": "rest for like rest was never about efficiency there was never its goal so",
    "start": "2033789",
    "end": "2040450"
  },
  {
    "text": "we were looking to build systems that could evolve over decades so the client-server architecture where each",
    "start": "2040450",
    "end": "2046570"
  },
  {
    "text": "could evolve independently so we were looking for longevity and reduced quite",
    "start": "2046570",
    "end": "2051700"
  },
  {
    "text": "coupling and in fact many of the decisions that were the architectural constraints of arrest",
    "start": "2051700",
    "end": "2057850"
  },
  {
    "text": "absolutely went against short-term efficiency right so that's a very",
    "start": "2057850",
    "end": "2063200"
  },
  {
    "text": "deliberate choice for long-term flexibility and evolution but that's not",
    "start": "2063200",
    "end": "2069320"
  },
  {
    "text": "to say that when we say they're inefficient that that we should be conflated with that they're not performance because there's absolutely",
    "start": "2069320",
    "end": "2075350"
  },
  {
    "text": "things that we could do with this and in fact http/2 has removed a lot of the pain that might have been associated",
    "start": "2075350",
    "end": "2082580"
  },
  {
    "text": "with previous rest api is usually htb would not X but what are some of the",
    "start": "2082580",
    "end": "2089060"
  },
  {
    "text": "major issues that we could see what rest api is so we can either over fetch so if",
    "start": "2089060",
    "end": "2094190"
  },
  {
    "text": "we have many different types of clients maybe a web client or a wearable or watch those clients can generally",
    "start": "2094190",
    "end": "2100670"
  },
  {
    "text": "display varying amounts of data but if you only have one representation then",
    "start": "2100670",
    "end": "2106160"
  },
  {
    "text": "you might be sending way too much data to one client and then just sending slower requests maybe using up their",
    "start": "2106160",
    "end": "2113450"
  },
  {
    "text": "available bad with maybe their data allowance on the other side we could be under fetching which could typically",
    "start": "2113450",
    "end": "2119450"
  },
  {
    "text": "result in I'm gonna retrieve the master record and then for each one of its children I have to dereference the children independently often known as",
    "start": "2119450",
    "end": "2125600"
  },
  {
    "text": "the M plus one problem but there are techniques that we could do to tackle these so for over fetching we can use",
    "start": "2125600",
    "end": "2132770"
  },
  {
    "text": "sparse field sets so allow the client to specify the individual fields that at once or maybe feel groupings so again",
    "start": "2132770",
    "end": "2140180"
  },
  {
    "text": "while there's no standard around this there's a number of options that you have but effectively allowing the clients to say I don't what all of us",
    "start": "2140180",
    "end": "2146180"
  },
  {
    "text": "just give me a subset of the representation and to avoid many road trips we can look at compare documents",
    "start": "2146180",
    "end": "2151790"
  },
  {
    "text": "and compound documents are really the main aspect of some of the hyper media",
    "start": "2151790",
    "end": "2156980"
  },
  {
    "text": "types such as JSON API or how hyper-v the application language that were quite",
    "start": "2156980",
    "end": "2163369"
  },
  {
    "text": "popular like five six years ago as well and they were really looking to mitigate a lot of the issues that we had with",
    "start": "2163369",
    "end": "2168619"
  },
  {
    "text": "HTTP what Onix api's and this was really one of the first things where graph Kewell came to the community and says",
    "start": "2168619",
    "end": "2175810"
  },
  {
    "text": "irrespective of the shape of the data that your client requires you could retrieve all of it at exactly one",
    "start": "2175810",
    "end": "2182900"
  },
  {
    "text": "round-trip to the server and this was seen as a massive boon so instead of all these individual",
    "start": "2182900",
    "end": "2188780"
  },
  {
    "text": "Quest's we can now create one request have a process on the server and go back to the client",
    "start": "2188780",
    "end": "2194240"
  },
  {
    "text": "doesn't that sound brilliant what we have inadvertently done though is now",
    "start": "2194240",
    "end": "2201080"
  },
  {
    "text": "tied a response to the client to the slowest piece of data we've coupled all",
    "start": "2201080",
    "end": "2209060"
  },
  {
    "text": "of those individual requests so if we have some data that could be retrieved",
    "start": "2209060",
    "end": "2214820"
  },
  {
    "text": "really quickly for the client maybe just the domaine layout data elements and then we have some more expensive",
    "start": "2214820",
    "end": "2221960"
  },
  {
    "text": "computed fields all of that data will need to be available on the server before the client sees anything so as",
    "start": "2221960",
    "end": "2228880"
  },
  {
    "text": "people actually started building api's and I got stuck this myself with graph QL and we started getting them into",
    "start": "2228880",
    "end": "2234020"
  },
  {
    "text": "production we actually saw there was a lot of effort needs to be invested in tuning your queries and actually then",
    "start": "2234020",
    "end": "2239270"
  },
  {
    "text": "moving some of the computed items out from larger queries and actually making them separate items themselves so that",
    "start": "2239270",
    "end": "2245840"
  },
  {
    "text": "we were reducing the volatility of those requests and again where there's a will there's a way the community thought okay",
    "start": "2245840",
    "end": "2253640"
  },
  {
    "text": "well what happens if I could then mark certain elements as being deferred which could then be sent back to the client as",
    "start": "2253640",
    "end": "2259940"
  },
  {
    "text": "a HTTP patch and then the servic then look at all of those items have finally stitch them up it adds a lot of",
    "start": "2259940",
    "end": "2267380"
  },
  {
    "text": "complexity and what we should really be thinking at this stage is shouldn't really be this complicated where's that",
    "start": "2267380",
    "end": "2275090"
  },
  {
    "text": "simplicity that we really want is irrelevant thinking about that simple customer experience and if we really",
    "start": "2275090",
    "end": "2280610"
  },
  {
    "text": "look at all of these compound documents it was really a result of hahdve 1x",
    "start": "2280610",
    "end": "2285920"
  },
  {
    "text": "where to establish a connection at the TCP level was very expensive so we had window scaling we had handshakes",
    "start": "2285920",
    "end": "2292480"
  },
  {
    "text": "likewise at the TLS level we had to establish a new connection so we had to have the server hello again and that",
    "start": "2292480",
    "end": "2298550"
  },
  {
    "text": "takes a lot of time to not only establish the connection but also to scale up the bandwidth on that connection so establishing a new",
    "start": "2298550",
    "end": "2305210"
  },
  {
    "text": "connection for every request was very expensive and then you could also look at techniques like the main sharing as",
    "start": "2305210",
    "end": "2310340"
  },
  {
    "text": "well but we were generally looking to get around the hacks or the miss or the",
    "start": "2310340",
    "end": "2315830"
  },
  {
    "text": "limitations of the underlying protocol well if I'd hate you to be result resolves a huge amount of these because",
    "start": "2315830",
    "end": "2322220"
  },
  {
    "text": "we can multiplex streams over a single connection so you can have one long libs connection and then many requests that",
    "start": "2322220",
    "end": "2328010"
  },
  {
    "text": "go over it so you avoid all of the hassles of again having to create the TCP connection and scariest and again",
    "start": "2328010",
    "end": "2333859"
  },
  {
    "text": "doing the TLS handshake as well it's not only that there's also another feature called server push and what this allows the",
    "start": "2333859",
    "end": "2341359"
  },
  {
    "text": "server to do is to push resources or representations to the client without",
    "start": "2341359",
    "end": "2347839"
  },
  {
    "text": "actually having the client ask for them so what you could do from here is if the",
    "start": "2347839",
    "end": "2353930"
  },
  {
    "text": "client was requesting users maybe from there that you could also proactively",
    "start": "2353930",
    "end": "2360019"
  },
  {
    "text": "push a number of the child records to the server as well and from here you",
    "start": "2360019",
    "end": "2366559"
  },
  {
    "text": "allowing this you're allowing the server to take a lot more control over how it can optimize the sending of traffic to",
    "start": "2366559",
    "end": "2371660"
  },
  {
    "text": "the clients out of fact one of the big goals of this was actually to have service optimize the loading of web",
    "start": "2371660",
    "end": "2377990"
  },
  {
    "text": "pages but we found their preload or pre fresh links were actually a lot more effective on the browser space but",
    "start": "2377990",
    "end": "2384470"
  },
  {
    "text": "there's open source libraries such as volcano which has been released last year that now allows clients to send",
    "start": "2384470",
    "end": "2391059"
  },
  {
    "text": "additional link headers in the request which the server will then push back to the client asynchronously sort when it",
    "start": "2391059",
    "end": "2397609"
  },
  {
    "text": "needs and it will be available in the server in the cache or the HTTP connection so it sounds wonderful this",
    "start": "2397609",
    "end": "2405710"
  },
  {
    "text": "is something that I do expect will become more popular over time but",
    "start": "2405710",
    "end": "2411109"
  },
  {
    "text": "there's still a fair amount of profiling that we need to do on server push I in",
    "start": "2411109",
    "end": "2416720"
  },
  {
    "text": "the links as well I have included a link to that library called volcano but it's an interesting way where as API developers we can then look at different",
    "start": "2416720",
    "end": "2423349"
  },
  {
    "text": "ways of serving resources to the client so performance so with HTTP one the cost",
    "start": "2423349",
    "end": "2430609"
  },
  {
    "text": "of a handshake was really high and in fact it was multiple had shakes that we were doing them very frequently and we",
    "start": "2430609",
    "end": "2436940"
  },
  {
    "text": "created a lot of a lot of hacks or workarounds for that typically compound documents but when we made compound",
    "start": "2436940",
    "end": "2443569"
  },
  {
    "text": "documents we ruined the case ability of those requests again because again they were only as cacheable as the most",
    "start": "2443569",
    "end": "2449809"
  },
  {
    "text": "volatile piece of data Noah HTTP - we can send all those individual requests",
    "start": "2449809",
    "end": "2455820"
  },
  {
    "text": "back to the client without having to create new connections so we can do it a lot more effectively and because we can",
    "start": "2455820",
    "end": "2462240"
  },
  {
    "text": "still do it in a more granular sense we still get a very high case ability from it so it's actually a win-win it's",
    "start": "2462240",
    "end": "2467340"
  },
  {
    "text": "beautiful and server push creates new possibilities again toward potentially profiling the use of our API so we're",
    "start": "2467340",
    "end": "2473670"
  },
  {
    "text": "seeing traffic patterns where clients generally have the set of interactions and again having that data ready for",
    "start": "2473670",
    "end": "2478710"
  },
  {
    "text": "when they use them and in fact gar PC heavily uses HTTP to full stop and in",
    "start": "2478710",
    "end": "2484710"
  },
  {
    "text": "fact we will talk a little bit about G RPC web which you might have heard in some of the Blazer talks this this conference as well and that's for",
    "start": "2484710",
    "end": "2491130"
  },
  {
    "text": "streaming methods again so one too many requests either originated from the server or the client or in some cases",
    "start": "2491130",
    "end": "2497310"
  },
  {
    "text": "both directions this is another great",
    "start": "2497310",
    "end": "2505050"
  },
  {
    "text": "one so graph UL eliminates the need for versioning so graph view or we don't",
    "start": "2505050",
    "end": "2511320"
  },
  {
    "text": "need a version or a POS anymore it's a bit odd because we never had to version",
    "start": "2511320",
    "end": "2516660"
  },
  {
    "text": "our api's it was always a strategy it was never a requirement so why we would",
    "start": "2516660",
    "end": "2522570"
  },
  {
    "text": "version our api's it was a strategy to handle breaking changes where you would",
    "start": "2522570",
    "end": "2528300"
  },
  {
    "text": "change the contract on the server and you wanted to insulate a client from that effect so then you have make a",
    "start": "2528300",
    "end": "2535260"
  },
  {
    "text": "breaking change create a new version that the client could decide when they want to adopt that new version so",
    "start": "2535260",
    "end": "2541140"
  },
  {
    "text": "absolutely a strategy but there's other ways of handing of handling evolving",
    "start": "2541140",
    "end": "2547020"
  },
  {
    "text": "capabilities and from there it's graceful evolution and this is really",
    "start": "2547020",
    "end": "2553800"
  },
  {
    "text": "what has been promoted in the rest space for quite a number of years in the web",
    "start": "2553800",
    "end": "2560040"
  },
  {
    "text": "as well that web page is gracefully evolved in the same way we can build our api's with non breaking changes and in",
    "start": "2560040",
    "end": "2567390"
  },
  {
    "text": "my opinion graceful evolution should always be the goal so where possible",
    "start": "2567390",
    "end": "2573020"
  },
  {
    "text": "supporting multiple different versions of an API as a provider can get very expensive very quickly and complicates",
    "start": "2573020",
    "end": "2579150"
  },
  {
    "text": "the landscape so not only from a client perspective but also from a server perspective you could simplify your life",
    "start": "2579150",
    "end": "2585390"
  },
  {
    "text": "a lot if you choose graceful evolution as your",
    "start": "2585390",
    "end": "2591550"
  },
  {
    "text": "strategy however it does take discipline so some of the implications of it is",
    "start": "2591550",
    "end": "2597040"
  },
  {
    "text": "that we can't add new required inputs to an operation we can't remove outputs or",
    "start": "2597040",
    "end": "2604150"
  },
  {
    "text": "make them optional because again we could be breaking your dependency from the client we can change the type of a",
    "start": "2604150",
    "end": "2611350"
  },
  {
    "text": "field so if it was a string we can turn it to a number and we should also be",
    "start": "2611350",
    "end": "2616990"
  },
  {
    "text": "following the robustness principle or pastels law so being incredibly broad in what we accept but incredibly suspect",
    "start": "2616990",
    "end": "2623680"
  },
  {
    "text": "with what we send so again being well-behaved citizens and this takes discipline but what it takes discipline",
    "start": "2623680",
    "end": "2631390"
  },
  {
    "text": "on the server side you can not treat it in isolation and another massive call",
    "start": "2631390",
    "end": "2637150"
  },
  {
    "text": "out is you cannot over communicate with your users so even if you are going to make a change don't rely on at sunset or",
    "start": "2637150",
    "end": "2645310"
  },
  {
    "text": "at deprecation headers on your API responses and expect your clients to understand that change is gonna be",
    "start": "2645310",
    "end": "2650980"
  },
  {
    "text": "coming send a bulletin update them with change requests let them know a number of buds out particularly that works",
    "start": "2650980",
    "end": "2657250"
  },
  {
    "text": "where we build a lot of partner a POS so for system integrators but also internally as well and having a regular",
    "start": "2657250",
    "end": "2663160"
  },
  {
    "text": "caters where we could discuss API changes has reduced a lot of the friction around timing those so if I",
    "start": "2663160",
    "end": "2669910"
  },
  {
    "text": "spoke about the server previously there's a lot that the clients can do as well to be well-behaved citizens as well",
    "start": "2669910",
    "end": "2677260"
  },
  {
    "text": "so if you're consuming an API and you only need three of those fields don't",
    "start": "2677260",
    "end": "2683590"
  },
  {
    "text": "break if the server includes an additional fields that you're not interested in don't break if the server",
    "start": "2683590",
    "end": "2690010"
  },
  {
    "text": "sends the fields at a slightly different order so don't take that response and",
    "start": "2690010",
    "end": "2695350"
  },
  {
    "text": "serialize it directly into a class and",
    "start": "2695350",
    "end": "2700870"
  },
  {
    "text": "this tolerant reader pattern is actually defined American Fowler's book enterprise integration patterns and it",
    "start": "2700870",
    "end": "2706810"
  },
  {
    "text": "provides a lot of guidance about when you're consuming api's how do you make sure that you can do it in a robust way",
    "start": "2706810",
    "end": "2712390"
  },
  {
    "text": "and in fact there's a number of other patterns of that book as well that can provide great insight into building",
    "start": "2712390",
    "end": "2717400"
  },
  {
    "text": "resilient integrations between systems but if we do need to make a change and",
    "start": "2717400",
    "end": "2723200"
  },
  {
    "text": "you want to deprecate a certain feature how we communicate that so I've already mentioned about deprecation and sunset",
    "start": "2723200",
    "end": "2729829"
  },
  {
    "text": "headers on the response graph QL actually comes with an inbuilt feature around this and it's called deprecations",
    "start": "2729829",
    "end": "2735650"
  },
  {
    "text": "where I can mark a certain field as saying this will soon be removed and because graph QL you know exactly what",
    "start": "2735650",
    "end": "2743420"
  },
  {
    "text": "fields or what data every client needs you can create a map of who would be",
    "start": "2743420",
    "end": "2748609"
  },
  {
    "text": "interested or who's in this field and who should I inform if I'm going to change it and that sounds wonderful in",
    "start": "2748609",
    "end": "2754849"
  },
  {
    "text": "fact this was something that was really excited about because I kind of expected I'd be able to then have really targeted",
    "start": "2754849",
    "end": "2760220"
  },
  {
    "text": "conversations with a subset of my my users and say this fields gonna be removed are you ok with that can we work",
    "start": "2760220",
    "end": "2765950"
  },
  {
    "text": "out with the timing but unfortunately when your API use reaches a certain",
    "start": "2765950",
    "end": "2772430"
  },
  {
    "text": "level of scale or a certain number of users it's kind of observed in Hiram's",
    "start": "2772430",
    "end": "2778760"
  },
  {
    "text": "law everybody depends on something so you're always have uses that require at",
    "start": "2778760",
    "end": "2785390"
  },
  {
    "text": "least one of the fields but there's also implicit dependencies as well so",
    "start": "2785390",
    "end": "2791809"
  },
  {
    "text": "behavioral systems as well or behavioral functions in it and that's not always something that you might document in",
    "start": "2791809",
    "end": "2798049"
  },
  {
    "text": "your API so you have to be really careful when you're thinking about evolving your API that were not just",
    "start": "2798049",
    "end": "2804230"
  },
  {
    "text": "thinking about contractual changes but there could also be behavioral changes in your API switch clients have a",
    "start": "2804230",
    "end": "2810230"
  },
  {
    "text": "dependency on as well so it becomes a lot more complicated than simply looking for a deprecation tag and in fact in",
    "start": "2810230",
    "end": "2817220"
  },
  {
    "text": "many cases if you're looking to do a migration to a new service or a new version sometimes you have to deal with bug for bug compatibility because you",
    "start": "2817220",
    "end": "2823010"
  },
  {
    "text": "can control for those clients even if it doesn't behave exactly as it was a rigid documented that was the expectation the",
    "start": "2823010",
    "end": "2828529"
  },
  {
    "text": "client now has so if you're doing any refactoring of existing systems so again",
    "start": "2828529",
    "end": "2834440"
  },
  {
    "text": "dealing with legacy codes by by Michael feathers provides a lot of guidance",
    "start": "2834440",
    "end": "2840230"
  },
  {
    "text": "around how to deal with these integrations and breaking out separate components but the biggest thing we can",
    "start": "2840230",
    "end": "2846529"
  },
  {
    "text": "do about Libre engine we're leveraging this is about defining the interfaces so making systems available starts by",
    "start": "2846529",
    "end": "2852260"
  },
  {
    "text": "getting the inter faces right and if we don't do a fair amount of upfront design that we aired a lot of those change requests sort of",
    "start": "2852260",
    "end": "2858890"
  },
  {
    "text": "landscapes we were making breaking changes for clients so the biggest thing that I could advise around this is using",
    "start": "2858890",
    "end": "2864890"
  },
  {
    "text": "a contract first design approach so what might that look like so in graph",
    "start": "2864890",
    "end": "2870200"
  },
  {
    "text": "QL that's your schema in GRP see that's a protocol buffer and in a REST API you",
    "start": "2870200",
    "end": "2877280"
  },
  {
    "text": "have a whole plethora of choices so you can have swagger now known as open API ramble blueprints and number of others",
    "start": "2877280",
    "end": "2883970"
  },
  {
    "text": "but starting with a common contract that can then be developed in parallel maybe",
    "start": "2883970",
    "end": "2889940"
  },
  {
    "text": "by different teams of building a client maybe actually building out the API implementation and because you have a",
    "start": "2889940",
    "end": "2896270"
  },
  {
    "text": "contract is very easy to mock against that contract as well because you have that shared interface and then when both",
    "start": "2896270",
    "end": "2902120"
  },
  {
    "text": "of them are ready that could be integrated and then the loop can continue again and we found again by",
    "start": "2902120",
    "end": "2907940"
  },
  {
    "text": "starting with the contract it was very easy to evolve that I'll have shared design sessions between the consumers",
    "start": "2907940",
    "end": "2913760"
  },
  {
    "text": "and the producers rather than having to write code and that feedback loop BK blog or a Bo odorous so again be able to",
    "start": "2913760",
    "end": "2920180"
  },
  {
    "text": "create a vibe but where it's really easy to change and update that behavior quickly we felt a door for the long run",
    "start": "2920180",
    "end": "2927430"
  },
  {
    "text": "so versioning it is a technique to manage breaking changes it should be a",
    "start": "2927430",
    "end": "2932450"
  },
  {
    "text": "last resource it shouldn't be your first option only use it where absolutely necessary prefer gracefully evolution",
    "start": "2932450",
    "end": "2939550"
  },
  {
    "text": "absolutely not a substitute for the communicate with your users that is the absolute biggest thing about managing",
    "start": "2939550",
    "end": "2944930"
  },
  {
    "text": "changes in your API and it doesn't protect users from depending on app listed behavior as well so sometimes",
    "start": "2944930",
    "end": "2951170"
  },
  {
    "text": "it's not just about the interface changes another one we came across was",
    "start": "2951170",
    "end": "2957890"
  },
  {
    "text": "domain modeling is purely a rest concern so if I'm using any other style I don't",
    "start": "2957890",
    "end": "2962960"
  },
  {
    "text": "really have to worry about it and that's so not true if you do that you're gonna have design issues from day one so",
    "start": "2962960",
    "end": "2968450"
  },
  {
    "text": "always start with your users in mind so both G RPC and rest start with an",
    "start": "2968450",
    "end": "2973910"
  },
  {
    "text": "outside-in approach the server defines the shape of the operations or the queries and then you start building the",
    "start": "2973910",
    "end": "2979730"
  },
  {
    "text": "mouth graph QL allows you to take a slightly different approach to this so",
    "start": "2979730",
    "end": "2985580"
  },
  {
    "text": "if you were bill you weren't quite sure about the interaction patterns of your clients you",
    "start": "2985580",
    "end": "2991950"
  },
  {
    "text": "could actually get a little bit of a benefit with graph gol at this because graph QL delays the responsible moment",
    "start": "2991950",
    "end": "2998640"
  },
  {
    "text": "of identifying your query needs to actually profiling those queries so with",
    "start": "2998640",
    "end": "3004609"
  },
  {
    "text": "graph to you well I don't actually define individual endpoints or operations to call rather I define a",
    "start": "3004609",
    "end": "3009890"
  },
  {
    "text": "graph of data and each query then maps to a subsection or tree of that graph so",
    "start": "3009890",
    "end": "3016130"
  },
  {
    "text": "we're not optimizing for an individual use case but the risk you pay for not putting that approach is again having a",
    "start": "3016130",
    "end": "3022279"
  },
  {
    "text": "higher cost or complexity about profiling those queries later but again it's a good tactic to deal with",
    "start": "3022279",
    "end": "3028099"
  },
  {
    "text": "uncertainty or if you've got to have multiple consumers each with very different needs so API design is",
    "start": "3028099",
    "end": "3034730"
  },
  {
    "text": "absolutely table stakes irrespective of the style both rest and G are PCP follow",
    "start": "3034730",
    "end": "3041180"
  },
  {
    "text": "it outside an approach where you have to defy the operations of the interface graph QL is different and lesson can let",
    "start": "3041180",
    "end": "3047450"
  },
  {
    "text": "you deal with uncertainty in a slightly different way and it really allows you to then see how users are actually",
    "start": "3047450",
    "end": "3053720"
  },
  {
    "text": "executing against the graph at runtime but again there's a hair at risk in there too so if that's all the myths",
    "start": "3053720",
    "end": "3060200"
  },
  {
    "text": "that we looked at let's now take a quick look in the eight or so minutes that we have left across some sample scenarios",
    "start": "3060200",
    "end": "3066829"
  },
  {
    "text": "and given what we've seen about architectural decisions and a few of the blanket statements that we've got made",
    "start": "3066829",
    "end": "3073220"
  },
  {
    "text": "let's see if we can land on appropriate technologies just think it's so you're thinking in terms of some of the use cases when you go back to your offices",
    "start": "3073220",
    "end": "3079670"
  },
  {
    "text": "next week okay so first up we might have the absolute simplest thing we could do",
    "start": "3079670",
    "end": "3085940"
  },
  {
    "text": "just at the application webform so it might be for applied to buy a ticket or something like that or buy a ticket for",
    "start": "3085940",
    "end": "3091880"
  },
  {
    "text": "an event I don't see personally why you would use anything other than rest for",
    "start": "3091880",
    "end": "3097369"
  },
  {
    "text": "this I see many teams building restful building graph QL api's from very simple",
    "start": "3097369",
    "end": "3103130"
  },
  {
    "text": "things like this but here all we're doing is taking a certain amount of data it's a right operation and they're",
    "start": "3103130",
    "end": "3108619"
  },
  {
    "text": "sending it back to the client unless you have wildly varying data querying",
    "start": "3108619",
    "end": "3114200"
  },
  {
    "text": "requirements I think there's simpler options forward as well and in fact again I thought I think we'll see",
    "start": "3114200",
    "end": "3120200"
  },
  {
    "text": "this is the year that a lot of malcontents will start growing with graph gol API is where we've built them",
    "start": "3120200",
    "end": "3125450"
  },
  {
    "text": "maybe not for the appropriate use cases that were being burned by trying to cheat or operate them or the overhead of",
    "start": "3125450",
    "end": "3130940"
  },
  {
    "text": "the inherent complexity of them so really understand about what's the simplest API approach that you could",
    "start": "3130940",
    "end": "3136940"
  },
  {
    "text": "have here problem at hand another case that comes up quite a bit particularly",
    "start": "3136940",
    "end": "3142280"
  },
  {
    "text": "what being worth of a client's who have built highly granular services sometimes called micro services and then looking",
    "start": "3142280",
    "end": "3148670"
  },
  {
    "text": "at how do you actually take that impedance mismatch a very granular set of api's here that versus what a client",
    "start": "3148670",
    "end": "3154850"
  },
  {
    "text": "needs an SBA and this is typically where we were put in and a aggregate API or",
    "start": "3154850",
    "end": "3161570"
  },
  {
    "text": "maybe a back-end for front-end where we can aggregate a lot of the calls and then send it back to the client and in",
    "start": "3161570",
    "end": "3167570"
  },
  {
    "text": "fact this is a place where graph QL absolutely shines because it allows you to connect data from many different data",
    "start": "3167570",
    "end": "3175670"
  },
  {
    "text": "sources so it could be a relational database could be a graph could be a file graph URL is absolutely agnostic of",
    "start": "3175670",
    "end": "3182450"
  },
  {
    "text": "the data source and that allows each one of the clients to then query the data that it needs and it gets optimized over",
    "start": "3182450",
    "end": "3188750"
  },
  {
    "text": "the wire so in many cases we see putting in graph QR as a layer over the existing",
    "start": "3188750",
    "end": "3193850"
  },
  {
    "text": "set of services to optimize the delivery to different digital channels as being a",
    "start": "3193850",
    "end": "3199100"
  },
  {
    "text": "very sweet spot for graph QL and typically graph QL can be brought in after teams have felt pain with an",
    "start": "3199100",
    "end": "3205580"
  },
  {
    "text": "endpoint driven approach where maybe we didn't profile or define those endpoints appropriately so we're having a lot of",
    "start": "3205580",
    "end": "3211850"
  },
  {
    "text": "over/under fetching happening with those clients and that's actually a pattern that we follow did quite a number of our",
    "start": "3211850",
    "end": "3217490"
  },
  {
    "text": "consulting engagements as well and that also allows you to then create an abstraction point where you can start",
    "start": "3217490",
    "end": "3222980"
  },
  {
    "text": "refactoring some of these implementations I get without affecting the client so we go decoupling change so",
    "start": "3222980",
    "end": "3230390"
  },
  {
    "text": "if that was web what about mobile so if we want to have a BFF so again a back-end for front-end and in this",
    "start": "3230390",
    "end": "3236540"
  },
  {
    "text": "architecture the API is actually owned by the client team and this is something I've been playing with quite a bit",
    "start": "3236540",
    "end": "3242180"
  },
  {
    "text": "myself and I'm actually thinking that G RPC is actually a wonderful fit for this",
    "start": "3242180",
    "end": "3247550"
  },
  {
    "text": "particularly in the native space which I'll explain it a little bit because what this guy lets you do is get one",
    "start": "3247550",
    "end": "3252830"
  },
  {
    "text": "protocol end-to-end in your stack so you can have one place where you share all of your",
    "start": "3252830",
    "end": "3259510"
  },
  {
    "text": "proto files and then be able to do all of the code generation off all those files themselves and the beauty with a",
    "start": "3259510",
    "end": "3266650"
  },
  {
    "text": "native mobile app as well as they can you can use HTTP to end to end whereas",
    "start": "3266650",
    "end": "3274060"
  },
  {
    "text": "there's an issue with G RPC and that's in the browser space where the browser's don't expose an API to the sufficient",
    "start": "3274060",
    "end": "3281260"
  },
  {
    "text": "level of granularity to ensure that you use HTTP 2 so we can't actually use pure",
    "start": "3281260",
    "end": "3286930"
  },
  {
    "text": "G RPC in a browser or if you're in a web component or a blazer app as well so",
    "start": "3286930",
    "end": "3293440"
  },
  {
    "text": "there's a couple of techniques we could do but particularly in the native space G RPC is are really those fit so for",
    "start": "3293440",
    "end": "3300810"
  },
  {
    "text": "micro services so again I'm not going to say in this particular case any event-based micro services so if you're",
    "start": "3300810",
    "end": "3306369"
  },
  {
    "text": "looking for synchronous coupling so again more orchestration style then again I see a huge amount of value in G",
    "start": "3306369",
    "end": "3313750"
  },
  {
    "text": "RPC and the co jet particularly if you haven't standardized your runtimes so if you're looking at having maybe some of",
    "start": "3313750",
    "end": "3320140"
  },
  {
    "text": "your API was written to java summin summin c share some in c++ any other",
    "start": "3320140",
    "end": "3325150"
  },
  {
    "text": "language having approached having a protocol file a pro tip off the fighter there'd be able to co-chaired the client",
    "start": "3325150",
    "end": "3330609"
  },
  {
    "text": "to the server side and keep them in sync that way is a very powerful pattern but",
    "start": "3330609",
    "end": "3338560"
  },
  {
    "text": "what can we do then about G RPC in a web app and there's actually a companion",
    "start": "3338560",
    "end": "3344260"
  },
  {
    "text": "protocol to GRP see it's called G RPC web and it is actually quite different",
    "start": "3344260",
    "end": "3349900"
  },
  {
    "text": "because the purpose of G RPC web is to enable you to create compatible G RPC",
    "start": "3349900",
    "end": "3356080"
  },
  {
    "text": "traffic's over HTTP 1x so that's really the goal so for environments where you",
    "start": "3356080",
    "end": "3361869"
  },
  {
    "text": "can't guarantee HTTP 2 then you can use G RPC web so what does this look like so",
    "start": "3361869",
    "end": "3368830"
  },
  {
    "text": "typically you would have a browser or in fact it could be a service side like",
    "start": "3368830",
    "end": "3373920"
  },
  {
    "text": "like an app service in a zoo because that doesn't let you support HTTP - yes either so you can actually think of it",
    "start": "3373920",
    "end": "3379450"
  },
  {
    "text": "as an outbound call from an app service as well and then you could start with the RPC traffic do your a geo PC web",
    "start": "3379450",
    "end": "3387040"
  },
  {
    "text": "traffic go - 1 . XO then typically you would wrote that through a proxy so it could be",
    "start": "3387040",
    "end": "3392440"
  },
  {
    "text": "Envoy which is the data plane side care in sto and that will then convert the",
    "start": "3392440",
    "end": "3398920"
  },
  {
    "text": "HTTP 1 dot x gr PC web traffic to true G RPC traffic but you are looking at",
    "start": "3398920",
    "end": "3405300"
  },
  {
    "text": "introducing a separate G RPC proxy so",
    "start": "3405300",
    "end": "3410830"
  },
  {
    "text": "two days ago James Luton King released quite an exciting post saying that in dotnet they've actually supported",
    "start": "3410830",
    "end": "3417910"
  },
  {
    "text": "actually no created an experimental package that allows you to issue G RPC",
    "start": "3417910",
    "end": "3423100"
  },
  {
    "text": "web requests directly and have them host and have them served by a server without",
    "start": "3423100",
    "end": "3429970"
  },
  {
    "text": "an intermediary proxy so that means that you could have at SBA or you could have",
    "start": "3429970",
    "end": "3436540"
  },
  {
    "text": "a blazer web component app make a call to an azure app service over G RPC",
    "start": "3436540",
    "end": "3443260"
  },
  {
    "text": "compliant traffic or b8g RPC web traffic and what this lets us do is get the",
    "start": "3443260",
    "end": "3448810"
  },
  {
    "text": "common protocol buff driven workflow and then when the work to complete G RPC",
    "start": "3448810",
    "end": "3456130"
  },
  {
    "text": "supports for app services become available it could be transparent to change so it allows you to adopt some of",
    "start": "3456130",
    "end": "3462370"
  },
  {
    "text": "these techniques now this is absolutely still an experiment but I'm quite excited about the separate piece of",
    "start": "3462370",
    "end": "3468550"
  },
  {
    "text": "infrastructure being removed there is a got Schuette RPC web though is that you lose a couple of the interaction types",
    "start": "3468550",
    "end": "3475210"
  },
  {
    "text": "so bi-directional streaming and client streaming and no longer options you can",
    "start": "3475210",
    "end": "3480220"
  },
  {
    "text": "still do you two recalls or you can still do service streaming but you don't get the bit of options ok so what have",
    "start": "3480220",
    "end": "3489430"
  },
  {
    "text": "we covered in today's talk so we started by looking at API technologies over time",
    "start": "3489430",
    "end": "3496600"
  },
  {
    "text": "and we actually saw there's a huge amount of similarities between them where a lot of it is remote data access",
    "start": "3496600",
    "end": "3503110"
  },
  {
    "text": "and then some form of RPC on the right so they're actually a lot of the arguments are a lot of the discussions",
    "start": "3503110",
    "end": "3508690"
  },
  {
    "text": "that are happening in the industry are actually about what's different not what's the same from there we dug into a norm of the",
    "start": "3508690",
    "end": "3515380"
  },
  {
    "text": "conversations that are happening in the industry and we peeled back a little bit more data so that if you're looking",
    "start": "3515380",
    "end": "3520640"
  },
  {
    "text": "to choose one of these technologies that you can get past that first it will never work because and be able to have",
    "start": "3520640",
    "end": "3526400"
  },
  {
    "text": "better conversations around this finally we took a very brief view at some of the",
    "start": "3526400",
    "end": "3531980"
  },
  {
    "text": "major use cases that I could see in my experience where I used what are these technologies or not but please I really",
    "start": "3531980",
    "end": "3538279"
  },
  {
    "text": "see a successful talk as being a sales pitch for your future time so if I've encouraged you to look into one of these",
    "start": "3538279",
    "end": "3544579"
  },
  {
    "text": "technologies or learn a little bit more or have an effective conversation with your teammates that that would absolutely be a wonderful outcome for me",
    "start": "3544579",
    "end": "3550880"
  },
  {
    "text": "so thank you so much for your time I do",
    "start": "3550880",
    "end": "3559760"
  },
  {
    "text": "realize there was a a lot of competition as for all slots so I really appreciate your attendance thank you",
    "start": "3559760",
    "end": "3566619"
  }
]