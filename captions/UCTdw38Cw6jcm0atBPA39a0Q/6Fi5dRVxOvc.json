[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "good morning everybody how are we good good it's good to see some",
    "start": "6799",
    "end": "12679"
  },
  {
    "text": "familiar faces out there my name is Scott Allen and this is an opinionated approach to asp.net core what I did to",
    "start": "12679",
    "end": "18960"
  },
  {
    "text": "prepare for this presentation is go back and look at some of the projects that I've been working on for the last year",
    "start": "18960",
    "end": "24080"
  },
  {
    "text": "year and a half and just take notes on what I liked and what I didn't like that we did or I did and I came up with a",
    "start": "24080",
    "end": "30679"
  },
  {
    "start": "28000",
    "end": "491000"
  },
  {
    "text": "list of 56 items which I thought was a little bit too aggressive for a 1-hour session so I cut it back to a list of 50",
    "start": "30679",
    "end": "37879"
  },
  {
    "text": "items which means we'll be moving along pretty good and so some things I'll cover pretty quickly but if you have any",
    "start": "37879",
    "end": "43680"
  },
  {
    "text": "questions you can always email me and I went through that list then once I got it down to 50 items and I broke it into",
    "start": "43680",
    "end": "50480"
  },
  {
    "text": "some different categories like how do I want to organize Solutions and projects what techniques did I like what didn't I",
    "start": "50480",
    "end": "56600"
  },
  {
    "text": "like how to organize startup code and write the code that goes inside of startup.cs to configure your application",
    "start": "56600",
    "end": "64720"
  },
  {
    "text": "some tips about and opinions about controllers about writing client code because we're all using JavaScript code",
    "start": "64720",
    "end": "70680"
  },
  {
    "text": "now on the client about writing C code with asp.net core views and writing unit",
    "start": "70680",
    "end": "77720"
  },
  {
    "text": "tests so we'll just get started with some of the boring things like Solutions and projects so we can build up a cendo",
    "start": "77720",
    "end": "84560"
  },
  {
    "text": "and have a very exciting finish yes Solutions and projects how do you",
    "start": "84560",
    "end": "90400"
  },
  {
    "text": "organize them with net core I rather like the the approach that Microsoft has taken if you look in any of their GitHub",
    "start": "90400",
    "end": "96439"
  },
  {
    "text": "repositories for any of their projects you'll see things like a solution file that is right in the root of the directory so it makes it nice and easy",
    "start": "96439",
    "end": "103720"
  },
  {
    "text": "to be able to find that solution when you clone the repository and just go into the folder",
    "start": "103720",
    "end": "109040"
  },
  {
    "text": "and double click that and there's always a top level Source folder that can contain one or more projects and a top",
    "start": "109040",
    "end": "115640"
  },
  {
    "text": "level test folder to contain one or more unit tests and if you really look around a lot of the open source projects that",
    "start": "115640",
    "end": "121560"
  },
  {
    "text": "deal with thought net core they follow the same sort of pattern so I want to use that same sort of pattern even for",
    "start": "121560",
    "end": "126719"
  },
  {
    "text": "business applications that are not open source it just makes sense to people that are accustomed to this environment now and",
    "start": "126719",
    "end": "133480"
  },
  {
    "text": "then I'll throw in a few additional folders so I might throw in a folder for documentation for example and the one",
    "start": "133480",
    "end": "139280"
  },
  {
    "text": "thing to be careful about here you've probably experienced this is if you go into a solution like in the window here",
    "start": "139280",
    "end": "145760"
  },
  {
    "text": "and right click on a solution and say add a new solution folder the solution Explorer in Visual Studio doesn't",
    "start": "145760",
    "end": "152400"
  },
  {
    "text": "Faithfully represent the physical location of those files on the file system that folder that I create all",
    "start": "152400",
    "end": "159120"
  },
  {
    "text": "these folders that I create are just logical containers and if I add a file to it it just goes into the root of the",
    "start": "159120",
    "end": "164560"
  },
  {
    "text": "project or somewhere so you just have to be careful to rightclick and add these folders and then go out to the hard drive and do a make directory to create",
    "start": "164560",
    "end": "171840"
  },
  {
    "text": "that physical folder and then add items from that folder some of the other things that I",
    "start": "171840",
    "end": "177599"
  },
  {
    "text": "like to check in if it's an open source project for example or if it's a library and I want to demonstrate how to use",
    "start": "177599",
    "end": "182920"
  },
  {
    "text": "this Library include a samples folder Microsoft does this quite often in fact",
    "start": "182920",
    "end": "188519"
  },
  {
    "text": "one of the best ways to learn about some of the features of the middleware and the various components that go into",
    "start": "188519",
    "end": "194040"
  },
  {
    "text": "asp.net core is actually go to the GitHub repository and look at their unit tests and look inside of their samples",
    "start": "194040",
    "end": "200680"
  },
  {
    "text": "folder for example the aspnet security samples contain how to use things like",
    "start": "200680",
    "end": "208360"
  },
  {
    "text": "um cookie Authentication middleware at a low level and those are interesting to read because sometimes they're better",
    "start": "208360",
    "end": "214000"
  },
  {
    "text": "than the documentation and they give you code that you can just start playing with some other things that I always",
    "start": "214000",
    "end": "219720"
  },
  {
    "text": "want to check in are some scripts development scripts to help developers",
    "start": "219720",
    "end": "225239"
  },
  {
    "text": "work from the command line so if you're using something like Entity framework core and you have to run migrations then",
    "start": "225239",
    "end": "231000"
  },
  {
    "text": "you might want to do that from the command line which means you run um net",
    "start": "231000",
    "end": "236120"
  },
  {
    "text": "uh EF migrations ad and all that stuff what I will do is create a scripts folder and check some scripts in so that",
    "start": "236120",
    "end": "243079"
  },
  {
    "text": "developers just need to go to the command line and type add migration and the name of the migration and behind the",
    "start": "243079",
    "end": "248319"
  },
  {
    "text": "scenes it takes care of all the parameters that have to go to that net executable and you can write this in",
    "start": "248319",
    "end": "255439"
  },
  {
    "text": "Powershell you can write this in bash you can write command files whatever your environment that you're developing in whatever works and whatever your team",
    "start": "255439",
    "end": "261600"
  },
  {
    "text": "is happy with and an example of like ad migration",
    "start": "261600",
    "end": "266880"
  },
  {
    "text": "would be I just type ad migration Fu and it'll go out and do the net EF",
    "start": "266880",
    "end": "272720"
  },
  {
    "text": "migrations ad it'll do the net netf database update and then I'm just ready to go with this",
    "start": "272720",
    "end": "278800"
  },
  {
    "text": "thing I'll also check in deployment scripts so if you're using Azure one",
    "start": "278800",
    "end": "284240"
  },
  {
    "text": "approach might be to download the Azure resource manager template and a Powers shelf script that Azure can produce when",
    "start": "284240",
    "end": "290240"
  },
  {
    "text": "you just right click on a resource Group and say I want to or go to the automation script for a resource Group",
    "start": "290240",
    "end": "295720"
  },
  {
    "text": "and say just give me a script to automate the deployment of all of this I will take those templates and that Powershell file and check it into a",
    "start": "295720",
    "end": "302039"
  },
  {
    "text": "deployment folder inside a visual studio and that I can use inside of a build process or my deployment process and",
    "start": "302039",
    "end": "308440"
  },
  {
    "text": "developers can use it locally when they need to set up an environment in Azure to be able to work with the",
    "start": "308440",
    "end": "313960"
  },
  {
    "text": "project and you might also consider a tool like terraform which is very good at automating infrastructure across",
    "start": "313960",
    "end": "320400"
  },
  {
    "text": "multiple platforms so it supports Azure and it supports AWS and it supports a number of other",
    "start": "320400",
    "end": "327080"
  },
  {
    "text": "environments builds I also believe should be checked into Source control so if you go out and you use a a build",
    "start": "327240",
    "end": "334160"
  },
  {
    "text": "system in the cloud something like app fa or something like Visual Studio team services in the cloud there's a way to",
    "start": "334160",
    "end": "340880"
  },
  {
    "text": "graphically Define your build environment where you go into a UI and you select a couple checkboxes and you say here's my solution to build and it",
    "start": "340880",
    "end": "347039"
  },
  {
    "text": "just does a bunch of magic behind the scenes but as far as appveyor goes",
    "start": "347039",
    "end": "352080"
  },
  {
    "text": "anyone use appveyor it's a nice system you can go into app and you say okay",
    "start": "352080",
    "end": "357720"
  },
  {
    "text": "I've set up my configuration Now give me a yaml file that describes the configuration that I just entered and I",
    "start": "357720",
    "end": "363440"
  },
  {
    "text": "can download that file and check it under Source control and now all of my build configuration even though I can't",
    "start": "363440",
    "end": "368720"
  },
  {
    "text": "build quite like uh appveyor locally my build configuration is is is at least",
    "start": "368720",
    "end": "374080"
  },
  {
    "text": "under Source control and it's version controlled and I can see what has been changing and what I'll typically do is",
    "start": "374080",
    "end": "379880"
  },
  {
    "text": "just come up with a Powershell script to do the build net build so far have been reasonably simple you know you can just",
    "start": "379880",
    "end": "386120"
  },
  {
    "text": "do net restore net build net uh run my tests. net Pac and then developers can",
    "start": "386120",
    "end": "393319"
  },
  {
    "text": "also use that script locally if they want to build if we need to debug something that went wrong in app there",
    "start": "393319",
    "end": "399560"
  },
  {
    "text": "anyone using visual studio team Services formerly Visual Studio online some",
    "start": "399560",
    "end": "405800"
  },
  {
    "text": "quirky name like that they have that nice graphical build environment where you can just say I want to add another build step and and drop in something",
    "start": "405800",
    "end": "412560"
  },
  {
    "text": "that says build my solution star. sln and I think that's very good",
    "start": "412560",
    "end": "418520"
  },
  {
    "text": "but I I would like again a script that I can check into Source control for that build and I would I would like something",
    "start": "418520",
    "end": "424879"
  },
  {
    "text": "where developers locally can use that same script to build on their machine and that way I know that when that",
    "start": "424879",
    "end": "430680"
  },
  {
    "text": "script is checked into VSS onl that it has a reasonably good chance of working",
    "start": "430680",
    "end": "435720"
  },
  {
    "text": "there and you can do that by going into the task catalog there's various tasks in there just to run a Powershell script",
    "start": "435720",
    "end": "442120"
  },
  {
    "text": "or a command script and there's even plugins for cake and if you use",
    "start": "442120",
    "end": "447240"
  },
  {
    "text": "those types of build tools and just script everything everything and kind of avoid this graphical environment for anything but maybe the simplest",
    "start": "447240",
    "end": "455280"
  },
  {
    "text": "projects is this the kind of information you were expecting by the way and I see some people wondering",
    "start": "455280",
    "end": "462919"
  },
  {
    "text": "about it I do believe that um creating too",
    "start": "462919",
    "end": "470919"
  },
  {
    "text": "many projects is a problem sometimes with net Solutions I like to start with just a core set of projects maybe one",
    "start": "470919",
    "end": "477000"
  },
  {
    "text": "for the web application one for my core logic um one for unit tests and then just see where it goes from there too",
    "start": "477000",
    "end": "483800"
  },
  {
    "text": "many projects have a tendency to make Visual Studio unhappy and once you get over a gigabyte of memory it starts to",
    "start": "483800",
    "end": "489520"
  },
  {
    "text": "slow everything down let's talk about startup code for a",
    "start": "489520",
    "end": "495639"
  },
  {
    "start": "491000",
    "end": "878000"
  },
  {
    "text": "minute when I look at a startup.cs file in an asp.net core project I think that it has three responsibilities the three",
    "start": "495720",
    "end": "502319"
  },
  {
    "text": "responsibilities are typically configure the configuration system in other words tell me if I'm using App settings. Json",
    "start": "502319",
    "end": "508560"
  },
  {
    "text": "and environment variable and all of that and then there's configuring the container which is that configure",
    "start": "508560",
    "end": "513640"
  },
  {
    "text": "Services method and then there's the configure method which is building your HTTP processing pipeline it's putting",
    "start": "513640",
    "end": "519000"
  },
  {
    "text": "all the middleware in place so that your application can process HTTP requests",
    "start": "519000",
    "end": "524120"
  },
  {
    "text": "and I've seen a few startup.cs files in non-trivial projects start to grow a little bit out of control so I came up",
    "start": "524120",
    "end": "530560"
  },
  {
    "text": "with some opinions about that first of all a lot of the examples that you look at for asp.net core for some reason they",
    "start": "530560",
    "end": "537000"
  },
  {
    "text": "will do this logging configuration that you see here at at the bottom they'll do that inside of configure right before",
    "start": "537000",
    "end": "543839"
  },
  {
    "text": "all of the middleware is configured and to me that always makes no sense the startup method uh the configure method",
    "start": "543839",
    "end": "549519"
  },
  {
    "text": "is for middleware so I usually move all of my login configuration into the",
    "start": "549519",
    "end": "555480"
  },
  {
    "text": "Constructor for the startup class so we'll set up our configuration and put in the different Json files that we need",
    "start": "555480",
    "end": "561000"
  },
  {
    "text": "and then just configure the logger right away and it's ready to go throughout the rest of the startup",
    "start": "561000",
    "end": "566320"
  },
  {
    "text": "file the other thing I believe is to keep it clean so inside of configure Services when you're configuring the",
    "start": "566320",
    "end": "572240"
  },
  {
    "text": "container for asp.net core some of the services that you add are quite complicated and they come with a lot of",
    "start": "572240",
    "end": "577720"
  },
  {
    "text": "options so for example this first line here add customized MVC that replace 20 or 30 lines of",
    "start": "577720",
    "end": "584800"
  },
  {
    "text": "configuration that used to be inside of here that would do things like provide a custom configuration for the razor view",
    "start": "584800",
    "end": "590680"
  },
  {
    "text": "to make it look for folders in a specific file there's all these configuration options for NBC what I",
    "start": "590680",
    "end": "596760"
  },
  {
    "text": "would prefer to do is to go into the startup.cs file and just see a highle overview of what this application is",
    "start": "596760",
    "end": "602240"
  },
  {
    "text": "using so I'm using MBC I have some security features I have mediator I have",
    "start": "602240",
    "end": "607760"
  },
  {
    "text": "some data stores and then each of those methods is just an extension method defined in another file to move all of",
    "start": "607760",
    "end": "614480"
  },
  {
    "text": "this code outside of the startup file so",
    "start": "614480",
    "end": "619600"
  },
  {
    "text": "add customized MC is just an extension method for I service collection and it all just works that",
    "start": "619600",
    "end": "627440"
  },
  {
    "text": "way the one exception to this rule is in middleware well so I do believe when you're configuring middleware inside of",
    "start": "627640",
    "end": "633040"
  },
  {
    "text": "the configure method again I want to be able to glance at it and see a highle overview of the modules that are installed if you have to do any special",
    "start": "633040",
    "end": "640800"
  },
  {
    "text": "configuration for that middleware pass in options objects and things like that I would rather make an extension method",
    "start": "640800",
    "end": "645959"
  },
  {
    "text": "to do that but I do allow uh the configure method to Branch so I want it",
    "start": "645959",
    "end": "651399"
  },
  {
    "text": "to be apparent that if we're in development we're using these three pieces of middleware but when we're in",
    "start": "651399",
    "end": "656560"
  },
  {
    "text": "production we're using this different piece of middleware that will behave a little bit differently and I think that's",
    "start": "656560",
    "end": "663279"
  },
  {
    "text": "fine another thing that I've had some success with is making use of my net web application",
    "start": "663440",
    "end": "670839"
  },
  {
    "text": "as an executable because in net core I can run my web application from the",
    "start": "670839",
    "end": "675959"
  },
  {
    "text": "command prompt and",
    "start": "675959",
    "end": "679519"
  },
  {
    "text": "obenschain so there's some things that you might want to do particularly in",
    "start": "683200",
    "end": "688240"
  },
  {
    "text": "development that your web application can do other than just responding to http requests and an example of that",
    "start": "688240",
    "end": "696399"
  },
  {
    "text": "would be perhaps autom migrating a database using some migration scripts or seeding a database if I'm in development",
    "start": "696399",
    "end": "703680"
  },
  {
    "text": "and I just created a database and it has no data in it and again if you go out and look at several solutions to this",
    "start": "703680",
    "end": "709279"
  },
  {
    "text": "that are out there on the internet a lot of people will do those sorts of do that",
    "start": "709279",
    "end": "714680"
  },
  {
    "text": "sort of work inside of a startup class which kind of makes sense because that's where the application starts or it",
    "start": "714680",
    "end": "721160"
  },
  {
    "text": "sounds like where the application starts but really the application starts in static void meain and if I can do work",
    "start": "721160",
    "end": "727360"
  },
  {
    "text": "like that inside of process DB commands before the application actually starts booting up and listening to web request",
    "start": "727360",
    "end": "733800"
  },
  {
    "text": "I would prefer it to happen here and I have an example of what process DB commands could look",
    "start": "733800",
    "end": "739800"
  },
  {
    "text": "like which is this and I just want to call your attention to the Top Line of",
    "start": "739800",
    "end": "747560"
  },
  {
    "text": "code if you can see it can you see it in the back",
    "start": "748160",
    "end": "753600"
  },
  {
    "text": "oh yes so what this code wants to do is",
    "start": "753600",
    "end": "759600"
  },
  {
    "text": "before we even get into the startup class I want to be able to do things like uh drop a database and recreate it",
    "start": "759600",
    "end": "767279"
  },
  {
    "text": "and do the migrations in order to do that I am going to need to get a",
    "start": "767279",
    "end": "772680"
  },
  {
    "text": "reference to a server scope Factory so that I can use that to get a reference to the repository the framework DB",
    "start": "772680",
    "end": "779959"
  },
  {
    "text": "context whatever you're using for data access and it's very important to actually use this I service scope Factory an instance of that if you're",
    "start": "779959",
    "end": "787160"
  },
  {
    "text": "doing any side of any kind of work outside of an HTTP request because if you have a dependency registered in the",
    "start": "787160",
    "end": "794680"
  },
  {
    "text": "container that is not supposed to be a Singleton so it's a transient dependency or it's a Well scope to an HTTP request",
    "start": "794680",
    "end": "802160"
  },
  {
    "text": "let's say or created per instance if you get one of those things",
    "start": "802160",
    "end": "807680"
  },
  {
    "text": "outside the scope of an HB request you can end up with a Singleton for the lifetime of the application and this I",
    "start": "807680",
    "end": "813360"
  },
  {
    "text": "server scope this bit of code right here that gets an i server scope Factory will help you avoid that situation we'll create a new scope um we'll go out and",
    "start": "813360",
    "end": "821360"
  },
  {
    "text": "get the dependencies that we need and then we'll do things like drop the database migrate the database see the",
    "start": "821360",
    "end": "826480"
  },
  {
    "text": "database with data making any sense",
    "start": "826480",
    "end": "832839"
  },
  {
    "text": "okay and to facilitate that I would probably check in a script to the",
    "start": "832839",
    "end": "838079"
  },
  {
    "text": "scripts folder so developer when I'm at the command prompt I can just type recreate DB and it will go out and",
    "start": "838079",
    "end": "845279"
  },
  {
    "text": "netrun my application and just pass along the parameters so it'll drop the database migrate it seed it and then I",
    "start": "845279",
    "end": "851040"
  },
  {
    "text": "actually want to stop I don't want it to launch the server when I do those",
    "start": "851040",
    "end": "855680"
  },
  {
    "text": "commands the oh for parsing arguments oh yeah you",
    "start": "861360",
    "end": "867480"
  },
  {
    "text": "could do that if it got complicated I was trying to do the simplest possible thing that would work until it got too complicated yeah so the question was",
    "start": "867480",
    "end": "873759"
  },
  {
    "text": "would I use any of the libraries for parsing command line arguments and things like that and this could be very helpful",
    "start": "873759",
    "end": "880199"
  },
  {
    "start": "878000",
    "end": "1042000"
  },
  {
    "text": "yes logger recommendations I really like Ser log how many people have used",
    "start": "880199",
    "end": "885759"
  },
  {
    "text": "that a few so it plugs right into asp.net core U there's a new get package",
    "start": "885759",
    "end": "891920"
  },
  {
    "text": "you just download and you write some code uh to configure calog in fact the startup code we looked at earlier was",
    "start": "891920",
    "end": "897720"
  },
  {
    "text": "configuring calog and there's two nice things about it first of all it's structured events so there's a special",
    "start": "897720",
    "end": "904720"
  },
  {
    "text": "syntax here in COG that allows you to given some object like position I",
    "start": "904720",
    "end": "910360"
  },
  {
    "text": "actually want to serialize that entire object into my log and seral log will take care of that that's one nice",
    "start": "910360",
    "end": "916360"
  },
  {
    "text": "feature the other nice feature with s log is it has so many uh syncs that it can go to you can write to a SQL Server",
    "start": "916360",
    "end": "923040"
  },
  {
    "text": "database you can write to a rolling file you can write to Azure table storage there's a list of 20 30 or 40 uh",
    "start": "923040",
    "end": "930959"
  },
  {
    "text": "additional new get packages you can install just to have seral all right information somewhere that you want aaet",
    "start": "930959",
    "end": "937279"
  },
  {
    "text": "actors all sorts of things it's really fantastic and you can control all of that well here we go through Json",
    "start": "937279",
    "end": "945519"
  },
  {
    "text": "configuration or through configuration and code so this would just be a way of telling sir log I went to WR to a",
    "start": "945519",
    "end": "950839"
  },
  {
    "text": "rolling file that's going to be the format of the file so it'll be log Dash and a dat.",
    "start": "950839",
    "end": "956839"
  },
  {
    "text": "Json and after that everything those log will go into that file for the",
    "start": "956839",
    "end": "962800"
  },
  {
    "text": "day so asp.net core comes with a container where you can register Services you can register them as",
    "start": "964000",
    "end": "970199"
  },
  {
    "text": "Singleton you can register them as transient and it's really pretty good for a lot of applications it's everything you need but you could",
    "start": "970199",
    "end": "977199"
  },
  {
    "text": "consider using a more fully featured container something like a structure map or a ninj something like that because",
    "start": "977199",
    "end": "982639"
  },
  {
    "text": "there are uh some scenarios that are quite nice that a container some",
    "start": "982639",
    "end": "987959"
  },
  {
    "text": "features a a fully featured container can provide that are quite nice things like autodiscovery and decorators",
    "start": "987959",
    "end": "994160"
  },
  {
    "text": "decorators are a big one so a structure with asp.net core there's no way for me to say given this interface I greeter uh",
    "start": "994160",
    "end": "1003160"
  },
  {
    "text": "when you construct an instance of that I also went to decorate it with this other class like the caching greeter um with",
    "start": "1003160",
    "end": "1009120"
  },
  {
    "text": "structure map you can do things like that and set up interception and also have Diagnostics structure map provides",
    "start": "1009120",
    "end": "1014160"
  },
  {
    "text": "a nice Diagnostics where you can basically ask it uh how are you configured and what will happen if I asked for this how are you going to",
    "start": "1014160",
    "end": "1020240"
  },
  {
    "text": "resolve this service for me and structure Maps fairly easy to",
    "start": "1020240",
    "end": "1025600"
  },
  {
    "text": "plug in that's actually an example of decoration anytime you resolve an eye",
    "start": "1025600",
    "end": "1031438"
  },
  {
    "text": "widget decorate it with a widget holder and we will use a widget but at",
    "start": "1031439",
    "end": "1037520"
  },
  {
    "text": "runtime it'll be decorated with this holder going quickly so project",
    "start": "1037520",
    "end": "1044520"
  },
  {
    "start": "1042000",
    "end": "1227000"
  },
  {
    "text": "structure once you get inside of a specific project what are some things to look for",
    "start": "1044520",
    "end": "1049640"
  },
  {
    "text": "a few years ago Jimmy Bogard did a presentation at NDC I think it was at NDC Oslo though about asp.net",
    "start": "1049640",
    "end": "1056760"
  },
  {
    "text": "applications implemented with vertical feature slices anyone ever see that",
    "start": "1056760",
    "end": "1062200"
  },
  {
    "text": "one it's a good presentation to watch uh and feature folders in general anyone he",
    "start": "1062200",
    "end": "1067320"
  },
  {
    "text": "feature folders this is something I started using after I saw Jimmy's presentation",
    "start": "1067320",
    "end": "1074120"
  },
  {
    "text": "and heard him talk about it a bit I have a hard time now walking up to an asp.net NVC application and seeing top level",
    "start": "1074120",
    "end": "1079720"
  },
  {
    "text": "folders of controllers views and models it irritates me it's uh what Uncle Bob might call the",
    "start": "1079720",
    "end": "1086840"
  },
  {
    "text": "the screaming architecture like the layout of the project of screaming that this is an NVC application I would much",
    "start": "1086840",
    "end": "1092960"
  },
  {
    "text": "rather organize the application around the features that it's going to implement so if I'm building an accounting system I might have a I want",
    "start": "1092960",
    "end": "1099520"
  },
  {
    "text": "to have a features folder that would provide me um account management Administration and actually",
    "start": "1099520",
    "end": "1106280"
  },
  {
    "text": "this is for golfers apparently maybe my API that some JavaScript uses some",
    "start": "1106280",
    "end": "1112640"
  },
  {
    "text": "shared stuff but I like this for a few reasons one is it really allows me to think about partitioning my application",
    "start": "1112640",
    "end": "1119400"
  },
  {
    "text": "by feature instead of artificially putting views in one folder and controllers in another folder it's very",
    "start": "1119400",
    "end": "1124679"
  },
  {
    "text": "easy here now to keep a controller and the views that that controller is going to use in the same",
    "start": "1124679",
    "end": "1130440"
  },
  {
    "text": "folder as well as any view models that that controller that are specific to",
    "start": "1130440",
    "end": "1135559"
  },
  {
    "text": "that controller and it's a very nice organization because it makes things easy to find and typically when you go into make a a change in an application",
    "start": "1135559",
    "end": "1142600"
  },
  {
    "text": "you're working on a feature and so to go into a feature folder and have nearly everything that you need right there I",
    "start": "1142600",
    "end": "1149000"
  },
  {
    "text": "think has been advantageous the other thing I like is it can mimic the hierarchy of the UI so if I actually",
    "start": "1149000",
    "end": "1154600"
  },
  {
    "text": "look at the UI for this application someone clicks on the top level admin link and then they're given another menu",
    "start": "1154600",
    "end": "1160520"
  },
  {
    "text": "that says do you want to manage this or manage that or manage this and so I can have nested folders inside of there but",
    "start": "1160520",
    "end": "1166039"
  },
  {
    "text": "there can still be notice this admin controller that kind of controls that top level",
    "start": "1166039",
    "end": "1172200"
  },
  {
    "text": "feature how do you do this in asp.net core it requires um very little code and",
    "start": "1172200",
    "end": "1177240"
  },
  {
    "text": "by the way I've had several frustrating attempts trying to rewrite those account controllers in asp.net",
    "start": "1177240",
    "end": "1183960"
  },
  {
    "text": "core and I'll get as far as creating a login logout controller and a register controller and trying to break it out",
    "start": "1183960",
    "end": "1190799"
  },
  {
    "text": "it's just very cumbersome someday that'll be a Nate package that I can put together I",
    "start": "1190799",
    "end": "1196559"
  },
  {
    "text": "hope the code to implement featur folders is relatively straightforward and what I did one day is just put it",
    "start": "1196559",
    "end": "1203159"
  },
  {
    "text": "into a newg get package and published it on newg get it's OD to code. add feature",
    "start": "1203159",
    "end": "1208520"
  },
  {
    "text": "folders once you install that package when you're inside a configure Services all you do all you need to do to use",
    "start": "1208520",
    "end": "1214200"
  },
  {
    "text": "this is to say services. add MVC doad feature folders and now you can place",
    "start": "1214200",
    "end": "1219360"
  },
  {
    "text": "your controllers and Views inside of a top level features folder making",
    "start": "1219360",
    "end": "1226440"
  },
  {
    "start": "1227000",
    "end": "1672000"
  },
  {
    "text": "sense controller code I like to think of",
    "start": "1227000",
    "end": "1232039"
  },
  {
    "text": "controllers as purely facades so that they should do as little work as possible and have as little Lo little",
    "start": "1232039",
    "end": "1238039"
  },
  {
    "text": "code as possible inside of them which I'll come to in a minute uh I do like the routing attribute routes in",
    "start": "1238039",
    "end": "1245039"
  },
  {
    "text": "asp.net core they're are first class feature now they're very flexible they don't have some of the quirks that were",
    "start": "1245039",
    "end": "1250159"
  },
  {
    "text": "around in mvc5 and so every controller that I write now will use a route attribute to say to reach this",
    "start": "1250159",
    "end": "1256200"
  },
  {
    "text": "controller you have to go to admin slash manage match matches slash and then an",
    "start": "1256200",
    "end": "1261720"
  },
  {
    "text": "action that's inside of here and I like this for a few reasons one is I can make parameter names like season",
    "start": "1261720",
    "end": "1267840"
  },
  {
    "text": "ID match up with what the action is actually expecting I don't just have to have a generic ID parameter which I",
    "start": "1267840",
    "end": "1275000"
  },
  {
    "text": "often find very confusing when there's an ID parameter to every action and I don't know if that's supposed to be an",
    "start": "1275000",
    "end": "1281039"
  },
  {
    "text": "account ID or a golfer ID or employee ID what is it supposed to be and if you I'm",
    "start": "1281039",
    "end": "1288039"
  },
  {
    "text": "assuming a lot people have used asp.net core and you know that these special tokens the square brackets that allows",
    "start": "1288039",
    "end": "1293200"
  },
  {
    "text": "asp.net core just to replace the name of this controller inside of that route so",
    "start": "1293200",
    "end": "1298400"
  },
  {
    "text": "you don't have to hardcode manage matches inside of there I'm a big fan of mediator so",
    "start": "1298400",
    "end": "1305440"
  },
  {
    "text": "another Jimmy product of Jimmy bogard's mine what mediator allows me to do so",
    "start": "1305440",
    "end": "1310840"
  },
  {
    "text": "here's what I went from a controller I mentioned this earlier I want a controller to be a facade I want a controller to only be responsible for",
    "start": "1310840",
    "end": "1317679"
  },
  {
    "text": "receiving an http request and sending out a response but doing nothing in between just dispatch something and I",
    "start": "1317679",
    "end": "1324640"
  },
  {
    "text": "actually really liked the web API back when it back when it was web",
    "start": "1324640",
    "end": "1329840"
  },
  {
    "text": "API too when you actually were working with abstractions like HTTP request message and HTTP response message",
    "start": "1329840",
    "end": "1335840"
  },
  {
    "text": "because that's what I think a controller is really doing it's receiving a request and sending out a response asp.net core we don't have",
    "start": "1335840",
    "end": "1342760"
  },
  {
    "text": "those types unless you install the web API compatibility shim but I'm okay to live with this is a controller that",
    "start": "1342760",
    "end": "1348760"
  },
  {
    "text": "takes a command that's been deserialized from the incoming request for me and now",
    "start": "1348760",
    "end": "1353960"
  },
  {
    "text": "all I really want to do with that command is maybe I'll do some basic checks like model state is valid Jimmy",
    "start": "1353960",
    "end": "1359080"
  },
  {
    "text": "doesn't like that but I'm okay with it all the work though all the work happens in medior so I don't want the controller",
    "start": "1359080",
    "end": "1366400"
  },
  {
    "text": "touching any sort of business service or repository or context or do anything",
    "start": "1366400",
    "end": "1372000"
  },
  {
    "text": "other than maybe with a logging service I just want to dispatch things through mediator um how many anyone us",
    "start": "1372000",
    "end": "1379200"
  },
  {
    "text": "mediator Feud so check that project out it's really easy to set up what you do is you set up",
    "start": "1379200",
    "end": "1385720"
  },
  {
    "text": "um I don't think I have any code here uh unfortunately you basically uh create",
    "start": "1385720",
    "end": "1391440"
  },
  {
    "text": "queries or commands you dispatch them using mediator mediator will find the",
    "start": "1391440",
    "end": "1397159"
  },
  {
    "text": "associated Handler for this particular command and it will just do work and return you a",
    "start": "1397159",
    "end": "1404000"
  },
  {
    "text": "result it's perfect throw away the account controller yes this is trying to list",
    "start": "1404000",
    "end": "1411679"
  },
  {
    "text": "the account controller it Scrolls off the bottom of the screen this is trying to list the manage controller that's the",
    "start": "1411679",
    "end": "1416919"
  },
  {
    "text": "exact opposite of what I want a controller to look like just Reams and Reams and reams of code inside a controller action and it's very",
    "start": "1416919",
    "end": "1423559"
  },
  {
    "text": "difficult to look at a lot of people ask me about",
    "start": "1423559",
    "end": "1429240"
  },
  {
    "text": "cross-site request forgeries in asp.net core and yes obviously it's still a problem so if you have an and a lot of",
    "start": "1429240",
    "end": "1435440"
  },
  {
    "text": "people ask me how how do I if I if I'm building an a API with asp.net core how",
    "start": "1435440",
    "end": "1440840"
  },
  {
    "text": "can I get a token to my JavaScript code to send along to prevent a uh C surf",
    "start": "1440840",
    "end": "1447600"
  },
  {
    "text": "attack so this is something you have to worry about if you have an application where the authentication happens",
    "start": "1447600",
    "end": "1453880"
  },
  {
    "text": "implicitly and automatically so an example would be cookie authentication so you're building a full web",
    "start": "1453880",
    "end": "1459360"
  },
  {
    "text": "application and a part of that web application or API end points the JavaScript calls and because you're",
    "start": "1459360",
    "end": "1465320"
  },
  {
    "text": "using cookie authentication the browser will automatically authenticate the user by sending that cookie along another example would be Windows authentication",
    "start": "1465320",
    "end": "1471799"
  },
  {
    "text": "it happens there too so how do you get a cookie into JavaScript I usually set up an xsrf token",
    "start": "1471799",
    "end": "1477760"
  },
  {
    "text": "controller this is just injecting the I anti antiforgery",
    "start": "1477760",
    "end": "1484320"
  },
  {
    "text": "service and I can walk up to that service and I can tell it to get and store tokens that'll actually do two",
    "start": "1484320",
    "end": "1489440"
  },
  {
    "text": "things right there the first thing it will do is issue a set cookie header to the client to make sure that there is a",
    "start": "1489440",
    "end": "1495799"
  },
  {
    "text": "cookie with the one part of the xsrf token and it will also",
    "start": "1495799",
    "end": "1501919"
  },
  {
    "text": "return to me a data structure that will tell me the request token that my JavaScript needs to include as well as",
    "start": "1501919",
    "end": "1507760"
  },
  {
    "text": "the header name that I need to place that token into so just return that as Json back to my JavaScript client and",
    "start": "1507760",
    "end": "1513919"
  },
  {
    "text": "now it can send along that request token and header name and I can just decorate my API endpoints with validate",
    "start": "1513919",
    "end": "1519520"
  },
  {
    "text": "antiforgery token and asp.net core takes care of the rest it'll compare the cookie to the request token and make",
    "start": "1519520",
    "end": "1524919"
  },
  {
    "text": "sure that everything is protected",
    "start": "1524919",
    "end": "1530320"
  },
  {
    "text": "Embrace security Pol policies so you probably know asp.net",
    "start": "1530760",
    "end": "1536240"
  },
  {
    "text": "cor did a a radical rewrite of how security Works some of it I think is actually I'm not too happy with and it's",
    "start": "1536240",
    "end": "1542360"
  },
  {
    "text": "kind of weird um having an an authentication property on the HB context I always thought was a little",
    "start": "1542360",
    "end": "1548880"
  },
  {
    "text": "bit weird it seemed to me like authentication should just be another service that I can inject and I don't know if they'll change any of that in",
    "start": "1548880",
    "end": "1554399"
  },
  {
    "text": "the future but there's some disc discussions on GitHub that uh indicate they might be changing that in the",
    "start": "1554399",
    "end": "1560159"
  },
  {
    "text": "future security security policies are policies that you can apply to say uh I",
    "start": "1560159",
    "end": "1566960"
  },
  {
    "text": "want to check that this user is an admin or is authenticated or has an email",
    "start": "1566960",
    "end": "1573480"
  },
  {
    "text": "address that is in the domain of my company and you can encapsulate that rule into an authorization",
    "start": "1573480",
    "end": "1580520"
  },
  {
    "text": "policy like so just by requiring claims and doing a build to turn it into a",
    "start": "1580520",
    "end": "1586399"
  },
  {
    "text": "policy and once you build one of these authorization policies they become very easy to use in an authorization",
    "start": "1586399",
    "end": "1593840"
  },
  {
    "text": "attribute which I'll get to in just a second and for those of you that haven't worked with claims thought net core is",
    "start": "1593840",
    "end": "1599399"
  },
  {
    "text": "very oriented toward claims that was a move that started a few years ago even in the full NET Framework but it's just",
    "start": "1599399",
    "end": "1606559"
  },
  {
    "text": "the idea that a claim can be any key value pair so what is my email what is my name what organization is I am I",
    "start": "1606559",
    "end": "1613559"
  },
  {
    "text": "associated with am I an admin or not those are all claims that you can add and if if you have custom claims that",
    "start": "1613559",
    "end": "1619440"
  },
  {
    "text": "you want to add about a user there's extensibility points where you can go in and um add additional claims at the",
    "start": "1619440",
    "end": "1625960"
  },
  {
    "text": "point where the user is authenticated you might need to do a database query to do that and that's exactly what it was",
    "start": "1625960",
    "end": "1631080"
  },
  {
    "text": "designed to do but then once you have that once you have understand claims you understand security policies what I",
    "start": "1631080",
    "end": "1637679"
  },
  {
    "text": "don't want to see in an a net core application is someone to using the authorized attribute and passing in a",
    "start": "1637679",
    "end": "1644159"
  },
  {
    "text": "string that describes which policy they want to use I would rather create a custom authorization attribute that is",
    "start": "1644159",
    "end": "1651279"
  },
  {
    "text": "very clear that user is admin so that's something that I could decorate a controller or an action with and behind",
    "start": "1651279",
    "end": "1657760"
  },
  {
    "text": "the scenes I don't know what policy it's using I don't really care when I'm just implementing the controller but behind",
    "start": "1657760",
    "end": "1664159"
  },
  {
    "text": "the scenes I have some flexibility now as to what claims that will actually check and what policy that will actually",
    "start": "1664159",
    "end": "1669519"
  },
  {
    "text": "use so custom authorized attribute let's talk about",
    "start": "1669519",
    "end": "1676640"
  },
  {
    "start": "1672000",
    "end": "1881000"
  },
  {
    "text": "views how many people still use HTML helpers in asp.net core I hope",
    "start": "1676640",
    "end": "1682000"
  },
  {
    "text": "nobody well there's a few I always liked ASP NVC but I always",
    "start": "1682000",
    "end": "1687440"
  },
  {
    "text": "thought that was excuse me the absolute worst part of the NVC framework HTML",
    "start": "1687440",
    "end": "1693279"
  },
  {
    "text": "helpers tag helpers are much better tag helpers for those that",
    "start": "1693279",
    "end": "1699440"
  },
  {
    "text": "haven't used them they're processed on the server side but they are a lot like angular one",
    "start": "1699440",
    "end": "1705600"
  },
  {
    "text": "directives well they sit in your HD ra the razor engine can detect them and",
    "start": "1705600",
    "end": "1711399"
  },
  {
    "text": "you have the ability to inject logic and and change the markup when these antiforgery oh sorry",
    "start": "1711399",
    "end": "1718399"
  },
  {
    "text": "antiforgery when these uh tag helpers are in place tag helpers can be attributes they can also be elements and",
    "start": "1718399",
    "end": "1725000"
  },
  {
    "text": "they're relatively easy to write as long as you're doing something simple and I encourage people to write their own tag",
    "start": "1725000",
    "end": "1731559"
  },
  {
    "text": "helpers to take care of removing some common markup that might be inside of your views so this would be",
    "start": "1731559",
    "end": "1738919"
  },
  {
    "text": "a custom tag helper that looks for an element my Dash environment and I could set name properties on",
    "start": "1738919",
    "end": "1746639"
  },
  {
    "text": "that also Embrace view components anyone using view components in net core just a",
    "start": "1747760",
    "end": "1753720"
  },
  {
    "text": "few so view components are a new feature in previous versions of esp.net if I had to render um a hunk of markup inside of",
    "start": "1753720",
    "end": "1761200"
  },
  {
    "text": "a larger view if it was using the same model as its parent view it was easy to",
    "start": "1761200",
    "end": "1767080"
  },
  {
    "text": "use a partial View just say render this partial and here's a model to use but if I want to render a chunk of HTML that",
    "start": "1767080",
    "end": "1773120"
  },
  {
    "text": "based on a completely different model and I want it unassociated with the parent view there was a thing html.",
    "start": "1773120",
    "end": "1780120"
  },
  {
    "text": "action which would call back into a controller action as a child request and it worked most of the time but there",
    "start": "1780120",
    "end": "1785640"
  },
  {
    "text": "were some situations where child action Child Actions just became very weird Child Actions are basically gone in this",
    "start": "1785640",
    "end": "1792080"
  },
  {
    "text": "version of core what I can set up instead is a view component so a view component is almost like a controller",
    "start": "1792080",
    "end": "1798559"
  },
  {
    "text": "because you're going you're going to have a method invoked not as part of an HTTP request but as a request from some",
    "start": "1798559",
    "end": "1804519"
  },
  {
    "text": "View and this method invoke can return views well they'll pretty much always",
    "start": "1804519",
    "end": "1811840"
  },
  {
    "text": "return views but they can return anything that's an I view component result and the way I could use that is",
    "start": "1811840",
    "end": "1817880"
  },
  {
    "text": "let's say I wanted to encapsulate all this HTML into something where I could just",
    "start": "1817880",
    "end": "1823200"
  },
  {
    "text": "say render the main menu and this thing could inject its own Sur services that it needs to look up",
    "start": "1823200",
    "end": "1829320"
  },
  {
    "text": "things in the database and find out information about the user this main view component can do that and all I",
    "start": "1829320",
    "end": "1834399"
  },
  {
    "text": "need to do to render this main view component from a razor view is to do",
    "start": "1834399",
    "end": "1841279"
  },
  {
    "text": "awake component. invoke async that's what I have to do in 1.0 that's a really ugly syntax but that would find the view",
    "start": "1841279",
    "end": "1847559"
  },
  {
    "text": "component called main menu call the invoke method pass I can pass parameters there too and it just spits out whatever",
    "start": "1847559",
    "end": "1853519"
  },
  {
    "text": "HTML that that view component told it to if you're using 1.1 there's a tag helper",
    "start": "1853519",
    "end": "1860760"
  },
  {
    "text": "VC that allows you to render that view component and it's really quite nice now",
    "start": "1860760",
    "end": "1866080"
  },
  {
    "text": "it looks looks nice inside of the view too so it's just another way to decompose a complex view into simpler",
    "start": "1866080",
    "end": "1872960"
  },
  {
    "text": "pieces and the advantage of the view component there is that it can again be completely independent it can inject its",
    "start": "1872960",
    "end": "1878960"
  },
  {
    "text": "own services and figure out its own data model to use client",
    "start": "1878960",
    "end": "1885519"
  },
  {
    "start": "1881000",
    "end": "2038000"
  },
  {
    "text": "code every asp.net Cor uses JavaScript these days chances are you're using JavaScript that might be starting to use",
    "start": "1885559",
    "end": "1892120"
  },
  {
    "text": "things like ecri ecmascript 2015 thought it was over",
    "start": "1892120",
    "end": "1897799"
  },
  {
    "text": "the jet lag but maybe not how do you package and bundle that stuff personally right now out of all",
    "start": "1897799",
    "end": "1905000"
  },
  {
    "text": "the tools that are available I prefer webpack it's just a tool that I think works well with both the JavaScript code",
    "start": "1905000",
    "end": "1912320"
  },
  {
    "text": "as well as there's some asp.net integration now that I'll talk about how many people using webpack",
    "start": "1912320",
    "end": "1919200"
  },
  {
    "text": "yeah good any anyone else using something else like rollup or browser",
    "start": "1919200",
    "end": "1924440"
  },
  {
    "text": "F no so maybe I'm preaching to the choir use webpack one of the reasons I like",
    "start": "1924440",
    "end": "1931200"
  },
  {
    "text": "webpack is I think the configuration although it's a little bit difficult to understand at first at the",
    "start": "1931200",
    "end": "1938039"
  },
  {
    "text": "end of the day it's a little bit simpler than some of the other tools that are out there basically you just need to tell webpack what files am I looking at",
    "start": "1938039",
    "end": "1944360"
  },
  {
    "text": "so look at JS files um what modules do I want in included I'm going to be",
    "start": "1944360",
    "end": "1949639"
  },
  {
    "text": "building a bundle that includes react here and what's the output where do I",
    "start": "1949639",
    "end": "1954720"
  },
  {
    "text": "place the output what JS file and it also has these neat plugins this one",
    "start": "1954720",
    "end": "1959799"
  },
  {
    "text": "unfortunately named this dll plugin it has these neat plugins that uh can do things like uglify the code Minify the",
    "start": "1959799",
    "end": "1966039"
  },
  {
    "text": "code um determine keep track of what modules I've included here that's what",
    "start": "1966039",
    "end": "1971440"
  },
  {
    "text": "this dll plugin does keep what keep track of what modules have been included in this bundle so that when I build a",
    "start": "1971440",
    "end": "1978440"
  },
  {
    "text": "second bundle with my application code these modules are not included that's the idea build one file with all the",
    "start": "1978440",
    "end": "1984240"
  },
  {
    "text": "stuff that doesn't change from vendors build other files that contain my application code that are changing all the time and I like personally to use",
    "start": "1984240",
    "end": "1991639"
  },
  {
    "text": "multiple configuration files with webpack so I like to build have one configuration file to build my vendor",
    "start": "1991639",
    "end": "1997320"
  },
  {
    "text": "bundle one to build all of my test code one to build all of my application code",
    "start": "1997320",
    "end": "2003000"
  },
  {
    "text": "and just there's a couple different opinions here that are going on one opinion is that a lot of people will use",
    "start": "2003000",
    "end": "2009399"
  },
  {
    "text": "other tools like a a test Runner so that when they're executing their unit test the testr runner will actually do the",
    "start": "2009399",
    "end": "2015960"
  },
  {
    "text": "compilation and module bundling of things like typescript files I like to do it all with webpack and then the my",
    "start": "2015960",
    "end": "2022440"
  },
  {
    "text": "test Runner I don't have to worry about loading plugins to do that the neat thing about webpack is it's executing in",
    "start": "2022440",
    "end": "2028120"
  },
  {
    "text": "node.js so if I need to do things like go out and find all of my ts files that are inside of the features folder uh I",
    "start": "2028120",
    "end": "2035120"
  },
  {
    "text": "can do some programming there to just find them all JavaScript",
    "start": "2035120",
    "end": "2041399"
  },
  {
    "start": "2038000",
    "end": "2167000"
  },
  {
    "text": "Services was a project that was recently released by um Steve Sanderson and some",
    "start": "2041399",
    "end": "2046679"
  },
  {
    "text": "others Steve Sanderson working for Microsoft but of knockoutjs Fame and it works really well with webpack so",
    "start": "2046679",
    "end": "2052480"
  },
  {
    "text": "basically what you can do with with JavaScript Services it's a piece of middleware that you can install into your asp.net application so that if",
    "start": "2052480",
    "end": "2059240"
  },
  {
    "text": "you're using webpack to build and bundle all this JavaScript code it can do hot module reloading by talking to that",
    "start": "2059240",
    "end": "2065358"
  },
  {
    "text": "piece of middleware so that when you save when you update a Javascript file or a typescript file and you save it to",
    "start": "2065359",
    "end": "2070398"
  },
  {
    "text": "the hard drive webpack detects that and just communicates with my asp.net application directly and says hey send",
    "start": "2070399",
    "end": "2076440"
  },
  {
    "text": "this new chunk of JavaScript down to the browser and it just that New Logic just appears in the browser and I don't lose",
    "start": "2076440",
    "end": "2081720"
  },
  {
    "text": "any state and things just magic just happens and it's really easy to use you just um install the",
    "start": "2081720",
    "end": "2090398"
  },
  {
    "text": "middleware and what happens behind the scenes is that this middleware is the",
    "start": "2090399",
    "end": "2095560"
  },
  {
    "text": "one that will actually run webpack for me uh based on my configuration files that I have",
    "start": "2095560",
    "end": "2101160"
  },
  {
    "text": "available the only downside to this is that it happens silently now inside of",
    "start": "2101160",
    "end": "2106480"
  },
  {
    "text": "my asp.net server so if something goes horribly wrong for some reason with webpack you'll occasionally get into",
    "start": "2106480",
    "end": "2112560"
  },
  {
    "text": "these situations where the the hot updates don't come over and you have to refresh the browser and sometimes restart your server but uh it's worth it",
    "start": "2112560",
    "end": "2119720"
  },
  {
    "text": "because it makes the rest of the development cycle so quick I use Karma as a test Runner even",
    "start": "2119720",
    "end": "2126320"
  },
  {
    "text": "if I'm not using angularjs Karma was a test Runner developed by the angular team but it works with anything and you",
    "start": "2126320",
    "end": "2132920"
  },
  {
    "text": "can use different test Frameworks like Q unit Jasmine U mocha so I use it for",
    "start": "2132920",
    "end": "2138200"
  },
  {
    "text": "like react based projects it's my opinion that that this is the best test Runner that is out",
    "start": "2138200",
    "end": "2144079"
  },
  {
    "text": "there it requires very little configuration basically just need to tell it what files to load and it'll just run all my tests and if I've",
    "start": "2144079",
    "end": "2150280"
  },
  {
    "text": "already built all of my tests from typescript into JavaScript uh the",
    "start": "2150280",
    "end": "2155359"
  },
  {
    "text": "configuration can really be just the simple go out and find all of the JS",
    "start": "2155359",
    "end": "2160640"
  },
  {
    "text": "files load them find all of my specs load them and now it will automatically launch Chrome and run my unit",
    "start": "2160640",
    "end": "2168240"
  },
  {
    "start": "2167000",
    "end": "2285000"
  },
  {
    "text": "tests there's a lot of things in net core that require the command line um particularly",
    "start": "2169359",
    "end": "2175880"
  },
  {
    "text": "when you get to client code and you're using things like npm and tools like webpack I don't like the built-in",
    "start": "2175880",
    "end": "2181880"
  },
  {
    "text": "command prompt in Windows so I tell people to use con emu",
    "start": "2181880",
    "end": "2189559"
  },
  {
    "text": "that's fixed con emu or Commander",
    "start": "2190359",
    "end": "2195400"
  },
  {
    "text": "cmdr that's probably what I have running somewhere around here but it doesn't want to come up",
    "start": "2195400",
    "end": "2203440"
  },
  {
    "text": "there we go it can show me things like um the",
    "start": "2203440",
    "end": "2210960"
  },
  {
    "text": "current Branch I'm on in a project so it sees that I'm inside of a get repository now on the branch Sprint",
    "start": "2210960",
    "end": "2217599"
  },
  {
    "text": "QA there's nothing been modified but if I were to touch a file that would turn red nice little indication the other",
    "start": "2217599",
    "end": "2223720"
  },
  {
    "text": "nice thing it does which won't be a big feature for anyone that uses something like iterm on Mac OS is that you can",
    "start": "2223720",
    "end": "2228839"
  },
  {
    "text": "have split panels on it and this is really nice when I want to run something like a web pack build over here and",
    "start": "2228839",
    "end": "2234599"
  },
  {
    "text": "watch it and a build for my test over here and watch it and my unit test down here and just watch for red to flash by",
    "start": "2234599",
    "end": "2240960"
  },
  {
    "text": "to see if a unit test field I can have all of those inside of one window at a time and I can even write a little",
    "start": "2240960",
    "end": "2247920"
  },
  {
    "text": "script so that developers can launch that process so this is the syntax to launch con emu and tell it to do an npm",
    "start": "2247920",
    "end": "2255760"
  },
  {
    "text": "run run watch in one window then do an npm run test watch in a new console that",
    "start": "2255760",
    "end": "2262280"
  },
  {
    "text": "split horizontally so it bring up this window and then npm run karma in a new console split vertically so it bring up",
    "start": "2262280",
    "end": "2269359"
  },
  {
    "text": "this window and now I have those three Windows ready to go only downside to this make make sure you put all of this",
    "start": "2269359",
    "end": "2275520"
  },
  {
    "text": "on the same line so don't actually put line Brakes in you have to stretch it out across the to the far right of the",
    "start": "2275520",
    "end": "2284480"
  },
  {
    "start": "2285000",
    "end": "2360000"
  },
  {
    "text": "editor client code layout I've struggled with this a little bit quite honestly",
    "start": "2285599",
    "end": "2290720"
  },
  {
    "text": "but there's been some nice things that have happened recently in the types SCP typescript world and the webpack world",
    "start": "2290720",
    "end": "2296079"
  },
  {
    "text": "that allow me to place my client code wherever I want to so in an aspor",
    "start": "2296079",
    "end": "2301160"
  },
  {
    "text": "project if let's say I'm building something with react or angular 2 I could have a client folder and inside of",
    "start": "2301160",
    "end": "2306839"
  },
  {
    "text": "the client folder place things like not only my CSS but also my script and I can have modules in",
    "start": "2306839",
    "end": "2312560"
  },
  {
    "text": "here components and models and services and you might say well what about feature folders well typically what I've",
    "start": "2312560",
    "end": "2319480"
  },
  {
    "text": "been trying lately is that this client folder which is a top level folder in my",
    "start": "2319480",
    "end": "2324720"
  },
  {
    "text": "project will contain the reusable things for the application so the things I need to uh invoke services and apis back on",
    "start": "2324720",
    "end": "2332200"
  },
  {
    "text": "the the server but in the features folder I will have a little script file",
    "start": "2332200",
    "end": "2338000"
  },
  {
    "text": "that will bootstrap the components that are needed for that particular feature at least so in the features folder this",
    "start": "2338000",
    "end": "2344200"
  },
  {
    "text": "list. CSH HTML file it's a little bit fancy it's not a full spa but it needs",
    "start": "2344200",
    "end": "2349319"
  },
  {
    "text": "to include this list. main. TSX file it needs to have that functionality and this but this list file might pull in a",
    "start": "2349319",
    "end": "2355200"
  },
  {
    "text": "bunch of stuff from common components and models and services hopefully this is all making",
    "start": "2355200",
    "end": "2361160"
  },
  {
    "start": "2360000",
    "end": "2653000"
  },
  {
    "text": "sense another thing I've started to feel very strongly about is using npm only so I want to use new get for everything",
    "start": "2361160",
    "end": "2367480"
  },
  {
    "text": "that's. net and I want to use npm for everything that's JavaScript and a lot of Microsoft developers we've kind of been encouraged to use Bower over the",
    "start": "2367480",
    "end": "2374200"
  },
  {
    "text": "years and I think there's a lot of that still hanging around today I haven't used Bower in about two years now what a",
    "start": "2374200",
    "end": "2380119"
  },
  {
    "text": "lot of people don't uh realize about npm although there's some scenarios where it's not particularly good at this but",
    "start": "2380119",
    "end": "2386359"
  },
  {
    "text": "it can manage client side libraries so if I went to npm install bootstrap the CSS framework I can if I went to npm",
    "start": "2386359",
    "end": "2393280"
  },
  {
    "text": "install jQuery I can I can certainly npm install angular 2",
    "start": "2393280",
    "end": "2399319"
  },
  {
    "text": "and that means if I have everything controlled by npm I don't have to worry about npm and bow I don't have to worry",
    "start": "2399480",
    "end": "2405240"
  },
  {
    "text": "about uh even typings anymore because typescript types have moved over to npm",
    "start": "2405240",
    "end": "2410599"
  },
  {
    "text": "repositories so I can npm install types for Jasmine and react and all those things that I",
    "start": "2410599",
    "end": "2417880"
  },
  {
    "text": "need so use npm forget about power if you",
    "start": "2417880",
    "end": "2423160"
  },
  {
    "text": "can and by the way a lot of people say well how do I tell the difference between what's going what needs to",
    "start": "2423160",
    "end": "2429119"
  },
  {
    "text": "execute on the server and What needs to execute on the client um that it just doesn't bother me uh jQuery you go to",
    "start": "2429119",
    "end": "2436480"
  },
  {
    "text": "the client and Karma is something I use on the server but it all comes down through npm I have",
    "start": "2436480",
    "end": "2443000"
  },
  {
    "text": "been resistant to typescript for a long time I've tried using it but I really",
    "start": "2443000",
    "end": "2448480"
  },
  {
    "text": "got the feeling that it was designed to write wijs programs for Windows and I wasn't doing",
    "start": "2448480",
    "end": "2455280"
  },
  {
    "text": "wijs but a few things have happened recently which have made me accept typescript I've started to like it a lot",
    "start": "2455280",
    "end": "2462480"
  },
  {
    "text": "more it's actually a couple things that you can see in this TS config file U first of all no implicit any still",
    "start": "2462480",
    "end": "2469119"
  },
  {
    "text": "allows you to kind of opt out of typescript so if I don't want to write type annotations everywhere I don't have",
    "start": "2469119",
    "end": "2475000"
  },
  {
    "text": "to another piece and my drawing tool is not working but that's okay another piece in here that is quite",
    "start": "2475000",
    "end": "2482240"
  },
  {
    "text": "nice is module resolution module module res resolution of node is wonderful because now if I npm install a library",
    "start": "2482240",
    "end": "2489760"
  },
  {
    "text": "like react or angular 2 and I start writing typescript when I write an import statement typescript",
    "start": "2489760",
    "end": "2494839"
  },
  {
    "text": "automatically looks under node modules and will find those modules I don't have to do anything special or any other",
    "start": "2494839",
    "end": "2500160"
  },
  {
    "text": "configuration that's quite quite nice uh but if I do have a problem this Trace resolution flag will actually tell me",
    "start": "2500160",
    "end": "2506359"
  },
  {
    "text": "everywhere that typescript is looking for something that it can either find or not find so when I write an import",
    "start": "2506359",
    "end": "2512520"
  },
  {
    "text": "statement with es 2015 or typescript um it'll tell me where it's looking",
    "start": "2512520",
    "end": "2517960"
  },
  {
    "text": "I can also customize my environment now so one of the problems I had with typescript in the past is you just run",
    "start": "2517960",
    "end": "2523720"
  },
  {
    "text": "into weird problems where you use someone's library that is using promises and typescript would complain about not",
    "start": "2523720",
    "end": "2529560"
  },
  {
    "text": "knowing what a promise is and you'd have to in assure typescript that uh you are using a promise Library if promises",
    "start": "2529560",
    "end": "2536079"
  },
  {
    "text": "don't exist now there's this lib configuration where you can basically just tell typescript look I'm programming in the browser so assume I",
    "start": "2536079",
    "end": "2543359"
  },
  {
    "text": "have all the Dom types I'm programming with es5 so make just assume that I will",
    "start": "2543359",
    "end": "2548559"
  },
  {
    "text": "have all of the es5 apis available and by the way I'm also just assume that I have promises available so don't",
    "start": "2548559",
    "end": "2554319"
  },
  {
    "text": "complain if someone uses them and then the other piece that's really wonderful is this paths so with with paths that's",
    "start": "2554319",
    "end": "2562000"
  },
  {
    "text": "where you can tell typescript I want to also include this client script folder when you're trying to resolve a module",
    "start": "2562000",
    "end": "2568640"
  },
  {
    "text": "so if I say something like import my list widget uh or import F from my list",
    "start": "2568640",
    "end": "2575440"
  },
  {
    "text": "widget typescript will not to look in the node modules folder but also to look out at the client script folder to try",
    "start": "2575440",
    "end": "2581119"
  },
  {
    "text": "to find that widget and I have a lot more control over what where type script is looking for things it's made it a lot",
    "start": "2581119",
    "end": "2587000"
  },
  {
    "text": "easier to work with so now it's just a problem of uh do I like all the type",
    "start": "2587000",
    "end": "2593880"
  },
  {
    "text": "annotations and if you've used typescript in the past and you've struggled with either the uh TSD utility",
    "start": "2593880",
    "end": "2600680"
  },
  {
    "text": "or the typings utility trying to get type definitions to typescript all of that stuff is in the at types Repository",
    "start": "2600680",
    "end": "2607720"
  },
  {
    "text": "that you can use with npm now you don't have to install any extra tools all you need is npm and I can install npm",
    "start": "2607720",
    "end": "2614800"
  },
  {
    "text": "install at type jasine and poof typescript will understand my Jasmine test now no additional work needed so",
    "start": "2614800",
    "end": "2622240"
  },
  {
    "text": "all those things are good uh I do something that maybe is a little bit odd I don't know I do all of",
    "start": "2622240",
    "end": "2628119"
  },
  {
    "text": "my C work inside of visual studio with resharper and I have Visual Studio code",
    "start": "2628119",
    "end": "2633480"
  },
  {
    "text": "open to the same solution folder so that whenever I need to edit typescript or um",
    "start": "2633480",
    "end": "2640079"
  },
  {
    "text": "equiscript 2015 stuff I can do that in code just code to me feels still a little bit better than visual studio for",
    "start": "2640079",
    "end": "2645640"
  },
  {
    "text": "editing JavaScript it's very good and there's plugins you can get to do all sorts of wonderful things with your",
    "start": "2645640",
    "end": "2650960"
  },
  {
    "text": "typescript and ecmascript a lot of people ask me where",
    "start": "2650960",
    "end": "2657079"
  },
  {
    "start": "2653000",
    "end": "2694000"
  },
  {
    "text": "do I place my client code and where do I build my code to and my opinion is that",
    "start": "2657079",
    "end": "2662400"
  },
  {
    "text": "the client code that you cannot send to the client because it hasn't been transpiled should be kept outside of the",
    "start": "2662400",
    "end": "2668520"
  },
  {
    "text": "www root folder or whatever folder you are using to serve files and then when",
    "start": "2668520",
    "end": "2673640"
  },
  {
    "text": "you build it with webpack or whatever tool you choose you build it into the www folder and just have a consistent",
    "start": "2673640",
    "end": "2680400"
  },
  {
    "text": "naming scheme you're going to put it in a distribution folder I like to call it assets and it's inside of here where",
    "start": "2680400",
    "end": "2686119"
  },
  {
    "text": "everything that I've built with webpack exists I think of it as my bin folder",
    "start": "2686119",
    "end": "2691400"
  },
  {
    "text": "for JavaScript ah another another little uh",
    "start": "2691400",
    "end": "2698040"
  },
  {
    "start": "2694000",
    "end": "2727000"
  },
  {
    "text": "thing that I liked that we did in one project was we would need to um",
    "start": "2698040",
    "end": "2703480"
  },
  {
    "text": "instantiate some react code to run on a page and pass it some parameters it was just going to do a few simple things on that page but actually come up just with",
    "start": "2703480",
    "end": "2710559"
  },
  {
    "text": "a data- parameter and serialize my model into that HTML attribute so that react",
    "start": "2710559",
    "end": "2717400"
  },
  {
    "text": "could easily grab that data and not have to go back to the",
    "start": "2717400",
    "end": "2722599"
  },
  {
    "text": "server and now what about unit testing",
    "start": "2722599",
    "end": "2728319"
  },
  {
    "start": "2727000",
    "end": "2764000"
  },
  {
    "text": "I think having a single unit test project for your solution or your",
    "start": "2728319",
    "end": "2734200"
  },
  {
    "text": "application is a fine thing it all depends on your project and your solution Microsoft takes the approach where they want one unit testing project",
    "start": "2734200",
    "end": "2740359"
  },
  {
    "text": "per production project right so they have a lot of test projects which I think is fine for open source projects",
    "start": "2740359",
    "end": "2747000"
  },
  {
    "text": "like that and open source projects where different projects build into different new gets and there have to be very public about it but but for a business",
    "start": "2747000",
    "end": "2753559"
  },
  {
    "text": "application I think it's okay to have one test assembly that just has full fers for each of the projects out here",
    "start": "2753559",
    "end": "2759000"
  },
  {
    "text": "that I need to test whether it's three or five or",
    "start": "2759000",
    "end": "2763760"
  },
  {
    "start": "2764000",
    "end": "2786000"
  },
  {
    "text": "10 I like using xunit with net core I think it's extensible it's open source",
    "start": "2765520",
    "end": "2772400"
  },
  {
    "text": "it's low ceremony um they do a good job keeping it up with all the changes and I like the vocabulary of xunit the best I",
    "start": "2772400",
    "end": "2778599"
  },
  {
    "text": "like writing facts instead of decorating things with test method but that's just my",
    "start": "2778599",
    "end": "2785920"
  },
  {
    "text": "opinion I try very hard to avoid mocks in my unit tests and if you go out on the",
    "start": "2785920",
    "end": "2793119"
  },
  {
    "text": "internet you'll find lots of debate about that I'm not going to cover it here but I simply I refuse to use a",
    "start": "2793119",
    "end": "2798960"
  },
  {
    "text": "mocking library and that's my opinion I don't like mocks what I do",
    "start": "2798960",
    "end": "2806079"
  },
  {
    "text": "like is what some people would not call a unit test but let me explain this slowly so first of all out there uh one",
    "start": "2806079",
    "end": "2812760"
  },
  {
    "text": "of the pieces of infrastructure that Microsoft provides in a GitHub repos and it's a new get package there a thing",
    "start": "2812760",
    "end": "2818480"
  },
  {
    "text": "called the asp.net core test host anyone use it just a couple It's a Wonderful piece",
    "start": "2818480",
    "end": "2824440"
  },
  {
    "text": "that you can use inside of your unit test so what you want to do so exstensively what asp.net core test host",
    "start": "2824440",
    "end": "2830079"
  },
  {
    "text": "is about is it's about this situation I have the startup class that configures a bunch of middleware how would I ever",
    "start": "2830079",
    "end": "2836680"
  },
  {
    "text": "test that requests and information are flowing through the middleware correctly that's something that the asp.net core",
    "start": "2836680",
    "end": "2843280"
  },
  {
    "text": "test host can do it can basically set up an HTTP processing pipeline and you can send off a request through this test",
    "start": "2843280",
    "end": "2850240"
  },
  {
    "text": "host that just stays in memory it doesn't actually have to open a socket or go anywhere it's a lot like in web",
    "start": "2850240",
    "end": "2855520"
  },
  {
    "text": "API when you had that uh inmemory channel that you could route requests through an example of using it would",
    "start": "2855520",
    "end": "2863280"
  },
  {
    "text": "be ah thought I had some different code here what if I want to test a bit of",
    "start": "2863280",
    "end": "2869599"
  },
  {
    "text": "functionality that I want in my application like an Ajax login redirects to the return URL and turn uh an Ajax",
    "start": "2869599",
    "end": "2877520"
  },
  {
    "text": "login redirect if it's an Ajax Ajax request I actually want it to uh return",
    "start": "2877520",
    "end": "2883599"
  },
  {
    "text": "with a 200 status code and the redirect instruction in the location header how",
    "start": "2883599",
    "end": "2889200"
  },
  {
    "text": "could I test that little bit of thing well I can instantiate an as. net core test host it's relatively simple in this",
    "start": "2889200",
    "end": "2896040"
  },
  {
    "text": "example it's wrapped inside of a method called create server but I'm going to uh Place some middleware inside of create",
    "start": "2896040",
    "end": "2902680"
  },
  {
    "text": "server some cookie authentication and send a respon send a request right there so",
    "start": "2902680",
    "end": "2909599"
  },
  {
    "text": "send async a request to example.com make it look like it's an Ajax request and",
    "start": "2909599",
    "end": "2915920"
  },
  {
    "text": "then I can write a search against the response and here's another example create a server create a client issue an",
    "start": "2915920",
    "end": "2922760"
  },
  {
    "text": "HTTP git request to this URL see if I got that right right status code",
    "start": "2922760",
    "end": "2928000"
  },
  {
    "text": "back so this asp.net core test toast is one part of my solution let me tell you",
    "start": "2928000",
    "end": "2933599"
  },
  {
    "text": "about another part if you are using Entity framework core it has this in-memory provider anyone using that I'm",
    "start": "2933599",
    "end": "2940359"
  },
  {
    "start": "2934000",
    "end": "3090000"
  },
  {
    "text": "curious anyone using EF core anyone avoiding",
    "start": "2940359",
    "end": "2946520"
  },
  {
    "text": "EF yes on some projects I use it um and",
    "start": "2946520",
    "end": "2952520"
  },
  {
    "text": "it's okay but this inmemory provider is actually quite nice I can say I want a new DB context and I can add things to",
    "start": "2952520",
    "end": "2958079"
  },
  {
    "text": "it and I can query this DB context and it all all the data just stays in memory doesn't actually go to SQL Server this",
    "start": "2958079",
    "end": "2965079"
  },
  {
    "text": "is not to use as a produ in memory database they make that very clear it doesn't support a lot of scenarios and",
    "start": "2965079",
    "end": "2971359"
  },
  {
    "text": "it will break on you and it doesn't quite obey the semantics of what a real relational database would do it's sole",
    "start": "2971359",
    "end": "2977960"
  },
  {
    "text": "purpose in life is to give you something that you can write unit tests Against The Entity framework with the one thing",
    "start": "2977960",
    "end": "2983400"
  },
  {
    "text": "to be aware of make sure I have this on a slide ah yeah let me back up a second the one thing to be aware of is this um",
    "start": "2983400",
    "end": "2991400"
  },
  {
    "text": "different people approach the inmemory provider with different expect ations of",
    "start": "2991400",
    "end": "2997240"
  },
  {
    "text": "how it should behave some people expect that if they create a new DB context",
    "start": "2997240",
    "end": "3002680"
  },
  {
    "text": "object that they would have a new inmemory database but that's not how EF in memory provider works the way it",
    "start": "3002680",
    "end": "3009240"
  },
  {
    "text": "works is you create your first DB context and that yes there's a new inmemory database now and you add things",
    "start": "3009240",
    "end": "3015200"
  },
  {
    "text": "to it you can query it and if you create another DB context over here in a different test it will use that same",
    "start": "3015200",
    "end": "3022119"
  },
  {
    "text": "database which isn't quite what we want for for test but at least that's what",
    "start": "3022119",
    "end": "3028079"
  },
  {
    "text": "some people think but in reality it is I need to be able to call the way I would use this is I call into a component",
    "start": "3028079",
    "end": "3034720"
  },
  {
    "text": "that's in my application that uses the ntity framework it's going to instantiate a DB context and it's",
    "start": "3034720",
    "end": "3040200"
  },
  {
    "text": "writing data it has no idea that this is just in memory but once my application",
    "start": "3040200",
    "end": "3045319"
  },
  {
    "text": "component is finished in my unit test I want to be able to instantiate a DB context and query that inmemory data",
    "start": "3045319",
    "end": "3052079"
  },
  {
    "text": "that it's stored and and so that scenario works every DB context you create will use the",
    "start": "3052079",
    "end": "3057520"
  },
  {
    "text": "same inmemory database but you can can can clear out that database between",
    "start": "3057520",
    "end": "3062760"
  },
  {
    "text": "tests what you need to do is just configure things correctly",
    "start": "3062760",
    "end": "3069480"
  },
  {
    "text": "with the um internal service provider so that",
    "start": "3069480",
    "end": "3074520"
  },
  {
    "text": "every time you when you explicitly ask for it excuse me this class that I have set up DB",
    "start": "3074520",
    "end": "3080960"
  },
  {
    "text": "instance it will create a new DB context for me that will reboot the IM inmemory",
    "start": "3080960",
    "end": "3087359"
  },
  {
    "text": "database that's being used so clear it out between tests and that's why back here in this unit",
    "start": "3087359",
    "end": "3092520"
  },
  {
    "start": "3090000",
    "end": "3111000"
  },
  {
    "text": "test I will just construct a new instance every time this class is created therefore every unit test will",
    "start": "3092520",
    "end": "3099359"
  },
  {
    "text": "have a new in-memory database to work with if that makes",
    "start": "3099359",
    "end": "3104440"
  },
  {
    "text": "sense so where I'm going with all of this is that the combination of the asp.net core test",
    "start": "3104440",
    "end": "3111119"
  },
  {
    "text": "host and the EF inmemory provider actually gives me the ability to write",
    "start": "3111119",
    "end": "3117920"
  },
  {
    "text": "some what some a lot of people would consider integration tests so I'm going to instantiate my entire application or",
    "start": "3117920",
    "end": "3125839"
  },
  {
    "start": "3118000",
    "end": "3172000"
  },
  {
    "text": "maybe instantiate my entire controller and I'm not going to try to mock anything out or fake or stub anything",
    "start": "3125839",
    "end": "3131240"
  },
  {
    "text": "out I'm just going to use this inmemory EF provider so that when I tell my controller to create something",
    "start": "3131240",
    "end": "3139839"
  },
  {
    "text": "I'm going to go in and make sure that thing got into the database somehow so is that a unit test no it's",
    "start": "3139839",
    "end": "3146839"
  },
  {
    "text": "more of an integration test it's the controller that's going to use mediator and it's going to use a command Handler and all these things are going to be",
    "start": "3146839",
    "end": "3152480"
  },
  {
    "text": "going on but it's very little code to give me a reasonably High expectation",
    "start": "3152480",
    "end": "3158040"
  },
  {
    "text": "that my application is actually working because it's exercising the whole thing and really the point of unit testing",
    "start": "3158040",
    "end": "3163839"
  },
  {
    "text": "controllers when you use mediator there's almost no point they're just orchestrators at that point they just pan messages around so this gives me a",
    "start": "3163839",
    "end": "3170720"
  },
  {
    "text": "nice highle view of is my application working or not and now just a few simple",
    "start": "3170720",
    "end": "3175880"
  },
  {
    "start": "3172000",
    "end": "3176000"
  },
  {
    "text": "tips about sharp code so if you're using net core and you want to go cross platform um simple tip would be always",
    "start": "3175880",
    "end": "3183319"
  },
  {
    "start": "3176000",
    "end": "3196000"
  },
  {
    "text": "use environment. new line instead of hardcoding a SLR or slrn because that'll work across",
    "start": "3183319",
    "end": "3188839"
  },
  {
    "text": "platforms always use path. combine when you're building up a path name to a file",
    "start": "3188839",
    "end": "3194160"
  },
  {
    "text": "that's on the file system and be aware of the different Environ environment variable names that",
    "start": "3194160",
    "end": "3200960"
  },
  {
    "start": "3196000",
    "end": "3210000"
  },
  {
    "text": "are used on Linux versus Mac OS versus Windows like if you want to get the home environment uh I'll get the home",
    "start": "3200960",
    "end": "3207400"
  },
  {
    "text": "directory for a user and then last thing kind of unrelated to this I've started to have",
    "start": "3207400",
    "end": "3215160"
  },
  {
    "start": "3210000",
    "end": "3323000"
  },
  {
    "text": "an intense dislike for the convention of applying the async suffix to an async",
    "start": "3215160",
    "end": "3221040"
  },
  {
    "text": "method does anyone else have that dislike at least one person so I think",
    "start": "3221040",
    "end": "3226760"
  },
  {
    "text": "it's useful if you have Legacy code that has synchronous methods so a method like",
    "start": "3226760",
    "end": "3234440"
  },
  {
    "text": "um get account and now moving forward you need to provide two different methods you need",
    "start": "3234440",
    "end": "3239920"
  },
  {
    "text": "to keep that synchronous method there so you don't break old clients but you need to provide an asynchronous version for",
    "start": "3239920",
    "end": "3245240"
  },
  {
    "text": "people that want to do async programming so fine add a get account async method",
    "start": "3245240",
    "end": "3251200"
  },
  {
    "text": "because they'll only differ in the return type and we all know you can't overload C methods just based on the return type but if you're not in that",
    "start": "3251200",
    "end": "3257880"
  },
  {
    "text": "situation you're building a brand new API something that does a sign out tenant I don't want to see the async",
    "start": "3257880",
    "end": "3263480"
  },
  {
    "text": "suffix there I can look at this method and see it returns a t and that's enough for me to know that it's asynchronous",
    "start": "3263480",
    "end": "3270319"
  },
  {
    "text": "and I I really think this boils down to and well and there you can see the Microsoft IPI s out aing this really",
    "start": "3270319",
    "end": "3277720"
  },
  {
    "text": "boils down to I saw this blog post a couple months ago about a talk that um be strw did on Channel 9 where he said",
    "start": "3277720",
    "end": "3285960"
  },
  {
    "text": "when I'm designing this C++ language for new PE for new features people insist on loud explicit syntax and I think when",
    "start": "3285960",
    "end": "3293200"
  },
  {
    "text": "async await was introduced in C we wanted loud explicit syntax to say this is an async method but we've reached the",
    "start": "3293200",
    "end": "3300480"
  },
  {
    "text": "point now that this is pretty much an established feature you know there's a lot of people building apis now where they don't offer synchronous methods",
    "start": "3300480",
    "end": "3306880"
  },
  {
    "text": "they're all it's only async and I would rather have the tur notation and not have to type out sign out tenant user",
    "start": "3306880",
    "end": "3315559"
  },
  {
    "text": "async in fact I wish there was an easy way to get rid of task and the async keyword too but it's just a dream",
    "start": "3315559",
    "end": "3323240"
  },
  {
    "start": "3323000",
    "end": "3348000"
  },
  {
    "text": "anyway that's all I have in a couple hopefully within a couple of weeks I'm going to list all these things out in a",
    "start": "3323240",
    "end": "3329240"
  },
  {
    "text": "blog post so maybe with with links so if you want to find out more information because I zip through these things too",
    "start": "3329240",
    "end": "3335319"
  },
  {
    "text": "fast but otherwise feel free to send me an email and I guess I have a few minutes for",
    "start": "3335319",
    "end": "3342440"
  },
  {
    "text": "questions okay I'll be hanging out thank you for",
    "start": "3342680",
    "end": "3347119"
  },
  {
    "text": "coming",
    "start": "3347880",
    "end": "3350880"
  }
]