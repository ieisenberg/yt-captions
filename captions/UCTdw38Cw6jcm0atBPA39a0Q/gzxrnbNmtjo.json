[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "all right good morning everyone and thank you for coming to my session today",
    "start": "5520",
    "end": "13459"
  },
  {
    "text": "today we're gonna to spend this session talking about consumer driven contracts",
    "start": "13459",
    "end": "18750"
  },
  {
    "text": "and how it can give you as a developer the confidence you need to deploy code",
    "start": "18750",
    "end": "24780"
  },
  {
    "text": "to production so my name is Henrik I am working as a consultant for a Nordic",
    "start": "24780",
    "end": "31289"
  },
  {
    "text": "consultancy firm called knowit I'm currently living in Lyon in France and",
    "start": "31289",
    "end": "36449"
  },
  {
    "text": "I'm delighted that I get to be come all the way here to speak to all of you about this really amazing topic so today",
    "start": "36449",
    "end": "45750"
  },
  {
    "text": "I would like to start this session about to talk about the problem so this is an",
    "start": "45750",
    "end": "53640"
  },
  {
    "start": "50000",
    "end": "208000"
  },
  {
    "text": "example illustration of a micro service architecture we'd only a handful of services and each square represents a",
    "start": "53640",
    "end": "62070"
  },
  {
    "text": "micro service and all lines are possible communication between them meaning that one service may use API served by the",
    "start": "62070",
    "end": "69420"
  },
  {
    "text": "other so this hair is a problem in a market service architecture we may have",
    "start": "69420",
    "end": "75689"
  },
  {
    "text": "an unknown number of smaller services working together as a connected system",
    "start": "75689",
    "end": "80759"
  },
  {
    "text": "and this type of architecture makes each individual service easy to develop to",
    "start": "80759",
    "end": "86700"
  },
  {
    "text": "build and deploy but these services may or may not communicate with each other",
    "start": "86700",
    "end": "93539"
  },
  {
    "text": "and there is no good way of knowing or making sure that changes you make in",
    "start": "93539",
    "end": "99450"
  },
  {
    "text": "application a will not change the behavior in any of the connected services and there's actually no good",
    "start": "99450",
    "end": "106889"
  },
  {
    "text": "way of knowing which of these services are communicating with it or with each other at all so application a could for",
    "start": "106889",
    "end": "114090"
  },
  {
    "text": "all we know serve data to all five on the connected services on this illustration or it could serve to none",
    "start": "114090",
    "end": "120090"
  },
  {
    "text": "so we have good no good way of knowing so the problem can be extrapolated to",
    "start": "120090",
    "end": "126630"
  },
  {
    "text": "this how can I confidently deploy a new version of my service",
    "start": "126630",
    "end": "133370"
  },
  {
    "text": "so I first started thinking about this problem when I started working as a junior developer three years ago because",
    "start": "133370",
    "end": "140599"
  },
  {
    "text": "in 2015 I was hired as consultant to work on an old monolithic application",
    "start": "140599",
    "end": "145670"
  },
  {
    "text": "and every time I made code changes I could run a whole suite of tests that",
    "start": "145670",
    "end": "151970"
  },
  {
    "text": "gave me some assurance that I had not broken any of the internal functionality",
    "start": "151970",
    "end": "157069"
  },
  {
    "text": "in this application but we were starting to provide an increasing amount of",
    "start": "157069",
    "end": "162500"
  },
  {
    "text": "external REST API and I could never be certain that I did not break any of these external applications that was",
    "start": "162500",
    "end": "169519"
  },
  {
    "text": "depending on this monolith so we jump to late 2016 and my team was given the task",
    "start": "169519",
    "end": "176959"
  },
  {
    "text": "of rebuilding this monolithic application into smaller and more manageable services and while doing this",
    "start": "176959",
    "end": "184340"
  },
  {
    "text": "we realized that all existing tests were impossible to port and I was now left",
    "start": "184340",
    "end": "191209"
  },
  {
    "text": "without any certainty that changes I'm a major single application would not have",
    "start": "191209",
    "end": "197060"
  },
  {
    "text": "dire consequences to the system so the question became even more relevant how",
    "start": "197060",
    "end": "202970"
  },
  {
    "text": "can I confident to deploy a new version of my service so if we take a look at",
    "start": "202970",
    "end": "213200"
  },
  {
    "start": "208000",
    "end": "517000"
  },
  {
    "text": "the micro service illustration once more we can see that we don't need many services before such illustration",
    "start": "213200",
    "end": "218510"
  },
  {
    "text": "becomes very messy and or unorganized and market service systems can be composed of a handful of services or it",
    "start": "218510",
    "end": "225470"
  },
  {
    "text": "can in extreme cases be more than a thousand services like it is at Netflix or uber so how can I as a developer be",
    "start": "225470",
    "end": "233120"
  },
  {
    "text": "confident that I won't break any services if we have a thousand interconnected applications so the real",
    "start": "233120",
    "end": "239629"
  },
  {
    "text": "question is how do we avoid dependencies in a system and the answer to this",
    "start": "239629",
    "end": "245090"
  },
  {
    "text": "question is fairly simple its API versioning API versioning is a great tool used to decouple dependent micro",
    "start": "245090",
    "end": "252260"
  },
  {
    "text": "services that I hope that you all use for your current projects by supporting multiple versions of an API makes makes",
    "start": "252260",
    "end": "260780"
  },
  {
    "text": "further development possible by removing all the limitations you might have from existing users of the API",
    "start": "260780",
    "end": "267940"
  },
  {
    "text": "unfortunately we will risk having to develop and maintain a limitless amount of API versions unless we know when to",
    "start": "267940",
    "end": "276260"
  },
  {
    "text": "create new versions and when we can remove all ones so this next",
    "start": "276260",
    "end": "282020"
  },
  {
    "text": "illustration showed the relationship between an API provider and its",
    "start": "282020",
    "end": "288680"
  },
  {
    "text": "consumers so when a provider service creates and documents an API they are",
    "start": "288680",
    "end": "294949"
  },
  {
    "text": "really creating a contract stating to any consumers that wants to use their",
    "start": "294949",
    "end": "300289"
  },
  {
    "text": "API and this contract states this is how you can and should use the services that",
    "start": "300289",
    "end": "307100"
  },
  {
    "text": "I'm offering and when the provider wants to apply some changes to their service",
    "start": "307100",
    "end": "313669"
  },
  {
    "text": "it is their responsibility to make sure that any changes to the API do not break",
    "start": "313669",
    "end": "319430"
  },
  {
    "text": "any consumers so the provider needs to make sure that they do not breach their",
    "start": "319430",
    "end": "324650"
  },
  {
    "text": "own service contract so to decouple the provider from the consumer we need to",
    "start": "324650",
    "end": "331190"
  },
  {
    "text": "use API versioning and when a breaking change occur at the provider the",
    "start": "331190",
    "end": "337430"
  },
  {
    "text": "developers will need to create a new API version but how do we know that we have",
    "start": "337430",
    "end": "343460"
  },
  {
    "text": "a breaking change so one bad solution that comes to mind is that you could",
    "start": "343460",
    "end": "349070"
  },
  {
    "text": "start an instance of the provider application and then run integration tests from all the consumers to that",
    "start": "349070",
    "end": "356660"
  },
  {
    "text": "local instance but this will only work if the consumer actually have",
    "start": "356660",
    "end": "361849"
  },
  {
    "text": "integration tests to your provider and that is not guaranteed at all and this",
    "start": "361849",
    "end": "369919"
  },
  {
    "text": "is also depending on you knowing how to find download and start every consumer",
    "start": "369919",
    "end": "376550"
  },
  {
    "text": "that uses your application and I bet that most of you have no proper way of",
    "start": "376550",
    "end": "382940"
  },
  {
    "text": "knowing each and every application that is using services that you provide from",
    "start": "382940",
    "end": "389240"
  },
  {
    "text": "one of your applications so we need to find a better way of discovering breaches in existing API contracts and a",
    "start": "389240",
    "end": "397849"
  },
  {
    "text": "possible solution to this issue it's consumer-driven contracts so",
    "start": "397849",
    "end": "403379"
  },
  {
    "text": "consumer-driven contracts is a testing paradigm where providers of an api",
    "start": "403379",
    "end": "408439"
  },
  {
    "text": "encourages consumers to write integration tests for them and in return",
    "start": "408439",
    "end": "415289"
  },
  {
    "text": "the consumer can be certain that the provider will not make any unwanted changes to the part of the api that the",
    "start": "415289",
    "end": "423629"
  },
  {
    "text": "consumer is using so consumer giving contracts tests are exactly like",
    "start": "423629",
    "end": "429030"
  },
  {
    "text": "integration tests but they're not the runnable from the provider side of the",
    "start": "429030",
    "end": "434819"
  },
  {
    "text": "equation and I will show you all this in code demo so this illustration has so",
    "start": "434819",
    "end": "444060"
  },
  {
    "text": "far described the relationship between a provider and a consumer as unidirectional from the provider to the",
    "start": "444060",
    "end": "450599"
  },
  {
    "text": "consumer but to have a healthy relationship between these two applications we need to expand it to",
    "start": "450599",
    "end": "457349"
  },
  {
    "text": "also include consumer contracts and when the consumer rights consumer contracts",
    "start": "457349",
    "end": "463349"
  },
  {
    "text": "they are essentially telling the provider that this is how I am using",
    "start": "463349",
    "end": "468830"
  },
  {
    "text": "your API so the provider will now have access to information about which",
    "start": "468830",
    "end": "475740"
  },
  {
    "text": "consumer is using their application which endpoints or parts of the API that",
    "start": "475740",
    "end": "481349"
  },
  {
    "text": "are using and how they're using it and this is essential information to needed",
    "start": "481349",
    "end": "489389"
  },
  {
    "text": "to be able to reduce the number of API versions and to ensure stable services",
    "start": "489389",
    "end": "494550"
  },
  {
    "text": "to the consumer so we need to know who is using your API what parts are they",
    "start": "494550",
    "end": "500460"
  },
  {
    "text": "are using and how they're using them and with consumer driven contracts all these",
    "start": "500460",
    "end": "506490"
  },
  {
    "text": "questions will be answered",
    "start": "506490",
    "end": "509569"
  },
  {
    "text": "but how do we do consumer-driven contracts in practice well we can do it",
    "start": "512360",
    "end": "519750"
  },
  {
    "text": "by using packed so packed is a framework for implementing consumer-driven",
    "start": "519750",
    "end": "524759"
  },
  {
    "text": "contracts into your applications and it is this framework that I've been using",
    "start": "524759",
    "end": "529800"
  },
  {
    "text": "for the co demo that I will show you later PAC makes it very easy for consumers to write consumer contracts or",
    "start": "529800",
    "end": "537319"
  },
  {
    "text": "pacts as they call them for short and it does so by because it has multi-language",
    "start": "537319",
    "end": "544440"
  },
  {
    "text": "support for creating pacts this means that you can create packs using the same",
    "start": "544440",
    "end": "549750"
  },
  {
    "text": "programming language as you already do in your application so packet currently",
    "start": "549750",
    "end": "554759"
  },
  {
    "text": "supports languages like dotnet Java Copland Scala ruby swift go JavaScript",
    "start": "554759",
    "end": "560160"
  },
  {
    "text": "so it's very versatile packed is also",
    "start": "560160",
    "end": "565290"
  },
  {
    "text": "language independent in the verification process and this is great because it",
    "start": "565290",
    "end": "570720"
  },
  {
    "text": "that lets consumers who write applications using dotnet write integration tests using that programming",
    "start": "570720",
    "end": "577649"
  },
  {
    "text": "language even though the provider is using Java and it's easy to share",
    "start": "577649",
    "end": "585660"
  },
  {
    "text": "packets between consumers and providers since pact has created a pact broker",
    "start": "585660",
    "end": "590670"
  },
  {
    "text": "which is an application that consumers can upload their packets to and where",
    "start": "590670",
    "end": "595920"
  },
  {
    "text": "providers can download them when they need to verify pacts so this air is just",
    "start": "595920",
    "end": "603060"
  },
  {
    "text": "a simple screenshot from the from a of a single packet from the PAC broker and",
    "start": "603060",
    "end": "609870"
  },
  {
    "text": "the PAC program presents the pact in a more readable format and I will show me more about this so we can now take a",
    "start": "609870",
    "end": "618810"
  },
  {
    "text": "look at how consumer-driven contracts is done using pact so we can use the same model as before where step one is that",
    "start": "618810",
    "end": "625680"
  },
  {
    "text": "the provider documents our API and exposes this documentation to all aspiring consumers step two when the",
    "start": "625680",
    "end": "633810"
  },
  {
    "text": "consumer integrates that API to their service they write tests to verify that",
    "start": "633810",
    "end": "639089"
  },
  {
    "text": "they are in compliance with API specification step3 the consumer can now generate",
    "start": "639089",
    "end": "645220"
  },
  {
    "text": "packs from from these tests and these packs are the service contract from the",
    "start": "645220",
    "end": "651670"
  },
  {
    "text": "consumer to the provider and these packs contains the information about the",
    "start": "651670",
    "end": "657459"
  },
  {
    "text": "endpoints that are using what they today from the endpoint they're interested in so in short the consumer is now telling",
    "start": "657459",
    "end": "664449"
  },
  {
    "text": "the provider this is how I'm using your API and the last step is the packet",
    "start": "664449",
    "end": "671709"
  },
  {
    "text": "verification step and the provider can now use these packets during development",
    "start": "671709",
    "end": "676990"
  },
  {
    "text": "and perform a packet verification task to make sure that the application is still serving the correct endpoint and",
    "start": "676990",
    "end": "684040"
  },
  {
    "text": "the same data from these endpoints as it did before so the provider is now able",
    "start": "684040",
    "end": "689649"
  },
  {
    "text": "to verify that the consumer will not break after a code change in the",
    "start": "689649",
    "end": "695470"
  },
  {
    "text": "provider is deployed to production so I",
    "start": "695470",
    "end": "701529"
  },
  {
    "text": "also need to take a minute to talk about contract tests verson versus integration tests because they are very similar",
    "start": "701529",
    "end": "708990"
  },
  {
    "text": "contract tests are very similar to integration tests but contract test does",
    "start": "708990",
    "end": "714550"
  },
  {
    "text": "not suffer for what I like to call the integration test hell so an integration",
    "start": "714550",
    "end": "720459"
  },
  {
    "text": "test hell is a combination of some inherent problem with integration tests",
    "start": "720459",
    "end": "725939"
  },
  {
    "text": "so first of all integration tests are hard to run because they are dependent",
    "start": "725939",
    "end": "731559"
  },
  {
    "text": "on having an existing environment to run in or they depend on the developer to",
    "start": "731559",
    "end": "736990"
  },
  {
    "text": "install and run all necessary applications and databases in a local development environment because you need",
    "start": "736990",
    "end": "743889"
  },
  {
    "text": "to perform requests to a running instance of someone else's application and integration tests might also fail",
    "start": "743889",
    "end": "752910"
  },
  {
    "text": "for unknown reasons there might be a network issue while running the test and",
    "start": "752910",
    "end": "758470"
  },
  {
    "text": "they will fail even though they should have been successful and these two",
    "start": "758470",
    "end": "764249"
  },
  {
    "text": "problems will together create a third and that is developers are lazy so",
    "start": "764249",
    "end": "772259"
  },
  {
    "text": "developers are lazy and they will ignore and rely tests especially during development so",
    "start": "772290",
    "end": "780110"
  },
  {
    "text": "I've seen a trend that has been happening where we have integration tests that are using dummy clients and",
    "start": "780110",
    "end": "787829"
  },
  {
    "text": "stubbed data so normally an integration test should be an actual call from your",
    "start": "787829",
    "end": "793799"
  },
  {
    "text": "application to the API provider and a real request will be sent and if to provide a response we will perform some",
    "start": "793799",
    "end": "800040"
  },
  {
    "text": "validation on that response but this will be converted to something like this",
    "start": "800040",
    "end": "805350"
  },
  {
    "text": "when using stub data so instead of actually using a real client the test is",
    "start": "805350",
    "end": "811350"
  },
  {
    "text": "now using a stub and this does not really make sense because in this scenario the integration test will not",
    "start": "811350",
    "end": "818399"
  },
  {
    "text": "actually achieve anything because we are both using the Adamic client and we're",
    "start": "818399",
    "end": "823889"
  },
  {
    "text": "using a dummy response an integration test using mocks and stubs will in fact",
    "start": "823889",
    "end": "829410"
  },
  {
    "text": "be stale the second that you complete writing it because the mock response",
    "start": "829410",
    "end": "834839"
  },
  {
    "text": "that you are providing in your test is only a snapshot of how the provider used",
    "start": "834839",
    "end": "841049"
  },
  {
    "text": "to work one time in the past but this",
    "start": "841049",
    "end": "847139"
  },
  {
    "text": "illustration is actually a good representation of what a contract test looks like on the consumer side because",
    "start": "847139",
    "end": "854730"
  },
  {
    "text": "the consumer will provide the request that they want to send to the provider and their expectations of what that",
    "start": "854730",
    "end": "862649"
  },
  {
    "text": "response should look like from the provider so the consumer application",
    "start": "862649",
    "end": "868259"
  },
  {
    "text": "will only work on dummy data and test doubles and the real testing will happen",
    "start": "868259",
    "end": "873929"
  },
  {
    "text": "on the provider side instead so the consumer will write consumer contracts",
    "start": "873929",
    "end": "879990"
  },
  {
    "text": "expose their expectations to the provider by for example uploading it to the PAC broker and then the provider can",
    "start": "879990",
    "end": "887790"
  },
  {
    "text": "download them and perform live requests to the running instance of their application so the consumer has already",
    "start": "887790",
    "end": "896129"
  },
  {
    "text": "provided the contract that tells what the request should look like and what",
    "start": "896129",
    "end": "901139"
  },
  {
    "text": "the response should be and you can now verify that behavior and by separating",
    "start": "901139",
    "end": "907110"
  },
  {
    "text": "the creation task on the consumer side and the verification task on the provider side",
    "start": "907110",
    "end": "912869"
  },
  {
    "text": "we escape the integration test health so",
    "start": "912869",
    "end": "918569"
  },
  {
    "start": "917000",
    "end": "949000"
  },
  {
    "text": "we're going to jump into the demo and in this demo we we imagine that we have a",
    "start": "918569",
    "end": "924839"
  },
  {
    "text": "system composed of a lot of services but we are only going to look at the relationship between service a and",
    "start": "924839",
    "end": "931319"
  },
  {
    "text": "service B",
    "start": "931319",
    "end": "934428"
  },
  {
    "start": "949000",
    "end": "1079000"
  },
  {
    "text": "okay so we will start by looking at the endpoint that we're going to work",
    "start": "949210",
    "end": "956260"
  },
  {
    "text": "against so we have a create person endpoint that",
    "start": "956260",
    "end": "962860"
  },
  {
    "text": "is on slash person one person that's a path and it takes a person object as",
    "start": "962860",
    "end": "970240"
  },
  {
    "text": "input the person object is plain simple it has an ID which is an integer and it",
    "start": "970240",
    "end": "977380"
  },
  {
    "text": "has name social security number and address that are strings and then we",
    "start": "977380",
    "end": "983530"
  },
  {
    "text": "store this personal object in the database we assign it a new ID and we're",
    "start": "983530",
    "end": "989560"
  },
  {
    "text": "returning back to the consumer with the HTTP status of 201 for creative that's",
    "start": "989560",
    "end": "996640"
  },
  {
    "text": "everything we're going to work with for now so the first thing I'm going to do",
    "start": "996640",
    "end": "1004950"
  },
  {
    "text": "I'm going to show you a simple integration test so I'm gonna uh ignore this one and I'm gonna try to run it",
    "start": "1004950",
    "end": "1013550"
  },
  {
    "text": "so this test failed and why did it fail well if we take a look at the error",
    "start": "1018259",
    "end": "1026220"
  },
  {
    "text": "message it has connection refused because the provider application is not",
    "start": "1026220",
    "end": "1033750"
  },
  {
    "text": "running so now we have integration test tell I'm not able to test my application because I'm not running the other so I",
    "start": "1033750",
    "end": "1039360"
  },
  {
    "text": "need to start this application not that one",
    "start": "1039360",
    "end": "1044569"
  },
  {
    "text": "and now I could actually test so but",
    "start": "1056990",
    "end": "1062090"
  },
  {
    "text": "this is not the thing that we're gonna look at now I just wanted to show you what integration test hell is I hate it",
    "start": "1062090",
    "end": "1068110"
  },
  {
    "text": "so I'm gonna ignore this test once more because I'm lazy developer of course and",
    "start": "1068110",
    "end": "1074289"
  },
  {
    "text": "we are now going to look at a packed test so in this test I'm just gonna",
    "start": "1074289",
    "end": "1083119"
  },
  {
    "start": "1079000",
    "end": "1140000"
  },
  {
    "text": "create some headers that I want to send so I'm creating the header that says that the content type should be Jason",
    "start": "1083119",
    "end": "1089629"
  },
  {
    "text": "utf-8 value I'm creating a personal object which contains a name and a",
    "start": "1089629",
    "end": "1096470"
  },
  {
    "text": "social security number and then I'm creating the pact so when I'm creating",
    "start": "1096470",
    "end": "1101629"
  },
  {
    "text": "the pact I use a consumer packet builder and I say that I am the consumer called",
    "start": "1101629",
    "end": "1106730"
  },
  {
    "text": "pact consumer which is the name of this application and I want to have a pact",
    "start": "1106730",
    "end": "1111740"
  },
  {
    "text": "with the provider called pact provider which is the name of the provider application and then I give my pact and",
    "start": "1111740",
    "end": "1120049"
  },
  {
    "text": "name so I say that this is the create new person request then I said that I",
    "start": "1120049",
    "end": "1126889"
  },
  {
    "text": "want to make this request to the path version 1 slash person it should be a post I want to send the headers that I",
    "start": "1126889",
    "end": "1134570"
  },
  {
    "text": "just created and I want to body to be the person object that I just created and then I",
    "start": "1134570",
    "end": "1140960"
  },
  {
    "start": "1140000",
    "end": "1197000"
  },
  {
    "text": "say that when I execute this request I expect that the provider application",
    "start": "1140960",
    "end": "1146779"
  },
  {
    "text": "will respond with the with the same headers with the HTTP status of created",
    "start": "1146779",
    "end": "1153019"
  },
  {
    "text": "so 201 and with the following body and here we're doing some nice things so",
    "start": "1153019",
    "end": "1160789"
  },
  {
    "text": "what I'm saying here is that I want the body that is gonna be returned to have a",
    "start": "1160789",
    "end": "1166340"
  },
  {
    "text": "field called name which should be of type string and have the same value as",
    "start": "1166340",
    "end": "1172340"
  },
  {
    "text": "in the person object I just created so expecting the name to be the same when I it returns I do the same for Social",
    "start": "1172340",
    "end": "1180200"
  },
  {
    "text": "Security number I want that to be the same when it comes back and then I say and I want an integer type so I want the",
    "start": "1180200",
    "end": "1186320"
  },
  {
    "text": "ID that's gonna be returned to be of type integer but I don't care about the value because",
    "start": "1186320",
    "end": "1191690"
  },
  {
    "text": "I cannot dictate what the value of the idea will be so I'm just saying that I expect it to be an integer and then I",
    "start": "1191690",
    "end": "1198919"
  },
  {
    "start": "1197000",
    "end": "1264000"
  },
  {
    "text": "create the pact and then we run this test on the consumer side by using a",
    "start": "1198919",
    "end": "1207320"
  },
  {
    "text": "mock server so we're using a dummy client and stub the data and we're",
    "start": "1207320",
    "end": "1214669"
  },
  {
    "text": "creating the pact so also for this demo",
    "start": "1214669",
    "end": "1220429"
  },
  {
    "text": "I have added a Gradle task that is called pact publish and I said that when",
    "start": "1220429",
    "end": "1226130"
  },
  {
    "text": "I build this application I want to upload this pact to the pact broker",
    "start": "1226130",
    "end": "1233950"
  },
  {
    "text": "so I now want to build the consumer application so build was successful and",
    "start": "1237900",
    "end": "1249720"
  },
  {
    "text": "you can also see here that we have the task pack publish which published the",
    "start": "1249720",
    "end": "1255330"
  },
  {
    "text": "pact consumer to pack provider dot JSON file to the pack broker with an HTTP",
    "start": "1255330",
    "end": "1260820"
  },
  {
    "text": "status of 201 because I created a new pact so now we can jump to the pact",
    "start": "1260820",
    "end": "1266610"
  },
  {
    "start": "1264000",
    "end": "1303000"
  },
  {
    "text": "broker and have a look at it so this is the main screen of the pact broker I can",
    "start": "1266610",
    "end": "1273360"
  },
  {
    "text": "take and reload it and we can now see that we have one pact which is from the",
    "start": "1273360",
    "end": "1278370"
  },
  {
    "text": "consumer pack in Sumer to the pack provider and this pact or has one",
    "start": "1278370",
    "end": "1284280"
  },
  {
    "text": "interaction it's a create new person request and we can see that we want to perform a pose to version 1 slash person",
    "start": "1284280",
    "end": "1291120"
  },
  {
    "text": "with this body as the request body and then we expect the pack provider to",
    "start": "1291120",
    "end": "1297300"
  },
  {
    "text": "respond with HTTPS that is 201 headers and a matching body another cool thing",
    "start": "1297300",
    "end": "1304410"
  },
  {
    "start": "1303000",
    "end": "1343000"
  },
  {
    "text": "it's not gonna be as cool in this demo because I only have two applications running but using the pack broker you",
    "start": "1304410",
    "end": "1310920"
  },
  {
    "text": "can also get predefined dependency graphs so you can see every interaction that you have in your micro service",
    "start": "1310920",
    "end": "1317490"
  },
  {
    "text": "system so if I click on the packed consumer I can now see that the PAC",
    "start": "1317490",
    "end": "1322590"
  },
  {
    "text": "consumer uses the packed provider application and if you have loads of",
    "start": "1322590",
    "end": "1329030"
  },
  {
    "text": "applications running you can see all the interactions okay so we have the packed",
    "start": "1329030",
    "end": "1337650"
  },
  {
    "text": "we have uploaded it to the PAC broker and now I want to verify this pact so",
    "start": "1337650",
    "end": "1344309"
  },
  {
    "start": "1343000",
    "end": "1410000"
  },
  {
    "text": "we're gonna go to the pact verification test so this is all the code I need to perform a simple packet verification",
    "start": "1344309",
    "end": "1350280"
  },
  {
    "text": "test so what I'm saying here is that I am the application called PAC provider I",
    "start": "1350280",
    "end": "1355820"
  },
  {
    "text": "and I want to get all my PACs from the PAC broker located at localhost port",
    "start": "1355820",
    "end": "1361080"
  },
  {
    "text": "3000 and then I I'm and then I'm starting a test target here and to",
    "start": "1361080",
    "end": "1366480"
  },
  {
    "text": "explain that we are supposed to run live requests",
    "start": "1366480",
    "end": "1371730"
  },
  {
    "text": "so we are actually starting the application and performing these requests so I'm using this test target",
    "start": "1371730",
    "end": "1378600"
  },
  {
    "text": "to say that my application will be at port 8 8 8 8 so I can now try and verify",
    "start": "1378600",
    "end": "1388429"
  },
  {
    "text": "the pacts so the pattern the test passed",
    "start": "1388429",
    "end": "1397850"
  },
  {
    "text": "you can see that I verified a pact between pact consumer impact provider the create new person request it had the",
    "start": "1397850",
    "end": "1404909"
  },
  {
    "text": "correct status code it had the same headers and it had a matching body so everything is ok so now I want to do add",
    "start": "1404909",
    "end": "1413130"
  },
  {
    "start": "1410000",
    "end": "1494000"
  },
  {
    "text": "another pact so I'm going to go back to the tact pact consumer and I'm gonna",
    "start": "1413130",
    "end": "1423539"
  },
  {
    "text": "load it in step 2 so in step 2 we have added another endpoint for the client so",
    "start": "1423539",
    "end": "1433169"
  },
  {
    "text": "we're saying that I want to helper form a get person request and which is a",
    "start": "1433169",
    "end": "1438899"
  },
  {
    "text": "request to the version 1 slash person slash ID because I want to get a single person and then I'm gonna create this",
    "start": "1438899",
    "end": "1446639"
  },
  {
    "text": "pact so again I'm saying I want to have these headers and I'm using the consumer",
    "start": "1446639",
    "end": "1452220"
  },
  {
    "text": "packet builder to say that I am the pact consumer and I want to have a pact with tax provider and then we set a state so",
    "start": "1452220",
    "end": "1461490"
  },
  {
    "text": "I'm saying that as long as a person with ID equals 1 exists in the database we",
    "start": "1461490",
    "end": "1467429"
  },
  {
    "text": "want to perform this pact so and then we gave it a name get person with ID equals",
    "start": "1467429",
    "end": "1473250"
  },
  {
    "text": "1 request and we do the same thing as we did before so we're just creating a pact doing some",
    "start": "1473250",
    "end": "1479850"
  },
  {
    "text": "verification and and that's it",
    "start": "1479850",
    "end": "1485960"
  },
  {
    "text": "so I'm rebuilding the application and uploading the pact so that was",
    "start": "1487710",
    "end": "1495370"
  },
  {
    "start": "1494000",
    "end": "1544000"
  },
  {
    "text": "successful the pact was updated and another thing that we forgot many I forgot to mention is that we can see the",
    "start": "1495370",
    "end": "1503890"
  },
  {
    "text": "status of the pact so right now this pact has the status of changed that",
    "start": "1503890",
    "end": "1510550"
  },
  {
    "text": "means that the pact was earlier verified but has been changed so you need to",
    "start": "1510550",
    "end": "1516040"
  },
  {
    "text": "trigger a new verification or perform a new verification on the provider side so",
    "start": "1516040",
    "end": "1521500"
  },
  {
    "text": "if we go back to the provider and we want to perform the new verification and",
    "start": "1521500",
    "end": "1534070"
  },
  {
    "text": "we can now see that this failed and why does it fail so they create a new person",
    "start": "1534070",
    "end": "1539140"
  },
  {
    "text": "request is still okay but the new pact is not so what we'll see here is that we",
    "start": "1539140",
    "end": "1547179"
  },
  {
    "start": "1544000",
    "end": "1644000"
  },
  {
    "text": "did not find a test class annotated with at state because we are not handling",
    "start": "1547179",
    "end": "1553570"
  },
  {
    "text": "this new state so states are the",
    "start": "1553570",
    "end": "1558730"
  },
  {
    "text": "consumer is expecting something to be in the database but that will not be there",
    "start": "1558730",
    "end": "1564400"
  },
  {
    "text": "so I will have to add it so this is a manual process that I will have to do so",
    "start": "1564400",
    "end": "1569500"
  },
  {
    "text": "I can go back to the pact verification test and I can add the state I can say",
    "start": "1569500",
    "end": "1574510"
  },
  {
    "text": "public void and person so what I want to",
    "start": "1574510",
    "end": "1582760"
  },
  {
    "text": "do here is that I want to prepare the data necessary to perform this pact verification so what I want to do I want",
    "start": "1582760",
    "end": "1589720"
  },
  {
    "text": "to create a new person with a name of",
    "start": "1589720",
    "end": "1596580"
  },
  {
    "text": "test and social security number of one to",
    "start": "1596580",
    "end": "1603500"
  },
  {
    "text": "three and then I need to add it to the",
    "start": "1603500",
    "end": "1609200"
  },
  {
    "text": "database so I need to add a database loop care just really quick repository",
    "start": "1609200",
    "end": "1619240"
  },
  {
    "text": "and I need to add it to the database so",
    "start": "1619240",
    "end": "1630470"
  },
  {
    "text": "now I have prepared the state so now we can try and re verify the pact",
    "start": "1630470",
    "end": "1637690"
  },
  {
    "start": "1644000",
    "end": "1962000"
  },
  {
    "text": "but it still fails but now it fails because it expected to get a status of",
    "start": "1644110",
    "end": "1651710"
  },
  {
    "text": "200 back but it got a 404 because I have not yet implemented this end point on",
    "start": "1651710",
    "end": "1658010"
  },
  {
    "text": "the provider side so this is a small digression you have something called consumer driven development where you",
    "start": "1658010",
    "end": "1665630"
  },
  {
    "text": "can actually ask your consumers to tell you what they need so right now my",
    "start": "1665630",
    "end": "1672409"
  },
  {
    "text": "consumer told me that they need to be able to get a person from the database",
    "start": "1672409",
    "end": "1677600"
  },
  {
    "text": "and they want to get it by using this endpoint on this path so it's a",
    "start": "1677600",
    "end": "1684230"
  },
  {
    "text": "digression but I wanted to show you show it to you because it is kind of cool if you have many development teams working",
    "start": "1684230",
    "end": "1690230"
  },
  {
    "text": "together so I'm gonna go into the controller here and I'm gonna say that I",
    "start": "1690230",
    "end": "1696230"
  },
  {
    "text": "need to create a get endpoint and I want",
    "start": "1696230",
    "end": "1706820"
  },
  {
    "text": "to have it on / ID after / version 1 / person it should return a person object",
    "start": "1706820",
    "end": "1714320"
  },
  {
    "text": "as it said in the in the packed and get",
    "start": "1714320",
    "end": "1719659"
  },
  {
    "text": "person I need to handle the path variable and then I just want to return",
    "start": "1719659",
    "end": "1730460"
  },
  {
    "text": "the person from the database so I'm gonna just say person repository get and",
    "start": "1730460",
    "end": "1737380"
  },
  {
    "text": "with the ID so now I've added the",
    "start": "1737380",
    "end": "1743510"
  },
  {
    "text": "endpoint and we can try and Reeve Arif I the pact",
    "start": "1743510",
    "end": "1747760"
  },
  {
    "text": "and we're okay so now I know that my application provides the data and endpoint that my",
    "start": "1753460",
    "end": "1761660"
  },
  {
    "text": "consumer is expecting so okay so this was a small digression",
    "start": "1761660",
    "end": "1766820"
  },
  {
    "text": "I want to revert all my changes here and I am gonna show you another thing yeah",
    "start": "1766820",
    "end": "1777770"
  },
  {
    "text": "that can be all changes I'm just gonna",
    "start": "1777770",
    "end": "1787370"
  },
  {
    "text": "re-up load so I only have this one packet so now we're now just gonna work",
    "start": "1787370",
    "end": "1792740"
  },
  {
    "text": "with the create new person packed so we can now go back and see oh okay",
    "start": "1792740",
    "end": "1802370"
  },
  {
    "text": "nevermind forget what I said now I want",
    "start": "1802370",
    "end": "1808430"
  },
  {
    "text": "to make some changes so I have this endpoint create new person it expects a",
    "start": "1808430",
    "end": "1815210"
  },
  {
    "text": "person object it sends it back but I hate abbreviations as a developer yes",
    "start": "1815210",
    "end": "1822500"
  },
  {
    "text": "okay I wrote this program I know that SSN is Social Security number but the",
    "start": "1822500",
    "end": "1828320"
  },
  {
    "text": "next developer might not know that so I hate it so I want to change the name of this field so I'm just gonna have to get",
    "start": "1828320",
    "end": "1840110"
  },
  {
    "text": "this update I'm so sorry about this so I want to update the name of this",
    "start": "1840110",
    "end": "1846970"
  },
  {
    "text": "field to be Social Security number and I",
    "start": "1846970",
    "end": "1857369"
  },
  {
    "text": "need to change it here as well so like",
    "start": "1858509",
    "end": "1864879"
  },
  {
    "text": "this so now I have updated and name of the name of a field and I just want to",
    "start": "1864879",
    "end": "1870749"
  },
  {
    "text": "Rivera Phi that the package is okay so I will run the pact verification tests",
    "start": "1870749",
    "end": "1879299"
  },
  {
    "text": "and it fails and why does it fail well because it does not have a matching body",
    "start": "1884300",
    "end": "1889730"
  },
  {
    "text": "anymore so the error message now says that the field SSN cannot be nil so I",
    "start": "1889730",
    "end": "1895640"
  },
  {
    "text": "changed the name of a field but my consumer expect that field SSN to exist",
    "start": "1895640",
    "end": "1900950"
  },
  {
    "text": "so now I have a problem so I could now see the bug but I need to fix it so I",
    "start": "1900950",
    "end": "1906890"
  },
  {
    "text": "can just say that okay I want it to be social security number in my code but I can say that it should be adjacent",
    "start": "1906890",
    "end": "1913550"
  },
  {
    "text": "property called SSN so during sterilization and de civilization it will be called SSN even though in my",
    "start": "1913550",
    "end": "1919580"
  },
  {
    "text": "code it's called social security number so I can be verify",
    "start": "1919580",
    "end": "1927220"
  },
  {
    "text": "and now everything is ok so I was now able to do a color change in the",
    "start": "1936429",
    "end": "1944149"
  },
  {
    "text": "provider application and I could discover that my change had actually",
    "start": "1944149",
    "end": "1949699"
  },
  {
    "text": "created an error in the system and I could fix it and I never had to perform",
    "start": "1949699",
    "end": "1955549"
  },
  {
    "text": "a live integration test I never had to deploy to a test environment I could all see it during development and that is",
    "start": "1955549",
    "end": "1963739"
  },
  {
    "start": "1962000",
    "end": "2028000"
  },
  {
    "text": "one of the most one of the best things about consumer-driven contracts and pact so now I want to do another change as",
    "start": "1963739",
    "end": "1971029"
  },
  {
    "text": "well so I have a string address and that does not really make sense because an",
    "start": "1971029",
    "end": "1976819"
  },
  {
    "text": "address is so much more than a string so",
    "start": "1976819",
    "end": "1982489"
  },
  {
    "text": "I want to add a new class called address",
    "start": "1982489",
    "end": "1987589"
  },
  {
    "text": "and this should contain a string street",
    "start": "1987589",
    "end": "1993440"
  },
  {
    "text": "name and a string zip code and now I",
    "start": "1993440",
    "end": "2000940"
  },
  {
    "text": "want to change this data type from string to the new address object so now",
    "start": "2000940",
    "end": "2007929"
  },
  {
    "text": "I can try and be verified the packed",
    "start": "2007929",
    "end": "2011878"
  },
  {
    "text": "and this works so I just made a change",
    "start": "2016360",
    "end": "2022850"
  },
  {
    "text": "to the API but I did not break any consumers why didn't I do that well if",
    "start": "2022850",
    "end": "2028970"
  },
  {
    "text": "we take a look at the pact so the create new person request it says that it sends",
    "start": "2028970",
    "end": "2036350"
  },
  {
    "text": "in an object containing the name and the social security number and it expects",
    "start": "2036350",
    "end": "2042740"
  },
  {
    "text": "the same object back with only the name and the social security number so the address field is never used so I only",
    "start": "2042740",
    "end": "2050450"
  },
  {
    "text": "have one consumer this consumer does not care about the address field so I was",
    "start": "2050450",
    "end": "2056480"
  },
  {
    "text": "able to create or apply some changes to it without breaking any of my consumers",
    "start": "2056480",
    "end": "2061629"
  },
  {
    "text": "and this is something that you only know because you have consumer driven contracts okay so what I want to do now",
    "start": "2061630",
    "end": "2072710"
  },
  {
    "start": "2068000",
    "end": "2132000"
  },
  {
    "text": "is that I want to create a new API version so what I've been doing now is",
    "start": "2072710",
    "end": "2078320"
  },
  {
    "text": "I've actually been changing fields in an API and you should not really do that",
    "start": "2078320",
    "end": "2085399"
  },
  {
    "text": "I've just done this now too as an example but you should never do that so",
    "start": "2085400",
    "end": "2091700"
  },
  {
    "text": "what I want to do now is that I want to create a version two of my API so I want",
    "start": "2091700",
    "end": "2102860"
  },
  {
    "text": "to just revert all my changes in my original API so the we should use the",
    "start": "2102860",
    "end": "2110570"
  },
  {
    "text": "SSN fields I should not performing any changes to the names and I will need to",
    "start": "2110570",
    "end": "2117920"
  },
  {
    "text": "add any repository for the new API and I will need to add a new controller for",
    "start": "2117920",
    "end": "2124400"
  },
  {
    "text": "the API",
    "start": "2124400",
    "end": "2126789"
  },
  {
    "text": "so what I want to do now is that I want",
    "start": "2131360",
    "end": "2136650"
  },
  {
    "text": "to have this version two of my API should actually send the social security",
    "start": "2136650",
    "end": "2142520"
  },
  {
    "text": "number field it should not be an abbreviation anymore and then I want to",
    "start": "2142520",
    "end": "2148200"
  },
  {
    "text": "say that my repository should use the new person object and my controller",
    "start": "2148200",
    "end": "2157890"
  },
  {
    "text": "should be on the path version two but it should have the same endpoints and it",
    "start": "2157890",
    "end": "2164340"
  },
  {
    "text": "should use the version two of the repository and it should use the newly",
    "start": "2164340",
    "end": "2170400"
  },
  {
    "text": "created person object okay so",
    "start": "2170400",
    "end": "2178520"
  },
  {
    "text": "okay so I created a new version of the version of the API and I can perform a",
    "start": "2180530",
    "end": "2187220"
  },
  {
    "text": "packet verification task just to make sure that I did not break anything",
    "start": "2187220",
    "end": "2192760"
  },
  {
    "text": "everything is still fine okay so now I want to migrate the consumer so the",
    "start": "2196600",
    "end": "2203540"
  },
  {
    "text": "consumer should now instead of having the SSN field have a field called social security number it should you need to",
    "start": "2203540",
    "end": "2216890"
  },
  {
    "text": "update these two so sorry",
    "start": "2216890",
    "end": "2224390"
  },
  {
    "text": "social security number it's okay in the pact I now need to say that okay we're",
    "start": "2224390",
    "end": "2229970"
  },
  {
    "text": "going to call use diversion to endpoint we're going to do the same it's all the",
    "start": "2229970",
    "end": "2236360"
  },
  {
    "text": "same after that but I need to use the new endpoint so I also need in the client to say that I'm",
    "start": "2236360",
    "end": "2243770"
  },
  {
    "text": "going to use the worst thing to not three but two",
    "start": "2243770",
    "end": "2248470"
  },
  {
    "text": "okay so now I can update oh I'm actually",
    "start": "2251550",
    "end": "2259920"
  },
  {
    "text": "going on have an error here so provider",
    "start": "2259920",
    "end": "2272880"
  },
  {
    "text": "practiced 101 the Java",
    "start": "2272880",
    "end": "2278839"
  },
  {
    "text": "so yeah the error is now that I forgot to bump the version in the pack so my",
    "start": "2279860",
    "end": "2288210"
  },
  {
    "text": "client has the path version two but I'm saying that I want to send a pack to",
    "start": "2288210",
    "end": "2293250"
  },
  {
    "text": "version 1 and if pack discovers that you never perform a request to this path",
    "start": "2293250",
    "end": "2300660"
  },
  {
    "text": "that you have stated here then it will throw an error and say that ok you're not you're not doing what you think",
    "start": "2300660",
    "end": "2306630"
  },
  {
    "text": "you're doing ok we updated our pact and",
    "start": "2306630",
    "end": "2317900"
  },
  {
    "text": "we can now try and see if we are still in compliance with that pact ok we're",
    "start": "2317900",
    "end": "2328920"
  },
  {
    "text": "not I thought we were gonna be so I'm gonna see what's happening here ok so I",
    "start": "2328920",
    "end": "2339690"
  },
  {
    "text": "am no longer providing the real data",
    "start": "2339690",
    "end": "2345270"
  },
  {
    "text": "here from database so I have an endpoint that says that ok when we perform a",
    "start": "2345270",
    "end": "2351690"
  },
  {
    "text": "request to the get person person to get person we want to get a person object",
    "start": "2351690",
    "end": "2357270"
  },
  {
    "text": "from the person repository version 2 but if we take a look at the state that we",
    "start": "2357270",
    "end": "2363540"
  },
  {
    "text": "have here and when a person with ID equals 1 should exist we want to return",
    "start": "2363540",
    "end": "2369360"
  },
  {
    "text": "the person object but we are returning something from we're adding the person",
    "start": "2369360",
    "end": "2375420"
  },
  {
    "text": "to the version 1 of the repository so I need to dump this version as well so",
    "start": "2375420",
    "end": "2383460"
  },
  {
    "text": "I'll have to import personal person that's welcome example",
    "start": "2383460",
    "end": "2393900"
  },
  {
    "text": "could provide their listen to person",
    "start": "2393900",
    "end": "2399660"
  },
  {
    "text": "okay",
    "start": "2401220",
    "end": "2404220"
  },
  {
    "text": "and we need to rename it from SSN to social security number as well okay so",
    "start": "2410190",
    "end": "2422040"
  },
  {
    "text": "we are still in compliance we have now migrated the consumer from version 1 2002 so I should now be able to",
    "start": "2422040",
    "end": "2428400"
  },
  {
    "text": "completely delete version 1 of my API",
    "start": "2428400",
    "end": "2439339"
  },
  {
    "text": "and everything is okay so I was now able to see it to test that all my code",
    "start": "2448650",
    "end": "2456299"
  },
  {
    "text": "changes would in fact work without having to deploy or perform live",
    "start": "2456299",
    "end": "2463890"
  },
  {
    "text": "integration tests or anything it's okay that was the code demo I'm gonna jump",
    "start": "2463890",
    "end": "2469140"
  },
  {
    "text": "back to the presentation I had just a few slides left I want to show you okay",
    "start": "2469140",
    "end": "2480839"
  },
  {
    "start": "2479000",
    "end": "2689000"
  },
  {
    "text": "so what should you have learned from this demo first of all testing market",
    "start": "2480839",
    "end": "2486329"
  },
  {
    "text": "services is not an easy task neither is having a reliable user experience when",
    "start": "2486329",
    "end": "2492690"
  },
  {
    "text": "using a continuous deployment strategy so make sure that you as a provider",
    "start": "2492690",
    "end": "2498319"
  },
  {
    "text": "document your api's well and that you have API versioning if you want to make",
    "start": "2498319",
    "end": "2503940"
  },
  {
    "text": "changes to existing services you also need to make sure that you as a consumer",
    "start": "2503940",
    "end": "2509119"
  },
  {
    "text": "communicate your expectations to your provider so in short consumers",
    "start": "2509119",
    "end": "2514859"
  },
  {
    "text": "and providers need to talk to each other and I mean that on a development team",
    "start": "2514859",
    "end": "2522240"
  },
  {
    "text": "basis so if team a develops the consumer and team be the provider you as",
    "start": "2522240",
    "end": "2528210"
  },
  {
    "text": "developers need to talk to each other and using consumer driven contracts is a great tool to give you a platform to",
    "start": "2528210",
    "end": "2535279"
  },
  {
    "text": "start communicating with each other and be conservative in what you do be",
    "start": "2535279",
    "end": "2542010"
  },
  {
    "text": "liberal in what you accept from others so postal slaw we need to make sure that",
    "start": "2542010",
    "end": "2547170"
  },
  {
    "text": "we are conservative with what we send and liberal with what we accept so our providers should be able to provide you",
    "start": "2547170",
    "end": "2553740"
  },
  {
    "text": "with more data than you're interested in without breaking your application so",
    "start": "2553740",
    "end": "2559470"
  },
  {
    "text": "just like we saw with the address field in the demo and actively using this principle while developing market",
    "start": "2559470",
    "end": "2565410"
  },
  {
    "text": "services I actively use this principle while developing market services to make",
    "start": "2565410",
    "end": "2570450"
  },
  {
    "text": "sure that the the applique your application is not fragile and confidence is the lack of risk so if",
    "start": "2570450",
    "end": "2581130"
  },
  {
    "text": "you know everything there is to know about every line of code in every market service in your system you would not be",
    "start": "2581130",
    "end": "2588119"
  },
  {
    "text": "afraid of making changes to that code because you would know how that change would affect the whole system but you do",
    "start": "2588119",
    "end": "2596280"
  },
  {
    "text": "not know this so you need to find something to help you remove the risk of",
    "start": "2596280",
    "end": "2601740"
  },
  {
    "text": "applying changes to a service consumer-driven contracts gives you",
    "start": "2601740",
    "end": "2607260"
  },
  {
    "text": "information about who is using your API which endpoints are using and how they're using the data you provide so by",
    "start": "2607260",
    "end": "2615150"
  },
  {
    "text": "using consumer-driven contracts you remove a lot of the risk of updating your service because you now have the",
    "start": "2615150",
    "end": "2622020"
  },
  {
    "text": "ability to test that you still provide and what the consumer expects performing",
    "start": "2622020",
    "end": "2628170"
  },
  {
    "text": "contract verification before deployment will give developers the confidence",
    "start": "2628170",
    "end": "2633359"
  },
  {
    "text": "needed to deploy your application and know that they're still providing the services requested by their consumers so",
    "start": "2633359",
    "end": "2642329"
  },
  {
    "text": "my best advice to you all the next time you create a new API or a new endpoint",
    "start": "2642329",
    "end": "2648030"
  },
  {
    "text": "make sure that you require your users to write consumer contracts because that",
    "start": "2648030",
    "end": "2655079"
  },
  {
    "text": "way you will truly have the confidence needed to deploy fast to production",
    "start": "2655079",
    "end": "2661310"
  },
  {
    "text": "the code demo that you just saw you can find it on my github it's get above Conchas team.o with a zero if you have",
    "start": "2661310",
    "end": "2669359"
  },
  {
    "text": "any questions you can reach me on twitter or you can send me an email but even better we're so lucky today to have",
    "start": "2669359",
    "end": "2676079"
  },
  {
    "text": "the creators of pact in the audience please stand up please so if you have any questions don't ask me ask them and",
    "start": "2676079",
    "end": "2685609"
  },
  {
    "text": "thank you so much for your attention today [Applause]",
    "start": "2685609",
    "end": "2691630"
  }
]