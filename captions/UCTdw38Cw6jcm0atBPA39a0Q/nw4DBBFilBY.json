[
  {
    "text": "so Daka is this fantastic technology that emerged in the Linux world it's bent",
    "start": "7330",
    "end": "13610"
  },
  {
    "text": "evolving and maturing in Linux and then at the end of last year it landed in Windows Server fully featured fully",
    "start": "13610",
    "end": "19460"
  },
  {
    "text": "fledged ready to go TACA doesn't care about what sort of applications you run but today I'm going to focus on",
    "start": "19460",
    "end": "25329"
  },
  {
    "text": "traditional dotnet apps by that I mean old applications at the time plop I'm",
    "start": "25329",
    "end": "30410"
  },
  {
    "text": "going to use an asp.net webforms app I'm wondering we're talking about today is a to start with an overview of",
    "start": "30410",
    "end": "38000"
  },
  {
    "text": "the docker platform so for those who aren't familiar with it very quickly run through the major features it does a",
    "start": "38000",
    "end": "43129"
  },
  {
    "text": "huge amount of stuff I'm going to focus on the main workflow for bringing your apps into docker and what that does for",
    "start": "43129",
    "end": "48800"
  },
  {
    "text": "you then I'm going to take my web forms application I'm going to get it running in docker and show you what you need to",
    "start": "48800",
    "end": "53960"
  },
  {
    "text": "do to make your app running docker without any code changes you can take it as is run it in the new platform and I'm",
    "start": "53960",
    "end": "60050"
  },
  {
    "text": "going to use that as a jumping off point to modernize my application add new features new capabilities quickly and",
    "start": "60050",
    "end": "66619"
  },
  {
    "text": "safely by leveraging what we get from docker I'm not going to talk about micro",
    "start": "66619",
    "end": "72290"
  },
  {
    "text": "services DevOps the cloud donate core nano server or Linux so big list of technologies and approaches which are",
    "start": "72290",
    "end": "79220"
  },
  {
    "text": "all excellent and actually docker fits in really nicely if those things are on your radar but the sort of apps I'm",
    "start": "79220",
    "end": "84890"
  },
  {
    "text": "talking about other the millions of user facing apps that are running all around the world that probably are not going to",
    "start": "84890",
    "end": "91850"
  },
  {
    "text": "fall into this into this space because to take any of these new new trending technologies new approaches is a Ryoka",
    "start": "91850",
    "end": "99740"
  },
  {
    "text": "textured job it needs a lot of investments take your app and bring it into this world but by using docker you",
    "start": "99740",
    "end": "105350"
  },
  {
    "text": "can get a lot of the advantages without having to do a full we are Kotecha so I'm going to start with my really simple",
    "start": "105350",
    "end": "111530"
  },
  {
    "text": "basic frankly rubbish demo application which runs on my laptop to start with it's in web forms and the sequel server",
    "start": "111530",
    "end": "118490"
  },
  {
    "text": "database and they run natively on the laptop and the first thing to do is port them so they run in docker so I've got",
    "start": "118490",
    "end": "124909"
  },
  {
    "text": "one container for my web application and another container for my sequel server database and docker cake takes care of",
    "start": "124909",
    "end": "130578"
  },
  {
    "text": "the plumbing to make sure all the components can talk to each other so there are advantages in just doing that",
    "start": "130579",
    "end": "135620"
  },
  {
    "text": "but that's my starting off point so then iterate over my application and through the rest of the session I'm",
    "start": "135620",
    "end": "141049"
  },
  {
    "text": "going to be adding more features until we get to version 5 which is a fully distributed solution it looks like a",
    "start": "141049",
    "end": "147080"
  },
  {
    "text": "pretty this jumble of containers but every single one of these components is there for a reason",
    "start": "147080",
    "end": "152239"
  },
  {
    "text": "and the modernization approach that I'm taking is feature driven so I'm adding features to my application quickly and",
    "start": "152239",
    "end": "159200"
  },
  {
    "text": "easily by using docker okay so the starting point so docker is a platform",
    "start": "159200",
    "end": "166129"
  },
  {
    "text": "for packaging distributing running and managing applications any type of",
    "start": "166129",
    "end": "171769"
  },
  {
    "text": "application as long as don't have a UI we're talking about server-side applications here web websites web",
    "start": "171769",
    "end": "177769"
  },
  {
    "text": "services console applications that run on a schedule or anything like that so",
    "start": "177769",
    "end": "182989"
  },
  {
    "text": "in the windows world it runs natively on Server 2016 and Windows 10 and it runs",
    "start": "182989",
    "end": "188989"
  },
  {
    "text": "in the background as a Windows service so if you're moving your apps to docker what you have running on your VM or your",
    "start": "188989",
    "end": "195440"
  },
  {
    "text": "bare metal server is just docker you don't install the.net framework you don't install what is in store anything",
    "start": "195440",
    "end": "201650"
  },
  {
    "text": "else this is bare minimum all you need is docker to be running and everything else is going to be running by docker so to",
    "start": "201650",
    "end": "209359"
  },
  {
    "text": "make your app running docker the first thing you need to do is package it up that's part of the platform the notion of been able to take a whole bunch of",
    "start": "209359",
    "end": "215480"
  },
  {
    "text": "different components and package them into one unit so for an asp.net application the way you do that is by",
    "start": "215480",
    "end": "222169"
  },
  {
    "text": "building up a script that describes all the steps you need to take to package the app so I'm going to start with",
    "start": "222169",
    "end": "228470"
  },
  {
    "text": "Windows server core because I've got an asp.net application I just didn't give me the full Windows server features then",
    "start": "228470",
    "end": "235730"
  },
  {
    "text": "I install is this or now install asp.net and that's going to give me my kind of basic hosting environment then I copy in",
    "start": "235730",
    "end": "243349"
  },
  {
    "text": "my own web application with whatever dependencies it's got and then I need to configure it also all runs and it's all",
    "start": "243349",
    "end": "249290"
  },
  {
    "text": "set up and ready to go so in the docker world you you capture all those steps in a in a really simple script file called",
    "start": "249290",
    "end": "255889"
  },
  {
    "text": "a docker file which we'll be seeing shortly and then when you're ready to package your application you run a",
    "start": "255889",
    "end": "262039"
  },
  {
    "text": "command like docker build and dock it goes through all of those steps runs any commands you need to run copies any",
    "start": "262039",
    "end": "267740"
  },
  {
    "text": "files you need to copy and the output is a single binary logically a single",
    "start": "267740",
    "end": "273139"
  },
  {
    "text": "binary which contains your entire application stack the whole thing your app all its dependencies the runtime",
    "start": "273139",
    "end": "278900"
  },
  {
    "text": "environment even the version of wind is that you need to run it on is all packaged into one unit okay",
    "start": "278900",
    "end": "286079"
  },
  {
    "text": "and that dockerfile is really simple so there are a few new new instructions to",
    "start": "286079",
    "end": "291389"
  },
  {
    "text": "learn but actually it's a really simple way to take an existing application and run it in the new platform so we'll see",
    "start": "291389",
    "end": "297299"
  },
  {
    "text": "more of this during the session but if you've never seen the docker file before hands like we've never seen a docker",
    "start": "297299",
    "end": "302339"
  },
  {
    "text": "file before cool so even if you've never seen it it's fairly straightforward there's only",
    "start": "302339",
    "end": "307859"
  },
  {
    "text": "about half a dozen instructions you need to learn and so we'll go through this one by one we start with Microsoft",
    "start": "307859",
    "end": "314159"
  },
  {
    "text": "Windows server core so what that's saying is this is my base this is that this is another docker image that I'm",
    "start": "314159",
    "end": "319589"
  },
  {
    "text": "going to use as a starting point for my image this happens to be Windows server core which is a clean up-to-date",
    "start": "319589",
    "end": "325649"
  },
  {
    "text": "installation of Windows Server 2016 without the UI which is owned by Microsoft and managed by Microsoft's",
    "start": "325649",
    "end": "331409"
  },
  {
    "text": "publicly available so when I'm going to build this image the first thing doctor will do is start with that image so I",
    "start": "331409",
    "end": "337169"
  },
  {
    "text": "get everything that's already been built by Microsoft next command is just a bit of boilerplate to tell doctor that from",
    "start": "337169",
    "end": "343499"
  },
  {
    "text": "now on in this Dokka file I'm using PowerShell for my instructions and then I'll start building up my application so",
    "start": "343499",
    "end": "349769"
  },
  {
    "text": "I run some PowerShell to add windows features that I need so I is and the asp.net and the.net framework and I",
    "start": "349769",
    "end": "357179"
  },
  {
    "text": "remove the default website gives me I don't need the default website then I copy in my published web application so",
    "start": "357179",
    "end": "364289"
  },
  {
    "text": "in a CI pipeline my build has already run I've generated the published web app with all the all the binaries and all",
    "start": "364289",
    "end": "370529"
  },
  {
    "text": "the content before I do this step and it's the packaging step that copies in my web app into my image and then",
    "start": "370529",
    "end": "378179"
  },
  {
    "text": "another bit of PowerShell to set up my web application so I know exactly where it is I know the physical pathways are",
    "start": "378179",
    "end": "383879"
  },
  {
    "text": "just copied in so I know where my application is going to reside so I create a new web site and I specifies",
    "start": "383879",
    "end": "389610"
  },
  {
    "text": "doing me on port 80 now when I run this application is docker by default the container is locked down",
    "start": "389610",
    "end": "395669"
  },
  {
    "text": "then you're not allowed to communicate with it from the outside world you have to explicitly enable that so the next",
    "start": "395669",
    "end": "400769"
  },
  {
    "text": "amount exposed it's like a really basic firewall it says this application is allowed traffic to come in on port 80",
    "start": "400769",
    "end": "407129"
  },
  {
    "text": "and the final thing is we tell docker what to do to start my application so",
    "start": "407129",
    "end": "412169"
  },
  {
    "text": "when I run my application using docker it's going to the entry point is telling",
    "start": "412169",
    "end": "417300"
  },
  {
    "text": "it what command to run to start everything up which is the basic script is going to start is and make sure that it keeps on running so we'll spend more",
    "start": "417300",
    "end": "424410"
  },
  {
    "text": "time with this but this is all you need to do to take an existing web application and moving to docker so when",
    "start": "424410",
    "end": "431190"
  },
  {
    "text": "I've got my docker file I've run it through the docker build command the output is my image so that's a single",
    "start": "431190",
    "end": "437190"
  },
  {
    "text": "thing that's probably on my laptop or on my build server I need to be able to put",
    "start": "437190",
    "end": "442800"
  },
  {
    "text": "it somewhere else so that I can run it on my test environment on my production environment so the notion of",
    "start": "442800",
    "end": "448140"
  },
  {
    "text": "distribution is built into the platform so when I've got my image on my build server on my laptop I can run docker",
    "start": "448140",
    "end": "454440"
  },
  {
    "text": "push and push that image up to a central location docket calls that are registry",
    "start": "454440",
    "end": "459780"
  },
  {
    "text": "now that registry could be a private registry in my data center that is only",
    "start": "459780",
    "end": "465600"
  },
  {
    "text": "for my company to use or it could be a public registry and doctor have their own public registry called docker hub",
    "start": "465600",
    "end": "472070"
  },
  {
    "text": "the fact that you can share software publicly if it's open source software is a massive enabler to start bringing",
    "start": "472070",
    "end": "479100"
  },
  {
    "text": "tried and trusted Enterprise break components into your own solution which is what are we doing today so docker hub is one of the reasons why",
    "start": "479100",
    "end": "485760"
  },
  {
    "text": "docker has taken off so much in the Linux world so at the end of last year there are half a million images on",
    "start": "485760",
    "end": "492600"
  },
  {
    "text": "docker hub half a million packaged applications you can bring down and run most of them on Linux but the number of",
    "start": "492600",
    "end": "499140"
  },
  {
    "text": "Windows ones is increasing and it's absolutely taken off so as of as of last year there are 8 billion downloads of",
    "start": "499140",
    "end": "505410"
  },
  {
    "text": "these images and you think about these images are a packaged application that means 8 billion times",
    "start": "505410",
    "end": "510570"
  },
  {
    "text": "someone's downloaded those applications and got them running in their own environment without having to do any other set up work we're currently",
    "start": "510570",
    "end": "517169"
  },
  {
    "text": "running at about a billion downloads a month so you know it's pretty popular stuff so when you've shared it and",
    "start": "517170",
    "end": "523260"
  },
  {
    "text": "you're ready to run your application that's all built into the platform too so you do a docker run command you give",
    "start": "523260",
    "end": "528480"
  },
  {
    "text": "it the name of the image that you want to run and because it's all built into the platform the notion of images and",
    "start": "528480",
    "end": "533970"
  },
  {
    "text": "registries if the image isn't available locally docker will go off to the registry and pull it down for you and",
    "start": "533970",
    "end": "539340"
  },
  {
    "text": "then it runs that application from the image in a container and a container is",
    "start": "539340",
    "end": "544710"
  },
  {
    "text": "just a really lightweight boundary around the processes that are running inside your inside your application so",
    "start": "544710",
    "end": "551960"
  },
  {
    "text": "in the case of a full dotnet framework app running on Windows Server we'll see the processes later it's going to be the",
    "start": "551960",
    "end": "558440"
  },
  {
    "text": "worker process the w3 process that's hosting my application so I've got my w3 process running on the host with all the",
    "start": "558440",
    "end": "565790"
  },
  {
    "text": "supporting processes it needs with a boundary around it to isolate it from anything else that's running on that machine it's not like a VM where I have",
    "start": "565790",
    "end": "572990"
  },
  {
    "text": "to allocate CPU and allocate memory it's just a process running on my machine and I can run as many as I can as machine to",
    "start": "572990",
    "end": "579740"
  },
  {
    "text": "handle so not only is it really lightweight it's also portable so I can",
    "start": "579740",
    "end": "584810"
  },
  {
    "text": "run the exact same docker run command on my laptop and I'll get exactly the same application the whole thing is",
    "start": "584810",
    "end": "590150"
  },
  {
    "text": "configured and ready to go so it'll behave in exactly the same way no matter where I run it if I spin up a VM in the",
    "start": "590150",
    "end": "595460"
  },
  {
    "text": "cloud like I said I wasn't going to mention then it'll run in the same way - okay so that's the basic workflow that",
    "start": "595460",
    "end": "602720"
  },
  {
    "text": "you get with Doc Rivers the basic features of the platform you can build ship and run any type of application and",
    "start": "602720",
    "end": "609230"
  },
  {
    "text": "it'll be the same no matter what environment you run it in so now we're going to cut to the demo so my demo",
    "start": "609230",
    "end": "616190"
  },
  {
    "text": "application it's a it's a it's like a marketing website for a new product launch so we're going to step into that",
    "start": "616190",
    "end": "623300"
  },
  {
    "text": "now and see version 1 which is running natively on my laptop",
    "start": "623300",
    "end": "628720"
  },
  {
    "text": "ok so let's fire this up so I'd only get",
    "start": "628720",
    "end": "634580"
  },
  {
    "text": "hopes up and like it's rubbish but the point is the code is all of them github right now so you can check this out and",
    "start": "634580",
    "end": "639890"
  },
  {
    "text": "you can you can follow along with me to see what I'm doing so this is running on is on my laptop there's a little launch",
    "start": "639890",
    "end": "645590"
  },
  {
    "text": "page and there's a big button to sign up to say I'm interested in your product here are my details let's click that",
    "start": "645590",
    "end": "651440"
  },
  {
    "text": "properly and it please send me some emails so I've got sequel server on my",
    "start": "651440",
    "end": "656600"
  },
  {
    "text": "laptop I've got is on my laptop I got Nate installed if I want to run this on the new environment if I commissioned a",
    "start": "656600",
    "end": "662240"
  },
  {
    "text": "new test environment I need to install is I need to install dotnet framework the right version I need to have access",
    "start": "662240",
    "end": "669140"
  },
  {
    "text": "to a sequel server and all that stuff and that's probably gonna be in a big complicated deployment document with",
    "start": "669140",
    "end": "674810"
  },
  {
    "text": "loads of screenshots that's totally out of date and never updated so it's not a great position to be in",
    "start": "674810",
    "end": "680399"
  },
  {
    "text": "so what we're going to do is move this to dr. listening our first point of call so what I've done because I'm trying to",
    "start": "680399",
    "end": "687540"
  },
  {
    "text": "do five versions of this app I'm not going to live code I've got it all checked in already in different get",
    "start": "687540",
    "end": "693480"
  },
  {
    "text": "branches so you can follow along with this yourself and check out version two and I'll go back to my product launch",
    "start": "693480",
    "end": "700199"
  },
  {
    "text": "website and show you what I've got here so the the code for this is really basic I've got entity framework which I'm",
    "start": "700199",
    "end": "706290"
  },
  {
    "text": "using for storage to talk to sequel server I've got the main entity is this",
    "start": "706290",
    "end": "711480"
  },
  {
    "text": "prospect which contains all the details that you put into the signup form it's just an ordinary plain old object that",
    "start": "711480",
    "end": "717959"
  },
  {
    "text": "it contains these various details and then my web forms application has got",
    "start": "717959",
    "end": "723089"
  },
  {
    "text": "the main pages this signup page there's a whole bunch of boilerplate stuff which not going to change throughout the session but the interesting stuff is",
    "start": "723089",
    "end": "729959"
  },
  {
    "text": "when you click the Go button so when you click the Go button it does exactly what you'd expect it spins up a new prospect",
    "start": "729959",
    "end": "735449"
  },
  {
    "text": "object copies in the data from the webform and then it uses entity framework to make a connection the",
    "start": "735449",
    "end": "742379"
  },
  {
    "text": "sequel server it looks at the dependent entities the country free select from the drop-down and your role and then",
    "start": "742379",
    "end": "748889"
  },
  {
    "text": "adds it to the prospect collection and saves the changes so as with version one this is a synchronous connection into",
    "start": "748889",
    "end": "754620"
  },
  {
    "text": "sequel server actually going to make three query to look up the details and save my new entity and this is this is",
    "start": "754620",
    "end": "761759"
  },
  {
    "text": "how we're going to use it in docker the only thing that's actually changed between version 1 and version 2 is a",
    "start": "761759",
    "end": "768779"
  },
  {
    "text": "configuration setting so version one I'm using sequel server on my machine this is version 2 now the only change is that",
    "start": "768779",
    "end": "775319"
  },
  {
    "text": "the hostname for the server because I'm going to be running sequel server in docker now part of the doc of platform",
    "start": "775319",
    "end": "781860"
  },
  {
    "text": "it has a built-in built-in DNS server so when I could talk to containers I can",
    "start": "781860",
    "end": "787199"
  },
  {
    "text": "talk to them by their container name so when this applications running in one docker container and I say I need to",
    "start": "787199",
    "end": "792569"
  },
  {
    "text": "sort the sequel server on a machine called sequel server that request goes the DNS lookup goes to dakka dakka finds",
    "start": "792569",
    "end": "798839"
  },
  {
    "text": "as a container running on this machine or a different machine in the same docker cluster and it will route the",
    "start": "798839",
    "end": "803970"
  },
  {
    "text": "traffic appropriately so the only changes the configuration change to say I'm going to run that this is this is",
    "start": "803970",
    "end": "809129"
  },
  {
    "text": "the name of my host which stock is being resolved to a container for me okay so I'm going to reset my",
    "start": "809129",
    "end": "815109"
  },
  {
    "text": "environment to get rid of version 1 and start building this and we'll look at the other pieces now okay so as well as",
    "start": "815109",
    "end": "824229"
  },
  {
    "text": "the full visual studio solution I've got a whole lot some assets that are in a docker folder which is how I'm going to",
    "start": "824229",
    "end": "830799"
  },
  {
    "text": "actually package this thing up and run it in dhaka so from my website I've got my docker file which is broadly the same",
    "start": "830799",
    "end": "837069"
  },
  {
    "text": "as the one that we saw earlier so I'm starting from doing the server core so that's going to give me my clean",
    "start": "837069",
    "end": "842589"
  },
  {
    "text": "installation of Windows I'm switching to PowerShell so from now on I can run commands in PowerShell and then I have",
    "start": "842589",
    "end": "848829"
  },
  {
    "text": "to do a bit of a hack to turn off the DNS cache in windows because dog has got",
    "start": "848829",
    "end": "854169"
  },
  {
    "text": "its own DNS server it expects you to always ask it for what addresses so that you can resolve it to the correct container running on the correct machine",
    "start": "854169",
    "end": "861009"
  },
  {
    "text": "and Windows is a bit too aggressive with the way it caches DNS responses so just",
    "start": "861009",
    "end": "866469"
  },
  {
    "text": "a simple bit of a registry hack to turn off the DNS cache then I install is and",
    "start": "866469",
    "end": "873419"
  },
  {
    "text": "asp.net and then I remove the default website because I'm only going to have one application in this container",
    "start": "873419",
    "end": "880029"
  },
  {
    "text": "I could have several websites in my in my docker image but that's not really what doc is about doc is about having",
    "start": "880029",
    "end": "885669"
  },
  {
    "text": "one container per application so I can stand independently and releasing the pendant lis and all that sort of stuff",
    "start": "885669",
    "end": "891689"
  },
  {
    "text": "so then I copy in my my built website my published website into the image and I run new website to set that up in is",
    "start": "891689",
    "end": "898689"
  },
  {
    "text": "again I know exactly where it is I'll just put it there I'm using port 82 to listen for traffic exposed port 80 so",
    "start": "898689",
    "end": "905739"
  },
  {
    "text": "traffic can get into my container and then I need to tell doctor how to start my application and this service monitor",
    "start": "905739",
    "end": "912849"
  },
  {
    "text": "app is a little XE from Microsoft that they shipped with some of their images which start a Windows service for me in",
    "start": "912849",
    "end": "919869"
  },
  {
    "text": "this case it's the is service and it will monitor it and check that it's up and running so when docker starts an application it",
    "start": "919869",
    "end": "927009"
  },
  {
    "text": "watches the process that it started and if it fails it will flag up to the platform that containers gone down so",
    "start": "927009",
    "end": "932559"
  },
  {
    "text": "what this little this little helper app does is it just makes that that flag possible so if there's a problem inside",
    "start": "932559",
    "end": "938049"
  },
  {
    "text": "the container and is stops responding this will bubble that up to docker so in terms",
    "start": "938049",
    "end": "944460"
  },
  {
    "text": "kind of CI process this is my this is my CI this build script here I've got an MS",
    "start": "944460",
    "end": "949470"
  },
  {
    "text": "I'm using MSL to publish my website so I'm running that from my from my visual studio solution to publish that web",
    "start": "949470",
    "end": "956279"
  },
  {
    "text": "application and then I run docker build which is going to go through my docker file and package up all those different",
    "start": "956279",
    "end": "962430"
  },
  {
    "text": "components okay so that build was completed ma'am so if I run back through",
    "start": "962430",
    "end": "967529"
  },
  {
    "text": "my build script I've got all the output for Emma's build packaging and moving everything around and this is the output",
    "start": "967529",
    "end": "972630"
  },
  {
    "text": "from docker so when I run docker build each of the steps in my docker file gives me some output docker tells me",
    "start": "972630",
    "end": "978899"
  },
  {
    "text": "what it's doing now I said that docker images are one binary file which isn't",
    "start": "978899",
    "end": "984720"
  },
  {
    "text": "true logically there one thing so I refer to a docker image by one name and",
    "start": "984720",
    "end": "989820"
  },
  {
    "text": "I've got I get my one image but physically that there's they're layered they're split into separate layers and",
    "start": "989820",
    "end": "995339"
  },
  {
    "text": "those layers can be reused so what's happened here when I built this application docker said that I've",
    "start": "995339",
    "end": "1001370"
  },
  {
    "text": "already got of the others that's the same as you've asked me to build so I'm just going to use that so it's a really",
    "start": "1001370",
    "end": "1006920"
  },
  {
    "text": "efficient way of having lots of applications that share a lot of common features they would share the same",
    "start": "1006920",
    "end": "1012200"
  },
  {
    "text": "layers so you don't use up a lot of storage here because everything all the big base layers that have got windows",
    "start": "1012200",
    "end": "1017420"
  },
  {
    "text": "and is would get reused throughout all your applications and then at the end I've got mine you can take that my new",
    "start": "1017420",
    "end": "1023510"
  },
  {
    "text": "image and it's going to be ready to go but it needs a database so what I will do is go to my cheat sheet to make sure",
    "start": "1023510",
    "end": "1031428"
  },
  {
    "text": "I'll run the write command and I will start sequel server running on my machine in a container okay so what this",
    "start": "1031429",
    "end": "1040370"
  },
  {
    "text": "does is it's the docker run commands that I mentioned earlier and docker run",
    "start": "1040370",
    "end": "1048400"
  },
  {
    "text": "get rid of that because that doesn't look good so I'm docker running a new container",
    "start": "1048400",
    "end": "1053929"
  },
  {
    "text": "the D flag means detached so puts it in the background it's a long-running service this database is going to keep running in the",
    "start": "1053929",
    "end": "1059809"
  },
  {
    "text": "background and Pia is exposing a port so that I can get into sequel server the",
    "start": "1059809",
    "end": "1065660"
  },
  {
    "text": "image name is this so that's the image that's also on docker hub so that's sequel Server Express running in Windows",
    "start": "1065660",
    "end": "1072530"
  },
  {
    "text": "which is owned by Microsoft and is publicly available on the hub sequel service price is free",
    "start": "1072530",
    "end": "1078080"
  },
  {
    "text": "there are certain limitations but actually they're not very severe and it's a perfectly good and usable relational database so I can pull that",
    "start": "1078080",
    "end": "1084350"
  },
  {
    "text": "in the hub and I can be using that I've given it a name let's go back to that",
    "start": "1084350",
    "end": "1089470"
  },
  {
    "text": "so given my container in name sequel server that's how the other container is going to find it and I'm also specifying",
    "start": "1089470",
    "end": "1096679"
  },
  {
    "text": "some environment variables so I've got an environment variable for to accept",
    "start": "1096679",
    "end": "1101840"
  },
  {
    "text": "the License Agreement and to specify a password for the the admin user so if",
    "start": "1101840",
    "end": "1107600"
  },
  {
    "text": "you think that having that password in plain text is bad you're absolutely right and there are much better ways of doing that in docker but to get through",
    "start": "1107600",
    "end": "1114289"
  },
  {
    "text": "five versions of my application I'm doing it the quickest way possible so what we've got a flag is doing is passing a value for an environment",
    "start": "1114289",
    "end": "1120950"
  },
  {
    "text": "variable to the application and in this case it's sequel server and when it starts up it's going to pull that value",
    "start": "1120950",
    "end": "1126529"
  },
  {
    "text": "out of the environment variable and setup the VSA user to have that as their password okay so if I look at what's",
    "start": "1126529",
    "end": "1134720"
  },
  {
    "text": "running in docker docker PS just tells me all the all the containers that are running I've got one container now it's",
    "start": "1134720",
    "end": "1140510"
  },
  {
    "text": "running from sequel server it's got a random container ID but it's also got a name because I gave it a particular name",
    "start": "1140510",
    "end": "1146149"
  },
  {
    "text": "so now that's my effectively that's my database setup and ready to run that and so I know I can run my application so",
    "start": "1146149",
    "end": "1153769"
  },
  {
    "text": "docker run D the webserver it's going to be long-running so I'll put it in the background - P - make that port",
    "start": "1153769",
    "end": "1161690"
  },
  {
    "text": "available so pull 18 and I'll give it a",
    "start": "1161690",
    "end": "1166700"
  },
  {
    "text": "name so that I can refer to it more easily and then the image name which is whatever you decide to call it so in my case 6 IDs is a bar be chosen home hub",
    "start": "1166700",
    "end": "1175010"
  },
  {
    "text": "the gears when you publish things to docket hub you have to use your handle and then the name of your application so in this case is 6 I'd product actually",
    "start": "1175010",
    "end": "1182360"
  },
  {
    "text": "use a short shorter name product the launch web v2 v2 okay so that v2 tag is",
    "start": "1182360",
    "end": "1192919"
  },
  {
    "text": "interesting because I can put versions onto my images so I could have lots of versions of my product launch website",
    "start": "1192919",
    "end": "1198380"
  },
  {
    "text": "image on the hub v2 v3 v4 v5 which I've actually got and you could you can tag",
    "start": "1198380",
    "end": "1203510"
  },
  {
    "text": "them with whatever you want so out of your build process you could target with your your commit ID and you can track",
    "start": "1203510",
    "end": "1208639"
  },
  {
    "text": "everything back down to make sure that you your several versions of the same app pation but they're all stored and you can run any particular version at any",
    "start": "1208639",
    "end": "1215010"
  },
  {
    "text": "time okay so that's running that now I've got my product launch websites and",
    "start": "1215010",
    "end": "1220230"
  },
  {
    "text": "my database server running in separate containers if I want to access that that",
    "start": "1220230",
    "end": "1226590"
  },
  {
    "text": "website from on the host I can use docker inspect and give it my container",
    "start": "1226590",
    "end": "1231750"
  },
  {
    "text": "name to find out some details about my container and that tells me among other things that port 80 is available and",
    "start": "1231750",
    "end": "1237450"
  },
  {
    "text": "this is the IP address of the container so this is like a kind of virtual IP",
    "start": "1237450",
    "end": "1242850"
  },
  {
    "text": "address the docker assigns so inside the container let's paste that in inside the",
    "start": "1242850",
    "end": "1254250"
  },
  {
    "text": "container the application thinks is running on its own server it's got its own version of Windows it's got hostname",
    "start": "1254250",
    "end": "1259559"
  },
  {
    "text": "it's got an IP address it looks like it's got its own server when I first hit this is going to be setting up it's",
    "start": "1259559",
    "end": "1265020"
  },
  {
    "text": "going to take a minute as you can spin up because it's setting up all the stuff this is a completely empty environment I've got a new sequel server instance",
    "start": "1265020",
    "end": "1271530"
  },
  {
    "text": "so when entity framework finds that it's going to create my database deploy the sequel schema putting all my insert on",
    "start": "1271530",
    "end": "1277500"
  },
  {
    "text": "my seed data and all that sort of stuff and then I'm also going to wait for my worker process to spin up in the container so that's that's up and",
    "start": "1277500",
    "end": "1283470"
  },
  {
    "text": "running now if I want to see what my container is doing I can use more docker commands like docker top on my web",
    "start": "1283470",
    "end": "1290970"
  },
  {
    "text": "application or web container and that's going to tell me the processes that are running inside the container it tells me",
    "start": "1290970",
    "end": "1296160"
  },
  {
    "text": "how hard they're working so in this case I've got my the main thing I'm interested in is my w3 worker process",
    "start": "1296160",
    "end": "1302690"
  },
  {
    "text": "which is using 180 Meg of RAM and there are a few other background services",
    "start": "1302690",
    "end": "1308190"
  },
  {
    "text": "which is the bare minimum you need to get your windows app running in a Windows container and they're using a",
    "start": "1308190",
    "end": "1313470"
  },
  {
    "text": "few megabytes each so my whole is server my whole web server is running in about",
    "start": "1313470",
    "end": "1318710"
  },
  {
    "text": "190 Meg of RAM to be able to serve my content so and I'll go through and",
    "start": "1318710",
    "end": "1324360"
  },
  {
    "text": "actually use this at this time so I click on sign up the apps exactly the same I haven't changed the code I'm just",
    "start": "1324360",
    "end": "1329700"
  },
  {
    "text": "running it in the new platform so I can go through and fill in some details that hopefully are already in my cache you",
    "start": "1329700",
    "end": "1338010"
  },
  {
    "text": "know teaching them company name doctor and roll I don't know why I'm putting to",
    "start": "1338010",
    "end": "1344520"
  },
  {
    "text": "read it like it doesn't really matter but those are my real details okay so clicking go runs the code that I showed",
    "start": "1344520",
    "end": "1350970"
  },
  {
    "text": "you earlier synchronously causing to my database I don't know what's happened here because I don't see in any output",
    "start": "1350970",
    "end": "1356880"
  },
  {
    "text": "in the web application but if I want to find out what's happening in that in my sequel server database I could do the",
    "start": "1356880",
    "end": "1362789"
  },
  {
    "text": "same docket in spectrum and let's run docker inspect sequel server and that's",
    "start": "1362789",
    "end": "1374280"
  },
  {
    "text": "got an IP address - and it's got a port exposed so I could connect this sequel server instance running in a container",
    "start": "1374280",
    "end": "1379350"
  },
  {
    "text": "using sequel server management studio or Visual Studio or any other sequel client because it just looks like a sequel",
    "start": "1379350",
    "end": "1384570"
  },
  {
    "text": "database just happens to be running inside a container but also I can make use of docker to run commands inside the",
    "start": "1384570",
    "end": "1391200"
  },
  {
    "text": "container from the host so if I want to find out some data in that container",
    "start": "1391200",
    "end": "1396419"
  },
  {
    "text": "without having to fire for sequel client I can run this command which is too big",
    "start": "1396419",
    "end": "1403559"
  },
  {
    "text": "for me to remember which is why I'm pasting it in and what that's going to do so I've got dakka dakka exec is going",
    "start": "1403559",
    "end": "1411539"
  },
  {
    "text": "to execute a command inside the container called sequel server and the command is going to run is some",
    "start": "1411539",
    "end": "1417059"
  },
  {
    "text": "PowerShell to invoke a sequel query so that sequel server docker image that",
    "start": "1417059",
    "end": "1423210"
  },
  {
    "text": "Microsoft open as well as having sequel server installed it's got all the powershell commandlets installed on that image so I can use those from the",
    "start": "1423210",
    "end": "1429659"
  },
  {
    "text": "outside this machine doesn't have sequel server installed when I said it did earlier that was a lie I was using docker for version one two but the the",
    "start": "1429659",
    "end": "1438179"
  },
  {
    "text": "image the container here has got invoked sequel command so I can spin that sequel query in and I get the output so that's",
    "start": "1438179",
    "end": "1443640"
  },
  {
    "text": "coming from my from my sequel server running in docker okay so let's go back",
    "start": "1443640",
    "end": "1450330"
  },
  {
    "text": "here so that's version two of the application so so far all I've done is",
    "start": "1450330",
    "end": "1455780"
  },
  {
    "text": "move my components to docker so now I've got in version two I've got two images",
    "start": "1455780",
    "end": "1461850"
  },
  {
    "text": "that I'm using one I haven't have to do anything for I just pulled that from the hub because that's Microsoft's and the",
    "start": "1461850",
    "end": "1467400"
  },
  {
    "text": "other one is my own image that I packaged up my own web application so at this point I've already got a whole",
    "start": "1467400",
    "end": "1473610"
  },
  {
    "text": "bunch of oh geez so one of the major advantages I've got is consistency any time I build",
    "start": "1473610",
    "end": "1478710"
  },
  {
    "text": "a new version of my application the process is exactly the same if I add new dependencies or if I change to MVC or",
    "start": "1478710",
    "end": "1485670"
  },
  {
    "text": "new version of.net or whatever I'm still going to run the build to generate my published output and then run docker",
    "start": "1485670",
    "end": "1492000"
  },
  {
    "text": "build to package it up in an image I'm going to store it in exactly the same way because it's not going to go up in my registry and I run my application in",
    "start": "1492000",
    "end": "1500010"
  },
  {
    "text": "the same way and it doesn't not only consistent for versions of my app - in system for different types of",
    "start": "1500010",
    "end": "1505620"
  },
  {
    "text": "application so the way I started sequel server was exactly the same as the way I started my web application just with",
    "start": "1505620",
    "end": "1511590"
  },
  {
    "text": "docker rot the way I manage it is exactly the same so if I wanted to do see what was running inside my seat will",
    "start": "1511590",
    "end": "1517080"
  },
  {
    "text": "container I use docker top will see later on I can use docker logs to see what's being written by my application",
    "start": "1517080",
    "end": "1522960"
  },
  {
    "text": "where application logs so I managed more in the same way it doesn't matter what type of app we've got and I could stop",
    "start": "1522960",
    "end": "1529470"
  },
  {
    "text": "there but we've got a bit more time so I'm going to carry on I'm going to use this version 2 as my foundation to",
    "start": "1529470",
    "end": "1534560"
  },
  {
    "text": "modernize my application so the fact that docker lets me run all these processes in containers that are really",
    "start": "1534560",
    "end": "1541290"
  },
  {
    "text": "lightweight so I can run lots and lots of applications on my online machine I still have isolation but docker",
    "start": "1541290",
    "end": "1548790"
  },
  {
    "text": "provides the plumbing between those containers to talk really cheaply enables me to add more components in",
    "start": "1548790",
    "end": "1554550"
  },
  {
    "text": "different containers and bring a lot more features into my application so I can deploy quickly and safely because",
    "start": "1554550",
    "end": "1560790"
  },
  {
    "text": "it's all automated and I can start breaking up my monolith into different components and have docker plumb",
    "start": "1560790",
    "end": "1566490"
  },
  {
    "text": "everything together for me so how do you go about this modernization modernization is do mean different",
    "start": "1566490",
    "end": "1573120"
  },
  {
    "text": "things for different apps and different stakeholders and different enterprises so you might have a you know we're not",
    "start": "1573120",
    "end": "1578850"
  },
  {
    "text": "talking about full rerp texture here so what I like to do is to think of it from the feature level so feature driven",
    "start": "1578850",
    "end": "1584930"
  },
  {
    "text": "modernization by by enabling more more functionality within your application so",
    "start": "1584930",
    "end": "1591630"
  },
  {
    "text": "there's a few problems with this app that I'm going to address for the rest of the session the first one is performance so I make a synchronous",
    "start": "1591630",
    "end": "1598530"
  },
  {
    "text": "connection to sequel server whenever anyone signed up and I make three calls to the database just when people click",
    "start": "1598530",
    "end": "1604440"
  },
  {
    "text": "on ok so that doesn't scale if we're doing a marketing launch and suddenly we have tens of thousand people",
    "start": "1604440",
    "end": "1611070"
  },
  {
    "text": "hit not a website dusting that's gonna be a bottleneck on my sequel server now I can easily scale up my web application",
    "start": "1611070",
    "end": "1616919"
  },
  {
    "text": "I can just have more hosts and run more containers but I've still got a bottleneck and sequel server so the way",
    "start": "1616919",
    "end": "1623610"
  },
  {
    "text": "the application runs at the moment the web is tightly coupled to the database component or we need to scale them up",
    "start": "1623610",
    "end": "1629010"
  },
  {
    "text": "together so we can address that we'll see how to address that shortly then I've got a data insight problem so",
    "start": "1629010",
    "end": "1635340"
  },
  {
    "text": "I'm using sequel server if anyone from the business wants to actually get some information out they have to contact IT",
    "start": "1635340",
    "end": "1641429"
  },
  {
    "text": "so they're not going to run the sequel command they're not gonna have access to the database or any sequel clients if they want to find out the the breakdown",
    "start": "1641429",
    "end": "1647850"
  },
  {
    "text": "of different types of roles from people signing up they have to put in a support ticket it's going to sit in the queue",
    "start": "1647850",
    "end": "1653279"
  },
  {
    "text": "for ages because no one wants to do it when they do pick it up they're going to have to write some sequel or put it into an Excel spreadsheet so it's those",
    "start": "1653279",
    "end": "1660059"
  },
  {
    "text": "everybody down and the last thing is is the UX so even though I'm running in",
    "start": "1660059",
    "end": "1665820"
  },
  {
    "text": "docker now I'm still running a monolith in docker if it's an old application chances are there probably aren't very",
    "start": "1665820",
    "end": "1671940"
  },
  {
    "text": "many automated tests and the release process if is a big application it's going to be an out of hours process with",
    "start": "1671940",
    "end": "1678179"
  },
  {
    "text": "a whole chunk of time advocated to smoke testing and user acceptance testing you're lots of stuff if the product",
    "start": "1678179",
    "end": "1684690"
  },
  {
    "text": "everyone wants to have a new landing page a new homepage that's a tiny change",
    "start": "1684690",
    "end": "1689880"
  },
  {
    "text": "in terms of development but all the rest of the cost is still there even though running in docker because I still need",
    "start": "1689880",
    "end": "1695159"
  },
  {
    "text": "to that dock it makes it easy for me to build that new version with the home page and to release it but all the other",
    "start": "1695159",
    "end": "1701070"
  },
  {
    "text": "activities around there are probably still the same so we're going to address all these things just by leveraging what",
    "start": "1701070",
    "end": "1706169"
  },
  {
    "text": "we can do already with docker and the first one we can look at is performance so I've got my web application making",
    "start": "1706169",
    "end": "1714090"
  },
  {
    "text": "synchronous calls to my database so how do I make that change that I can so I can scale it up but it's page one of",
    "start": "1714090",
    "end": "1720870"
  },
  {
    "text": "enterprising spiration patterns or I'm going to do is I'm going to put a message queue in between so from my web",
    "start": "1720870",
    "end": "1726419"
  },
  {
    "text": "application when somebody signs up instead of making a database call I'm going to publish an event to a queue and",
    "start": "1726419",
    "end": "1731669"
  },
  {
    "text": "on the other side of the queue I'm going to have a new component listening for those events and that component is going",
    "start": "1731669",
    "end": "1737220"
  },
  {
    "text": "to do the database update so that means I can scale them independently and if I'm doing a big",
    "start": "1737220",
    "end": "1742470"
  },
  {
    "text": "marketing drive I can have lots and lots of web containers running and the queue will fill up and then the other",
    "start": "1742470",
    "end": "1747750"
  },
  {
    "text": "component will just pull off the messages when it's got time to do them and put them in the database I don't",
    "start": "1747750",
    "end": "1753690"
  },
  {
    "text": "have an SLA that says when you click okay you must be in the database within 30 seconds so for this particular",
    "start": "1753690",
    "end": "1759390"
  },
  {
    "text": "feature it doesn't work like that it could take a minute or five minutes doesn't matter how big the queue gets because we might not send out an email",
    "start": "1759390",
    "end": "1764790"
  },
  {
    "text": "for a week okay so let's see how this looks so let's go back to my sequel",
    "start": "1764790",
    "end": "1771180"
  },
  {
    "text": "server to my server rather so you can see there's several times",
    "start": "1771180",
    "end": "1776790"
  },
  {
    "text": "check out version three where my code is almost v3 the V doesn't work properly",
    "start": "1776790",
    "end": "1782910"
  },
  {
    "text": "online laptop which is which is difficult when you're trying to do this so v3 not that I'm saying they can all",
    "start": "1782910",
    "end": "1788580"
  },
  {
    "text": "with Dell by the way so switch to v3 I'm going to reset to get rid of the containers from version 2 and then we'll",
    "start": "1788580",
    "end": "1795510"
  },
  {
    "text": "have a look at what's changed in the application so visual studio knows something's changes I have changed code in this version of the app because I've",
    "start": "1795510",
    "end": "1803130"
  },
  {
    "text": "moved the way might be I've changed the way my feature works so we'll have a look at what's changed in my web",
    "start": "1803130",
    "end": "1808500"
  },
  {
    "text": "application in the sign up page it's all the same boring boilerplate stuff until",
    "start": "1808500",
    "end": "1813630"
  },
  {
    "text": "I get to line 70 when you submit the when you submit the form I create my prospect object in the same",
    "start": "1813630",
    "end": "1819810"
  },
  {
    "text": "way but instead of talking to the database and making a call I build up an event object a prospect signed up event",
    "start": "1819810",
    "end": "1826530"
  },
  {
    "text": "which then contains the prospect details that I've got off the forum and I publish it to the message queue so that",
    "start": "1826530",
    "end": "1832620"
  },
  {
    "text": "message queue is in a new project and the message queue is just a little helper that the abstracts away dealing",
    "start": "1832620",
    "end": "1838200"
  },
  {
    "text": "with the particular message queue so in this in this case I can publish a message of a particular type and the",
    "start": "1838200",
    "end": "1844800"
  },
  {
    "text": "only message type that I've got defined is this prospect signed up events so this message is just going to contain my",
    "start": "1844800",
    "end": "1851250"
  },
  {
    "text": "prospect contains the date/time stamp from when they signed up and it's got a subject like a subject matter so that",
    "start": "1851250",
    "end": "1858390"
  },
  {
    "text": "people who are listening to messages know that this is a sign up event so it's all pretty simple stuff so on the",
    "start": "1858390",
    "end": "1864870"
  },
  {
    "text": "other side of the message queue I've got a new component which is just a simple",
    "start": "1864870",
    "end": "1870270"
  },
  {
    "text": "dotnet console application so this console application when it starts is going to use the same",
    "start": "1870270",
    "end": "1876240"
  },
  {
    "text": "messaging library to create connection to the message queue to subscribe to my signed up event and then just sit there",
    "start": "1876240",
    "end": "1883440"
  },
  {
    "text": "and listen so this will run indefinitely it's going to sit there and wait for messages to come in on the queue when it",
    "start": "1883440",
    "end": "1889260"
  },
  {
    "text": "gets a message it writes some blog entries it pulls the prospect out of the message and then this is the exact same",
    "start": "1889260",
    "end": "1895500"
  },
  {
    "text": "code from version one to create my prospect in the database so what I've would have effectually done is taken",
    "start": "1895500",
    "end": "1901680"
  },
  {
    "text": "some some features some functionality from my web application put it in a different component I'm using a message",
    "start": "1901680",
    "end": "1908160"
  },
  {
    "text": "to connect the two together so if this was a way more complicated function that did all sorts of validation and stuff",
    "start": "1908160",
    "end": "1913980"
  },
  {
    "text": "the process would be the same I took it out of my web publication I put it in a different component and I join them together using what I can do with Daka",
    "start": "1913980",
    "end": "1921650"
  },
  {
    "text": "okay the only other thing that's changed is in my web config I've taken out the",
    "start": "1921650",
    "end": "1927330"
  },
  {
    "text": "connection spring so as I said you can run any app in dakka dakka doesn't mandate how you do configuration or",
    "start": "1927330",
    "end": "1933180"
  },
  {
    "text": "anything like that but docker integrates better with some types of approach than others so Dhaka doesn't know anything about web config and config management",
    "start": "1933180",
    "end": "1940620"
  },
  {
    "text": "that's in dotnet but it does know about environment variables and all the frameworks support environment variables",
    "start": "1940620",
    "end": "1946110"
  },
  {
    "text": "and most of the platforms support them so what I've done is I've taken my content out of web config and I've put",
    "start": "1946110",
    "end": "1952050"
  },
  {
    "text": "it into environment variables so in my model for the database for identity",
    "start": "1952050",
    "end": "1957120"
  },
  {
    "text": "framework I'm using a custom database connection string that I pull from the environment variable which like it's set",
    "start": "1957120",
    "end": "1962820"
  },
  {
    "text": "using docker and exactly the same for the message queue the message queues got a custom confit class that's expecting",
    "start": "1962820",
    "end": "1969570"
  },
  {
    "text": "to find an environment variable called message to URL which tells it the location of the message queue so that's",
    "start": "1969570",
    "end": "1975210"
  },
  {
    "text": "all has changed so that's going to build this and then we'll have a look at what we're building okay so in the docker",
    "start": "1975210",
    "end": "1984450"
  },
  {
    "text": "world now my web application docker file is more or less the same it's the same",
    "start": "1984450",
    "end": "1990570"
  },
  {
    "text": "up to point where lines we're over I exposed the port I'm adding a default",
    "start": "1990570",
    "end": "1995610"
  },
  {
    "text": "value for this message to URL the default environment variable value I can default that because I'm going to own",
    "start": "1995610",
    "end": "2001580"
  },
  {
    "text": "starting up all the containers so I can be sure that I'll start containing a core message queue so I can use a default lightly for luck",
    "start": "2001580",
    "end": "2007490"
  },
  {
    "text": "nice and simple the other stuff hasn't changed what I've also done is I've added a health check so the health check",
    "start": "2007490",
    "end": "2013580"
  },
  {
    "text": "is a really neat part of docker because Dhaka doesn't understand my application doesn't know what's wrong it doesn't",
    "start": "2013580",
    "end": "2018770"
  },
  {
    "text": "doesn't really care what's happening inside that all it can do is watch the process it started and be alerted if",
    "start": "2018770",
    "end": "2024290"
  },
  {
    "text": "that process goes down the health check features lets me go one step further and tell docker how to check my application",
    "start": "2024290",
    "end": "2030920"
  },
  {
    "text": "is still healthy because I could still have is running but it might be returning 403 s all the time so what I",
    "start": "2030920",
    "end": "2036980"
  },
  {
    "text": "can do here is give it a really simple little script which in this case this is going to run inside the container it's",
    "start": "2036980",
    "end": "2043100"
  },
  {
    "text": "going to make a little Parishad call to the localhost which is the web app running in the container if I get a 200",
    "start": "2043100",
    "end": "2048500"
  },
  {
    "text": "response I tell docker everything's ok and if I don't learn I tell doc there's a problem docker will run this by",
    "start": "2048500",
    "end": "2054350"
  },
  {
    "text": "default in the container every 30 seconds so not only can I use this to check my applications healthy I can also",
    "start": "2054350",
    "end": "2060620"
  },
  {
    "text": "use this as a smoke test that I need to manually smoke test my app because docker will do it for me as long as my",
    "start": "2060620",
    "end": "2066440"
  },
  {
    "text": "script is testing enough of the app for me to be confident and it's also a warm",
    "start": "2066440",
    "end": "2071510"
  },
  {
    "text": "up because it's going to periodically keep my app pings with it with the request who's going to keep it alive",
    "start": "2071510",
    "end": "2076820"
  },
  {
    "text": "here I've got a cache that's got some timed expiry then this is going to keep my Tosh up-to-date for me I've got a new",
    "start": "2076820",
    "end": "2083510"
  },
  {
    "text": "docker file for my second component my my message handler which is just might dominate console app this is much",
    "start": "2083510",
    "end": "2090020"
  },
  {
    "text": "simpler because I need fewer components to get my app up and running starts in the same way I start from Windows server",
    "start": "2090020",
    "end": "2095990"
  },
  {
    "text": "core I switch to PowerShell turn off the DNS cache so all doc mouse and start in",
    "start": "2095990",
    "end": "2101300"
  },
  {
    "text": "the same way I don't need to install dotnet framework because the the Windows server core image has already got 4.6",
    "start": "2101300",
    "end": "2107210"
  },
  {
    "text": "head up so all I do is copy in my built project set the same default value for",
    "start": "2107210",
    "end": "2112910"
  },
  {
    "text": "my message to you and then I tell docker when you start the application just start my console up that's all I need to",
    "start": "2112910",
    "end": "2118310"
  },
  {
    "text": "do so let's let's start this up and running and I'm starting in a different",
    "start": "2118310",
    "end": "2126080"
  },
  {
    "text": "way which I'll explain right now so",
    "start": "2126080",
    "end": "2131170"
  },
  {
    "text": "I've now got a distributed application across multiple components I've got my database I've got my web app I've got my",
    "start": "2131960",
    "end": "2138080"
  },
  {
    "text": "message queue I've got my message handler they're all running in different containers they need to run under the",
    "start": "2138080",
    "end": "2143780"
  },
  {
    "text": "right names to make sure they can find each other they need to running the same docking network they need to be started up in the right order I could do docker",
    "start": "2143780",
    "end": "2150770"
  },
  {
    "text": "run manually and start them all up in the right order or I could write a PowerShell script to do that for me but",
    "start": "2150770",
    "end": "2155900"
  },
  {
    "text": "there's a another part of the docker platform called docker compose which lets me compose a distributed",
    "start": "2155900",
    "end": "2161210"
  },
  {
    "text": "application and specify what needs to go into into starting that application up so just like my docker file is",
    "start": "2161210",
    "end": "2167720"
  },
  {
    "text": "effectively replacing my deployment document for a single component my docker compose file is effectively the",
    "start": "2167720",
    "end": "2174589"
  },
  {
    "text": "deployment document for the whole distributed solution so it's written in yam also it's very easy to read and what",
    "start": "2174589",
    "end": "2181280"
  },
  {
    "text": "it does is it just takes the place of all the docker run commands and you can use the same sort of values that you would pass the docker run so my database",
    "start": "2181280",
    "end": "2188599"
  },
  {
    "text": "is my product launch PB I'm starting it from Microsoft sequel server Express",
    "start": "2188599",
    "end": "2193670"
  },
  {
    "text": "image I expose the port I set the values for the environment that I need and I connect it to a specific network the",
    "start": "2193670",
    "end": "2200900"
  },
  {
    "text": "message cube that's my new component I'm using maps which is an open source message queue it's on docker hub I'm not",
    "start": "2200900",
    "end": "2207230"
  },
  {
    "text": "building that myself and pull it down from docker hub I've got my product launch website which is version 3 that",
    "start": "2207230",
    "end": "2213200"
  },
  {
    "text": "I've just built from my own my own docker image I specify the port is to expose I've got my database connection",
    "start": "2213200",
    "end": "2219950"
  },
  {
    "text": "string in here as an environment variable got the password in there like I said that's not great there are better ways to do it or we have time to show",
    "start": "2219950",
    "end": "2225950"
  },
  {
    "text": "you I can also tell docker composed of this service my web application depends",
    "start": "2225950",
    "end": "2231560"
  },
  {
    "text": "on other services that are running so that dependency is going to let docker compose start them up in the right order",
    "start": "2231560",
    "end": "2236930"
  },
  {
    "text": "it won't start my web application until my sequel server is up and running and my message queue and my new component is",
    "start": "2236930",
    "end": "2242990"
  },
  {
    "text": "my message handler so again that's been built from my image from my application packaging my dock my console app I also",
    "start": "2242990",
    "end": "2250130"
  },
  {
    "text": "give it a database connection string and it also depends on the database and the message queue",
    "start": "2250130",
    "end": "2255260"
  },
  {
    "text": "they're all plugged into the same docking network so all these containers can access each other by by the host",
    "start": "2255260",
    "end": "2260390"
  },
  {
    "text": "name and then the DNS inside docker will get them all up and running so the way I started that was with",
    "start": "2260390",
    "end": "2266460"
  },
  {
    "text": "docker compose up which is just going to run through my docker compose file and start all the service in the right order",
    "start": "2266460",
    "end": "2272040"
  },
  {
    "text": "the reason I've got an error there is because I've got a few beta bits and pieces and sometimes they're the",
    "start": "2272040",
    "end": "2277170"
  },
  {
    "text": "networking piece in Windows isn't quite up to scratch yet we're expecting an update for that shortly so what it does",
    "start": "2277170",
    "end": "2283020"
  },
  {
    "text": "is it creates all my all my services and then I can work with them in the same way so it's a new it's a different way",
    "start": "2283020",
    "end": "2288840"
  },
  {
    "text": "of firing up my application it's a different way of defining how the distributed solution fits together but",
    "start": "2288840",
    "end": "2294330"
  },
  {
    "text": "when they're running they're just running as docker containers so docker PS I've got four containers now database",
    "start": "2294330",
    "end": "2300240"
  },
  {
    "text": "website message queue message handler and I can work with them all in the same way so as before I can use docker",
    "start": "2300240",
    "end": "2306960"
  },
  {
    "text": "inspect to get the IP address oh if I give it the name of my web application",
    "start": "2306960",
    "end": "2313680"
  },
  {
    "text": "it's a new IP address because it's a new container my sequel server database is a new container too so it'll be empty the",
    "start": "2313680",
    "end": "2320400"
  },
  {
    "text": "previous day's that I put in there will have been lost because I didn't start my container in such a way that it saves data elsewhere you can obviously do that",
    "start": "2320400",
    "end": "2327330"
  },
  {
    "text": "but I'm just showing you here that if I take my container away for days it goes with it and unless I've specifically run",
    "start": "2327330",
    "end": "2332490"
  },
  {
    "text": "it to have the data outside of the container so I've got my IP address for my web application so this is Version",
    "start": "2332490",
    "end": "2338640"
  },
  {
    "text": "three and I can spin up to that so there was no startup time here because I was",
    "start": "2338640",
    "end": "2344700"
  },
  {
    "text": "gambling so long enough that the health check kicked in so doc around that health check for me it hit the home page",
    "start": "2344700",
    "end": "2350880"
  },
  {
    "text": "of my application which hit my entity framework which set of my database for me so that ran within 30 seconds I knew",
    "start": "2350880",
    "end": "2357360"
  },
  {
    "text": "as long as I talked long enough there wouldn't be a delay when I started the application so now I can sign up or",
    "start": "2357360",
    "end": "2363060"
  },
  {
    "text": "put in a different docker employee and",
    "start": "2363060",
    "end": "2371600"
  },
  {
    "text": "we'll save them we'll see how it looks so from the user experience is exactly",
    "start": "2371600",
    "end": "2377640"
  },
  {
    "text": "the same it's the same website when I click go I get a thank-you page really quickly the difference is if there were",
    "start": "2377640",
    "end": "2382980"
  },
  {
    "text": "tens of thousands of people doing the same thing I'd still get a thank-you page quickly with the previous version because I'm making that synchronous",
    "start": "2382980",
    "end": "2389790"
  },
  {
    "text": "connection into sequel server I'd be sitting and waiting and I'd probably get a timeout page so that's run now so",
    "start": "2389790",
    "end": "2395460"
  },
  {
    "text": "that's cool so we and see what's going on in our database by using the same command I can use that",
    "start": "2395460",
    "end": "2402700"
  },
  {
    "text": "same select command inside docker to see what's the data that's in there I'm only",
    "start": "2402700",
    "end": "2408520"
  },
  {
    "text": "going to have one row because this is a new container but I can also see what's going on in the other containers so if I",
    "start": "2408520",
    "end": "2415390"
  },
  {
    "text": "do a docker PS to list them all out I can refer to container by its name or by its ID if I want to see what my message",
    "start": "2415390",
    "end": "2422680"
  },
  {
    "text": "home has been doing I can run docker logs with my message x r ID and this is",
    "start": "2422680",
    "end": "2429430"
  },
  {
    "text": "the the output from console.writeline so docker can see what's being written by the application to the console and it",
    "start": "2429430",
    "end": "2435730"
  },
  {
    "text": "can surface those logs and it can actually the logging part of the platform is really extensible so I could send those logs somewhere central and do",
    "start": "2435730",
    "end": "2442210"
  },
  {
    "text": "such cool stuff so when the application starts it listens to this particular event and it tells me that it's received",
    "start": "2442210",
    "end": "2448540"
  },
  {
    "text": "a message from when I click sign up it saved a new prospect and I've got my prospect ID in there so I can see what's",
    "start": "2448540",
    "end": "2454360"
  },
  {
    "text": "happening by looking at the logs for this this application so this is a dotnet console out I've also got an",
    "start": "2454360",
    "end": "2460810"
  },
  {
    "text": "asp.net app that I can treat in the same way my message queue is a go application",
    "start": "2460810",
    "end": "2466210"
  },
  {
    "text": "so my message queue is called docker message queue 1 let's clear the screen",
    "start": "2466210",
    "end": "2472530"
  },
  {
    "text": "if I look at what's happening in there I can see the process is running and again",
    "start": "2472530",
    "end": "2480000"
  },
  {
    "text": "it's all behaving in this like the same way from Dockers point of view dr. doesn't knows as go up it doesn't know",
    "start": "2480000",
    "end": "2485200"
  },
  {
    "text": "my other apps and apps it doesn't care it's running a process it will keep an eye on that process and make sure it's up and running for me the actual process",
    "start": "2485200",
    "end": "2491650"
  },
  {
    "text": "is this command D which is my which is the DOE application that's running my message queue it's using two and a half",
    "start": "2491650",
    "end": "2498010"
  },
  {
    "text": "megabytes of memory so that's incredibly lightweight message to it sort of huge amount of capability I didn't have to do",
    "start": "2498010",
    "end": "2503950"
  },
  {
    "text": "anything to get that into my application I don't have to download an MSI or run it or set up some configuration it's",
    "start": "2503950",
    "end": "2510580"
  },
  {
    "text": "just down on the hub ready to plug into my solution okay so that is Version",
    "start": "2510580",
    "end": "2517420"
  },
  {
    "text": "three cool so we fixed our performance issue which",
    "start": "2517420",
    "end": "2523450"
  },
  {
    "text": "is now I can scale independently of decoupled my web application from my database application my web application",
    "start": "2523450",
    "end": "2529720"
  },
  {
    "text": "for this feature is effectively stateless now so I could run lots and lots of my web containers and they're",
    "start": "2529720",
    "end": "2535180"
  },
  {
    "text": "all going to write to my message cube and if it takes a long time to pull all the messages out and save the data it",
    "start": "2535180",
    "end": "2540460"
  },
  {
    "text": "doesn't really matter for this particular feature we're now using an event-driven architecture because we're",
    "start": "2540460",
    "end": "2545980"
  },
  {
    "text": "publishing events to a queue that other things can listen for but I didn't really take the whole solution I've just",
    "start": "2545980",
    "end": "2551590"
  },
  {
    "text": "taken one feature that needed to be fixed and I've used the docker platform to make that change really really easily",
    "start": "2551590",
    "end": "2558840"
  },
  {
    "text": "the message amusing called Nats it's open source cross-platform message queue it's incredibly capable it will do tens",
    "start": "2558840",
    "end": "2565780"
  },
  {
    "text": "of thousands of messages per second easily it cost us so I can have lots of queues lots of queue containers running",
    "start": "2565780",
    "end": "2571510"
  },
  {
    "text": "on my on my hosts to get reliability and scalability and it's free to use and it's up there on the hub so you just",
    "start": "2571510",
    "end": "2578260"
  },
  {
    "text": "plug it straight in okay so that's our first one that's a kick for our first",
    "start": "2578260",
    "end": "2583660"
  },
  {
    "text": "feature we've just added a really high high-performing message queue that's available on the docker hub that someone",
    "start": "2583660",
    "end": "2589930"
  },
  {
    "text": "else has put there for me put it into my solution and then broken out one component into another container so that",
    "start": "2589930",
    "end": "2596080"
  },
  {
    "text": "I get the stale ability from decoupling but I've still got a problem if I want",
    "start": "2596080",
    "end": "2601450"
  },
  {
    "text": "to see any of that data so in my case I'm using the docker command to run some sequel for the users obviously that's",
    "start": "2601450",
    "end": "2607240"
  },
  {
    "text": "not an option they're still going to have to put in a ticket to get some data out so we're going to address that next",
    "start": "2607240",
    "end": "2612610"
  },
  {
    "text": "in version 4 how are we going to do that same approach I'm going to take some existing tried and trusted tools that",
    "start": "2612610",
    "end": "2619810"
  },
  {
    "text": "are on docker hub bring them into my solution and because I've now got an event-driven architecture for the event",
    "start": "2619810",
    "end": "2625060"
  },
  {
    "text": "I'm interested in I can just hook into that so I'm going to add a new component which listens for the same events and",
    "start": "2625060",
    "end": "2630570"
  },
  {
    "text": "publishes the information to a different data store to a reporting database that",
    "start": "2630570",
    "end": "2636130"
  },
  {
    "text": "the users can access themselves ok so same process as before let's clear",
    "start": "2636130",
    "end": "2643210"
  },
  {
    "text": "let's bone check out version 4 of my",
    "start": "2643210",
    "end": "2648400"
  },
  {
    "text": "application and in Visual Studio let's reload this I haven't changed anything to do with the",
    "start": "2648400",
    "end": "2655190"
  },
  {
    "text": "original application from the previous version so everything is the same for my web application for my original message",
    "start": "2655190",
    "end": "2661520"
  },
  {
    "text": "hands of the saving to sequel server none of that changes I've added a new component which is another dotnet",
    "start": "2661520",
    "end": "2668450"
  },
  {
    "text": "console application which looks exactly the same as the previous one when the app starts it connects to the message",
    "start": "2668450",
    "end": "2674360"
  },
  {
    "text": "queue and listens for the same events the prospect signed up events and then when it gets an event it saves it in a",
    "start": "2674360",
    "end": "2681920"
  },
  {
    "text": "different type of data store so I'm using a document database I can be using elasticsearch which is which is a",
    "start": "2681920",
    "end": "2687350"
  },
  {
    "text": "massively popular open source document database the only thing that's changed is how I build the representation for",
    "start": "2687350",
    "end": "2693680"
  },
  {
    "text": "mine from my new datastore so I'm getting getting the same information I'm creating as a document in elasticsearch",
    "start": "2693680",
    "end": "2699170"
  },
  {
    "text": "instead of creating it in sequel server so this components going to be added to my solution now so I'll go ahead and",
    "start": "2699170",
    "end": "2705830"
  },
  {
    "text": "build it and then we'll look at how it looks in czaka so for the web",
    "start": "2705830",
    "end": "2711770"
  },
  {
    "text": "application docker file hasn't changed for the original prospect handler that's saving in sequel server that hasn't",
    "start": "2711770",
    "end": "2717620"
  },
  {
    "text": "changed I've got a new component a new docker file from my index handler which looks",
    "start": "2717620",
    "end": "2722780"
  },
  {
    "text": "exactly the same so when you start writing these docker file to your components actually great chunks of it are giving the same for every type of",
    "start": "2722780",
    "end": "2728360"
  },
  {
    "text": "app that you wrote that you write you've got the flexibility to configure each component exactly as you want to",
    "start": "2728360",
    "end": "2734240"
  },
  {
    "text": "but some of the summe a lot of commonality so we're in a server core powershell turn off the DNS cache",
    "start": "2734240",
    "end": "2739400"
  },
  {
    "text": "standard copy in my new donate console app set some environment variables again",
    "start": "2739400",
    "end": "2745400"
  },
  {
    "text": "I can be confident about this it looks like it's a nasty hard-coded string but because the platform is doing the make",
    "start": "2745400",
    "end": "2751700"
  },
  {
    "text": "sure that everything starts up how I want it to I can afford to hard-code these things so when I run this I don't need to understand how it connects to",
    "start": "2751700",
    "end": "2758360"
  },
  {
    "text": "other other components because that's built into the image so a default value for the message queue so I can listen",
    "start": "2758360",
    "end": "2764270"
  },
  {
    "text": "for these events and a default value for where I'm going to find elasticsearch when I start I run my startup command",
    "start": "2764270",
    "end": "2770260"
  },
  {
    "text": "ok so let's clear this and get it running so this docker compose up it's",
    "start": "2770260",
    "end": "2777770"
  },
  {
    "text": "just going to start my containers and D is that the same D flag to put everything in the background",
    "start": "2777770",
    "end": "2783160"
  },
  {
    "text": "okay so that's my new component the build process well it's the same stuff I've just added another another project",
    "start": "2783160",
    "end": "2790370"
  },
  {
    "text": "to build so I build my website build my original hands up my new handler and then I've got three docker built",
    "start": "2790370",
    "end": "2795800"
  },
  {
    "text": "commands one for each image so I've got an image from my web application an image from my save Handler and image",
    "start": "2795800",
    "end": "2801800"
  },
  {
    "text": "from my index Handler and my docker compose file now is much bigger because I'm adding various new components to",
    "start": "2801800",
    "end": "2808130"
  },
  {
    "text": "enable this feature this this data insight feature I've got my database I've got my message queue I've got",
    "start": "2808130",
    "end": "2814310"
  },
  {
    "text": "elastic search now so elastic search is that coming from docker hub I'm not building that myself here I don't have a",
    "start": "2814310",
    "end": "2820280"
  },
  {
    "text": "docker file for that someone else has got the docker file for that and that's custom from the hub and Cabana is a it's",
    "start": "2820280",
    "end": "2826160"
  },
  {
    "text": "like a self-service UI on top of elastic search and again that's coming from the hub and it knows about the elastic",
    "start": "2826160",
    "end": "2832310"
  },
  {
    "text": "search image so those two things are going to work together really nicely without me having to do anything all I do is expose the port that it runs on",
    "start": "2832310",
    "end": "2838100"
  },
  {
    "text": "and say that this this service the Cabana service depends on the elastic search service there's all nice and",
    "start": "2838100",
    "end": "2844310"
  },
  {
    "text": "straightforward what web application that hasn't changed except that I'm using v4 so I don't actually need to",
    "start": "2844310",
    "end": "2850550"
  },
  {
    "text": "rebuild this this application to add this new feature and whether or not you rebuild and tag everything with the same",
    "start": "2850550",
    "end": "2856880"
  },
  {
    "text": "version is a choice that you make so I could be running version 3 of this application but I've chosen to keep",
    "start": "2856880",
    "end": "2862160"
  },
  {
    "text": "everything in step so i know when i need virtual for just run version 4 of all the components prospect times are the",
    "start": "2862160",
    "end": "2868220"
  },
  {
    "text": "same for sequel server and my new index handler that depends on the message queue on elasticsearch are doing to",
    "start": "2868220",
    "end": "2874400"
  },
  {
    "text": "specify where to find elastic search because that's built into the image as long as there's a container called",
    "start": "2874400",
    "end": "2880100"
  },
  {
    "text": "elastic search this thing just works I don't need to specify the details about so if we look at what Dockers compose is",
    "start": "2880100",
    "end": "2886430"
  },
  {
    "text": "done its reusing some of those some of those components so it knows since I",
    "start": "2886430",
    "end": "2892940"
  },
  {
    "text": "last round docker compose that the message queue and the database are up to date they haven't changed because I'm",
    "start": "2892940",
    "end": "2899960"
  },
  {
    "text": "using new versions I'm getting a new version of my website and my handler I've got completely new containers for",
    "start": "2899960",
    "end": "2906110"
  },
  {
    "text": "elastic search cabana and for the new handler so I can do it like an incremental release with docker compose and it will look at what's currently",
    "start": "2906110",
    "end": "2912680"
  },
  {
    "text": "running it'll compare it to the definition of the solution in the compose while and it will it will basically do",
    "start": "2912680",
    "end": "2917849"
  },
  {
    "text": "the gift so it will run new things if it needs to it'll recreate them if it needs to and it will start new things if they're if",
    "start": "2917849",
    "end": "2923670"
  },
  {
    "text": "they're new components but just like before someone look at what's running so",
    "start": "2923670",
    "end": "2929010"
  },
  {
    "text": "I've got a whole bunch of containers running now I'm still not using hardly any of the resources that are on my",
    "start": "2929010",
    "end": "2934530"
  },
  {
    "text": "machine I could run tens or dozens of containers and it would all work happily and but I can work these things in the",
    "start": "2934530",
    "end": "2940710"
  },
  {
    "text": "same way so my docker website is now get the IP address for that so and there's",
    "start": "2940710",
    "end": "2950490"
  },
  {
    "text": "my IP address and I can use that to do some our website and person data in same",
    "start": "2950490",
    "end": "2956849"
  },
  {
    "text": "as before so it's exactly the same it's",
    "start": "2956849",
    "end": "2962790"
  },
  {
    "text": "already warmed up because of the health check that's in there I could go and sign up and put some more data in I'm not gonna do that at the moment I'm",
    "start": "2962790",
    "end": "2968520"
  },
  {
    "text": "instead going to have a look at some of these other things that are running in docker now so I've got elasticsearch running I can have a look and see what's",
    "start": "2968520",
    "end": "2976260"
  },
  {
    "text": "going on in my elasticsearch container and I can see the logs that are written by the process this is a java",
    "start": "2976260",
    "end": "2981390"
  },
  {
    "text": "application I don't have Java on my machine why don't I install the driver on my machine this is running inside the",
    "start": "2981390",
    "end": "2986490"
  },
  {
    "text": "container it's with the right version of Java it's all configured it's just straight down from the hub it just gets used if you run this to yourself for the",
    "start": "2986490",
    "end": "2993030"
  },
  {
    "text": "first time it will download these new images so if I hadn't already pre-prepared this it would take a few",
    "start": "2993030",
    "end": "2998310"
  },
  {
    "text": "moments to download that that elasticsearch image if I look at what's going on in Cabana which as it happens",
    "start": "2998310",
    "end": "3004849"
  },
  {
    "text": "is an odorous application and I can see the logs of Japan are starting up and getting started no js' governs our bank",
    "start": "3004849",
    "end": "3012109"
  },
  {
    "text": "stored in this machine it's fine it's all configured inside the inside the image so when I run my container it's got everything it needs to spin up the",
    "start": "3012109",
    "end": "3018230"
  },
  {
    "text": "application now I said I wasn't going to use I wasn't going to put in my form and",
    "start": "3018230",
    "end": "3023690"
  },
  {
    "text": "the reason I'm not going to do that is because I've got an end-to-end test in here which is going to pre-populate some",
    "start": "3023690",
    "end": "3029150"
  },
  {
    "text": "data for me so I've got a spec flow test that just needs the URL or the host name",
    "start": "3029150",
    "end": "3034880"
  },
  {
    "text": "or the host brother which if I'd actually saved it that would be useful",
    "start": "3034880",
    "end": "3040510"
  },
  {
    "text": "okay and this sort of end-to-end test is going to flex from the entry point is",
    "start": "3040510",
    "end": "3045809"
  },
  {
    "text": "really useful if you're doing this sort of modernization by feature approach so",
    "start": "3045809",
    "end": "3051030"
  },
  {
    "text": "in this case I'm just using this test to drive some data but I could have assertions in here that makes sure my",
    "start": "3051030",
    "end": "3057109"
  },
  {
    "text": "data get served equal safety sequel server and my data gets saved to elastic search and if I change the setup of my",
    "start": "3057109",
    "end": "3063540"
  },
  {
    "text": "application and change where these components live the end-to-end test should still run so when I submit my",
    "start": "3063540",
    "end": "3069930"
  },
  {
    "text": "form if I had a check to see that the data is in a sequel server that check is still valid even though I've moved the",
    "start": "3069930",
    "end": "3075270"
  },
  {
    "text": "components apart so this sort of automated testing which is just a basic example it's really good to have in your",
    "start": "3075270",
    "end": "3081720"
  },
  {
    "text": "solution if you're looking at breaking it apart moving moving features around so I'm going to let that run on and",
    "start": "3081720",
    "end": "3088049"
  },
  {
    "text": "while that's going I'm going to have a look at my Cabana so Cabana is this",
    "start": "3088049",
    "end": "3093950"
  },
  {
    "text": "again it's an open source tool if I didn't know anything about it when I run it I know it it's on port five 601",
    "start": "3093950",
    "end": "3101670"
  },
  {
    "text": "because it tells me here so I can go back to my original web application and",
    "start": "3101670",
    "end": "3106880"
  },
  {
    "text": "browse the Cabana and this is straight",
    "start": "3106880",
    "end": "3112740"
  },
  {
    "text": "out of the box I'm not doing anything to set this up it's found elasticsearch is expected to find it on a container",
    "start": "3112740",
    "end": "3118079"
  },
  {
    "text": "called elastic search and that's up and running the only thing I need to do is tell it the name of my document",
    "start": "3118079",
    "end": "3123150"
  },
  {
    "text": "collection which happens to be Prospect and it will connect to elastic search and it finds all the data that's in my",
    "start": "3123150",
    "end": "3129180"
  },
  {
    "text": "prospect selection there's already some data there because my tests have put it in so I can see all the fields that that",
    "start": "3129180",
    "end": "3135030"
  },
  {
    "text": "elastic search knows about so Kabam is really cool because i can look at the discover tab and it's just going to show",
    "start": "3135030",
    "end": "3141750"
  },
  {
    "text": "me all the data that's in there with a timeline showing me when these documents got created so from my really basic",
    "start": "3141750",
    "end": "3147119"
  },
  {
    "text": "tests I can see each individual prospect that's signed up and I can see all the",
    "start": "3147119",
    "end": "3152490"
  },
  {
    "text": "data that they put in so if I wanted to I could get a list of email addresses and that sort of stuff but for power",
    "start": "3152490",
    "end": "3157589"
  },
  {
    "text": "users it's really easy to pick up their own and their own requirements and implement it with with cabaña so if I",
    "start": "3157589",
    "end": "3164730"
  },
  {
    "text": "want to pie charts from my prospects I can split it by the terms in the role",
    "start": "3164730",
    "end": "3171630"
  },
  {
    "text": "name field and I get my nice pie chart that's showing me with my test data 50% of people are",
    "start": "3171630",
    "end": "3178630"
  },
  {
    "text": "decision-makers and 30% are architects if I want to change the look at countries I just change the field and",
    "start": "3178630",
    "end": "3184690"
  },
  {
    "text": "run it again so this is self-service analytics is really easy application to use I can give this to power users I can",
    "start": "3184690",
    "end": "3191140"
  },
  {
    "text": "secure the container so I can only access to banner from within my network so that wouldn't be publicly available whereas the rest of the website would",
    "start": "3191140",
    "end": "3197470"
  },
  {
    "text": "and not only can people go in and build their own visualizations but I can build dashboards and have lots of",
    "start": "3197470",
    "end": "3204670"
  },
  {
    "text": "visualizations and give you a central point to find out what's going on and users can build those themselves so it's",
    "start": "3204670",
    "end": "3210220"
  },
  {
    "text": "added a huge amount of capability here we're doing very little work which is you know what we all want to do I guess",
    "start": "3210220",
    "end": "3216160"
  },
  {
    "text": "so that's version 4 I've added self-service analytics by doing exactly",
    "start": "3216160",
    "end": "3221829"
  },
  {
    "text": "the same I did with the previous versions I've added some new containers one of them has got some of my code in",
    "start": "3221829",
    "end": "3227140"
  },
  {
    "text": "it tiny amount of code to create my document date my document data and I've plugged in components that are available",
    "start": "3227140",
    "end": "3233560"
  },
  {
    "text": "on docker hub now I could do this release during office hours while people",
    "start": "3233560",
    "end": "3238690"
  },
  {
    "text": "are using the app because they don't need to change the existing components in this state ID because I by toggling",
    "start": "3238690",
    "end": "3243760"
  },
  {
    "text": "with the new version but I could just release these new components that are hooking into my original event-driven",
    "start": "3243760",
    "end": "3249609"
  },
  {
    "text": "feature and I wouldn't have any downtime at all for this so not only can I do a really nice safe update and I've got",
    "start": "3249609",
    "end": "3256240"
  },
  {
    "text": "some fantastic capabilities here the two things that I've plugged in elastic search engine banner enterprise-grade",
    "start": "3256240",
    "end": "3262410"
  },
  {
    "text": "components they happen to be open source but elastic search you can run it in docker you can run clustered and",
    "start": "3262410",
    "end": "3268920"
  },
  {
    "text": "clustered elastic search instances on different containers on different hosts and I've had this running in docker with",
    "start": "3268920",
    "end": "3274810"
  },
  {
    "text": "terabytes of data and it just all works you don't need to understand what it's doing it's like on version 5 of the",
    "start": "3274810",
    "end": "3281560"
  },
  {
    "text": "product is tried as trusted people use it all over the world we just plugged it into our solution without having to do",
    "start": "3281560",
    "end": "3287050"
  },
  {
    "text": "hardly anything ok now we've got our data insights of people business users",
    "start": "3287050",
    "end": "3292359"
  },
  {
    "text": "you know find out who's starting up for art Ferrara or a great new product launch which leaves us with one last",
    "start": "3292359",
    "end": "3298329"
  },
  {
    "text": "feature to do which is the UX so I want to be able to change the landing page without having to do a full release so",
    "start": "3298329",
    "end": "3304690"
  },
  {
    "text": "let's go and have a look at how we're going to do that they're purchasing the exactly the same I'm going to have a new component just",
    "start": "3304690",
    "end": "3309970"
  },
  {
    "text": "my home page and I'm going to change my original web app so that it hooks into my new component and let's see this so",
    "start": "3309970",
    "end": "3319050"
  },
  {
    "text": "exactly the same as before I'm going to check out version 5 so I don't have to",
    "start": "3319050",
    "end": "3324250"
  },
  {
    "text": "try and write any code and spell everything wrong and get that building so version 5 yes I want to reload the",
    "start": "3324250",
    "end": "3332590"
  },
  {
    "text": "only thing that's changed is the content of my default page from my web application so what I do now is when I",
    "start": "3332590",
    "end": "3339580"
  },
  {
    "text": "hit the default page I check to see if there's a configured home page URL which will be an environment variable I'm",
    "start": "3339580",
    "end": "3345940"
  },
  {
    "text": "using that like a feature switch so if there is a home page URL configured then instead of rendering my own content I'm",
    "start": "3345940",
    "end": "3352150"
  },
  {
    "text": "going to get the content from that URL and render it back out so this is a way",
    "start": "3352150",
    "end": "3357220"
  },
  {
    "text": "to pass control over to another component but I've still got the same entry point while web application is",
    "start": "3357220",
    "end": "3363280"
  },
  {
    "text": "still where people hit and now it's kind of evolving control out to a separate component for my um for my home page and",
    "start": "3363280",
    "end": "3370210"
  },
  {
    "text": "in the docker world the only real change is a new docker file for my home page",
    "start": "3370210",
    "end": "3375670"
  },
  {
    "text": "components so this is using Windows server core to reach the PowerShell turnoff the DNS cache it's an it's a web",
    "start": "3375670",
    "end": "3382990"
  },
  {
    "text": "application so I'm installing is but it's not asp.net I'm using a different framework so I'm just copying in my HTML",
    "start": "3382990",
    "end": "3389290"
  },
  {
    "text": "document and I've got a health check in there to keep it all up and running so let's see that's all built so I'll do",
    "start": "3389290",
    "end": "3397390"
  },
  {
    "text": "docker compose up again to start up the new versions and in my docker compose",
    "start": "3397390",
    "end": "3404140"
  },
  {
    "text": "file I've got a new component for my home page which is using my new version of my home page image that I've just",
    "start": "3404140",
    "end": "3410619"
  },
  {
    "text": "built and I've changed my product launch website to include that home page URL by configuration and value which I'm also",
    "start": "3410619",
    "end": "3417760"
  },
  {
    "text": "using like a feature flag so that's all up and running now so if I do a docker PS I've now got a pretty distributed",
    "start": "3417760",
    "end": "3425500"
  },
  {
    "text": "solution I've got eight containers that are all doing different things but my anchor point for my app is still exactly",
    "start": "3425500",
    "end": "3430510"
  },
  {
    "text": "the same and for users the way the user hasn't changed either so let's have a look at this web application now so",
    "start": "3430510",
    "end": "3439570"
  },
  {
    "text": "let's inspect that Oh so this would be this is a new container",
    "start": "3439570",
    "end": "3445180"
  },
  {
    "text": "because I've changed the image definition switch to version 5 and when I browse to this now we'll see my",
    "start": "3445180",
    "end": "3452320"
  },
  {
    "text": "awesome new web page Hey",
    "start": "3452320",
    "end": "3458380"
  },
  {
    "text": "so like this is like totally futuristic design sorry I'm not available for design consultancy but the point is this",
    "start": "3458380",
    "end": "3465100"
  },
  {
    "text": "is this is not asp.net I'm using the marquee element for HTML but I could be",
    "start": "3465100",
    "end": "3470500"
  },
  {
    "text": "using anything in there and if I want to change my homepage if for some reason this wasn't popular then I could switch",
    "start": "3470500",
    "end": "3477130"
  },
  {
    "text": "just the home page component to a totally different back and I wouldn't have to change my running application",
    "start": "3477130",
    "end": "3482200"
  },
  {
    "text": "when this stops blinking if you can click it I just go back into the previous the previous page and I can put",
    "start": "3482200",
    "end": "3488770"
  },
  {
    "text": "any old data in here V 5 V 5 V 5 click on go and that's going to go through the",
    "start": "3488770",
    "end": "3494980"
  },
  {
    "text": "rest of the stack and because it didn't change my other components I'm still using the same elasticsearch the same",
    "start": "3494980",
    "end": "3500410"
  },
  {
    "text": "Cabana my new data that's just gone in there is already index finger banner so",
    "start": "3500410",
    "end": "3505720"
  },
  {
    "text": "there's my version 5 data that I've just put in so that's all up and running so",
    "start": "3505720",
    "end": "3510760"
  },
  {
    "text": "that was version 5 that was pretty quick and this is our full solution now so",
    "start": "3510760",
    "end": "3517360"
  },
  {
    "text": "this is a fairly elaborate complex solution that's been built up in stages for the feature different",
    "start": "3517360",
    "end": "3522490"
  },
  {
    "text": "approach and the final thing I did was to swap out the home page for my my awesome short wheels and design skills I",
    "start": "3522490",
    "end": "3528600"
  },
  {
    "text": "could be using react or attenborough or whatever I want to use so this is good for the I need to do for the product",
    "start": "3528600",
    "end": "3534430"
  },
  {
    "text": "owners who can change UI without having to do a full release it's great for architects or devs who want to try out a",
    "start": "3534430",
    "end": "3540580"
  },
  {
    "text": "new framework in a controlled way so I can I'm only going to build the home page we're going to test the home page",
    "start": "3540580",
    "end": "3546370"
  },
  {
    "text": "when I release it everything else will work an interesting option is like could use a DN a CMS in there so I could use",
    "start": "3546370",
    "end": "3552580"
  },
  {
    "text": "I'm Braco open source content management system I think that users do their own content ok so I've done that to our",
    "start": "3552580",
    "end": "3560830"
  },
  {
    "text": "three text arts break so let's remember we started with the web forms up and sequel server database and now I've got",
    "start": "3560830",
    "end": "3566500"
  },
  {
    "text": "an Avenger of an architecture self-service analytics potentially self-service content so that's a massive",
    "start": "3566500",
    "end": "3572170"
  },
  {
    "text": "step forward with very little development and very little risk when I did my new applications so your",
    "start": "3572170",
    "end": "3579650"
  },
  {
    "text": "takeaways docker is a mature platform I've shown the key features you probably owe a lot of questions about persistence",
    "start": "3579650",
    "end": "3585710"
  },
  {
    "text": "and security and scalability they've all been answered because dock is being used in production in some significant applications significant",
    "start": "3585710",
    "end": "3592520"
  },
  {
    "text": "clients you can move wraps dock it easily you can take your existing out from running docker as long as there's",
    "start": "3592520",
    "end": "3597650"
  },
  {
    "text": "as long as you can install it and run it without a UI then it'll run in docker and then the the slogan when you've",
    "start": "3597650",
    "end": "3605000"
  },
  {
    "text": "docker eyes that you that enables you to modernize your application so sounds a bit like a cat poster",
    "start": "3605000",
    "end": "3610070"
  },
  {
    "text": "so there's your cat poster there are a few more talks today about docker so room to next Benton halls going to talk",
    "start": "3610070",
    "end": "3615530"
  },
  {
    "text": "about how Windows containers actually work Philips talking about monitoring later on and then Michelle's talking about",
    "start": "3615530",
    "end": "3621110"
  },
  {
    "text": "orchestration which is how you you met all these different components work together a few search terms for you we",
    "start": "3621110",
    "end": "3627230"
  },
  {
    "text": "got some labs on github that you can follow through to test this up yourself captains are the equivalent of Microsoft",
    "start": "3627230",
    "end": "3632870"
  },
  {
    "text": "MVPs and our big conference is dr. Conn I'm tweeting all the time about this",
    "start": "3632870",
    "end": "3638090"
  },
  {
    "text": "stuff I'm just Ellison so minute Twitter and that's it so I hope that was useful I'm around all day I've got some swag if you",
    "start": "3638090",
    "end": "3644600"
  },
  {
    "text": "want it asking questions you've got and enjoy the rest of NEC [Applause]",
    "start": "3644600",
    "end": "3651180"
  }
]