[
  {
    "text": "check who's uh who's running the show he didn't want that okay well i think i should just crack on",
    "start": "8320",
    "end": "16800"
  },
  {
    "text": "and start any uh just check",
    "start": "16800",
    "end": "23519"
  },
  {
    "text": "all good go thumbs up okay we're on uh",
    "start": "23519",
    "end": "31119"
  },
  {
    "text": "great to be back in person i am my head is still in a spin from seeing real people um i",
    "start": "31119",
    "end": "38879"
  },
  {
    "text": "i i'm not used to this at all and uh i i got my um",
    "start": "38879",
    "end": "45840"
  },
  {
    "text": "got my vaccine one got my vaccine too got my vac vaccine optimistically got my vaccine three on monday",
    "start": "45840",
    "end": "52719"
  },
  {
    "text": "and have been wiped out since then so i spent uh two days uh solid sleeping",
    "start": "52719",
    "end": "59359"
  },
  {
    "text": "uh and uh so if i feel a little bit out of out of sync you'll know that i'm just",
    "start": "59359",
    "end": "65119"
  },
  {
    "text": "just getting back to normal uh it yeah it's really really wonderful to",
    "start": "65119",
    "end": "70320"
  },
  {
    "text": "have us back together in in person and uh it's been uh one pandemic and two",
    "start": "70320",
    "end": "76159"
  },
  {
    "text": "language versions for me uh so um it's it's been a productive productive",
    "start": "76159",
    "end": "82320"
  },
  {
    "text": "time i'm actually really happy with uh how just how far we've been able to progress",
    "start": "82320",
    "end": "90320"
  },
  {
    "text": "uh things in the world of f sharp and i'm just going to kind of take you on a gentle walk through what we've been",
    "start": "90320",
    "end": "96960"
  },
  {
    "text": "doing since march 2018 and",
    "start": "96960",
    "end": "103759"
  },
  {
    "text": "even one of the features we worked on i really like this it kind of brackets the",
    "start": "104240",
    "end": "109280"
  },
  {
    "text": "whole thing for me one of the features which i'll be talking about actually came directly from the very",
    "start": "109280",
    "end": "116079"
  },
  {
    "text": "last f-sharp london meetup that we had in february 2020 and we got",
    "start": "116079",
    "end": "122159"
  },
  {
    "text": "together we talked about someone gave a talk nick blair gave a talk on a flick what he called applicatives",
    "start": "122159",
    "end": "128399"
  },
  {
    "text": "and i thought yes we should finally do the thing in the language to give proper",
    "start": "128399",
    "end": "135040"
  },
  {
    "text": "support to this thing and so you know there's a whole story here about how f",
    "start": "135040",
    "end": "140560"
  },
  {
    "text": "sharp five and f sharp six have come about and i just wanted to talk you through uh what we've been doing it's a",
    "start": "140560",
    "end": "145840"
  },
  {
    "text": "very uh informal talk and i'll be giving lots of demos along the way but the first uh part of the",
    "start": "145840",
    "end": "152000"
  },
  {
    "text": "talk is actually a little bit different which is uh we've also done some changes to how we talk about f sharp and this um",
    "start": "152000",
    "end": "160160"
  },
  {
    "text": "and i thought i'd just kind of bring this up as a topic you can talk about it amongst uh",
    "start": "160160",
    "end": "165440"
  },
  {
    "text": "between us all afterwards and as we go and they're an important set of changes that came through our work with the.net foundation",
    "start": "165440",
    "end": "172000"
  },
  {
    "text": "and the f-sharp software foundation and uh through some of the people at microsoft as well though the binom this",
    "start": "172000",
    "end": "178400"
  },
  {
    "text": "is absolutely collaboration with the community as well and uh it's sort of a marketing exercise",
    "start": "178400",
    "end": "184239"
  },
  {
    "text": "that a few of us did the people uh in charge of dot net and the net foundation",
    "start": "184239",
    "end": "189680"
  },
  {
    "text": "and and uh microsoft kind of said to us look uh",
    "start": "189680",
    "end": "194879"
  },
  {
    "text": "you know we understand f sharp it's absolutely fantastic and it but do you have to talk you have to make the",
    "start": "194879",
    "end": "201120"
  },
  {
    "text": "functional thing about f sharp so central to your messaging the way you talk",
    "start": "201120",
    "end": "206640"
  },
  {
    "text": "about f sharp because we understand that for people who get functional programming",
    "start": "206640",
    "end": "213280"
  },
  {
    "text": "uh that that makes sense but that you know the value that you're bringing",
    "start": "213280",
    "end": "219840"
  },
  {
    "text": "can be lost on other people who don't understand who don't who don't who who actually could be benefiting from what",
    "start": "219840",
    "end": "226560"
  },
  {
    "text": "you've got here but you're not reaching them with the messaging you're using and so",
    "start": "226560",
    "end": "232239"
  },
  {
    "text": "uh they asked us to kind of say go go go right from the right and back to the start about how you talk about f sharp",
    "start": "232239",
    "end": "238560"
  },
  {
    "text": "and we and and i sat down with philip carter with scott hunter of the of uh microsoft",
    "start": "238560",
    "end": "244720"
  },
  {
    "text": "uh with nicholas gustafsson uh also reid copsy isaac abraham and others",
    "start": "244720",
    "end": "250400"
  },
  {
    "text": "and we started talking about who we really aiming at besides the kind of",
    "start": "250400",
    "end": "255840"
  },
  {
    "text": "you know besides the people already using f sharp who we who are we kind of talking about and there's two really big target markets which",
    "start": "255840",
    "end": "262160"
  },
  {
    "text": "uh are more indicators they actually apply to pretty much every other programming language in the world",
    "start": "262160",
    "end": "267680"
  },
  {
    "text": "so in a sense we're after everyone but uh we use these two groups as our kind of",
    "start": "267680",
    "end": "275360"
  },
  {
    "text": "initial kind of starting point uh well after python programs but we're not after all python programmers okay the",
    "start": "275360",
    "end": "282240"
  },
  {
    "text": "great thing about python programmers is there's so many of them in the world you only need to be able to address like one",
    "start": "282240",
    "end": "287840"
  },
  {
    "text": "percent of them to have a really huge number of programmers right okay uh so",
    "start": "287840",
    "end": "293680"
  },
  {
    "text": "but python programmers are absolutely hitting limitations okay they hit limitations with respect to",
    "start": "293680",
    "end": "300080"
  },
  {
    "text": "typing and they hit limitations with respect to performance in particular if you write over five or ten thousand",
    "start": "300080",
    "end": "305520"
  },
  {
    "text": "lines of python code you're you you start you're really in trouble with regard to a lack of static typing okay",
    "start": "305520",
    "end": "312320"
  },
  {
    "text": "if you uh uh if very large chunks of python code end up",
    "start": "312320",
    "end": "317680"
  },
  {
    "text": "being moved across into c plus because of performance issues okay",
    "start": "317680",
    "end": "323120"
  },
  {
    "text": "and we and those of us programming in c-sharp and f-sharp and net know that that doesn't have to be the case okay so",
    "start": "323120",
    "end": "329680"
  },
  {
    "text": "python programs are hitting the limits cjr program has been interesting and look c sharp is an amazing language it's",
    "start": "329680",
    "end": "335360"
  },
  {
    "text": "been it's progressed so far over the last year from when i first engaged with it in c sharp 1.0 it's just",
    "start": "335360",
    "end": "341680"
  },
  {
    "text": "it's been on a long journey of its own to try to stop being what it originally was and become something else okay",
    "start": "341680",
    "end": "348160"
  },
  {
    "text": "and uh and that's that is really uh really amazing but there are c-sharp",
    "start": "348160",
    "end": "354720"
  },
  {
    "text": "programmers who who frankly get a bit fed up with the whole object-oriented",
    "start": "354720",
    "end": "360479"
  },
  {
    "text": "thing and they look over towards the python world and they think i want that succinctness you know i want",
    "start": "360479",
    "end": "366639"
  },
  {
    "text": "that kind of data orientation i want that scripting i uh uh",
    "start": "366639",
    "end": "372160"
  },
  {
    "text": "there's a whole lot of aspects which although c sharp is working hard to get them into the into c sharp they're not",
    "start": "372160",
    "end": "379280"
  },
  {
    "text": "there in the sort of practical experience of using the language day-to-day",
    "start": "379280",
    "end": "384960"
  },
  {
    "text": "and so they think well actually i just might leave the whole.net ecosystem right and and go and go go and go go",
    "start": "384960",
    "end": "393360"
  },
  {
    "text": "or go uh python or whatever else they they think they'll do and we and we",
    "start": "393360",
    "end": "399360"
  },
  {
    "text": "think that doesn't have to be the case that actually the net ecosystem can offer",
    "start": "399360",
    "end": "404720"
  },
  {
    "text": "alternative views on programming and that f sharp represents this really",
    "start": "404720",
    "end": "412000"
  },
  {
    "text": "sweet spot between the worlds of of of of sort of succinct programming and",
    "start": "412000",
    "end": "418720"
  },
  {
    "text": "succinct data oriented programming and transition into fully statically strongly typed programming uh as",
    "start": "418720",
    "end": "424479"
  },
  {
    "text": "interoperable programming so we we we did a marketing exercise where we think okay there are target",
    "start": "424479",
    "end": "430240"
  },
  {
    "text": "markets we want to write down all the technical features and qualities of fsharp i haven't got the original of this uh i've lost that but",
    "start": "430240",
    "end": "438000"
  },
  {
    "text": "and then we kind of marked them up for relevance to the different target markets okay is this relevant to c-sharp",
    "start": "438000",
    "end": "443520"
  },
  {
    "text": "programmers is this relevant to f-sharp programmers and we just sort of chose the top three more or less",
    "start": "443520",
    "end": "448880"
  },
  {
    "text": "and something like this it wasn't this one and so we might for instance say okay here are these qualities sickness",
    "start": "448880",
    "end": "454080"
  },
  {
    "text": "robustness performance expressiveness interoperable and we started group we listed like 20 30 of them and we kind of",
    "start": "454080",
    "end": "460880"
  },
  {
    "text": "bucketed them and so on and yes we sometimes we found ourselves listing qualities and then there are different features under those so what supports",
    "start": "460880",
    "end": "467440"
  },
  {
    "text": "succinctness in fsharp well you have amazing type inference it's expression oriented you have two pools you have active you know there are",
    "start": "467440",
    "end": "473759"
  },
  {
    "text": "there are features that support uh equality and experience and robustness okay no nulls uh",
    "start": "473759",
    "end": "479599"
  },
  {
    "text": "functional abstraction types and so on unless you write robust uh code",
    "start": "479599",
    "end": "485199"
  },
  {
    "text": "reusable code and then um and so on typed code generics without boxing and",
    "start": "485199",
    "end": "490560"
  },
  {
    "text": "so on uh with performance and what appeals to python developers well",
    "start": "490560",
    "end": "495759"
  },
  {
    "text": "actually the first group don't automatically appeal to they're kind of table stakes for python developers they",
    "start": "495759",
    "end": "501199"
  },
  {
    "text": "they'd say well of course you want programming to be like that no one would want it to be any other way so that's",
    "start": "501199",
    "end": "506720"
  },
  {
    "text": "just the minimum that they need but then there are these other things like this robustness which kind of really appeals",
    "start": "506720",
    "end": "512000"
  },
  {
    "text": "and appeals and then in c-sharp it's actually the opposite kind of c-sharp devs have a lot of great things",
    "start": "512000",
    "end": "517839"
  },
  {
    "text": "with regard to robustness and performance but they they lack on that first kind of succinct this kind of",
    "start": "517839",
    "end": "523039"
  },
  {
    "text": "thing and and so we there are some things we didn't include",
    "start": "523039",
    "end": "528399"
  },
  {
    "text": "in the in in the top three like if we don't say for instance expressiveness or interoperability or they're great",
    "start": "528399",
    "end": "533839"
  },
  {
    "text": "qualities of f sharp and you should always think have them in mind in talking about f sharp but you've got a",
    "start": "533839",
    "end": "540560"
  },
  {
    "text": "limiting to three is a good thing and so we chose these three themes succinct",
    "start": "540560",
    "end": "545600"
  },
  {
    "text": "robust and performant and so when you see any core messaging around f sharp",
    "start": "545600",
    "end": "551279"
  },
  {
    "text": "uh let's throw glasses on and off if you see any core messaging around f sharp",
    "start": "551279",
    "end": "556480"
  },
  {
    "text": "say in fsharp.org for the f sharp software foundation fsharp empowers everyone to write succinct robust and performant code",
    "start": "556480",
    "end": "562959"
  },
  {
    "text": "that's the core message that we have and you can kind of see it gives you the simplicity and succinctness like python",
    "start": "562959",
    "end": "568640"
  },
  {
    "text": "with the correctness robust and performance beyond c-sharp and java and then all the other things you want",
    "start": "568640",
    "end": "573920"
  },
  {
    "text": "to talk about open source cross-platform free targets javascript targets.net",
    "start": "573920",
    "end": "580480"
  },
  {
    "text": "uh and what it can be used for and that goes through the",
    "start": "580480",
    "end": "586080"
  },
  {
    "text": "the the microsoft messaging around f sharp uh and docs.microsoft.com",
    "start": "586080",
    "end": "591120"
  },
  {
    "text": "so if we go fsharp.net or something",
    "start": "591120",
    "end": "596880"
  },
  {
    "text": "then you'll see this is one of the landing pages open",
    "start": "597120",
    "end": "602480"
  },
  {
    "text": "source language that makes it easy to write succinct robust and performant code i'm mapping that through",
    "start": "602480",
    "end": "610000"
  },
  {
    "text": "okay so so those are a change in how we talk",
    "start": "610000",
    "end": "615600"
  },
  {
    "text": "about fsharp and it's perhaps as important as what we've done in the technical work",
    "start": "615600",
    "end": "621040"
  },
  {
    "text": "and part of the my change in thinking about",
    "start": "621040",
    "end": "626880"
  },
  {
    "text": "uh about f sharp was really influenced by this image that got tweeted around by isaac",
    "start": "626880",
    "end": "633680"
  },
  {
    "text": "abram and it's based on somebody else's image and then extend it out uh to to to to the right and it's it's",
    "start": "633680",
    "end": "641200"
  },
  {
    "text": "reminding people that there's this eternal sweet spot of programming which is functions and data",
    "start": "641200",
    "end": "647200"
  },
  {
    "text": "and it's not even plus types the types are there the use of types",
    "start": "647200",
    "end": "652959"
  },
  {
    "text": "is there to support that sweet spot of functions and data okay so everything is",
    "start": "652959",
    "end": "658000"
  },
  {
    "text": "trying to keep you in that sweet spot and get as much of your programming as possible in the world of",
    "start": "658000",
    "end": "664640"
  },
  {
    "text": "fairly simple functions and fairly simple data that's always been what f sharp has been about it's also what",
    "start": "664640",
    "end": "670480"
  },
  {
    "text": "python is great at it just doesn't have a very good story with regard to types and performance and other things okay you do need a whole bunch of other",
    "start": "670480",
    "end": "676320"
  },
  {
    "text": "characteristics but in the end there's forever and ever and ever there will be this sweet spot of programming which is",
    "start": "676320",
    "end": "683360"
  },
  {
    "text": "about functions and data what happens with people is they start in this sweet spot and they love programming they think it's amazing and then they go off",
    "start": "683360",
    "end": "690560"
  },
  {
    "text": "on this big object-oriented kind of thing and they learn their design patterns and do object objects everywhere and they learn about",
    "start": "690560",
    "end": "696240"
  },
  {
    "text": "abstraction and interfaces you know and i might i might you know planning for future change and everything like that",
    "start": "696240",
    "end": "702000"
  },
  {
    "text": "and then they and then they find you know most of that some of that is valuable i'm not it's an",
    "start": "702000",
    "end": "708000"
  },
  {
    "text": "80 20 thing all the way along the sweet spot is 80 and then there's this 20 where you need your object orientation",
    "start": "708000",
    "end": "715120"
  },
  {
    "text": "and your your object programming and so you go through that and you you you and then you real you learn oh okay you",
    "start": "715120",
    "end": "721760"
  },
  {
    "text": "finally get back to this world of functions and data as being sort of the main focal point of your mind and the other this other stuff",
    "start": "721760",
    "end": "728800"
  },
  {
    "text": "you've learned still helps you but you learn to use it appropriately you learn to moderate it okay",
    "start": "728800",
    "end": "735040"
  },
  {
    "text": "and so function you're back to all the functions of data and then you discover functional programming and you start",
    "start": "735040",
    "end": "740399"
  },
  {
    "text": "going oh my god you start learning all about monads and applicatives i'll even be talking about applicatives today",
    "start": "740399",
    "end": "746000"
  },
  {
    "text": "category theory effects and everything and a similar kind of thing kind of happens in a different dimension",
    "start": "746000",
    "end": "751279"
  },
  {
    "text": "of functional programming and then eventually you do get back to this world of functions and data and that is the",
    "start": "751279",
    "end": "756560"
  },
  {
    "text": "world where f sharp is is focusing on and uh it's it's one of the",
    "start": "756560",
    "end": "761680"
  },
  {
    "text": "one of the reasons why sometimes people come to f sharp and they think wow i don't have everything in i don't i can't",
    "start": "761680",
    "end": "768800"
  },
  {
    "text": "for instance declare protected members in sharp i don't have everything i have in the object world well there's a",
    "start": "768800",
    "end": "774160"
  },
  {
    "text": "reason for that it's we're trying to keep you in the sweet spot okay we're trying to keep you in the sweet spot of functions and data and",
    "start": "774160",
    "end": "780480"
  },
  {
    "text": "then they they come then then they go learn the haskell or something else or actor or something and they they learn",
    "start": "780480",
    "end": "785600"
  },
  {
    "text": "they've got all these amazing things to play with and they say i can't wear my toys you know they throw a tantrum and say you know this",
    "start": "785600",
    "end": "792000"
  },
  {
    "text": "this isn't as as big and powerful as my other functional language so you know but that there's a reason for it which",
    "start": "792000",
    "end": "798399"
  },
  {
    "text": "is we keep you in the sweet spot we keep you in the productive spot and everything we are doing uh in fact five",
    "start": "798399",
    "end": "804399"
  },
  {
    "text": "and six and all the way through is about keeping you in that spot okay so uh",
    "start": "804399",
    "end": "811600"
  },
  {
    "text": "as part of the messaging uh change around f sharp we also kind of tackle",
    "start": "811600",
    "end": "816639"
  },
  {
    "text": "this question of sort of what is f sharp good at what is it for people ask that question it's quite naturally and we do",
    "start": "816639",
    "end": "822639"
  },
  {
    "text": "these days we give a really simple answer to that which is f is good for programming okay okay and we we don't",
    "start": "822639",
    "end": "829040"
  },
  {
    "text": "beat around the bush we said it's good for absolutely everything okay uh and we we might qualify that we might",
    "start": "829040",
    "end": "835839"
  },
  {
    "text": "say it's good for uh and then and this is um this is some of the f sharp community",
    "start": "835839",
    "end": "841519"
  },
  {
    "text": "dave thomas and others who just started answering questions on formatting on forums",
    "start": "841519",
    "end": "847040"
  },
  {
    "text": "about about you know what is fsharp good for you just like airshot's good for programming so it does keep it simple uh fsharp's",
    "start": "847040",
    "end": "853760"
  },
  {
    "text": "good for web programming f2l is good for cloud programming ai ml data science whatever you like uh we might talk about",
    "start": "853760",
    "end": "859440"
  },
  {
    "text": "its qualities that we talked about before robust correct and performant so synced correct and performant",
    "start": "859440",
    "end": "865120"
  },
  {
    "text": "programming but basically fsharp's good for programming uh and uh in more recent",
    "start": "865120",
    "end": "872079"
  },
  {
    "text": "material uh since we're doing a full revamp you know we're just on the f sharp getting started kind of material you just see the emphasis on this",
    "start": "872079",
    "end": "878240"
  },
  {
    "text": "command line.net new lang fsharp.net build you know f sharp tools being part of everywhere we might talk about f",
    "start": "878240",
    "end": "884160"
  },
  {
    "text": "sharp for the web back end uh using say giraffe or some of the other options around for web backend but",
    "start": "884160",
    "end": "890240"
  },
  {
    "text": "it's a very simple similar story install the templates.net new giraffe sorry that should be.net new giraffe on",
    "start": "890240",
    "end": "896959"
  },
  {
    "text": "this slide and you get a fantastic hyper functional server-side programming",
    "start": "896959",
    "end": "903839"
  },
  {
    "text": "and f-sharp for the web front-end using javascript similar story targeting f-sharp to javascript",
    "start": "903839",
    "end": "911519"
  },
  {
    "text": "and this uh this story for theft is a javascript language it's really really good i uh one of the sessions i got to",
    "start": "911519",
    "end": "917839"
  },
  {
    "text": "do this year was to take the designer of python guido von russem uh and you might",
    "start": "917839",
    "end": "923440"
  },
  {
    "text": "have seen at the dot net conf days on f sharp you can see the recording on the web i recorded an online session with",
    "start": "923440",
    "end": "928880"
  },
  {
    "text": "guido where i teach him some f sharp code and guido is actually doing some client server programming he's actually hasn't",
    "start": "928880",
    "end": "934880"
  },
  {
    "text": "done much web programming in his life you might be surprised to hear and certainly not much client side uh",
    "start": "934880",
    "end": "940240"
  },
  {
    "text": "and he's and he's he's doing some uh f sharp on the client side and smash up on the server side and he he doesn't he",
    "start": "940240",
    "end": "947519"
  },
  {
    "text": "doesn't know which it doesn't matter which side he's working on he's just doing a shop code on on either side all",
    "start": "947519",
    "end": "953519"
  },
  {
    "text": "the tooling works really really nicely and uh so f sharp is also a javascript",
    "start": "953519",
    "end": "959279"
  },
  {
    "text": "language so and you can do f sharp for the for for the for the full stack with something like safe for some other",
    "start": "959279",
    "end": "964639"
  },
  {
    "text": "options you can use a new safe template and there might be f sharp for data",
    "start": "964639",
    "end": "970320"
  },
  {
    "text": "science and ml uh with this sort of getting started material using notebooks and and a few packages",
    "start": "970320",
    "end": "977680"
  },
  {
    "text": "okay right so that's just an update on how we talk about fsharp how we think about it and what it's you know it's it",
    "start": "977680",
    "end": "984480"
  },
  {
    "text": "there's in a sense there's been no change because this is exactly what f sharp has been about all along okay it's",
    "start": "984480",
    "end": "991360"
  },
  {
    "text": "just being a little bit more explicit about what f what f sharp is and what is",
    "start": "991360",
    "end": "997120"
  },
  {
    "text": "trying to support and do okay now i get to talk to you about f sharp",
    "start": "997120",
    "end": "1003759"
  },
  {
    "text": "five and f sharp six some kind of change mode and go to just uh a walk through uh",
    "start": "1003759",
    "end": "1010560"
  },
  {
    "text": "uh i'm not going to go through every every thing in this laundry list but here's the laundry list from f sharp",
    "start": "1010560",
    "end": "1016240"
  },
  {
    "text": "five the ones in bold are the ones i will be i will be talking about today",
    "start": "1016240",
    "end": "1023600"
  },
  {
    "text": "and then we a year later uh november november",
    "start": "1023600",
    "end": "1029038"
  },
  {
    "text": "we did the same thing with f sharp six big long laundry list of things",
    "start": "1029039",
    "end": "1034079"
  },
  {
    "text": "and uh and again i'm not going to be able to get to go through every small feature",
    "start": "1034079",
    "end": "1041520"
  },
  {
    "text": "probably so you if you want to find out about all the features",
    "start": "1041520",
    "end": "1047360"
  },
  {
    "text": "uh you can go to f sharp fs lang design which is where we do all the design",
    "start": "1047360",
    "end": "1054000"
  },
  {
    "text": "open design f-sharp community process for for f-sharp",
    "start": "1054000",
    "end": "1059679"
  },
  {
    "text": "you can come to the top of the repo here and you can see all the rfcs from all the previous versions you can come to f",
    "start": "1059679",
    "end": "1065600"
  },
  {
    "text": "sharp five check out all the all the details and follow through these are great resources they're",
    "start": "1065600",
    "end": "1072160"
  },
  {
    "text": "technical documentation but they also link through to the implementation they also link through to the original suggestion so you can see the full",
    "start": "1072160",
    "end": "1078799"
  },
  {
    "text": "history of house of how we went about the design process and all the discussion",
    "start": "1078799",
    "end": "1084080"
  },
  {
    "text": "and um and so if you're interested in contributing to the f sharp language",
    "start": "1084080",
    "end": "1089760"
  },
  {
    "text": "design you can uh get involved uh but these are a great resource for how we do the design",
    "start": "1089760",
    "end": "1096640"
  },
  {
    "text": "process uh probably",
    "start": "1096640",
    "end": "1102080"
  },
  {
    "text": "since since it's here and since i've got a fair amount of time one of my favorite things about f sharp",
    "start": "1102080",
    "end": "1107679"
  },
  {
    "text": "six is that we put in this printf as a binary format you can now you've sent b",
    "start": "1107679",
    "end": "1112799"
  },
  {
    "text": "but look at that rfc number isn't that good for a binary format uh edition um i was just so that was luck pure luck but",
    "start": "1112799",
    "end": "1119520"
  },
  {
    "text": "uh it's how it came out okay so f sharp six has a whole lot of great",
    "start": "1119520",
    "end": "1125039"
  },
  {
    "text": "things right so let's talk about some of those uh the first is we went in f sharp five",
    "start": "1125039",
    "end": "1130320"
  },
  {
    "text": "we went and did string interpolation it's a wonderful feature",
    "start": "1130320",
    "end": "1136480"
  },
  {
    "text": "okay now i'll show you a little bit about what that actually means in practice",
    "start": "1136480",
    "end": "1143039"
  },
  {
    "text": "so i'm going to do some scripting here in fsharp interactive here",
    "start": "1143039",
    "end": "1149600"
  },
  {
    "text": "programming okay so a typical piece of string interpolation is this it's where you get to use values in the",
    "start": "1149600",
    "end": "1156559"
  },
  {
    "text": "middle and so this string will format as i say 1 is 1 and 3.14",
    "start": "1156559",
    "end": "1164720"
  },
  {
    "text": "is pi there now as many of you will know fsharp",
    "start": "1164720",
    "end": "1171679"
  },
  {
    "text": "already has a kind of form of string formatting where you could do this kind of thing",
    "start": "1171679",
    "end": "1180480"
  },
  {
    "text": "okay and you would put you would not have this and you would not have",
    "start": "1180480",
    "end": "1186960"
  },
  {
    "text": "this and you would put x and pi at the end here it's c style",
    "start": "1186960",
    "end": "1194160"
  },
  {
    "text": "formatting strings and one of the big problems with putting in string interpolation was how what do we do",
    "start": "1194160",
    "end": "1201600"
  },
  {
    "text": "to about what do we do about having two features for the same thing",
    "start": "1201600",
    "end": "1207200"
  },
  {
    "text": "and each is one you know one is good in one way and one is good in another way one gives you",
    "start": "1207200",
    "end": "1214240"
  },
  {
    "text": "uh this this sort of love lovely kind of inline syntax for for for strings the",
    "start": "1214240",
    "end": "1220000"
  },
  {
    "text": "other one gives you strong typing okay so if i if i for instance put percent s in here",
    "start": "1220000",
    "end": "1228000"
  },
  {
    "text": "then i'll get a thing saying this is not a string okay and that's actually really valuable for pinning down your",
    "start": "1228000",
    "end": "1235120"
  },
  {
    "text": "types okay so one of the key things we did in the design process was to work out how to",
    "start": "1235120",
    "end": "1242159"
  },
  {
    "text": "square the circle on this how to get how to how to how to triangulate these",
    "start": "1242159",
    "end": "1247600"
  },
  {
    "text": "and in fact you can what that means is that in string",
    "start": "1247600",
    "end": "1252880"
  },
  {
    "text": "interpolation you can put uh these percent d thing to say actually this thing in here whatever this",
    "start": "1252880",
    "end": "1259039"
  },
  {
    "text": "expression is x x plus x plus x okay this has to be an integer i'm going to",
    "start": "1259039",
    "end": "1265280"
  },
  {
    "text": "constrain that to be an integer and this one here for instance you can constrain to be a string and you'll immediately",
    "start": "1265280",
    "end": "1270799"
  },
  {
    "text": "get an error saying that thing there is not actually a string and that's really important because",
    "start": "1270799",
    "end": "1276400"
  },
  {
    "text": "otherwise this expression in the middle here can be really anything and it will just call tostring on that expression",
    "start": "1276400",
    "end": "1283600"
  },
  {
    "text": "and it's very loosely typed so string interpolation is a very sloppy feature right uh it it without this now you",
    "start": "1283600",
    "end": "1291039"
  },
  {
    "text": "don't have to use it and of course most the time when you don't have to use the percents you can just use it as i have before",
    "start": "1291039",
    "end": "1296880"
  },
  {
    "text": "and uh and and but the the important thing from the design perspective is we got the best of both",
    "start": "1296880",
    "end": "1303360"
  },
  {
    "text": "worlds between these features by combining uh the strong allowing you to optionally use everything you've learned about",
    "start": "1303360",
    "end": "1309840"
  },
  {
    "text": "percent d formatting percent uh percent formatting and and use it in the context",
    "start": "1309840",
    "end": "1314960"
  },
  {
    "text": "of string interpolation you can also do that a little bit further you could if",
    "start": "1314960",
    "end": "1320159"
  },
  {
    "text": "you if you know about using formatting using those things so for instance you now want to start doing some formatting",
    "start": "1320159",
    "end": "1326799"
  },
  {
    "text": "percent not to get two decimal places down here you can use that either using the dot net",
    "start": "1326799",
    "end": "1332799"
  },
  {
    "text": "c-sharp way uh or you can do it using the the dot uh using these kind of",
    "start": "1332799",
    "end": "1339280"
  },
  {
    "text": "uh percent um placeholder kind of way",
    "start": "1339280",
    "end": "1344720"
  },
  {
    "text": "uh now there is actually an uh for those in the technical details there's some",
    "start": "1344720",
    "end": "1350320"
  },
  {
    "text": "there's some other technical details about how you can write for instance your own logging functions which uh which maybe post process the",
    "start": "1350320",
    "end": "1357360"
  },
  {
    "text": "string with the word log at the top up here and so and then you can still use",
    "start": "1357360",
    "end": "1362799"
  },
  {
    "text": "string interpolation even with that with that kind of uh with with that kind of setup",
    "start": "1362799",
    "end": "1368320"
  },
  {
    "text": "along here so just to run that example and if i do that then when it prints the number is result",
    "start": "1368320",
    "end": "1374720"
  },
  {
    "text": "today it says log the number is result today and so you can kind of in interleave",
    "start": "1374720",
    "end": "1380559"
  },
  {
    "text": "a little bit this is this k printf thing interleaves some extra some extra printing along with your",
    "start": "1380559",
    "end": "1387760"
  },
  {
    "text": "string output okay so uh string interpolation let me just",
    "start": "1387760",
    "end": "1393840"
  },
  {
    "text": "show you the rfc for string interpolation",
    "start": "1393840",
    "end": "1398080"
  },
  {
    "text": "is here it was the very first rfc ever created",
    "start": "1399039",
    "end": "1404400"
  },
  {
    "text": "for f sharp in 2014 and uh it went through",
    "start": "1404400",
    "end": "1410150"
  },
  {
    "text": "[Music] three iterations and each time three design iterations i think three",
    "start": "1410150",
    "end": "1415919"
  },
  {
    "text": "prototypes and i'm just extremely happy with that we took our time over this and",
    "start": "1415919",
    "end": "1421840"
  },
  {
    "text": "eventually got to a point that combines these combines these elements",
    "start": "1421840",
    "end": "1427919"
  },
  {
    "text": "and you can see the design principles we used and read through them and you can look through the detailed technical design",
    "start": "1427919",
    "end": "1434640"
  },
  {
    "text": "and uh and and so on all the way down",
    "start": "1434640",
    "end": "1440960"
  },
  {
    "text": "okay so why are we doing it improved readability reduce errors more succinct",
    "start": "1440960",
    "end": "1448799"
  },
  {
    "text": "less to learn okay and you can see how that's playing into",
    "start": "1448799",
    "end": "1454799"
  },
  {
    "text": "those original goals of f sharp string interpolation totally fits with the original design goals of f sharp",
    "start": "1454799",
    "end": "1460880"
  },
  {
    "text": "succinct robust performance so we managed to align with c sharp you can take c sharp code and move it across",
    "start": "1460880",
    "end": "1467520"
  },
  {
    "text": "and adjust it but we also get this strong typing by unifying with printf",
    "start": "1467520",
    "end": "1472799"
  },
  {
    "text": "and we allow it to be used with printf and and friends",
    "start": "1472799",
    "end": "1478480"
  },
  {
    "text": "okay okay so the next thing uh next thing i'll call out in f f sharp five",
    "start": "1478559",
    "end": "1486720"
  },
  {
    "text": "was that we added the ability to open the static content of types okay so i'll",
    "start": "1486720",
    "end": "1491840"
  },
  {
    "text": "just give a very short demo of what that means so for example you can open type",
    "start": "1491840",
    "end": "1498559"
  },
  {
    "text": "system.math and that allows you just to use the min and max functions for instance to",
    "start": "1498559",
    "end": "1504640"
  },
  {
    "text": "directly these overloaded functions here",
    "start": "1504640",
    "end": "1509039"
  },
  {
    "text": "and you'll see here that min is now overloaded between all the different",
    "start": "1509679",
    "end": "1515120"
  },
  {
    "text": "things this is something quite different for f sharp and c sharp in a way c sharp broke",
    "start": "1515120",
    "end": "1521039"
  },
  {
    "text": "one of its original design principles one of the original design principles of c sharp was that",
    "start": "1521039",
    "end": "1527440"
  },
  {
    "text": "if you had something overloaded it would always be qualified in some way",
    "start": "1527440",
    "end": "1533279"
  },
  {
    "text": "uh so um so they they broke that principle and",
    "start": "1533279",
    "end": "1538640"
  },
  {
    "text": "allow you just to have these unqualified single identifier overloaded things",
    "start": "1538640",
    "end": "1544000"
  },
  {
    "text": "and we eventually decided in f sharp that there were enough c important c sharp libraries using this",
    "start": "1544000",
    "end": "1550159"
  },
  {
    "text": "that we were going to allow the same thing in f sharp i have some qualms about adding this to f sharp i'll talk",
    "start": "1550159",
    "end": "1555679"
  },
  {
    "text": "about that more in a bit you can use it on f sharp to find things you can define your own type here like",
    "start": "1555679",
    "end": "1561679"
  },
  {
    "text": "this and you can do open type c and then you can just i mean p here is now referring",
    "start": "1561679",
    "end": "1567679"
  },
  {
    "text": "just to that static member p okay and something here is now referring to",
    "start": "1567679",
    "end": "1572880"
  },
  {
    "text": "that to that um to that something okay",
    "start": "1572880",
    "end": "1578480"
  },
  {
    "text": "okay okay so uh why are we doing this because it does",
    "start": "1578480",
    "end": "1586240"
  },
  {
    "text": "uh allow these sort of increased express these dsls these single dsls are often",
    "start": "1586240",
    "end": "1592960"
  },
  {
    "text": "often sort of focused a lot on succinctness and sort of uh dropping you into the domain",
    "start": "1592960",
    "end": "1598880"
  },
  {
    "text": "rather into without making you less aware that you're embedding the domain into the programming language and so you",
    "start": "1598880",
    "end": "1604400"
  },
  {
    "text": "get this ultrasync mode of programming so um [Music]",
    "start": "1604400",
    "end": "1610320"
  },
  {
    "text": "now these single word functions can actually also be take named optional parameter arguments okay they do it does",
    "start": "1610320",
    "end": "1617279"
  },
  {
    "text": "increase the kind of expressivity of what you can do in kind of dsls uh embedded dsls",
    "start": "1617279",
    "end": "1624640"
  },
  {
    "text": "uh but that comes with a lot of downsides and so there's some particular dsls",
    "start": "1624640",
    "end": "1629760"
  },
  {
    "text": "particularly those used for apache spark on azure uh so for the for the dot net",
    "start": "1629760",
    "end": "1635360"
  },
  {
    "text": "and c sharp f sharp support for for big data programming with with apache spark",
    "start": "1635360",
    "end": "1640559"
  },
  {
    "text": "and they use these um dsl they use this this open type uh extensively through",
    "start": "1640559",
    "end": "1646880"
  },
  {
    "text": "their their presentation uh be very very cautious about using this",
    "start": "1646880",
    "end": "1653760"
  },
  {
    "text": "in team in team situations uh okay because it can uh",
    "start": "1653760",
    "end": "1660240"
  },
  {
    "text": "it obviously there are problems with this this kind of feature you open type if",
    "start": "1660240",
    "end": "1666080"
  },
  {
    "text": "you do open type from one dsl and open type on another dsl and in into the same context then the words get and they're",
    "start": "1666080",
    "end": "1672720"
  },
  {
    "text": "using the same words the same overloads then things kind of start to go wrong okay",
    "start": "1672720",
    "end": "1678480"
  },
  {
    "text": "the rule is that the second one wins we don't allow overload sets to emerge from two things but it could be that your",
    "start": "1678480",
    "end": "1684240"
  },
  {
    "text": "dsls kind of become less useful but between these kind of conflicts that happen",
    "start": "1684240",
    "end": "1689760"
  },
  {
    "text": "uh and um people are obviously going to have you know a harder time code reviewing",
    "start": "1689760",
    "end": "1696320"
  },
  {
    "text": "this kind of thing uh without if they haven't got strong tooling support uh to tell them where things are",
    "start": "1696320",
    "end": "1702000"
  },
  {
    "text": "resolving to so just be careful about using this and don't inflict it on you yourself or your friends or your team",
    "start": "1702000",
    "end": "1708840"
  },
  {
    "text": "without real thought about the consequences you know good f sharp programmers think about their team that",
    "start": "1708840",
    "end": "1715279"
  },
  {
    "text": "they're working with and how they use the features of the language to uh",
    "start": "1715279",
    "end": "1720320"
  },
  {
    "text": "to to to make their team their the whole team more productive",
    "start": "1720320",
    "end": "1725840"
  },
  {
    "text": "okay so in f sharp five we finally did what you know we kind of",
    "start": "1726399",
    "end": "1732880"
  },
  {
    "text": "should have done as soon as nougat got created which is to allow you to do hash our nougat in f sharp scripts",
    "start": "1732880",
    "end": "1740240"
  },
  {
    "text": "and so what does it look like you do hash r nougat newton soft.json or give a",
    "start": "1740240",
    "end": "1745520"
  },
  {
    "text": "specific version number you can see i'm actually not in an fsharp script in this file but you can",
    "start": "1745520",
    "end": "1751200"
  },
  {
    "text": "i'm in a dot fs file not a dot fsx but i've just put it in a comment at the top so i can send you can still send",
    "start": "1751200",
    "end": "1756880"
  },
  {
    "text": "interactive from this kind of thing and you can see what happens i've i've referenced two two libraries here i've",
    "start": "1756880",
    "end": "1763039"
  },
  {
    "text": "shop data for fluent and you can see it's it's gone through and processed",
    "start": "1763039",
    "end": "1768399"
  },
  {
    "text": "those and uh now i have access to those fsharp.data.whatever",
    "start": "1768399",
    "end": "1777640"
  },
  {
    "text": "okay i've also referenced some in my project context over here",
    "start": "1778320",
    "end": "1784399"
  },
  {
    "text": "but if you're in a script you can just happily use this kind of",
    "start": "1784480",
    "end": "1789760"
  },
  {
    "text": "working and it will work in both the developer tools and the ide before you even execute anything and",
    "start": "1789760",
    "end": "1796640"
  },
  {
    "text": "i might as well just show that open a new script script",
    "start": "1796640",
    "end": "1802880"
  },
  {
    "text": "script",
    "start": "1802880",
    "end": "1805880"
  },
  {
    "text": "there we go",
    "start": "1810240",
    "end": "1813720"
  },
  {
    "text": "okay so you can see i haven't actually executed anything from this particular script and you immediately just get",
    "start": "1827760",
    "end": "1833200"
  },
  {
    "text": "strong typing through to that set of packages that you've referenced",
    "start": "1833200",
    "end": "1838960"
  },
  {
    "text": "so people do people who are experienced with doing",
    "start": "1839360",
    "end": "1844799"
  },
  {
    "text": "python programming look at this feature and they say this is the number one feature for python",
    "start": "1844799",
    "end": "1852000"
  },
  {
    "text": "programmers and it links back into what i said originally what are python programmers after okay they're fine with",
    "start": "1852000",
    "end": "1857120"
  },
  {
    "text": "succinctness they don't want more succinctly they've got that they've got too much of that probably if anything",
    "start": "1857120",
    "end": "1862720"
  },
  {
    "text": "right but they do want features like this which unless you lock down the packages you're referencing okay even better you",
    "start": "1862720",
    "end": "1869919"
  },
  {
    "text": "can combine this now with a global.json in your script directory and the editing tools will take note of",
    "start": "1869919",
    "end": "1876399"
  },
  {
    "text": "that global.json to say we're using a particular version of the.net sdk okay",
    "start": "1876399",
    "end": "1882320"
  },
  {
    "text": "and that means you can really lock down your scripts to just be completely trusted to be completely",
    "start": "1882320",
    "end": "1888960"
  },
  {
    "text": "trustworthy you know what dot net framework they're running against or uh you know what um and what policy",
    "start": "1888960",
    "end": "1895600"
  },
  {
    "text": "is applied to that and you know what uh exact what exactly what packages are being used",
    "start": "1895600",
    "end": "1901919"
  },
  {
    "text": "you can also specify remote package sources uh they have to be authenticated just",
    "start": "1901919",
    "end": "1908559"
  },
  {
    "text": "via the act as your this is this active directory or whatever integrated um authentication",
    "start": "1908559",
    "end": "1915600"
  },
  {
    "text": "you you've got we don't allow separately authenticated feeds from f-sharp scripts you have to do those from project code",
    "start": "1915600",
    "end": "1924000"
  },
  {
    "text": "uh okay so um so that's a hash i down there just in case uh and so the",
    "start": "1924000",
    "end": "1931519"
  },
  {
    "text": "docs for all this are all online it's a very simple feature and uh it lets you get going with all sorts of great",
    "start": "1931519",
    "end": "1938799"
  },
  {
    "text": "scripting programming just with a few a few lines it's great",
    "start": "1938799",
    "end": "1944000"
  },
  {
    "text": "okay okay so on f sharp five i i now want to",
    "start": "1944000",
    "end": "1949679"
  },
  {
    "text": "talk about a a feature that's much more at the kind of programming language design and the other the things i've",
    "start": "1949679",
    "end": "1955120"
  },
  {
    "text": "talked about uh have been sort of practical happy features uh you have nice",
    "start": "1955120",
    "end": "1961200"
  },
  {
    "text": "everyone's happy with things like string interpolation uh this next one is a bit of a different one because it looks so subtle it's so",
    "start": "1961200",
    "end": "1967440"
  },
  {
    "text": "strange it's much more in the kind of expressivity kind of line uh for f sharp",
    "start": "1967440",
    "end": "1973039"
  },
  {
    "text": "and in the way it's outside those three themes and there's not really aimed at c",
    "start": "1973039",
    "end": "1978720"
  },
  {
    "text": "sharp or python programmers but i'm still really happy to have done this one in the f-sharp language design and it",
    "start": "1978720",
    "end": "1984240"
  },
  {
    "text": "extends this thing called f-sharp computation expressions which is anyone doing f sharp will know what those are",
    "start": "1984240",
    "end": "1990559"
  },
  {
    "text": "that's why we have all these different things that kind of come from different programming languages iterator methods",
    "start": "1990559",
    "end": "1995679"
  },
  {
    "text": "or query expressions or comprehensions or async or async sequences in say c sharp or",
    "start": "1995679",
    "end": "2002080"
  },
  {
    "text": "other programming languages and we kind of put them all into this one feature of",
    "start": "2002080",
    "end": "2007200"
  },
  {
    "text": "f sharp where you have some computational modality you have a modality and then you have some code",
    "start": "2007200",
    "end": "2013679"
  },
  {
    "text": "okay and uh that's called a computation expression in f sharp and you can do all",
    "start": "2013679",
    "end": "2020000"
  },
  {
    "text": "sorts of amazing uh kind of things with this uh if you take a look at what that means",
    "start": "2020000",
    "end": "2026159"
  },
  {
    "text": "c sharp say has five different features all of these these things down the left and they sort of all become the same",
    "start": "2026159",
    "end": "2032559"
  },
  {
    "text": "thing in f sharp however they all just become the they all just become a computation",
    "start": "2032559",
    "end": "2037840"
  },
  {
    "text": "expression i mean you get different computation expressions but they're one kind of language feature under the hood there's a whole history to how this came",
    "start": "2037840",
    "end": "2044399"
  },
  {
    "text": "about you can see my some of my talks from during the year on the history of f sharp but this the fact that we have",
    "start": "2044399",
    "end": "2050878"
  },
  {
    "text": "this thing called computation expressions that lets you do so many different things and many many more as",
    "start": "2050879",
    "end": "2055919"
  },
  {
    "text": "well uh just is one of these really unifying things about the f-sharp",
    "start": "2055919",
    "end": "2062800"
  },
  {
    "text": "language designer that does make the whole language design simpler end-to-end because we're not just adding",
    "start": "2062800",
    "end": "2068720"
  },
  {
    "text": "more and more kind of complicated things uh down which all work a bit differently",
    "start": "2068720",
    "end": "2074878"
  },
  {
    "text": "we kind of just add this one we have this one feature computational expressions",
    "start": "2074879",
    "end": "2079919"
  },
  {
    "text": "but there's something that computational expressions can't do one of the things they can do uh in in f sharp so four",
    "start": "2079919",
    "end": "2087040"
  },
  {
    "text": "is this kind of let bang bang this binding uh this like it's like a weight await a weight or whatever kind of thing",
    "start": "2087040",
    "end": "2093200"
  },
  {
    "text": "you're doing left bangla bangla bang and the point about computational expressions is some magic happens in between as you say a weight",
    "start": "2093200",
    "end": "2100400"
  },
  {
    "text": "or or you yield from a com from a computation or you're doing a co-routine",
    "start": "2100400",
    "end": "2106160"
  },
  {
    "text": "or something like that uh and so you have this sort of magic in between and eventually it finishes with",
    "start": "2106160",
    "end": "2112160"
  },
  {
    "text": "a return or a bunch of yields or something like that but but what what it can't do is this uh",
    "start": "2112160",
    "end": "2119440"
  },
  {
    "text": "what's called applicative binding or sort of this sort of simultaneous sort of parallel kind of binding where you",
    "start": "2119440",
    "end": "2125040"
  },
  {
    "text": "kick off a whole bunch of things in and i use the term very very loosely in",
    "start": "2125040",
    "end": "2131040"
  },
  {
    "text": "parallel it doesn't mean there's actually i i don't necessarily in a way there's there's two things",
    "start": "2131040",
    "end": "2137280"
  },
  {
    "text": "going on these things all kick off together but and then they and then they sort of",
    "start": "2137280",
    "end": "2142480"
  },
  {
    "text": "some magic happens uh to combine them together and then they return and it's as much the fact that this is a",
    "start": "2142480",
    "end": "2148079"
  },
  {
    "text": "two-phase thing that makes this quite this this interesting okay that you want to have",
    "start": "2148079",
    "end": "2156160"
  },
  {
    "text": "a static composition which on the left here and then a run time",
    "start": "2156160",
    "end": "2161839"
  },
  {
    "text": "over on the right and so for instance this might be making your graph and this might be running your graph",
    "start": "2161839",
    "end": "2168000"
  },
  {
    "text": "okay so uh so from a language design point of view",
    "start": "2168000",
    "end": "2173359"
  },
  {
    "text": "all we're doing is allowing you to add do and bang let bang and bang and bang in these in these things",
    "start": "2173359",
    "end": "2180640"
  },
  {
    "text": "so that that's the feature let bang and bang in computations uh",
    "start": "2180640",
    "end": "2186640"
  },
  {
    "text": "and if you when you use that it maps to a thing called bind return or merge sources",
    "start": "2186640",
    "end": "2193760"
  },
  {
    "text": "and uh and as i said this relates directly to the last f sharp london meetup before the pandemic",
    "start": "2193760",
    "end": "2199599"
  },
  {
    "text": "and it's often used for these things which in the i guess in the haskell world are called applicatives uh and",
    "start": "2199599",
    "end": "2206640"
  },
  {
    "text": "these sort of two-phase computations and they separate composition from running uh you have a static composition and",
    "start": "2206640",
    "end": "2213599"
  },
  {
    "text": "then a dynamic run and for for example in the static phase you",
    "start": "2213599",
    "end": "2220800"
  },
  {
    "text": "might make a graph and then before you run you might pre-allocate a whole lot of buffers for",
    "start": "2220800",
    "end": "2226320"
  },
  {
    "text": "that graph and then you actually run your your your your your code",
    "start": "2226320",
    "end": "2233680"
  },
  {
    "text": "uh and there are lots of great examples of using this say for validation or graphs of fixed size i will show",
    "start": "2233680",
    "end": "2240400"
  },
  {
    "text": "some examples uh",
    "start": "2240400",
    "end": "2246400"
  },
  {
    "text": "let me",
    "start": "2246400",
    "end": "2249640"
  },
  {
    "text": "let me just point you to some documentation on this so i have a blog post you can search for",
    "start": "2256560",
    "end": "2262320"
  },
  {
    "text": "design design applicatives where we talk about the various styles",
    "start": "2262320",
    "end": "2268880"
  },
  {
    "text": "for doing applicatives and here you can see the let bang and bang and bang so the first part of the composition and",
    "start": "2268880",
    "end": "2275839"
  },
  {
    "text": "then the final part of the composition here so one one area where you might do this",
    "start": "2275839",
    "end": "2281680"
  },
  {
    "text": "is to build a bunch of validators okay so uh this is where this is",
    "start": "2281680",
    "end": "2287920"
  },
  {
    "text": "this is where you validate five different inputs",
    "start": "2287920",
    "end": "2292960"
  },
  {
    "text": "and then you and then you you you build or and then you and then you're giving the",
    "start": "2292960",
    "end": "2298720"
  },
  {
    "text": "result the composition the runtime for once all the inputs come in so you're building your network of validators and",
    "start": "2298720",
    "end": "2304400"
  },
  {
    "text": "then at runtime you actually give your give your uh your you the result of the",
    "start": "2304400",
    "end": "2309440"
  },
  {
    "text": "composing of the validations",
    "start": "2309440",
    "end": "2313560"
  },
  {
    "text": "okay i will give a longer example of this now",
    "start": "2315280",
    "end": "2320640"
  },
  {
    "text": "and it is so in this example what we're doing is",
    "start": "2320960",
    "end": "2328880"
  },
  {
    "text": "we're building a graph of nodes okay so we have our node type here node is this",
    "start": "2328880",
    "end": "2336320"
  },
  {
    "text": "abstract class node dirty here and we're going to do a few things along",
    "start": "2336320",
    "end": "2342560"
  },
  {
    "text": "the way such as counting the number of nodes and each node is it's going to be an imperative graph so we're going to have",
    "start": "2342560",
    "end": "2348400"
  },
  {
    "text": "these nodes here and they're going to link back to the nodes that they depend on it's going to be a calculation graph",
    "start": "2348400",
    "end": "2355280"
  },
  {
    "text": "an explicit calculation graph okay so let's go through and define our node type",
    "start": "2355280",
    "end": "2361839"
  },
  {
    "text": "and we're going to have a couple of different nodes node types a node of t here and then a recalc node here that uh",
    "start": "2361839",
    "end": "2369680"
  },
  {
    "text": "that that uses a function to recompute its value here",
    "start": "2369680",
    "end": "2376000"
  },
  {
    "text": "okay so let's sorry",
    "start": "2376000",
    "end": "2381240"
  },
  {
    "text": "okay and here is a constant node that is just always gives back the particular value x",
    "start": "2385359",
    "end": "2391599"
  },
  {
    "text": "and here's a input node that is takes a value v but where the input can change",
    "start": "2391599",
    "end": "2398240"
  },
  {
    "text": "here when you set the value and now even though this is an imperative structure",
    "start": "2398240",
    "end": "2404960"
  },
  {
    "text": "that uses mutation you can still define a computational expression that allows you",
    "start": "2405280",
    "end": "2410880"
  },
  {
    "text": "to build these things so let's just do uh sorry just to take this out from and",
    "start": "2410880",
    "end": "2419280"
  },
  {
    "text": "okay so we define ourselves a node builder and we define the input node and then we",
    "start": "2419280",
    "end": "2425040"
  },
  {
    "text": "define uh sorry function to build input nodes and then we define three input nodes",
    "start": "2425040",
    "end": "2430160"
  },
  {
    "text": "here and then we use our node builder to start composing these nodes together so this function builds a new node which",
    "start": "2430160",
    "end": "2437599"
  },
  {
    "text": "takes in those three nodes and then does a return of some computation like this",
    "start": "2437599",
    "end": "2445440"
  },
  {
    "text": "returning the sum of each of their nodes and in this node here",
    "start": "2446000",
    "end": "2451280"
  },
  {
    "text": "we do it a different way which is where we use where we use sequential binding so this is the difference between doing",
    "start": "2451280",
    "end": "2456960"
  },
  {
    "text": "the simultaneous binding i showed and between doing the sequential binding one two three le bang le bang le bang",
    "start": "2456960",
    "end": "2464800"
  },
  {
    "text": "okay and now we can that's the two different ways of composing nodes",
    "start": "2464800",
    "end": "2471280"
  },
  {
    "text": "and now we can do a bit of work to see which one is more efficient okay",
    "start": "2471280",
    "end": "2476800"
  },
  {
    "text": "so now if we uh if we compare what we've done here okay",
    "start": "2476800",
    "end": "2482640"
  },
  {
    "text": "how many nodes did we create when doing this simultaneous one and then what with",
    "start": "2482640",
    "end": "2487680"
  },
  {
    "text": "the test here is simply it takes it it uh",
    "start": "2487680",
    "end": "2493119"
  },
  {
    "text": "it creates the graph here this n represents the the final output node of the graph",
    "start": "2493119",
    "end": "2501200"
  },
  {
    "text": "and then it starts modifying the input nodes and and gets an adjusted value so it propagates the propagates the changes",
    "start": "2501200",
    "end": "2507920"
  },
  {
    "text": "through the graph and and we see how many new nodes did we create along the way",
    "start": "2507920",
    "end": "2513920"
  },
  {
    "text": "and if you look at what we did with and bang we created one new node okay which",
    "start": "2513920",
    "end": "2519760"
  },
  {
    "text": "was the composition node and then we started modifying and no no new nodes got created okay because we had a static",
    "start": "2519760",
    "end": "2526800"
  },
  {
    "text": "composition and one static output and then we just can just modify those outputs but when you use magnetic",
    "start": "2526800",
    "end": "2534560"
  },
  {
    "text": "binding at the la bangla bangla bang here and you can see that we actually created",
    "start": "2534560",
    "end": "2541520"
  },
  {
    "text": "4 000 new nodes and that's of course when you modified those things with that chain of",
    "start": "2541520",
    "end": "2546720"
  },
  {
    "text": "things then when you modify the first one or the second one or the third one you've got to rerun that chain endlessly",
    "start": "2546720",
    "end": "2553280"
  },
  {
    "text": "okay so one so so even though it's just looks so quite subtle let bang and bang",
    "start": "2553280",
    "end": "2558880"
  },
  {
    "text": "and bang versus left bang left band left bang there's actually a huge performance difference between those two and you might say to yourself well what happens",
    "start": "2558880",
    "end": "2565359"
  },
  {
    "text": "if i only want the high performance one okay well what you do is you in your but",
    "start": "2565359",
    "end": "2570720"
  },
  {
    "text": "in your um in your um in your computation expression",
    "start": "2570720",
    "end": "2576960"
  },
  {
    "text": "builder you can you can exclude certain kinds of binding okay so you can comment out this binding",
    "start": "2576960",
    "end": "2584079"
  },
  {
    "text": "here you can comment out uh let's see comment at this one",
    "start": "2584079",
    "end": "2590960"
  },
  {
    "text": "one two and bind and you only allow this uh",
    "start": "2590960",
    "end": "2597280"
  },
  {
    "text": "this applicative binding let bangla bang and vang through bind return",
    "start": "2597280",
    "end": "2603760"
  },
  {
    "text": "and now you can see that you actually get an error here",
    "start": "2603760",
    "end": "2608800"
  },
  {
    "text": "saying that this is not allowed okay so in fact this would allow if you this would mean that your team",
    "start": "2608800",
    "end": "2614480"
  },
  {
    "text": "is only allowed to do static compositions of of of of nodes uh okay in a way that",
    "start": "2614480",
    "end": "2621599"
  },
  {
    "text": "won't actually create new nodes at what is effectively the the runtime for the graph",
    "start": "2621599",
    "end": "2627760"
  },
  {
    "text": "okay and you can if you like as you saw in what i had before you can uh",
    "start": "2627760",
    "end": "2632839"
  },
  {
    "text": "define two kinds of builders one is for node static",
    "start": "2632839",
    "end": "2638000"
  },
  {
    "text": "and one is for node dynamic which allows uh we where the node dynamic allows extra kind of operations",
    "start": "2638000",
    "end": "2645359"
  },
  {
    "text": "extra kinds of kind of compositions and uh and then you can code review for uses",
    "start": "2645359",
    "end": "2650880"
  },
  {
    "text": "of node dynamic to make sure they're only being used you're only getting dynamic creations of things as uh where",
    "start": "2650880",
    "end": "2657440"
  },
  {
    "text": "where where you in where you really need them okay okay",
    "start": "2657440",
    "end": "2663280"
  },
  {
    "text": "so it's a interesting subtle feature it's it's it's on definitely on",
    "start": "2663280",
    "end": "2669520"
  },
  {
    "text": "you know it used correctly it it absolutely",
    "start": "2669520",
    "end": "2674720"
  },
  {
    "text": "simplifies a certain kind of composition it's obviously a corner case in the language it's rarely used but it's still",
    "start": "2674720",
    "end": "2681359"
  },
  {
    "text": "just really sweet and interesting form of composition to add to the language",
    "start": "2681359",
    "end": "2688160"
  },
  {
    "text": "okay at the other end of the spectrum we uh we removed a dot okay and this is sort of the full",
    "start": "2688160",
    "end": "2694480"
  },
  {
    "text": "spectrum of uh programming language design from where you kind of think about these fancy forms of composition",
    "start": "2694480",
    "end": "2699920"
  },
  {
    "text": "and their impact on you know performance and the like and then you kind of think about uh what you actually need to do to your",
    "start": "2699920",
    "end": "2706720"
  },
  {
    "text": "programming language because it used to be the case that in order to do array or in associative lookup in f",
    "start": "2706720",
    "end": "2712480"
  },
  {
    "text": "sharp you had to do uh dot of index okay and now as of f sharp six",
    "start": "2712480",
    "end": "2718400"
  },
  {
    "text": "you don't need to do that anymore and you can just do uh expression of index",
    "start": "2718400",
    "end": "2723839"
  },
  {
    "text": "uh so why uh why did we",
    "start": "2723839",
    "end": "2729280"
  },
  {
    "text": "put in all the effort to make this this change okay well it's it it it's",
    "start": "2729280",
    "end": "2736880"
  },
  {
    "text": "we were just losing people for absolutely no reason and i i know this because one of my good friends who",
    "start": "2736880",
    "end": "2744640"
  },
  {
    "text": "absolutely loves f sharp he works in machine learning and uh and vision research he just said every time he gave",
    "start": "2744640",
    "end": "2751920"
  },
  {
    "text": "a talk on f sharp he would just show people he'd just show some code",
    "start": "2751920",
    "end": "2757520"
  },
  {
    "text": "and with and people would ask why do you need the dot and then you would say well you just need the dot in f sharp that's how it",
    "start": "2757520",
    "end": "2763200"
  },
  {
    "text": "works we we got it originally from o'camel there are reasons for it in the design heritage of o'camel but",
    "start": "2763200",
    "end": "2770480"
  },
  {
    "text": "uh they aren't good reasons okay and and he said people just turn off people just",
    "start": "2770480",
    "end": "2775920"
  },
  {
    "text": "like say well i don't okay i don't need to worry about that language okay i can forget about that okay and so",
    "start": "2775920",
    "end": "2782240"
  },
  {
    "text": "what i like about this change that we made is it's actually making f sharp more like it was always intended to be",
    "start": "2782240",
    "end": "2790240"
  },
  {
    "text": "okay there was never any good reason never any sufficiently good reason to be different yeah as as you saw with string",
    "start": "2790240",
    "end": "2796560"
  },
  {
    "text": "interpolation and other things we don't we try not to differ from the industry norms we try to you know",
    "start": "2796560",
    "end": "2802560"
  },
  {
    "text": "we a lot of the f-sharp design was about making the uh making the language more like a",
    "start": "2802560",
    "end": "2809359"
  },
  {
    "text": "normal industry programming language and so this is in that theme moving it making a",
    "start": "2809359",
    "end": "2814960"
  },
  {
    "text": "sharp better by moving it towards it already was which i think if you compare that to what say c sharp is having to do",
    "start": "2814960",
    "end": "2821359"
  },
  {
    "text": "in a way c sharp is having is always trying to become something that it wasn't originally okay it's trying to",
    "start": "2821359",
    "end": "2827119"
  },
  {
    "text": "starts off being this object highly object-oriented language and you know it adds these great features but",
    "start": "2827119",
    "end": "2833040"
  },
  {
    "text": "it's always sort of struggling against its initial its initial um starting point but for me this is just",
    "start": "2833040",
    "end": "2839920"
  },
  {
    "text": "about making f sharp better by moving it to what it already was intended to be okay so in fsharp six we also added task",
    "start": "2839920",
    "end": "2847200"
  },
  {
    "text": "support fsharp already had async support but uh there",
    "start": "2847200",
    "end": "2853200"
  },
  {
    "text": "but it um it's a different it was a different type to tasks",
    "start": "2853200",
    "end": "2859200"
  },
  {
    "text": "and so we can see that in code like",
    "start": "2859200",
    "end": "2864480"
  },
  {
    "text": "like this so here's some typical f sharp async code and this is asian",
    "start": "2865040",
    "end": "2871200"
  },
  {
    "text": "async code that is interoperating with tasks okay uh",
    "start": "2871200",
    "end": "2876880"
  },
  {
    "text": "you uh okay so if you don't if we didn't have",
    "start": "2876880",
    "end": "2882480"
  },
  {
    "text": "this await task here for example then you'd get an error saying this thing is uh is it producing a task but",
    "start": "2882480",
    "end": "2889520"
  },
  {
    "text": "we're expecting an async if you're going to bind to it here so you had to put in this weight task",
    "start": "2889520",
    "end": "2895599"
  },
  {
    "text": "and if you uh didn't put that thing at the end you'd get an async and let's say your job is to",
    "start": "2895599",
    "end": "2901359"
  },
  {
    "text": "actually produce a task you'd have to do start as task so this is where you eliminate tasks and this is where you",
    "start": "2901359",
    "end": "2907280"
  },
  {
    "text": "introduce tasks and fsharp async is actually really in some ways it's better than task but",
    "start": "2907280",
    "end": "2914640"
  },
  {
    "text": "there's just a lot of task-based code around in the dotnet world and there are",
    "start": "2914640",
    "end": "2919760"
  },
  {
    "text": "lots of good reasons just to make it simpler to write tasks directly so nowadays you can with fsharp 6",
    "start": "2919760",
    "end": "2926400"
  },
  {
    "text": "it's built in that you can simply change this to task here",
    "start": "2926400",
    "end": "2932880"
  },
  {
    "text": "and you can remove this part here and you can remove this part here and you've got a thing that uses a task",
    "start": "2932880",
    "end": "2940640"
  },
  {
    "text": "function whether that's from some api or some code you've already written and you're producing a task here",
    "start": "2940640",
    "end": "2947920"
  },
  {
    "text": "and otherwise things are very very much the same but there are some differences you need to be aware so task is a single",
    "start": "2947920",
    "end": "2955119"
  },
  {
    "text": "mutable sort of a weightable register it has hot start so the task starts",
    "start": "2955119",
    "end": "2961119"
  },
  {
    "text": "immediately so in in fsharp async that's not the case so in fsharp async you'd",
    "start": "2961119",
    "end": "2966720"
  },
  {
    "text": "have to you'd have to just say we did this",
    "start": "2966720",
    "end": "2972400"
  },
  {
    "text": "then you have to start that async directly",
    "start": "2972400",
    "end": "2978720"
  },
  {
    "text": "so yeah in a separate phase so you do use function 2 [Music] three you do async dot start",
    "start": "2978720",
    "end": "2986880"
  },
  {
    "text": "uh sorry for instance run synchronously",
    "start": "2986880",
    "end": "2992480"
  },
  {
    "text": "okay so but tasks aren't like that when you have task code you the code starts running immediately",
    "start": "2994160",
    "end": "3002400"
  },
  {
    "text": "so as soon as you execute some function this task starts running until its first await point",
    "start": "3002400",
    "end": "3008000"
  },
  {
    "text": "so tasks are hot start they also don't do cancellation checks along the way and they don't propagate a",
    "start": "3008000",
    "end": "3014480"
  },
  {
    "text": "cancellation token automatically one of the really nice things about facing code is it propagates that cancellation token",
    "start": "3014480",
    "end": "3021119"
  },
  {
    "text": "all the way through you can just makes life much simpler that's not the case with tasks",
    "start": "3021119",
    "end": "3026800"
  },
  {
    "text": "you have to explicitly do that and they also don't support this thing with tail calls you have to be a little bit",
    "start": "3026800",
    "end": "3031839"
  },
  {
    "text": "careful about recursive tasks and that's all got to do with the limitations of net tasks but nevertheless there's still",
    "start": "3031839",
    "end": "3037680"
  },
  {
    "text": "an awful lot of case cases where you just want to write tasks directly and",
    "start": "3037680",
    "end": "3042880"
  },
  {
    "text": "so it's great to have that support built in for the language it's also debugging can be a lot better than async",
    "start": "3042880",
    "end": "3049200"
  },
  {
    "text": "and uh and the performance can also be better than f sharp async",
    "start": "3049200",
    "end": "3056000"
  },
  {
    "text": "for when that matters okay so just to conclude with a few more",
    "start": "3056000",
    "end": "3062240"
  },
  {
    "text": "points we added so we did some deprecation we actually started deprecating quite a lot of",
    "start": "3062240",
    "end": "3067520"
  },
  {
    "text": "things for instance there was this very old thing called the ml compatibility mode right back from f 1.0 that's all",
    "start": "3067520",
    "end": "3073839"
  },
  {
    "text": "been deprecated and limited to f sharp 5.0 and before there are also these things called",
    "start": "3073839",
    "end": "3080079"
  },
  {
    "text": "reference cells which use these operators bang and colon equals",
    "start": "3080079",
    "end": "3085760"
  },
  {
    "text": "okay so just to give a sample of that",
    "start": "3085760",
    "end": "3090720"
  },
  {
    "text": "let me let me just undo here a bit",
    "start": "3093440",
    "end": "3100960"
  },
  {
    "text": "fine okay so deprecation",
    "start": "3103920",
    "end": "3110920"
  },
  {
    "text": "at five",
    "start": "3111359",
    "end": "3117680"
  },
  {
    "text": "okay so you now get a deprecation here saying the the use of this operator from",
    "start": "3118880",
    "end": "3124960"
  },
  {
    "text": "the f library is deprecated please use a more explicit form okay",
    "start": "3124960",
    "end": "3130319"
  },
  {
    "text": "uh and and used to be able to do sort of bang r uh uh like that",
    "start": "3130319",
    "end": "3136800"
  },
  {
    "text": "uh and it says please don't do that please use dot value now and this kind",
    "start": "3136800",
    "end": "3142160"
  },
  {
    "text": "of programming is actually almost never needed in f sharp",
    "start": "3142160",
    "end": "3147520"
  },
  {
    "text": "uh and in any case so you you because these days you can nearly always just do",
    "start": "3147520",
    "end": "3152960"
  },
  {
    "text": "let mutable r equal this like this and then you just use r directly like",
    "start": "3152960",
    "end": "3159119"
  },
  {
    "text": "that so we decided to deprecate that through a very soft deprecation just that informational",
    "start": "3159119",
    "end": "3164880"
  },
  {
    "text": "warning that comes up to saying please don't do this and",
    "start": "3164880",
    "end": "3170400"
  },
  {
    "text": "that's very much a very major reason it's because of that bang r that we had is just obviously so confusing to people",
    "start": "3170400",
    "end": "3177119"
  },
  {
    "text": "coming from python and c-sharp and we just we just can't have that in the language in the long term we have to get",
    "start": "3177119",
    "end": "3182960"
  },
  {
    "text": "rid of that kind of confusion for people coming from that from from that world uh and and there",
    "start": "3182960",
    "end": "3188559"
  },
  {
    "text": "are cases where this you know uh uh where you see this kind of code",
    "start": "3188559",
    "end": "3195839"
  },
  {
    "text": "you know this kind of thing false and finished",
    "start": "3196319",
    "end": "3201760"
  },
  {
    "text": "is true or something sort of while not",
    "start": "3201760",
    "end": "3207359"
  },
  {
    "text": "while not bang finished",
    "start": "3207359",
    "end": "3212880"
  },
  {
    "text": "dot dot dot that sort of thing uh of course people don't you know",
    "start": "3213440",
    "end": "3218720"
  },
  {
    "text": "people coming from the c sharp world will see this i mean we can't we just can't have this in the language anyway",
    "start": "3218720",
    "end": "3224480"
  },
  {
    "text": "it's gone i'll just delete all of that okay so that's uh soft so don't use",
    "start": "3224480",
    "end": "3230079"
  },
  {
    "text": "those operators and you'll get soft deprecation messages f-sharp compiler service now fully multi-threaded no reactor queue the ides",
    "start": "3230079",
    "end": "3237760"
  },
  {
    "text": "are way more responsive visual studio 2022 is our 64-bit",
    "start": "3237760",
    "end": "3243280"
  },
  {
    "text": "lots of other major performance improvements in their compiler the ide the tooling they're in the announcement",
    "start": "3243280",
    "end": "3248559"
  },
  {
    "text": "blogs take it take a look at those one thing i am going to show next is to do with uh",
    "start": "3248559",
    "end": "3253920"
  },
  {
    "text": "on the tooling side is to do with pipeline debugging and in this uh i would since i'm just",
    "start": "3253920",
    "end": "3261119"
  },
  {
    "text": "running out of time i will just show that here and i'm going to press f5 to see",
    "start": "3261119",
    "end": "3268160"
  },
  {
    "text": "hopefully i it builds okay yep",
    "start": "3268160",
    "end": "3274599"
  },
  {
    "text": "okay so i so so now in f sharp six you can set",
    "start": "3279680",
    "end": "3285280"
  },
  {
    "text": "break points on pipeline stages like this so uh any any of these down down the way",
    "start": "3285280",
    "end": "3294079"
  },
  {
    "text": "and if you take a careful look down the bottom left you'll see you can see what the input to the pipeline is and this is",
    "start": "3294079",
    "end": "3301359"
  },
  {
    "text": "actually an example which is doing some screen scraping from a wikipedia site to",
    "start": "3301359",
    "end": "3306720"
  },
  {
    "text": "do doc the british tv show doctor who and it's getting the episode list to",
    "start": "3306720",
    "end": "3312480"
  },
  {
    "text": "doctor who and who were the directors you can see the dialects here and you can see that was our original",
    "start": "3312480",
    "end": "3318960"
  },
  {
    "text": "input and then we did some filtering of that actually nothing got filtered out you can see that there's nothing being",
    "start": "3318960",
    "end": "3324240"
  },
  {
    "text": "filtered 261 and then you can see that we only searched for the dialect",
    "start": "3324240",
    "end": "3329920"
  },
  {
    "text": "episodes here and they had a full 280",
    "start": "3329920",
    "end": "3335599"
  },
  {
    "text": "uh no we're grouping no we're grouping by whether the thing contains daleks",
    "start": "3335599",
    "end": "3341920"
  },
  {
    "text": "or not and then oh no that's the result of the grouping this is between uh",
    "start": "3341920",
    "end": "3349200"
  },
  {
    "text": "193 episodes didn't contain daleks and 193 25 episodes did contain",
    "start": "3349200",
    "end": "3355280"
  },
  {
    "text": "daleks in the first few years of doctor who okay so you can see pipeline debugging",
    "start": "3355280",
    "end": "3361599"
  },
  {
    "text": "this is one of my favorite features of fsharp 6. i use it all the time just stepping through the compiler it's",
    "start": "3361599",
    "end": "3367680"
  },
  {
    "text": "just so much more enjoyable it's one of the first times we've actually done a debugging feature that is specifically",
    "start": "3367680",
    "end": "3372720"
  },
  {
    "text": "related to something strongly associated with f sharp this pipelining thing so uh really very happy with how that",
    "start": "3372720",
    "end": "3380400"
  },
  {
    "text": "that one works uh there's also some work on improving the how we show shadowing values in the debugger",
    "start": "3380400",
    "end": "3387200"
  },
  {
    "text": "list and array expressions have had like a four time performance improvement in how we compile those constructs we no",
    "start": "3387200",
    "end": "3393680"
  },
  {
    "text": "longer do them in the link kind of way but just generate this really fast generator code",
    "start": "3393680",
    "end": "3398960"
  },
  {
    "text": "for them and uh you can take a look at those we've also from the f sharp",
    "start": "3398960",
    "end": "3404720"
  },
  {
    "text": "community had this improved map and set performance by viktor bavakov and just that was in fsharp five and",
    "start": "3404720",
    "end": "3411599"
  },
  {
    "text": "just massive improvements to the performance of uh the core map and set data structures",
    "start": "3411599",
    "end": "3416880"
  },
  {
    "text": "so we've also done some dock improvements there's loads of almost all the functions in fsharp.com",
    "start": "3416880",
    "end": "3422799"
  },
  {
    "text": "come with proper examples now and you can also turn on some xml dock checking",
    "start": "3422799",
    "end": "3428400"
  },
  {
    "text": "in your in your projects if you go through and put this on worn on 3390 you do have to",
    "start": "3428400",
    "end": "3435599"
  },
  {
    "text": "turn this on explicitly for various compat reasons uh so one on 3390",
    "start": "3435599",
    "end": "3442160"
  },
  {
    "text": "and you come to your error list you'll see here for example that i've mistyped",
    "start": "3442160",
    "end": "3447280"
  },
  {
    "text": "the tag on my xml docs so you'll get xml doc checking in the ide",
    "start": "3447280",
    "end": "3452559"
  },
  {
    "text": "uh for and it'll it'll check for instance if you you've given um a",
    "start": "3452559",
    "end": "3458000"
  },
  {
    "text": "documentation for each parameter in your functions and so on okay",
    "start": "3458000",
    "end": "3464319"
  },
  {
    "text": "uh so i i do want to say just what a huge incredibly collaborative effort this has",
    "start": "3464319",
    "end": "3470799"
  },
  {
    "text": "been here's the thanks and acknowledgments for f sharp six so many people have contributed to this from",
    "start": "3470799",
    "end": "3476720"
  },
  {
    "text": "across the f-sharp community they listed out two people uh call out nino flora",
    "start": "3476720",
    "end": "3482480"
  },
  {
    "text": "flores uh and hadrian tang here hadrian is a 19 year old student from hong kong",
    "start": "3482480",
    "end": "3488640"
  },
  {
    "text": "university he contributed about four or five of the features in f sharp six so",
    "start": "3488640",
    "end": "3494480"
  },
  {
    "text": "isn't it just fantastic to see people coming into the dot net community with you know uh who are without with that",
    "start": "3494480",
    "end": "3501119"
  },
  {
    "text": "kind of energy right at the start of their of their careers as well but loads of people have uh have contributed",
    "start": "3501119",
    "end": "3509520"
  },
  {
    "text": "okay and that's it thanks very much i don't know if we're taking questions or not in the talks i guess i'm kind of out",
    "start": "3509520",
    "end": "3514799"
  },
  {
    "text": "of time so maybe we will take the questions outside uh unless we'll take one question",
    "start": "3514799",
    "end": "3522799"
  },
  {
    "text": "any anybody got a question and barely see you all",
    "start": "3522799",
    "end": "3527200"
  },
  {
    "text": "anyway we'll take questions outside just here",
    "start": "3531280",
    "end": "3535838"
  },
  {
    "text": "thanks",
    "start": "3536720",
    "end": "3539720"
  },
  {
    "text": "you",
    "start": "3548960",
    "end": "3551040"
  }
]