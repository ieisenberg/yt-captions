[
  {
    "start": "0",
    "end": "118000"
  },
  {
    "text": "publicly so welcome to Friday morning the energy in the room is palpable guys",
    "start": "5610",
    "end": "13570"
  },
  {
    "text": "are so pumped like how's my hair coffee",
    "start": "13570",
    "end": "19210"
  },
  {
    "text": "alright so quick introductions I've got my name on the screen you can read it",
    "start": "19210",
    "end": "25870"
  },
  {
    "text": "for yourself Twitter handle if you're looking for me online I Bank 64y the 54 because when I",
    "start": "25870",
    "end": "32500"
  },
  {
    "text": "first signed up for an MSN account it was the auto-generated number it's",
    "start": "32500",
    "end": "38289"
  },
  {
    "text": "not my age it's not the Euro is born it's not the number of follicles of hair left on my head",
    "start": "38289",
    "end": "44289"
  },
  {
    "text": "now that I blog a bit I've been bit quite lately principal consultant with ratify scrum",
    "start": "44289",
    "end": "51850"
  },
  {
    "text": "dog trainer Microsoft MVP etc etc I do stuff basically just means I talk a lot",
    "start": "51850",
    "end": "57719"
  },
  {
    "text": "so I'm going to keep talking so this particular one we're going to be covering is building micro services in",
    "start": "57719",
    "end": "63969"
  },
  {
    "text": "net so I was asking the room before for those who weren't here just how many people have been to other micro services",
    "start": "63969",
    "end": "70509"
  },
  {
    "text": "talks I assume is probably about half so far by the responses that I got though",
    "start": "70509",
    "end": "76180"
  },
  {
    "text": "it could just because you were all asleep raising a hand too much energy in the morning who's at accuracy who's",
    "start": "76180",
    "end": "84219"
  },
  {
    "text": "looking at doing some sort of micro service type implementation for reals",
    "start": "84219",
    "end": "89890"
  },
  {
    "text": "versus just kicking the tires crap okay",
    "start": "89890",
    "end": "95549"
  },
  {
    "text": "are you guys all nuts close because you understand that there's a little bit of",
    "start": "95549",
    "end": "101649"
  },
  {
    "text": "complexity here right it's not just you know make tiny little bits and throw it",
    "start": "101649",
    "end": "106840"
  },
  {
    "text": "out there and it all just magically works and there's pixie dust and unicorns and rainbows and flying poop emojis and whatever else it's more the",
    "start": "106840",
    "end": "114939"
  },
  {
    "text": "second than any of the first by the way all right all we do is we'll run through things the why architecture stuff and",
    "start": "114939",
    "end": "124990"
  },
  {
    "start": "118000",
    "end": "118000"
  },
  {
    "text": "then I'll go through some of the implementation things and then we'll talk through some deployment factors in the dev environment specific things this",
    "start": "124990",
    "end": "132130"
  },
  {
    "text": "is not going to be a talk that gives you the full details for everything micro services end to end",
    "start": "132130",
    "end": "138980"
  },
  {
    "text": "show me how to implement everything 100% with all the complexity that's involved",
    "start": "138980",
    "end": "144720"
  },
  {
    "text": "in an hour yeah you're kidding so it's it's more an intent to run through the",
    "start": "144720",
    "end": "151710"
  },
  {
    "text": "concepts the things to think about and show you some implementations to give you some inspiration for things to do",
    "start": "151710",
    "end": "157410"
  },
  {
    "text": "yourselves so start off with everyone who put their hand up to say they're doing",
    "start": "157410",
    "end": "163410"
  },
  {
    "start": "159000",
    "end": "159000"
  },
  {
    "text": "micro-services odds are you probably don't actually need them wait why so is",
    "start": "163410",
    "end": "169410"
  },
  {
    "text": "this talk where the guy at the front says no you don't need them go away yeah that's it there needs to be business",
    "start": "169410",
    "end": "177180"
  },
  {
    "text": "value for you your micro services there has to be a reason to do it other than resume driven development other than",
    "start": "177180",
    "end": "184470"
  },
  {
    "text": "Netflix think carefully about doing",
    "start": "184470",
    "end": "189690"
  },
  {
    "text": "these things if you can't build a and I say this a bit later and if you can't build a good modularized monolith then",
    "start": "189690",
    "end": "198030"
  },
  {
    "text": "there is no way you're going to build a good micro-services solution just keep that in mind",
    "start": "198030",
    "end": "203160"
  },
  {
    "text": "tooling around these things by the way is still definitely improving but there's a lot of activity it's",
    "start": "203160",
    "end": "209520"
  },
  {
    "text": "almost like JavaScript frameworks in terms of micro-services tooling and approaches so expect that to keep",
    "start": "209520",
    "end": "216000"
  },
  {
    "text": "evolving over the next little while and what i've seen i've talked to a bunch of",
    "start": "216000",
    "end": "221760"
  },
  {
    "text": "people about their different approaches in terms of what they're doing for micro services there's what I suppose you call",
    "start": "221760",
    "end": "229620"
  },
  {
    "text": "purush I don't know if there's a really a definition of a pure micro service approach but there are approaches a lot",
    "start": "229620",
    "end": "237209"
  },
  {
    "text": "of people have variations on a theme if that works for them perfectly fine I",
    "start": "237209",
    "end": "243060"
  },
  {
    "text": "have no problem at all I don't believe that there's a one way to do anything in",
    "start": "243060",
    "end": "249360"
  },
  {
    "text": "terms of software development architecture and anything we build is all about trade-offs so a micro services",
    "start": "249360",
    "end": "255750"
  },
  {
    "text": "approach is trading off something for something else it's trading off",
    "start": "255750",
    "end": "261260"
  },
  {
    "text": "flexibility of deployment for complexity of deployment for example it's trading",
    "start": "261260",
    "end": "267510"
  },
  {
    "text": "off small components for complex network communications so",
    "start": "267510",
    "end": "274740"
  },
  {
    "text": "it's all about trade-offs whereas the mana list says you don't need to have the complex communications but you do need to end up with a large code base so",
    "start": "274740",
    "end": "281250"
  },
  {
    "text": "you kind of you always these things so if you don't have what Piarist or",
    "start": "281250",
    "end": "287460"
  },
  {
    "text": "bloggers talk about as a pure implementation don't stress",
    "start": "287460",
    "end": "292470"
  },
  {
    "text": "if it works for your organization your business and it provides value and you're getting the benefits you want",
    "start": "292470",
    "end": "298020"
  },
  {
    "text": "from it then you'll see a smile on my face if no one else's and through this I'm only",
    "start": "298020",
    "end": "305550"
  },
  {
    "text": "going to be showing you one way of doing things just one there are many many many many many different ways to do this",
    "start": "305550",
    "end": "311640"
  },
  {
    "text": "stuff okay it's not the only way you know there's also other approaches as",
    "start": "311640",
    "end": "317280"
  },
  {
    "text": "well lam during functions who's been to the lambda talks or the functions talks",
    "start": "317280",
    "end": "323310"
  },
  {
    "text": "so far because it says serverless and that's exciting right",
    "start": "323310",
    "end": "328820"
  },
  {
    "text": "as I was saying before for those who weren't in the room personally I find the whole server list term a bit of a",
    "start": "329360",
    "end": "334440"
  },
  {
    "text": "joke because where do the functions run",
    "start": "334440",
    "end": "339320"
  },
  {
    "text": "on servers whoa just because we don't maintain them doesn't mean there's no",
    "start": "340280",
    "end": "345660"
  },
  {
    "text": "service service fabric platform as a service isn't approach who's played with",
    "start": "345660",
    "end": "351479"
  },
  {
    "text": "that by the way or at least had a kick around of the ties so only a couple okay so if you're genuinely looking at a",
    "start": "351479",
    "end": "359550"
  },
  {
    "text": "micro services solution have a think about service fabric because it deals with a lot of the complexity that you",
    "start": "359550",
    "end": "366390"
  },
  {
    "text": "would otherwise have to look after yourself in terms of service health migrating services between things",
    "start": "366390",
    "end": "372180"
  },
  {
    "text": "dealing with the communications registration all sorts of stuff it's got a lot of benefits in there",
    "start": "372180",
    "end": "378479"
  },
  {
    "text": "it's an opinionated framework or an opinionated approach but again if it works for you it has benefit then that's",
    "start": "378479",
    "end": "384210"
  },
  {
    "text": "a good thing akka anyone been to the akka talks yeah you liked what you saw its kind of cool",
    "start": "384210",
    "end": "391020"
  },
  {
    "text": "huh actor/model all that sort of thing who knew Erlang was going to be a thing all right so the",
    "start": "391020",
    "end": "398430"
  },
  {
    "text": "microscope is pitched why are you guys doing this probably because of this reason",
    "start": "398430",
    "end": "403370"
  },
  {
    "start": "401000",
    "end": "401000"
  },
  {
    "text": "huh shiny shiny sany sany sany sany I like shiny we're all here we're at an",
    "start": "404190",
    "end": "409710"
  },
  {
    "text": "NDC conference we like shiny I personally love shiny Boober everyone",
    "start": "409710",
    "end": "417000"
  },
  {
    "text": "sees that all UBA UBA super successful because they do micro services or Netflix the granddaddy of how to do this",
    "start": "417000",
    "end": "423300"
  },
  {
    "text": "stuff granddaddy being like you know six years old right Amazon micro services Pizza teams etc",
    "start": "423300",
    "end": "431640"
  },
  {
    "text": "etc and it's all about these you know we see the unicorns in the industry these organizations that have billion dollar",
    "start": "431640",
    "end": "438990"
  },
  {
    "text": "plus valuations and they all seem to have this common thing if they run micro",
    "start": "438990",
    "end": "444480"
  },
  {
    "text": "services so of course it must be the way not true it's a way it's an approach if",
    "start": "444480",
    "end": "453330"
  },
  {
    "text": "you're doing it just because it's exciting and because you want to update your resume again I'm going to say it",
    "start": "453330",
    "end": "459900"
  },
  {
    "text": "again don't do it you'll hurt yourself more seriously though there's things in",
    "start": "459900",
    "end": "466860"
  },
  {
    "text": "here to think about the business benefits that we'd get flexibility and scalability being able to deploy these",
    "start": "466860",
    "end": "474900"
  },
  {
    "text": "smaller components more regularly gives us more ability to respond quickly to changing customer demand and sorting out",
    "start": "474900",
    "end": "481560"
  },
  {
    "text": "our business needs that's a good thing definitely well worth doing because if",
    "start": "481560",
    "end": "488130"
  },
  {
    "text": "you have to go through that painful process of deploying the model if all the time it it's a little awkward right how long does it take by the way for you",
    "start": "488130",
    "end": "494400"
  },
  {
    "text": "guys in general to deploy a new version of your software anyone take more than",
    "start": "494400",
    "end": "499620"
  },
  {
    "text": "three months yeah two months one month a",
    "start": "499620",
    "end": "506300"
  },
  {
    "text": "couple of weeks when's your ad you have specified outage windows by the way where you're only",
    "start": "506300",
    "end": "511919"
  },
  {
    "text": "allowed to deploy on the Friday afternoon at well Friday afternoon what",
    "start": "511919",
    "end": "517020"
  },
  {
    "text": "am i doing Friday night 3:00 a.m. right so that you've got all weekend to",
    "start": "517020",
    "end": "522120"
  },
  {
    "text": "recover when the deployment goes wrong and you've got to write the document that says you know do this step this",
    "start": "522120",
    "end": "527400"
  },
  {
    "text": "step this step and then someone takes that runs it manually makes a mistake and then calls you guy and the",
    "start": "527400",
    "end": "532800"
  },
  {
    "text": "deployment didn't work did you follow the steps and not really anyone got that",
    "start": "532800",
    "end": "537930"
  },
  {
    "text": "change approval boards you got to go through the cab meeting ITIL all that",
    "start": "537930",
    "end": "543540"
  },
  {
    "text": "sort of stuff it's great fun isn't it slows down the agility of the organization Micro services are meant to",
    "start": "543540",
    "end": "549270"
  },
  {
    "text": "help resolve that that said I've seen places where the idea of deploying a",
    "start": "549270",
    "end": "556020"
  },
  {
    "text": "micro service goes through exactly the same deployment process as the monolith does which kind of defeats the purpose",
    "start": "556020",
    "end": "562110"
  },
  {
    "text": "right if the organization's not ready it's not going to work we have more evolvable",
    "start": "562110",
    "end": "567270"
  },
  {
    "text": "systems that's always a good thing independently deployable you know technical agility so as technology moves",
    "start": "567270",
    "end": "574680"
  },
  {
    "text": "you want to start doing some dotnet core stuff because you want to run a particular service on linux or just",
    "start": "574680",
    "end": "580589"
  },
  {
    "text": "because shiny shiny shiny you can start switching parts of your app around and",
    "start": "580589",
    "end": "587370"
  },
  {
    "text": "change technology stacks you want to use a graph database or you want to use a document database for this particular",
    "start": "587370",
    "end": "592500"
  },
  {
    "text": "need you want to use the right tool for the right job perfect no problem at all and again if",
    "start": "592500",
    "end": "598800"
  },
  {
    "text": "you've got multiple teams then being able to have different teams responsible for different subsets of the system and",
    "start": "598800",
    "end": "604440"
  },
  {
    "text": "control their own destiny and not feel like they have to conform to the crap",
    "start": "604440",
    "end": "609810"
  },
  {
    "text": "that everyone else has to conform to sometimes that can be a benefit Tiger teams for example how many people have",
    "start": "609810",
    "end": "616740"
  },
  {
    "text": "multiple teams that they're dealing with okay more than five teams okay",
    "start": "616740",
    "end": "623339"
  },
  {
    "text": "good size there's more things resilient so you know one thing fails we don't",
    "start": "623339",
    "end": "628980"
  },
  {
    "text": "wipe out the whole thing if the monolith has a bug in it the whole thing ends up becoming a mess versus we lose a single",
    "start": "628980",
    "end": "634970"
  },
  {
    "text": "component of the solution so again there's business benefit they're smaller",
    "start": "634970",
    "end": "640950"
  },
  {
    "text": "services are easier for devs to understand and it's a potential migration approach for legacy apps so",
    "start": "640950",
    "end": "647660"
  },
  {
    "text": "doing this with one particular customer who's got a 20 year old application yeah",
    "start": "647660",
    "end": "654260"
  },
  {
    "text": "it's only 20 years old right who's got older how do we move these things",
    "start": "654260",
    "end": "662730"
  },
  {
    "text": "forward and bring them across right the typical approach is going to be the big rewrite let's just start again",
    "start": "662730",
    "end": "668760"
  },
  {
    "text": "napalm er nuke it from all that and rebuild the whole thing because rebuilding a 20 year old system with all",
    "start": "668760",
    "end": "674920"
  },
  {
    "text": "the development that's gone into it's going to take six months right three months because that's all the budget allowed for we don't have that so what",
    "start": "674920",
    "end": "683500"
  },
  {
    "text": "we can do is we can basically bite off chunks of the elephant convert those into little micro services while leaving",
    "start": "683500",
    "end": "689590"
  },
  {
    "text": "our big legacy core sitting there and then we just communicate to it so that's",
    "start": "689590",
    "end": "695200"
  },
  {
    "text": "an approach and then you gradually eat away at the core until there's nothing left and you've got a new system and",
    "start": "695200",
    "end": "701050"
  },
  {
    "text": "you've managed to rebuild it without taking the old system down and while avoiding a rewrite that said there's",
    "start": "701050",
    "end": "708400"
  },
  {
    "text": "complexity in doing that the reality though for most people is they go and do micro services and they end up in this",
    "start": "708400",
    "end": "713920"
  },
  {
    "text": "situation where they're pulling their hair out and they're looking frustrated and they're swearing and they're all",
    "start": "713920",
    "end": "720850"
  },
  {
    "text": "right you know wasn't this meant to be easy I can't tell help this together anymore everything falls over as soon as I",
    "start": "720850",
    "end": "726580"
  },
  {
    "text": "change something here this breaks over there I thought that was only a model less problem performance sucks yeah all",
    "start": "726580",
    "end": "735520"
  },
  {
    "text": "these things that that occur who's got",
    "start": "735520",
    "end": "741580"
  },
  {
    "text": "to this point by the way yeah",
    "start": "741580",
    "end": "747840"
  },
  {
    "text": "distributed systems are hard really really hard a monolith is easy to",
    "start": "747840",
    "end": "753100"
  },
  {
    "text": "understand because you're taking out the big issues of network latency and availability and all that sort of stuff",
    "start": "753100",
    "end": "759520"
  },
  {
    "text": "it's all there in one spot you're running in process all the time as soon as you go out of process there's other",
    "start": "759520",
    "end": "765010"
  },
  {
    "text": "problems to deal with you're dealing with data across different systems so you have to start thinking about",
    "start": "765010",
    "end": "770500"
  },
  {
    "text": "eventual consistency that's a mental shift that's difficult to get right first time it takes a while to work",
    "start": "770500",
    "end": "776590"
  },
  {
    "text": "through and it's really easy to fall back into the bad habits so you end up going back into those bad habits and you",
    "start": "776590",
    "end": "782950"
  },
  {
    "text": "you just create a distributor ball mud which is instead of piling you know the teenager's bedroom instead of piling all",
    "start": "782950",
    "end": "788320"
  },
  {
    "text": "the clothes in the corner we're now just spread their crap all over the floor it's everywhere and across there are",
    "start": "788320",
    "end": "794470"
  },
  {
    "text": "other rooms in the house who's got teenagers who is a teenager still internally well okay and then there's",
    "start": "794470",
    "end": "802480"
  },
  {
    "text": "the big one which is the one that no one really talks about too much but it's the people and culture problem there's various",
    "start": "802480",
    "end": "810310"
  },
  {
    "text": "talks you can find around the place on how systems architecture reflects the organization hierarchy if your",
    "start": "810310",
    "end": "817120"
  },
  {
    "text": "organization is built and structured effectively as a top-down organization",
    "start": "817120",
    "end": "822600"
  },
  {
    "text": "you will find that organizationally you can't even build micro services because",
    "start": "822600",
    "end": "828820"
  },
  {
    "text": "the approach will still be silos monoliths whatever else if you don't empower your teams and you don't let",
    "start": "828820",
    "end": "835330"
  },
  {
    "text": "them have control of specific things and Trust and get teams communicating with each other versus having to communicate",
    "start": "835330",
    "end": "841089"
  },
  {
    "text": "up and then back down it will be very difficult so keep that in mind wrapp",
    "start": "841089",
    "end": "846150"
  },
  {
    "text": "sometimes for this to work the reason why those unicorn companies are successful is because their company",
    "start": "846150",
    "end": "852130"
  },
  {
    "text": "cultures already support this they're built from the ground up with that culture in mind so it's much easier it's",
    "start": "852130",
    "end": "860200"
  },
  {
    "text": "like a an organization who's working in",
    "start": "860200",
    "end": "865720"
  },
  {
    "text": "a traditional waterfall style organization or one that used to be and they're trying to do agile so whenever",
    "start": "865720",
    "end": "874150"
  },
  {
    "text": "you hear the word doing agile you know you're going to fail just so you know clear you either are agile or you're not",
    "start": "874150",
    "end": "881140"
  },
  {
    "text": "the Netflix and the ubers are agile companies they're not traditional",
    "start": "881140",
    "end": "886779"
  },
  {
    "text": "waterfall with project managers who tell people how to do their daily scrums and you know all that sort of stuff it's not",
    "start": "886779",
    "end": "894040"
  },
  {
    "text": "commanding control it's and empower people and get them to do things you need that environment for this that said",
    "start": "894040",
    "end": "900570"
  },
  {
    "text": "that said - to do - I've already covered",
    "start": "900570",
    "end": "905650"
  },
  {
    "text": "most of this DevOps you will need to do DevOps for this to work distributed",
    "start": "905650",
    "end": "910900"
  },
  {
    "text": "systems multiple things to look after got to stay on top of it and make sure there's an underlying reason and in all",
    "start": "910900",
    "end": "918160"
  },
  {
    "text": "these things don't make it more complex than it needs to be we have a tendency as dads especially with it's new and",
    "start": "918160",
    "end": "924520"
  },
  {
    "text": "shiny to take on cargo cult type stuff to add things to our solutions that we don't actually need because someone else",
    "start": "924520",
    "end": "930670"
  },
  {
    "text": "said that that was helpful for them just because I'm mentioning something in this talk doesn't mean you need to use it",
    "start": "930670",
    "end": "938490"
  },
  {
    "text": "use the gray matter that's inside that nice gently thick skull of yours to come",
    "start": "939100",
    "end": "946250"
  },
  {
    "text": "up with just the things you need keep it as simple as possible and don't add weight to your solution until there's a",
    "start": "946250",
    "end": "952610"
  },
  {
    "text": "business need or a functional need to drive that so don't over engineer it don't gold plate it don't build it just",
    "start": "952610",
    "end": "959000"
  },
  {
    "text": "because it looked interesting don't build what you might need only build",
    "start": "959000",
    "end": "964070"
  },
  {
    "text": "what's in front of you and then go from there because regardless of what we're doing the return on investment and total",
    "start": "964070",
    "end": "970040"
  },
  {
    "text": "cost of ownership equation are still really important and a microservices TCO is much generally much higher than a",
    "start": "970040",
    "end": "976190"
  },
  {
    "text": "monolith because of that DevOps need so again keep these things in mind all",
    "start": "976190",
    "end": "982220"
  },
  {
    "text": "right so this is your chance to run away go find a better talk if this doesn't suit you if you're still here then",
    "start": "982220",
    "end": "989779"
  },
  {
    "text": "firstly are you nuts don't answer that question and you have",
    "start": "989779",
    "end": "996680"
  },
  {
    "text": "been warned let's have some fun shall we all right so what do we want Micra",
    "start": "996680",
    "end": "1002740"
  },
  {
    "text": "services you've come across this stuff independent loosely coupled services cheap easy to scale replaceable throw",
    "start": "1002740",
    "end": "1009670"
  },
  {
    "text": "stuff away very much the UNIX command-line approach small things that interact well with each other that's",
    "start": "1009670",
    "end": "1015010"
  },
  {
    "text": "good so architectural II have you seen this port in adapters hands up okay for",
    "start": "1015010",
    "end": "1022480"
  },
  {
    "text": "those who haven't the idea here is that this is sometimes called hexagonal onion",
    "start": "1022480",
    "end": "1028740"
  },
  {
    "text": "clean architectures there's various approaches they're all kind of the same theme the idea is that you have at your",
    "start": "1028740",
    "end": "1037418"
  },
  {
    "text": "core a single domain logic piece of code something which works in isolation for",
    "start": "1037419",
    "end": "1045188"
  },
  {
    "text": "it to interact with the outside world or to be interacted with it opens up ports which are then implemented through",
    "start": "1045189",
    "end": "1052179"
  },
  {
    "text": "adapters okay so then client applications for example make a call to an adapter which",
    "start": "1052179",
    "end": "1057580"
  },
  {
    "text": "might be a Web API call for example which then gets forwarding forwards",
    "start": "1057580",
    "end": "1062890"
  },
  {
    "text": "through to make a call through the port to something that happens internally so the port just being the public methods",
    "start": "1062890",
    "end": "1068380"
  },
  {
    "text": "and things that get exposed by that central piece of logic makes sense and there's various ways you",
    "start": "1068380",
    "end": "1074019"
  },
  {
    "text": "can do this and you'll see different pictures around the place you know so webcore going into an adapter which goes",
    "start": "1074019",
    "end": "1079090"
  },
  {
    "text": "out of an adapter into a database the database is not part of the core application it's an external piece this",
    "start": "1079090",
    "end": "1086919"
  },
  {
    "text": "approach works really well because I can muck around with different implementations if I'm testing I can",
    "start": "1086919",
    "end": "1092559"
  },
  {
    "text": "have a mock database or a full database it means no change in here nice isolated",
    "start": "1092559",
    "end": "1097570"
  },
  {
    "text": "encapsulated functionality and if you",
    "start": "1097570",
    "end": "1103179"
  },
  {
    "text": "were to take that concept and then apply it to a full solution then conceptually",
    "start": "1103179",
    "end": "1109269"
  },
  {
    "text": "each micro-service being its own little hexagon thing diagram circle stuff they",
    "start": "1109269",
    "end": "1118179"
  },
  {
    "text": "can all work with each other and understand where each other is based on whatever particular needs they have they",
    "start": "1118179",
    "end": "1124450"
  },
  {
    "text": "they need to do something they make a call via one of their ports and adapters to another service through its adapters",
    "start": "1124450",
    "end": "1132789"
  },
  {
    "text": "make sense fairly easy and if you put it on a diagram like this it looks simple",
    "start": "1132789",
    "end": "1137940"
  },
  {
    "text": "because you know everyone's solution involves six things right should be easy",
    "start": "1137940",
    "end": "1146370"
  },
  {
    "text": "yeah everyone's solution involves six things",
    "start": "1146370",
    "end": "1150778"
  },
  {
    "text": "there's Netflix's network diagram as at what year was that again 2004 Oh",
    "start": "1151990",
    "end": "1159570"
  },
  {
    "text": "fourteen I don't remember yeah there's kind of a few things going",
    "start": "1159570",
    "end": "1165789"
  },
  {
    "text": "on there twitter is not much going on right all",
    "start": "1165789",
    "end": "1173649"
  },
  {
    "text": "these things have to talk to each other but they all follow the same basic pattern you've got something that's",
    "start": "1173649",
    "end": "1179350"
  },
  {
    "text": "fairly easy to implement so we'll see how that works in general what you want to do is try and keep the communication",
    "start": "1179350",
    "end": "1185350"
  },
  {
    "start": "1181000",
    "end": "1181000"
  },
  {
    "text": "in particular through your adapters fairly consistent the consistency reduces the complexity there's enough",
    "start": "1185350",
    "end": "1192429"
  },
  {
    "text": "complexity as it is try and keep things fairly consistent if you're using an agnostic platform agnostic comes",
    "start": "1192429",
    "end": "1198879"
  },
  {
    "text": "mechanism such as HTTP then it doesn't matter someone one team does it in Java one team does the service",
    "start": "1198879",
    "end": "1204940"
  },
  {
    "text": "Rubi one team does a service in net one team does a service in no doesn't really make any difference at that point you've",
    "start": "1204940",
    "end": "1210820"
  },
  {
    "text": "got that tech flexibility because the communications between them is consistent in general try and keep a",
    "start": "1210820",
    "end": "1218200"
  },
  {
    "text": "single approach for synchronous communications where you need to have two services talk to each other directly and a single approach for your async",
    "start": "1218200",
    "end": "1225970"
  },
  {
    "text": "communications again reducing complexity if you end up with multiple approaches",
    "start": "1225970",
    "end": "1231310"
  },
  {
    "text": "for async comms then your services have to understand how to talk all the",
    "start": "1231310",
    "end": "1236380"
  },
  {
    "text": "different dialects because you don't know when you'll need one of those things some also in terms of the",
    "start": "1236380",
    "end": "1244720"
  },
  {
    "text": "approach client applications don't call directly to your micro service you want",
    "start": "1244720",
    "end": "1250750"
  },
  {
    "text": "to have the flexibility to change the way your services work you want to be able to decompose larger services into",
    "start": "1250750",
    "end": "1257110"
  },
  {
    "text": "smaller ones or aggregate smaller ones into larger ones without impacting your clients so what we tend to talk about",
    "start": "1257110",
    "end": "1263230"
  },
  {
    "text": "are things like edge services or API gateways and so forth which also let you do load balancing and proxying and other",
    "start": "1263230",
    "end": "1270880"
  },
  {
    "text": "things like that I'm not going to go into that as part of this talk too much I'm leaving that aside because I really want to talk just about the the backend",
    "start": "1270880",
    "end": "1277210"
  },
  {
    "text": "piece but again what we're trying to do here is just that architectural",
    "start": "1277210",
    "end": "1282730"
  },
  {
    "text": "principle of encapsulating and isolating change change in terms of how we deploy our services internally shouldn't affect",
    "start": "1282730",
    "end": "1288910"
  },
  {
    "text": "the client applications that are out in the wild make sense all right again",
    "start": "1288910",
    "end": "1296800"
  },
  {
    "start": "1295000",
    "end": "1295000"
  },
  {
    "text": "talking of synchronous comms if you are using that you have automatically a form of temporal coupling both services need",
    "start": "1296800",
    "end": "1303550"
  },
  {
    "text": "to be running at the same time it's synchronous I make a call I wait for a response if the call I'm making to some",
    "start": "1303550",
    "end": "1311500"
  },
  {
    "text": "external service is down if that service is down then my service is going to time",
    "start": "1311500",
    "end": "1316600"
  },
  {
    "text": "out and have an error so I need to introduce into my code some mechanism of doing a circuit breaker pattern or",
    "start": "1316600",
    "end": "1323320"
  },
  {
    "text": "handling those things and doing retry logic or falling back into a what happens if this service is an available",
    "start": "1323320",
    "end": "1329260"
  },
  {
    "text": "approach so there needs to be some thinking around that I'm not dealing again I'm not dealing with that really",
    "start": "1329260",
    "end": "1335260"
  },
  {
    "text": "in this particular case or in this talk there a whole lot more complexity there as well and the reason I tend to try and",
    "start": "1335260",
    "end": "1343480"
  },
  {
    "text": "avoid synchronous communication is because of this system uptime is going to be the product of all the various",
    "start": "1343480",
    "end": "1349120"
  },
  {
    "text": "components that need to be up together so if all your components have four nines availability which means they were",
    "start": "1349120",
    "end": "1356559"
  },
  {
    "text": "down at most what's that two minutes are you is that what four nine oh five that's five nines whatever the hell it",
    "start": "1356559",
    "end": "1361929"
  },
  {
    "text": "is it's not much but if I've got say only thirty services which is not that",
    "start": "1361929",
    "end": "1367600"
  },
  {
    "text": "many then I'm automatically at the point",
    "start": "1367600",
    "end": "1372970"
  },
  {
    "text": "where I can fail up to two hours a month even though my services themselves individually are up pretty much the",
    "start": "1372970",
    "end": "1379360"
  },
  {
    "text": "entire time and when you introduce other things like network issues and drop messages and stuff like that it can get",
    "start": "1379360",
    "end": "1386559"
  },
  {
    "text": "a little worse so keep that in mind okay",
    "start": "1386559",
    "end": "1390720"
  },
  {
    "start": "1390000",
    "end": "1390000"
  },
  {
    "text": "now client makes a call to your API",
    "start": "1391800",
    "end": "1397330"
  },
  {
    "text": "gateway to do some sort of business transaction that when it gets processed",
    "start": "1397330",
    "end": "1403960"
  },
  {
    "text": "might end up with lots and lots of different calls going across lots and lots of different services how do you",
    "start": "1403960",
    "end": "1409809"
  },
  {
    "text": "trace those things how do you debug it how do you identify where my data went and if things fell over where in the",
    "start": "1409809",
    "end": "1418210"
  },
  {
    "text": "pipeline did they fall over I don't know well I do know just as well",
    "start": "1418210",
    "end": "1426210"
  },
  {
    "text": "you need to have some way of tracing it so a common approach is to in every client call put a correlation ID some",
    "start": "1426210",
    "end": "1435970"
  },
  {
    "text": "identify that says this is the originating message from the UI or the client that triggered all these",
    "start": "1435970",
    "end": "1441400"
  },
  {
    "text": "different messages from here and make sure you pass that through so if you make a call that goes to one service",
    "start": "1441400",
    "end": "1447340"
  },
  {
    "text": "that then makes a call to another service make sure that correlation ID passes through and again this is where",
    "start": "1447340",
    "end": "1452650"
  },
  {
    "text": "DevOps and monitoring become important if I wanted to trace how a single call",
    "start": "1452650",
    "end": "1457720"
  },
  {
    "text": "spread out through all the services especially as the number of services grows and it gets more complex and",
    "start": "1457720",
    "end": "1463090"
  },
  {
    "text": "larger than my little brain can contain then I need some sort of tooling that shows me how that works",
    "start": "1463090",
    "end": "1468780"
  },
  {
    "text": "correlation IDs help me trace that stuff and then again there's tooling that's",
    "start": "1468780",
    "end": "1473950"
  },
  {
    "text": "evolving and maturing around helping visualize that as well so that us as developers can see what's happening in",
    "start": "1473950",
    "end": "1480190"
  },
  {
    "text": "the system so that traceability aids our debugging but also aids in our",
    "start": "1480190",
    "end": "1485200"
  },
  {
    "text": "performance so if we have a call that's going really slow and we are able to trace it a message with a correlation ID",
    "start": "1485200",
    "end": "1491770"
  },
  {
    "text": "through the system we can see where all the synchronous calls are and more all the async ones are and where our wait",
    "start": "1491770",
    "end": "1496900"
  },
  {
    "text": "times are we've got a way of then go looks like we've got a bottleneck here this particular service is running hot",
    "start": "1496900",
    "end": "1503290"
  },
  {
    "text": "we might need to run multiple copies of it for example service discovery anyone",
    "start": "1503290",
    "end": "1511900"
  },
  {
    "start": "1509000",
    "end": "1509000"
  },
  {
    "text": "remember uddi what does stand for again",
    "start": "1511900",
    "end": "1517560"
  },
  {
    "text": "Universal something discovery in a facie",
    "start": "1517560",
    "end": "1523630"
  },
  {
    "text": "something or other XML soap i don't care anymore",
    "start": "1523630",
    "end": "1528630"
  },
  {
    "text": "that concept isn't you in fact a lot of what we're doing with these micro services is not new concepts it's just",
    "start": "1529260",
    "end": "1535630"
  },
  {
    "text": "implemented better you'll hear people talk about micro services being service",
    "start": "1535630",
    "end": "1541780"
  },
  {
    "text": "oriented architecture done right it's kind of true you need to think about how",
    "start": "1541780",
    "end": "1548290"
  },
  {
    "text": "your services discover each other if I'm able to move things around internally",
    "start": "1548290",
    "end": "1553390"
  },
  {
    "text": "and I'm running things on different URLs and I take a new service and introduce it where's that service located",
    "start": "1553390",
    "end": "1560880"
  },
  {
    "text": "discovery mechanism so for example in a dotnet space there's console IO you could run that it's a discovery tool or",
    "start": "1560880",
    "end": "1569590"
  },
  {
    "text": "service registry you run that as a docker container and you use microphone for example as a dotnet client to talk",
    "start": "1569590",
    "end": "1576340"
  },
  {
    "text": "to that make it easier to program so when you start your dotnet micro service you simply ask where are the things I",
    "start": "1576340",
    "end": "1581350"
  },
  {
    "text": "depend on and or register availability and so forth worth having a look at again I'm not going to cover that today",
    "start": "1581350",
    "end": "1587650"
  },
  {
    "text": "just to mention for you data duplication who's got DBAs that like to make sure",
    "start": "1587650",
    "end": "1593650"
  },
  {
    "start": "1589000",
    "end": "1589000"
  },
  {
    "text": "that nothing's duplicated single source of truth third normal form databases",
    "start": "1593650",
    "end": "1599200"
  },
  {
    "text": "don't you get anything or they get really upset and pull their suspenders",
    "start": "1599200",
    "end": "1604360"
  },
  {
    "text": "out and look angry yeah few of you who doesn't have DBAs by the way Wow who is the DBA who am i",
    "start": "1604360",
    "end": "1614140"
  },
  {
    "text": "offending not enough of you services",
    "start": "1614140",
    "end": "1620679"
  },
  {
    "text": "need to be independent therefore services need the cash the data they need which means by default you're going",
    "start": "1620679",
    "end": "1627910"
  },
  {
    "text": "to have some form of duplication that's okay data is cheap these days disk is cheap",
    "start": "1627910",
    "end": "1636280"
  },
  {
    "text": "cheap cheap cheap cheap cheap with micro",
    "start": "1636280",
    "end": "1641620"
  },
  {
    "text": "services of each services storing its own data we don't have to deal with the problems of the one big database to rule",
    "start": "1641620",
    "end": "1648490"
  },
  {
    "text": "them all anymore in fact if all your services depend on a",
    "start": "1648490",
    "end": "1653710"
  },
  {
    "text": "single sequel database because that's where they store stuff guess what",
    "start": "1653710",
    "end": "1659309"
  },
  {
    "text": "where's your single point of failure in your database and if you're doing that",
    "start": "1660450",
    "end": "1665980"
  },
  {
    "text": "what's been the benefit of going to the micro services in the first place just build a monolith build it with plugins",
    "start": "1665980",
    "end": "1673630"
  },
  {
    "text": "change the plugin deploy it so we don't want that we don't want that temporal",
    "start": "1673630",
    "end": "1679630"
  },
  {
    "text": "coupling we want to make sure we cache data things like that so again there's a design approach that needs to be taken",
    "start": "1679630",
    "end": "1685480"
  },
  {
    "text": "into account we'll see some of that API is versioning api's anyone go to the",
    "start": "1685480",
    "end": "1690580"
  },
  {
    "text": "packed talk Wednesday was it so there's a thing called consumer driven contracts",
    "start": "1690580",
    "end": "1696039"
  },
  {
    "text": "the idea being that pact is a way of testing those and verifying the",
    "start": "1696039",
    "end": "1701049"
  },
  {
    "text": "contracts are met which is a nice tool I want to know that my services will",
    "start": "1701049",
    "end": "1707950"
  },
  {
    "text": "coordinate well with each other without having to run them all at the same time for example contracts are important",
    "start": "1707950",
    "end": "1717100"
  },
  {
    "text": "api's are important keep on top of those things this is very similar in concept to what WSDL and XS DS were meant to do",
    "start": "1717100",
    "end": "1723700"
  },
  {
    "text": "but again hello soap um so if you're",
    "start": "1723700",
    "end": "1729370"
  },
  {
    "text": "doing synchronous calls pact is a nice tool to look at if you're doing async this becomes less of an issue it's more then around making sure we have",
    "start": "1729370",
    "end": "1736419"
  },
  {
    "text": "well-defined messages and vents so that the consumers and producers understand each other we'll",
    "start": "1736419",
    "end": "1743340"
  },
  {
    "text": "all right so let's get into it implementation patterns so what we're",
    "start": "1743340",
    "end": "1749260"
  },
  {
    "start": "1748000",
    "end": "1748000"
  },
  {
    "text": "going to see are a few different darka textual patterns and so forth so the first is domain driven design so there",
    "start": "1749260",
    "end": "1756250"
  },
  {
    "text": "is a DDD talked a little later today I think isn't it dd the good bits go to that if you've",
    "start": "1756250",
    "end": "1763240"
  },
  {
    "text": "not come across domain driven design too much I tend to to try and take the",
    "start": "1763240",
    "end": "1769030"
  },
  {
    "text": "approach of aligning most services to domain context because I want a service to be an encapsulated piece of",
    "start": "1769030",
    "end": "1774700"
  },
  {
    "text": "functionality and logic there for a domain context aggregates service",
    "start": "1774700",
    "end": "1780100"
  },
  {
    "text": "something like that is one of those discrete pieces of logic it makes sense it's much easier to decompose a system",
    "start": "1780100",
    "end": "1786730"
  },
  {
    "text": "that way so keep those things in mind and also then if you think about what happens with domain driven design and",
    "start": "1786730",
    "end": "1792910"
  },
  {
    "text": "this idea of bounded contexts we have what's called an anti-corruption layer to move information between contexts",
    "start": "1792910",
    "end": "1801690"
  },
  {
    "text": "does that me that's you I just heard my machine-gunned interview and getting",
    "start": "1801690",
    "end": "1809350"
  },
  {
    "text": "distracted because you know a TD ports",
    "start": "1809350",
    "end": "1814929"
  },
  {
    "text": "and adapters messaging between anti-corruption layer the concepts of",
    "start": "1814929",
    "end": "1822850"
  },
  {
    "text": "wine well okay so keep that in mind CQRS separating our commands and our",
    "start": "1822850",
    "end": "1828160"
  },
  {
    "text": "queries or our peas and potatoes make sure you never mix peas with anything",
    "start": "1828160",
    "end": "1833169"
  },
  {
    "text": "peas are disgusting it also allows us to scale our reads and",
    "start": "1833169",
    "end": "1839980"
  },
  {
    "text": "our writes independently from each other so we can optimize services for reason for performance so that our UIs are",
    "start": "1839980",
    "end": "1846640"
  },
  {
    "text": "quick as the reason the ubers and the Netflix's and the Amazons work so well is because they've scaled their reads",
    "start": "1846640",
    "end": "1852970"
  },
  {
    "text": "quite differently to their writes a model if you don't have that flexibility as much can be done with some clever",
    "start": "1852970",
    "end": "1860260"
  },
  {
    "text": "hacking but generally you can't database",
    "start": "1860260",
    "end": "1865360"
  },
  {
    "text": "choice equal or no sickle couldn't give a flying um I'm more consistent with",
    "start": "1865360",
    "end": "1872140"
  },
  {
    "text": "using the right tall for the road more consistent more interested in using the right tool for the right job make sure you've got",
    "start": "1872140",
    "end": "1877179"
  },
  {
    "text": "cases that are easily rebuildable for your query services and optimize your",
    "start": "1877179",
    "end": "1882669"
  },
  {
    "text": "storage for the read models that you want to do if you want great performance generally that means you will want to",
    "start": "1882669",
    "end": "1888340"
  },
  {
    "text": "look at a no sequel database or a highly optimized sequel server depending on what you're doing but again inspect and",
    "start": "1888340",
    "end": "1896590"
  },
  {
    "text": "adapt on that figure out what works versioning make sure you think about versioning and what happens over time with your API s and your contracts and",
    "start": "1896590",
    "end": "1903220"
  },
  {
    "text": "so forth a message bus is important if you're going to do async communications",
    "start": "1903220",
    "end": "1909940"
  },
  {
    "text": "you need to have some way of making sure that's reliable otherwise you would just lose data on the wire it's probably",
    "start": "1909940",
    "end": "1915309"
  },
  {
    "text": "going to get people upset with you so message bus is good for that optimistic concurrency that should be",
    "start": "1915309",
    "end": "1922120"
  },
  {
    "text": "fairly self evidence evident if you need to lock any information ever these days",
    "start": "1922120",
    "end": "1928299"
  },
  {
    "text": "then rethink your design it shouldn't happen event sourcing we will look at",
    "start": "1928299",
    "end": "1934210"
  },
  {
    "text": "this in a minute the idea here is that our domain services are where we're",
    "start": "1934210",
    "end": "1940059"
  },
  {
    "text": "doing our writes we're going to store events not application state and I'll explain that when we get to it",
    "start": "1940059",
    "end": "1945940"
  },
  {
    "text": "the big reason for that though is to avoid two-phase commit distributed transaction coordinators and all the",
    "start": "1945940",
    "end": "1951640"
  },
  {
    "text": "pain that involves and there is plenty of pain there an api gateway as i mentioned before so all these things are",
    "start": "1951640",
    "end": "1957940"
  },
  {
    "text": "here by the way the reason there's so many so much text on some of these slides is so you guys can come back and look at this later I could do this talk",
    "start": "1957940",
    "end": "1966460"
  },
  {
    "text": "with lots of pretty pictures and memes and you know cats drinking out of toilets and whatever else but it's not going to help in terms of coming back",
    "start": "1966460",
    "end": "1973630"
  },
  {
    "text": "and looking this after the conference I know that at an NDC it's really easy for you guys to take stuff in and then go",
    "start": "1973630",
    "end": "1979270"
  },
  {
    "text": "that was a great talk hopefully lots of green cards and then forget it all come",
    "start": "1979270",
    "end": "1984429"
  },
  {
    "text": "Monday morning because there was a weekend in the way and lots of drinking and alcohol and whatever else so this",
    "start": "1984429",
    "end": "1990250"
  },
  {
    "text": "will be available for you all right so then sourcing itself the idea here is",
    "start": "1990250",
    "end": "1995590"
  },
  {
    "text": "when a domain objects updated what we want to do is we want to communicate",
    "start": "1995590",
    "end": "2000750"
  },
  {
    "text": "those changes to all the interested other services some of",
    "start": "2000750",
    "end": "2006090"
  },
  {
    "text": "which might be query services some of which might be things that do other processing on them whatever else their",
    "start": "2006090",
    "end": "2012480"
  },
  {
    "text": "different domain events that will get raised so a command comes in makes a change we create an event that says",
    "start": "2012480",
    "end": "2017610"
  },
  {
    "text": "something changed and any interested party subscribes to that which is cool",
    "start": "2017610",
    "end": "2022669"
  },
  {
    "text": "but instead of then updating the state of the domain object and then saving that to the database like we would",
    "start": "2022669",
    "end": "2028440"
  },
  {
    "text": "normally what we do is we save just the changes or just the event that happened the advantage of this is that I don't",
    "start": "2028440",
    "end": "2036090"
  },
  {
    "text": "need to really worry about making sure my state's consistent anywhere else I simply take the event I publish it on to",
    "start": "2036090",
    "end": "2042929"
  },
  {
    "text": "the wire I am done I don't have to to save to the database a new state and at the same time publish events to",
    "start": "2042929",
    "end": "2051270"
  },
  {
    "text": "consumers if I'm having to do two things in one operation there's a chance that if something fails I will lose data",
    "start": "2051270",
    "end": "2059118"
  },
  {
    "text": "who likes losing data by the way whose boss likes them losing data it's",
    "start": "2059119",
    "end": "2065070"
  },
  {
    "text": "probably a better question not a lot of hands it's a surprise I'm pretty sure",
    "start": "2065070",
    "end": "2070290"
  },
  {
    "text": "there was a bonus for losing data if you work in some organizations because then",
    "start": "2070290",
    "end": "2075990"
  },
  {
    "text": "you know plausible deniability things like that now we could use two-phase",
    "start": "2075990",
    "end": "2081780"
  },
  {
    "text": "commit for that and you can read the comment there it's pretty accurate whoo",
    "start": "2081780",
    "end": "2087388"
  },
  {
    "text": "and I'm who was using this before where was the DTC hand someone was doing it",
    "start": "2087389",
    "end": "2093148"
  },
  {
    "text": "you don't own up it's okay we can hug later so we just want to persist so",
    "start": "2093149",
    "end": "2100680"
  },
  {
    "text": "we'll see how that works um another question often comes up how small should a micro service be anyone heard the",
    "start": "2100680",
    "end": "2108599"
  },
  {
    "text": "hundred line rule yeah don't do that it's just dumb don't let this number of",
    "start": "2108599",
    "end": "2117420"
  },
  {
    "text": "lines of code dictate how bigger services services need to be about",
    "start": "2117420",
    "end": "2122609"
  },
  {
    "text": "functionality right so if you end up going for a nano service approach then you're effectively turning your entire",
    "start": "2122609",
    "end": "2129030"
  },
  {
    "text": "application into lots and lots of RPC calls it's complex enough as soon as you",
    "start": "2129030",
    "end": "2135570"
  },
  {
    "text": "start distributing things don't go silly unless you know you want to do lambda and run your entire application as a",
    "start": "2135570",
    "end": "2141060"
  },
  {
    "text": "series of functions and the f-sharp people in the room or those who like functional stuff will be going yes me on",
    "start": "2141060",
    "end": "2149100"
  },
  {
    "text": "the other hand I think of your services more as deployment units right domain",
    "start": "2149100",
    "end": "2155730"
  },
  {
    "text": "context deploy them together if you've got located functionality and your",
    "start": "2155730",
    "end": "2161220"
  },
  {
    "text": "service ends up being you know a thousand lines two thousand lines I don't mind if it ends up being two",
    "start": "2161220",
    "end": "2169170"
  },
  {
    "text": "hundred thousand lines is probably a little big just saying so it's all about",
    "start": "2169170",
    "end": "2175080"
  },
  {
    "text": "this units to functionality a lot lines of code so generally think about it service has a single purpose whatever",
    "start": "2175080",
    "end": "2183270"
  },
  {
    "text": "it's going to be it could be as we say managing the state of an aggregate or a domain object of some variety sending an",
    "start": "2183270",
    "end": "2190560"
  },
  {
    "text": "email converting a PDF calculating Commission's updating shopping cart you",
    "start": "2190560",
    "end": "2196770"
  },
  {
    "text": "know whatever else it happens to be all those sort of things units of functionality inside each",
    "start": "2196770",
    "end": "2202290"
  },
  {
    "text": "service you don't care about whatever else might exist because what might",
    "start": "2202290",
    "end": "2207420"
  },
  {
    "text": "exist will change over time all you care about is I am responsible for myself I",
    "start": "2207420",
    "end": "2212850"
  },
  {
    "text": "do my thing so the single responsibility principle applied to a service which is cool so from a design perspective again",
    "start": "2212850",
    "end": "2219990"
  },
  {
    "text": "you've got to think about you know your use cases bounded context this is where that domain driven design comes into it",
    "start": "2219990",
    "end": "2226520"
  },
  {
    "text": "okay everyone needs boxes and lines right who's a full-time architect in the",
    "start": "2227600",
    "end": "2233490"
  },
  {
    "text": "room okay so this is going to be the bit you understand when the code gets on the",
    "start": "2233490",
    "end": "2239010"
  },
  {
    "text": "screen I'm sorry all right there you go feeling at home I was going to take a",
    "start": "2239010",
    "end": "2246030"
  },
  {
    "text": "whiteboard picture just to make it better but you don't want to see my handwriting so the idea here this is the",
    "start": "2246030",
    "end": "2254040"
  },
  {
    "text": "big picture is that a UI request comes in from a claim generally over HTTP it's",
    "start": "2254040",
    "end": "2261120"
  },
  {
    "text": "then going to come in to an edge service or an application api gateway or something like that which is then going",
    "start": "2261120",
    "end": "2267240"
  },
  {
    "text": "to figure out what the request is is it a command that's going to update state or is it a query",
    "start": "2267240",
    "end": "2273240"
  },
  {
    "text": "to read state if it's a command we're going to send it across to a domain",
    "start": "2273240",
    "end": "2278700"
  },
  {
    "text": "micro service something responsible for managing the state of domain objects if it's a query it'll go across across to a",
    "start": "2278700",
    "end": "2285720"
  },
  {
    "text": "query micro service for reading data and we separate those two things distinctly because again we need to scale our reads",
    "start": "2285720",
    "end": "2291990"
  },
  {
    "text": "and writes independently the domain micro service will store its data in a database in this case we're going to be",
    "start": "2291990",
    "end": "2298350"
  },
  {
    "text": "using events store you can use something else if you want we're also going to publish events onto a bus those events",
    "start": "2298350",
    "end": "2306540"
  },
  {
    "text": "will get picked up by the read services the query micro services which will update their pre computer results so",
    "start": "2306540",
    "end": "2311850"
  },
  {
    "text": "they can respond to queries with effectively or as best we can order one type operations single i/o make a query",
    "start": "2311850",
    "end": "2319860"
  },
  {
    "text": "here's the answer ready to go if I can respond to all my queries in one I oh I'm going to have a freaking quick",
    "start": "2319860",
    "end": "2326100"
  },
  {
    "text": "system that's a good thing if I have to go and you know do a joint across 14",
    "start": "2326100",
    "end": "2333510"
  },
  {
    "text": "different tables and everything else that's not really what we want because there's going to be a slow query it's",
    "start": "2333510",
    "end": "2339270"
  },
  {
    "text": "hard to maintain and in this case we're going to be using Redis whose use Redis",
    "start": "2339270",
    "end": "2344850"
  },
  {
    "text": "by the way yeah it's pretty cool it's not I wouldn't use it as a it's not a",
    "start": "2344850",
    "end": "2352109"
  },
  {
    "text": "permanent database it's a cache if I ended up having a query Microsoft's that",
    "start": "2352109",
    "end": "2358859"
  },
  {
    "text": "had more data in it than my Redis cache could handle I'd probably start looking at different storage mechanisms because",
    "start": "2358859",
    "end": "2365160"
  },
  {
    "text": "it's yeah it's a cache has a limit Redis runs in memory once I hit that memory",
    "start": "2365160",
    "end": "2371820"
  },
  {
    "text": "limit I'm going to need to store data somewhere else so if I was storing terabytes of information querying off",
    "start": "2371820",
    "end": "2377250"
  },
  {
    "text": "that different approach for the example here perfectly fine alright in a domain",
    "start": "2377250",
    "end": "2383160"
  },
  {
    "text": "micro service as the request comes in we're going to pick that up it's going to be a command request we're going to",
    "start": "2383160",
    "end": "2389340"
  },
  {
    "text": "use Web API it's going to forward that call to a command handler which is then going to do a couple of things it's",
    "start": "2389340",
    "end": "2395880"
  },
  {
    "text": "going to update an aggregate so a domain object and then it's going to also that",
    "start": "2395880",
    "end": "2401970"
  },
  {
    "text": "will create events saying that things have changed we're going to then persist those events into",
    "start": "2401970",
    "end": "2407099"
  },
  {
    "text": "the event store repository and then publish those onto a message bus at the",
    "start": "2407099",
    "end": "2413640"
  },
  {
    "text": "same time the service can listen to events from other services because it needs to cache data of its own for",
    "start": "2413640",
    "end": "2420269"
  },
  {
    "text": "example I'm doing a change that needs to do some validation so you send me a command that says updates or add product",
    "start": "2420269",
    "end": "2427410"
  },
  {
    "text": "X to the shopping cart for example and I'm responsible for the shopping cart",
    "start": "2427410",
    "end": "2432569"
  },
  {
    "text": "I'm not responsible for the products though so how do I verify that the product exists that you know just giving me a dummy product I need to have some",
    "start": "2432569",
    "end": "2440579"
  },
  {
    "text": "way of listening for those so I know what my current products are so I would cache that data so I'd be listening to",
    "start": "2440579",
    "end": "2446609"
  },
  {
    "text": "events from a product service for example go from there does that make sense",
    "start": "2446609",
    "end": "2452150"
  },
  {
    "text": "yes okay a remodel is fairly simple the",
    "start": "2452150",
    "end": "2459749"
  },
  {
    "text": "idea is that we will respond to queries from the UI for information we have a",
    "start": "2459749",
    "end": "2466019"
  },
  {
    "text": "query handle that simply reads data from the cache on the other side of the fence as events get put onto the bus we",
    "start": "2466019",
    "end": "2472859"
  },
  {
    "text": "subscribe to those events if we're interested in it for the state of our object here and we'll have event",
    "start": "2472859",
    "end": "2479009"
  },
  {
    "text": "handlers that simply update the cache pretty complex if I ended up needing to",
    "start": "2479009",
    "end": "2485880"
  },
  {
    "text": "scale this further I could split things depending on what was going on I might",
    "start": "2485880",
    "end": "2491459"
  },
  {
    "text": "have even more reads I might need more CPU I could split this service along these lines here or this line here so",
    "start": "2491459",
    "end": "2497609"
  },
  {
    "text": "that I have one place where I'm handling events separate to another place where I'm handling queries so there are other",
    "start": "2497609",
    "end": "2503339"
  },
  {
    "text": "ways to split this just keep that in mind specific software we've got those",
    "start": "2503339",
    "end": "2509609"
  },
  {
    "start": "2507000",
    "end": "2507000"
  },
  {
    "text": "things they're easy net Q is a new get",
    "start": "2509609",
    "end": "2514739"
  },
  {
    "text": "package for interacting with rabid mq makes it quite easy and stack exchange Redis is from the stack overflow guys",
    "start": "2514739",
    "end": "2521849"
  },
  {
    "text": "nice easy library for interacting with the Redis from net so you don't have to",
    "start": "2521849",
    "end": "2527009"
  },
  {
    "text": "deal with a whole lot of that low-level REST API calls now this code here is on",
    "start": "2527009",
    "end": "2535229"
  },
  {
    "text": "github that code on github is not fully complete intentionally sort of",
    "start": "2535229",
    "end": "2540900"
  },
  {
    "text": "intentionally because I kind of got lazy and didn't bother finishing it but it's there for inspiration not duplication I",
    "start": "2540900",
    "end": "2547980"
  },
  {
    "text": "don't want you taking the code and just copying it without thinking which is another reason why it's not really 100",
    "start": "2547980",
    "end": "2554100"
  },
  {
    "text": "percent there but you can definitely have a look at it poke around with it",
    "start": "2554100",
    "end": "2559310"
  },
  {
    "text": "see how things work and again that code doesn't deal with all the complexities you need to think about but it's a start",
    "start": "2559310",
    "end": "2565890"
  },
  {
    "text": "so the Micro Cafe is what we're doing Starbucks doesn't use two-phase commit is a blog post that was done a while ago",
    "start": "2565890",
    "end": "2572760"
  },
  {
    "start": "2569000",
    "end": "2569000"
  },
  {
    "text": "and had this diagram in it talking about how things work so we have the coffee",
    "start": "2572760",
    "end": "2578580"
  },
  {
    "text": "shop here where customer places in order a cashier takes an order that order gets",
    "start": "2578580",
    "end": "2584550"
  },
  {
    "text": "queued barista makes the drink drops the drink in the output area that gets",
    "start": "2584550",
    "end": "2590220"
  },
  {
    "text": "picked up and there's a correlation idea to track the order you know so what's your name your name's Richard okay we'll write that on the cup or you want these",
    "start": "2590220",
    "end": "2597030"
  },
  {
    "text": "three coffees together so we'll put like a number like three dashes on the top of the lid so that we know they're grouped",
    "start": "2597030",
    "end": "2602190"
  },
  {
    "text": "together all these sort of behaviors that happen customer finds money once",
    "start": "2602190",
    "end": "2608730"
  },
  {
    "text": "they told the cost they pay for it they're not allowed to pick it up until they've actually got the payment completed whatever else if the order",
    "start": "2608730",
    "end": "2614760"
  },
  {
    "text": "doesn't get paid for the coffee gets thrown away there's compensating transactions there's all sorts of interesting things that happen if we",
    "start": "2614760",
    "end": "2621690"
  },
  {
    "text": "were building this as micro services first question we need to think about is",
    "start": "2621690",
    "end": "2627200"
  },
  {
    "text": "where are my services where are my domain contexts is this customer",
    "start": "2627200",
    "end": "2633900"
  },
  {
    "text": "operation here a domain context yes show",
    "start": "2633900",
    "end": "2639300"
  },
  {
    "text": "hands yes no all right so since not many people put their hand up you're either",
    "start": "2639300",
    "end": "2644520"
  },
  {
    "text": "dead or you don't know what this is what is that think about it it's not a",
    "start": "2644520",
    "end": "2651540"
  },
  {
    "text": "service to client application the customer is the client right they're",
    "start": "2651540",
    "end": "2657690"
  },
  {
    "text": "interacting with the domain coffee shop within that though we've got these other",
    "start": "2657690",
    "end": "2664260"
  },
  {
    "text": "things we've got this barista and we've got this cashier are those potentially",
    "start": "2664260",
    "end": "2669450"
  },
  {
    "text": "services does the cashier have a different view of what an order",
    "start": "2669450",
    "end": "2674490"
  },
  {
    "text": "- what a baristas view of an order is probably different information does the barista care about pricing not really so",
    "start": "2674490",
    "end": "2682920"
  },
  {
    "text": "in terms of transitioning information cashier would take an order with pricing would handle the payment all the",
    "start": "2682920",
    "end": "2689040"
  },
  {
    "text": "bristlenose and cares about is what are the products on the order so we have these this idea of a domain context and",
    "start": "2689040",
    "end": "2695670"
  },
  {
    "text": "we would be transferring information between so it starts making more sense question is though what happens to",
    "start": "2695670",
    "end": "2702840"
  },
  {
    "text": "master data this is one of those things in micro services people don't tend to talk about very much what happens to things like reference data lookups and a",
    "start": "2702840",
    "end": "2709830"
  },
  {
    "text": "product list where does that live where's it living the diagram here it",
    "start": "2709830",
    "end": "2719880"
  },
  {
    "text": "doesn't live anywhere who owns the product the cashier cashier decides what",
    "start": "2719880",
    "end": "2727440"
  },
  {
    "text": "a product is there's a context not shown here which is the store owner storing is",
    "start": "2727440",
    "end": "2733260"
  },
  {
    "text": "going to define what the products are right and make them available to the cashier and the barista I would hope so",
    "start": "2733260",
    "end": "2741570"
  },
  {
    "start": "2741000",
    "end": "2741000"
  },
  {
    "text": "we might have to think about our boundaries a little bit more so use a story if we think about a user story as",
    "start": "2741570",
    "end": "2746609"
  },
  {
    "text": "the coffee shop owner I want to define the products that are offered for sale so I can make a billion dollars and you know pinky to the mouth within that",
    "start": "2746609",
    "end": "2755700"
  },
  {
    "text": "though there's kind of a few other potentially related use cases that we could think about so we've got managing",
    "start": "2755700",
    "end": "2761790"
  },
  {
    "text": "products which are kind of cruddy operations what about a read model thing like view the menu show the menu update",
    "start": "2761790",
    "end": "2770130"
  },
  {
    "text": "the price list whatever else it is or something like running a promotion where do these things fit this is the design",
    "start": "2770130",
    "end": "2775800"
  },
  {
    "text": "thinking that needs to happen when you're putting together your services and not just take a bit of code and write it and it's a small one and job",
    "start": "2775800",
    "end": "2782040"
  },
  {
    "text": "done so what we're going to do is we're going to look at the product domain",
    "start": "2782040",
    "end": "2789900"
  },
  {
    "text": "object in an admin service so again coming back recapping our little picture",
    "start": "2789900",
    "end": "2797609"
  },
  {
    "start": "2793000",
    "end": "2793000"
  },
  {
    "text": "commands queries they're the dapped is important our reads and our writes the",
    "start": "2797609",
    "end": "2804750"
  },
  {
    "text": "domain entity itself the product how we manage a product that's here in",
    "start": "2804750",
    "end": "2809970"
  },
  {
    "text": "this application call a cashier service is going to listen to changes to the",
    "start": "2809970",
    "end": "2815339"
  },
  {
    "text": "product so they can update what they're allowed to verify against a barista is going to listen for changes in the",
    "start": "2815339",
    "end": "2820559"
  },
  {
    "text": "products so they know what they're allowed to make makes sense we're not",
    "start": "2820559",
    "end": "2826170"
  },
  {
    "text": "going to listen in the admin service for changes from the barista because there's nothing that they do that interests us",
    "start": "2826170",
    "end": "2832490"
  },
  {
    "text": "not in this service we've got other things we might be interested in like inventory stock on hand how many coffee",
    "start": "2832490",
    "end": "2838829"
  },
  {
    "text": "beans do we have we've got enough milk etc and we're also not that interested",
    "start": "2838829",
    "end": "2844020"
  },
  {
    "text": "in the cashier take an order that doesn't really affect the products okay so not really listening the other way",
    "start": "2844020",
    "end": "2850530"
  },
  {
    "text": "around at this point so there's the admin micro service we also have just in",
    "start": "2850530",
    "end": "2858000"
  },
  {
    "text": "terms of what's going on here these are our ports and adapters now so a port here being a repository float sorry for",
    "start": "2858000",
    "end": "2864059"
  },
  {
    "text": "those at the back it's a little bit small product in the middle the repository is our port and the adapter",
    "start": "2864059",
    "end": "2869309"
  },
  {
    "text": "is going to be an event store and potentially a bus publisher onto the bus",
    "start": "2869309",
    "end": "2874380"
  },
  {
    "text": "because we're going to store events we're not storing state so I can take",
    "start": "2874380",
    "end": "2879480"
  },
  {
    "text": "that event push it into locations without a problem I also have a command",
    "start": "2879480",
    "end": "2884970"
  },
  {
    "text": "handle here so Web API is coming in that's our adapter it's going into a port being the command handler which",
    "start": "2884970",
    "end": "2890760"
  },
  {
    "text": "updates the products makes the domain context change etc all good does this",
    "start": "2890760",
    "end": "2898260"
  },
  {
    "text": "make sense see how it implements okay so",
    "start": "2898260",
    "end": "2903540"
  },
  {
    "text": "I've talked about this before I'll jump through that very quickly just one thing one benefit of event sourcing is that",
    "start": "2903540",
    "end": "2912540"
  },
  {
    "text": "you can use it to quickly replay the state of an object if I've got some bugs that were causing issues so anyone ever",
    "start": "2912540",
    "end": "2918869"
  },
  {
    "text": "had the situation where you've run into you're doing a transactional type system you have a calculation problem and then",
    "start": "2918869",
    "end": "2925770"
  },
  {
    "text": "you realize that after three months and you've then got to go and write some",
    "start": "2925770",
    "end": "2930839"
  },
  {
    "text": "code to go and correct all your bugs and try and correct the state of the application anyone done this so you go",
    "start": "2930839",
    "end": "2937470"
  },
  {
    "text": "to the audit logs and you're trying to reverse engineer change just based on what you ordered realizing",
    "start": "2937470",
    "end": "2942719"
  },
  {
    "text": "things aren't there no one's worked in logistics stocktake systems okay all",
    "start": "2942719",
    "end": "2953190"
  },
  {
    "text": "right so here's a product product is an aggregate so we're inheriting from aggregate class which has just got some",
    "start": "2953190",
    "end": "2960269"
  },
  {
    "text": "base information like a grid for an ID not much gone beyond that and we have a",
    "start": "2960269",
    "end": "2965700"
  },
  {
    "text": "constructor here which has you know ID name description decimal price that",
    "start": "2965700",
    "end": "2971910"
  },
  {
    "text": "constructor is going to be a creator fair enough that would be our UI makes a",
    "start": "2971910",
    "end": "2979650"
  },
  {
    "text": "call creating your product it's going to end up calling through to this so we have something to create things but you'll know we're not actually setting",
    "start": "2979650",
    "end": "2985769"
  },
  {
    "text": "any properties here we validate that the name is supplied because it's a mandatory if it's not there we'll throw",
    "start": "2985769",
    "end": "2991469"
  },
  {
    "text": "an exception let the exception bubble up to the client no big deal and then we simply create an event called product",
    "start": "2991469",
    "end": "2997380"
  },
  {
    "text": "created and apply it this is the pattern command handlers don't change state",
    "start": "2997380",
    "end": "3003589"
  },
  {
    "text": "command handlers raise events and we apply those events and through the",
    "start": "3003589",
    "end": "3009829"
  },
  {
    "text": "applying of event we change state the reason we do that is for replay and also",
    "start": "3009829",
    "end": "3015619"
  },
  {
    "text": "so as we listen to event off a message bus we can simply apply those events as needed and it's the same pattern over",
    "start": "3015619",
    "end": "3022640"
  },
  {
    "text": "and over and over again nice and easy to implement so we apply the product created event and that's what changes",
    "start": "3022640",
    "end": "3029059"
  },
  {
    "text": "state all good all right so then we have",
    "start": "3029059",
    "end": "3037400"
  },
  {
    "text": "agree a base class it holds stuff replaying events there's a few funky",
    "start": "3037400",
    "end": "3044630"
  },
  {
    "text": "things in here such as casting is dynamic so we don't have to worry about knowing all the types beforehand which",
    "start": "3044630",
    "end": "3050660"
  },
  {
    "text": "is cool there's code in there that you can grab just to see that and we also increment the version of our object",
    "start": "3050660",
    "end": "3057859"
  },
  {
    "text": "every time we update an event which is where we're going to be doing our optimistic concurrency checks makes",
    "start": "3057859",
    "end": "3063949"
  },
  {
    "text": "sense all right so similarly on a command",
    "start": "3063949",
    "end": "3069640"
  },
  {
    "text": "we have changed name another command it raises an event validates thing",
    "start": "3069640",
    "end": "3074870"
  },
  {
    "text": "if the validation fails we throw an exception we do an apply we push that back same pattern again you can run",
    "start": "3074870",
    "end": "3081920"
  },
  {
    "text": "through this code in a little bit more detail later on alright we've talked",
    "start": "3081920",
    "end": "3089000"
  },
  {
    "text": "through all of this I'll leave that there for you guys later the command handle the repositories are",
    "start": "3089000",
    "end": "3094340"
  },
  {
    "text": "outgoing port in this case so we have a command handler we're going to handle sorry an event handler create product",
    "start": "3094340",
    "end": "3101930"
  },
  {
    "text": "command brain engaged so the UI sends us a create product command before we",
    "start": "3101930",
    "end": "3109520"
  },
  {
    "text": "update the demand we're going to go and say ok here's the correct product here's the message we're going to take that",
    "start": "3109520",
    "end": "3114530"
  },
  {
    "text": "call that save it fairly straightforward",
    "start": "3114530",
    "end": "3120530"
  },
  {
    "text": "it's almost a pass through it doesn't",
    "start": "3120530",
    "end": "3126080"
  },
  {
    "text": "have to be you don't have to have a one-to-one implementation it's quite okay to have a UI command come in that",
    "start": "3126080",
    "end": "3132020"
  },
  {
    "text": "ends up causing multiple commands to be fired internally perfectly fine ok all",
    "start": "3132020",
    "end": "3142070"
  },
  {
    "start": "3141000",
    "end": "3141000"
  },
  {
    "text": "right so that adapters themselves HTTP rest our Web API no big deal they don't",
    "start": "3142070",
    "end": "3147770"
  },
  {
    "text": "need to be restful it's not a problem if you want to implement this as a REST API great but HTTP API is enough you could",
    "start": "3147770",
    "end": "3156650"
  },
  {
    "text": "if you want to do soap you could do WebSockets you could do whatever you want it's an adapter ok so there's a little",
    "start": "3156650",
    "end": "3167300"
  },
  {
    "text": "bit more code here but effectively this is our controller action with a post we're taking in a create product command",
    "start": "3167300",
    "end": "3174440"
  },
  {
    "text": "from the UI we're doing some validation on it to make sure it's ok and if it's not we're throwing a valid response type",
    "start": "3174440",
    "end": "3181160"
  },
  {
    "text": "we're going to give them a forbidden in this case if you've got another wide",
    "start": "3181160",
    "end": "3186560"
  },
  {
    "text": "space is not allowed to go away we could throw something else whatever you like it's no big deal",
    "start": "3186560",
    "end": "3192770"
  },
  {
    "text": "and then we're passing through to our internal part where we calling handle so we create the command for the internal",
    "start": "3192770",
    "end": "3198860"
  },
  {
    "text": "use and then pass that on make sense",
    "start": "3198860",
    "end": "3206710"
  },
  {
    "text": "now you can see here I've done something naughty I've hard coded a URL because",
    "start": "3206809",
    "end": "3213990"
  },
  {
    "text": "it's sample code this is where you would potentially call a discovery mechanism to say where are these things going to",
    "start": "3213990",
    "end": "3220529"
  },
  {
    "text": "live what URL do I give back to the the consumer to know where this product that",
    "start": "3220529",
    "end": "3225960"
  },
  {
    "text": "we created now lives pretty common in a HTTP thing if I'm going to return a created to our Creator I want to give",
    "start": "3225960",
    "end": "3232500"
  },
  {
    "text": "them the location of the object I just created and then if we've got any errors I can return not found conflicts",
    "start": "3232500",
    "end": "3240329"
  },
  {
    "text": "whatever else so commands don't return values commands are void operations they",
    "start": "3240329",
    "end": "3248279"
  },
  {
    "text": "either succeed or they throw exceptions queries return values commands don't",
    "start": "3248279",
    "end": "3257750"
  },
  {
    "text": "okay all right outgoing interactions repository message",
    "start": "3257750",
    "end": "3265799"
  },
  {
    "text": "bus let's have a quick look at some code now you'll see here by the way that we're doing two operations in one which",
    "start": "3265799",
    "end": "3272789"
  },
  {
    "start": "3267000",
    "end": "3267000"
  },
  {
    "text": "I told you before is a bad thing again sample code inspiration not G plication I could in this code fail to publish an",
    "start": "3272789",
    "end": "3281819"
  },
  {
    "text": "event if the power gets knocked off at exactly the right time or there's a bug",
    "start": "3281819",
    "end": "3287670"
  },
  {
    "text": "so we can prevent that by basically not doing the persistence to the event store",
    "start": "3287670",
    "end": "3292950"
  },
  {
    "text": "we could publish the message to the bus and have something else read off the bus and then update the storage mechanism does that make sense",
    "start": "3292950",
    "end": "3300299"
  },
  {
    "text": "so we're completely async at that point or we could use our event source event",
    "start": "3300299",
    "end": "3308130"
  },
  {
    "text": "store as our message bus it's an option to do that as well so we just query that all the time effectively though this is",
    "start": "3308130",
    "end": "3315240"
  },
  {
    "text": "our save here's our repository we've got some code in here just getting some",
    "start": "3315240",
    "end": "3320250"
  },
  {
    "text": "naming but the event store mechanisms there we append to the stream we store it and then we publish the event on the",
    "start": "3320250",
    "end": "3326640"
  },
  {
    "text": "bus using easy net queue away we go again it's not a huge amount of code",
    "start": "3326640",
    "end": "3332309"
  },
  {
    "text": "once you've set this up that then becomes a pattern that you can apply to all the other services query on the",
    "start": "3332309",
    "end": "3339180"
  },
  {
    "text": "other hand very simple we take things you'll see this looks pretty much the same we subscribe to events and we do some",
    "start": "3339180",
    "end": "3347940"
  },
  {
    "text": "subscriptions to that using topic filters so we only get the events we're interested in from a rabbitmq perspective first thing when we start",
    "start": "3347940",
    "end": "3356640"
  },
  {
    "text": "the app we do some Handler discovery just do reflection to figure out all the things we're subscribing to and then",
    "start": "3356640",
    "end": "3362359"
  },
  {
    "text": "you'll see here we're listening for the events and then we're doing an apply so we're doing this dynamic thing again",
    "start": "3362359",
    "end": "3368539"
  },
  {
    "text": "this is boilerplate code that we just dumped in the start of every micro service so that we don't have to worry",
    "start": "3368539",
    "end": "3375480"
  },
  {
    "text": "about new types causing problems and then we filter the messages and they end",
    "start": "3375480",
    "end": "3382200"
  },
  {
    "text": "up coming into something like this this is a view this is a remodel aggregate so",
    "start": "3382200",
    "end": "3388170"
  },
  {
    "text": "these handles these different messages or events and then again we're doing",
    "start": "3388170",
    "end": "3394470"
  },
  {
    "text": "apply same pattern but what we're doing now is we're creating DTO is ready to be",
    "start": "3394470",
    "end": "3400740"
  },
  {
    "text": "queried so I'm not creating domain entities I'm creating denormalized data D TOS ready to be picked up by the UI",
    "start": "3400740",
    "end": "3409369"
  },
  {
    "text": "when they want to make a query all right",
    "start": "3409369",
    "end": "3415308"
  },
  {
    "text": "Redis itself there's some code in here for you guys to have a look at it's",
    "start": "3415760",
    "end": "3422430"
  },
  {
    "text": "again fairly straightforward we're doing some Redis queries reddit has this idea of sets so if I'm doing a collection I",
    "start": "3422430",
    "end": "3430849"
  },
  {
    "text": "store a read a set and it will dereference to the individual keys avoids n plus 1 queries but really this",
    "start": "3430849",
    "end": "3439500"
  },
  {
    "text": "is the key here where credit transaction to update Redis we set some values we commit the transaction again really easy",
    "start": "3439500",
    "end": "3446579"
  },
  {
    "text": "API stack exchange dot regice library provides this functionality we're good",
    "start": "3446579",
    "end": "3452130"
  },
  {
    "text": "to go last thing we got a couple of minutes to go so let me just run through this",
    "start": "3452130",
    "end": "3457829"
  },
  {
    "text": "quickly deployment docker we have to say docker we have to if we don't say darker then I",
    "start": "3457829",
    "end": "3464910"
  },
  {
    "text": "should be walking out stage right now how do we do local development with micro services good question",
    "start": "3464910",
    "end": "3474029"
  },
  {
    "text": "it's a tough thing to figure out you can use docker docker for Windows is now running if you've got the anniversary",
    "start": "3474029",
    "end": "3480039"
  },
  {
    "text": "update you could have a look at Windows containers they don't run together at the moment by the way I tried last night",
    "start": "3480039",
    "end": "3485670"
  },
  {
    "text": "doesn't happen but really the question",
    "start": "3485670",
    "end": "3491559"
  },
  {
    "start": "3490000",
    "end": "3490000"
  },
  {
    "text": "is as a developer what am i testing against what's the version of the app in micro-services the version the app is",
    "start": "3491559",
    "end": "3497410"
  },
  {
    "text": "really fluid there is no version anymore it's simply a whole bunch of services",
    "start": "3497410",
    "end": "3503799"
  },
  {
    "text": "kind of working in concert as a mashup in in some respects so you'll see some people talk about you know just keep a",
    "start": "3503799",
    "end": "3509380"
  },
  {
    "text": "version of each microservices and have a collection of all the known good configurations and when I'm doing local",
    "start": "3509380",
    "end": "3516279"
  },
  {
    "text": "development I take a known good configuration and I update my service and make sure it works in that",
    "start": "3516279",
    "end": "3521440"
  },
  {
    "text": "environment or you ignore it all completely and you simply build based on",
    "start": "3521440",
    "end": "3528099"
  },
  {
    "text": "using a lot of attention on your contracts make sure your contracts are",
    "start": "3528099",
    "end": "3533349"
  },
  {
    "text": "ok if your service behaves well and meets its contract then it's a responsibility of all the other services",
    "start": "3533349",
    "end": "3539140"
  },
  {
    "text": "to behave and then you use production monitoring to figure out if things are going wrong which is the Netflix approach just deploy the damn thing so",
    "start": "3539140",
    "end": "3548589"
  },
  {
    "start": "3545000",
    "end": "3545000"
  },
  {
    "text": "how do you upgrade a micro service good question you don't don't they're",
    "start": "3548589",
    "end": "3553630"
  },
  {
    "text": "replaceable bits of functionality don't upgrade them replace them if you start",
    "start": "3553630",
    "end": "3560259"
  },
  {
    "text": "thinking that way you start lining yourself up with container thinking containers don't get upgraded containers",
    "start": "3560259",
    "end": "3566859"
  },
  {
    "text": "get replaced in docker it's exactly the same approach so you isolate your service and its execution environment",
    "start": "3566859",
    "end": "3573640"
  },
  {
    "text": "and you simply drop a new version of new version a new instance into production you don't upgrade the only time to think",
    "start": "3573640",
    "end": "3580809"
  },
  {
    "text": "about upgrading is in data storage but again if you're storing events there's nothing to upgrade you don't have to go",
    "start": "3580809",
    "end": "3588069"
  },
  {
    "text": "and change the schemas you simply apply those updates again all those events again so you're getting benefits for",
    "start": "3588069",
    "end": "3593229"
  },
  {
    "text": "this I won't go through doc you've probably seen enough of that already you've been a docker talks yeah ok again",
    "start": "3593229",
    "end": "3602650"
  },
  {
    "text": "we don't upgrade we promote containers to various environments so you don't deploy to production you you know a new version of software you",
    "start": "3602650",
    "end": "3609470"
  },
  {
    "text": "deploy the container to prod from a dead perspective you're going to be looking",
    "start": "3609470",
    "end": "3614510"
  },
  {
    "text": "at doing something like docker compose if you were using it locally you don't have to by the way and then you run a",
    "start": "3614510",
    "end": "3620540"
  },
  {
    "text": "set of containers that your service will interact with and you can check how that works together and you can have mock services that do things without then",
    "start": "3620540",
    "end": "3629450"
  },
  {
    "text": "passing stuff on to elsewhere so you can create this subset it does require a bit of knowledge around how everything works",
    "start": "3629450",
    "end": "3635150"
  },
  {
    "text": "though so again think about the trade-off here do I want that complexity",
    "start": "3635150",
    "end": "3641630"
  },
  {
    "text": "or do I focus on my contracts and then just go there's a risk trade-off there's",
    "start": "3641630",
    "end": "3650570"
  },
  {
    "text": "all sorts of things to consider around this space if you're going to go this way and you don't have great testing",
    "start": "3650570",
    "end": "3657170"
  },
  {
    "text": "DevOps and all that sort of practices in place then you're looking for danger",
    "start": "3657170",
    "end": "3662240"
  },
  {
    "text": "it's going to hurt again right so it's not just how do I build the services how do I put everything together all right",
    "start": "3662240",
    "end": "3671210"
  },
  {
    "text": "so if you don't want docker you don't have to here's what you do always grab",
    "start": "3671210",
    "end": "3676610"
  },
  {
    "text": "the latest code of everything you might want to test rebuild it all locally manually build manually run all those",
    "start": "3676610",
    "end": "3683900"
  },
  {
    "text": "things using you know start this one start this one start this one start this one have 480 different console apps",
    "start": "3683900",
    "end": "3689150"
  },
  {
    "text": "running all with the different services in them make sure you got a lot of RAM by the way you probably need that but hey",
    "start": "3689150",
    "end": "3696350"
  },
  {
    "text": "everyone likes more RAM in their box and you know if you want run a little bit of scripting so that you can run a script",
    "start": "3696350",
    "end": "3703160"
  },
  {
    "text": "that says start dev environment ps1 and then wait 12 minutes while all the services start it'll be great you can go",
    "start": "3703160",
    "end": "3709670"
  },
  {
    "text": "get a coffee update you sell your social media status check Facebook find a Pokemon um that",
    "start": "3709670",
    "end": "3717380"
  },
  {
    "text": "said the pain involved in that has a really good side effect which is it keeps your number of services low you",
    "start": "3717380",
    "end": "3723560"
  },
  {
    "text": "start creating larger services because the cost and the pain of adding a new service it tends to prevent that ever",
    "start": "3723560",
    "end": "3730310"
  },
  {
    "text": "happening so you end up finding services that stop being micro and start being MIDI services and then start becoming",
    "start": "3730310",
    "end": "3737810"
  },
  {
    "text": "monolith services but that's pretty much it all right so",
    "start": "3737810",
    "end": "3743150"
  },
  {
    "text": "it's been an hour run through there's enough reference material for you guys here to have a look at the slides are",
    "start": "3743150",
    "end": "3749360"
  },
  {
    "text": "already on SlideShare again look me up our banks 54 we've gone through the why",
    "start": "3749360",
    "end": "3755780"
  },
  {
    "text": "some of the architecture decisions some of the thinking that you're going to have to put into play around this showing you a little bit of",
    "start": "3755780",
    "end": "3761030"
  },
  {
    "text": "implementation as you can see the codes actually not that complex which is great and we've talked briefly about",
    "start": "3761030",
    "end": "3766880"
  },
  {
    "text": "deployment so thank you very much I'd open for questions but we are done",
    "start": "3766880",
    "end": "3772820"
  },
  {
    "text": "if you want to ask questions just come up and grab me and we'll go from there enjoy the rest of the day",
    "start": "3772820",
    "end": "3779349"
  }
]