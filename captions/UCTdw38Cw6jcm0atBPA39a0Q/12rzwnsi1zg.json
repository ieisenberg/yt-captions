[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "thank you all for coming to my talk so today i'm going to talk about how you can sandbox a linux application",
    "start": "8080",
    "end": "16640"
  },
  {
    "text": "if you have a question at any point in time just feel free to stop me and ask it's better for me to skip a couple of",
    "start": "16640",
    "end": "23439"
  },
  {
    "text": "slides then you're not getting your answer so feel free to interrupt",
    "start": "23439",
    "end": "28800"
  },
  {
    "text": "so i'm martin i work for cisco and well the last few years i've been",
    "start": "28800",
    "end": "36559"
  },
  {
    "start": "29000",
    "end": "64000"
  },
  {
    "text": "working more and more in the systems programming and security field on our embedded devices",
    "start": "36559",
    "end": "43120"
  },
  {
    "text": "and so sandboxing ends up being quite a nice little corner where these two things meet",
    "start": "43120",
    "end": "49600"
  },
  {
    "text": "uh so i've dug into that and probably doing more more of that than i",
    "start": "49600",
    "end": "55760"
  },
  {
    "text": "should have the last few years but for some reason i find it fun um",
    "start": "55760",
    "end": "61600"
  },
  {
    "text": "yeah before i begin showing you any code so",
    "start": "61600",
    "end": "67040"
  },
  {
    "start": "64000",
    "end": "111000"
  },
  {
    "text": "today we're gonna actually make a sandbox do not use this sandbox",
    "start": "67040",
    "end": "72400"
  },
  {
    "text": "it is horrible uh the code on this slide is not meant for",
    "start": "72400",
    "end": "79040"
  },
  {
    "text": "anything but being on slides i for instance don't do error checking because then the code won't fit in the slide so",
    "start": "79040",
    "end": "86320"
  },
  {
    "text": "and if you don't do error checking on your sandbox then it will just run through and you will think you may might be sandbox but",
    "start": "86320",
    "end": "93280"
  },
  {
    "text": "you're not and everything will be horrible so don't do that i will take no",
    "start": "93280",
    "end": "99040"
  },
  {
    "text": "responsibility if you do this you should actually not write your own",
    "start": "99040",
    "end": "105439"
  },
  {
    "text": "sandbox you should use one of the ones already invented for you but it's fun",
    "start": "105439",
    "end": "113398"
  },
  {
    "start": "111000",
    "end": "176000"
  },
  {
    "text": "now one thing we need to look into is like what do i mean when i say sandbox like what's the purpose of a sandbox why",
    "start": "114079",
    "end": "120560"
  },
  {
    "text": "do they even exist and i googled around quite a bit uh and i ended up with something like",
    "start": "120560",
    "end": "127680"
  },
  {
    "text": "this basically it's a mechanism to",
    "start": "127680",
    "end": "133680"
  },
  {
    "text": "limit the view of an application so you put an application into a",
    "start": "133680",
    "end": "140080"
  },
  {
    "text": "restricted and controlled environment that you restrict and control and the goal of it",
    "start": "140080",
    "end": "146640"
  },
  {
    "text": "is not to make shitty code better but it's to constrain the shitty code so that it",
    "start": "146640",
    "end": "153120"
  },
  {
    "text": "can't affect anything outside of it so you want to impact uh limit the impact",
    "start": "153120",
    "end": "158800"
  },
  {
    "text": "of the vulnerabilities not you can't really stop them but you can",
    "start": "158800",
    "end": "163840"
  },
  {
    "text": "limit them like i said i googled the route i didn't really find much so this is my quote",
    "start": "163840",
    "end": "170879"
  },
  {
    "text": "uh but i was kind of happyish with it",
    "start": "170879",
    "end": "175120"
  },
  {
    "start": "176000",
    "end": "228000"
  },
  {
    "text": "and now we know what is what i mean when i say a sandbox the question becomes",
    "start": "177040",
    "end": "182159"
  },
  {
    "text": "why would you use one of these and there's a couple of them there's a couple of reasons uh",
    "start": "182159",
    "end": "188800"
  },
  {
    "text": "like i said i i work on embedded devices sometimes you might get an application",
    "start": "188800",
    "end": "195200"
  },
  {
    "text": "from a third-party vendor that you don't really trust",
    "start": "195200",
    "end": "200319"
  },
  {
    "text": "you don't really know what it does because all you get is some binary blob so you want to restrict it to do",
    "start": "200319",
    "end": "206159"
  },
  {
    "text": "just the thing it needs to do and nothing else uh",
    "start": "206159",
    "end": "213200"
  },
  {
    "text": "you might download code from the internet and run it locally which sounds insane to do but we all do",
    "start": "213200",
    "end": "220080"
  },
  {
    "text": "it every day because this is how a web engine works right and web engines are heavily sandboxed",
    "start": "220080",
    "end": "227480"
  },
  {
    "start": "228000",
    "end": "283000"
  },
  {
    "text": "you might have an application that has some expectation of the environment it's running on",
    "start": "229599",
    "end": "236239"
  },
  {
    "text": "for instance it might expect some files to exist somewhere on the system",
    "start": "236239",
    "end": "241280"
  },
  {
    "text": "and on your system it's not in that place it's somewhere else it might be so easy as",
    "start": "241280",
    "end": "247680"
  },
  {
    "text": "slash lib is that 32 or 64-bit you could of course like rewrite",
    "start": "247680",
    "end": "252959"
  },
  {
    "text": "symbolic links and mess around or change your system but you could also do kind of what docker does and just",
    "start": "252959",
    "end": "259680"
  },
  {
    "text": "rewrite the file system so that in the environment so that it looks like the application wants it to",
    "start": "259680",
    "end": "267319"
  },
  {
    "text": "of course they're really fun which is not a good reason to write them",
    "start": "268000",
    "end": "273680"
  },
  {
    "text": "as i said but there's a very good reason to actually learn about them",
    "start": "273680",
    "end": "278240"
  },
  {
    "text": "and there's quite a few tools on linux for actually",
    "start": "280000",
    "end": "285280"
  },
  {
    "text": "making a sandbox and that you need to use to make a sandbox",
    "start": "285280",
    "end": "290960"
  },
  {
    "text": "uh so today i'm gonna talk about the first two namespaces and seccomp c groups i don't really have time for",
    "start": "290960",
    "end": "298479"
  },
  {
    "text": "if you want to learn more about c groups go back in time and watch michael's talk or watch it on youtube when it's out",
    "start": "298479",
    "end": "306639"
  },
  {
    "text": "he also had one in ndc techdom in last year which goes directly into c",
    "start": "306639",
    "end": "312240"
  },
  {
    "text": "groups but these are all basic building blocks that every sandbox and every like",
    "start": "312240",
    "end": "318960"
  },
  {
    "text": "container environment is using to constrain the application they're",
    "start": "318960",
    "end": "324479"
  },
  {
    "text": "running let's get to some code",
    "start": "324479",
    "end": "330000"
  },
  {
    "start": "329000",
    "end": "423000"
  },
  {
    "text": "uh and there's a couple of ways you can set up a sandbox that you can start a sandbox",
    "start": "330000",
    "end": "335759"
  },
  {
    "text": "and like in the initial version of my talk this is what i did basically did some setup",
    "start": "335759",
    "end": "342879"
  },
  {
    "text": "and then i accept the next argument so i could run it like",
    "start": "343759",
    "end": "350240"
  },
  {
    "text": "uh sandbox application",
    "start": "350840",
    "end": "356160"
  },
  {
    "text": "and arguments this is what i did for the first one",
    "start": "356160",
    "end": "363520"
  },
  {
    "text": "uh what happens then is that you need to have some more things mounted you need access",
    "start": "363759",
    "end": "370639"
  },
  {
    "text": "to a bit more things because when you start up a program you need some libraries for instance that needs",
    "start": "370639",
    "end": "375840"
  },
  {
    "text": "to be loaded so those would need to be mounted into your sandbox which could and could not",
    "start": "375840",
    "end": "380880"
  },
  {
    "text": "be fine depending on yeah depending on how parallel you are what you couldn't do with this is to",
    "start": "380880",
    "end": "387199"
  },
  {
    "text": "completely remove yourself from the file system if you don't need the file system you might want to consider just removing",
    "start": "387199",
    "end": "392800"
  },
  {
    "text": "it completely so you could do something like this",
    "start": "392800",
    "end": "398560"
  },
  {
    "text": "basically put the sandbox inside of the application set up the sandbox run the application",
    "start": "398560",
    "end": "403919"
  },
  {
    "text": "code then you can remove yourself completely from the",
    "start": "403919",
    "end": "409039"
  },
  {
    "text": "from the environment of course if you go back to my first point about why do sandboxing you have",
    "start": "409039",
    "end": "414880"
  },
  {
    "text": "some binary blobs you don't trust you can't edit the binary blobs",
    "start": "414880",
    "end": "420560"
  },
  {
    "text": "so instead we go ahead and do something really nasty uh",
    "start": "420560",
    "end": "426319"
  },
  {
    "start": "423000",
    "end": "500000"
  },
  {
    "text": "this is the equivalent uh basically i can start by showing you how",
    "start": "426319",
    "end": "431759"
  },
  {
    "text": "this works so i have this application i it doesn't really do much interesting",
    "start": "431759",
    "end": "438639"
  },
  {
    "text": "stuff except find lots of information of the device so it's like you find uid gid ped what",
    "start": "438639",
    "end": "446000"
  },
  {
    "text": "directories are in the root directory and all the pads network interfaces capabilities and such",
    "start": "446000",
    "end": "453280"
  },
  {
    "text": "so how to run this sandbox is let's get this on top",
    "start": "453280",
    "end": "460880"
  },
  {
    "text": "you do ld preload so libs",
    "start": "460880",
    "end": "467280"
  },
  {
    "text": "and there's a shared library which is the sandbox and what ld preload does",
    "start": "467280",
    "end": "472960"
  },
  {
    "text": "is it takes this library and then every symbol every public symbol in this library can be used to",
    "start": "472960",
    "end": "479520"
  },
  {
    "text": "override public symbols from other libraries that you pull in",
    "start": "479520",
    "end": "485120"
  },
  {
    "text": "so if i then run result bin application looks very",
    "start": "485120",
    "end": "490840"
  },
  {
    "text": "similar except at the top myso file added the print running",
    "start": "490840",
    "end": "498319"
  },
  {
    "text": "sandboxed so the symbol i'm overriding",
    "start": "498319",
    "end": "503680"
  },
  {
    "text": "and this is the very nasty part is this lipsy start main which is part of g leap",
    "start": "503680",
    "end": "509039"
  },
  {
    "text": "c uh you don't know if this changes by the",
    "start": "509039",
    "end": "514159"
  },
  {
    "text": "way so when you upgrade glibc this might break but then there's other stuff in your sandbox that might break by a gmc",
    "start": "514159",
    "end": "521200"
  },
  {
    "text": "upgrade anyway they are finicky",
    "start": "521200",
    "end": "526320"
  },
  {
    "text": "so what i do is i store whatever the actual main of the program is into a variable",
    "start": "526480",
    "end": "532480"
  },
  {
    "text": "i find the actual libsy start main because i need to use it the linker needs to do its job",
    "start": "532480",
    "end": "539040"
  },
  {
    "text": "and then i call that libsy start main with my own main function and currently my own main function only",
    "start": "539040",
    "end": "545519"
  },
  {
    "text": "calls actual main which is the one i start but between these two lines i'm gonna put my sandbox",
    "start": "545519",
    "end": "553040"
  },
  {
    "start": "553000",
    "end": "609000"
  },
  {
    "text": "and we'll start by namespaces so namespaces are a way to wrap some global",
    "start": "555440",
    "end": "563360"
  },
  {
    "text": "system resource like uh pids and mount points network ipc",
    "start": "563360",
    "end": "571360"
  },
  {
    "text": "mechanisms users",
    "start": "571360",
    "end": "575720"
  },
  {
    "text": "and when you boot up everything is starting in some initial name spaces one of each",
    "start": "577760",
    "end": "583360"
  },
  {
    "text": "type of namespace that we have",
    "start": "583360",
    "end": "586720"
  },
  {
    "text": "we are going to use the unshare system call",
    "start": "589760",
    "end": "594880"
  },
  {
    "text": "to make them you could use clone uh but clone is way more complicated so i'm not going to",
    "start": "594880",
    "end": "601279"
  },
  {
    "text": "start with that we're going to use on share which is a simple way of creating and most of the time entering a namespace",
    "start": "601279",
    "end": "610320"
  },
  {
    "start": "609000",
    "end": "662000"
  },
  {
    "text": "and we'll start with the username space which",
    "start": "610800",
    "end": "617279"
  },
  {
    "text": "isolates user and groups basically what it does is you can map",
    "start": "617279",
    "end": "624320"
  },
  {
    "text": "the users and groups you have available to users and group in the parent name space",
    "start": "624320",
    "end": "630800"
  },
  {
    "text": "uh to enter it you use this clone user flag to which you give to unshare",
    "start": "630800",
    "end": "638800"
  },
  {
    "text": "uh the most important thing here is that when you do this",
    "start": "639200",
    "end": "644480"
  },
  {
    "text": "you can pretend you're root you can basically get root-ish permission permissions um",
    "start": "644480",
    "end": "650800"
  },
  {
    "text": "so in this world with namespaces and username spaces",
    "start": "650800",
    "end": "656320"
  },
  {
    "text": "root isn't really root anymore looks like you have privileges you might",
    "start": "656320",
    "end": "661680"
  },
  {
    "text": "not so you have this initial name space here",
    "start": "661680",
    "end": "668079"
  },
  {
    "start": "662000",
    "end": "751000"
  },
  {
    "text": "where you're running as user 1000 group 1000 and you create a new one",
    "start": "668079",
    "end": "675279"
  },
  {
    "text": "uh this was very uh well namespace two in this case and you",
    "start": "675279",
    "end": "680560"
  },
  {
    "text": "have these mappings these mappings are two files uid map and gid map so the first one is",
    "start": "680560",
    "end": "686480"
  },
  {
    "text": "the user id map where you say that uid0 inside with namespace",
    "start": "686480",
    "end": "691920"
  },
  {
    "text": "is uid 1000 outside of it and you do that for a single user which means if you",
    "start": "691920",
    "end": "698480"
  },
  {
    "text": "if you ask user 1001 enters this namespace",
    "start": "698480",
    "end": "703680"
  },
  {
    "text": "you'll be running as nobody because there is no mapping for your user",
    "start": "703680",
    "end": "708959"
  },
  {
    "text": "you can do more fancy mappings like this where you map 500 users starting from",
    "start": "709360",
    "end": "715279"
  },
  {
    "text": "100 inside the namespace and map them to 688 outside of it",
    "start": "715279",
    "end": "720639"
  },
  {
    "text": "and you do a similar mapping for the group ids which ends up with something like this",
    "start": "720639",
    "end": "726720"
  },
  {
    "text": "if my math isn't completely off for docker for instance the default",
    "start": "726720",
    "end": "732079"
  },
  {
    "text": "mapping is the identity mapping so 0 is mapped to 0 for all the users both for",
    "start": "732079",
    "end": "737200"
  },
  {
    "text": "user groups meaning in docker if your docker container is running as",
    "start": "737200",
    "end": "742480"
  },
  {
    "text": "root and you haven't done anything to change that mapping then it's actually running as the true route",
    "start": "742480",
    "end": "749440"
  },
  {
    "start": "751000",
    "end": "901000"
  },
  {
    "text": "but this is how you create and join a username space",
    "start": "752639",
    "end": "757680"
  },
  {
    "text": "it's pretty simple at this point your running is nobody",
    "start": "757680",
    "end": "764240"
  },
  {
    "text": "at this point i think you have zero permissions but let's let's make ourselves root",
    "start": "764240",
    "end": "771279"
  },
  {
    "text": "let's write to these files so the files we need to write to is this uid map",
    "start": "771279",
    "end": "777760"
  },
  {
    "text": "and this gid map so you fetch the user id and group id",
    "start": "777760",
    "end": "783519"
  },
  {
    "text": "before you enter the namespace you enter the namespace and then you write the",
    "start": "783519",
    "end": "788639"
  },
  {
    "text": "mapping to these files you write 0 whatever your outside uid was and you do that for a single user",
    "start": "788639",
    "end": "796240"
  },
  {
    "text": "and you do the same for the group id map and this is the point where you should",
    "start": "796240",
    "end": "802720"
  },
  {
    "text": "have checked errors because this last write will fail for you",
    "start": "802720",
    "end": "807760"
  },
  {
    "text": "because you're not allowed to just write to this group id map because on linux you have the",
    "start": "807760",
    "end": "813600"
  },
  {
    "text": "capabilities of adding new groups to yourself especially as root",
    "start": "813600",
    "end": "820320"
  },
  {
    "text": "so before that you have to deny the kernel giving you supplementary groups",
    "start": "820320",
    "end": "826399"
  },
  {
    "text": "which is done by this you write the string deny to proc self set groups",
    "start": "826399",
    "end": "834320"
  },
  {
    "text": "now proc self is magic it's basically proc your uh your pid whatever that is slash set",
    "start": "834320",
    "end": "841199"
  },
  {
    "text": "groups but you have to write this string deny to this file to be allowed to write",
    "start": "841199",
    "end": "848639"
  },
  {
    "text": "this mapping and after doing this mapping we'll be running as what looks like true root",
    "start": "848639",
    "end": "856240"
  },
  {
    "text": "we'll have every capability and i'll show you a bit later in a demo how this will actually",
    "start": "856240",
    "end": "862720"
  },
  {
    "text": "end up looking now the reason for starting with the user namespace and doing a very",
    "start": "862720",
    "end": "870800"
  },
  {
    "text": "very high level explanation of it is that you need permissions to enter any other",
    "start": "870800",
    "end": "878000"
  },
  {
    "text": "namespace except for the ones that your username",
    "start": "878000",
    "end": "883120"
  },
  {
    "text": "space owns so you can create a lot of them together if one of them is a username space and",
    "start": "883120",
    "end": "888399"
  },
  {
    "text": "you can do that unprivileged if i didn't do this first my program needed to run as root to begin with",
    "start": "888399",
    "end": "895040"
  },
  {
    "text": "which kind of makes the whole thing worse so i start with the username space",
    "start": "895040",
    "end": "902560"
  },
  {
    "start": "901000",
    "end": "995000"
  },
  {
    "text": "and the next thing i want to do is make myself a new file system i could remove myself from the file",
    "start": "902560",
    "end": "908000"
  },
  {
    "text": "system let's start by making a new one and we do do that using the mount namespace which",
    "start": "908000",
    "end": "915199"
  },
  {
    "text": "gives you a new list of mount points for well your namespace",
    "start": "915199",
    "end": "922240"
  },
  {
    "text": "this uh flag clone uns cloney namespace is what",
    "start": "922320",
    "end": "927839"
  },
  {
    "text": "you use for this uh you can love or hate the name it's the first namespace ever created and as",
    "start": "927839",
    "end": "934720"
  },
  {
    "text": "always you think this is also going to be the only namespace ever created so you take the most obvious name",
    "start": "934720",
    "end": "941839"
  },
  {
    "text": "you can share your view of the mount points with",
    "start": "943360",
    "end": "949040"
  },
  {
    "text": "the namespace your parent is in or you created it from previously the default was that",
    "start": "949040",
    "end": "956880"
  },
  {
    "text": "when you created a new mount namespace the new mount namespace were private",
    "start": "956880",
    "end": "962959"
  },
  {
    "text": "every change you did was private to you systemd changed that default",
    "start": "962959",
    "end": "969600"
  },
  {
    "text": "to actually share them so if you did a change in the namespace that change change was also shown in the",
    "start": "969600",
    "end": "976480"
  },
  {
    "text": "previous namespace which in this case would be pretty bad and vice versa so",
    "start": "976480",
    "end": "983279"
  },
  {
    "text": "basically if you don't you don't know what init system is running you don't know what the default is so you should",
    "start": "983279",
    "end": "988959"
  },
  {
    "text": "just always make sure to start with make every mount point private",
    "start": "988959",
    "end": "996920"
  },
  {
    "start": "995000",
    "end": "1047000"
  },
  {
    "text": "like i said it's easy to make and join a new mountain space",
    "start": "997360",
    "end": "1003439"
  },
  {
    "text": "you just order the flag in at this point the one you had and the one you're in",
    "start": "1006240",
    "end": "1012240"
  },
  {
    "text": "looks exactly the same there's no difference",
    "start": "1012240",
    "end": "1017600"
  },
  {
    "text": "so like i said you have to make your mount points private",
    "start": "1018959",
    "end": "1026079"
  },
  {
    "text": "and the way to do that is by on top of slash which is your route",
    "start": "1026079",
    "end": "1031438"
  },
  {
    "text": "make that private recursively it's basically what this line is doing so after this",
    "start": "1031439",
    "end": "1036959"
  },
  {
    "text": "any change you do to your mount point list is yours",
    "start": "1036959",
    "end": "1042798"
  },
  {
    "text": "so at this point let's make ourselves a new root file system",
    "start": "1043679",
    "end": "1048160"
  },
  {
    "start": "1047000",
    "end": "1167000"
  },
  {
    "text": "what i do here is i mount a temporary file system on top of slash temp",
    "start": "1050799",
    "end": "1058000"
  },
  {
    "text": "so whatever was in slash temp is still there but i mounted the tempo fs on top of it",
    "start": "1058160",
    "end": "1065039"
  },
  {
    "text": "basically because this is where i want to create my new root file system my new slash",
    "start": "1065520",
    "end": "1070960"
  },
  {
    "text": "and i use temp because there's most likely nothing in temp i need to copy over",
    "start": "1070960",
    "end": "1076799"
  },
  {
    "text": "and i'm pretty certain the temp will exist if not you would have to create it or",
    "start": "1076799",
    "end": "1083280"
  },
  {
    "text": "create a directory somewhere to make your file system",
    "start": "1083280",
    "end": "1087840"
  },
  {
    "text": "to basically bring stuff over from your old mount file system to your new",
    "start": "1088640",
    "end": "1094720"
  },
  {
    "text": "you create a directory or a file you can do this with files as well and then you do a bind mount from",
    "start": "1094720",
    "end": "1101440"
  },
  {
    "text": "the old one lib64 to my new root file systems temp lib64",
    "start": "1101440",
    "end": "1108240"
  },
  {
    "text": "this basically makes a copy of the of the mount point that is now pointing in to something inside of what your new",
    "start": "1108240",
    "end": "1114400"
  },
  {
    "text": "root file system is and here you can mount up as much as much as you want to you can mount",
    "start": "1114400",
    "end": "1120160"
  },
  {
    "text": "other type of file system you can mount the squash fs or whatever you want one amount",
    "start": "1120160",
    "end": "1126799"
  },
  {
    "text": "and nothing of this is seen by the parent so now i made myself a nice little file",
    "start": "1127120",
    "end": "1133919"
  },
  {
    "text": "structure on the temp so i want to join it",
    "start": "1133919",
    "end": "1139280"
  },
  {
    "text": "now you could use the good old ch root the problem with ch root is that that",
    "start": "1139280",
    "end": "1145919"
  },
  {
    "text": "would impose on your application the restriction that it cannot join any new username spaces",
    "start": "1145919",
    "end": "1153679"
  },
  {
    "text": "that might not matter for you but if you want it to matter for you you have to use pivot root instead",
    "start": "1155039",
    "end": "1162559"
  },
  {
    "text": "and pivot route works that it takes two arguments",
    "start": "1163280",
    "end": "1168559"
  },
  {
    "start": "1167000",
    "end": "1239000"
  },
  {
    "text": "it takes whatever the new route is supposed to be and it takes where to put the old route",
    "start": "1168559",
    "end": "1177480"
  },
  {
    "text": "after doing this whatever was in flash temp is now in slash whatever was in slash is now in",
    "start": "1178480",
    "end": "1184080"
  },
  {
    "text": "slash old route then your cd to your new slash because",
    "start": "1184080",
    "end": "1189440"
  },
  {
    "text": "if you don't then you're still wherever you were which i have no control over so a cd to the new new slash",
    "start": "1189440",
    "end": "1196960"
  },
  {
    "text": "then you unmount the old route and remove the directory and the old file system is gone",
    "start": "1196960",
    "end": "1203120"
  },
  {
    "text": "as far as at least your applications will see so you built up a new file system",
    "start": "1203120",
    "end": "1209280"
  },
  {
    "text": "you entered it and now you're locked into that part of the file system",
    "start": "1209280",
    "end": "1215279"
  },
  {
    "text": "one thing you couldn't do at this point some at this point my application would crash",
    "start": "1218159",
    "end": "1223760"
  },
  {
    "text": "because it lists all the all the pids that exists",
    "start": "1223760",
    "end": "1229440"
  },
  {
    "text": "and it does that using the proc file system and you cannot make you cannot mount a",
    "start": "1229440",
    "end": "1235200"
  },
  {
    "text": "new proc file system here because there's already one mounted in your pin namespace",
    "start": "1235200",
    "end": "1241200"
  },
  {
    "start": "1239000",
    "end": "1319000"
  },
  {
    "text": "so the next part is to make a new pin name space and these are interesting",
    "start": "1241440",
    "end": "1249840"
  },
  {
    "text": "uh the first thing you'll notice is that when you use unshare cloneupid",
    "start": "1249919",
    "end": "1255919"
  },
  {
    "text": "you create it but your process is not part of that pit namespace",
    "start": "1255919",
    "end": "1262440"
  },
  {
    "text": "the reason being that if it did then for instance for instance glibc could no longer just cache the pit",
    "start": "1262640",
    "end": "1269280"
  },
  {
    "text": "uh it would need changes on the user space side if they did that change and that it's not something the kernel is",
    "start": "1269280",
    "end": "1275280"
  },
  {
    "text": "very happy to do so the rule is the first child of this",
    "start": "1275280",
    "end": "1280480"
  },
  {
    "text": "process will be the first process in the new pig name space",
    "start": "1280480",
    "end": "1288000"
  },
  {
    "text": "also this process will be paid one and pid one on linux is the init process",
    "start": "1289679",
    "end": "1298159"
  },
  {
    "text": "it's kind of important like some of what it does is create other processes which is less important",
    "start": "1298159",
    "end": "1304559"
  },
  {
    "text": "in this setting i think but it's also it also becomes the parent of every",
    "start": "1304559",
    "end": "1311600"
  },
  {
    "text": "orphan child process which is an important task it has",
    "start": "1311600",
    "end": "1317799"
  },
  {
    "start": "1319000",
    "end": "1419000"
  },
  {
    "text": "what a pid namespace does is it basically starts counting pins again",
    "start": "1322000",
    "end": "1328240"
  },
  {
    "text": "very easy very very easily told uh so but uh",
    "start": "1328240",
    "end": "1336080"
  },
  {
    "text": "a pid in the name in that other pid name space also has appeared in the parent pid name space",
    "start": "1336080",
    "end": "1343200"
  },
  {
    "text": "so the parent here this in its uh init",
    "start": "1343200",
    "end": "1348280"
  },
  {
    "text": "[Music] init program we'll see this application as paid third",
    "start": "1348280",
    "end": "1354080"
  },
  {
    "text": "war 3451 but this will only see itself as one",
    "start": "1354080",
    "end": "1360720"
  },
  {
    "text": "and here this one will see the the process in namespace three as",
    "start": "1360720",
    "end": "1365840"
  },
  {
    "text": "pid two while it's actually in the initial pit name space thousand twenty four",
    "start": "1365840",
    "end": "1372320"
  },
  {
    "text": "there's a hierarchy here with mappings from whatever it sees itself as to whatever",
    "start": "1372320",
    "end": "1378320"
  },
  {
    "text": "the parent namespace sees it as",
    "start": "1378320",
    "end": "1382640"
  },
  {
    "text": "uh and all of these paid ones are considered a",
    "start": "1383440",
    "end": "1388559"
  },
  {
    "text": "image system so if pid1 dies in the namespace",
    "start": "1388559",
    "end": "1395039"
  },
  {
    "text": "that namespace is shut down and this is also why",
    "start": "1395039",
    "end": "1401840"
  },
  {
    "text": "in docker you're recommended to have a single application inside your docker container",
    "start": "1401840",
    "end": "1408320"
  },
  {
    "text": "because if not the first application needs to be a init system or init application",
    "start": "1408320",
    "end": "1416360"
  },
  {
    "text": "because that's the requirement it has to work as an unit system now to create it it's very easy same as",
    "start": "1416880",
    "end": "1423360"
  },
  {
    "start": "1419000",
    "end": "1515000"
  },
  {
    "text": "always the difference now is i'm now when i do the setup",
    "start": "1423360",
    "end": "1429120"
  },
  {
    "text": "d mapping i even i am in a new username space i meant in a new mount namespace",
    "start": "1429120",
    "end": "1435360"
  },
  {
    "text": "but i'm still in the initial pid namespace or the parentpit namespace of the one i created",
    "start": "1435360",
    "end": "1442720"
  },
  {
    "text": "so to enter it i need to create a child which i do with fork",
    "start": "1442799",
    "end": "1449360"
  },
  {
    "text": "if i use clone hair then the child would already be will be the one that's been put in the pig name space",
    "start": "1449360",
    "end": "1458000"
  },
  {
    "text": "here's fork and i do the swap root thing and i call actual main and i exit",
    "start": "1458000",
    "end": "1465919"
  },
  {
    "text": "in the parent i then wait for the child to terminate and i use that as the exit status if i",
    "start": "1467200",
    "end": "1473520"
  },
  {
    "text": "didn't do this in the parent then i would send a sig kill to the child and nothing would",
    "start": "1473520",
    "end": "1480080"
  },
  {
    "text": "really work but this would get me a completely new",
    "start": "1480080",
    "end": "1485600"
  },
  {
    "text": "this will create a child that is also part of the new ped name space so this child will be paid one",
    "start": "1485600",
    "end": "1492880"
  },
  {
    "text": "and it will see no other processes",
    "start": "1492880",
    "end": "1496960"
  },
  {
    "text": "the other thing i can do now is mount my profile system because now i'm in a pit name space",
    "start": "1498720",
    "end": "1505039"
  },
  {
    "text": "i can now mount my own proc file system so i do that",
    "start": "1505039",
    "end": "1511240"
  },
  {
    "text": "the last thing we're going to do namespace wise is",
    "start": "1517520",
    "end": "1523919"
  },
  {
    "text": "remove ourselves from the network in this application my application don't need network access at all",
    "start": "1523919",
    "end": "1532080"
  },
  {
    "text": "and the network namespace will create a new networking stack it will have its own set of",
    "start": "1532080",
    "end": "1538960"
  },
  {
    "text": "of ethernet devices or network devices it will have its own ip cable setup",
    "start": "1538960",
    "end": "1545840"
  },
  {
    "text": "you can do whatever in this",
    "start": "1545840",
    "end": "1550080"
  },
  {
    "text": "on creation of a new network namespace there exists only a loopback device",
    "start": "1552400",
    "end": "1558240"
  },
  {
    "text": "which is down even so it's very shut down and a network device can be present in a",
    "start": "1558240",
    "end": "1565760"
  },
  {
    "text": "single network namespace you can move even physical devices into",
    "start": "1565760",
    "end": "1571039"
  },
  {
    "text": "other network namespaces or you can make virtual ethernet devices",
    "start": "1571039",
    "end": "1576640"
  },
  {
    "text": "that you put into for instance a virtual intent pair where you put one",
    "start": "1576640",
    "end": "1582159"
  },
  {
    "text": "side of the link into the network namespace and the other one is in the initial one and then you can do some iptables magic",
    "start": "1582159",
    "end": "1588559"
  },
  {
    "text": "and get actual network uh not gonna go into that because iptables is",
    "start": "1588559",
    "end": "1594000"
  },
  {
    "text": "a nightmare to work with um but if you",
    "start": "1594000",
    "end": "1599919"
  },
  {
    "text": "exit a network namespace that has network devices",
    "start": "1599919",
    "end": "1604960"
  },
  {
    "text": "the virtual devices will be deleted and the physical devices will be moved",
    "start": "1604960",
    "end": "1610320"
  },
  {
    "text": "back to the initial network namespace",
    "start": "1610320",
    "end": "1614880"
  },
  {
    "text": "and these are not hierarchical they are just side by side so i could move eth0 here",
    "start": "1616640",
    "end": "1623039"
  },
  {
    "text": "into this network namespace and if i wanted to i could move it further into this one",
    "start": "1623039",
    "end": "1629440"
  },
  {
    "text": "but then if this one dies it's get moved back to the initial network because eth0 is",
    "start": "1629440",
    "end": "1636080"
  },
  {
    "text": "a physical network device in this scenario",
    "start": "1636080",
    "end": "1640520"
  },
  {
    "text": "yes it can only be in a single name space at one time",
    "start": "1647279",
    "end": "1654039"
  },
  {
    "text": "yeah basically for the applications it i guess it would look something like that i haven't actually tried that but uh",
    "start": "1659120",
    "end": "1664640"
  },
  {
    "text": "but yeah it can't be active in two uh two namespaces at the same time and also all of these loopback devices",
    "start": "1664640",
    "end": "1671360"
  },
  {
    "text": "are separate so if you have some some services running on your localhost",
    "start": "1671360",
    "end": "1677760"
  },
  {
    "text": "in one network namespace they will not be accessible from another one",
    "start": "1677760",
    "end": "1683840"
  },
  {
    "text": "what you regularly do is you have something like this in the initial namespace then you put a virtual internet pair",
    "start": "1691600",
    "end": "1698880"
  },
  {
    "text": "between two namespaces and iptablemagics on this side or um",
    "start": "1698880",
    "end": "1704960"
  },
  {
    "text": "or a bridge device or something like that to actually route it out",
    "start": "1704960",
    "end": "1711000"
  },
  {
    "text": "yeah i haven't seen any use where someone actually moves the physical network device but you could",
    "start": "1712080",
    "end": "1718880"
  },
  {
    "start": "1719000",
    "end": "1756000"
  },
  {
    "text": "so to create a new network namespace as we always do unsure clone newnet",
    "start": "1721679",
    "end": "1727919"
  },
  {
    "text": "this is done in the child the idea behind doing it in the child in this case is that",
    "start": "1727919",
    "end": "1733520"
  },
  {
    "text": "if i did this from the parent i could if that had the privileges",
    "start": "1733520",
    "end": "1738640"
  },
  {
    "text": "start setting up the network devices properly send the network device into the network",
    "start": "1738640",
    "end": "1743840"
  },
  {
    "text": "namespace and signal that everything's ready uh of course i don't do that because like i said iptables i've",
    "start": "1743840",
    "end": "1750559"
  },
  {
    "text": "done too much about that and i'm not really yeah i don't have time to do all of that",
    "start": "1750559",
    "end": "1756880"
  },
  {
    "start": "1756000",
    "end": "1850000"
  },
  {
    "text": "so basically what this does is it just removes the network from from the application",
    "start": "1758159",
    "end": "1764240"
  },
  {
    "text": "and yeah you can use virtual network devices you need to use ip tables uh bridges will probably help you a bit",
    "start": "1764559",
    "end": "1771679"
  },
  {
    "text": "if you want to go through the pain of actually getting network",
    "start": "1771679",
    "end": "1777120"
  },
  {
    "text": "so if i let's just uh",
    "start": "1777120",
    "end": "1783360"
  },
  {
    "text": "get there and build it now the application is unchanged in this",
    "start": "1783360",
    "end": "1792080"
  },
  {
    "text": "it still does a lot of stuff but if i run this with ld preload",
    "start": "1792080",
    "end": "1799279"
  },
  {
    "text": "there's a lot less information here so you see i'm running as something that",
    "start": "1799279",
    "end": "1804799"
  },
  {
    "text": "looks like root and i'm paid one i have every capability",
    "start": "1804799",
    "end": "1812320"
  },
  {
    "text": "i have no network interfaces i have some directories mounted those",
    "start": "1812320",
    "end": "1817679"
  },
  {
    "text": "are stuff i just mounted out because i to show it i could have removed everything in this",
    "start": "1817679",
    "end": "1823360"
  },
  {
    "text": "and i have one running process which is myself",
    "start": "1823360",
    "end": "1829039"
  },
  {
    "text": "so with namespaces you can basically remove yourself from the machine or take an application and remove it for",
    "start": "1835200",
    "end": "1841600"
  },
  {
    "text": "the from the machine the main usage here is not to protect that application but",
    "start": "1841600",
    "end": "1846880"
  },
  {
    "text": "protect the rest of the system you have",
    "start": "1846880",
    "end": "1852799"
  },
  {
    "start": "1850000",
    "end": "1876000"
  },
  {
    "text": "many more namespaces and for a proper sandbox you should at least consider all of them",
    "start": "1852799",
    "end": "1860480"
  },
  {
    "text": "for instance is kernel ipc mechanism is probably something you don't necessarily want",
    "start": "1860880",
    "end": "1866559"
  },
  {
    "text": "between these namespaces",
    "start": "1866559",
    "end": "1870080"
  },
  {
    "text": "but there's a yeah if you're making a proper sandbox you should consider all of them",
    "start": "1871840",
    "end": "1878679"
  },
  {
    "start": "1876000",
    "end": "2036000"
  },
  {
    "text": "so we go to the next part and the next part of this equation is seccomp",
    "start": "1878720",
    "end": "1884960"
  },
  {
    "text": "and if you use secomp you're allowed to do the system calls exit secret turn",
    "start": "1884960",
    "end": "1890880"
  },
  {
    "text": "read and write which is very very useless for most",
    "start": "1890880",
    "end": "1896640"
  },
  {
    "text": "applications if you have a very limited application you might be able to use this but instead we use",
    "start": "1896640",
    "end": "1903039"
  },
  {
    "text": "something more modern a second ppf so when when you hear the word second this",
    "start": "1903039",
    "end": "1908159"
  },
  {
    "text": "is probably what people are meaning this is what you're actually using",
    "start": "1908159",
    "end": "1913760"
  },
  {
    "text": "it uses the berkeley package filtering which is a infrastructure in the kernel with uh",
    "start": "1914480",
    "end": "1921039"
  },
  {
    "text": "vm jit compiler it's a binary binary programming language",
    "start": "1921039",
    "end": "1926320"
  },
  {
    "text": "and it's uh pretty powerful you use it to deny or allow syscalls",
    "start": "1926320",
    "end": "1934720"
  },
  {
    "text": "so you're always working on cisco's in this so the thought behind it is",
    "start": "1934720",
    "end": "1939760"
  },
  {
    "text": "you have an application which does some things",
    "start": "1939760",
    "end": "1944720"
  },
  {
    "text": "and those things require certain ciscos to be made",
    "start": "1946720",
    "end": "1952159"
  },
  {
    "text": "there's a ton of cisco's michael said about 400 or something",
    "start": "1952559",
    "end": "1957760"
  },
  {
    "text": "these days your application probably uses a handful of those",
    "start": "1957760",
    "end": "1964320"
  },
  {
    "text": "compared to how many they are you're not using many so you want to limit your application",
    "start": "1964320",
    "end": "1970399"
  },
  {
    "text": "and anything inheriting from applications or any child process made by your application",
    "start": "1970399",
    "end": "1976320"
  },
  {
    "text": "to only be allowed to use the syscalls you're actually using",
    "start": "1976320",
    "end": "1981519"
  },
  {
    "text": "so if an attacker comes in hijacks your application they can only",
    "start": "1981519",
    "end": "1987519"
  },
  {
    "text": "trigger the syscalls you're already making which limits the tax surface quite a bit",
    "start": "1987519",
    "end": "1994080"
  },
  {
    "text": "the one thing you need to remember to do when doing secomp",
    "start": "1998640",
    "end": "2003760"
  },
  {
    "text": "is that you need to check that you're on the architecture you expect to be on",
    "start": "2003760",
    "end": "2009039"
  },
  {
    "text": "so if you're running on arm64 you should check in your bpf program if",
    "start": "2009039",
    "end": "2015279"
  },
  {
    "text": "you're actually running on arm64 your bpf program is written for arm 64. not because the",
    "start": "2015279",
    "end": "2022399"
  },
  {
    "text": "the binary code is different but because the syscall numbers differs",
    "start": "2022399",
    "end": "2028880"
  },
  {
    "text": "the syscalls on arm and arm 64 and x86 and x864 all differ",
    "start": "2028880",
    "end": "2035919"
  },
  {
    "start": "2036000",
    "end": "2300000"
  },
  {
    "text": "now you have a struct that you work on with secomp you have the syscall number at the top",
    "start": "2037360",
    "end": "2044240"
  },
  {
    "text": "you have the architecture you're running on you have the instruction pointer which i think is really cool but i haven't seen",
    "start": "2044240",
    "end": "2050560"
  },
  {
    "text": "any proper use of it but in theory you could say i just want this is called in this region of code",
    "start": "2050560",
    "end": "2058079"
  },
  {
    "text": "and you have pointer to arguments for this syscall",
    "start": "2058079",
    "end": "2063598"
  },
  {
    "text": "uh and i'm gonna start because i have time uh by using uh",
    "start": "2064320",
    "end": "2069358"
  },
  {
    "text": "what i call raw secump which is basically the kernel interface you have for making secump",
    "start": "2069359",
    "end": "2075919"
  },
  {
    "text": "but i would prefer to use lipstick um so we'll do that afterwards because that's much nicer",
    "start": "2075919",
    "end": "2081440"
  },
  {
    "text": "this is going to be hairy as you see from the get go here",
    "start": "2081440",
    "end": "2086839"
  },
  {
    "text": "okay to make a secomp program you create this sock filter thing which",
    "start": "2086839",
    "end": "2094240"
  },
  {
    "text": "is your program you put it into a sock fprog",
    "start": "2094240",
    "end": "2100079"
  },
  {
    "text": "and you send it to set to seccomp",
    "start": "2100079",
    "end": "2104160"
  },
  {
    "text": "and this filter contains statement statements and jump instructions",
    "start": "2105839",
    "end": "2111280"
  },
  {
    "text": "basically so this one is a statement and it all it says is",
    "start": "2111280",
    "end": "2117200"
  },
  {
    "text": "return allow so you allow every single system call",
    "start": "2117200",
    "end": "2122720"
  },
  {
    "text": "this is basically what you have as default",
    "start": "2122720",
    "end": "2127200"
  },
  {
    "text": "um so let's expand on it and let's check the architecture",
    "start": "2128839",
    "end": "2134240"
  },
  {
    "text": "like i said that's important so let's do it so to do for that is you load from this",
    "start": "2134240",
    "end": "2141200"
  },
  {
    "text": "second data struct the architecture",
    "start": "2141200",
    "end": "2146240"
  },
  {
    "text": "so you load a word from the second data structure in into a register and this offset of thing is just the way",
    "start": "2146240",
    "end": "2153040"
  },
  {
    "text": "to get actually where in memory this thing is stored",
    "start": "2153040",
    "end": "2159400"
  },
  {
    "text": "when you load that into a register you can do a jump statement",
    "start": "2160880",
    "end": "2166400"
  },
  {
    "text": "and you say i want to jump if the following is equal",
    "start": "2166800",
    "end": "2173440"
  },
  {
    "text": "and the following is arch x8664",
    "start": "2173440",
    "end": "2178800"
  },
  {
    "text": "if whatever's in the register is equal to arch x8664 i'll jump zero",
    "start": "2178800",
    "end": "2184240"
  },
  {
    "text": "meaning i go to rettalau and if no not i jump one",
    "start": "2184240",
    "end": "2189280"
  },
  {
    "text": "jumping over this statement hitting this one going to red kill",
    "start": "2189280",
    "end": "2195838"
  },
  {
    "text": "i said i was checking the architecture and i'm trying to check x8664",
    "start": "2198560",
    "end": "2203599"
  },
  {
    "text": "but this is pretty nasty and this is not even a full check",
    "start": "2203599",
    "end": "2208640"
  },
  {
    "text": "because i'm not checking the x32 bit in this which you should do and i'm not going to do because i'm lazy",
    "start": "2208640",
    "end": "2215839"
  },
  {
    "text": "but this is not a full architecture check for x8664",
    "start": "2216160",
    "end": "2221000"
  },
  {
    "text": "don't use this code if i want to check actual system calls",
    "start": "2221200",
    "end": "2228560"
  },
  {
    "text": "i kind of do much of the same things i do a new bpf statement where i load a",
    "start": "2228560",
    "end": "2235200"
  },
  {
    "text": "word from second data this time this is called number",
    "start": "2235200",
    "end": "2240960"
  },
  {
    "text": "so after doing the architecture check i don't care about the architecture anymore i load in the syscall number",
    "start": "2240960",
    "end": "2247119"
  },
  {
    "text": "and i check if that cisco number is equal to cis exactly",
    "start": "2247119",
    "end": "2254560"
  },
  {
    "text": "if it is i jump zero going to allow if not i go to kill",
    "start": "2254560",
    "end": "2260078"
  },
  {
    "text": "it's pretty much the same thing uh what you also see i have to update",
    "start": "2262160",
    "end": "2267680"
  },
  {
    "text": "this jump try and hit it there",
    "start": "2267680",
    "end": "2273440"
  },
  {
    "text": "this now also have to jump over these two new instructions",
    "start": "2273520",
    "end": "2278960"
  },
  {
    "text": "because i want to jump to kill and if i don't jump far enough i would end up",
    "start": "2280560",
    "end": "2286480"
  },
  {
    "text": "just checking what if whatever is in the register would be the same as cisex equi which is not interesting for me at all",
    "start": "2286480",
    "end": "2293359"
  },
  {
    "text": "and would be well it would be very interesting to see what happens",
    "start": "2293359",
    "end": "2299559"
  },
  {
    "text": "and we end up with a lot of these ppf jump statements",
    "start": "2301680",
    "end": "2308320"
  },
  {
    "text": "and this is not very nice to maintain this is a very very small bpf uh program",
    "start": "2308560",
    "end": "2315280"
  },
  {
    "text": "you saw what the program did it does it does nothing and at some point it's going to do more",
    "start": "2315280",
    "end": "2320880"
  },
  {
    "text": "for instance when you update glib c so need to add a new",
    "start": "2320880",
    "end": "2326880"
  },
  {
    "text": "syscall into this list so you can",
    "start": "2326880",
    "end": "2332160"
  },
  {
    "text": "add it at the bottom if you add it at the bottom every single jump on top of it",
    "start": "2332160",
    "end": "2338880"
  },
  {
    "text": "needs to be changed to accommodate for the new statement you could also add it at the top like",
    "start": "2338880",
    "end": "2344880"
  },
  {
    "text": "just after the architecture check then you only have to change and jump for the architecture check",
    "start": "2344880",
    "end": "2350960"
  },
  {
    "text": "but if that's a statement if that's a cisco you only do once",
    "start": "2350960",
    "end": "2356960"
  },
  {
    "text": "and this receive message is something you do 100 times a second",
    "start": "2356960",
    "end": "2363680"
  },
  {
    "text": "then you will have to evaluate that new syscall that you only use once for every",
    "start": "2363680",
    "end": "2368720"
  },
  {
    "text": "time you actually need to do receive message ordering hair matters you want to have the ones you actually",
    "start": "2368720",
    "end": "2374880"
  },
  {
    "text": "use frequently at the top and you're gonna mess this up",
    "start": "2374880",
    "end": "2381359"
  },
  {
    "text": "and if you don't mess this up one of your co-workers are going to mess this up",
    "start": "2381359",
    "end": "2386319"
  },
  {
    "text": "and we haven't even looked at checking arguments yet",
    "start": "2389839",
    "end": "2394480"
  },
  {
    "text": "so checking your arguments creates the same issue",
    "start": "2394880",
    "end": "2400078"
  },
  {
    "text": "so what you do for checking arguments is uh in this",
    "start": "2400400",
    "end": "2405760"
  },
  {
    "text": "very dumb scenario i check if the exit code i'm sending back is zero",
    "start": "2405760",
    "end": "2411520"
  },
  {
    "text": "so i only accept that we exit with a success if not i kill the program which is idiotic but",
    "start": "2411520",
    "end": "2417920"
  },
  {
    "text": "it illustrates the point uh so you check if it's exit group",
    "start": "2417920",
    "end": "2423359"
  },
  {
    "text": "if it is the cisco that you want to check the argument for you just continue and if not you jump",
    "start": "2423359",
    "end": "2428960"
  },
  {
    "text": "over the argument checking phase so when you do the argument checking you",
    "start": "2428960",
    "end": "2435040"
  },
  {
    "text": "have to load just as we saw with loading the syscall number and architecture",
    "start": "2435040",
    "end": "2440880"
  },
  {
    "text": "you have to load whatever argument you want to check into the register",
    "start": "2440880",
    "end": "2446400"
  },
  {
    "text": "in this case it's just the first argument and then you can compare that the same",
    "start": "2446400",
    "end": "2452240"
  },
  {
    "text": "way that you did regardless you check if the if the exit group was",
    "start": "2452240",
    "end": "2458720"
  },
  {
    "text": "zero if it is you jump 22 which i hope hits",
    "start": "2458720",
    "end": "2464640"
  },
  {
    "text": "allow we'll see when it runs hopefully and if it's not then we jump to 23 which",
    "start": "2464640",
    "end": "2472079"
  },
  {
    "text": "hopefully is skill or some error handling thing",
    "start": "2472079",
    "end": "2477280"
  },
  {
    "text": "now at this point you know you're at this is called exit group",
    "start": "2477760",
    "end": "2483359"
  },
  {
    "text": "which means you should always jump at this point like you can do multiple argument checks",
    "start": "2483359",
    "end": "2490160"
  },
  {
    "text": "you can check if it's in a range or a set of things or whatever but",
    "start": "2490160",
    "end": "2496160"
  },
  {
    "text": "if you're in if the syscall number is exit group you should never check if it's sent to because why would you",
    "start": "2496160",
    "end": "2504400"
  },
  {
    "text": "like i said this is going to be complicated to maintain it's going to break at certain intervals",
    "start": "2507440",
    "end": "2515280"
  },
  {
    "start": "2515000",
    "end": "2672000"
  },
  {
    "text": "so instead let's introduce libsec comp",
    "start": "2515280",
    "end": "2521200"
  },
  {
    "text": "libsec comp is a library that basically helps you write",
    "start": "2521520",
    "end": "2527680"
  },
  {
    "text": "these second filters and the way to do it is you create a",
    "start": "2527680",
    "end": "2533599"
  },
  {
    "text": "second filter and you give it an action which is the default action",
    "start": "2533599",
    "end": "2540880"
  },
  {
    "text": "basically you're telling secomp if no other rule has come in kill the program",
    "start": "2540880",
    "end": "2548680"
  },
  {
    "text": "so this is basically the same as the bottom one here if nothing else happens",
    "start": "2550720",
    "end": "2557760"
  },
  {
    "text": "jump to whatever this second breath kill is",
    "start": "2557760",
    "end": "2561920"
  },
  {
    "text": "then you do a second load to load that program into the kernel that creates the",
    "start": "2563599",
    "end": "2569040"
  },
  {
    "text": "binary binary application puts it into the kernel at this point you don't need it and the",
    "start": "2569040",
    "end": "2574720"
  },
  {
    "text": "whole side anymore so you release it let's just use your space memory",
    "start": "2574720",
    "end": "2581760"
  },
  {
    "text": "uh one big difference between this these three lines and i'm not sure eight",
    "start": "2581760",
    "end": "2588079"
  },
  {
    "text": "or something that we had for uh setting up the initial sec raw second",
    "start": "2588079",
    "end": "2594560"
  },
  {
    "text": "this does are the architecture check for you and it does it properly",
    "start": "2594560",
    "end": "2601599"
  },
  {
    "text": "compared to what i did so this is a step up",
    "start": "2601599",
    "end": "2609039"
  },
  {
    "text": "if you want to check a syscall with libsec comp",
    "start": "2610640",
    "end": "2615839"
  },
  {
    "text": "you add a rule to the context you created and you say i",
    "start": "2615839",
    "end": "2620880"
  },
  {
    "text": "want to allow scmp act allow exec ve",
    "start": "2620880",
    "end": "2627680"
  },
  {
    "text": "and you have zero cares for argument at this point we'll come back to this zero",
    "start": "2627760",
    "end": "2633359"
  },
  {
    "text": "now snmp sys also goes ahead and make sure you get",
    "start": "2633359",
    "end": "2639520"
  },
  {
    "text": "the correct cisco number depending on your architecture because you could be cross compiling and then",
    "start": "2639520",
    "end": "2645760"
  },
  {
    "text": "lib secump will take care of that for you",
    "start": "2645760",
    "end": "2651599"
  },
  {
    "text": "you also see here because at some point i actually added some architecture",
    "start": "2652079",
    "end": "2657440"
  },
  {
    "text": "changing code this is how you set an architecture for libsec comp",
    "start": "2657440",
    "end": "2663839"
  },
  {
    "text": "now this is a lot nicer than doing the exact same thing in raw secomp",
    "start": "2667040",
    "end": "2672720"
  },
  {
    "start": "2672000",
    "end": "2857000"
  },
  {
    "text": "and we end up with something like this here i basically just wrapped the second rule add into a allow lib second because",
    "start": "2672720",
    "end": "2679280"
  },
  {
    "text": "all of these do the same thing add it to the context with allow and zero arguments",
    "start": "2679280",
    "end": "2686920"
  },
  {
    "text": "uh it is very repetitive it's not like this is",
    "start": "2691200",
    "end": "2697280"
  },
  {
    "text": "interesting code to write it has to be written but it's really",
    "start": "2697280",
    "end": "2702319"
  },
  {
    "text": "boring but the nice thing about this is i can reorder this as much as i want to and no jumps will fail",
    "start": "2702319",
    "end": "2711119"
  },
  {
    "text": "neither me nor your co-worker will break the sandbox if you",
    "start": "2711680",
    "end": "2716720"
  },
  {
    "text": "just rearrange some stuff here or add a new syscall",
    "start": "2716720",
    "end": "2722000"
  },
  {
    "text": "if i want to check arguments with yeah so you still need to know about the cisco",
    "start": "2725440",
    "end": "2733039"
  },
  {
    "text": "yes that you need to do i'll show you actually how to how to find the cisco number",
    "start": "2743280",
    "end": "2748319"
  },
  {
    "text": "uh when i do the demo of this afterwards because yeah you need to you need to figure out what",
    "start": "2748319",
    "end": "2755520"
  },
  {
    "text": "syscalls you're using and to do that is well you get a list of",
    "start": "2755520",
    "end": "2762160"
  },
  {
    "text": "numbers and then you need to figure out because you could write the number directly here but that would be horrible",
    "start": "2762160",
    "end": "2768400"
  },
  {
    "text": "to maintain again uh so you need to find find out what",
    "start": "2768400",
    "end": "2774079"
  },
  {
    "text": "system call this is called number on your architecture corresponds to",
    "start": "2774079",
    "end": "2780240"
  },
  {
    "text": "now if we want to check arguments this is where this zero comes in",
    "start": "2784079",
    "end": "2790720"
  },
  {
    "text": "that zero means we have zero argument checks this one",
    "start": "2790720",
    "end": "2796160"
  },
  {
    "text": "means i have one argument check i can have i can have multiple argument checks",
    "start": "2796160",
    "end": "2801680"
  },
  {
    "text": "for the same argument so what i say here is for argument zero",
    "start": "2801680",
    "end": "2808319"
  },
  {
    "text": "the first argument i want to check if that is equal to zero",
    "start": "2808319",
    "end": "2815280"
  },
  {
    "text": "so this is with libsecomp it's very easy to check like a range because you can check if",
    "start": "2815280",
    "end": "2822160"
  },
  {
    "text": "argument zero is less than something and then check if argument zero is bigger than",
    "start": "2822160",
    "end": "2828000"
  },
  {
    "text": "something it's uh fairly trivial you just add two of these scmp a0 and then",
    "start": "2828000",
    "end": "2834880"
  },
  {
    "text": "change number one to two and then you're good",
    "start": "2834880",
    "end": "2839200"
  },
  {
    "text": "now one thing that came up for me when i was doing this is that a lot of these syscalls",
    "start": "2843520",
    "end": "2851520"
  },
  {
    "text": "they don't take numbers they take a string or a path or something",
    "start": "2851520",
    "end": "2858440"
  },
  {
    "start": "2857000",
    "end": "3169000"
  },
  {
    "text": "so how do i compare strings um",
    "start": "2859280",
    "end": "2865040"
  },
  {
    "text": "there are probably many technical reasons for why you can't",
    "start": "2865040",
    "end": "2869599"
  },
  {
    "text": "but the reason why you have like cannot write something that dereferences a",
    "start": "2870240",
    "end": "2875680"
  },
  {
    "text": "string is that you don't have the string value it's not copied to the kernel at the",
    "start": "2875680",
    "end": "2881359"
  },
  {
    "text": "point second runs so what you could do if you really",
    "start": "2881359",
    "end": "2886960"
  },
  {
    "text": "really want to check these strings you can have a static which has its own memory location that",
    "start": "2886960",
    "end": "2893760"
  },
  {
    "text": "you use all over your program and you compare the memory location you get to the",
    "start": "2893760",
    "end": "2899200"
  },
  {
    "text": "libsec comp with or just two sec comp with that memory location",
    "start": "2899200",
    "end": "2904800"
  },
  {
    "text": "of course if someone someone writes the same string and it's not using the same",
    "start": "2904800",
    "end": "2909920"
  },
  {
    "text": "static memory then there they will fail that won't be allowed",
    "start": "2909920",
    "end": "2916720"
  },
  {
    "text": "but generally just there's no real reason to",
    "start": "2917599",
    "end": "2923599"
  },
  {
    "text": "so let's see how uh lib second works so in this one i'm actually running",
    "start": "2925680",
    "end": "2931359"
  },
  {
    "text": "libsec comp as well it's this is not an exciting demo at all because it just doesn't do anything",
    "start": "2931359",
    "end": "2937839"
  },
  {
    "text": "so let's go in and change that uh so i have this file",
    "start": "2937839",
    "end": "2945920"
  },
  {
    "text": "and let's just remove one of these capcat i don't need capcat anymore",
    "start": "2949280",
    "end": "2957359"
  },
  {
    "text": "so i now remove the line i build it",
    "start": "2957359",
    "end": "2964319"
  },
  {
    "text": "which takes some time but not too much too much time luckily and i run it again",
    "start": "2965920",
    "end": "2972400"
  },
  {
    "text": "and as you see when i try to get the capabilities let's just get this a bit up i crash",
    "start": "2972400",
    "end": "2978880"
  },
  {
    "text": "see it's the exit code is 159 because i remove that line i can no longer run this program because",
    "start": "2978880",
    "end": "2985119"
  },
  {
    "text": "it's using a system call that is not allowed",
    "start": "2985119",
    "end": "2990240"
  },
  {
    "text": "now you want asked how do you figure out which system calls you're actually using",
    "start": "2990559",
    "end": "2995760"
  },
  {
    "text": "if you have a audit log on your system then that's where that comes up",
    "start": "2995760",
    "end": "3001040"
  },
  {
    "text": "or you could just check here now this",
    "start": "3001040",
    "end": "3007119"
  },
  {
    "text": "seriously i have a audit entry in my logs",
    "start": "3008000",
    "end": "3013839"
  },
  {
    "text": "it tells me that this application don't care about the whole path it's uh",
    "start": "3014960",
    "end": "3021280"
  },
  {
    "text": "mix stuff it gives me the actual uid and group id i'm running as the one from the initial",
    "start": "3021280",
    "end": "3027280"
  },
  {
    "text": "namespace because kernel doesn't care at this point and you see it got a signal 31 this is",
    "start": "3027280",
    "end": "3034160"
  },
  {
    "text": "the architecture i'm running on and this is the system call",
    "start": "3034160",
    "end": "3040680"
  },
  {
    "text": "so what you could do is you could take this system call copy paste it into your application",
    "start": "3041599",
    "end": "3047440"
  },
  {
    "text": "just use the number 125 but you would have no idea what system call that was",
    "start": "3047440",
    "end": "3052559"
  },
  {
    "text": "other thing you could do is google i did you could go in on google i'm not",
    "start": "3052559",
    "end": "3058880"
  },
  {
    "text": "sure do you have any tools for actually getting from the system call number to the system call",
    "start": "3058880",
    "end": "3064160"
  },
  {
    "text": "cisco are",
    "start": "3064160",
    "end": "3069039"
  },
  {
    "text": "maybe no okay i don't have that",
    "start": "3077680",
    "end": "3083160"
  },
  {
    "text": "okay yeah so what michael said you could use uh this tool a use is called i don't have it installed i'm not gonna find out",
    "start": "3088400",
    "end": "3095359"
  },
  {
    "text": "what it's actually name actually named in x but you could use that to get from the",
    "start": "3095359",
    "end": "3101680"
  },
  {
    "text": "system call number to the system called name and vice versa",
    "start": "3101680",
    "end": "3107520"
  },
  {
    "text": "and while developing this you should probably set it not to kill",
    "start": "3107520",
    "end": "3112800"
  },
  {
    "text": "you can set the you can set seccomp to allow everything but log errors",
    "start": "3112800",
    "end": "3119520"
  },
  {
    "text": "so second breath kill would end up in one audit log entry",
    "start": "3119520",
    "end": "3124559"
  },
  {
    "text": "so if you did that you have you you put in a second",
    "start": "3124559",
    "end": "3129680"
  },
  {
    "text": "program which just says kill everything you run it",
    "start": "3129680",
    "end": "3135040"
  },
  {
    "text": "with uh what's name of it again it's uh",
    "start": "3135040",
    "end": "3140079"
  },
  {
    "text": "let's this one should be second act log i",
    "start": "3140079",
    "end": "3145119"
  },
  {
    "text": "think then you have one entry for every time a system call is called",
    "start": "3145119",
    "end": "3152800"
  },
  {
    "text": "and denied so you would get every single system call your application uses in that the",
    "start": "3152800",
    "end": "3159200"
  },
  {
    "text": "path you're running for complex programs this is very complex",
    "start": "3159200",
    "end": "3164559"
  },
  {
    "text": "but it will get at least the parts you're actually taking",
    "start": "3164559",
    "end": "3169359"
  },
  {
    "text": "and it's kind of you have to use the audit log or or the logs because",
    "start": "3170400",
    "end": "3176800"
  },
  {
    "text": "you don't really know what system calls glibc does for you",
    "start": "3176800",
    "end": "3181838"
  },
  {
    "text": "just as simple as looking at ah this is far back when i make the pin",
    "start": "3182400",
    "end": "3188559"
  },
  {
    "text": "namespace i do fork fork is a system call but the glib c fork function doesn't use",
    "start": "3188559",
    "end": "3195680"
  },
  {
    "text": "fork it uses clone so",
    "start": "3195680",
    "end": "3201359"
  },
  {
    "text": "you would have to add clone and not fork even though it looks like you should add fork and there are multiple of these",
    "start": "3201359",
    "end": "3207359"
  },
  {
    "text": "open uses open at it's uh yeah so use those tools to figure out what",
    "start": "3207359",
    "end": "3213040"
  },
  {
    "text": "system calls you're actually using if you use log you will also see which system calls you're using a lot",
    "start": "3213040",
    "end": "3218240"
  },
  {
    "text": "because they will spam the log",
    "start": "3218240",
    "end": "3222440"
  },
  {
    "text": "uh [Music] now there are other tools you should",
    "start": "3227040",
    "end": "3232559"
  },
  {
    "text": "consider uh c groups i don't have time for today but michael",
    "start": "3232559",
    "end": "3238240"
  },
  {
    "text": "both talked to about it earlier today and had a full talk on it on nbc tech town last year",
    "start": "3238240",
    "end": "3244240"
  },
  {
    "text": "go and watch that s-linux as well there's some overlap",
    "start": "3244240",
    "end": "3249440"
  },
  {
    "text": "between s linux and seccomp but they can like",
    "start": "3249440",
    "end": "3254880"
  },
  {
    "text": "slns also does other stuff and they don't interfere with each other",
    "start": "3254880",
    "end": "3262040"
  },
  {
    "text": "and yeah that's all i have any questions yes yes",
    "start": "3264640",
    "end": "3272200"
  },
  {
    "text": "is",
    "start": "3288319",
    "end": "3291319"
  },
  {
    "text": "yeah so that's",
    "start": "3301920",
    "end": "3305400"
  },
  {
    "text": "uh generally you don't have to if you're not insane and try to for instance dockerize",
    "start": "3311520",
    "end": "3316559"
  },
  {
    "text": "chrome chrome is a beast someone's done this and added their own second filter to",
    "start": "3316559",
    "end": "3323040"
  },
  {
    "text": "docker to be able to contain res chrome it's yeah it's messy",
    "start": "3323040",
    "end": "3328160"
  },
  {
    "text": "uh in some cases you have to but oh now i have the well uh",
    "start": "3328160",
    "end": "3334640"
  },
  {
    "text": "let's just fix this so i can run my program again",
    "start": "3334640",
    "end": "3339040"
  },
  {
    "text": "no next build",
    "start": "3340319",
    "end": "3345280"
  },
  {
    "text": "the capabilities are these and i should have mentioned",
    "start": "3346720",
    "end": "3352240"
  },
  {
    "text": "you get all capabilities here but you should drop the ones you don't need the capabilities the program doesn't need",
    "start": "3352240",
    "end": "3359359"
  },
  {
    "text": "should be dropped and what docker does is it does all of this and you end up with this",
    "start": "3359359",
    "end": "3365359"
  },
  {
    "text": "capability set and then you use the cap thing api for docker to drop the capabilities",
    "start": "3365359",
    "end": "3372160"
  },
  {
    "text": "or just keep the capabilities you need not everything",
    "start": "3372160",
    "end": "3377839"
  },
  {
    "text": "yes but then i also wrote my application",
    "start": "3380079",
    "end": "3386079"
  },
  {
    "text": "inside docker presumably",
    "start": "3386079",
    "end": "3390160"
  },
  {
    "text": "you can restrict yourself further you can create a new second filter at it that",
    "start": "3395760",
    "end": "3402079"
  },
  {
    "text": "narrows you down but you can't add one that expands your access",
    "start": "3402079",
    "end": "3407280"
  },
  {
    "text": "i'm not sure what the rules are for multiple um",
    "start": "3407280",
    "end": "3411920"
  },
  {
    "text": "and the most restrictive action is the one that is performed",
    "start": "3412960",
    "end": "3417920"
  },
  {
    "text": "yeah like michael said uh just to repeat it for the ones of the stream or watching it later you can add multiple",
    "start": "3420079",
    "end": "3426240"
  },
  {
    "text": "second filters and they will all be run so you will be at the most restricted second rules",
    "start": "3426240",
    "end": "3435359"
  },
  {
    "text": "for child processes more questions",
    "start": "3435760",
    "end": "3441119"
  },
  {
    "text": "yes but it's not unlocked yet but i will i'll uh i'll send a link into the slack",
    "start": "3443440",
    "end": "3450640"
  },
  {
    "text": "there was a okay so yeah i'll make the code available and post it on slack so everyone has access",
    "start": "3451119",
    "end": "3456960"
  },
  {
    "text": "to it yes question about uh glmc functions and mapping this is calls because i assume",
    "start": "3456960",
    "end": "3463599"
  },
  {
    "text": "that in all scenarios you're not even controlling which dlc you're running on",
    "start": "3463599",
    "end": "3468799"
  },
  {
    "text": "correct shipping a generic application it will run using the glimpseu you of whatever destroy it ends up running on",
    "start": "3468799",
    "end": "3475280"
  },
  {
    "text": "yeah so in that case you're not even sure what cisco might be actually used when",
    "start": "3475280",
    "end": "3481520"
  },
  {
    "text": "your application runs yeah so the cisco numbers you need to add to your second filter",
    "start": "3481520",
    "end": "3487680"
  },
  {
    "text": "it's not necessarily the ones that are actually used on your system it might be something else on a different system",
    "start": "3487680",
    "end": "3492720"
  },
  {
    "text": "yeah so how do you figure all that out yeah so the to try and repeat the question uh",
    "start": "3492720",
    "end": "3500400"
  },
  {
    "text": "as an application developer you don't control what glibc version you're running on nglibc does a mapping from",
    "start": "3500400",
    "end": "3507119"
  },
  {
    "text": "the glibc function to actual syscalls and like i said that might break when you upgrade glibc",
    "start": "3507119",
    "end": "3514240"
  },
  {
    "text": "so how do you make a second filter that basically caters for upgrading glibc",
    "start": "3514240",
    "end": "3521520"
  },
  {
    "text": "without breaking all the time the way i said see it you have two options",
    "start": "3521520",
    "end": "3528079"
  },
  {
    "text": "one of them is to make a wider second filter that hopefully catches whatever you need",
    "start": "3528079",
    "end": "3534160"
  },
  {
    "text": "and the other one is to go back to this led preload thing",
    "start": "3534160",
    "end": "3540000"
  },
  {
    "text": "because this ld preload thing could be either made",
    "start": "3540000",
    "end": "3546160"
  },
  {
    "text": "specifically for your glibc version that uh",
    "start": "3546160",
    "end": "3551359"
  },
  {
    "text": "that enables whatever this application needs or it might be more fancy because",
    "start": "3551359",
    "end": "3557599"
  },
  {
    "text": "okay let's do this oh this",
    "start": "3557599",
    "end": "3562160"
  },
  {
    "text": "uh the the thing i did was i hijacked the main or the",
    "start": "3563359",
    "end": "3569760"
  },
  {
    "text": "hijacked main basically which means this sandbox can do whatever",
    "start": "3569760",
    "end": "3575599"
  },
  {
    "text": "it wants to",
    "start": "3575599",
    "end": "3578240"
  },
  {
    "text": "so it can take arguments so you can make it more generic you can",
    "start": "3580960",
    "end": "3587119"
  },
  {
    "text": "make a libsandbox.so that is more generic that basically takes its own set of arguments",
    "start": "3587119",
    "end": "3593440"
  },
  {
    "text": "swallows those and uses those to set up a filter that is specific to even this",
    "start": "3593440",
    "end": "3599119"
  },
  {
    "text": "machine so this lib sandbox.so doesn't have to be specific to the application as mine",
    "start": "3599119",
    "end": "3605040"
  },
  {
    "text": "is here it can do whatever it wants so it can be very configurable and you can configure it",
    "start": "3605040",
    "end": "3611520"
  },
  {
    "text": "that way so that way it's the way you start application it decides how it's narrowed down",
    "start": "3611520",
    "end": "3618960"
  },
  {
    "text": "just to say one other thing to your question what i say people is your",
    "start": "3620079",
    "end": "3625119"
  },
  {
    "text": "bp filter is just like any other code that you write it needs that unit test it needs to be part of your continuous",
    "start": "3625119",
    "end": "3631119"
  },
  {
    "text": "integration testing so if you do do that upgrade you find out about the break it's not a piece of code you write once",
    "start": "3631119",
    "end": "3637119"
  },
  {
    "text": "and yeah and i'm thinking since this limp sandbox is basically the",
    "start": "3637119",
    "end": "3643359"
  },
  {
    "text": "generic code that runs in front of your main it would be really nice if you could introspect on glmc and ask it like",
    "start": "3643359",
    "end": "3649359"
  },
  {
    "text": "if i call open which cisco would you and then dynamically create your vpn filter from",
    "start": "3649359",
    "end": "3656880"
  },
  {
    "text": "so a comment from michael is you could also like these bpf programs are not",
    "start": "3661680",
    "end": "3667760"
  },
  {
    "text": "right only things they they're alive you should have unit tests for them you should you should",
    "start": "3667760",
    "end": "3673680"
  },
  {
    "text": "make sure they're up to date so that when you upgrade your glibc your unit test will catch that",
    "start": "3673680",
    "end": "3680079"
  },
  {
    "text": "and then you fix that",
    "start": "3680079",
    "end": "3683799"
  },
  {
    "text": "any other questions okay and thank you",
    "start": "3686480",
    "end": "3691910"
  },
  {
    "text": "[Applause]",
    "start": "3691910",
    "end": "3699719"
  }
]