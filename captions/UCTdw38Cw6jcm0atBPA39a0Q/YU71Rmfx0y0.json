[
  {
    "text": "all right hi everyone thank you for coming to my session I know everybody's tired it was a long day I hope everybody",
    "start": "1319",
    "end": "7480"
  },
  {
    "text": "learned something new today and I'm going to cover the Azure Cosmos TV with you today uh I'm going to try to share",
    "start": "7480",
    "end": "15480"
  },
  {
    "text": "some of the tips and tricks I learn uh from the projects I worked on so our",
    "start": "15480",
    "end": "20519"
  },
  {
    "text": "agenda is going to be uh we are going to start with the physical partitions we are going to move to the connection",
    "start": "20519",
    "end": "25840"
  },
  {
    "text": "types we are going to look at the SDK types and some of the tips I can give you out there there's a caching option",
    "start": "25840",
    "end": "32520"
  },
  {
    "text": "it might be useful for you and it might actually save you a lot of money if you are reading the same data again and again and we will end the session with",
    "start": "32520",
    "end": "40280"
  },
  {
    "text": "the indexing uh since Cosmos T is a database at the end we are going to check out the indexing too so before I",
    "start": "40280",
    "end": "46760"
  },
  {
    "text": "start I guess let me speak about myself my name is Assan saan and I am from United States I live in Cleveland Ohio",
    "start": "46760",
    "end": "54280"
  },
  {
    "text": "and uh I'm a data platform MVP that's my six years and I'm proud and uh very uh",
    "start": "54280",
    "end": "60280"
  },
  {
    "text": "happy to be member of the group uh I'm the developer for the cosmos CB the SQL studio uh I hope some of you actually",
    "start": "60280",
    "end": "67560"
  },
  {
    "text": "using it out there I'm the only developer out there right now uh but we have a good number of users and if you",
    "start": "67560",
    "end": "74840"
  },
  {
    "text": "have any kind of feedback please uh let me know later I'll be more than happy to kind of uh share if we will have time at",
    "start": "74840",
    "end": "81000"
  },
  {
    "text": "the end I can maybe demo that for you uh rather than that if you will have any questions later please follow me from",
    "start": "81000",
    "end": "88079"
  },
  {
    "text": "the LinkedIn or the Twitter I'm or X I guess now uh I will be more than happy to answer any of your questions out",
    "start": "88079",
    "end": "94399"
  },
  {
    "text": "there later uh so let's talk about the physical partition well when we say",
    "start": "94399",
    "end": "100200"
  },
  {
    "text": "physical partition really is the cosmos CB server and I guess physical partition",
    "start": "100200",
    "end": "106079"
  },
  {
    "text": "is the fancy name so we have logical partitions which you have some rights to change in physical partition there's not",
    "start": "106079",
    "end": "111439"
  },
  {
    "text": "that much you can really do but it's important to know these two numbers you see here so Cosmos CB uh I'm really kind",
    "start": "111439",
    "end": "119119"
  },
  {
    "text": "of comparing that to maybe like a restaurant here so when you open like one server it's like almost like you",
    "start": "119119",
    "end": "124159"
  },
  {
    "text": "open your restaurant and it gives you two numbers one is the 50 gig that's the storage limit that can one server can",
    "start": "124159",
    "end": "132319"
  },
  {
    "text": "actually handle and also 10,000 request units that is the horsepower uh that",
    "start": "132319",
    "end": "137599"
  },
  {
    "text": "actually it can give you per second so in here uh when you start to actually",
    "start": "137599",
    "end": "143959"
  },
  {
    "text": "have more traffic and more storage for example if you're going to start to get close to the 50 gig data here or you're",
    "start": "143959",
    "end": "150000"
  },
  {
    "text": "going to have a web application which is very uh you know busy you're going to get close to 10,000 uh rather than like",
    "start": "150000",
    "end": "156640"
  },
  {
    "text": "a SQL Server which you might need to create maybe another floor on your current restaurant or try to make it",
    "start": "156640",
    "end": "162319"
  },
  {
    "text": "bigger well Cosmos TV Works a different way so in uh Cosmos TV it franchise it",
    "start": "162319",
    "end": "168640"
  },
  {
    "text": "so you start to open different restaurant in other places so that's how",
    "start": "168640",
    "end": "173720"
  },
  {
    "text": "uh you don't have any limit with the storage or the horsepower because you know if you need it it will give you",
    "start": "173720",
    "end": "179840"
  },
  {
    "text": "another restaurant or another server somewhere else so that is pretty important to know",
    "start": "179840",
    "end": "185480"
  },
  {
    "text": "because the data you see here in the different kind of uh data servers are not replicated data that is distributed",
    "start": "185480",
    "end": "191920"
  },
  {
    "text": "data uh in other case each of them has different data so it's very important for you to kind of know where the data",
    "start": "191920",
    "end": "198640"
  },
  {
    "text": "is so you can send that request to only one server not all the servers you have so that is pretty important so let's",
    "start": "198640",
    "end": "205560"
  },
  {
    "text": "actually look at one example here let's say we are uh saving orders and we pick",
    "start": "205560",
    "end": "212280"
  },
  {
    "text": "the customer ID as our partition key uh and looks like we have 2002 gig of data",
    "start": "212280",
    "end": "219720"
  },
  {
    "text": "so and also we have the 10,000 request units so now by just looking at the",
    "start": "219720",
    "end": "224959"
  },
  {
    "text": "numbers you can easily create a diagram uh we have 202 gig so we are kind of",
    "start": "224959",
    "end": "230879"
  },
  {
    "text": "handling like five servers here uh also we know the 10,000 request units that's what we are paying for uh that means",
    "start": "230879",
    "end": "237840"
  },
  {
    "text": "that that 10,000 is going to get divided uh by the number of servers you have so that's really we can kind of uh create",
    "start": "237840",
    "end": "244560"
  },
  {
    "text": "this diagram without knowing anything else by just knowing those two numbers 50 gig and 10,000 per",
    "start": "244560",
    "end": "250200"
  },
  {
    "text": "server uh also it looks like we did a good job balancing the storage because the storage per server looks very",
    "start": "250200",
    "end": "256440"
  },
  {
    "text": "similar to each other and customer ID looks like that's a great partition key",
    "start": "256440",
    "end": "261720"
  },
  {
    "text": "and 10,000 request units per second is giving us 500 qu like all the numbers",
    "start": "261720",
    "end": "267000"
  },
  {
    "text": "you see out there uh per second so that's pretty busy application and most of the queries we",
    "start": "267000",
    "end": "273400"
  },
  {
    "text": "have looks like using the customer ID so looks like our developer was uh learning a lot about the partition keys so they",
    "start": "273400",
    "end": "280639"
  },
  {
    "text": "did a good job so probably developer is feeling really good in this case manager",
    "start": "280639",
    "end": "285800"
  },
  {
    "text": "should be happy and everything is working fine unfortunately that's not the only I",
    "start": "285800",
    "end": "291440"
  },
  {
    "text": "guess the problem uh you might have so you might be in this case everything might be working fine and you know you",
    "start": "291440",
    "end": "297240"
  },
  {
    "text": "might say okay you know let's try to use the cosmos a little bit more maybe for different projects uh maybe we have the orders uh",
    "start": "297240",
    "end": "304800"
  },
  {
    "text": "container right now a new project comes up and right now as you can see you need the customer ID everything is coming up",
    "start": "304800",
    "end": "310759"
  },
  {
    "text": "with the customer ID maybe you want to see all the products per order that",
    "start": "310759",
    "end": "315919"
  },
  {
    "text": "means you're going to have another kind of project coming up and we are going to use the product ID rather than the",
    "start": "315919",
    "end": "321319"
  },
  {
    "text": "customer ID so in that case we have a problem here because whenever we start",
    "start": "321319",
    "end": "326440"
  },
  {
    "text": "to actually run this query in the same uh qu container what's going to actually happen here is we are going to be in",
    "start": "326440",
    "end": "332680"
  },
  {
    "text": "trouble with this project and the other project because well we are not using the right partition key for the orders",
    "start": "332680",
    "end": "339919"
  },
  {
    "text": "collection then you know this is going to start to actually cost a lot of money and probably developer who cre this one",
    "start": "339919",
    "end": "346479"
  },
  {
    "text": "now if you do this in for example SQL Server you can just put an index on the customer ID it might give you an okay",
    "start": "346479",
    "end": "351960"
  },
  {
    "text": "you know like performance but in here you are in trouble because you are using a collection here which is actually",
    "start": "351960",
    "end": "358400"
  },
  {
    "text": "developed specifically for the orders so when this happens when you get the bill",
    "start": "358400",
    "end": "363440"
  },
  {
    "text": "you're going to probably well surprised about it because there's a lot going on here and probably this actually uh broke",
    "start": "363440",
    "end": "371319"
  },
  {
    "text": "the other uh project I showed you before well because probably you don't have enough request units for the orders",
    "start": "371319",
    "end": "377400"
  },
  {
    "text": "through write and you might need to kind of change your request units threshold to a higher number here so what do we do",
    "start": "377400",
    "end": "384080"
  },
  {
    "text": "here that's one of the most uh I guess the questions I get and most problems happens usually",
    "start": "384080",
    "end": "391120"
  },
  {
    "text": "uh we have the change feed function in Cosmos DB in our case what we can actually do here is so we already have",
    "start": "391120",
    "end": "398000"
  },
  {
    "text": "the orders collection our part partition key is the customer ID so that one is",
    "start": "398000",
    "end": "403160"
  },
  {
    "text": "working fine uh the one that we are having problem is the different partition key which is the product ID so",
    "start": "403160",
    "end": "409599"
  },
  {
    "text": "in this case what we are going to do we are going to create another collection uh let's call that orders uh under",
    "start": "409599",
    "end": "416000"
  },
  {
    "text": "product so all we need to do here is we need to sync the data we are really duplicating the data in two places here",
    "start": "416000",
    "end": "423440"
  },
  {
    "text": "and depending what we are going to try to do we can go and hit to the orders collection and get our data or we go and",
    "start": "423440",
    "end": "430440"
  },
  {
    "text": "get the data from the orders underscore product uh and change feed is going to be able to uh you know uh duplicate our",
    "start": "430440",
    "end": "438080"
  },
  {
    "text": "data automatically here so the change feed is very close to the CDC in SQL Server if you are familiar with that",
    "start": "438080",
    "end": "443800"
  },
  {
    "text": "when a data changes uh change feed tracks that and change feed is available in the no SQL API Cassandra API",
    "start": "443800",
    "end": "451319"
  },
  {
    "text": "API and Gremlin API uh you can actually get this changes",
    "start": "451319",
    "end": "456360"
  },
  {
    "text": "in many ways I prefer the Azure function because it's already in Cloud Azure Cosmos in Cloud so it's much easier to",
    "start": "456360",
    "end": "462280"
  },
  {
    "text": "set up uh with the Azure function but if you want you can write an SD can you can do that with your own code if you like",
    "start": "462280",
    "end": "469039"
  },
  {
    "text": "uh so whenever data is going to change in our case a new order is going to come in and Azure function is going to get",
    "start": "469039",
    "end": "474919"
  },
  {
    "text": "trigger in that case you I mean right now you know you have the order ID so you can get all the information and take",
    "start": "474919",
    "end": "481319"
  },
  {
    "text": "that information and do anything you like in our case we are going to duplicate that data in a different uh",
    "start": "481319",
    "end": "487039"
  },
  {
    "text": "collection so in our case but don't forget we have that insert charge out there so that's not going to be free",
    "start": "487039",
    "end": "492919"
  },
  {
    "text": "that insert every time you're going to order something uh that orders under product that's going to be an insert",
    "start": "492919",
    "end": "498520"
  },
  {
    "text": "charge so you kind of need to plan for that to it can be surprise for later so",
    "start": "498520",
    "end": "503879"
  },
  {
    "text": "in uh our case if we have the customer ID we are going to go and hit the orders",
    "start": "503879",
    "end": "509039"
  },
  {
    "text": "and if have the product ID we are going to go and hit the orders under product uh this might be the cheapest way to fix",
    "start": "509039",
    "end": "515039"
  },
  {
    "text": "this problem because we are just creating a view in here really and you are fixing the problem by storage and in",
    "start": "515039",
    "end": "520399"
  },
  {
    "text": "cloud storage is much cheaper so if you can fix the problem with the cheaper in here that will be the best way to handle",
    "start": "520399",
    "end": "526680"
  },
  {
    "text": "this problem also we have a point read function in Cosmos CV Point read is the",
    "start": "526680",
    "end": "534600"
  },
  {
    "text": "fastest and cheapest way to read data uh you can read the data uh by Point read",
    "start": "534600",
    "end": "541440"
  },
  {
    "text": "or query when you read uh the data by the query you are actually running an execution plan that's why is when you",
    "start": "541440",
    "end": "548480"
  },
  {
    "text": "look at the ru charge here it's almost like three times uh more than Point read",
    "start": "548480",
    "end": "554040"
  },
  {
    "text": "uh but Point read uh you must have the partition key and the document ID for it",
    "start": "554040",
    "end": "559560"
  },
  {
    "text": "to work uh in the query is highly recommended to have the partition key uh",
    "start": "559560",
    "end": "565560"
  },
  {
    "text": "but you don't have to and you don't have to do anything with the ID so if you have a 1 kilobyte data model that will",
    "start": "565560",
    "end": "572920"
  },
  {
    "text": "cost you one Ru with Point read and it will cost at least 2.3 or more uh in the",
    "start": "572920",
    "end": "579600"
  },
  {
    "text": "query so whenever you are architecting your project you want to be sure that even you don't use it you want to be",
    "start": "579600",
    "end": "586079"
  },
  {
    "text": "sure that you have the partition key and ID available in somewhere maybe you hide it somewhere under the web uh",
    "start": "586079",
    "end": "591680"
  },
  {
    "text": "application maybe you have a grid out there and you can just hide partition can include ID in under each row when",
    "start": "591680",
    "end": "598480"
  },
  {
    "text": "somebody clicks on that you can easily go and actually trigger the point read rather than the query that will make",
    "start": "598480",
    "end": "603880"
  },
  {
    "text": "things much cheaper and affordable in Cosmos DB so the only uh I guess you",
    "start": "603880",
    "end": "609279"
  },
  {
    "text": "don't see the point read that much because there's no way to run the point read in Azure portal right now so you",
    "start": "609279",
    "end": "615200"
  },
  {
    "text": "can run the query from anywhere but the point read you have to run that from the SDK so that's why you don't probably see",
    "start": "615200",
    "end": "621600"
  },
  {
    "text": "it that much but it's available out there and you can do that as as long as you have the partitioning key and include ID is available",
    "start": "621600",
    "end": "629680"
  },
  {
    "text": "next uh we are going to look at the connections so there are many different ways to actually connect Cosmos CB uh",
    "start": "629680",
    "end": "636160"
  },
  {
    "text": "the most basic one and most common one is the Gateway mode uh Gateway mode is available uh in SDK 2 and three and it's",
    "start": "636160",
    "end": "644160"
  },
  {
    "text": "default connection for the sdk2 so we really like there's a server",
    "start": "644160",
    "end": "650480"
  },
  {
    "text": "between your application and the cosmos CB and that creates like a one network",
    "start": "650480",
    "end": "656760"
  },
  {
    "text": "Hub but it makes things a little bit easier especially if you have like firewall uh strict firewall rules you",
    "start": "656760",
    "end": "662399"
  },
  {
    "text": "don't need to worry about trying to open the IP range or the ports here because everything in the Gateway mode as you",
    "start": "662399",
    "end": "668160"
  },
  {
    "text": "can see it uses the https and DNS endpoint so it should be pretty easy to",
    "start": "668160",
    "end": "673600"
  },
  {
    "text": "call and get the data in this way without kind of going to your it department and try to you know uh change",
    "start": "673600",
    "end": "679800"
  },
  {
    "text": "the IP addresses or the firewall settings so uh there are a couple of things that you need to know here uh",
    "start": "679800",
    "end": "686360"
  },
  {
    "text": "first of all that server is free uh but because of that you share that server",
    "start": "686360",
    "end": "691480"
  },
  {
    "text": "with other a Azure Cosmos TB customers uh Cosmos TB is available to",
    "start": "691480",
    "end": "696639"
  },
  {
    "text": "kind of figure out who's you know what resources uh that server is using so you don't have to worry about it but that's",
    "start": "696639",
    "end": "702440"
  },
  {
    "text": "something to kind of uh know also let's in this case let's say we have two",
    "start": "702440",
    "end": "707639"
  },
  {
    "text": "companies two different companies One is using the Monga API other one is using the SQL API they are using the same",
    "start": "707639",
    "end": "713399"
  },
  {
    "text": "server here uh just like the web browser you know whenever you try to open uh",
    "start": "713399",
    "end": "718480"
  },
  {
    "text": "ports or the open connections to the web applications you know there's a limit like 50 connections if you want or your",
    "start": "718480",
    "end": "724680"
  },
  {
    "text": "application is really busy you can actually overwrite that number uh for Cosmos CB so in that case all you have",
    "start": "724680",
    "end": "730920"
  },
  {
    "text": "to do here is in the documents clients connection policy and the max connection",
    "start": "730920",
    "end": "736199"
  },
  {
    "text": "limit it can go up to 1,000 but I'm not I don't recommend going to the 1,000",
    "start": "736199",
    "end": "741720"
  },
  {
    "text": "because that might be too much depending on the resources of your uh server but you can easily change the connections uh",
    "start": "741720",
    "end": "748240"
  },
  {
    "text": "in the same time connections to Cosmos TV by changing that second one which is the recommended",
    "start": "748240",
    "end": "755160"
  },
  {
    "text": "way is the drag way so in the direct uh connection we are using the TCP and we",
    "start": "755160",
    "end": "760959"
  },
  {
    "text": "are using TLS so probably you are need to go to your it department and change the you know the the settings for your",
    "start": "760959",
    "end": "768639"
  },
  {
    "text": "firewall for this or to open the ports for it to work in here as you can see we",
    "start": "768639",
    "end": "774000"
  },
  {
    "text": "don't have a a network hop anymore and everything should be much faster uh but",
    "start": "774000",
    "end": "779720"
  },
  {
    "text": "in the same time uh don't forget they have some good resources for your SDK wherever it lies because right now you",
    "start": "779720",
    "end": "785600"
  },
  {
    "text": "know SDK is the one which needs to figure out which database as what data in before the Gateway server was the one",
    "start": "785600",
    "end": "792519"
  },
  {
    "text": "which is handling that now that responsibility is going to be your sdks and this is available only in net",
    "start": "792519",
    "end": "798839"
  },
  {
    "text": "and Java uh for now uh if you are in using the sdk2 you can easily change",
    "start": "798839",
    "end": "804839"
  },
  {
    "text": "your connection mode to direct mode uh by just overriding the cosmos client uh",
    "start": "804839",
    "end": "811680"
  },
  {
    "text": "easily we have one more uh which is the dedicated Gateway mode I think that kind",
    "start": "811680",
    "end": "816800"
  },
  {
    "text": "of explains what it is that's your server you are not sharing that so you",
    "start": "816800",
    "end": "822000"
  },
  {
    "text": "might say that well why do I need that because you are not you know uh actually",
    "start": "822000",
    "end": "827360"
  },
  {
    "text": "sharing that that means that you have to actually pay for it and depending on your application traffic uh you have",
    "start": "827360",
    "end": "833160"
  },
  {
    "text": "three options you have uh small medium and large so in this case you are not",
    "start": "833160",
    "end": "838800"
  },
  {
    "text": "Shar in the server with anyone and uh by doing that really Cosmos TB actually",
    "start": "838800",
    "end": "844880"
  },
  {
    "text": "gives you some more options or features to use uh the first option actually they",
    "start": "844880",
    "end": "849920"
  },
  {
    "text": "gave with this is the caching so if your application is uh reading the same data",
    "start": "849920",
    "end": "856600"
  },
  {
    "text": "again and again or your data doesn't change that much well by cach doing the",
    "start": "856600",
    "end": "861800"
  },
  {
    "text": "caching you can actually save a lot of uh our request units which means money",
    "start": "861800",
    "end": "867959"
  },
  {
    "text": "so in this case as you can see this works only in session and eventual consensus levels you can easily",
    "start": "867959",
    "end": "875160"
  },
  {
    "text": "overwrite your uh transaction so your database doesn't have to be like for example session consisteny you can run",
    "start": "875160",
    "end": "881560"
  },
  {
    "text": "your query in session uh in that case so in here we have an application try to",
    "start": "881560",
    "end": "888199"
  },
  {
    "text": "read or Point read the data uh it goes to our server dedicated server and",
    "start": "888199",
    "end": "893560"
  },
  {
    "text": "dedicated server gets the data back and you pay some kind of requests for the text number when you send the same same",
    "start": "893560",
    "end": "901759"
  },
  {
    "text": "thing again next time well this time it cost you zero request units so as I say",
    "start": "901759",
    "end": "907320"
  },
  {
    "text": "before that can save a lot of money if you are reading the same data or your data doesn't change that much so how do",
    "start": "907320",
    "end": "913920"
  },
  {
    "text": "we make that work uh first of all your SDK needs to be 3.2.1 or later and you must need to",
    "start": "913920",
    "end": "922720"
  },
  {
    "text": "first uh go and configure the dedicated Gateway server so I'm not sure if you",
    "start": "922720",
    "end": "928040"
  },
  {
    "text": "can see it here but there is right here you have to go and actually pick the size of the server you",
    "start": "928040",
    "end": "935600"
  },
  {
    "text": "need it's going to be low medium or high uh pick it wisely because you",
    "start": "935600",
    "end": "941040"
  },
  {
    "text": "cannot change it later you can drop it and create a new one but just pick it wisely because you cannot make a small",
    "start": "941040",
    "end": "946079"
  },
  {
    "text": "one uh medium later for example uh when your server becomes available then under the keys you will",
    "start": "946079",
    "end": "953600"
  },
  {
    "text": "see two more connection strings and those will be the dedicated connection uh strings for your server so all you",
    "start": "953600",
    "end": "959199"
  },
  {
    "text": "have to do is just take that and put it in your application to use that so if",
    "start": "959199",
    "end": "964360"
  },
  {
    "text": "you look at the code how that thing actually works here as you can see if you're in sdk2 or SDK 3 in SDK 3 is",
    "start": "964360",
    "end": "971440"
  },
  {
    "text": "connection mode to the default one is the direct so you have to actually overwrite that and make that Gateway",
    "start": "971440",
    "end": "977519"
  },
  {
    "text": "first uh then in our request options as you can see I'm not sure what your",
    "start": "977519",
    "end": "983040"
  },
  {
    "text": "database consistenly but I want to be sure that uh this is going to get cach so you can make the session or eventual",
    "start": "983040",
    "end": "990720"
  },
  {
    "text": "uh that's one of the requirements for caching and also you have to tell how long this needs to get cash and in my",
    "start": "990720",
    "end": "998120"
  },
  {
    "text": "case it's 30 minutes I'm going to cat this data so in next 30 minutes same query whatever I'm passing here is not",
    "start": "998120",
    "end": "1004880"
  },
  {
    "text": "going to cost me any money uh from the cosmos DB uh bypass integrated cash is",
    "start": "1004880",
    "end": "1010440"
  },
  {
    "text": "new I believe it's in preview I'm not sure public or pre private preview but by just making that true if something is",
    "start": "1010440",
    "end": "1017000"
  },
  {
    "text": "Cash you are really forcing to go and hit to the database even is catched uh in some cases you can use",
    "start": "1017000",
    "end": "1024720"
  },
  {
    "text": "that so in my case uh as you can see my first time I returned 592 posts in here",
    "start": "1025000",
    "end": "1031798"
  },
  {
    "text": "and it cost me 32.25 request units next time when I run it well next 30 minutes",
    "start": "1031799",
    "end": "1037640"
  },
  {
    "text": "that's going to be zero so as you can see you can really save uh a good number of requestments",
    "start": "1037640",
    "end": "1044720"
  },
  {
    "text": "here next one is let's talk about the cosmos cbsc case so as I said before we",
    "start": "1045199",
    "end": "1051320"
  },
  {
    "text": "have the data and data is distributed all over the place now if you have any kind of aggregation any kind of order by",
    "start": "1051320",
    "end": "1058000"
  },
  {
    "text": "or if you are trying to find maybe average of the ages for example well as I said before your data is distributed",
    "start": "1058000",
    "end": "1064520"
  },
  {
    "text": "so the server one has no idea what server two has so how are you going to group buy how are you going to order Buy",
    "start": "1064520",
    "end": "1070280"
  },
  {
    "text": "in here so all the pressure here actually goes to your sdks because SDK is the central place all that data",
    "start": "1070280",
    "end": "1076600"
  },
  {
    "text": "actually comes in so in my case I look at the select top 10 uh and I order by",
    "start": "1076600",
    "end": "1081919"
  },
  {
    "text": "The View count so all the data is going to come into my SDK and SDK is the one which is going to actually make all that",
    "start": "1081919",
    "end": "1088280"
  },
  {
    "text": "aggregation and give you the data in this case I think there are like 10 servers here you're actually receiving",
    "start": "1088280",
    "end": "1095200"
  },
  {
    "text": "well 100 docent 100 documents here but SDK is going to display only 10 so all",
    "start": "1095200",
    "end": "1101440"
  },
  {
    "text": "that uh job that SDK is going to do it can be you know expensive so you want to",
    "start": "1101440",
    "end": "1106880"
  },
  {
    "text": "be sure that you have enough resources whereever the SDK actually lives because there's going to be all kind of 4 loops and all kind of memories going to need",
    "start": "1106880",
    "end": "1113400"
  },
  {
    "text": "to make all this work so if you look at actually the uh",
    "start": "1113400",
    "end": "1118600"
  },
  {
    "text": "this is the JavaScript SDK from the cosmos CB as you can see we have the query info data uh out there and it",
    "start": "1118600",
    "end": "1125159"
  },
  {
    "text": "actually senses what you have so in our case this is our query and that query is",
    "start": "1125159",
    "end": "1130320"
  },
  {
    "text": "getting Rewritten by the SDK to make it easy when the data comes back uh it can",
    "start": "1130320",
    "end": "1135880"
  },
  {
    "text": "make it easy to kind of order by or find the data it needs so as you can see it senses I have a select top 10 here and",
    "start": "1135880",
    "end": "1145200"
  },
  {
    "text": "also I have an order byy so depending what you have out there uh SDK actually rewrites your",
    "start": "1145200",
    "end": "1152520"
  },
  {
    "text": "query if you are using the net SDK there are a couple of things you really need",
    "start": "1152520",
    "end": "1157600"
  },
  {
    "text": "to know the first one you want to be sure that your application is in 64bit whenever you create a new project",
    "start": "1157600",
    "end": "1164559"
  },
  {
    "text": "usually it goes with 32bit or any CPU you want to be sure that it's going to be 64 bit because that file you see out",
    "start": "1164559",
    "end": "1171000"
  },
  {
    "text": "there the service interrupt. dll is available only in 64-bit uh",
    "start": "1171000",
    "end": "1176080"
  },
  {
    "text": "Solutions so that one is pretty important because whenever you run a query you kind of need to create a a",
    "start": "1176080",
    "end": "1182200"
  },
  {
    "text": "query plan and if you have the service interrupt D it can do that locally so you are really saving one request to",
    "start": "1182200",
    "end": "1188360"
  },
  {
    "text": "Cosmos TB uh for that so if you have in 32bit it needs to call Cosmos TB for that uh next one is the default Trace",
    "start": "1188360",
    "end": "1195960"
  },
  {
    "text": "listener uh you want to be sure that you disabled that in production because it can do kind of bottlenecks in the",
    "start": "1195960",
    "end": "1201760"
  },
  {
    "text": "production uh also the garbage collection you want to be sure that you use the server mode not the workstation",
    "start": "1201760",
    "end": "1207480"
  },
  {
    "text": "mode uh that can create problems too for you and if you are doing any kind of testing uh in Cosmos TB and if your",
    "start": "1207480",
    "end": "1215360"
  },
  {
    "text": "request unit is higher well the website says 50,000 but I would recommend 40,000 or higher you want to probably use",
    "start": "1215360",
    "end": "1222280"
  },
  {
    "text": "multiple servers or the multiple uh to actually hit the cosmos TB because one computer is not going to be you know",
    "start": "1222280",
    "end": "1228720"
  },
  {
    "text": "able to handle that 40 50,000 request unit or higher you are going to end up with you know uh 429 or all kind of",
    "start": "1228720",
    "end": "1236520"
  },
  {
    "text": "problems when Cosmos CB can actually handle it those errors actually happens because of your uh server not the cosmos",
    "start": "1236520",
    "end": "1245120"
  },
  {
    "text": "CB next one we are going to look at the stream API here stream API is available",
    "start": "1245120",
    "end": "1250200"
  },
  {
    "text": "in SDK 3 and it makes kind of uh the job much easier uh if you compare to sdk2",
    "start": "1250200",
    "end": "1257520"
  },
  {
    "text": "here for example in sdk2 we have the serialize and deserialize every time we get data from the cosmos DP uh so in the",
    "start": "1257520",
    "end": "1266080"
  },
  {
    "text": "SDK three if you use a stream API you don't need to do like this uh two steps",
    "start": "1266080",
    "end": "1271320"
  },
  {
    "text": "anymore and you get the data and just return it as it is to your uh client so",
    "start": "1271320",
    "end": "1276799"
  },
  {
    "text": "if you look at the details little bit here for example that's the sdk2 and most of the people are using this uh",
    "start": "1276799",
    "end": "1283880"
  },
  {
    "text": "this works if you have the partition key or part if you don't have the partition key this works for both",
    "start": "1283880",
    "end": "1289240"
  },
  {
    "text": "uh as you can see we are actually running this query here and every time it looks like we are returning list of",
    "start": "1289240",
    "end": "1296480"
  },
  {
    "text": "sales so every time you get you create that sale object really you are doing",
    "start": "1296480",
    "end": "1301559"
  },
  {
    "text": "the civilization here and when you are done with this you need to return this problem with as a Json object so that's",
    "start": "1301559",
    "end": "1307600"
  },
  {
    "text": "the distalization you need to do so that's like two steps you are doing every time uh in the Stream we don't",
    "start": "1307600",
    "end": "1315039"
  },
  {
    "text": "have to do that anymore but I guess the catch here is you must have the partition key so you cannot have the",
    "start": "1315039",
    "end": "1321279"
  },
  {
    "text": "cross partition queries with stream uh but if you have the partition key this makes things much easier here because",
    "start": "1321279",
    "end": "1328360"
  },
  {
    "text": "you as you can see we are taking the data as Json and returning as Json here so everything much uh is much faster and",
    "start": "1328360",
    "end": "1337320"
  },
  {
    "text": "easier next one is document client document client is really the uh the",
    "start": "1337760",
    "end": "1344240"
  },
  {
    "text": "door I guess going to the Cosmos TV you want to be sure that you are going to",
    "start": "1344240",
    "end": "1349279"
  },
  {
    "text": "use a Singleton uh whenever you create the document client the last thing you want to do is you want to create the",
    "start": "1349279",
    "end": "1355039"
  },
  {
    "text": "document client every time before you call Cosmos CB uh main reason for that",
    "start": "1355039",
    "end": "1360559"
  },
  {
    "text": "is let's actually see what happens when you initialize the document client the",
    "start": "1360559",
    "end": "1365640"
  },
  {
    "text": "first thing is going to happen is it's going to call to Cosmos DB and it's going to get your account information",
    "start": "1365640",
    "end": "1371679"
  },
  {
    "text": "then it's going to create another request it's going to get all your container information uh after you pick",
    "start": "1371679",
    "end": "1377200"
  },
  {
    "text": "the container which container you to get the data from then it's going to go and figure out which partitions and the",
    "start": "1377200",
    "end": "1382880"
  },
  {
    "text": "routings is happening in that uh container so that's three requests your",
    "start": "1382880",
    "end": "1388279"
  },
  {
    "text": "fourth one is going to be the query so the last thing you want to do is you want to do this again and again uh and",
    "start": "1388279",
    "end": "1393760"
  },
  {
    "text": "declare the document client every time so just use a Singleton that will save you actually a lot of headaches uh if",
    "start": "1393760",
    "end": "1399559"
  },
  {
    "text": "you use that so in actually this is a great place to talk about the consen levels in Cosmos TB so when this happens",
    "start": "1399559",
    "end": "1407240"
  },
  {
    "text": "you have the document client ready we know how many containers we have now",
    "start": "1407240",
    "end": "1412760"
  },
  {
    "text": "the consens level is going to actually figure out where the data is going to come from so you know we have a replica",
    "start": "1412760",
    "end": "1418679"
  },
  {
    "text": "set in every server that means our data is available in four different locations",
    "start": "1418679",
    "end": "1423880"
  },
  {
    "text": "so depending on the cons as a level we might need to hit the leader or the followers so that's the place that",
    "start": "1423880",
    "end": "1430279"
  },
  {
    "text": "actually is going to decide where the data is going to come from the each uh servers here",
    "start": "1430279",
    "end": "1437480"
  },
  {
    "text": "next one is metadata requests so this happens uh if you are actually creating",
    "start": "1438720",
    "end": "1445400"
  },
  {
    "text": "updating getting the list of the containers databases you are not really doing any kind of operations but you are",
    "start": "1445400",
    "end": "1450919"
  },
  {
    "text": "really getting information about your containers databases so there are some limits here uh those are you know Heart",
    "start": "1450919",
    "end": "1457640"
  },
  {
    "text": "level out there you cannot change so if you are doing this a lot you kind of need to know those numbers for example",
    "start": "1457640",
    "end": "1463320"
  },
  {
    "text": "you cannot create 100 containers or database per minute uh also we have the request unit",
    "start": "1463320",
    "end": "1469120"
  },
  {
    "text": "to charge 240 that's a system reserved doesn't matter you have 10,000 20,000 request units that number is always same",
    "start": "1469120",
    "end": "1476640"
  },
  {
    "text": "so if you are reading all you know a lot about your uh containers databases maybe",
    "start": "1476640",
    "end": "1482000"
  },
  {
    "text": "you put them in a drop down out there or you are creating maybe like uh dynamically containers those numbers are",
    "start": "1482000",
    "end": "1487880"
  },
  {
    "text": "important to know because they will be you know like limit uh for you the best thing I can suggest here is especially",
    "start": "1487880",
    "end": "1493960"
  },
  {
    "text": "for reading just cash those information uh they shouldn't change that much so you don't have to go and get them again",
    "start": "1493960",
    "end": "1499600"
  },
  {
    "text": "and again from the Cosmos Z and those are the metadata calls uh",
    "start": "1499600",
    "end": "1505159"
  },
  {
    "text": "for this uh limits here you see next one is optimizing the bandwidth",
    "start": "1505159",
    "end": "1511559"
  },
  {
    "text": "so especially when you are inserting data or updating data usually you take the whole object your data model or you",
    "start": "1511559",
    "end": "1518360"
  },
  {
    "text": "send it to Cosmos DP you might be changing maybe only one property on that maybe big data model uh which is fine",
    "start": "1518360",
    "end": "1526880"
  },
  {
    "text": "but what happens is when your request is completed Cosmos DB returns that back to you in the response object most of the",
    "start": "1526880",
    "end": "1534360"
  },
  {
    "text": "people really they don't really need that object so your data model can be large the last thing you want is your",
    "start": "1534360",
    "end": "1540679"
  },
  {
    "text": "response uh package is you know going to be large in this case what we can do here is we can force Cosmos TV to not",
    "start": "1540679",
    "end": "1548600"
  },
  {
    "text": "attach your request object to the response so it's the things will go much more smoother because request object is",
    "start": "1548600",
    "end": "1554880"
  },
  {
    "text": "going to go and Cosmos DB is going to give you only what happens is going to 200 400 you know whatever you are trying",
    "start": "1554880",
    "end": "1560080"
  },
  {
    "text": "to do with the HTTP code rather than all the object you just sent to Cosmos TV so to make that work all you have to",
    "start": "1560080",
    "end": "1568399"
  },
  {
    "text": "change is actually this property here name enable content response on right",
    "start": "1568399",
    "end": "1573799"
  },
  {
    "text": "and you can make this especially on the B Lo too if you are doing it that's the last thing you want to do in the B Lo so",
    "start": "1573799",
    "end": "1579120"
  },
  {
    "text": "you can easily make this false and you can do this in uh transaction level or",
    "start": "1579120",
    "end": "1584360"
  },
  {
    "text": "database level if you like and that will actually help you your packages uh to go",
    "start": "1584360",
    "end": "1589840"
  },
  {
    "text": "much faster because you don't have to send and get that same data again and",
    "start": "1589840",
    "end": "1595520"
  },
  {
    "text": "again next one is the partial document update uh as I said before when you update something uh in older days you",
    "start": "1595520",
    "end": "1603200"
  },
  {
    "text": "have to send the whole data model so if you are maybe changing the property I don't know let's say you are just",
    "start": "1603200",
    "end": "1609039"
  },
  {
    "text": "updating the address from something to another address you have to send the whole data model in this case you can",
    "start": "1609039",
    "end": "1615799"
  },
  {
    "text": "only send what you want to change uh to the the Cosmos TV that makes the packages much smaller so things will",
    "start": "1615799",
    "end": "1622720"
  },
  {
    "text": "work faster but this is not really going to I guess save you any kind of request this mostly for the developer to kind of",
    "start": "1622720",
    "end": "1630000"
  },
  {
    "text": "make things much uh easier uh uh in the developer site because if you really think about it in Cosmos site it's going",
    "start": "1630000",
    "end": "1636320"
  },
  {
    "text": "to do the exactly same thing it's going to open the uh you know the object update it and send it back to you so",
    "start": "1636320",
    "end": "1641760"
  },
  {
    "text": "this is really mostly for the developer uh you can combine multiple operations uh with this",
    "start": "1641760",
    "end": "1648799"
  },
  {
    "text": "uh you can add a filter which is very useful in some cases I will have a a demo for that one in a little bit and it",
    "start": "1648799",
    "end": "1656240"
  },
  {
    "text": "supports all the conflicts if happens it's uh same the conflict resolution supports here and if you are doing any",
    "start": "1656240",
    "end": "1663399"
  },
  {
    "text": "kind of transactional batch especially it's very useful for that too rather than you know sending the whole object you can just send partial document so",
    "start": "1663399",
    "end": "1670559"
  },
  {
    "text": "those are the operations you see here you can add set replace uh remove increment is an in interesting one uh",
    "start": "1670559",
    "end": "1678240"
  },
  {
    "text": "for example if you are going to change the number of orders maybe it's one you",
    "start": "1678240",
    "end": "1683279"
  },
  {
    "text": "can just increase by one or you can decrease by minus one so you can easily do that or if you want to change a",
    "start": "1683279",
    "end": "1688919"
  },
  {
    "text": "property from one location to other location you can use the move for that",
    "start": "1688919",
    "end": "1693960"
  },
  {
    "text": "too so let's see this in actually in action the first one here is uh a simple one so as you can",
    "start": "1693960",
    "end": "1702000"
  },
  {
    "text": "see I am creating a list of patch operations here and I am adding the sale",
    "start": "1702000",
    "end": "1707039"
  },
  {
    "text": "date to my data model and I am removing the original sales state so that's all",
    "start": "1707039",
    "end": "1712440"
  },
  {
    "text": "I'm sending to Cosmos I'm not sending anything else but for this thing to work Cosmos CB is going to require from me",
    "start": "1712440",
    "end": "1719120"
  },
  {
    "text": "the document ID and also the partition key so those two are important uh and",
    "start": "1719120",
    "end": "1724960"
  },
  {
    "text": "required for partial update to work uh the next one which I talk about",
    "start": "1724960",
    "end": "1731960"
  },
  {
    "text": "the filter so in this case what I'm doing here is I am still uh passing my ID and my partition",
    "start": "1731960",
    "end": "1738760"
  },
  {
    "text": "and I am adding a new property name audit and audit is true only if the",
    "start": "1738760",
    "end": "1745480"
  },
  {
    "text": "number of items are larger than five so that will actually go through if that filter uh is true so that's very useful",
    "start": "1745480",
    "end": "1753960"
  },
  {
    "text": "uh in some cases you can actually add and remove things like that very easily by using the partial",
    "start": "1753960",
    "end": "1760398"
  },
  {
    "text": "update uh next one is indexing uh so indexing is important we have three type",
    "start": "1761360",
    "end": "1766760"
  },
  {
    "text": "of indexing mode and when we talk about indexing mode in Cosmos TV we have one",
    "start": "1766760",
    "end": "1771840"
  },
  {
    "text": "index file and one data file data file is where our data is and index is the",
    "start": "1771840",
    "end": "1777159"
  },
  {
    "text": "all the indexes you create for it so really the indexing mode is controlling the consistency level between those two",
    "start": "1777159",
    "end": "1783399"
  },
  {
    "text": "files uh you should always use a consistent uh because that means that your data is always matching your index",
    "start": "1783399",
    "end": "1790559"
  },
  {
    "text": "uh file so if data changes immediately index changes lazy is available out",
    "start": "1790559",
    "end": "1796039"
  },
  {
    "text": "there but uh many people might use that because lazy is cheaper than the",
    "start": "1796039",
    "end": "1801360"
  },
  {
    "text": "consistent but it can give you a lot of headaches and a lot of problems because by saying lazy you are really saying is",
    "start": "1801360",
    "end": "1807919"
  },
  {
    "text": "data file eventually matches the index file which means index file might not have the same data with your data file",
    "start": "1807919",
    "end": "1815399"
  },
  {
    "text": "so you might create all kind of problems and you might not know why you don't see the right data and other stuff lazy is",
    "start": "1815399",
    "end": "1821120"
  },
  {
    "text": "really not a good option for anything really I can think of so if",
    "start": "1821120",
    "end": "1826279"
  },
  {
    "text": "you lo I mean using lazy just change it immediately and none that means we don't",
    "start": "1826279",
    "end": "1832159"
  },
  {
    "text": "have any uh indexes that can be useful especially if the that's the first time you are pushing the data to the cosmos",
    "start": "1832159",
    "end": "1838320"
  },
  {
    "text": "TB and you don't know what should get indexed yet uh the last thing you want is you know index the whole thing",
    "start": "1838320",
    "end": "1843760"
  },
  {
    "text": "because when you actually uh open a uh new collection everything is getting indexed uh in Cosmos CB so probably",
    "start": "1843760",
    "end": "1850840"
  },
  {
    "text": "you're going to go back and exclude stuff anyway so it's much easier to keep everything in none uh also it can be",
    "start": "1850840",
    "end": "1856840"
  },
  {
    "text": "useful if uh you are using Cosmos DB almost like a redis you have a key and you have a value your your key is",
    "start": "1856840",
    "end": "1863320"
  },
  {
    "text": "usually going to be the partition key and probably you don't need to uh index the value in that case so it can be none",
    "start": "1863320",
    "end": "1870440"
  },
  {
    "text": "and that will actually make things much faster uh because well if you are none",
    "start": "1870440",
    "end": "1875720"
  },
  {
    "text": "that means that you don't need to index file your inserts updates will be much faster because it doesn't need to sync",
    "start": "1875720",
    "end": "1880919"
  },
  {
    "text": "all the data in the same time so we have four type of indexes in Cosmos TP range",
    "start": "1880919",
    "end": "1888559"
  },
  {
    "text": "index is the most common one and it really kind of uh handles most of the",
    "start": "1888559",
    "end": "1894240"
  },
  {
    "text": "operations in Cosmos DB uh Composite Index is a good one if",
    "start": "1894240",
    "end": "1899360"
  },
  {
    "text": "you have a lot of data and your we CLA may be having many filters Composite",
    "start": "1899360",
    "end": "1904679"
  },
  {
    "text": "Index can really save you a lot of request units and also if you have an order buy and if you want to order buy",
    "start": "1904679",
    "end": "1910080"
  },
  {
    "text": "with multiple properties you must have the composite index if you don't have it it won't let you uh do that uh",
    "start": "1910080",
    "end": "1916840"
  },
  {
    "text": "geospatial index are available uh and those are only for the geospatial data if you have and geospatial data will not",
    "start": "1916840",
    "end": "1925159"
  },
  {
    "text": "get uh index automatically like the others so it's going to be your responsibility to create those",
    "start": "1925159",
    "end": "1930399"
  },
  {
    "text": "geospatial indexes if you have any data uh Vector indexes are the new ones just",
    "start": "1930399",
    "end": "1935600"
  },
  {
    "text": "came up uh on the nosql API and they are useful for the vector distance system",
    "start": "1935600",
    "end": "1941399"
  },
  {
    "text": "function if you are using it uh currently that's in preview mode uh it looks very promising and I'm really",
    "start": "1941399",
    "end": "1948000"
  },
  {
    "text": "excited about that one uh you can kind of create all kind of Dimensions so",
    "start": "1948000",
    "end": "1953240"
  },
  {
    "text": "right now you know everything is depending on the GPT model you use you can actually create custom Dimensions uh",
    "start": "1953240",
    "end": "1959279"
  },
  {
    "text": "with this and change the dimensions if you like so uh the next slide is going",
    "start": "1959279",
    "end": "1964840"
  },
  {
    "text": "to be about the composite indexes because composite indexes can save you a lot of requ questions if you use them in the right way but there are a lot of",
    "start": "1964840",
    "end": "1971960"
  },
  {
    "text": "catches out there for example Composite Index can optimize only one single range",
    "start": "1971960",
    "end": "1977080"
  },
  {
    "text": "filter and that range filter has to be the last filter in the work class so you",
    "start": "1977080",
    "end": "1982840"
  },
  {
    "text": "might think that you are using a composite index but you may not because not the way that you know you are",
    "start": "1982840",
    "end": "1988960"
  },
  {
    "text": "quiring the data for example let's look at this uh examples so it looks like we",
    "start": "1988960",
    "end": "1994399"
  },
  {
    "text": "have a composite index for the name and the age so the first four uh rows is",
    "start": "1994399",
    "end": "2001799"
  },
  {
    "text": "using it fine because as you can see the name and age is actually order in the right way and we have one range filter",
    "start": "2001799",
    "end": "2009440"
  },
  {
    "text": "which is looking the age is larger than 18 that's the last one so which is good",
    "start": "2009440",
    "end": "2014519"
  },
  {
    "text": "with the composite index so those are working fine uh but if you look at the one in the fifth one it looks like we",
    "start": "2014519",
    "end": "2020720"
  },
  {
    "text": "have the same Composite Index but this one does not want to work because the C name we are saying is not equal to John",
    "start": "2020720",
    "end": "2029000"
  },
  {
    "text": "so in that case we have almost like two range filters here so this is not going to work uh and you are not going to able",
    "start": "2029000",
    "end": "2034559"
  },
  {
    "text": "to use that Composite Index uh then we have last three ones here uh looks like we actually have",
    "start": "2034559",
    "end": "2041279"
  },
  {
    "text": "three filters this time uh the first one works fine because everything is in order and the range filter is the last",
    "start": "2041279",
    "end": "2047840"
  },
  {
    "text": "one but if you look at the one in the middle this one doesn't want to work because the range filter is in the",
    "start": "2047840",
    "end": "2053638"
  },
  {
    "text": "middle uh and because of that Cosmos DB is not going to use the composite index uh so there's all kind of details here",
    "start": "2053639",
    "end": "2060000"
  },
  {
    "text": "you want to be sure that just because you have the composite index doesn't mean that you're actually using it you just want to really see it's matching",
    "start": "2060000",
    "end": "2066200"
  },
  {
    "text": "your signature of the composite index uh to fix that uh problem as you can see in the last row actually I have two",
    "start": "2066200",
    "end": "2072440"
  },
  {
    "text": "composite indexes that actually fixes the problem because I am actually doing it uh in different uh properties here so",
    "start": "2072440",
    "end": "2079960"
  },
  {
    "text": "you can easily fix that like that uh then uh it comes to the modify",
    "start": "2079960",
    "end": "2086599"
  },
  {
    "text": "indexes so if you are you know using SQL server and going to the nosql database and usually in the relational database",
    "start": "2086599",
    "end": "2093000"
  },
  {
    "text": "you create a table and it's your responsibility to kind of figure out which columns should be indexed and uh",
    "start": "2093000",
    "end": "2099720"
  },
  {
    "text": "nothing is getting Auto indexed in Cosmos CB when you create a collection everything is getting indexed and this",
    "start": "2099720",
    "end": "2106240"
  },
  {
    "text": "included paths as you can see this asteris is actually controlling that so",
    "start": "2106240",
    "end": "2111320"
  },
  {
    "text": "that means good because that's a no schema database so if you're going to have more properties coming up later",
    "start": "2111320",
    "end": "2117480"
  },
  {
    "text": "those will be automatically indexed uh as you add them later so which is good",
    "start": "2117480",
    "end": "2122640"
  },
  {
    "text": "but uh I guess my suggestion is whenever you are ready your application is working fine and production just go back",
    "start": "2122640",
    "end": "2128839"
  },
  {
    "text": "and look at all your wear uh Clauses and figure out which pads you are not using",
    "start": "2128839",
    "end": "2134480"
  },
  {
    "text": "at all for example you might have a description and you a chunk of uh data in it that's the last thing you want to",
    "start": "2134480",
    "end": "2140760"
  },
  {
    "text": "probably put an index on it because at the end if you're going to uh do the indexing for everything you have your",
    "start": "2140760",
    "end": "2146680"
  },
  {
    "text": "index file potentially can get larger than data file that means all your inserts updates is going to get much",
    "start": "2146680",
    "end": "2153000"
  },
  {
    "text": "slower and much uh expensive because it has to go and actually index everything in a different file so you want to be",
    "start": "2153000",
    "end": "2159319"
  },
  {
    "text": "sure that you know you're going to exclude uh whatever you are not using out there also uh you might have 15 20",
    "start": "2159319",
    "end": "2166760"
  },
  {
    "text": "25 servers so whenever you try to update your indexes uh the last thing you want to do",
    "start": "2166760",
    "end": "2173119"
  },
  {
    "text": "is you want to change your indexes uh just like SQL Server usually you know you create one index when it's done you",
    "start": "2173119",
    "end": "2179119"
  },
  {
    "text": "go you go maybe create another one in Cosmos TV you want to all do them together because well indexing is kind",
    "start": "2179119",
    "end": "2186640"
  },
  {
    "text": "of like expensive Cosmos TV because if you have 20 servers that means you have to index 20 servers and that can take",
    "start": "2186640",
    "end": "2192880"
  },
  {
    "text": "time for example if you're a web application let's say you have 1,000 request units per second and your web",
    "start": "2192880",
    "end": "2198400"
  },
  {
    "text": "application is using maybe 800 every second so you have like 200 left Cosmos c will use that 200 to actually complete",
    "start": "2198400",
    "end": "2205760"
  },
  {
    "text": "the indexes so potentially that can take per you know dates to actually complete that indexes depending how much uh",
    "start": "2205760",
    "end": "2212760"
  },
  {
    "text": "resources you have that's why yeah it's free but you are really kind of uh paying for it in some",
    "start": "2212760",
    "end": "2219160"
  },
  {
    "text": "way so it's important to I guess change all your indexes in the same",
    "start": "2219160",
    "end": "2225119"
  },
  {
    "text": "time true put uh that's the one that you actually pick how much request units you are going to need from the cosmos TB and",
    "start": "2225119",
    "end": "2232079"
  },
  {
    "text": "we have three options and the best way to actually explain this to you uh let's say we are actually throwing a pizza",
    "start": "2232079",
    "end": "2238440"
  },
  {
    "text": "party here right when you pick the provision you know that how many people are coming so you can order exactly uh",
    "start": "2238440",
    "end": "2246599"
  },
  {
    "text": "how much pizza un need so that's really the provision you know the traffic you know how many people are coming to your",
    "start": "2246599",
    "end": "2251800"
  },
  {
    "text": "application and you request that much request unit from the cosmos DP if do",
    "start": "2251800",
    "end": "2257480"
  },
  {
    "text": "you know the number that's a great option I like the Autos scale option because in the Autos scale option you",
    "start": "2257480",
    "end": "2263319"
  },
  {
    "text": "are rather than I guess giving number of uh the pizzas you are really giving a",
    "start": "2263319",
    "end": "2268640"
  },
  {
    "text": "budget to Cosmos TV you say that you know what this much I can afford and as people comes in or they don't come in",
    "start": "2268640",
    "end": "2275400"
  },
  {
    "text": "you order the pizza for me so you don't have to worry about what's really happening for example tomorrow might be",
    "start": "2275400",
    "end": "2281200"
  },
  {
    "text": "like a big day for you you are going to actually have a great you know big sale people are going to jump into your application if you have the other scale",
    "start": "2281200",
    "end": "2288079"
  },
  {
    "text": "you can easily kind of say that okay I want the 10,000 request units but today you are only using 1,000 so uh the",
    "start": "2288079",
    "end": "2296640"
  },
  {
    "text": "cosmos CB will be responsible to scale up and scale down application is people comes and goes",
    "start": "2296640",
    "end": "2301800"
  },
  {
    "text": "in serverless is great option especially in Dev QA or if you have any kind of",
    "start": "2301800",
    "end": "2306960"
  },
  {
    "text": "azure fun functions out there maybe they run once or twice a day in the server list really I guess if you compare the",
    "start": "2306960",
    "end": "2313760"
  },
  {
    "text": "pizza party that will be like the you sell the pizza per slice really so what's really happening here is uh you",
    "start": "2313760",
    "end": "2320520"
  },
  {
    "text": "buy let's say 1 million request units per month and you use it and the cosmos",
    "start": "2320520",
    "end": "2325760"
  },
  {
    "text": "D be substracted from 1 million every time you use so it can be really a cost-saving option if you your",
    "start": "2325760",
    "end": "2331720"
  },
  {
    "text": "application is not really you know demanded all the time also I'm sure you know most of you",
    "start": "2331720",
    "end": "2338079"
  },
  {
    "text": "come here to kind of learn some way to kind of save some money with the cosmos DB bill without changing any kind of uh",
    "start": "2338079",
    "end": "2345200"
  },
  {
    "text": "code or any kind of knowledge I can recommend this coupon for you so Cosmos",
    "start": "2345200",
    "end": "2350280"
  },
  {
    "text": "DV has a reserve capacity and if you are using 1 million and less request units",
    "start": "2350280",
    "end": "2355599"
  },
  {
    "text": "for your application if you do one year reserved they give you 20% off if you do",
    "start": "2355599",
    "end": "2361119"
  },
  {
    "text": "three years that give you 30% off without changing any kind of code or anything like that so if you are sure you are going to use the cosmos CB in",
    "start": "2361119",
    "end": "2367560"
  },
  {
    "text": "next one to three years those are great options to just you know just use them uh to actually save uh money on it if",
    "start": "2367560",
    "end": "2374560"
  },
  {
    "text": "you are using more than one million requesters that number can actually go up to 60% in some cases so just check it",
    "start": "2374560",
    "end": "2380520"
  },
  {
    "text": "out because you don't really need to do that much to actually save money with this",
    "start": "2380520",
    "end": "2386319"
  },
  {
    "text": "one next one this one is actually new uh in preview right now uh you can actually",
    "start": "2386319",
    "end": "2391880"
  },
  {
    "text": "do priority based executions so whenever you execute anything uh every everything",
    "start": "2391880",
    "end": "2397560"
  },
  {
    "text": "is in high level right now you can have two levels so if you have a web application maybe it's very uh right",
    "start": "2397560",
    "end": "2404359"
  },
  {
    "text": "heavy application you don't want to lose all the you know the rights but you have a couple of reads too so you can easily",
    "start": "2404359",
    "end": "2410640"
  },
  {
    "text": "say the reads should be low and the right uh transaction will be high so",
    "start": "2410640",
    "end": "2417000"
  },
  {
    "text": "just like you know the I guess the going in plane there's a priority out there the right will be always high in your",
    "start": "2417000",
    "end": "2424040"
  },
  {
    "text": "case and if something needs to fail with the 429 that will be the low uh transactions so you can have some kind",
    "start": "2424040",
    "end": "2430400"
  },
  {
    "text": "of control like that uh this one works uh just like this here so I have the",
    "start": "2430400",
    "end": "2437119"
  },
  {
    "text": "item request option here and I'm making this one Whatever I'm posting here is",
    "start": "2437119",
    "end": "2442640"
  },
  {
    "text": "priority level high so there's a low and high you can easily kind of control that as I say before this is still in preview",
    "start": "2442640",
    "end": "2449760"
  },
  {
    "text": "so uh this is not ready for the production I guess but uh you can really try it and give some feedback to Cosmos",
    "start": "2449760",
    "end": "2456400"
  },
  {
    "text": "CB team I'm sure they will be happy so uh this is all I have right now before I",
    "start": "2456400",
    "end": "2463119"
  },
  {
    "text": "show uh some demo for you but uh the demo I'm going to show you I'm not sure",
    "start": "2463119",
    "end": "2468160"
  },
  {
    "text": "if you already know it or not but you can download it from there it's a free vs Cod extension uh that I develop and",
    "start": "2468160",
    "end": "2475200"
  },
  {
    "text": "that's my uh contact information if you like to contact me later I'll be more than happy to answer any of your questions so let with that let me",
    "start": "2475200",
    "end": "2482880"
  },
  {
    "text": "actually open",
    "start": "2482880",
    "end": "2486240"
  },
  {
    "text": "the vs code here so when you open the vs code you",
    "start": "2488000",
    "end": "2494119"
  },
  {
    "text": "can easily download it from really from here if you search by",
    "start": "2494119",
    "end": "2499760"
  },
  {
    "text": "the my last name it should come up it's free uh no charge out there and right",
    "start": "2501119",
    "end": "2507599"
  },
  {
    "text": "now I believe I have almost 12,000 downloads on it so many people are liking and uh",
    "start": "2507599",
    "end": "2514599"
  },
  {
    "text": "you know there's a good feedback on it so uh the first thing is going to ask you how you're going to connect it you're going to put your connection uh",
    "start": "2514599",
    "end": "2521359"
  },
  {
    "text": "key out there then it's going to list you all the databases and containers of uh each database so in this case I have",
    "start": "2521359",
    "end": "2528079"
  },
  {
    "text": "the stack Overflow here and I pick the posts uh those talks you know I talk",
    "start": "2528079",
    "end": "2533359"
  },
  {
    "text": "about the physical partition and other stuff but there's not really easy way to go to Azure portal and kind of show them",
    "start": "2533359",
    "end": "2538599"
  },
  {
    "text": "uh and how it works so that's the main kind of reason I started this uh extension this one is going to make you",
    "start": "2538599",
    "end": "2544640"
  },
  {
    "text": "easy because when you click the partitions here for example example for this uh container you can see how many",
    "start": "2544640",
    "end": "2550319"
  },
  {
    "text": "physical partitions actually this one has and you can also see these are the hash numbers of each uh server so in",
    "start": "2550319",
    "end": "2559839"
  },
  {
    "text": "that I think uh the for the post I believe the properly post ID is the my",
    "start": "2559839",
    "end": "2565000"
  },
  {
    "text": "partition key so partition key is going to get hash every time you are running or getting the data and it's going to be",
    "start": "2565000",
    "end": "2572839"
  },
  {
    "text": "between uh I think this is the zero here and this is the FF so it's kind between that number that's how Cosmos CB is",
    "start": "2572839",
    "end": "2579760"
  },
  {
    "text": "going to know which data base server actually has your data and it's going to send the request there so this one",
    "start": "2579760",
    "end": "2585800"
  },
  {
    "text": "actually makes it easier for you to see what you are really dealing with before you run any kind of queries so if I'm",
    "start": "2585800",
    "end": "2592319"
  },
  {
    "text": "going to run really something simple like that just give me select top 10 from the post if you execute that",
    "start": "2592319",
    "end": "2600359"
  },
  {
    "text": "one so I get the data here it tells you how much request charge for you and uh",
    "start": "2600359",
    "end": "2605520"
  },
  {
    "text": "you get the 10 items but if you remember uh I show you the SDK is",
    "start": "2605520",
    "end": "2611040"
  },
  {
    "text": "actually the one which is filtering stuff so you can easily go here execution metrics and see how many",
    "start": "2611040",
    "end": "2616079"
  },
  {
    "text": "requests actually happen in the back end I had five physical partitions you see",
    "start": "2616079",
    "end": "2621400"
  },
  {
    "text": "10 but actually I got 50 documents so SDK was the one which filter 40 out and",
    "start": "2621400",
    "end": "2628119"
  },
  {
    "text": "show 10 to you you can easily click on this if it's more than one and see how",
    "start": "2628119",
    "end": "2633680"
  },
  {
    "text": "much uh request unit each server cost for you so that's really some for some",
    "start": "2633680",
    "end": "2640000"
  },
  {
    "text": "people it's an eye opener because as your data is going to get larger this problem is going to get bigger because",
    "start": "2640000",
    "end": "2646400"
  },
  {
    "text": "you're going to have more servers and each of them is going to give you more request unit so this problem is going to get bigger if you don't have the",
    "start": "2646400",
    "end": "2652240"
  },
  {
    "text": "partition key also this application can give you the point read uh the one that I show you so if you pass two numbers",
    "start": "2652240",
    "end": "2659079"
  },
  {
    "text": "here uh this will actually uh give you the option for the point read without writing an SDK uh yourself",
    "start": "2659079",
    "end": "2667599"
  },
  {
    "text": "rather than that which I believe last month index metrics went generally",
    "start": "2667599",
    "end": "2672800"
  },
  {
    "text": "available in Cosmos TV and you can actually see that here you can just",
    "start": "2672800",
    "end": "2678119"
  },
  {
    "text": "click this one here and you will see a tab indexing metrix so if you have any",
    "start": "2678119",
    "end": "2683280"
  },
  {
    "text": "kind of uh query like this so if I run this one",
    "start": "2683280",
    "end": "2688880"
  },
  {
    "text": "here this is going to actually suggest if it needs any indexes or not and it will show you if it's using any other",
    "start": "2689400",
    "end": "2696480"
  },
  {
    "text": "indexes so as you can see I just search by the type and the score and it's using the",
    "start": "2696480",
    "end": "2704559"
  },
  {
    "text": "type it looks like I don't have the score so if you actually click the indexing policy looks like score is excluded so",
    "start": "2704559",
    "end": "2712839"
  },
  {
    "text": "you can easily see what is in your indexing policy and which indexes your",
    "start": "2712839",
    "end": "2719200"
  },
  {
    "text": "query is using by using the indexing metrix here uh if you do that by the SDK",
    "start": "2719200",
    "end": "2724440"
  },
  {
    "text": "you can do it with the SDK but the only thing I don't like in the SDK just sends the data to you in a chunk of text so",
    "start": "2724440",
    "end": "2730880"
  },
  {
    "text": "it's not easy to figure out you kind of need to you know read it manually you cannot really uh categorize what is",
    "start": "2730880",
    "end": "2736760"
  },
  {
    "text": "utilized what is not utilized so as uh we talk about the",
    "start": "2736760",
    "end": "2744599"
  },
  {
    "text": "indexes so in here uh I have actually same data in multiple places so if I'm going to run this one in the post tree",
    "start": "2744599",
    "end": "2751440"
  },
  {
    "text": "you can actually see what's really happening so this one is does not have the score so if I'm going to run this",
    "start": "2751440",
    "end": "2758160"
  },
  {
    "text": "here this is only one uh physical partition you will see your request is",
    "start": "2758160",
    "end": "2765440"
  },
  {
    "text": "going to be pretty high because well score is not uh indexed looks like",
    "start": "2765440",
    "end": "2770839"
  },
  {
    "text": "322 so what you are really doing this if you compare this a SQL Server this is a table scan that's what we are doing here",
    "start": "2770839",
    "end": "2776839"
  },
  {
    "text": "and this indexing Matrix is actually showing that to you uh that you are actually missing",
    "start": "2776839",
    "end": "2782359"
  },
  {
    "text": "that so uh it's pretty important so if I go for example the post two here which",
    "start": "2782359",
    "end": "2788760"
  },
  {
    "text": "it is index out there you will see a big difference because ATN is a database",
    "start": "2788760",
    "end": "2794800"
  },
  {
    "text": "right you want to be sure that everything is indexed uh it went back to 9.78 so you want to be sure that you",
    "start": "2794800",
    "end": "2801760"
  },
  {
    "text": "know uh all the proporties unit are index and if they are uh if you are not using them you exclude them the right",
    "start": "2801760",
    "end": "2807839"
  },
  {
    "text": "ones and indexing metrics can actually help you with that a lot so uh if you",
    "start": "2807839",
    "end": "2813839"
  },
  {
    "text": "will have time please uh I guess get it as I said before it's free it can do much more than that here it supports all",
    "start": "2813839",
    "end": "2820520"
  },
  {
    "text": "kind of stuff so I'll be more than happy to kind of get feedback from uh you uh and I just want to kind of share that",
    "start": "2820520",
    "end": "2827599"
  },
  {
    "text": "with you but that's all I have uh please let me know uh if you have any questions I can try to answer now or later and",
    "start": "2827599",
    "end": "2834680"
  },
  {
    "text": "thank you again for coming to my session thank you",
    "start": "2834680",
    "end": "2841558"
  },
  {
    "text": "pleas",
    "start": "2847119",
    "end": "2850119"
  }
]