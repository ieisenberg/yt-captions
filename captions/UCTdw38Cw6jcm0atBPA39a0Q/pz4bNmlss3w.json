[
  {
    "text": "welcome final session of the day hi um",
    "start": "8160",
    "end": "14559"
  },
  {
    "text": "who is going to the christmas dinner tonight shall we just go mate",
    "start": "14559",
    "end": "20880"
  },
  {
    "text": "i want you i won't hold you for long so um but this is important topic um",
    "start": "20880",
    "end": "26000"
  },
  {
    "text": "who is building distributed systems in this room yeah good so",
    "start": "26000",
    "end": "33200"
  },
  {
    "text": "um for you it will be relevant for those who don't build distributed systems for you it will be relevant in the nearest",
    "start": "33200",
    "end": "39600"
  },
  {
    "text": "future because you will be building distributed systems um",
    "start": "39600",
    "end": "45360"
  },
  {
    "text": "i don't see like there were more elite distributed systems monolith disability system i don't see only twinning so it's like docker swarm it's i think it will",
    "start": "45360",
    "end": "52480"
  },
  {
    "text": "lose some time in the future nevertheless even in monolithic systems the preservability is important",
    "start": "52480",
    "end": "58480"
  },
  {
    "text": "and we will talk through this soon um",
    "start": "58480",
    "end": "63920"
  },
  {
    "text": "those who've been here or listened to the virtual conference i gave a talk industry last year",
    "start": "64559",
    "end": "70640"
  },
  {
    "text": "and the talk was called trace trace open metrics open telemetry uh open tracing",
    "start": "70640",
    "end": "75759"
  },
  {
    "text": "are we there yet because there was a lot of things going on at the time and at 2020",
    "start": "75759",
    "end": "82159"
  },
  {
    "text": "open or 2019 maybe or beginning of 2020 open tracing said",
    "start": "82159",
    "end": "87759"
  },
  {
    "text": "um we're giving up we are joining with open sensors and we are moving forward to open telemetry and you come to",
    "start": "87759",
    "end": "93520"
  },
  {
    "text": "openstm2 website and say we are an alpha stage there is nothing there yet so you're kind of lost but open tracing",
    "start": "93520",
    "end": "100159"
  },
  {
    "text": "worked and it still works and i gave some advice to people the video is now on youtube so if you are in open racing",
    "start": "100159",
    "end": "105920"
  },
  {
    "text": "world you can still get some benefit from it um",
    "start": "105920",
    "end": "111600"
  },
  {
    "text": "so we weren't there yet in 2020 but time flies so we are in 2021 in what is",
    "start": "111600",
    "end": "118399"
  },
  {
    "text": "open telemetry open telemetry aims to replace certain things and consolidate them together",
    "start": "118399",
    "end": "125600"
  },
  {
    "text": "in one api one sdk and even more so",
    "start": "125600",
    "end": "131840"
  },
  {
    "text": "what they want to do first they collect they provide a way to collect traces and",
    "start": "131840",
    "end": "139520"
  },
  {
    "text": "metrics and lock in kind of standard way and it's all described the spec is",
    "start": "139520",
    "end": "145360"
  },
  {
    "text": "online you can go read it and stuff like that and it goes across all the platforms that exist at least it's",
    "start": "145360",
    "end": "151680"
  },
  {
    "text": "supposed to they want to support as much as possible",
    "start": "151680",
    "end": "157280"
  },
  {
    "text": "drop in instrumentation it means that you install certain library you write couple under code and it just gets",
    "start": "157280",
    "end": "162720"
  },
  {
    "text": "instrumented especially for standard components like asp.net core grpc",
    "start": "162720",
    "end": "169120"
  },
  {
    "text": "they have instrumentation for sql server they have instrumentation for stack exchange radius and stuff like that and",
    "start": "169120",
    "end": "175360"
  },
  {
    "text": "a bunch of contrib libraries that instrument even more and all of that you can do by just installing another package",
    "start": "175360",
    "end": "182000"
  },
  {
    "text": "telling openness to mj i want to instrument it and it will work what it actually delivers so we'll talk",
    "start": "182000",
    "end": "188400"
  },
  {
    "text": "about this in a moment and it's open source of vendor neutral so",
    "start": "188400",
    "end": "193599"
  },
  {
    "text": "open telemetry is not a company it's a standard and it's a consortium of",
    "start": "193599",
    "end": "198879"
  },
  {
    "text": "um of like it's it's a group of people they have a committee and stuff which design the spec and the apis and",
    "start": "198879",
    "end": "206480"
  },
  {
    "text": "decide how it should look like and all the libraries that are built for all the platforms need to comply to that",
    "start": "206480",
    "end": "213840"
  },
  {
    "text": "which means that there is no vendor backing it so if you compare it to vector which has a similar aim but it",
    "start": "215040",
    "end": "221519"
  },
  {
    "text": "does doesn't focus on metrics and traces necessarily it is kind of more generic",
    "start": "221519",
    "end": "228080"
  },
  {
    "text": "it's it's a company and it's backed by it it was bought by datadog without earning a cent of money but",
    "start": "228080",
    "end": "234959"
  },
  {
    "text": "nevertheless open telemetry is not like that for example",
    "start": "234959",
    "end": "240599"
  },
  {
    "text": "open274.net was built with a significant contribution from microsoft there were several engineers working there and",
    "start": "240599",
    "end": "246720"
  },
  {
    "text": "they're still in a group of maintainers and approved approving pull requests",
    "start": "246720",
    "end": "253200"
  },
  {
    "text": "so open selection 2021 it's quite different from what was there before",
    "start": "253200",
    "end": "259120"
  },
  {
    "text": "um i took this from the",
    "start": "259120",
    "end": "264560"
  },
  {
    "text": "open telemetry website itself so it doesn't mean that all of that is an opensclem2.net it's the openc launcher",
    "start": "264560",
    "end": "270880"
  },
  {
    "text": "itself how they explain what they have for tracing everything is stable except",
    "start": "270880",
    "end": "276400"
  },
  {
    "text": "the collector which is experimental and what collector is i will explain later i",
    "start": "276400",
    "end": "282240"
  },
  {
    "text": "try the collector it actually works metrics",
    "start": "282240",
    "end": "287759"
  },
  {
    "text": "with metrics the story is pretty funny because openclement4.net",
    "start": "287759",
    "end": "293199"
  },
  {
    "text": "0.1 was released beginning of this year and it was out of beta",
    "start": "293199",
    "end": "299360"
  },
  {
    "text": "however they removed all the metric code which was sad because i contributed to it as well",
    "start": "299360",
    "end": "305759"
  },
  {
    "text": "and they built it from scratch and they built it in a completely different way when the epi got feature freeze the sdk",
    "start": "305759",
    "end": "313199"
  },
  {
    "text": "is still experimental but microsoft did something interesting they actually built metric support inside system diagnostic",
    "start": "313199",
    "end": "320240"
  },
  {
    "text": "libraries the abstraction i will show you how it works the protocol however is stable and",
    "start": "320240",
    "end": "326800"
  },
  {
    "text": "protocol is something we need to talk about in a short moment collector again is experimental i'm not",
    "start": "326800",
    "end": "333039"
  },
  {
    "text": "sure if collectors like some collectors i think collection of metrics works as well it's just the number of exporters",
    "start": "333039",
    "end": "339680"
  },
  {
    "text": "maybe is not complete logging that's ambitious right we have tons of",
    "start": "339680",
    "end": "346160"
  },
  {
    "text": "different styles of logging i mean we moved to structured login likely right microsoft provided their own login",
    "start": "346160",
    "end": "352639"
  },
  {
    "text": "abstraction library and kind of a nice thing to like drop in things in logging they didn't manage to",
    "start": "352639",
    "end": "359199"
  },
  {
    "text": "kill ceralog although people expected them to um i used surlog personally",
    "start": "359199",
    "end": "365360"
  },
  {
    "text": "plugging into the microsoft logging abstractions and stuff however open telemetry aims to kind of",
    "start": "365360",
    "end": "372000"
  },
  {
    "text": "consolidate this as well so provides the ability for applications to log in uniformly across different platforms",
    "start": "372000",
    "end": "379520"
  },
  {
    "text": "and shovel it to the centralized login system in over the uniform of protocol which replaces all the different",
    "start": "379520",
    "end": "385199"
  },
  {
    "text": "variations of protocols because think about all these things you have for microsoft login and sirilogue that quite",
    "start": "385199",
    "end": "390560"
  },
  {
    "text": "a few of them and every each one of them requires different configuration and essentially all of that can be",
    "start": "390560",
    "end": "397759"
  },
  {
    "text": "theoretically replaced by a single collector so",
    "start": "397759",
    "end": "403440"
  },
  {
    "text": "i won't touch on the protocol just yet i won't touch on the collector we will get to this by",
    "start": "403440",
    "end": "410240"
  },
  {
    "text": "the end of the talk what i want to show is um because i started to instrument my",
    "start": "410240",
    "end": "416080"
  },
  {
    "text": "libraries in my applications some of the apps that were built are instrumented with open tracing",
    "start": "416080",
    "end": "421520"
  },
  {
    "text": "and most of them are instrumented with promises metrics and then we like when we built a new app",
    "start": "421520",
    "end": "427440"
  },
  {
    "text": "i said okay let's try open telemetry and we started instrumented it didn't go really well and i built this library",
    "start": "427440",
    "end": "434240"
  },
  {
    "text": "that i talked about lately earlier today adventures event source with event source in library for net and i",
    "start": "434240",
    "end": "440400"
  },
  {
    "text": "struggled quite a long time to go through all of that and reading all the documentation and stuff like that so",
    "start": "440400",
    "end": "446720"
  },
  {
    "text": "what i found and what i've done i would like to share it with you today so you can basically save someone like maybe if",
    "start": "446720",
    "end": "453280"
  },
  {
    "text": "you if i save one hour each for each one of you it will be a lot of good environment effect",
    "start": "453280",
    "end": "460800"
  },
  {
    "text": "ah collector here no let's let's keep this this is like it's supposed to be demo right",
    "start": "460800",
    "end": "466960"
  },
  {
    "text": "so now i need my bloody glasses small screen",
    "start": "466960",
    "end": "473120"
  },
  {
    "text": "so what i have here i have already added some open telemetry instrumentation",
    "start": "473360",
    "end": "480080"
  },
  {
    "text": "which doesn't instrument anything at all just yet it's just a basic stuff there was there are a couple of packages",
    "start": "480080",
    "end": "486400"
  },
  {
    "text": "here you can see it here one is called open",
    "start": "486400",
    "end": "491680"
  },
  {
    "text": "telemetry exporter alternative protocol we will talk about this later and those two are used at the moment no",
    "start": "491680",
    "end": "498479"
  },
  {
    "text": "no none of those i actually use the implicitly installed open syllabus sdk i think that's what i use and extensions",
    "start": "498479",
    "end": "504560"
  },
  {
    "text": "for net core to like register things with a container",
    "start": "504560",
    "end": "509680"
  },
  {
    "text": "so to add tracing maybe i'm going a little bit ahead of train but we will see what tracing is",
    "start": "509680",
    "end": "516640"
  },
  {
    "text": "i'm saying add my traces are tracing ability to the application i need to tell it what service name",
    "start": "516640",
    "end": "524080"
  },
  {
    "text": "would be and stuff like that using the resource builder and i enable the sampler we'll talk",
    "start": "524080",
    "end": "529600"
  },
  {
    "text": "about a bit later and i say do not sample anything i want all the data",
    "start": "529600",
    "end": "534720"
  },
  {
    "text": "ingested to my tracing kind of you know",
    "start": "534720",
    "end": "539600"
  },
  {
    "text": "target sync whatever and i'm adding zipkin exporter zipkin is a very lightweight tool that i run in",
    "start": "540399",
    "end": "546720"
  },
  {
    "text": "docker container just to show traces on the screen and for metrics i do similar thing",
    "start": "546720",
    "end": "551839"
  },
  {
    "text": "and that's brand new it didn't exist before like two months and it's still in beta i think",
    "start": "551839",
    "end": "558320"
  },
  {
    "text": "the metrics part but the instrumentation of apps and libraries using abstractions",
    "start": "558320",
    "end": "563680"
  },
  {
    "text": "from system diagnostics it's not in beta it has been released one month ago",
    "start": "563680",
    "end": "569360"
  },
  {
    "text": "when they released dot net six and the library they provide it actually has ford 4.05 and 3.1 and",
    "start": "569360",
    "end": "577440"
  },
  {
    "text": "probably even dotnet framework i don't remember but here i'm adding from this exporter so i can i won't run permissions i will",
    "start": "577440",
    "end": "584160"
  },
  {
    "text": "show you just metrics on the screen in text and explain what it looks like and then",
    "start": "584160",
    "end": "590480"
  },
  {
    "text": "i have a very simple api that's just a controller right which gets this instrumented service",
    "start": "590480",
    "end": "597200"
  },
  {
    "text": "like some service whatever the repository application service anything that does some work that involves some",
    "start": "597200",
    "end": "604480"
  },
  {
    "text": "io that goes to the database as such and it has some delay so",
    "start": "604480",
    "end": "610240"
  },
  {
    "text": "the service does the job and you can see what kind of job it does",
    "start": "610240",
    "end": "615680"
  },
  {
    "text": "it just randomly times out or not times out just waits for a few seconds up to 100 milliseconds",
    "start": "615680",
    "end": "621600"
  },
  {
    "text": "so now i want to know how my service behaves right i want to see how much time it takes for the request from the",
    "start": "621600",
    "end": "627920"
  },
  {
    "text": "controller to pass through my service and get back so i want to instrument it",
    "start": "627920",
    "end": "633839"
  },
  {
    "text": "um all right so what do i do i created a few things here",
    "start": "633839",
    "end": "640880"
  },
  {
    "text": "first of all i needed to do this thing it's just the basic stuff right open telemetry set certain requirements",
    "start": "640880",
    "end": "647680"
  },
  {
    "text": "on how your application needs to report instrumentation they want to know what the application",
    "start": "647680",
    "end": "653040"
  },
  {
    "text": "kind of is called it's the instrumentation name we call we net",
    "start": "653040",
    "end": "658600"
  },
  {
    "text": "openstamp2.net everywhere uses this assembly name right but you can just write any string",
    "start": "658600",
    "end": "664480"
  },
  {
    "text": "as soon as you can find it in your apm tool and they want a version so again they use assembly version in",
    "start": "664480",
    "end": "671120"
  },
  {
    "text": "this case i don't have assembly version at all so it's probably will be either empty or zero zero zero",
    "start": "671120",
    "end": "677040"
  },
  {
    "text": "but it's useful because you actually want to know which version of your app has delivered this trace or metric because otherwise",
    "start": "677040",
    "end": "684240"
  },
  {
    "text": "you couldn't distinguish them maybe there is one version and two other version running and stuff like that",
    "start": "684240",
    "end": "690000"
  },
  {
    "text": "so i basically could have used assembly name because it has a name inside but i",
    "start": "690000",
    "end": "696000"
  },
  {
    "text": "call it my precious because i like all the rings so that's it",
    "start": "696000",
    "end": "701440"
  },
  {
    "text": "um this one we get back to this later and this is actually about metrics and it uses this thing with system.ometrix",
    "start": "701440",
    "end": "707760"
  },
  {
    "text": "which is brand new and shining and stuff like that so let's let's move to traces",
    "start": "707760",
    "end": "712959"
  },
  {
    "text": "now the nice thing is that with all the work that microsoft has done so far i",
    "start": "712959",
    "end": "720399"
  },
  {
    "text": "remember this thing first there was this event source who remembers the event source",
    "start": "720399",
    "end": "726639"
  },
  {
    "text": "quite a view okay remember what it was used to for",
    "start": "726639",
    "end": "732240"
  },
  {
    "text": "push kind of pseudo logs to event log into windows right it changed a little bit and actually if",
    "start": "733760",
    "end": "740399"
  },
  {
    "text": "you say i want to listen to certain event source event source is actually an observable",
    "start": "740399",
    "end": "747360"
  },
  {
    "text": "and you can attach an observer to it so you could decouple thing so it's actually in some ways a bit",
    "start": "747360",
    "end": "752480"
  },
  {
    "text": "better than microsoft logan obstructions because if you don't listen to the observable",
    "start": "752480",
    "end": "758480"
  },
  {
    "text": "there is it doesn't do anything basically it doesn't report anywhere so and it's completely decoupled the",
    "start": "758480",
    "end": "766000"
  },
  {
    "text": "bad part is that sometimes no it's it's about activities sometimes it's nothing",
    "start": "766000",
    "end": "772399"
  },
  {
    "text": "attached you don't see anything but it's kind of normal i think i'm saying something wrong okay nevertheless if you",
    "start": "772399",
    "end": "777839"
  },
  {
    "text": "don't listen to it it doesn't do anything so it's good and next thing they've done they created",
    "start": "777839",
    "end": "782959"
  },
  {
    "text": "diagnostic listener that implemented the abstract class of",
    "start": "782959",
    "end": "788160"
  },
  {
    "text": "diagnostic source which was pretty confusing because you have a variable saying diagnostic source and instantiate",
    "start": "788160",
    "end": "794720"
  },
  {
    "text": "diagnostic listener and the type that it returns to you is diagnostic source so it's like for me it",
    "start": "794720",
    "end": "801360"
  },
  {
    "text": "was always confusing the point was diagnostic listener and the source and the adapter to it they have a package",
    "start": "801360",
    "end": "808160"
  },
  {
    "text": "with some attributes that you can publish events a bit differently so you can wrap it in nicer",
    "start": "808160",
    "end": "814880"
  },
  {
    "text": "api and things like that and you again can attach the diagnostic listener to your",
    "start": "814880",
    "end": "820639"
  },
  {
    "text": "diagnostic listener which is a source which will report events to you and see things but diagnostic",
    "start": "820639",
    "end": "827680"
  },
  {
    "text": "source allowed you to attach it kind of arbitrary payload it kind of pass http",
    "start": "827680",
    "end": "832959"
  },
  {
    "text": "context to it which event source couldn't do because event source serializes things to string",
    "start": "832959",
    "end": "839519"
  },
  {
    "text": "always and that's how we got the first primitive traces actually so we we",
    "start": "839519",
    "end": "845440"
  },
  {
    "text": "attach using observer verse to that source and say okay now it started and now it's",
    "start": "845440",
    "end": "853040"
  },
  {
    "text": "ended then they introduced activities and when people started to implement",
    "start": "853040",
    "end": "858560"
  },
  {
    "text": "activities they said ah that's legacy we moved to activity source now",
    "start": "858560",
    "end": "863680"
  },
  {
    "text": "and activities produce diagnostic events that can be listened",
    "start": "863680",
    "end": "870560"
  },
  {
    "text": "to by diagnostic listeners like conventions it's something started and something stopped",
    "start": "870560",
    "end": "876800"
  },
  {
    "text": "so you if you spin up an activity and start it it will produce a diagnostic an event",
    "start": "876800",
    "end": "882320"
  },
  {
    "text": "for diagnostic listener that's called activityname.started by convention",
    "start": "882320",
    "end": "887600"
  },
  {
    "text": "and then when activity stops it will produce a diagnostic listener event that's called active activityname.stop",
    "start": "887600",
    "end": "894160"
  },
  {
    "text": "which is confusing but still it's like like this",
    "start": "894160",
    "end": "899199"
  },
  {
    "text": "and the activity source is just an attempt to make the whole thing the whole story with activities much easier",
    "start": "899199",
    "end": "905199"
  },
  {
    "text": "to work with and this is what i'm using now",
    "start": "905199",
    "end": "909600"
  },
  {
    "text": "so i create here in this class that's called my traces this class is",
    "start": "910320",
    "end": "917040"
  },
  {
    "text": "considered as an instrument by open telemetry and",
    "start": "917040",
    "end": "922880"
  },
  {
    "text": "this class needs to be put somewhere so it gets instantiated because it's not static and it creates an activity source",
    "start": "922880",
    "end": "928720"
  },
  {
    "text": "that i call source and it uses the instrumentation name that is predefined over here my",
    "start": "928720",
    "end": "934079"
  },
  {
    "text": "pressures and it uses the version which is the assembly version which is probably now",
    "start": "934079",
    "end": "940320"
  },
  {
    "text": "and of course it can be disposed so the activity source is a",
    "start": "940320",
    "end": "945440"
  },
  {
    "text": "shortcut to create new instances of activity that actually rub the execution of certain",
    "start": "945440",
    "end": "950720"
  },
  {
    "text": "long long running operations with long running i mean 10 milliseconds or whatever but it's still",
    "start": "950720",
    "end": "956720"
  },
  {
    "text": "not like it maybe involves some io stuff like that there's not nanoseconds",
    "start": "956720",
    "end": "962800"
  },
  {
    "text": "so how can i use it in my app um",
    "start": "962800",
    "end": "968720"
  },
  {
    "text": "not in my app but my instrumented service so that's actually pretty simple",
    "start": "968720",
    "end": "974880"
  },
  {
    "text": "i say using var activity equals um",
    "start": "974880",
    "end": "980320"
  },
  {
    "text": "oh yeah so first i need to get this as a reference public",
    "start": "980320",
    "end": "985600"
  },
  {
    "text": "instrumented service my traces choices",
    "start": "985600",
    "end": "991680"
  },
  {
    "text": "and i need to have this as a field and then i can say",
    "start": "991680",
    "end": "998240"
  },
  {
    "text": "traces dot source dot star activity and that's actually it because it has a",
    "start": "998240",
    "end": "1004399"
  },
  {
    "text": "parameter uh which is using the caller name",
    "start": "1004399",
    "end": "1010079"
  },
  {
    "text": "has the name of the like as as a value right it's called um",
    "start": "1010079",
    "end": "1016000"
  },
  {
    "text": "caller name or something like that it's an attribute we can specify because the first parameter is basically the",
    "start": "1016000",
    "end": "1021519"
  },
  {
    "text": "the operation name we can space specified explicitly and we can have some sort of convention but if",
    "start": "1021519",
    "end": "1026880"
  },
  {
    "text": "you omit it it will just use do the job as the activity name",
    "start": "1026880",
    "end": "1032000"
  },
  {
    "text": "and that's it what this line will do it will start new",
    "start": "1032000",
    "end": "1037438"
  },
  {
    "text": "activity what activity does",
    "start": "1037439",
    "end": "1040959"
  },
  {
    "text": "when you create an activity and start it so activity itself has this api which is",
    "start": "1043039",
    "end": "1050960"
  },
  {
    "text": "as you can see who used activities at all that is pretty useful",
    "start": "1051120",
    "end": "1057039"
  },
  {
    "text": "so it's a disposable thing of course because i'm i have using here and it has",
    "start": "1057039",
    "end": "1064000"
  },
  {
    "text": "all the stuff that you would need to associate it with a certain trace right it has a span id choice study",
    "start": "1064000",
    "end": "1070799"
  },
  {
    "text": "parent spam the baggage diagnostic events attached to it status code and stuff like that",
    "start": "1070799",
    "end": "1077600"
  },
  {
    "text": "but interesting enough that by the end of execution of this method activity will be disposed by the time like when",
    "start": "1077600",
    "end": "1083679"
  },
  {
    "text": "it disposes it stops and when it stops it reports how much time it took for an activity to run",
    "start": "1083679",
    "end": "1090880"
  },
  {
    "text": "and if you listen to diagnostic event you will call you can",
    "start": "1090880",
    "end": "1096320"
  },
  {
    "text": "also extract the duration of your operation which is in our case very useful",
    "start": "1096320",
    "end": "1102480"
  },
  {
    "text": "so it doesn't seem like much but we can do something with it now",
    "start": "1102480",
    "end": "1109840"
  },
  {
    "text": "uh interesting stuff about activities that they uh after i do this and when i start",
    "start": "1110000",
    "end": "1116640"
  },
  {
    "text": "the activity i have access to this thing that's called activity.current",
    "start": "1116640",
    "end": "1123480"
  },
  {
    "text": "activity.current would be equal to the activity instances i just instantiated they put it in a sync local context so",
    "start": "1127320",
    "end": "1134640"
  },
  {
    "text": "everything you do in your method and below will be within that as in context",
    "start": "1134640",
    "end": "1141760"
  },
  {
    "text": "so in some other place you can use this activity current and attach to it as a parent activity but we'll see how it",
    "start": "1141760",
    "end": "1147200"
  },
  {
    "text": "works so enough code let's see how that actually works it's not enough of course because",
    "start": "1147200",
    "end": "1154080"
  },
  {
    "text": "i instrumented my library but it doesn't mean that it will report any trace to the application the",
    "start": "1154080",
    "end": "1159679"
  },
  {
    "text": "application itself needs to know about this instrumentation so what i do i want to have this stuff",
    "start": "1159679",
    "end": "1164720"
  },
  {
    "text": "right let's do two things so first add instrument",
    "start": "1164720",
    "end": "1170240"
  },
  {
    "text": "instrumentation my choice right when it when you add it like this it",
    "start": "1170240",
    "end": "1176400"
  },
  {
    "text": "will try to resolve it from the service provider so it means that i need to register that as well services at",
    "start": "1176400",
    "end": "1182880"
  },
  {
    "text": "singleton",
    "start": "1182880",
    "end": "1185440"
  },
  {
    "text": "my service my traces it doesn't have any parameters on constructor so it will be just instantiated",
    "start": "1188000",
    "end": "1193360"
  },
  {
    "text": "and then i need to say add source and then give it the activity name so",
    "start": "1193360",
    "end": "1198720"
  },
  {
    "text": "it's a measures instrumentation name so basically if you instrument your",
    "start": "1198720",
    "end": "1205760"
  },
  {
    "text": "library in a very lightweight fashion like this",
    "start": "1205760",
    "end": "1210320"
  },
  {
    "text": "um and and this i think it will work so let's try it out",
    "start": "1210880",
    "end": "1218240"
  },
  {
    "text": "what i have here is that i have a docker compose which runs some infra including zipkin",
    "start": "1218240",
    "end": "1224880"
  },
  {
    "text": "so let's see how it goes",
    "start": "1224880",
    "end": "1229080"
  },
  {
    "text": "um so this is my test stuff i have",
    "start": "1235440",
    "end": "1241039"
  },
  {
    "text": "to try it out and say put something and it just delays randomly and then it",
    "start": "1241039",
    "end": "1246880"
  },
  {
    "text": "returns down 10 the 10 i put here and if i go to zipkin",
    "start": "1246880",
    "end": "1252000"
  },
  {
    "text": "this is a scary moment for me because i tried it many times sometimes it didn't work but it worked this time",
    "start": "1252000",
    "end": "1258799"
  },
  {
    "text": "so this is the service name payments right",
    "start": "1258799",
    "end": "1264480"
  },
  {
    "text": "and this is the done job thing and it has the library name my pressures",
    "start": "1264480",
    "end": "1271039"
  },
  {
    "text": "and how much it took to run this service is 23.9 milliseconds and that's the",
    "start": "1271039",
    "end": "1276080"
  },
  {
    "text": "thing between 0 and 100 the the time of my delay okay now we know how long it takes to",
    "start": "1276080",
    "end": "1282559"
  },
  {
    "text": "execute the service or instrumented within the library what else can we do",
    "start": "1282559",
    "end": "1288799"
  },
  {
    "text": "well we probably need to put it in the context of http execution because we're talking communication right distributed",
    "start": "1288799",
    "end": "1294960"
  },
  {
    "text": "systems so and then this brilliant work that people",
    "start": "1294960",
    "end": "1301200"
  },
  {
    "text": "have done with opentelemetry4.net will help us a lot so what i need to do now and i would say",
    "start": "1301200",
    "end": "1308240"
  },
  {
    "text": "just add asb net core instrumentation",
    "start": "1308240",
    "end": "1313679"
  },
  {
    "text": "and see what happens",
    "start": "1313679",
    "end": "1317240"
  },
  {
    "text": "let me close this and i will do 20 execute",
    "start": "1320640",
    "end": "1326080"
  },
  {
    "text": "go to zipkin find a choice run the query",
    "start": "1326080",
    "end": "1331600"
  },
  {
    "text": "and i get this voila",
    "start": "1331600",
    "end": "1337039"
  },
  {
    "text": "so the first thing that happened is the http call coming to us using method gets localhost 5050 as a host the route the",
    "start": "1337039",
    "end": "1345200"
  },
  {
    "text": "response the target even the url maybe if you have some secret information here",
    "start": "1345200",
    "end": "1350400"
  },
  {
    "text": "you shouldn't record it but that's what open telemetry package does you see here is the name and this is our service how this magic",
    "start": "1350400",
    "end": "1358000"
  },
  {
    "text": "actually happened because we never associated one but another this happens",
    "start": "1358000",
    "end": "1364000"
  },
  {
    "text": "using that thing that i told you the activity when it gets started it we do have",
    "start": "1364000",
    "end": "1370240"
  },
  {
    "text": "it in a sync local context so what happens is when you say activity",
    "start": "1370240",
    "end": "1375360"
  },
  {
    "text": "dot start it will see do i have something in activity.current",
    "start": "1375360",
    "end": "1382159"
  },
  {
    "text": "and in the previous example it was null so it was just one thing and in this case when i have http called",
    "start": "1382159",
    "end": "1388640"
  },
  {
    "text": "open selector instrumentation for asp.net core it started an activity already",
    "start": "1388640",
    "end": "1393760"
  },
  {
    "text": "so when my service starts the activity it attaches my activity to the one that's already",
    "start": "1393760",
    "end": "1399679"
  },
  {
    "text": "running so it kind of builds the parent parent-child relationship between them",
    "start": "1399679",
    "end": "1405760"
  },
  {
    "text": "and then i see this right so what can we do with with this",
    "start": "1406159",
    "end": "1413120"
  },
  {
    "text": "um i will show you gigantic span or trace afterwards but important thing is",
    "start": "1413120",
    "end": "1419360"
  },
  {
    "text": "that every this is a trace right",
    "start": "1419360",
    "end": "1424799"
  },
  {
    "text": "and every operation within a trace is a span and it can cross the con the boundaries",
    "start": "1424799",
    "end": "1430720"
  },
  {
    "text": "of a single service to do that you need to propagate the execution context you need to",
    "start": "1430720",
    "end": "1437120"
  },
  {
    "text": "um in your let's say you make an http call to another service when you do that and at the recent",
    "start": "1437120",
    "end": "1443520"
  },
  {
    "text": "instrumentation for openclm chief of http client and for for sp not core like we see",
    "start": "1443520",
    "end": "1450480"
  },
  {
    "text": "they will put the current activity span id and trace id to the headers of",
    "start": "1450480",
    "end": "1456400"
  },
  {
    "text": "that call and when the other side receives it they will retrieve it and",
    "start": "1456400",
    "end": "1461520"
  },
  {
    "text": "spin up a new activity and use it as a parent so in this case everything lines up and",
    "start": "1461520",
    "end": "1466960"
  },
  {
    "text": "you get gigantic traces with a lot of spans i have it working so i will show it later but for now what i want to say",
    "start": "1466960",
    "end": "1473600"
  },
  {
    "text": "okay what about metrics because that didn't work at all",
    "start": "1473600",
    "end": "1478640"
  },
  {
    "text": "there are two ways to instrument your thing with metrics basically we got in this new thing",
    "start": "1478720",
    "end": "1486240"
  },
  {
    "text": "in this system diagnostic metrics namespace that's called",
    "start": "1486240",
    "end": "1491360"
  },
  {
    "text": "meter this one and meteor doesn't do anything it doesn't build promises metrics it",
    "start": "1491360",
    "end": "1497679"
  },
  {
    "text": "doesn't do much it basically a proxy thing it's an abstraction for the higher for the implementation to",
    "start": "1497679",
    "end": "1504640"
  },
  {
    "text": "collect data for metrics right so it passed through but it gives you a nice api",
    "start": "1504640",
    "end": "1510400"
  },
  {
    "text": "so the meter can do using the meter",
    "start": "1510400",
    "end": "1517039"
  },
  {
    "text": "which i now create using the same instrumentation name you can create for example a histogram metric in this case",
    "start": "1517039",
    "end": "1523120"
  },
  {
    "text": "i create a histogram of type double that's called duration this the description of things and this it's not",
    "start": "1523120",
    "end": "1529840"
  },
  {
    "text": "description it's a name and i give it a unit so it's in milliseconds",
    "start": "1529840",
    "end": "1535919"
  },
  {
    "text": "so now what do we need to do with it why this stuff exists",
    "start": "1535919",
    "end": "1541600"
  },
  {
    "text": "so there are two ways of basically collecting metrics so one way if i would be doing the same as here",
    "start": "1541600",
    "end": "1548880"
  },
  {
    "text": "i will create a class disposable that will instantiate a meter",
    "start": "1548880",
    "end": "1553919"
  },
  {
    "text": "create a bunch of metrics inject this class to my service and wrap up the execution of my long",
    "start": "1553919",
    "end": "1561279"
  },
  {
    "text": "operation into like you know time watcher or something like that",
    "start": "1561279",
    "end": "1566640"
  },
  {
    "text": "so then by the end the execution finishes i will get this time and report to the metric i already measure it using",
    "start": "1566640",
    "end": "1573279"
  },
  {
    "text": "the activity right an activity has a duration i told you we just not not used it so what you",
    "start": "1573279",
    "end": "1579600"
  },
  {
    "text": "could do is to create this nice thing that's called activity listener",
    "start": "1579600",
    "end": "1587600"
  },
  {
    "text": "activity listener you can you can create it yourself at any time and you specify up to four",
    "start": "1587600",
    "end": "1595360"
  },
  {
    "text": "functions the first function is deciding which activity i need to listen to which",
    "start": "1595360",
    "end": "1600960"
  },
  {
    "text": "activity source i need to listen to the second one tells how to sample this",
    "start": "1600960",
    "end": "1606000"
  },
  {
    "text": "in this case i don't sample anything i want all the data and there are two more delegates one is activity stop activity",
    "start": "1606000",
    "end": "1613360"
  },
  {
    "text": "activity started an activity stopped and these functions will be called for every activity that fits in these two",
    "start": "1613360",
    "end": "1619600"
  },
  {
    "text": "conditions when it starts no one stops it allows you to fetch data about anything that",
    "start": "1619600",
    "end": "1625600"
  },
  {
    "text": "happens in the system which is instrumented with activities i'm not interested in activity started",
    "start": "1625600",
    "end": "1631039"
  },
  {
    "text": "because it has nothing for me but activity stopped already has a duration so what i'm gonna do i create this",
    "start": "1631039",
    "end": "1638000"
  },
  {
    "text": "listener and this is a static thing it says activity source add this listener right",
    "start": "1638000",
    "end": "1645120"
  },
  {
    "text": "it's it's again the observable and activity stop will do a very simple thing it will take the histogram i just",
    "start": "1645120",
    "end": "1651200"
  },
  {
    "text": "created and record the duration in milliseconds",
    "start": "1651200",
    "end": "1656240"
  },
  {
    "text": "which means that that is not this i don't need to get this class to my",
    "start": "1656320",
    "end": "1661360"
  },
  {
    "text": "instrumented service it will just work if i keep instrumenting my app so what i do here",
    "start": "1661360",
    "end": "1668320"
  },
  {
    "text": "i already have metrics here so let me do this add instrumentation",
    "start": "1668320",
    "end": "1674320"
  },
  {
    "text": "and it will be my metrics i still need to register though",
    "start": "1674320",
    "end": "1681960"
  },
  {
    "text": "and then i need to say add meter and i need the same measurements",
    "start": "1686880",
    "end": "1694000"
  },
  {
    "text": "instrumentation name so you see it's kind of convention based because it's all",
    "start": "1694000",
    "end": "1699760"
  },
  {
    "text": "based on observables and observers and all these things like should i listen to that",
    "start": "1699760",
    "end": "1705200"
  },
  {
    "text": "where is it over here see it kind of checks",
    "start": "1705200",
    "end": "1710399"
  },
  {
    "text": "and the meter has the same name so it's kind of decoupled and it's nice because you don't need to have a lot of",
    "start": "1710399",
    "end": "1716080"
  },
  {
    "text": "things from system diagnostics inside a service except of instantiated activity",
    "start": "1716080",
    "end": "1723799"
  },
  {
    "text": "two lines of code i've done let's run it and see what happens",
    "start": "1724159",
    "end": "1729039"
  },
  {
    "text": "let me close it execute a couple of times and then i can go to",
    "start": "1734559",
    "end": "1741120"
  },
  {
    "text": "the metrics endpoint because you've seen that i enabled promises exporter from isis exporter",
    "start": "1741120",
    "end": "1748480"
  },
  {
    "text": "ah of course i need to add a server that exposes oh it's already here",
    "start": "1748480",
    "end": "1756399"
  },
  {
    "text": "it has the promises scrapping endpoints 500",
    "start": "1756399",
    "end": "1763600"
  },
  {
    "text": "the demo effect of course i'm not sure what i'm running now i",
    "start": "1763760",
    "end": "1770080"
  },
  {
    "text": "think that's right now",
    "start": "1770080",
    "end": "1776120"
  },
  {
    "text": "so i have no idea what doesn't work because",
    "start": "1780240",
    "end": "1785600"
  },
  {
    "text": "it worked 10 minutes ago",
    "start": "1785600",
    "end": "1788640"
  },
  {
    "text": "no 50 50 is it correct yes nevertheless you have to believe me that",
    "start": "1792880",
    "end": "1799440"
  },
  {
    "text": "it exposes permission metrics properly um maybe because it's release candidate",
    "start": "1799440",
    "end": "1805760"
  },
  {
    "text": "actually everything here seems to be instrumented correctly unless i forgot something no it actually",
    "start": "1805760",
    "end": "1811679"
  },
  {
    "text": "all is fine so [Music] no it actually worked",
    "start": "1811679",
    "end": "1818399"
  },
  {
    "text": "i can do one thing here to just confirm if it works or not without my instrumentation i can say add",
    "start": "1818399",
    "end": "1825120"
  },
  {
    "text": "a spin-off core instrumentation because that's not custom that's default and i can run it again",
    "start": "1825120",
    "end": "1832640"
  },
  {
    "text": "and see if they give me anything at all and they don't",
    "start": "1833120",
    "end": "1838960"
  },
  {
    "text": "so i guess that's not my fault and i can blame microsoft for that yeah",
    "start": "1840320",
    "end": "1846960"
  },
  {
    "text": "that's kind of sad because metrics are good nevertheless",
    "start": "1847200",
    "end": "1852399"
  },
  {
    "text": "so",
    "start": "1852399",
    "end": "1854640"
  },
  {
    "text": "let's see how this whole thing works in the real like more um",
    "start": "1862080",
    "end": "1867919"
  },
  {
    "text": "how to call it more comprehensive distributed system let's just comment it out all of it",
    "start": "1867919",
    "end": "1875120"
  },
  {
    "text": "and gets to something that i have from before like this",
    "start": "1875200",
    "end": "1881760"
  },
  {
    "text": "i open telemetry and add services and i skip the rest right",
    "start": "1881760",
    "end": "1888640"
  },
  {
    "text": "and i need to run another one which is the booking thing so let's oh that's why",
    "start": "1888640",
    "end": "1896158"
  },
  {
    "text": "something is badly wrong on my machine let's see if it runs payments",
    "start": "1898559",
    "end": "1906360"
  },
  {
    "text": "yeah i need to keep this one",
    "start": "1918320",
    "end": "1921840"
  },
  {
    "text": "okay my matrix",
    "start": "1937600",
    "end": "1941559"
  },
  {
    "text": "okay it works oh i have too many swagger windows here",
    "start": "1950640",
    "end": "1957200"
  },
  {
    "text": "opened so let me try to do some",
    "start": "1957200",
    "end": "1963120"
  },
  {
    "text": "distributed thing so i have one service running here which",
    "start": "1963120",
    "end": "1968480"
  },
  {
    "text": "has some operations and it's in the vegetable system which produces events and stuff like that so",
    "start": "1968480",
    "end": "1974240"
  },
  {
    "text": "let's just create a booking and uh guest id",
    "start": "1974240",
    "end": "1979600"
  },
  {
    "text": "and whatever and then put dates 100",
    "start": "1979600",
    "end": "1985440"
  },
  {
    "text": "euro executed should work",
    "start": "1985440",
    "end": "1990559"
  },
  {
    "text": "so let's see what's in zip can now find a trace",
    "start": "1990559",
    "end": "1996399"
  },
  {
    "text": "and this is the one right and it already exceeds what we ever experienced before it has a lot of stuff because that",
    "start": "1996399",
    "end": "2003600"
  },
  {
    "text": "system is way more distributed there is an http call coming in there is a command handler there is event storage",
    "start": "2003600",
    "end": "2010240"
  },
  {
    "text": "and there is a consumer side that projects it to so here in this system there is an operation going outside of the single",
    "start": "2010240",
    "end": "2017600"
  },
  {
    "text": "thread of execution so the http command gets handled and then afterwards event gets projected to",
    "start": "2017600",
    "end": "2024080"
  },
  {
    "text": " database and you will see them all independently however they all connected in the single trace",
    "start": "2024080",
    "end": "2030000"
  },
  {
    "text": "right and you can see that this operation gp100 already returned the results to the browser but the operation",
    "start": "2030000",
    "end": "2035919"
  },
  {
    "text": "is still ongoing because it ex like it spans over the execution of http call",
    "start": "2035919",
    "end": "2043760"
  },
  {
    "text": "if we run now this guy and say we record a payment which is",
    "start": "2044720",
    "end": "2050878"
  },
  {
    "text": "another microservice of sorts",
    "start": "2050879",
    "end": "2054480"
  },
  {
    "text": "and use like 100 this is the payment microservice",
    "start": "2056800",
    "end": "2063760"
  },
  {
    "text": "that does its own thing so everything is right and then we go",
    "start": "2063760",
    "end": "2069839"
  },
  {
    "text": "find a trace and let's just run it again",
    "start": "2069839",
    "end": "2076560"
  },
  {
    "text": "consume",
    "start": "2082000",
    "end": "2085000"
  },
  {
    "text": "that what was supposed to happen so i'm able to read events from under 3. yeah i need to do it again",
    "start": "2090800",
    "end": "2098919"
  },
  {
    "text": "and we will look at those separately so this is the operation that happened with an error so",
    "start": "2105280",
    "end": "2111440"
  },
  {
    "text": "when you have an activity you can tell the activity to set status to error and in",
    "start": "2111440",
    "end": "2117359"
  },
  {
    "text": "proper apm tool it will be shown as an error and you can see exceptions and everything attached to it if you do it",
    "start": "2117359",
    "end": "2123599"
  },
  {
    "text": "correctly openclimate itself has quite a few extensions for activity class",
    "start": "2123599",
    "end": "2130720"
  },
  {
    "text": "that allows you to set record exceptions so you can use opencm sdk for that or you can use just your own thing",
    "start": "2130720",
    "end": "2137760"
  },
  {
    "text": "the only thing you need is actually set a bunch of tags and apparently most of the api providers can",
    "start": "2137760",
    "end": "2143760"
  },
  {
    "text": "understand this so these names are important if we still now look at the successful",
    "start": "2143760",
    "end": "2149599"
  },
  {
    "text": "operation you can see here we go",
    "start": "2149599",
    "end": "2155760"
  },
  {
    "text": "so that that goes from between two services we have uh some kind of collaboration i believe",
    "start": "2156000",
    "end": "2164320"
  },
  {
    "text": "so here you can see that the the the single operation exceeds um like i said",
    "start": "2166800",
    "end": "2171920"
  },
  {
    "text": "the execution of a single command it goes to other services and stuff like that what",
    "start": "2171920",
    "end": "2177119"
  },
  {
    "text": "i can also look at is the service dependencies",
    "start": "2177119",
    "end": "2182400"
  },
  {
    "text": "payment's supposed to be here but never mind so it has the booking stuff and it has localhost 2113 which is event store",
    "start": "2182480",
    "end": "2190079"
  },
  {
    "text": "and it has localhost 27017 which is mongodb",
    "start": "2190079",
    "end": "2195119"
  },
  {
    "text": "datadock shows it nicer and aws x shows it much nicer but this is the",
    "start": "2195119",
    "end": "2200640"
  },
  {
    "text": "primitive thing already shows the power of distributed trace because it tells you how services talk to each other",
    "start": "2200640",
    "end": "2207520"
  },
  {
    "text": "how you propagate the context if you look at the message that i posted through the wire",
    "start": "2210400",
    "end": "2218160"
  },
  {
    "text": "i propagate remote context by setting certain tags and metadata like think about headers in",
    "start": "2218160",
    "end": "2223920"
  },
  {
    "text": "http requests and stuff like that so you need a span id you need a trace id these things you need to get over the wire to",
    "start": "2223920",
    "end": "2229920"
  },
  {
    "text": "the to the consumer and then they will be able to create their own spans and connect them together and everything looks fine",
    "start": "2229920",
    "end": "2237920"
  },
  {
    "text": "so what open telemetry does in addition to that",
    "start": "2238560",
    "end": "2243838"
  },
  {
    "text": "they have an ambition because you see you work someone worked with prometheus",
    "start": "2246079",
    "end": "2251839"
  },
  {
    "text": "right i failed to show it so promisius metrics are exposed in text and promises is a pool based metric",
    "start": "2251839",
    "end": "2258640"
  },
  {
    "text": "collection so you instruct promises to pull certain data sources it goes to the data source",
    "start": "2258640",
    "end": "2264720"
  },
  {
    "text": "usually like something the slash metrics uh it's usually open it doesn't does it",
    "start": "2264720",
    "end": "2269760"
  },
  {
    "text": "support authorization i don't remember we usually close this end point only for internal use",
    "start": "2269760",
    "end": "2275839"
  },
  {
    "text": "promises call this on channel like five five seconds ten seconds stuff like that so it's not like up metrics if ever you",
    "start": "2275839",
    "end": "2282400"
  },
  {
    "text": "ever worked with up metrics it continues to accumulate things and then decides to send it somewhere and it's not like",
    "start": "2282400",
    "end": "2288400"
  },
  {
    "text": "statsd starts they have a completely different product called the use udp and they can continuously push metrics and",
    "start": "2288400",
    "end": "2294320"
  },
  {
    "text": "in order not to overload the receiver of metrics they sample them",
    "start": "2294320",
    "end": "2299599"
  },
  {
    "text": "prometheus doesn't really sample anything because it is what we call observable metrics",
    "start": "2299599",
    "end": "2306720"
  },
  {
    "text": "they call you so you need to accumulate those metrics and you need to expose them when the",
    "start": "2306720",
    "end": "2312079"
  },
  {
    "text": "time comes so when promises ask for it and it's a text format",
    "start": "2312079",
    "end": "2317599"
  },
  {
    "text": "statsd apparently uses odp and they use message pack",
    "start": "2317599",
    "end": "2322400"
  },
  {
    "text": "elastic uses documents in elasticsearch you actually need to say index document then it will go there and provide you",
    "start": "2323359",
    "end": "2329599"
  },
  {
    "text": "with enough information everyone uses their own thing and that is kind of a problem opencelebrity got its ambition",
    "start": "2329599",
    "end": "2336960"
  },
  {
    "text": "to create a protocol which is jrpc based supposed to be very very fast",
    "start": "2336960",
    "end": "2342000"
  },
  {
    "text": "which will do all these things and get it standardized so their idea is",
    "start": "2342000",
    "end": "2349200"
  },
  {
    "text": "that there is a collector that can expose receivers",
    "start": "2349200",
    "end": "2355280"
  },
  {
    "text": "in different formats so they even ready to receive data in yaga format and promises format",
    "start": "2355280",
    "end": "2360880"
  },
  {
    "text": "they will push it through the metrics pipeline and trace this pipeline and maybe even login",
    "start": "2360880",
    "end": "2366480"
  },
  {
    "text": "pipeline and you apply certain things like you can apply batching and something inside a collector and you can",
    "start": "2366480",
    "end": "2372480"
  },
  {
    "text": "create custom authorizations you can create custom samplers whatever and put it in the collector",
    "start": "2372480",
    "end": "2379359"
  },
  {
    "text": "you run collectors and applications so it's ready-made it's a docker file a docker container you can actually run it",
    "start": "2379359",
    "end": "2385760"
  },
  {
    "text": "right and on the other side you have exporters",
    "start": "2385760",
    "end": "2391760"
  },
  {
    "text": "and there are a lot of exporters right now and i think the number of exporters will increase so if you look at",
    "start": "2391760",
    "end": "2397000"
  },
  {
    "text": "openselemc.net for example they have a bunch of exporters built in and zip can export a jaggery sport and promise",
    "start": "2397000",
    "end": "2402560"
  },
  {
    "text": "exporter and some other z pages they already in there so you can just drop in the package and worksport like i've done",
    "start": "2402560",
    "end": "2408400"
  },
  {
    "text": "for zipkin and for prometheus which apparently didn't work for some reason",
    "start": "2408400",
    "end": "2414720"
  },
  {
    "text": "but we use data dog in airbox like what do we do well we deployed a collector",
    "start": "2415200",
    "end": "2422160"
  },
  {
    "text": "we enabled datadog exporter which supports both metrics and traces and we started to push our metrics and",
    "start": "2422160",
    "end": "2429280"
  },
  {
    "text": "traces to the collector instead of putting it directly to datadog and it works pretty nicely because then",
    "start": "2429280",
    "end": "2435680"
  },
  {
    "text": "it's really kind of ender agnostic we can push from the same collector we can push somewhere else",
    "start": "2435680",
    "end": "2441200"
  },
  {
    "text": "like in google cloud or something like that so how this actually works",
    "start": "2441200",
    "end": "2447520"
  },
  {
    "text": "i have the collector running i will show you how i configured it",
    "start": "2447520",
    "end": "2453520"
  },
  {
    "text": "so let me stop this thing",
    "start": "2453520",
    "end": "2456800"
  },
  {
    "text": "collector [Music] i have a docker compose file",
    "start": "2459440",
    "end": "2465640"
  },
  {
    "text": "yeah you can see it's configured and this is basically not there are two versions of",
    "start": "2468160",
    "end": "2474560"
  },
  {
    "text": "course there is the open celebrity collector and open syllabus collective contrib that has a lot of exporters and",
    "start": "2474560",
    "end": "2480400"
  },
  {
    "text": "other things and i tell you to use my config file and it exposed the grpc port i think one of",
    "start": "2480400",
    "end": "2486079"
  },
  {
    "text": "them is legacy another one is new it's always like that they have quite a few breaking changes on the go",
    "start": "2486079",
    "end": "2492319"
  },
  {
    "text": "and the configuration file is here and you can take a picture of my api key",
    "start": "2492319",
    "end": "2498400"
  },
  {
    "text": "but on the free plan it will shut me down if you misuse it anyway so it just exports to honeycomb",
    "start": "2498400",
    "end": "2504800"
  },
  {
    "text": "honeycomb is another thing that just accepts apm data basically they can only process traces",
    "start": "2504800",
    "end": "2511760"
  },
  {
    "text": "i chose it because i can show it straight away how it works so you can see here we configure receivers",
    "start": "2511760",
    "end": "2518079"
  },
  {
    "text": "from the thing is that it is a collection you can can understand you can configure more than one receiver",
    "start": "2518079",
    "end": "2524160"
  },
  {
    "text": "otlp means what openclm should protocol with that that is generic protocol that he designed",
    "start": "2524160",
    "end": "2530079"
  },
  {
    "text": "and it uses jrpc and http we had a batch processor so it will timeout and collect",
    "start": "2530079",
    "end": "2535440"
  },
  {
    "text": "batches by 10 seconds you can do some health pages you pages whatever extensions",
    "start": "2535440",
    "end": "2541200"
  },
  {
    "text": "normally you you could basically say i want kubernetes extensions and they will collect some metrics around itself",
    "start": "2541200",
    "end": "2548079"
  },
  {
    "text": "and maybe put some tags that are default for that node and here is the configuration for honeycomb for datadog you would have",
    "start": "2548079",
    "end": "2554319"
  },
  {
    "text": "something else for google cloud you probably just set some environment variables",
    "start": "2554319",
    "end": "2559920"
  },
  {
    "text": "and i have one thing here which is the pipeline i had to remove the metrics pipeline",
    "start": "2559920",
    "end": "2566960"
  },
  {
    "text": "because it crashed and said we don't support metrics which is true and then you say for tracy's pipeline i",
    "start": "2566960",
    "end": "2573359"
  },
  {
    "text": "have the otlp receiver which is opencelem2 protocol i have a batch processor this kind of",
    "start": "2573359",
    "end": "2579440"
  },
  {
    "text": "pipeline in the middle and i export it to honeycomb and i can also export it to logging for",
    "start": "2579440",
    "end": "2584560"
  },
  {
    "text": "example limit log on a console so right now when i have it running in my docker compose",
    "start": "2584560",
    "end": "2592079"
  },
  {
    "text": "i can say that you let just limit to something that actually works",
    "start": "2592079",
    "end": "2598000"
  },
  {
    "text": "without promises and other things stop that no actually can keep its",
    "start": "2598000",
    "end": "2606240"
  },
  {
    "text": "i can go to my add open telemetry thing",
    "start": "2606240",
    "end": "2611359"
  },
  {
    "text": "and when i'm adding the traces i already have this hotel otlp exporter",
    "start": "2613920",
    "end": "2621400"
  },
  {
    "text": "enabled and that's probably why i don't see traces from payment silly me",
    "start": "2621599",
    "end": "2629200"
  },
  {
    "text": "um so when i was running this operation so let me just do the same for the bookings and then we see the full",
    "start": "2629520",
    "end": "2635760"
  },
  {
    "text": "trace it's the openclamatech exporter you see all is",
    "start": "2635760",
    "end": "2642720"
  },
  {
    "text": "done these packages are available you can just scrap them out",
    "start": "2642720",
    "end": "2648319"
  },
  {
    "text": "and here i have also the jpc protocol instrumentation which is part of open telemetry",
    "start": "2648319",
    "end": "2654000"
  },
  {
    "text": "and what i need to do in registration here",
    "start": "2654000",
    "end": "2659760"
  },
  {
    "text": "i need to replace the zipkin exporter to open telemetry exporter",
    "start": "2659760",
    "end": "2666400"
  },
  {
    "text": "choose this one",
    "start": "2668720",
    "end": "2672119"
  },
  {
    "text": "right here let's run them both",
    "start": "2676319",
    "end": "2684599"
  },
  {
    "text": "so now i'm not running any vendor library inside my applications i export to opengl check on exporter and it takes",
    "start": "2690079",
    "end": "2697440"
  },
  {
    "text": "care of distributing my traces using their own protocols whatever exporters that the vendors have provided",
    "start": "2697440",
    "end": "2703680"
  },
  {
    "text": "for the open telemetry contrib so if i go whatever",
    "start": "2703680",
    "end": "2708880"
  },
  {
    "text": "to europe",
    "start": "2712000",
    "end": "2718880"
  },
  {
    "text": "execute that everything is fine um honeycomb takes a bit of time to",
    "start": "2718880",
    "end": "2725359"
  },
  {
    "text": "because again with 10 seconds batching and stuff like that i have some traces already reported but i can run a query",
    "start": "2725359",
    "end": "2731920"
  },
  {
    "text": "and see if my new trace came up yeah it did",
    "start": "2731920",
    "end": "2737280"
  },
  {
    "text": "so that's the trace in kanikom let's see how it looks like looks a bit nicer zipkin",
    "start": "2737280",
    "end": "2744160"
  },
  {
    "text": "uh this first thing with the http call takes longer because it's uh how web api",
    "start": "2744160",
    "end": "2749680"
  },
  {
    "text": "works i think they resolve dependencies for controllers on the first call because they're kind of implicitly registered",
    "start": "2749680",
    "end": "2755359"
  },
  {
    "text": "if i do one more request here i lost my browser sorry",
    "start": "2755359",
    "end": "2761040"
  },
  {
    "text": "and it will be just another id there",
    "start": "2761040",
    "end": "2766880"
  },
  {
    "text": "and everything was fine and let me try to do the payment because i think payment service reports to honeycomb",
    "start": "2768720",
    "end": "2775119"
  },
  {
    "text": "already record payments",
    "start": "2775119",
    "end": "2780560"
  },
  {
    "text": "that's too much",
    "start": "2785680",
    "end": "2789160"
  },
  {
    "text": "and then let's see how that will go",
    "start": "2791119",
    "end": "2795359"
  },
  {
    "text": "so i guess that was the second call is the same one let's run the query again",
    "start": "2796880",
    "end": "2804160"
  },
  {
    "text": "yeah so",
    "start": "2806079",
    "end": "2811119"
  },
  {
    "text": "that looks a bit more decent yeah",
    "start": "2811359",
    "end": "2817920"
  },
  {
    "text": "so this is what we get from a normal kind of apm provider which is not zipking because zipkin is too vague",
    "start": "2817920",
    "end": "2824319"
  },
  {
    "text": "you have a lot of stuff and when you start browsing through it you have a lot of tags and you can build new queries",
    "start": "2824319",
    "end": "2829680"
  },
  {
    "text": "and things like that and if you go to for example here in a query they give you a lot of",
    "start": "2829680",
    "end": "2836319"
  },
  {
    "text": "different things which you can kind of compose a query with like routes db name",
    "start": "2836319",
    "end": "2841839"
  },
  {
    "text": "db operation and all the tags here are kind of default there is a bunch of tags predefined you can find them all as",
    "start": "2841839",
    "end": "2847599"
  },
  {
    "text": "constants in opencentury library they're part of the spec i think so when you instrument your library you",
    "start": "2847599",
    "end": "2853599"
  },
  {
    "text": "need to think about all these tags so other applications understand you",
    "start": "2853599",
    "end": "2859839"
  },
  {
    "text": "open telemetry api library 4.net provides also the text map propagator so",
    "start": "2860000",
    "end": "2866079"
  },
  {
    "text": "when you need to push the metadata to remote to the context of your http call",
    "start": "2866079",
    "end": "2871440"
  },
  {
    "text": "or something or the other way around extract it from it you can use that propagator but you can also write your",
    "start": "2871440",
    "end": "2877119"
  },
  {
    "text": "own you just manipulate the headers or extract data from headers it's pretty easy to do",
    "start": "2877119",
    "end": "2883280"
  },
  {
    "text": "so they also suggest you some things for example this is raw data right and if you go",
    "start": "2883280",
    "end": "2888800"
  },
  {
    "text": "what the hell run the query",
    "start": "2888800",
    "end": "2893520"
  },
  {
    "text": "ah yeah holy com whatever maybe i'm not on a paid plan or something",
    "start": "2895760",
    "end": "2901760"
  },
  {
    "text": "they have a bunch of stuff so zip can for example zip code shows you the service map and data dock shows you",
    "start": "2901760",
    "end": "2908880"
  },
  {
    "text": "the service map shall i show our service map once martin",
    "start": "2908880",
    "end": "2915078"
  },
  {
    "text": "i won't can't stop me",
    "start": "2916720",
    "end": "2921119"
  },
  {
    "text": "this is production there's not not that we are very proud of what we",
    "start": "2923359",
    "end": "2928800"
  },
  {
    "text": "have because we haven't instrumented everything as we should and i think with open sleims we have a",
    "start": "2928800",
    "end": "2934800"
  },
  {
    "text": "better chance because they have much better kind of service name conventions and things like that",
    "start": "2934800",
    "end": "2940559"
  },
  {
    "text": "this stuff is instrumented with open tracing as i believe most of it not all of it",
    "start": "2940559",
    "end": "2947200"
  },
  {
    "text": "and if i go to apm service map",
    "start": "2947200",
    "end": "2951440"
  },
  {
    "text": "so when you instrument your systems you get something like this but i can assure you if you do it right you will get it",
    "start": "2952720",
    "end": "2959040"
  },
  {
    "text": "better because we haven't done it right there are a bunch of things that are not connected to each other",
    "start": "2959040",
    "end": "2964319"
  },
  {
    "text": "and it should be gigantic thing right in the middle that's called legacy database",
    "start": "2964319",
    "end": "2970079"
  },
  {
    "text": "it's not shown so we've probably not done our job right but we're going to fix it",
    "start": "2970079",
    "end": "2975440"
  },
  {
    "text": "the problem here that service names and arbitration are kind of vague we assign like this is a legacy database for",
    "start": "2975440",
    "end": "2982400"
  },
  {
    "text": "position this is a legacy database for customers this is legacy database for something else because they we use the service name",
    "start": "2982400",
    "end": "2989200"
  },
  {
    "text": "itself as a prefix and a database as a suffix and that's entirely wrong when",
    "start": "2989200",
    "end": "2994559"
  },
  {
    "text": "you instrument by default with openclemg what you get is things like that right",
    "start": "2994559",
    "end": "3000000"
  },
  {
    "text": "so let me run this query and show our spans you see it will use the service name",
    "start": "3000000",
    "end": "3006960"
  },
  {
    "text": "provided in my code i see this one add service when you do",
    "start": "3006960",
    "end": "3013680"
  },
  {
    "text": "the service builder thing it uses this over here but when i do the remote call",
    "start": "3013680",
    "end": "3019200"
  },
  {
    "text": "using the default instrumentation like jrpc or mongodb you see that it uses the hostname of the target",
    "start": "3019200",
    "end": "3026720"
  },
  {
    "text": "and if you call the same host name let's say my atlas cluster or my gigantic legacy database it will always",
    "start": "3026720",
    "end": "3033200"
  },
  {
    "text": "be correct so you will see the gigantic ball of like ball of mud right in the middle that everyone is calling to",
    "start": "3033200",
    "end": "3039440"
  },
  {
    "text": "because it will use a host name and like let's say i need to instrument it with",
    "start": "3039440",
    "end": "3044720"
  },
  {
    "text": "http client guess what the research typic line instrumentation library from open telemetry so that's pretty useful",
    "start": "3044720",
    "end": "3050319"
  },
  {
    "text": "even if you don't want to instrument your own libraries you can already use the instrumentation provided for you",
    "start": "3050319",
    "end": "3056720"
  },
  {
    "text": "and you will instrument jrpc asp.net core or asp.net is also supported or dot",
    "start": "3056720",
    "end": "3062720"
  },
  {
    "text": "that framework web api is supported even ado.net radius calls",
    "start": "3062720",
    "end": "3068400"
  },
  {
    "text": "there is a library that jimmy bogart wrote for opensvm2 that supports instrumenting mongodb",
    "start": "3068400",
    "end": "3073839"
  },
  {
    "text": "which i use here these are mongodb calls so it's just a matter of searching for it and if we look at how many exporters",
    "start": "3073839",
    "end": "3080880"
  },
  {
    "text": "they have in a collector because you might say okay there is no exporter in",
    "start": "3080880",
    "end": "3086160"
  },
  {
    "text": "open telemetry for my apm provider so what i do well you can use collector right and",
    "start": "3086160",
    "end": "3091760"
  },
  {
    "text": "it's like you see i can scroll through this list and i'm quite sure if you use some",
    "start": "3091760",
    "end": "3097359"
  },
  {
    "text": "provider you'll probably find it in the list they have everything i think x-ray azure",
    "start": "3097359",
    "end": "3103119"
  },
  {
    "text": "monitor google cloud elastic whatever so",
    "start": "3103119",
    "end": "3109520"
  },
  {
    "text": "but if you don't do anything at all which some of you admitted so please start doing that because it",
    "start": "3109520",
    "end": "3116000"
  },
  {
    "text": "will save your day and hopefully save your night right and you actually have to do it because",
    "start": "3116000",
    "end": "3121760"
  },
  {
    "text": "otherwise you don't know how is system work",
    "start": "3121760",
    "end": "3125838"
  },
  {
    "text": "i think that's my last slide",
    "start": "3129359",
    "end": "3134400"
  },
  {
    "text": "i'm sorry for some things in a demo it's always shaky when i do so much online coding but i hope",
    "start": "3134400",
    "end": "3140640"
  },
  {
    "text": "you got idea all right that's it questions",
    "start": "3140640",
    "end": "3146800"
  },
  {
    "text": "am i too early no i'm fine",
    "start": "3147839",
    "end": "3152359"
  },
  {
    "text": "yeah so my understanding is that the open telemetry uh for the next exposures",
    "start": "3152880",
    "end": "3161760"
  },
  {
    "text": "api but you also in the example you used using the api from microsoft are there",
    "start": "3162000",
    "end": "3167520"
  },
  {
    "text": "any benefits by using either the microsoft api or",
    "start": "3167520",
    "end": "3174480"
  },
  {
    "text": "open2lmt4.net is built on top of the things that the framework using activity and diagnostic",
    "start": "3175400",
    "end": "3182319"
  },
  {
    "text": "source and new metric api provides so they use each other",
    "start": "3182319",
    "end": "3187440"
  },
  {
    "text": "that's why in my instrumentation i only use the default things i have in my this",
    "start": "3187440",
    "end": "3193200"
  },
  {
    "text": "in this service this library which i instrumented",
    "start": "3193200",
    "end": "3200079"
  },
  {
    "text": "you can see the dependencies for it and that's the only one system diagnostics right",
    "start": "3200079",
    "end": "3206640"
  },
  {
    "text": "i think in.6 i can just remove it and still be referenced because it's part of the runtime",
    "start": "3206640",
    "end": "3212160"
  },
  {
    "text": "so that's the nice thing because you don't really need to take the dependency on that what they they have with guidelines",
    "start": "3212160",
    "end": "3217839"
  },
  {
    "text": "in opentemp.net saying you would need to take a dependency on openclave sdk",
    "start": "3217839",
    "end": "3223599"
  },
  {
    "text": "provided like the open source project if you want to [Music]",
    "start": "3223599",
    "end": "3228640"
  },
  {
    "text": "ensure that you use the same conventions and tags and everything and you also want to use api that involves spans and",
    "start": "3228640",
    "end": "3235359"
  },
  {
    "text": "traces instead of using activity they are interchangeable because they use each other and you want to use their",
    "start": "3235359",
    "end": "3242720"
  },
  {
    "text": "context propagators extraction and injection but i personally in a ventures",
    "start": "3242720",
    "end": "3248000"
  },
  {
    "text": "library i wrote my own it took me like 15 minutes it's just it's a dictionary string object you just read from it",
    "start": "3248000",
    "end": "3254319"
  },
  {
    "text": "using your own tags or their tags and that's it it's not that hard",
    "start": "3254319",
    "end": "3260240"
  },
  {
    "text": "i think by using activities and the new metric apis they",
    "start": "3260240",
    "end": "3266000"
  },
  {
    "text": "actually did a decent job on decoupling things so you don't need to take lots of dependencies to make it work because for",
    "start": "3266000",
    "end": "3271920"
  },
  {
    "text": "instrumenting with datadog we have to take dependency on data.tracer and we need to take the dependency on",
    "start": "3271920",
    "end": "3278240"
  },
  {
    "text": "serilog data.sync so we still do it but when they implement logging we will remove it as well",
    "start": "3278240",
    "end": "3284400"
  },
  {
    "text": "so and everything will go through the collector so yeah",
    "start": "3284400",
    "end": "3291720"
  },
  {
    "text": "we tried to use that and it didn't work well well we tried jager this excellent",
    "start": "3303200",
    "end": "3311359"
  },
  {
    "text": "result and we tried the same code with elastic and we didn't get",
    "start": "3311359",
    "end": "3316799"
  },
  {
    "text": "as sort of nice diagrams and some things didn't really work at all like spans so our impression",
    "start": "3316799",
    "end": "3323760"
  },
  {
    "text": "was that it it really depends on what you use what ex what exporter you so from your experience",
    "start": "3323760",
    "end": "3329920"
  },
  {
    "text": "what you would recommend to use as the best thing for discipline",
    "start": "3329920",
    "end": "3337520"
  },
  {
    "text": "well we use datadog i don't work for datadog and that they",
    "start": "3337520",
    "end": "3342559"
  },
  {
    "text": "pay me so i wouldn't recommend datadog but it's really nice too um",
    "start": "3342559",
    "end": "3348640"
  },
  {
    "text": "it's like the problem with datadog that i found is that it doesn't play nicely.net should extend at once",
    "start": "3348640",
    "end": "3355359"
  },
  {
    "text": "so for example they they provide native opencentral instrumentation for java and python i think but they haven't done",
    "start": "3355359",
    "end": "3362559"
  },
  {
    "text": "it4.net and say just go to open tracing although they know it's obsolete but we uh work around this using the",
    "start": "3362559",
    "end": "3368960"
  },
  {
    "text": "exporters so i think it doesn't really matter if it's open to them to you or not it's",
    "start": "3368960",
    "end": "3375040"
  },
  {
    "text": "just search for the best apm provider that gives you the most value what i liked about datadog",
    "start": "3375040",
    "end": "3381839"
  },
  {
    "text": "you can show this this is very nice i don't i'm not sure if other providers do the same",
    "start": "3381839",
    "end": "3388400"
  },
  {
    "text": "but these guys let's say i have something like this",
    "start": "3388400",
    "end": "3394319"
  },
  {
    "text": "like i go to the homepage it detects stuff",
    "start": "3394319",
    "end": "3399520"
  },
  {
    "text": "you know and this is the apm this is the trace it says that latency was up for more",
    "start": "3399520",
    "end": "3405200"
  },
  {
    "text": "than four hours yesterday and this is an usual change in stripper monitors they actually have some advanced ai that",
    "start": "3405200",
    "end": "3410720"
  },
  {
    "text": "detects something like that and if i go to that service i will see that these are things",
    "start": "3410720",
    "end": "3416880"
  },
  {
    "text": "and i can look on correlations between stuff like memory usage and the error rate and the hit rate and whatever",
    "start": "3416880",
    "end": "3423920"
  },
  {
    "text": "because it correlates logs from the infrastructure infrastructure metrics like cpu usage",
    "start": "3423920",
    "end": "3429760"
  },
  {
    "text": "and networks and whatever and can consolidate them all in a very nice overview",
    "start": "3429760",
    "end": "3435520"
  },
  {
    "text": "and they even like there if i use their own serilog sync",
    "start": "3435520",
    "end": "3441280"
  },
  {
    "text": "for editdoc and i have tracing enabled and i can i think we wrote it ourselves actually so we use data doctor lock sync",
    "start": "3441280",
    "end": "3448400"
  },
  {
    "text": "and we have activity running we just say everything we log within the context we'll get a span id and trace id",
    "start": "3448400",
    "end": "3454160"
  },
  {
    "text": "and netdocks can correlate traces with logs and if you get error trace you click on it you see the logs below it's",
    "start": "3454160",
    "end": "3460480"
  },
  {
    "text": "it's really nice i think most of the providers do the same it's just a matter of how it kind",
    "start": "3460480",
    "end": "3466079"
  },
  {
    "text": "of works all together so if i look at no not trace services list",
    "start": "3466079",
    "end": "3474000"
  },
  {
    "text": "and let's uh take this one which is not that good",
    "start": "3474000",
    "end": "3479599"
  },
  {
    "text": "um if i click on this one i think this is the most brilliant thing ever i'm lazy person i don't want to figure out what",
    "start": "3479760",
    "end": "3485760"
  },
  {
    "text": "monitors i need for that particular service they say we have six suggested monitors and you can",
    "start": "3485760",
    "end": "3491839"
  },
  {
    "text": "decide which one you want to enable and if i enable one they will tell me if something goes",
    "start": "3491839",
    "end": "3496880"
  },
  {
    "text": "wrong and they have a bunch of ways to tell you like the simplest would be slack and",
    "start": "3496880",
    "end": "3502160"
  },
  {
    "text": "another would be pagerduty integration and opportunity or whatever else which is cool",
    "start": "3502160",
    "end": "3507280"
  },
  {
    "text": "and i can do that right that's it i'm a devops person now",
    "start": "3507280",
    "end": "3516119"
  },
  {
    "text": "and i have a bunch of things to configure and like this is really good and um",
    "start": "3516559",
    "end": "3523200"
  },
  {
    "text": "again if you are in a single cloud you might find that your cloud provider has very good tooling if you're multi-cloud",
    "start": "3523200",
    "end": "3529839"
  },
  {
    "text": "or you're on prem you might find out that like more a cloud agnostic vendor like datadog",
    "start": "3529839",
    "end": "3536160"
  },
  {
    "text": "could provide you a better experience okay",
    "start": "3536160",
    "end": "3542760"
  },
  {
    "text": "anything else well good everyone everyone wants to go for dinner",
    "start": "3547040",
    "end": "3552640"
  },
  {
    "text": "and drink some beer all right thank you very much thank you for your patience",
    "start": "3552640",
    "end": "3558020"
  },
  {
    "text": "[Applause]",
    "start": "3558020",
    "end": "3563210"
  }
]