[
  {
    "text": "everybody hi i'm so sorry that i couldn't be with you unfortunately i was a",
    "start": "8160",
    "end": "14960"
  },
  {
    "text": "sick but i really look forward to it so thank you so much for coming today i'm sorry if i will have like half from and",
    "start": "14960",
    "end": "22560"
  },
  {
    "text": "now and then um let's hope that it will never happen um",
    "start": "22560",
    "end": "27840"
  },
  {
    "text": "but today we're going to talk about how to build centralized policy management",
    "start": "27840",
    "end": "33280"
  },
  {
    "text": "at scale so one question who's here is already using kubernetes in production",
    "start": "33280",
    "end": "41360"
  },
  {
    "text": "wonderful how who's here accidentally took down production",
    "start": "41520",
    "end": "47280"
  },
  {
    "text": "okay okay one interesting interesting so before i begin i believe that this is",
    "start": "47360",
    "end": "53120"
  },
  {
    "text": "the first time that we meet so hello everybody let me just fix it",
    "start": "53120",
    "end": "59280"
  },
  {
    "text": "hi my name is noah barkey i am a developer advocate at the tree i've been",
    "start": "59280",
    "end": "64400"
  },
  {
    "text": "a full stock developer for about seven years i'm also a tech writer and one of",
    "start": "64400",
    "end": "70000"
  },
  {
    "text": "the leaders of github israel community which is the largest github community in the whole universe",
    "start": "70000",
    "end": "76400"
  },
  {
    "text": "and i also work at an amazing company called the tree where we help developers",
    "start": "76400",
    "end": "82000"
  },
  {
    "text": "to prevent kubernetes misconfigurations from ever reaching production",
    "start": "82000",
    "end": "88159"
  },
  {
    "text": "but enough about me enough about me today we're going to talk about how to build centralized policy management at",
    "start": "88159",
    "end": "94000"
  },
  {
    "text": "scale and specifically we're going to talk about we're going to talk a lot",
    "start": "94000",
    "end": "99360"
  },
  {
    "text": "about policies why do we even care what does it mean why should we have policy enforcement",
    "start": "99360",
    "end": "106560"
  },
  {
    "text": "we're going to review some of the very cool tools that i like such as oppa gatekeeper contest argo cd and my very",
    "start": "106560",
    "end": "114720"
  },
  {
    "text": "own the tree open source project so without further ado let's just start it",
    "start": "114720",
    "end": "123040"
  },
  {
    "text": "everybody please close your eyes picture this",
    "start": "123040",
    "end": "128640"
  },
  {
    "text": "you had a long week and it's friday now and you're in your bed",
    "start": "128640",
    "end": "134560"
  },
  {
    "text": "dreaming peacefully about a warm cozy",
    "start": "134560",
    "end": "139920"
  },
  {
    "text": "wonderful weekend however fortunately",
    "start": "139920",
    "end": "145520"
  },
  {
    "text": "your weekend came a little sooner than expected at 3 45 am when you woke up from the",
    "start": "145520",
    "end": "153280"
  },
  {
    "text": "sound of your phone and you had 15 missing calls from work you wake up you blink your eyes you wink",
    "start": "153280",
    "end": "160160"
  },
  {
    "text": "your eyes and you go to your slack channel and looks like oh no apparently somebody forgot to",
    "start": "160160",
    "end": "166800"
  },
  {
    "text": "put a memory limit in one of the deployments which caused the memory leak in one of the containers and there it",
    "start": "166800",
    "end": "172080"
  },
  {
    "text": "goes the production is down kubernetes all kubernetes nodes are ran out of memory",
    "start": "172080",
    "end": "179280"
  },
  {
    "text": "oh wait a second oh no",
    "start": "179760",
    "end": "184800"
  },
  {
    "text": "did i oh no i think i think that i think that person",
    "start": "184800",
    "end": "192959"
  },
  {
    "text": "is you now i'm telling kidding i'm totally",
    "start": "192959",
    "end": "198319"
  },
  {
    "text": "kidding this is a completely imaginary story and i know that it will never happen to you you",
    "start": "198319",
    "end": "204640"
  },
  {
    "text": "first of all you're very responsible you're here with me that's for sure and the second reason is that i know that",
    "start": "204640",
    "end": "210159"
  },
  {
    "text": "you know how to use kubernetes and forgetting the memory limit come on noah what are you talking about so i have a",
    "start": "210159",
    "end": "216720"
  },
  {
    "text": "different question who's here ready to play a game",
    "start": "216720",
    "end": "223200"
  },
  {
    "text": "come on you guys where's the ready to play game okay okay so i very excited to invite",
    "start": "224319",
    "end": "230720"
  },
  {
    "text": "you today to my very own private show what's the mistake game show so the game",
    "start": "230720",
    "end": "236000"
  },
  {
    "text": "goes like this i'm going to show you two kubernetes manifests each time i'm going to point into a",
    "start": "236000",
    "end": "242720"
  },
  {
    "text": "specific key which is configured differently on every manifest",
    "start": "242720",
    "end": "248720"
  },
  {
    "text": "you will have to look very carefully and tell me which one you will deploy left",
    "start": "248720",
    "end": "255360"
  },
  {
    "text": "or right this is a cron job configuration",
    "start": "255360",
    "end": "261919"
  },
  {
    "text": "pay attention to the concurrency policy which one you will deploy left or right",
    "start": "261919",
    "end": "270639"
  },
  {
    "text": "i should have had like a ticking clock or something like that so anyway who is here i'm sorry",
    "start": "273440",
    "end": "280720"
  },
  {
    "text": "who's here says right",
    "start": "280720",
    "end": "284639"
  },
  {
    "text": "who's here says left and the right answer will be right of",
    "start": "285919",
    "end": "292400"
  },
  {
    "text": "course we always want to make sure that we set the concurrency policy to either forbid or to replace the reason why is",
    "start": "292400",
    "end": "299120"
  },
  {
    "text": "because whenever a crime job will get fail the next job won't replace the previous",
    "start": "299120",
    "end": "304800"
  },
  {
    "text": "one and this is actually what something that happened to target they had one failing crown job that created thousands",
    "start": "304800",
    "end": "311440"
  },
  {
    "text": "of pots that were constantly restarting and not only that they turned their cluster down pretty much immediately a",
    "start": "311440",
    "end": "319199"
  },
  {
    "text": "their api server also accumulated hundreds of cpus during that time so it",
    "start": "319199",
    "end": "325440"
  },
  {
    "text": "also cost them a lot of money um and this is a very sad story but let's move",
    "start": "325440",
    "end": "331759"
  },
  {
    "text": "forward to the next question this is another crown job configuration and once again pay attention to the concurrency",
    "start": "331759",
    "end": "338320"
  },
  {
    "text": "policy which one you will deploy left or right",
    "start": "338320",
    "end": "344960"
  },
  {
    "text": "who's here says right who's here says left",
    "start": "348160",
    "end": "355759"
  },
  {
    "text": "and the right answer will be right again you see on the left side the concurrency",
    "start": "356560",
    "end": "362319"
  },
  {
    "text": "policy isn't part of the crown job specs so we end up with a crunch without we",
    "start": "362319",
    "end": "367520"
  },
  {
    "text": "crunch up without any limits that will just keep spawn pods that will never be cleaned up from the api server and this",
    "start": "367520",
    "end": "374000"
  },
  {
    "text": "is actually what happened to the lando which is an online fashion company with over 6 thousand",
    "start": "374000",
    "end": "380560"
  },
  {
    "text": "employees they actually use the correct configuration this time however they placed it incorrectly in the yaml which",
    "start": "380560",
    "end": "388400"
  },
  {
    "text": "eventually caused and out of memory issues very sad very sad story",
    "start": "388400",
    "end": "394560"
  },
  {
    "text": "but let's move forward to the last question this is an innocent",
    "start": "394560",
    "end": "399919"
  },
  {
    "text": "pod which one you will deploy left",
    "start": "399919",
    "end": "405360"
  },
  {
    "text": "or right who's here says left",
    "start": "405360",
    "end": "410560"
  },
  {
    "text": "who's here says right wonderful of course we never forget the",
    "start": "410560",
    "end": "416000"
  },
  {
    "text": "memory we meet we don't want anybody to wake up at 3 45 8 a.m and this is",
    "start": "416000",
    "end": "421520"
  },
  {
    "text": "actually something that happened to bloom matador which is i'm sorry",
    "start": "421520",
    "end": "427440"
  },
  {
    "text": "oh i forgot no i didn't forget i'm sorry um the right answer is right and this is",
    "start": "427440",
    "end": "434000"
  },
  {
    "text": "actually what happened to blue matador which is a they were back then they were a small startup company and they pods",
    "start": "434000",
    "end": "441199"
  },
  {
    "text": "hosted a zoom logic a third-party application whose containers were memory hogs and before",
    "start": "441199",
    "end": "447199"
  },
  {
    "text": "because they forgot to put the memory limit nothing basically stops from those spots to take up all the memory in the",
    "start": "447199",
    "end": "453680"
  },
  {
    "text": "nodes and basically a closed system out of memory issues",
    "start": "453680",
    "end": "459759"
  },
  {
    "text": "now blue metador the lando target the aren't the only one who suffered from let's",
    "start": "459759",
    "end": "466720"
  },
  {
    "text": "face it pretty innocent mistakes i'm talking about big companies i'm talking about google spotify airbnb datadog",
    "start": "466720",
    "end": "475039"
  },
  {
    "text": "tesla who isn't there i'm talking about a lot of other companies who share their",
    "start": "475039",
    "end": "480639"
  },
  {
    "text": "own kubernetes failure stories so first of all",
    "start": "480639",
    "end": "485680"
  },
  {
    "text": "i really i highly recommend everybody to read about other companies failure",
    "start": "485680",
    "end": "490800"
  },
  {
    "text": "stories not only that you will learn so much about kubernetes how it works under",
    "start": "490800",
    "end": "496160"
  },
  {
    "text": "the hood what to do what not to do and what are the best practices but it will also make you",
    "start": "496160",
    "end": "502400"
  },
  {
    "text": "ask yourself the ultimate question how can i make sure that it will never",
    "start": "502400",
    "end": "507919"
  },
  {
    "text": "happen to me and this is a very important question because it forces you to think about what are the requirements",
    "start": "507919",
    "end": "514479"
  },
  {
    "text": "of your workload what is the security and the stability that you want to achieve for your production and how do",
    "start": "514479",
    "end": "521200"
  },
  {
    "text": "you get it how can you make sure that you won't become one of those failure",
    "start": "521200",
    "end": "526720"
  },
  {
    "text": "stories and the answer will be policy enforcement i know this because before we launched",
    "start": "526720",
    "end": "533519"
  },
  {
    "text": "our product at the tree we wanted to learn as much as possible about the common pitfalls and the common",
    "start": "533519",
    "end": "539680"
  },
  {
    "text": "misconfigurations in the kubernetes ecosystem and what we did was that we read more than 100 kubernetes failure",
    "start": "539680",
    "end": "547519"
  },
  {
    "text": "stories and not only that we learned that policy enforcement is the way is the solution",
    "start": "547519",
    "end": "553519"
  },
  {
    "text": "to prevent misconfigurations from reaching production but we also turn out surprisingly find",
    "start": "553519",
    "end": "559440"
  },
  {
    "text": "out that policy enforcement is the key or a key solution to improve and nurture",
    "start": "559440",
    "end": "566640"
  },
  {
    "text": "the devops culture in your organization",
    "start": "566640",
    "end": "571440"
  },
  {
    "text": "great so how do we start first of all we want to define the policies and the rules that we want to",
    "start": "571760",
    "end": "578160"
  },
  {
    "text": "enforce in our organization maybe we want to make sure that every container has configured a memory limit",
    "start": "578160",
    "end": "584959"
  },
  {
    "text": "maybe we want to make sure that every container has a liveness or rightness a readiness pro",
    "start": "584959",
    "end": "590720"
  },
  {
    "text": "maybe it's not about containers maybe it's about crown job that everyone job is a deadline or is that the scheduler",
    "start": "590720",
    "end": "597440"
  },
  {
    "text": "is a is valid maybe it's about application or security it can be",
    "start": "597440",
    "end": "602560"
  },
  {
    "text": "whatever you want but the policies that you will define are really dependent on your",
    "start": "602560",
    "end": "609440"
  },
  {
    "text": "for workloads requirement but once you have a set of policies the real question",
    "start": "609440",
    "end": "614720"
  },
  {
    "text": "will be how will you use those policies how will you distress distribute those",
    "start": "614720",
    "end": "620079"
  },
  {
    "text": "policies and integrate them in your pipeline in your organization how will",
    "start": "620079",
    "end": "625279"
  },
  {
    "text": "you make sure that you and your teammates follow these policies",
    "start": "625279",
    "end": "632360"
  },
  {
    "text": "now i believe in two things i believe in shift left and i believe in g tops",
    "start": "632880",
    "end": "638800"
  },
  {
    "text": "i believe that as soon as you find a mistake the less it might take your production down",
    "start": "638800",
    "end": "644640"
  },
  {
    "text": "and every kubernetes resource every config file should be handled exactly the same",
    "start": "644640",
    "end": "650800"
  },
  {
    "text": "as your source code so with this mindset the way i see it we",
    "start": "650800",
    "end": "656399"
  },
  {
    "text": "should automatically validate our resources our manifests on every code",
    "start": "656399",
    "end": "662240"
  },
  {
    "text": "change exactly like our source code in the ci furthermore",
    "start": "662240",
    "end": "668000"
  },
  {
    "text": "in integrating and validating your kubernetes resources in the ci with",
    "start": "668000",
    "end": "673680"
  },
  {
    "text": "tools that can be used as a local testing library can extremely help you nurture the",
    "start": "673680",
    "end": "679120"
  },
  {
    "text": "devops culture in your organization and the reason why is because developers they are used to local testing library",
    "start": "679120",
    "end": "685839"
  },
  {
    "text": "they are used to write code tested locally on their local machine and then submit a proquest and they expect at",
    "start": "685839",
    "end": "692480"
  },
  {
    "text": "least those tests to be run again in the ci this is actually part of their policy",
    "start": "692480",
    "end": "699839"
  },
  {
    "text": "so allowing the developers to do the same with kubernetes resources with infrastructure's code will allow the",
    "start": "699839",
    "end": "706560"
  },
  {
    "text": "devops to delegate more responsibilities to the developers and therefore to",
    "start": "706560",
    "end": "711839"
  },
  {
    "text": "liberate the devops from the constant need to fence every kubernetes resource",
    "start": "711839",
    "end": "717680"
  },
  {
    "text": "from any possible misconfiguration",
    "start": "717680",
    "end": "721800"
  },
  {
    "text": "now i'm not there but i hear you i know what you're thinking right now you're thinking come on norm let's let's talk",
    "start": "724320",
    "end": "731920"
  },
  {
    "text": "business so here in israel we have saying it's called let's talk dougly which means show me the real business",
    "start": "731920",
    "end": "738560"
  },
  {
    "text": "so let's talk about how you can start today your build your own policy enforcement",
    "start": "738560",
    "end": "744720"
  },
  {
    "text": "for your organization and the first tool that i want to talk about is oppa or opa",
    "start": "744720",
    "end": "750720"
  },
  {
    "text": "i'm going to call it oppa from now on so oppa is a general purpose policy",
    "start": "750720",
    "end": "756320"
  },
  {
    "text": "engine you can write all your policies in it and query it with a specific input to",
    "start": "756320",
    "end": "762160"
  },
  {
    "text": "check if it violates any one of those policies you can practically think about oppa as a",
    "start": "762160",
    "end": "768079"
  },
  {
    "text": "super policy engine now the main idea behind open is to",
    "start": "768079",
    "end": "773600"
  },
  {
    "text": "decouple the decision-making logic from the policy enforcement usage so suppose",
    "start": "773600",
    "end": "780079"
  },
  {
    "text": "you have microservices architecture and one of the microservices receives an",
    "start": "780079",
    "end": "785760"
  },
  {
    "text": "api request now you probably need to make some decisions in order to",
    "start": "785760",
    "end": "792320"
  },
  {
    "text": "sorry you need to make some decisions in order to a allow or disallow this request right",
    "start": "792560",
    "end": "800800"
  },
  {
    "text": "right now these decisions they're based on rules they're based on criteria that you",
    "start": "800800",
    "end": "806000"
  },
  {
    "text": "want these requests to meet these rules they're called policies and",
    "start": "806000",
    "end": "811360"
  },
  {
    "text": "what oppa gives you is the ability to offload all those policies into one",
    "start": "811360",
    "end": "817360"
  },
  {
    "text": "dedicated agnostic service and therefore to provide the administrators and the",
    "start": "817360",
    "end": "823600"
  },
  {
    "text": "ops team in your organization to gain more control over the policy enforcement the policies",
    "start": "823600",
    "end": "829600"
  },
  {
    "text": "and the service at run time now to use open there are actually two",
    "start": "829600",
    "end": "836160"
  },
  {
    "text": "ways if your services are written in go then you can use oppa as an internal package",
    "start": "836160",
    "end": "842160"
  },
  {
    "text": "and just embed it within your code if not if your services aren't written",
    "start": "842160",
    "end": "847920"
  },
  {
    "text": "and go then you can use oppa as the host level daemon and simply query it with an http request you send oppa your input is",
    "start": "847920",
    "end": "856240"
  },
  {
    "text": "json with the policies or you store the policies in oppa oppa will query will",
    "start": "856240",
    "end": "862639"
  },
  {
    "text": "evaluate the input and will return the response valid or not",
    "start": "862639",
    "end": "868720"
  },
  {
    "text": "now this is important by definition all the policies should be written in a special language called lego which is",
    "start": "868720",
    "end": "875839"
  },
  {
    "text": "the official policy language of oppa it's very easy to learn it's nice it's",
    "start": "875839",
    "end": "882079"
  },
  {
    "text": "actually inspired by data log if you know and that's it from this moment on opal will",
    "start": "882079",
    "end": "889199"
  },
  {
    "text": "act as your centralized policy services for service for all your policies and",
    "start": "889199",
    "end": "894880"
  },
  {
    "text": "every micro service can query oppa for policy enforcement",
    "start": "894880",
    "end": "900800"
  },
  {
    "text": "now oppa is nice oppa is wonderful it's more than nice it's a wonderful solution",
    "start": "901360",
    "end": "906639"
  },
  {
    "text": "it's very powerful solution that's i that's i agree i really love oppa",
    "start": "906639",
    "end": "912560"
  },
  {
    "text": "however when it comes to kubernetes not so much oppa still requires a lot of",
    "start": "912560",
    "end": "920480"
  },
  {
    "text": "heavy lifting work and this is where conf test comes into the picture",
    "start": "920480",
    "end": "925760"
  },
  {
    "text": "contest is an open source utility that allows us to write tests against any",
    "start": "925760",
    "end": "931839"
  },
  {
    "text": "structured file and when i say any ladies and gentlemen this is number one rule about me when i",
    "start": "931839",
    "end": "937920"
  },
  {
    "text": "say any i mean any i'm talking about json xml docker files and of course i'm",
    "start": "937920",
    "end": "944000"
  },
  {
    "text": "talking about yamls so conf test in simple words allows us to write tests",
    "start": "944000",
    "end": "950240"
  },
  {
    "text": "for our kubernetes resources with oppa as a policy engine under the",
    "start": "950240",
    "end": "955759"
  },
  {
    "text": "hood now conf test is specially designed to be run in the ci",
    "start": "955759",
    "end": "961440"
  },
  {
    "text": "or as a local testing library just the way i like it and even as a pre-commit hook if you will",
    "start": "961440",
    "end": "967600"
  },
  {
    "text": "now to use confessed first of all you need to install it on your local machine",
    "start": "967600",
    "end": "973199"
  },
  {
    "text": "then you need to write all your policies in rego of course and here you can see",
    "start": "973199",
    "end": "978240"
  },
  {
    "text": "an example of two policies that i wrote now the first policy ensures that i",
    "start": "978240",
    "end": "984800"
  },
  {
    "text": "don't run with rule privileges and the second publishing policy ensures that",
    "start": "984800",
    "end": "990639"
  },
  {
    "text": "all my containers have the app labels wonderful once i wrote the policy i all",
    "start": "990639",
    "end": "998079"
  },
  {
    "text": "the policies i store them in a special folder by default the name of the folder should be policy and then i simply run",
    "start": "998079",
    "end": "1005279"
  },
  {
    "text": "confidence test with the path of all the files that i want confidence to test",
    "start": "1005279",
    "end": "1011360"
  },
  {
    "text": "conflicts take the files that existed in that path take all the policies sends everything",
    "start": "1011360",
    "end": "1017600"
  },
  {
    "text": "to oppa evaluate and contest print the results",
    "start": "1017600",
    "end": "1024000"
  },
  {
    "text": "now i said that you can use a that you can use conf test in the ci so here for",
    "start": "1024000",
    "end": "1030240"
  },
  {
    "text": "example i used github action and what i want you to pay attention to is actually",
    "start": "1030240",
    "end": "1036079"
  },
  {
    "text": "here the green part so as you can see i pulled conf test and here i used one of",
    "start": "1036079",
    "end": "1041600"
  },
  {
    "text": "the awesome features about conor test in my opinion which is that contrast actually allows",
    "start": "1041600",
    "end": "1047199"
  },
  {
    "text": "us to push and pulls and pull our policies from a docker registry it's",
    "start": "1047199",
    "end": "1052640"
  },
  {
    "text": "just it's not only about containers anymore so i pull my policy and simply run confidence test with the path of all",
    "start": "1052640",
    "end": "1059679"
  },
  {
    "text": "my communities resources that i want to test wonderful",
    "start": "1059679",
    "end": "1064880"
  },
  {
    "text": "confidence is easy makes life so much easier it's i really really love contest i highly recommend",
    "start": "1064880",
    "end": "1070799"
  },
  {
    "text": "at least try it so with confidence in the ci now we can go back to sleep because we",
    "start": "1070799",
    "end": "1078160"
  },
  {
    "text": "validate all our kubernetes resources and every change automatically in the ci",
    "start": "1078160",
    "end": "1083520"
  },
  {
    "text": "wonderful our production is safe right wrong",
    "start": "1083520",
    "end": "1088880"
  },
  {
    "text": "no because what about criminals what about those users with",
    "start": "1088880",
    "end": "1095440"
  },
  {
    "text": "permissions that can any time they want during the day can simply type cuba city",
    "start": "1095440",
    "end": "1100559"
  },
  {
    "text": "apply and destroy our production what about those users",
    "start": "1100559",
    "end": "1105840"
  },
  {
    "text": "and in the year of 2020 google microsoft redhead and stara they",
    "start": "1105840",
    "end": "1112160"
  },
  {
    "text": "thought the same question and their answer was no it's not enough",
    "start": "1112160",
    "end": "1117840"
  },
  {
    "text": "and this is the story of how they created gatekeeper",
    "start": "1117840",
    "end": "1122880"
  },
  {
    "text": "gatekeeper is actually the bridge between oppa and kubernetes api and it allows us to",
    "start": "1122880",
    "end": "1130080"
  },
  {
    "text": "validate all our kubernetes resources natively in our kubernetes",
    "start": "1130080",
    "end": "1136559"
  },
  {
    "text": "laster but before we talk about gatekeeper what it does why it's so nice why it's so",
    "start": "1136559",
    "end": "1142080"
  },
  {
    "text": "wonderful i want us to talk about kubernetes admission web books and",
    "start": "1142080",
    "end": "1148080"
  },
  {
    "text": "specifically kubernetes emission controllers you see when an api request comes into the kubernetes api it passes",
    "start": "1148080",
    "end": "1155440"
  },
  {
    "text": "through series of steps first it's being authenticated and authorized",
    "start": "1155440",
    "end": "1160480"
  },
  {
    "text": "then it's being processed by the admission controllers which basically triggers an admission a list of",
    "start": "1160480",
    "end": "1167200"
  },
  {
    "text": "admission web hooks which can mutate or validate your request",
    "start": "1167200",
    "end": "1172880"
  },
  {
    "text": "then and only then if the request is validated then it's a move forward to be",
    "start": "1172880",
    "end": "1179440"
  },
  {
    "text": "executed a to a move forward to the lcd to be persisted and to be executed",
    "start": "1179440",
    "end": "1186480"
  },
  {
    "text": "now gatekeeper gatekeeper is installed as a customizable admission web so whenever a",
    "start": "1186480",
    "end": "1192960"
  },
  {
    "text": "resource in the cluster is being created updated or deleted",
    "start": "1192960",
    "end": "1198240"
  },
  {
    "text": "the api server triggers the admission controllers which basically call gatekeeper",
    "start": "1198240",
    "end": "1205840"
  },
  {
    "text": "take that request with predefined policies sends everything back to oppa",
    "start": "1205840",
    "end": "1212559"
  },
  {
    "text": "or by evaluates the request with the policies and if it finds any violations gatekeeper",
    "start": "1212559",
    "end": "1219760"
  },
  {
    "text": "rejects the request and the user returns an error",
    "start": "1219760",
    "end": "1225519"
  },
  {
    "text": "so how do you use gatekeeper first you need to install gatekeeper on your",
    "start": "1226320",
    "end": "1231760"
  },
  {
    "text": "cluster then you need to write all your policies now since gatekeeper is installed on the",
    "start": "1231760",
    "end": "1237440"
  },
  {
    "text": "cluster you don't write your policies obviously in regular files you need to use the constraint template crd so as",
    "start": "1237440",
    "end": "1245760"
  },
  {
    "text": "you can see here as example i created a constraint template and for policy and i",
    "start": "1245760",
    "end": "1252400"
  },
  {
    "text": "call it kubernetes required labels and once again i want you to pay attention to the green part because this is",
    "start": "1252400",
    "end": "1259200"
  },
  {
    "text": "actually the policy the actual policy that i want to enforce and the policy accepts a required label",
    "start": "1259200",
    "end": "1267280"
  },
  {
    "text": "and checks if it exists in that resource now after i route the policy i need to",
    "start": "1267280",
    "end": "1273039"
  },
  {
    "text": "tell gatekeeper on which kind i want this policy to be applied to and for that i need to use the constraint",
    "start": "1273039",
    "end": "1280159"
  },
  {
    "text": "so as you can see here i created a constraint that takes the a kubernetes required labels and applies it on every",
    "start": "1280159",
    "end": "1287919"
  },
  {
    "text": "namespace with the owner label so in conclusion this policy checks that for",
    "start": "1287919",
    "end": "1293280"
  },
  {
    "text": "every namespace we'll have the required owner a label",
    "start": "1293280",
    "end": "1299440"
  },
  {
    "text": "wonderful so with gatekeeper in the cluster confidence in the ci we finally get gay",
    "start": "1299440",
    "end": "1307280"
  },
  {
    "text": "we finally gain very powerful enforcement for our",
    "start": "1307280",
    "end": "1312559"
  },
  {
    "text": "kubernetes resources so first of all very nice a tap on the shoulder",
    "start": "1312559",
    "end": "1319520"
  },
  {
    "text": "wonderful however there are a couple of challenges that i want us to talk about",
    "start": "1319520",
    "end": "1324960"
  },
  {
    "text": "first of all you see as your organization grows you probably need to",
    "start": "1324960",
    "end": "1331679"
  },
  {
    "text": "modify or change the policies that you wrote you probably want to create new",
    "start": "1331679",
    "end": "1337039"
  },
  {
    "text": "policies or to delete one of the existing policies now this can be very challenging task when your policies are",
    "start": "1337039",
    "end": "1343760"
  },
  {
    "text": "written both as regular files and as a constraint template crs for gatekeeper",
    "start": "1343760",
    "end": "1349679"
  },
  {
    "text": "especially if you have many git repositories so a",
    "start": "1349679",
    "end": "1355919"
  },
  {
    "text": "one of the ways to face this issue would be by using a dynamic yaml that you can",
    "start": "1355919",
    "end": "1361679"
  },
  {
    "text": "download from s3 for all your configuration another way would be to use hcd as your",
    "start": "1361679",
    "end": "1367520"
  },
  {
    "text": "sense to centralize place and to pull your configuration from it now there are many ways to face this",
    "start": "1367520",
    "end": "1373600"
  },
  {
    "text": "challenge but it's important to take this challenge under consideration",
    "start": "1373600",
    "end": "1378880"
  },
  {
    "text": "another way to another challenge that i want us to talk about is actually the rego language itself",
    "start": "1378880",
    "end": "1385200"
  },
  {
    "text": "you see i know i know i said that regular is very easy to learn",
    "start": "1385200",
    "end": "1390240"
  },
  {
    "text": "however it's very hard to master and i know this because actually when we",
    "start": "1390240",
    "end": "1395600"
  },
  {
    "text": "created our a policy as code feature we a search for policy languages and one of",
    "start": "1395600",
    "end": "1402480"
  },
  {
    "text": "the languages was actually regular and if your policy are pretty straightforward if your policies are",
    "start": "1402480",
    "end": "1409120"
  },
  {
    "text": "pretty straightforward then you shouldn't worry about rego at all but if your policies will require some level of",
    "start": "1409120",
    "end": "1415840"
  },
  {
    "text": "complexity like to check if one of the key if one of the keys is within a number of range of",
    "start": "1415840",
    "end": "1422320"
  },
  {
    "text": "numbers or to check if a key uses a specific type of units or",
    "start": "1422320",
    "end": "1427840"
  },
  {
    "text": "to check if a key is and to compare it with another key in that file or in",
    "start": "1427840",
    "end": "1432880"
  },
  {
    "text": "another file this can be a little trickier for rego",
    "start": "1432880",
    "end": "1438080"
  },
  {
    "text": "so my fair advice to you is to look for open source projectors to look for tools",
    "start": "1438080",
    "end": "1443120"
  },
  {
    "text": "that maybe already come with some built-in policies or at least to some",
    "start": "1443120",
    "end": "1449039"
  },
  {
    "text": "regular policies that you can take and to get inspiration from",
    "start": "1449039",
    "end": "1455039"
  },
  {
    "text": "so if you think about it another way to face these challenges would be",
    "start": "1457679",
    "end": "1463840"
  },
  {
    "text": "by not using regular gatekeeper at all and to guarantee that your",
    "start": "1463840",
    "end": "1469760"
  },
  {
    "text": "git repository is your single source of truth and by that eliminate the users",
    "start": "1469760",
    "end": "1475360"
  },
  {
    "text": "from being able to cube ctl apply whatever they want whenever they want some people might call it",
    "start": "1475360",
    "end": "1483120"
  },
  {
    "text": "githubs i'm kidding again i am",
    "start": "1483120",
    "end": "1488320"
  },
  {
    "text": "now i know that there are many tools that you can use to a practice key tops but the tool that i want to talk about",
    "start": "1488320",
    "end": "1493760"
  },
  {
    "text": "today is argo cd because i really love rbcd it says it just makes life so much",
    "start": "1493760",
    "end": "1500000"
  },
  {
    "text": "easier and um that's basically it so argo cds the name",
    "start": "1500000",
    "end": "1506320"
  },
  {
    "text": "tells you is a continuous delivery tool but the magic about rbcd is that it is specially designed for kubernetes and it",
    "start": "1506320",
    "end": "1513760"
  },
  {
    "text": "allows us to continuously delivery natively in kubernetes",
    "start": "1513760",
    "end": "1519360"
  },
  {
    "text": "so to really understand what argo cd and what is the essence between a behind",
    "start": "1519360",
    "end": "1526159"
  },
  {
    "text": "arabicity we i wanted to first talk about how does the cd workflow looks like without our",
    "start": "1526159",
    "end": "1532799"
  },
  {
    "text": "obesity so let's say that i have kubernetes clustering production and i'm using jenkins for cicd",
    "start": "1532799",
    "end": "1538799"
  },
  {
    "text": "now you know the drill usually developers they treat they um submit their code their feature i don't know",
    "start": "1538799",
    "end": "1546080"
  },
  {
    "text": "maybe bug or something and they trigger the ci pipeline in the ci we",
    "start": "1546080",
    "end": "1552640"
  },
  {
    "text": "test the code we built a new image of the application and we push that image to a docker registry and then we update",
    "start": "1552640",
    "end": "1561200"
  },
  {
    "text": "kubernetes resources usually a deployment resource with a our new image then we apply it to",
    "start": "1561200",
    "end": "1568320"
  },
  {
    "text": "the cluster great now there are a couple of challenges in this workflow first of all in order to",
    "start": "1568320",
    "end": "1576159"
  },
  {
    "text": "keep ctl to fully function we need to give it some access and credentials to",
    "start": "1576159",
    "end": "1581279"
  },
  {
    "text": "our kubernetes cluster the second thing is that we need to configure it with",
    "start": "1581279",
    "end": "1586559"
  },
  {
    "text": "some credentials for aws because i personally use the eks",
    "start": "1586559",
    "end": "1592480"
  },
  {
    "text": "and not only that this can be a configuration challenge but it also can be a security challenge",
    "start": "1592480",
    "end": "1599279"
  },
  {
    "text": "the second challenge that i want to talk about is that once jenkins for example",
    "start": "1599279",
    "end": "1605039"
  },
  {
    "text": "deploys our deployment we don't have any visibility over that deployment status",
    "start": "1605039",
    "end": "1610480"
  },
  {
    "text": "we don't know if it succeeded or if not what failed we need to manually check the log the logs in our cluster",
    "start": "1610480",
    "end": "1618240"
  },
  {
    "text": "which can be very difficult sometimes argo cd is built just for that to make",
    "start": "1618240",
    "end": "1624480"
  },
  {
    "text": "continuous delivery to make continuous deployment to kubernetes more efficient",
    "start": "1624480",
    "end": "1629919"
  },
  {
    "text": "and it does it by simply reversing the flow instead of pushing the changes to",
    "start": "1629919",
    "end": "1635360"
  },
  {
    "text": "the cluster it pulls those changes from the git repository and the real magic",
    "start": "1635360",
    "end": "1642559"
  },
  {
    "text": "is that it's actually part of the cluster itself and it's extension",
    "start": "1642559",
    "end": "1647679"
  },
  {
    "text": "of the kubernetes cluster so you don't need to provide any credentials or any secrets for in order to rbcd to fully",
    "start": "1647679",
    "end": "1655120"
  },
  {
    "text": "function but let's talk about it in more details so first of all you need to install rvcd",
    "start": "1655120",
    "end": "1661120"
  },
  {
    "text": "on your cluster then you need to configure it with git repository so you need to tell argo this is the repository",
    "start": "1661120",
    "end": "1667919"
  },
  {
    "text": "that you should monitor then argo will monitor that repository and will pull changes from it every three seconds by",
    "start": "1667919",
    "end": "1675919"
  },
  {
    "text": "default when argo will detect that a new change where were made",
    "start": "1675919",
    "end": "1680960"
  },
  {
    "text": "aka the commit hash is different now then it will clone the repository and",
    "start": "1680960",
    "end": "1686799"
  },
  {
    "text": "will apply all those changes to the cluster now you're probably wondering right now",
    "start": "1686799",
    "end": "1693440"
  },
  {
    "text": "what will happen if we'll type cube ctl apply directly to our cluster to manually apply changes now since our ucd",
    "start": "1693440",
    "end": "1701679"
  },
  {
    "text": "is installed on the cluster then argo controller will detect that something was changed and that the cluster is out",
    "start": "1701679",
    "end": "1708640"
  },
  {
    "text": "of sync with the repository argo will once again take the repository and will override those changes making",
    "start": "1708640",
    "end": "1716000"
  },
  {
    "text": "the repository our single source of truth",
    "start": "1716000",
    "end": "1721600"
  },
  {
    "text": "now side note about repositories because i talked about it a lot it's been established as a best practice",
    "start": "1722720",
    "end": "1729840"
  },
  {
    "text": "when you work with rbcd and with itops to separate between the application source code repository and the",
    "start": "1729840",
    "end": "1736640"
  },
  {
    "text": "application configuration the reason why is because you usually have more than one deployment of course",
    "start": "1736640",
    "end": "1742480"
  },
  {
    "text": "you have lots of you have services you have config maps namespaces ingress you have",
    "start": "1742480",
    "end": "1748080"
  },
  {
    "text": "lots of other config files and you also probably need to manage them with",
    "start": "1748080",
    "end": "1753120"
  },
  {
    "text": "customize with helm for different environment so you probably don't want to trigger the ci",
    "start": "1753120",
    "end": "1760240"
  },
  {
    "text": "pipeline for every time that you change the service because nothing really changed in the application",
    "start": "1760240",
    "end": "1766559"
  },
  {
    "text": "and for that it's very recommended to separate between the two and to have one",
    "start": "1766559",
    "end": "1772240"
  },
  {
    "text": "repository for all the application source code and another repository for all your configuration usually this",
    "start": "1772240",
    "end": "1779520"
  },
  {
    "text": "repository is called the git ops repository great so now",
    "start": "1779520",
    "end": "1786640"
  },
  {
    "text": "let's see how a cd workflow looks like with argo cd",
    "start": "1786640",
    "end": "1791919"
  },
  {
    "text": "so once again a developer submit a new code to the upstream which triggers our ci",
    "start": "1791919",
    "end": "1798320"
  },
  {
    "text": "pipeline we test the code we build a new image pull it push that",
    "start": "1798320",
    "end": "1803919"
  },
  {
    "text": "image to a docker registry and then the ci updates the config the deployment",
    "start": "1803919",
    "end": "1809520"
  },
  {
    "text": "configuration in a separated repository that repository is the repository that",
    "start": "1809520",
    "end": "1816559"
  },
  {
    "text": "argo cd watches and when we'll submit those changes argo will pull those",
    "start": "1816559",
    "end": "1822240"
  },
  {
    "text": "changes and we'll apply them to the cluster so if we use conf test here in the ci of",
    "start": "1822240",
    "end": "1829520"
  },
  {
    "text": "the github repository we'll once again gain the powerful reinforcement that we wanted and we",
    "start": "1829520",
    "end": "1836080"
  },
  {
    "text": "guarantee that this repository is our single source of truth for our clusters",
    "start": "1836080",
    "end": "1844799"
  },
  {
    "text": "now the great news is that you have wonderful policy enforcement",
    "start": "1846880",
    "end": "1852320"
  },
  {
    "text": "bad news is that this is only the beginning because policy management should",
    "start": "1852320",
    "end": "1857840"
  },
  {
    "text": "continuously evolve and continuously update it according to your organization",
    "start": "1857840",
    "end": "1863120"
  },
  {
    "text": "needs and this is where the centralized policy management comes into play",
    "start": "1863120",
    "end": "1869360"
  },
  {
    "text": "so to build centralized policy first of all you need to make sure that you have the right environment to dynamically",
    "start": "1869360",
    "end": "1875519"
  },
  {
    "text": "adjust your policies you need to have the place where you can implement update create and delete those policies",
    "start": "1875519",
    "end": "1882960"
  },
  {
    "text": "you can use git but i don't recommend you to do so because",
    "start": "1882960",
    "end": "1888399"
  },
  {
    "text": "git is there for version control not for management what will you do in a give for for",
    "start": "1888399",
    "end": "1894399"
  },
  {
    "text": "instance with permissions you probably need to be able to control over who can create and who can",
    "start": "1894399",
    "end": "1902159"
  },
  {
    "text": "delete a certain policies so git is there for version control not",
    "start": "1902159",
    "end": "1907760"
  },
  {
    "text": "for management and you still need to be able to dynamically adjust the policies in your organization and manage them",
    "start": "1907760",
    "end": "1914799"
  },
  {
    "text": "for your according to your requirements the second thing that i think you should",
    "start": "1914799",
    "end": "1922320"
  },
  {
    "text": "consider is the ability to continuously affirm that your policies are actually",
    "start": "1922320",
    "end": "1928320"
  },
  {
    "text": "effective you see the thing about policies in kubernetes is that they're sort of like",
    "start": "1928320",
    "end": "1933919"
  },
  {
    "text": "a contract between the application owners the cluster admins and the security stakeholders",
    "start": "1933919",
    "end": "1940080"
  },
  {
    "text": "and for those policies to be actually effective we don't only need to write them and to",
    "start": "1940080",
    "end": "1947039"
  },
  {
    "text": "make sure that they work we also need to make sure that they are being communicated properly between everybody",
    "start": "1947039",
    "end": "1954000"
  },
  {
    "text": "in the organization so for that we need first of all to have the observability of all the policies execution",
    "start": "1954000",
    "end": "1961840"
  },
  {
    "text": "in our organization because we need to be able to continuously review monitor",
    "start": "1961840",
    "end": "1967600"
  },
  {
    "text": "and control those policies for instance how can you tell which policies are",
    "start": "1967600",
    "end": "1973440"
  },
  {
    "text": "actually being used in practice how can you tell which policy fails the most or that people actually",
    "start": "1973440",
    "end": "1980559"
  },
  {
    "text": "know how to fix their policy once it's been failed",
    "start": "1980559",
    "end": "1986320"
  },
  {
    "text": "these questions is some things that you should take under consideration when you will build your",
    "start": "1986320",
    "end": "1993519"
  },
  {
    "text": "centralized policy management and the last tool that i want to talk about is my very own the tree cli a open",
    "start": "1993519",
    "end": "2001679"
  },
  {
    "text": "source project and which is actually sort of a combination of all just that what just",
    "start": "2001679",
    "end": "2008240"
  },
  {
    "text": "we talked about so the tree is a cla solution that just much like conf test allows us to scan",
    "start": "2008240",
    "end": "2014720"
  },
  {
    "text": "our kubernetes resources for violations and the way that it works is that it",
    "start": "2014720",
    "end": "2020159"
  },
  {
    "text": "runs automatic checks on every resource that exists in a given path after that check is completed we display",
    "start": "2020159",
    "end": "2027360"
  },
  {
    "text": "a detailed output of all the violations for all the misconfigurations that we find",
    "start": "2027360",
    "end": "2033679"
  },
  {
    "text": "with guidelines of how to actually fix them now under the hood every automatic",
    "start": "2033679",
    "end": "2040480"
  },
  {
    "text": "checks include three steps first the yamaha validation to verify",
    "start": "2040480",
    "end": "2046240"
  },
  {
    "text": "that this file is actually valid yamo then will check for schema validation to",
    "start": "2046240",
    "end": "2052878"
  },
  {
    "text": "verify your file against your kubernetes or your argo schema then the last step would be the policy",
    "start": "2052879",
    "end": "2060079"
  },
  {
    "text": "checks which violate validate that resource against built-in rules for communities and for argo best",
    "start": "2060079",
    "end": "2068079"
  },
  {
    "text": "practices now in general the tree can be used in the ci",
    "start": "2068079",
    "end": "2073760"
  },
  {
    "text": "or as a local testing library or as a pre-commit hook just like font test",
    "start": "2073760",
    "end": "2079040"
  },
  {
    "text": "and either i'm sorry in addition to the ci a to the cli the tree we provide a",
    "start": "2079040",
    "end": "2085440"
  },
  {
    "text": "dashboard application where you can create your policy modify those policies",
    "start": "2085440",
    "end": "2090480"
  },
  {
    "text": "and review all those policy executions in your organization",
    "start": "2090480",
    "end": "2095760"
  },
  {
    "text": "to use the tree all you need to do is to install it on your machine and simply",
    "start": "2095760",
    "end": "2101040"
  },
  {
    "text": "executed with the tree test with the path of all the files that you should test and you want to test and it's free",
    "start": "2101040",
    "end": "2109359"
  },
  {
    "text": "it's open source so i highly recommend everybody review the code submit a pull",
    "start": "2109359",
    "end": "2114480"
  },
  {
    "text": "request i'll be there don't hesitate to reach out",
    "start": "2114480",
    "end": "2119280"
  },
  {
    "text": "i really hope that this session inspired you to think about what are the policies",
    "start": "2119839",
    "end": "2125359"
  },
  {
    "text": "in your organization how do you want to enforce those policies and",
    "start": "2125359",
    "end": "2130960"
  },
  {
    "text": "thank you very much for being with me",
    "start": "2130960",
    "end": "2135480"
  }
]