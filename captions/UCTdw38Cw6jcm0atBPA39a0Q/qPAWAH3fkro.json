[
  {
    "start": "0",
    "end": "72000"
  },
  {
    "text": "first i'm not really sure why i'm here or i'm allowed to speak here because i'm like a jvm",
    "start": "8559",
    "end": "14960"
  },
  {
    "text": "person right and kotlin is a jvm language and now i guess the organizers of the cons this conference already sort",
    "start": "14960",
    "end": "21119"
  },
  {
    "text": "of hate me because no ndc is not a dot-net conference but like for us jvm people it sort of is right",
    "start": "21119",
    "end": "27279"
  },
  {
    "text": "and there's this sort of i was wondering about that why why aren't we sort of ever talking about",
    "start": "27279",
    "end": "33120"
  },
  {
    "text": "stuff together right it's like this completely separate worlds we have javazone oops and i have a laptop that i've never used",
    "start": "33120",
    "end": "40160"
  },
  {
    "text": "to present before so it turned off i'll just try to remember and feel my mouse oh there we go keep screening on i think",
    "start": "40160",
    "end": "46960"
  },
  {
    "text": "that worked all right but i'm going to talk about",
    "start": "46960",
    "end": "52239"
  },
  {
    "text": "kotlin or how not to get fired and boring languages um so let's go",
    "start": "52239",
    "end": "59840"
  },
  {
    "text": "so first a little bit about me uh let's get can i nope",
    "start": "59840",
    "end": "65360"
  },
  {
    "text": "this is my very professional oh and now that's going to let me let me try this again okay there we go",
    "start": "65360",
    "end": "70479"
  },
  {
    "text": "how do i change slides there we go i can change lights i think that's all i needed",
    "start": "70479",
    "end": "75600"
  },
  {
    "start": "72000",
    "end": "166000"
  },
  {
    "text": "everything should be working now no live coding hopefully so um this is the way i like to sort of",
    "start": "75600",
    "end": "81520"
  },
  {
    "text": "brag about myself uh this is a screenshot of my my github as you can see",
    "start": "81520",
    "end": "87119"
  },
  {
    "text": "up in the corner there that's like no longer maintained at that project that's sort of what i haven't get a bunch of dead projects but apparently i have code",
    "start": "87119",
    "end": "95280"
  },
  {
    "text": "on mars that's pretty cool uh that which makes me really cool and an authority on everything about everything especially",
    "start": "95280",
    "end": "101360"
  },
  {
    "text": "kotlin right but there's no kotlin on mars by the way um so this comes from",
    "start": "101360",
    "end": "107050"
  },
  {
    "text": "[Music] just a sort of a random thing that i did once because i saw a talk by like the second",
    "start": "107050",
    "end": "114000"
  },
  {
    "text": "in command in the linux world uh greg hartman and he said just run the linter",
    "start": "114000",
    "end": "120399"
  },
  {
    "text": "and submit the patch with just like a linter fix so that's what i did and now i have code on mars",
    "start": "120399",
    "end": "127040"
  },
  {
    "text": "it's more like i have a diff in a repo it's not like actually my code is running at all it's just a compiler thing",
    "start": "127040",
    "end": "133200"
  },
  {
    "text": "i i did the heroic task of replacing some gcc specific macros in the firewire",
    "start": "133200",
    "end": "138319"
  },
  {
    "text": "driver but it was actually kind of a bit of a",
    "start": "138319",
    "end": "143440"
  },
  {
    "text": "venture to sort of just what you can see here how do you send a mail to a mailing list like this you can't just send it",
    "start": "143440",
    "end": "149520"
  },
  {
    "text": "with gmail right because then it will have wrong formatting you have to have the patch file in plain text",
    "start": "149520",
    "end": "155360"
  },
  {
    "text": "and all that stuff but hey it's pretty cool i ended up with uh code in the kernel",
    "start": "155360",
    "end": "161760"
  },
  {
    "text": "so that's sort of about me something else about me is that i'm not",
    "start": "161760",
    "end": "167920"
  },
  {
    "start": "166000",
    "end": "229000"
  },
  {
    "text": "really like a kotlin guy which is sort of the whole point of this",
    "start": "167920",
    "end": "173599"
  },
  {
    "text": "talk right because this is about boring languages so i guess what i'm really saying here is that i'm not like",
    "start": "173599",
    "end": "180159"
  },
  {
    "text": "i don't like boring languages i like to use fancy esoteric languages",
    "start": "180159",
    "end": "185519"
  },
  {
    "text": "so if i was on.net i would probably be using f-sharp i like clojure that's where i feel at",
    "start": "185519",
    "end": "192239"
  },
  {
    "text": "home and when i see other languages i sometimes lose all hope in humanity and",
    "start": "192239",
    "end": "198560"
  },
  {
    "text": "all my spirits and everything but somehow kotlin hasn't been able to do that yet so kotlin is like even even though i",
    "start": "198560",
    "end": "204640"
  },
  {
    "text": "don't like those kinds of languages i sort of actually kind of like kotlin",
    "start": "204640",
    "end": "210640"
  },
  {
    "text": "which sort of makes that's sort of the first uh piece of evidence that it fits kind of interestingly into this boring",
    "start": "210640",
    "end": "216799"
  },
  {
    "text": "languages category uh i'll go into some detail of course about why i like like hotline later",
    "start": "216799",
    "end": "222799"
  },
  {
    "text": "um of course since this is a talk about boring languages and not getting fired we have to talk",
    "start": "222799",
    "end": "229840"
  },
  {
    "start": "229000",
    "end": "308000"
  },
  {
    "text": "about tayobi or taiyo bar however you pronounce that",
    "start": "229840",
    "end": "235280"
  },
  {
    "text": "which is sort of the weirdest list ever right so like obviously you could use php but maybe you should consider sql or",
    "start": "235280",
    "end": "242879"
  },
  {
    "text": "assembly instead for your next project right so because i think the the the definition they use is like if it's",
    "start": "242879",
    "end": "248640"
  },
  {
    "text": "touring complete it's on the list and it's just sorted by amount of queries in search engines or something",
    "start": "248640",
    "end": "255040"
  },
  {
    "text": "like that but this is sort of what you get what you get thrown at you sometimes if you try to like suggest some kind of",
    "start": "255040",
    "end": "261199"
  },
  {
    "text": "interesting language that you want to use but well hey everyone is using java or c sharp",
    "start": "261199",
    "end": "266800"
  },
  {
    "text": "or c so i guess that argument sort of falls flat immediately because okay why shouldn't",
    "start": "266800",
    "end": "272720"
  },
  {
    "text": "we use python then why would we reduce java that's the id to use java because python is more popular but i mean there",
    "start": "272720",
    "end": "278160"
  },
  {
    "text": "is something interesting about this right because why are some languages super popular or",
    "start": "278160",
    "end": "284160"
  },
  {
    "text": "well i shouldn't say popular right because this actually measures you could say that at least in part this",
    "start": "284160",
    "end": "289360"
  },
  {
    "text": "measures the languages that people struggle the most with right because they're they are the ones that",
    "start": "289360",
    "end": "294880"
  },
  {
    "text": "gets the most queries so maybe c-sharp is more used in java but it's easier to use i don't know",
    "start": "294880",
    "end": "300880"
  },
  {
    "text": "but it's interesting to like compare things right uh that's often what what like this this sort of data is is useful",
    "start": "300880",
    "end": "307120"
  },
  {
    "text": "for so if you go longer down the list you can see can you see kotlin there it's on 33rd place",
    "start": "307120",
    "end": "312639"
  },
  {
    "start": "308000",
    "end": "357000"
  },
  {
    "text": "so obviously kotlin is better than both scala and closure maybe i should have used powershell",
    "start": "312639",
    "end": "318880"
  },
  {
    "text": "instead of closure but these languages are so unpopular that they don't even have their logo on",
    "start": "318880",
    "end": "324160"
  },
  {
    "text": "them in the entire ob index but here they are right so they're not really that popular like 0.40 apparently",
    "start": "324160",
    "end": "332240"
  },
  {
    "text": "uh compared to other languages are interested in kotlin i don't remember where f sharp was on this list",
    "start": "332240",
    "end": "339280"
  },
  {
    "text": "uh but again i mean this is a bit of a meaningless comparison right because uh",
    "start": "339280",
    "end": "344800"
  },
  {
    "text": "objective c isn't really like an alternative when i'm making like a web app a back end",
    "start": "344800",
    "end": "350479"
  },
  {
    "text": "but there we are but there's this weird thing about programming languages",
    "start": "350479",
    "end": "356479"
  },
  {
    "text": "um because i remember it wasn't that many years ago when like devops became a",
    "start": "356479",
    "end": "362400"
  },
  {
    "start": "357000",
    "end": "381000"
  },
  {
    "text": "thing and it like really exploded right it just took off uh",
    "start": "362400",
    "end": "367440"
  },
  {
    "text": "and now everyone is sort of using devops or it's like it became really popular really fast so why aren't everyone using",
    "start": "367440",
    "end": "372880"
  },
  {
    "text": "closure then because according to me at least it's like the best language ever uh and it solves so many problems",
    "start": "372880",
    "end": "381280"
  },
  {
    "start": "381000",
    "end": "495000"
  },
  {
    "text": "so sorry related to this i have this list of things that as far as i can tell no one",
    "start": "381280",
    "end": "387199"
  },
  {
    "text": "disagrees with this list right and if i were to end up in a situation",
    "start": "387199",
    "end": "394639"
  },
  {
    "text": "where things on this list did not apply i would sort of be willing to die on that hill right so if you don't use",
    "start": "394639",
    "end": "401360"
  },
  {
    "text": "version control i've never seen that in the wild like for enterprise like companies of course it's mostly like",
    "start": "401360",
    "end": "407600"
  },
  {
    "text": "students and new programmers working on like their own projects uh but like encrypting passwords like",
    "start": "407600",
    "end": "413440"
  },
  {
    "text": "obviously uh time zone in time stamps you know this this is sort of the list of like best practices it's almost like",
    "start": "413440",
    "end": "420160"
  },
  {
    "text": "uh this should be a book almost like a software bible uh that like new programmers just read it",
    "start": "420160",
    "end": "426720"
  },
  {
    "text": "and accept it like dogmatically don't question this just do it and you can you can you can work to understand it maybe",
    "start": "426720",
    "end": "431919"
  },
  {
    "text": "you'll understand it later but just do this um and then of course devops uh it's a",
    "start": "431919",
    "end": "437120"
  },
  {
    "text": "little bit difficult to define devops in this list uh because it sort of depends on the context right if you make like a",
    "start": "437120",
    "end": "443039"
  },
  {
    "text": "c library uh you should maybe use devops because devops is more like a web thing",
    "start": "443039",
    "end": "448880"
  },
  {
    "text": "uh even like native apps you have to like wait a couple of days for your app to be reviewed so you can't just uh like",
    "start": "448880",
    "end": "454479"
  },
  {
    "text": "the the time to recovery right that's a super important word in devops and that's uh which is the time from",
    "start": "454479",
    "end": "461039"
  },
  {
    "text": "error discovered to ever fixed and for a native app you're sort of well you have to wait for apple or",
    "start": "461039",
    "end": "466400"
  },
  {
    "text": "google to review your app and of course your users have to also update their app so it's like a two-step",
    "start": "466400",
    "end": "472720"
  },
  {
    "text": "thing but uh this is like uh i can translate this list to like hills i'm willing to",
    "start": "472720",
    "end": "478000"
  },
  {
    "text": "die on and devops is actually sort of on that list i haven't had to like die on",
    "start": "478000",
    "end": "483599"
  },
  {
    "text": "on that hill yet uh but i have like successfully uh introduced devops to",
    "start": "483599",
    "end": "490000"
  },
  {
    "text": "someone that did not use devops right that was something i did uh and then i put like a big fake stamp",
    "start": "490000",
    "end": "497680"
  },
  {
    "start": "495000",
    "end": "525000"
  },
  {
    "text": "on this in case someone takes a picture of it and thinks this is my opinion but i've i've never heard anyone really say",
    "start": "497680",
    "end": "503599"
  },
  {
    "text": "this and i've never had this opinion myself like i come to a project that uses like",
    "start": "503599",
    "end": "508879"
  },
  {
    "text": "one of these boring languages java like are you out of your mind you have to rewrite everything right now to clojure",
    "start": "508879",
    "end": "514080"
  },
  {
    "text": "because closure is so superior that sort of never happens",
    "start": "514080",
    "end": "519680"
  },
  {
    "text": "so what's up with that aren't programming language is important well they are",
    "start": "519680",
    "end": "525920"
  },
  {
    "start": "525000",
    "end": "558000"
  },
  {
    "text": "but i guess you could also sort of make this a little bit more general",
    "start": "525920",
    "end": "531839"
  },
  {
    "text": "i've never really worked on a project that failed at all i guess projects that i as a consultant work on",
    "start": "532800",
    "end": "538959"
  },
  {
    "text": "uh don't tend to like fail it's more like a startup thing but usually maybe the",
    "start": "538959",
    "end": "544000"
  },
  {
    "text": "program language wasn't the reason that a startup failed right",
    "start": "544000",
    "end": "549800"
  },
  {
    "text": "so to sort of investigate this a little bit more with boring languages and",
    "start": "549839",
    "end": "555839"
  },
  {
    "text": "kotlin and stuff like that we're going to talk about trade-offs",
    "start": "555839",
    "end": "561440"
  },
  {
    "start": "558000",
    "end": "590000"
  },
  {
    "text": "which is this uh strange word that programmers don't like to talk about for some reason but i kind",
    "start": "561440",
    "end": "568399"
  },
  {
    "text": "of i'm kind of happy about this because it seems to me that we as an industry talk more and more",
    "start": "568399",
    "end": "574720"
  },
  {
    "text": "about tradeoffs like i think it's not it's not weird to say that well maybe we",
    "start": "574720",
    "end": "582640"
  },
  {
    "text": "shouldn't do this just because facebook does this right we're not facebook scale",
    "start": "582640",
    "end": "588160"
  },
  {
    "text": "so let's just uh look at some trade-offs that i like uh i try to sneak the atomic into every",
    "start": "588480",
    "end": "594320"
  },
  {
    "text": "talk i do it's like one of my favorite technologies um so here we have some some databases",
    "start": "594320",
    "end": "600160"
  },
  {
    "text": "because when talking about trade-offs i think the trade-offs are much clearer often in databases and things like that",
    "start": "600160",
    "end": "605760"
  },
  {
    "text": "than in programming languages so let's uh look at uh what the atomic does for write concurrency so it's",
    "start": "605760",
    "end": "611839"
  },
  {
    "text": "single threaded that's a pretty clear trade-off right so when you choose your database",
    "start": "611839",
    "end": "616959"
  },
  {
    "text": "this is a trade-off you should definitely be aware of um and it's it's i mean this",
    "start": "616959",
    "end": "622240"
  },
  {
    "text": "trade-off is so crazy that it this is sort of where most people stop looking into the atomic right because they see",
    "start": "622240",
    "end": "627680"
  },
  {
    "text": "that it is single threaded so that probably makes it a pointless database",
    "start": "627680",
    "end": "633440"
  },
  {
    "text": "i can go into some detail here um uh i really i'm going to skip that so i'm",
    "start": "633440",
    "end": "640160"
  },
  {
    "text": "not going to bore you with atomic stuff now i like to talk about atomic but dynamodb right because this is a",
    "start": "640160",
    "end": "645200"
  },
  {
    "text": "trade-off it's like completely on the other end of the scale right uh i think uh snapchat uses dynamo right",
    "start": "645200",
    "end": "651519"
  },
  {
    "text": "and during super bowl or something and they had like five million rights uh a second to their like one table",
    "start": "651519",
    "end": "657600"
  },
  {
    "text": "uh and actually latency was lower right because dynamo loves scale so much that everything was cached and ready and was",
    "start": "657600",
    "end": "663600"
  },
  {
    "text": "a super fast uh was it uh like during uh a black black friday or what amazon calls it",
    "start": "663600",
    "end": "670560"
  },
  {
    "text": "prime day or something i think they had up to like peak 70 million writes in like a single second",
    "start": "670560",
    "end": "676959"
  },
  {
    "text": "um so that's quite a different uh trade-off obviously that work won't work if it's your single threaded",
    "start": "676959",
    "end": "682320"
  },
  {
    "text": "sql i'm going to get into that later uh the real model of the atomic is sort of",
    "start": "682320",
    "end": "688640"
  },
  {
    "text": "opposite so it's like 100 consistent because it's like the rights are single threaded right so you can actually talk",
    "start": "688640",
    "end": "694720"
  },
  {
    "text": "about the point in time right because there's no concurrent rights so you can like go into a point in time and do your queries on that point in time and",
    "start": "694720",
    "end": "702560"
  },
  {
    "text": "queries run on your app server which is kind of crazy another one of those things that make",
    "start": "702560",
    "end": "708560"
  },
  {
    "text": "people go what you're supposed to not run queries on your client right you're supposed to not fetch all your data and then filter",
    "start": "708560",
    "end": "715360"
  },
  {
    "text": "it you're supposed to use sql uh so that's a clear tradeoff and dynamodb is of course on the complete",
    "start": "715360",
    "end": "721519"
  },
  {
    "text": "other end of that scale it's eventually consistent and it basically doesn't have queries uh because it's a key value database",
    "start": "721519",
    "end": "727200"
  },
  {
    "text": "right so it's just like simple lookups sql uh you know that's",
    "start": "727200",
    "end": "733279"
  },
  {
    "text": "one of your problems sort of depends right depends on your settings and does someone write at the same time so it's",
    "start": "733279",
    "end": "739120"
  },
  {
    "text": "much more complex data model uh 100 normalized in the",
    "start": "739120",
    "end": "745040"
  },
  {
    "text": "atomic and dynamic domain is exactly the opposite 100 denormalized because you basically have to write your data as you",
    "start": "745040",
    "end": "752320"
  },
  {
    "text": "will access it you have to know your access patterns beforehand so that you can just slurp the data in that's what",
    "start": "752320",
    "end": "758240"
  },
  {
    "text": "makes dynamodb able to be web scale right because obviously you can't uh",
    "start": "758240",
    "end": "763279"
  },
  {
    "text": "do sql and then have super fast queries and super fast rights at the same time at that scale",
    "start": "763279",
    "end": "770160"
  },
  {
    "text": "and then of course sql uh data model is sort of mostly normalized i guess and sort of my point here is",
    "start": "770399",
    "end": "777760"
  },
  {
    "text": "uh what we can see here is that we have this very clear choices right these clear technical choices so the atomic",
    "start": "777760",
    "end": "784959"
  },
  {
    "text": "just this is exactly what i am i'm single threaded uh dynamodb is exactly",
    "start": "784959",
    "end": "790320"
  },
  {
    "text": "the opposite like if you have to go web scale we'll solve that problem for you sql like technically",
    "start": "790320",
    "end": "796480"
  },
  {
    "text": "it's a little bit fuzzy right uh exactly what it does um",
    "start": "796480",
    "end": "801519"
  },
  {
    "text": "so there's another kind of trade-off that we have to discuss and that's the what i like to call the",
    "start": "801519",
    "end": "807200"
  },
  {
    "text": "meet in chair trade-off right because that's also part of software development there's a bag of meat in a chair just to",
    "start": "807200",
    "end": "813120"
  },
  {
    "text": "write this code and like all of these really cool databases that i've been talking about has this problem",
    "start": "813120",
    "end": "819440"
  },
  {
    "text": "of there's there aren't really that many people that know it right it's it's not mainstream i guess you could say like",
    "start": "819440",
    "end": "826639"
  },
  {
    "text": "the dynamo is mainstream because it has like a lot of users at least compared to the atomic which is this almost like",
    "start": "826639",
    "end": "833279"
  },
  {
    "text": "esoteric thing that only closure people use but it's this dynamo mainstream in the",
    "start": "833279",
    "end": "838480"
  },
  {
    "text": "same way sql is mainstream i wouldn't say it is and we also have these other databases that i really like like vault",
    "start": "838480",
    "end": "843920"
  },
  {
    "text": "to be and cockroachdb that all they all have this problem right there aren't that many people",
    "start": "843920",
    "end": "849920"
  },
  {
    "text": "that that know how to use them and you would have to train them mongodb i put in this sort of limbo um",
    "start": "849920",
    "end": "857120"
  },
  {
    "text": "i guess it's not that commonly used uh compared to like sql uh",
    "start": "857120",
    "end": "862560"
  },
  {
    "text": "but it's it's like relatively easy to get started with with right so so",
    "start": "862560",
    "end": "867680"
  },
  {
    "text": "they've chosen sort of the api and the whole way the database works um okay so you may you might need",
    "start": "867680",
    "end": "874000"
  },
  {
    "text": "training but it's not that difficult to get then to get into mongodb",
    "start": "874000",
    "end": "879199"
  },
  {
    "text": "um which is sort of what made mongodb popular in the first place right this new different database and it was so",
    "start": "879199",
    "end": "884480"
  },
  {
    "text": "easy to get started and it was so easy to lose 60 of your data",
    "start": "884480",
    "end": "889600"
  },
  {
    "text": "in high scale settings and stuff like that there's been some horrible accidents",
    "start": "889600",
    "end": "894639"
  },
  {
    "text": "with mongodb by the way i can recommend there's this uh kyle kingsbury he has this thing",
    "start": "894639",
    "end": "900720"
  },
  {
    "text": "called jepson where he just dissects databases he has so he has this test rig where he",
    "start": "900720",
    "end": "906160"
  },
  {
    "text": "makes them do crazy things and times out and basically all databases i think even postgres which is like",
    "start": "906160",
    "end": "913360"
  },
  {
    "text": "the stable one right you made that even that able to fail in a situation where it's always like when",
    "start": "913360",
    "end": "919040"
  },
  {
    "text": "there's multiple servers and stuff like that right one server usually works which is also the case from one go so anyway",
    "start": "919040",
    "end": "925279"
  },
  {
    "text": "um i was sort of dissing sql a little bit here right this is technically not that interesting",
    "start": "925279",
    "end": "931199"
  },
  {
    "text": "right i can do everything not that good maybe badly it's up to you to tune it it doesn't have",
    "start": "931199",
    "end": "937519"
  },
  {
    "text": "like a clear stance but sql has this or sql thingies like sql databases has this",
    "start": "937519",
    "end": "942959"
  },
  {
    "text": "huge advantage right of being able to find people who knows the thing",
    "start": "942959",
    "end": "948320"
  },
  {
    "text": "so i think this is sort of this is where boring languages sort of",
    "start": "948320",
    "end": "953680"
  },
  {
    "text": "enter the scene right so this is the trade-off that you have to keep in mind when you choose your language",
    "start": "953680",
    "end": "959440"
  },
  {
    "text": "uh so if you're making like a small very technical startup thingy uh where tech",
    "start": "959440",
    "end": "966639"
  },
  {
    "text": "actually matters like a lot maybe it's a good idea to choose like this weird esoteric programming language",
    "start": "966639",
    "end": "973440"
  },
  {
    "text": "that can help you but if your situation is that you will maybe in a year need 50",
    "start": "973440",
    "end": "978959"
  },
  {
    "text": "programmers you have problems right so maybe it is better to to use the sql thingy and it",
    "start": "978959",
    "end": "985440"
  },
  {
    "text": "also depends right on on your needs there aren't that many startups with like crazy technical requirements right",
    "start": "985440",
    "end": "992000"
  },
  {
    "text": "it's usually just some cred and some validations and a database and some queries and an app or something like that",
    "start": "992000",
    "end": "998639"
  },
  {
    "text": "so kotlin let's talk about kotlin i made this same table for programming",
    "start": "998639",
    "end": "1005360"
  },
  {
    "start": "1002000",
    "end": "1114000"
  },
  {
    "text": "languages of course we know java and c they're the workhorses it's easy to find",
    "start": "1005360",
    "end": "1011440"
  },
  {
    "text": "people and scala enclosure my favorite language closure to be honest uh",
    "start": "1011440",
    "end": "1017759"
  },
  {
    "text": "uh i probably know everyone in oslo doing closure right it's like not that big of a community or if you if you",
    "start": "1017759",
    "end": "1024160"
  },
  {
    "text": "create a startup in oslo and you use closure and you suddenly need to hire 50 people well there aren't 50 people probably",
    "start": "1024160",
    "end": "1031280"
  },
  {
    "text": "right so you have to start training them or and i mean maybe you want that but at least this is a trade-off to be aware of",
    "start": "1031280",
    "end": "1037918"
  },
  {
    "text": "right and this is sort of where kotlin fits in i think so i i've labeled it the same as",
    "start": "1037919",
    "end": "1043438"
  },
  {
    "text": "mongodb here which is a little bit unfair because the comparison is only like in the meet in",
    "start": "1043439",
    "end": "1050320"
  },
  {
    "text": "share trade-offs because i would you could argue right that that that is like uh",
    "start": "1050320",
    "end": "1056799"
  },
  {
    "text": "uh not uh it's a little bit sloppy right as i mentioned people have lost data and production and stuff like that but kotlin is not like that at all it's just",
    "start": "1056799",
    "end": "1063280"
  },
  {
    "text": "a meet-and-share thing we're talking about here so kotlin is similar enough to the existing",
    "start": "1063280",
    "end": "1070559"
  },
  {
    "text": "languages that i believe that you won't really have the finding people problem",
    "start": "1070559",
    "end": "1076080"
  },
  {
    "text": "because it's not like completely different from from the other languages that most people already know",
    "start": "1076080",
    "end": "1082320"
  },
  {
    "text": "also i know this from experience actually i've onboarded a lot of people in projects that didn't know kotlin already",
    "start": "1082320",
    "end": "1090080"
  },
  {
    "text": "and it worked out well so uh let's talk a little bit about kotlin specifically right um",
    "start": "1090080",
    "end": "1098400"
  },
  {
    "text": "so i would argue that kotlin fits in this uh boring language sort of world",
    "start": "1098400",
    "end": "1104080"
  },
  {
    "text": "right where you need you need just a language that can get the work done so so now i'm going to basically talk about",
    "start": "1104080",
    "end": "1110559"
  },
  {
    "text": "why you shouldn't use java but use kotlin instead and",
    "start": "1110559",
    "end": "1115760"
  },
  {
    "text": "of course null is a big problem for us programmers um",
    "start": "1115760",
    "end": "1122320"
  },
  {
    "text": "i'm going to mention a little bit in detail later about how java handles no in various weird ways",
    "start": "1122320",
    "end": "1128720"
  },
  {
    "text": "um of course i guess everyone has heard this quote by now it's a famous quote by",
    "start": "1128720",
    "end": "1135120"
  },
  {
    "start": "1130000",
    "end": "1172000"
  },
  {
    "text": "the guy who basically invented null right and it sort of came from",
    "start": "1135120",
    "end": "1140480"
  },
  {
    "text": "implementation details it was easy to make it was sort of useful i guess and he now calls it his billion dollar",
    "start": "1140480",
    "end": "1146480"
  },
  {
    "text": "mistake right because it has sort of ended up in a lot of programming languages causing lots of problems and i think actually",
    "start": "1146480",
    "end": "1152480"
  },
  {
    "text": "when he said it was my billion dollar mistake that wasn't just sort of something he",
    "start": "1152480",
    "end": "1157919"
  },
  {
    "text": "said i think he actually someone made some calculations right how many problems has no pointer errors in java",
    "start": "1157919",
    "end": "1163360"
  },
  {
    "text": "actually cost or other languages and it was the numbers were on like on the billion dollar scale",
    "start": "1163360",
    "end": "1170000"
  },
  {
    "text": "so um let's look at java so since this is like",
    "start": "1170000",
    "end": "1176320"
  },
  {
    "start": "1172000",
    "end": "1268000"
  },
  {
    "text": "not a dot net conference but a little bit of the net conference i can i sort of feel safe in like uh dissing java no",
    "start": "1176320",
    "end": "1182240"
  },
  {
    "text": "one here likes java probably right i don't like it uh but it's one of those",
    "start": "1182240",
    "end": "1187520"
  },
  {
    "text": "mainstream languages right so um java made this attempt at making nulls",
    "start": "1187520",
    "end": "1194480"
  },
  {
    "text": "sort of easier to live with by adding this optional type so i'm going to assume everyone here",
    "start": "1194480",
    "end": "1200400"
  },
  {
    "text": "knows generics and stuff like that right so like an optional of string that's like the type system telling us",
    "start": "1200400",
    "end": "1205919"
  },
  {
    "text": "that this is maybe a string right it's a string or it's null but it doesn't really go that far right",
    "start": "1205919",
    "end": "1211919"
  },
  {
    "text": "because this code will cause a null pointer exception because i can return null from",
    "start": "1211919",
    "end": "1217039"
  },
  {
    "text": "from this thing i'm supposed right to return like an optional empty which is like the the no uh version of optional",
    "start": "1217039",
    "end": "1224080"
  },
  {
    "text": "or you have the the optional version of no but i can still do this right so java doesn't really help me that much and to",
    "start": "1224080",
    "end": "1230080"
  },
  {
    "text": "be fair right now i'm sort of uh there are there are a number of highly competent people who makes java right",
    "start": "1230080",
    "end": "1236880"
  },
  {
    "text": "and the goal with optional wasn't really to help us programmers handling all",
    "start": "1236880",
    "end": "1241919"
  },
  {
    "text": "issues around things being no uh it's like the stated goal was basically like api design and libraries right so that",
    "start": "1241919",
    "end": "1248400"
  },
  {
    "text": "if you made an open source or a library of any kind uh or any api that other people will call you like have something",
    "start": "1248400",
    "end": "1255360"
  },
  {
    "text": "to let people know that okay this isn't actually always a string it might be optional but it doesn't solve the null",
    "start": "1255360",
    "end": "1260799"
  },
  {
    "text": "pointer thing right because this this code obviously yeah because get thing returns null it doesn't return optional",
    "start": "1260799",
    "end": "1268000"
  },
  {
    "start": "1268000",
    "end": "1363000"
  },
  {
    "text": "so let's look at some kotlin so kotlin has actually like",
    "start": "1268000",
    "end": "1274480"
  },
  {
    "text": "first class handling of nulls which is like really nice",
    "start": "1274480",
    "end": "1279600"
  },
  {
    "text": "so what we've done here is that we created a value with like an int question mark and that's kotlin's way of",
    "start": "1279600",
    "end": "1286320"
  },
  {
    "text": "saying that this could be null and look at how dumb computers are right we know this is obviously not null it's five",
    "start": "1286320",
    "end": "1291600"
  },
  {
    "text": "can't you see but the type system trusts us uh so it's this gives us an error we",
    "start": "1291600",
    "end": "1296799"
  },
  {
    "text": "can't uh add two to a because it could be null um and it's like a it's like a first class",
    "start": "1296799",
    "end": "1304159"
  },
  {
    "text": "feature in kotlin right so this is i think the the proper name for this uh and like remember now that i'm a",
    "start": "1304159",
    "end": "1310640"
  },
  {
    "text": "clojure closure guy right so anything i say about proper names for things in type systems",
    "start": "1310640",
    "end": "1315840"
  },
  {
    "text": "might be not true but i think this is a union type right it's like a proper union type this is an int or null and",
    "start": "1315840",
    "end": "1322559"
  },
  {
    "text": "the type system knows about that and can act accordingly now",
    "start": "1322559",
    "end": "1329440"
  },
  {
    "text": "as someone who really likes clojure um you could another way of saying that is",
    "start": "1330159",
    "end": "1336320"
  },
  {
    "text": "that i'm someone who really hates satisfying type systems right that's not what i want to do and i sort of i've",
    "start": "1336320",
    "end": "1342559"
  },
  {
    "text": "landed on this being subjective right some people just like different things people have tried to argue what's better",
    "start": "1342559",
    "end": "1349840"
  },
  {
    "text": "or worse like objectively speaking don't think anyone has succeeded yet",
    "start": "1349840",
    "end": "1355520"
  },
  {
    "text": "but like personally i don't like to have to satisfy a type system so i was doing some ios stuff",
    "start": "1355520",
    "end": "1361919"
  },
  {
    "text": "and used swift and this i just ah this just kills my",
    "start": "1361919",
    "end": "1368000"
  },
  {
    "start": "1363000",
    "end": "1404000"
  },
  {
    "text": "spirit immediately when something like this happens right and it because you see swift has exactly what what what",
    "start": "1368000",
    "end": "1374400"
  },
  {
    "text": "kotlin has so you can say that something is an int question mark and it's i believe like as good as in",
    "start": "1374400",
    "end": "1381200"
  },
  {
    "text": "kotlin it's like union types this type system knows it's an int or null",
    "start": "1381200",
    "end": "1386799"
  },
  {
    "text": "but if i do this i get a typer so i check that if a isn't no do something with a oh sorry it's uh",
    "start": "1386799",
    "end": "1394480"
  },
  {
    "text": "it's definitely uh not something you can do because it could be nil like one line up guys i'm saying it's not nil",
    "start": "1394480",
    "end": "1401600"
  },
  {
    "text": "but swift doesn't care kotlin on the other hand does",
    "start": "1401600",
    "end": "1406799"
  },
  {
    "start": "1404000",
    "end": "1442000"
  },
  {
    "text": "which is like one of the things so this sort of experience made like clojure me",
    "start": "1406799",
    "end": "1412000"
  },
  {
    "text": "using kotlin for the first time this ah yes i do not have to please the type system with this sort of thing and it's",
    "start": "1412000",
    "end": "1417600"
  },
  {
    "text": "really nice to have these like sort of optional types built into the language because null is",
    "start": "1417600",
    "end": "1422880"
  },
  {
    "text": "a problem right this is just lovely i think it's kotlin",
    "start": "1422880",
    "end": "1428080"
  },
  {
    "text": "calls this smart casting so inside this if block a has actually",
    "start": "1428080",
    "end": "1433600"
  },
  {
    "text": "the type of a is int right not into question mark so that's good",
    "start": "1433600",
    "end": "1440639"
  },
  {
    "start": "1442000",
    "end": "1507000"
  },
  {
    "text": "i want to show you something in typescript which is kind of interesting um so typescript has the same thing uh",
    "start": "1442320",
    "end": "1449200"
  },
  {
    "text": "and i guess this sort of um i like typescript right and this says everything you have to know about me as",
    "start": "1449200",
    "end": "1455520"
  },
  {
    "text": "like a type system person because i think people who like really like type systems uh think of typescript and kotlin as",
    "start": "1455520",
    "end": "1462159"
  },
  {
    "text": "sort of like the sloppiest worst type systems right but this sort of thing uh",
    "start": "1462159",
    "end": "1467840"
  },
  {
    "text": "really sort of uh is something i like right and it's basically the same thing right in typescript so you say that",
    "start": "1467840",
    "end": "1474559"
  },
  {
    "text": "foo can be a number null but if you check if it's uh like if uh it's javascript right so null",
    "start": "1474559",
    "end": "1483200"
  },
  {
    "text": "is is false because reasons and i can do this and typescript will do",
    "start": "1483200",
    "end": "1489279"
  },
  {
    "text": "like the same type of smart casting that that kotlin does however kotlin",
    "start": "1489279",
    "end": "1495760"
  },
  {
    "text": "is in a little bit different universe than typescript because typescript compiles to javascript",
    "start": "1495760",
    "end": "1501039"
  },
  {
    "text": "and kotlin compiles the wallet and kotlin actually compiles too many things so you can compile to native code and javascript",
    "start": "1501039",
    "end": "1507520"
  },
  {
    "start": "1507000",
    "end": "1612000"
  },
  {
    "text": "but this is like jvm kotlin and we'll get a type error here",
    "start": "1507520",
    "end": "1513919"
  },
  {
    "text": "by doing like exactly the same thing and you would think that i would really",
    "start": "1513919",
    "end": "1519520"
  },
  {
    "text": "hate this as i've described myself so far right ah damn it the type system is",
    "start": "1519520",
    "end": "1524720"
  },
  {
    "text": "in my way but is it really like this is so this is the sort of thing that i actually sort of like that the type systems help me",
    "start": "1524720",
    "end": "1530720"
  },
  {
    "text": "with right because the problem here compared to typescript uh and the jvm",
    "start": "1530720",
    "end": "1536799"
  },
  {
    "text": "or like uh anything that is in javascript is that there's a thing called threads right",
    "start": "1536799",
    "end": "1542880"
  },
  {
    "text": "so the type system does not know that uh the after the if statement runs it could",
    "start": "1542880",
    "end": "1548159"
  },
  {
    "text": "be right that some other thread uh got go got it in there and changed it to null so the type system can't guarantee",
    "start": "1548159",
    "end": "1554960"
  },
  {
    "text": "that this isn't null so this is sort of what i feel like is like this is a great help to get from the type system it",
    "start": "1554960",
    "end": "1561039"
  },
  {
    "text": "doesn't feel like it's in the way at all uh of course the solution is to sort of fetch it first right and then you have",
    "start": "1561039",
    "end": "1566559"
  },
  {
    "text": "your own thread safe reference to it and then you can check if it's not null",
    "start": "1566559",
    "end": "1573279"
  },
  {
    "text": "and now comes my favorite part of the kotlin type system",
    "start": "1573279",
    "end": "1578320"
  },
  {
    "text": "so i guess it's really nice right to have all this help if something is null if",
    "start": "1578320",
    "end": "1584159"
  },
  {
    "text": "something is not no and kotlin really helps me right i can't accidentally call a method or null like",
    "start": "1584159",
    "end": "1590880"
  },
  {
    "text": "i could in java right i said it return an option string but it also could be a null java has no idea what kotlin does",
    "start": "1590880",
    "end": "1599200"
  },
  {
    "text": "but then there's this thing called the real world where things might not act the way you",
    "start": "1599200",
    "end": "1605200"
  },
  {
    "text": "think it is and things might not be instantiated the way",
    "start": "1605200",
    "end": "1610400"
  },
  {
    "text": "you think it is so this is like the biggest type system",
    "start": "1610400",
    "end": "1615679"
  },
  {
    "start": "1612000",
    "end": "1630000"
  },
  {
    "text": "hack i'm aware of and i absolutely love it it's what kotlin calls late init",
    "start": "1615679",
    "end": "1624400"
  },
  {
    "text": "so i guess i'll just show you some examples uh to get us started",
    "start": "1624840",
    "end": "1630320"
  },
  {
    "start": "1630000",
    "end": "1720000"
  },
  {
    "text": "so this is uh i'm um showing you lots of weird jvm stuff today has anyone here programmed in",
    "start": "1630320",
    "end": "1636559"
  },
  {
    "text": "groovy groovy no no aggrevic programmers of course one hand there's some groovy",
    "start": "1636559",
    "end": "1642320"
  },
  {
    "text": "so this is uh when i worked at nsbear this is the this is a thing called the spring context so",
    "start": "1642320",
    "end": "1649200"
  },
  {
    "text": "uh i kind of like this actually we ended up not using a framework but using like things that we liked",
    "start": "1649200",
    "end": "1655520"
  },
  {
    "text": "and even like enclosure land like obviously i'm a closure guy right so i don't like",
    "start": "1655520",
    "end": "1660640"
  },
  {
    "text": "spring and stuff like that but instead what we do enclosure is that we make our own versions of what spring does and",
    "start": "1660640",
    "end": "1667840"
  },
  {
    "text": "then just call it something else and then it feels like i'm not doing enterprise stuff right uh because this is actually like a",
    "start": "1667840",
    "end": "1673919"
  },
  {
    "text": "useful thing to do right because what spring context does is that so here are sort of my thingies",
    "start": "1673919",
    "end": "1679520"
  },
  {
    "text": "uh that i need to have my system up and running but the problem is that i can't just",
    "start": "1679520",
    "end": "1684799"
  },
  {
    "text": "create them they have to maybe recreate it in a certain order right because this thing has to be connected before it",
    "start": "1684799",
    "end": "1690720"
  },
  {
    "text": "could talk to this one and it's sort of nice to have this whole thing uh do that for us and especially in things",
    "start": "1690720",
    "end": "1697919"
  },
  {
    "text": "like tests if you're doing like heavy integration tests and spin up your whole actual application",
    "start": "1697919",
    "end": "1704000"
  },
  {
    "text": "uh it's nice to have like the other way right automatically the tear down um",
    "start": "1704000",
    "end": "1710559"
  },
  {
    "text": "because if you do that you could of course just do this by hand right in a function but it's nice to have this sort of helper code that gets you up and up",
    "start": "1710559",
    "end": "1717200"
  },
  {
    "text": "and running of course the problem with this is that uh your coupling code ends up looking like this",
    "start": "1717200",
    "end": "1725279"
  },
  {
    "start": "1720000",
    "end": "1762000"
  },
  {
    "text": "so this is the class that gets instantiated not by you right but by the framework",
    "start": "1725279",
    "end": "1731679"
  },
  {
    "text": "and then of course it gets instantiated without any properties set right because the way it happens is that it creates a",
    "start": "1731679",
    "end": "1737679"
  },
  {
    "text": "bunch of objects and then when everything is up and running it sort of sets all the properties and connects everything together",
    "start": "1737679",
    "end": "1743760"
  },
  {
    "text": "and then you sort of lose all hope of having like a good setup around nulls because then certainly everything can be",
    "start": "1743760",
    "end": "1749679"
  },
  {
    "text": "null and then you have to check everything that it is no but you know right you know uh that it's it's act never it's",
    "start": "1749679",
    "end": "1756880"
  },
  {
    "text": "never actually null right none of my code will run while it is no",
    "start": "1756880",
    "end": "1762000"
  },
  {
    "start": "1762000",
    "end": "1799000"
  },
  {
    "text": "and this is what late in it is for ah i just love this so much right so this lets us tell the type system that",
    "start": "1762000",
    "end": "1768960"
  },
  {
    "text": "okay this is never no actually it's null sometimes but you don't have to worry",
    "start": "1768960",
    "end": "1774640"
  },
  {
    "text": "about that i'll take care of that that's what latent it is right it's just oh it's glorious i love this so much",
    "start": "1774640",
    "end": "1781120"
  },
  {
    "text": "because i i can sort of rely on the run time guarantees of this whole spring context thing that it won't actually",
    "start": "1781120",
    "end": "1788320"
  },
  {
    "text": "make any of my stuff run before it's connected properly right so it will like technically it will be null",
    "start": "1788320",
    "end": "1796080"
  },
  {
    "text": "sometimes but like actually it won't be um and here is like a little bit of a more",
    "start": "1796080",
    "end": "1801840"
  },
  {
    "start": "1799000",
    "end": "1851000"
  },
  {
    "text": "uh concrete example uh with android uh so so kotlin is sort of is sort of a",
    "start": "1801840",
    "end": "1810320"
  },
  {
    "text": "little bit mood to argue that kotlin can be mainstream because android google uses it for android right that's pretty",
    "start": "1810320",
    "end": "1815760"
  },
  {
    "text": "mainstream um it was java or it is still java and now they sort of kotlin is the sort of",
    "start": "1815760",
    "end": "1821120"
  },
  {
    "text": "the main language for for for android and we have the same problem here right",
    "start": "1821120",
    "end": "1827200"
  },
  {
    "text": "so we have this uh initialize function that is called by someone somewhere and",
    "start": "1827200",
    "end": "1832720"
  },
  {
    "text": "it sets this db thing for us so obviously when this class is is",
    "start": "1832720",
    "end": "1837840"
  },
  {
    "text": "created uh it's the db is null right because you have to call initialize first",
    "start": "1837840",
    "end": "1843120"
  },
  {
    "text": "and like for reasons i won't get into now i can't just do this in like a constructor",
    "start": "1843120",
    "end": "1848960"
  },
  {
    "text": "because i have to rely on on the android system which is something like this right",
    "start": "1848960",
    "end": "1854399"
  },
  {
    "start": "1851000",
    "end": "1899000"
  },
  {
    "text": "so um i have this uh application it starts up i don't sort of create my own instance",
    "start": "1854399",
    "end": "1861279"
  },
  {
    "text": "of it sorry so my whole sort of environment it's like oh here we are you're up and running and now run your",
    "start": "1861279",
    "end": "1866720"
  },
  {
    "text": "code so i i call like initialize uh the last method there and set the thing on",
    "start": "1866720",
    "end": "1872000"
  },
  {
    "text": "the thing so like i know right it's actually never know this thing will never be no",
    "start": "1872000",
    "end": "1878159"
  },
  {
    "text": "i mean technically it will be now at like uh inception i don't know at like birth um",
    "start": "1878159",
    "end": "1884720"
  },
  {
    "text": "but uh it's not actually not on the run time so then i get like all the really",
    "start": "1884720",
    "end": "1889919"
  },
  {
    "text": "nice and no help from kotlin right i can't just accidentally call a method on something that could be no but this can",
    "start": "1889919",
    "end": "1896799"
  },
  {
    "text": "actually not be null so i get that help late in it i really like that",
    "start": "1896799",
    "end": "1904000"
  },
  {
    "text": "but i guess maybe it's i mean at least closure programmers like it right because this is the sort of thing that sort of drives me mad right by",
    "start": "1904000",
    "end": "1910320"
  },
  {
    "text": "satisfying the type system so i can sort of loosen up the restrictions a little bit with this late in it thing",
    "start": "1910320",
    "end": "1916960"
  },
  {
    "text": "however uh it's time for the glorious type system buy-in because you can go pretty",
    "start": "1916960",
    "end": "1922960"
  },
  {
    "start": "1917000",
    "end": "1979000"
  },
  {
    "text": "crazy with kotlin it's a very flexible language",
    "start": "1922960",
    "end": "1928480"
  },
  {
    "text": "it has this my brain is uh stopping",
    "start": "1928480",
    "end": "1934640"
  },
  {
    "text": "i'm gonna give myself two more seconds continuations yes thank you for waiting um",
    "start": "1934640",
    "end": "1941360"
  },
  {
    "text": "so uh the con the continuation api and some other apis in kotlin allows",
    "start": "1941360",
    "end": "1948480"
  },
  {
    "text": "allows you to basically like customize things in a type system in a pretty sort of extreme way an arrow",
    "start": "1948480",
    "end": "1954240"
  },
  {
    "text": "is basically like how to make kotlin more like haskell or something like that so this is like uh",
    "start": "1954240",
    "end": "1962480"
  },
  {
    "text": "kotlin is mainstream sort of when you use it basically like it's in a sort of",
    "start": "1962480",
    "end": "1968640"
  },
  {
    "text": "core version but as soon as you sort of apply arrow or something like that to kotlin it's",
    "start": "1968640",
    "end": "1974080"
  },
  {
    "text": "very much definitely no longer mainstream so",
    "start": "1974080",
    "end": "1980159"
  },
  {
    "start": "1979000",
    "end": "2099000"
  },
  {
    "text": "i'm going to show you like one specific example and this is sort of my main rant of the",
    "start": "1980159",
    "end": "1986000"
  },
  {
    "text": "evening it doesn't i mean this sort of only vaguely applies to kotlin right because this is a",
    "start": "1986000",
    "end": "1991600"
  },
  {
    "text": "problem you get as soon as you do use something like arrow um",
    "start": "1991600",
    "end": "1996640"
  },
  {
    "text": "or this problem is even true for like the option type in java as well right because the option type in java is the",
    "start": "1996640",
    "end": "2002880"
  },
  {
    "text": "same as the maybe it's like uh two different names for the same thing what's the whole idea between this type",
    "start": "2002880",
    "end": "2008799"
  },
  {
    "text": "is that you want to be able to say to the type system that you have like this is not",
    "start": "2008799",
    "end": "2014880"
  },
  {
    "text": "always a string it could be a string but sometimes it's a num right so it's the sum and the none",
    "start": "2014880",
    "end": "2020399"
  },
  {
    "text": "so maybe it's it is one of those sort of union types right it's either a sum or a none",
    "start": "2020399",
    "end": "2026960"
  },
  {
    "text": "and if it's a sum you can get the value from it and if it's a non well you can handle it as if it was a",
    "start": "2026960",
    "end": "2032799"
  },
  {
    "text": "null right you don't have a value and this else this will never happen right",
    "start": "2032799",
    "end": "2038240"
  },
  {
    "text": "until you see it in your production logs of course because some weird thing happened but it should never happen",
    "start": "2038240",
    "end": "2044639"
  },
  {
    "text": "and that's sort of the whole idea behind maybe uh and i guess like uh",
    "start": "2044880",
    "end": "2051040"
  },
  {
    "text": "in other type systems that doesn't have this uh int question mark thing that uh",
    "start": "2051040",
    "end": "2057679"
  },
  {
    "text": "that kotlin has like java for example this is this is sort of useful uh",
    "start": "2057679",
    "end": "2063440"
  },
  {
    "text": "as its own thing and of course this whole maybe idea i think maybe it's a monad but sir i'm",
    "start": "2063440",
    "end": "2071358"
  },
  {
    "text": "not sure i don't understand monads but i think maybe it's a monad so if you like go all in like functional style which",
    "start": "2071359",
    "end": "2077520"
  },
  {
    "text": "you can do like red with arrow then maybe it's it's it's well i'm not gonna refine it too hard right because",
    "start": "2077520",
    "end": "2083599"
  },
  {
    "text": "if you go that route maybe it's this really nice construct that lets you chain stuff and have it gracefully stop",
    "start": "2083599",
    "end": "2090720"
  },
  {
    "text": "if it encounters a non and it's like it's it's in in many ways it's a good thing",
    "start": "2090720",
    "end": "2096960"
  },
  {
    "text": "but like my one this is my very sort of subjective gripe with this thing",
    "start": "2096960",
    "end": "2102560"
  },
  {
    "text": "and makes it obvious that i'm a closure programmer at heart this it feels a lot to me like uh having",
    "start": "2102560",
    "end": "2110400"
  },
  {
    "text": "to satisfy the type system and it sort of infects your domain in this weird way like because i like to",
    "start": "2110400",
    "end": "2117280"
  },
  {
    "text": "say that okay i have an address that's good or i don't have an address but i have a maybe address",
    "start": "2117280",
    "end": "2123680"
  },
  {
    "text": "uh just but again this is very subjective right but the the clojure guy in me and sort of a",
    "start": "2123680",
    "end": "2129280"
  },
  {
    "text": "little bit triggered with this whole maybe thing because i have to satisfy the type system in this weird way",
    "start": "2129280",
    "end": "2135280"
  },
  {
    "text": "um but there's this other thing uh with maybe that um well this is actually two parts",
    "start": "2135280",
    "end": "2142720"
  },
  {
    "start": "2136000",
    "end": "2267000"
  },
  {
    "text": "so i'm going to start with the objective part it's just a completely sort of objective observation",
    "start": "2142720",
    "end": "2148400"
  },
  {
    "text": "when you use maybe so the objective part is that if you",
    "start": "2148400",
    "end": "2153599"
  },
  {
    "text": "have so so you have this function right and it returns uh maybe foo",
    "start": "2153599",
    "end": "2160000"
  },
  {
    "text": "that's how you set it up so that's good and then you assemble a team of your best programmers for many weeks and they",
    "start": "2160000",
    "end": "2167520"
  },
  {
    "text": "enhance this function and it becomes so great that actually now it always returns foo it doesn't return maybe foo",
    "start": "2167520",
    "end": "2173920"
  },
  {
    "text": "anymore so that's good uh and then you make that change from not",
    "start": "2173920",
    "end": "2179200"
  },
  {
    "text": "returning maybe through but it always returns through so you sort of you made it better right uh or stricter or what",
    "start": "2179200",
    "end": "2185760"
  },
  {
    "text": "you want to call it and then you break your colors right because those two types aren't",
    "start": "2185760",
    "end": "2191040"
  },
  {
    "text": "compatible maybe if we went through aren't compatible all the code that checks like if it does some or is it or",
    "start": "2191040",
    "end": "2196240"
  },
  {
    "text": "none that will break then you have to refactor your code of course it's the same the other way around right",
    "start": "2196240",
    "end": "2202240"
  },
  {
    "text": "if you have a function that takes a foo and then you change it oh i don't",
    "start": "2202240",
    "end": "2207680"
  },
  {
    "text": "actually always need a foo you can just give me a maybe foo that will also break colors right i mean you could always refactor",
    "start": "2207680",
    "end": "2215520"
  },
  {
    "text": "but this this is sort of the objective part i mean that's just an objective statement about uh maybe",
    "start": "2215520",
    "end": "2221280"
  },
  {
    "text": "um my subjective opinion uh is i this is like a bigger problem that",
    "start": "2221280",
    "end": "2227839"
  },
  {
    "text": "than we sort of think right because it it's one of these sort of invisible things that sort of crops up in your",
    "start": "2227839",
    "end": "2234079"
  },
  {
    "text": "code and then all we do is deal with it and of course your compiler helps you right of course you will see all the places in your code that you broke",
    "start": "2234079",
    "end": "2240720"
  },
  {
    "text": "by making it sort of less strict um but yeah this uh now we've also like immediately",
    "start": "2240720",
    "end": "2247040"
  },
  {
    "text": "entered territory where clojure programmer me just gets so annoyed right ah i made it like better but i broke",
    "start": "2247040",
    "end": "2253760"
  },
  {
    "text": "everything super annoying uh but of course this is like this is",
    "start": "2253760",
    "end": "2258960"
  },
  {
    "text": "not really kotlin right kotlin doesn't have a maybe type built in uh this is if you have you have to like pull in this",
    "start": "2258960",
    "end": "2264640"
  },
  {
    "text": "arrow thing to to get maybe um so let's look at what kotlin has to give",
    "start": "2264640",
    "end": "2270160"
  },
  {
    "text": "us so here we have a function uh it's a pretty simple function adds two to a",
    "start": "2270160",
    "end": "2276240"
  },
  {
    "text": "number and of course this is how you do that in kotlin you return and check if if the number is null you just return two",
    "start": "2276240",
    "end": "2282800"
  },
  {
    "text": "because you could this treats know as if it is the number zero right uh and if it's not uh null we add two to",
    "start": "2282800",
    "end": "2290480"
  },
  {
    "text": "it and of course you can see here what i've talked about before right the smart casting and all that you don't have to cast it to",
    "start": "2290480",
    "end": "2297680"
  },
  {
    "text": "int without question mark inside the if statement kotlin already knows that it's an instant in question mark",
    "start": "2297680",
    "end": "2304079"
  },
  {
    "text": "inside if statement and then i have like my a at the bottom",
    "start": "2304079",
    "end": "2309599"
  },
  {
    "text": "here which is uh it could be an int uh maybe not it could be null so it's it's",
    "start": "2309599",
    "end": "2315520"
  },
  {
    "text": "five now but we tell our type system that well it could be null right and of course this works",
    "start": "2315520",
    "end": "2320640"
  },
  {
    "text": "uh now we're going to play that uh per game so can you like spot the difference",
    "start": "2320640",
    "end": "2327838"
  },
  {
    "text": "you can see the difference does someone see the difference uh it's in the bottom there right and these are both programs that compile",
    "start": "2328000",
    "end": "2335440"
  },
  {
    "text": "right because kotlin knows this right because the int without a question mark of course it's okay to pass to a",
    "start": "2335440",
    "end": "2341839"
  },
  {
    "text": "function that takes maybe an int because an int is maybe an it but since it's not wrapped in this whole maybe thing it",
    "start": "2341839",
    "end": "2348320"
  },
  {
    "text": "sort of just works um so again when i see stuff like this uh",
    "start": "2348320",
    "end": "2354400"
  },
  {
    "text": "it makes the the closure programming pro closure programming me happy right because i don't have to do all this work to",
    "start": "2354400",
    "end": "2360640"
  },
  {
    "text": "refactor to satisfy the type system uh because it's like a first class thing and it's like maybe it's a little bit of",
    "start": "2360640",
    "end": "2366400"
  },
  {
    "text": "a mind trick right just because it's it has a name maybe it doesn't like act",
    "start": "2366400",
    "end": "2371440"
  },
  {
    "text": "like a maybe the programming language doesn't have a deep knowledge of what the maybe is but the option types of the",
    "start": "2371440",
    "end": "2376960"
  },
  {
    "text": "question mark in kotlin kotlin actually knows about them right so we can do this sort of thing and you can actually make like this",
    "start": "2376960",
    "end": "2383040"
  },
  {
    "text": "program better yeah it's always a number and the function that takes well it could be a number of course it accepts always a number",
    "start": "2383040",
    "end": "2389680"
  },
  {
    "text": "right it's just the way it should be and just to sort of um",
    "start": "2389680",
    "end": "2396480"
  },
  {
    "text": "sort of wrap up my little arrow rant this is a little bit unfair uh so",
    "start": "2396480",
    "end": "2402720"
  },
  {
    "text": "the point here is to sort of look at all this code right so much stuff you have to do to satisfy the type system it's",
    "start": "2402720",
    "end": "2408480"
  },
  {
    "text": "also like a big system that's evolved over time uh but i just uh when i was preparing",
    "start": "2408480",
    "end": "2413599"
  },
  {
    "text": "this talk i sort of found some old arrow code that that we used um and there's a lot of stuff here right",
    "start": "2413599",
    "end": "2421040"
  },
  {
    "text": "that i don't remember now like sr what is that uh it's required yeah i guess",
    "start": "2421040",
    "end": "2426319"
  },
  {
    "text": "that makes sense it works it's required named there's and and i so i i sort of",
    "start": "2426319",
    "end": "2431359"
  },
  {
    "text": "know right so i have i have the cheat uh because i've been part of writing this code",
    "start": "2431359",
    "end": "2436480"
  },
  {
    "text": "um uh this is like mostly satisfying the type system type things and and i i sort",
    "start": "2436480",
    "end": "2443280"
  },
  {
    "text": "of i'm a little bit on the fence uh it was sort of nice to have all this monety stuff uh and type system things",
    "start": "2443280",
    "end": "2450000"
  },
  {
    "text": "uh but i mean this is like now is very far from mainstream right that's basically my point this is not what i",
    "start": "2450000",
    "end": "2456640"
  },
  {
    "text": "would call like mainstream code because this is kotlin with arrow so be careful with that",
    "start": "2456640",
    "end": "2463440"
  },
  {
    "text": "um so uh i'm going to wrap up now",
    "start": "2463440",
    "end": "2468960"
  },
  {
    "text": "uh this is a thing i like to say uh java is that language that comes bundled with",
    "start": "2468960",
    "end": "2474079"
  },
  {
    "start": "2469000",
    "end": "2503000"
  },
  {
    "text": "the jvm like why would you use it right you buy i i java to me is like uh when you buy",
    "start": "2474079",
    "end": "2480000"
  },
  {
    "text": "like a router or something and it comes with a cd has anyone ever used that cd why is this cd here do you need like a",
    "start": "2480000",
    "end": "2486480"
  },
  {
    "text": "cd to make your router work no you just plug in a router and it works so this is sort of my view on java i",
    "start": "2486480",
    "end": "2491680"
  },
  {
    "text": "mean it's a good reference implementation and but now that we have kotlin um",
    "start": "2491680",
    "end": "2497599"
  },
  {
    "text": "i would sort of uh not like to be on the java project knowing that it could have been kotlin",
    "start": "2497599",
    "end": "2503040"
  },
  {
    "start": "2503000",
    "end": "2526000"
  },
  {
    "text": "and actually have the same sort of view when it comes to javascript and this seems to be like can you see the little",
    "start": "2503040",
    "end": "2508560"
  },
  {
    "text": "typescript logo that's hiding down the corner there i also sort of prefer to use typescript",
    "start": "2508560",
    "end": "2514720"
  },
  {
    "text": "instead of javascript uh so i guess java and javascript has this in common",
    "start": "2514720",
    "end": "2520079"
  },
  {
    "text": "is this weird language that comes bundled with the thing but maybe that's not the language that you should be using",
    "start": "2520079",
    "end": "2526079"
  },
  {
    "start": "2526000",
    "end": "2580000"
  },
  {
    "text": "so uh in summary even i a closure fan is able to sort of tolerate kotlin um and not just tolerate",
    "start": "2526079",
    "end": "2532960"
  },
  {
    "text": "it i sort of kind of like it actually and as i said like android is pretty mainstream already right so kotlin is",
    "start": "2532960",
    "end": "2538240"
  },
  {
    "text": "sort of half mainstream or this it is 100 mainstream when you make an android app right",
    "start": "2538240",
    "end": "2544160"
  },
  {
    "text": "so it's a relatively safe bet kotlin is as i said meat in chair friendly",
    "start": "2544160",
    "end": "2549200"
  },
  {
    "text": "as long as you don't add arrow of course then it's no longer meet engineer friendly it's meetings",
    "start": "2549200",
    "end": "2554720"
  },
  {
    "text": "you're hostile the part where kotlin just solves null",
    "start": "2554720",
    "end": "2560000"
  },
  {
    "text": "lovely don't ask me what that little asterisk is behind solving now uh",
    "start": "2560000",
    "end": "2567040"
  },
  {
    "text": "because of course right the real world comes and bites you sometimes you can do things in kotlin that gives you no",
    "start": "2567040",
    "end": "2572960"
  },
  {
    "text": "pointer exceptions um and then of course my little rant about the maybe type",
    "start": "2572960",
    "end": "2578800"
  },
  {
    "text": "i have a problem with that and just to be sure if you get fired for using kotlin i am not liable at all",
    "start": "2578800",
    "end": "2586800"
  },
  {
    "start": "2580000",
    "end": "2603000"
  },
  {
    "text": "thank you [Applause]",
    "start": "2586800",
    "end": "2597420"
  },
  {
    "text": "you",
    "start": "2603359",
    "end": "2605440"
  }
]