[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "alright I'll go ahead and get started try to get through this before everybody",
    "start": "1760",
    "end": "6870"
  },
  {
    "text": "kind of slips into the post lunch now so today we're going to talk about",
    "start": "6870",
    "end": "13160"
  },
  {
    "text": "generating and compiling code at run time with Rozlyn it's a it's a cool new feature relatively cool new feature in",
    "start": "13160",
    "end": "20400"
  },
  {
    "text": "net there's a lot of really powerful things we can do with it so I want to talk about I'll really just",
    "start": "20400",
    "end": "25890"
  },
  {
    "text": "kind of the journey what it is good for I have a lot of friends that are in F sharp or a lot of common people running",
    "start": "25890",
    "end": "33329"
  },
  {
    "text": "around and they're always trying to convince you you know c-sharp is old its tired come do this new thing well this",
    "start": "33329",
    "end": "40350"
  },
  {
    "text": "is like a cool thing that c-sharp has that a lot of other languages don't that",
    "start": "40350",
    "end": "46110"
  },
  {
    "text": "might end up being a big deal for us so about me just a little bit so I'm Jeremy",
    "start": "46110",
    "end": "51480"
  },
  {
    "start": "48000",
    "end": "90000"
  },
  {
    "text": "Miller been around for a while a few of you might remember me from code better",
    "start": "51480",
    "end": "56789"
  },
  {
    "text": "calm back in a day but I'm an author of a couple open source language open",
    "start": "56789",
    "end": "61949"
  },
  {
    "text": "source tools all of which up here I'm going to talk about I'm gonna bring examples hopefully some positive",
    "start": "61949",
    "end": "68460"
  },
  {
    "text": "examples there definitely some negative examples of the tools that are listed there today we're gonna look at some",
    "start": "68460",
    "end": "74369"
  },
  {
    "text": "really old structure map code I had to go dig into SourceForge to find an example that most of you forgot source",
    "start": "74369",
    "end": "81240"
  },
  {
    "text": "board still exists but it's still around I'm gonna pull something from Martin which is definitely not an ORM okay so",
    "start": "81240",
    "end": "92430"
  },
  {
    "start": "90000",
    "end": "129000"
  },
  {
    "text": "there's a couple tools in specific I'm not going to get into the specifics of",
    "start": "92430",
    "end": "97439"
  },
  {
    "text": "the tool so I'm not trying to sell you on the tool I'm just talking about the techniques we've used inside of this so",
    "start": "97439",
    "end": "103649"
  },
  {
    "text": "two closely related things lamar and jasper that are my projects that use",
    "start": "103649",
    "end": "109710"
  },
  {
    "text": "this technique and then we're going to as an example we're gonna take a look at reef it and we're gonna build a very",
    "start": "109710",
    "end": "117030"
  },
  {
    "text": "minimalist replacement or welcome a project using this technique to do what",
    "start": "117030",
    "end": "123450"
  },
  {
    "text": "reef it does but we're certainly not trying to compete with reef it or do it for real okay",
    "start": "123450",
    "end": "131170"
  },
  {
    "start": "129000",
    "end": "290000"
  },
  {
    "text": "so all of you may not and your daily lives may not be necessarily doing",
    "start": "131170",
    "end": "136600"
  },
  {
    "text": "anything dynamic with net but even if you aren't it's very likely you're using tools of some kind or another that are",
    "start": "136600",
    "end": "143950"
  },
  {
    "text": "calling your code that are doing dynamic things that are the curtains and so you're saying oh I hate some of this",
    "start": "143950",
    "end": "150070"
  },
  {
    "text": "stuff but you're probably using some of it somewhere so JSON serializers they're",
    "start": "150070",
    "end": "155350"
  },
  {
    "text": "called hitting properties setting properties on your classes ioc containers of course are doing all kinds",
    "start": "155350",
    "end": "160450"
  },
  {
    "text": "of reflective things messaging frameworks it's been an MVC core it's",
    "start": "160450",
    "end": "166570"
  },
  {
    "text": "just part of our daily lives maybe just maybe you've tried to build something like this yourself I'm just kind of",
    "start": "166570",
    "end": "172450"
  },
  {
    "text": "likely if you're the kind of developer that comes to a conference like in DC London so let's let's jump into some of",
    "start": "172450",
    "end": "178480"
  },
  {
    "text": "those so let's look a little bit at just a very typical MVC controller so and",
    "start": "178480",
    "end": "189940"
  },
  {
    "text": "we're going to use this in a later demo so very simple just allows us a couple endpoints to post a new user object a",
    "start": "189940",
    "end": "197799"
  },
  {
    "text": "new user document which is pretty fancy and one that'll let us grab it by name",
    "start": "197799",
    "end": "206769"
  },
  {
    "text": "but just looking at the elements here how does a speed on MVC core go from our",
    "start": "206769",
    "end": "215530"
  },
  {
    "text": "class in our code but what it's really starting from is a request delegate everything has to look like a function",
    "start": "215530",
    "end": "221650"
  },
  {
    "text": "of give me an HTP context and then you just return a task to tell me when you're done",
    "start": "221650",
    "end": "227130"
  },
  {
    "text": "MVC itself is acting as an intermediary intermediary between HP context and",
    "start": "227130",
    "end": "233019"
  },
  {
    "text": "calling your code so here we've had to decorate it a little bit we've got an",
    "start": "233019",
    "end": "238360"
  },
  {
    "text": "attribute to tell it what the route is this eye action result that we return this is kind of kind of help in VC core",
    "start": "238360",
    "end": "245860"
  },
  {
    "text": "know what to do after it calls your method the from body attribute is telling MVC core hey I need to serialize",
    "start": "245860",
    "end": "254250"
  },
  {
    "text": "deserialize the contents of the request body into this user type and push it",
    "start": "254250",
    "end": "259359"
  },
  {
    "text": "there's a lot of information here we're having to give MVC core so the DC core",
    "start": "259359",
    "end": "264879"
  },
  {
    "text": "knows how to use our code runtime bootstrapping and runtime shame on me I",
    "start": "264879",
    "end": "271689"
  },
  {
    "text": "didn't do the research but to the best of my knowledge in VC core is building",
    "start": "271689",
    "end": "276909"
  },
  {
    "text": "up funks with expressions and compiling compiling lambdas to actually do the running and we'll take a look at that",
    "start": "276909",
    "end": "282969"
  },
  {
    "text": "that's kind of nasty stuff all right so",
    "start": "282969",
    "end": "291099"
  },
  {
    "start": "290000",
    "end": "461000"
  },
  {
    "text": "let's go back to take a little bit of a history lesson the ways we've done this in dot in the past or what your options",
    "start": "291099",
    "end": "296860"
  },
  {
    "text": "are so the easiest way to do any kind of dynamic coding is reflection API it's",
    "start": "296860",
    "end": "303879"
  },
  {
    "text": "still by far the easiest thing to use it's approachable most of you probably used it a lot of you have probably been",
    "start": "303879",
    "end": "310419"
  },
  {
    "text": "burned in the past by using reflection to dig into an internal type or member and who's done that and then let's see",
    "start": "310419",
    "end": "317979"
  },
  {
    "text": "if the same hands show up how many have you been burned when the underlying butt library changed underneath you yeah me",
    "start": "317979",
    "end": "324430"
  },
  {
    "text": "too me too based on their core has been really terrible for that but so reflection is",
    "start": "324430",
    "end": "331000"
  },
  {
    "text": "very slow it's very easy the one thing it has an advantage on where it's still useful no matter how good this other",
    "start": "331000",
    "end": "337000"
  },
  {
    "text": "stuff looks reflection has the fastest slows cold start time so if you only",
    "start": "337000",
    "end": "343930"
  },
  {
    "text": "have to do something one time in your application doing it where the reflection is still the fastest way to",
    "start": "343930",
    "end": "349690"
  },
  {
    "text": "do it rather than having the overhead of compiling something new just to use it once one of the cool things getting into",
    "start": "349690",
    "end": "357969"
  },
  {
    "text": "the a spinet course built in DI container they're smart enough to know",
    "start": "357969",
    "end": "363940"
  },
  {
    "text": "that that when they're activating is singleton they'll actually go to pure reflections of trying to compile a new",
    "start": "363940",
    "end": "371259"
  },
  {
    "text": "lambda just to be using it once so that cold start times really important as well",
    "start": "371259",
    "end": "377279"
  },
  {
    "text": "il generation I'm not not sure how many people remember you can do this but",
    "start": "377279",
    "end": "382779"
  },
  {
    "text": "let's take a look at it because I've got a sample so this is going back this is",
    "start": "382779",
    "end": "388240"
  },
  {
    "text": "on SourceForge so I'm pretty sure that this code was probably written maybe around two",
    "start": "388240",
    "end": "396490"
  },
  {
    "text": "thousand five two thousand maybe 2006",
    "start": "396490",
    "end": "402300"
  },
  {
    "text": "we've learned a few things there so this is very fast I would call it masochistic",
    "start": "402300",
    "end": "408070"
  },
  {
    "text": "I actually know people that claim to like doing this but I think it's just",
    "start": "408070",
    "end": "413290"
  },
  {
    "text": "kind of a just kind of a showing off kind of thing of hahaha I'm so smart I can code in il but if you look at it",
    "start": "413290",
    "end": "421530"
  },
  {
    "text": "it's a step maybe a couple steps above going right down to assembly language",
    "start": "421530",
    "end": "427600"
  },
  {
    "text": "you have to deal with stacks it was just nasty to use the way I pulled this off",
    "start": "427600",
    "end": "435400"
  },
  {
    "text": "I had an il book open the whole time but what you really did is you wrote the code you were trying trying to generate",
    "start": "435400",
    "end": "441730"
  },
  {
    "text": "and you go use that old il Dasom code dump out the il that was generated from",
    "start": "441730",
    "end": "446890"
  },
  {
    "text": "that and you try to program to match it and that sounds like that should be easy but it wasn't it was a lot of trial and",
    "start": "446890",
    "end": "453520"
  },
  {
    "text": "error and some of you are laughing so you definitely tried to do this in her hurt okay about ten years ago when we",
    "start": "453520",
    "end": "463990"
  },
  {
    "text": "got net three point five we got lambdas we got expressions we got the ability to",
    "start": "463990",
    "end": "469180"
  },
  {
    "text": "build up some dynamic code by using the expression API model and then we can",
    "start": "469180",
    "end": "475390"
  },
  {
    "text": "compile that to a strong type func or action of some sort and that's a lot",
    "start": "475390",
    "end": "481600"
  },
  {
    "text": "better but it's still weird and let me show you example so this code back here",
    "start": "481600",
    "end": "491440"
  },
  {
    "text": "in any time please if any text on the screen isn't big enough the guys in the",
    "start": "491440",
    "end": "497320"
  },
  {
    "text": "back will just just wake me up so this isn't doing very much this is from my",
    "start": "497320",
    "end": "503350"
  },
  {
    "text": "martin project that is trying to make Postgres act like a document database",
    "start": "503350",
    "end": "508900"
  },
  {
    "text": "for dotnet developers which is most definitely not an ORM all this code is",
    "start": "508900",
    "end": "516010"
  },
  {
    "text": "doing is creating a func that knows how to go from a mob",
    "start": "516010",
    "end": "522150"
  },
  {
    "text": "object that has an ID and maybe you're also storing a few properties in",
    "start": "522150",
    "end": "528110"
  },
  {
    "text": "duplicated fields and going from that to being able to call the store procedure that's customized for that document type",
    "start": "528110",
    "end": "535650"
  },
  {
    "text": "and now that I just minted that I have written a stored procedure in the last couple years please stay with me please",
    "start": "535650",
    "end": "542160"
  },
  {
    "text": "still respect me but this codes kind of wonky I mean it is it is expressed in",
    "start": "542160",
    "end": "549990"
  },
  {
    "text": "terms of code the things that you already know how to do those parameters there's Method calls there's this block",
    "start": "549990",
    "end": "556650"
  },
  {
    "text": "thing that's just a group of them but still we've got a great community for",
    "start": "556650",
    "end": "563610"
  },
  {
    "text": "Martin there's a lot of other people developing on it and taking it all kinds of ways but this stuff is so specialized",
    "start": "563610",
    "end": "570030"
  },
  {
    "text": "that when weird stuff comes up with it there's only a very few handful of us that will go and try to tackle this and",
    "start": "570030",
    "end": "576360"
  },
  {
    "text": "make changes with this it's not a very approachable model I would guess today",
    "start": "576360",
    "end": "581730"
  },
  {
    "text": "that most of the ioc tools are using probably most of the ORM and dotnet today are probably using this technique",
    "start": "581730",
    "end": "588860"
  },
  {
    "text": "anybody using in-service bus I believe from from version six on okay well I",
    "start": "588860",
    "end": "598460"
  },
  {
    "text": "won't tell the guy that won't tell the particular guys that many hands went up they went through a huge effort to stop",
    "start": "598460",
    "end": "605370"
  },
  {
    "text": "trying to create so many objects and to try to dynamically generate expressions",
    "start": "605370",
    "end": "611090"
  },
  {
    "text": "to have things kind of pre compiled in a lot faster and they made a huge advantage for them in terms of how much",
    "start": "611090",
    "end": "618480"
  },
  {
    "text": "they throttled the memory how many objects had to create and how fast they were",
    "start": "618480",
    "end": "624140"
  },
  {
    "text": "okay now some other things that adapt that frameworks do so they can call your",
    "start": "626490",
    "end": "631680"
  },
  {
    "start": "627000",
    "end": "753000"
  },
  {
    "text": "code we're all familiar with adapter types of some kind messaging frameworks",
    "start": "631680",
    "end": "637110"
  },
  {
    "text": "we usually have some kind of eye handler of T interface where it implements this",
    "start": "637110",
    "end": "642960"
  },
  {
    "text": "interface and your one argument is taking in T which is your message type and maybe some kind of context it's just",
    "start": "642960",
    "end": "649560"
  },
  {
    "text": "a way for you to be able to take your code and make it caller bol by the framework and it doesn't have to be that",
    "start": "649560",
    "end": "655890"
  },
  {
    "text": "bad but it still kind of pollutes your code you get to the point where you're not really writing code you're writing",
    "start": "655890",
    "end": "663360"
  },
  {
    "text": "code for a framework if you're not careful and your application code may not be usable outside the confines of",
    "start": "663360",
    "end": "671370"
  },
  {
    "text": "that framework it's worst possible way you can go you can also just use lambdas",
    "start": "671370",
    "end": "677460"
  },
  {
    "text": "where you just say thinking of example Sinatra flavored web applications like",
    "start": "677460",
    "end": "683280"
  },
  {
    "text": "Nancy FX or gal Carter where you say for this route run this function that takes",
    "start": "683280",
    "end": "689970"
  },
  {
    "text": "a request a response and returns a task right that's another way to do that the",
    "start": "689970",
    "end": "696390"
  },
  {
    "text": "stack traces some of the downside the stack traces that came out of it aren't super helpful that that was a real",
    "start": "696390",
    "end": "702990"
  },
  {
    "text": "problem for me in my structure map library that's an IOC tool when I first moved from il to expressions I didn't",
    "start": "702990",
    "end": "712140"
  },
  {
    "text": "pay attention to stock traces at first so anytime something blew up in structure map you would get this massive",
    "start": "712140",
    "end": "717570"
  },
  {
    "text": "stack trace with a bunch of junk related to all these dynamic expressions that",
    "start": "717570",
    "end": "722910"
  },
  {
    "text": "had no bearing to any of you problems and way deep in the middle of it might say yeah you had a no reference",
    "start": "722910",
    "end": "729480"
  },
  {
    "text": "exception in a constructor but you had to wade through a whole lot of mess to get to what mattered and as it be kind",
    "start": "729480",
    "end": "737700"
  },
  {
    "text": "of a tool vendor or somebody that writes tools for other people it turns out you really want your stack traces to be",
    "start": "737700",
    "end": "744000"
  },
  {
    "text": "readable legible and to help people solve problems very quickly or they're gonna come to you with those problems",
    "start": "744000",
    "end": "751940"
  },
  {
    "start": "753000",
    "end": "1014000"
  },
  {
    "text": "all right so let's jump into hello world Roslin's the cool thing",
    "start": "753170",
    "end": "759550"
  },
  {
    "text": "we can actually use the Rosalind compiler we can actually use it in memory we can stuff code at it and we",
    "start": "759550",
    "end": "765730"
  },
  {
    "text": "can build an assembly on the fly and load types out of it so let's just do do the very basic little world how we do it",
    "start": "765730",
    "end": "780190"
  },
  {
    "text": "in the back all right a good speaker would have this all sorted out before",
    "start": "780190",
    "end": "785740"
  },
  {
    "text": "they start so I work on a tool called Lemar and it has a core library and it",
    "start": "785740",
    "end": "793000"
  },
  {
    "text": "called Lemar compiler that is a thin layer on top of the Rosslyn Rosalind",
    "start": "793000",
    "end": "799180"
  },
  {
    "text": "api's there's a little bit of trickery going on about creating references to assemblies and invoking the compiler not",
    "start": "799180",
    "end": "806649"
  },
  {
    "text": "a lot but this is this assembly generator class here it's a little helper so what I want to do to make this",
    "start": "806649",
    "end": "814240"
  },
  {
    "text": "easier to call let's say we have an interface called eye greeter",
    "start": "814240",
    "end": "819580"
  },
  {
    "text": "that just has one method that's just going to return a string right so we can call up the hello world I don't have to",
    "start": "819580",
    "end": "826720"
  },
  {
    "text": "use the interface but using the interface just makes it easier for us to interact and talk to the dynamically",
    "start": "826720",
    "end": "832149"
  },
  {
    "text": "generated classes so inside of a next unit test I'm going to fire up this",
    "start": "832149",
    "end": "837760"
  },
  {
    "text": "assembly generator class this is going to invoke the compiler eventually I need to tell it just like you would with your",
    "start": "837760",
    "end": "845200"
  },
  {
    "text": "own dotnet projects I have to make references to the assemblies that export",
    "start": "845200",
    "end": "851740"
  },
  {
    "text": "types they're gonna be part of the generated generated assembly so my dynamic assembly here is gonna have to",
    "start": "851740",
    "end": "859930"
  },
  {
    "text": "have it's gonna have to have a reference to the current assembly because that's",
    "start": "859930",
    "end": "865450"
  },
  {
    "text": "where that I greet our interfaces may be I'm gonna make this a little more clear",
    "start": "865450",
    "end": "871230"
  },
  {
    "text": "okay now behind the scenes if you do this completely on your own without",
    "start": "877339",
    "end": "882810"
  },
  {
    "text": "using a little mark compiler here it's it's recursive so Lamarr compiler here",
    "start": "882810",
    "end": "889589"
  },
  {
    "text": "is smart enough when you say your reference assembly it's smart enough to add references to every assembly that",
    "start": "889589",
    "end": "895529"
  },
  {
    "text": "this assembly refers to it's on and so on and so on so that you can actually",
    "start": "895529",
    "end": "901249"
  },
  {
    "text": "compile so when we say reference assembly this assembly is an extra unit",
    "start": "901249",
    "end": "907230"
  },
  {
    "text": "library so it's adding references to X unit and everything actually depends on all the way down okay",
    "start": "907230",
    "end": "915709"
  },
  {
    "text": "so simple as possible thing I could do hard coding everything let's just we're",
    "start": "915709",
    "end": "922529"
  },
  {
    "text": "gonna write this hello world class and real quick off on the fly this method",
    "start": "922529",
    "end": "930749"
  },
  {
    "text": "here is going to generate whatever assembly right off the bat for whatever code is written at the bottom of it now",
    "start": "930749",
    "end": "938579"
  },
  {
    "text": "that we have an assembly object if you ever done any kind of custom type scanning we can go look for all the",
    "start": "938579",
    "end": "945000"
  },
  {
    "text": "exported public types out of it this one should only have one to go grab it create this greeter cast it to our eye",
    "start": "945000",
    "end": "952649"
  },
  {
    "text": "greeter interface and now it could finally use it and then let's give it a shot it's just going to run next unit",
    "start": "952649",
    "end": "958589"
  },
  {
    "text": "test and it should spit out hello in DC London into the test results Yes No",
    "start": "958589",
    "end": "965639"
  },
  {
    "text": "maybe so let's go yep that's running",
    "start": "965639",
    "end": "979459"
  },
  {
    "text": "and there we go there's a little world let me stop and say if you're not familiar with the",
    "start": "984660",
    "end": "990820"
  },
  {
    "text": "editor this is JetBrains writer just in case hotties in the room thank you to jetbrains for my OSS",
    "start": "990820",
    "end": "996700"
  },
  {
    "text": "license for writer I really appreciate okay any questions about that before I",
    "start": "996700",
    "end": "1004110"
  },
  {
    "text": "move on okay well it's go see more profound things though okay",
    "start": "1004110",
    "end": "1015600"
  },
  {
    "start": "1014000",
    "end": "1119000"
  },
  {
    "text": "so doing research for this talk the last couple days I just trying to ask on Twitter just see who else is using this",
    "start": "1015600",
    "end": "1022670"
  },
  {
    "text": "thinking that I was ahead of the curve and this was something that was new and fancy and now there's actually a lot of",
    "start": "1022670",
    "end": "1028680"
  },
  {
    "text": "projects that already use this today so raven DB is using this the refit library",
    "start": "1028680",
    "end": "1034410"
  },
  {
    "text": "we're going to talk about a little bit more is using it as well ym that's a document generator the cake",
    "start": "1034410",
    "end": "1040980"
  },
  {
    "text": "build engine script C yes well I mean they were really the first to do wacky",
    "start": "1040980",
    "end": "1046290"
  },
  {
    "text": "things with Rozlyn like this so this is becoming more and more common talking to some of the authors of these tools they",
    "start": "1046290",
    "end": "1053310"
  },
  {
    "text": "did hit some of the same problems I hit this Roselyn runtime generation it had a",
    "start": "1053310",
    "end": "1058590"
  },
  {
    "text": "pretty severe problem with cold start times originally so that first time you",
    "start": "1058590",
    "end": "1064380"
  },
  {
    "text": "try to activate the compiler when this stuff was new a couple years ago it would take almost a four to five second",
    "start": "1064380",
    "end": "1070860"
  },
  {
    "text": "hit on a high-end developer machine just to kind of warm up the compiler before",
    "start": "1070860",
    "end": "1076290"
  },
  {
    "text": "it made the first compilation it's significantly better today but still be",
    "start": "1076290",
    "end": "1082080"
  },
  {
    "text": "aware that you can feel it like when you're trying to start an application or if you're trying to run an integration",
    "start": "1082080",
    "end": "1087720"
  },
  {
    "text": "test against your application you can still feel a half-second lag or that's what I feel like when the seg is running",
    "start": "1087720",
    "end": "1094470"
  },
  {
    "text": "so instead the bigger Jasper framework we'll get to in a while and I Andy's",
    "start": "1094470",
    "end": "1102090"
  },
  {
    "text": "told me he does the same thing with Raven the compilation happens either lazily or it happens in a background",
    "start": "1102090",
    "end": "1107610"
  },
  {
    "text": "thread as the application is bootstrapping so you don't trying to keep the user from",
    "start": "1107610",
    "end": "1112730"
  },
  {
    "text": "feeling that initial cold start start time all right so let's get fancy and",
    "start": "1112730",
    "end": "1122150"
  },
  {
    "start": "1119000",
    "end": "1225000"
  },
  {
    "text": "I'm gonna admit this is already pre-built we're not writing it from scratch but let's take a look at this let me explain",
    "start": "1122150",
    "end": "1128750"
  },
  {
    "text": "a little bit of what refit does as we go along because it's a cool thing that probably doesn't get enough attention",
    "start": "1128750",
    "end": "1135640"
  },
  {
    "text": "okay well it makes you actually start so let's say going back to the same user",
    "start": "1138220",
    "end": "1143420"
  },
  {
    "text": "controller we have a very small Web API project off this side this is going to",
    "start": "1143420",
    "end": "1150470"
  },
  {
    "text": "be a micro service consumed by other applications inside of our system so",
    "start": "1150470",
    "end": "1156350"
  },
  {
    "text": "we've got the two endpoints two endpoints that we care about the create",
    "start": "1156350",
    "end": "1161750"
  },
  {
    "text": "a name and one I'm going to use strictly just to kind of show off here just to",
    "start": "1161750",
    "end": "1167390"
  },
  {
    "text": "track what our users are so let me try to establish a baseline here I actually",
    "start": "1167390",
    "end": "1178580"
  },
  {
    "text": "had this application roaming ahead of time okay let me see if I can get cocky",
    "start": "1178580",
    "end": "1189650"
  },
  {
    "text": "and stopped and restarted",
    "start": "1189650",
    "end": "1192730"
  },
  {
    "text": "okay try this again",
    "start": "1198850",
    "end": "1203350"
  },
  {
    "text": "okay so right now when I start this",
    "start": "1206650",
    "end": "1211730"
  },
  {
    "text": "application up the only two users well just take my word for it the only two users up here are looking like because",
    "start": "1211730",
    "end": "1219320"
  },
  {
    "text": "we're using a star wars-themed now so what refid does this is the API we want",
    "start": "1219320",
    "end": "1227210"
  },
  {
    "start": "1225000",
    "end": "1303000"
  },
  {
    "text": "to call so rather than picking up HP client factory it should be client and",
    "start": "1227210",
    "end": "1232520"
  },
  {
    "text": "handcrafting the code to do all the json serialization the json the necessary",
    "start": "1232520",
    "end": "1239330"
  },
  {
    "text": "JSON headers except headers content headers whatnot what if instead and what",
    "start": "1239330",
    "end": "1247460"
  },
  {
    "text": "reef it does for us what you say you can just create an interface that is what",
    "start": "1247460",
    "end": "1254600"
  },
  {
    "text": "you want the rest of your application to talk to so we have methods for the get",
    "start": "1254600",
    "end": "1259850"
  },
  {
    "text": "user and the create and because it's in perfect world there's still a little bit of attribute goop the get and post here",
    "start": "1259850",
    "end": "1268250"
  },
  {
    "text": "which I stole shamelessly from reef it just expresses the URL pattern to the",
    "start": "1268250",
    "end": "1274250"
  },
  {
    "text": "real thing whatever the real services so what we would like now is to just",
    "start": "1274250",
    "end": "1280700"
  },
  {
    "text": "declare this i user service and kind of step into meta programming you know like",
    "start": "1280700",
    "end": "1285710"
  },
  {
    "text": "all your cool ruby friends can do let's actually do it with dotnet just knowing",
    "start": "1285710",
    "end": "1290990"
  },
  {
    "text": "this interface and assuming we can connect to configuration to pick up the real URL let's build a class for this on",
    "start": "1290990",
    "end": "1297770"
  },
  {
    "text": "the fly something that we can use at runtime",
    "start": "1297770",
    "end": "1301960"
  },
  {
    "start": "1303000",
    "end": "1479000"
  },
  {
    "text": "is anybody here using refit for real okay a few do you like it we didn't use",
    "start": "1303190",
    "end": "1312680"
  },
  {
    "text": "it on my current project because I'd honestly forgotten all about it and I really wish we had okay let's try this",
    "start": "1312680",
    "end": "1323390"
  },
  {
    "text": "so I'll promise to write a blog post in the next couple days",
    "start": "1323390",
    "end": "1328740"
  },
  {
    "text": "for before I head back home that just kind of walks through the details of how this was built but I whipped up some",
    "start": "1328740",
    "end": "1335550"
  },
  {
    "text": "code that feet in feet in the type you want with you do need a prebuilt ioc",
    "start": "1335550",
    "end": "1343320"
  },
  {
    "text": "container and this is only gonna work with lamar but knowing these things it",
    "start": "1343320",
    "end": "1349290"
  },
  {
    "text": "can generate the concrete class you want to use so I'm doing here assuming this works because it did this morning it's",
    "start": "1349290",
    "end": "1356370"
  },
  {
    "text": "gonna tell us what the source code was that it tried to generate let's give that shot real quick it'll come out in",
    "start": "1356370",
    "end": "1366540"
  },
  {
    "text": "this window when it does okay",
    "start": "1366540",
    "end": "1373429"
  },
  {
    "text": "so we are we have an implementation of that I user interface it's only",
    "start": "1375500",
    "end": "1383179"
  },
  {
    "text": "dependency for right now is an I HP client factory or a newfangled stuff you",
    "start": "1383179",
    "end": "1389900"
  },
  {
    "text": "see see I mean this is code this is generated code it's like generated code everywhere it's kind of ugly you know if",
    "start": "1389900",
    "end": "1397070"
  },
  {
    "text": "you see the complete full names everywhere my theory is if you are",
    "start": "1397070",
    "end": "1403640"
  },
  {
    "text": "previewing the generated code to try to understand what's happening you can just copy paste it into a real code file",
    "start": "1403640",
    "end": "1411010"
  },
  {
    "text": "reformat it with three sharp or whatever you use and get it to be clean and pretty that aside you can see the",
    "start": "1411010",
    "end": "1418460"
  },
  {
    "text": "concrete steps we need to take which is probably about what you would do if you were coding this from hand I need to",
    "start": "1418460",
    "end": "1424940"
  },
  {
    "text": "build up an HP request message it's easier not to use the shorthand post",
    "start": "1424940",
    "end": "1430039"
  },
  {
    "text": "async whatever just so this is flexible enough to handle any kind of HTTP method",
    "start": "1430039",
    "end": "1435140"
  },
  {
    "text": "so build up the HP request message deal",
    "start": "1435140",
    "end": "1441380"
  },
  {
    "text": "with serialization along the way I've had this push in a couple comments just",
    "start": "1441380",
    "end": "1447350"
  },
  {
    "text": "to kind of explain where this is coming from let me go down and see the other",
    "start": "1447350",
    "end": "1452510"
  },
  {
    "text": "method same kind of thing this is a proof of concept so I'm not really",
    "start": "1452510",
    "end": "1458210"
  },
  {
    "text": "trying to make this fast so if you were building this for real you would have to do something a little more elaborate",
    "start": "1458210",
    "end": "1464090"
  },
  {
    "text": "than just JSON convert doc to sterilise object but just just just go with this",
    "start": "1464090",
    "end": "1470440"
  },
  {
    "text": "but we're generating from the signature we're able to generate code that's going",
    "start": "1470440",
    "end": "1476090"
  },
  {
    "text": "to call the HP proxies okay we've taken just a tiny bit look at some",
    "start": "1476090",
    "end": "1482210"
  },
  {
    "start": "1479000",
    "end": "1650000"
  },
  {
    "text": "of the things are going on here so this is all exposed in Willmar compiler a library which is believer not for",
    "start": "1482210",
    "end": "1489770"
  },
  {
    "text": "anybody who has ever used any of my tools over the years believe it or not this is actually documented",
    "start": "1489770",
    "end": "1498340"
  },
  {
    "text": "I'm not gonna go too far into the model model and what it does but let's look at",
    "start": "1502529",
    "end": "1507869"
  },
  {
    "text": "it a little bit of it okay",
    "start": "1507869",
    "end": "1518659"
  },
  {
    "text": "so Mar compiler or is really trying to",
    "start": "1518659",
    "end": "1524249"
  },
  {
    "text": "do is to be able to build just really complicated methods that did some kind",
    "start": "1524249",
    "end": "1531119"
  },
  {
    "text": "of unit of work handling an HP request in a web framework handling a message",
    "start": "1531119",
    "end": "1537539"
  },
  {
    "text": "inside of a service bus are now using it here as kind of a string of operations",
    "start": "1537539",
    "end": "1543329"
  },
  {
    "text": "to make an HTTP call through HP client and interpret the results so the",
    "start": "1543329",
    "end": "1550499"
  },
  {
    "text": "building blocks inside the lamar compiler model the idea of a frame which",
    "start": "1550499",
    "end": "1556349"
  },
  {
    "text": "was really loosely a logical operation in the code the most common ones you're",
    "start": "1556349",
    "end": "1562559"
  },
  {
    "text": "going to use would be just either calling a method or calling a constructor and everything else is kind",
    "start": "1562559",
    "end": "1569639"
  },
  {
    "text": "of weird the frames in depth kind of being built in a chain model a linked",
    "start": "1569639",
    "end": "1575699"
  },
  {
    "text": "list and probably more than you want to know right now but just so you have the ability if necessary to wrap code around",
    "start": "1575699",
    "end": "1583259"
  },
  {
    "text": "something else like have a try-catch block that wraps anything that comes on and inside of it so by building this",
    "start": "1583259",
    "end": "1591599"
  },
  {
    "text": "model and how it is adapted a little bit they said I will try to promise to have",
    "start": "1591599",
    "end": "1598439"
  },
  {
    "text": "a blog post that's more explanatory about this but generating the the",
    "start": "1598439",
    "end": "1605279"
  },
  {
    "text": "methods on-the-fly for this interface it's code like this where we're",
    "start": "1605279",
    "end": "1611279"
  },
  {
    "text": "interrogating the signature a little bit and then we just add the right frames to the method and compilation time this",
    "start": "1611279",
    "end": "1618299"
  },
  {
    "text": "thing is smart enough to know what little bits dad's of code actually gets written in okay I think that is enough",
    "start": "1618299",
    "end": "1628019"
  },
  {
    "text": "on that model but just for fun what's actually run the whole thing",
    "start": "1628019",
    "end": "1634140"
  },
  {
    "text": "okay so test right here that I'm about to run set up a little bit of a",
    "start": "1645230",
    "end": "1652159"
  },
  {
    "start": "1650000",
    "end": "1835000"
  },
  {
    "text": "container so this is the Lamar container that is the spiritual successor of two",
    "start": "1652159",
    "end": "1657409"
  },
  {
    "text": "structure map because I don't want to support structure map anymore and I wanted people to have a way off of it so",
    "start": "1657409",
    "end": "1664159"
  },
  {
    "text": "it's very specific the only things that really matter here using the same @hp",
    "start": "1664159",
    "end": "1670850"
  },
  {
    "text": "client the same bootstrapping that you would use in an MVC core application today just to add that to the service",
    "start": "1670850",
    "end": "1678529"
  },
  {
    "text": "registrations because lamar supports the asp.net cuore di model out of the box",
    "start": "1678529",
    "end": "1684139"
  },
  {
    "text": "and then there's a policy here that's specific to Lamar it just says if you",
    "start": "1684139",
    "end": "1690529"
  },
  {
    "text": "ask for a service that I don't know about today and that service has beat",
    "start": "1690529",
    "end": "1700669"
  },
  {
    "text": "this and if that service hat is marked has methods that are marked with these",
    "start": "1700669",
    "end": "1706179"
  },
  {
    "text": "refet clone attributes I'm going to go ahead and make up a class on the fly",
    "start": "1706179",
    "end": "1711830"
  },
  {
    "text": "that implements this interface that does what I think you want it to do so you're",
    "start": "1711830",
    "end": "1719029"
  },
  {
    "text": "probably saying this is too much magic I don't like it and that's all fair but",
    "start": "1719029",
    "end": "1724279"
  },
  {
    "text": "this is enough right here to set up the application container so now I should be",
    "start": "1724279",
    "end": "1729409"
  },
  {
    "text": "able to say go grab a user not knowing that it's being built on the fly and",
    "start": "1729409",
    "end": "1735649"
  },
  {
    "text": "this is a dynamic class but go do it and we do a sanity check to make sure it's",
    "start": "1735649",
    "end": "1740870"
  },
  {
    "text": "not null and we're gonna go post a new user called Darth Vader and we'll have a",
    "start": "1740870",
    "end": "1746720"
  },
  {
    "text": "little family reunion so I'm just going to call the methods and then we go try",
    "start": "1746720",
    "end": "1752389"
  },
  {
    "text": "to fetch our fader to prove that he's really there know before we do that let's do the you know nothing up your",
    "start": "1752389",
    "end": "1758570"
  },
  {
    "text": "sleeve kind of thing so I call this method refresh just to see what's here",
    "start": "1758570",
    "end": "1766179"
  },
  {
    "text": "so right now the only two users up there Luke and Leia and then let's run our",
    "start": "1766179",
    "end": "1771679"
  },
  {
    "text": "tests",
    "start": "1771679",
    "end": "1773980"
  },
  {
    "text": "during this whole thing and while that's running uh so my younger son is gonna turn five in about",
    "start": "1777110",
    "end": "1785040"
  },
  {
    "text": "a week or so and I had to deal with his older brother years ago that he wasn't",
    "start": "1785040",
    "end": "1791010"
  },
  {
    "text": "allowed to watch Star Wars the movie until he turned five so we made it this huge deal with my younger son of you get",
    "start": "1791010",
    "end": "1797760"
  },
  {
    "text": "to watch Star Wars when he turned five so that's what I get to do on the weekend when I'm home from in DC make",
    "start": "1797760",
    "end": "1809640"
  },
  {
    "text": "sure it's actually running okay we're running in okay so everybody see now we",
    "start": "1809640",
    "end": "1820950"
  },
  {
    "text": "have Darth Vader or you can go use the",
    "start": "1820950",
    "end": "1828900"
  },
  {
    "text": "existing refit library that does this and much much more but alright actually something that does",
    "start": "1828900",
    "end": "1837690"
  },
  {
    "start": "1835000",
    "end": "1873000"
  },
  {
    "text": "bother me so there there are so many children's books now out there with Star",
    "start": "1837690",
    "end": "1844350"
  },
  {
    "text": "Wars you know like start fading and sullen and Darth Vader and his and his daughter they're the really cute little books but",
    "start": "1844350",
    "end": "1851610"
  },
  {
    "text": "my five-year-old soon-to-be five-year-old was read all these books for years and he's not gonna have that",
    "start": "1851610",
    "end": "1857820"
  },
  {
    "text": "that just this aural shock during Empire Strikes Back of oh my god Darth Vader is Luke's father and I just kind of feel",
    "start": "1857820",
    "end": "1866880"
  },
  {
    "text": "sorry for him no come",
    "start": "1866880",
    "end": "1873319"
  },
  {
    "start": "1873000",
    "end": "2237000"
  },
  {
    "text": "so any questions about the what we just saw before I move on cuz I'm gonna grab",
    "start": "1873319",
    "end": "1878729"
  },
  {
    "text": "a drink real quick so mark I was when I",
    "start": "1878729",
    "end": "1887939"
  },
  {
    "text": "grew up so I lived in a farm pretty far out of town and it was hard to go in and see movies so all of my cousins who",
    "start": "1887939",
    "end": "1895919"
  },
  {
    "text": "lived in town got to see Return of the Jedi just like two months before me and spent that two months trying to tell me",
    "start": "1895919",
    "end": "1903119"
  },
  {
    "text": "that no Yoda says it's true and I've just tried to fight with him the whole time no it's a lie so I was the last",
    "start": "1903119",
    "end": "1910889"
  },
  {
    "text": "child in America that year to know the truth so right there I think you all",
    "start": "1910889",
    "end": "1919649"
  },
  {
    "text": "know exactly how old I am then okay so",
    "start": "1919649",
    "end": "1924919"
  },
  {
    "text": "let's talk about frameworks because the main usage for all this technique is really writing frameworks some of you're",
    "start": "1924919",
    "end": "1932939"
  },
  {
    "text": "saying well I really want to piece together libraries I should be delivering value for my client I",
    "start": "1932939",
    "end": "1938459"
  },
  {
    "text": "shouldn't be writing frameworks but once in a while it's going to be justified so let's just pretend that they're not",
    "start": "1938459",
    "end": "1944399"
  },
  {
    "text": "always terrible things and just just go with it a little bit excuse me",
    "start": "1944399",
    "end": "1952159"
  },
  {
    "text": "engine sounds like a great one I don't know every time I've done a rolls engine it's always been event condition action",
    "start": "1953309",
    "end": "1959549"
  },
  {
    "text": "so there's always I event I condition I action and yeah I suppose so",
    "start": "1959549",
    "end": "1965969"
  },
  {
    "text": "that's definitely something I'd want to take off the shelf so have you build the",
    "start": "1965969",
    "end": "1971429"
  },
  {
    "text": "rules okay I mean it's pretty common to",
    "start": "1971429",
    "end": "1977399"
  },
  {
    "text": "build build a world Limited rules engine that's very specific to your problem domain and I'm not looking down on",
    "start": "1977399",
    "end": "1983279"
  },
  {
    "text": "anyone for that but it's also a great way to waste a lot of your employer's",
    "start": "1983279",
    "end": "1990029"
  },
  {
    "text": "time okay so frameworks that they're very best when it when they're good for",
    "start": "1990029",
    "end": "1996599"
  },
  {
    "text": "you when when they're helpful they allow you to develop a lot faster but just taking care of repetitive work like",
    "start": "1996599",
    "end": "2003859"
  },
  {
    "text": "we're dealing with MVC core you're not seeing they're manually grabbing the HP contacts the invoke a JSON serializer to",
    "start": "2003859",
    "end": "2012029"
  },
  {
    "text": "go read stuff all the time I mean you do once in a while for special things but the happy path of",
    "start": "2012029",
    "end": "2018389"
  },
  {
    "text": "JSON and JSON out it's just dealing with that for you so you don't have to worry about it right that's a good thing",
    "start": "2018389",
    "end": "2025769"
  },
  {
    "text": "dealing with object life cycles and disposal like most frameworks today whether it's a messaging framework or an HP framework",
    "start": "2025769",
    "end": "2033450"
  },
  {
    "text": "something where you're issuing commands it's taken care of things like activating the unit work disposing it",
    "start": "2033450",
    "end": "2041249"
  },
  {
    "text": "when you're done all those things that if you did not take care of them would leave to a massive memory leak in your application",
    "start": "2041249",
    "end": "2047999"
  },
  {
    "text": "but if you're staying within the narrow the well-lit paths you just let the framework handle that for you so there's",
    "start": "2047999",
    "end": "2054300"
  },
  {
    "text": "less stuff for you to worry about a good framework and a good application",
    "start": "2054300",
    "end": "2059878"
  },
  {
    "text": "framework should be able to handle a lot of cross-cutting concerns like can you",
    "start": "2059879",
    "end": "2065550"
  },
  {
    "text": "just throw some generic I want to get rid of work transactional boundary just do it for me or I want to wrap security",
    "start": "2065550",
    "end": "2072628"
  },
  {
    "text": "around it some kind of middleware that that's helpful to take repetitive tasks away and then as much as possible and",
    "start": "2072629",
    "end": "2081419"
  },
  {
    "text": "this is this is my opinion and a lot of people don't agree with this I want the framework to get out of my way",
    "start": "2081419",
    "end": "2087358"
  },
  {
    "text": "completely I don't want to see a lot of cruft in my code I don't want to see a lot of marker interfaces a lot of",
    "start": "2087359",
    "end": "2092579"
  },
  {
    "text": "attributes that's all garbage and junk other people will have the attitude of I",
    "start": "2092579",
    "end": "2098130"
  },
  {
    "text": "like that because it's explicit and I know a little bit more about what's going on there's room in the world for",
    "start": "2098130",
    "end": "2105030"
  },
  {
    "text": "both of us I just wish there was more room for me frameworks at their very",
    "start": "2105030",
    "end": "2112079"
  },
  {
    "text": "worst they're gonna force you to use a lot of adapter classes so you're not",
    "start": "2112079",
    "end": "2118500"
  },
  {
    "text": "doing something that validates your writing a behavior behavior or a",
    "start": "2118500",
    "end": "2125430"
  },
  {
    "text": "middleware that then calls the thing you wanted to call and eventually that kind",
    "start": "2125430",
    "end": "2130440"
  },
  {
    "text": "of weight can wear you down a lot of extra actually this is a dinette problem",
    "start": "2130440",
    "end": "2136140"
  },
  {
    "text": "except the Java guys have caught up to me attributes in your code you know especially looking at some",
    "start": "2136140",
    "end": "2142620"
  },
  {
    "text": "older Microsoft frameworks and I'm thinking WCF or or really anything that",
    "start": "2142620",
    "end": "2148860"
  },
  {
    "text": "came out of Microsoft in the mid-2000s post Longhorn phase where it was just so",
    "start": "2148860",
    "end": "2154980"
  },
  {
    "text": "many attributes to do so very little bit of code problem I incurred and I'm gonna",
    "start": "2154980",
    "end": "2162990"
  },
  {
    "text": "show the negative example way too many object allocations by having all these",
    "start": "2162990",
    "end": "2169020"
  },
  {
    "text": "adapter classes that then just called normal code you're creating a lot more objects than you would would if you were",
    "start": "2169020",
    "end": "2175260"
  },
  {
    "text": "writing everything from scratch bespoke that could be a problem under heavy loads you're making the garbage",
    "start": "2175260",
    "end": "2180510"
  },
  {
    "text": "collector work way harder and you can actually see performance problems because of the GC",
    "start": "2180510",
    "end": "2187800"
  },
  {
    "text": "kicking in to clean things up or just blasting through memory and I of course",
    "start": "2187800",
    "end": "2193770"
  },
  {
    "text": "know this because I caused this problem at my prior previous employer ok poor",
    "start": "2193770",
    "end": "2200340"
  },
  {
    "text": "performance just saying it's closely related all the bad too many objects too",
    "start": "2200340",
    "end": "2206160"
  },
  {
    "text": "many layers of indirection to build this object that just calls that that calls that and you see where that goes and",
    "start": "2206160",
    "end": "2212010"
  },
  {
    "text": "then the absolutely just epic stack traces I'm going to talk a little bit",
    "start": "2212010",
    "end": "2217320"
  },
  {
    "text": "more about this I've heard this attributed attributed to a lot of different people but you've",
    "start": "2217320",
    "end": "2223590"
  },
  {
    "text": "heard the joke that Enterprise Java is a DSL to turn huge piles of XML into",
    "start": "2223590",
    "end": "2230100"
  },
  {
    "text": "massive stack traces except I'm not",
    "start": "2230100",
    "end": "2236490"
  },
  {
    "text": "innocent okay for any Generation X people out there my college roommate was",
    "start": "2236490",
    "end": "2243350"
  },
  {
    "start": "2237000",
    "end": "2316000"
  },
  {
    "text": "huge in the cake and it took me 20 years to like them again but so with this",
    "start": "2243350",
    "end": "2250470"
  },
  {
    "text": "cogeneration stuff and theory here is we can have all the good stuff we want we",
    "start": "2250470",
    "end": "2256500"
  },
  {
    "text": "can keep our code really clean but we can still be fast even if we're using this really flexible",
    "start": "2256500",
    "end": "2262500"
  },
  {
    "text": "middleware generation if we could just generate the the kind of goop adapter",
    "start": "2262500",
    "end": "2268230"
  },
  {
    "text": "code instead of creating a bunch of ton of classes or introducing a little bit",
    "start": "2268230",
    "end": "2274440"
  },
  {
    "text": "of conventions where we can look at your code and we know how it's one to be called when we looked at the I user",
    "start": "2274440",
    "end": "2281880"
  },
  {
    "text": "service it's good I can take down a peak adapt okay we look at I user service we",
    "start": "2281880",
    "end": "2292530"
  },
  {
    "text": "can look at the code the signature of the code and that tells us a lot about the intention of what this should really",
    "start": "2292530",
    "end": "2298710"
  },
  {
    "text": "do just generate code for it so this is",
    "start": "2298710",
    "end": "2309600"
  },
  {
    "text": "a lot funnier in my head when I was telling people about this a month ago but I still love that song so okay so",
    "start": "2309600",
    "end": "2318980"
  },
  {
    "start": "2316000",
    "end": "2427000"
  },
  {
    "text": "years and years ago I blew an extraordinary amount of energy time and emotional attachment to a",
    "start": "2318980",
    "end": "2327690"
  },
  {
    "text": "project called fabu MVC that was an alternative web framework in about the Oh a toe 9 2010 timeframe that's the",
    "start": "2327690",
    "end": "2337500"
  },
  {
    "text": "highlight of in DC London for me so far one of the volunteers came up to me and",
    "start": "2337500",
    "end": "2342810"
  },
  {
    "text": "said they used it and they actually liked it and he would still talk to me but it's mostly forgotten for good",
    "start": "2342810",
    "end": "2349920"
  },
  {
    "text": "reason so we did flew BC our big thing was trying to make this thing as flexible as",
    "start": "2349920",
    "end": "2356760"
  },
  {
    "text": "possible so we loved the very early idea of that every framework uses now of the",
    "start": "2356760",
    "end": "2363660"
  },
  {
    "text": "Russian doll model of if you look at NBC core or asp.net apiece asp.net core by",
    "start": "2363660",
    "end": "2370050"
  },
  {
    "text": "itself middleware you have an outer middle middleware that sits on the",
    "start": "2370050",
    "end": "2375600"
  },
  {
    "text": "outside maybe that's handling security maybe it's handling exception what request comes in it's able to surround",
    "start": "2375600",
    "end": "2381780"
  },
  {
    "text": "everything but call into maybe a validation middleware in between which eventually gets to your guy inside so",
    "start": "2381780",
    "end": "2390000"
  },
  {
    "text": "you think about those Russian stacking dolls and every time I do this talk there is actually a native Russian",
    "start": "2390000",
    "end": "2395520"
  },
  {
    "text": "speaker who tells us how to pronounce it right but I can't do it so I won't try",
    "start": "2395520",
    "end": "2400770"
  },
  {
    "text": "but that was the motif we used to describe what we wanted to look like so",
    "start": "2400770",
    "end": "2405870"
  },
  {
    "text": "that is why the sp2 neck where is today all right it's great it",
    "start": "2405870",
    "end": "2411079"
  },
  {
    "text": "makes a lot for us to do things like I'm going to completely ignore security for",
    "start": "2411079",
    "end": "2416660"
  },
  {
    "text": "now and at the end I'm gonna slap identity server middleware around everything and boom",
    "start": "2416660",
    "end": "2421730"
  },
  {
    "text": "I have authentication without having to worry about it for the past three months ideally okay so FUBU DC did it with this",
    "start": "2421730",
    "end": "2440059"
  },
  {
    "start": "2427000",
    "end": "2573000"
  },
  {
    "text": "idea called behaviors it's just this is before everybody just adopted the term",
    "start": "2440059",
    "end": "2445130"
  },
  {
    "text": "middleware and went with it so middleware behavior and FUBU BC was very",
    "start": "2445130",
    "end": "2450349"
  },
  {
    "text": "closely analogous to SP done in core middleware implementation wise is",
    "start": "2450349",
    "end": "2457369"
  },
  {
    "text": "probably closer to an action filter from from the VC just kind of go with it so",
    "start": "2457369",
    "end": "2463309"
  },
  {
    "text": "that this code here was a transactional behavior if you're using martin the",
    "start": "2463309",
    "end": "2470270"
  },
  {
    "text": "martin application or the martin library to do persistence in your application",
    "start": "2470270",
    "end": "2475359"
  },
  {
    "text": "inside of a filling vc application that this behavior just allowed you to do",
    "start": "2475359",
    "end": "2480890"
  },
  {
    "text": "just the transaction boundary around this so by wrapping this and whatever",
    "start": "2480890",
    "end": "2486980"
  },
  {
    "text": "other behaviors are inside of it down to the actual controller action maybe some",
    "start": "2486980",
    "end": "2493609"
  },
  {
    "text": "other things so that everything that was done inside of this would be in the same unit of work in the same logical",
    "start": "2493609",
    "end": "2500299"
  },
  {
    "text": "database transaction okay kind of cool but what happened when this was taken",
    "start": "2500299",
    "end": "2507440"
  },
  {
    "text": "way too far where we had a transaction behavior around everything and there's",
    "start": "2507440",
    "end": "2512630"
  },
  {
    "text": "validation stuff and there's update a log writer route to the record of hey i",
    "start": "2512630",
    "end": "2520730"
  },
  {
    "text": "was here in a couple different actions you get to the point where there was literally about 20 different behaviors",
    "start": "2520730",
    "end": "2527480"
  },
  {
    "text": "all nested inside of each other you know one it was really slow because every",
    "start": "2527480",
    "end": "2532490"
  },
  {
    "text": "time you executed a request this is all build up from a container of this on the outside something on the inside inside",
    "start": "2532490",
    "end": "2539240"
  },
  {
    "text": "inside so you're creating a ton of objects you're making your ioc container work really hard and win this blew up",
    "start": "2539240",
    "end": "2546280"
  },
  {
    "text": "when it blew up in your side of your controller actions all that gunk on the",
    "start": "2546280",
    "end": "2552170"
  },
  {
    "text": "outside got into the stack trace and it was epic it was I have no business",
    "start": "2552170",
    "end": "2558619"
  },
  {
    "text": "making fun of Java Enterprise Java developers for their stack traces because this this was just terrible so",
    "start": "2558619",
    "end": "2567430"
  },
  {
    "text": "flash forward and let me see if I can make some amends to the rest of the world here okay so the Jasper framework",
    "start": "2567580",
    "end": "2577330"
  },
  {
    "text": "which is still heavily in flight may never get out of in-flight but it's at",
    "start": "2577330",
    "end": "2583609"
  },
  {
    "text": "least proving out I think this this technique and maybe it's something somebody else could you look at and go",
    "start": "2583609",
    "end": "2589220"
  },
  {
    "text": "write their own better thing but looking at the past of fubu BC as as the failure",
    "start": "2589220",
    "end": "2596920"
  },
  {
    "text": "its alloys a lot of I'm fighting the last war what are we gonna do differently this time well one want to",
    "start": "2596920",
    "end": "2602960"
  },
  {
    "text": "be a lot faster this time I want this thing to really perform and scream part",
    "start": "2602960",
    "end": "2608930"
  },
  {
    "text": "of the way it's gonna be faster this is a big trend I've seen all over the dotnet world is this new obsession that",
    "start": "2608930",
    "end": "2615770"
  },
  {
    "text": "probably a little bit healthy of minimizing the memory allocations that happen at runtime the guys working on",
    "start": "2615770",
    "end": "2623270"
  },
  {
    "text": "are excuse me the folks working on Kestrel there's an amazing work you've all seen dinette Corps places like forth",
    "start": "2623270",
    "end": "2632119"
  },
  {
    "text": "right now in the tech and power performance shootout and then knowing",
    "start": "2632119",
    "end": "2638089"
  },
  {
    "text": "that the three things above it are just barely faster and they're all experimental things a speeding a core is",
    "start": "2638089",
    "end": "2644450"
  },
  {
    "text": "the fastest HTTP handling thing on the planet that's actually meant to be",
    "start": "2644450",
    "end": "2649730"
  },
  {
    "text": "productive and used in production apps - Joel know that so it's been cool and but",
    "start": "2649730",
    "end": "2657260"
  },
  {
    "text": "they've done it by relentlessly reducing memory allocations so I want to try to",
    "start": "2657260",
    "end": "2663109"
  },
  {
    "text": "copy that kind of kind of go on the same thing I still like the idea of trying to keep the code that users write just as",
    "start": "2663109",
    "end": "2670700"
  },
  {
    "text": "clean as possible nope no marker interfaces minimal",
    "start": "2670700",
    "end": "2675760"
  },
  {
    "text": "attributes nope no goop that does mean that you're using some naming conventions which some people hate let's",
    "start": "2675760",
    "end": "2683740"
  },
  {
    "text": "come down the next side that let's have some way that's really easy for users to",
    "start": "2683740",
    "end": "2689290"
  },
  {
    "text": "see what is jest we're trying to do with my code what is it surrounding around it",
    "start": "2689290",
    "end": "2694900"
  },
  {
    "text": "so they have a way to kind of unravel what the behavior is and my theory is by",
    "start": "2694900",
    "end": "2700450"
  },
  {
    "text": "using generated c-sharp to apply all your middleware and your transactional",
    "start": "2700450",
    "end": "2706060"
  },
  {
    "text": "boundaries and all that good stuff just show the user this is the generated code with the hope that anybody using this",
    "start": "2706060",
    "end": "2712660"
  },
  {
    "text": "tool already understands c-sharp so they can just look at the generated code okay",
    "start": "2712660",
    "end": "2725490"
  },
  {
    "start": "2722000",
    "end": "2899000"
  },
  {
    "text": "when we switch to Jasper itself now finally so when an HP request is handled",
    "start": "2725490",
    "end": "2734650"
  },
  {
    "text": "in Jasper every unique route compiled up",
    "start": "2734650",
    "end": "2739960"
  },
  {
    "text": "front there's going to be a route handler object for each individual route and there's really only one method we",
    "start": "2739960",
    "end": "2747640"
  },
  {
    "text": "care about here very close to a request delegate this segments thing is passed",
    "start": "2747640",
    "end": "2753970"
  },
  {
    "text": "in just so it doesn't have to duplicate the work that the router already did to",
    "start": "2753970",
    "end": "2760210"
  },
  {
    "text": "split the URL string take in the asp.net core it should be context return a task",
    "start": "2760210",
    "end": "2766450"
  },
  {
    "text": "and do whatever you do",
    "start": "2766450",
    "end": "2770190"
  },
  {
    "text": "so very similar to the control user controller we talked about it first I'm",
    "start": "2772070",
    "end": "2778200"
  },
  {
    "text": "gonna build an equivalent in Jasper so say we have a command that is create",
    "start": "2778200",
    "end": "2783930"
  },
  {
    "text": "user when this is posted up to our web service I want you to go make a new user",
    "start": "2783930",
    "end": "2789660"
  },
  {
    "text": "object and persist it somewhere okay and because I'm because I like Barton and we",
    "start": "2789660",
    "end": "2797550"
  },
  {
    "text": "already support Martin for this I'm gonna assume that my backing persistent store is Martin which behind-the-scenes",
    "start": "2797550",
    "end": "2804780"
  },
  {
    "text": "eventually it's just just Postgres this is the Jasper endpoint to handle the two",
    "start": "2804780",
    "end": "2810869"
  },
  {
    "text": "HP endpoints here one to go get a user by its ID there's a little bit of a",
    "start": "2810869",
    "end": "2817920"
  },
  {
    "text": "naming convention this is enough to get out the path slash user slash and ID is",
    "start": "2817920",
    "end": "2824790"
  },
  {
    "text": "a route argument we'll just notice a few things here all the methods are static",
    "start": "2824790",
    "end": "2832470"
  },
  {
    "text": "they don't have to be they can be instance methods they can be async that it can not be anything but in this case",
    "start": "2832470",
    "end": "2838910"
  },
  {
    "text": "I'm just chewing any kind of constructor injection just like in VC core and I did",
    "start": "2838910",
    "end": "2845790"
  },
  {
    "text": "get the idea from them we're just gonna let you inject services directly as as arguments here makes your code a little",
    "start": "2845790",
    "end": "2852750"
  },
  {
    "text": "bit simpler your code just becomes functions and classes and methods right",
    "start": "2852750",
    "end": "2858410"
  },
  {
    "text": "up here same thing we're taking that command Jess we're just gonna assume the",
    "start": "2858410",
    "end": "2865020"
  },
  {
    "text": "first argument here that's a that's not a route argument we just assume that's the message body so you don't have to do",
    "start": "2865020",
    "end": "2871740"
  },
  {
    "text": "the from body attribute take into things you need that's the Martin I document",
    "start": "2871740",
    "end": "2877650"
  },
  {
    "text": "session and I logger you probably use today I said try to minimize the usage",
    "start": "2877650",
    "end": "2884820"
  },
  {
    "text": "of attributes but it's an imperfect world so easiest possible way to say I want",
    "start": "2884820",
    "end": "2890070"
  },
  {
    "text": "the Martin transactional middleware applied to just that one single method",
    "start": "2890070",
    "end": "2896490"
  },
  {
    "text": "is just marking with an attribute okay so this is actually completely",
    "start": "2896490",
    "end": "2901530"
  },
  {
    "start": "2899000",
    "end": "3125000"
  },
  {
    "text": "functional which we're not going to try to disprove by actually running it but let's let's look",
    "start": "2901530",
    "end": "2907830"
  },
  {
    "text": "at the generated code for this okay I",
    "start": "2907830",
    "end": "2917040"
  },
  {
    "text": "have this let's see so one of the things",
    "start": "2917040",
    "end": "2925400"
  },
  {
    "text": "with Jasper we've embraced the command line which III love the dotnet CLI I",
    "start": "2925400",
    "end": "2932790"
  },
  {
    "text": "think it's been a great model it's been a great advance I am perfectly cool with",
    "start": "2932790",
    "end": "2938370"
  },
  {
    "text": "dotnet stealing good stuff from nodejs but one of the things Jasper does is it",
    "start": "2938370",
    "end": "2945360"
  },
  {
    "text": "adds a couple new commands to its command line support for strictly for Diagnostics the net run will run your",
    "start": "2945360",
    "end": "2952320"
  },
  {
    "text": "application just like you're used to but there's a few other helpful things so this code command will have it start up",
    "start": "2952320",
    "end": "2960210"
  },
  {
    "text": "the application a lightweight start up so it doesn't start up the the server",
    "start": "2960210",
    "end": "2965790"
  },
  {
    "text": "the kestrel server or run any kind of background services but do that and then show me what all the generated code for",
    "start": "2965790",
    "end": "2973680"
  },
  {
    "text": "all the route handlers or message handlers so we're just gonna take a leak look at this and this is going to show",
    "start": "2973680",
    "end": "2979050"
  },
  {
    "text": "us a quick preview of what the generated code is when we try to relate this a",
    "start": "2979050",
    "end": "2987750"
  },
  {
    "text": "little bit so this is a generated code to get the user by its ID so I mean",
    "start": "2987750",
    "end": "2995490"
  },
  {
    "text": "we're gonna go back and forth just a little bit",
    "start": "2995490",
    "end": "2999410"
  },
  {
    "text": "so this method right here get user underscore ID so writing the",
    "start": "3002720",
    "end": "3010740"
  },
  {
    "text": "intermediate code to go from I have an HP context and I want you to do the rest",
    "start": "3010740",
    "end": "3016859"
  },
  {
    "text": "of it eventually call this method on the inside that's this code right here",
    "start": "3016859",
    "end": "3029599"
  },
  {
    "text": "so what got generated around it starting up the query session so knowing you have",
    "start": "3030170",
    "end": "3038039"
  },
  {
    "text": "a Martin document store if you use Raven DB this should look pretty familiar so",
    "start": "3038039",
    "end": "3043680"
  },
  {
    "text": "the document store would be analogous to Raven dbe's document store not",
    "start": "3043680",
    "end": "3049109"
  },
  {
    "text": "coincidentally or if you from in hibernate this would be like the I session factory there's not really an",
    "start": "3049109",
    "end": "3056430"
  },
  {
    "text": "equivalent and EF core then this the query session here this would be",
    "start": "3056430",
    "end": "3062640"
  },
  {
    "text": "analogous to a dbcontext in e of core this one the query session super",
    "start": "3062640",
    "end": "3067710"
  },
  {
    "text": "lightweight it only does read-only exposes read things but it does need to",
    "start": "3067710",
    "end": "3073440"
  },
  {
    "text": "be cleaned up and disposed at the end and make sure you're cleaning up any database connections to post graphs so",
    "start": "3073440",
    "end": "3080460"
  },
  {
    "text": "we definitely need to do it here it's doing it generating with using statement to make sure it gets cleaned up inside",
    "start": "3080460",
    "end": "3086579"
  },
  {
    "text": "of that chattering a little bit of code it is generating code to be able to grab",
    "start": "3086579",
    "end": "3091680"
  },
  {
    "text": "the route argument from the route and this is just a string so it doesn't have to do anything but grab the segments the",
    "start": "3091680",
    "end": "3100109"
  },
  {
    "text": "segment's array the ID we know is on slot number one of that array and then",
    "start": "3100109",
    "end": "3108480"
  },
  {
    "text": "we execute our endpoint and because this is a static we didn't have to create any new objects but we could have we passed",
    "start": "3108480",
    "end": "3115829"
  },
  {
    "text": "in the service and then down here this is Jasper stuff this is just writing",
    "start": "3115829",
    "end": "3122130"
  },
  {
    "text": "writing the JSON back out to the response looking a little more interesting model so the right",
    "start": "3122130",
    "end": "3132380"
  },
  {
    "text": "here let's get let's get a little bit cocky about this so when we write get it",
    "start": "3132380",
    "end": "3147150"
  },
  {
    "text": "to the point because we're using the transactional middleware up there I don't have to worry about committing the",
    "start": "3147150",
    "end": "3152670"
  },
  {
    "text": "session the middleware is gonna do it for me so something else could combine into the unit of work so I can get to the point",
    "start": "3152670",
    "end": "3160079"
  },
  {
    "text": "where I can write code like this where take in to create user command and what I'm trying to achieve is to create a new",
    "start": "3160079",
    "end": "3166619"
  },
  {
    "text": "user document persist it and I'll log it just to show more stuff going on just to",
    "start": "3166619",
    "end": "3173970"
  },
  {
    "text": "store it to the session that's a synchronous method so I don't need to worry about any kind of tasks and that's",
    "start": "3173970",
    "end": "3180720"
  },
  {
    "text": "why I get away with a void up here because I don't care so I don't have to",
    "start": "3180720",
    "end": "3187980"
  },
  {
    "text": "be returning a lot of tasks completed tasks to make the compiler shut up I can",
    "start": "3187980",
    "end": "3193109"
  },
  {
    "text": "write the easiest code to do what I want it to do let's take one quick peek more",
    "start": "3193109",
    "end": "3199619"
  },
  {
    "text": "peek at this nice make sure to save it and then I'm gonna flip over to the",
    "start": "3199619",
    "end": "3205529"
  },
  {
    "text": "command line and regenerate it because I changed the code okay this one just a",
    "start": "3205529",
    "end": "3219539"
  },
  {
    "text": "tiny bit fancier so when it generates this class from the container the Lemar",
    "start": "3219539",
    "end": "3227849"
  },
  {
    "text": "containers still hanging around in there but from the configuration of the Lemar container I know that I documents store",
    "start": "3227849",
    "end": "3234630"
  },
  {
    "text": "is a singleton I know that the ilogger of whatever is a single thing and it's",
    "start": "3234630",
    "end": "3239910"
  },
  {
    "text": "important here so this request handler this is only created it actually",
    "start": "3239910",
    "end": "3245039"
  },
  {
    "text": "instantiated once in the entire application and stuffed in the right place and the routing tree so by knowing",
    "start": "3245039",
    "end": "3251160"
  },
  {
    "text": "that these are Singleton's I can just inject these in one time and these are completely in line for every other",
    "start": "3251160",
    "end": "3258029"
  },
  {
    "text": "subsequent HTTP call if you're using really just about any other done yet",
    "start": "3258029",
    "end": "3263400"
  },
  {
    "text": "that tool like this it's making an IOC resolution of your controller every",
    "start": "3263400",
    "end": "3269390"
  },
  {
    "text": "single time and most of the good ioc containers are are good about inlining",
    "start": "3269390",
    "end": "3274940"
  },
  {
    "text": "Singleton's and they're generated funks but they may not be but what could easily be happening to you is there's a",
    "start": "3274940",
    "end": "3282770"
  },
  {
    "text": "bunch of dictionary looks at lookups inside the ioc container to find the right strategy of how to build it and",
    "start": "3282770",
    "end": "3288680"
  },
  {
    "text": "execute it there's just a lot of stuff going on that happens every time at",
    "start": "3288680",
    "end": "3293750"
  },
  {
    "text": "runtime what we're trying to do with jasper we're trying to eliminate that as much as possible by knowing about the",
    "start": "3293750",
    "end": "3299930"
  },
  {
    "text": "ioc configuration upfront knowing about what all the right life cycles are some rules about code generation we're trying",
    "start": "3299930",
    "end": "3307340"
  },
  {
    "text": "to bake that kind of decision making this run time and a lot of other frameworks trying to do that upfront and",
    "start": "3307340",
    "end": "3313760"
  },
  {
    "text": "compile it one time so that that's why we take in the document store at a logger one time when this is created",
    "start": "3313760",
    "end": "3321460"
  },
  {
    "text": "inside of this the session has to be scoped to the request and it knows that",
    "start": "3321460",
    "end": "3327680"
  },
  {
    "text": "so everybody that would want or to use a document session will get this the frame",
    "start": "3327680",
    "end": "3334310"
  },
  {
    "text": "model is smart enough that it can write the inner stuff and in between so",
    "start": "3334310",
    "end": "3339320"
  },
  {
    "text": "there's a frame that knows how you need an ID document session I can do that for you I'm gonna create this but from the",
    "start": "3339320",
    "end": "3346790"
  },
  {
    "text": "document store directly wrap everything around using so it all gets saved this",
    "start": "3346790",
    "end": "3353450"
  },
  {
    "text": "is just reading the JSON request actually calling your endpoint method",
    "start": "3353450",
    "end": "3359000"
  },
  {
    "text": "and this is all this is all voids there's no work no async no wait but",
    "start": "3359000",
    "end": "3365420"
  },
  {
    "text": "down below it knows this document session and Save Changes they sync is definitely a sync I'm gonna do that",
    "start": "3365420",
    "end": "3372220"
  },
  {
    "text": "another side benefit of this code generation model is assuming we do this",
    "start": "3372220",
    "end": "3378650"
  },
  {
    "text": "stuff well it should embed and encode the right keys a wait here a sink",
    "start": "3378650",
    "end": "3384680"
  },
  {
    "text": "do you actually try to if the last call returns a task and it's the only thing that's async we just return the tasks so",
    "start": "3384680",
    "end": "3392630"
  },
  {
    "text": "you don't have to use the inefficient async keyword but let",
    "start": "3392630",
    "end": "3398220"
  },
  {
    "text": "the framework smarts and the cogeneration smarts handle more of that low-level handling so you can worry",
    "start": "3398220",
    "end": "3404220"
  },
  {
    "text": "about strictly worried a little bit more about what your applications really",
    "start": "3404220",
    "end": "3411090"
  },
  {
    "start": "3409000",
    "end": "3600000"
  },
  {
    "text": "doing which is not a whole lot and then years ago mark Rendell over there in the",
    "start": "3411090",
    "end": "3419160"
  },
  {
    "text": "middle trying to stay awake watch the talk of his and talked about how he",
    "start": "3419160",
    "end": "3425580"
  },
  {
    "text": "tried to be pretty strict with HTTP status codes okay so I did listen to one",
    "start": "3425580",
    "end": "3431100"
  },
  {
    "text": "of your talks and after an hour of listening to mark talked with that Liverpool accident I went home and I",
    "start": "3431100",
    "end": "3437790"
  },
  {
    "text": "listen to The Beatles for the next day straight you are from Liverpool sure",
    "start": "3437790",
    "end": "3444980"
  },
  {
    "text": "okay you sound like Paul McCartney to me stupid Ugly American okay so you all",
    "start": "3445040",
    "end": "3456360"
  },
  {
    "text": "know that so you know I'll know that they have done there's there some linguistic studies that I have a",
    "start": "3456360",
    "end": "3463770"
  },
  {
    "text": "Midwestern American accent so I'm neutral everybody else has an accident but people in the northeast of the u.s.",
    "start": "3463770",
    "end": "3471480"
  },
  {
    "text": "they have been able to prove that that's what English people sounded like in the 1700 1600s whenever and y'all drifted",
    "start": "3471480",
    "end": "3480270"
  },
  {
    "text": "off a different way and they stayed behind",
    "start": "3480270",
    "end": "3483920"
  },
  {
    "text": "okay so I resent that a little bit",
    "start": "3496839",
    "end": "3509710"
  },
  {
    "text": "representative so my one the one English ancestor I know about my grandmother's",
    "start": "3509710",
    "end": "3516770"
  },
  {
    "text": "grandfather always bragged that he had a fortune back in England if he could just get back to get it so I may or may not",
    "start": "3516770",
    "end": "3524150"
  },
  {
    "text": "probably not and from some kind of English aristocracy that aside so that",
    "start": "3524150",
    "end": "3534260"
  },
  {
    "text": "aside to be a little more correct with with HP status codes because this is",
    "start": "3534260",
    "end": "3539900"
  },
  {
    "text": "creating let's override and force the status code to to a 1 which means created",
    "start": "3539900",
    "end": "3545180"
  },
  {
    "text": "don't anybody correct me if that's wrong and let me see how the code generation",
    "start": "3545180",
    "end": "3550790"
  },
  {
    "text": "changes real simple in visa core does",
    "start": "3550790",
    "end": "3561530"
  },
  {
    "text": "the same thing I know I've seen this in Nancy in the past if you're returning an",
    "start": "3561530",
    "end": "3566630"
  },
  {
    "text": "integer we assume that means to be the status code so if we look now there's",
    "start": "3566630",
    "end": "3572089"
  },
  {
    "text": "just a little bit of code to take the result of that end point method and then",
    "start": "3572089",
    "end": "3577099"
  },
  {
    "text": "just immediately write it to the status code okay any questions about that and I",
    "start": "3577099",
    "end": "3584750"
  },
  {
    "text": "swear I'm about to wrap up okay so",
    "start": "3584750",
    "end": "3590900"
  },
  {
    "text": "conclusions here what I think and hope is being able to do this kind of dynamic",
    "start": "3590900",
    "end": "3597589"
  },
  {
    "text": "runtime generation with c-sharp code or it does support vbe if people still do",
    "start": "3597589",
    "end": "3603530"
  },
  {
    "text": "that that this is much more approachable to many more people that you could do",
    "start": "3603530",
    "end": "3610460"
  },
  {
    "text": "more elaborate things or just the barrier entry to getting into this is",
    "start": "3610460",
    "end": "3615799"
  },
  {
    "text": "much lower because we all know c-sharp so I'm gonna claim it's not that scary",
    "start": "3615799",
    "end": "3621680"
  },
  {
    "text": "the if you look at the code generation code it looks kind of messy some of that",
    "start": "3621680",
    "end": "3627200"
  },
  {
    "text": "is just being able having to order who's dependent upon what the string",
    "start": "3627200",
    "end": "3632780"
  },
  {
    "text": "interpolation having that in c-sharp was that seven or did that come in six okay",
    "start": "3632780",
    "end": "3639920"
  },
  {
    "text": "that that that's a lifesaver I don't know if you would even want to try to do this without string interpolation but",
    "start": "3639920",
    "end": "3646040"
  },
  {
    "text": "that makes a big deal but the models just not that bad so I'm also hoping this kind of gives us",
    "start": "3646040",
    "end": "3652820"
  },
  {
    "text": "a big potential to start making the frameworks we use from here on out be a lot faster maybe some more intention",
    "start": "3652820",
    "end": "3659720"
  },
  {
    "text": "revealing code maybe this is something you could actually incorporate when you need small dynamic frameworks in your",
    "start": "3659720",
    "end": "3666350"
  },
  {
    "text": "own application and with that I'm done",
    "start": "3666350",
    "end": "3671770"
  },
  {
    "text": "[Applause]",
    "start": "3671770",
    "end": "3682670"
  }
]