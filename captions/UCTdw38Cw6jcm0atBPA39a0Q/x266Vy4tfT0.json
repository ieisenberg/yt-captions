[
  {
    "text": "okay so let's just sit the scene of it you know we've got a mobile ecosystem",
    "start": "5610",
    "end": "10920"
  },
  {
    "text": "now that's primarily to operating systems with a third in your life",
    "start": "10920",
    "end": "16020"
  },
  {
    "text": "whether you talking about mobile desktop etc and these days as developers we're typically",
    "start": "16020",
    "end": "22109"
  },
  {
    "text": "never asked to build an app for one of these right we're going to be if we're in the",
    "start": "22109",
    "end": "28279"
  },
  {
    "text": "consumer space it's because we want to better reach mass-market we want to hit as many of our customers as possible so",
    "start": "28279",
    "end": "35370"
  },
  {
    "text": "we're primarily going to be in at least two of these stores if we're an enterprise you know if it's kind of an",
    "start": "35370",
    "end": "41280"
  },
  {
    "text": "atmosphere where it's device mandated from up on high then you may just get one but these days bring your own",
    "start": "41280",
    "end": "47339"
  },
  {
    "text": "devices coming along more and more and you may want like an enterprise app that hits at least a couple of these",
    "start": "47339",
    "end": "53030"
  },
  {
    "text": "and when we talk about mobile it's not these days just releve to the phone it's",
    "start": "53030",
    "end": "59129"
  },
  {
    "text": "about tablets you know it's about TVs and even these days stuff like hololens right you know all these SDKs",
    "start": "59129",
    "end": "66890"
  },
  {
    "text": "Android iOS and Windows they all work across multiple more of these form factors so it's not even these days",
    "start": "66890",
    "end": "74010"
  },
  {
    "text": "about mobile it's it's usually about apps and how can we get the best investment from our code",
    "start": "74010",
    "end": "79730"
  },
  {
    "text": "and then cross more of the more and more these platforms and form factors so we're going to talk about a bit of an",
    "start": "79730",
    "end": "86430"
  },
  {
    "text": "intro to xamarin make sure we're all kind of on the same page about what xamarin is not a not a deep dive just because",
    "start": "86430",
    "end": "93180"
  },
  {
    "text": "that's a whole talk by itself a bit of a foundational stuff around how we can",
    "start": "93180",
    "end": "98190"
  },
  {
    "text": "share code across platforms and the different ways benefits and disadvantages of each approach how we",
    "start": "98190",
    "end": "105510"
  },
  {
    "text": "can do cross-platform model view viewmodel approach to even get better code reuse and then potentially some",
    "start": "105510",
    "end": "111930"
  },
  {
    "text": "more advanced patterns if we've got some time it's my name's Nigel Sampson I'm an",
    "start": "111930",
    "end": "116970"
  },
  {
    "text": "engineer at push Bay we're a payments company in Auckland New Zealand and Seattle as well the project lead on",
    "start": "116970",
    "end": "122940"
  },
  {
    "text": "calibre Micra which is a cross-platform mvvm framework but I'm gonna try keep this talks at a framework agnostic for",
    "start": "122940",
    "end": "129298"
  },
  {
    "text": "the most part animal Sony MEP on Windows platform death that's my github and my Twitter so if he wants to reach out",
    "start": "129299",
    "end": "135780"
  },
  {
    "text": "later on go for it let's look about xamarin sarin at its bare bare kind of",
    "start": "135780",
    "end": "142870"
  },
  {
    "text": "middle is a tool so you can build native iOS and Android apps using all of their AP is in c-sharp with native performance",
    "start": "142870",
    "end": "149940"
  },
  {
    "text": "so what that means and this is really important is you're not building write once run everywhere you're building a",
    "start": "149940",
    "end": "156730"
  },
  {
    "text": "native iOS app or a native Android app using a c-sharp",
    "start": "156730",
    "end": "162330"
  },
  {
    "text": "so you get stuff like this at the top there is the Objective C to set the background",
    "start": "162960",
    "end": "168630"
  },
  {
    "text": "of a button when it's selected right it you can tell it's Objective C there's",
    "start": "168630",
    "end": "174130"
  },
  {
    "text": "lots of square brackets below is the same thing using xamarin then the same",
    "start": "174130",
    "end": "179530"
  },
  {
    "text": "thing in c-sharp looks pretty similar which is quite cool well I think what I think is really",
    "start": "179530",
    "end": "186490"
  },
  {
    "text": "awesome about this is that you don't have to when you're looking at trying to solve a problem you know you run into an",
    "start": "186490",
    "end": "193270"
  },
  {
    "text": "issue oh I don't know how to do in-app purchases or receive push notifications you don't",
    "start": "193270",
    "end": "199330"
  },
  {
    "text": "have to do that how do I do push notifications on iOS in xamarin because",
    "start": "199330",
    "end": "204700"
  },
  {
    "text": "chances are that's going to get you like to search results if you can just say how do I do push notifications in iOS",
    "start": "204700",
    "end": "210190"
  },
  {
    "text": "you can get thousands of push results and if you've got enough sort of mental nouse to convert that to that then",
    "start": "210190",
    "end": "216610"
  },
  {
    "text": "you're away and when it's Android and this is Java it's",
    "start": "216610",
    "end": "222310"
  },
  {
    "text": "almost identical which is fantastic but it's C sharp and C sharp is awesome yeah",
    "start": "222310",
    "end": "229750"
  },
  {
    "text": "we have async/await which most other languages still don't have we have link",
    "start": "229750",
    "end": "235030"
  },
  {
    "text": "which Java rate has got and is just now coming to Android and we had it what six",
    "start": "235030",
    "end": "241690"
  },
  {
    "text": "seven years ago now you know it gets pretty cool visual studio and resharper I counted every shopper so c-sharp",
    "start": "241690",
    "end": "249190"
  },
  {
    "text": "awesome so we've now got sort of an idea about xamarin we use in c-sharp to build cut",
    "start": "249190",
    "end": "255370"
  },
  {
    "text": "to build apps across multiple platforms this is our traditional approach you",
    "start": "255370",
    "end": "260950"
  },
  {
    "text": "know we have three or more silos we're saying we're gonna build an iOS UI in",
    "start": "260950",
    "end": "266950"
  },
  {
    "text": "Android UI or windows UI and then three platforms this means when we have to solve a problem we have to solve it",
    "start": "266950",
    "end": "272950"
  },
  {
    "text": "three times in three different languages if we have a bug we may have to solve it three times or we may only have a bug in",
    "start": "272950",
    "end": "279820"
  },
  {
    "text": "one miss code etc but was Ameren it's now c-sharp we're",
    "start": "279820",
    "end": "286600"
  },
  {
    "text": "still building our UIs separately for each but we can share code across all of them you know we can share our",
    "start": "286600",
    "end": "292930"
  },
  {
    "text": "application services we can share our business logic we can share the code that talks to the shared cloud below it",
    "start": "292930",
    "end": "299410"
  },
  {
    "text": "right so we instantly get I'd say around about 7080 percent code Reeves at this",
    "start": "299410",
    "end": "304810"
  },
  {
    "text": "point you know where all that stuff is now shared across all three and it's",
    "start": "304810",
    "end": "310020"
  },
  {
    "text": "it's great we're still writing three separate you eyes though it's important",
    "start": "310020",
    "end": "315370"
  },
  {
    "text": "to remember so how do we share this code we've got three different approaches the first one",
    "start": "315370",
    "end": "321310"
  },
  {
    "text": "portable class libraries SiC one shared projects and then shared files I've kind",
    "start": "321310",
    "end": "326740"
  },
  {
    "text": "of listed them as in this order because it's my preference my kind of priority",
    "start": "326740",
    "end": "332260"
  },
  {
    "text": "order I try and use portable class libraries if that doesn't work shared projects if not shared files",
    "start": "332260",
    "end": "339120"
  },
  {
    "text": "so let's take a look at what that looks like so I've got Visual Studio here I've got two",
    "start": "339120",
    "end": "346600"
  },
  {
    "text": "projects that aren't really basically blank file new projects top one there is an android project no one below it is",
    "start": "346600",
    "end": "353620"
  },
  {
    "text": "Windows 10 so right now they're not doing anything they're completely separate I've got no shared code between",
    "start": "353620",
    "end": "359440"
  },
  {
    "text": "them but they are all c-sharp you can see yeah you know this is Android so we dealing with activities and",
    "start": "359440",
    "end": "367560"
  },
  {
    "text": "windows we've got our Zemel pages so if ice to say new project",
    "start": "367560",
    "end": "374610"
  },
  {
    "text": "in search for a portable quickly find a portable class library in c-sharp",
    "start": "374610",
    "end": "381660"
  },
  {
    "text": "let's call this one port",
    "start": "381660",
    "end": "385590"
  },
  {
    "text": "okay so the first thing that comes up is it pops up a dialog which is which framework so I'm a target for this",
    "start": "387260",
    "end": "392580"
  },
  {
    "text": "portable class library well obviously I want Windows 10 and I want Android",
    "start": "392580",
    "end": "399050"
  },
  {
    "text": "now what this means is it's gonna give me a library where I can only write code that is common to both Windows 10 and",
    "start": "399050",
    "end": "406130"
  },
  {
    "text": "xamarin Android I literally cannot write code that's not possible for both I",
    "start": "406130",
    "end": "411710"
  },
  {
    "text": "usually also pick Windows 4.6 or one of the dock near frameworks because means I can test really easily using the",
    "start": "411710",
    "end": "418020"
  },
  {
    "text": "built-in image test you notice at the bottom there it's going to say well if",
    "start": "418020",
    "end": "423810"
  },
  {
    "text": "you pick those ones I can also give you Zimmer and iOS Windows 8.1 Windows 4.5",
    "start": "423810",
    "end": "429300"
  },
  {
    "text": "one for free because they also share that common subset",
    "start": "429300",
    "end": "434600"
  },
  {
    "text": "click OK",
    "start": "434600",
    "end": "437900"
  },
  {
    "text": "and I couldn't you solution what about switchback",
    "start": "444120",
    "end": "449900"
  },
  {
    "text": "you project pick that portable again",
    "start": "456530",
    "end": "462020"
  },
  {
    "text": "okay so now I have a portable class library it's basically like the producers of DLL just like you'd expect",
    "start": "467490",
    "end": "472530"
  },
  {
    "text": "from any other class library but in here I can only type or only create code",
    "start": "472530",
    "end": "478560"
  },
  {
    "text": "that's shared by iOS or Android and Windows any basically everything else I",
    "start": "478560",
    "end": "483900"
  },
  {
    "text": "checked already cannot write wrong code just fantastic so if I jump in here and",
    "start": "483900",
    "end": "488970"
  },
  {
    "text": "if I say yeah you can see these Android iOS namespaces they are just",
    "start": "488970",
    "end": "497000"
  },
  {
    "text": "not there so this is great this this means that this code is automatically platform in",
    "start": "498800",
    "end": "506280"
  },
  {
    "text": "specific it means I can run it everywhere I've checked it and I can't accidentally introduce",
    "start": "506280",
    "end": "511979"
  },
  {
    "text": "dependencies on those platforms that you know shouldn't be there",
    "start": "511979",
    "end": "517039"
  },
  {
    "text": "this is my favorite approach because of this right it helps you basically by letting you not",
    "start": "517039",
    "end": "524070"
  },
  {
    "text": "do the wrong thing you can obviously always later on come in here",
    "start": "524070",
    "end": "530330"
  },
  {
    "text": "jump down to properties and change your targets",
    "start": "530330",
    "end": "535490"
  },
  {
    "text": "change exactly what you want to target if you if you need to after that",
    "start": "535490",
    "end": "541820"
  },
  {
    "text": "what are the problems with this well you can't write platform-specific code in here and that could be a problem if you",
    "start": "541820",
    "end": "547800"
  },
  {
    "text": "writing code you've got say a service in here that needs to work depending on the",
    "start": "547800",
    "end": "553470"
  },
  {
    "text": "GPS position then you can't call out and get the GPS position from the phone or the mobile device because you can't call",
    "start": "553470",
    "end": "559260"
  },
  {
    "text": "that code but what you can do is create an interface in your shared code that",
    "start": "559260",
    "end": "565050"
  },
  {
    "text": "then is implemented by something in your portable library or you start your",
    "start": "565050",
    "end": "570360"
  },
  {
    "text": "platform code that implements that interface and you can inject it and have basically good dependency management at",
    "start": "570360",
    "end": "576240"
  },
  {
    "text": "that point using ioc container it I like this because it means that your you're still ensuring that your",
    "start": "576240",
    "end": "582810"
  },
  {
    "text": "platform code is still platform in specific and it's testable so I think",
    "start": "582810",
    "end": "589020"
  },
  {
    "text": "it's great too so not too many downsides for me personally others kind of see",
    "start": "589020",
    "end": "594750"
  },
  {
    "text": "that having to create dependencies and interfaces as a bit of kind of ceremony and don't really like that and if you're",
    "start": "594750",
    "end": "602500"
  },
  {
    "text": "creating a lot of code that's platform it's depending a lot on platform stuff",
    "start": "602500",
    "end": "607510"
  },
  {
    "text": "and you're creating a lots and lots of interfaces then you might not want to go over this approach so the next one",
    "start": "607510",
    "end": "613150"
  },
  {
    "text": "shared projects so a new project",
    "start": "613150",
    "end": "618960"
  },
  {
    "text": "pick shared the shared is different it came out the",
    "start": "618960",
    "end": "625690"
  },
  {
    "text": "distrito 2013 I think it was and what's really weird about it is that it doesn't have an output right if you build this",
    "start": "625690",
    "end": "633880"
  },
  {
    "text": "project the shared project won't build anything just kind of weird until you",
    "start": "633880",
    "end": "639160"
  },
  {
    "text": "realize what it's kind of doing so if I add a new class to here",
    "start": "639160",
    "end": "646440"
  },
  {
    "text": "straight one and what I'll what you can then do is add references to it as you normally",
    "start": "646500",
    "end": "652780"
  },
  {
    "text": "would in your other projects except it's under shared projects not",
    "start": "652780",
    "end": "659350"
  },
  {
    "text": "projects just to kind of fool you a bit",
    "start": "659350",
    "end": "665580"
  },
  {
    "text": "so I'm now referencing this shared project from the Android and the Windows one",
    "start": "665580",
    "end": "672660"
  },
  {
    "text": "what this means is when I hit build or build my solution the best way I think",
    "start": "672660",
    "end": "678790"
  },
  {
    "text": "about it is at least is this class filed everything that's in that shared project is going to copied and pasted into each",
    "start": "678790",
    "end": "684880"
  },
  {
    "text": "of the projects that reference it and compiled it's literally a copy-paste operation",
    "start": "684880",
    "end": "689980"
  },
  {
    "text": "almost so why is that interesting it means I can do something like",
    "start": "689980",
    "end": "698820"
  },
  {
    "text": "using Android",
    "start": "699180",
    "end": "702960"
  },
  {
    "text": "I think I need to build first",
    "start": "708560",
    "end": "712150"
  },
  {
    "text": "yeah I can actually reference Android code or Windows code in my shared project I",
    "start": "721170",
    "end": "727730"
  },
  {
    "text": "build this right now it's gonna blow up",
    "start": "727730",
    "end": "733400"
  },
  {
    "text": "blow up the reason is is that this this file has been copied and pasted into the",
    "start": "733400",
    "end": "739230"
  },
  {
    "text": "windows code and the Android code and the Android app namespace doesn't exist",
    "start": "739230",
    "end": "744420"
  },
  {
    "text": "in Windows so what do I do you know I can do",
    "start": "744420",
    "end": "749510"
  },
  {
    "text": "if you don't have compiler directive setup",
    "start": "749510",
    "end": "754650"
  },
  {
    "text": "for Android so if not Windows uwp",
    "start": "754650",
    "end": "759320"
  },
  {
    "text": "do some stuff that works we can out build across",
    "start": "760700",
    "end": "766800"
  },
  {
    "text": "multiple platforms so if I have to work with platform code I can just if differ and it animal way this is kind of good",
    "start": "766800",
    "end": "772860"
  },
  {
    "text": "if you want you've just got a little bit of code that's working the platforms and you can just if diff bits and pieces but",
    "start": "772860",
    "end": "777990"
  },
  {
    "text": "if you're doing long complicated things this can get really messy especially if you're dealing over multiple platforms",
    "start": "777990",
    "end": "784290"
  },
  {
    "text": "and maybe multiple different device in eum's so if imagine if you had",
    "start": "784290",
    "end": "790320"
  },
  {
    "text": "code that was specific to iOS Android Windows maybe some stuff that was working on TVs versus hololens you know",
    "start": "790320",
    "end": "798120"
  },
  {
    "text": "you maybe have seven or eight different platform definitions you can kind of end up in like an if diff hell which isn't",
    "start": "798120",
    "end": "804600"
  },
  {
    "text": "particularly pleasant but sometimes this is the best approach these are really it's a bit of a ruler just kind of war",
    "start": "804600",
    "end": "810240"
  },
  {
    "text": "between shared projects and portable class libraries personally I prefer portable class libraries but some people",
    "start": "810240",
    "end": "815790"
  },
  {
    "text": "preferred shared libraries it's for me it's mostly about PCOS enforcing the",
    "start": "815790",
    "end": "822029"
  },
  {
    "text": "rules and you can always go back to the tried and trusted approach of an existing file and just share files share",
    "start": "822029",
    "end": "828180"
  },
  {
    "text": "files between projects that registry has supported since time and material one thing that has been good since I",
    "start": "828180",
    "end": "835470"
  },
  {
    "text": "think 2015 is if you are using shared projects or shared files is this third drop-down up here which is shows you",
    "start": "835470",
    "end": "842490"
  },
  {
    "text": "basically which projects this files in and you can switch context between them as you can see here that this is now",
    "start": "842490",
    "end": "850170"
  },
  {
    "text": "grayed out because obviously I'm in the uwp project and if I switch it back and it's",
    "start": "850170",
    "end": "857220"
  },
  {
    "text": "re-enabled so that's how we share code across different",
    "start": "857220",
    "end": "863910"
  },
  {
    "text": "share code across multiple different platforms but well I think we're leaving",
    "start": "864120",
    "end": "869800"
  },
  {
    "text": "when we do this we have a shared UI we have a sorry a separate UI and then a shared application services we're kind",
    "start": "869800",
    "end": "876310"
  },
  {
    "text": "of living money on the table here this stuff in the UI that is shared across multiple platforms right our behavior",
    "start": "876310",
    "end": "883150"
  },
  {
    "text": "and our state of our view is the same on each one it's just ultimately the view",
    "start": "883150",
    "end": "889210"
  },
  {
    "text": "itself that's different so this is where mvvm comes in now it's it's about seven",
    "start": "889210",
    "end": "895660"
  },
  {
    "text": "or eight years old now it kind of came out with Microsoft and WPF but it's realistically it's older than that and",
    "start": "895660",
    "end": "901930"
  },
  {
    "text": "if you've ever read Madden fellows enterprise architectures books it's",
    "start": "901930",
    "end": "907810"
  },
  {
    "text": "basically the same it's presentation model so it's quite an old pattern but it's kind of ripping revamped a bit so",
    "start": "907810",
    "end": "913960"
  },
  {
    "text": "this is what we talked about this is where we get a shared stuff we really want more than that now if we can pull",
    "start": "913960",
    "end": "921820"
  },
  {
    "text": "out the behavior and the state of our view into something else to a view model",
    "start": "921820",
    "end": "926920"
  },
  {
    "text": "that can be shared it becomes easier to test because it's in a PCL it's hopefully in a PCL of something that's",
    "start": "926920",
    "end": "933460"
  },
  {
    "text": "separate means we don't need to try and do an automated UI test we can easily test this stuff and therefore it becomes",
    "start": "933460",
    "end": "940330"
  },
  {
    "text": "easy to maintain right we can get automated testing we don't have regressions on this and then therefore",
    "start": "940330",
    "end": "945880"
  },
  {
    "text": "easy to evolve so this is kind of what it looks like we have our view that hasn't changed we",
    "start": "945880",
    "end": "952810"
  },
  {
    "text": "extracted State and behavior out of that into a view model behind this is it our sort of ubiquitous",
    "start": "952810",
    "end": "958570"
  },
  {
    "text": "model that's kind of everything else in your application and we can now unit",
    "start": "958570",
    "end": "964330"
  },
  {
    "text": "test that stuff pretty easily in between here is the kind of the what I call the",
    "start": "964330",
    "end": "969370"
  },
  {
    "text": "galue we have user interaction coming from the view into the view model things like button clicks scrolling may push",
    "start": "969370",
    "end": "976540"
  },
  {
    "text": "events from the view to the view model and then this view state shifts between them typically with some sort of binding",
    "start": "976540",
    "end": "982330"
  },
  {
    "text": "framework so as text boxes change they push stake from the view into the view",
    "start": "982330",
    "end": "987910"
  },
  {
    "text": "model when the view model may reach up the model to get maybe get things from the cloud when that comes down",
    "start": "987910",
    "end": "994140"
  },
  {
    "text": "their view model state changes and the view changes to reflect that so as I",
    "start": "994140",
    "end": "1000420"
  },
  {
    "text": "said this kind of came out of WPF and there's a more stuff and the reason is that the zoom or frameworks have a lot",
    "start": "1000420",
    "end": "1006390"
  },
  {
    "text": "of built in things to support this sort of pattern you know with data context and binding and commands it's really",
    "start": "1006390",
    "end": "1014100"
  },
  {
    "text": "easy to do that that middle layer that that glue that sits in here it's very",
    "start": "1014100",
    "end": "1019440"
  },
  {
    "text": "easy in Zen or frameworks but you don't need it to do mvvm right",
    "start": "1019440",
    "end": "1025110"
  },
  {
    "text": "you can do this now without it it can just sometimes be a bit easier so let's",
    "start": "1025110",
    "end": "1030750"
  },
  {
    "text": "take a look at what this looks like so I have a solution here I've been playing",
    "start": "1030750",
    "end": "1037980"
  },
  {
    "text": "with a lot with VST s lately as a potential build solution for calibre micro have a quick app just demo it here",
    "start": "1037980",
    "end": "1047120"
  },
  {
    "text": "so lets me log into bsts within a user account and a token I get the projects",
    "start": "1047120",
    "end": "1053670"
  },
  {
    "text": "that are in my build a my sort of my DSPs project I can see the last 20",
    "start": "1053670",
    "end": "1059880"
  },
  {
    "text": "builds or so what the status was when they happened",
    "start": "1059880",
    "end": "1064490"
  },
  {
    "text": "and I can cue when you build it's happening really quickly because I didn't think it's gonna work and it's",
    "start": "1066920",
    "end": "1072210"
  },
  {
    "text": "all been stubbed out but the codes in there if you want to see it later on now",
    "start": "1072210",
    "end": "1077370"
  },
  {
    "text": "we'll look at the first part that login view model",
    "start": "1077370",
    "end": "1081710"
  },
  {
    "text": "so if you've looked at login like mvvm before you'll probably see quite a this",
    "start": "1084020",
    "end": "1090270"
  },
  {
    "text": "quite sort of similar pattern I have an accountant token properties the foreign property change",
    "start": "1090270",
    "end": "1096660"
  },
  {
    "text": "notifications to tell the view that hey I've changed you should update yourself but I'm also firing a change",
    "start": "1096660",
    "end": "1102630"
  },
  {
    "text": "notification for a property called can login which you can look down here and",
    "start": "1102630",
    "end": "1108150"
  },
  {
    "text": "that's simply computed as is the account not empty is the password not empty yep",
    "start": "1108150",
    "end": "1113400"
  },
  {
    "text": "you can log in and we have our login method down here chicken credentials chicken",
    "start": "1113400",
    "end": "1119820"
  },
  {
    "text": "authentication service is it valid if sweet if it's velcroed intial store them",
    "start": "1119820",
    "end": "1125730"
  },
  {
    "text": "and then navigate out to to the next page we can test this really easily so",
    "start": "1125730",
    "end": "1135049"
  },
  {
    "text": "I'm using X unit here so I can quickly test can login with various different",
    "start": "1137929",
    "end": "1143730"
  },
  {
    "text": "pieces of data and verify that can login changes to what I expect I can use",
    "start": "1143730",
    "end": "1149549"
  },
  {
    "text": "mocking and sort of integration bit on that integration but sort of state based testing to verify",
    "start": "1149549",
    "end": "1155009"
  },
  {
    "text": "that when my view model is activated that we get credentials out of the",
    "start": "1155009",
    "end": "1162059"
  },
  {
    "text": "credential manager and then I can verify that when there's a successful authentication that we never get into",
    "start": "1162059",
    "end": "1168299"
  },
  {
    "text": "the next project this is all possible because this few model is in a portable class library that's not bound to a UI",
    "start": "1168299",
    "end": "1175980"
  },
  {
    "text": "layer it means I can do all this testing without having to try and spin up a simulator or the emulator I can test it",
    "start": "1175980",
    "end": "1181950"
  },
  {
    "text": "independently of user interface which is quite cool but you'll notice",
    "start": "1181950",
    "end": "1188360"
  },
  {
    "text": "there's a lot of ceremony in here few models can be quite thin in terms of",
    "start": "1188360",
    "end": "1195570"
  },
  {
    "text": "their state and behavior because they typically pass things on from the UI through the view model onto something",
    "start": "1195570",
    "end": "1201179"
  },
  {
    "text": "else but there's a lot of ceremony we can see here about these property",
    "start": "1201179",
    "end": "1206970"
  },
  {
    "text": "change notifications it's which means we need automatic backing fields and so on",
    "start": "1206970",
    "end": "1212720"
  },
  {
    "text": "but there's a few tools to make this a lot easier the first one",
    "start": "1212720",
    "end": "1218029"
  },
  {
    "text": "is c-sharp 6 c-sharp 6 is fantastic for this",
    "start": "1218029",
    "end": "1224720"
  },
  {
    "text": "so I can do something like using static systems string and",
    "start": "1224750",
    "end": "1231679"
  },
  {
    "text": "therefore my string dot is not really just becomes is another empty I can use",
    "start": "1231679",
    "end": "1237509"
  },
  {
    "text": "expression bodied properties so my long complicated get login just becomes a",
    "start": "1237509",
    "end": "1242639"
  },
  {
    "text": "one-liner and I'm using a tool called faux d dot property changed so this is an il",
    "start": "1242639",
    "end": "1249509"
  },
  {
    "text": "rewriter so basically what it does is that compile-time pushes property change notifications into here for me I don't",
    "start": "1249509",
    "end": "1255659"
  },
  {
    "text": "need to write them myself and because I've marked up can login with depends on",
    "start": "1255659",
    "end": "1261150"
  },
  {
    "text": "accountant token when accountant token change they also push notifications for can logon so my view model becomes",
    "start": "1261150",
    "end": "1269270"
  },
  {
    "text": "that half the size and it's much easier to kind of reason about and it's the",
    "start": "1269270",
    "end": "1274380"
  },
  {
    "text": "same basically functionality is identical to this one here",
    "start": "1274380",
    "end": "1281660"
  },
  {
    "text": "it's just got a lot less ceremony stuff you don't need you don't care about so how does this look in the UI layer",
    "start": "1281660",
    "end": "1291080"
  },
  {
    "text": "well we this is the Windows 10 version we have our UI layer I'm using caliban's",
    "start": "1299280",
    "end": "1305640"
  },
  {
    "text": "kind of sort of magic binding so what's happening here is I've got a text box named account caliban's gonna",
    "start": "1305640",
    "end": "1312270"
  },
  {
    "text": "automatically go all right I should 2-way buy into that to the account on the view model same with token and then",
    "start": "1312270",
    "end": "1319410"
  },
  {
    "text": "it's gonna look at my password there my sir my button realize that six named login so when I click that it should",
    "start": "1319410",
    "end": "1325530"
  },
  {
    "text": "call the login method my view model and it's also going to notice that because",
    "start": "1325530",
    "end": "1330780"
  },
  {
    "text": "we have a property called can login that when it fires when that's false the",
    "start": "1330780",
    "end": "1337440"
  },
  {
    "text": "button should be disabled so right now everything's all set up if I",
    "start": "1337440",
    "end": "1343760"
  },
  {
    "text": "click my account log in is disabled when I click buttons",
    "start": "1343760",
    "end": "1350670"
  },
  {
    "text": "in here the account is updated can login is updated my button is Joe I think so this",
    "start": "1350670",
    "end": "1357930"
  },
  {
    "text": "is awesome a little simple binding between the two and it's this is why I talk about sort of sam'l being better",
    "start": "1357930",
    "end": "1364650"
  },
  {
    "text": "for this in effect that this is a lot more out of the box",
    "start": "1364650",
    "end": "1370520"
  },
  {
    "text": "but all the other platforms can still be done pretty easily",
    "start": "1370520",
    "end": "1376070"
  },
  {
    "text": "so if you want to look at 30 property change and I highly recommend you do that's the URL I love that are you were",
    "start": "1383890",
    "end": "1391300"
  },
  {
    "text": "off the talks that are on so you can always come get these URLs letter there's a lot of great in Vivian",
    "start": "1391300",
    "end": "1397600"
  },
  {
    "text": "frameworks out there freshman VM it's written by Michael redlund who's here at the conference",
    "start": "1397600",
    "end": "1403930"
  },
  {
    "text": "you've got to catch them it's a really good xamarin forms focused one mvvm light has been around for a long",
    "start": "1403930",
    "end": "1412030"
  },
  {
    "text": "time by Laurent Beyond and it's kind of the granddaddy of all of these and it's a great one as well in vvm Crosse is one",
    "start": "1412030",
    "end": "1419800"
  },
  {
    "text": "that's really focused on xamarin prism by Brian lagunas who's also here",
    "start": "1419800",
    "end": "1425200"
  },
  {
    "text": "in the conference is one that kind of came out of Microsoft in WPF and has",
    "start": "1425200",
    "end": "1430660"
  },
  {
    "text": "moved on to xamarin as well and reactive UI who's also some guys here like britain forester from github who you can",
    "start": "1430660",
    "end": "1437650"
  },
  {
    "text": "catch as well is a more reactive extensions focused in the vm framework",
    "start": "1437650",
    "end": "1442930"
  },
  {
    "text": "and therefore if you if you're doing really kind of big and complicated view models so it's quite a good one and of",
    "start": "1442930",
    "end": "1449230"
  },
  {
    "text": "course calibre micro i've got a plug as well so this is what we end up with we end up",
    "start": "1449230",
    "end": "1456820"
  },
  {
    "text": "with a three separate user interfaces store we've now got shared view models in a PCL that we can test",
    "start": "1456820",
    "end": "1463470"
  },
  {
    "text": "independently of a user interface we can share them across all of them but we still kind of have this middle layer of",
    "start": "1463470",
    "end": "1469900"
  },
  {
    "text": "platform-specific code which is things like push notifications",
    "start": "1469900",
    "end": "1475770"
  },
  {
    "text": "Maps bits and pieces around stuff you can't share across all platforms but",
    "start": "1475770",
    "end": "1481840"
  },
  {
    "text": "isn't user interface itself the other thing is also what is the view",
    "start": "1481840",
    "end": "1488830"
  },
  {
    "text": "in all of these platforms a lot of people get kind of confused by",
    "start": "1488830",
    "end": "1494950"
  },
  {
    "text": "this the reason is Apple call their their views of view controllers which i",
    "start": "1494950",
    "end": "1500410"
  },
  {
    "text": "think is a bit of a misnomer the view controller and storyboards in the iOS are the view name vvm they're not the",
    "start": "1500410",
    "end": "1508480"
  },
  {
    "text": "lot of you controller and sense that they are heavily tied user interface you can't instantiate a UI controller and",
    "start": "1508480",
    "end": "1515140"
  },
  {
    "text": "test it independently of it being inside a simulator so therefore in vvm to",
    "start": "1515140",
    "end": "1521309"
  },
  {
    "text": "parents it's the view same for Android activities layouts etc",
    "start": "1521309",
    "end": "1526710"
  },
  {
    "text": "these are all the view if you can't work with them outside of the device then it's the view and for Windows it's",
    "start": "1526710",
    "end": "1535980"
  },
  {
    "text": "the same on the page class so what we end up with is a bit of Gulu",
    "start": "1535980",
    "end": "1541380"
  },
  {
    "text": "we need some glue between different platform between the view and the view model for each of these different",
    "start": "1541380",
    "end": "1547140"
  },
  {
    "text": "platforms now this is a great library it's called bind it's really really simple you can download it's about a 1 C",
    "start": "1547140",
    "end": "1554730"
  },
  {
    "text": "C sharp file you can include in your project or you can get it from Newgate which I'll show you now",
    "start": "1554730",
    "end": "1561529"
  },
  {
    "text": "that glue is what you need to do bindings sort of sort of things you",
    "start": "1562279",
    "end": "1568860"
  },
  {
    "text": "don't need any if you don't want that to pull in a framework then you can do-it-yourself manual kind of binding",
    "start": "1568860",
    "end": "1576630"
  },
  {
    "text": "between the view and view model is perfectly okay it can be a bit more work but it depends",
    "start": "1576630",
    "end": "1582690"
  },
  {
    "text": "on the view and it depends on the view model so when we have platform-specific code or we have dependencies on specific",
    "start": "1582690",
    "end": "1589500"
  },
  {
    "text": "features for me the best way we treat them is just another dependency right we do our",
    "start": "1589500",
    "end": "1594840"
  },
  {
    "text": "view models depend on things like our application services to go get stuff from the cloud or from a database these",
    "start": "1594840",
    "end": "1601289"
  },
  {
    "text": "can just depend up do the same thing and depend on platform features fire interfaces which means we keep them",
    "start": "1601289",
    "end": "1607049"
  },
  {
    "text": "testable markable we can do stuff a lot more automated I mean a great example is",
    "start": "1607049",
    "end": "1614179"
  },
  {
    "text": "this code the code in these demos was previously talking to the bsts api to",
    "start": "1614179",
    "end": "1619950"
  },
  {
    "text": "our HTTP when i got got here and realized how shocking the internet was we you know",
    "start": "1619950",
    "end": "1627000"
  },
  {
    "text": "quickly mock out write some offline services that do the same thing the view models don't have to change and it's the",
    "start": "1627000",
    "end": "1632760"
  },
  {
    "text": "same sort of thing with the platform specific features as Emran have helped with this there's a",
    "start": "1632760",
    "end": "1638940"
  },
  {
    "text": "lot of plugins you know there's a lot of stuff we're all going to want to use we're all going to want to check is the",
    "start": "1638940",
    "end": "1644070"
  },
  {
    "text": "network available we're going to want to check what's the battery level or what location why you know and having to",
    "start": "1644070",
    "end": "1651210"
  },
  {
    "text": "write our own abstractions there interfaces and dependencies it's kind of a waste of time so this URL is a",
    "start": "1651210",
    "end": "1658140"
  },
  {
    "text": "fantastic one for sort of a lot of that shared code so let's take a look at what",
    "start": "1658140",
    "end": "1663390"
  },
  {
    "text": "all this looks like so I've got my",
    "start": "1663390",
    "end": "1670310"
  },
  {
    "text": "core project which is portable and has out has our few models so keep-keep sort",
    "start": "1670310",
    "end": "1676590"
  },
  {
    "text": "of focused on this login view model now when I looked up here we look at its",
    "start": "1676590",
    "end": "1681990"
  },
  {
    "text": "interface here it's depending on the credentials service so this is me saying I want to store credentials somewhere",
    "start": "1681990",
    "end": "1688160"
  },
  {
    "text": "but that's really going to be a platform specific feature each mobile platform is a different way of storing local data",
    "start": "1688160",
    "end": "1695570"
  },
  {
    "text": "so in my services I have my interface I credentials service ID CD get",
    "start": "1695570",
    "end": "1702390"
  },
  {
    "text": "credentials store credentials night I think particularly complicated but there's no implementation in my",
    "start": "1702390",
    "end": "1708240"
  },
  {
    "text": "portable class library I can't I can't write one they're shorter than potentially if I wanted one",
    "start": "1708240",
    "end": "1714300"
  },
  {
    "text": "saving to the cloud I could but I want the storing locally for a you know safe",
    "start": "1714300",
    "end": "1719850"
  },
  {
    "text": "password so if I open up my android project",
    "start": "1719850",
    "end": "1724940"
  },
  {
    "text": "under services we have a preference credential service",
    "start": "1725240",
    "end": "1730320"
  },
  {
    "text": "which basically uses the Android reference manager just all tokens to",
    "start": "1730320",
    "end": "1735390"
  },
  {
    "text": "implement this interface on iOS we have pretty much the same",
    "start": "1735390",
    "end": "1740880"
  },
  {
    "text": "thing except it's in what they call you in",
    "start": "1740880",
    "end": "1746370"
  },
  {
    "text": "this user defaults so this is a way basically we've abstracted our storing",
    "start": "1746370",
    "end": "1751680"
  },
  {
    "text": "of credentials into an interface part put the interface into the view model and then implement that later on we've",
    "start": "1751680",
    "end": "1758730"
  },
  {
    "text": "got other ones here for implementing dialogues as well so what does this look like on other",
    "start": "1758730",
    "end": "1766140"
  },
  {
    "text": "platforms then the windows because that's the more interesting ones in my",
    "start": "1766140",
    "end": "1772050"
  },
  {
    "text": "regard so if we look at Android here look at the login activity",
    "start": "1772050",
    "end": "1780780"
  },
  {
    "text": "so this is essentially the glute what was kind of Auto a magic and there's a",
    "start": "1780780",
    "end": "1787360"
  },
  {
    "text": "mall one with Caliban you know we're doing this ourselves so the first thing we do is finding our sort of four",
    "start": "1787360",
    "end": "1793960"
  },
  {
    "text": "important controls we're looking for our text box accountant token looking for a login button and we're looking for the",
    "start": "1793960",
    "end": "1799870"
  },
  {
    "text": "message text within basically saying on click call login you know we're wiring this up",
    "start": "1799870",
    "end": "1807070"
  },
  {
    "text": "manually and then we're creating four bindings using that bind framework basically two-way bind between account",
    "start": "1807070",
    "end": "1815559"
  },
  {
    "text": "text and the model account and that's that's pretty much it we're not we're not doing too much here so it's not as",
    "start": "1815559",
    "end": "1822730"
  },
  {
    "text": "easy as sort of the Zemel stuff but it's not tedious it's not you know thousands",
    "start": "1822730",
    "end": "1830110"
  },
  {
    "text": "of lines of code if we look at our projects activity which is that projects list it's it's a lot simpler we couldn't",
    "start": "1830110",
    "end": "1838120"
  },
  {
    "text": "we've got a projects adapter which is basically the way that Android does",
    "start": "1838120",
    "end": "1843660"
  },
  {
    "text": "bindings to list views",
    "start": "1843660",
    "end": "1847169"
  },
  {
    "text": "it leverages properly changed on the view model and it will also it's got a",
    "start": "1849000",
    "end": "1854980"
  },
  {
    "text": "bit of convention stuff in this so it'll look for like if on the view side it'll look for if you say you bind into the",
    "start": "1854980",
    "end": "1861130"
  },
  {
    "text": "text property on the text box it'll look for stuff like is there a text changed event and therefore try and wire that up",
    "start": "1861130",
    "end": "1867910"
  },
  {
    "text": "to get binding the other way as well I think it also defaults to things like",
    "start": "1867910",
    "end": "1874350"
  },
  {
    "text": "somewhere in here there's a list of looks it looks for things like editing today didn't value",
    "start": "1878820",
    "end": "1885100"
  },
  {
    "text": "changed on our oh s so it's got some built-ins stuff for like sort of hunting down appropriate events in the UI layer",
    "start": "1885100",
    "end": "1891309"
  },
  {
    "text": "to get their binding of hey the text box changed push it back to the view model and then obviously on the other end it's",
    "start": "1891309",
    "end": "1896950"
  },
  {
    "text": "looking at not affair property changed it's a projects adapter has basically built on top of bound",
    "start": "1896950",
    "end": "1903580"
  },
  {
    "text": "adapter which is sort of a utility class for me which works off base adapter",
    "start": "1903580",
    "end": "1908990"
  },
  {
    "text": "which is that sort of out of the Android box SDK this doesn't do much beyond",
    "start": "1908990",
    "end": "1914360"
  },
  {
    "text": "saying I have an observable collection if that collection changed tell Android",
    "start": "1914360",
    "end": "1919429"
  },
  {
    "text": "that stuff changed the important part here is in",
    "start": "1919429",
    "end": "1926170"
  },
  {
    "text": "this UI we've got basically a simple text box all we're doing",
    "start": "1926170",
    "end": "1932980"
  },
  {
    "text": "in our projects adapter is inflating a out of the box template simplest item to",
    "start": "1932980",
    "end": "1940190"
  },
  {
    "text": "and then sitting the properties on it and by that view model so this is very manual",
    "start": "1940190",
    "end": "1945679"
  },
  {
    "text": "binding but it's not overly tedious and once it's done it's kind of done you",
    "start": "1945679",
    "end": "1951530"
  },
  {
    "text": "don't really need to change it so this is the glue that sits between the view and the new model it's not overly",
    "start": "1951530",
    "end": "1958820"
  },
  {
    "text": "complicated and some mvvm frameworks have larger binding frameworks built in",
    "start": "1958820",
    "end": "1964160"
  },
  {
    "text": "or you can use ones that are kind of out of the box sort of independent like that bind",
    "start": "1964160",
    "end": "1970960"
  },
  {
    "text": "you'll notice here I'm also attaching to that list item click and passing it on",
    "start": "1970960",
    "end": "1976880"
  },
  {
    "text": "to a few Model View project",
    "start": "1976880",
    "end": "1981580"
  },
  {
    "text": "now",
    "start": "1982480",
    "end": "1985480"
  },
  {
    "text": "let's jump back so",
    "start": "1987520",
    "end": "1993300"
  },
  {
    "text": "we still got three separate user interfaces and some people don't like",
    "start": "1993300",
    "end": "1998350"
  },
  {
    "text": "that yeah want I want to write one I wanted to run everywhere and I still don't think Java was a problem in this",
    "start": "1998350",
    "end": "2004460"
  },
  {
    "text": "but we can always abstract that you're right and some people do some people create",
    "start": "2004460",
    "end": "2010590"
  },
  {
    "text": "their own little UI abstraction layers of the top of all three of these platforms",
    "start": "2010590",
    "end": "2015980"
  },
  {
    "text": "it can get really complicated but some people do it and xamarin have seven forms it's a",
    "start": "2015980",
    "end": "2022590"
  },
  {
    "text": "great example of this and then you end up with something like this if shared views if shared view models if shared",
    "start": "2022590",
    "end": "2029670"
  },
  {
    "text": "application services but you've always still got a little bit of platform code because you have to do something like",
    "start": "2029670",
    "end": "2036060"
  },
  {
    "text": "that to get to things like the GPS and storage and all that",
    "start": "2036060",
    "end": "2041990"
  },
  {
    "text": "so let's take a look at designer in forms and view models",
    "start": "2041990",
    "end": "2047840"
  },
  {
    "text": "so I'm going to keep using the same view models we've already got but I now have",
    "start": "2048650",
    "end": "2054480"
  },
  {
    "text": "in here for new projects the important one here is forms core now this is a PCL",
    "start": "2054480",
    "end": "2061679"
  },
  {
    "text": "this is platform independent and it depends on",
    "start": "2061680",
    "end": "2068419"
  },
  {
    "text": "xamarin forms which is also a PCL thankfully I can",
    "start": "2068420",
    "end": "2075810"
  },
  {
    "text": "help I can declare my views and here as is mo the important thing to remember here this is",
    "start": "2075810",
    "end": "2084000"
  },
  {
    "text": "not the sam'l you may have learnt already this is xamarin forms mo it's",
    "start": "2084000",
    "end": "2089129"
  },
  {
    "text": "different and when I get together talking to someone team it's intentionally",
    "start": "2089130",
    "end": "2094500"
  },
  {
    "text": "different it's not supposed to make you think it's Zemel you know for maybe WPF",
    "start": "2094500",
    "end": "2099680"
  },
  {
    "text": "things like what you call textbox I call the entry here Steckle out its stack panel button is I",
    "start": "2099680",
    "end": "2109110"
  },
  {
    "text": "guess always button because there's no better name for that but the layout system is different in its independent",
    "start": "2109110",
    "end": "2115350"
  },
  {
    "text": "but it's something that's shared across all different platforms and the beauty",
    "start": "2115350",
    "end": "2121170"
  },
  {
    "text": "about Simran forms is like just like the or frameworks it has a binding system",
    "start": "2121170",
    "end": "2127350"
  },
  {
    "text": "built-in so we can in here bind the text box text of this entry to",
    "start": "2127350",
    "end": "2135510"
  },
  {
    "text": "the account two ways it goes back and forth we're binding one way to the feedback",
    "start": "2135510",
    "end": "2143640"
  },
  {
    "text": "and we're also attaching the log in this is calibre and obviously attaching the login method to",
    "start": "2143640",
    "end": "2151290"
  },
  {
    "text": "that button now this means we've got pretty good shared libraries so if we",
    "start": "2151290",
    "end": "2159210"
  },
  {
    "text": "quickly look at this on through flames and zamarons doing the work here to",
    "start": "2159210",
    "end": "2166280"
  },
  {
    "text": "when it sees button or entry render that in an appropriate native control for",
    "start": "2166280",
    "end": "2172260"
  },
  {
    "text": "that platform now what this looks like can be a bit different but we can fire",
    "start": "2172260",
    "end": "2179640"
  },
  {
    "text": "this up here we get",
    "start": "2179640",
    "end": "2184760"
  },
  {
    "text": "our same sort of behavior and then windows 10 it looks like what",
    "start": "2185270",
    "end": "2190290"
  },
  {
    "text": "they've done is not do as much work on the render as here on Windows 10 so this one tends to look a bit",
    "start": "2190290",
    "end": "2196490"
  },
  {
    "text": "uglier but so these two UI is they're coming",
    "start": "2196490",
    "end": "2203370"
  },
  {
    "text": "off the same bit of zamel right we're sharing them over all these platforms the iOS ones there if you want to look",
    "start": "2203370",
    "end": "2211200"
  },
  {
    "text": "at it in your own time but and only want to invoke the demo gods and have a Mac here as well",
    "start": "2211200",
    "end": "2216380"
  },
  {
    "text": "we now got the same Zemel in a portable class library it's referencing a view",
    "start": "2216380",
    "end": "2222060"
  },
  {
    "text": "model that's in a portable class library all this stuff is platform in specific it can be tested outside of these",
    "start": "2222060",
    "end": "2228510"
  },
  {
    "text": "emulators which is great and it means I can start to implement",
    "start": "2228510",
    "end": "2234860"
  },
  {
    "text": "because they've abstracted things like dialogues and",
    "start": "2234860",
    "end": "2240800"
  },
  {
    "text": "navigation and user interface means I can actually start what were previously platform specific implementations of",
    "start": "2240800",
    "end": "2248100"
  },
  {
    "text": "interfaces and now shared ones so in my portable class library I have this action sheet dialog service",
    "start": "2248100",
    "end": "2254780"
  },
  {
    "text": "implement side dialogue and this was previously have them ended on android iOS and windows I can now share it",
    "start": "2254780",
    "end": "2261869"
  },
  {
    "text": "across all three but some of them I might still need to go back and look in our",
    "start": "2261869",
    "end": "2268790"
  },
  {
    "text": "forms host here we still have our preference credential",
    "start": "2268790",
    "end": "2274980"
  },
  {
    "text": "service we can't get away from that we always still need that platform way of storing code or storing stuff locally",
    "start": "2274980",
    "end": "2280560"
  },
  {
    "text": "but that's this is literally the most of the code in there if we look in our",
    "start": "2280560",
    "end": "2287269"
  },
  {
    "text": "host activity here so this is the majority of the code in",
    "start": "2287450",
    "end": "2294480"
  },
  {
    "text": "the Android host for this app basically initialize Emma in forms load the",
    "start": "2294480",
    "end": "2300420"
  },
  {
    "text": "application we're done we look in the",
    "start": "2300420",
    "end": "2305480"
  },
  {
    "text": "the Zemel for the windows 10 host",
    "start": "2306230",
    "end": "2311150"
  },
  {
    "text": "load the application I all the work has been done in that portable class library so we've now got",
    "start": "2312170",
    "end": "2318860"
  },
  {
    "text": "shared user interface across multiple platforms in a testable way which is good",
    "start": "2318860",
    "end": "2326710"
  },
  {
    "text": "Michael riddlin did talk earlier today on sort of what's new ins our own forms if you haven't seen it go see the",
    "start": "2326710",
    "end": "2333710"
  },
  {
    "text": "recording later on it's a good one he can go more he goes more into deep about what you kind of do with xamarin forms",
    "start": "2333710",
    "end": "2339110"
  },
  {
    "text": "in terms of user interface but I just want to get across the point here is that xamarin forms has a built in MV it",
    "start": "2339110",
    "end": "2345590"
  },
  {
    "text": "in BPM support and you can leverage that to kind of build a lot more stuff shared",
    "start": "2345590",
    "end": "2352010"
  },
  {
    "text": "across all your platforms",
    "start": "2352010",
    "end": "2354970"
  },
  {
    "text": "so let's look at some more advanced ideas alright once we've got this idea of what do models can do for us let's",
    "start": "2357880",
    "end": "2365360"
  },
  {
    "text": "see what we can how far we can take this so we're all kind of used to sharing our",
    "start": "2365360",
    "end": "2371870"
  },
  {
    "text": "views right in Zemun we used to call it user controls and Razer it's Razer",
    "start": "2371870",
    "end": "2377240"
  },
  {
    "text": "templates and so on that if we have a large complicated review we pinch you want to break that down to smaller parts",
    "start": "2377240",
    "end": "2382850"
  },
  {
    "text": "because because those smaller parts can be reused across multiple pages or sometimes we have a view that has",
    "start": "2382850",
    "end": "2389930"
  },
  {
    "text": "multiple sort of areas that are orthogonal to each other no we don't want a view model that's got it",
    "start": "2389930",
    "end": "2395000"
  },
  {
    "text": "represents the entire screen because sometimes that screen may have very very different sections to each other and",
    "start": "2395000",
    "end": "2401000"
  },
  {
    "text": "then that view model becomes sort of fails and the whole single responsibility so just as we compose our views together",
    "start": "2401000",
    "end": "2407750"
  },
  {
    "text": "of multiple parts of user interface I feel we should do that with our view models as well right we should build",
    "start": "2407750",
    "end": "2413360"
  },
  {
    "text": "them up not just have one view model representing the screen but view models presenting different areas",
    "start": "2413360",
    "end": "2420550"
  },
  {
    "text": "so I've got a master details app I'll kind of talk to you show soon but this",
    "start": "2420550",
    "end": "2426080"
  },
  {
    "text": "this pattern you'll see in things like Outlook or any kind of master details app right we have our shell that's our",
    "start": "2426080",
    "end": "2433610"
  },
  {
    "text": "entire screen probably of a menu on the left here which is our accounts then we have our master details section",
    "start": "2433610",
    "end": "2441010"
  },
  {
    "text": "now if you had one model that tried to represent all of this it's going to be",
    "start": "2441010",
    "end": "2446900"
  },
  {
    "text": "doing a lot more it's going in accounts it's gonna be trying to pass messages around it's gonna be working out user",
    "start": "2446900",
    "end": "2451949"
  },
  {
    "text": "interfaces in terms of which few to show where and so on I think it would get really messy and you would you'd lose a",
    "start": "2451949",
    "end": "2458969"
  },
  {
    "text": "lot in reuse so we can actually maybe we can break it down like I have in this diagram into multiple view models and",
    "start": "2458969",
    "end": "2465599"
  },
  {
    "text": "get more work out done out of it but when you do something like that these view model slides to talk to each",
    "start": "2465599",
    "end": "2471269"
  },
  {
    "text": "other and this is where something like of Integra Gator comes in xamarin forms has something built-in called messenger",
    "start": "2471269",
    "end": "2477150"
  },
  {
    "text": "and almost all mvvm frameworks you have a look at will have some sort of event",
    "start": "2477150",
    "end": "2482729"
  },
  {
    "text": "aggregation message bus messaging system built in and that's a way that view models that shouldn't know about each",
    "start": "2482729",
    "end": "2489929"
  },
  {
    "text": "other but need to talk kind of talk through a third party so in this regard and that kind of a demo we haven't seen",
    "start": "2489929",
    "end": "2497219"
  },
  {
    "text": "yet a view model our menu when something is selected needs to push of into the",
    "start": "2497219",
    "end": "2503759"
  },
  {
    "text": "event aggregator which can then pass on to the the master page to say hey they've changed their account going",
    "start": "2503759",
    "end": "2510949"
  },
  {
    "text": "potentially get the new emails or the new issues or whatever's the entity in",
    "start": "2510949",
    "end": "2516509"
  },
  {
    "text": "question and the thing is the issues doesn't need to know about the menu right one on the Left should never know",
    "start": "2516509",
    "end": "2522029"
  },
  {
    "text": "about the menu it just needs to know that hey someone's selected a new",
    "start": "2522029",
    "end": "2527249"
  },
  {
    "text": "account I should update what I show because it might not just be the menu that does this it might be that they can",
    "start": "2527249",
    "end": "2534509"
  },
  {
    "text": "go up to you know the log out for instance when",
    "start": "2534509",
    "end": "2539849"
  },
  {
    "text": "they log out the account has changed you want to potentially push an event on to say hey",
    "start": "2539849",
    "end": "2545429"
  },
  {
    "text": "look at the current account has changed the issues should reflect that so this",
    "start": "2545429",
    "end": "2550739"
  },
  {
    "text": "way you have you don't want your issues then all right I could listen to menus a good listen to the logout screen I would",
    "start": "2550739",
    "end": "2557219"
  },
  {
    "text": "listen to all these other places if you just listen to one place you mean to aggregator we can get that all done",
    "start": "2557219",
    "end": "2562589"
  },
  {
    "text": "quite nicely no they do one go to mark Simmons talk about two things ago",
    "start": "2562589",
    "end": "2569089"
  },
  {
    "text": "so he talked about functional architecture which is basically onion architecture is",
    "start": "2569089",
    "end": "2575400"
  },
  {
    "text": "another way of talking about it which is the idea of having at the core of your app a piece of",
    "start": "2575400",
    "end": "2581490"
  },
  {
    "text": "your domain model is as functional code as pure functions as a mutable data and",
    "start": "2581490",
    "end": "2588470"
  },
  {
    "text": "that's fantastic go see this talk better describes it but",
    "start": "2588470",
    "end": "2594930"
  },
  {
    "text": "we always need something to inject in there for state right we always need",
    "start": "2594930",
    "end": "2600330"
  },
  {
    "text": "ways to talk to the database or to local systems or the cloud which is naturally",
    "start": "2600330",
    "end": "2606660"
  },
  {
    "text": "not pure not functional and this leads to another speech like with hanging",
    "start": "2606660",
    "end": "2611700"
  },
  {
    "text": "architecture a functional core and parrot of shell where you have a kind of an imperative wrapper around your",
    "start": "2611700",
    "end": "2617190"
  },
  {
    "text": "functional core of domain and then that can do the things to talk to the database and all your other work this",
    "start": "2617190",
    "end": "2623910"
  },
  {
    "text": "lends itself to MVM ridiculously well because that func imperative shell is the view model",
    "start": "2623910",
    "end": "2629690"
  },
  {
    "text": "you can talk to your functional domain say oh and his example he was talking",
    "start": "2629690",
    "end": "2634710"
  },
  {
    "text": "about user restaurant reservations yeah the user has clicked the reserved seat button that can talk to the functional",
    "start": "2634710",
    "end": "2641190"
  },
  {
    "text": "shell their functional shell can then you know say hey you need to go at the database the view model would think",
    "start": "2641190",
    "end": "2647310"
  },
  {
    "text": "think about the database and do the work so other than mark Siemens talk there's",
    "start": "2647310",
    "end": "2652619"
  },
  {
    "text": "some great other ones by Gary Boone had this tool called boundaries which also discusses how your functional core",
    "start": "2652619",
    "end": "2659550"
  },
  {
    "text": "imperative shell and one called immutable architecture which is another fantastic talk on this so I highly",
    "start": "2659550",
    "end": "2666210"
  },
  {
    "text": "recommend both of those let's see what this looks like in question",
    "start": "2666210",
    "end": "2672410"
  },
  {
    "text": "so let me show you the demo",
    "start": "2677620",
    "end": "2683560"
  },
  {
    "text": "this is actually was talking to github but so I did not make it Nate specific",
    "start": "2683560",
    "end": "2689930"
  },
  {
    "text": "internet specific so I had my menu here I can pick my envy empirical question",
    "start": "2689930",
    "end": "2696670"
  },
  {
    "text": "and then I have my list of issues which I can select and",
    "start": "2696670",
    "end": "2702850"
  },
  {
    "text": "see a bit more about as follows that basically the pattern of that diagram I talked about so let's take a look at it",
    "start": "2702850",
    "end": "2710180"
  },
  {
    "text": "what it looks like in code",
    "start": "2710180",
    "end": "2712930"
  },
  {
    "text": "the first one is a shell a shell doesn't actually do much all right a shell",
    "start": "2720069",
    "end": "2725480"
  },
  {
    "text": "should basically sit up what what we want to see on screen we want some issues and we want to see menu you know",
    "start": "2725480",
    "end": "2732440"
  },
  {
    "text": "what does here is basically new them up passing some data on including that of Integra Gator and",
    "start": "2732440",
    "end": "2738609"
  },
  {
    "text": "uses and caliber and stuff to say basically hey when I get activated you should activate which is basically just",
    "start": "2738609",
    "end": "2744710"
  },
  {
    "text": "some lifecycle work what is the view look like for that",
    "start": "2744710",
    "end": "2751540"
  },
  {
    "text": "really for the most part pretty simple just some of us",
    "start": "2751540",
    "end": "2757660"
  },
  {
    "text": "there we go so we're using as ml split view in this regard but I have a content",
    "start": "2757660",
    "end": "2764990"
  },
  {
    "text": "control which is using some Caliburn stuff to say Barnett to the menu it's what Kellerman's doing here is saying",
    "start": "2764990",
    "end": "2770630"
  },
  {
    "text": "all right you're binding a menu view model to me I should go find the menu",
    "start": "2770630",
    "end": "2776180"
  },
  {
    "text": "view instantiate that menu view stick it in here we're doing the same thing down here",
    "start": "2776180",
    "end": "2782270"
  },
  {
    "text": "with issues finally for the issues view model being bound here look for the issues view",
    "start": "2782270",
    "end": "2788140"
  },
  {
    "text": "instantiate that put that into that content control now I'm composing my",
    "start": "2788140",
    "end": "2794119"
  },
  {
    "text": "view based off the view model so I'm composing my view model multiple different sections that are now",
    "start": "2794119",
    "end": "2799430"
  },
  {
    "text": "independent of each other or they depend on is the event aggregator and our viewers composed off that you know a",
    "start": "2799430",
    "end": "2805460"
  },
  {
    "text": "view doesn't care that there is a menu or what goes into that menu or what goes into those issues all it cares about is",
    "start": "2805460",
    "end": "2812300"
  },
  {
    "text": "that I have two blue minerals and that's how they should look in relation to each other which is basically in a split view",
    "start": "2812300",
    "end": "2819069"
  },
  {
    "text": "so let's look at our issues view model so this issues view model",
    "start": "2819190",
    "end": "2825970"
  },
  {
    "text": "inherits from something in kalamoon could conduct a issue that's very issue",
    "start": "2825970",
    "end": "2831410"
  },
  {
    "text": "view model collection one active which basically means that this issue this view model is",
    "start": "2831410",
    "end": "2837410"
  },
  {
    "text": "responsible for a collection of char litems and one of them will be active at one time",
    "start": "2837410",
    "end": "2843670"
  },
  {
    "text": "on initialize it listens to the event aggregator non deactivate it and",
    "start": "2844930",
    "end": "2851130"
  },
  {
    "text": "subscribes the important part here is when that event aggregator message comes in which I'll go into a little bit more",
    "start": "2851130",
    "end": "2857620"
  },
  {
    "text": "detail clear the items get the new ones from github add them to the current range and activate active",
    "start": "2857620",
    "end": "2865900"
  },
  {
    "text": "item basically select the first one so that's where we get that hole when we first come in the first issue is item is",
    "start": "2865900",
    "end": "2872860"
  },
  {
    "text": "selected the view for this again is really simple",
    "start": "2872860",
    "end": "2878590"
  },
  {
    "text": "we have a list view being down two items should",
    "start": "2878590",
    "end": "2887140"
  },
  {
    "text": "expect has it up tab to mate which we'll get into and the NYX NYX Twitter's Compton",
    "start": "2887140",
    "end": "2893140"
  },
  {
    "text": "control and that's it so this this few doesn't care about what it's displaying",
    "start": "2893140",
    "end": "2899380"
  },
  {
    "text": "it doesn't care that how an issue should look in the menu it doesn't care about how an issue should look in and its",
    "start": "2899380",
    "end": "2905710"
  },
  {
    "text": "detail whether it's master all it cares about is that it's a master details view",
    "start": "2905710",
    "end": "2912720"
  },
  {
    "text": "so again we're using content controls and using the view model to say basically",
    "start": "2912780",
    "end": "2918450"
  },
  {
    "text": "bind to the current item find me the view for this few model put it in here but I'm giving a bit of extra context my",
    "start": "2918450",
    "end": "2925750"
  },
  {
    "text": "view your context is master view in my views under issue I had master view",
    "start": "2925750",
    "end": "2933010"
  },
  {
    "text": "which is my title and content basically how many comments in my details view I",
    "start": "2933010",
    "end": "2940170"
  },
  {
    "text": "have the title and body so what that means is that this is where our detail",
    "start": "2940170",
    "end": "2948100"
  },
  {
    "text": "comes and this is where our platform-specific store not even platform-specific our stuff that specific tasks application comes in so",
    "start": "2948100",
    "end": "2954730"
  },
  {
    "text": "here we have a ListView they didn't care what was in it and our content control that didn't care what was in it but",
    "start": "2954730",
    "end": "2960280"
  },
  {
    "text": "because we're putting issue of you models with different contexts and it can work out what if you should go where",
    "start": "2960280",
    "end": "2965830"
  },
  {
    "text": "and we're composing our view based on her view model which has been composed up so naturally as well and what's also",
    "start": "2965830",
    "end": "2973390"
  },
  {
    "text": "happening is this is Kellerman's managing lifecycle so when i select something here that's updating the active item the",
    "start": "2973390",
    "end": "2980990"
  },
  {
    "text": "active item in the view model determines what goes into",
    "start": "2980990",
    "end": "2986970"
  },
  {
    "text": "[Music] sorry what's been shown in that content",
    "start": "2986970",
    "end": "2993020"
  },
  {
    "text": "control so as the list view selection updates the view model that selection then updates the content control I know",
    "start": "2993020",
    "end": "2999020"
  },
  {
    "text": "where we go in quickly jumping back to that menu view model",
    "start": "2999020",
    "end": "3006360"
  },
  {
    "text": "all this is doing is on initialize it's",
    "start": "3010050",
    "end": "3015970"
  },
  {
    "text": "loading up some stuff from github adding it to the menu then it's publishing on the event aggregator a repository",
    "start": "3015970",
    "end": "3021790"
  },
  {
    "text": "selected message basically say hey the first repository is slickered so this is sort of a default behavior but when we",
    "start": "3021790",
    "end": "3028720"
  },
  {
    "text": "actually click something in the menu we're calling select repository and that just pushes on to the event aggregator a",
    "start": "3028720",
    "end": "3034660"
  },
  {
    "text": "new repository select message which is handled by our",
    "start": "3034660",
    "end": "3040020"
  },
  {
    "text": "issues view model and we can tell that because it implements I handle repositories looking at message",
    "start": "3040020",
    "end": "3046600"
  },
  {
    "text": "so this is how that wiring comes in when we click on the menu it pushes a message on to the view model I'm sorry I'm",
    "start": "3046600",
    "end": "3053470"
  },
  {
    "text": "deviant aggregator event aggregator pushes it into the issues view model there's then rebonds the UI reminds the",
    "start": "3053470",
    "end": "3059530"
  },
  {
    "text": "view model on the UI updates yep",
    "start": "3059530",
    "end": "3065040"
  },
  {
    "text": "so to wrap up with something like xamarin we can now",
    "start": "3065040",
    "end": "3070840"
  },
  {
    "text": "write c-sharp across multiple platforms it's still platform specific receive",
    "start": "3070840",
    "end": "3077290"
  },
  {
    "text": "shop but because it's c-sharp we can have access to things like bubble class libraries shared libraries shared files",
    "start": "3077290",
    "end": "3083590"
  },
  {
    "text": "and so we can now reuse most of our code across all of them once we do that we",
    "start": "3083590",
    "end": "3089950"
  },
  {
    "text": "can then start to extract State and behavior from our views into things like view models which can now be tested",
    "start": "3089950",
    "end": "3095020"
  },
  {
    "text": "independently of each other when we do that and we remove things",
    "start": "3095020",
    "end": "3100120"
  },
  {
    "text": "like Sam our own forms we can then share more reviews we get to sort of 80 90 %",
    "start": "3100120",
    "end": "3106330"
  },
  {
    "text": "code reuse which is fantastic and then once we've done that we can start to do some more advanced around composing ugly",
    "start": "3106330",
    "end": "3113350"
  },
  {
    "text": "models of Integra Gatien and the like so the code for all of this is at this",
    "start": "3113350",
    "end": "3120280"
  },
  {
    "text": "URL as well as some other talks and I'll post the slides up there as well any questions",
    "start": "3120280",
    "end": "3128460"
  },
  {
    "text": "sorry yep so xamarin forms having a built-in mvvm framework a basic one of",
    "start": "3133830",
    "end": "3139930"
  },
  {
    "text": "some sort what would be the advantages of moving to one of those other ones that you mentioned so the question is do",
    "start": "3139930",
    "end": "3147310"
  },
  {
    "text": "I need to repeat the question with a mark like that zimmern forms so it doesn't really have a built-in mvvm",
    "start": "3147310",
    "end": "3152800"
  },
  {
    "text": "framework it more has like sam'l has support for one in the sense that it has a binding framework in there it has",
    "start": "3152800",
    "end": "3159880"
  },
  {
    "text": "things like commands it actually it does a bit more than sales ml because it has things like",
    "start": "3159880",
    "end": "3164940"
  },
  {
    "text": "dependency injection and AB Integra Gatien built-in but it doesn't have",
    "start": "3164940",
    "end": "3170290"
  },
  {
    "text": "things like class implements I know if I probably changed or sort of a base view model you're always gonna have to build",
    "start": "3170290",
    "end": "3175750"
  },
  {
    "text": "a bit more on top of that but it's it's certainly it's sort of half wave I guess it's getting you",
    "start": "3175750",
    "end": "3182860"
  },
  {
    "text": "almost there to building your own EMV VM framework but you'd always need to build a bit yourself there's not quite all",
    "start": "3182860",
    "end": "3188800"
  },
  {
    "text": "there in the box if you want to you can there's nothing stopping you it just depends that you may already",
    "start": "3188800",
    "end": "3194980"
  },
  {
    "text": "have some existing code bases that use some of those other ones you can now start to use everywhere",
    "start": "3194980",
    "end": "3201150"
  },
  {
    "text": "yeah so all the ones I mentioned work in xamarin forms",
    "start": "3207599",
    "end": "3212700"
  },
  {
    "text": "some of them like fresh Aben vm are more focused on their own forms than anything else because it's a newer one whereas",
    "start": "3212700",
    "end": "3220810"
  },
  {
    "text": "some of the other ones like a medium light reactive UI Caliburn all kind of came out of the WPF days and so they",
    "start": "3220810",
    "end": "3227410"
  },
  {
    "text": "moved to xamarin forms and xamarin as well which means they've got walk sense of support and across all the platforms",
    "start": "3227410",
    "end": "3233490"
  },
  {
    "text": "but if you just throw in some of them informs isn't like fresh meat fresh convenient works just as well",
    "start": "3233490",
    "end": "3240150"
  },
  {
    "text": "yeah it's always basically there's Semoran University which is the out-of-the-box training that they",
    "start": "3250770",
    "end": "3256930"
  },
  {
    "text": "provide and pro side I'd say the best best to besides just sort of playing around by yourself",
    "start": "3256930",
    "end": "3264210"
  },
  {
    "text": "so the one that I'm using diction Primack I'm using for all these demos is the one that comes out of the box with",
    "start": "3273660",
    "end": "3279849"
  },
  {
    "text": "calibre which is just so it's called simple container but there's nothing in these demos",
    "start": "3279849",
    "end": "3286569"
  },
  {
    "text": "that's tied to that I can quickly show it",
    "start": "3286569",
    "end": "3291300"
  },
  {
    "text": "look",
    "start": "3292530",
    "end": "3295530"
  },
  {
    "text": "so basically here you can see I'm creating a new container I'm registering",
    "start": "3304150",
    "end": "3309640"
  },
  {
    "text": "my view models and registering the services with their interfaces and down here is kind of the wiring between",
    "start": "3309640",
    "end": "3316030"
  },
  {
    "text": "Caliburn and that container there is nothing stopping you using anything you want and the other ones as long as it's",
    "start": "3316030",
    "end": "3322330"
  },
  {
    "text": "essentially a portable class library because if it doesn't have a PCL then you can't use it from a PC either so you",
    "start": "3322330",
    "end": "3328960"
  },
  {
    "text": "want something that supports all those platforms but most there's nothing nothing kind of platform specific about",
    "start": "3328960",
    "end": "3336280"
  },
  {
    "text": "a ioc container so it should most of them will work almost everywhere so it's",
    "start": "3336280",
    "end": "3341470"
  },
  {
    "text": "kind of pick your favorite really pick the one you used to sway to do it",
    "start": "3341470",
    "end": "3346559"
  },
  {
    "text": "so the telluric controls themselves I haven't used specifically but they're essentially just native controls so I",
    "start": "3351700",
    "end": "3358390"
  },
  {
    "text": "wouldn't expect them any worries and using them I mean they're kind of it's",
    "start": "3358390",
    "end": "3363760"
  },
  {
    "text": "almost orthogonal to mvvm essentially you've got your view you have UV model what are you using the view is up to you",
    "start": "3363760",
    "end": "3370210"
  },
  {
    "text": "it shouldn't change what's in the view model or how that might change the glue that you work to get between that view",
    "start": "3370210",
    "end": "3377170"
  },
  {
    "text": "and view model but for the most part it should we still be the same",
    "start": "3377170",
    "end": "3381599"
  },
  {
    "text": "yes excellent thank you",
    "start": "3382560",
    "end": "3389280"
  }
]