[
  {
    "text": "yeah okay well welcome everybody uh this is a talk about C and audio programming",
    "start": "2520",
    "end": "9160"
  },
  {
    "text": "uh it's a real privilege to be speaking on this topic that um maybe it's a little bit of a niche subject but I",
    "start": "9160",
    "end": "14799"
  },
  {
    "text": "certainly find it very interesting um just to give you a little idea of who I am my name is Mark Heath I'm a plural",
    "start": "14799",
    "end": "21720"
  },
  {
    "text": "site author I've created over 20 courses on plural sites including three about audio which hardly anybody watches most",
    "start": "21720",
    "end": "28720"
  },
  {
    "text": "of my courses are about ad microservices that kind of thing because my day job um I'm building digital",
    "start": "28720",
    "end": "35120"
  },
  {
    "text": "evidence Management systems for the criminal justice um system um in Asia",
    "start": "35120",
    "end": "41719"
  },
  {
    "text": "which does get uh me opportunity to do a little bit of audio programming which I'll talk about later but probably the",
    "start": "41719",
    "end": "47039"
  },
  {
    "text": "most relevant thing for this talk is that um I'm the creator of an open source uh audio library for net called n",
    "start": "47039",
    "end": "53879"
  },
  {
    "text": "AIO and so actually this talk is going to be a bit of a story to tell you how I came to create n",
    "start": "53879",
    "end": "60960"
  },
  {
    "text": "um but also I'll be diving into some of the technical details of what it's actually like to try and write audio",
    "start": "60960",
    "end": "66799"
  },
  {
    "text": "code in net and what you can achieve and what some of the big challenges",
    "start": "66799",
    "end": "72080"
  },
  {
    "text": "are um so my story actually starts in the last Millenium how many of you are old enough that you your career began in",
    "start": "72080",
    "end": "78720"
  },
  {
    "text": "the last Millennium um and back in the day we used a variety of languages so um",
    "start": "78720",
    "end": "84400"
  },
  {
    "text": "I was using C and C++ for some things and I was using Python and Visual Basic 6 for other things things and you may",
    "start": "84400",
    "end": "91600"
  },
  {
    "text": "know that the difference between these types of language is that c and C++ they're compiled languages your code",
    "start": "91600",
    "end": "98000"
  },
  {
    "text": "gets compiled directly into machine code whereas python Visual Basic 6 those languages are interpreted your your code",
    "start": "98000",
    "end": "104719"
  },
  {
    "text": "is actually being interpreted at runtime and the general understanding",
    "start": "104719",
    "end": "109759"
  },
  {
    "text": "was if you wanted to do anything that was fast you had to be in the world of C or C++ and with audio you typically do",
    "start": "109759",
    "end": "117840"
  },
  {
    "text": "want your code to run fast because it's often real time also if you wanted to do anything lowlevel so you wanted to call",
    "start": "117840",
    "end": "124799"
  },
  {
    "text": "operating system apis or if you wanted to interact with devices like a sound card I've got a little sound card here",
    "start": "124799",
    "end": "131080"
  },
  {
    "text": "got a little midi keyboard as well which hopefully use later if we have time you want it to be in the world of sea",
    "start": "131080",
    "end": "137560"
  },
  {
    "text": "however it came at a cost and that was complexity it was very easy to shoot yourself in the foot and so we try and",
    "start": "137560",
    "end": "143800"
  },
  {
    "text": "do as much as we could in the interpreted world because even though maybe they were thought of as slow",
    "start": "143800",
    "end": "150440"
  },
  {
    "text": "um the OS was abstracted away it was just easier to work with and you could do what was what we called rapid",
    "start": "150440",
    "end": "155879"
  },
  {
    "text": "application development um but then about the end of the 90s um Java actually came across my",
    "start": "155879",
    "end": "162560"
  },
  {
    "text": "radar and the interesting thing about Java is it didn't fit neatly into either of these two worlds um you may know that",
    "start": "162560",
    "end": "169519"
  },
  {
    "text": "Java compiles you do compile your code but you compile it into bite code which is kind of uh machine code for an",
    "start": "169519",
    "end": "175440"
  },
  {
    "text": "imaginary virtual machine and then the Java virtual machine runs that",
    "start": "175440",
    "end": "181560"
  },
  {
    "text": "um it makes use of what's called a jit compiler which is very fast and efficient to actually convert that b",
    "start": "181560",
    "end": "187519"
  },
  {
    "text": "code into machine code at runtime and it had an Innovative approach to memory management called the",
    "start": "187519",
    "end": "193440"
  },
  {
    "text": "garbage collector which is going to be very relevant for net and in my mind and",
    "start": "193440",
    "end": "199280"
  },
  {
    "text": "I think actually in a lot of people's minds Java was still in the slow category because it wasn't in the compiled world but then I stumbled",
    "start": "199280",
    "end": "206560"
  },
  {
    "text": "across this project in the late 90s it was called Java layer and what they these guys had done they had implemented",
    "start": "206560",
    "end": "213159"
  },
  {
    "text": "a full mp3 decoder in Java and of course in the late 90s MP3s were all the rage",
    "start": "213159",
    "end": "219280"
  },
  {
    "text": "we were all ripping our CD collection to MP3 so we could play it in Winamp and",
    "start": "219280",
    "end": "225200"
  },
  {
    "text": "this this surprised me I wasn't expecting this kind of thing to be done in Java and not only had they done that but they had implemented a player so it",
    "start": "225200",
    "end": "232079"
  },
  {
    "text": "could do it in real time decode your MP3s to we and play it through the sound card and so that blew my mind and it was",
    "start": "232079",
    "end": "238720"
  },
  {
    "text": "actually the first thing thing that I converted to net it's um on it's open source it's actually been Rewritten",
    "start": "238720",
    "end": "244959"
  },
  {
    "text": "twice since I originally did it um however not long after that net came",
    "start": "244959",
    "end": "251239"
  },
  {
    "text": "along and I was very interested in net because I was primarily a Windows programmer and Java wasn't really um",
    "start": "251239",
    "end": "258199"
  },
  {
    "text": "very Windows friendly if you made a a Java app it didn't even look like a Windows application you had this jar",
    "start": "258199",
    "end": "263440"
  },
  {
    "text": "file and people on Windows like how do I run a jar um so net was very interesting to me and one of the Microsoft's",
    "start": "263440",
    "end": "270919"
  },
  {
    "text": "Innovations was they had multiple languages so they had vb.net which was similar to VB but all the VB6",
    "start": "270919",
    "end": "277479"
  },
  {
    "text": "programmers hated it it wasn't actually the same they had visual jsharp which was actually Java for net did anybody",
    "start": "277479",
    "end": "285479"
  },
  {
    "text": "have The Misfortune of using that one other person not many people use that Microsoft got into legal",
    "start": "285479",
    "end": "291440"
  },
  {
    "text": "trouble with it but that was actually the the way I initially ported that Java layer project to um net C which of",
    "start": "291440",
    "end": "299080"
  },
  {
    "text": "course as we is now the flagship language and there was also a thing called managed C++ where the idea was",
    "start": "299080",
    "end": "304639"
  },
  {
    "text": "you could take the Best of Both Worlds you could have the best of um managed",
    "start": "304639",
    "end": "309680"
  },
  {
    "text": "code.net and uh native code although I found it incredibly confusing to use",
    "start": "309680",
    "end": "315800"
  },
  {
    "text": "kind of gave up on it and when net came out in beta I filled in my details so it",
    "start": "315800",
    "end": "321639"
  },
  {
    "text": "could be posted to me um the the beta on four CDs because my modem wasn't fast",
    "start": "321639",
    "end": "327160"
  },
  {
    "text": "enough to download the whole thing um and the first thing I looked for was where is the audio supporting net I read",
    "start": "327160",
    "end": "334479"
  },
  {
    "text": "all of the apis I'm like there must be some audio because Java can do it where's the U net and there was nothing",
    "start": "334479",
    "end": "340960"
  },
  {
    "text": "virtually nothing it was it was useless and so that spawn this idea why don't I",
    "start": "340960",
    "end": "346560"
  },
  {
    "text": "create my own audio library and surely Microsoft will in the next version of",
    "start": "346560",
    "end": "351639"
  },
  {
    "text": "net they'll fill it in and my audio library will then become Obsolete and so I started working my evenings and Spare",
    "start": "351639",
    "end": "357680"
  },
  {
    "text": "Time on making an audio I called it everything in netland was called n something because everything in Java",
    "start": "357680",
    "end": "363600"
  },
  {
    "text": "world was J something um and I had two goals one was I wanted to make it",
    "start": "363600",
    "end": "369160"
  },
  {
    "text": "possible to call any Windows audio API so anything that Windows could do with audio I wanted you to be able to do it",
    "start": "369160",
    "end": "375280"
  },
  {
    "text": "if you a net programmer and I also wanted to make a collection of building blocks um that were commonly used things",
    "start": "375280",
    "end": "383199"
  },
  {
    "text": "that people making audio applications would be able to use to build their own audio applications because really I didn't want to make a library I wanted",
    "start": "383199",
    "end": "389639"
  },
  {
    "text": "make my own Audio Apps and so I worked away on this in a while and I got a few initial things",
    "start": "389639",
    "end": "395680"
  },
  {
    "text": "working I got audio playback and recording I was able to read and write wave files and MIDI files if any of you",
    "start": "395680",
    "end": "403000"
  },
  {
    "text": "are into music production you'll know what a midi file is um and also I really wanted to be able to play MP3 because",
    "start": "403000",
    "end": "409759"
  },
  {
    "text": "that was the most important audio uh file format at the time um but then a few years later I got",
    "start": "409759",
    "end": "417440"
  },
  {
    "text": "a job at a company called nice where I'm still working it's actually almost 20 years so it's a it is a fairly nice",
    "start": "417440",
    "end": "424199"
  },
  {
    "text": "company to work for but they were about to embark on a brand new project um they",
    "start": "424199",
    "end": "430080"
  },
  {
    "text": "were going to build an incident reconstruction application so if something bad has happened and you want",
    "start": "430080",
    "end": "435599"
  },
  {
    "text": "to piece together all of the 999 recordings all of the police radio all of the um CCTV cameras you wanted to put",
    "start": "435599",
    "end": "443240"
  },
  {
    "text": "it together in a timeline and Playback what had happened for an investigation and this was all going to",
    "start": "443240",
    "end": "448960"
  },
  {
    "text": "be done in net and I realized this was this was actually the perfect use case for n audio because um although in my",
    "start": "448960",
    "end": "456440"
  },
  {
    "text": "mind n audio was all about writing music apps because that's kind of what I'm interested in um this is a voice",
    "start": "456440",
    "end": "462879"
  },
  {
    "text": "application but actually many of the things that it needed the same kind of things that I was needing to make um",
    "start": "462879",
    "end": "469960"
  },
  {
    "text": "music applications so it could do so I volunteered and I said let me be the one who writes the code the audio mixing",
    "start": "469960",
    "end": "477159"
  },
  {
    "text": "engine for this application so I implemented things like variable speed playback some basic effects like",
    "start": "477159",
    "end": "482759"
  },
  {
    "text": "automatic game control so if someone's talking too quietly you amplify them had",
    "start": "482759",
    "end": "488080"
  },
  {
    "text": "to deal with things like live streaming so that you're playing audio while it's still being downloaded and sometimes you",
    "start": "488080",
    "end": "493400"
  },
  {
    "text": "have to buffer and and stop um we also had to do audio and video synchronization I don't think anyone's",
    "start": "493400",
    "end": "499479"
  },
  {
    "text": "ever tried to synchronize videos it's really horrible um because if You' got two video players and you say jump to",
    "start": "499479",
    "end": "505599"
  },
  {
    "text": "this time they won't actually jump to the time you've asked they'll go go somewhere rough close and now now",
    "start": "505599",
    "end": "511280"
  },
  {
    "text": "they're out of sync and you got to try and get back in whereas with audio it's actually a little bit easier if you've",
    "start": "511280",
    "end": "516640"
  },
  {
    "text": "got a few bits of audio you don't individually play each bit of audio what you do is you mix it together before you",
    "start": "516640",
    "end": "523919"
  },
  {
    "text": "give it to the sound card and that means that you can always stay in sync and wherever you jump to you will never",
    "start": "523919",
    "end": "529959"
  },
  {
    "text": "drift out of sync from the previous times you played it um and this thing had a mixing engine",
    "start": "529959",
    "end": "536600"
  },
  {
    "text": "to do just that it was a 32-bit floating point mixing engine again any of you who are familiar with um audio production",
    "start": "536600",
    "end": "544279"
  },
  {
    "text": "will know that you typically use 32-bit or use floating Point um samples to do",
    "start": "544279",
    "end": "550680"
  },
  {
    "text": "audio manipulation you want to get out of the integer world but the sample rate",
    "start": "550680",
    "end": "556720"
  },
  {
    "text": "um was a lot lower than you might expect if you know anything about music production sample rate was 16 khz and",
    "start": "556720",
    "end": "563079"
  },
  {
    "text": "that's because for voice applications um the human voice is perfectly intelligible at quite low um example",
    "start": "563079",
    "end": "570440"
  },
  {
    "text": "rates so I worked away on this um I also had to do things like um visualization",
    "start": "570440",
    "end": "577360"
  },
  {
    "text": "of waveforms so some of that is also open source um on the internet of drawing waveforms and doing um Spectrum",
    "start": "577360",
    "end": "584399"
  },
  {
    "text": "analysis that kind of thing and probably the most interesting thing that this application was used for was there was a",
    "start": "584399",
    "end": "590600"
  },
  {
    "text": "big um incident where a plane took off and hit a flock of gulls um and the pilot",
    "start": "590600",
    "end": "598360"
  },
  {
    "text": "made the decision that he couldn't get back to the airport and he needed to land on the river and they did a big",
    "start": "598360",
    "end": "603959"
  },
  {
    "text": "investigation to piece together everything that had been said on air traffic control and I believe this",
    "start": "603959",
    "end": "609279"
  },
  {
    "text": "application was used um for them to listen back and reconstruct what happened and it's uh been turned into a",
    "start": "609279",
    "end": "615560"
  },
  {
    "text": "movie as you can see um now to rewind a little bit um how",
    "start": "615560",
    "end": "622320"
  },
  {
    "text": "many of you have read your employment contract oh my well well done a few of you quite boring probably somewhere in",
    "start": "622320",
    "end": "629000"
  },
  {
    "text": "your contract it says any code that you write while you're employed by us belongs to the company and so I realized",
    "start": "629000",
    "end": "636440"
  },
  {
    "text": "this could be a problem if I just took all my an audio code that I've been doing in my spare time and just stuck it",
    "start": "636440",
    "end": "641480"
  },
  {
    "text": "in a commercial code base I could get into a weird situation so I thought right n audio um at this point although",
    "start": "641480",
    "end": "649079"
  },
  {
    "text": "in my mind it was an open source project what that meant was I had a page on Source Forge anyone remember Source",
    "start": "649079",
    "end": "654200"
  },
  {
    "text": "Forge and I couldn't work out how to use their Version Control so I just occasionally put a zip file with a dll",
    "start": "654200",
    "end": "661120"
  },
  {
    "text": "in it up on there and I thought it need n AIO needs to be a proper open source project and fortunately Microsoft had",
    "start": "661120",
    "end": "667320"
  },
  {
    "text": "just decided they were going to make their own open- source um hosting website called coplex anyone remember",
    "start": "667320",
    "end": "674240"
  },
  {
    "text": "coplex um and this was much better because it was um an open source site",
    "start": "674240",
    "end": "679920"
  },
  {
    "text": "that Windows programmers actually knew how to use so that was brilliant I got my code on coplex and I also needed to",
    "start": "679920",
    "end": "685279"
  },
  {
    "text": "choose a license and Microsoft as they I want to do decided that none of the",
    "start": "685279",
    "end": "690399"
  },
  {
    "text": "existing open source licenses were any good and that they had to invent their own um so they invented their own",
    "start": "690399",
    "end": "696680"
  },
  {
    "text": "Microsoft licenses and I chose the Microsoft public license which is a commercial friendly open source license",
    "start": "696680",
    "end": "704800"
  },
  {
    "text": "so it meant that the N audio code you can use it in a closed Source um application if you need to um I've",
    "start": "704800",
    "end": "712320"
  },
  {
    "text": "actually backed out of that now and it's well not backed out of it being used in close close Source but I'm using MIT MIT",
    "start": "712320",
    "end": "718760"
  },
  {
    "text": "because nobody knows what those Microsoft licenses actually",
    "start": "718760",
    "end": "723959"
  },
  {
    "text": "mean um so let's shift gears now and let's talk a little bit about some of",
    "start": "724079",
    "end": "729680"
  },
  {
    "text": "the challenges that I encountered when trying to implement audio code in net",
    "start": "729680",
    "end": "736040"
  },
  {
    "text": "and the first big challenge is um P invoke I had to do a lot of what's",
    "start": "736040",
    "end": "741360"
  },
  {
    "text": "called platform invoke to call all the windows apis there's hundreds of Windows apis and the way you do this is",
    "start": "741360",
    "end": "749240"
  },
  {
    "text": "basically you get the C++ headers header definitions of every method that you want to convert and then you have to",
    "start": "749240",
    "end": "756560"
  },
  {
    "text": "work out how to convert it into a signature so for example um in the Windows audio OPI there's a method",
    "start": "756560",
    "end": "763320"
  },
  {
    "text": "called waveing get devc caps and that is a method to ask your recording device",
    "start": "763320",
    "end": "769000"
  },
  {
    "text": "what capabilities have you got and this is in the win mm dll which is part of",
    "start": "769000",
    "end": "774800"
  },
  {
    "text": "windows so you you decorate it with a dll import attribute you say what dll",
    "start": "774800",
    "end": "779920"
  },
  {
    "text": "it's in um so you can do this for any dll it doesn't have to be part of Windows and you mark your method as",
    "start": "779920",
    "end": "787199"
  },
  {
    "text": "static xter and then you have to go through every parameter of that method and work",
    "start": "787199",
    "end": "793000"
  },
  {
    "text": "out what the equivalent um net type would be and that actually can be quite",
    "start": "793000",
    "end": "799000"
  },
  {
    "text": "challenging because the C the C++ programmers love their hash defines and so you have to often follow a chain of",
    "start": "799000",
    "end": "805160"
  },
  {
    "text": "hash defines to work out what what actually is a w pram or a dword or whatever and so after a while you get to",
    "start": "805160",
    "end": "812760"
  },
  {
    "text": "learn a dword means it's four bytes so I can use an INT um you know a word is two",
    "start": "812760",
    "end": "819800"
  },
  {
    "text": "bytes so I can use a short uh one of the mistakes I actually made was um when I",
    "start": "819800",
    "end": "826199"
  },
  {
    "text": "was doing this it was in the world of 32-bit operating systems and so a pointer and a dword were the same size",
    "start": "826199",
    "end": "835279"
  },
  {
    "text": "and so often I just used INT in the method signatures however when we went to",
    "start": "835279",
    "end": "841199"
  },
  {
    "text": "64bits pointers are no longer 32 bits long they're 64 so I had to use int",
    "start": "841199",
    "end": "846759"
  },
  {
    "text": "pointer um everywhere and fix that all up so you map all of these parameter",
    "start": "846759",
    "end": "852639"
  },
  {
    "text": "types but also C++ programmers love their structs loads of methods have got",
    "start": "852639",
    "end": "858600"
  },
  {
    "text": "um structures and so this method um has an out parameter of wave in caps too so",
    "start": "858600",
    "end": "865079"
  },
  {
    "text": "in other words when I call this method I'm going to give it a memory location and this non. net code is going to write",
    "start": "865079",
    "end": "872279"
  },
  {
    "text": "into that memory location so we need to define the layout and so you have to do all of this for every structure as well",
    "start": "872279",
    "end": "879040"
  },
  {
    "text": "you can actually doesn't have to be a c struct it can be a class it works just as well you have to mark it with the",
    "start": "879040",
    "end": "885279"
  },
  {
    "text": "struct layout and you have to say that it's layout kind sequential and what",
    "start": "885279",
    "end": "890519"
  },
  {
    "text": "that's basically telling net is you don't have freedom about where you stick these things in memory can't move it",
    "start": "890519",
    "end": "896279"
  },
  {
    "text": "around to be more efficient because something else is EXP expecting the memory layout to be",
    "start": "896279",
    "end": "901920"
  },
  {
    "text": "exactly like this um another thing that you'll know if you've done any C or C++ programming",
    "start": "901920",
    "end": "908720"
  },
  {
    "text": "is that there are many ways to pass strings around you can pass pointers to a string or your structure can just have",
    "start": "908720",
    "end": "914160"
  },
  {
    "text": "an array of memory that may or may not be null terminated and it might be",
    "start": "914160",
    "end": "920279"
  },
  {
    "text": "single bite per character or it might be white wide characters and so whenever you have a string you use this martial",
    "start": "920279",
    "end": "926800"
  },
  {
    "text": "as to say what kind of string marshalling am I make making use",
    "start": "926800",
    "end": "932560"
  },
  {
    "text": "of so I I had to do a lot of this many hours um many getting it wrong and",
    "start": "932560",
    "end": "939040"
  },
  {
    "text": "crashing my uh probably Windows XP or whatever it was back then I was using",
    "start": "939040",
    "end": "947240"
  },
  {
    "text": "um the next challenge I want to talk about though is garbage collection and",
    "start": "947240",
    "end": "953360"
  },
  {
    "text": "in one sense the um the garbage collector in net is really great it's actually one of the points of the",
    "start": "953360",
    "end": "959639"
  },
  {
    "text": "language um I've mostly got nothing bad to say about it it uses a very intelligent algorithm called the",
    "start": "959639",
    "end": "965440"
  },
  {
    "text": "generational Mark and sweep algorithm and basically what happens in net with",
    "start": "965440",
    "end": "971120"
  },
  {
    "text": "garbage collection is your program is running away and running along as normal and at some point not under your control",
    "start": "971120",
    "end": "980279"
  },
  {
    "text": "net will say you're using too much memory I'm going to do a garbage collection and at that point every",
    "start": "980279",
    "end": "985920"
  },
  {
    "text": "single one of your threads stops nothing in your appli at all is running and then it does a bit of a look around it sees",
    "start": "985920",
    "end": "993079"
  },
  {
    "text": "of all the memory that's been allocated is any of it not in use anymore and it frees that up it doesn't necessarily",
    "start": "993079",
    "end": "999120"
  },
  {
    "text": "have to free all of it up sometimes it just does a little bit for performance reasons and then it's also allowed to",
    "start": "999120",
    "end": "1005120"
  },
  {
    "text": "move stuff around so after it's freed up some memory if it wants to it can do a bit like a defrag and just sort of move",
    "start": "1005120",
    "end": "1012440"
  },
  {
    "text": "everything together and this is like I say on the whole brilliant works really well",
    "start": "1012440",
    "end": "1019240"
  },
  {
    "text": "doesn't cause any problems but for audio programming it causes two very big",
    "start": "1019240",
    "end": "1024760"
  },
  {
    "text": "problems or it can cause two big problems the first problem is that anytime you're pausing it interferes",
    "start": "1024760",
    "end": "1031839"
  },
  {
    "text": "with your ability to write low latency code and so what do I mean by low latency well imagine I've got my midi",
    "start": "1031839",
    "end": "1038480"
  },
  {
    "text": "keyboard and I'm making a synthesizer and so I want when I press my key on the keyboard I want to immediately hear the",
    "start": "1038480",
    "end": "1045480"
  },
  {
    "text": "sound I don't want to hear the sound um half a second later because that'd be",
    "start": "1045480",
    "end": "1050720"
  },
  {
    "text": "just un unplayable and so often you're talking about say 10 milliseconds",
    "start": "1050720",
    "end": "1056080"
  },
  {
    "text": "sometimes less is what you would like and so the way you achieve this is when you're playing audio you give the sound",
    "start": "1056080",
    "end": "1062640"
  },
  {
    "text": "cards 10 milliseconds of audio and while it's playing that 10 milliseconds of audio you're making the next 10",
    "start": "1062640",
    "end": "1069360"
  },
  {
    "text": "milliseconds of audio and so as long as you've got your next 10 milliseconds ready everything is fine if you miss",
    "start": "1069360",
    "end": "1076320"
  },
  {
    "text": "your chance to give that next 10 milliseconds what you'll hear in the audio is crackles and pops and that",
    "start": "1076320",
    "end": "1082799"
  },
  {
    "text": "doesn't sound good you certainly don't want that in a live context and so there is a big risk that if the garbage",
    "start": "1082799",
    "end": "1088360"
  },
  {
    "text": "collector jumps in in the middle of your 10 milliseconds and steals some of it hopefully not all of it but you now run",
    "start": "1088360",
    "end": "1095320"
  },
  {
    "text": "the risk of a Dropout so that's the first big problem the second problem is the compaction problem because we've got",
    "start": "1095320",
    "end": "1102320"
  },
  {
    "text": "this mixture of net code and native code if I've given native code a pointer to a",
    "start": "1102320",
    "end": "1108320"
  },
  {
    "text": "b and say you know please soundcard write the audio that you're recording into this bite array and then the",
    "start": "1108320",
    "end": "1114360"
  },
  {
    "text": "garbage collector just moves it somewhere else you will crash your computer which I did uh many times when",
    "start": "1114360",
    "end": "1120120"
  },
  {
    "text": "I was initially writing all of this so what are the solutions",
    "start": "1120120",
    "end": "1125600"
  },
  {
    "text": "well there's there's no solution to the garbage collector running other than",
    "start": "1125600",
    "end": "1131440"
  },
  {
    "text": "writing allocation free code so not actually um giving the garbage collector",
    "start": "1131440",
    "end": "1136520"
  },
  {
    "text": "anything that it needs to do and in one sense it's not that hard to do with um audio programming because you can",
    "start": "1136520",
    "end": "1143080"
  },
  {
    "text": "pre-allocate your buffers so I can make two 10 millisecond buffers of audio and I can give one to the sound card while",
    "start": "1143080",
    "end": "1149240"
  },
  {
    "text": "I'm filling the other and when the sound card's finished that one I just start filling that one up again rather than keeping on um allocating new memory now",
    "start": "1149240",
    "end": "1157240"
  },
  {
    "text": "unfortunately your audio code might not be the only code if you're' running a Windows forms or WPF application then",
    "start": "1157240",
    "end": "1163000"
  },
  {
    "text": "that's allocating memory all over the place and the garbage collector will run at some point",
    "start": "1163000",
    "end": "1170520"
  },
  {
    "text": "um you can also pin um objects so you can tell the garbage collector you're not allowed to move this or you can say",
    "start": "1170520",
    "end": "1178200"
  },
  {
    "text": "actually I'm not going to ask net for this memory I'm going to ask the operating system and so the operating system gives me some memory and then",
    "start": "1178200",
    "end": "1184159"
  },
  {
    "text": "that's not going to move anywhere um so just to show you um how you do that um",
    "start": "1184159",
    "end": "1190760"
  },
  {
    "text": "in cop there are two very unused keywords or rarely used keywords unsafe and fixed um don't if any of you have",
    "start": "1190760",
    "end": "1197960"
  },
  {
    "text": "used them the unsafe keyword I think does a very good job of scaring most programmers off using it but if you mark",
    "start": "1197960",
    "end": "1204400"
  },
  {
    "text": "your method as unsafe then you can get a c style pointer to a bite array and in inside a",
    "start": "1204400",
    "end": "1213159"
  },
  {
    "text": "what's called a fixed block and in that fix block it is guaranteed that the garbage collector is not going to move",
    "start": "1213159",
    "end": "1219200"
  },
  {
    "text": "stuff around in memory um however you can't always be in a fixed block um so",
    "start": "1219200",
    "end": "1225760"
  },
  {
    "text": "sometimes you need to use the GC handle so you can say GC handle Alec and you",
    "start": "1225760",
    "end": "1231480"
  },
  {
    "text": "tell it give me a pinned um handle to this object and then you can get the uh",
    "start": "1231480",
    "end": "1237320"
  },
  {
    "text": "pointer to it and then you can give that to the unmanaged code and you can free the handle when you're when you're done",
    "start": "1237320",
    "end": "1242679"
  },
  {
    "text": "with it um if you want to use native memory",
    "start": "1242679",
    "end": "1247799"
  },
  {
    "text": "there is um in the Marshall classes a number of useful things including Alec H",
    "start": "1247799",
    "end": "1252919"
  },
  {
    "text": "Global so you can just say operating system give me a megabyte of memory and then you can get poed to it but now",
    "start": "1252919",
    "end": "1259080"
  },
  {
    "text": "you've got the problem like if I've got a C structure how do I get copy the",
    "start": "1259080",
    "end": "1264159"
  },
  {
    "text": "contents of that structure to a native point or vice versa so you have Marshall structure to pointer and the opposite",
    "start": "1264159",
    "end": "1271400"
  },
  {
    "text": "way around Marshall pointer to structure to copy memory backwards and",
    "start": "1271400",
    "end": "1278679"
  },
  {
    "text": "forwards one of the other big challenges I faced was making a decision between",
    "start": "1280279",
    "end": "1285760"
  },
  {
    "text": "porting algorithms um and so by algorithms I'm talking about things like",
    "start": "1285760",
    "end": "1291120"
  },
  {
    "text": "Digital Signal processing maybe effects resampling or fast FIA transforms that",
    "start": "1291120",
    "end": "1296840"
  },
  {
    "text": "kind of thing or just doing interrupt wrappers to Native dlls that have",
    "start": "1296840",
    "end": "1302039"
  },
  {
    "text": "already got them and actually a codex is of course one of the big examples here",
    "start": "1302039",
    "end": "1307320"
  },
  {
    "text": "where you might have to make this decision and both have got advantages and disadvantages so one of the big",
    "start": "1307320",
    "end": "1315799"
  },
  {
    "text": "advantages of interrupt to ative code if I've got a dll that's got a codec implementation it's going to be a lot",
    "start": "1315799",
    "end": "1322520"
  },
  {
    "text": "less work for me to just write P invoke rappers to call that code that dll than try to Port the entire codec into um",
    "start": "1322520",
    "end": "1331960"
  },
  {
    "text": "C in theory I'm not sure this is necessarily has to be true but in theory ought to run faster because that dll has",
    "start": "1331960",
    "end": "1338240"
  },
  {
    "text": "been um well optimized and um compiled with all the necessary Flags to run as",
    "start": "1338240",
    "end": "1343679"
  },
  {
    "text": "fast as possible it's also much easier to keep up to date so if you",
    "start": "1343679",
    "end": "1349440"
  },
  {
    "text": "if you've ever ported an algorithm from one language to another and then the next week it's like surprise is a new",
    "start": "1349440",
    "end": "1355159"
  },
  {
    "text": "version of the original code base now you've got to go back and do all the diffs and work out what I have to change",
    "start": "1355159",
    "end": "1361039"
  },
  {
    "text": "in my ported version whereas with P invoke hopefully it's just a case of dropping in a new version of the",
    "start": "1361039",
    "end": "1368279"
  },
  {
    "text": "dll also if any of you have done porting um code between one language to another",
    "start": "1368279",
    "end": "1375600"
  },
  {
    "text": "um it's very easy to make small mistakes and I found this particularly with bit manipulation like there's often really",
    "start": "1375600",
    "end": "1382640"
  },
  {
    "text": "subtle differences between languages where the same syntax doesn't actually do exactly the same thing um between the",
    "start": "1382640",
    "end": "1389919"
  },
  {
    "text": "two languages however the big downside to just saying well I'll just um do pinvoke",
    "start": "1389919",
    "end": "1397120"
  },
  {
    "text": "around a native library is that I now can't run everywhere I can only run on the systems where I've got that dll",
    "start": "1397120",
    "end": "1404640"
  },
  {
    "text": "available and so the advantage of porting to manage code is of course that it's portable and that you can run in",
    "start": "1404640",
    "end": "1411320"
  },
  {
    "text": "sandboxed environments now who remers silver light I loved silver light and I wanted to do audio in it but I couldn't",
    "start": "1411320",
    "end": "1418520"
  },
  {
    "text": "use anything that had pinoke in it because it was a Sandbox it wouldn't let you do that and so that made me start to",
    "start": "1418520",
    "end": "1424760"
  },
  {
    "text": "want to try and convert some algorithms to C but also I've never used it but um",
    "start": "1424760",
    "end": "1430400"
  },
  {
    "text": "Unity is a C programming language runs on different platforms and people are like oh can I use an audio and the",
    "start": "1430400",
    "end": "1437799"
  },
  {
    "text": "answer is well yes yes you can use n audio but you can only use the bits that aren't calling Windows apis because",
    "start": "1437799",
    "end": "1442960"
  },
  {
    "text": "they're just not there on your target operating system um one of the examples of this",
    "start": "1442960",
    "end": "1450440"
  },
  {
    "text": "was resampling so resampling you may know that with audio every audio file",
    "start": "1450440",
    "end": "1455480"
  },
  {
    "text": "has a sample rate and sometimes the sample rate of your file isn't the sample rate um of the sound card and so",
    "start": "1455480",
    "end": "1462159"
  },
  {
    "text": "you need to change resample the audio um so that you can play it and also so you can mix it together with other files",
    "start": "1462159",
    "end": "1469799"
  },
  {
    "text": "and at first I thought oh I could probably do this myself you know how hard could it be um actually it turns",
    "start": "1469799",
    "end": "1475320"
  },
  {
    "text": "out that unless you've got some quite good mathematical and digital signal processing knowledge the resampler you",
    "start": "1475320",
    "end": "1481240"
  },
  {
    "text": "implement yourself will actually sound terrible um so I then started finding things I",
    "start": "1481240",
    "end": "1487760"
  },
  {
    "text": "could wrap and windows has no fewer than three apis um all horrible to to wrap um and I",
    "start": "1487760",
    "end": "1496200"
  },
  {
    "text": "ended up wrapping all three of these because different versions of Windows had different ones if you're on a server",
    "start": "1496200",
    "end": "1501440"
  },
  {
    "text": "Os or if you on a um Windows XP or something you could only access one or",
    "start": "1501440",
    "end": "1507159"
  },
  {
    "text": "one of these three um but even having done all three of those it still wasn't universally available everywhere that I",
    "start": "1507159",
    "end": "1513760"
  },
  {
    "text": "wanted to use it and so I thought well maybe I can find an open sourcery sampler and Port it to",
    "start": "1513760",
    "end": "1519799"
  },
  {
    "text": "C and one of the problems you run into is virtually all open source audio code",
    "start": "1519799",
    "end": "1525039"
  },
  {
    "text": "is licensed to GPL or lgpl which is not comp compatible with a closed Source",
    "start": "1525039",
    "end": "1530600"
  },
  {
    "text": "friendly license um so but eventually I found um company called cockos who make",
    "start": "1530600",
    "end": "1537760"
  },
  {
    "text": "the reaper digital audio workstation which is the one I use um they had a resampler Whose license look compatible",
    "start": "1537760",
    "end": "1544679"
  },
  {
    "text": "so I reached out to them and they were okay with me uh porting that so n audio has now got a fully managed um audio",
    "start": "1544679",
    "end": "1554000"
  },
  {
    "text": "resampler okay let me just check how we're doing for time I think we're doing okay um Windows apis now Windows has got",
    "start": "1554960",
    "end": "1562799"
  },
  {
    "text": "a number of ways of um providing audio functionality and I've ended up writing",
    "start": "1562799",
    "end": "1568760"
  },
  {
    "text": "rappers pretty much for all of them um I'm not going to talk about them all but just",
    "start": "1568760",
    "end": "1574440"
  },
  {
    "text": "briefly um the first one and the one that's been around the longest is Win mm",
    "start": "1574440",
    "end": "1579960"
  },
  {
    "text": "and this came out in 1991 it's still supported fully supported in Windows um",
    "start": "1579960",
    "end": "1585279"
  },
  {
    "text": "the multimedia API and the probably most the well-known uh apis in this are wave",
    "start": "1585279",
    "end": "1591679"
  },
  {
    "text": "in and wave out which allow you to record audio and play audio but there's a bunch of other things for dealing with",
    "start": "1591679",
    "end": "1597000"
  },
  {
    "text": "codex and M and dealing with your mixer and that kind of stuff",
    "start": "1597000",
    "end": "1602279"
  },
  {
    "text": "um unfortunately these have I'd call it high latency I've never really got below 50 milliseconds of latency with these",
    "start": "1602279",
    "end": "1611000"
  },
  {
    "text": "apis um one of the things that um this",
    "start": "1611000",
    "end": "1616240"
  },
  {
    "text": "API lets you do is when the sound card is finished playing audio it can tell you that it's finished playing audio so",
    "start": "1616240",
    "end": "1622960"
  },
  {
    "text": "that you need um so you can provide the next buffer of sound and it gives you a",
    "start": "1622960",
    "end": "1628480"
  },
  {
    "text": "choice of how it tells you and one of the choices was it can call a function I thought that's perfect I'll",
    "start": "1628480",
    "end": "1634799"
  },
  {
    "text": "give it the address of a fun function and it can call my function when it needs more audio um first of all I",
    "start": "1634799",
    "end": "1641080"
  },
  {
    "text": "realized you need to pin that function because if you don't it will move around and your app will crash but secondly I",
    "start": "1641080",
    "end": "1647480"
  },
  {
    "text": "found that you got kinds of horrible Deadlocks if you did the wrong thing in a callback from native code into managed",
    "start": "1647480",
    "end": "1653559"
  },
  {
    "text": "code um so the next option was you can get it to post a a Windows message to a",
    "start": "1653559",
    "end": "1659960"
  },
  {
    "text": "a Windows message pump and that works really well apart from it annoyed some users of n audio because it meant you",
    "start": "1659960",
    "end": "1666519"
  },
  {
    "text": "had to take a dependency on Windows forms you had to kind of have this fake hidden window somewhere that was",
    "start": "1666519",
    "end": "1672640"
  },
  {
    "text": "receiving uh messages um and so the third option which I wish I'd done from the beginning",
    "start": "1672640",
    "end": "1678600"
  },
  {
    "text": "um was you can just have a mutex and you can say it will set the mutex and you wait on it and then you provide the",
    "start": "1678600",
    "end": "1685840"
  },
  {
    "text": "audio and so that's the way I recommend you use it it's slightly weird weirdly named class in an audio called wave out",
    "start": "1685840",
    "end": "1692440"
  },
  {
    "text": "event but that means you're using the mutex uh for the",
    "start": "1692440",
    "end": "1697480"
  },
  {
    "text": "callbacks so a mutex is an operating system construct that basically says um",
    "start": "1697480",
    "end": "1704320"
  },
  {
    "text": "I'm I want to be able to block any other process um from doing anything until I",
    "start": "1704320",
    "end": "1709440"
  },
  {
    "text": "say I'm ready so one process can if you like hold lock the mutex and another",
    "start": "1709440",
    "end": "1714880"
  },
  {
    "text": "process can say I'm waiting for that mutex and when the first one says I'm finished then it signals the other one",
    "start": "1714880",
    "end": "1720960"
  },
  {
    "text": "so it's a way of writing it's a way of writing thread safe code but it can also be used for interprocess uh",
    "start": "1720960",
    "end": "1728919"
  },
  {
    "text": "Communications yes it's it's a lock essentially a lock is is doing that behind the scenes there's there's a lot",
    "start": "1728919",
    "end": "1735080"
  },
  {
    "text": "there's a lot of different types there semaphores and so on I don't know what the locks using um actually there's a",
    "start": "1735080",
    "end": "1741440"
  },
  {
    "text": "lot of locking in an audio because typically you have an audio thread and you have a gooey thread and um you've",
    "start": "1741440",
    "end": "1747480"
  },
  {
    "text": "got to be very careful um was zappi is an example of an API that is com based",
    "start": "1747480",
    "end": "1753960"
  },
  {
    "text": "and with com objects you've got to sometimes you can't call them on a different thread from the thread you",
    "start": "1753960",
    "end": "1759880"
  },
  {
    "text": "created them on and so there's a number of Hoops I had to jump through in an audio try and make it so that you did",
    "start": "1759880",
    "end": "1765840"
  },
  {
    "text": "you created the com object on the right thread to use it so was zappi um in 2007",
    "start": "1765840",
    "end": "1774559"
  },
  {
    "text": "Microsoft decided they were going to break everything and change everything with um Windows Vista and one of the",
    "start": "1774559",
    "end": "1781760"
  },
  {
    "text": "things they did was they completely wrote rewrote the Windows audium audio system",
    "start": "1781760",
    "end": "1787640"
  },
  {
    "text": "substack and so was wasapp is Windows audio subsystem API and actually in many",
    "start": "1787640",
    "end": "1794559"
  },
  {
    "text": "ways it's a much better API than the old one it gave you choice of exclusive or shared mode so exclusive means I'm the",
    "start": "1794559",
    "end": "1801240"
  },
  {
    "text": "only one that's allowed to talk to the sound card um whereas shared mode is you're sharing it with other",
    "start": "1801240",
    "end": "1807039"
  },
  {
    "text": "applications and so in exclusive mode theoretically you can get much lower latency",
    "start": "1807039",
    "end": "1813200"
  },
  {
    "text": "um one of the real annoyances was in its initial uh implementation you had no",
    "start": "1813200",
    "end": "1820000"
  },
  {
    "text": "option but to give it um audio in the sample rate that it was already playing",
    "start": "1820000",
    "end": "1826159"
  },
  {
    "text": "at so if you had just played a CD you had to give it 44.1 khz if you just",
    "start": "1826159",
    "end": "1831640"
  },
  {
    "text": "played a DVD you had to give it 48 khz and that was part of the reason why I",
    "start": "1831640",
    "end": "1836679"
  },
  {
    "text": "needed a resampler so that I could convert your audio to what was appy wanted it in um they have actually um",
    "start": "1836679",
    "end": "1845799"
  },
  {
    "text": "changed that now so you can tell was zappy I'm giving you audio that's 16 khz",
    "start": "1845799",
    "end": "1851679"
  },
  {
    "text": "integer um and you just convert it for me which is brilliant so that's now Inn audio uh another great feature that was",
    "start": "1851679",
    "end": "1858639"
  },
  {
    "text": "zappi had is loot back capture so you could finally record the sound that your",
    "start": "1858639",
    "end": "1864480"
  },
  {
    "text": "um your uh operating system is playing you can actually with waspp although",
    "start": "1864480",
    "end": "1870120"
  },
  {
    "text": "I've not got this into n audio yet because it would be a breaking change to the API you can actually record just the",
    "start": "1870120",
    "end": "1875840"
  },
  {
    "text": "output from a single application now on Windows um and so actually waspp is",
    "start": "1875840",
    "end": "1883039"
  },
  {
    "text": "probably the best thing to use now I would say I recommend it if you're doing new applications you want to play audio Windows use wasapp it is better than win",
    "start": "1883039",
    "end": "1890880"
  },
  {
    "text": "mm finally um but then in 2016 Microsoft",
    "start": "1890880",
    "end": "1896880"
  },
  {
    "text": "introduced another um API as part of the Universal Windows application this was called um",
    "start": "1896880",
    "end": "1903080"
  },
  {
    "text": "audiograph and I was very excited about this one because this was the first one that was callable immediately from net I",
    "start": "1903080",
    "end": "1910080"
  },
  {
    "text": "didn't have to do any interrupt rappers for it um you could call all of the apis and it was actually a really nicely",
    "start": "1910080",
    "end": "1916480"
  },
  {
    "text": "designed API it was a graph based API so you had the concept of input nodes",
    "start": "1916480",
    "end": "1922440"
  },
  {
    "text": "output nodes and submix nodes and so you built together a graph which we'll talk about in a minute and so I thought",
    "start": "1922440",
    "end": "1928919"
  },
  {
    "text": "finally this is it n AIO or large parts of n audio don't need to exist anymore because Microsoft have made what we need",
    "start": "1928919",
    "end": "1936279"
  },
  {
    "text": "however it has one gigantic gaping hole and that is you cannot make a node that",
    "start": "1936279",
    "end": "1942639"
  },
  {
    "text": "transforms audio or generates audio unless you make a completely separate project that's com",
    "start": "1942639",
    "end": "1948720"
  },
  {
    "text": "object and you do it in that project and you have to use lots of unsafe code and fixed code to do that you register the",
    "start": "1948720",
    "end": "1955960"
  },
  {
    "text": "com object in Windows and then your application loads that and so it's very",
    "start": "1955960",
    "end": "1962240"
  },
  {
    "text": "frustrating but I think hardly anybody I don't know anyone who who uses that API um apart from maybe very simple",
    "start": "1962240",
    "end": "1970120"
  },
  {
    "text": "applications so the best um Windows audio API is not made by Microsoft it's",
    "start": "1970120",
    "end": "1977960"
  },
  {
    "text": "uh have any of you heard of AIO any of you who do music production will know about this",
    "start": "1977960",
    "end": "1983320"
  },
  {
    "text": "um is this was made by Steinberg in 1997 and basically it's ideal for low latency",
    "start": "1983320",
    "end": "1990360"
  },
  {
    "text": "that's what it's intended for people who are doing recording and Playback so if you bought a nice sound card something like external USB one like I've got here",
    "start": "1990360",
    "end": "1997200"
  },
  {
    "text": "that will have AO drivers and one of the really nice things about the way it",
    "start": "1997200",
    "end": "2002360"
  },
  {
    "text": "works is it uses this buffer um swap for record and Playback so Windows thinks of",
    "start": "2002360",
    "end": "2007440"
  },
  {
    "text": "record and Playback is two completely separate things um whereas AIO you do",
    "start": "2007440",
    "end": "2013559"
  },
  {
    "text": "both together and so when you get the Callback it's give me more audio to play and here's what I just recorded and the",
    "start": "2013559",
    "end": "2020000"
  },
  {
    "text": "great thing about that from a music production perspective is that you want to perfectly synchronized if I'm",
    "start": "2020000",
    "end": "2025279"
  },
  {
    "text": "listening to the backing track and playing my guitar I want what's recorded to be perfectly synchronized to what I",
    "start": "2025279",
    "end": "2031200"
  },
  {
    "text": "was hearing and AIO makes that um much simpler and AO is also a good example of",
    "start": "2031200",
    "end": "2037960"
  },
  {
    "text": "the benefits of being an open source project because I don't think I would have known enough to do the pinvoke",
    "start": "2037960",
    "end": "2043519"
  },
  {
    "text": "rappers for AO but somebody contributed um a really great set of AO rappers and",
    "start": "2043519",
    "end": "2049960"
  },
  {
    "text": "it basically means now anyone who's doing net can use n audio um for uh",
    "start": "2049960",
    "end": "2055480"
  },
  {
    "text": "using AIO and doing some quite low-level faster audio",
    "start": "2055480",
    "end": "2061158"
  },
  {
    "text": "programming okay the next challenge I want to talk about is designing audio apis what makes a good audio API and",
    "start": "2061159",
    "end": "2068638"
  },
  {
    "text": "I've kind of hinted at this already when we talked about audio graph in um audio",
    "start": "2068639",
    "end": "2074398"
  },
  {
    "text": "it's very common for you to construct what you might call a signal chain so guitarists love this they plug their",
    "start": "2074399",
    "end": "2080638"
  },
  {
    "text": "guitar into a pedal and that goes into another pedal and so on all the way to the amplifier and basically n audio copies",
    "start": "2080639",
    "end": "2089040"
  },
  {
    "text": "this idea you're building up a a graph or a signal chain of audio and of course",
    "start": "2089040",
    "end": "2094398"
  },
  {
    "text": "it can be a bit more complicated than that you might have multiple things producing sound so you might have the",
    "start": "2094399",
    "end": "2099400"
  },
  {
    "text": "microphone is recording and you're playing a file and you might be transforming those sounds in different",
    "start": "2099400",
    "end": "2104560"
  },
  {
    "text": "ways I might put a Reverb effect on the microphone but I might also want to do visualization as the audio is coming",
    "start": "2104560",
    "end": "2111000"
  },
  {
    "text": "through I might want to show a volume meter or a waveform and then I want to mix the audio together which would mean I need",
    "start": "2111000",
    "end": "2117040"
  },
  {
    "text": "to get into the same sample rate if it wasn't already and then I might actually send it to multiple places I might play",
    "start": "2117040",
    "end": "2122800"
  },
  {
    "text": "it out the sound card and save it to a file and so any audio has got a couple",
    "start": "2122800",
    "end": "2128760"
  },
  {
    "text": "of interfaces that U support this the two most important ones and the lowest",
    "start": "2128760",
    "end": "2134320"
  },
  {
    "text": "level are the wave provider and the sample provider um The Wave provider basically is all it's saying is I'm",
    "start": "2134320",
    "end": "2140960"
  },
  {
    "text": "something that can give you audio and so it has a wave format property that tells you this is the sample rate is it mono",
    "start": "2140960",
    "end": "2148520"
  },
  {
    "text": "or stereo how many bits is it might even be compressed and then a read method",
    "start": "2148520",
    "end": "2153920"
  },
  {
    "text": "which um if any of you have used streams will look very um familiar you're saying",
    "start": "2153920",
    "end": "2159560"
  },
  {
    "text": "I want to read some audio into my buffer and I want this many bites and it will tell me how many bites of audio it",
    "start": "2159560",
    "end": "2165839"
  },
  {
    "text": "read and this is great it's very flexible but if you're writing audio code it's very annoying because um what",
    "start": "2165839",
    "end": "2173920"
  },
  {
    "text": "you really want is samples you want access to the individual samples you don't want bites so there's also I sample provider",
    "start": "2173920",
    "end": "2182119"
  },
  {
    "text": "which is exactly the same thing but you're getting floating Point samples and so in N audio there's lots of helper",
    "start": "2182119",
    "end": "2187960"
  },
  {
    "text": "methods that try to get you to sample provider as quickly as possible so once you're at sample provider you can change",
    "start": "2187960",
    "end": "2193160"
  },
  {
    "text": "the volume you can mix things together you can visualize you can do fast through transforms whatever you want to",
    "start": "2193160",
    "end": "2199119"
  },
  {
    "text": "do with the audio samples however going from bite array to",
    "start": "2199119",
    "end": "2204800"
  },
  {
    "text": "float array is actually not as easy as you might think because if you declare a",
    "start": "2204800",
    "end": "2210520"
  },
  {
    "text": "bite array and then try and cast it to a float array that will not compile um so",
    "start": "2210520",
    "end": "2216440"
  },
  {
    "text": "what do you do if you've got B array that has got your audio in but you actually know that inside there are",
    "start": "2216440",
    "end": "2221880"
  },
  {
    "text": "floating Point samples well one option is the unsafe",
    "start": "2221880",
    "end": "2226920"
  },
  {
    "text": "and fixed keywords that I just talked about um so that will let you cast between you put it in a fixed block you",
    "start": "2226920",
    "end": "2233800"
  },
  {
    "text": "can then cast between a bite array and a float array however that wasn't great for n audio because then I would",
    "start": "2233800",
    "end": "2239760"
  },
  {
    "text": "basically Force unsafe code on everybody and lots of coders are not comfortable",
    "start": "2239760",
    "end": "2245640"
  },
  {
    "text": "working in that world couple of other options I just copy it okay I've got a bite array I'll have",
    "start": "2245640",
    "end": "2252000"
  },
  {
    "text": "another float array and I'll just copy copy stuff into the float array and there are some helpers that will do that",
    "start": "2252000",
    "end": "2257200"
  },
  {
    "text": "buffer. block copy will copy everything in a bite array into a float array if you want but of course it's an",
    "start": "2257200",
    "end": "2263280"
  },
  {
    "text": "unnecessary copy and so I was kind of stuck and then the same guy actually",
    "start": "2263280",
    "end": "2269200"
  },
  {
    "text": "that contributed the AO rappers gave me this almost mad genius feature called",
    "start": "2269200",
    "end": "2277040"
  },
  {
    "text": "The Wave buffer and what wave buffer does is it takes advantage of a capability in um C of dealing with",
    "start": "2277040",
    "end": "2287359"
  },
  {
    "text": "unions and in C++ a union is basically a structure that says at this memory location there might be this there might",
    "start": "2287359",
    "end": "2294240"
  },
  {
    "text": "be that or there might be something else and because you need to be able to call unions or methods with unions in C the",
    "start": "2294240",
    "end": "2303560"
  },
  {
    "text": "struct layout layout kind explicit lets you do that so what can do is I can say at memory address four there might be a",
    "start": "2303560",
    "end": "2310680"
  },
  {
    "text": "bite array there might be a float array there might be a short array and what that means you can do is",
    "start": "2310680",
    "end": "2316760"
  },
  {
    "text": "you can write into one and read out of the other and when I first saw this I thought that is madness that will never",
    "start": "2316760",
    "end": "2322960"
  },
  {
    "text": "work it works absolutely perfectly it's worked for 20 years across every version of net the only weird thing is don't try",
    "start": "2322960",
    "end": "2330160"
  },
  {
    "text": "asking the float buffer what IT sizes because it's confused about what IT sizes but you can read write into one",
    "start": "2330160",
    "end": "2336280"
  },
  {
    "text": "and read out of the other so that gave us casting however if only there was a",
    "start": "2336280",
    "end": "2341839"
  },
  {
    "text": "feature in net called span of tea wouldn't that be lovely and of course that came in net 3.1 um so had an audio",
    "start": "2341839",
    "end": "2351839"
  },
  {
    "text": "been written many years later I would have used span of bite and span of float",
    "start": "2351839",
    "end": "2357800"
  },
  {
    "text": "and span has got for those of you who are not familiar with it it's got a number of benefits one benefit is a span",
    "start": "2357800",
    "end": "2363560"
  },
  {
    "text": "can be backed by managed or unmanaged memory it means you don't have to care whether you asked the operating system",
    "start": "2363560",
    "end": "2369079"
  },
  {
    "text": "for the memory or you asked net which is fantastic span also knows how long it is",
    "start": "2369079",
    "end": "2374720"
  },
  {
    "text": "so you don't need the length parameter anymore and spans can be sliced so you",
    "start": "2374720",
    "end": "2380280"
  },
  {
    "text": "can just say I'm just show me this window if you like of the memory so you don't need that offset parameter either",
    "start": "2380280",
    "end": "2385880"
  },
  {
    "text": "so it just makes everything uh a lot simpler and of course as I just mentioned they can be cast so you give",
    "start": "2385880",
    "end": "2392359"
  },
  {
    "text": "me a span of bites I can say actually I know there's floating Point numbers in there so will use memory marshall. cast",
    "start": "2392359",
    "end": "2399640"
  },
  {
    "text": "and turn my span of bites into a span of floats read in or out um really super",
    "start": "2399640",
    "end": "2405359"
  },
  {
    "text": "convenient and I actually ma made a branch of n audio that converted everything to span um it's in the GitHub",
    "start": "2405359",
    "end": "2413079"
  },
  {
    "text": "repo and it kind of got stalled partly because the VB people complained that you can't use spans in vb.net which",
    "start": "2413079",
    "end": "2420400"
  },
  {
    "text": "surprised me because I thought you could do anything that you can do in C um but also um it's quite a big change to n",
    "start": "2420400",
    "end": "2427880"
  },
  {
    "text": "audio and so I'd either need to support old and new methods or write lots of adapters or lots of documentation so",
    "start": "2427880",
    "end": "2433960"
  },
  {
    "text": "it's kind of parked unfortunately um some other great things",
    "start": "2433960",
    "end": "2439880"
  },
  {
    "text": "that have happened I I call this recent by recent I mean things that have happened since um n audio began 20 years",
    "start": "2439880",
    "end": "2447119"
  },
  {
    "text": "ago so one of the greatest things was net core coming along now just.net",
    "start": "2447119",
    "end": "2453040"
  },
  {
    "text": "suddenly n AIO becomes crossplatform however as I have to keep pointing out",
    "start": "2453040",
    "end": "2458359"
  },
  {
    "text": "and GitHub issues just because it's crossplatform doesn't mean that on Linux windows apis will appear um so you can't",
    "start": "2458359",
    "end": "2466400"
  },
  {
    "text": "use the bits of n audio that call um Windows apis if you're not on Windows but I love the focus on high",
    "start": "2466400",
    "end": "2473480"
  },
  {
    "text": "performance that has gone into it that's really important obviously for any audio applications that are real time um",
    "start": "2473480",
    "end": "2479680"
  },
  {
    "text": "there's also been a lot more low-level stuff added to C you can better support for function pointers better control",
    "start": "2479680",
    "end": "2486359"
  },
  {
    "text": "over the actual um I instructions that you compile um",
    "start": "2486359",
    "end": "2491599"
  },
  {
    "text": "which is useful for some com based things and there's even now code generation for pinvoke to make pinoke",
    "start": "2491599",
    "end": "2499000"
  },
  {
    "text": "much faster um again something probably if I was redoing an audio I would be um",
    "start": "2499000",
    "end": "2505280"
  },
  {
    "text": "looking to do looking to make use of so can you use uhet for n audio",
    "start": "2505280",
    "end": "2512720"
  },
  {
    "text": "hopefully I've persuaded you the answer is that yes you can it's not NE perfect",
    "start": "2512720",
    "end": "2517920"
  },
  {
    "text": "but there's an awful lot you can achieve um in net I've built the N audio um",
    "start": "2517920",
    "end": "2524680"
  },
  {
    "text": "toolkit I've got a fully managed MP3 decoder in net um all of this is open",
    "start": "2524680",
    "end": "2531400"
  },
  {
    "text": "source I even made an application that could transform your voice in real time",
    "start": "2531400",
    "end": "2536440"
  },
  {
    "text": "um over Skype so it intercepted the audio and put silly robot effects on sadly that doesn't work anymore because",
    "start": "2536440",
    "end": "2543160"
  },
  {
    "text": "of a breaking API change um I made applications that converted midi drum",
    "start": "2543160",
    "end": "2549079"
  },
  {
    "text": "grooves from one drum sampler to another um and I've actually used n audio in a",
    "start": "2549079",
    "end": "2554839"
  },
  {
    "text": "number of quite large commercial products um for all kinds particularly",
    "start": "2554839",
    "end": "2559880"
  },
  {
    "text": "telepan related and I know of a lot of companies that are using n audio in telephony relate and radio related um",
    "start": "2559880",
    "end": "2567680"
  },
  {
    "text": "use cases so there is a lot that can be done um with net um before we get onto a",
    "start": "2567680",
    "end": "2573599"
  },
  {
    "text": "demo because I've got a short demo um for us at the end um I wanted to give a little status",
    "start": "2573599",
    "end": "2580079"
  },
  {
    "text": "update on the audio project and I think this is actually an issue that we're",
    "start": "2580079",
    "end": "2585359"
  },
  {
    "text": "seeing a lot of in the open source world at the moment and that is the fact that many of the open source projects that we",
    "start": "2585359",
    "end": "2592680"
  },
  {
    "text": "um know and use were just started by enthusiasts like me in their spare time working with in their evenings just",
    "start": "2592680",
    "end": "2599520"
  },
  {
    "text": "having fun making stuff and sharing it with the world um and essentially you're",
    "start": "2599520",
    "end": "2604920"
  },
  {
    "text": "just kind of offering your efforts for free but over time um you know that was 20 years ago other things have happened",
    "start": "2604920",
    "end": "2611760"
  },
  {
    "text": "in life I've got children my time for working on it n audio has become uh",
    "start": "2611760",
    "end": "2617359"
  },
  {
    "text": "greatly limited and so essentially what I find myself I'm kind of maintaining n",
    "start": "2617359",
    "end": "2622880"
  },
  {
    "text": "AIO um I'm usually answering people's questions almost every day but in terms",
    "start": "2622880",
    "end": "2628280"
  },
  {
    "text": "of adding new features to it or doing sort of big changes like converting to span of tea that's really not happening",
    "start": "2628280",
    "end": "2635760"
  },
  {
    "text": "and so I'd say it's no longer under active development and so I am interested actually if anybody does want",
    "start": "2635760",
    "end": "2642040"
  },
  {
    "text": "to join the project and got enthusiasm for it maybe that's why you're here um I",
    "start": "2642040",
    "end": "2647480"
  },
  {
    "text": "am open to new maintainers um but unfortunately not a lot is happening in",
    "start": "2647480",
    "end": "2652640"
  },
  {
    "text": "terms of new features of n audio partly because I'm not using it in my day job anymore um that that helped a lot when I",
    "start": "2652640",
    "end": "2659040"
  },
  {
    "text": "was using in my day job it inspired me to add a lot new features okay so I've got some links",
    "start": "2659040",
    "end": "2665880"
  },
  {
    "text": "where you can find out more probably most relevant one is where n audio is on GitHub um but I thought we'd end with a",
    "start": "2665880",
    "end": "2673280"
  },
  {
    "text": "very short demo um so I just give you a moment to if you did want to take a",
    "start": "2673280",
    "end": "2679400"
  },
  {
    "text": "photo of that shouldn't be too hard to find on the internet anyway just with a search but we're going to jump into",
    "start": "2679400",
    "end": "2686319"
  },
  {
    "text": "visual studio and don't worry that you can't",
    "start": "2686319",
    "end": "2691559"
  },
  {
    "text": "see the code because we're not really looking at the code but this is a very simple application um that if I start it",
    "start": "2691559",
    "end": "2699680"
  },
  {
    "text": "up um so when I start this application up it's going to let me choose which sound",
    "start": "2702000",
    "end": "2708480"
  },
  {
    "text": "card I'm going to play sound out of I'm going to choose my focus right device",
    "start": "2708480",
    "end": "2714359"
  },
  {
    "text": "and what it's going to do it's going to scan for all midi devices and these little keyboards are called midi devices",
    "start": "2714359",
    "end": "2719559"
  },
  {
    "text": "midi is the protocol that tells you what notes you're pressing and it's going to listen out",
    "start": "2719559",
    "end": "2725480"
  },
  {
    "text": "for notes being pressed on the keyboard and then what it's going to do is when it hears a note it's going to use a syn",
    "start": "2725480",
    "end": "2731960"
  },
  {
    "text": "a software synthesizer all written in C to play the sound and it's going to use a file format called sound font which",
    "start": "2731960",
    "end": "2738880"
  },
  {
    "text": "essentially takes recordings of real instruments and tries to map them to notes on the keyboard so if I play some",
    "start": "2738880",
    "end": "2745000"
  },
  {
    "text": "notes as if this is working we will see it is playing the sounds I'm also",
    "start": "2745000",
    "end": "2751359"
  },
  {
    "text": "printing out the midi noteon events how hard they pressed each note if I press",
    "start": "2751359",
    "end": "2756800"
  },
  {
    "text": "the these pads um those pads are sending midi on",
    "start": "2756800",
    "end": "2762119"
  },
  {
    "text": "channel 10 which in MIDI means but um that's the drum channel so it's playing",
    "start": "2762119",
    "end": "2767440"
  },
  {
    "text": "drum sounds um and then the final thing is that um",
    "start": "2767440",
    "end": "2773160"
  },
  {
    "text": "and I didn't I didn't actually write this but somebody else wrote this a midi sequencer so a midi file essentially",
    "start": "2773160",
    "end": "2780920"
  },
  {
    "text": "records What notes you hit on the keyboard at what times you hit them and then you can then play that back so the",
    "start": "2780920",
    "end": "2788800"
  },
  {
    "text": "midi sequencer will then try to play back the same notes at the same times so I've got a key here and if I press this",
    "start": "2788800",
    "end": "2794440"
  },
  {
    "text": "it's going to load a midi file it's going to sequence it play it back",
    "start": "2794440",
    "end": "2799680"
  },
  {
    "text": "through the sound font and I think this would have actually blown my mind this demo when I first started in audio I",
    "start": "2799680",
    "end": "2805319"
  },
  {
    "text": "didn't believe that net would be able to do something like this in real time but um maybe this won't be impressive to you",
    "start": "2805319",
    "end": "2811880"
  },
  {
    "text": "but this is going to play a midi file if it works",
    "start": "2811880",
    "end": "2817660"
  },
  {
    "text": "[Music] okay",
    "start": "2817660",
    "end": "2824480"
  },
  {
    "text": "so that is that that is the end of my talk and I'm happy to take any questions",
    "start": "2824480",
    "end": "2830240"
  },
  {
    "text": "in the last few minutes",
    "start": "2830240",
    "end": "2833880"
  },
  {
    "text": "[Applause]",
    "start": "2836570",
    "end": "2839899"
  }
]