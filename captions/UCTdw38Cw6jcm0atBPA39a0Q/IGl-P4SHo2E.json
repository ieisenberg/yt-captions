[
  {
    "text": "good morning everyone oh my goodness what a morning welcome thank you so much",
    "start": "1500",
    "end": "7440"
  },
  {
    "text": "for coming to join me uh I can see some people standing at the front and I can see some some empty chairs in the first and second row if you're feeling bold",
    "start": "7440",
    "end": "13860"
  },
  {
    "text": "enough feeling brave enough you can uh come on down here but otherwise it's absolutely glorious and thank you so",
    "start": "13860",
    "end": "19680"
  },
  {
    "text": "much for uh filling up this room uh my name is Phil Nash uh it's an absolute pleasure to be speaking to you here at",
    "start": "19680",
    "end": "26340"
  },
  {
    "text": "NDC Oslo it's my first time NDC Oslo and I am excited to take us uh through a",
    "start": "26340",
    "end": "31920"
  },
  {
    "text": "whole bunch of problems with JavaScript today uh no problems with JavaScript problems with our JavaScript",
    "start": "31920",
    "end": "38100"
  },
  {
    "text": "um but we'll we'll get to that in a bit I'm a developer advocate for a company called Sona",
    "start": "38100",
    "end": "44340"
  },
  {
    "text": "um Sona does a bunch of products including sooner Cube and Cloud which allow you to uh statically and analyze",
    "start": "44340",
    "end": "51360"
  },
  {
    "text": "your code in your projects to help Write Clean and better code and then Sona lint which lives in your IDE to help you do",
    "start": "51360",
    "end": "57539"
  },
  {
    "text": "it as you're writing it uh we have a stand here uh we're out um where are we",
    "start": "57539",
    "end": "63059"
  },
  {
    "text": "yeah just just sort of over there in the expo hall uh so please come and say hi to us uh as a few of my colleagues",
    "start": "63059",
    "end": "69000"
  },
  {
    "text": "around as well and we're all probably wearing lovely purple t-shirts like this come say hi",
    "start": "69000",
    "end": "74520"
  },
  {
    "text": "um otherwise this is me I'm fanat uh everywhere on the internet that you can find me",
    "start": "74520",
    "end": "79920"
  },
  {
    "text": "um so uh if you ever have questions uh or just want to ask me anything",
    "start": "79920",
    "end": "85680"
  },
  {
    "text": "um find me on Twitter Mastodon LinkedIn anything you want to",
    "start": "85680",
    "end": "91380"
  },
  {
    "text": "um or you know I have the uh my favorite URL in the world uh fill nad.sh it's good so",
    "start": "91380",
    "end": "99180"
  },
  {
    "text": "I'm talking today about the top five issues in all of our JavaScript code bases uh and I can say all of our code",
    "start": "99180",
    "end": "106380"
  },
  {
    "text": "bases because I'm talking about uh the stuff that we have actually analyzed at",
    "start": "106380",
    "end": "112140"
  },
  {
    "text": "Sona um the data comes in this in the talk in this case from uh hundreds of millions",
    "start": "112140",
    "end": "119460"
  },
  {
    "text": "of lines of JavaScript and typescript I'll be talking about that a bit later that we have analyzed uh in sooner Cloud",
    "start": "119460",
    "end": "126479"
  },
  {
    "text": "that is our sort of Cloud solution SAS solution um it is all about starting analysis of",
    "start": "126479",
    "end": "131640"
  },
  {
    "text": "that but um I I felt like when I heard I've only joined Sona recently uh but",
    "start": "131640",
    "end": "137280"
  },
  {
    "text": "it's absolutely it's a very exciting place to be because we're we're here to help you write better code and then I",
    "start": "137280",
    "end": "143099"
  },
  {
    "text": "realized I learned that there was hundreds of millions of lines of JavaScript and typescript that we we uh we look after and so I was like okay",
    "start": "143099",
    "end": "149160"
  },
  {
    "text": "cool what are we all doing wrong and that's where that data's come from so I have the top five issues and when I say",
    "start": "149160",
    "end": "155819"
  },
  {
    "text": "issues I don't necessarily mean I I'm not here to sort of dunk on JavaScript",
    "start": "155819",
    "end": "160980"
  },
  {
    "text": "I'm a JavaScript developer typescript developer and I absolutely love working with the language and have done for a",
    "start": "160980",
    "end": "167700"
  },
  {
    "text": "long time I have done since uh the days before jQuery and the days of a thousand Lane JavaScript files that you loaded in",
    "start": "167700",
    "end": "173220"
  },
  {
    "text": "the script tag in the page um bad ideas but you know we didn't know any better at the time",
    "start": "173220",
    "end": "180000"
  },
  {
    "text": "um I'm talking about the kind of issues that are going to um sort of trip you up uh trip up your team and generally make",
    "start": "180000",
    "end": "187140"
  },
  {
    "text": "coding in any language a bit of a hassle um I'm sort of trying to talk about",
    "start": "187140",
    "end": "192959"
  },
  {
    "text": "clean code in this case by Clean code I mean code that is is both maintainable uh but also that works and is it is",
    "start": "192959",
    "end": "201180"
  },
  {
    "text": "secure and and basically makes your life better",
    "start": "201180",
    "end": "206459"
  },
  {
    "text": "um you see I when I was putting this together I kind of came up with a a couple of I didn't normally put quotes",
    "start": "206459",
    "end": "213300"
  },
  {
    "text": "in slides and talks and things like that but I couldn't not put this one in right",
    "start": "213300",
    "end": "219659"
  },
  {
    "text": "um funnily enough I don't normally deal with C plus plus either but in a in a",
    "start": "219659",
    "end": "225060"
  },
  {
    "text": "um complangs e plus plus mailing list back in 1991 John F Woods the uh uh uh",
    "start": "225060",
    "end": "231780"
  },
  {
    "text": "well-known games program at the time said always code as if the guy who ends",
    "start": "231780",
    "end": "236819"
  },
  {
    "text": "up maintaining your code will be a violent psychopath who knows where you live",
    "start": "236819",
    "end": "241920"
  },
  {
    "text": "code for readability I think the second sentence is the most important there we want to code for readability so that we",
    "start": "241920",
    "end": "247980"
  },
  {
    "text": "can indeed um come back to code sometime later",
    "start": "247980",
    "end": "253560"
  },
  {
    "text": "and understand it and be able to change it uh and the violent psychopath thing is is very much so the",
    "start": "253560",
    "end": "260519"
  },
  {
    "text": "um uh if you come back to some code later and it finds it's impossible to understand that it's enormously hard to",
    "start": "260519",
    "end": "266759"
  },
  {
    "text": "change uh you don't want somebody knowing where you live when you did that",
    "start": "266759",
    "end": "271979"
  },
  {
    "text": "but I thought like I'm not a c plus developer but that quote actually came out of like I said it was a mailing list",
    "start": "271979",
    "end": "278100"
  },
  {
    "text": "thread uh which was a discussion about the comma operator and whether it should be encouraged more and again say not a c",
    "start": "278100",
    "end": "287040"
  },
  {
    "text": "plus developer but it turned out when I looked at this code I was like that would actually that's perfectly valid",
    "start": "287040",
    "end": "293520"
  },
  {
    "text": "JavaScript as well uh and and there was this discussion about whether the comma operator should be encouraged because",
    "start": "293520",
    "end": "300960"
  },
  {
    "text": "it's um it would allow you to uh do multiple statements on a single line and then in",
    "start": "300960",
    "end": "308520"
  },
  {
    "text": "this in this example allow you to uh drop the",
    "start": "308520",
    "end": "314100"
  },
  {
    "text": "braces from the conditional right you don't have to put the brackets around the uh the assignments here which is",
    "start": "314100",
    "end": "321060"
  },
  {
    "text": "fine but somebody then pointed out uh on this thread that uh wow that's nice you know",
    "start": "321060",
    "end": "327900"
  },
  {
    "text": "cool we've allowed to we didn't have to write braces um if you make a typo if you mess",
    "start": "327900",
    "end": "333300"
  },
  {
    "text": "something up if you make it a semicolon instead of a comma uh it completely changes the meaning of the thing and uh",
    "start": "333300",
    "end": "340139"
  },
  {
    "text": "if you've been doing JavaScript long enough you've probably spent some time searching for a a missing semicolon or a",
    "start": "340139",
    "end": "346020"
  },
  {
    "text": "present semicolon where it shouldn't be and and it's an absolute nightmare to find now in my slides here uh the uh",
    "start": "346020",
    "end": "356039"
  },
  {
    "text": "um syntax highlighting actually has helped us but I remember this is from 1991 where I don't know if we had that",
    "start": "356039",
    "end": "364020"
  },
  {
    "text": "um I remember starting programming uh in in 2001 and uh and using notepad because",
    "start": "364020",
    "end": "370680"
  },
  {
    "text": "nobody told me about editors with syndax highlighting and I did not have a good degree",
    "start": "370680",
    "end": "376620"
  },
  {
    "text": "um but anyway the point being um the camera writer the comma operator",
    "start": "376620",
    "end": "381780"
  },
  {
    "text": "in this case is deemed not a good idea in terms of writing code that is going",
    "start": "381780",
    "end": "387720"
  },
  {
    "text": "to be maintainable later because it makes it harder for us to see bugs and",
    "start": "387720",
    "end": "393060"
  },
  {
    "text": "definitely harder if we don't use it correctly another quote",
    "start": "393060",
    "end": "400020"
  },
  {
    "text": "that came up uh in my research for this uh which was less about violent Psychopaths but still um I thought was",
    "start": "400020",
    "end": "406860"
  },
  {
    "text": "uh was was nice was Raymond Chen on on Microsoft uh telling us to design for",
    "start": "406860",
    "end": "411900"
  },
  {
    "text": "readability uh and if you remind remember John F Woods said code for readability design for readability is",
    "start": "411900",
    "end": "417960"
  },
  {
    "text": "very much the same idea even if you don't intend anyone else to read your code there's still a very good chance",
    "start": "417960",
    "end": "423840"
  },
  {
    "text": "that somebody else will have to stare at your code and figure out what it does and that person is probably going to be",
    "start": "423840",
    "end": "429419"
  },
  {
    "text": "you 12 months from now now",
    "start": "429419",
    "end": "434180"
  },
  {
    "text": "me 12 months ago I don't know I was I was okay at this",
    "start": "435360",
    "end": "441180"
  },
  {
    "text": "but me 10 years ago and 11 years ago the difference between that was it was an absolutely nightmare",
    "start": "441180",
    "end": "447539"
  },
  {
    "text": "um and uh the point here I think is is very much that",
    "start": "447539",
    "end": "454400"
  },
  {
    "text": "if you can see yourself in the shoes of somebody else who has to read your code uh then uh then hopefully you can",
    "start": "454620",
    "end": "461759"
  },
  {
    "text": "understand the position you're put in uh because you know when it's 12 months later after you've",
    "start": "461759",
    "end": "467280"
  },
  {
    "text": "written something uh you know know more about that code than a person who's coming to it fresh",
    "start": "467280",
    "end": "474060"
  },
  {
    "text": "so if you design if you code for readability then you're going to have a better time with that",
    "start": "474060",
    "end": "479940"
  },
  {
    "text": "and so ultimately this leads into this idea of clean code code that is going to both run better in production because it",
    "start": "479940",
    "end": "486360"
  },
  {
    "text": "is is free of bugs or uh or or has fewer bugs as any of us truly written bug free code",
    "start": "486360",
    "end": "495240"
  },
  {
    "text": "um but it's also better to work with in development it's something you can maintain and work on and so um that's",
    "start": "495240",
    "end": "501720"
  },
  {
    "text": "what we're after here and avoiding violent Psychopaths",
    "start": "501720",
    "end": "507599"
  },
  {
    "text": "so let's get to some issues let's get some JavaScript uh what are the top five issues I will tell you uh up front that",
    "start": "507599",
    "end": "515580"
  },
  {
    "text": "uh I'm not going to do these in order because the order is boring number one",
    "start": "515580",
    "end": "520860"
  },
  {
    "text": "is terrible I'll get to it but it's just not that exciting an issue",
    "start": "520860",
    "end": "525899"
  },
  {
    "text": "um but I will start number five uh so I have a countdown here it's going to count down in the order I desire",
    "start": "525899",
    "end": "533100"
  },
  {
    "text": "um so number five issue top issue uh top thing that we could be doing better in",
    "start": "533100",
    "end": "538380"
  },
  {
    "text": "JavaScript is um I added confetti uh because",
    "start": "538380",
    "end": "545519"
  },
  {
    "text": "I thought it would be more exciting that way the conference wouldn't allow me to have real actual confetti cannons something",
    "start": "545519",
    "end": "552060"
  },
  {
    "text": "about maintenance and cleanup costs but um uh we have I can do that again um unused assignments should be removed",
    "start": "552060",
    "end": "558660"
  },
  {
    "text": "unused assignment should be removed I as I said earlier I took this from uh",
    "start": "558660",
    "end": "564839"
  },
  {
    "text": "thousands of JavaScript code bases hundreds of millions of lines of JavaScript and it turns out that in",
    "start": "564839",
    "end": "569880"
  },
  {
    "text": "these projects we are assigning making assignments",
    "start": "569880",
    "end": "574980"
  },
  {
    "text": "which we don't then use it's bizarre um it's as simple as this right where",
    "start": "574980",
    "end": "580500"
  },
  {
    "text": "you make an assignment uh to Foo variable in this case and then you",
    "start": "580500",
    "end": "586260"
  },
  {
    "text": "assign again without having used it this is prevalent",
    "start": "586260",
    "end": "591839"
  },
  {
    "text": "I'm told and the problem here is that it's just unnecessary like the first line in this is unnecessary because it",
    "start": "591839",
    "end": "598680"
  },
  {
    "text": "is immediately overwritten by the second uh those problems don't necessarily happen on consecutive lines but",
    "start": "598680",
    "end": "606420"
  },
  {
    "text": "um this kind of thing uh clutter's code makes it less understandable less",
    "start": "606420",
    "end": "612180"
  },
  {
    "text": "readable because it's doing something that is ultimately uh",
    "start": "612180",
    "end": "618320"
  },
  {
    "text": "unnecessary useless um one I I hope as part of this I want to",
    "start": "618320",
    "end": "625620"
  },
  {
    "text": "tell you that I'm not blaming anybody for this it's entirely uh possible that these things happen by mistake and it's",
    "start": "625620",
    "end": "632279"
  },
  {
    "text": "you know these could happen hundreds of lines apart don't write functions that are hundreds of lines long but you know that's a",
    "start": "632279",
    "end": "638220"
  },
  {
    "text": "different problem but somebody's written functions [Music]",
    "start": "638220",
    "end": "643920"
  },
  {
    "text": "um but when it happens uh what we can do you know if we run analysis we run a",
    "start": "643920",
    "end": "649260"
  },
  {
    "text": "linter on this kind of code then we can find this kind of stuff out uh and and and and cancel it out and so removing",
    "start": "649260",
    "end": "655740"
  },
  {
    "text": "that first line um will ultimately make the rest of it better",
    "start": "655740",
    "end": "661260"
  },
  {
    "text": "um yeah uh that's a different example of it like if you happen to set the results or",
    "start": "661260",
    "end": "667680"
  },
  {
    "text": "something oh this is assignment in this case oops uh in this case we're making",
    "start": "667680",
    "end": "672899"
  },
  {
    "text": "an assignments that we never use um unlike the other one in which we make an assignment in which we you know",
    "start": "672899",
    "end": "679800"
  },
  {
    "text": "reassign sometime afterwards if you make assignments that we never use same kind of thing unused assignments should be removed I think we can all agree with",
    "start": "679800",
    "end": "685800"
  },
  {
    "text": "this one if you make an assignment to something and then don't ever use it you don't need to do it in the first place",
    "start": "685800",
    "end": "691980"
  },
  {
    "text": "uh and we can get rid of it cool so when you Summits should be removed I",
    "start": "691980",
    "end": "697440"
  },
  {
    "text": "hope we're all agreement in that one",
    "start": "697440",
    "end": "700579"
  },
  {
    "text": "up in number four for JavaScript is triple equals and the double not equals should be used instead of double equals",
    "start": "705720",
    "end": "711779"
  },
  {
    "text": "and not equal to who's a fan of double equals one Perth",
    "start": "711779",
    "end": "719060"
  },
  {
    "text": "[Music] agent of chaos sat in the middle of the",
    "start": "721080",
    "end": "726480"
  },
  {
    "text": "room there this is why uh we don't use double",
    "start": "726480",
    "end": "733320"
  },
  {
    "text": "equals um this is a this is actually a website that somebody put together that shows us",
    "start": "733320",
    "end": "738779"
  },
  {
    "text": "the difference between triple equals and double equals and so uh on the um axes",
    "start": "738779",
    "end": "744300"
  },
  {
    "text": "there are just various things up at the top uh",
    "start": "744300",
    "end": "750560"
  },
  {
    "text": "where are we top what are you looking at top left uh is is true and true right and true",
    "start": "751940",
    "end": "758160"
  },
  {
    "text": "and true is equal in double equals world uh but of course so is true and one true",
    "start": "758160",
    "end": "763560"
  },
  {
    "text": "and the string one and true and an array containing the number one",
    "start": "763560",
    "end": "769740"
  },
  {
    "text": "uh and and it goes on from there right uh the important thing is like we shouldn't ever have to know this or keep",
    "start": "769740",
    "end": "776579"
  },
  {
    "text": "this in our heads when uh when comparing things uh and and if you go to double triple",
    "start": "776579",
    "end": "783060"
  },
  {
    "text": "equals sorry that's what it looks like right true is the same as true false is the same as false",
    "start": "783060",
    "end": "788639"
  },
  {
    "text": "um the string false is the same as the string false uh minus infinity is the same as minus infinity Nan is never",
    "start": "788639",
    "end": "795360"
  },
  {
    "text": "equal to anything um the moral of the story is always use triple equals because it is simpler to",
    "start": "795360",
    "end": "802620"
  },
  {
    "text": "understand but it turns out that um it's the number four top issue in",
    "start": "802620",
    "end": "809100"
  },
  {
    "text": "JavaScript code bases using double equals or not equal to which is the same so",
    "start": "809100",
    "end": "816660"
  },
  {
    "text": "um stop it if you're using them stop it",
    "start": "816660",
    "end": "821720"
  },
  {
    "text": "he looks really happy about it um cool",
    "start": "822540",
    "end": "829220"
  },
  {
    "text": "weirdly enough one of the biggest problems we have in our code bases is that we're leaving in code that doesn't",
    "start": "831600",
    "end": "838139"
  },
  {
    "text": "do anything and byte doesn't do anything I don't mean those unused assignments that was already dealt with I mean code",
    "start": "838139",
    "end": "843660"
  },
  {
    "text": "that is commented out um I can see how this happens right you're",
    "start": "843660",
    "end": "848940"
  },
  {
    "text": "changing something you're building something there was there was something you were trying or there was a wave something worked beforehand that you",
    "start": "848940",
    "end": "855120"
  },
  {
    "text": "needed to change refactor update and uh and you just comment that out and you",
    "start": "855120",
    "end": "860519"
  },
  {
    "text": "write the new code um and and you can kind of think to yourself this is a great idea uh if",
    "start": "860519",
    "end": "867959"
  },
  {
    "text": "somebody comes back they'll see the past the history of this code base and they'll know where we've gone from here",
    "start": "867959",
    "end": "873660"
  },
  {
    "text": "we've got commented out code just to just to leave that little breadcrumb Trail along the way",
    "start": "873660",
    "end": "880680"
  },
  {
    "text": "bad idea um a very kind of surface level",
    "start": "880680",
    "end": "885779"
  },
  {
    "text": "commenting out code and leaving it in a code base is just uh again cluttering",
    "start": "885779",
    "end": "891899"
  },
  {
    "text": "your files it is cluttering the JavaScript that you're writing or typescript or whatever you are",
    "start": "891899",
    "end": "897240"
  },
  {
    "text": "um it's clutter because and I know I do this if I ever come across a file with",
    "start": "897240",
    "end": "902820"
  },
  {
    "text": "uh with commented out code in it I'm not and I'm trying to understand what the file does uh I will be reading the code",
    "start": "902820",
    "end": "909660"
  },
  {
    "text": "that is not coming to doubt and try and work out what that does so I can change it and then I'll spend time reading the code that's commented out to work out",
    "start": "909660",
    "end": "916380"
  },
  {
    "text": "what that does which doesn't make any difference because it's not doing anything because it's commented out",
    "start": "916380",
    "end": "923060"
  },
  {
    "text": "and so but that's just that's confusing me",
    "start": "923060",
    "end": "928199"
  },
  {
    "text": "it's adding extra cognitive overhead to the process I'm going through and trying to work on this",
    "start": "928199",
    "end": "935220"
  },
  {
    "text": "um beyond that like uh we have no need to ship comments to production uh",
    "start": "935220",
    "end": "941160"
  },
  {
    "text": "sections of code don't need to be commented and and they they're never gonna",
    "start": "941160",
    "end": "946620"
  },
  {
    "text": "they're never going to be run they're in the comments so um this is uh sort of a call to all of",
    "start": "946620",
    "end": "953339"
  },
  {
    "text": "us to sort of remember that we have Source control if you have uh got to change something you",
    "start": "953339",
    "end": "960660"
  },
  {
    "text": "don't need to leave the old code to remind somebody what it used to do we",
    "start": "960660",
    "end": "966480"
  },
  {
    "text": "have that stored in git or in whatever Source control you use uh it's um",
    "start": "966480",
    "end": "972480"
  },
  {
    "text": "it's it's always there you can always go check it back you can always go check the history if it's absolutely important",
    "start": "972480",
    "end": "978000"
  },
  {
    "text": "to find out what it used to do but it's probably not that important and it definitely doesn't need to be in the in",
    "start": "978000",
    "end": "984420"
  },
  {
    "text": "the file uh whilst you change it now so don't comment code out uh yeah I",
    "start": "984420",
    "end": "991620"
  },
  {
    "text": "didn't actually have an example for this it's just the idea of commenting stuff",
    "start": "991620",
    "end": "997139"
  },
  {
    "text": "doesn't help it clutters it's going to make um it harder to parse a file at",
    "start": "997139",
    "end": "1002480"
  },
  {
    "text": "least as you try to read something and maintain something",
    "start": "1002480",
    "end": "1006279"
  },
  {
    "text": "it's okay for a typescript break um I know the title was about JavaScript",
    "start": "1008180",
    "end": "1014240"
  },
  {
    "text": "but who's a typescript fan uh in the crowd quite a lot of people of course excellent",
    "start": "1014240",
    "end": "1019579"
  },
  {
    "text": "actually cool um so as I was looking at this data I was like okay I've got the JavaScript stuff",
    "start": "1019579",
    "end": "1025280"
  },
  {
    "text": "is the typescript stuff the same do we make the same mistakes not same mistakes do we cause the same issues in our code",
    "start": "1025280",
    "end": "1031579"
  },
  {
    "text": "bases in typescript that we do JavaScript and the answer is some of the time",
    "start": "1031579",
    "end": "1037100"
  },
  {
    "text": "uh funnily enough the second biggest issue in typescript code basis was commented",
    "start": "1037100",
    "end": "1042740"
  },
  {
    "text": "out code I don't know why uh it absolutely is",
    "start": "1042740",
    "end": "1049340"
  },
  {
    "text": "um higher a bigger issue than JavaScript although actually um in pure numbers of issues uh this was",
    "start": "1049340",
    "end": "1056360"
  },
  {
    "text": "lower uh typescript did have lower numbers of issues uh than JavaScript did",
    "start": "1056360",
    "end": "1062179"
  },
  {
    "text": "across the projects so interesting there number five for typescript was tracking",
    "start": "1062179",
    "end": "1068179"
  },
  {
    "text": "use of to-do tags it turns out",
    "start": "1068179",
    "end": "1074780"
  },
  {
    "text": "typescript developers uh are indeed leaving comments in their code to tell them to do stuff and",
    "start": "1074780",
    "end": "1082760"
  },
  {
    "text": "the number five thing picked up by our our analysis of that is that they're",
    "start": "1082760",
    "end": "1087799"
  },
  {
    "text": "telling themselves to do something later and by this I say I do mean it's a comment that says do that you know",
    "start": "1087799",
    "end": "1093440"
  },
  {
    "text": "finish this off um this surprised me in a way because",
    "start": "1093440",
    "end": "1099380"
  },
  {
    "text": "um this is not uh this analysis the the rules that we that",
    "start": "1099380",
    "end": "1104600"
  },
  {
    "text": "I'm checking here are from committed code checked in code it's not for uh",
    "start": "1104600",
    "end": "1109640"
  },
  {
    "text": "stuff that's like in a to-do State it's stuff that people have pushed and we're like Yep this was worth committing uh",
    "start": "1109640",
    "end": "1116179"
  },
  {
    "text": "sending to the mean Branch uh and we'll get to it later um look it's not a problem obviously having",
    "start": "1116179",
    "end": "1122480"
  },
  {
    "text": "not done something is not bad code it's just not code I guess yet",
    "start": "1122480",
    "end": "1128780"
  },
  {
    "text": "um and so tracking use of to-do dags like it's simply it's important to do but it they there shouldn't be many many of",
    "start": "1128780",
    "end": "1136039"
  },
  {
    "text": "them in your code bases you probably should go back and either remove them because you're never going to do them or",
    "start": "1136039",
    "end": "1141380"
  },
  {
    "text": "do them because you said you were going to that's all ooh ready",
    "start": "1141380",
    "end": "1147440"
  },
  {
    "text": "um in at number four uh is actually and this was this was quite a surprise to me uh in all typescript code bases the",
    "start": "1147440",
    "end": "1155660"
  },
  {
    "text": "number four top issue was a react issue uh and a jsx issue in this particular",
    "start": "1155660",
    "end": "1161240"
  },
  {
    "text": "case uh it's a bit of an old issue I'll be honest but it does uh it is",
    "start": "1161240",
    "end": "1166880"
  },
  {
    "text": "interesting to find out that um that typescript and react go so well together",
    "start": "1166880",
    "end": "1172160"
  },
  {
    "text": "uh that we can make this mistake uh very common",
    "start": "1172160",
    "end": "1177760"
  },
  {
    "text": "a disallowing bind or an arrow function in jsx props uh if you'll excuse me for showing you a",
    "start": "1178460",
    "end": "1184640"
  },
  {
    "text": "class-based component uh not a functional component uh it is just more obvious in the class-based one",
    "start": "1184640",
    "end": "1191539"
  },
  {
    "text": "um this land bind or Arrow functions in the jsx props is absolutely talking about like",
    "start": "1191539",
    "end": "1198140"
  },
  {
    "text": "this bit in the middle binding a function as part of the uh as part of",
    "start": "1198140",
    "end": "1203539"
  },
  {
    "text": "rendering with the uh the component the this is a problem that",
    "start": "1203539",
    "end": "1210440"
  },
  {
    "text": "the react documentation does not uh it actually says is probably not going to be a problem for you certainly",
    "start": "1210440",
    "end": "1217039"
  },
  {
    "text": "immediately um it's a problem because every time you render this component we are creating a",
    "start": "1217039",
    "end": "1222679"
  },
  {
    "text": "new function and a new binding for it and so if you had to render that component a thousand times or a million",
    "start": "1222679",
    "end": "1228860"
  },
  {
    "text": "times then that's a lot that's more work to do for the browser uh than it is um",
    "start": "1228860",
    "end": "1234320"
  },
  {
    "text": "if you were to bind the function up front once and then render a bunch of times",
    "start": "1234320",
    "end": "1240260"
  },
  {
    "text": "the like I said the react documentation in this case uh does uh tell us it's",
    "start": "1240260",
    "end": "1246200"
  },
  {
    "text": "probably not going to be a problem for you but I always like to avoid potential problems",
    "start": "1246200",
    "end": "1251480"
  },
  {
    "text": "um regardless of whether they're going to affect me or not and this is one of those things so like in this case",
    "start": "1251480",
    "end": "1258080"
  },
  {
    "text": "if you're going to do something on the click or on an event that happens from a from a GSX uh from the from the HTML",
    "start": "1258080",
    "end": "1265880"
  },
  {
    "text": "uh we don't need to bind it in the thing we can bind it outside of the function either in the Constructor or in a",
    "start": "1265880",
    "end": "1271640"
  },
  {
    "text": "functional component using something like um use callback or use Nano something like that",
    "start": "1271640",
    "end": "1277940"
  },
  {
    "text": "we can do it outside of the thing and don't we don't have to do a render time ooh ah I was surprising myself as we get",
    "start": "1277940",
    "end": "1286039"
  },
  {
    "text": "to number one in typescript I've avoided three for the moment we'll come back to it um number one problem in typescript is",
    "start": "1286039",
    "end": "1292039"
  },
  {
    "text": "unnecessary Imports should be removed um importing something that you then don't use is the largest problem in",
    "start": "1292039",
    "end": "1299419"
  },
  {
    "text": "typescript it's also not a problem because typescript if it deems that something isn't used won't actually",
    "start": "1299419",
    "end": "1305360"
  },
  {
    "text": "include it in the final uh um build uh again this is one of those",
    "start": "1305360",
    "end": "1311299"
  },
  {
    "text": "things where uh it's coloring code right if you get to a",
    "start": "1311299",
    "end": "1316580"
  },
  {
    "text": "a file and it has a whole bunch of imports at the top of it uh and you have to scroll beyond that to get to the",
    "start": "1316580",
    "end": "1323120"
  },
  {
    "text": "actual code and if it turns out a bunch of those things weren't used they're not helping you they're not helping you",
    "start": "1323120",
    "end": "1329059"
  },
  {
    "text": "understand it they're not helping you get on board with it um this is one of the least this is one of the silliest issues I think because",
    "start": "1329059",
    "end": "1336919"
  },
  {
    "text": "um it doesn't matter it doesn't end up in the final build but",
    "start": "1336919",
    "end": "1343220"
  },
  {
    "text": "um it does clutter things it's just clutter it makes it harder to read harder to understand and I I'm",
    "start": "1343220",
    "end": "1349179"
  },
  {
    "text": "thoroughly surprised by this because most Ides these days will highlight something that has not been used",
    "start": "1349179",
    "end": "1356860"
  },
  {
    "text": "so pay attention to your IDE when it's telling you these things it's a JavaScript though uh what do we",
    "start": "1357080",
    "end": "1362600"
  },
  {
    "text": "have we had uh number five number four and number three for JavaScript so far I'm right",
    "start": "1362600",
    "end": "1368659"
  },
  {
    "text": "um we're gonna go to number one next the top issue in all JavaScript projects",
    "start": "1368659",
    "end": "1374780"
  },
  {
    "text": "um if you have any guesses what it might be what do you think we're doing to JavaScript projects that we probably shouldn't shout it out if you have an",
    "start": "1374780",
    "end": "1381740"
  },
  {
    "text": "idea no ideas what what scope oh",
    "start": "1381740",
    "end": "1389679"
  },
  {
    "text": "simpler than that I think actually not simpler um actually does is a scope thing uh",
    "start": "1389720",
    "end": "1395299"
  },
  {
    "text": "using uh VAR instead of let or const now es6 es2015 came out",
    "start": "1395299",
    "end": "1402320"
  },
  {
    "text": "in 2015. uh eight years ago um and brought us Latin const and and",
    "start": "1402320",
    "end": "1408140"
  },
  {
    "text": "this every JavaScript runtime has caught up with us now and allows us to use these things let uh and constant sort of",
    "start": "1408140",
    "end": "1415520"
  },
  {
    "text": "are they are of course block scoped so you're not entirely wrong um",
    "start": "1415520",
    "end": "1421000"
  },
  {
    "text": "yeah nice um leading constant block scoped varies confusing",
    "start": "1421880",
    "end": "1428480"
  },
  {
    "text": "um but actually really uh I actually don't think it's necessarily about the scope uh issue for it",
    "start": "1428480",
    "end": "1434299"
  },
  {
    "text": "um when we're talking about code that we want to be able to maintain and use and understand uh constant let communicate",
    "start": "1434299",
    "end": "1441440"
  },
  {
    "text": "intention uh and actually I think a lot of what I'm talking about here is about communication uh that's where those",
    "start": "1441440",
    "end": "1448460"
  },
  {
    "text": "first two quotes earlier on about like um when you're writing code you're",
    "start": "1448460",
    "end": "1454220"
  },
  {
    "text": "trying to communicate to somebody in the future whether it's yourself or a violent psychopath you want to try and",
    "start": "1454220",
    "end": "1459620"
  },
  {
    "text": "let them know uh what you were trying to do in the first place",
    "start": "1459620",
    "end": "1464960"
  },
  {
    "text": "VAR does not tell you anything about that but const tells you that we don't intend to change this variable and let",
    "start": "1464960",
    "end": "1472280"
  },
  {
    "text": "says we do intend to change this variable and that communication the more communication we can impart into our",
    "start": "1472280",
    "end": "1478400"
  },
  {
    "text": "code uh will help us in the future will help our colleagues in the future and we'll help people we don't even know",
    "start": "1478400",
    "end": "1483980"
  },
  {
    "text": "when they come to this so use your code to communicate to",
    "start": "1483980",
    "end": "1489380"
  },
  {
    "text": "people so I managed to show you",
    "start": "1489380",
    "end": "1496700"
  },
  {
    "text": "four issues in JavaScript four issues in typescript on the left number two and number three uh respectively uh as a",
    "start": "1496700",
    "end": "1504080"
  },
  {
    "text": "blank I told you up front I wasn't going to do this in order but it's because I decided that number two here in",
    "start": "1504080",
    "end": "1510200"
  },
  {
    "text": "JavaScript was the most interesting and most exciting and the thing that we actually should spend our time thinking about because",
    "start": "1510200",
    "end": "1516620"
  },
  {
    "text": "we can go back to our old code bases and replace every user VAR with a letter and",
    "start": "1516620",
    "end": "1522559"
  },
  {
    "text": "a const and it's not going to break anything uh it might break things due to block scoping",
    "start": "1522559",
    "end": "1528440"
  },
  {
    "text": "um but it wouldn't be a big refactor we could do it but it's not actually going to change much of the quality of our",
    "start": "1528440",
    "end": "1535400"
  },
  {
    "text": "code over that time and number two right here I absolutely thought was the when I",
    "start": "1535400",
    "end": "1543200"
  },
  {
    "text": "looked at this the biggest issue that we could do and and something that we sort of because",
    "start": "1543200",
    "end": "1549200"
  },
  {
    "text": "the biggest issue that we have and the biggest thing that we could pay attention to to change the quality of",
    "start": "1549200",
    "end": "1554779"
  },
  {
    "text": "Our Lives as developers in the future and that is the cognitive complexity of functions",
    "start": "1554779",
    "end": "1560360"
  },
  {
    "text": "should not be too high",
    "start": "1560360",
    "end": "1563559"
  },
  {
    "text": "that they'll they'll finish in a minute um come on there we go",
    "start": "1568400",
    "end": "1575360"
  },
  {
    "text": "cognitive complexity of function should not be too high what do I mean by this has any heard of the term cognitive complexity before in terms of",
    "start": "1575360",
    "end": "1581720"
  },
  {
    "text": "programming a few people cool um oh turns out it",
    "start": "1581720",
    "end": "1588799"
  },
  {
    "text": "more confetti uh [Music] um not that many people heard of it uh have",
    "start": "1588799",
    "end": "1594919"
  },
  {
    "text": "you heard of the term cyclomatic complexity uh anybody there more people about the same number of people okay",
    "start": "1594919",
    "end": "1600860"
  },
  {
    "text": "cool um cyclomatic complexity as a measure of",
    "start": "1600860",
    "end": "1606140"
  },
  {
    "text": "code complexity that's been around for quite a long time these days uh cyclomatic complexity uh gives your code",
    "start": "1606140",
    "end": "1612620"
  },
  {
    "text": "a score gives functions classes and entire files a score based on how many",
    "start": "1612620",
    "end": "1618500"
  },
  {
    "text": "different paths there are through a piece of code um that's got and and using a score like",
    "start": "1618500",
    "end": "1625400"
  },
  {
    "text": "that allows us to sort of glance at a file in its score and understand you know how much we have to do for it it's",
    "start": "1625400",
    "end": "1632539"
  },
  {
    "text": "measured by um uh sorry it's mentioned in this line of code this is this is a function with",
    "start": "1632539",
    "end": "1638539"
  },
  {
    "text": "an example of summing the number uh prime numbers that are below a certain number uh so a little complex little",
    "start": "1638539",
    "end": "1646580"
  },
  {
    "text": "function there we've got to work out what's prime and then add them up together uh it has two uh nested Loops",
    "start": "1646580",
    "end": "1653480"
  },
  {
    "text": "two conditionals inside of it and so there's a bunch of different Paths of the way through this um psychomatic complexity scores you a",
    "start": "1653480",
    "end": "1660440"
  },
  {
    "text": "point for being a function that's this Top Line uh I don't know how we get away with not",
    "start": "1660440",
    "end": "1666080"
  },
  {
    "text": "writing functions but it scores your point for that it then scores your point for each time we do uh some sort of",
    "start": "1666080",
    "end": "1672380"
  },
  {
    "text": "branching activity in this case a for Loop uh another four another for Loop a",
    "start": "1672380",
    "end": "1679220"
  },
  {
    "text": "conditional and then another conditional and so in cyclomatic complexity this piece of code which does a you know",
    "start": "1679220",
    "end": "1687520"
  },
  {
    "text": "relatively straightforward thing but with a bunch of loops and things scores five",
    "start": "1687520",
    "end": "1692840"
  },
  {
    "text": "cyclomatic complexity is useful as I said for knowing the number of paths through a piece of code and it's uh it's",
    "start": "1692840",
    "end": "1698360"
  },
  {
    "text": "great for knowing how many tests you have to write to cover the thing entirely but",
    "start": "1698360",
    "end": "1704840"
  },
  {
    "text": "in this two Loops two conditionals thing you'd be like yeah it's a little bit complex finally has the same score is",
    "start": "1704840",
    "end": "1710539"
  },
  {
    "text": "given to a function that looks like this with a switch and four cases um because you score one for having a",
    "start": "1710539",
    "end": "1716360"
  },
  {
    "text": "function and then one for each case in the switch aside from the default and so",
    "start": "1716360",
    "end": "1722120"
  },
  {
    "text": "cyclomatic complexity wise these two functions are as complex as each other",
    "start": "1722120",
    "end": "1729080"
  },
  {
    "text": "and again like it does tell you how many test cases you have to write to cover",
    "start": "1729080",
    "end": "1735500"
  },
  {
    "text": "everything in the switch statement but it doesn't really tell us anything about how complex it is uh when we want to",
    "start": "1735500",
    "end": "1741980"
  },
  {
    "text": "read understand maintain and change it",
    "start": "1741980",
    "end": "1746740"
  },
  {
    "text": "so um like I said I I joined sonar fairly recently and then I started reading",
    "start": "1748100",
    "end": "1753140"
  },
  {
    "text": "about what we've done and cognitive complexity was a paper written by a",
    "start": "1753140",
    "end": "1758539"
  },
  {
    "text": "bunch of people at Sona back in 2016 to try and overcome cyclomatic complexity",
    "start": "1758539",
    "end": "1764240"
  },
  {
    "text": "when we want to understand how how how complicated how easy or",
    "start": "1764240",
    "end": "1770120"
  },
  {
    "text": "difficult it is to understand a piece of code um so psychological psychometric 5c",
    "start": "1770120",
    "end": "1775460"
  },
  {
    "text": "measures that number of parts to the function cognitive complexity then measures how easy it is to read and understand a function",
    "start": "1775460",
    "end": "1782779"
  },
  {
    "text": "um so connected for capacity still comes up with a score a way to glance add a piece of code and",
    "start": "1782779",
    "end": "1788960"
  },
  {
    "text": "understand how complex it is but it doesn't end a different way to cyclomatic complexity uh so that it's",
    "start": "1788960",
    "end": "1797720"
  },
  {
    "text": "more appropriate for understanding things it creates a school by uh incrementing",
    "start": "1797720",
    "end": "1803000"
  },
  {
    "text": "for breaks and flow we saw that in the cyclomatic complexity like every time there's a loop or a conditional uh it's",
    "start": "1803000",
    "end": "1808880"
  },
  {
    "text": "going to add one to the score but it also unders it also keeps it in the back",
    "start": "1808880",
    "end": "1814520"
  },
  {
    "text": "of its mind uh a score based on how deep uh code is nested",
    "start": "1814520",
    "end": "1819740"
  },
  {
    "text": "um and uh and actually when we come to a a new braking uh breaking flow we note",
    "start": "1819740",
    "end": "1826640"
  },
  {
    "text": "just score one for the break and flow we score one for it plus How Deeply it's nested and this ends up giving us a",
    "start": "1826640",
    "end": "1833720"
  },
  {
    "text": "better picture of how easy it is to understand things because I hope you agree that the this the sum of primes is",
    "start": "1833720",
    "end": "1839720"
  },
  {
    "text": "not as complex as working out um a number of words to return uh so",
    "start": "1839720",
    "end": "1845960"
  },
  {
    "text": "cognitive complexity uh on this function that we that's previously scored five uh in cyclomatic complexity uh now scores",
    "start": "1845960",
    "end": "1853580"
  },
  {
    "text": "um uh you don't score for being a function because everything's got a function uh it does",
    "start": "1853580",
    "end": "1859820"
  },
  {
    "text": "score one for this Loop but then we increment the nesting score in the background and thus the next Loop scores",
    "start": "1859820",
    "end": "1867380"
  },
  {
    "text": "two because it is nested once and another break and flow so if you score two for that",
    "start": "1867380",
    "end": "1873080"
  },
  {
    "text": "um then we are nested twice so this condition though is a break and flow",
    "start": "1873080",
    "end": "1878120"
  },
  {
    "text": "which scores one plus its nesting value which is two uh so we score three for this overall then we drop out of one of",
    "start": "1878120",
    "end": "1885020"
  },
  {
    "text": "the loops we get another conditional which is then nested once so we scored two and now this piece of code is",
    "start": "1885020",
    "end": "1891080"
  },
  {
    "text": "scoring eight for cognitive complexity but if we if we go back to the other function with a big switch statement in",
    "start": "1891080",
    "end": "1896720"
  },
  {
    "text": "it it's got one score because it's a switch this is",
    "start": "1896720",
    "end": "1902000"
  },
  {
    "text": "easier to understand I think we can all agree that this is easier to understand uh than this",
    "start": "1902000",
    "end": "1909460"
  },
  {
    "text": "um I didn't actually describe this this is get words you pass a number in and it's going to tell you one a couple of few mini or Lots based on how many",
    "start": "1910159",
    "end": "1917779"
  },
  {
    "text": "how big that number is uh but I didn't have to explain it because it's fairly easy to just sort of glance",
    "start": "1917779",
    "end": "1924020"
  },
  {
    "text": "at and go okay well there's a bunch of conditions let's move on",
    "start": "1924020",
    "end": "1929559"
  },
  {
    "text": "and so that idea that a cyclomatic complexity is useful for knowing the number of",
    "start": "1930080",
    "end": "1935539"
  },
  {
    "text": "paths through a thing it doesn't tell us about maintaining that code this is this code is not going to be hard to change and this one with two loops and",
    "start": "1935539",
    "end": "1941960"
  },
  {
    "text": "conditionals will be harder to change but it's obviously a different problem as",
    "start": "1941960",
    "end": "1949039"
  },
  {
    "text": "well uh summing a bunch of prime numbers is is inherently harder than coming up with",
    "start": "1949039",
    "end": "1955279"
  },
  {
    "text": "a word for the number that you place in um what we need to do in our code at all",
    "start": "1955279",
    "end": "1961940"
  },
  {
    "text": "times is consider uh the complexity of the problem we're trying to solve",
    "start": "1961940",
    "end": "1969860"
  },
  {
    "text": "and deal with that but not add accidental or extra complexity to it",
    "start": "1969860",
    "end": "1976039"
  },
  {
    "text": "um that I think is the problem is there's a wonderful paper called there's no no",
    "start": "1976039",
    "end": "1981980"
  },
  {
    "text": "Silver Bullet which kind of describes this um and and tells us that yeah there is",
    "start": "1981980",
    "end": "1988700"
  },
  {
    "text": "inherent complexity in most things we do I'm not here to say that all of our codes should be really simple and easy",
    "start": "1988700",
    "end": "1993799"
  },
  {
    "text": "to read at all times if you are coding something up that is difficult uh then it's going to be difficult to",
    "start": "1993799",
    "end": "1999679"
  },
  {
    "text": "understand Our intention however should be to not write code that is make that",
    "start": "1999679",
    "end": "2006159"
  },
  {
    "text": "makes it harder to understand on top of that and so cognitive complexity this score can kind of give us this idea of",
    "start": "2006159",
    "end": "2012519"
  },
  {
    "text": "whether we have done so and so the rule the issue that we we break there says that the kind of people",
    "start": "2012519",
    "end": "2019419"
  },
  {
    "text": "actually a function should not be too high that means there is a threshold to break uh and in JavaScript",
    "start": "2019419",
    "end": "2026919"
  },
  {
    "text": "excuse me in JavaScript uh at least within our tools the threshold for cognitive complexity is 15. uh it's a",
    "start": "2026919",
    "end": "2035740"
  },
  {
    "text": "little arbitrary but it doesn't matter because it's giving us a hint it's telling us to go and look at this code",
    "start": "2035740",
    "end": "2042039"
  },
  {
    "text": "and so I actually have um a little example of what I mean by this uh",
    "start": "2042039",
    "end": "2049540"
  },
  {
    "text": "when I was writing this talk and deciding that I wanted to have confetti appear on the slides uh turned out I had",
    "start": "2049540",
    "end": "2055540"
  },
  {
    "text": "to actually write myself a function for my reveal.js presentation that would show me confetti and then it turned out",
    "start": "2055540",
    "end": "2061540"
  },
  {
    "text": "I wrote a bit complicated um you see this is that it turns out this is a 90 odd uh 87 line function and some",
    "start": "2061540",
    "end": "2070658"
  },
  {
    "text": "of that is a bunch of settings and things and so we can kind of cut that out but it's still complicated",
    "start": "2070659",
    "end": "2077378"
  },
  {
    "text": "um it's still doing too much uh and uh and in my editor here I have uh I have",
    "start": "2077379",
    "end": "2083740"
  },
  {
    "text": "sonalint which is which is one of our products it's free you can install it in your editor and it will tell you when",
    "start": "2083740",
    "end": "2089200"
  },
  {
    "text": "you write two complicated functions uh with a little red underline here in fact it's suggesting to me here that I should",
    "start": "2089200",
    "end": "2094898"
  },
  {
    "text": "refactor it because the cognitive complexity is 16 and 15 is that threshold",
    "start": "2094899",
    "end": "2100420"
  },
  {
    "text": "um what I really like about this and what I think is important is that we can show all the locations for this inside the",
    "start": "2100420",
    "end": "2108280"
  },
  {
    "text": "editor uh this is now telling me uh all the",
    "start": "2108280",
    "end": "2113320"
  },
  {
    "text": "places where I am uh breaking the flow of code if you can",
    "start": "2113320",
    "end": "2119680"
  },
  {
    "text": "read something linearly it's very it's very easy in this particular case I have a conditional online four I have a big",
    "start": "2119680",
    "end": "2127420"
  },
  {
    "text": "old tenery here on line six another ternary on line nine uh another",
    "start": "2127420",
    "end": "2132579"
  },
  {
    "text": "conditional an else if inside the if a further",
    "start": "2132579",
    "end": "2137920"
  },
  {
    "text": "ternary so this is scoring I think three yeah because it is a double nested ternary uh and then down here there's a",
    "start": "2137920",
    "end": "2145480"
  },
  {
    "text": "couple more conditionals the threshold doesn't really matter the fact that this has scored 16",
    "start": "2145480",
    "end": "2152980"
  },
  {
    "text": "um doesn't really matter because but it is a good measure to say hey we",
    "start": "2152980",
    "end": "2159220"
  },
  {
    "text": "should probably take a look at this code it is quite hard to understand there's no need to have three different teneries",
    "start": "2159220",
    "end": "2166720"
  },
  {
    "text": "um there is some need to have a bunch of other conditionals but it's not that easy to understand and if we were to go",
    "start": "2166720",
    "end": "2173920"
  },
  {
    "text": "ahead and try and refactor this we might for example start um let's look at uh",
    "start": "2173920",
    "end": "2179140"
  },
  {
    "text": "this this particle count tells us how many pieces of confetti we should throw into the air for a slide and it grabs it",
    "start": "2179140",
    "end": "2186880"
  },
  {
    "text": "from data in the Dom in the HTML a data attribute called confetti particle count",
    "start": "2186880",
    "end": "2193500"
  },
  {
    "text": "and if it exists we parse it as an integer and if it doesn't exist we use a",
    "start": "2193500",
    "end": "2199599"
  },
  {
    "text": "default value of 200 pieces of confetti this is why I'm not allowed to throw real confetti because 200 is actually",
    "start": "2199599",
    "end": "2206260"
  },
  {
    "text": "quite large um I couldn't bring my own Roomba um",
    "start": "2206260",
    "end": "2211480"
  },
  {
    "text": "but so this particle count we're grabbing out of the Dom and and we're going to",
    "start": "2211480",
    "end": "2217720"
  },
  {
    "text": "read it into into this number and it is much easier to say uh you know data",
    "start": "2217720",
    "end": "2223440"
  },
  {
    "text": "attribute it's an integer data attribute or",
    "start": "2223440",
    "end": "2229240"
  },
  {
    "text": "default um copilot's going to help me out here if we write a function that just says uh",
    "start": "2229240",
    "end": "2236020"
  },
  {
    "text": "that takes this and actually just returns it we don't",
    "start": "2236020",
    "end": "2241240"
  },
  {
    "text": "have to drop the ternary there's nothing actually inherently wrong with this ternary but uh if the particle count",
    "start": "2241240",
    "end": "2248500"
  },
  {
    "text": "there is just using integer data attribute or default with uh current",
    "start": "2248500",
    "end": "2253900"
  },
  {
    "text": "slide uh very particle count and 200 this now becomes",
    "start": "2253900",
    "end": "2260380"
  },
  {
    "text": "a lot easier to uh to understand like our code is now I don't want to say",
    "start": "2260380",
    "end": "2265660"
  },
  {
    "text": "self-documenting uh that's a phrase and a term that's been used too many times to try and claim that our code is so",
    "start": "2265660",
    "end": "2272260"
  },
  {
    "text": "smart you'll definitely know it by reading it once once only and straight through but",
    "start": "2272260",
    "end": "2277300"
  },
  {
    "text": "it is 100 more understandable to see a function that says we're getting an integer data attribute or a default than",
    "start": "2277300",
    "end": "2284619"
  },
  {
    "text": "it is to try and pass a ternary in our heads and so um",
    "start": "2284619",
    "end": "2290260"
  },
  {
    "text": "what's interesting no current slide obviously and L",
    "start": "2290260",
    "end": "2296220"
  },
  {
    "text": "oh it's all on one line now um and that's",
    "start": "2298420",
    "end": "2303300"
  },
  {
    "text": "actually because this is a bit more generic now which we can reuse and we return the",
    "start": "2303640",
    "end": "2311680"
  },
  {
    "text": "default and now the function Works um but what you actually see I've extracted one function I've got one",
    "start": "2311680",
    "end": "2318460"
  },
  {
    "text": "ternary out of the main function code of this thing and now my cognitive",
    "start": "2318460",
    "end": "2323619"
  },
  {
    "text": "complexity thing is not complaining anymore there's no longer a red underline there but it's actually still pretty complicated",
    "start": "2323619",
    "end": "2329859"
  },
  {
    "text": "we haven't fixed many things and this is why I think the uh that threshold that idea that the number 15 is too hard for",
    "start": "2329859",
    "end": "2336520"
  },
  {
    "text": "us is quite interesting because it's brought attention to this function as something that is a bit harder to",
    "start": "2336520",
    "end": "2342640"
  },
  {
    "text": "understand uh and and we can do more we can go further to refactor this and and create",
    "start": "2342640",
    "end": "2349420"
  },
  {
    "text": "the same behavior but um make it so much easier for somebody to understand when they get back I'm not",
    "start": "2349420",
    "end": "2356020"
  },
  {
    "text": "going to spend time rewriting this entire thing uh but I'll remind you again this is quite a long thing again",
    "start": "2356020",
    "end": "2362680"
  },
  {
    "text": "quite a lot of settings and stuff if we were to uh we were to extract all the kind of ternaries uh we have this",
    "start": "2362680",
    "end": "2369160"
  },
  {
    "text": "integer data attribute default we actually there's another thing where we get an array of things out of a data",
    "start": "2369160",
    "end": "2374560"
  },
  {
    "text": "attribute um and and then functions for like throwing a small amount a medium amount",
    "start": "2374560",
    "end": "2380260"
  },
  {
    "text": "and a large amount of confetti and the actual uh main function then becomes",
    "start": "2380260",
    "end": "2385960"
  },
  {
    "text": "this uh 18 line 18 line piece of code that is much more",
    "start": "2385960",
    "end": "2392520"
  },
  {
    "text": "understandable we start with a a conditional that says hey are we going to do some confetti",
    "start": "2392520",
    "end": "2398560"
  },
  {
    "text": "and then we use our functions not hard to parse in our minds uh ternaries to",
    "start": "2398560",
    "end": "2404500"
  },
  {
    "text": "get data uh and then we have one further conditional that says hey we're going to",
    "start": "2404500",
    "end": "2409780"
  },
  {
    "text": "do small a large or a medium or large amount and uh and we can just call functions on",
    "start": "2409780",
    "end": "2415960"
  },
  {
    "text": "that it's much more understandable here but if you do then have to change something like the small confetti",
    "start": "2415960",
    "end": "2421000"
  },
  {
    "text": "function we can go back to that and it turns out that's also just a nice simple easy chunk to understand",
    "start": "2421000",
    "end": "2428640"
  },
  {
    "text": "cognitive complexity uh or or measuring cognitive complexity is intended to help us",
    "start": "2428920",
    "end": "2435280"
  },
  {
    "text": "to break these things down so that over time we're going to um make it easier to",
    "start": "2435280",
    "end": "2441040"
  },
  {
    "text": "just to understand our code how far you go with that is up to you",
    "start": "2441040",
    "end": "2447339"
  },
  {
    "text": "you can just bring it back to the threshold but for long-term health of a",
    "start": "2447339",
    "end": "2452500"
  },
  {
    "text": "code base uh when you find something that's got too complex breaking it down refactoring it and making it less",
    "start": "2452500",
    "end": "2458140"
  },
  {
    "text": "complex is going to make your life better in the long run and so going to let's see um is a great",
    "start": "2458140",
    "end": "2465460"
  },
  {
    "text": "score it turns out it's the second biggest issue in JavaScript files uh it turns out it's",
    "start": "2465460",
    "end": "2472300"
  },
  {
    "text": "also it was the number three biggest issue in typescript files I thought I had that on the uh on the slide as well",
    "start": "2472300",
    "end": "2478540"
  },
  {
    "text": "uh it's number three visiting typescript files and as I said earlier like let in constant",
    "start": "2478540",
    "end": "2485380"
  },
  {
    "text": "via and things like that we understand what's going on there but it's not actually changing the code in a significant way",
    "start": "2485380",
    "end": "2491920"
  },
  {
    "text": "cognitive complexity is absolutely about how we do read understand and work with",
    "start": "2491920",
    "end": "2498579"
  },
  {
    "text": "our code and so if um if if you take anything away from it forget about the other four things",
    "start": "2498579",
    "end": "2504579"
  },
  {
    "text": "forget about the five things in typescript I mean finish your to-do's",
    "start": "2504579",
    "end": "2510480"
  },
  {
    "text": "guilty laughs from people I like that um finish those things but really what",
    "start": "2511060",
    "end": "2516160"
  },
  {
    "text": "you need to do is pay attention to the overly complicated functions that you've written uh and and try and simplify that",
    "start": "2516160",
    "end": "2523660"
  },
  {
    "text": "it's going to make your life easier as you have to change things and it's going to make it quicker and more",
    "start": "2523660",
    "end": "2529540"
  },
  {
    "text": "straightforward to change your systems in the future um I don't remember who said uh this is",
    "start": "2529540",
    "end": "2536680"
  },
  {
    "text": "discomfortable but I remember who said that like optimizing your code for changeability or deletability uh is",
    "start": "2536680",
    "end": "2542200"
  },
  {
    "text": "going to help you in that long run and uh and and being pointed out when something is cognitively complex which",
    "start": "2542200",
    "end": "2548500"
  },
  {
    "text": "is a little bit unnecessarily difficult to understand is going to help you there",
    "start": "2548500",
    "end": "2554280"
  },
  {
    "text": "are some tools that are going to help you figure out uh all of the uh all of the things including whether you're",
    "start": "2554800",
    "end": "2560440"
  },
  {
    "text": "using VAR instead of oh more confetti sorry or triple equals a double equals",
    "start": "2560440",
    "end": "2565480"
  },
  {
    "text": "several equals um absolutely like uh I'm not here to just pitch my product but like Sona",
    "start": "2565480",
    "end": "2571780"
  },
  {
    "text": "cloud is free for open source things and there's the open source Sona Cube Edition which will allow you to analyze",
    "start": "2571780",
    "end": "2577119"
  },
  {
    "text": "your projects and find these kind of things out uh Sunderland itself is also free uh because",
    "start": "2577119",
    "end": "2583359"
  },
  {
    "text": "um we just want you to be able to work in your editor and and find out when things are going a little bit wrong",
    "start": "2583359",
    "end": "2590920"
  },
  {
    "text": "on the open source side of things as well if you're an eslint user uh eslint itself doesn't have an idea of cognitive",
    "start": "2590920",
    "end": "2597280"
  },
  {
    "text": "complexity it does have a cyclomatic complexity rule but uh the uh we have a plug-in for",
    "start": "2597280",
    "end": "2604960"
  },
  {
    "text": "eslint uh called eslint plugin sona.js has a bunch of rules that again the one I'm most interested in excited in",
    "start": "2604960",
    "end": "2611560"
  },
  {
    "text": "particularly about this is eslint plugin sonojs which will tell you if you are",
    "start": "2611560",
    "end": "2616780"
  },
  {
    "text": "already using your slint uh when uh some things are too complicated I will post",
    "start": "2616780",
    "end": "2621880"
  },
  {
    "text": "the links to these tools um I'll put them on Twitter I'll post them in the uh slack room for NDC if",
    "start": "2621880",
    "end": "2629260"
  },
  {
    "text": "you're there as well along with the slides and then I have some of the links um the uh I learned about cognitive",
    "start": "2629260",
    "end": "2636819"
  },
  {
    "text": "about Steve why when I joined Sona uh because we'd we'd published a paper on it and I don't ever read computer",
    "start": "2636819",
    "end": "2643540"
  },
  {
    "text": "science papers probably should do more but I've read that one several times now because I",
    "start": "2643540",
    "end": "2649900"
  },
  {
    "text": "thought it was so good we're also working on improving it particularly for JavaScript with more modern JavaScript recently so I will share the link to the",
    "start": "2649900",
    "end": "2657400"
  },
  {
    "text": "paper encoding complexity it's very readable and very understandable um this is the code is read much more",
    "start": "2657400",
    "end": "2664000"
  },
  {
    "text": "often than it's written so plan accordingly is where I got one of the quotes from the earlier thing and it's just a really nice read to remind",
    "start": "2664000",
    "end": "2670900"
  },
  {
    "text": "ourselves that we are indeed coding for ourselves and our colleagues and not",
    "start": "2670900",
    "end": "2676900"
  },
  {
    "text": "necessarily just a machine that's going to read it um and at the bottom there",
    "start": "2676900",
    "end": "2682900"
  },
  {
    "text": "I wrote a confetti plugin for real vljs for this presentation so I could have as much confetti as I wanted to but I have",
    "start": "2682900",
    "end": "2689380"
  },
  {
    "text": "to published that as well so if you ever want to make presentations and have confetti uh I'm sharing the link to the",
    "start": "2689380",
    "end": "2695800"
  },
  {
    "text": "source code for that as well um it's actually still in the unrefactured version right now but it works I just",
    "start": "2695800",
    "end": "2702400"
  },
  {
    "text": "don't plan to change it um so ultimately um what we're attempting to achieve I",
    "start": "2702400",
    "end": "2709240"
  },
  {
    "text": "think as we are developers and as we work on our applications and as we uh",
    "start": "2709240",
    "end": "2714400"
  },
  {
    "text": "build products and things uh it's clean code if you can continue to keep working",
    "start": "2714400",
    "end": "2721180"
  },
  {
    "text": "on your code and making it better over time not just changing it and adding things but making uh the entire thing",
    "start": "2721180",
    "end": "2727780"
  },
  {
    "text": "better we clean as you code and make things better um cognitive property is a great little",
    "start": "2727780",
    "end": "2734020"
  },
  {
    "text": "measure to show you when it's time to refactor something when it's time to revisit something uh and uh",
    "start": "2734020",
    "end": "2741099"
  },
  {
    "text": "so I encourage you to refactor those things as you find that I encourage you to code for readability",
    "start": "2741099",
    "end": "2746260"
  },
  {
    "text": "it's it's not just for your colleagues it's for yourself as well in six or 12 months time uh and clear code for your",
    "start": "2746260",
    "end": "2752800"
  },
  {
    "text": "future self uh you're gonna make yourself a lot happier in that way and we can overall reduce all these issues",
    "start": "2752800",
    "end": "2758859"
  },
  {
    "text": "that I managed to extract out of out of the data so that's all I've got for you today",
    "start": "2758859",
    "end": "2765220"
  },
  {
    "text": "again my name is sonash I'm a developer advocate for Sona um I'm also a pretty much advocate for",
    "start": "2765220",
    "end": "2770560"
  },
  {
    "text": "writing less complicated functions uh so come talk to me about that whenever you can",
    "start": "2770560",
    "end": "2775599"
  },
  {
    "text": "um again I'm on Twitter and all those things there but also uh we have a little booth uh down in the middle of",
    "start": "2775599",
    "end": "2780819"
  },
  {
    "text": "the Expo so come say hi uh grab a sticker uh or just uh you know I give",
    "start": "2780819",
    "end": "2785980"
  },
  {
    "text": "out high fives too again I wasn't allowed confetti",
    "start": "2785980",
    "end": "2791220"
  },
  {
    "text": "but yeah thank you very much um let's uh let's get rid of those top five issues let's uh let's reduce that let's make",
    "start": "2791220",
    "end": "2797260"
  },
  {
    "text": "less complicated code let's make cleaner code thank you for joining us today [Applause]",
    "start": "2797260",
    "end": "2806300"
  }
]