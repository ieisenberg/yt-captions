[
  {
    "start": "0",
    "end": "54000"
  },
  {
    "text": "okay welcome I call this chalk modern web application",
    "start": "7149",
    "end": "14420"
  },
  {
    "text": "bugs although in the program it said something else it said also or beyond the OWASP top 10",
    "start": "14420",
    "end": "19460"
  },
  {
    "text": "and I'll get back to that why I removed it but a little bit about me first my",
    "start": "19460",
    "end": "25250"
  },
  {
    "text": "name is Alan after all I work at a company called Blanc I do all kinds of",
    "start": "25250",
    "end": "30500"
  },
  {
    "text": "security related stuff development security testing and I'm also starting",
    "start": "30500",
    "end": "36830"
  },
  {
    "text": "doing quite a lot of bug bounty hunting I also built open-source security tools",
    "start": "36830",
    "end": "42440"
  },
  {
    "text": "such as retire Jess and I'm head of the last chapter here in Oslo and there you",
    "start": "42440",
    "end": "47510"
  },
  {
    "text": "also have my Twitter handle so while doing these bug bounties I was sort of",
    "start": "47510",
    "end": "55729"
  },
  {
    "start": "54000",
    "end": "224000"
  },
  {
    "text": "looking at the OS top ten and this is the older was top ten the one from 2013 and I was looking at it and I thought",
    "start": "55729",
    "end": "61939"
  },
  {
    "text": "well there is quite a lot of stuff missing here because I see a lot of these things that pop up in this bug",
    "start": "61939",
    "end": "67400"
  },
  {
    "text": "bounty program that's not mentioned and then when the the the BRC one of the",
    "start": "67400",
    "end": "73429"
  },
  {
    "text": "newest top 10 came out I thought well these things are still missing which is odd sounds like I have some",
    "start": "73429",
    "end": "79850"
  },
  {
    "text": "weird noises coming from my microphone sorry about that and you can see here",
    "start": "79850",
    "end": "85880"
  },
  {
    "text": "the the blue ones those were the new suggestions and the green ones were merged so we had a 4 and",
    "start": "85880",
    "end": "91939"
  },
  {
    "text": "a 7 were merged into a 4 and a 10 was gone and these new ones they created",
    "start": "91939",
    "end": "97549"
  },
  {
    "text": "quite a bit of controversy and and especially the last one a 10 under",
    "start": "97549",
    "end": "102829"
  },
  {
    "text": "protected api's that sounds a bit odd but never mind like this at this time this was the time where I suggested this",
    "start": "102829",
    "end": "109819"
  },
  {
    "text": "talk for this conference but then of course something happened the new OS",
    "start": "109819",
    "end": "115490"
  },
  {
    "text": "top-10 ended up looking like this instead so they really changed things around and they they moved some some",
    "start": "115490",
    "end": "122539"
  },
  {
    "text": "things have just moved places but we see we have a new a 4 and a new a a a 8 and a new a 10 and unfortunately for me a 4",
    "start": "122539",
    "end": "131150"
  },
  {
    "text": "and a 8 were supposed to be in this talk and now they were in the u.s. top 10 so it's no longer be on but and and I was",
    "start": "131150",
    "end": "138800"
  },
  {
    "text": "now thinking what should do about this because or I could cheat I could pick the ones that were removed",
    "start": "138800",
    "end": "144560"
  },
  {
    "text": "and then instead of those that I intended to talk about but I decided well I'm gonna go with my original plan",
    "start": "144560",
    "end": "151460"
  },
  {
    "text": "because I think think these things are important and I'm gonna go beyond what it says in the ORS top 10 I'm gonna show",
    "start": "151460",
    "end": "157460"
  },
  {
    "text": "you a bit more and I think it will be useful for you anyway and not everything here is in the top 10 either because I'm",
    "start": "157460",
    "end": "163220"
  },
  {
    "text": "gonna show a lot of different things if we go to these bug bounty programs they",
    "start": "163220",
    "end": "168920"
  },
  {
    "text": "often publish statistics so this is from bugcrowd from 2017 and we see sequel",
    "start": "168920",
    "end": "177890"
  },
  {
    "text": "injection is still one one of the the most common ones here which kind of",
    "start": "177890",
    "end": "183080"
  },
  {
    "text": "reflects the OS part 10 the 63% for the long one 18 for the almost as long the",
    "start": "183080",
    "end": "190910"
  },
  {
    "text": "numbers don't really make sense but never mind that and if we go to hacker 1 which is another one we see that the most common",
    "start": "190910",
    "end": "198470"
  },
  {
    "text": "ones are still the same things like we had process scripting on top we have improper authentication we had",
    "start": "198470",
    "end": "203900"
  },
  {
    "text": "cross-site request forgery which was now removed from the u.s. top 10 and we have a lot of different things like we have",
    "start": "203900",
    "end": "209959"
  },
  {
    "text": "all the injection attacks down here so obviously we have some we see the same",
    "start": "209959",
    "end": "216140"
  },
  {
    "text": "things kind of as always top 10 but there are still a lot of things that are happening that we don't necessarily see",
    "start": "216140",
    "end": "222590"
  },
  {
    "text": "in these statistics so let's start with with XML because XML is fun or something",
    "start": "222590",
    "end": "229940"
  },
  {
    "start": "224000",
    "end": "593000"
  },
  {
    "text": "like that so we have this simple application here I can I can send it an",
    "start": "229940",
    "end": "236330"
  },
  {
    "text": "XML and of course I get the XML back nothing really spectacular about that",
    "start": "236330",
    "end": "243730"
  },
  {
    "text": "and I can of course get some XML so the top window here is the stuff that I'm",
    "start": "244060",
    "end": "249440"
  },
  {
    "text": "sending and the lower window is the stuff that I'm getting back so I can I can get something back something that",
    "start": "249440",
    "end": "254750"
  },
  {
    "text": "I've sent so how many of you are familiar what an XML external entity attack is not so many ok good so what we",
    "start": "254750",
    "end": "264050"
  },
  {
    "text": "doing with an XML entity attack is that we are defining new entities so in this",
    "start": "264050",
    "end": "269180"
  },
  {
    "text": "case we are defining an entity here and we're saying that this empty",
    "start": "269180",
    "end": "274610"
  },
  {
    "text": "tea will be the contents of this file and then we're using this entity down",
    "start": "274610",
    "end": "280250"
  },
  {
    "text": "here so let's try to send this one and now suddenly the contents of the file",
    "start": "280250",
    "end": "285979"
  },
  {
    "text": "appears down here there are some cabbage though because the file needs to or the collective file needs to be valid XML",
    "start": "285979",
    "end": "293139"
  },
  {
    "text": "but there are some ways around it but this is kind of the basic example of XML",
    "start": "293139",
    "end": "300800"
  },
  {
    "text": "external entities we can steal files of the system but what if we move a bit",
    "start": "300800",
    "end": "308120"
  },
  {
    "text": "further so in this case the application will allow me to post an XSLT and it",
    "start": "308120",
    "end": "313580"
  },
  {
    "text": "will take an already existing contact which was the contact number one and would create HTML by applying this XSLT",
    "start": "313580",
    "end": "319879"
  },
  {
    "text": "to the XML and I mean the normal example would be I get something like this back",
    "start": "319879",
    "end": "325099"
  },
  {
    "text": "like I've I'm creating an HTML body a table and then some some table elements",
    "start": "325099",
    "end": "330949"
  },
  {
    "text": "and everything looks like this done here everything is fine but XSLT has some",
    "start": "330949",
    "end": "336919"
  },
  {
    "text": "functions so first we can start by kind of grabbing information about what's",
    "start": "336919",
    "end": "342080"
  },
  {
    "text": "running on the server so you can see we're using system property and then x SL version x SL vendor blah blah blah",
    "start": "342080",
    "end": "349009"
  },
  {
    "text": "all the way down here and I'm getting back what product is actually running on this server so now you can see that I",
    "start": "349009",
    "end": "355190"
  },
  {
    "text": "have version 2 of XSLT which is incidentally a very nice attack surface",
    "start": "355190",
    "end": "362439"
  },
  {
    "text": "so but the first thing here is a standard standard from for XSLT one",
    "start": "362439",
    "end": "370009"
  },
  {
    "text": "feature which is called document and the document function is used here so I'm gonna just grab another XML document off",
    "start": "370009",
    "end": "378020"
  },
  {
    "text": "the server and include it in the in the output so now I'm stealing like the the",
    "start": "378020",
    "end": "383330"
  },
  {
    "text": "pom file the the the deployment descriptor or the bill descriptor of this system that's on that's running",
    "start": "383330",
    "end": "390169"
  },
  {
    "text": "this disponible website so I'm just stealing stuff and I can figure out what kind of what kind of libraries is being",
    "start": "390169",
    "end": "396710"
  },
  {
    "text": "used there are some of them may be vulnerable etc so that's that's nice from an attacker perspective I could",
    "start": "396710",
    "end": "405620"
  },
  {
    "text": "also do ecstasy in the XSLT a lot of people now they kind of protect",
    "start": "405620",
    "end": "411230"
  },
  {
    "text": "the XML parsers from from xxe but in this case I'm doing it in the stylesheet",
    "start": "411230",
    "end": "416390"
  },
  {
    "text": "instead of doing it in the actual XML Durham's that I sent in earlier so in this case we're gonna see the exact same",
    "start": "416390",
    "end": "422990"
  },
  {
    "text": "thing happening I'm grabbing the content of the file and just pushing it down here but also access XSLT to has a",
    "start": "422990",
    "end": "433910"
  },
  {
    "text": "different function which is the nicest one of all it's called unpassed text and",
    "start": "433910",
    "end": "439670"
  },
  {
    "text": "it does exactly that it reads unpierced text it doesn't try to parse it just grabs the contents of the local file and",
    "start": "439670",
    "end": "446600"
  },
  {
    "text": "pushes it into the resulting document so if we send this one we get the same",
    "start": "446600",
    "end": "452930"
  },
  {
    "text": "thing so now we've kind of stolen some stuff here maybe we could go even",
    "start": "452930",
    "end": "460130"
  },
  {
    "text": "further we could use this to connect to other systems so in this case I'm gonna",
    "start": "460130",
    "end": "466150"
  },
  {
    "text": "go and do a back end request to some system that's not available from the",
    "start": "466150",
    "end": "471320"
  },
  {
    "text": "outside so so now inside one server I'm gonna try to pivot and try to access",
    "start": "471320",
    "end": "476660"
  },
  {
    "text": "something else and those of you familiar with or actually the name of the system",
    "start": "476660",
    "end": "481669"
  },
  {
    "text": "is here so you see this is an elastic search instance that I can reach by doing this so this elastic search",
    "start": "481669",
    "end": "486950"
  },
  {
    "text": "instance wasn't available from the outside but now I can attack it because I'm attacking it through another system",
    "start": "486950",
    "end": "494259"
  },
  {
    "text": "also there is something called blind xxe",
    "start": "494740",
    "end": "500290"
  },
  {
    "text": "and we can use this to to steal files where we can't immediately see the",
    "start": "500290",
    "end": "506210"
  },
  {
    "text": "results ourselves like in the examples that I just showed you you could see the XML coming back you could see the",
    "start": "506210",
    "end": "512120"
  },
  {
    "text": "contents so what this thing does is it creates an entity that contains the",
    "start": "512120",
    "end": "517880"
  },
  {
    "text": "contents of this file and then it loads a DTD from this location and this DTD looks like this so it takes this data 3",
    "start": "517880",
    "end": "525560"
  },
  {
    "text": "here which contains the contents of this file now and it pushes it to the end of a URL and this one becomes a new entity",
    "start": "525560",
    "end": "532250"
  },
  {
    "text": "that's pushed in here and it's kind of back in forth a bit but this allows me to kind of send up an XML and somewhere",
    "start": "532250",
    "end": "538910"
  },
  {
    "text": "back in the system somehow I don't know where this is going to parsed and it's gonna read this thing",
    "start": "538910",
    "end": "544339"
  },
  {
    "text": "and then it's gonna publish the contents of that file back out to my server so I'm kind of stealing in a blind fashion",
    "start": "544339",
    "end": "551509"
  },
  {
    "text": "I don't have to see the result I just have to be able to submit an XML and see if something happens later it can happen immediately and get happen",
    "start": "551509",
    "end": "557869"
  },
  {
    "text": "a lot later depending on the structure of the application so an example from a",
    "start": "557869",
    "end": "565179"
  },
  {
    "text": "from a bug bounty this is from hacker one and I find this this exact one to be",
    "start": "565179",
    "end": "571879"
  },
  {
    "text": "a bit interesting because if we look at the severity here they say medium 5.3 so",
    "start": "571879",
    "end": "577429"
  },
  {
    "text": "this is a medium severity but they did pay quite a lot of money for it ten thousand dollars that's quite an",
    "start": "577429",
    "end": "584029"
  },
  {
    "text": "amount of money this was on a Twitter endpoint alright so this was this was",
    "start": "584029",
    "end": "592309"
  },
  {
    "text": "XML external entities so off to the next one and this one is is also in was also",
    "start": "592309",
    "end": "597709"
  },
  {
    "start": "593000",
    "end": "886000"
  },
  {
    "text": "included in the most of them 2017",
    "start": "597709",
    "end": "602769"
  },
  {
    "text": "serialization is something we often use like we communicate between different servers and we have to find some way of",
    "start": "602889",
    "end": "609069"
  },
  {
    "text": "converting or internal objects to some wire structure and then convert it back",
    "start": "609069",
    "end": "614360"
  },
  {
    "text": "to internal objects so it could be something as simple as XML it calls will",
    "start": "614360",
    "end": "620239"
  },
  {
    "text": "be binary protocols so we we see a lot of like hey sub-caste and all these kinds of caches they use binary formats",
    "start": "620239",
    "end": "625850"
  },
  {
    "text": "instead but it could it could be JSON it could be XML as well this is used in a",
    "start": "625850",
    "end": "631129"
  },
  {
    "text": "lot of different place like I mean web services are an example of this REST API czar an example of this but also all",
    "start": "631129",
    "end": "637040"
  },
  {
    "text": "kinds of distributed caches distributed databases etc etc and there are a lot of",
    "start": "637040",
    "end": "642169"
  },
  {
    "text": "places where we actually deserialize things like in in cookies like in jvt and things like that we also deserialize",
    "start": "642169",
    "end": "648769"
  },
  {
    "text": "things we've serialized it to something we can transfer and then we get it back the thing with this serialization attack",
    "start": "648769",
    "end": "655819"
  },
  {
    "text": "is that we can use this to do a lot of bad stuff we can do tonight a denial of service like take down the system we can",
    "start": "655819",
    "end": "662629"
  },
  {
    "text": "manipulate the state internally we can compromise the integrity or we can even",
    "start": "662629",
    "end": "667759"
  },
  {
    "text": "get remote code execution which is the most fun one so to be able to attack",
    "start": "667759",
    "end": "674269"
  },
  {
    "text": "something we need to have a gadget so in on top here we have a simple class",
    "start": "674269",
    "end": "679730"
  },
  {
    "text": "that does nothing really I mean if you if you deserialize into this into this class you're just gonna get a person",
    "start": "679730",
    "end": "685399"
  },
  {
    "text": "object with a name the thing about the lower one though is that it actually does something so if you can if you can",
    "start": "685399",
    "end": "692149"
  },
  {
    "text": "desser lies something to this object it's gonna do something in the constructor which you might say well",
    "start": "692149",
    "end": "697519"
  },
  {
    "text": "that's bad practice why are you doing this but it happens that we can actually combine lots of gadgets that together",
    "start": "697519",
    "end": "703430"
  },
  {
    "text": "form a chain where we can do something like this this is a very simplified example but if I were to actually write",
    "start": "703430",
    "end": "710750"
  },
  {
    "text": "something and send it something like this either JSON or XML uh and it would",
    "start": "710750",
    "end": "717019"
  },
  {
    "text": "be DC right into that class it would actually execute it and this is quite bad so but there are some prerequisites",
    "start": "717019",
    "end": "724160"
  },
  {
    "text": "we need to be able to tell the system which object it's supposed to deserialize to so luckily for us or",
    "start": "724160",
    "end": "732769"
  },
  {
    "text": "maybe not some deserialize ursday allow us to specify types so here is an example from",
    "start": "732769",
    "end": "741560"
  },
  {
    "text": "a dotnet application and in this case you can see the dollar type thing that's several places here that's a feature",
    "start": "741560",
    "end": "748639"
  },
  {
    "text": "luckily you have to turn it on for it to book to work but in this case it allows us to tell the deserialize of which",
    "start": "748639",
    "end": "755180"
  },
  {
    "text": "object it's supposed to deserialize to so in this case we're kind of combining",
    "start": "755180",
    "end": "760250"
  },
  {
    "text": "a couple of gadgets so we have the object data provider it's gonna instantiate a process and it's gonna give it count the calculator as an",
    "start": "760250",
    "end": "767029"
  },
  {
    "text": "argument and it then is going to invoke the start method so in this case we we build a process and then we invoke",
    "start": "767029",
    "end": "773149"
  },
  {
    "text": "starts so we have a couple of gadgets that work together here here's another",
    "start": "773149",
    "end": "778370"
  },
  {
    "text": "example from a job application and in this case we actually have a Roman or",
    "start": "778370",
    "end": "783620"
  },
  {
    "text": "application that we can play with so I'm gonna I'm gonna send this in what it does here is it it builds a proxy of a",
    "start": "783620",
    "end": "790819"
  },
  {
    "text": "contact and the contact was is what we're sending back and forth and then it uses an event tunnel and a process",
    "start": "790819",
    "end": "796670"
  },
  {
    "text": "builder and it basically will execute ping three times against this IP the",
    "start": "796670",
    "end": "803180"
  },
  {
    "text": "problem is I get this back what is this well I can't convert a",
    "start": "803180",
    "end": "809930"
  },
  {
    "text": "UNIX process to a string okay so this didn't help me much maybe if I can get",
    "start": "809930",
    "end": "816020"
  },
  {
    "text": "it to do something that I could actually see the end result of and luckily for us we can so what I'm going to do in this",
    "start": "816020",
    "end": "824720"
  },
  {
    "text": "case is that I'm gonna invoke bash I'm gonna tell it to create a reverse shell",
    "start": "824720",
    "end": "829880"
  },
  {
    "text": "back to my laptop but then I first have to listen on the port so I'm going to",
    "start": "829880",
    "end": "836810"
  },
  {
    "text": "you set up my my laptop to listen on",
    "start": "836810",
    "end": "843050"
  },
  {
    "text": "this port and hopefully I get a shell so",
    "start": "843050",
    "end": "849860"
  },
  {
    "text": "now I'm logged in to this server and I can invoke commands and incidentally I'm",
    "start": "849860",
    "end": "855410"
  },
  {
    "text": "also logged in this route because of course they were running this application is route which is not very nice they should so now you can see why",
    "start": "855410",
    "end": "862839"
  },
  {
    "text": "why this can be a really really dangerous attack so once again here's",
    "start": "862839",
    "end": "870560"
  },
  {
    "text": "something from from hacker 1 in this case Starbucks was the one that had the",
    "start": "870560",
    "end": "876320"
  },
  {
    "text": "program and of course the severity err was critical and they said well I could basically run code on your server so",
    "start": "876320",
    "end": "882470"
  },
  {
    "text": "that's not a good place to be in the",
    "start": "882470",
    "end": "887959"
  },
  {
    "start": "886000",
    "end": "1280000"
  },
  {
    "text": "next thing we're gonna talk about is something called server side request forgery and it sounds a bit like CSRF",
    "start": "887959",
    "end": "894589"
  },
  {
    "text": "client-side request forgery but this time it happens on the server so it",
    "start": "894589",
    "end": "899810"
  },
  {
    "text": "could be something very simple something like this so let's say we have a browser we can send it a request to our server",
    "start": "899810",
    "end": "906140"
  },
  {
    "text": "and that somehow makes the server make some kind of packing requests it could",
    "start": "906140",
    "end": "911600"
  },
  {
    "text": "be like a reverse proxy but it could also be like let's say we're uploading an image but instead of uploading the",
    "start": "911600",
    "end": "918050"
  },
  {
    "text": "image we're just going to tell it this is the URL where you can find the image and then the server application goes out and and grabs that image and pulls it",
    "start": "918050",
    "end": "924860"
  },
  {
    "text": "back in and then uses it for our profile picture or whatever so we can somehow influence the way that the server",
    "start": "924860",
    "end": "931040"
  },
  {
    "text": "application will make HTTP requests out of out of the back there so a simple",
    "start": "931040",
    "end": "938180"
  },
  {
    "text": "example let's say we have a request coming in from the router that looks like this but we don't want to host the",
    "start": "938180",
    "end": "943310"
  },
  {
    "text": "picture on our server itself because we have this other host that are actually processing the images and creating all",
    "start": "943310",
    "end": "949220"
  },
  {
    "text": "kinds of versions of them so we have this nice little piece of code here that",
    "start": "949220",
    "end": "954890"
  },
  {
    "text": "takes the incoming URL and replaces the first part with the URL of the actual",
    "start": "954890",
    "end": "959900"
  },
  {
    "text": "place we want to go so we can end up removing the first part and then building a new URL and then we we go out",
    "start": "959900",
    "end": "967280"
  },
  {
    "text": "and of course there are ways to attack this thing because it's doing something really stupid here so the first attack",
    "start": "967280",
    "end": "973520"
  },
  {
    "text": "is this well if we just do evil comm",
    "start": "973520",
    "end": "979610"
  },
  {
    "text": "it's gonna remove the first part and then concatenate the stuff and then we end up with going to image just",
    "start": "979610",
    "end": "984950"
  },
  {
    "text": "example.org evil comm which is of course a completely different server than example.org",
    "start": "984950",
    "end": "991870"
  },
  {
    "text": "we could also do something like this so we do a colon and then some variable and",
    "start": "992020",
    "end": "998630"
  },
  {
    "text": "then at and then an IP well what happens then is that the first part becomes like",
    "start": "998630",
    "end": "1004630"
  },
  {
    "text": "images dot example.org becomes the username and dummy becomes the password and then the actual IP we're connecting",
    "start": "1004630",
    "end": "1010030"
  },
  {
    "text": "to is 10.00 that one but these are kind",
    "start": "1010030",
    "end": "1015190"
  },
  {
    "text": "of abusing a piece of code that's there but sometimes we don't have to do that often we see things like this well if",
    "start": "1015190",
    "end": "1021190"
  },
  {
    "text": "you want to import data just give us you the URL and we're gonna go ahead and grab something like like the image or",
    "start": "1021190",
    "end": "1026230"
  },
  {
    "text": "example for instance so in this case maybe we could tell it like I go with it go out and grab this XML data stuff and",
    "start": "1026230",
    "end": "1032140"
  },
  {
    "text": "just bring that back in of course we can then start pointing this other services internally so we could point it at in",
    "start": "1032140",
    "end": "1038740"
  },
  {
    "text": "this case a MongoDB we could point it to every anything that runs internally and we can access internal services because",
    "start": "1038740",
    "end": "1046449"
  },
  {
    "text": "of the way URL handlers work sometimes we can also grab files because well they",
    "start": "1046449",
    "end": "1052420"
  },
  {
    "text": "that's a valid URL like file that blah blah blah so they're gonna go out and grab that file instead and then bring us",
    "start": "1052420",
    "end": "1058870"
  },
  {
    "text": "that back but if we move to - cloud services it gets even worse because on",
    "start": "1058870",
    "end": "1065920"
  },
  {
    "text": "many of these services there's something called the metadata host which is on that IP there and on that we can find",
    "start": "1065920",
    "end": "1072010"
  },
  {
    "text": "lots of information about the server itself and we can also get security credentials",
    "start": "1072010",
    "end": "1077470"
  },
  {
    "text": "and of course we could use this to grab stuff off of of MongoDB or Ravin DB or any other things that has a web",
    "start": "1077470",
    "end": "1083950"
  },
  {
    "text": "interface that we can reach from the system that we're attacking so okay",
    "start": "1083950",
    "end": "1090669"
  },
  {
    "text": "let's try to protect against this we're gonna do blacklisting so obviously we're gonna blacklist that URL because that's a bad one what about this one hmm some",
    "start": "1090669",
    "end": "1100149"
  },
  {
    "text": "of you might wonder is that really a valid IP I mean the numbers are higher than 256 well a lot of URL parsing",
    "start": "1100149",
    "end": "1107169"
  },
  {
    "text": "libraries they do mod 256 so this is actually an IP with an overflow this is",
    "start": "1107169",
    "end": "1115090"
  },
  {
    "text": "a numeric version of an IP address and this is a numeric version of an IP",
    "start": "1115090",
    "end": "1120429"
  },
  {
    "text": "address with overflow this is a hex version of an IP address hex with out",
    "start": "1120429",
    "end": "1126669"
  },
  {
    "text": "the dots hex will overflow octal IP",
    "start": "1126669",
    "end": "1132519"
  },
  {
    "text": "address an octal with overflow by the way I stole all of this from a really skilled guy Nikola Gregoire I have a",
    "start": "1132519",
    "end": "1140200"
  },
  {
    "text": "link to his PDF down there he's done a lot of interesting stuff in the space there's a really good talk from him that",
    "start": "1140200",
    "end": "1147850"
  },
  {
    "text": "you should look up where he's talking about how he's used this to attack Yahoo and all kinds of big companies which is",
    "start": "1147850",
    "end": "1154299"
  },
  {
    "text": "really interesting he has some really cool ways of doing things but we were we're not quite done with the the",
    "start": "1154299",
    "end": "1160929"
  },
  {
    "text": "blacklisting stuff yet because we could add a DNS entry to our sis to our own DNS and just point it to",
    "start": "1160929",
    "end": "1168100"
  },
  {
    "text": "localhost and something like this exists already there's something called sip bio",
    "start": "1168100",
    "end": "1173559"
  },
  {
    "text": "so if we do 127.0.0.1 dot zip-tie oh that's gonna resolve to a hundred and",
    "start": "1173559",
    "end": "1180370"
  },
  {
    "text": "twenty seven zero zero one you can also do like a bit a little bit more",
    "start": "1180370",
    "end": "1187200"
  },
  {
    "text": "obfuscated stuff like this again it resolves 227 series zero one and this is",
    "start": "1187200",
    "end": "1193299"
  },
  {
    "text": "like the base 36 of the number the IP address and you can see it's kind of in",
    "start": "1193299",
    "end": "1198610"
  },
  {
    "text": "reverse order or we could do something like this so W W Bank a no and then this",
    "start": "1198610",
    "end": "1205389"
  },
  {
    "text": "address and it will still resolve to the same thing for a localhost weaker",
    "start": "1205389",
    "end": "1210970"
  },
  {
    "text": "so do just dot 0.000 because well that's all the interfaces on the host or we",
    "start": "1210970",
    "end": "1218470"
  },
  {
    "text": "could do something like this because it doesn't have to be serious everyone that's just what we're normally using and of course with ipv6 we get all kinds",
    "start": "1218470",
    "end": "1225640"
  },
  {
    "text": "of weird things going on as well so",
    "start": "1225640",
    "end": "1230909"
  },
  {
    "text": "again if we move to tracker one we see one here from alienvault and this was if",
    "start": "1230909",
    "end": "1238870"
  },
  {
    "text": "you see what was what was happening all the way down here you can see this is",
    "start": "1238870",
    "end": "1243970"
  },
  {
    "text": "the IP that I was talking about 169 to 540 169 to 5/4 and in this case they use",
    "start": "1243970",
    "end": "1250360"
  },
  {
    "text": "this hostname here method nicob dotnet which is nicola Gregoire's own DNS",
    "start": "1250360",
    "end": "1258809"
  },
  {
    "text": "this is a kind of a nice way of circumventing it it doesn't look like it's gonna be resolved to something of",
    "start": "1258809",
    "end": "1264700"
  },
  {
    "text": "course they're protected against this we have to always normalize the IP and and resolve the IP and then look at the IP",
    "start": "1264700",
    "end": "1270280"
  },
  {
    "text": "address and to figure out whether we're connecting to something we're supposed to connect to or not all right",
    "start": "1270280",
    "end": "1276600"
  },
  {
    "text": "so this was a server side request forgery the next thing is template",
    "start": "1276600",
    "end": "1281980"
  },
  {
    "start": "1280000",
    "end": "1721000"
  },
  {
    "text": "injection and this was kind of added to the OWASP top 10 just as a single line",
    "start": "1281980",
    "end": "1287020"
  },
  {
    "text": "to the injection the a one but very few people actually know what this is and it",
    "start": "1287020",
    "end": "1296169"
  },
  {
    "text": "can be quite dangerous so a template could be something as easy as this so we",
    "start": "1296169",
    "end": "1302049"
  },
  {
    "text": "have a couple of HTML tags and we have this these mustaches or curly braces and",
    "start": "1302049",
    "end": "1307809"
  },
  {
    "text": "then a variable name so what what some of these templating systems are going to",
    "start": "1307809",
    "end": "1314080"
  },
  {
    "text": "do is something like this like there are JavaScript things that does this exact thing so they grab the stuff in the",
    "start": "1314080",
    "end": "1320530"
  },
  {
    "text": "middle and they do an evil and that to figure out what's the value of this thing so you might have JavaScript there",
    "start": "1320530",
    "end": "1325570"
  },
  {
    "text": "and that that might be perfectly okay unless someone else can influence your template but it's gonna is gonna try to",
    "start": "1325570",
    "end": "1331750"
  },
  {
    "text": "figure out what's the value of the stuff that's going on in the middle there and then put it all together and then there",
    "start": "1331750",
    "end": "1337780"
  },
  {
    "text": "you go so okay let's let's do another",
    "start": "1337780",
    "end": "1343149"
  },
  {
    "text": "example so in this case we have and then the titlebar variable contains hello and so the end result is an h1",
    "start": "1343149",
    "end": "1349220"
  },
  {
    "text": "with hello very basic stuff but then we're going to build a bit more a complex stuff so we're using an error",
    "start": "1349220",
    "end": "1356390"
  },
  {
    "text": "let's imagine that the dots there are lots of lines of code in between so we can't really see what's going on here",
    "start": "1356390",
    "end": "1362360"
  },
  {
    "text": "but we have two templates in this case and the unfortunate thing that we're doing here is we take one of those",
    "start": "1362360",
    "end": "1368210"
  },
  {
    "text": "templates and include them the result of rendering that template in another",
    "start": "1368210",
    "end": "1373309"
  },
  {
    "text": "template because now we allow whatever was in the title variable to influence the template so a standard example would",
    "start": "1373309",
    "end": "1381110"
  },
  {
    "text": "be something let's say that the variables contained title was hello and body was world so in this case the first",
    "start": "1381110",
    "end": "1387950"
  },
  {
    "text": "one would be h1 hello and then we include that in the second one and nothing bad happens but what if title was included curly",
    "start": "1387950",
    "end": "1397160"
  },
  {
    "text": "braces so would go in and what we would get from the first rendition was h1 and",
    "start": "1397160",
    "end": "1403220"
  },
  {
    "text": "then we would actually get new curly braces so we would try to create a new template and influence template and then",
    "start": "1403220",
    "end": "1408800"
  },
  {
    "text": "we would put that in the second template and now things start to go bad so once",
    "start": "1408800",
    "end": "1415220"
  },
  {
    "text": "again I really like demos so I'm going to do a demo of this in this case we",
    "start": "1415220",
    "end": "1420320"
  },
  {
    "text": "have a simple server-side application that's vulnerable to this so in this case I I've put my name up here and if I",
    "start": "1420320",
    "end": "1426590"
  },
  {
    "text": "click send it's gonna send that in and well in this case I've changed what the",
    "start": "1426590",
    "end": "1432320"
  },
  {
    "text": "windows means so at the top window now means the rendered HTML and the lower",
    "start": "1432320",
    "end": "1437840"
  },
  {
    "text": "window is the source code of that HTML so you can see I put my name in there it ended up inside an h1 and a P for some",
    "start": "1437840",
    "end": "1446150"
  },
  {
    "text": "reason and then it says hello so that's that's what we're actually seeing in the browser so what happens if I changed my",
    "start": "1446150",
    "end": "1455840"
  },
  {
    "text": "name then to 2 x 3 like that I hope you see it says hello 6 already down here so",
    "start": "1455840",
    "end": "1463580"
  },
  {
    "text": "I'm getting it's it's actually executed what I wrote here and the the end result",
    "start": "1463580",
    "end": "1468830"
  },
  {
    "text": "a pair is hello 6 well that's kind of boring like yeah I can do math but I can",
    "start": "1468830",
    "end": "1474679"
  },
  {
    "text": "do that with a calculator as well so let's do something more fun okay so we're gonna try instead of instead of",
    "start": "1474679",
    "end": "1480289"
  },
  {
    "text": "using two times - we're gonna reference an object that might exist see what happens okay now",
    "start": "1480289",
    "end": "1487399"
  },
  {
    "text": "we're getting somewhere I get a fatal error and it says something about I can't I can't convert this class to a",
    "start": "1487399",
    "end": "1494029"
  },
  {
    "text": "string and things are bad and I don't like this but now we know that we have template injection and we know we can",
    "start": "1494029",
    "end": "1500210"
  },
  {
    "text": "access infernal objects but that's not fun either let's do something more so in",
    "start": "1500210",
    "end": "1505519"
  },
  {
    "text": "this case we're gonna do an attack on something called twig so what I'm doing here is I'm regular",
    "start": "1505519",
    "end": "1510980"
  },
  {
    "text": "registering a filter callback called exec which executes stuff and then I'm",
    "start": "1510980",
    "end": "1516679"
  },
  {
    "text": "gonna get that filter and I'm gonna send it ID so in this case it tells me well",
    "start": "1516679",
    "end": "1523100"
  },
  {
    "text": "okay this system is running as www and IDs but I'm not done yet because I",
    "start": "1523100",
    "end": "1532399"
  },
  {
    "text": "want to properly attack this thing so instead of this we're gonna go back to",
    "start": "1532399",
    "end": "1537619"
  },
  {
    "text": "the bash thing same thing that we did for for the deserialization attack so",
    "start": "1537619",
    "end": "1543200"
  },
  {
    "text": "again we bring up our trusted console we're still logged in to the other server so we had to get out of that one",
    "start": "1543200",
    "end": "1548419"
  },
  {
    "text": "set up a new listener and hopefully yes now we're once again back inside another",
    "start": "1548419",
    "end": "1554480"
  },
  {
    "text": "server this time we're not logged in as root as you can see it says www dot and",
    "start": "1554480",
    "end": "1560179"
  },
  {
    "text": "we do that from the previous slide but at least I have a shell on the server so I could try to do previous from there or",
    "start": "1560179",
    "end": "1566029"
  },
  {
    "text": "something like that nasty stuff so this",
    "start": "1566029",
    "end": "1572210"
  },
  {
    "text": "was kind of server-side templating section but it doesn't have to be",
    "start": "1572210",
    "end": "1577639"
  },
  {
    "text": "server-side so remember it says two times three and then we got hello six back what if I do it client-side so now",
    "start": "1577639",
    "end": "1587149"
  },
  {
    "text": "what now it returns two times three down here but if we look at the result being HTML that's being rendered it still says",
    "start": "1587149",
    "end": "1593509"
  },
  {
    "text": "six all right what's going on here well the thing is now we're doing injection",
    "start": "1593509",
    "end": "1599539"
  },
  {
    "text": "but in a client-side templating framework so in this case you can see some of you might have gone sorry that",
    "start": "1599539",
    "end": "1605779"
  },
  {
    "text": "we have angular here and I have ng app declared here so this thing runs inside",
    "start": "1605779",
    "end": "1612290"
  },
  {
    "text": "and this thing becomes a template hence it tries to calculate this stuff and now",
    "start": "1612290",
    "end": "1617720"
  },
  {
    "text": "I'm thinking well I can attack this because i can i can do alert 1 like classic Exorcist cross site scripting",
    "start": "1617720",
    "end": "1623690"
  },
  {
    "text": "example but nothing happens because what happens in a lot of these frameworks is",
    "start": "1623690",
    "end": "1629150"
  },
  {
    "text": "they have some kind of sandbox so both on the the server-side templating frameworks they have a sandbox sometimes",
    "start": "1629150",
    "end": "1635660"
  },
  {
    "text": "and also the client-side framework sometimes i have a day of sandbox and an angularjs in this version they did have",
    "start": "1635660",
    "end": "1643460"
  },
  {
    "text": "a sandbox which was later removed but at least they did so this didn't work but",
    "start": "1643460",
    "end": "1648740"
  },
  {
    "text": "of course there are ways to break out of sandbox in this case a bit of a weird",
    "start": "1648740",
    "end": "1655130"
  },
  {
    "text": "example but you can see it pops up an alert box there and it pops up twice for",
    "start": "1655130",
    "end": "1660650"
  },
  {
    "text": "some reason so what i'm doing in this case is i'm instead of invoking alert",
    "start": "1660650",
    "end": "1666830"
  },
  {
    "text": "one I'm gonna grab a string and I'm gonna grab the constructor of the string",
    "start": "1666830",
    "end": "1671870"
  },
  {
    "text": "which is the string constructor and I'm gonna grab the constructor of the string",
    "start": "1671870",
    "end": "1677270"
  },
  {
    "text": "constructor which is the function and then I'm gonna create a new function with alert 1 inside and then the end of",
    "start": "1677270",
    "end": "1683720"
  },
  {
    "text": "it I'm going to invoke this function so I'm kind of I'm circumventing the the",
    "start": "1683720",
    "end": "1688910"
  },
  {
    "text": "sandbox this is a common exploit against old versions of angular what's",
    "start": "1688910",
    "end": "1694640"
  },
  {
    "text": "interesting here that you can see is is it did do some HTML escaping down here but that didn't stop the thing from",
    "start": "1694640",
    "end": "1702230"
  },
  {
    "text": "working because this HTML escaping would have stopped a regular across that scripting but it doesn't stop it from",
    "start": "1702230",
    "end": "1708650"
  },
  {
    "text": "from because because of the templating framework it's gonna see it as D encoded",
    "start": "1708650",
    "end": "1713750"
  },
  {
    "text": "and then it's gonna do its thing so this works regardless the next thing is",
    "start": "1713750",
    "end": "1722679"
  },
  {
    "start": "1721000",
    "end": "2017000"
  },
  {
    "text": "insecure course and this is something",
    "start": "1722679",
    "end": "1729919"
  },
  {
    "text": "we've seen a lot of lately and much of it is due to a guy called James kettle",
    "start": "1729919",
    "end": "1737720"
  },
  {
    "text": "who works at ports where they did a really good presentation about this at the OS tab sake you last year so we have",
    "start": "1737720",
    "end": "1745730"
  },
  {
    "text": "this access control allow original what does it actually do and to figure out what it",
    "start": "1745730",
    "end": "1752870"
  },
  {
    "text": "did I asked Google Translate for help so access control allow origin",
    "start": "1752870",
    "end": "1759530"
  },
  {
    "text": "example.com access control allow credentials true well if I translate this from HTTP to English it says if the",
    "start": "1759530",
    "end": "1766850"
  },
  {
    "text": "user is logged in and this is example comm please allow that site to access the users data all right",
    "start": "1766850",
    "end": "1773660"
  },
  {
    "text": "this is an actual actually Google Translate of course but it would be nice if it could do that the next thing is we",
    "start": "1773660",
    "end": "1782510"
  },
  {
    "text": "do access control allow origin star and then allow credentials true which",
    "start": "1782510",
    "end": "1789280"
  },
  {
    "text": "translated means if the user is logged in please allow any site anywhere on the internet to access this data this is of",
    "start": "1789280",
    "end": "1795620"
  },
  {
    "text": "course not something we want and this is not allowed so if we try to do this the browser's will complain and say well you",
    "start": "1795620",
    "end": "1801230"
  },
  {
    "text": "can't have star and true that doesn't work so please do not do this thing the",
    "start": "1801230",
    "end": "1807560"
  },
  {
    "text": "problem is the people find ways of reintroducing this stuff so the first",
    "start": "1807560",
    "end": "1813080"
  },
  {
    "text": "one is the echo where people will do they will grab the original header from",
    "start": "1813080",
    "end": "1818330"
  },
  {
    "text": "the incoming request and then they will put that as the access control allow region and then do access control allow",
    "start": "1818330",
    "end": "1824600"
  },
  {
    "text": "credentials true which mean basically means the same as star because whatever comes in you equate back and then you",
    "start": "1824600",
    "end": "1831710"
  },
  {
    "text": "reintroduce the problem a second version could be poor validation so let's say we",
    "start": "1831710",
    "end": "1840230"
  },
  {
    "text": "have some code that looks like this so we grab the origin and if it ends with example.com we're gonna allow it which",
    "start": "1840230",
    "end": "1849800"
  },
  {
    "text": "means we allow not example.com of course because we didn't have a dot in there and there are all kinds of versions of",
    "start": "1849800",
    "end": "1856250"
  },
  {
    "text": "this where you have we have poor reg X",
    "start": "1856250",
    "end": "1861920"
  },
  {
    "text": "where dot actually means any need any character it can be all kinds of stuff and then this was this is a real example",
    "start": "1861920",
    "end": "1867260"
  },
  {
    "text": "by the way I'm gonna show you the the right of it afterwards and the last one",
    "start": "1867260",
    "end": "1873950"
  },
  {
    "text": "is kind of odd it's no",
    "start": "1873950",
    "end": "1878950"
  },
  {
    "text": "access control allow origin no access control allow credentials true what does",
    "start": "1879740",
    "end": "1886380"
  },
  {
    "text": "that even mean what does no mean let's ask Google Translate once again if the",
    "start": "1886380",
    "end": "1892440"
  },
  {
    "text": "user is logged in please allow any site the user visits to access the users data as long as the site knows how to iframe",
    "start": "1892440",
    "end": "1899190"
  },
  {
    "text": "with the sandbox attribute that's the gist of it so this is from from James kettle if we do something like this we",
    "start": "1899190",
    "end": "1906630"
  },
  {
    "text": "create an iframe with the sandbox allow scripts allow form and then we do the",
    "start": "1906630",
    "end": "1912210"
  },
  {
    "text": "the entire HTML document inside of it that's gonna be in the iframe and in there we do the actual x8 xhr or fetch",
    "start": "1912210",
    "end": "1919650"
  },
  {
    "text": "requests we see original that's what we're sending so we're now in the nola",
    "start": "1919650",
    "end": "1926040"
  },
  {
    "text": "region and the nola region wasn't actually intended to mean our distinct",
    "start": "1926040",
    "end": "1931080"
  },
  {
    "text": "origin for a in every case but in this case it's it means any any it could mean",
    "start": "1931080",
    "end": "1936480"
  },
  {
    "text": "any site that exists anywhere which is pretty bad because that means that if we",
    "start": "1936480",
    "end": "1941970"
  },
  {
    "text": "do a miss configuration of some kind and we end up accidentally doing this maybe",
    "start": "1941970",
    "end": "1949440"
  },
  {
    "text": "it wasn't null maybe it was we had a variable there but that variable was for some reason not set so in in in in Java",
    "start": "1949440",
    "end": "1957990"
  },
  {
    "text": "for instance a string has the value null if if we haven't said it so it would be no and then that was that would be what",
    "start": "1957990",
    "end": "1964110"
  },
  {
    "text": "would be reflected back so there are ways of where this can go wrong even though we're not intentionally doing no",
    "start": "1964110",
    "end": "1972740"
  },
  {
    "text": "so I mentioned I mentioned james kettle of quite a few times right now and this",
    "start": "1972800",
    "end": "1979410"
  },
  {
    "text": "is one of his write ups for hacker 1 in this case for tomato and you can see the",
    "start": "1979410",
    "end": "1984900"
  },
  {
    "text": "stuff in blue there it would allow any domain ending in tomato com including",
    "start": "1984900",
    "end": "1991410"
  },
  {
    "text": "not tomato com it's kind of exactly the example I just showed so that's that's",
    "start": "1991410",
    "end": "1998280"
  },
  {
    "text": "not so good so access control allow",
    "start": "1998280",
    "end": "2003530"
  },
  {
    "text": "region or course that's a mechanism for us to relax the same origin policy and we need to be careful with what we're",
    "start": "2003530",
    "end": "2009740"
  },
  {
    "text": "doing with it and not just blindly I or X dentally allow stuff that we're not supposed to allow the last one is",
    "start": "2009740",
    "end": "2020419"
  },
  {
    "start": "2017000",
    "end": "2208000"
  },
  {
    "text": "something called subdomain takeover this is a pretty bad thing and it can happen",
    "start": "2020419",
    "end": "2027350"
  },
  {
    "text": "in many different ways but this was there was a good really good write-up of",
    "start": "2027350",
    "end": "2032419"
  },
  {
    "text": "this from from a Swedish guy called once was n at detective I and this is",
    "start": "2032419",
    "end": "2038330"
  },
  {
    "text": "something that that is it's new and I",
    "start": "2038330",
    "end": "2043370"
  },
  {
    "text": "don't think we can say well we could probably claim that this is India was done under a security Miss configuration",
    "start": "2043370",
    "end": "2048530"
  },
  {
    "text": "or something but it's this is one of the the really new attacks that have have started appearing in bug bounties that I",
    "start": "2048530",
    "end": "2054679"
  },
  {
    "text": "don't think we've seen much before if we go back to X X X X II that's actually",
    "start": "2054679",
    "end": "2062599"
  },
  {
    "text": "quite an old bug it's the first versions of ecstasy was back in 2002 there's been",
    "start": "2062599",
    "end": "2068270"
  },
  {
    "text": "one in a Norwegian guy called sputter who's be he found an ecstasy in in Acrobat Reader in 2005 so that's a",
    "start": "2068270",
    "end": "2074898"
  },
  {
    "text": "really old bug that kind of disappeared for a while and then came back but I think this is this is a rather new one",
    "start": "2074899",
    "end": "2080358"
  },
  {
    "text": "because it's it's kind of related to how we're using cloud services so let's say",
    "start": "2080359",
    "end": "2087500"
  },
  {
    "text": "we're using a platform as a service vendor for instance Heroku so we can",
    "start": "2087500",
    "end": "2092540"
  },
  {
    "text": "define an application running on Heroku and we can customize the first part of this so we can we can put our own name",
    "start": "2092540",
    "end": "2098570"
  },
  {
    "text": "there and by doing that we can we can now have a kind of a custom domain name",
    "start": "2098570",
    "end": "2105320"
  },
  {
    "text": "but that's not good enough for us we we want to have our own domain but at least we we could do something like this same",
    "start": "2105320",
    "end": "2112609"
  },
  {
    "text": "thing goes for instance for for infrastructure as a service type of cloud services so for s3 buckets we",
    "start": "2112609",
    "end": "2119599"
  },
  {
    "text": "often can have our own name as a part of the s3 bucket name also for a c3 you",
    "start": "2119599",
    "end": "2125060"
  },
  {
    "text": "have some IPS and stuff in there so but I mean we have we have some name but we",
    "start": "2125060",
    "end": "2130580"
  },
  {
    "text": "don't like these names because we want to have our own names so here are some",
    "start": "2130580",
    "end": "2135770"
  },
  {
    "text": "of the stuff that Detective I discovered they've discovered over a hundred services that are kind of vulnerable to",
    "start": "2135770",
    "end": "2142820"
  },
  {
    "text": "this thing including hiroko alias guitar etc etc etc I think this has also been",
    "start": "2142820",
    "end": "2149690"
  },
  {
    "text": "used against typical male male systems where you can send out a lot of emails",
    "start": "2149690",
    "end": "2154940"
  },
  {
    "text": "to your clients so let's try to explain",
    "start": "2154940",
    "end": "2161390"
  },
  {
    "text": "what what's going in it so so let's say we create an application after okay and we call it nd seed or taro craft table",
    "start": "2161390",
    "end": "2167330"
  },
  {
    "text": "and then we go into our DNS and we want",
    "start": "2167330",
    "end": "2172550"
  },
  {
    "text": "it to have the actual domain name of NDC example.com because we don't like the hero crap that come stuff we want to use",
    "start": "2172550",
    "end": "2178550"
  },
  {
    "text": "their own domain that's our brand so what we do is we go to the DNS settings",
    "start": "2178550",
    "end": "2185000"
  },
  {
    "text": "and then we create a cname a canonical name so we gonna point NDC example that",
    "start": "2185000",
    "end": "2190730"
  },
  {
    "text": "come to this NDC example come here okay DNS comm thing so we actually instead of",
    "start": "2190730",
    "end": "2196940"
  },
  {
    "text": "instead of putting in IP there we're gonna say well if you're gonna try to resolve this domain name you're gonna go",
    "start": "2196940",
    "end": "2203270"
  },
  {
    "text": "to that domain name instead and ask that because they and they know this stuff so",
    "start": "2203270",
    "end": "2208880"
  },
  {
    "start": "2208000",
    "end": "2623000"
  },
  {
    "text": "just on example let's say we do an nslookup on embassy example comb and we go to the rate registrar that's being",
    "start": "2208880",
    "end": "2214730"
  },
  {
    "text": "used and what we get back is NDC example.com canonical name and then NDC",
    "start": "2214730",
    "end": "2220850"
  },
  {
    "text": "example.com dr. Aqua Net DNS calm so we can see that okay this one points to that one same thing this is an actual",
    "start": "2220850",
    "end": "2227210"
  },
  {
    "text": "DNS query so our browser if we try to visit this site it's gonna it's gonna",
    "start": "2227210",
    "end": "2234410"
  },
  {
    "text": "look up first it's not actually going to do it this way because it's gonna ask a DNS server and that DNS service is gonna",
    "start": "2234410",
    "end": "2240260"
  },
  {
    "text": "do all the lookups but let's pretend that this is what happens because it's it kind of is so it goes to two let's",
    "start": "2240260",
    "end": "2247490"
  },
  {
    "text": "say n DC that hackable net dot network and it's going going to DNS one dot hack network because that's a DNS server and",
    "start": "2247490",
    "end": "2254810"
  },
  {
    "text": "it's gonna come back with well you should actually go here instead okay so",
    "start": "2254810",
    "end": "2260150"
  },
  {
    "text": "we go to this DNS server instead let me ask well can you give me the IP and then",
    "start": "2260150",
    "end": "2265730"
  },
  {
    "text": "we get back an actual IP and then we go and visit our beautiful application that's running on Heroku so these these",
    "start": "2265730",
    "end": "2271850"
  },
  {
    "text": "two lower servers are actually owned by Heroku and the top one is our DNS server",
    "start": "2271850",
    "end": "2277750"
  },
  {
    "text": "now have any of you ever deployed something on a cloud service and then forgotten",
    "start": "2277750",
    "end": "2285229"
  },
  {
    "text": "about it do you think any company in the world has ever forgotten about one of",
    "start": "2285229",
    "end": "2290329"
  },
  {
    "text": "their systems running there well forgetting about it or forgetting about one of these systems is not the worst",
    "start": "2290329",
    "end": "2296690"
  },
  {
    "text": "thing that can happen it could actually be that we we kind of forget about the",
    "start": "2296690",
    "end": "2301849"
  },
  {
    "text": "system or we move removed the system because well we don't really need the system anymore so we're gonna go and",
    "start": "2301849",
    "end": "2307880"
  },
  {
    "text": "grab it and just throw it in a bin but we forget to update the DNS so we remove",
    "start": "2307880",
    "end": "2313369"
  },
  {
    "text": "the application let's say we go into Heroku and then delete this I don't need this anymore but then we forget the DNS",
    "start": "2313369",
    "end": "2319819"
  },
  {
    "text": "setting so now the attacker he can go back in and he can recreate the exact same service the exact same name that we",
    "start": "2319819",
    "end": "2328279"
  },
  {
    "text": "had and the attacker now controls our subdomain you get that that's pretty bad",
    "start": "2328279",
    "end": "2337309"
  },
  {
    "text": "like they could they now own a server that has our domain name on it so what can you do with that well they could do",
    "start": "2337309",
    "end": "2345349"
  },
  {
    "text": "fishing with a proper domain because they now actually have some code running on a server that has our domain name on",
    "start": "2345349",
    "end": "2352249"
  },
  {
    "text": "it so if they send out a phishing email saying hey please login to our site go",
    "start": "2352249",
    "end": "2357319"
  },
  {
    "text": "to this URL and you look at the URL and well it looks like it's legit so you go",
    "start": "2357319",
    "end": "2363469"
  },
  {
    "text": "there you enter your credentials and bam they're stolen you could steal or inject two main white cookies so you could do session fixation",
    "start": "2363469",
    "end": "2370069"
  },
  {
    "text": "you could steal sessions you could do all kinds of stuff you could do things",
    "start": "2370069",
    "end": "2375469"
  },
  {
    "text": "like let's say you have a self XSS which means a cross-site scripting that you could only you could only abuse this",
    "start": "2375469",
    "end": "2382609"
  },
  {
    "text": "cross-site scripting if you inject it into the server because you can you can kind of put a value in a cookie but then",
    "start": "2382609",
    "end": "2388239"
  },
  {
    "text": "and then it would be reflected and it would be a cross-site scripting but you because an attacker can't fool someone",
    "start": "2388239",
    "end": "2394609"
  },
  {
    "text": "else into injecting that cookie then you're home free but in this case of course if you own a subdomain all you could do on that subdomain you could",
    "start": "2394609",
    "end": "2401239"
  },
  {
    "text": "inject such a cookie and then you could change the self XSS to being an actual exercise which is pretty bad of course",
    "start": "2401239",
    "end": "2408049"
  },
  {
    "text": "you could put all kinds of bad stuff on there like defacement you could do political messages adult material",
    "start": "2408049",
    "end": "2414170"
  },
  {
    "text": "name it malware all kinds of bad stuff that might hurt the company if if it was associated with it or you could go ahead",
    "start": "2414170",
    "end": "2421670"
  },
  {
    "text": "and create an HTTPS certificate so um",
    "start": "2421670",
    "end": "2426700"
  },
  {
    "text": "demos yes I love demos sorry sorry I",
    "start": "2426700",
    "end": "2436190"
  },
  {
    "text": "take the course yeah probably so the",
    "start": "2436190",
    "end": "2443420"
  },
  {
    "text": "question was if we could abuse course to this and I guess we can so let's see I have this service and I'm hoping the",
    "start": "2443420",
    "end": "2451010"
  },
  {
    "text": "internet will be my friend again because it was a bit see here yes so there is",
    "start": "2451010",
    "end": "2459250"
  },
  {
    "text": "gonna try to stay still there is an application running on this domain here",
    "start": "2459250",
    "end": "2465760"
  },
  {
    "text": "so what if I go to this domain and I do",
    "start": "2465760",
    "end": "2471860"
  },
  {
    "text": "this ah nothing there okay bring up my trusted console oh I'm still logged into",
    "start": "2471860",
    "end": "2477200"
  },
  {
    "text": "the other server mm-hmm so let's clear this I think I have it here if we do an",
    "start": "2477200",
    "end": "2487580"
  },
  {
    "text": "honest look up for embassy security day one we see we get a lot of stuff back but this one didn't resolve so let's try",
    "start": "2487580",
    "end": "2502910"
  },
  {
    "text": "mmm nothing happens nothing happens okay maybe I lost my internet again sorry",
    "start": "2502910",
    "end": "2508940"
  },
  {
    "text": "about that",
    "start": "2508940",
    "end": "2511150"
  },
  {
    "text": "the thing is that this this this hostname is now open for four attacks so",
    "start": "2515850",
    "end": "2522690"
  },
  {
    "text": "anyone could go in and register a system that that would actually have that hostname they just have to to to put up",
    "start": "2522690",
    "end": "2530070"
  },
  {
    "text": "a system there and then they they could take it to take over my my domain and lo",
    "start": "2530070",
    "end": "2538110"
  },
  {
    "text": "and behold someone just did that sudden reverb resolves okay what happened Oh",
    "start": "2538110",
    "end": "2546410"
  },
  {
    "text": "someone owned my system damn it and the owner sits there by the way",
    "start": "2546860",
    "end": "2552200"
  },
  {
    "text": "so he no system because well he all he had to do was go to lovely Marquis all",
    "start": "2552200",
    "end": "2560640"
  },
  {
    "text": "he had to do and deploy a app with the exact same name and the exact same",
    "start": "2560640",
    "end": "2568800"
  },
  {
    "text": "custom domain name and now he owns my site okay that's not so nice so it's",
    "start": "2568800",
    "end": "2577380"
  },
  {
    "text": "really easy and it's really fast as you could see he he was sitting there right now and he just took over my my my",
    "start": "2577380",
    "end": "2585210"
  },
  {
    "text": "subdomain here",
    "start": "2585210",
    "end": "2588320"
  },
  {
    "text": "so this is an example of this from once again from hacker one this is a Swedish",
    "start": "2592580",
    "end": "2599310"
  },
  {
    "text": "guy Mattias Carlson he did a subdomain taker for Shopify which paid him five",
    "start": "2599310",
    "end": "2604440"
  },
  {
    "text": "hundred dollars and in this case it was an s3 bucket so you can see the you can",
    "start": "2604440",
    "end": "2609990"
  },
  {
    "text": "see the details down here he could he could basically grab one of those those",
    "start": "2609990",
    "end": "2615480"
  },
  {
    "text": "buckets from them because they had at the NS entry that pointed to them but they no longer used them so and this is",
    "start": "2615480",
    "end": "2624270"
  },
  {
    "start": "2623000",
    "end": "2821000"
  },
  {
    "text": "an example one interesting example like you have this thing which is the",
    "start": "2624270",
    "end": "2629700"
  },
  {
    "text": "certificate transparency log and where all certificates that are ever created by our legit CA they will have to",
    "start": "2629700",
    "end": "2636720"
  },
  {
    "text": "publish a log of what you're doing and if you look at the in the center of the screen here it says Sriman Gorsky has",
    "start": "2636720",
    "end": "2644760"
  },
  {
    "text": "hacked prod to do bruh calm SSL certificate and I think this is because",
    "start": "2644760",
    "end": "2653280"
  },
  {
    "text": "he was able to grab one of Oprah's subdomains and then he obviously used",
    "start": "2653280",
    "end": "2661190"
  },
  {
    "text": "some kind of CA hair started calm and was able to then get a certificate",
    "start": "2661190",
    "end": "2666840"
  },
  {
    "text": "issued for this server and of course when he owned this thing he could he",
    "start": "2666840",
    "end": "2672480"
  },
  {
    "text": "could add all kinds of stuff to it and then he got some some certificates I'm not sure if you were was so happy about",
    "start": "2672480",
    "end": "2681270"
  },
  {
    "text": "him doing it but anyway that's the way it goes some resources here the first",
    "start": "2681270",
    "end": "2689310"
  },
  {
    "text": "one is disclosed h1 this is a Twitter account that you really should follow because they publish all all day these",
    "start": "2689310",
    "end": "2695720"
  },
  {
    "text": "hacker one reports that I just showed you this this is a bot that just publishes every time a new public report",
    "start": "2695720",
    "end": "2703320"
  },
  {
    "text": "is is is made available you can you can go and read them and not all of them",
    "start": "2703320",
    "end": "2708540"
  },
  {
    "text": "have a very interesting amount of details because a lot of them are heavily redacted but there is a lot of",
    "start": "2708540",
    "end": "2716070"
  },
  {
    "text": "stuff there and there is a lot of good stuff to learn these two next links why so serial those are for serialization",
    "start": "2716070",
    "end": "2723570"
  },
  {
    "text": "attacks so those are tools for attacking or they have gadgets in them",
    "start": "2723570",
    "end": "2730709"
  },
  {
    "text": "the gadgets for attacking different kind of these realization frameworks the XX LT for practical attacks that's where",
    "start": "2730709",
    "end": "2737910"
  },
  {
    "text": "you can find all these functions like document and unforced text etc template",
    "start": "2737910",
    "end": "2744989"
  },
  {
    "text": "injection RCE for the modern web app you can see once again if you look at the end of the URL there is or at the first",
    "start": "2744989",
    "end": "2750749"
  },
  {
    "text": "line it says kettle so this is also james kettle we just basically also a guy you should follow his twitter handle",
    "start": "2750749",
    "end": "2756809"
  },
  {
    "text": "is albino wax and he is one of the guys who works with port swagger which creates Bert Swift which birds with",
    "start": "2756809",
    "end": "2763140"
  },
  {
    "text": "which is a common pen testing tool then you have detective ice original blog",
    "start": "2763140",
    "end": "2770039"
  },
  {
    "text": "post as you can see it's it's not that new it's one 2014 but we've seen a lot",
    "start": "2770039",
    "end": "2775229"
  },
  {
    "text": "of this happening in the bug bounty space lately and then you have nicola Gregoire's server-side browsing",
    "start": "2775229",
    "end": "2781529"
  },
  {
    "text": "considered harmful which is about server side requests and then the course talk from james kettle all the way to the",
    "start": "2781529",
    "end": "2787499"
  },
  {
    "text": "bottom and that's basically it any questions nope everything is clear",
    "start": "2787499",
    "end": "2804859"
  },
  {
    "text": "so are you scared do you have to go back and patch your stuff now no one all",
    "start": "2804859",
    "end": "2813779"
  },
  {
    "text": "right if there are no questions I think we can end it there so thanks a lot for coming",
    "start": "2813779",
    "end": "2820730"
  },
  {
    "text": "[Applause]",
    "start": "2820730",
    "end": "2823639"
  }
]