[
  {
    "start": "0",
    "end": "70000"
  },
  {
    "text": "so my slides are up I guess that means I'm starting there's a couple people still filtering in feel free to come on",
    "start": "79",
    "end": "5819"
  },
  {
    "text": "in and sit down we're gonna be talking about micro services with asp net court today and a couple couple more specific",
    "start": "5819",
    "end": "12809"
  },
  {
    "text": "things that i'll get into in a little bit so i'm ryan Noack I'm a framework developer and architect working on asp",
    "start": "12809",
    "end": "18930"
  },
  {
    "text": "net core you could say that I probably have a particular focus on things like MVC routing blazer Razer engine language",
    "start": "18930",
    "end": "27359"
  },
  {
    "text": "and tooling all the things that people use to write applications I'm really interested in how how people program",
    "start": "27359",
    "end": "33300"
  },
  {
    "text": "things how people use frameworks and how to make people more productive I'm also really interested in performance you can",
    "start": "33300",
    "end": "39930"
  },
  {
    "text": "find me on Twitter if you want and you'll be able to find all my materials and demos online later my last slide",
    "start": "39930",
    "end": "45120"
  },
  {
    "text": "will have a more comprehensive set of links to all of the things so today we're going to be talking about micro",
    "start": "45120",
    "end": "51270"
  },
  {
    "text": "services and I'm going to be talking about micro services in the context of a spinet coordinate core and kubernetes",
    "start": "51270",
    "end": "57390"
  },
  {
    "text": "and so what is kubernetes what how would you use asp net core and kubernetes and",
    "start": "57390",
    "end": "63000"
  },
  {
    "text": "what are some things that we can learn about performance of donna core and asp net core in containers that's when it's",
    "start": "63000",
    "end": "68640"
  },
  {
    "text": "on our agenda for today so you might be asking or you might be reading Twitter",
    "start": "68640",
    "end": "74310"
  },
  {
    "start": "70000",
    "end": "102000"
  },
  {
    "text": "or reading somebody's latest hot take or latest meme what are micro services are",
    "start": "74310",
    "end": "79680"
  },
  {
    "text": "they the definitive solution to all applications must you do everything in micro services today are they just very",
    "start": "79680",
    "end": "86580"
  },
  {
    "text": "small services do you just write less code do you use different frameworks or different technologies these are all the",
    "start": "86580",
    "end": "93240"
  },
  {
    "text": "kinds of things you might hear about micro services if you haven't actually tried building micro services applications and the answer I'll give to",
    "start": "93240",
    "end": "100200"
  },
  {
    "text": "to all those questions is like well well no but sometimes kinda like you might",
    "start": "100200",
    "end": "105899"
  },
  {
    "start": "102000",
    "end": "232000"
  },
  {
    "text": "write less code you might use different frameworks and tools you might design",
    "start": "105899",
    "end": "111390"
  },
  {
    "text": "things differently if you have multiple services they might be the solution to your problem they might cause you",
    "start": "111390",
    "end": "117390"
  },
  {
    "text": "problems so there's some truth in all the things that we hear about micro services there's some there's some",
    "start": "117390",
    "end": "123329"
  },
  {
    "text": "aspect of all of those statements that are true for somebody somewhere at some",
    "start": "123329",
    "end": "128369"
  },
  {
    "text": "time and only you and your company or your organization or your team",
    "start": "128369",
    "end": "133440"
  },
  {
    "text": "can really decide what's right so there's a lot of banter on Twitter today I think maybe the last week in the developer community at least among some",
    "start": "133440",
    "end": "139770"
  },
  {
    "text": "of the people that I follow in messages that I see around you know people's hot takes or rants about you know I wish we",
    "start": "139770",
    "end": "145860"
  },
  {
    "text": "didn't have to do micro services for everything or we don't have to do micro services for everything and and that the",
    "start": "145860",
    "end": "151440"
  },
  {
    "text": "truth is that I'm kind of like you like I'm a framework developer I'm a tools developer I help people program I work",
    "start": "151440",
    "end": "158400"
  },
  {
    "text": "on the framework I fix bugs that cause bugs I'm not an application development consultant or a really like in the",
    "start": "158400",
    "end": "164970"
  },
  {
    "text": "trenches like app application deployment kind of person I don't have that experience so the things that I do learn",
    "start": "164970",
    "end": "170310"
  },
  {
    "text": "i hear from blog posts i hear from talking to customers i hear from interviewing people or getting their",
    "start": "170310",
    "end": "176460"
  },
  {
    "text": "feedback about what things work and work well for them and don't work well if i",
    "start": "176460",
    "end": "182520"
  },
  {
    "text": "sort of summed up what i do know and what i do hear from people it's kind of that my doing micro services deployment",
    "start": "182520",
    "end": "189600"
  },
  {
    "text": "are doing micro services development or migrations might make sense for you if you're going to get something out of it",
    "start": "189600",
    "end": "194820"
  },
  {
    "text": "if you're gonna get the ability to deploy and develop things separately if you're gonna get the ability to evolve",
    "start": "194820",
    "end": "200489"
  },
  {
    "text": "parts of your code base or to work more productively as an organization you might want to consider that if you don't",
    "start": "200489",
    "end": "207270"
  },
  {
    "text": "feel like you could get those benefits out of breaking up a larger application into multiple services let's say maybe",
    "start": "207270",
    "end": "213840"
  },
  {
    "text": "you don't have good discipline around using source control and CI and you end having deployment pipelines and having",
    "start": "213840",
    "end": "221190"
  },
  {
    "text": "good ways to do code reviews and check things in and deploy them to production and your organization this is probably",
    "start": "221190",
    "end": "226769"
  },
  {
    "text": "not the Silver Bullet that you're looking for so I'm not a Salesman presumably you're",
    "start": "226769",
    "end": "231900"
  },
  {
    "text": "here because you wanted to hear some information I'm not gonna try and explain to you whether or not that's the right choice hopefully you can figure",
    "start": "231900",
    "end": "237570"
  },
  {
    "start": "232000",
    "end": "302000"
  },
  {
    "text": "that out for yourself you know your business better than I do as a framework developer how I kind of tend to think",
    "start": "237570",
    "end": "243900"
  },
  {
    "text": "about micro services is they're not that different from not micro services I mean",
    "start": "243900",
    "end": "249720"
  },
  {
    "text": "many of you in the audience I'm sure have written applications before where you have a front end and a back end and",
    "start": "249720",
    "end": "255959"
  },
  {
    "text": "then maybe another back end right is that micro services kinda it's all just",
    "start": "255959",
    "end": "262650"
  },
  {
    "text": "back-end to me the difference the difference between general back-end development and microservices",
    "start": "262650",
    "end": "268270"
  },
  {
    "text": "development is that there is a set of problems that kind of just get like cranked up right because you've got way",
    "start": "268270",
    "end": "274630"
  },
  {
    "text": "more things that are gonna deploy and version differently and so there's a set of problems that are gonna get cranked",
    "start": "274630",
    "end": "279790"
  },
  {
    "text": "up that you're gonna have to invest more in and you're gonna have to learn more about solutions to those kinds of problems if you want to be successful",
    "start": "279790",
    "end": "286320"
  },
  {
    "text": "and that's what we're gonna spend our time sort of folk focusing on whether or not you're doing micro service II kinds",
    "start": "286320",
    "end": "292420"
  },
  {
    "text": "of stuff though as a back-end developer you probably still have those problems and you probably still care about a lot",
    "start": "292420",
    "end": "297820"
  },
  {
    "text": "of this kind of information even if you're not really reaching for a micro services kind of kind of deployment so",
    "start": "297820",
    "end": "306130"
  },
  {
    "text": "we are spoiled for choice in the world of how to display ploy micro services or",
    "start": "306130",
    "end": "311650"
  },
  {
    "text": "where to run your code like where are you ultimately publishing to write I tried to be a gala terian and fair with",
    "start": "311650",
    "end": "318490"
  },
  {
    "text": "whose logo that I put on the slide despite the fact that I work for one of these cloud providers I won't say which one but you can probably guess I tried",
    "start": "318490",
    "end": "326050"
  },
  {
    "text": "to be fair and not make anybody's icon much larger than anybody else's but",
    "start": "326050",
    "end": "331780"
  },
  {
    "text": "you've got a lot of places where you can deploy and you can run code today you've really got a lot of options and how you",
    "start": "331780",
    "end": "338530"
  },
  {
    "text": "deploy where you choose to deploy how you want to get billed is actually",
    "start": "338530",
    "end": "343540"
  },
  {
    "text": "probably going to have a pretty big effect on how you write code I would encourage anybody to think about like as",
    "start": "343540",
    "end": "350520"
  },
  {
    "text": "I'm giving you information and I'm gonna be focusing on one area in particular but what what what are the consequences",
    "start": "350520",
    "end": "357970"
  },
  {
    "text": "of the choices you make about how you deploy code and do they help you do they hurt you what are the things that you",
    "start": "357970",
    "end": "364150"
  },
  {
    "text": "need to do to compensate for the weaknesses in that platform or the things that that platform simplifies for",
    "start": "364150",
    "end": "369730"
  },
  {
    "text": "you how do they help you because we're gonna be talking today about kubernetes you probably hear a lot about kubernetes",
    "start": "369730",
    "end": "376600"
  },
  {
    "start": "372000",
    "end": "986000"
  },
  {
    "text": "these days and there are a couple talks about kubernetes at this conference I think what some of us developer",
    "start": "376600",
    "end": "382680"
  },
  {
    "text": "developer and developer tools kinds of people really like about kubernetes is most of all the fact that kubernetes is",
    "start": "382680",
    "end": "389230"
  },
  {
    "text": "probably the most complicated sophisticated and powerful deployment environment you could have it's like",
    "start": "389230",
    "end": "394690"
  },
  {
    "text": "it's like an operating system for deployments and so as a result you could pretty much program kubernetes",
    "start": "394690",
    "end": "400760"
  },
  {
    "text": "do anything you want like if you want to write a piece of code that runs in your kubernetes cluster that looks at all the",
    "start": "400760",
    "end": "407270"
  },
  {
    "text": "deployments coming in and rejects them unless they're annotated in a certain way like people have built kubernetes infrastructure and projects to do that",
    "start": "407270",
    "end": "413960"
  },
  {
    "text": "you might not even have to build it yourself right if you want to audit all the deployments in your in your topology",
    "start": "413960",
    "end": "419780"
  },
  {
    "text": "or all the things that people are doing like kubernetes is basically just a big REST API so like you can write that code",
    "start": "419780",
    "end": "425510"
  },
  {
    "text": "and it's pretty easy to do it's pretty fun to extend kubernetes there's a lot of great projects out there today that",
    "start": "425510",
    "end": "431150"
  },
  {
    "text": "will help you with those kinds of things and they're all pretty neutral about",
    "start": "431150",
    "end": "436330"
  },
  {
    "text": "what type of technology you're using kubernetes really doesn't care it's primarily based on docker or OCI",
    "start": "436330",
    "end": "442430"
  },
  {
    "text": "container images and it doesn't care what technology stack you're using it's very egalitarian in that way and the",
    "start": "442430",
    "end": "448730"
  },
  {
    "text": "community of developers and developer Doc's around around kubernetes don't really speak to like well you've got to",
    "start": "448730",
    "end": "454400"
  },
  {
    "text": "be a node developer to use this you've got to be a Java developer to use this all the technology that's out there is",
    "start": "454400",
    "end": "459530"
  },
  {
    "text": "for everybody which is pretty awesome the other great thing about kubernetes is you can really run kubernetes kind of",
    "start": "459530",
    "end": "465830"
  },
  {
    "text": "anywhere so so all the major cloud providers have a kubernetes offering if you want to if you want to go that route",
    "start": "465830",
    "end": "472280"
  },
  {
    "text": "if you want to pay for a managed kubernetes system likewise you can run kubernetes on your own you can deploy",
    "start": "472280",
    "end": "477920"
  },
  {
    "text": "your own kubernetes set up and you could administrate it on your own hardware or VMs if that's something you want to do",
    "start": "477920",
    "end": "483470"
  },
  {
    "text": "you really have the choice no matter where you are and where you're doing if you wanted to do this lastly I think the",
    "start": "483470",
    "end": "489350"
  },
  {
    "text": "thing that's most exciting about kubernetes as a platform for those of us that work on platforms and work on",
    "start": "489350",
    "end": "494630"
  },
  {
    "text": "developer tools is that it's it's kind of like it's kind of like an operating system like the lot of the leaders in",
    "start": "494630",
    "end": "502010"
  },
  {
    "text": "the kubernetes community are saying things today like the current wave of kubernetes usage is like assembly",
    "start": "502010",
    "end": "508730"
  },
  {
    "text": "language right we expect kubernetes as a platform to grow and evolve and support",
    "start": "508730",
    "end": "514310"
  },
  {
    "text": "more high-level less complicated application models in the future and so it's kind of worth learning about some",
    "start": "514310",
    "end": "520460"
  },
  {
    "text": "of the things that it does today from the point of view of understanding that better if this seems complicated to you",
    "start": "520460",
    "end": "526190"
  },
  {
    "text": "it probably will be simplified in a few years which might help you out might be something that you're looking for",
    "start": "526190",
    "end": "533190"
  },
  {
    "text": "so I'm gonna do a quick demo to introduce a couple things and hopefully",
    "start": "533190",
    "end": "538710"
  },
  {
    "text": "this hopefully this is at least a little bit interesting or sort of gives you the impression of some of the power that you have with kubernetes now I'm gonna be",
    "start": "538710",
    "end": "545640"
  },
  {
    "text": "doing a lot of things at the command line here I hope that's okay kubernetes is sort of a command line",
    "start": "545640",
    "end": "550770"
  },
  {
    "text": "focused tool or a command line first tool I'm going to be deploying a very simple dotnet core application and this",
    "start": "550770",
    "end": "557370"
  },
  {
    "text": "is the code right here and the only thing that I'm really doing in this code is I'm writing hello world and I'm",
    "start": "557370",
    "end": "563160"
  },
  {
    "text": "writing what IP I'm listening on and what hostname I'm listening on and then the way that I deploy this application",
    "start": "563160",
    "end": "568620"
  },
  {
    "text": "is with this with this Hamel manifest I want everybody if you want to like",
    "start": "568620",
    "end": "573630"
  },
  {
    "text": "take a moment and react in whatever way you think is appropriate to the fact that I'm showing you llamo file like if",
    "start": "573630",
    "end": "579330"
  },
  {
    "text": "you want to Sai remember you're being recorded but like if you want to react to the fact that there's the Amal here",
    "start": "579330",
    "end": "584610"
  },
  {
    "text": "go ahead I've been working with this for a while and I can't I can't really imagine another tool that's better for",
    "start": "584610",
    "end": "590700"
  },
  {
    "text": "the job which I guess sounds a little bit weird but I can't imagine this being Jason or something like that like I think it I think it might actually be",
    "start": "590700",
    "end": "597180"
  },
  {
    "text": "harder if it weren't you Hamill so let me go ahead and deploy this now I'm gonna be running some scripts so that",
    "start": "597180",
    "end": "602880"
  },
  {
    "text": "you don't have to watch me fumble around and fail to type but you will see that I'm printing to the console what I'm",
    "start": "602880",
    "end": "608790"
  },
  {
    "text": "doing there and so what's going on here is I've taken that manifest and I've deployed it to the cluster with this",
    "start": "608790",
    "end": "615060"
  },
  {
    "text": "command if we go back and we look at this manifest real quick there's two objects here this is what that - - -",
    "start": "615060",
    "end": "621720"
  },
  {
    "text": "means it means I've got like two separate declarations in this file I've got a deployment object and I've got a",
    "start": "621720",
    "end": "628020"
  },
  {
    "text": "service object and they've all just got lots of stuff like this is really verbose and confusing and I'm gonna try",
    "start": "628020",
    "end": "633270"
  },
  {
    "text": "and break down the things that matter because as an application developer a lot of this does not matter to you and will not really matter to you a lot of",
    "start": "633270",
    "end": "639600"
  },
  {
    "text": "this is boilerplate code so every object in kubernetes has got a metadata section",
    "start": "639600",
    "end": "644900"
  },
  {
    "text": "and then the metadata you're gonna find a name you're gonna find labels labels are key value pairs but they're for",
    "start": "644900",
    "end": "651120"
  },
  {
    "text": "humans you may find annotations annotations or key value pairs but they're for infrastructure and for",
    "start": "651120",
    "end": "656550"
  },
  {
    "text": "machines not going to say too much more about that other than their ways of identifying this object the thing that",
    "start": "656550",
    "end": "663390"
  },
  {
    "text": "really matters here is the spec so a deployment object in kubernetes a long-lived like server",
    "start": "663390",
    "end": "670540"
  },
  {
    "text": "kind of thing right so I'm gonna have three replicas you can ignore all this",
    "start": "670540",
    "end": "675939"
  },
  {
    "text": "stuff and each one of those is going to have one container and it's gonna point to this image now I've already pushed",
    "start": "675939",
    "end": "682389"
  },
  {
    "text": "this image to my docker hub so this image is already sitting out there and I'm gonna expose port 80 and in addition",
    "start": "682389",
    "end": "688990"
  },
  {
    "text": "to that I'm gonna have a service and the services of type load balancer a port 80 so what's going on with this service",
    "start": "688990",
    "end": "695410"
  },
  {
    "text": "declaration is a service basically identifies in kubernetes here's a thing that you can talk to if you're inside",
    "start": "695410",
    "end": "701470"
  },
  {
    "text": "the cluster or in this case because I made it of type load balancer if you're outside the cluster here's a thing that",
    "start": "701470",
    "end": "707170"
  },
  {
    "text": "you can talk to that is going to be running here the deployment alone doesn't make it easy to find and talk to you this",
    "start": "707170",
    "end": "713579"
  },
  {
    "text": "deployment the service is what does that it's going to create DNS records I have exposed this publicly so that we can",
    "start": "713579",
    "end": "720040"
  },
  {
    "text": "talk to it and using put type load balancers kind of like the dumbest way to do that but it's great for demos so",
    "start": "720040",
    "end": "726040"
  },
  {
    "text": "I'm doing that I'm doing it that way and then over here we're now ready to explain what the output of this command",
    "start": "726040",
    "end": "732399"
  },
  {
    "text": "is so a pod you can think of as like an instance of my deployment so I went ahead and I created this and I use the",
    "start": "732399",
    "end": "738339"
  },
  {
    "text": "watch command so you can see all the things that happen and gradually three instances of my deployment got created that's what you",
    "start": "738339",
    "end": "744309"
  },
  {
    "text": "see here and we ended up with three separate instances three separate pods three separate names that are all running so I'm gonna exit out of that",
    "start": "744309",
    "end": "751360"
  },
  {
    "text": "and my next step here we're just gonna run a little shell script I'm getting",
    "start": "751360",
    "end": "756399"
  },
  {
    "text": "the public IP of that service that I just deployed and then I'm sort of pinging it repeatedly and you can see",
    "start": "756399",
    "end": "762009"
  },
  {
    "text": "that I'm getting responses from different endpoints here I'm getting responses from different IP addresses and different host names is there are",
    "start": "762009",
    "end": "768459"
  },
  {
    "text": "three copies of this service running so you see I get response from 3348 and I",
    "start": "768459",
    "end": "773470"
  },
  {
    "text": "think I saw a 38 in there I've got three copies of this thing running the next thing that I can do is I can upgrade",
    "start": "773470",
    "end": "779019"
  },
  {
    "text": "this deployment so I've got another copy of my app and my other app is going to output some different text if I come to",
    "start": "779019",
    "end": "786579"
  },
  {
    "text": "my start up here this one says by the way this is a second version and other than that it's pretty similar the only",
    "start": "786579",
    "end": "792100"
  },
  {
    "text": "thing that's different about this is I've added a health check to it now health checks has been around in asp net core for the last couple releases and",
    "start": "792100",
    "end": "798189"
  },
  {
    "text": "you don't necessarily need health checks package or health checks infrastructure to do health checks but",
    "start": "798189",
    "end": "803930"
  },
  {
    "text": "we find that it's kind of helpful for a variety of reasons what I've changed about this deployment and the way I'm",
    "start": "803930",
    "end": "810170"
  },
  {
    "text": "going to update this is I've told kubernetes I want you to check that this thing is ready before you send any",
    "start": "810170",
    "end": "816200"
  },
  {
    "text": "traffic to it that's what this readiness probe is and I have tweaked these numbers to be slow so that it's going to",
    "start": "816200",
    "end": "822110"
  },
  {
    "text": "sort of take a little bit of time to know that this thing is ready and the whole reason I'm doing that is just for",
    "start": "822110",
    "end": "827900"
  },
  {
    "text": "demo purposes so you can see what I'm about to show you and then additionally what I've customized here I've updated",
    "start": "827900",
    "end": "832940"
  },
  {
    "text": "this to the second image of the app but the other thing that I've customized here is I've changed the deploying",
    "start": "832940",
    "end": "838790"
  },
  {
    "text": "deployment strategy to rolling update and I've basically configured this to do something kind of special and kind of",
    "start": "838790",
    "end": "845680"
  },
  {
    "text": "kind of complicated to explain but easy to understand why you'd want to do it so what this is going to do is when I",
    "start": "845680",
    "end": "851690"
  },
  {
    "text": "update this app it's going to create one copy of the new app wait for that to be ready and then delete one copy of the",
    "start": "851690",
    "end": "858560"
  },
  {
    "text": "old app and so on so there's never going to be fewer than three copies of my app running and it's going to gradually",
    "start": "858560",
    "end": "865070"
  },
  {
    "text": "arrive at the new app being the only one running so I'm gonna go ahead and start",
    "start": "865070",
    "end": "870410"
  },
  {
    "text": "that this is deploying the new copy of the ml file and that's running and then",
    "start": "870410",
    "end": "875690"
  },
  {
    "text": "over here in another terminal I'm gonna run that same command that we ran to ping it and display the output and if I",
    "start": "875690",
    "end": "883310"
  },
  {
    "text": "did this right we should see that gradually this is going to switch so you can see that we haven't started we",
    "start": "883310",
    "end": "889610"
  },
  {
    "text": "haven't started bringing in the new copies of the service yet and there it went so you should start to see now we're gonna get some mixed responses",
    "start": "889610",
    "end": "896540"
  },
  {
    "text": "here we're gonna start seeing some responses in just a few seconds from our new app as they come online and it's",
    "start": "896540",
    "end": "904970"
  },
  {
    "text": "taking its time so it says we have to up-to-date we have three ready and three",
    "start": "904970",
    "end": "911300"
  },
  {
    "text": "available so there we started to see",
    "start": "911300",
    "end": "916430"
  },
  {
    "text": "some traffic from the second version and you can see that they're sort of intermingling we're seeing mixed traffic",
    "start": "916430",
    "end": "921920"
  },
  {
    "text": "from the first version and the second version because both of them are running in production at the same time and then",
    "start": "921920",
    "end": "927110"
  },
  {
    "text": "as these new instances come online it's going to it's going to sort of taper off all the old ones until we get to the",
    "start": "927110",
    "end": "932840"
  },
  {
    "text": "state where every is transitioned onto the old on to the new system so this is pretty sophisticated and I was able to do that",
    "start": "932840",
    "end": "939110"
  },
  {
    "text": "with just a couple lines in llamo I remember when I was 16 years old and I was working at an Internet service",
    "start": "939110",
    "end": "944270"
  },
  {
    "text": "provider in Toledo Ohio and we would literally like change the DNS record and then like unplug and replug like",
    "start": "944270",
    "end": "950300"
  },
  {
    "text": "different computers to do this kind of thing to try to do a migration with no downtime but we've actually done a",
    "start": "950300",
    "end": "955850"
  },
  {
    "text": "migration to an upgrade to a new app with no downtime in a totally automated way with just like llamó that we can",
    "start": "955850",
    "end": "963290"
  },
  {
    "text": "source control so I'm gonna go ahead and clear this up because we don't need that anymore and get ready for my next thing",
    "start": "963290",
    "end": "972940"
  },
  {
    "text": "okay so that's kind of an intro of some of the things that you can do with",
    "start": "978730",
    "end": "984890"
  },
  {
    "text": "kubernetes that are pretty powerful so you might be asking at this point in the presentation like I'm demoing this on",
    "start": "984890",
    "end": "991730"
  },
  {
    "start": "986000",
    "end": "1366000"
  },
  {
    "text": "Mac I'm doing all this at the command line I'm a Windows developer can I do this with Windows so I had actually",
    "start": "991730",
    "end": "997160"
  },
  {
    "text": "planned on showing a mix of Windows and Mac to try and try and hammer that point",
    "start": "997160",
    "end": "1002709"
  },
  {
    "text": "home but something bad happened to me I want to say first that this was not my fault it was an accident",
    "start": "1002709",
    "end": "1009459"
  },
  {
    "text": "so I kind of smashed my computer on Thursday before I came here which is kind of unfortunate but if you don't",
    "start": "1009459",
    "end": "1016150"
  },
  {
    "text": "physically break your computer windows works pretty well for doing kubernetes and for doing docker WSL to makes it",
    "start": "1016150",
    "end": "1023200"
  },
  {
    "text": "work really well and I've been using that pretty happily on my like Windows workstation at work as well as my",
    "start": "1023200",
    "end": "1029020"
  },
  {
    "text": "personal Mac which I'm using for this presentation if you're not a command-line sort of person vs code has",
    "start": "1029020",
    "end": "1035920"
  },
  {
    "text": "got really excellent tools for kubernetes at least as far as being able to visualize and see what's going on so",
    "start": "1035920",
    "end": "1041620"
  },
  {
    "text": "if you're more of a command line if you're more of a GUI type of person and you want to say right click give me the logs of this thing or right-click you",
    "start": "1041620",
    "end": "1048339"
  },
  {
    "text": "know tell me what's going on with this thing visual visual studio code has got really excellent UI for doing kubernetes",
    "start": "1048339",
    "end": "1055809"
  },
  {
    "text": "so as developers there's lots to like about this first of all the main thing like all of these small decisions like",
    "start": "1055809",
    "end": "1063340"
  },
  {
    "text": "the number of replicas or how we're deploying how we're rolling how we're doing health checks they're not things that you configure in some UI",
    "start": "1063340",
    "end": "1069480"
  },
  {
    "text": "somewhere there are things that can all be source controlled so like all the details of your deployment of your",
    "start": "1069480",
    "end": "1075480"
  },
  {
    "text": "operations that matter you can source control in a way that is going to help you and it's going to work with the way that you flow data and the way that you",
    "start": "1075480",
    "end": "1082860"
  },
  {
    "text": "do check-ins and things today and lastly it's a big REST API so like it has a command line tool that lets you lets you",
    "start": "1082860",
    "end": "1089220"
  },
  {
    "text": "query stuff and write your own kind of queries to find out data or find out what's going on you can drop to a lower level and write",
    "start": "1089220",
    "end": "1095610"
  },
  {
    "text": "your own sort of tooling around around what's going on in your cluster if you want to do that but there's a lot that's",
    "start": "1095610",
    "end": "1100650"
  },
  {
    "text": "not great about it and these are some of the things that we hope get better over time so like using docker like I'm getting I",
    "start": "1100650",
    "end": "1107280"
  },
  {
    "text": "always get the sense when I talk to people that's like everybody's using docker but everybody's not happy that they're using docker",
    "start": "1107280",
    "end": "1112530"
  },
  {
    "text": "do people feel that way like docker can be kind of a pain especially in dotnet when we have multiple projects there are",
    "start": "1112530",
    "end": "1119310"
  },
  {
    "text": "dependencies of each other there isn't really a good recipe for that something that myself and the rest of the asp net",
    "start": "1119310",
    "end": "1125880"
  },
  {
    "text": "team want to build some tooling to try and make better in the future it's something we're thinking about we sort",
    "start": "1125880",
    "end": "1132450"
  },
  {
    "text": "of understand that the current state of things is not very good right additionally there's a lot of concepts",
    "start": "1132450",
    "end": "1137880"
  },
  {
    "text": "in kubernetes that are probably more powerful than you need I've shown you like really basic like day 1 kind of",
    "start": "1137880",
    "end": "1143460"
  },
  {
    "text": "stuff so far but there's a lot of things that you can do here that maybe aren't what you want to spend your time on as a",
    "start": "1143460",
    "end": "1148620"
  },
  {
    "text": "developer we're hoping that more stuff gets built on top of kubernetes it's higher level in the future that's a",
    "start": "1148620",
    "end": "1154650"
  },
  {
    "text": "little bit more accessible to developers so that's just kind of a taste of that",
    "start": "1154650",
    "end": "1159740"
  },
  {
    "text": "we're gonna switch gears a little bit and talk a little bit more about writing code and about writing a spinet core",
    "start": "1159740",
    "end": "1165300"
  },
  {
    "text": "applications and this is the stuff that I hope really speaks to you if you're a back-end developer like how do you",
    "start": "1165300",
    "end": "1171090"
  },
  {
    "text": "communicate between your micro services what protocols are you going to use what technologies are you going to use how do",
    "start": "1171090",
    "end": "1176580"
  },
  {
    "text": "you figure out what endpoints to talk to on other services how do you manage configuration and secrets these are all",
    "start": "1176580",
    "end": "1182370"
  },
  {
    "text": "the this is like your checklist of all your things to think about if you're planning micro services development or micro services deployment these are all",
    "start": "1182370",
    "end": "1189210"
  },
  {
    "text": "problems these are all the problems that get scaled up when you have multiple apps in your system so if you had one",
    "start": "1189210",
    "end": "1195780"
  },
  {
    "text": "application in your system before and you want it to call from you know one component to another like",
    "start": "1195780",
    "end": "1201670"
  },
  {
    "text": "that was probably a method call in your code today you might have an abstraction that you call through so that you can",
    "start": "1201670",
    "end": "1206920"
  },
  {
    "text": "unit test and so that you can mock dependencies but now that it's a different service running on a different",
    "start": "1206920",
    "end": "1212650"
  },
  {
    "text": "machine it's a distributed computing problem how do you think about how do I know the address of that other server",
    "start": "1212650",
    "end": "1218620"
  },
  {
    "text": "how do I know how do I think about resiliency or what do I do if that other service goes down these are not the kind",
    "start": "1218620",
    "end": "1225490"
  },
  {
    "text": "of things that you had to think about when your code was all in the same process then lastly when you do troubleshooting",
    "start": "1225490",
    "end": "1231160"
  },
  {
    "text": "what are your set of tools for visualizing what's going on in your topology for tracking the performance of",
    "start": "1231160",
    "end": "1237280"
  },
  {
    "text": "things and for improving that so I've got a sample app that we're going to look at solutions to some of these",
    "start": "1237280",
    "end": "1243130"
  },
  {
    "text": "problems and we're gonna look at the current state of the world through the lens of a sort of sample or a basic",
    "start": "1243130",
    "end": "1248170"
  },
  {
    "text": "prototype kind of app so what I've done is I've taken the blazing pizza app from our blazer workshop and I've broken the",
    "start": "1248170",
    "end": "1254770"
  },
  {
    "text": "back end up into some micro services so normally the blazing pizza app how it works is we've got a front-end blazer",
    "start": "1254770",
    "end": "1261310"
  },
  {
    "text": "application written in in blazer webassembly that runs in the browser and we've got a sort of front end a back end",
    "start": "1261310",
    "end": "1268450"
  },
  {
    "text": "for the front end app that runs as a regular asp net core server app that's like an API server for the front end app",
    "start": "1268450",
    "end": "1274800"
  },
  {
    "text": "what I've done is I've basically taken all the business logic functionality out of that app and I factor that in two",
    "start": "1274800",
    "end": "1280900"
  },
  {
    "text": "separate concerns or separate domains so we have a menu service which owns things like what are the set of Pizza specials",
    "start": "1280900",
    "end": "1287320"
  },
  {
    "text": "that are available what toppings can you put on pizzas we've got an order service which owns payment processing and",
    "start": "1287320",
    "end": "1292780"
  },
  {
    "text": "tracking order history and we've got a delivery service which is responsible for making the pizzas and actually",
    "start": "1292780",
    "end": "1298180"
  },
  {
    "text": "tracking like where is the delivery person when with your pizza when are they gonna get there I've also to sort",
    "start": "1298180",
    "end": "1303940"
  },
  {
    "text": "of mix things up change some of the communication patterns here so we're still using good old HTTP and JSON to",
    "start": "1303940",
    "end": "1309760"
  },
  {
    "text": "talk from my client side app to my front-end but we're going to use G RPC to manage most of the communications",
    "start": "1309760",
    "end": "1315670"
  },
  {
    "text": "between most of the other services and hopefully you may have heard some things about G RPC or you may have seen it",
    "start": "1315670",
    "end": "1321730"
  },
  {
    "text": "before I'll introduce some of those concepts and show a little bit of what that feels like to use when we start",
    "start": "1321730",
    "end": "1328150"
  },
  {
    "text": "talking about the communications between those different kinds of services and then additionally I've got some Redis in there I'm using Redis in this example to",
    "start": "1328150",
    "end": "1335590"
  },
  {
    "text": "to sort of simulate using it for like Message Queuing functionality as well as",
    "start": "1335590",
    "end": "1340720"
  },
  {
    "text": "pub/sub functionality as well as database like functionality and I like Redis from a teaching point of view",
    "start": "1340720",
    "end": "1346450"
  },
  {
    "text": "because Redis is really flexible technology and it can be used to do a variety of different things but in",
    "start": "1346450",
    "end": "1352030"
  },
  {
    "text": "practice you could substitute Redis for like a proper message queue or like a proper pub/sub functionality or like a",
    "start": "1352030",
    "end": "1358000"
  },
  {
    "text": "proper database functionality in all the cases that I'm doing here I just wanted to do it with Redis so I did so with",
    "start": "1358000",
    "end": "1365559"
  },
  {
    "text": "that I'm gonna flip over to my actual app and let's run this and see it do something and I am done with this so",
    "start": "1365559",
    "end": "1379120"
  },
  {
    "start": "1366000",
    "end": "1500000"
  },
  {
    "text": "over here I've got my blazing pizza app and make that slightly bigger and this is our pizza store from the workshop and",
    "start": "1379120",
    "end": "1385600"
  },
  {
    "text": "you can see that I've loaded in a list of Pizza specials here so this this list of pizzas here and these images and",
    "start": "1385600",
    "end": "1391840"
  },
  {
    "text": "these descriptions are what comes from our menu service if I open up one of these pizzas like I think the buffalo",
    "start": "1391840",
    "end": "1397750"
  },
  {
    "text": "chicken sounds good this list of toppings comes from our menu service as well and I can select these so like",
    "start": "1397750",
    "end": "1403890"
  },
  {
    "text": "pepperoni sounds good and I think I'll add lobster and then I can I can add",
    "start": "1403890",
    "end": "1409929"
  },
  {
    "text": "that sort of to my cart over here then I go to the order page and I'm gonna very carefully put in all my personal",
    "start": "1409929",
    "end": "1415360"
  },
  {
    "text": "information so we can deliver this pizza this is accurate by the way if you want to send me letters or mail me pizzas",
    "start": "1415360",
    "end": "1422110"
  },
  {
    "text": "when I press the place order button this is actually going to submit to our order service so we're involving our second",
    "start": "1422110",
    "end": "1427390"
  },
  {
    "text": "micro service so I'm going to go ahead and order this pizza that's been ordered and now the delivery service takes over",
    "start": "1427390",
    "end": "1434770"
  },
  {
    "text": "so our UI is our our front our back-end for our front-end is talking to the",
    "start": "1434770",
    "end": "1439929"
  },
  {
    "text": "delivery service and it's going to get updates from the delivery service so the delivery service is tracking this driver",
    "start": "1439929",
    "end": "1445090"
  },
  {
    "text": "now that the pizzas out for delivery and it's going to be pushing updates out that are then gonna be seen inside the",
    "start": "1445090",
    "end": "1450130"
  },
  {
    "text": "browser so we're getting updates about the status of that Pizza and where it is and to sort of visualize this a little",
    "start": "1450130",
    "end": "1455409"
  },
  {
    "text": "bit differently I'm gonna use this other app here that I've written which is a map for the managers of pizza stores so",
    "start": "1455409",
    "end": "1461380"
  },
  {
    "text": "I'm worried that my delivery drivers are like driving too fast or something like that so I've got this app",
    "start": "1461380",
    "end": "1466900"
  },
  {
    "text": "where I can just spy on them and I'll select an order and you can see that I'm getting pushed updates to this UI so I'm",
    "start": "1466900",
    "end": "1472570"
  },
  {
    "text": "tracking pizza order number two and I'm getting these like latitude and longitude coordinates sort of pushed",
    "start": "1472570",
    "end": "1477820"
  },
  {
    "text": "into this app and that's happening is this this is being delivered and then we're gonna get closer and closer and",
    "start": "1477820",
    "end": "1483640"
  },
  {
    "text": "this pizza will will eventually arrive so those are some of the communication patterns that are happening inside of",
    "start": "1483640",
    "end": "1489130"
  },
  {
    "text": "this app and we're gonna break those down a little bit and talk talk in a little bit more detail about how they",
    "start": "1489130",
    "end": "1494830"
  },
  {
    "text": "work why I made the choices I made and what the technology looks like under the hood so let's drop to the S code so I'm",
    "start": "1494830",
    "end": "1505059"
  },
  {
    "text": "opening up this code right now in vs code so we can take a look at it the first thing that I want to point out is",
    "start": "1505059",
    "end": "1511000"
  },
  {
    "text": "remember I've got a client-side blazer webassembly app that's blazing Pizza client that I've got right here and I've",
    "start": "1511000",
    "end": "1517660"
  },
  {
    "text": "got a server-side sort of REST API kind of app that's acting as a host for the client side app why would I choose",
    "start": "1517660",
    "end": "1524470"
  },
  {
    "text": "something like this or why would I do something like this well the answer is there's a couple reasons why I might do it and this is a pretty common",
    "start": "1524470",
    "end": "1530500"
  },
  {
    "text": "microservices pattern when you've got a front-end application that's a client-side application and it's known",
    "start": "1530500",
    "end": "1536050"
  },
  {
    "text": "typically as the BFF pattern which i think of as the like best friends forever pattern but it actually stands",
    "start": "1536050",
    "end": "1541179"
  },
  {
    "text": "for back-end for your front end and the the sort of idea here is that it's worth",
    "start": "1541179",
    "end": "1546220"
  },
  {
    "text": "isolating your client-side application if it's a true client-side application from your proper back-end functionality",
    "start": "1546220",
    "end": "1552880"
  },
  {
    "text": "for a few reasons first of all you may not use the same type of auth in your front end application as you want to use",
    "start": "1552880",
    "end": "1559420"
  },
  {
    "text": "in the rest of your sort of enterprise and sort of topology the second reason is you probably don't want a client-side",
    "start": "1559420",
    "end": "1566350"
  },
  {
    "text": "application sending requests to like 20 different services to fulfill all the things that it needs like you sort of",
    "start": "1566350",
    "end": "1573220"
  },
  {
    "text": "know the typical pattern with front-end applications where you need to talk to an api gateway or something like that",
    "start": "1573220",
    "end": "1578230"
  },
  {
    "text": "that then is gonna fan out and do like two other calls and combine the results I don't have examples of this in my in",
    "start": "1578230",
    "end": "1584260"
  },
  {
    "text": "my sample but you you want to try and limit the number of requests that your client-side application needs to make if",
    "start": "1584260",
    "end": "1590110"
  },
  {
    "text": "you can having a back-end application to sort of fulfill that contract for you makes things a lot easier so one of the",
    "start": "1590110",
    "end": "1596650"
  },
  {
    "text": "things that you notice right away is I've got a few G RPC clients here because this front-end application or",
    "start": "1596650",
    "end": "1603130"
  },
  {
    "text": "this this back-end for my front-end application is going out and fanning out into like three different G RPC services",
    "start": "1603130",
    "end": "1609039"
  },
  {
    "text": "so what's going on under the covers here is I have got these protobuf files and",
    "start": "1609039",
    "end": "1614620"
  },
  {
    "text": "this is part of the gr PC programming model I've got these profiles sitting in a server in my repo and I'm bringing",
    "start": "1614620",
    "end": "1620799"
  },
  {
    "text": "them in here as G RPC services client the reason why this is done is part is",
    "start": "1620799",
    "end": "1627429"
  },
  {
    "text": "explained by understanding a little bit more about how G RPC works as a programming model and if you haven't",
    "start": "1627429",
    "end": "1632470"
  },
  {
    "text": "seen this before this might look familiar to some other technologies that you've used in the past G RPC is",
    "start": "1632470",
    "end": "1638740"
  },
  {
    "text": "fundamentally a contract first kind of programming language or contract first kind of messaging protocol where you",
    "start": "1638740",
    "end": "1645309"
  },
  {
    "text": "define upfront in a specific format what the contract is going to be between your services so in this case my menu service",
    "start": "1645309",
    "end": "1652720"
  },
  {
    "text": "exposes these two endpoints you can get the list of Pizza specials you can get the list of toppings and everything",
    "start": "1652720",
    "end": "1658240"
  },
  {
    "text": "about the data model is described in this format that is language independent that is like source controllable and",
    "start": "1658240",
    "end": "1664720"
  },
  {
    "text": "then what I do is I already showed you how I import that into blazing pizza dot server my menu service also imports the",
    "start": "1664720",
    "end": "1672850"
  },
  {
    "text": "same proto file but it says that it's importing it as server because the menu",
    "start": "1672850",
    "end": "1677889"
  },
  {
    "text": "service is going to act as the server for that RPC so in my menu service I would expect to see methods like get",
    "start": "1677889",
    "end": "1684220"
  },
  {
    "text": "pizza specials and get pizza toppings cool so how this works we'll take a look",
    "start": "1684220",
    "end": "1689590"
  },
  {
    "text": "at the server side first is in start-up code you end up registering a G RPC",
    "start": "1689590",
    "end": "1695830"
  },
  {
    "text": "service here so I've got menu service in pull which I don't like imple but the G RPC generated code",
    "start": "1695830",
    "end": "1701200"
  },
  {
    "text": "already takes menu service from me so I don't have a better idea so I'm mapping in menu service as a G",
    "start": "1701200",
    "end": "1706870"
  },
  {
    "text": "RPC service here in start-up code and then the implementation of that looks like this it looks an awful like lot like an asp",
    "start": "1706870",
    "end": "1713649"
  },
  {
    "text": "net core controller the only difference here for G RPC is some of the data types are different and the fact that they",
    "start": "1713649",
    "end": "1720580"
  },
  {
    "text": "give you a base class to generate this the other thing that's different about doing this kind of programming with G",
    "start": "1720580",
    "end": "1725710"
  },
  {
    "text": "RPC as opposed to like a REST API is G RPC is very prescriptive so you don't",
    "start": "1725710",
    "end": "1730899"
  },
  {
    "text": "see anything in these ants in these methods clinicians about like I want to bind this parameter from the body I want to",
    "start": "1730899",
    "end": "1737530"
  },
  {
    "text": "bind this parameter from the crew string I want to return this status code like G RPC kind of does away with that level of",
    "start": "1737530",
    "end": "1744520"
  },
  {
    "text": "detail on that level of customization and it's a very prescriptive format or a very prescriptive protocol as far as how",
    "start": "1744520",
    "end": "1750760"
  },
  {
    "text": "data is communicated between clients and servers so if you think about why would you choose something like J RPC versus",
    "start": "1750760",
    "end": "1757900"
  },
  {
    "text": "why would you choose something like HTTP and JSON well do you first of all do you",
    "start": "1757900",
    "end": "1763780"
  },
  {
    "text": "need to talk to every client in the universe within my micro services topology I don't need to talk to every",
    "start": "1763780",
    "end": "1769150"
  },
  {
    "text": "every client in the universe I just need to talk to my applications right so rest",
    "start": "1769150",
    "end": "1774220"
  },
  {
    "text": "and Jason will give you probably the broadest set of compatibility for building an API where as G RPC is going",
    "start": "1774220",
    "end": "1780280"
  },
  {
    "text": "to work really well for clients that can speak to your PC which generally means clients that can do HTTP to G RPC will",
    "start": "1780280",
    "end": "1787840"
  },
  {
    "text": "simplify a lot of the details for you if all you want to do is do some very pragmatic communication back and forth",
    "start": "1787840",
    "end": "1793360"
  },
  {
    "text": "now what it looks like over here to consume this service I can go to my toppings controller which is where I get",
    "start": "1793360",
    "end": "1799990"
  },
  {
    "text": "the list of toppings so you can think about front-end API or front-end client side app calls this calls this over rest",
    "start": "1799990",
    "end": "1806770"
  },
  {
    "text": "and Jason in my back-end API this thing actually kind of just proxies to the G",
    "start": "1806770",
    "end": "1811930"
  },
  {
    "text": "RPC service and then does some conversions of the types of objects to give them back so I get a menu service",
    "start": "1811930",
    "end": "1818020"
  },
  {
    "text": "in this case I'm getting it from dependency injection right here and then I can just call this method so this",
    "start": "1818020",
    "end": "1823900"
  },
  {
    "text": "client is code generated I didn't have to write it the fact that I import the proto file gives me this generated client I can call this method gives me",
    "start": "1823900",
    "end": "1831760"
  },
  {
    "text": "strongly typed objects that are code generated to pass in the data that I need and get the data that I want back",
    "start": "1831760",
    "end": "1836950"
  },
  {
    "text": "out and that's how something like this works so the other cool aspect of this that I can show you is I've configured",
    "start": "1836950",
    "end": "1843490"
  },
  {
    "start": "1839000",
    "end": "2097000"
  },
  {
    "text": "something like Zipkin I've configured distributed tracing for this for this repository or for my sample so Zipkin is",
    "start": "1843490",
    "end": "1851500"
  },
  {
    "text": "a distributed tracing dashboard and in all of these applications I have wired",
    "start": "1851500",
    "end": "1856900"
  },
  {
    "text": "them up to do distributed tracing to this instance so I'm running a service for Zipkin in my kubernetes instance and",
    "start": "1856900",
    "end": "1862960"
  },
  {
    "text": "i have put this little bit of like telemetry code in all the services that are deployed",
    "start": "1862960",
    "end": "1868050"
  },
  {
    "text": "here what's going to happen is that all the HTTP coming into the application all the HTTP going out of the application as",
    "start": "1868050",
    "end": "1875670"
  },
  {
    "text": "well as the Redis calls that are going out of the application are going to go and get traced to the Zipkin instance",
    "start": "1875670",
    "end": "1882620"
  },
  {
    "text": "additionally if you wanted to trace your sort of arbitrary stuff there's this activity type that you can interact with",
    "start": "1882620",
    "end": "1888390"
  },
  {
    "text": "in Dona Corps and you can sort of set up your own your own little areas or regions of time to add to the data",
    "start": "1888390",
    "end": "1894630"
  },
  {
    "text": "that's going to Zipkin David and Damian's talk from yesterday about diagnostics included a lot of this",
    "start": "1894630",
    "end": "1899970"
  },
  {
    "text": "information as well perhaps at a little bit more level of detail so if you want to learn more about that I would suggest",
    "start": "1899970",
    "end": "1905250"
  },
  {
    "text": "watching that when the video comes out if you didn't catch it so what I'm going to do right now is I'm going to trace",
    "start": "1905250",
    "end": "1910320"
  },
  {
    "text": "one of these calls to toppings so I'm going to search for calls that came in to the path to slash toppings I can open",
    "start": "1910320",
    "end": "1917310"
  },
  {
    "text": "that here in Zipkin and I can see that I got a request to my front-end I can see that the user agent was was maxed so it",
    "start": "1917310",
    "end": "1923970"
  },
  {
    "text": "was it was this computer it was the app I showed you and then you can see that there was another there was another call here that happened kind of",
    "start": "1923970",
    "end": "1930870"
  },
  {
    "text": "overlapping in time and this was the call to menu service get topping so like this URL right here I didn't have to",
    "start": "1930870",
    "end": "1937080"
  },
  {
    "text": "write that in code anywhere it comes from GRP CG RPC decides what that URL is and you can see that the client was G",
    "start": "1937080",
    "end": "1943620"
  },
  {
    "text": "RPC so you can see that I've got this little like sort of waterfall chart here of what's going on in my application",
    "start": "1943620",
    "end": "1949620"
  },
  {
    "text": "what are the calls that went to various services and what were their results which is very valuable when something",
    "start": "1949620",
    "end": "1955500"
  },
  {
    "text": "goes wrong and you want to see what happens let's look at something slightly more complicated one of these more",
    "start": "1955500",
    "end": "1960900"
  },
  {
    "text": "complex G RPC invocations so I mentioned that I'm using G RPC for the order",
    "start": "1960900",
    "end": "1967260"
  },
  {
    "text": "processing portion as well so we can look at something slightly more complex here and that would be I happen to know",
    "start": "1967260",
    "end": "1974340"
  },
  {
    "text": "what the URL is so when I place the order it goes to slash orders and there's more that's going on inside of",
    "start": "1974340",
    "end": "1981450"
  },
  {
    "text": "here so my front end app makes a call to orders then that goes to the orders G",
    "start": "1981450",
    "end": "1987750"
  },
  {
    "text": "RPC service so you can see this is a G RPC looking kind of URL and it's a gr PC dotnet client and then the next thing is",
    "start": "1987750",
    "end": "1994770"
  },
  {
    "text": "you can see that there's some extra stuff happening here this is the communication that's happen inside the order service with Redis so",
    "start": "1994770",
    "end": "2001909"
  },
  {
    "text": "you can see you can see things here like what what exactly what statement was being executed in Redis Redis is kind of",
    "start": "2001909",
    "end": "2008359"
  },
  {
    "text": "this like Cru language sort of thing you can also see the hostname of the reticence ins that I was talking to which is an azure hosted Redis that I",
    "start": "2008359",
    "end": "2014899"
  },
  {
    "text": "provisioned and all the events that happened as part of that communication the other thing that's really cool about distributed tracing and why you why",
    "start": "2014899",
    "end": "2022369"
  },
  {
    "text": "you'd like this sort of thing is you can go down here and you can get these IDs so these IDs are the things that make",
    "start": "2022369",
    "end": "2029269"
  },
  {
    "text": "distributed tracing work and they flow around in headers on all the communication that's happening inside",
    "start": "2029269",
    "end": "2034609"
  },
  {
    "text": "your micro services app so asp net core this is a standard by the way we didn't invent it we did invent our own thing",
    "start": "2034609",
    "end": "2040429"
  },
  {
    "text": "but this is this is a standard version of it this is a standard called open telemetry that Google and us us",
    "start": "2040429",
    "end": "2046669"
  },
  {
    "text": "Microsoft and a couple other companies are investing in and it's basically agreement on what these header names are",
    "start": "2046669",
    "end": "2052878"
  },
  {
    "text": "and what the values look like and what the semantics of them are so that no matter what kind of programming stack",
    "start": "2052879",
    "end": "2058099"
  },
  {
    "text": "you're using you can have these similar kinds of experiences now the part that's in dotnet core is the fact that when a",
    "start": "2058099",
    "end": "2063740"
  },
  {
    "text": "request comes in and it's stamped with one of these headers we will do the right thing for you inside Donette core",
    "start": "2063740",
    "end": "2069888"
  },
  {
    "text": "to wire that up to propagate those so it means that here i have a trace ID and i",
    "start": "2069889",
    "end": "2076520"
  },
  {
    "text": "have a span ID on my incoming request from the browser in my call to g RPC I've also got a span ID and a parent",
    "start": "2076520",
    "end": "2083720"
  },
  {
    "text": "span ID because we've propagated that information from the original call and that's what powers this this sort of",
    "start": "2083720",
    "end": "2090618"
  },
  {
    "text": "diagram is the relationships between these traces as well as the information about when they start and when they stop",
    "start": "2090619",
    "end": "2097359"
  },
  {
    "start": "2097000",
    "end": "2487000"
  },
  {
    "text": "let's look at a slightly more advanced G RPC example that I've done here which is that my delivery service is able to push",
    "start": "2097359",
    "end": "2103940"
  },
  {
    "text": "updates and we're able to receive updates and I want to go to my manager",
    "start": "2103940",
    "end": "2109220"
  },
  {
    "text": "app which is my little spy app here and look at the data of how this is power so this is a blazer server app which is why",
    "start": "2109220",
    "end": "2115549"
  },
  {
    "text": "it's able to react in in real time like this and the really important sort of money part of this is this on selected",
    "start": "2115549",
    "end": "2122119"
  },
  {
    "text": "order change so when I selected in that drop-down I want to monitor order number two this is the code that ran so again",
    "start": "2122119",
    "end": "2128960"
  },
  {
    "text": "I've got a JR PC client I go to track the delivery I pass in the user ID in the order idea I'm interested in and",
    "start": "2128960",
    "end": "2134990"
  },
  {
    "text": "then I get a response from the delivery server but instead of a single response I get a streaming response and I can",
    "start": "2134990",
    "end": "2140599"
  },
  {
    "text": "call read all async on that which gives me back a c-sharp eight icing away table or I sink innumerable and I have",
    "start": "2140599",
    "end": "2146869"
  },
  {
    "text": "something that I can then async for each or a weight for each and get each message as it comes back so that's how",
    "start": "2146869",
    "end": "2152390"
  },
  {
    "text": "I'm able to like stream those status messages in it's coming back a synchronously as the server pushes them",
    "start": "2152390",
    "end": "2158119"
  },
  {
    "text": "to me we call this in G RPC server push if I wanted to see how that's implemented I can go into I can go into",
    "start": "2158119",
    "end": "2165859"
  },
  {
    "text": "this G RPC application and take a look so in in the G RPC in the delivery",
    "start": "2165859",
    "end": "2172039"
  },
  {
    "text": "service application I've got this G RPC service the delivery service and it's got two endpoints it's got delivery",
    "start": "2172039",
    "end": "2177349"
  },
  {
    "text": "status which returns a single status and it's got track delivery which is what returns a stream of these delivery",
    "start": "2177349",
    "end": "2183589"
  },
  {
    "text": "statuses and inside here not going to explain this code in super detail but you can look at the sample if you want",
    "start": "2183589",
    "end": "2189769"
  },
  {
    "text": "I'm basically listening to a Redis pub/sub and every time I get a message on that Redis topic I'm gonna fetch the",
    "start": "2189769",
    "end": "2196400"
  },
  {
    "text": "current state of where that driver is and I'm and the current status of that pizza delivery and I'm going to push it",
    "start": "2196400",
    "end": "2202700"
  },
  {
    "text": "out over that G RPC connection if anybody's listening to me so this is like a flexible way to have people",
    "start": "2202700",
    "end": "2208730"
  },
  {
    "text": "subscribe when they want notifications they can hang up when they don't want them anymore and the server just tells",
    "start": "2208730",
    "end": "2214430"
  },
  {
    "text": "you gives you continual updates of what the status of that pizza is so how these things are produced we're going to talk",
    "start": "2214430",
    "end": "2220309"
  },
  {
    "text": "a little bit about Redis now inside my Delivery Service I've got a couple things happening so I",
    "start": "2220309",
    "end": "2226549"
  },
  {
    "text": "mentioned I've got this G RPC service here and I've also got this hosted service so hosted service and asp net",
    "start": "2226549",
    "end": "2233269"
  },
  {
    "text": "core is typically going to derive from the background service class and if you haven't seen these before you probably",
    "start": "2233269",
    "end": "2238819"
  },
  {
    "text": "have written something like this or have wanted something like this in the past and you might not know that we already have it so definitely check that out",
    "start": "2238819",
    "end": "2245950"
  },
  {
    "text": "background service is the thing is the thing that you want to reach for if you want some job running in your process in",
    "start": "2245950",
    "end": "2252470"
  },
  {
    "text": "your service that is going to have the same lifetime as the service but it's not going to handle any requests so in",
    "start": "2252470",
    "end": "2258559"
  },
  {
    "text": "this case my background service awaits and it basically just subscribes to a message queue in this case I'm",
    "start": "2258559",
    "end": "2264769"
  },
  {
    "text": "subscribing to the orders message q so this this GU here is kind of how you do message queues and Redis I'm",
    "start": "2264769",
    "end": "2270940"
  },
  {
    "text": "listening to a topic I'm looking at a list and saying are there any orders that need to be processed and then I'm",
    "start": "2270940",
    "end": "2277240"
  },
  {
    "text": "listening on a topic to get notified when that list is updated so that I can check again basically so I'm pulling",
    "start": "2277240",
    "end": "2283030"
  },
  {
    "text": "orders off of this message queue and then every time I get an order I'm gonna process it and you've now reached the",
    "start": "2283030",
    "end": "2288910"
  },
  {
    "text": "point where the veil just completely shatters on my demo so there's no actual pizza store anywhere here I know you're",
    "start": "2288910",
    "end": "2294880"
  },
  {
    "text": "shocked right there's no actual delivery person that's bringing these pizzas anywhere it's all simulated this is the",
    "start": "2294880",
    "end": "2301030"
  },
  {
    "text": "code that simulates that pizza delivery and this is the code that pushes those updates out so we pick a time we pick a",
    "start": "2301030",
    "end": "2307210"
  },
  {
    "text": "timer of a minute and we interpolate from wherever we said the pizza store was to where we saying that the person",
    "start": "2307210",
    "end": "2313420"
  },
  {
    "text": "is and push out updates like every three seconds or every five seconds with the drivers new position of just them moving",
    "start": "2313420",
    "end": "2319300"
  },
  {
    "text": "closer and closer until it's delivered so we totally fake the pizza status thing so something you might be asking",
    "start": "2319300",
    "end": "2325420"
  },
  {
    "text": "yourself at this point would be why am I using Redis to do this communication",
    "start": "2325420",
    "end": "2331050"
  },
  {
    "text": "inside of a single process because I said that the G RPC service for delivery and the Redis service for processing",
    "start": "2331050",
    "end": "2339160"
  },
  {
    "text": "orders and pushing out status updates are actually in the same service and the reason is because of statefulness and",
    "start": "2339160",
    "end": "2344410"
  },
  {
    "text": "because of scaling so my micro services here is stateful because if somebody subscribes if somebody subscribes to get",
    "start": "2344410",
    "end": "2351820"
  },
  {
    "text": "updates for an order they want to get updates for that order no matter where that order is being processed but since",
    "start": "2351820",
    "end": "2357730"
  },
  {
    "text": "I'm reading the orders from a message queue only one app at a time is processing those updates so the fact that I can put something",
    "start": "2357730",
    "end": "2364240"
  },
  {
    "text": "like a Redis in between means that no matter how many instances I have of my delivery service",
    "start": "2364240",
    "end": "2369490"
  },
  {
    "text": "anybody can subscribe to notifications for any order on any delivery service they don't have to guess which delivery",
    "start": "2369490",
    "end": "2376450"
  },
  {
    "text": "service is the one that processed that order the updates flow to everybody could I have made these two services I",
    "start": "2376450",
    "end": "2382540"
  },
  {
    "text": "probably could have made them two services so there's all these technologies that we're using here and",
    "start": "2382540",
    "end": "2388210"
  },
  {
    "text": "all these different ways that were sort of inter connecting and talking to different services but we haven't talked about solving any of the questions of",
    "start": "2388210",
    "end": "2394630"
  },
  {
    "text": "how you find them or how you talk to them well kubernetes has kind of got your back for this",
    "start": "2394630",
    "end": "2399730"
  },
  {
    "text": "there's a couple things that kubernetes does that can really simplify your life when it comes to microservices",
    "start": "2399730",
    "end": "2405040"
  },
  {
    "text": "communication and how you find other services so the like dumbest thing you could do is you could do this so i'm",
    "start": "2405040",
    "end": "2412480"
  },
  {
    "text": "going to make this slightly bigger so you can see and I'm gonna say coop control yet service this is listing for",
    "start": "2412480",
    "end": "2420370"
  },
  {
    "text": "me all the services when it decides to this is going to list for me all the services that are running in this",
    "start": "2420370",
    "end": "2426280"
  },
  {
    "text": "namespace in my cluster and you can see I've got some of my apps services here delivery front-end manager menu orders",
    "start": "2426280",
    "end": "2432580"
  },
  {
    "text": "as all the things I mentioned as well as stuff that's infrastructure like Prometheus which I'll talk about it in a",
    "start": "2432580",
    "end": "2437800"
  },
  {
    "text": "little bit and you can see for some of these for all of these I have a cluster IP and for some of them I have an",
    "start": "2437800",
    "end": "2444130"
  },
  {
    "text": "external IP so I've got an address that I can use to communicate with this service inside the cluster and then I've",
    "start": "2444130",
    "end": "2450280"
  },
  {
    "text": "got an external load balancer address that I can use to talk to outside the cluster well these service names are",
    "start": "2450280",
    "end": "2456430"
  },
  {
    "text": "actually just host names so for instance if I wanted to if I'm inside the delivery service and I wanted to talk to",
    "start": "2456430",
    "end": "2462970"
  },
  {
    "text": "the front-end service or talk to the menu service I could literally just HTTP menu and that would work just fine so",
    "start": "2462970",
    "end": "2468850"
  },
  {
    "text": "kind of like the dumbest thing you can do if you're on kubernetes is you can just use DNS because kubernetes uses all",
    "start": "2468850",
    "end": "2475450"
  },
  {
    "text": "those features so kubernetes will create dns records for all your services you don't actually need to know how to find",
    "start": "2475450",
    "end": "2481150"
  },
  {
    "text": "them the logical name that you gave to the service is the hostname is the address what if you wanted to do",
    "start": "2481150",
    "end": "2487240"
  },
  {
    "start": "2487000",
    "end": "2937000"
  },
  {
    "text": "something else so let me show you something that I like to do when I write this kind of application I like to I",
    "start": "2487240",
    "end": "2492730"
  },
  {
    "text": "like to basically make these things work but make them work with a default so in",
    "start": "2492730",
    "end": "2497950"
  },
  {
    "text": "my startup code here I've got this little helper configuration get service hostname and I'm passing in what I want the defaults",
    "start": "2497950",
    "end": "2505480"
  },
  {
    "text": "of these host names to be so for the delivery service I'm gonna hard code and assume that if nobody's told me",
    "start": "2505480",
    "end": "2510970"
  },
  {
    "text": "otherwise I can talk to it on delivery likewise for menu and orders if nobody's",
    "start": "2510970",
    "end": "2516160"
  },
  {
    "text": "told me otherwise I'm gonna assume that the logical name of the service is the hostname the nice thing about that",
    "start": "2516160",
    "end": "2522760"
  },
  {
    "text": "assumption is that that will work really well if you're on kubernetes and you have a simple configuration it will also",
    "start": "2522760",
    "end": "2528310"
  },
  {
    "text": "work really well if you're running locally with something like docker compose and other things that are multi host container kinds of systems that",
    "start": "2528310",
    "end": "2535570"
  },
  {
    "text": "provide DNS and networking services which would be all of them this kind of really simple scheme is",
    "start": "2535570",
    "end": "2540790"
  },
  {
    "text": "supported by a bunch of different stuff if I wanted to get more complex with it let's look at what this code does so",
    "start": "2540790",
    "end": "2547600"
  },
  {
    "text": "this code is going to use the I configuration object that you get in asp net core and i'm going to going",
    "start": "2547600",
    "end": "2552880"
  },
  {
    "text": "i've got a simple convention around what keys i use so I take the logical name of the service and so I'm looking for a key",
    "start": "2552880",
    "end": "2558580"
  },
  {
    "text": "service : and then the service name and whatever is there I'm going to assume is supposed to be the URL of this key what",
    "start": "2558580",
    "end": "2565810"
  },
  {
    "text": "I like about this design and what I like about doing things like this is first of all I can provide a default so I don't",
    "start": "2565810",
    "end": "2571270"
  },
  {
    "text": "have to set this everywhere because it would be kind of a pain second of all if you don't have the information you need",
    "start": "2571270",
    "end": "2577359"
  },
  {
    "text": "like fail like fail hard fail very clearly with a clear error message so if",
    "start": "2577359",
    "end": "2583780"
  },
  {
    "text": "I don't have a reasonable default and I didn't provide a configuration value like this service will fail to start",
    "start": "2583780",
    "end": "2589720"
  },
  {
    "text": "like if you have messed up the configuration of something like it will fail in a very clear way with a very",
    "start": "2589720",
    "end": "2595030"
  },
  {
    "text": "clear error message so that you know what the problem is and you're not hunting around with like a bad error message or a timeout or something like",
    "start": "2595030",
    "end": "2601570"
  },
  {
    "text": "that failing fast and failing loudly can really help you if you wanted to you",
    "start": "2601570",
    "end": "2607210"
  },
  {
    "text": "could go even further or you could say something like I'm gonna have a health check that looks to say can I at least",
    "start": "2607210",
    "end": "2612580"
  },
  {
    "text": "ping that thing or can I at least verify that I've got configuration there's a couple different ways to fail what this",
    "start": "2612580",
    "end": "2618550"
  },
  {
    "text": "would look like to actually configure it the sort of simplest thing to do is well you could use an environment variable so",
    "start": "2618550",
    "end": "2624640"
  },
  {
    "text": "in a spinet core if I wanted to override this I could provide a value for this",
    "start": "2624640",
    "end": "2630070"
  },
  {
    "text": "with the environment variable let's say for the order service like service underscore underscore orders it's not a",
    "start": "2630070",
    "end": "2636580"
  },
  {
    "text": "mistake it's two underscores it's supposed to be two underscores two underscores we let you use one",
    "start": "2636580",
    "end": "2641710"
  },
  {
    "text": "underscore for readability in environment variable names in config two underscores in a spinet core means this",
    "start": "2641710",
    "end": "2647530"
  },
  {
    "text": "is a separator so it's effectively replaced with a colon if I were using JSON configuration or something like",
    "start": "2647530",
    "end": "2653380"
  },
  {
    "text": "that instead oops if I were using JSON configuration or something like that instead then you",
    "start": "2653380",
    "end": "2658690"
  },
  {
    "text": "know I would make an object service and then orders and so on so you get the",
    "start": "2658690",
    "end": "2666690"
  },
  {
    "text": "idea so we have a hierarchical configuration system it has a variety of sources it will give you a little",
    "start": "2666690",
    "end": "2672300"
  },
  {
    "text": "starter JSON file in every project by default when you're thinking about micro services and deploying to the cloud you",
    "start": "2672300",
    "end": "2677940"
  },
  {
    "text": "really end up first thinking about things like environment variables it's sort of like the easiest thing to do because environment variables are very",
    "start": "2677940",
    "end": "2684240"
  },
  {
    "text": "foolproof and they're very easy to troubleshoot because they're very easy to inspect with like any sort of tool but where you probably don't want to use",
    "start": "2684240",
    "end": "2691200"
  },
  {
    "text": "environment variables is you probably don't want to use environment variables for your secret data the reason we don't",
    "start": "2691200",
    "end": "2696510"
  },
  {
    "text": "like environment variables for secret data is that they're kind of inspectable by like anyone so if you have access to",
    "start": "2696510",
    "end": "2704010"
  },
  {
    "text": "the machine or you have access to look in the like kubernetes UI to find out what's going on with a pod then like",
    "start": "2704010",
    "end": "2710070"
  },
  {
    "text": "chances are you can see the environment variables of that and you can see whatever data is in there is just sort",
    "start": "2710070",
    "end": "2715380"
  },
  {
    "text": "of plain text so like we don't end up we don't want to use environment variables for secrets what do we want to do",
    "start": "2715380",
    "end": "2721500"
  },
  {
    "text": "instead well the answer is that we can still just use configuration because in",
    "start": "2721500",
    "end": "2726720"
  },
  {
    "text": "asp net core your secrets come in through configuration anyway that's how things like secret manager or key vault",
    "start": "2726720",
    "end": "2732540"
  },
  {
    "text": "work in Azure things get mapped in through your through your configuration",
    "start": "2732540",
    "end": "2737580"
  },
  {
    "text": "system the configuration system is how we read those things but how would we get a value into our service in the",
    "start": "2737580",
    "end": "2743280"
  },
  {
    "text": "first place so in my order service I need to talk to Redis I also do this in",
    "start": "2743280",
    "end": "2748590"
  },
  {
    "text": "the delivery service and the way that I can get this secret in here is I've defined a secret already in kubernetes",
    "start": "2748590",
    "end": "2754770"
  },
  {
    "text": "so I use the kubernetes command line to define a secret for my Redis I basically went to Azure provision to Redis",
    "start": "2754770",
    "end": "2761400"
  },
  {
    "text": "instance and then I went to kubernetes and I put that connection string in a kubernetes secret using the command line",
    "start": "2761400",
    "end": "2766910"
  },
  {
    "text": "since I'm on Azure if I had wanted to I could use key vault and import a key vault into kubernetes you could do the",
    "start": "2766910",
    "end": "2773520"
  },
  {
    "text": "same thing on other cloud providers as well it's kind of a standard integration that they all provide but I just did a",
    "start": "2773520",
    "end": "2778710"
  },
  {
    "text": "normal vanilla secret and the way that I do this is I can take this secret and I can map it to a file and that file name",
    "start": "2778710",
    "end": "2784800"
  },
  {
    "text": "is the service underscore underscore Redis that we talked about so basically by mapping that secret to a file with a",
    "start": "2784800",
    "end": "2790800"
  },
  {
    "text": "name that matches the configuration key that I wanted to use I can easily get it inside app the app code what the app code looks",
    "start": "2790800",
    "end": "2798720"
  },
  {
    "text": "like for that is inside my program so yes of out of the configuration store so this path matches what I put in that",
    "start": "2798720",
    "end": "2804780"
  },
  {
    "text": "kubernetes manifest it's gonna find files in this directory and it's going to map the contents of each of those",
    "start": "2804780",
    "end": "2809940"
  },
  {
    "text": "files in as a configuration value so it's going to take the file name as the key and the value that's in the file as",
    "start": "2809940",
    "end": "2816299"
  },
  {
    "text": "the as this as the value this configuration source has got a pretty bad name it should probably just say add",
    "start": "2816299",
    "end": "2822900"
  },
  {
    "text": "kubernetes configuration because this was written specifically for kubernetes is configuration system but but there",
    "start": "2822900",
    "end": "2830309"
  },
  {
    "text": "you go anyway so on the monitoring front on the sort of on the sort of",
    "start": "2830309",
    "end": "2836010"
  },
  {
    "text": "diagnostics and monitoring form front there's a couple things to say about this one of the things to say about this",
    "start": "2836010",
    "end": "2842339"
  },
  {
    "text": "is logging and logging dashboards espy net core has got a what we call a",
    "start": "2842339",
    "end": "2847770"
  },
  {
    "text": "structured logging system where we log not only a textual message but we also log key value pairs when you're running",
    "start": "2847770",
    "end": "2854849"
  },
  {
    "text": "in these cloud sort of environments what the standard thing to do is to use like a JSON formatted logger you can use",
    "start": "2854849",
    "end": "2860579"
  },
  {
    "text": "Sarah log for this which is really good I don't have that set up here and I'm not going to show a logging dashboard as",
    "start": "2860579",
    "end": "2865740"
  },
  {
    "text": "part of this demo but the information is out there that's available if you want it one of the really cool things that you can do with that which damien and",
    "start": "2865740",
    "end": "2872339"
  },
  {
    "text": "David showed and their Diagnostics talk is you can take those trace IDs from Zipkin you can go to your logging",
    "start": "2872339",
    "end": "2877470"
  },
  {
    "text": "dashboard and you can put that into a query and then you can see all the logs from all the services that executed on",
    "start": "2877470",
    "end": "2883170"
  },
  {
    "text": "that trace these kinds these are the kinds of things that you'll find pretty essential when you're debugging and building applications like this is you",
    "start": "2883170",
    "end": "2889529"
  },
  {
    "text": "want to set yourself up for success with easy ways to see all the Diagnostics across all your different apps",
    "start": "2889529",
    "end": "2895319"
  },
  {
    "text": "I did mention Zipkin already which is I'm hooking up Zipkin here via the open telemetry package the other piece of",
    "start": "2895319",
    "end": "2901650"
  },
  {
    "text": "magic that I have got here is I'm tracking metrics from these applications so I'm using a package called Prometheus",
    "start": "2901650",
    "end": "2909390"
  },
  {
    "text": "net which is a lovely community package that someone has made and I've got this middleware here that's that's tracking",
    "start": "2909390",
    "end": "2916170"
  },
  {
    "text": "HTTP metrics this sits in between routing and endpoints and the reason why it sits in between routing and endpoints",
    "start": "2916170",
    "end": "2922619"
  },
  {
    "text": "is it's going to capture the results of routing so it's going to look at what routing decisions were made and it's",
    "start": "2922619",
    "end": "2928049"
  },
  {
    "text": "going to incorporate that data into the telemetry kind of information that it locks and then this endpoint",
    "start": "2928049",
    "end": "2933740"
  },
  {
    "text": "down here is going to expose an endpoint on the slash metrics URL so one of the things that I've done with all of these",
    "start": "2933740",
    "end": "2940670"
  },
  {
    "start": "2937000",
    "end": "3032000"
  },
  {
    "text": "services that you might want to think about is I've configured for all of these apps I'm basically listening on",
    "start": "2940670",
    "end": "2947240"
  },
  {
    "text": "both 80 and 8080 and the reason why I'm doing that is I'm directing all of my",
    "start": "2947240",
    "end": "2952280"
  },
  {
    "text": "Diagnostics related tracing and all of my Diagnostics related traffic to 8080 the reason why I might care about that",
    "start": "2952280",
    "end": "2959690"
  },
  {
    "text": "is that things like metrics monitoring systems and health monitoring systems typically don't play super well with",
    "start": "2959690",
    "end": "2967190"
  },
  {
    "text": "your your various different kinds of authentication they may not play well with HTTP - they may not always play",
    "start": "2967190",
    "end": "2972440"
  },
  {
    "text": "well with TLS depending on what the system is and it's nice to be able to",
    "start": "2972440",
    "end": "2977450"
  },
  {
    "text": "separate your applications like production traffic from your Diagnostics only traffic one of the new features",
    "start": "2977450",
    "end": "2983599"
  },
  {
    "text": "that we added in routing in 3.0 that I'm pretty happy with is you have the ability to filter on endpoints filter",
    "start": "2983599",
    "end": "2991190"
  },
  {
    "text": "endpoints on port or filter endpoints on hostname and things like that so one of the things you might think about as you're building applications is like",
    "start": "2991190",
    "end": "2997310"
  },
  {
    "text": "well should we listen on a separate port for our Diagnostics traffic and should we filter that port out so that those",
    "start": "2997310",
    "end": "3003069"
  },
  {
    "text": "things are not accessible over a normal over a normal sort of connection to our public endpoint so like in this case if",
    "start": "3003069",
    "end": "3010030"
  },
  {
    "text": "I wanted to for this metrics endpoint for this health checks endpoint like I could require some type of authorization",
    "start": "3010030",
    "end": "3015760"
  },
  {
    "text": "if I wanted to I could filter by host I could implement various other policies that sort of filter what traffic can go",
    "start": "3015760",
    "end": "3022900"
  },
  {
    "text": "where in my application the routing system is extensible to do all those things and you'll find a couple of them",
    "start": "3022900",
    "end": "3028240"
  },
  {
    "text": "built-in by default so the reason why I have these metrics endpoints exposed is I'm using something called Prometheus in",
    "start": "3028240",
    "end": "3034300"
  },
  {
    "start": "3032000",
    "end": "3167000"
  },
  {
    "text": "this cluster what I'm showing you right here is Griffin ax which is a which is a",
    "start": "3034300",
    "end": "3039670"
  },
  {
    "text": "popular metrics sort of visualization tool for Prometheus and the way that",
    "start": "3039670",
    "end": "3044740"
  },
  {
    "text": "this sort of work speaks to the power and the flexibility of kubernetes there's a there's a demon or a sort of",
    "start": "3044740",
    "end": "3051099"
  },
  {
    "text": "worker running in my cluster or a set of workers running in my cluster that are going to go to all my services and hit",
    "start": "3051099",
    "end": "3056530"
  },
  {
    "text": "that metrics endpoint at intervals I think it does like every 30 seconds by default and it's going to basically ask",
    "start": "3056530",
    "end": "3061630"
  },
  {
    "text": "that and point what data do you have that you want to share with me that I will then take in use there's also a bunch of",
    "start": "3061630",
    "end": "3068269"
  },
  {
    "text": "metrics gathering information that you get from kubernetes by default when you install something like Prometheus in it",
    "start": "3068269",
    "end": "3073549"
  },
  {
    "text": "so like I've thrown Prometheus on this cluster and I can see here for the blazing pizza namespace where my app is",
    "start": "3073549",
    "end": "3079910"
  },
  {
    "text": "deployed what's the CPU usage of an in a stack chart format of all the different apps that are running here and you can see",
    "start": "3079910",
    "end": "3086509"
  },
  {
    "text": "that there's a little bump in activity when we were actually using my app from a couple minutes ago",
    "start": "3086509",
    "end": "3091759"
  },
  {
    "text": "about you know at about 10:45 when I really got into demoing stuff and then after that it's been pretty quiet",
    "start": "3091759",
    "end": "3097219"
  },
  {
    "text": "because we're just sitting here it's a little early for pizza likewise you can look at things like CPU requests and",
    "start": "3097219",
    "end": "3103549"
  },
  {
    "text": "quotas if I had assigned requests and quotas which I'll explain in a minute to my apps how am i doing against those",
    "start": "3103549",
    "end": "3110239"
  },
  {
    "text": "quotas am I using all the resources that I allocated for these pods or am I not likewise you get things like memory",
    "start": "3110239",
    "end": "3116660"
  },
  {
    "text": "usage and network traffic and things like that and you can get a lot of this stuff for free without even doing",
    "start": "3116660",
    "end": "3121729"
  },
  {
    "text": "anything to your apps because when you install prometheus in a cluster you're gonna get a lot of these things for free",
    "start": "3121729",
    "end": "3127279"
  },
  {
    "text": "now the major cloud providers all have similar kind of offerings for this I know asher's is called Azure monitor",
    "start": "3127279",
    "end": "3133309"
  },
  {
    "text": "other crowd providers have similar offerings to this I'm showing Prometheus today instead of showing like Azure",
    "start": "3133309",
    "end": "3139339"
  },
  {
    "text": "monitor a to avoid leaking any of my a jerk retentions to you and B to give a",
    "start": "3139339",
    "end": "3145699"
  },
  {
    "text": "sort of cloud provider neutral view of what's possible the kubernetes and Griffin o stuff is really probably Best",
    "start": "3145699",
    "end": "3152059"
  },
  {
    "text": "of Breed all the cloud providers have something similar but that might not might not be as powerful but it also",
    "start": "3152059",
    "end": "3158390"
  },
  {
    "text": "might be set up for you a little bit easier out of the box since it's just gonna come with your kubernetes instance",
    "start": "3158390",
    "end": "3163880"
  },
  {
    "text": "the other thing that I've done here that I want to show you is I have written my",
    "start": "3163880",
    "end": "3169309"
  },
  {
    "start": "3167000",
    "end": "3267000"
  },
  {
    "text": "own dashboard using the metrics that are exposed by my apps and these are coming from that metrics endpoint that I",
    "start": "3169309",
    "end": "3175369"
  },
  {
    "text": "exposed in my apps now I'm a total Prometheus has its own like graphing and query language that's fairly complex and",
    "start": "3175369",
    "end": "3181789"
  },
  {
    "text": "I'm a total newbie at this I'm actually proud of what I was able to accomplish I've got a little graph here that shows",
    "start": "3181789",
    "end": "3187849"
  },
  {
    "text": "the requests the number of requests coming into the app as well as the number of failed requests coming",
    "start": "3187849",
    "end": "3192960"
  },
  {
    "text": "the app so I can I can pick in this picker which of my apps is running and",
    "start": "3192960",
    "end": "3199080"
  },
  {
    "text": "how many how many requests are coming in within a given period of time and how many of those were failures are non 200s",
    "start": "3199080",
    "end": "3205560"
  },
  {
    "text": "within that same period of time the reason why there's some baseline level of traffic to all these apps despite the",
    "start": "3205560",
    "end": "3211320"
  },
  {
    "text": "fact that we're not actually using them for anything is because I've got those health checks running so kubernetes is poking all my apps being like hey you",
    "start": "3211320",
    "end": "3218220"
  },
  {
    "text": "all right you all right you all right the other thing I want to mention about this is that this is data driven so like",
    "start": "3218220",
    "end": "3223380"
  },
  {
    "text": "I didn't actually have to write down anywhere what are the names of all the apps that you want to that you want to",
    "start": "3223380",
    "end": "3229140"
  },
  {
    "text": "monitor and I also didn't have to write down what are the names of all the apps that you want it to show up in the",
    "start": "3229140",
    "end": "3234300"
  },
  {
    "text": "monitoring dashboard as options so hopefully this gives you an idea of some of the kinds of things that you get you",
    "start": "3234300",
    "end": "3240900"
  },
  {
    "text": "can get for performance monitoring and for troubleshooting and for examining and diagnosing problems I think that the",
    "start": "3240900",
    "end": "3247050"
  },
  {
    "text": "kinds of performance oriented things that Prometheus can show you and other cloud-based solutions can show you",
    "start": "3247050",
    "end": "3252930"
  },
  {
    "text": "probably more advanced than what most of us use on a day to day basis and there's really a lot of mileage to get out of",
    "start": "3252930",
    "end": "3259290"
  },
  {
    "text": "these kinds of systems without spending a lot of time setting them up so with",
    "start": "3259290",
    "end": "3267300"
  },
  {
    "start": "3267000",
    "end": "3600000"
  },
  {
    "text": "that I alluded to earlier something called something called requests and",
    "start": "3267300",
    "end": "3272580"
  },
  {
    "text": "limits for containers so part of kubernetes is the is the fact that",
    "start": "3272580",
    "end": "3278609"
  },
  {
    "text": "kubernetes decides where your apps run right so when I said I want to have three copies of this app I didn't have",
    "start": "3278609",
    "end": "3283980"
  },
  {
    "text": "to say I want one on each machine or anything like that kubernetes actually allocates your apps where it thinks is best you have some",
    "start": "3283980",
    "end": "3290910"
  },
  {
    "text": "ways to influence that in some ways to control it but one of the rules that matters the most is you can tell",
    "start": "3290910",
    "end": "3297210"
  },
  {
    "text": "kubernetes how much resources a given app wants and it will put it where it thinks is best or put it where it thinks",
    "start": "3297210",
    "end": "3303030"
  },
  {
    "text": "it can accommodate your expectations for amount of resources for that app which",
    "start": "3303030",
    "end": "3308280"
  },
  {
    "text": "is pretty cool but I think as well as Donette developers were like a little bit in the dark about this like what",
    "start": "3308280",
    "end": "3313920"
  },
  {
    "text": "what does it even mean to figure out what kind of resources your app will need like how would you even go if you",
    "start": "3313920",
    "end": "3319859"
  },
  {
    "text": "if you if I told you you know you're gonna start using kubernetes and you're gonna start needing to understand the",
    "start": "3319859",
    "end": "3325260"
  },
  {
    "text": "resource requirements of your apps where would you start today and the answer is I think a lot of us",
    "start": "3325260",
    "end": "3330720"
  },
  {
    "text": "would like draw a big blank like how would I even figure that out so I've done an experiment I wanted to",
    "start": "3330720",
    "end": "3336810"
  },
  {
    "text": "basically do some of my own performance testing around this we we know that asp net core and donna core can perform",
    "start": "3336810",
    "end": "3343140"
  },
  {
    "text": "really well when we're talking about high throughput with lots of lots of traffic and access to lots of hardware",
    "start": "3343140",
    "end": "3348660"
  },
  {
    "text": "see the tech and power benchmarks if you don't know what I'm talking about we've got industry-leading performance",
    "start": "3348660",
    "end": "3354359"
  },
  {
    "text": "for HTTP in terms of frameworks and tools and technologies you'd actually want to use but how do we do when you're",
    "start": "3354359",
    "end": "3361680"
  },
  {
    "text": "thinking about things that have to scale down really small like how do we do when you've got a really small amount of",
    "start": "3361680",
    "end": "3367800"
  },
  {
    "text": "resources this comes up a lot when you've got like I've got a bunch of apps that I need to run they're separate",
    "start": "3367800",
    "end": "3373589"
  },
  {
    "text": "because that's the way I wanted to architect it but some of these are really low traffic like I don't need to send a lot of data from them I don't",
    "start": "3373589",
    "end": "3379500"
  },
  {
    "text": "need to receive a lot of data from them how would they do with low resources or if you want to write the kind of",
    "start": "3379500",
    "end": "3385890"
  },
  {
    "text": "structure that runs in kubernetes some of the things that kubernetes provides you that run inside the run inside the",
    "start": "3385890",
    "end": "3391440"
  },
  {
    "text": "cluster itself are allocated like 50 Meg's of memory and like 1/10 of a CPU core so let's take a look at that this",
    "start": "3391440",
    "end": "3398970"
  },
  {
    "text": "is what it looks like by the way I'm going to speed up a little bit because we're almost out of time here this is what it looks like to actually define",
    "start": "3398970",
    "end": "3404700"
  },
  {
    "text": "requests and limits for one of your containers or one of your pods this is something you will have to do if you",
    "start": "3404700",
    "end": "3410160"
  },
  {
    "text": "want to use auto scaling so kubernetes has the ability to do auto scaling based on load you can't do that unless you",
    "start": "3410160",
    "end": "3416490"
  },
  {
    "text": "define what what you think normal looks like for an application the experiment",
    "start": "3416490",
    "end": "3422310"
  },
  {
    "text": "that I did is I wrote the same app in a bunch of different text acts so go Python Java at the kinds of things that",
    "start": "3422310",
    "end": "3429690"
  },
  {
    "text": "people think about writing cloud and micro services types of applications and I measured those with fixed amounts of",
    "start": "3429690",
    "end": "3434849"
  },
  {
    "text": "requests per second and I varied the amount of CPU and memory allocated to them using docker so our test",
    "start": "3434849",
    "end": "3440820"
  },
  {
    "text": "environment has the ability to run docker we have a pretty robust benchmarking setup in the office and I'm",
    "start": "3440820",
    "end": "3446010"
  },
  {
    "text": "able to simulate a kubernetes kind of environment by just using docker and then I'm measuring latency working set",
    "start": "3446010",
    "end": "3451740"
  },
  {
    "text": "CPU usage and the percentage of traffic actually served the reason why that last one is there is if I asked for 100",
    "start": "3451740",
    "end": "3457740"
  },
  {
    "text": "requests per second and gave me 50 like 50% is enough like you fail right so we want to know how what",
    "start": "3457740",
    "end": "3464510"
  },
  {
    "text": "percentage of the traffic they were expected to serve that they actually served and the intent here is to simulate what it's like for a small",
    "start": "3464510",
    "end": "3471170"
  },
  {
    "text": "microservices app getting a predictable amount of traffic so the experiment has you have incoming HTTP incoming JSON",
    "start": "3471170",
    "end": "3477740"
  },
  {
    "text": "serialization outgoing HTTP outgoing JSON serialization and most importantly",
    "start": "3477740",
    "end": "3483650"
  },
  {
    "text": "calling some other service that has some amount of delay so if it were instantaneous it's kind of artificial",
    "start": "3483650",
    "end": "3489020"
  },
  {
    "text": "what are our micro-services apps do well we looked at that in Zipkin right they call other services so I wanted to",
    "start": "3489020",
    "end": "3494810"
  },
  {
    "text": "include calling another service as part of this I wanted to see how a spinet",
    "start": "3494810",
    "end": "3499820"
  },
  {
    "text": "core would stack up here for that reason I'm kind of redacting the names of the other tech stacks here if you're really",
    "start": "3499820",
    "end": "3505400"
  },
  {
    "text": "curious to know the results come and talk to me afterwards and I'll talk to you if you promise to be mature about it I did not want to get on stage and give",
    "start": "3505400",
    "end": "3512990"
  },
  {
    "text": "a presentation where I talk down to Java users or NGO users or anyone else like that because that's just that's not very nice",
    "start": "3512990",
    "end": "3518990"
  },
  {
    "text": "I wouldn't like that if somebody did it about.net also not every technology claims to be good at what I'm doing so",
    "start": "3518990",
    "end": "3525350"
  },
  {
    "text": "is it a little bit unfair to throw some of the Java frameworks into this kind of testing maybe I think the people that",
    "start": "3525350",
    "end": "3532820"
  },
  {
    "text": "make those frameworks might say you wouldn't be successful with this and it'd be unfair to call them out for something that they say won't work so",
    "start": "3532820",
    "end": "3540080"
  },
  {
    "text": "let me unpack what you're looking at here so we've got our sort of combinations across the bottom there's",
    "start": "3540080",
    "end": "3546350"
  },
  {
    "text": "30 Meg's times a quarter of a CPU on the small end 360 Meg's of memory and a full CPU on the right end something that very",
    "start": "3546350",
    "end": "3553700"
  },
  {
    "text": "smart people get confused about when they see this and you're even smarter so you won't get confused one CPU does not",
    "start": "3553700",
    "end": "3560210"
  },
  {
    "text": "mean one core it means one unit of CPU so it's not one CPU does not mean your",
    "start": "3560210",
    "end": "3566930"
  },
  {
    "text": "single-threaded it means that if the machine has 12 cores you get 1/12 of the machine if that",
    "start": "3566930",
    "end": "3573050"
  },
  {
    "text": "makes sense you can run things in parallel with one CPU because it does not mean one core it means in my 12 core",
    "start": "3573050",
    "end": "3579620"
  },
  {
    "text": "CPU case 1/12 of the machine's processing power aggregated over time and you'll see that on the small end so",
    "start": "3579620",
    "end": "3586190"
  },
  {
    "text": "talking about this data you'll see that on the small end there's some things that don't appear so this this yellow",
    "start": "3586190",
    "end": "3591800"
  },
  {
    "text": "bar this great and the sort of brownish bar don't run they don't serve one RPS at the smallest",
    "start": "3591800",
    "end": "3597829"
  },
  {
    "text": "amount of resources that I tested but a lot of them do right and it's only when",
    "start": "3597829",
    "end": "3603170"
  },
  {
    "text": "we get into the like point five CPU times a hundred megabyte category that",
    "start": "3603170",
    "end": "3608569"
  },
  {
    "text": "stuff show up that ever all the workloads show up as working one of them's got really high latency I'm using",
    "start": "3608569",
    "end": "3614690"
  },
  {
    "text": "latency in these charts as sort of a measure of Health ten milliseconds is the theoretical minimum for latency in",
    "start": "3614690",
    "end": "3620599"
  },
  {
    "text": "this test so if you're around 10 milliseconds you're healthy if you're much higher than that you're not keeping",
    "start": "3620599",
    "end": "3625730"
  },
  {
    "text": "up likewise let's bump it up to 100 and",
    "start": "3625730",
    "end": "3631130"
  },
  {
    "text": "we can see that some people some of these stacks start to struggle we can see that whoever is in green is starting",
    "start": "3631130",
    "end": "3636920"
  },
  {
    "text": "to have a hard time at 100 whoever's in gray is having a little bit of trouble at the smallest amount of numbers and",
    "start": "3636920",
    "end": "3643190"
  },
  {
    "text": "doing well at higher numbers cool let's bump it up to a thousand whoa you can",
    "start": "3643190",
    "end": "3649039"
  },
  {
    "text": "see that a lot of stuff dropped out right so a lot of our stacks dropped out a lot of them are not able to do it at",
    "start": "3649039",
    "end": "3655309"
  },
  {
    "text": "the smallest amount of requests let's bump it up to 10,000 ooh so we've reached a limit here we're at",
    "start": "3655309",
    "end": "3662240"
  },
  {
    "text": "the small at these very small configurations not everybody is able to serve 10,000 requests per second which",
    "start": "3662240",
    "end": "3667490"
  },
  {
    "text": "is kind of a high number for really small amount of resources but some of them are able to do it with more of the resources that we've allocated so think",
    "start": "3667490",
    "end": "3675380"
  },
  {
    "text": "about this 100 millisecond of this hundred RPS or thousand RPS slide and think about which ones of these you",
    "start": "3675380",
    "end": "3681680"
  },
  {
    "text": "think are dotnet quarks I'm about to reveal to you so this is the thousand",
    "start": "3681680",
    "end": "3687230"
  },
  {
    "text": "RPS slide blue is Donna core with asp net MVC controllers pink is Donna core",
    "start": "3687230",
    "end": "3694549"
  },
  {
    "text": "using routing and Jason and HTTP client without MVC so if we look back at these",
    "start": "3694549",
    "end": "3699980"
  },
  {
    "text": "slides and sort of analyze this like we're doing really well in all of these configurations at one request per second",
    "start": "3699980",
    "end": "3706609"
  },
  {
    "text": "we're doing really well in all these configurations at 100 requests per second so if if you had asked me before",
    "start": "3706609",
    "end": "3712880"
  },
  {
    "text": "I did this kind of testing can I write an asp net core app that's gonna run and run well with 30 megabytes of memory and",
    "start": "3712880",
    "end": "3719630"
  },
  {
    "text": "a quarter of CPU time I would have told you no I was really surprised by that",
    "start": "3719630",
    "end": "3724829"
  },
  {
    "text": "so it's doing pretty well it's not all good news I think some of the bad news",
    "start": "3724829",
    "end": "3730469"
  },
  {
    "text": "here is well these benchmarks were written by a framework architect and they were written kind of carefully so",
    "start": "3730469",
    "end": "3736019"
  },
  {
    "text": "like it's clear that MBC is not a great fit for all these kinds of scenarios you",
    "start": "3736019",
    "end": "3741630"
  },
  {
    "text": "can't take an MVC app and give it 30 megabytes of memory and scale it up to crazy amounts I think we want to work on",
    "start": "3741630",
    "end": "3747150"
  },
  {
    "text": "closing that gap but if you have scenarios like this where you want to write a really small app that does a lot",
    "start": "3747150",
    "end": "3752789"
  },
  {
    "text": "of stuff think about dropping the level of abstraction think about going to lower level concepts to get more",
    "start": "3752789",
    "end": "3757920"
  },
  {
    "text": "performance out I'm going to speed through a couple other things because we are over time so this is a heat map this",
    "start": "3757920",
    "end": "3764640"
  },
  {
    "text": "show is basically success so think about more resources as you go from left to right",
    "start": "3764640",
    "end": "3770069"
  },
  {
    "text": "more RPS as you go from top to bottom green means good red means bad this top",
    "start": "3770069",
    "end": "3775920"
  },
  {
    "text": "left one and bottom center one are the two asp net ones so router code is the",
    "start": "3775920",
    "end": "3781200"
  },
  {
    "text": "bottom middle one so again it is actually surprisingly good you've got a",
    "start": "3781200",
    "end": "3787319"
  },
  {
    "text": "lot of options and you've got a lot of flexibility if you're in one of these scenarios where you really want to run with density this is what I'm talking",
    "start": "3787319",
    "end": "3794430"
  },
  {
    "text": "about with route to code using routing and a low level of abstraction we're gonna make a bunch of improvements to",
    "start": "3794430",
    "end": "3799469"
  },
  {
    "text": "this in 5.0 doing this sort of thing is going to be a lot simpler we're taking the JSON stuff making the performant",
    "start": "3799469",
    "end": "3805920"
  },
  {
    "text": "thing be the easiest thing to find alright and that's the end thank you all",
    "start": "3805920",
    "end": "3811380"
  },
  {
    "text": "for being good audience enjoy the rest of the day [Applause]",
    "start": "3811380",
    "end": "3818629"
  }
]