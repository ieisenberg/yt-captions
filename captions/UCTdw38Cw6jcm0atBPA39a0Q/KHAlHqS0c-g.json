[
  {
    "text": "good morning everyone all good night evening depending on where you are in the world today we're going to talk about",
    "start": "9440",
    "end": "15519"
  },
  {
    "text": "front-end security and why we should care about it my name is clever my name is liver",
    "start": "15519",
    "end": "20880"
  },
  {
    "text": "bitsky and i'm a partner at webster team sro it's a web development agency focused uh on javascript and",
    "start": "20880",
    "end": "28080"
  },
  {
    "text": "dotnet consulting uh we are doing development technology as react.net core",
    "start": "28080",
    "end": "33120"
  },
  {
    "text": "i've been working in software development industry for more than 50 years mostly in finance and ecommerce sectors",
    "start": "33120",
    "end": "39600"
  },
  {
    "text": "uh after the congress after the presentation feel free to contact me on twitter if you have any",
    "start": "39600",
    "end": "45280"
  },
  {
    "text": "questions about presentations or in general so let's start today we have four major",
    "start": "45280",
    "end": "52480"
  },
  {
    "text": "topics uh first uh first of all i will provide you a brief overview of the state of application security today",
    "start": "52480",
    "end": "59120"
  },
  {
    "text": "and how it looks like then i hope to ruin the myths about static",
    "start": "59120",
    "end": "65119"
  },
  {
    "text": "websites and that are completely bulletproof from hacking",
    "start": "65119",
    "end": "70720"
  },
  {
    "text": "after that i will show you some bad guys techniques and tools and how they can abuse your",
    "start": "70720",
    "end": "76560"
  },
  {
    "text": "site and at the end i will discuss the techniques on how we as developers can",
    "start": "76560",
    "end": "81759"
  },
  {
    "text": "protect our apps and sites from being hacked",
    "start": "81759",
    "end": "87840"
  },
  {
    "text": "okay akamai is one of the top cdn providers but they also provide some really useful",
    "start": "88240",
    "end": "94880"
  },
  {
    "text": "products like web application firewalls on the following slides you can see the total attacks per day",
    "start": "94880",
    "end": "101280"
  },
  {
    "text": "blocked by akamai web uh the application firewall and see like the numbers are not great",
    "start": "101280",
    "end": "108479"
  },
  {
    "text": "right on the next slide you can see uh the",
    "start": "108479",
    "end": "114560"
  },
  {
    "text": "attack types distribution according to akamai wolf and as you can see the cross-section",
    "start": "114560",
    "end": "121040"
  },
  {
    "text": "scripting attack is on the third place now and surprisingly i've been going through",
    "start": "121040",
    "end": "127840"
  },
  {
    "text": "it for a while and it was like that for quite a long time",
    "start": "127840",
    "end": "132640"
  },
  {
    "text": "and those akamai data is correlated with the latest overspoken list as you can see in this slide",
    "start": "134160",
    "end": "141599"
  },
  {
    "text": "the what's top 10 is a standard awareness document for developers and application experts and it represents uh",
    "start": "141599",
    "end": "149040"
  },
  {
    "text": "broad consensus about the most critical vulnerabilities and the applications",
    "start": "149040",
    "end": "154480"
  },
  {
    "text": "the last document is from uh 2017 and new document is coming and my good feeling says that it's gonna",
    "start": "154480",
    "end": "162640"
  },
  {
    "text": "be almost the same unfortunately and of course again it's related with uh",
    "start": "162640",
    "end": "171040"
  },
  {
    "text": "akamai uh our vulnerabilities number one is injections and uh it has always",
    "start": "171040",
    "end": "178959"
  },
  {
    "text": "injections because there are so many ways how you can inject the bad code to apps and",
    "start": "178959",
    "end": "186959"
  },
  {
    "text": "xss is somewhere in the middle and again i feel like in the next the next",
    "start": "186959",
    "end": "194159"
  },
  {
    "text": "list it's going to be a lot higher",
    "start": "194159",
    "end": "199840"
  },
  {
    "text": "let's recall how we can build how we build sites in the past we used plain html isp php",
    "start": "201760",
    "end": "208799"
  },
  {
    "text": "and wrote everything from scratch then wordpress came to life and many sites became like",
    "start": "208799",
    "end": "214720"
  },
  {
    "text": "i call them plugin monsters uh they're full of set body uh plugins",
    "start": "214720",
    "end": "220080"
  },
  {
    "text": "and components and like even though like simple things like show for the gallery",
    "start": "220080",
    "end": "226159"
  },
  {
    "text": "and no doubt the sites were really slow then javascript traced and we've got",
    "start": "226159",
    "end": "231200"
  },
  {
    "text": "angular react view and the browser finally agree of on implementation of",
    "start": "231200",
    "end": "236480"
  },
  {
    "text": "w3c standards and how did we build a simple site today",
    "start": "236480",
    "end": "243120"
  },
  {
    "text": "uh as a react developer myself i would use a static site generator by gatsby",
    "start": "243120",
    "end": "248560"
  },
  {
    "text": "and then battle my react single page application into multiple html pages",
    "start": "248560",
    "end": "254480"
  },
  {
    "text": "they can simply copy the server or to aws s3 and host the website and it's going to",
    "start": "254480",
    "end": "261759"
  },
  {
    "text": "be really fast of course i need some back end and for example i have a contact form",
    "start": "261759",
    "end": "268560"
  },
  {
    "text": "and i want to send an email it's not a problem nowadays since there are dozens of uh",
    "start": "268560",
    "end": "274720"
  },
  {
    "text": "sas products that you can provide me api to like let's say manage emails",
    "start": "274720",
    "end": "283120"
  },
  {
    "text": "and it's secure by default right because we have html css javascript nothing more",
    "start": "283120",
    "end": "288720"
  },
  {
    "text": "and no one can really hack me do you think like i sure",
    "start": "288720",
    "end": "297840"
  },
  {
    "text": "let's move back to the 2005 when myspace still was popular",
    "start": "298880",
    "end": "305280"
  },
  {
    "text": "does anyone remember sammy or space here attack samy was a process scripting worm that",
    "start": "305280",
    "end": "312160"
  },
  {
    "text": "is uh that was designed to propagate through myspace social network and it was built",
    "start": "312160",
    "end": "317199"
  },
  {
    "text": "by sami kamkar within just 20 hours in october in the fourth october 2005",
    "start": "317199",
    "end": "325919"
  },
  {
    "text": "uh over a million users were users was infected uh by the sphere by",
    "start": "325919",
    "end": "332320"
  },
  {
    "text": "this virus and was one of the most widespread viruses at the time",
    "start": "332320",
    "end": "338000"
  },
  {
    "text": "and the interesting fact is the worm itself is not exploited my space",
    "start": "338000",
    "end": "344320"
  },
  {
    "text": "and actually after security audit people found out that my space was quite secure the problem was in the way",
    "start": "344320",
    "end": "351360"
  },
  {
    "text": "how browsers execute javascript when the uh when they should not do that and the",
    "start": "351360",
    "end": "356560"
  },
  {
    "text": "problem erased in browsers like internet explorer and safari on mac",
    "start": "356560",
    "end": "363440"
  },
  {
    "text": "and see like the virus itself is quite simple",
    "start": "364000",
    "end": "368720"
  },
  {
    "text": "so let's move on and let's go back to nowadays uh i have a few examples of exercise",
    "start": "370479",
    "end": "376479"
  },
  {
    "text": "attacks that's like relates with fresh",
    "start": "376479",
    "end": "381600"
  },
  {
    "text": "service desk desk plus is a popular solution across enterprises and the critical exercise vulnerability",
    "start": "381600",
    "end": "388160"
  },
  {
    "text": "was found that can give attackers full access to id support system",
    "start": "388160",
    "end": "394560"
  },
  {
    "text": "uh tinymc uh popular html editor uh has xss and you can imagine how many",
    "start": "394560",
    "end": "401120"
  },
  {
    "text": "uh c methods uh can be affected especially like tiny msc is one of the most popular editors",
    "start": "401120",
    "end": "408400"
  },
  {
    "text": "in the cmss",
    "start": "408400",
    "end": "411680"
  },
  {
    "text": "and i have like a very similar back but now now it's in wordpress so",
    "start": "413840",
    "end": "421680"
  },
  {
    "text": "the issue in wordpress plugin affected 700 thousand websites and see if you have a botnet of like",
    "start": "421680",
    "end": "428479"
  },
  {
    "text": "those numbers of servers that's a that's not bad",
    "start": "428479",
    "end": "434000"
  },
  {
    "text": "jenkins that is probably the most popular cicd tool reported more than 20 vulnerabilities in",
    "start": "434639",
    "end": "440000"
  },
  {
    "text": "their plugins and most of them are exercise generations is used in many",
    "start": "440000",
    "end": "445120"
  },
  {
    "text": "enterprises as a main build platform and you can imagine how bad it could be if that",
    "start": "445120",
    "end": "453440"
  },
  {
    "text": "and finally xss is number one attack in 2019 according to cuk magazine",
    "start": "455039",
    "end": "463759"
  },
  {
    "text": "basically the data they say uh that nearly 40 of all attacks logged by",
    "start": "463759",
    "end": "470080"
  },
  {
    "text": "security researchers last year last year was uh low exercise",
    "start": "470080",
    "end": "479840"
  },
  {
    "text": "okay uh let's move on and take a look to take a look how excess attacks may",
    "start": "480639",
    "end": "486560"
  },
  {
    "text": "affect us and what the some vectors",
    "start": "486560",
    "end": "492720"
  },
  {
    "text": "and what can and what can go wrong really on your static site",
    "start": "492720",
    "end": "498479"
  },
  {
    "text": "one of the most common access attack vectors is hijacking with user accounts by stealing their",
    "start": "500000",
    "end": "507039"
  },
  {
    "text": "session cookies this will allow attackers to impersonate victims and access any sensitive information or",
    "start": "507039",
    "end": "513120"
  },
  {
    "text": "functionality on their behalf let's see how let's see how it can be achieved",
    "start": "513120",
    "end": "518159"
  },
  {
    "text": "the title the attacker will send you a url that has malicious payload uh as",
    "start": "518159",
    "end": "524880"
  },
  {
    "text": "you can see on this uh on the screen and the script just reads your cookies and passes them",
    "start": "524880",
    "end": "530560"
  },
  {
    "text": "to hacker server the following example is a simple server listening on port",
    "start": "530560",
    "end": "535600"
  },
  {
    "text": "8080 and it just prints okay so the console",
    "start": "535600",
    "end": "542000"
  },
  {
    "text": "another practical effect factor for xss is to use html and javascript to steal user credentials instead of cookies",
    "start": "543680",
    "end": "550080"
  },
  {
    "text": "this can be done by cloning the login page of the web application and then using excessive vulnerability",
    "start": "550080",
    "end": "555600"
  },
  {
    "text": "to serve it to the victim the following the following html code simulate uh",
    "start": "555600",
    "end": "562000"
  },
  {
    "text": "lastpass login page uh which you can send uh to that which can uh which can steal the",
    "start": "562000",
    "end": "568959"
  },
  {
    "text": "credentials and send back to attacker server uh the hacker in this example uses b",
    "start": "568959",
    "end": "575600"
  },
  {
    "text": "framework uh beef is um the browser is a browser quotation framework project uh uh this is a server",
    "start": "575600",
    "end": "583360"
  },
  {
    "text": "that um it has a collection of xss exploits that you can uh you like use that to do your attack",
    "start": "583360",
    "end": "592000"
  },
  {
    "text": "and the first step is always uh attackers amateurs url",
    "start": "592000",
    "end": "597760"
  },
  {
    "text": "that injects these scripts to your vulnerability page",
    "start": "597760",
    "end": "602800"
  },
  {
    "text": "after that after victims visited the website",
    "start": "603360",
    "end": "609600"
  },
  {
    "text": "the exploit will show you the login screen from lastpass",
    "start": "609839",
    "end": "615200"
  },
  {
    "text": "and the last step like if you trust your browser you will provide your username and password and you can see them uh",
    "start": "616720",
    "end": "623839"
  },
  {
    "text": "in the plugin panel",
    "start": "623839",
    "end": "627120"
  },
  {
    "text": "another powerful attack vector for xss is to use uh is to use it to steal like personal",
    "start": "629519",
    "end": "637600"
  },
  {
    "text": "information or or some extensive data for example for example like cardholder data",
    "start": "637600",
    "end": "647519"
  },
  {
    "text": "let's say if it's a banking application uh usually you have a form to transfer funds and",
    "start": "647519",
    "end": "652880"
  },
  {
    "text": "it's secured by csr bytes by some tokens against csrf attack that's a like",
    "start": "652880",
    "end": "659519"
  },
  {
    "text": "different attack but uh in this case if hacker connect",
    "start": "659519",
    "end": "664800"
  },
  {
    "text": "has excess exploit then um by using xss he can extract the token",
    "start": "664800",
    "end": "671279"
  },
  {
    "text": "send it back to the server and then submit the form in transfer funds",
    "start": "671279",
    "end": "676959"
  },
  {
    "text": "and that's actually one of the reasons why most of the banks have the second factor when",
    "start": "676959",
    "end": "683279"
  },
  {
    "text": "uh asking if a second factor uh during fun transactions",
    "start": "683279",
    "end": "690640"
  },
  {
    "text": "now let's take a now uh let's take a look without the case we have a simple website which doesn't",
    "start": "692959",
    "end": "698800"
  },
  {
    "text": "have any sensitive information for example it's your company's presentation website with some",
    "start": "698800",
    "end": "703839"
  },
  {
    "text": "marketing data the attacker can use xss to enforce a file download when user is",
    "start": "703839",
    "end": "709120"
  },
  {
    "text": "reaching the page the file could like anything like a virus or trojan hordes",
    "start": "709120",
    "end": "715600"
  },
  {
    "text": "and i don't think the organization will be happy knowing that the current potential customers go to",
    "start": "715600",
    "end": "723519"
  },
  {
    "text": "the website and they interacted and this text represents a significant",
    "start": "723519",
    "end": "730800"
  },
  {
    "text": "risk to the business especially like some reputational risks",
    "start": "730800",
    "end": "735680"
  },
  {
    "text": "so on the slide you can see an example revise the page and you have quite download and if you think that",
    "start": "737040",
    "end": "744560"
  },
  {
    "text": "if it's like energy with companies then you will trust it",
    "start": "744560",
    "end": "748880"
  },
  {
    "text": "let's move on cryptocurrencies uh have taken the world by storm in the past few years making it uh",
    "start": "750000",
    "end": "757200"
  },
  {
    "text": "making it hard to miss all the buzzwords like bitcoin or like blockchain uh while the cryptocurrencies are far",
    "start": "757200",
    "end": "764480"
  },
  {
    "text": "from uh new uh cyber trade similar cyber criminals and hackers but uh the open",
    "start": "764480",
    "end": "771519"
  },
  {
    "text": "new ways of attack and new way of attack monetization",
    "start": "771519",
    "end": "778560"
  },
  {
    "text": "uh for example uh on the screen you can see some javascript cybers that allow you doing mining what attackers are doing",
    "start": "778560",
    "end": "785519"
  },
  {
    "text": "they they find a mix attack on your website and uh plug in some mining bitcoin mining code",
    "start": "785519",
    "end": "792560"
  },
  {
    "text": "and whoever is visiting you whoever is visiting the site start mining cryptocurrencies for",
    "start": "792560",
    "end": "798839"
  },
  {
    "text": "hackers it was quite popular maybe in 2018 and 2019",
    "start": "798839",
    "end": "805440"
  },
  {
    "text": "and now since cryptocurrencies are not i'm not costing so much",
    "start": "805440",
    "end": "812000"
  },
  {
    "text": "we can see you can see the stack last in the real world",
    "start": "812000",
    "end": "817760"
  },
  {
    "text": "uh hackers can also install keyboards on the um on your site to track all users uh interactions and there are many scripts",
    "start": "819839",
    "end": "827040"
  },
  {
    "text": "available on the internet how you can do that and on the screen you see one of them",
    "start": "827040",
    "end": "833360"
  },
  {
    "text": "and this simple key logger is just like logging all key stocks to my server running on",
    "start": "833600",
    "end": "840480"
  },
  {
    "text": "kali linux but this could be anything",
    "start": "840480",
    "end": "845279"
  },
  {
    "text": "xss is also an unexpected source of the initial port scans against internal",
    "start": "850240",
    "end": "856079"
  },
  {
    "text": "networks and again there are multiple exploits on the web",
    "start": "856079",
    "end": "861680"
  },
  {
    "text": "that allow you to do like port scan and they work in the way that",
    "start": "861680",
    "end": "866720"
  },
  {
    "text": "uh you just sending requests to random ports and try to measure the timeout and",
    "start": "866720",
    "end": "874480"
  },
  {
    "text": "if you're not mistaken if your timeout is less than most probably",
    "start": "874480",
    "end": "880240"
  },
  {
    "text": "what is often again uh in beef uh there are exposed",
    "start": "880240",
    "end": "886079"
  },
  {
    "text": "to that so here's the screen how you can set it up for scan uh on b5 admin",
    "start": "886079",
    "end": "893360"
  },
  {
    "text": "and that's how the port scan looks in your browser you will see just a lot of like unusual traffic",
    "start": "893519",
    "end": "900880"
  },
  {
    "text": "and the last but not the least impact is the website defacement it's one of",
    "start": "905760",
    "end": "911920"
  },
  {
    "text": "the simplest and yet effective way for attackers to target business or government institutions and",
    "start": "911920",
    "end": "919760"
  },
  {
    "text": "that's how they're basically changing the uh the visual appearance of the website",
    "start": "919760",
    "end": "924839"
  },
  {
    "text": "and it could like any message and and here you can see an example or",
    "start": "924839",
    "end": "931680"
  },
  {
    "text": "just an example attack that will change the design i would say of my test website",
    "start": "931680",
    "end": "939120"
  },
  {
    "text": "and that's how it looks uh the strange uh strange thing about those type of",
    "start": "939120",
    "end": "945759"
  },
  {
    "text": "attacks is let's say someone clicks on the link and see that your website is replaced",
    "start": "945759",
    "end": "952079"
  },
  {
    "text": "but if the the html script is in the url it will not be",
    "start": "952079",
    "end": "958560"
  },
  {
    "text": "on your server and it will be harder for you to track back what's going on wrong here",
    "start": "958560",
    "end": "968560"
  },
  {
    "text": "and then at the end of the section uh i would like to talk about uh beef really briefly uh",
    "start": "968560",
    "end": "975519"
  },
  {
    "text": "beef is a short for the browser exploitation framework uh it's a pen testing tool that focuses",
    "start": "975519",
    "end": "981519"
  },
  {
    "text": "on the web security uh it's open source and it just makes xss",
    "start": "981519",
    "end": "986560"
  },
  {
    "text": "exploitation easier uh viv comes with more than 100",
    "start": "986560",
    "end": "991759"
  },
  {
    "text": "built modules and exploits and it also has an sdk like javascript sdk so you can",
    "start": "991759",
    "end": "997440"
  },
  {
    "text": "build your own exploits the good news is uh the",
    "start": "997440",
    "end": "1002560"
  },
  {
    "text": "vanilla beta is detected by most of antiviruses so don't expect that hackers will just",
    "start": "1002560",
    "end": "1009199"
  },
  {
    "text": "use those code but the best the bad news are",
    "start": "1009199",
    "end": "1014480"
  },
  {
    "text": "the code could be modified and modified in the way that div still works but it's not detected by antiviruses",
    "start": "1014480",
    "end": "1020560"
  },
  {
    "text": "that's what you usually see in a while",
    "start": "1020560",
    "end": "1025839"
  },
  {
    "text": "okay i hope i was able to answer the question why xss is so dangerous",
    "start": "1027280",
    "end": "1033839"
  },
  {
    "text": "for you and even if you just have a simple landing page let's move forward and talk about how the attackers can",
    "start": "1033919",
    "end": "1040160"
  },
  {
    "text": "exploit your sites there are three types of xss attacks reflect xss stored xss and",
    "start": "1040160",
    "end": "1047678"
  },
  {
    "text": "dom-based xss let's review each of them",
    "start": "1047679",
    "end": "1053840"
  },
  {
    "text": "reflected process scripting arises when an application receives data in an http request and",
    "start": "1055360",
    "end": "1063360"
  },
  {
    "text": "includes that data with an immediate response in the unsafe way suppose a website has",
    "start": "1063360",
    "end": "1069760"
  },
  {
    "text": "a search function that receives user supplies search term in the url and",
    "start": "1069760",
    "end": "1076160"
  },
  {
    "text": "in our case in this example on the screen as a keyword",
    "start": "1076160",
    "end": "1081280"
  },
  {
    "text": "the application has the supply search term in response to the url it's step number",
    "start": "1081280",
    "end": "1087840"
  },
  {
    "text": "two and three if user clicks on the malicious link then script",
    "start": "1087840",
    "end": "1093440"
  },
  {
    "text": "the script will be supplied by attacker displayed by attacker will be executed in big sims browser in the context of",
    "start": "1093440",
    "end": "1100720"
  },
  {
    "text": "the application that's uh step number four and like",
    "start": "1100720",
    "end": "1105760"
  },
  {
    "text": "cookies will be sent the cool the cookies with the stone",
    "start": "1105760",
    "end": "1112880"
  },
  {
    "text": "this is an example of of expected xss attack that just attached your cookies",
    "start": "1115120",
    "end": "1122400"
  },
  {
    "text": "such as such attacks are usually blocked by modern application firewalls",
    "start": "1122400",
    "end": "1129600"
  },
  {
    "text": "but again if this is the case and there are other ways how you can try to penetrate the browser and the",
    "start": "1129600",
    "end": "1136240"
  },
  {
    "text": "firewall the most common way is to use excess",
    "start": "1136240",
    "end": "1142240"
  },
  {
    "text": "threatener because usually you like you see just a short",
    "start": "1142240",
    "end": "1148000"
  },
  {
    "text": "link and definitely evolve you'll see it as an engineer and antivirus will see this",
    "start": "1148000",
    "end": "1154320"
  },
  {
    "text": "link most of the time",
    "start": "1154320",
    "end": "1157440"
  },
  {
    "text": "you can also go with an extreme case just convert your link to uh to",
    "start": "1159679",
    "end": "1166400"
  },
  {
    "text": "a qr code and like print it and just put it inside and you get an",
    "start": "1166400",
    "end": "1172080"
  },
  {
    "text": "university or even like at conference and according to social research you will be surprised how many people will",
    "start": "1172080",
    "end": "1178320"
  },
  {
    "text": "scan it and go to the link",
    "start": "1178320",
    "end": "1181679"
  },
  {
    "text": "the next attack type of attack is stored xss",
    "start": "1184400",
    "end": "1189440"
  },
  {
    "text": "stored excesses happens when an application receives data from an untrusted source and stored to the",
    "start": "1189440",
    "end": "1194480"
  },
  {
    "text": "database or whatever persistence you're using on your website then the data is shown",
    "start": "1194480",
    "end": "1200720"
  },
  {
    "text": "as shown to other users visiting the website on the following screen the attacker is adding comment",
    "start": "1200720",
    "end": "1206080"
  },
  {
    "text": "uh on the page uh the command comes with a malicious payload and the",
    "start": "1206080",
    "end": "1211200"
  },
  {
    "text": "just stealing user cookies that's step number one here then the measures the message",
    "start": "1211200",
    "end": "1218400"
  },
  {
    "text": "stored in the database in step number two and shown to the users who is visiting the website",
    "start": "1218400",
    "end": "1226639"
  },
  {
    "text": "and this attack could be even like more dangerous if there's an admin panel on the side",
    "start": "1228640",
    "end": "1234559"
  },
  {
    "text": "for example you have moderators who can manage the comments if the panel is vulnerable to xss",
    "start": "1234559",
    "end": "1240240"
  },
  {
    "text": "the hacker can steal a privileged account that's it's even worse",
    "start": "1240240",
    "end": "1246240"
  },
  {
    "text": "let's have a look to an example this vulnerable guest book and the attacker can post a message",
    "start": "1247440",
    "end": "1254880"
  },
  {
    "text": "this is a simple script that just shows another saying hey this is your cookie",
    "start": "1254880",
    "end": "1260559"
  },
  {
    "text": "after the post has been published you can see the pop-up and the good news is still uh",
    "start": "1261200",
    "end": "1267280"
  },
  {
    "text": "uh the good news against all the css are mostly identifiable by replication fireballs and",
    "start": "1267280",
    "end": "1275039"
  },
  {
    "text": "uh going through those filters could be a lot more complicated than in the previous example",
    "start": "1275039",
    "end": "1281440"
  },
  {
    "text": "now we can move on to the most dangerous exercise type don't basic success it usually arises",
    "start": "1284240",
    "end": "1290880"
  },
  {
    "text": "when javascript takes the data from an attacker controllable source and use it for to execute for execution for example",
    "start": "1290880",
    "end": "1298400"
  },
  {
    "text": "a client-side redirect within the location object or rendering content on the page",
    "start": "1298400",
    "end": "1305039"
  },
  {
    "text": "using in the html attribute or like using any modern framework",
    "start": "1305039",
    "end": "1311120"
  },
  {
    "text": "first the attacker",
    "start": "1311120",
    "end": "1314000"
  },
  {
    "text": "and the it's dangerous mostly because uh like all interactions is going on",
    "start": "1316799",
    "end": "1323039"
  },
  {
    "text": "on the web server and uh the code is not checked by your web",
    "start": "1323039",
    "end": "1329360"
  },
  {
    "text": "application file also everything is inside your server and you can only hope that your antivirus will uh",
    "start": "1329360",
    "end": "1335440"
  },
  {
    "text": "will see those unusual behavior and somehow alerts you",
    "start": "1335440",
    "end": "1340320"
  },
  {
    "text": "and like this type of attacks with the huge amount of sps is probably",
    "start": "1340880",
    "end": "1347679"
  },
  {
    "text": "it's racing and probably it's going to be like number one x excess vulnerability excesses attack",
    "start": "1347679",
    "end": "1355600"
  },
  {
    "text": "so let's take a look at an example uh the following for uh the following form asks for your name",
    "start": "1358640",
    "end": "1365120"
  },
  {
    "text": "and the hacker can just type just in the field and see the pop-up",
    "start": "1365120",
    "end": "1374559"
  },
  {
    "text": "the application has done basic access vulnerability and you can see the pop-up on the screen and please take a look at",
    "start": "1374559",
    "end": "1380720"
  },
  {
    "text": "the url the application uses a location hash to create client-side url such urls are well accepted by browser",
    "start": "1380720",
    "end": "1388159"
  },
  {
    "text": "and that's how we were doing like client-side redirects and like client-side ur urls",
    "start": "1388159",
    "end": "1395360"
  },
  {
    "text": "in the past and but the thing is everything after hash",
    "start": "1395360",
    "end": "1401280"
  },
  {
    "text": "is the is not passed to the pass to the server such measures urls will never come",
    "start": "1401280",
    "end": "1406880"
  },
  {
    "text": "through and they will not be blocked on the server side",
    "start": "1406880",
    "end": "1412400"
  },
  {
    "text": "this is the application code first we are getting the url from the user",
    "start": "1413919",
    "end": "1419520"
  },
  {
    "text": "and then the developer uses jquery html function to render the message",
    "start": "1419600",
    "end": "1425200"
  },
  {
    "text": "and also the application is system for all hash change event and so vulnerable vulnerable code will",
    "start": "1425760",
    "end": "1431919"
  },
  {
    "text": "be executed whenever your hash is changing in the browser",
    "start": "1431919",
    "end": "1436799"
  },
  {
    "text": "but but html css and javascript are not the only vulnerable assets uh let's take a",
    "start": "1440559",
    "end": "1447120"
  },
  {
    "text": "look at the screenshot you can see there's only svg image and the pop-ups that they're seeing your cookie",
    "start": "1447120",
    "end": "1454960"
  },
  {
    "text": "and it's nothing more than just svg",
    "start": "1454960",
    "end": "1459840"
  },
  {
    "text": "so svg is a graphic format that's based on xml and under the hood svg documents are",
    "start": "1463039",
    "end": "1468240"
  },
  {
    "text": "nothing more than simple plain text files that describe the lines curves shapes colors",
    "start": "1468240",
    "end": "1473840"
  },
  {
    "text": "texts uh it's a human readable format and it's easy to understood if you're",
    "start": "1473840",
    "end": "1480240"
  },
  {
    "text": "using like paths and otherwise just awful like numbers",
    "start": "1480240",
    "end": "1487360"
  },
  {
    "text": "you can also modify via cf with css and javascript and you can even have css",
    "start": "1487360",
    "end": "1492799"
  },
  {
    "text": "javascript inside as you can see in the code it's possible to adjust to backlit svg",
    "start": "1492799",
    "end": "1499600"
  },
  {
    "text": "and the browser will execute it depending on the way your you embed svg so sometimes they",
    "start": "1499600",
    "end": "1506240"
  },
  {
    "text": "will execute sometimes not",
    "start": "1506240",
    "end": "1509360"
  },
  {
    "text": "on this slide you can you can see like when browsers can execute svg and",
    "start": "1511760",
    "end": "1518799"
  },
  {
    "text": "one cannot uh like what i see like most dangerous when you're using a webpack to package our resources",
    "start": "1518799",
    "end": "1526320"
  },
  {
    "text": "uh sometimes or most of the times we get the inline small svg files",
    "start": "1526320",
    "end": "1533200"
  },
  {
    "text": "and that could be a potential risk let's say if someone can",
    "start": "1533200",
    "end": "1538320"
  },
  {
    "text": "uh can send you svgs and then embedded during your webpack build",
    "start": "1538320",
    "end": "1546240"
  },
  {
    "text": "potentially application could be affected so just make sure your source control system is secure",
    "start": "1546240",
    "end": "1554000"
  },
  {
    "text": "let's move on let's move on to the cmss uh modern uh modern cmss don't appreciate",
    "start": "1555279",
    "end": "1562240"
  },
  {
    "text": "if you're writing html by hand usually they provide a markdown editor to create content",
    "start": "1562240",
    "end": "1568000"
  },
  {
    "text": "and and developers are assuming that markdown has a strict set of capabilities and",
    "start": "1568000",
    "end": "1574960"
  },
  {
    "text": "and they assume that markdown will not allow users to inject some strange html",
    "start": "1574960",
    "end": "1582080"
  },
  {
    "text": "and they kind of feel the website is safe unfortunately that's not the case",
    "start": "1582080",
    "end": "1589039"
  },
  {
    "text": "by default background engines allow html rendering for example here on the screen you can",
    "start": "1589039",
    "end": "1595919"
  },
  {
    "text": "see that attacker is adding some militia javascript",
    "start": "1595919",
    "end": "1600559"
  },
  {
    "text": "as a result you can see the pop-up with cookies and whenever you're using a",
    "start": "1601840",
    "end": "1609600"
  },
  {
    "text": "like view like markdown based view engine or it's not a markdown like any view engine",
    "start": "1609600",
    "end": "1615440"
  },
  {
    "text": "please make sure that you configure it to escape html so that should be like your rule number one",
    "start": "1615440",
    "end": "1620799"
  },
  {
    "text": "escape all html",
    "start": "1620799",
    "end": "1627840"
  },
  {
    "text": "you can say that you're building the apps using major front-end framework like react",
    "start": "1629279",
    "end": "1634960"
  },
  {
    "text": "angular and view and the the framework will make your app safer",
    "start": "1634960",
    "end": "1640559"
  },
  {
    "text": "is it correct the answer is yes and no yes modern frameworks are doing a really",
    "start": "1640559",
    "end": "1646080"
  },
  {
    "text": "great job preventing excesses attacks against them and now they have capabilities that allow developers to uh",
    "start": "1646080",
    "end": "1653120"
  },
  {
    "text": "have full control on rendering and on what content can be shown there",
    "start": "1653120",
    "end": "1659360"
  },
  {
    "text": "and they also have and they also have like vulnerabilities inside them",
    "start": "1659360",
    "end": "1664720"
  },
  {
    "text": "on the screen you can see three ways of injecting injecting unsafe html to your to your",
    "start": "1664720",
    "end": "1672399"
  },
  {
    "text": "web pages for all three major frameworks",
    "start": "1672399",
    "end": "1682240"
  },
  {
    "text": "uh it's recommended to avoid using unsafe rendering in any framework but when you do that doesn't mean you're",
    "start": "1682240",
    "end": "1689200"
  },
  {
    "text": "safe unfortunately no and that's our usual answer",
    "start": "1689200",
    "end": "1695360"
  },
  {
    "text": "here on example it's a simple react app that accepts a url and creates a",
    "start": "1695440",
    "end": "1701120"
  },
  {
    "text": "link uh do you see a problem here",
    "start": "1701120",
    "end": "1705919"
  },
  {
    "text": "uh yes attacker can can use javascript url to create a link",
    "start": "1706399",
    "end": "1712559"
  },
  {
    "text": "and when this when this url will be rendered and if user clicks on it",
    "start": "1712559",
    "end": "1719840"
  },
  {
    "text": "like the mesh code will be executed so this is this is my example i'm",
    "start": "1719919",
    "end": "1727200"
  },
  {
    "text": "passing my just a cure and rendering it on the page",
    "start": "1727200",
    "end": "1733120"
  },
  {
    "text": "and booms once you click it you you see a pop-up",
    "start": "1733120",
    "end": "1738880"
  },
  {
    "text": "video with this cookie and of course this this attack factor is",
    "start": "1738880",
    "end": "1744559"
  },
  {
    "text": "applicable for any framework like supersite or client side so please make it like make attention uh",
    "start": "1744559",
    "end": "1752480"
  },
  {
    "text": "whenever you know you're trying to render some urls based on the user input",
    "start": "1752480",
    "end": "1759679"
  },
  {
    "text": "just with url is one of the examples of exercise filter evasion technique uh it is",
    "start": "1763679",
    "end": "1772159"
  },
  {
    "text": "it's recommended to stop a web application firewall behind your application but they won't block hundred percent of",
    "start": "1772159",
    "end": "1778399"
  },
  {
    "text": "the problems wc standard is so big and different browsers",
    "start": "1778399",
    "end": "1783679"
  },
  {
    "text": "implement it in a different way and a lot of legacy code in those browsers",
    "start": "1783679",
    "end": "1789120"
  },
  {
    "text": "all the fact all of those are factors that make exercise filtered evasion",
    "start": "1789120",
    "end": "1795520"
  },
  {
    "text": "technique even possible and that basically complicates your developer's life",
    "start": "1795520",
    "end": "1801919"
  },
  {
    "text": "so hackers can write about payloads like this for this or following this",
    "start": "1801919",
    "end": "1809440"
  },
  {
    "text": "and uh there are like more than 100 different payloads that you can find on html5seg.org",
    "start": "1809440",
    "end": "1816240"
  },
  {
    "text": "website and there are people for different browsers so yeah please take a look",
    "start": "1816240",
    "end": "1822320"
  },
  {
    "text": "and you'll be surprised how bad the station is",
    "start": "1822320",
    "end": "1827360"
  },
  {
    "text": "uh there are there although there are also other accessibility techniques",
    "start": "1828559",
    "end": "1834000"
  },
  {
    "text": "like http protocol supports different characters format and javascript itself could back up to",
    "start": "1834000",
    "end": "1840159"
  },
  {
    "text": "scale in different ways and on the following slide you can see",
    "start": "1840159",
    "end": "1845440"
  },
  {
    "text": "the obscure adjusted code and it just alert document cookie",
    "start": "1845440",
    "end": "1852960"
  },
  {
    "text": "and no one is doing obfuscation by hand uh it's it's too slow and like it's",
    "start": "1853200",
    "end": "1859519"
  },
  {
    "text": "it's really troublesome there are tools like x assessor that will automate encoding for you and make uh",
    "start": "1859519",
    "end": "1865840"
  },
  {
    "text": "obfuscation uh we've just covered success evasion",
    "start": "1865840",
    "end": "1871760"
  },
  {
    "text": "techniques and there is no way an attacker or a pentester will run all these payloads by hand there are",
    "start": "1871760",
    "end": "1879120"
  },
  {
    "text": "tools like x-successor it comes with kali linux to automate it",
    "start": "1879120",
    "end": "1884720"
  },
  {
    "text": "the latest version of x assessor has more than 1 200 predefined exploits and they're",
    "start": "1884720",
    "end": "1891039"
  },
  {
    "text": "really proud of breaking in through uh like popular vaults like mod security",
    "start": "1891039",
    "end": "1896960"
  },
  {
    "text": "or f5 off and it means the developers really have to pay attention on",
    "start": "1896960",
    "end": "1903120"
  },
  {
    "text": "what they're doing and this is not the end of the story uh",
    "start": "1903120",
    "end": "1910799"
  },
  {
    "text": "we're using webster to build mobile and test maps and it uh it may open uh even",
    "start": "1910799",
    "end": "1917279"
  },
  {
    "text": "more critical vulnerabilities like remote code execution let's take a look",
    "start": "1917279",
    "end": "1922640"
  },
  {
    "text": "to electron",
    "start": "1922640",
    "end": "1925279"
  },
  {
    "text": "we have a simple login form here if i type if i type the wrong credential",
    "start": "1927919",
    "end": "1934480"
  },
  {
    "text": "credentials it will generate an error but what will happen if i paste let's",
    "start": "1934480",
    "end": "1941120"
  },
  {
    "text": "say a node.js script to my email field and the payload just runs windows",
    "start": "1941120",
    "end": "1948480"
  },
  {
    "text": "calculator and it looks really strange talking about the",
    "start": "1948480",
    "end": "1954159"
  },
  {
    "text": "javascript form let's move let's move to the code",
    "start": "1954159",
    "end": "1960559"
  },
  {
    "text": "so this is devaluable code and it it has a job-based access",
    "start": "1960960",
    "end": "1968399"
  },
  {
    "text": "vulnerability but why it can run like another process",
    "start": "1968399",
    "end": "1975518"
  },
  {
    "text": "the answer is is an electron framework it has a capability to run node.js code",
    "start": "1975600",
    "end": "1981360"
  },
  {
    "text": "within the browser window",
    "start": "1981360",
    "end": "1984480"
  },
  {
    "text": "and uh like this is like a high like this is like a",
    "start": "1988960",
    "end": "1994640"
  },
  {
    "text": "really high risk if you if you can run like full node.js inside your web page",
    "start": "1994640",
    "end": "1999760"
  },
  {
    "text": "uh there are good news for all of us uh node.js is blocked inside homing window by default and you",
    "start": "1999760",
    "end": "2006720"
  },
  {
    "text": "really have to enable those feature in electron",
    "start": "2006720",
    "end": "2011600"
  },
  {
    "text": "okay what else we can hack uh on this slide you can see that uh javascript is",
    "start": "2014799",
    "end": "2020559"
  },
  {
    "text": "available on mobile on desktop and servers in and even on iot devices so justin is",
    "start": "2020559",
    "end": "2026159"
  },
  {
    "text": "truly everywhere nowadays like like it you don't like it",
    "start": "2026159",
    "end": "2032640"
  },
  {
    "text": "but that's that's the presentation",
    "start": "2032640",
    "end": "2038159"
  },
  {
    "text": "okay uh we've been talking about the bad guys techniques",
    "start": "2042559",
    "end": "2047840"
  },
  {
    "text": "let's close it and let's take a look how we can protect ourselves from being",
    "start": "2048960",
    "end": "2054240"
  },
  {
    "text": "hacked uh uh there are three main rules that",
    "start": "2054240",
    "end": "2063040"
  },
  {
    "text": "will help you to block most excessive vulnerabilities in your application",
    "start": "2063040",
    "end": "2068720"
  },
  {
    "text": "first don't trust anyone uh use wise listing white listing for user",
    "start": "2068720",
    "end": "2074000"
  },
  {
    "text": "input white listing means you specify allowed user input for example only english letters",
    "start": "2074000",
    "end": "2080720"
  },
  {
    "text": "and spaces and block everything else don't rely on blacklisting so",
    "start": "2080720",
    "end": "2086878"
  },
  {
    "text": "blacklisting is a technique when you allow everything except like a certain symbols",
    "start": "2086879",
    "end": "2094398"
  },
  {
    "text": "and don't trust even administers so of course you should not trust them",
    "start": "2096639",
    "end": "2102640"
  },
  {
    "text": "uh and you should not trust data the data sources where the data is coming uh coming",
    "start": "2102640",
    "end": "2108160"
  },
  {
    "text": "to your application uh uh remember that we in early examples we",
    "start": "2108160",
    "end": "2113520"
  },
  {
    "text": "have the comments management system uh that has excess exploit and that's",
    "start": "2113520",
    "end": "2118800"
  },
  {
    "text": "just one of the examples so you admin user you go to the comments management system you and let's say your your comments are",
    "start": "2118800",
    "end": "2126240"
  },
  {
    "text": "coming from like a third-party source and by default you trusted but again if you",
    "start": "2126240",
    "end": "2131599"
  },
  {
    "text": "if you have xss in your app it doesn't matter where the export is",
    "start": "2131599",
    "end": "2136640"
  },
  {
    "text": "coming from uh you should implement the content",
    "start": "2136640",
    "end": "2142240"
  },
  {
    "text": "security security policy from the one of your projects content security",
    "start": "2142240",
    "end": "2148000"
  },
  {
    "text": "policy is the name for http response headers that allow you to restrict how resources such as javascript css or",
    "start": "2148000",
    "end": "2155119"
  },
  {
    "text": "images uh are loaded in your browser",
    "start": "2155119",
    "end": "2161680"
  },
  {
    "text": "and again if whitelisting doesn't work for you make sure that you are using secure encoding libraries that",
    "start": "2162800",
    "end": "2169920"
  },
  {
    "text": "understand the the content and the context where your where you want this rendered and",
    "start": "2169920",
    "end": "2178160"
  },
  {
    "text": "the reason for using those libraries is uh you need like different different",
    "start": "2178160",
    "end": "2184839"
  },
  {
    "text": "techniques uh different like passwords and like different techniques for any content depending on if it's like an html tag or",
    "start": "2184839",
    "end": "2191599"
  },
  {
    "text": "if an html attribute or a javascript code",
    "start": "2191599",
    "end": "2200640"
  },
  {
    "text": "the common approach of protecting from xss is using html and coding for special",
    "start": "2200640",
    "end": "2206000"
  },
  {
    "text": "characters but that's not enough",
    "start": "2206000",
    "end": "2210240"
  },
  {
    "text": "the reason is that there are so many uh strange contacts within your html uh the the list of escaping rules",
    "start": "2212560",
    "end": "2220800"
  },
  {
    "text": "uh can be like really complicated you won't uh you won't find any good reason to put",
    "start": "2220800",
    "end": "2226720"
  },
  {
    "text": "untrusted data to those contacts right um this includes like nested contacts so",
    "start": "2226720",
    "end": "2232079"
  },
  {
    "text": "you can have like a tag like stacks inside scripts inside and inside tags uh for example",
    "start": "2232079",
    "end": "2240560"
  },
  {
    "text": "like another example of next context is they have a url inside javascript",
    "start": "2240560",
    "end": "2247599"
  },
  {
    "text": "as you see doing html encoding in the right way it's very complicated that's why you should not",
    "start": "2252960",
    "end": "2258160"
  },
  {
    "text": "write the code yourself you have to use some secure libraries to make sure that apps are safe",
    "start": "2258160",
    "end": "2264320"
  },
  {
    "text": "i would recommend using sanitization technique rather than plain text encoding input",
    "start": "2264320",
    "end": "2270240"
  },
  {
    "text": "sanitizers will make sure that like all dangerous parts of your input for example html tags are removed",
    "start": "2270240",
    "end": "2277359"
  },
  {
    "text": "and only the plain text keep is kept for fatherboard stream here on the",
    "start": "2277359",
    "end": "2283520"
  },
  {
    "text": "slide you can see there's different packages that they're helping with uh excess synthesization like i",
    "start": "2283520",
    "end": "2290160"
  },
  {
    "text": "personally like secure filters from salesforce but you can use any of them",
    "start": "2290160",
    "end": "2299838"
  },
  {
    "text": "uh okay don't basic success uh as i hope i",
    "start": "2300560",
    "end": "2307359"
  },
  {
    "text": "showed you on the previous slides are the hardest to prevent because server",
    "start": "2307359",
    "end": "2312560"
  },
  {
    "text": "interaction is limited here we cannot we can't rely on the application",
    "start": "2312560",
    "end": "2318160"
  },
  {
    "text": "firewall and there are so many different ways how",
    "start": "2318160",
    "end": "2323520"
  },
  {
    "text": "uh like javascript html and an html can be encoded on the following",
    "start": "2323520",
    "end": "2330800"
  },
  {
    "text": "slide you can see like different encoding contexts uh within javascript and what encoding",
    "start": "2330800",
    "end": "2336320"
  },
  {
    "text": "methods you should use to minimize the risk and again please don't don't try this",
    "start": "2336320",
    "end": "2341920"
  },
  {
    "text": "code yourself just use some exercise protection and synthesization libraries",
    "start": "2341920",
    "end": "2348480"
  },
  {
    "text": "and like the basic rule is coming to the uh other days if you are",
    "start": "2348880",
    "end": "2357599"
  },
  {
    "text": "rendering example if you are writing some put some text in your on your page that is coming from the",
    "start": "2357599",
    "end": "2362640"
  },
  {
    "text": "user please don't use say in the html attribute use like text content content",
    "start": "2362640",
    "end": "2369838"
  },
  {
    "text": "and don't put any untrusted data into your event address it could be very bad",
    "start": "2370320",
    "end": "2377680"
  },
  {
    "text": "uh a few more points on secure javascript development",
    "start": "2381200",
    "end": "2386240"
  },
  {
    "text": "make sure that javascript variables are",
    "start": "2386960",
    "end": "2391599"
  },
  {
    "text": "variables like make sure that if you're rendering some javascript",
    "start": "2392320",
    "end": "2397680"
  },
  {
    "text": "variables uh that coming from the server side uh that they are properly escaped and",
    "start": "2397680",
    "end": "2402880"
  },
  {
    "text": "sanitized by libraries don't use eval statement or or function",
    "start": "2402880",
    "end": "2411680"
  },
  {
    "text": "constructor the reason is they accept a string as an input that may cause critical security uh",
    "start": "2411680",
    "end": "2418079"
  },
  {
    "text": "security problems if a customer finds a way to modify that so they can eventually exhibit any code and give",
    "start": "2418079",
    "end": "2426240"
  },
  {
    "text": "extra attention to set them out and send interval functions because they also accept",
    "start": "2426240",
    "end": "2432800"
  },
  {
    "text": "accept an input as a string so you can have a potential",
    "start": "2432800",
    "end": "2439520"
  },
  {
    "text": "adjusted injection",
    "start": "2439520",
    "end": "2442480"
  },
  {
    "text": "and if your project budget allow allowed buying us a study quite nice analysis to do it",
    "start": "2449040",
    "end": "2457760"
  },
  {
    "text": "they usually show a lot of false positive errors but sometimes you can you can find real bugs and here on the",
    "start": "2457760",
    "end": "2465599"
  },
  {
    "text": "screen you can see some most popular uh solutions in this area",
    "start": "2465599",
    "end": "2471520"
  },
  {
    "text": "and if you even if you don't have a budget for expensive static uh quantizing to analysis tools",
    "start": "2471760",
    "end": "2477760"
  },
  {
    "text": "you have to use open source alternatives yes this number one option for",
    "start": "2477760",
    "end": "2484240"
  },
  {
    "text": "javascript in case we need to check some code quality and find issues before the appear production",
    "start": "2484240",
    "end": "2493200"
  },
  {
    "text": "uh on the screen you can see the list of plugins that i'm using myself and i found useful and",
    "start": "2493200",
    "end": "2500560"
  },
  {
    "text": "i highly recommend uh to any javascript-based project to start adopting it",
    "start": "2500560",
    "end": "2509839"
  },
  {
    "text": "this is how uh a javascript project looks nowadays at the end of 2018",
    "start": "2510400",
    "end": "2518400"
  },
  {
    "text": "it's uh yeah it's all about open source and sometimes like in javascript we have too much open",
    "start": "2518400",
    "end": "2525040"
  },
  {
    "text": "source you need to understand that all third-party libraries",
    "start": "2525040",
    "end": "2530960"
  },
  {
    "text": "all dependencies using your project are security risks and",
    "start": "2530960",
    "end": "2536400"
  },
  {
    "text": "who knows what vulnerabilities you can have inside your npm modules",
    "start": "2536400",
    "end": "2542559"
  },
  {
    "text": "some interesting data uh you can see uh some sad facts here uh",
    "start": "2548079",
    "end": "2554880"
  },
  {
    "text": "those facts are about the state of open source security published by snake uh is a company",
    "start": "2554880",
    "end": "2560960"
  },
  {
    "text": "specializing in tracking vulnerabilities and different separate components",
    "start": "2560960",
    "end": "2566319"
  },
  {
    "text": "and they're not doing that great",
    "start": "2566319",
    "end": "2570079"
  },
  {
    "text": "they have sneak hosts a huge database of disclosed vulnerabilities on the website and you",
    "start": "2571760",
    "end": "2578240"
  },
  {
    "text": "can freely go there and check the latest vulnerabilities npm packages [Music]",
    "start": "2578240",
    "end": "2584079"
  },
  {
    "text": "so even if you do nothing really most probably application will have those security problems even",
    "start": "2584079",
    "end": "2590079"
  },
  {
    "text": "before you go to shift to production moreover probably you'll have vulnerabilities even before you write",
    "start": "2590079",
    "end": "2595920"
  },
  {
    "text": "any code",
    "start": "2595920",
    "end": "2598400"
  },
  {
    "text": "how we can fix it there are two uh there are two tools that i recommend",
    "start": "2603440",
    "end": "2608640"
  },
  {
    "text": "uh if your project is hundred percent pure javascript just simply use npm it has built into a little bit database",
    "start": "2608640",
    "end": "2614880"
  },
  {
    "text": "available for everyone to use it and it can even um you can",
    "start": "2614880",
    "end": "2620079"
  },
  {
    "text": "get the list of vulnerabilities and you can you can ask npm to fix it and if you your project uses",
    "start": "2620079",
    "end": "2626800"
  },
  {
    "text": "different platforms like php like ruby then uh take a look to sneak because",
    "start": "2626800",
    "end": "2634400"
  },
  {
    "text": "they're tracking vulnerabilities different for different languages different platforms",
    "start": "2634400",
    "end": "2639599"
  },
  {
    "text": "secure code purchases is our first layer of defense but it's not",
    "start": "2645200",
    "end": "2651040"
  },
  {
    "text": "enough fortunately modern browsers come up with an additional layer of excess protection called",
    "start": "2651040",
    "end": "2656160"
  },
  {
    "text": "content security policy or suggest simply csp to enable csp you need to configure your",
    "start": "2656160",
    "end": "2661920"
  },
  {
    "text": "web server to return a content security policy http header it describes",
    "start": "2661920",
    "end": "2667280"
  },
  {
    "text": "describes what content is allowed and what is not uh let's take a look at an example this",
    "start": "2667280",
    "end": "2673760"
  },
  {
    "text": "this website allows content only from example.com",
    "start": "2673760",
    "end": "2680480"
  },
  {
    "text": "so you'll your browser says hey i don't get mi images yes yes but now",
    "start": "2680480",
    "end": "2687359"
  },
  {
    "text": "imagine you have xss vulnerability and hacker is trying to",
    "start": "2687359",
    "end": "2692960"
  },
  {
    "text": "get an exploit from his website and browser will reject this call this",
    "start": "2692960",
    "end": "2699520"
  },
  {
    "text": "this call and you can also specify content security policy inside the meta",
    "start": "2699520",
    "end": "2704880"
  },
  {
    "text": "type on on the page but from what i've seen so far hd headers are more widely used",
    "start": "2704880",
    "end": "2713920"
  },
  {
    "text": "this is how policy looks like uh this process says that you can load",
    "start": "2717040",
    "end": "2722319"
  },
  {
    "text": "javascript files only from the site server or google cdn uh styles can",
    "start": "2722319",
    "end": "2727520"
  },
  {
    "text": "be loaded only from your web server and the frames iframes and",
    "start": "2727520",
    "end": "2733200"
  },
  {
    "text": "workers are forbidden",
    "start": "2733200",
    "end": "2736240"
  },
  {
    "text": "uh there are a lot of more attributes inside csp that you can configure it could be you can say hey i'm loading my",
    "start": "2738400",
    "end": "2744960"
  },
  {
    "text": "images from here and i can load i cannot stand from there",
    "start": "2744960",
    "end": "2752880"
  },
  {
    "text": "usually it's hard debug csp that's why browsers are the additional",
    "start": "2757680",
    "end": "2764640"
  },
  {
    "text": "report uri attribute and this attribute allows you to specify http endpoint",
    "start": "2764640",
    "end": "2769920"
  },
  {
    "text": "where all csp violation can be reported",
    "start": "2769920",
    "end": "2775838"
  },
  {
    "text": "you can also use content security policy report only http header",
    "start": "2776160",
    "end": "2781359"
  },
  {
    "text": "instead of standard content security policy header when you're in development",
    "start": "2781359",
    "end": "2787839"
  },
  {
    "text": "mode uh this header is used for debugging uh in case uh so if it's used then browser",
    "start": "2787839",
    "end": "2796000"
  },
  {
    "text": "will not block any any static assets but it will report all violations to",
    "start": "2796000",
    "end": "2802160"
  },
  {
    "text": "your error racing endpoint and the violations",
    "start": "2802160",
    "end": "2807440"
  },
  {
    "text": "the evaluation reports comes as a simple post post request with this json payload",
    "start": "2807440",
    "end": "2817839"
  },
  {
    "text": "uh this is how the violation report looks like and uh it has",
    "start": "2817839",
    "end": "2825200"
  },
  {
    "text": "at least for me it has enough details for file debugging",
    "start": "2825200",
    "end": "2831839"
  },
  {
    "text": "but that's not all uh google security team has developed a very useful tool to",
    "start": "2832960",
    "end": "2839119"
  },
  {
    "text": "emulate your csp just go to csp related dot with google.com uh you paste",
    "start": "2839119",
    "end": "2847119"
  },
  {
    "text": "your uh policy in there and you'll get a report saying okay that's",
    "start": "2847119",
    "end": "2853520"
  },
  {
    "text": "how you can tweak your policy like some potential vulnerabilities or you forgot about",
    "start": "2853520",
    "end": "2860319"
  },
  {
    "text": "something it's very very very useful especially if you are if you are new to this",
    "start": "2860319",
    "end": "2868160"
  },
  {
    "text": "uh there are a few other useful http headers uh to improve your website security",
    "start": "2871040",
    "end": "2878400"
  },
  {
    "text": "uh first of all extreme option it's used to prevent the click checking attack uh so click",
    "start": "2878400",
    "end": "2885760"
  },
  {
    "text": "jacking attack is an attack when you",
    "start": "2885760",
    "end": "2891200"
  },
  {
    "text": "uh when attacker take you take your website url embeds it inside an iframe and then",
    "start": "2891200",
    "end": "2898160"
  },
  {
    "text": "it has a transparent layer on top of it so if you go to uh to",
    "start": "2898160",
    "end": "2905359"
  },
  {
    "text": "my website and you see hey it looks like my login form you you start typing in data but you're",
    "start": "2905359",
    "end": "2911920"
  },
  {
    "text": "not typing it into the iphone itself you're typing it into the transparent uh",
    "start": "2911920",
    "end": "2918559"
  },
  {
    "text": "transparent layer and that's how the data is stolen so just always use extreme options deny if you",
    "start": "2918559",
    "end": "2924400"
  },
  {
    "text": "don't want your website to be hosted inside frames next one is exercise but x xss",
    "start": "2924400",
    "end": "2931440"
  },
  {
    "text": "protection this header doesn't let the page load",
    "start": "2931440",
    "end": "2937839"
  },
  {
    "text": "load when a browser detects a process scripting attack",
    "start": "2937839",
    "end": "2943040"
  },
  {
    "text": "it's like this this header is enabled by defaulting edge and chrome",
    "start": "2943040",
    "end": "2948880"
  },
  {
    "text": "but it's being decommissioned now and the general recommendation from",
    "start": "2948880",
    "end": "2955280"
  },
  {
    "text": "microsoft from google is to use csp and the reason for that was browsers are",
    "start": "2955280",
    "end": "2961760"
  },
  {
    "text": "not that smart to preventing this attacks and if you want to be safer then",
    "start": "2961760",
    "end": "2968480"
  },
  {
    "text": "go and define your policy uh then stick transfer security",
    "start": "2968480",
    "end": "2978079"
  },
  {
    "text": "this forces your browser to communicate over https so you just yeah you just cannot",
    "start": "2978079",
    "end": "2985760"
  },
  {
    "text": "access your website or http anymore and that's actually pretty useful and i",
    "start": "2985760",
    "end": "2992000"
  },
  {
    "text": "would suggest you all the time and the last one is allow access control",
    "start": "2992000",
    "end": "2999200"
  },
  {
    "text": "allow origin uh it's a course header uh of course it's a tool that allows a user that allow uses additional http",
    "start": "2999200",
    "end": "3007680"
  },
  {
    "text": "require http so course is a tool that allows",
    "start": "3007680",
    "end": "3013119"
  },
  {
    "text": "you porting different website like different apis from different domain names inside your",
    "start": "3013119",
    "end": "3018960"
  },
  {
    "text": "web page from javascript and it's really like widely used",
    "start": "3018960",
    "end": "3024240"
  },
  {
    "text": "nowadays because you usually host your api in different domain",
    "start": "3024240",
    "end": "3029440"
  },
  {
    "text": "okay that's all that i i want to share today i hope you found some useful tips on",
    "start": "3033359",
    "end": "3038880"
  },
  {
    "text": "this presentation in the end i would like to share some useful links",
    "start": "3038880",
    "end": "3044960"
  },
  {
    "text": "that can help you to learn more about the frontend security the first link is free training from",
    "start": "3044960",
    "end": "3050880"
  },
  {
    "text": "barb suite creators suit it's probably the tool number one um uh",
    "start": "3050880",
    "end": "3056240"
  },
  {
    "text": "cross serve application twin testers that's a tool where you can have like you have full access to your",
    "start": "3056240",
    "end": "3062160"
  },
  {
    "text": "http interactions it could be placed like a proxy and you can produce like any notification to http",
    "start": "3062160",
    "end": "3068480"
  },
  {
    "text": "requests and it also has some attackers tools and some automation tools if you're interested in this field then",
    "start": "3068480",
    "end": "3074559"
  },
  {
    "text": "definitely click the other two links are the uh cheat",
    "start": "3074559",
    "end": "3081040"
  },
  {
    "text": "sheets from all of us about how to provide attacks on your website",
    "start": "3081040",
    "end": "3086480"
  },
  {
    "text": "and the last link the last few links are",
    "start": "3086480",
    "end": "3094079"
  },
  {
    "text": "information about csp policies how to write them and",
    "start": "3094079",
    "end": "3099280"
  },
  {
    "text": "finally the csp evaluator that i found very very useful for myself",
    "start": "3099280",
    "end": "3105760"
  },
  {
    "text": "thank you all and let's take a look if you have some questions",
    "start": "3107119",
    "end": "3124559"
  },
  {
    "text": "you",
    "start": "3124559",
    "end": "3126640"
  }
]