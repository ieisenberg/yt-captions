[
  {
    "text": "good morning everyone thank you for joining me craig west track 2 web components",
    "start": "5759",
    "end": "10960"
  },
  {
    "text": "as micro apps and as i posted in the slack and as you can see",
    "start": "10960",
    "end": "16080"
  },
  {
    "text": "here i have a web page where you can get all the details we'll have a quick look at that now you",
    "start": "16080",
    "end": "23039"
  },
  {
    "text": "can download the repos the slides all the information is here for the demonstrations and when i go into the",
    "start": "23039",
    "end": "28880"
  },
  {
    "text": "demonstrations you'll be able to click on these links to see what i'll be demonstrating",
    "start": "28880",
    "end": "35680"
  },
  {
    "text": "please feel free to ask questions in the slack channel and i'll try and respond with",
    "start": "35680",
    "end": "40960"
  },
  {
    "text": "them as we go along to make it somewhat more interactive so let's start",
    "start": "40960",
    "end": "48640"
  },
  {
    "text": "web components as micro apps that sounds a very grandiose term but in fact it really is just html5",
    "start": "48640",
    "end": "56879"
  },
  {
    "text": "it's a spec that's been round for many years but it's only of late that should we say web components have become very robust",
    "start": "56879",
    "end": "66159"
  },
  {
    "text": "and it's already built into html5 and what we're going to see today as we go through this is we can see how we can do the",
    "start": "66240",
    "end": "72240"
  },
  {
    "text": "re-render on prop change for our html tags we can emit custom events and data",
    "start": "72240",
    "end": "77920"
  },
  {
    "text": "we can listen to custom events expose methods we can use the cache api to actually",
    "start": "77920",
    "end": "83920"
  },
  {
    "text": "preload and store pages if you want to have kind of progressive web app technology and we can also use the",
    "start": "83920",
    "end": "90400"
  },
  {
    "text": "browser's local database indexeddb to store lots of data for a kind of template engineer",
    "start": "90400",
    "end": "98479"
  },
  {
    "text": "so in this talk we're going to look at what is a web component how do we use them how do we make them",
    "start": "98479",
    "end": "105119"
  },
  {
    "text": "with vanilla javascript javascript so we say just in our editor or with build tools",
    "start": "105119",
    "end": "110320"
  },
  {
    "text": "and i just like to emphasize they're not frameworks they're compilers and we'll also have a look at how we can",
    "start": "110320",
    "end": "116399"
  },
  {
    "text": "actually export frameworks like angular view react etc as web components",
    "start": "116399",
    "end": "121920"
  },
  {
    "text": "and that'll form the basis for our web components in micro apps we'll also see how we can import them",
    "start": "121920",
    "end": "128640"
  },
  {
    "text": "into ending framework and using web components as a set of interconnected micro apps micro services",
    "start": "128640",
    "end": "136000"
  },
  {
    "text": "and what possible use they may have as business widgets if you're a developer or company that's creating web components",
    "start": "136000",
    "end": "142800"
  },
  {
    "text": "that could be deployed anywhere that html is deployed",
    "start": "142800",
    "end": "148400"
  },
  {
    "text": "and on the backdrop we're going to have two business applications to actually see micro apps in practice",
    "start": "149120",
    "end": "154959"
  },
  {
    "text": "the first one we're going to dissemble just assemble a very monolithic php mysql",
    "start": "154959",
    "end": "161280"
  },
  {
    "text": "application that just into web components that can be used in the app on any html platform so it can either",
    "start": "161280",
    "end": "167920"
  },
  {
    "text": "break up a php stack into just so we say an html page with microservices",
    "start": "167920",
    "end": "173599"
  },
  {
    "text": "or how we can deploy those web components somewhere else and provide useful services and",
    "start": "173599",
    "end": "179280"
  },
  {
    "text": "functionality to other applications and this is the sort of diagram i have",
    "start": "179280",
    "end": "186159"
  },
  {
    "text": "as a sort of wordpress developer originally it's if we create web components here we can use them in our php pages",
    "start": "186159",
    "end": "192720"
  },
  {
    "text": "because they are just html and the one thing i'll stress over and over again is web components are regular html",
    "start": "192720",
    "end": "200400"
  },
  {
    "text": "they're custom that we've made them but they are actually just html tags so wherever you've got html you can",
    "start": "200400",
    "end": "206159"
  },
  {
    "text": "use web components and we can see we could use them in gutenberg blocks that's one way we can",
    "start": "206159",
    "end": "211599"
  },
  {
    "text": "use them but you can see now with web components we can either put them into frameworks or put them into a page",
    "start": "211599",
    "end": "217519"
  },
  {
    "text": "with other frameworks got web components you can see an overall architecture of how web components can be used",
    "start": "217519",
    "end": "224959"
  },
  {
    "text": "the second business application is supposing we want to make a new business and we don't want to do too much",
    "start": "224959",
    "end": "230000"
  },
  {
    "text": "development let's take an example where somebody doesn't want to do too much development how can we literally get components bit",
    "start": "230000",
    "end": "235840"
  },
  {
    "text": "like say when we used to do jquery and get them to talk to each other and build an application",
    "start": "235840",
    "end": "241920"
  },
  {
    "text": "and this is inspired by this talk at the js conference london 28 the keynote speech",
    "start": "241920",
    "end": "247599"
  },
  {
    "text": "how can angular react view and co work peacefully using web components and micro apps",
    "start": "247599",
    "end": "253360"
  },
  {
    "text": "and so what i've done is i've developed a little demo site to show this and you can basically see that we have",
    "start": "253360",
    "end": "259120"
  },
  {
    "text": "each is an individual app that could stand on its own but they can all communicate to each other and we'll see an example of this",
    "start": "259120",
    "end": "265520"
  },
  {
    "text": "of how this works and that'll demonstrate the kind of functionality and features of web components so behind the scenes",
    "start": "265520",
    "end": "272639"
  },
  {
    "text": "we're going to really be basing all of this on how we can actually use them so in that last example of the two",
    "start": "272639",
    "end": "278720"
  },
  {
    "text": "business applications what we'd like in some ways is if we've got a react app a view app an angular app a wordpress app",
    "start": "278720",
    "end": "284800"
  },
  {
    "text": "how can we put them all onto the same html page use them as they've been constructed but",
    "start": "284800",
    "end": "290240"
  },
  {
    "text": "also use them to communicate with other applications",
    "start": "290240",
    "end": "295039"
  },
  {
    "text": "and what we'll see is when we're using our web components we'll see in the code when we get to it",
    "start": "295280",
    "end": "300560"
  },
  {
    "text": "that this is basically how it is notice how it's seemingly regular html we'll go into",
    "start": "300560",
    "end": "306160"
  },
  {
    "text": "more detail as we go along but it must contain at least one hyphen to tell the browser that is a custom and",
    "start": "306160",
    "end": "311919"
  },
  {
    "text": "so it doesn't clash with any future html tags so straight away this is our whole",
    "start": "311919",
    "end": "317360"
  },
  {
    "text": "enterprise application literally just five html tags",
    "start": "317360",
    "end": "324160"
  },
  {
    "text": "now what i like about web components is how they can really almost be used like sudo code we can see that when we're",
    "start": "324160",
    "end": "330240"
  },
  {
    "text": "creating our app we have our web component here we have our own custom attributes",
    "start": "330240",
    "end": "336080"
  },
  {
    "text": "and one can see that it can almost read like a sentence so a sentence is an application a set of",
    "start": "336080",
    "end": "342320"
  },
  {
    "text": "sentences is a paragraph and that paragraph will become our application so it's very declarative rather than",
    "start": "342320",
    "end": "348800"
  },
  {
    "text": "imperative and once we have a library of components either third party or ourselves",
    "start": "348800",
    "end": "353840"
  },
  {
    "text": "we can literally construct apps as if we're writing english and that appeals to me greatly because i'm not one greatly for coding i",
    "start": "353840",
    "end": "361120"
  },
  {
    "text": "really do like putting together the metaphor that they use is lego blocks being able to spot things",
    "start": "361120",
    "end": "366720"
  },
  {
    "text": "together configure them and off on my way i will be",
    "start": "366720",
    "end": "371840"
  },
  {
    "text": "as for me i'm a trainer of pwas and web components and also developing async js",
    "start": "371840",
    "end": "377120"
  },
  {
    "text": "training programs because that really is where most of our",
    "start": "377120",
    "end": "382479"
  },
  {
    "text": "javascript in applications is these days and i started with computers as you can see back here at",
    "start": "382479",
    "end": "388160"
  },
  {
    "text": "school cut and paste was cut and paste if you wanted to change your program you'd cut it and splice it together",
    "start": "388160",
    "end": "395360"
  },
  {
    "text": "i live in brighton and i'm not 80 kilometers south of london at the moment and at university i",
    "start": "395360",
    "end": "401520"
  },
  {
    "text": "studied chemistry and in those days it was all mainframe and client dumb terminals and",
    "start": "401520",
    "end": "409360"
  },
  {
    "text": "command-line utilities then as time progressed on it became desktop computers with guise",
    "start": "409360",
    "end": "415360"
  },
  {
    "text": "and now we're back to cloud and command line and other former careers as an accountant sql server dba",
    "start": "415360",
    "end": "422639"
  },
  {
    "text": "business information architect and also a proud plumber",
    "start": "422639",
    "end": "427759"
  },
  {
    "text": "so what is a micro app and what is a micro service well i've taken some definitions here from",
    "start": "427759",
    "end": "432880"
  },
  {
    "text": "the uh wikipedia and it begs the question what is it when",
    "start": "432880",
    "end": "438479"
  },
  {
    "text": "is an app an app when is an app a micro app on its own it's an app but when it's with other apps it's a",
    "start": "438479",
    "end": "444880"
  },
  {
    "text": "micro app it is very much context based it's very much when is a parent a grandparent when is a parent a",
    "start": "444880",
    "end": "450800"
  },
  {
    "text": "child it's really contextual but what i like is at the",
    "start": "450800",
    "end": "455919"
  },
  {
    "text": "dev day for amazon web services you can see down here microservices as they define it is",
    "start": "455919",
    "end": "461919"
  },
  {
    "text": "single purpose connecting to apis over https microservice",
    "start": "461919",
    "end": "468800"
  },
  {
    "text": "so i'm going to spend a little time talking about html5 because this is where our web components are and this is a very nice definition here",
    "start": "470400",
    "end": "476879"
  },
  {
    "text": "at mdn which i tend to use as a source of all truth and i think it's accepted that that's where",
    "start": "476879",
    "end": "482240"
  },
  {
    "text": "the source of all truth is and you can see this lovely expression that the term html5 represents two",
    "start": "482240",
    "end": "488639"
  },
  {
    "text": "different concepts the old kind of elements attributes and behaviors",
    "start": "488639",
    "end": "493840"
  },
  {
    "text": "and and that's their emphasis a larger set of technologies that allow building of more diverse powerful websites and",
    "start": "493840",
    "end": "499520"
  },
  {
    "text": "applications html and friends as they call it so within all that we can create our own",
    "start": "499520",
    "end": "505199"
  },
  {
    "text": "html tags which has all of these different properties that we've mentioned before so when we talk web components we're",
    "start": "505199",
    "end": "512000"
  },
  {
    "text": "really talking custom html or regular html but just our version of them",
    "start": "512000",
    "end": "518640"
  },
  {
    "text": "so if we look at an anchor tag an anchor tag has props it has a click event it has the slot api",
    "start": "518640",
    "end": "526720"
  },
  {
    "text": "and as mdn says the anchor element extends the class html element",
    "start": "526720",
    "end": "532240"
  },
  {
    "text": "which is the browser class for these tags",
    "start": "532240",
    "end": "537600"
  },
  {
    "text": "so if we look at an input element that's quite complex we've got type got lots of properties we've got",
    "start": "538080",
    "end": "543680"
  },
  {
    "text": "functionality it gives us a certain ui with a drop down little kind of keys",
    "start": "543680",
    "end": "549680"
  },
  {
    "text": "so we can see here really this is a web component it's built into the browser but it does more than just styling",
    "start": "549680",
    "end": "555839"
  },
  {
    "text": "something this is an actual application in its own right it's a custom ui component so when we come to our custom",
    "start": "555839",
    "end": "564000"
  },
  {
    "text": "html tag we can create them with a little source file and we'll go into that in the demo",
    "start": "564000",
    "end": "570000"
  },
  {
    "text": "and we can name it anything we want so long as it's got at least one dash and has all the sort of standard characters",
    "start": "570000",
    "end": "576480"
  },
  {
    "text": "and as you can see it actually extends the html element class and we'll see",
    "start": "576480",
    "end": "581600"
  },
  {
    "text": "that in the code but actually it's a regular html element just our custom version so we can have a",
    "start": "581600",
    "end": "589040"
  },
  {
    "text": "look at that here and we can see the definition of at draw it's using the custom elements dot",
    "start": "589040",
    "end": "594800"
  },
  {
    "text": "define it creates the tag name that we want at drawer which we see here",
    "start": "594800",
    "end": "599839"
  },
  {
    "text": "it uses the class which would be in here the code and as in as they say on webcomponents.org the main body page for",
    "start": "599839",
    "end": "607200"
  },
  {
    "text": "web components it is just like a div so anything we can do with regular html and a div adding",
    "start": "607200",
    "end": "614000"
  },
  {
    "text": "events styles etc will go into that all of that can still be used it is regular html albeit custom",
    "start": "614000",
    "end": "623760"
  },
  {
    "text": "so communication we're going to spend quite a bit of time in the demos going through this but if we have our custom component",
    "start": "623760",
    "end": "630240"
  },
  {
    "text": "called show dash post and i'm sending in my own custom attribute of 34",
    "start": "630240",
    "end": "635600"
  },
  {
    "text": "what we want to be able to do is actually observe that and do something when that changes",
    "start": "635600",
    "end": "640959"
  },
  {
    "text": "that's the sort of render on prop change we'll see it in the code i'll go into this shortly",
    "start": "640959",
    "end": "646640"
  },
  {
    "text": "but what we've got to do is actually tell the browser what to listen to because by default it",
    "start": "646640",
    "end": "652160"
  },
  {
    "text": "won't listen to any attributes to save resources and when it's listening for the post id",
    "start": "652160",
    "end": "657920"
  },
  {
    "text": "change observed attributes it has a callback and based on that",
    "start": "657920",
    "end": "663440"
  },
  {
    "text": "if we select that particular one we've got an old value new value we can just do something",
    "start": "663440",
    "end": "668560"
  },
  {
    "text": "so that's how we communicate with web components it's one way and it's probably the sort of the most",
    "start": "668560",
    "end": "673920"
  },
  {
    "text": "popular design way props down we can have events up",
    "start": "673920",
    "end": "679600"
  },
  {
    "text": "and to that what we can do is use the javascript custom events",
    "start": "679600",
    "end": "685040"
  },
  {
    "text": "code which you can see here we can create our own custom event name instead of on mouse",
    "start": "685040",
    "end": "691040"
  },
  {
    "text": "over click we've got this one here which we'll see in the code later and we can also send a payload and if",
    "start": "691040",
    "end": "697839"
  },
  {
    "text": "you're kind of familiar with read ups or different systems like that that's quite convenient where we send an action and a payload",
    "start": "697839",
    "end": "704560"
  },
  {
    "text": "so on the page we just have to listen to child one click and from the event object we can get the",
    "start": "704560",
    "end": "709800"
  },
  {
    "text": "event.detail and we'll get the event data so those are the two main mechanisms",
    "start": "709800",
    "end": "715519"
  },
  {
    "text": "really as a design pattern for web components props down events up",
    "start": "715519",
    "end": "722000"
  },
  {
    "text": "but javascript doesn't have private classes at this current time so all the methods and properties in",
    "start": "722000",
    "end": "728160"
  },
  {
    "text": "that class are accessible if we want them and as another use for example we",
    "start": "728160",
    "end": "734480"
  },
  {
    "text": "can see here we have our custom tab we can like regular html put an event click",
    "start": "734480",
    "end": "740240"
  },
  {
    "text": "on it and in the page all we have to do when we click it we can actually access",
    "start": "740240",
    "end": "747600"
  },
  {
    "text": "one of the public methods within that class and we'll see that when we go to the demonstration but what we're really doing is we're",
    "start": "747600",
    "end": "753920"
  },
  {
    "text": "able to select our custom html tag in the same way that we have references to our html tags and if there are any",
    "start": "753920",
    "end": "761360"
  },
  {
    "text": "methods or properties or things within that javascript class we can have access to them",
    "start": "761360",
    "end": "767040"
  },
  {
    "text": "so i tend to think of this almost it's almost like this is the command line and we open up an instance of this object and we have",
    "start": "767040",
    "end": "773600"
  },
  {
    "text": "access to this object because we've selected it and we call on its methods that's a very tightly coupled system you",
    "start": "773600",
    "end": "780720"
  },
  {
    "text": "can do it you're free to have your own design patterns but probably on third-party web components",
    "start": "780720",
    "end": "786000"
  },
  {
    "text": "it's props down events up so having done that if we've got our web",
    "start": "786000",
    "end": "791680"
  },
  {
    "text": "component here we can see we've got many inroads and outros we have our props",
    "start": "791680",
    "end": "797839"
  },
  {
    "text": "we can listen to custom events with a payload because it's on the page we can have our methods and properties",
    "start": "797839",
    "end": "803920"
  },
  {
    "text": "called directly there is also the slot api which will be in here",
    "start": "803920",
    "end": "809120"
  },
  {
    "text": "you can access changes and content within the slot children if you're from say the react",
    "start": "809120",
    "end": "815120"
  },
  {
    "text": "environment but that's not usually done because that's not necessarily very um stable in the sense that it may",
    "start": "815120",
    "end": "821440"
  },
  {
    "text": "change through the application and it's not a sort of a way that it's usually done but it could be done",
    "start": "821440",
    "end": "827360"
  },
  {
    "text": "we can emit our custom event and payload so we can communicate with other elements and we could also",
    "start": "827360",
    "end": "833600"
  },
  {
    "text": "directly access the attributes on the component and the public methods of other components if we wanted to so",
    "start": "833600",
    "end": "841279"
  },
  {
    "text": "we can see in this particular diagram here how we've got a lot of inroads and outros and that really will become",
    "start": "841279",
    "end": "847440"
  },
  {
    "text": "a developer's choice as to what kind of system they want if you're providing a third-party",
    "start": "847440",
    "end": "852639"
  },
  {
    "text": "component it's usually configured through attributes and use events and they tend to say that they're",
    "start": "852639",
    "end": "859040"
  },
  {
    "text": "in the web component the attributes should be the source of all truth so you're always synchronizing",
    "start": "859040",
    "end": "864800"
  },
  {
    "text": "with your attributes if you make changes within your component and when we go through the demos and the github repo we'll see how that's all",
    "start": "864800",
    "end": "871440"
  },
  {
    "text": "done now there's plenty of support for this for",
    "start": "871440",
    "end": "876800"
  },
  {
    "text": "web components as you can see in all the evergreen it's all stable and there are polyfills available",
    "start": "876800",
    "end": "882399"
  },
  {
    "text": "all the way down to some version of ie i can't quite remember off the top of my head",
    "start": "882399",
    "end": "888560"
  },
  {
    "text": "but one of the most important things and probably was the stumbling block over the years was encapsulation how do we not affect the rest of the",
    "start": "888560",
    "end": "895199"
  },
  {
    "text": "page in particular css now we're going to have a look at the shadow dom which is like a fragment",
    "start": "895199",
    "end": "902480"
  },
  {
    "text": "and we're going to see that actually there are rules as to what can be done javascript-wise and css we're not going",
    "start": "902480",
    "end": "908880"
  },
  {
    "text": "to go into incredible detail on them because it can get overwhelming but i'm going to be showing various aspects of it and this is the first",
    "start": "908880",
    "end": "916720"
  },
  {
    "text": "if you look here on our regular page we have our my dash component and if you notice we've got a fragment",
    "start": "916720",
    "end": "922720"
  },
  {
    "text": "depending on your chrome browser or the browser that you use it's shaded here and you can see it's a shadow it's a",
    "start": "922720",
    "end": "929040"
  },
  {
    "text": "separate item but it becomes part of the tree but this is almost like a",
    "start": "929040",
    "end": "934240"
  },
  {
    "text": "border that basically will allow certain things to and from depending on on the rules of web",
    "start": "934240",
    "end": "940480"
  },
  {
    "text": "components then we'll have a little look at that as we go along so we make our component we add it in",
    "start": "940480",
    "end": "946720"
  },
  {
    "text": "and that'll be and then that's added and flattened in the shadow the light dom this is the shadow",
    "start": "946720",
    "end": "952720"
  },
  {
    "text": "dom the rest of the page will call the light dom",
    "start": "952720",
    "end": "957600"
  },
  {
    "text": "so who uses web components well google has an estimator i think from watching their videos around twenty thousand",
    "start": "958240",
    "end": "964720"
  },
  {
    "text": "twenty thousand plus uh they have their google accelerated mobile pages which is",
    "start": "964720",
    "end": "969759"
  },
  {
    "text": "based on web components ionic has their system of web components",
    "start": "969759",
    "end": "974880"
  },
  {
    "text": "that can also be used with any of the major javascript frameworks react angular and vue but also plain javascript too",
    "start": "974880",
    "end": "982079"
  },
  {
    "text": "and combined with capacitor it enables one to create native apps with just one code base of",
    "start": "982079",
    "end": "988240"
  },
  {
    "text": "html javascript and css and technically it's a web view within",
    "start": "988240",
    "end": "993360"
  },
  {
    "text": "the mobile app so for somebody like myself who just has the platform as their coding base it's",
    "start": "993360",
    "end": "1000399"
  },
  {
    "text": "wonderful that can be used on desktop applications pwas mobile apps and i've had published one",
    "start": "1000399",
    "end": "1006800"
  },
  {
    "text": "myself just as a test now what's interesting is salesforce having purchased slack",
    "start": "1006800",
    "end": "1013360"
  },
  {
    "text": "salesforce has their own version of web components called lightning web components we're going to have a look at that shortly",
    "start": "1013360",
    "end": "1020160"
  },
  {
    "text": "and basically there is this interesting video down here of google and salesforce explaining how",
    "start": "1020160",
    "end": "1026079"
  },
  {
    "text": "that when they've kind of consolidated different divisions they turn to web components as a universal system of architecture",
    "start": "1026079",
    "end": "1033678"
  },
  {
    "text": "and it's interesting that we use slack now so in the future perhaps there may be more of their lightning web components",
    "start": "1033679",
    "end": "1040000"
  },
  {
    "text": "building that base to integrate with the rest of their products so what types of web",
    "start": "1040000",
    "end": "1045678"
  },
  {
    "text": "components can we have well we're only limited by our use of javascript and css",
    "start": "1045679",
    "end": "1052320"
  },
  {
    "text": "i'm not a ui person i've got a couple of ui components some people use web components for their",
    "start": "1052320",
    "end": "1057679"
  },
  {
    "text": "uis their buttons to standardize it across an organization i'm more of the sort of highly",
    "start": "1057679",
    "end": "1062720"
  },
  {
    "text": "functional type which we're going to have a look at and it's going to do standard fetch requests i've also built a few web",
    "start": "1062720",
    "end": "1069360"
  },
  {
    "text": "components that has its own lazy loading feature and dynamic loading we can use web",
    "start": "1069360",
    "end": "1074480"
  },
  {
    "text": "components to store data in indexeddb in the same way we would with javascript",
    "start": "1074480",
    "end": "1079679"
  },
  {
    "text": "we can do our forms and get data back i have an example of authentic authentication",
    "start": "1079679",
    "end": "1084799"
  },
  {
    "text": "and getting a json web token back and with that and combined with some of",
    "start": "1084799",
    "end": "1090000"
  },
  {
    "text": "the features above we can add offline capability and instant pages and we're going to see that in demo one",
    "start": "1090000",
    "end": "1097919"
  },
  {
    "text": "so the most useful references are webcomponents.org that's the sort of main site custom",
    "start": "1097919",
    "end": "1104080"
  },
  {
    "text": "elements everywhere if we open that up is basically where they test",
    "start": "1104080",
    "end": "1109520"
  },
  {
    "text": "all the frameworks with web components and most are 100 compliant the only main",
    "start": "1109520",
    "end": "1116000"
  },
  {
    "text": "exception is react because of some of the terminology of class names in class but there are",
    "start": "1116000",
    "end": "1121120"
  },
  {
    "text": "workarounds for that but as we go through here we can see web components are very compatible",
    "start": "1121120",
    "end": "1126559"
  },
  {
    "text": "with all the libraries now the really important one down here",
    "start": "1126559",
    "end": "1131760"
  },
  {
    "text": "to show this is this new site that's come up probably in the last six months i only discovered it a couple of months ago and",
    "start": "1131760",
    "end": "1137679"
  },
  {
    "text": "i was surprised i hadn't found out about it before but if we open that up",
    "start": "1137679",
    "end": "1143200"
  },
  {
    "text": "it's a wonderful kind of place where you can build web components and even publish them to npm so if we look at that in here and we look at all the",
    "start": "1143600",
    "end": "1149919"
  },
  {
    "text": "starter kits we will see all the different versions of web component libraries or compilers and for example i",
    "start": "1149919",
    "end": "1157840"
  },
  {
    "text": "use the compiler stencil that'll be the one i use for my demo two but you can see we have the",
    "start": "1157840",
    "end": "1164000"
  },
  {
    "text": "lightning web components of salesforce and we can also see down here that we have the major",
    "start": "1164000",
    "end": "1170320"
  },
  {
    "text": "javascript frameworks being able to export to web components and if we look at the",
    "start": "1170320",
    "end": "1176799"
  },
  {
    "text": "react one very quickly we can see how they do that they use this import reactor web component which is",
    "start": "1176799",
    "end": "1184080"
  },
  {
    "text": "defined at the bottom so if we go to this site you can play around with it and you can see that",
    "start": "1184080",
    "end": "1189280"
  },
  {
    "text": "actually web components are available across the board through a great range of compilers",
    "start": "1189280",
    "end": "1194559"
  },
  {
    "text": "frameworks or libraries",
    "start": "1194559",
    "end": "1199039"
  },
  {
    "text": "ah i'm sorry i didn't look at the chat can we create web components using webassembly there are some examples of people using",
    "start": "1204480",
    "end": "1210880"
  },
  {
    "text": "web assembly and custom components um there's one or two examples out there but in theory yes",
    "start": "1210880",
    "end": "1216960"
  },
  {
    "text": "you can i did look into that i don't know webassembly but i did research that and yes",
    "start": "1216960",
    "end": "1222159"
  },
  {
    "text": "there is web assembly so in a sense what we can think of as web components in the same way that with javascript",
    "start": "1222159",
    "end": "1228240"
  },
  {
    "text": "frameworks we use div id equals app as just the place where everything gets",
    "start": "1228240",
    "end": "1233520"
  },
  {
    "text": "presented or exported to we can see web components as just another way of exporting things in but have nicer",
    "start": "1233520",
    "end": "1239760"
  },
  {
    "text": "interfaces for the rest of the page so yeah webassembly works and i think if you do a google search for webassembly",
    "start": "1239760",
    "end": "1245440"
  },
  {
    "text": "there was a person that did it with a barcode reader and did some webassembly with that",
    "start": "1245440",
    "end": "1251520"
  },
  {
    "text": "so we're going to go through demo time now so i'm going to go through the repo because i can actually show some of",
    "start": "1251520",
    "end": "1256559"
  },
  {
    "text": "these traits in action and then later on we'll go to the two demo sites so i'm going to go to my",
    "start": "1256559",
    "end": "1262799"
  },
  {
    "text": "github repo on me and i'm just going to move my speaker thing",
    "start": "1262799",
    "end": "1268640"
  },
  {
    "text": "over here and if you use it these are like five",
    "start": "1268640",
    "end": "1274640"
  },
  {
    "text": "lessons this is a library here that shows individual components that we're going to use on our website",
    "start": "1274640",
    "end": "1281120"
  },
  {
    "text": "and down at the very bottom the demo website here is the site that we'll see and we'll get to that shortly",
    "start": "1281120",
    "end": "1287200"
  },
  {
    "text": "so what i'm going to do is actually work through um some of the main features of web",
    "start": "1287200",
    "end": "1293840"
  },
  {
    "text": "components not all of them but just some of them and the very first one is let's see how we create them",
    "start": "1293840",
    "end": "1298880"
  },
  {
    "text": "so if we go to o1 create custom elements in the 01",
    "start": "1298880",
    "end": "1305840"
  },
  {
    "text": "we will see that we define a class and we extend the html element there's another definition if we want up",
    "start": "1306000",
    "end": "1311600"
  },
  {
    "text": "here we have a constructor function we have connected callback which is the",
    "start": "1311600",
    "end": "1317120"
  },
  {
    "text": "cycle event when the web component is attached to the dom and then we then define the web",
    "start": "1317120",
    "end": "1324720"
  },
  {
    "text": "component name with the class and there's some more life cycle events which we'll get to so when we open this up into",
    "start": "1324720",
    "end": "1332960"
  },
  {
    "text": "and go into dev tools we will see in console component created component now part of",
    "start": "1332960",
    "end": "1338960"
  },
  {
    "text": "the dom we can see that that was in the constructor once it's attached to the dom",
    "start": "1338960",
    "end": "1344000"
  },
  {
    "text": "there it is now like this there's no",
    "start": "1344000",
    "end": "1350559"
  },
  {
    "text": "protection or encapsulation of this component with the rest of the page so that's where we get into the",
    "start": "1350559",
    "end": "1357520"
  },
  {
    "text": "shadow dom which i talked about and if we go to o 301 shadow dom ndc we can see",
    "start": "1357520",
    "end": "1365039"
  },
  {
    "text": "that actually what we can do is create a shadow dom mode open that really means can we",
    "start": "1365039",
    "end": "1372400"
  },
  {
    "text": "access it with javascript which is what you want to do nobody use it closed it's explained in",
    "start": "1372400",
    "end": "1377679"
  },
  {
    "text": "the videos but basically this is the way that we can create our shadow dom we can basically then just set as you",
    "start": "1377679",
    "end": "1384880"
  },
  {
    "text": "notice like the style the text the children the slot text in between the component",
    "start": "1384880",
    "end": "1391120"
  },
  {
    "text": "we have our connected callback and so if we open this up like we did",
    "start": "1391120",
    "end": "1396880"
  },
  {
    "text": "before the picture that i showed you is this here and if we go into developer",
    "start": "1396880",
    "end": "1402400"
  },
  {
    "text": "tools and into elements main let me make this a bit bigger",
    "start": "1402400",
    "end": "1410000"
  },
  {
    "text": "there we see our my component is part of the tree there's the shadow root and we can then",
    "start": "1410559",
    "end": "1415840"
  },
  {
    "text": "basically see all the text in there the style etc",
    "start": "1415840",
    "end": "1421200"
  },
  {
    "text": "so that's actually how we can actually create the shadow root and we see it here and any text that's",
    "start": "1421200",
    "end": "1427679"
  },
  {
    "text": "in the middle of this component here when we come back to our file here",
    "start": "1427679",
    "end": "1432799"
  },
  {
    "text": "when we have a look at it on the page",
    "start": "1432799",
    "end": "1437278"
  },
  {
    "text": "this slot text this is called slot text it's the text it's the children elements of the component",
    "start": "1438080",
    "end": "1443600"
  },
  {
    "text": "it can be very many it could be other tags it could be other web components that's what i refer to as the slot text",
    "start": "1443600",
    "end": "1450880"
  },
  {
    "text": "so i've talked about encapsulation so let's see an example of that with css so i've got an example here of",
    "start": "1450880",
    "end": "1458360"
  },
  {
    "text": "0402 custom properties shadow and if i do my",
    "start": "1458360",
    "end": "1463520"
  },
  {
    "text": "control g and go to line 42 we will see i've got background linen so",
    "start": "1463520",
    "end": "1470000"
  },
  {
    "text": "if i'm open up this page and have a look at it we can see there's the background linen",
    "start": "1470000",
    "end": "1476559"
  },
  {
    "text": "but if we come here and actually go to line 70",
    "start": "1476559",
    "end": "1482080"
  },
  {
    "text": "we will see that we have a div element in the light dom on the page that's not affected by",
    "start": "1483039",
    "end": "1489520"
  },
  {
    "text": "the styling of the web component so if we come back here we can see that that doesn't have a",
    "start": "1489520",
    "end": "1495679"
  },
  {
    "text": "linen background now the many rules about how we can do enterprise-wide",
    "start": "1495679",
    "end": "1501039"
  },
  {
    "text": "css i'm not going to go into that because css can get quite overwhelming with all the",
    "start": "1501039",
    "end": "1506400"
  },
  {
    "text": "different ways but you can use custom css variables you can use actually javascript css",
    "start": "1506400",
    "end": "1512720"
  },
  {
    "text": "files you can have standard shadow parts a great range of different ways",
    "start": "1512720",
    "end": "1517919"
  },
  {
    "text": "but the most important thing as we can see up here the light dom is not affected by the shadow dom css",
    "start": "1517919",
    "end": "1523919"
  },
  {
    "text": "and that's the most important thing on the question of accessing different",
    "start": "1523919",
    "end": "1530159"
  },
  {
    "text": "things the shadow dom has direct access to the light dom it can access elements on the page we're going to have a look at that in events",
    "start": "1530159",
    "end": "1536640"
  },
  {
    "text": "but not the other way around so your code your page level javascript can't actually access your shadow dom",
    "start": "1536640",
    "end": "1544799"
  },
  {
    "text": "it interacts with it basically through calling the methods or the properties but it doesn't have kind of direct",
    "start": "1545039",
    "end": "1550480"
  },
  {
    "text": "access into the elements within it so let's have a look at the example of",
    "start": "1550480",
    "end": "1555679"
  },
  {
    "text": "props so if we go into o5 and if we go into o5 event show post",
    "start": "1555679",
    "end": "1562799"
  },
  {
    "text": "which is this one here this is the javascript file this is the html element so if we come",
    "start": "1562799",
    "end": "1568400"
  },
  {
    "text": "in here and open up and we'll go into the developer console",
    "start": "1568400",
    "end": "1574320"
  },
  {
    "text": "and what i'm going to do is to show how we get state rendered on change if i come in here notice we've got 88",
    "start": "1574320",
    "end": "1581440"
  },
  {
    "text": "here if i click this this is going to change the attribute to 83",
    "start": "1581440",
    "end": "1586559"
  },
  {
    "text": "and it's going to render here so for example if i do this and change",
    "start": "1586559",
    "end": "1592720"
  },
  {
    "text": "this to 109 this is that we can see we get rendered on the change and that's simply because",
    "start": "1592720",
    "end": "1598240"
  },
  {
    "text": "if we look in our javascript file we can see what we've done is we've set",
    "start": "1598240",
    "end": "1606159"
  },
  {
    "text": "up an observed attribute static method for the post id",
    "start": "1606159",
    "end": "1612159"
  },
  {
    "text": "we've seen this before and then when it changes if the post id we're looking for that",
    "start": "1612159",
    "end": "1618159"
  },
  {
    "text": "particular attribute if it changes we do something and all i'm doing here is i'm re-rendering the",
    "start": "1618159",
    "end": "1623279"
  },
  {
    "text": "post with a new id so when we come back here we can see that if i turn that back to",
    "start": "1623279",
    "end": "1630320"
  },
  {
    "text": "83 there we go and we change it so that's the kind of common method of",
    "start": "1630320",
    "end": "1635919"
  },
  {
    "text": "actually changing props and that uses two of the really fundamentals life cycles",
    "start": "1635919",
    "end": "1641360"
  },
  {
    "text": "the observing the attributes on the element itself and the element itself can also access itself and change its",
    "start": "1641360",
    "end": "1647200"
  },
  {
    "text": "own attributes we won't go into detail with that that's detailed in the repo and the",
    "start": "1647200",
    "end": "1652559"
  },
  {
    "text": "videos but basically we can really through the props we render with change",
    "start": "1652559",
    "end": "1660480"
  },
  {
    "text": "now let's go back to i showed you before that events are possible even if it's not a custom event",
    "start": "1662320",
    "end": "1668159"
  },
  {
    "text": "uh simply because of javascript having all its methods uh public and if we now go to o5",
    "start": "1668159",
    "end": "1676320"
  },
  {
    "text": "events light events ndc",
    "start": "1676320",
    "end": "1683840"
  },
  {
    "text": "to go to line 51 we can see here that we have an on click",
    "start": "1687039",
    "end": "1693600"
  },
  {
    "text": "we've seen that before in one of the pictures if i open this up if i click",
    "start": "1693600",
    "end": "1699279"
  },
  {
    "text": "we see it so this just emphasizes these are just still regular html if i",
    "start": "1699279",
    "end": "1705440"
  },
  {
    "text": "go to line 69 we will can see that we can access",
    "start": "1705440",
    "end": "1710880"
  },
  {
    "text": "that component on the page we've seen that before it's just a regular html tag but it's like now its methods and",
    "start": "1710880",
    "end": "1717600"
  },
  {
    "text": "properties are available so if we come further down here we can see on line 85 that we've got",
    "start": "1717600",
    "end": "1724799"
  },
  {
    "text": "access to the web component there is a public method within it and if we scroll down",
    "start": "1724799",
    "end": "1730320"
  },
  {
    "text": "to line one two one we will see a regular method in a class",
    "start": "1730320",
    "end": "1738159"
  },
  {
    "text": "there it is it is accessible directly not usually done as a way of working",
    "start": "1738159",
    "end": "1743520"
  },
  {
    "text": "with web components but one always has the choice if one wants a more tightly coupled system",
    "start": "1743520",
    "end": "1750000"
  },
  {
    "text": "finally let's have a look at custom events emitting events we've seen how we've passed data into our component",
    "start": "1750000",
    "end": "1756640"
  },
  {
    "text": "how does it communicate with the outside world and for that we'll go down to 15 child",
    "start": "1756640",
    "end": "1763360"
  },
  {
    "text": "parent there's the web page here is the javascript let's just open",
    "start": "1763360",
    "end": "1769440"
  },
  {
    "text": "this up and show it in action i'm going to go into dev tools and into console",
    "start": "1769440",
    "end": "1774880"
  },
  {
    "text": "this is the component in green when i click it we can see there's a custom event emitted",
    "start": "1774880",
    "end": "1780960"
  },
  {
    "text": "and if we come down here we can see the details data in custom event that's the payload",
    "start": "1780960",
    "end": "1787760"
  },
  {
    "text": "and we should see the path name child one just have a quick",
    "start": "1787760",
    "end": "1793840"
  },
  {
    "text": "look for the type is child one click so that's the event that gets bubbled up and we can listen",
    "start": "1793840",
    "end": "1800640"
  },
  {
    "text": "to it like we listen to a click event or anything else and that's the payload up here",
    "start": "1800640",
    "end": "1806559"
  },
  {
    "text": "so if we have a quick look at the code we can see that's how we access it on the page",
    "start": "1806559",
    "end": "1811600"
  },
  {
    "text": "in the component itself all we're doing is when we're clicking we use this dot dispatch an event",
    "start": "1811600",
    "end": "1817600"
  },
  {
    "text": "it's a custom event this is the name of the event and the event data that's the data i've",
    "start": "1817600",
    "end": "1823760"
  },
  {
    "text": "just created up here some random numbers that gets bubbled up and the page can listen to the event",
    "start": "1823760",
    "end": "1829520"
  },
  {
    "text": "detail as we've seen here we have the detail the payload and we have",
    "start": "1829520",
    "end": "1834640"
  },
  {
    "text": "the event handler the action as it were for that",
    "start": "1834640",
    "end": "1840640"
  },
  {
    "text": "so that really is a kind of brief overview of how web components work how we put information in how we put",
    "start": "1842000",
    "end": "1847679"
  },
  {
    "text": "information out how we can also style it uh without bleeding into the main page",
    "start": "1847679",
    "end": "1853840"
  },
  {
    "text": "let's now have a look at a demo of this so what do we do is if you go to if you",
    "start": "1853840",
    "end": "1859360"
  },
  {
    "text": "want to follow along wpj this one up here demo one it's on the page",
    "start": "1859360",
    "end": "1864480"
  },
  {
    "text": "i'm going to close this down for the moment basically this is a regular website",
    "start": "1864480",
    "end": "1870799"
  },
  {
    "text": "we've seen this one here of changing the post we've already seen that one here as examples i can show that for a whole",
    "start": "1870799",
    "end": "1878000"
  },
  {
    "text": "blog posts as it were for terms of speed and efficiency if we go into the network",
    "start": "1878000",
    "end": "1884320"
  },
  {
    "text": "tab and we go to dynamic i'm going to clear the console here",
    "start": "1884320",
    "end": "1891760"
  },
  {
    "text": "when i click on this i dynamically load in both the component and the script file",
    "start": "1891760",
    "end": "1898880"
  },
  {
    "text": "and that's loading in a number of different ones and we can see that so this gives us a way if we want really",
    "start": "1898880",
    "end": "1904080"
  },
  {
    "text": "fast pages we can wait till the dom the cold the page is loaded then start loading in different script files as we need",
    "start": "1904080",
    "end": "1910960"
  },
  {
    "text": "so we can have a lot of javascript but it can only get downloaded when it needs to if we're using it in this sort of",
    "start": "1910960",
    "end": "1917039"
  },
  {
    "text": "vanilla way there are compilers and we'll have a look at that for example when we have our blog the",
    "start": "1917039",
    "end": "1922640"
  },
  {
    "text": "only difference with this is basically if i do a control u and open up we can see how i split it into",
    "start": "1922640",
    "end": "1930080"
  },
  {
    "text": "two components and i've made them tightly coupled so if i wanted to put this somewhere else on the page",
    "start": "1930080",
    "end": "1935200"
  },
  {
    "text": "i can have them as separate components i've got here all posts and the post",
    "start": "1935200",
    "end": "1941679"
  },
  {
    "text": "as an example of just the form because we've seen a lot of get if we just type something here and this",
    "start": "1944960",
    "end": "1950320"
  },
  {
    "text": "is just a simple form that goes and gets some data and gets something to come back this component has a lot of",
    "start": "1950320",
    "end": "1955679"
  },
  {
    "text": "client-side validation etc if we click on that we should see adjacent web toe can come",
    "start": "1955679",
    "end": "1961760"
  },
  {
    "text": "back nothing particularly spectacular about that but it's just to show how forms can work within our web components",
    "start": "1961760",
    "end": "1968480"
  },
  {
    "text": "and there we get back our token one other thing we're talking about lazy",
    "start": "1968480",
    "end": "1973919"
  },
  {
    "text": "loading and if we look at the network here and clear it on this particular page lazy",
    "start": "1973919",
    "end": "1979600"
  },
  {
    "text": "if we scroll down i'm using the intersection observer api to kind of represent the viewport but as",
    "start": "1979600",
    "end": "1985840"
  },
  {
    "text": "we come in we can create our own tags and get various",
    "start": "1985840",
    "end": "1992399"
  },
  {
    "text": "posts or images and if we have a look at that if we go into 20 demo sites",
    "start": "1992399",
    "end": "1999600"
  },
  {
    "text": "and have a look at lazy and have a look at shall we say the",
    "start": "1999600",
    "end": "2005919"
  },
  {
    "text": "image code but me if we come further up and go to",
    "start": "2005919",
    "end": "2010960"
  },
  {
    "text": "lazy load 11 and if we have a look at lazy load image we can see all we're really doing",
    "start": "2010960",
    "end": "2017200"
  },
  {
    "text": "is actually using the intersection observer api and on the page itself when we want to",
    "start": "2017200",
    "end": "2023519"
  },
  {
    "text": "load in those images i've created my own special tag wp-lazy load",
    "start": "2023519",
    "end": "2028640"
  },
  {
    "text": "and then the picture the same for the component and straight away we can see how it's very semantic",
    "start": "2028640",
    "end": "2034320"
  },
  {
    "text": "and very declarative so coming back to this we're on to the very last one",
    "start": "2034320",
    "end": "2040720"
  },
  {
    "text": "and it's the offline page if we go to application",
    "start": "2040720",
    "end": "2048480"
  },
  {
    "text": "we will look here at indexeddb and see that what i did on the home page was load in a lot of posts and data",
    "start": "2048480",
    "end": "2055760"
  },
  {
    "text": "into the asynchronous browser-based database indexeddb with all the posts",
    "start": "2055760",
    "end": "2061599"
  },
  {
    "text": "all the different categories so when i come to this offline page and let's just have a quick look at the",
    "start": "2061599",
    "end": "2067280"
  },
  {
    "text": "offline page itself if we have a look",
    "start": "2067280",
    "end": "2071520"
  },
  {
    "text": "at we can see what we're really sort of doing is loading",
    "start": "2072839",
    "end": "2079280"
  },
  {
    "text": "for example a particular category here wp indexeddb dash read and i'm loading in a",
    "start": "2079280",
    "end": "2084878"
  },
  {
    "text": "particular category so when i come to this page here i can change between all of these they're",
    "start": "2084879",
    "end": "2091280"
  },
  {
    "text": "producing a whole range of posts and that's because it's reading from the",
    "start": "2091280",
    "end": "2097040"
  },
  {
    "text": "local database so if i come in here and go to network and go to offline",
    "start": "2097040",
    "end": "2104320"
  },
  {
    "text": "they will still work and will be literally 10 milliseconds something like that",
    "start": "2104320",
    "end": "2109760"
  },
  {
    "text": "but it won't happen with a page refresh because we would need a little service worker to do that and we do have an example of that coming",
    "start": "2109760",
    "end": "2116640"
  },
  {
    "text": "shortly so to have a quick look at that one with",
    "start": "2116640",
    "end": "2122800"
  },
  {
    "text": "uh this is the same one i've just introduced",
    "start": "2122800",
    "end": "2128839"
  },
  {
    "text": "uh basically a service worker to make it fully offline i just click through and i",
    "start": "2128839",
    "end": "2135520"
  },
  {
    "text": "load pages if we look at the application if we look down here in the cache storage",
    "start": "2135520",
    "end": "2141040"
  },
  {
    "text": "we're looking at we're storing our files so because i do pwas progressive web",
    "start": "2141040",
    "end": "2146240"
  },
  {
    "text": "apps or progressively enhanced websites what we can see is we've got our local database like a mysql",
    "start": "2146240",
    "end": "2152880"
  },
  {
    "text": "it's basically a javascript object-based database and we've got all our pages stored here",
    "start": "2152880",
    "end": "2158720"
  },
  {
    "text": "so as soon as we go offline",
    "start": "2158720",
    "end": "2162240"
  },
  {
    "text": "we can see that all those pages are still available even on refresh simply because we've loaded them into",
    "start": "2165040",
    "end": "2171599"
  },
  {
    "text": "our cache api and these are all html5 apis the cache storage and the indexeddb",
    "start": "2171599",
    "end": "2179839"
  },
  {
    "text": "so straight away if we look at the source code of this page it still once again is just web",
    "start": "2179839",
    "end": "2186400"
  },
  {
    "text": "components but with the addition of a service worker",
    "start": "2186400",
    "end": "2192240"
  },
  {
    "text": "we can cache and go have a fully offline and near instant experience and having done all",
    "start": "2192240",
    "end": "2198960"
  },
  {
    "text": "of that what this is is from a business point of view this is all wordpress",
    "start": "2198960",
    "end": "2205119"
  },
  {
    "text": "so notice that we're in html we're in a totally different stack uh not even the location the locations",
    "start": "2205119",
    "end": "2211599"
  },
  {
    "text": "on a different server and so what this means is these components could be used",
    "start": "2211599",
    "end": "2217119"
  },
  {
    "text": "as like micro apps somewhere else so we've taken a large scale monolithic application based on php",
    "start": "2217119",
    "end": "2223280"
  },
  {
    "text": "converted it to sort of html components that can interact with other enterprise apps and we're going to have a look at",
    "start": "2223280",
    "end": "2229119"
  },
  {
    "text": "that now in the second demonstration which is where we build our conference booking site",
    "start": "2229119",
    "end": "2237520"
  },
  {
    "text": "so when we come back here if we go to uh demo one my apologies this should be",
    "start": "2237920",
    "end": "2243040"
  },
  {
    "text": "demo two made little typo here we come in here to demo one uh",
    "start": "2243040",
    "end": "2248720"
  },
  {
    "text": "let's just go back i'm going to my policies little typo",
    "start": "2248720",
    "end": "2254160"
  },
  {
    "text": "demo two wpjs on the page i think they're more",
    "start": "2254160",
    "end": "2259520"
  },
  {
    "text": "accurate this here now is the kind of component that we want we've got a conference component that",
    "start": "2259520",
    "end": "2265119"
  },
  {
    "text": "when we click we get a list of all the events we might want but when we click on one",
    "start": "2265119",
    "end": "2271839"
  },
  {
    "text": "it's sending out a message and we'll have a quick look at the console we can see it's emitting events",
    "start": "2271839",
    "end": "2277920"
  },
  {
    "text": "all over the place in this particular example so we're booked",
    "start": "2277920",
    "end": "2282960"
  },
  {
    "text": "it knows which country we're going to we're going to oslo so for example on a totally different",
    "start": "2282960",
    "end": "2288800"
  },
  {
    "text": "stack it's picking out relevant flights notice how we're logging all of these events in our eventbus",
    "start": "2288800",
    "end": "2295520"
  },
  {
    "text": "component we click on that and also for example when we're going to oslo straight away it's producing some",
    "start": "2295520",
    "end": "2301920"
  },
  {
    "text": "information about places you might like to see this is the wordpress part of it",
    "start": "2301920",
    "end": "2307359"
  },
  {
    "text": "so oslo manchester you can see that's how it is and if i do a control u",
    "start": "2307359",
    "end": "2315520"
  },
  {
    "text": "and i can't do that because that's on the cell my apologies if we do that if i go into the repo i'm",
    "start": "2315520",
    "end": "2322000"
  },
  {
    "text": "now going to go into just my own repo and open that up and just to show you what the index.html",
    "start": "2322000",
    "end": "2328320"
  },
  {
    "text": "page is so these aren't different apps but these are basically if we look at our",
    "start": "2328320",
    "end": "2334320"
  },
  {
    "text": "components here i've created a lot of web components this is built in stencil and obviously i could deploy them",
    "start": "2334320",
    "end": "2340560"
  },
  {
    "text": "separately and then join them in but for a demo purposes i'm just using the one compiler so if i go to index html notice how",
    "start": "2340560",
    "end": "2348160"
  },
  {
    "text": "really the whole page is just this we have our web components",
    "start": "2348160",
    "end": "2353200"
  },
  {
    "text": "i can send in some attributes to start with i have an event listener here",
    "start": "2353200",
    "end": "2358240"
  },
  {
    "text": "and that makes the complete app so i'm going to load that up",
    "start": "2358240",
    "end": "2366480"
  },
  {
    "text": "and we're just gonna have a look at the network tab to see what it's like when we're doing all of these",
    "start": "2366800",
    "end": "2372560"
  },
  {
    "text": "requests",
    "start": "2372560",
    "end": "2375119"
  },
  {
    "text": "let's go into network",
    "start": "2379680",
    "end": "2383838"
  },
  {
    "text": "now we can see we can actually see the main components here event listener it's downloading each of the javascript",
    "start": "2386560",
    "end": "2392320"
  },
  {
    "text": "files associated with it but what is very handy with stencil when it compiles it does sort of dynamic",
    "start": "2392320",
    "end": "2398079"
  },
  {
    "text": "loading and hot loading if i comment them out for example and refresh the page we'll only get the",
    "start": "2398079",
    "end": "2405440"
  },
  {
    "text": "components we actually need and that's one of the great things of stencil as a compiler it compiles it down and just loads on",
    "start": "2405440",
    "end": "2412000"
  },
  {
    "text": "demand what is actually needed so we've seen now an example with this",
    "start": "2412000",
    "end": "2418800"
  },
  {
    "text": "of how we can use different apps each is a web component we saw in component web components.dev",
    "start": "2421040",
    "end": "2427200"
  },
  {
    "text": "how we can compile them in different ways we can now see that we have all our little micro apps which on their own are",
    "start": "2427200",
    "end": "2433119"
  },
  {
    "text": "just one individual component so when is an app a micro app when is it an app well it really depends",
    "start": "2433119",
    "end": "2439440"
  },
  {
    "text": "whether it's part of a more complex system or whether it's functioning on its own in this particular example",
    "start": "2439440",
    "end": "2453838"
  },
  {
    "text": "so converting frameworks to web components well we saw in webcomponents.dev before how we",
    "start": "2454000",
    "end": "2459920"
  },
  {
    "text": "could do that for example with react so it's well established so all kind of basically frameworks have",
    "start": "2459920",
    "end": "2466319"
  },
  {
    "text": "ways of creating a web component wrapper around it it will mean that when you're",
    "start": "2466319",
    "end": "2472560"
  },
  {
    "text": "deploying them you will have the framework javascript file as well but you can dynamically load that in",
    "start": "2472560",
    "end": "2479440"
  },
  {
    "text": "and we can deploy this either in html pages as we've been seeing in the repo just with the javascript file and the",
    "start": "2479440",
    "end": "2485760"
  },
  {
    "text": "tag we can deploy them to npm and then use them in our packages",
    "start": "2485760",
    "end": "2494960"
  },
  {
    "text": "and we can also export all our apps as web components so that they can interact with each other",
    "start": "2494960",
    "end": "2502880"
  },
  {
    "text": "so if we go back to the demo and if we come back i'm going to escape out of here so i can predict",
    "start": "2503520",
    "end": "2509200"
  },
  {
    "text": "things we've seen for example how when we have web components we can place them anywhere they're",
    "start": "2509200",
    "end": "2515440"
  },
  {
    "text": "universal html and we've seen an example really of how we can have various different micro apps",
    "start": "2515440",
    "end": "2522240"
  },
  {
    "text": "that they have their own site their own database would function as their own app in their own right",
    "start": "2522240",
    "end": "2527280"
  },
  {
    "text": "but when placed in an html page can through configuration interact with other apps",
    "start": "2527280",
    "end": "2534640"
  },
  {
    "text": "and what we've seen really is how web components almost enable us to have a form of pseudo code that really we can",
    "start": "2534960",
    "end": "2542400"
  },
  {
    "text": "have a long sentence list if we like have our own custom attributes and it becomes very det declarative",
    "start": "2542400",
    "end": "2549200"
  },
  {
    "text": "and also when these components have been thoroughly tested it really means we can just rely on them put them in change attributes have a",
    "start": "2549200",
    "end": "2556400"
  },
  {
    "text": "little config file and generally i tend to find is you can pass objects and arrays in here",
    "start": "2556400",
    "end": "2562079"
  },
  {
    "text": "what i tend to do is if i want to pass a lot of information in one thing i json stringify an object for the",
    "start": "2562079",
    "end": "2568319"
  },
  {
    "text": "simple reason is if we're watching a lot of these attributes we don't want to repeat ourselves if we're doing like a min max",
    "start": "2568319",
    "end": "2574640"
  },
  {
    "text": "that it will do maybe a fetch request twice it'd be better to pass it in once and process it there",
    "start": "2574640",
    "end": "2580240"
  },
  {
    "text": "but we can see how we can create really from pseudo code a whole application",
    "start": "2580240",
    "end": "2586800"
  },
  {
    "text": "and once again just to remind ourselves that this is just html5 it is the html element class that we've",
    "start": "2588079",
    "end": "2595040"
  },
  {
    "text": "extended we've seen that code",
    "start": "2595040",
    "end": "2599200"
  },
  {
    "text": "and we can also use props down that's the key way that's probably the preferred way of props down",
    "start": "2603440",
    "end": "2611040"
  },
  {
    "text": "and then events up and we've had a look at that to see how those actually work in our little repo",
    "start": "2611040",
    "end": "2617599"
  },
  {
    "text": "and we can see now actually if we want if we're just creating our own app and it's not necessary that we have to prepare it for third party use",
    "start": "2617599",
    "end": "2624240"
  },
  {
    "text": "how we have many different ways that each of these html tags can interact with each other we can listen to events with payloads we",
    "start": "2624240",
    "end": "2631200"
  },
  {
    "text": "can expose methods and properties of our component we have the children slots if we want to",
    "start": "2631200",
    "end": "2638079"
  },
  {
    "text": "we can actually access other components either by emitting a custom event and payload",
    "start": "2638079",
    "end": "2643200"
  },
  {
    "text": "or accessing methods or and we have as i say a general scheme of parent and child so",
    "start": "2643200",
    "end": "2649200"
  },
  {
    "text": "we wouldn't directly talk to siblings with components it'd be more the parent child framework",
    "start": "2649200",
    "end": "2654720"
  },
  {
    "text": "fully self-supported we've seen the shadow dom that's the key",
    "start": "2654720",
    "end": "2660079"
  },
  {
    "text": "area how it encapsulates it so that css doesn't bleed out and we can pass in css from the outside",
    "start": "2660079",
    "end": "2666640"
  },
  {
    "text": "if we have like enterprise style sheets in many different ways which are outlined in the repo and in the video series for",
    "start": "2666640",
    "end": "2672640"
  },
  {
    "text": "later use we've seen how can web components are out in the wild they estimate that about five percent of",
    "start": "2672640",
    "end": "2679440"
  },
  {
    "text": "web pages have web components and as you say salesforce has their lightning web",
    "start": "2679440",
    "end": "2684560"
  },
  {
    "text": "components all of their products work on this system",
    "start": "2684560",
    "end": "2691119"
  },
  {
    "text": "so your good references that you've got is webcomponents.org that has all the information custom elements everywhere to show you",
    "start": "2691119",
    "end": "2697440"
  },
  {
    "text": "how they kind of interact with frameworks we had a look at webcomponents.dev to see all the different libraries and",
    "start": "2697440",
    "end": "2703359"
  },
  {
    "text": "tools that there are boiler plates that one can use and we saw our demonstrations of our different",
    "start": "2703359",
    "end": "2709119"
  },
  {
    "text": "business cases we had a walkthrough of web components we saw how we took a big php monolith",
    "start": "2709119",
    "end": "2715760"
  },
  {
    "text": "and actually made a set of micro apps that could be deployed away from a php stack into html",
    "start": "2715760",
    "end": "2722640"
  },
  {
    "text": "and then we had a look at how we could use a lot of different web components as micro apps or micro services to form",
    "start": "2722640",
    "end": "2729040"
  },
  {
    "text": "a big enterprise application and finally we did have a look at",
    "start": "2729040",
    "end": "2734800"
  },
  {
    "text": "deployment we've expressed how we can do that it's npm packages they get imported in",
    "start": "2734800",
    "end": "2740160"
  },
  {
    "text": "each of the frameworks will have a little extra few lines of being able to reference the web",
    "start": "2740160",
    "end": "2745440"
  },
  {
    "text": "components usually it's accessing the define component tag of javascript",
    "start": "2745440",
    "end": "2750960"
  },
  {
    "text": "but they're usually well documented and if we see here in stencil if we have a quick look at that we can",
    "start": "2750960",
    "end": "2758240"
  },
  {
    "text": "see that that is very well documented",
    "start": "2758240",
    "end": "2761839"
  },
  {
    "text": "framework integrations it gives on how to do them and i should also say that web",
    "start": "2771839",
    "end": "2776880"
  },
  {
    "text": "components are compatible static site generation server side rendering full",
    "start": "2776880",
    "end": "2782720"
  },
  {
    "text": "accessibility and google does actually search all components with javascript",
    "start": "2782720",
    "end": "2788079"
  },
  {
    "text": "so you do have seo facilities with that so i'd like to end the talk there i'm open",
    "start": "2788079",
    "end": "2793280"
  },
  {
    "text": "to any questions and i do hope that you've enjoyed finding out about web components",
    "start": "2793280",
    "end": "2798640"
  },
  {
    "text": "and how it is a wonderful way to encapsulate all your data and the only thing i should say not",
    "start": "2798640",
    "end": "2804000"
  },
  {
    "text": "being a ui person this whole page actually has ui components if we look up here the nav",
    "start": "2804000",
    "end": "2810319"
  },
  {
    "text": "bar i was able to wrap all of that into the nav bar and the back to top",
    "start": "2810319",
    "end": "2815680"
  },
  {
    "text": "so you can actually have your ui components as you wish already in uh",
    "start": "2815680",
    "end": "2821839"
  },
  {
    "text": "components but i've been basically focusing on the micro app version of web components so that's me",
    "start": "2821839",
    "end": "2828400"
  },
  {
    "text": "thank you very much for listening i'm open to any questions do help yourself to the repo and the video series that",
    "start": "2828400",
    "end": "2834000"
  },
  {
    "text": "goes through to teach you how to do web components very good resources all over the place and they're listed in the repo",
    "start": "2834000",
    "end": "2840079"
  },
  {
    "text": "and if you ever have any questions later on do email me i'll be glad to help so thank you very",
    "start": "2840079",
    "end": "2845520"
  },
  {
    "text": "much for listening",
    "start": "2845520",
    "end": "2858800"
  },
  {
    "text": "you",
    "start": "2858800",
    "end": "2860880"
  }
]