[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "so welcome my name is Serge Ibaka from I'm dev lead at Microsoft they're",
    "start": "6340",
    "end": "11809"
  },
  {
    "text": "working in this project for many years first in Microsoft research now in Prada group so it's very dear to my heart and",
    "start": "11809",
    "end": "18200"
  },
  {
    "text": "welcome from rainy Seattle to sunny city as I was thinking that most of the",
    "start": "18200",
    "end": "26450"
  },
  {
    "text": "people here will be from Australia New Zealand I was thinking maybe I should change the title and look at this tweet",
    "start": "26450",
    "end": "31759"
  },
  {
    "text": "at some point then I decided to keep it as is",
    "start": "31759",
    "end": "36790"
  },
  {
    "text": "otherwise the message may not be as positive so when we talk about",
    "start": "36790",
    "end": "42250"
  },
  {
    "text": "halo scale I didn't want to explain it so I thought I would cheat and just play media wear hoops so more is playing so",
    "start": "42250",
    "end": "49700"
  },
  {
    "text": "much better than I can so let's wake you up and I'm gonna cover that piece",
    "start": "49700",
    "end": "56320"
  },
  {
    "start": "55000",
    "end": "107000"
  },
  {
    "text": "halo is a rich immersive story with millions of loyal and dedicated fans we",
    "start": "56489",
    "end": "61860"
  },
  {
    "text": "deliver an exciting and engaging experience to these fans they need to know what the hot playlist is today they",
    "start": "61860",
    "end": "67890"
  },
  {
    "text": "need to know what the challenges are they need to know where their friends have been what their friends have been playing have their friends got more",
    "start": "67890",
    "end": "73080"
  },
  {
    "text": "medals than them they need to know all of this and they need to react to it to interact with their friends in real time we need to deliver harness to the",
    "start": "73080",
    "end": "79800"
  },
  {
    "text": "thousands of updates per second to millions of players across the Halo universe we need to get in the right",
    "start": "79800",
    "end": "84990"
  },
  {
    "text": "information at the right device at the right time there was nothing off the shelf that solved the problems we needed",
    "start": "84990",
    "end": "90690"
  },
  {
    "text": "to solve at the scale meaning to dissolve so we need turned to Microsoft's extreme computing hundreds",
    "start": "90690",
    "end": "96450"
  },
  {
    "text": "of thousands of requests per second across thousands of servers in real time these guys are crazy but in the stream",
    "start": "96450",
    "end": "102960"
  },
  {
    "text": "computing those are the kind of challenges will like to tackle yeah we made this video couple years ago",
    "start": "102960",
    "end": "109740"
  },
  {
    "start": "107000",
    "end": "168000"
  },
  {
    "text": "when I was still in Microsoft Research and you can tell by a lot of hair I had",
    "start": "109740",
    "end": "114960"
  },
  {
    "text": "that teenager keeps teasing me um so I like it because whoo packing in two",
    "start": "114960",
    "end": "120240"
  },
  {
    "text": "minutes explains what the scale challenges they had to deal with and and that's how the collaboration started and",
    "start": "120240",
    "end": "125340"
  },
  {
    "text": "right now hoop is actually technology advisor to the CEO of the company is such an Adela please brilliant guy um so",
    "start": "125340",
    "end": "132480"
  },
  {
    "text": "we're gonna be talking about the cloud but we're also gonna be playing named it you in game who knows name the tune",
    "start": "132480",
    "end": "139070"
  },
  {
    "text": "okay so if you see sentence and quotes in in a part it's",
    "start": "139070",
    "end": "145620"
  },
  {
    "text": "right corner if you know the song is from our or who played it just yell and you'll get a point and whoever gets more",
    "start": "145620",
    "end": "152790"
  },
  {
    "text": "points we get a prize the beer at the party so anybody knows just the power to",
    "start": "152790",
    "end": "158549"
  },
  {
    "text": "charm David Bowie okay I win the point",
    "start": "158549",
    "end": "167959"
  },
  {
    "start": "168000",
    "end": "279000"
  },
  {
    "text": "so the cloud right that's what we're all talking about and people have different",
    "start": "168440",
    "end": "173790"
  },
  {
    "text": "definitions and and whatnot but really it's about this power of renting hardware at will so these power",
    "start": "173790",
    "end": "180810"
  },
  {
    "text": "resources used to be available only to big corporations multi-billion dollar corporations or two governments now are",
    "start": "180810",
    "end": "186900"
  },
  {
    "text": "available to everyone so long as you have a credit card and limit their you can just rent infinite amount of",
    "start": "186900",
    "end": "193620"
  },
  {
    "text": "resources so it's great power that is available to us but with great power as they say",
    "start": "193620",
    "end": "198750"
  },
  {
    "text": "comes great responsibility so we started seeing all these challenges how do you program for for this powerful platform",
    "start": "198750",
    "end": "204660"
  },
  {
    "text": "so you have to distribute your computations you have to deal with concurrency at that scale and and who",
    "start": "204660",
    "end": "210000"
  },
  {
    "text": "enjoys debugging multi-threaded data rates code anybody okay there's some",
    "start": "210000",
    "end": "216300"
  },
  {
    "text": "people like that's how Aaron you enjoy it I don't so when you extend this problem into",
    "start": "216300",
    "end": "222660"
  },
  {
    "text": "debugging across a set of machines where you can actually debug there you get a look at the bunch of logs and trying to",
    "start": "222660",
    "end": "227850"
  },
  {
    "text": "figure out what happened it's not supposed to happen it's impossible that's kind of our normal state of is engineers we're gonna this isn't",
    "start": "227850",
    "end": "233459"
  },
  {
    "text": "impossible and I'm trying to figure this out but also with the scale failures",
    "start": "233459",
    "end": "238590"
  },
  {
    "text": "have just happened routinely what used to be a rare occasion now the Machine decided to reboot order it as far as",
    "start": "238590",
    "end": "244530"
  },
  {
    "text": "hardware failure or your cloud providers I did is something things happen and your code needs to",
    "start": "244530",
    "end": "251100"
  },
  {
    "text": "work correctly but those expectations have changed so we're not now when I see that banker and I log into my bank and",
    "start": "251100",
    "end": "256859"
  },
  {
    "text": "trying to look something up and it says we're down for maintenance this is very rare now like it's it's very strange I'm",
    "start": "256859",
    "end": "263370"
  },
  {
    "text": "get frustrated it used to be the norm every Saturday they just shut it down and say anymore down for maintenance now people expand expect that your services",
    "start": "263370",
    "end": "271140"
  },
  {
    "text": "your application that available 24 hours seven days a week 365 days a year and so we we deal with",
    "start": "271140",
    "end": "279650"
  },
  {
    "start": "279000",
    "end": "457000"
  },
  {
    "text": "challenges how to build this kind of systems that the resilient powerful scalable and and this is where",
    "start": "279650",
    "end": "286800"
  },
  {
    "text": "businesses hear the cacophony of messages from various consultants and analysts and they give all these stories",
    "start": "286800",
    "end": "293669"
  },
  {
    "text": "trying to sell you on something so like my favorite example is PHP my sequel and",
    "start": "293669",
    "end": "299700"
  },
  {
    "text": "say Facebook was built with PHP in sequel in my sequel that means you can build anything like there's a solution",
    "start": "299700",
    "end": "304919"
  },
  {
    "text": "just use PHP and simple soap was a similar solution before where we just",
    "start": "304919",
    "end": "310080"
  },
  {
    "text": "build web services on so protocol and everything this brilliantly works so they keep coming up with new solutions",
    "start": "310080",
    "end": "316050"
  },
  {
    "text": "that go right is the new things language docker was really go everyone is right",
    "start": "316050",
    "end": "322560"
  },
  {
    "text": "and go and of course as you experience a generous no never there is a solution that solves everything so they're trying",
    "start": "322560",
    "end": "329500"
  },
  {
    "text": "to sell you on this elevator to the cloud called wonkavator if you watched Willy Wonka and the Chocolate Factory",
    "start": "329500",
    "end": "336040"
  },
  {
    "text": "this is a pin out button so you just push the button you're up in the cloud it's magic wonkavator",
    "start": "336040",
    "end": "342180"
  },
  {
    "text": "but here it's like oh you need to be stateless and some money savings and people make and some observations that",
    "start": "342180",
    "end": "349030"
  },
  {
    "text": "the good term micro sources get abused so fast that everything is micro sources now unless you do micro services nothing",
    "start": "349030",
    "end": "356140"
  },
  {
    "text": "will work and this is my favorite one from 2010 when you major fully wrote",
    "start": "356140",
    "end": "361690"
  },
  {
    "text": "that the release will be a solution for all cloud problems I always thank Mary Jo they see this quote",
    "start": "361690",
    "end": "368970"
  },
  {
    "text": "you look at this but then you see this picture who has heard the calc is Barry",
    "start": "369540",
    "end": "374770"
  },
  {
    "text": "talk--i Jepsen told me maybe ok almost nobody I would encourage you",
    "start": "374770",
    "end": "382330"
  },
  {
    "text": "go to youtube search for Kyle's start it's a brilliant talk brilliant guy who took a beefy machine in his apartment he",
    "start": "382330",
    "end": "389620"
  },
  {
    "text": "do not run a bunch of DMS and took commercially available open source databases and then cash systems like",
    "start": "389620",
    "end": "399090"
  },
  {
    "text": "elasticsearch MongoDB and show that in certain conditions when you start cutting",
    "start": "399090",
    "end": "404740"
  },
  {
    "text": "artificially and network connections between these virtual machines they really don't deliver the getting his acclaim they deliver so he started",
    "start": "404740",
    "end": "411210"
  },
  {
    "text": "posting this blog post called me me about this technology in that technology and suddenly this single guy became very",
    "start": "411210",
    "end": "418150"
  },
  {
    "text": "famous in leadership in systems community because he showed that look this is the proof that new technology doesn't do what to do and people had",
    "start": "418150",
    "end": "424690"
  },
  {
    "text": "different reactions to that so yeah this picture were at the top you have this",
    "start": "424690",
    "end": "430480"
  },
  {
    "text": "brain beause of the API is everything is fine there you have rainbows and unicorns but underneath a look under you",
    "start": "430480",
    "end": "436600"
  },
  {
    "text": "see the tire fire that the databases storage layer nothing really works the way you expect the way you promised so",
    "start": "436600",
    "end": "442900"
  },
  {
    "text": "this is the challenge of the businesses of CIOs of CEOs of how to deal with this",
    "start": "442900",
    "end": "448570"
  },
  {
    "text": "complexity all that Google it Carol all that gluten is gold anybody knows",
    "start": "448570",
    "end": "453780"
  },
  {
    "text": "you know points yes thank you all drink beer together",
    "start": "453780",
    "end": "460530"
  },
  {
    "start": "457000",
    "end": "511000"
  },
  {
    "text": "so this is how I look at it so this magic triangle fill it up they have",
    "start": "460530",
    "end": "466150"
  },
  {
    "text": "compute and concerns state concerns and connectivity concerns there is trade-offs so who are you what have you",
    "start": "466150",
    "end": "473620"
  },
  {
    "text": "sacrificed baby knows from Jesus Christ Superstar so the point is",
    "start": "473620",
    "end": "480130"
  },
  {
    "text": "to get something you need to sacrifice something you have this cap theorem that",
    "start": "480130",
    "end": "485139"
  },
  {
    "text": "sort of reigns over the whole picture it's also it tells you when you do any distributed systems we have network",
    "start": "485139",
    "end": "491440"
  },
  {
    "text": "partitions guaranteed either real network partitions or or GC collections and machines rebooted you'll have",
    "start": "491440",
    "end": "497050"
  },
  {
    "text": "partitions and you cannot get consistency and availability at the same time so you have to choose and you have",
    "start": "497050",
    "end": "504130"
  },
  {
    "text": "to make all this trade-offs as you build in the system that's the reality so how",
    "start": "504130",
    "end": "509319"
  },
  {
    "text": "do we deal with this this is one way so your hire would call",
    "start": "509319",
    "end": "514479"
  },
  {
    "start": "511000",
    "end": "615000"
  },
  {
    "text": "hero developers or in Microsoft and FD we used to call them Einstein level",
    "start": "514479",
    "end": "519849"
  },
  {
    "text": "developers in this taxonomy so these people can't solve this problem somebody built Google somebody built Facebook so",
    "start": "519849",
    "end": "526660"
  },
  {
    "text": "I'm rebuilding being an MSN and Skype all the systems it is possible to build you can write C++ code to make it work",
    "start": "526660",
    "end": "534300"
  },
  {
    "text": "but if you try to hide his developers and realistically I think you have a problem a cool nose Erlang in the",
    "start": "534300",
    "end": "542649"
  },
  {
    "text": "audience who used or lank never okay Errin scowl up a little bit okay couple of",
    "start": "542649",
    "end": "551380"
  },
  {
    "text": "people I F sharp more still a minority right so all these here developers",
    "start": "551380",
    "end": "558100"
  },
  {
    "text": "they're great I have utmost respect today their knowledge of these technologies the ability to build system",
    "start": "558100",
    "end": "564040"
  },
  {
    "text": "but if you look at from the business perspective you try to hire these people they all happily employed the old solving very interesting hard problems",
    "start": "564040",
    "end": "571120"
  },
  {
    "text": "they're well compensated for that and if you start a company trying to hire all Ohio developers you either run out of",
    "start": "571120",
    "end": "576730"
  },
  {
    "text": "budget or you just won't be able to attract them to your company that's the reality but even these people make",
    "start": "576730",
    "end": "583420"
  },
  {
    "text": "mistakes if you look at history of properties like Facebook or LinkedIn Twitter use that they really ejected",
    "start": "583420",
    "end": "591220"
  },
  {
    "text": "their system three four times as the load grows as the popularity grew and we are detected not just refactor",
    "start": "591220",
    "end": "597940"
  },
  {
    "text": "not just kind of patch it they had to rip and replace everything it's very risky so your business is growing user",
    "start": "597940",
    "end": "604660"
  },
  {
    "text": "base multiplies and you have to go and ripple and plays the whole thing it's a",
    "start": "604660",
    "end": "610120"
  },
  {
    "text": "very dangerous even with hearing developers that's a risky proposition but business people look at it this way",
    "start": "610120",
    "end": "616089"
  },
  {
    "start": "615000",
    "end": "700000"
  },
  {
    "text": "they need time to market you need return on investment and they can see the cost those are capex and OPEX what's gonna",
    "start": "616089",
    "end": "622180"
  },
  {
    "text": "cost me what did I get for this that's why I thought about stay away as",
    "start": "622180",
    "end": "627880"
  },
  {
    "text": "the real practical analogy what we need we don't need a wonkavator with popping",
    "start": "627880",
    "end": "634120"
  },
  {
    "text": "out button we don't want to climb the ropes like the heroes can we need something that is practical and usable",
    "start": "634120",
    "end": "639430"
  },
  {
    "text": "by very mobile sites like ourselves and that's what this business requirements",
    "start": "639430",
    "end": "645580"
  },
  {
    "text": "see translated into developer productivity and linear scalability that if your business grows you expenses girl",
    "start": "645580",
    "end": "652630"
  },
  {
    "text": "linearly ideally subliminally but it was literally not faster than your user base",
    "start": "652630",
    "end": "658020"
  },
  {
    "text": "need to be efficient at the scale because if you spent 2 times more power",
    "start": "658020",
    "end": "663790"
  },
  {
    "text": "cycles you spend 2 minus 2 times more money for that and like this quote from",
    "start": "663790",
    "end": "670140"
  },
  {
    "text": "Alice in Wonderland and it says it takes all the rain you can do to keep in the",
    "start": "670140",
    "end": "675190"
  },
  {
    "text": "same place if you want to get somewhere else you need to run at least twice as fast because this analogy is you're in",
    "start": "675190",
    "end": "682390"
  },
  {
    "text": "competition other companies running as you walk in they may be running so if you walk in one day iran you'll lose the",
    "start": "682390",
    "end": "688570"
  },
  {
    "text": "competition so you have to move fast you have to be cheap you have to be efficient you have this humming and in one go but",
    "start": "688570",
    "end": "696940"
  },
  {
    "text": "he knows this is how we've been building services",
    "start": "696940",
    "end": "704260"
  },
  {
    "start": "700000",
    "end": "762000"
  },
  {
    "text": "and websites for I guess almost two decades now this picture should be familiar to everyone like three-tier",
    "start": "704260",
    "end": "710020"
  },
  {
    "text": "ante architecture right so you have stateless front ends that terminate client connections they they do HTTP",
    "start": "710020",
    "end": "717089"
  },
  {
    "text": "termination they do admission control they do DDoS protection syndication all of that and then forward",
    "start": "717089",
    "end": "724150"
  },
  {
    "text": "request in the middle tier can be single layer multiple layers doesn't matter your middle tier also stateless and then",
    "start": "724150",
    "end": "731350"
  },
  {
    "text": "you have storage were actual data leaves so request arrives it's beautiful model very simple you can add servers and",
    "start": "731350",
    "end": "737260"
  },
  {
    "text": "scales easily request arrives it goes to storage say give me his user profile apply an update user profile right back",
    "start": "737260",
    "end": "744280"
  },
  {
    "text": "to storage great they're easy to reason about very easy to build until you run",
    "start": "744280",
    "end": "749590"
  },
  {
    "text": "out of your storage capacity because storage especially databases lexical Oracle they have limited",
    "start": "749590",
    "end": "755910"
  },
  {
    "text": "throughput so at some point he overwhelmed the storage by going to it for every single transaction",
    "start": "755910",
    "end": "761550"
  },
  {
    "text": "all solution was for we now put cash in the middle like",
    "start": "761550",
    "end": "767200"
  },
  {
    "start": "762000",
    "end": "824000"
  },
  {
    "text": "Redis memcache D so instead of going to storage you go there only first time",
    "start": "767200",
    "end": "772870"
  },
  {
    "text": "then you put data into your cache layer and then when you need the operation to perform an operation on data you get it",
    "start": "772870",
    "end": "778810"
  },
  {
    "text": "from a cache not from storage brilliant third would multiplies easily",
    "start": "778810",
    "end": "784060"
  },
  {
    "text": "the problem now is that you dealing with two storages they have cold storage the real source of truth and they have cache",
    "start": "784060",
    "end": "789850"
  },
  {
    "text": "and whenever you do an update you need to update your cold storage in updated cache or invalidate the cache and I",
    "start": "789850",
    "end": "796210"
  },
  {
    "text": "think there's this famous saying that there are two hard problems in these pivot systems the naming and cache",
    "start": "796210",
    "end": "801250"
  },
  {
    "text": "invalidation so you get a solution that solves one part of the problem but introducing another you lose all",
    "start": "801250",
    "end": "807550"
  },
  {
    "text": "semantic guarantees or which is actual guarantees of your storage like a single database that you lose together this performance",
    "start": "807550",
    "end": "816180"
  },
  {
    "text": "without the fire Queen I keep main points",
    "start": "816180",
    "end": "823440"
  },
  {
    "text": "so I would argue that we want to put the stateful middle tier in the middle so",
    "start": "823880",
    "end": "829220"
  },
  {
    "text": "instead of having this stateless middle tier and cash later we want to combine them and glue together and have it",
    "start": "829220",
    "end": "835880"
  },
  {
    "text": "managed it is one and the same we could be so good together nobody else the doors",
    "start": "835880",
    "end": "844899"
  },
  {
    "text": "this is how we approach it so we started building the middle tier and who knows",
    "start": "844899",
    "end": "850759"
  },
  {
    "text": "about the actor model okay it's good it's about half the people if not more excellent for those",
    "start": "850759",
    "end": "857240"
  },
  {
    "start": "851000",
    "end": "963000"
  },
  {
    "text": "who don't know actors think of them as isolated distributed objects there is objects that do not share state they",
    "start": "857240",
    "end": "863149"
  },
  {
    "text": "don't allow to touch the state directly instead they receive messages they can send messages to other actors so actors",
    "start": "863149",
    "end": "869899"
  },
  {
    "text": "can talk to other actors to messages and they can create other actors in the",
    "start": "869899",
    "end": "875389"
  },
  {
    "text": "system it was invented in 1973 by Carl Hewitt and his colleagues and the",
    "start": "875389",
    "end": "881360"
  },
  {
    "text": "context was very different at the time the context was they needed the concurrency control model for AEI to simulate this",
    "start": "881360",
    "end": "888069"
  },
  {
    "text": "energies interacting with each other in the complex in complex way it was purely",
    "start": "888069",
    "end": "893149"
  },
  {
    "text": "concurrency control for a single machine in the 70s didn't have the cloud do you have clusters",
    "start": "893149",
    "end": "899139"
  },
  {
    "text": "but interestingly it got rediscovered in the late 80s I believe early 90s at",
    "start": "899139",
    "end": "904790"
  },
  {
    "text": "their exam it was implemented Erlang and that's where what sort of popularized",
    "start": "904790",
    "end": "910579"
  },
  {
    "text": "active model that people start using Erlang to control Ericsson the user to",
    "start": "910579",
    "end": "915649"
  },
  {
    "text": "control a telco equipment have a backplane management back playing for it but if",
    "start": "915649",
    "end": "923149"
  },
  {
    "text": "you think of it in the cloud case it's the XML has a very same property because if actors talk to each other through",
    "start": "923149",
    "end": "929779"
  },
  {
    "text": "messages they don't really care if they're on the same machine the same process or on two different machines so",
    "start": "929779",
    "end": "935180"
  },
  {
    "text": "it makes it very easy to distribute them and still have exchanged messages to give the same model with isolation with",
    "start": "935180",
    "end": "941899"
  },
  {
    "text": "the tight control encapsulation state but now you can put them in a distributed setting and",
    "start": "941899",
    "end": "948519"
  },
  {
    "text": "you probably know like what's up was written at the back end of what suppose being in or like for this very reason",
    "start": "948519",
    "end": "954500"
  },
  {
    "text": "it's very efficient and very easy to scale so we used",
    "start": "954500",
    "end": "959530"
  },
  {
    "text": "if the actor model is the base for for leans but here's what we had his goals",
    "start": "959530",
    "end": "966290"
  },
  {
    "start": "963000",
    "end": "1090000"
  },
  {
    "text": "when we started the release project so we wanted to have a program model that is called natively easier than what we",
    "start": "966290",
    "end": "973610"
  },
  {
    "text": "have today not just improved developer activity by 10% 20% 30% but try to",
    "start": "973610",
    "end": "978620"
  },
  {
    "text": "improve by 3x 5x ideally 10x that was the goal but the same time we didn't",
    "start": "978620",
    "end": "984500"
  },
  {
    "text": "want it to be kind of simplistic that expert developers experience as you say no it's it's too simple I cannot use it",
    "start": "984500",
    "end": "990860"
  },
  {
    "text": "because it limits me so it needs to be simple yet flexible and powerful that was on the programming model side and",
    "start": "990860",
    "end": "996410"
  },
  {
    "text": "the only way we knew how to make developers more productive is that you make them write less code it's really",
    "start": "996410",
    "end": "1002710"
  },
  {
    "text": "the best code you can write is the code you don't write paradoxically because that the code that doesn't have bugs right the more code we write the more",
    "start": "1002710",
    "end": "1008860"
  },
  {
    "text": "work we need to do the more we need to maintain and box to eliminate on the",
    "start": "1008860",
    "end": "1013870"
  },
  {
    "text": "code so if we can qualitatively reduce the amount of code engineers write without constrain them entirely into",
    "start": "1013870",
    "end": "1020710"
  },
  {
    "text": "like toy model we do you want to say we didn't want people to say this is the VB",
    "start": "1020710",
    "end": "1025959"
  },
  {
    "text": "for the cloud there was another goal even though I have nothing against VP it's a good thing well this conversation",
    "start": "1025960",
    "end": "1032949"
  },
  {
    "text": "people have so at the same time we want it to be scalable both by default and by that means like learning from the",
    "start": "1032950",
    "end": "1039400"
  },
  {
    "text": "experience of the successful properties when they grow their business and they have to rip and replace when have the",
    "start": "1039400",
    "end": "1044439"
  },
  {
    "text": "model where you billet wants and kind of works even if your business grows by 10x",
    "start": "1044440",
    "end": "1049930"
  },
  {
    "text": "100x and nearly a thousand x you may need to tweak a few things may need to change some of the pieces but you should",
    "start": "1049930",
    "end": "1057070"
  },
  {
    "text": "need to throw away and replace the whole solution those are goals and to scale you need",
    "start": "1057070",
    "end": "1064630"
  },
  {
    "text": "you should not have bottlenecks in the system that it shouldn't be any single point of failure and things like that",
    "start": "1064630",
    "end": "1070860"
  },
  {
    "text": "but in reality most of the patterns and practices in the disabled space they",
    "start": "1070860",
    "end": "1076360"
  },
  {
    "text": "were invented in 70s and 60s sometimes in 80s there's nothing new Under the Sun in the space so really it's in the",
    "start": "1076360",
    "end": "1082750"
  },
  {
    "text": "encapsulation of known best practices we took well people already knew already proved and then put it in a different",
    "start": "1082750",
    "end": "1088360"
  },
  {
    "text": "package with a different approach and this is what we called it the approach calling virtual address we didn't come",
    "start": "1088360",
    "end": "1094830"
  },
  {
    "start": "1090000",
    "end": "1392000"
  },
  {
    "text": "up with the name until much later we just we implement the model through try and enter have several versions in",
    "start": "1094830",
    "end": "1101550"
  },
  {
    "text": "the prototypes and then we eventually came up with this model then much later for the paper that we published that we",
    "start": "1101550",
    "end": "1108150"
  },
  {
    "text": "called virtual actors and we call our actors grains the reason for that is that our actors in Orleans are so",
    "start": "1108150",
    "end": "1114600"
  },
  {
    "text": "different from actors in Erlang and and Acker which is going to JDM : essentially of",
    "start": "1114600",
    "end": "1121040"
  },
  {
    "text": "for length so why don't you have a different term even and find out one we",
    "start": "1121040",
    "end": "1126090"
  },
  {
    "text": "just published and release the code the first reaction from the actor model community was this they're not is not",
    "start": "1126090",
    "end": "1132630"
  },
  {
    "text": "actor model you don't have supervision geez you don't have all those things that we expect from your line or like",
    "start": "1132630",
    "end": "1138030"
  },
  {
    "text": "and we had to explain it really those properties and our properties of the action model this is just a relaxed implementation of it",
    "start": "1138030",
    "end": "1143900"
  },
  {
    "text": "so the key about virtual actors that day logical they can always exists virtually",
    "start": "1143900",
    "end": "1150270"
  },
  {
    "text": "the analogy is like virtual memory when you have a page file and your code tries",
    "start": "1150270",
    "end": "1156060"
  },
  {
    "text": "to update a element in the array you never call it and say for this item when",
    "start": "1156060",
    "end": "1162120"
  },
  {
    "text": "my array is the page memory page in memory or is it in page file and it's not an in memory load please for me from",
    "start": "1162120",
    "end": "1168660"
  },
  {
    "text": "the page file you don't do that you just say I want to update this item in memory",
    "start": "1168660",
    "end": "1173880"
  },
  {
    "text": "and it's not for existing businesses they are having the memory updated oh no I don't have this page I need to load",
    "start": "1173880",
    "end": "1179100"
  },
  {
    "text": "from page file and then your update execute execute so you kind of program against the whole virtual memory space",
    "start": "1179100",
    "end": "1185370"
  },
  {
    "text": "and you don't care where a page file is or what pages are so it's a similar idea",
    "start": "1185370",
    "end": "1191160"
  },
  {
    "text": "here so idea is that you program against virtual actors they kind of always available you can always make a call to",
    "start": "1191160",
    "end": "1197430"
  },
  {
    "text": "any action you never create them you never delete them and how we arrive to this as we started working with the halo",
    "start": "1197430",
    "end": "1203820"
  },
  {
    "text": "people we initially had the same kind of standard thing we create a grain and you delete a grain and the biggest problem",
    "start": "1203820",
    "end": "1210270"
  },
  {
    "text": "is we have concurrency so you have say three front as a receive requests in parallel for the same actor in the",
    "start": "1210270",
    "end": "1216120"
  },
  {
    "text": "system so the first thing they need to do you need to call some registry and say you have an actor for user X and",
    "start": "1216120",
    "end": "1221520"
  },
  {
    "text": "they all get no an actor in the system for user X so all three of them independently said we need to create an",
    "start": "1221520",
    "end": "1227400"
  },
  {
    "text": "accurate for user X when you decide where to place this actual user X they need to register this actor fuser X in",
    "start": "1227400",
    "end": "1232830"
  },
  {
    "text": "this registry and they all do it concurrently and all but one should fail and fail gracefully and sorry using the",
    "start": "1232830",
    "end": "1238920"
  },
  {
    "text": "actor that the winner registered so you have to write all this code any application code that's what we",
    "start": "1238920",
    "end": "1244550"
  },
  {
    "text": "discovered we saw and later we heard that that was the biggest complaint from Erlang developers that they have to this",
    "start": "1244550",
    "end": "1251640"
  },
  {
    "text": "coordination of creation of actor is not really trivial because need to have this registry it needs to be playing it",
    "start": "1251640",
    "end": "1257430"
  },
  {
    "text": "correctly and it needs to scale and needs to be reliable always properties so we said ok we'll do differently you",
    "start": "1257430",
    "end": "1265890"
  },
  {
    "text": "can program against every actor in the system is if it's always in memory that's why it's virtual it's always available it does need to be created it",
    "start": "1265890",
    "end": "1273450"
  },
  {
    "text": "cannot be created it cannot be deleted you can yeah it can always be addressed",
    "start": "1273450",
    "end": "1278600"
  },
  {
    "text": "but as a kind of the flipside of it actors never fail because they can always available in the system there is",
    "start": "1278600",
    "end": "1283920"
  },
  {
    "text": "no way to fail an actor the operation may fail you may call and get an error back but the actor from the mentally",
    "start": "1283920",
    "end": "1289410"
  },
  {
    "text": "always exists because it's a logical construct and then how works and then we describe",
    "start": "1289410",
    "end": "1296280"
  },
  {
    "text": "in details in the paper the release runtime does all this kind of operating system job of PGE and paging out so when",
    "start": "1296280",
    "end": "1304410"
  },
  {
    "text": "you call an actor and started in the system the runtime release runtime realized oh I need to load it you",
    "start": "1304410",
    "end": "1310110"
  },
  {
    "text": "created in Peaks the server where it needs to be created so it coordinates with itself with sentences running in",
    "start": "1310110",
    "end": "1316530"
  },
  {
    "text": "your cluster there's all the operations of preparation calls were kind of a moral equivalent of a constructor method",
    "start": "1316530",
    "end": "1323160"
  },
  {
    "text": "say I'm activating you if you need to initialize something do it it allows the state of this actor so it does all this",
    "start": "1323160",
    "end": "1329880"
  },
  {
    "text": "job and then if it sees that this actor hasn't been used for for a while and that's configurable time by default to",
    "start": "1329880",
    "end": "1335700"
  },
  {
    "text": "hours but you can say for this actor class I won't have five minutes if it's not used for five minutes feel free to",
    "start": "1335700",
    "end": "1341340"
  },
  {
    "text": "remove it from memory and and the runtime does the reversing say I'm about to remove it from memory if you need to",
    "start": "1341340",
    "end": "1347580"
  },
  {
    "text": "do something it's your chance then it removes from memory but the actor is still available you can always call it",
    "start": "1347580",
    "end": "1352710"
  },
  {
    "text": "if it's in memory if it's in storage and even if it's in transition can still make it call they call generally succeed",
    "start": "1352710",
    "end": "1358880"
  },
  {
    "text": "unless there's a failure in the system or in the logic",
    "start": "1358880",
    "end": "1363910"
  },
  {
    "text": "this approach also allows to remove failure recovery logic most of the",
    "start": "1364540",
    "end": "1370670"
  },
  {
    "text": "failure recovery logic from the application because now the system manages state of this actors whether in",
    "start": "1370670",
    "end": "1376370"
  },
  {
    "text": "memory or that machine failed it can realize and do that and and as a result the minimize the amount of code",
    "start": "1376370",
    "end": "1382610"
  },
  {
    "text": "application developer writes that sort of targeting this goal of reducing the",
    "start": "1382610",
    "end": "1387710"
  },
  {
    "text": "amount of code people right so let's see how it looks sort of in reality when",
    "start": "1387710",
    "end": "1393860"
  },
  {
    "start": "1392000",
    "end": "1618000"
  },
  {
    "text": "people ask what is our leans so one sentence explanation has been disability",
    "start": "1393860",
    "end": "1399260"
  },
  {
    "text": "sharp and as any one sentence explanation it's never I'm saying correct because it's not about C sharp",
    "start": "1399260",
    "end": "1404990"
  },
  {
    "text": "early it's it's just that kind of distribute that net but the point is that behind that",
    "start": "1404990",
    "end": "1412040"
  },
  {
    "text": "sentences that you program is if you you've given your normal object-oriented application so you have you start with",
    "start": "1412040",
    "end": "1417800"
  },
  {
    "text": "the interface so you declare your grain interface which extends one of the marker interfaces they define the key",
    "start": "1417800",
    "end": "1424850"
  },
  {
    "text": "space like in this case I extend I agree with good key saying grains of that",
    "start": "1424850",
    "end": "1429890"
  },
  {
    "text": "class of that of that type will be addressed with the good key which Maps",
    "start": "1429890",
    "end": "1434990"
  },
  {
    "text": "do a lot of cases you can also use a integer or string or combination of",
    "start": "1434990",
    "end": "1440330"
  },
  {
    "text": "Google and string or integer and string so for convenience because really in this room maybe you could encode",
    "start": "1440330",
    "end": "1445790"
  },
  {
    "text": "everything and now with the vicinities you define the methods that constitute this interface",
    "start": "1445790",
    "end": "1452530"
  },
  {
    "text": "one requirement one strong requirement we have that all the methods have to be synchronous they have to return a task a",
    "start": "1452530",
    "end": "1459260"
  },
  {
    "text": "chest cavity is everyone familiar with the TPL task we seem to wait but",
    "start": "1459260",
    "end": "1465440"
  },
  {
    "text": "presumably one at this point should know it and if not should immediately go and learn because that that's the the best",
    "start": "1465440",
    "end": "1472520"
  },
  {
    "text": "thing that happened in c-sharp I though a single weight so we define the interface right this i user and here's",
    "start": "1472520",
    "end": "1480140"
  },
  {
    "text": "how greens that implements interface are addressed so you really need three lines",
    "start": "1480140",
    "end": "1486020"
  },
  {
    "text": "of code two lines of code to invoke the grain in this case the first line through the study class grain factory",
    "start": "1486020",
    "end": "1492539"
  },
  {
    "text": "and you say give me a reference to grain that implements the signifies a user for",
    "start": "1492539",
    "end": "1498360"
  },
  {
    "text": "a user ID X right user ID would past good and what you get back immediately",
    "start": "1498360",
    "end": "1503820"
  },
  {
    "text": "is a constructed proxy object it's totally local operation takes no time to execute there's no round-trip no",
    "start": "1503820",
    "end": "1510179"
  },
  {
    "text": "registry just it creates this proxy that essentially encapsulated said anthea of",
    "start": "1510179",
    "end": "1515760"
  },
  {
    "text": "that actor it has type information and identity the user ID of the specific",
    "start": "1515760",
    "end": "1520890"
  },
  {
    "text": "actor but that proxy implements the very universe we defined above a user and",
    "start": "1520890",
    "end": "1526620"
  },
  {
    "text": "because of that I can make a call right away so in the second line I call user say hello and pass some argument and",
    "start": "1526620",
    "end": "1533340"
  },
  {
    "text": "with the magic of a wait c-sharp 500 I can just write a weight and get a string",
    "start": "1533340",
    "end": "1540240"
  },
  {
    "text": "back so the code looks serial very simple but in reality is you sure you",
    "start": "1540240",
    "end": "1546450"
  },
  {
    "text": "know the compiler reaps out to remain a remainder of the method puts a discontinuation executed later when the",
    "start": "1546450",
    "end": "1552450"
  },
  {
    "text": "response come back question",
    "start": "1552450",
    "end": "1555919"
  },
  {
    "text": "yes that's correct so the question was what the way it just",
    "start": "1563450",
    "end": "1568590"
  },
  {
    "text": "hides away what happens right so this is the very important question so this is a synchronous RPC pattern so we're making",
    "start": "1568590",
    "end": "1575370"
  },
  {
    "text": "a remote procedure call and we're getting a promise back and then we await with the magic of the weight keyword we",
    "start": "1575370",
    "end": "1581789"
  },
  {
    "text": "do the continuation style we write simple code that actually runs this continuation style without blocking the",
    "start": "1581789",
    "end": "1587250"
  },
  {
    "text": "thread it's very important for performance for scalability within the system within the cygnets RPC",
    "start": "1587250",
    "end": "1593520"
  },
  {
    "text": "in Arlene's there is always a default timeout so unless you you reconfigure it",
    "start": "1593520",
    "end": "1598559"
  },
  {
    "text": "by default if the reply didn't come back within 30 seconds you get a timeout exception so a wait will always resolve",
    "start": "1598559",
    "end": "1604649"
  },
  {
    "text": "your promise either successfully or by throwing an exception so this is the synchronous RPC pattern that allows you",
    "start": "1604649",
    "end": "1611370"
  },
  {
    "text": "to write two lines of code and get resolved back and then send it somewhere or output it but that one you implement",
    "start": "1611370",
    "end": "1619440"
  },
  {
    "text": "implement a green class you also write very little code because you need to extend this Base Class grain Patel's in",
    "start": "1619440",
    "end": "1626900"
  },
  {
    "text": "my class will be a grain and then one or more interfaces that this class implements in our example I user and you",
    "start": "1626900",
    "end": "1634850"
  },
  {
    "text": "see and say hello I get a string in and I do something so this classical hello",
    "start": "1634850",
    "end": "1640160"
  },
  {
    "text": "world example but also notice that I have this counter variable that",
    "start": "1640160",
    "end": "1646280"
  },
  {
    "text": "increment there and the reason I don't need any locks I don't need any synchronization is because the Broglie",
    "start": "1646280",
    "end": "1652760"
  },
  {
    "text": "model the release runtime guarantees that all methods of all actors that will run only in a single threaded",
    "start": "1652760",
    "end": "1658460"
  },
  {
    "text": "environment so within my migraine my actor I'm guaranteed to never run on two",
    "start": "1658460",
    "end": "1663860"
  },
  {
    "text": "threads so I have to worry about I always have exclusive access to my variables not only they're isolated from",
    "start": "1663860",
    "end": "1668870"
  },
  {
    "text": "all others only I can touch variables on my actor but I can only touch them one",
    "start": "1668870",
    "end": "1673880"
  },
  {
    "text": "at a time from one three at a time so that allows for simple code like that so this is a code you write them in the",
    "start": "1673880",
    "end": "1680870"
  },
  {
    "text": "hello world case but what happens behind it sees there's this lifecycle of an actor of grain so most of them most of",
    "start": "1680870",
    "end": "1687890"
  },
  {
    "start": "1681000",
    "end": "1777000"
  },
  {
    "text": "the time are in persistent storage because most of them have they don't have to they can be just in memory state volatile state but in reality in most",
    "start": "1687890",
    "end": "1694850"
  },
  {
    "text": "system you have some persistence data associated with the user objects and",
    "start": "1694850",
    "end": "1700190"
  },
  {
    "text": "then the runtime transitions automatically that particular grain from",
    "start": "1700190",
    "end": "1706160"
  },
  {
    "text": "persisted to active in memory and back to persisted and it goes to his",
    "start": "1706160",
    "end": "1711350"
  },
  {
    "text": "activation process and deactivation persons were methods in special methods get called",
    "start": "1711350",
    "end": "1716710"
  },
  {
    "text": "activating you you have a chance to initialize it with deactivating you you have a chance to notify that you have an out of memory if that that's important",
    "start": "1716710",
    "end": "1723880"
  },
  {
    "text": "and all this is triggered by method calls messages to the grain so under the",
    "start": "1723880",
    "end": "1730010"
  },
  {
    "text": "covers it's all message passing like enact an actor model but messages are exposes method calls which is not a",
    "start": "1730010",
    "end": "1736040"
  },
  {
    "text": "controversy or we had with sort of Erlang guzel as I say unless you have",
    "start": "1736040",
    "end": "1742100"
  },
  {
    "text": "one way message passing that's not an actor model and we argued no it's that's much better because if we didn't have",
    "start": "1742100",
    "end": "1748010"
  },
  {
    "text": "this async RPC and we were sending one-way messages say say hello send a message and we need to senders and get a",
    "start": "1748010",
    "end": "1754400"
  },
  {
    "text": "response back me coordinators to events and if you send multiple requests and getting multiple responses you need a",
    "start": "1754400",
    "end": "1760670"
  },
  {
    "text": "state machine and in some correlation it needs to correlate this thing's well the task TPL does it for you you send a call",
    "start": "1760670",
    "end": "1766280"
  },
  {
    "text": "you got a task that's your correlation ID implicitly it's all that magic is done for you again that minimizes the",
    "start": "1766280",
    "end": "1772700"
  },
  {
    "text": "amount of code and complexity of code you need to write and if we go back to this picture with",
    "start": "1772700",
    "end": "1779240"
  },
  {
    "start": "1777000",
    "end": "1854000"
  },
  {
    "text": "this actor is running as a stateful middle tier what really is happening is that what you have in memory on this",
    "start": "1779240",
    "end": "1785300"
  },
  {
    "text": "cluster of machines it's just a sliding window of actors for example like Halo",
    "start": "1785300",
    "end": "1791090"
  },
  {
    "text": "or Call of Duty 8 is this major gives award they have tens of millions of copies of users they sold a game too but",
    "start": "1791090",
    "end": "1798080"
  },
  {
    "text": "at any point in time if they have a million people playing concurrently that's a good day so you only need to",
    "start": "1798080",
    "end": "1804560"
  },
  {
    "text": "have in memory actors for those players and their sessions and their data actually on right now so you have the",
    "start": "1804560",
    "end": "1810800"
  },
  {
    "text": "sliding window when say halo releases it starts in New Zealand funny enough so",
    "start": "1810800",
    "end": "1816740"
  },
  {
    "text": "midnight in New Zealand first people are out to play and you see that initial",
    "start": "1816740",
    "end": "1822640"
  },
  {
    "text": "initial spike in usage then goes to Australia and a",
    "start": "1822640",
    "end": "1827860"
  },
  {
    "text": "Europe in the US so you see this sliding window of users as people go to bed in",
    "start": "1827860",
    "end": "1834020"
  },
  {
    "text": "Australia New Zealand some people don't take them game 1 just staying away several days but you see this nation",
    "start": "1834020",
    "end": "1839180"
  },
  {
    "text": "finding window user base going around the globe and that's the idea here that you only have actors in memory for",
    "start": "1839180",
    "end": "1846410"
  },
  {
    "text": "people that actually doing something or for entities for devices actually on that actually running some code",
    "start": "1846410",
    "end": "1853629"
  },
  {
    "text": "in technically or leaves runtime runs on each server in the cluster we call them",
    "start": "1853960",
    "end": "1861860"
  },
  {
    "start": "1854000",
    "end": "1891000"
  },
  {
    "text": "silos have grains and silence just to agricultural terms we use them in the end no more just two so as a silo",
    "start": "1861860",
    "end": "1869090"
  },
  {
    "text": "process that usually want per server the transit the container of grains that's the earliest runtime instance on the",
    "start": "1869090",
    "end": "1875390"
  },
  {
    "text": "server you can have multiple you can run more than one doesn't matter from performance perspective usually it",
    "start": "1875390",
    "end": "1880850"
  },
  {
    "text": "doesn't make sense unless you want to combine multiple micro services on the same on the same physical hardware so it",
    "start": "1880850",
    "end": "1887240"
  },
  {
    "text": "doesn't kind of overlay layer in it transparently creates the cluster",
    "start": "1887240",
    "end": "1893930"
  },
  {
    "start": "1891000",
    "end": "1968000"
  },
  {
    "text": "so you just starting machines with this processing machine with the right configuration and automatically find each other the arrival equally form a",
    "start": "1893930",
    "end": "1900380"
  },
  {
    "text": "cluster they start pinning each other to say to check is this machine still there",
    "start": "1900380",
    "end": "1905390"
  },
  {
    "text": "or if this machine didn't apply to me three times I suspect there is a problem there is enough balls to say of this",
    "start": "1905390",
    "end": "1912200"
  },
  {
    "text": "machine here applied to several configurable number of other machines then we can mark it as there even if",
    "start": "1912200",
    "end": "1917870"
  },
  {
    "text": "it's life and will force it to remove it",
    "start": "1917870",
    "end": "1921970"
  },
  {
    "text": "sorry I'm losing my voice for some reason it's or may die as we discovered",
    "start": "1943990",
    "end": "1952659"
  },
  {
    "text": "but the distributor on time will detect that the server died and will remove it from the cluster",
    "start": "1963250",
    "end": "1970630"
  },
  {
    "start": "1968000",
    "end": "2089000"
  },
  {
    "text": "and because of the wrong time it knows what what actors or grains are it come already the server so again",
    "start": "1972010",
    "end": "1980950"
  },
  {
    "text": "what's one key the pause button",
    "start": "1986500",
    "end": "1989760"
  },
  {
    "text": "any questions",
    "start": "2002650",
    "end": "2006070"
  },
  {
    "text": "the counter question is about the counter example and race conditions if",
    "start": "2021040",
    "end": "2027110"
  },
  {
    "text": "multiple actors try to increment the same counter the counter is actually within the context of the actor",
    "start": "2027110",
    "end": "2035030"
  },
  {
    "text": "so other other actors do not touch it it's only within this user or within",
    "start": "2035030",
    "end": "2040340"
  },
  {
    "text": "this device actor there is no shared state so it's all internal private to this",
    "start": "2040340",
    "end": "2048280"
  },
  {
    "text": "specific actor does that make sense or not confused",
    "start": "2048280",
    "end": "2057850"
  },
  {
    "text": "it's just a private variable so it's a private int within this object essentially so I can increment and at",
    "start": "2073240",
    "end": "2080750"
  },
  {
    "text": "will and nobody else will touch it only I have access I know yeah but access from single",
    "start": "2080750",
    "end": "2088299"
  },
  {
    "start": "2089000",
    "end": "2476000"
  },
  {
    "text": "the question is does it mean that only one average current through the actor yes yes yes so it physically runs you",
    "start": "2097299",
    "end": "2106039"
  },
  {
    "text": "have a small thread pool that runtime maintains usually one hand thread per",
    "start": "2106039",
    "end": "2111099"
  },
  {
    "text": "processor core you need I have juggles all the actors within the process",
    "start": "2111099",
    "end": "2117049"
  },
  {
    "text": "because those say eight threads on the eight core machine",
    "start": "2117049",
    "end": "2122079"
  },
  {
    "text": "and movies or in",
    "start": "2123640",
    "end": "2127390"
  },
  {
    "text": "unknown",
    "start": "2130059",
    "end": "2133059"
  },
  {
    "text": "the question is yeah you need a mic",
    "start": "2160079",
    "end": "2166859"
  },
  {
    "text": "take more from Mike",
    "start": "2174119",
    "end": "2177838"
  },
  {
    "text": "so the question was when you use the grave you reuse the grain for more than",
    "start": "2189450",
    "end": "2195700"
  },
  {
    "text": "one user there's actually a fundamental difference between activist programming",
    "start": "2195700",
    "end": "2200829"
  },
  {
    "text": "in the traditional stateless service that you have right so if you had in the traditional way",
    "start": "2200829",
    "end": "2208390"
  },
  {
    "text": "stateless class would be populated from the database on demand then you use it",
    "start": "2208390",
    "end": "2214359"
  },
  {
    "text": "so the counters you'd have to worry about serializing they're easier and so",
    "start": "2214359",
    "end": "2220019"
  },
  {
    "text": "in this particular case all of the serialization deserialization is taken care of for you by the actor runtime and",
    "start": "2220019",
    "end": "2226989"
  },
  {
    "text": "you model the planes as if they're actually individual objects that",
    "start": "2226989",
    "end": "2233049"
  },
  {
    "text": "represent each item in your domain and then you leave the management of the",
    "start": "2233049",
    "end": "2238900"
  },
  {
    "text": "lifecycle of these things to the runtime yes thank you",
    "start": "2238900",
    "end": "2245788"
  },
  {
    "text": "right so the question is what's the lifecycle of this object do you really",
    "start": "2257329",
    "end": "2262499"
  },
  {
    "text": "think that it's visit always there is the question to ask right and the answer",
    "start": "2262499",
    "end": "2267900"
  },
  {
    "text": "is yes and that's the whole point of using the virtual active model is to",
    "start": "2267900",
    "end": "2273079"
  },
  {
    "text": "you don't worry about",
    "start": "2273079",
    "end": "2276769"
  },
  {
    "text": "you just address it",
    "start": "2278869",
    "end": "2282469"
  },
  {
    "text": "so you should always make them non-blocking but single-threaded",
    "start": "2321319",
    "end": "2328339"
  },
  {
    "text": "is actually consequence of the design to ensure that all the state that is stored",
    "start": "2328339",
    "end": "2336059"
  },
  {
    "text": "within the actor is consistently accessed so you can't have race",
    "start": "2336059",
    "end": "2341699"
  },
  {
    "text": "conditions within reactor itself so you have two methods updating the counter you guaranteed the",
    "start": "2341699",
    "end": "2348650"
  },
  {
    "text": "question is",
    "start": "2368869",
    "end": "2372018"
  },
  {
    "text": "that's right so wondering about whether this recipe of state from previous",
    "start": "2382069",
    "end": "2387509"
  },
  {
    "text": "activations don't think of it like that just think of it as I have this object I have a reference I'm using it and when I",
    "start": "2387509",
    "end": "2395459"
  },
  {
    "text": "come back to use the same reference to the same object or different reference to the same object it actually doesn't",
    "start": "2395459",
    "end": "2401039"
  },
  {
    "text": "matter you're getting the same object so you're not getting to black cab in",
    "start": "2401039",
    "end": "2407819"
  },
  {
    "text": "London you're giving in to your own car that's being chauffeured and when you",
    "start": "2407819",
    "end": "2412949"
  },
  {
    "text": "leave it",
    "start": "2412949",
    "end": "2415369"
  },
  {
    "text": "which is parked for you in the garage and then brought back to what John said",
    "start": "2418430",
    "end": "2423779"
  },
  {
    "text": "the question of what to model is as an actor as a grain is actually the fundamental design question it's kind of",
    "start": "2423779",
    "end": "2430499"
  },
  {
    "text": "easy for some questions like user or device but when you go into more murky static you have distributed computation",
    "start": "2430499",
    "end": "2437489"
  },
  {
    "text": "very fine grain a coarse grain that's one of the important design decisions most important design decisions you do",
    "start": "2437489",
    "end": "2443759"
  },
  {
    "text": "what when you program a system like that",
    "start": "2443759",
    "end": "2448489"
  },
  {
    "text": "so I think I covered that the release on time handles failures of the hardware so",
    "start": "2453229",
    "end": "2458699"
  },
  {
    "text": "it runs as a resource management layer that knows how many resources we have",
    "start": "2458699",
    "end": "2463969"
  },
  {
    "text": "you can place activations incarnations factors physical machines",
    "start": "2463969",
    "end": "2470900"
  },
  {
    "text": "and handle their failures",
    "start": "2470900",
    "end": "2474709"
  },
  {
    "text": "hmm let's look at it more elaborate keys so we have hello world it's too",
    "start": "2476060",
    "end": "2482040"
  },
  {
    "text": "simplistic so say this is a social network and we say social network it doesn't necessarily mean Facebook it",
    "start": "2482040",
    "end": "2488100"
  },
  {
    "text": "didn't the gains of social networks are you teasing areas of social networks of entities are having some relations and",
    "start": "2488100",
    "end": "2495480"
  },
  {
    "text": "some graphs and interacting with them so let's say you have this notion of a user",
    "start": "2495480",
    "end": "2501590"
  },
  {
    "text": "and then want to add a friend operation that's print to user so the simplest",
    "start": "2501590",
    "end": "2508200"
  },
  {
    "text": "case I define this I user as I'm having one method and a friend",
    "start": "2508200",
    "end": "2514640"
  },
  {
    "text": "take notice that it takes an argument of type I user the very same interface which is defined and as ok because the",
    "start": "2514670",
    "end": "2521640"
  },
  {
    "text": "runtime knows when you pass actual argument that this is a reference to another that current system",
    "start": "2521640",
    "end": "2528589"
  },
  {
    "text": "so this is what I do to add a friend so first twice I get references to two",
    "start": "2530750",
    "end": "2536550"
  },
  {
    "text": "actors one for me and one for future friend of mine and I just passed the",
    "start": "2536550",
    "end": "2543740"
  },
  {
    "text": "wooden table it's at friend operation just pass a friend reference as an argument and that's okay then await the",
    "start": "2543740",
    "end": "2550560"
  },
  {
    "text": "result of its operation but nicely try-catch right so we have",
    "start": "2550560",
    "end": "2555780"
  },
  {
    "text": "try and catch because the operation may throw an exception like this add friend may throw and say",
    "start": "2555780",
    "end": "2562850"
  },
  {
    "text": "this friend is not allowed or you only have this person as a friend but if you",
    "start": "2562850",
    "end": "2567960"
  },
  {
    "text": "think of it it's really I have my code writing here and my actor here on",
    "start": "2567960",
    "end": "2574560"
  },
  {
    "text": "another machine on the server in general and this friend actor on another machine so I'm doing this distributed operation",
    "start": "2574560",
    "end": "2580410"
  },
  {
    "text": "and the exception is thrown and I can handle it",
    "start": "2580410",
    "end": "2586080"
  },
  {
    "text": "so really like yeah we passed growing differences in argument but if we illustrate it so the",
    "start": "2586080",
    "end": "2592530"
  },
  {
    "text": "request comes to the front end it makes a call to grant a and grade a to fulfill",
    "start": "2592530",
    "end": "2597960"
  },
  {
    "text": "the completest operation needs to call another grain generally on another server grain B which you needs turn",
    "start": "2597960",
    "end": "2605460"
  },
  {
    "text": "calls grade C in say green C throws an exception if you write no code if you do nothing",
    "start": "2605460",
    "end": "2612460"
  },
  {
    "text": "that exception ibly automatically delivered as a message to the server of",
    "start": "2612460",
    "end": "2618460"
  },
  {
    "text": "the caller green bean skis and grain be can have code like this try",
    "start": "2618460",
    "end": "2624220"
  },
  {
    "text": "catch and do something but if it doesn't if it does nothing just cause a weight with no try catch that exception would",
    "start": "2624220",
    "end": "2629950"
  },
  {
    "text": "deliver to color of B to a and if a doesn't have a try catcher will deliver",
    "start": "2629950",
    "end": "2635799"
  },
  {
    "text": "to the front end that started the whole chain so if we look at it we really got distributed asynchronous try catch the",
    "start": "2635799",
    "end": "2641799"
  },
  {
    "text": "matrix for free so this code is really is if it's running within a single",
    "start": "2641799",
    "end": "2647619"
  },
  {
    "text": "process but as I showed it actually runs on of cluster observers and",
    "start": "2647619",
    "end": "2653220"
  },
  {
    "text": "all this just works you don't write code to two passes messages to just exception",
    "start": "2653220",
    "end": "2658539"
  },
  {
    "text": "you throw",
    "start": "2658539",
    "end": "2660839"
  },
  {
    "text": "so the question is if they at forint operation is for the single user versus",
    "start": "2687240",
    "end": "2692259"
  },
  {
    "text": "like munich and current operations",
    "start": "2692259",
    "end": "2695670"
  },
  {
    "text": "that's fine and actually I'll have an example later you could do anything you want and in this method you can do",
    "start": "2698160",
    "end": "2705279"
  },
  {
    "text": "something persist updated state I think a team execution you can make a",
    "start": "2705279",
    "end": "2710980"
  },
  {
    "text": "call to set of actors I'll show you this question thank you",
    "start": "2710980",
    "end": "2716190"
  },
  {
    "text": "so this is another example from kind of same social network analogy",
    "start": "2716190",
    "end": "2723930"
  },
  {
    "text": "say I need a method that returns status of all my friends and imagine",
    "start": "2723930",
    "end": "2729700"
  },
  {
    "text": "having thousand friends in my social network so if the ladies have a single call to a single friend to get the",
    "start": "2729700",
    "end": "2735369"
  },
  {
    "text": "friends statuses 10 millisecond if I were to call them serially thousand friends times 10 millisecond beach and",
    "start": "2735369",
    "end": "2741279"
  },
  {
    "text": "second that the best so here's how we do it in Orleans right so we first find out",
    "start": "2741279",
    "end": "2747039"
  },
  {
    "text": "requests so in this for each loop which executes within again milliseconds microseconds we're just sending messages",
    "start": "2747039",
    "end": "2754359"
  },
  {
    "text": "to thousand friends in parallel and we add tasks that they return into this",
    "start": "2754359",
    "end": "2760150"
  },
  {
    "text": "list of tasks we created and then we we join with this beauty of TPL",
    "start": "2760150",
    "end": "2767789"
  },
  {
    "text": "tasks class we just join all this promises into one and the way this joined promise so wait wait without",
    "start": "2767789",
    "end": "2774700"
  },
  {
    "text": "blocking and thread again for all these operations to complete and once they complete we can go and process",
    "start": "2774700",
    "end": "2780880"
  },
  {
    "text": "the results with another forage so we implemented we found out in my",
    "start": "2780880",
    "end": "2786339"
  },
  {
    "text": "example thousand requests two thousand friends of mine and we get all these response has been",
    "start": "2786339",
    "end": "2793230"
  },
  {
    "text": "others request processing in parallel in the ideal case that we have enough concurrency in the system",
    "start": "2793499",
    "end": "2799710"
  },
  {
    "text": "then all the responses will arrive with ideal latency",
    "start": "2799710",
    "end": "2804410"
  },
  {
    "text": "that's probably not the case on real system but again a delays will be 10 millisecond in my case which is much",
    "start": "2804770",
    "end": "2811680"
  },
  {
    "text": "better than 10 seconds but even if case isn't ideal you still have much better responsiveness and much better",
    "start": "2811680",
    "end": "2817950"
  },
  {
    "text": "throughput so this code doesn't have any",
    "start": "2817950",
    "end": "2823410"
  },
  {
    "text": "multi-threading again so with because of this guarantees of single threaded execution we write very simple trance tracks that have no racist no no",
    "start": "2823410",
    "end": "2831030"
  },
  {
    "text": "synchronization of coordination we don't block threads through the magic of GPL",
    "start": "2831030",
    "end": "2836070"
  },
  {
    "text": "so very efficient we don't do a context switch things like that so we get it's easy parallelism in the system and who",
    "start": "2836070",
    "end": "2843030"
  },
  {
    "text": "programmed MPI ever ok joined it so they then is Gannon",
    "start": "2843030",
    "end": "2850109"
  },
  {
    "text": "needs to be professor in the enemy you said like we don't want to teach our students MPI anymore because we release",
    "start": "2850109",
    "end": "2855780"
  },
  {
    "text": "with these patterns is so much easier to distribute your computations in general you can fan out you can do this scatter",
    "start": "2855780",
    "end": "2861000"
  },
  {
    "text": "gather patterns so it's just the mechanism that makes it easy Carl Hewitt the inventor of the action",
    "start": "2861000",
    "end": "2867839"
  },
  {
    "text": "model had this interesting code that I'm proud of a couple years ago thing and",
    "start": "2867839",
    "end": "2873180"
  },
  {
    "text": "his survey paper about actor models that releases is an important step and further in the goal of the actor model",
    "start": "2873180",
    "end": "2878790"
  },
  {
    "text": "that application programmers need not to be so concerned with low-level system details that's exactly what our goal was",
    "start": "2878790",
    "end": "2884820"
  },
  {
    "text": "to raise level abstraction so that you don't have to deal with low-level like message passing failures so I even joke",
    "start": "2884820",
    "end": "2893160"
  },
  {
    "text": "that now I can retire because Carl Hewitt acknowledged her contribution then I look at my bank account and",
    "start": "2893160",
    "end": "2899190"
  },
  {
    "text": "decided to stay in the workforce it's so",
    "start": "2899190",
    "end": "2904310"
  },
  {
    "start": "2904000",
    "end": "3023000"
  },
  {
    "text": "talking about persistence one feature that we have which is an opt-in feature is not required but you can",
    "start": "2904310",
    "end": "2910380"
  },
  {
    "text": "declaratively have persistent state management so for that you need to define your property back like poco",
    "start": "2910380",
    "end": "2916950"
  },
  {
    "text": "class they can use example users stay with a couple properties and then when you declare",
    "start": "2916950",
    "end": "2922250"
  },
  {
    "text": "so you define this property back class and then when you declare your user",
    "start": "2922250",
    "end": "2928440"
  },
  {
    "text": "brain class instead of extending grain you extend grain of T where T is the",
    "start": "2928440",
    "end": "2933570"
  },
  {
    "text": "property back so you pass this type argument and then",
    "start": "2933570",
    "end": "2940320"
  },
  {
    "text": "once you update your state you can just write it to storage with a single ohryan this asynchronous operation right",
    "start": "2940320",
    "end": "2947100"
  },
  {
    "text": "staties think so you get this state property which is of type user state on",
    "start": "2947100",
    "end": "2952950"
  },
  {
    "text": "this example and then operations like right we also read and clear but in most cases you don't need to use those at all",
    "start": "2952950",
    "end": "2959940"
  },
  {
    "text": "because when the grain is activated the read operation happens before a control",
    "start": "2959940",
    "end": "2965160"
  },
  {
    "text": "is transferred to your application so when when your grain starts its state is already read from persistence and you",
    "start": "2965160",
    "end": "2971010"
  },
  {
    "text": "only have this property's initialize you just need you can initialize some in memory variables negation",
    "start": "2971010",
    "end": "2979430"
  },
  {
    "text": "so they said just very simple declarative persistence but if you notice there is also this line with",
    "start": "2979430",
    "end": "2987290"
  },
  {
    "text": "storage provider so this model decouples you from the actual physical storage so",
    "start": "2987290",
    "end": "2993090"
  },
  {
    "text": "notion of storage providers plug-ins extensibility points in the system so that you can switch between different",
    "start": "2993090",
    "end": "2998760"
  },
  {
    "text": "storages and decouple those concerns because it's opt-in feature there's",
    "start": "2998760",
    "end": "3004310"
  },
  {
    "text": "limitations but you can use it so we included if you are the providers but",
    "start": "3004310",
    "end": "3011510"
  },
  {
    "text": "there's more that community build somebody build just now for EWS email",
    "start": "3011510",
    "end": "3019120"
  },
  {
    "text": "for one of the soldiers in AWS another important feature I want to",
    "start": "3019120",
    "end": "3026540"
  },
  {
    "start": "3023000",
    "end": "3121000"
  },
  {
    "text": "bring to you there is a lot lots more features like placement different strategies for placement there is this notion of stateless workers work for",
    "start": "3026540",
    "end": "3033410"
  },
  {
    "text": "functional operations the observer first timers reminder so you can say I'll wake me up every day or every couple hours",
    "start": "3033410",
    "end": "3042560"
  },
  {
    "text": "don't have time to go over all the features but this one I want to highlight so we added like a couple of",
    "start": "3042560",
    "end": "3047820"
  },
  {
    "text": "years ago with the same concept of virtual actors we had a notion of virtual streams so kind of extreme",
    "start": "3047820",
    "end": "3054210"
  },
  {
    "text": "sequence of events that the stream has an identity and you can always produce events or a stream or or",
    "start": "3054210",
    "end": "3060750"
  },
  {
    "text": "consumer that's from a stream without creating without deleting kind of the same idea that if you know identity just",
    "start": "3060750",
    "end": "3066300"
  },
  {
    "text": "like with a grey and with an actor if you know I didn't see the stream you can make operation sign",
    "start": "3066300",
    "end": "3073580"
  },
  {
    "text": "so if you look at this code I get stream provider by name which is a pointer you",
    "start": "3073580",
    "end": "3080400"
  },
  {
    "text": "can speak and I can have again we have provider models you can have providers for different persistent queue systems",
    "start": "3080400",
    "end": "3087270"
  },
  {
    "text": "and then I just say give me a stream of this type with this identity like a path",
    "start": "3087270",
    "end": "3092520"
  },
  {
    "text": "idea and the namespace and then I can either produce to this stream like on the next async async version of rx style",
    "start": "3092520",
    "end": "3100110"
  },
  {
    "text": "on API or I can consume my subscribe in a handler",
    "start": "3100110",
    "end": "3105589"
  },
  {
    "text": "so we created a couple years ago and at first they were around in production in halo 5 and launch of processing of",
    "start": "3105980",
    "end": "3112200"
  },
  {
    "text": "statistics that coming into the system through event Hawking persistent in queues reliably he's done with virtual streams and now",
    "start": "3112200",
    "end": "3119520"
  },
  {
    "text": "it's being used more and more but just just to illustrate for that to be simple",
    "start": "3119520",
    "end": "3124680"
  },
  {
    "text": "to work there's a lot of machinery in the runtime that has this notion of pulling agents that get distributed across all the servers you get",
    "start": "3124680",
    "end": "3131580"
  },
  {
    "text": "coordinated and they pull from different partitions and they then have in this example in Caucasian is Kafka in Azure",
    "start": "3131580",
    "end": "3138600"
  },
  {
    "text": "queues and they send messages to consumers so of code that runs in the runtime system you don't have to write",
    "start": "3138600",
    "end": "3144210"
  },
  {
    "text": "it named attune anybody knows when tomorrow comes",
    "start": "3144210",
    "end": "3149930"
  },
  {
    "start": "3145000",
    "end": "3178000"
  },
  {
    "text": "nobody knows it makes any point so when we started talking to people early on",
    "start": "3149930",
    "end": "3157200"
  },
  {
    "text": "well here's what we're working on he's the release model with his brains and seemed like it worked it solves a lot of",
    "start": "3157200",
    "end": "3162300"
  },
  {
    "text": "problems for this coming cloud computing and people like within the they didn't",
    "start": "3162300",
    "end": "3169420"
  },
  {
    "text": "really believe us because somebody comes and say hey I have a solution another want to be here for you",
    "start": "3169420",
    "end": "3176010"
  },
  {
    "text": "and that's understandable and then this guy came",
    "start": "3176010",
    "end": "3181980"
  },
  {
    "text": "so the story that hoop was talking about briefly in the video is actually real",
    "start": "3182039",
    "end": "3187539"
  },
  {
    "text": "they came to say hey we want to use your stuff because we had this architecture we created and looks like you",
    "start": "3187539",
    "end": "3192880"
  },
  {
    "text": "implemented 80% of it already in our links let's work together and to finish like missing pieces when we need to be",
    "start": "3192880",
    "end": "3199420"
  },
  {
    "text": "in production three months by the way we launched in a title that's literature Mikey Messiah this guy's a crazy week I",
    "start": "3199420",
    "end": "3205480"
  },
  {
    "text": "want to take technology from researchable in production three months I know what they're thinking but let's drop everything that's helped them",
    "start": "3205480",
    "end": "3210760"
  },
  {
    "text": "because that's a great opportunity and I was a yellow anniversary edition for the",
    "start": "3210760",
    "end": "3216789"
  },
  {
    "text": "actual name of the title with a single service that they put out as a test correct does it work and they liked it",
    "start": "3216789",
    "end": "3224500"
  },
  {
    "text": "so much that for Halo 4 so was there a test for the next big release halo 4 it was happening almost a year later for he",
    "start": "3224500",
    "end": "3231279"
  },
  {
    "text": "LaPorta just energized and saying we already building cloud service release because we get so much out of it",
    "start": "3231279",
    "end": "3237960"
  },
  {
    "text": "so once people heard about the link is done this whole question I'm always a toy does actually work the sexual scale",
    "start": "3237960",
    "end": "3243519"
  },
  {
    "text": "is reliable because almost disappeared because he ever works for Halo now much",
    "start": "3243519",
    "end": "3250359"
  },
  {
    "text": "smaller and scale must work for me so we had this I got a gaming company is",
    "start": "3250359",
    "end": "3255839"
  },
  {
    "text": "giving out game studios within the company came I mention Halo 5 for launch",
    "start": "3255839",
    "end": "3262329"
  },
  {
    "text": "almost a year ago including streaming but not knowing gamers I connect Skype or some other analytics monitoring in",
    "start": "3262329",
    "end": "3271180"
  },
  {
    "text": "this thing is the IOT project of launching balloon into almost you space",
    "start": "3271180",
    "end": "3276720"
  },
  {
    "text": "this this apps that you see on windows I can assign absolute being apps that used",
    "start": "3276720",
    "end": "3282609"
  },
  {
    "text": "to be called I mean they may not be fanciest but they have hundreds of millions of users age and years of war",
    "start": "3282609",
    "end": "3290920"
  },
  {
    "text": "is shipping this fall it's also running heavily on release on the same code base",
    "start": "3290920",
    "end": "3296130"
  },
  {
    "start": "3295000",
    "end": "3375000"
  },
  {
    "text": "but there is a reason that gamers come first because when they lodge",
    "start": "3296130",
    "end": "3301290"
  },
  {
    "text": "their product they seem to like this it's like a movie business where you make most of your money within the first",
    "start": "3301290",
    "end": "3307230"
  },
  {
    "text": "two three or four weeks and if there is a problem in the first day first you are worse first week you lose a lot because",
    "start": "3307230",
    "end": "3314610"
  },
  {
    "text": "the only angry fans will go online you've seen all the stories and there's some reason ones even so it's very",
    "start": "3314610",
    "end": "3320490"
  },
  {
    "text": "unforgettable oh it's not like a service where people learn about it over time and your love grows kind of steadily",
    "start": "3320490",
    "end": "3327900"
  },
  {
    "text": "even if it's a hockey stick it's still growing here it's the opposite we can jump right away when you zealand",
    "start": "3327900",
    "end": "3333870"
  },
  {
    "text": "australia wakes up and starts playing but but also they rewrite all of code so",
    "start": "3333870",
    "end": "3340020"
  },
  {
    "text": "they good users because they need to replace a lot of code very frequently so they open to new technology it's not",
    "start": "3340020",
    "end": "3345450"
  },
  {
    "text": "like they've been running it for 15 years they have to innovate very fast",
    "start": "3345450",
    "end": "3350760"
  },
  {
    "text": "it's fast pace innovation but also they're looking and economics that they have more trouble selling these discs",
    "start": "3350760",
    "end": "3358380"
  },
  {
    "text": "now they want to do more in a cloud the more julik ingame purchase the more have more features that delivers over time",
    "start": "3358380",
    "end": "3364680"
  },
  {
    "text": "which turns them to cloud earlier and then other users under pressure",
    "start": "3364680",
    "end": "3370250"
  },
  {
    "text": "yeah thank you so drinking beer together",
    "start": "3370250",
    "end": "3375410"
  },
  {
    "start": "3375000",
    "end": "3494000"
  },
  {
    "text": "this one so every analyst that really that",
    "start": "3375410",
    "end": "3380700"
  },
  {
    "text": "Gartner they have this magic quadrants and I thought why can't I have my magic Sergey squadron's I define my own",
    "start": "3380700",
    "end": "3387410"
  },
  {
    "text": "so we start with the interactive entertainment so these games but also like interactive TV like delivering",
    "start": "3387410",
    "end": "3394770"
  },
  {
    "text": "content coordination cloud assisted compute all the scenarios kind of",
    "start": "3394770",
    "end": "3400500"
  },
  {
    "text": "similar so that's one bucket but if we look at a near real-time analytics is",
    "start": "3400500",
    "end": "3407010"
  },
  {
    "text": "not far behind because you have aggregation monitoring and alerting for detection is interesting very similar",
    "start": "3407010",
    "end": "3413340"
  },
  {
    "text": "for credit card comes and they have credit card companies during fraud detection using release but also",
    "start": "3413340",
    "end": "3419820"
  },
  {
    "text": "even games they have children cheating detection and banging automatically it's",
    "start": "3419820",
    "end": "3426600"
  },
  {
    "text": "very interesting overlap all of these things but then I you tease the hardest that I think subconsciously made it",
    "start": "3426600",
    "end": "3433020"
  },
  {
    "text": "right because everyone wants UI again the sensors or devices they're kind of like users they all interact",
    "start": "3433020",
    "end": "3438660"
  },
  {
    "text": "they have relations the send messages thing to be processed the project I'm most proud of in this space is this 500",
    "start": "3438660",
    "end": "3447600"
  },
  {
    "text": "megawatt power facility in Oahu in Hawaii I just came from Oahu I wanted to visit the facility",
    "start": "3447600",
    "end": "3453620"
  },
  {
    "text": "was too complicated set it up but they managed this system that",
    "start": "3453620",
    "end": "3459770"
  },
  {
    "text": "direct green power to the smart water heaters and accumulated there so",
    "start": "3459770",
    "end": "3465330"
  },
  {
    "text": "essentially they're on somebody said equivalent of small nuclear power plant which is all renewable energy and",
    "start": "3465330",
    "end": "3471590"
  },
  {
    "text": "another fancy project is they it's just to control 2 million mousetraps",
    "start": "3471590",
    "end": "3476990"
  },
  {
    "text": "but then if you look at it is many more like there's all the kind of real-time collaboration scale out computers as a",
    "start": "3476990",
    "end": "3483600"
  },
  {
    "text": "show that's very simple primitives so that's why that there's plenty of",
    "start": "3483600",
    "end": "3488700"
  },
  {
    "text": "space to to apply this discount section and these tools",
    "start": "3488700",
    "end": "3494240"
  },
  {
    "start": "3494000",
    "end": "3569000"
  },
  {
    "text": "if you love somebody set them free just happened to be the concert of mr.",
    "start": "3494240",
    "end": "3500460"
  },
  {
    "text": "sting and I feel Gabriel in Seattle the week before so it took us a long time we started in",
    "start": "3500460",
    "end": "3508020"
  },
  {
    "text": "2009 and we like I said several prototypes and a kilo for or the first",
    "start": "3508020",
    "end": "3513540"
  },
  {
    "text": "really big launch was in 2012 I wish we publish it earlier but we ended",
    "start": "3513540",
    "end": "3519990"
  },
  {
    "text": "up open source and in generally 2015 and I was serving an amazing experience we're dealing with this open source",
    "start": "3519990",
    "end": "3526230"
  },
  {
    "text": "community it just completely exceeded all our expectations you have these people make yourself there they're",
    "start": "3526230",
    "end": "3531690"
  },
  {
    "text": "seasoned engineers they collectively know a lot more than you can ever know like it's a very humbling experience you",
    "start": "3531690",
    "end": "3538620"
  },
  {
    "text": "get chapter to this world of people they do it for free for fun because they",
    "start": "3538620",
    "end": "3543840"
  },
  {
    "text": "think it's better or because they use it in their company it's great experience so since then we all develop in open and",
    "start": "3543840",
    "end": "3551010"
  },
  {
    "text": "in github and open source I know where it is smiling because that's what he's doing as well",
    "start": "3551010",
    "end": "3556730"
  },
  {
    "text": "but that's really key to its MIT license no strings attached go use it in any way",
    "start": "3556730",
    "end": "3563160"
  },
  {
    "text": "we could a lot of developments happening there",
    "start": "3563160",
    "end": "3569420"
  },
  {
    "start": "3569000",
    "end": "3599000"
  },
  {
    "text": "spreading wings and fly away but knows",
    "start": "3569630",
    "end": "3574549"
  },
  {
    "text": "yeah it's also sting oh sorry it's the Queen so the key things for links are",
    "start": "3574700",
    "end": "3581820"
  },
  {
    "text": "the women's run anywhere so you want we wanted you to run it anywhere you want the way you want there is no law like",
    "start": "3581820",
    "end": "3588060"
  },
  {
    "text": "attachment there's misconception in the release for a jerk it's not you can run anywhere in Azure in AWS and Google",
    "start": "3588060",
    "end": "3594690"
  },
  {
    "text": "Cloud on the premises on the developer laptop it's all possible within the",
    "start": "3594690",
    "end": "3600210"
  },
  {
    "text": "plugins you can run against any storage systems the thing that I'm proud of is",
    "start": "3600210",
    "end": "3605820"
  },
  {
    "text": "that we used to having clothes and in my case of a co system",
    "start": "3605820",
    "end": "3611370"
  },
  {
    "text": "from other open-source technologies here we have the reverse orbit was the buy where one of the Electronic Arts",
    "start": "3611370",
    "end": "3617430"
  },
  {
    "text": "companies they create a clone and were released because there were GBM shop they said we like the model ovaries so",
    "start": "3617430",
    "end": "3623070"
  },
  {
    "text": "so much but we're GV and we couldn't use that net so you just ended up creating the clone and but like it because they",
    "start": "3623070",
    "end": "3629460"
  },
  {
    "text": "pretty good I think light band is doing something similar",
    "start": "3629460",
    "end": "3634730"
  },
  {
    "text": "we moved out of MSR Microsoft Research to the polygroup point we didn't stop collaborating when the Mossad don't stop",
    "start": "3634730",
    "end": "3641340"
  },
  {
    "text": "you know yes thank you so we have the one project we merging",
    "start": "3641340",
    "end": "3648750"
  },
  {
    "text": "right now we're actually in the process of reviewing marine code is Jo distributed or these so instead of like",
    "start": "3648750",
    "end": "3654390"
  },
  {
    "text": "I show you this picture of a single cluster running a bunch of for aliens runtime instances and lots of grains",
    "start": "3654390",
    "end": "3660750"
  },
  {
    "text": "there but now this is the picture that we get with multiple classes running in",
    "start": "3660750",
    "end": "3665970"
  },
  {
    "text": "geo distributed environment and collaborating but you still have the same simple programming model where you",
    "start": "3665970",
    "end": "3671400"
  },
  {
    "text": "the actor represents you user can be only one of the servers on one of the clusters and it's one of the models",
    "start": "3671400",
    "end": "3677160"
  },
  {
    "text": "there and then Phil Bernstein famous a few birds didn't know less it's working and bring asset transactions so you can",
    "start": "3677160",
    "end": "3683940"
  },
  {
    "text": "have cross accurate transactions with complete acid guarantees he's been working it for a couple of years",
    "start": "3683940",
    "end": "3690740"
  },
  {
    "text": "to summarize I think you think why Arlene has been successful so far is",
    "start": "3690740",
    "end": "3697770"
  },
  {
    "text": "that it maps to many workloads easily because it kind of you can pose your",
    "start": "3697770",
    "end": "3702990"
  },
  {
    "text": "state into the smaller entities so how to distribute your load even before some people realize that because you encode",
    "start": "3702990",
    "end": "3710150"
  },
  {
    "text": "your application logic and the notion of this actors of these types and their instances you decompose your state",
    "start": "3710150",
    "end": "3716910"
  },
  {
    "text": "instead of having one single blob of color user data you're not being with these pieces and chunks there is no",
    "start": "3716910",
    "end": "3723240"
  },
  {
    "text": "prescription size of the actor we don't say it has to be small or large it's up to the application but most workloads",
    "start": "3723240",
    "end": "3730410"
  },
  {
    "text": "tend to have a large number of smallish actors but nothing is very difficult to",
    "start": "3730410",
    "end": "3736170"
  },
  {
    "text": "do in traditional approaches in horizontal communication and with actor model that's its nature that's the",
    "start": "3736170",
    "end": "3741480"
  },
  {
    "text": "essence of the model it can send messages so these actors they can talk directly you don't have to go outside and call the web service they can choose",
    "start": "3741480",
    "end": "3747230"
  },
  {
    "text": "invoke in our case invoke methods on other actors and it just works and I",
    "start": "3747230",
    "end": "3752910"
  },
  {
    "text": "mentioned several times that Arlene's runtime manages resources so it places and handles failures and things like",
    "start": "3752910",
    "end": "3759180"
  },
  {
    "text": "that so you can scale out it can be elastic you can add more resources have more capacity or if you load a",
    "start": "3759180",
    "end": "3765960"
  },
  {
    "text": "always done you can remove resources and readjust the cluster size but also I",
    "start": "3765960",
    "end": "3771119"
  },
  {
    "text": "would argue that it brings the object-oriented of the world back we would keep hearing for last several",
    "start": "3771119",
    "end": "3777329"
  },
  {
    "text": "years of service O'Neill's for us every decade sorry-sorry at architecture but if you look at the real world like once",
    "start": "3777329",
    "end": "3783780"
  },
  {
    "text": "a Hawaiian interacts with the kids they all I could it doesn't track with",
    "start": "3783780",
    "end": "3789119"
  },
  {
    "text": "gazelles service it just compute instance of the gazelle type so you have this really object-oriented analogy that",
    "start": "3789119",
    "end": "3797910"
  },
  {
    "text": "map's the Manning workload is much better than service-oriented architecture I would argue and we've",
    "start": "3797910",
    "end": "3803040"
  },
  {
    "text": "proven that with this graph in the paper but I think it we can raise the bar we have like 50% more throughput right now",
    "start": "3803040",
    "end": "3811760"
  },
  {
    "text": "then so we've proven that we scale linearly",
    "start": "3811760",
    "end": "3817040"
  },
  {
    "text": "so we go back to to this picture I hope I",
    "start": "3817040",
    "end": "3822140"
  },
  {
    "text": "proved that we covered most of this points so we have developed productivity",
    "start": "3822140",
    "end": "3828240"
  },
  {
    "text": "linear scalability and high efficiency in the model and how its implemented",
    "start": "3828240",
    "end": "3833270"
  },
  {
    "text": "the sub linear cost is hard linear cost is already a winner but sublinear is much more challenging the Pipers calling",
    "start": "3833270",
    "end": "3841440"
  },
  {
    "text": "you to join him yes so my message is that you can take it as",
    "start": "3841440",
    "end": "3850950"
  },
  {
    "text": "is you can join a community and enjoy the collective mind are all these people all over the world they participated",
    "start": "3850950",
    "end": "3856920"
  },
  {
    "text": "some people they can't use their links at the work because of the company they work for",
    "start": "3856920",
    "end": "3862109"
  },
  {
    "text": "then still hang out and the community because they like the community like the people there they just chat about some",
    "start": "3862109",
    "end": "3867599"
  },
  {
    "text": "technical questions sometimes a non-technical question if you owe more of the jvm if you give e",
    "start": "3867599",
    "end": "3875970"
  },
  {
    "text": "I'm shocked you can use orbit which is very close they just literally copied",
    "start": "3875970",
    "end": "3882170"
  },
  {
    "text": "that in general like look at what we did at the model maybe you can apply the",
    "start": "3882170",
    "end": "3888390"
  },
  {
    "text": "same the same learnings the same approaches to your the main not",
    "start": "3888390",
    "end": "3893940"
  },
  {
    "text": "necessarily directly taking the code is that I want to thank you and any",
    "start": "3893940",
    "end": "3902400"
  },
  {
    "text": "questions of the happy to answer now or later",
    "start": "3902400",
    "end": "3906920"
  },
  {
    "text": "rights mentioned that virtual meetups that we do periodically will record they're all",
    "start": "3919910",
    "end": "3925290"
  },
  {
    "text": "on YouTube but we also have the gira channel so in Gitter that's where people hang out and all people know what kidder",
    "start": "3925290",
    "end": "3931589"
  },
  {
    "text": "but we have link on our github page go together and people there they always answer question of people come and",
    "start": "3931589",
    "end": "3937309"
  },
  {
    "text": "questions about them",
    "start": "3937309",
    "end": "3940730"
  },
  {
    "text": "can you talk a bit about Herald lanes managers persistence and storage",
    "start": "3949280",
    "end": "3957920"
  },
  {
    "text": "every time I tell something or Dwight",
    "start": "3964700",
    "end": "3969410"
  },
  {
    "text": "yeah thank you so that's one of the kind of key questions in the application how",
    "start": "3971330",
    "end": "3976380"
  },
  {
    "text": "to manage persistent state and or at least doesn't really prescribe how you do it because it depends right in in",
    "start": "3976380",
    "end": "3983880"
  },
  {
    "text": "many cases any update needs to be persistent and then either you use declarative persistence feature that we",
    "start": "3983880",
    "end": "3991050"
  },
  {
    "text": "have or write it own code charts of storage before you method return success from from the operation you want to make",
    "start": "3991050",
    "end": "3997530"
  },
  {
    "text": "sure you persist it your result that's the most typical case because you don't want to lose right but you can also do",
    "start": "3997530",
    "end": "4003140"
  },
  {
    "text": "like right behind so if you can afford sometimes and frequently to lose some updates you can accumulate them in",
    "start": "4003140",
    "end": "4008570"
  },
  {
    "text": "memory and say write every minute so that's the application writer decision and again it's sort of our Fagin all too",
    "start": "4008570",
    "end": "4014990"
  },
  {
    "text": "early is because you can use declarative persistence or your own persistent library and still decide how you doing",
    "start": "4014990",
    "end": "4024970"
  },
  {
    "text": "oh",
    "start": "4032490",
    "end": "4034520"
  },
  {
    "text": "thank you for this question because I forgot to mention that Friday John and I had given talk about patterns and event",
    "start": "4053930",
    "end": "4060750"
  },
  {
    "text": "sourcing one of the patterns there so please come for a Friday talk will cover it",
    "start": "4060750",
    "end": "4066799"
  },
  {
    "text": "[Music]",
    "start": "4083590",
    "end": "4086769"
  },
  {
    "text": "so if you look at the unit test that we have on github we have the space classes for unit testing where you essentially",
    "start": "4089840",
    "end": "4096930"
  },
  {
    "text": "you run a cluster within a single process within there's different abdomens on the client and you can",
    "start": "4096930",
    "end": "4103470"
  },
  {
    "text": "easily test the a5 from visual studio and just run it within single process",
    "start": "4103470",
    "end": "4109080"
  },
  {
    "text": "you don't have to deploy it anywhere it's very easy to run those tests so we have this facility from Justin",
    "start": "4109080",
    "end": "4116240"
  },
  {
    "text": "please due to the single single donation to the",
    "start": "4116690",
    "end": "4123988"
  },
  {
    "text": "grande sorry hue one call together at one of the grants running along long-running process how do we how do we",
    "start": "4123989",
    "end": "4129298"
  },
  {
    "text": "take care of it so there are two cases so there's long-running that somebody",
    "start": "4129299",
    "end": "4135028"
  },
  {
    "text": "else is doing for you like you you're doing a you made a call to remote storage or something in remote service",
    "start": "4135029",
    "end": "4140488"
  },
  {
    "text": "on your waiting for it to finish that's very easy because we're the weight you just need to make sure use a sink API so",
    "start": "4140489",
    "end": "4146190"
  },
  {
    "text": "you make a call a way to task a retirement task and it just works brilliantly if you want to run a",
    "start": "4146190",
    "end": "4151560"
  },
  {
    "text": "long-running computer so it actually uses CPU what we recommend is to move it",
    "start": "4151560",
    "end": "4157230"
  },
  {
    "text": "to like dotnet thread pool or to some custom thread not run it on the runtime",
    "start": "4157230",
    "end": "4163350"
  },
  {
    "text": "threads so can I release the runtime ties as soon as possible and run it somewhere else I can maybe a different",
    "start": "4163350",
    "end": "4168480"
  },
  {
    "text": "process you start with you execute the request all right thank you",
    "start": "4168480",
    "end": "4174588"
  },
  {
    "text": "any other questions before we lose the room",
    "start": "4174589",
    "end": "4179180"
  },
  {
    "text": "well you can catch me later I'm here through Wednesday and the Melbourne",
    "start": "4179750",
    "end": "4185430"
  },
  {
    "text": "Monday [Applause]",
    "start": "4185430",
    "end": "4193119"
  }
]