[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "so what are we talking today about using two tools from article terraform",
    "start": "9360",
    "end": "15190"
  },
  {
    "text": "and console names James Newton at work a hash cop previously on terraform but I have coded",
    "start": "15190",
    "end": "25330"
  },
  {
    "text": "most of hash equals product somewhere along the line and now work on ops for sass so right now has anybody come",
    "start": "25330",
    "end": "36790"
  },
  {
    "start": "33000",
    "end": "123000"
  },
  {
    "text": "across I presumably if you came to talk about it people know something about hash record profits is that have anybody",
    "start": "36790",
    "end": "43150"
  },
  {
    "text": "never come across the company or any of its tools okay cool so just a quick recap we have currently",
    "start": "43150",
    "end": "52680"
  },
  {
    "text": "seven ocean source tools and then one commercial product going through the",
    "start": "52680",
    "end": "58330"
  },
  {
    "text": "open source tools quickly we have console which is tool for service discovery in the top left antara form which is a tool for",
    "start": "58330",
    "end": "64900"
  },
  {
    "text": "provisioning cloud resources across lots of different clouds we have vault in the",
    "start": "64900",
    "end": "71350"
  },
  {
    "text": "top right which is a tool for secrets management and the various different",
    "start": "71350",
    "end": "77020"
  },
  {
    "text": "types of security primitives then finally we have moving on we have surf",
    "start": "77020",
    "end": "82480"
  },
  {
    "text": "which is kind of a library for distributed mesh systems in the middle",
    "start": "82480",
    "end": "88180"
  },
  {
    "text": "vagrant which everybody is probably familiar with as a tool for managing developer environments and making them",
    "start": "88180",
    "end": "95710"
  },
  {
    "text": "easy to rebuild we have Packer which we're going to briefly touch on today but probably not for very long a tool",
    "start": "95710",
    "end": "101260"
  },
  {
    "text": "for building machine images so things like virtual hard drives or Amazon machine images or local virtual machines",
    "start": "101260",
    "end": "109060"
  },
  {
    "text": "and then finally we have Nomad which is cluster scheduled associa Nettie's or taka swarm it's in a similar vein to",
    "start": "109060",
    "end": "115510"
  },
  {
    "text": "that and then finally have a commercial product terraform enterprise which is a hosted fast version that combines most",
    "start": "115510",
    "end": "121659"
  },
  {
    "text": "of these tools and so the tools we're going to talk about today primarily a console and terraform",
    "start": "121659",
    "end": "127019"
  },
  {
    "start": "123000",
    "end": "235000"
  },
  {
    "text": "we're going to start off with terraform so why were m4 is people tend to be",
    "start": "127019",
    "end": "135550"
  },
  {
    "text": "building micro service file architectures today where their systems are made up of lots of different components which you to act with each other whether it's over",
    "start": "135550",
    "end": "142180"
  },
  {
    "text": "our PC or through messaging however they talk with each other and the trend",
    "start": "142180",
    "end": "149560"
  },
  {
    "text": "within the industry is for teams to own their own operations so the teams that write services quite often are the ones",
    "start": "149560",
    "end": "157060"
  },
  {
    "text": "that are deploying them we have this problem where there's some shared infrastructure which is owned by its central operations team or maybe by one",
    "start": "157060",
    "end": "163660"
  },
  {
    "text": "of the service teams and smaller companies there's a whole bunch of shared infrastructure things like networking and edge routing database",
    "start": "163660",
    "end": "173710"
  },
  {
    "text": "clusters that kind of thing which may be owned centrally and we need to make those resources available for individual",
    "start": "173710",
    "end": "179500"
  },
  {
    "text": "service teams to be able to deploy that system so what we're after is a way of",
    "start": "179500",
    "end": "187830"
  },
  {
    "text": "writing code to make all this stuff happen so rather than clicking around the UI is to deploy services we want to be able to",
    "start": "188250",
    "end": "196180"
  },
  {
    "text": "codify the whole thing have it under source control and have everything be",
    "start": "196180",
    "end": "202090"
  },
  {
    "text": "repeatable so if you need to bring up new developer environments or you need to bring up a repertoire of production debug something you should be able to do",
    "start": "202090",
    "end": "208780"
  },
  {
    "text": "that if you have a consistent codified environment where the only changes are",
    "start": "208780",
    "end": "214420"
  },
  {
    "text": "made via code then that becomes possible so we're going to start by looking at",
    "start": "214420",
    "end": "220390"
  },
  {
    "text": "terraform and how that works it has anybody use terraform before ok so there's quite a lot of people that",
    "start": "220390",
    "end": "225640"
  },
  {
    "text": "haven't so I'm going to give maybe a five-minute quick intro to what terraform does and then go and just some",
    "start": "225640",
    "end": "230980"
  },
  {
    "text": "more in-depth features that enable this kind of pattern to work so terraform is",
    "start": "230980",
    "end": "238000"
  },
  {
    "start": "235000",
    "end": "378000"
  },
  {
    "text": "that infrastructure is code tool it's open source works with a ton of different clouds I'm going to use Amazon",
    "start": "238000",
    "end": "244209"
  },
  {
    "text": "because I like Amazon thanking you I'm going make a directory for NDC London",
    "start": "244209",
    "end": "255060"
  },
  {
    "text": "and so terraform code lives in TF files and you can either use this or you can",
    "start": "255440",
    "end": "260510"
  },
  {
    "text": "write JSON instead so tools can generate the code for you so in this case you live talk to AWS and we want to",
    "start": "260510",
    "end": "265970"
  },
  {
    "text": "provision a resource which is a virtual private cloud so that's Alan's version of Software Defined Networking in a",
    "start": "265970",
    "end": "271520"
  },
  {
    "text": "private address space so we want to sort - AWS so the first thing we're going to do is declare a provider so there are",
    "start": "271520",
    "end": "278540"
  },
  {
    "text": "lots of different providers was one for Azure whereas it to Fraser actually four depending on which API you want to talk to as one for Google as well giant",
    "start": "278540",
    "end": "285680"
  },
  {
    "text": "there's one for Amazon because you know about 50 of them including several SAS products to talk to AWS we need to",
    "start": "285680",
    "end": "293390"
  },
  {
    "text": "specify region so we can use the region parameter here so we'll say EU west -",
    "start": "293390",
    "end": "299290"
  },
  {
    "text": "this is the first time that's been in London since they open the region here and I'm hoping given tethered to a cell",
    "start": "299290",
    "end": "305000"
  },
  {
    "text": "phone the latency will be a bit better than it was talking to us West - earlier oh okay there we go so that would set up",
    "start": "305000",
    "end": "315560"
  },
  {
    "text": "a connection for us to talk to AWS so now we can start to declare the resources we want so in this case we",
    "start": "315560",
    "end": "320990"
  },
  {
    "text": "want to start by creating a V PC and we'll call it you know main main is fine",
    "start": "320990",
    "end": "327700"
  },
  {
    "text": "we happen to know I we could read the dots for this or we could go through like the UI and work out what we need to",
    "start": "327700",
    "end": "333290"
  },
  {
    "text": "know I happened to know in this case the main thing we need for the V PC is the address space so we need to give it a",
    "start": "333290",
    "end": "339350"
  },
  {
    "text": "slider block of the address space in which it allows might be addresses so in this case we'll say we'll use a simple",
    "start": "339350",
    "end": "345050"
  },
  {
    "text": "one 1001 10100 slash 16 so that gives you a lot of addresses and then maybe",
    "start": "345050",
    "end": "354530"
  },
  {
    "text": "we'll put some tags on it as well so we could say for example name equals NBC",
    "start": "354530",
    "end": "359690"
  },
  {
    "text": "London 2017 maybe environment equals production cool so what we've done here",
    "start": "359690",
    "end": "368390"
  },
  {
    "text": "is just described the desired state of the cloud what we want is this thing to exist and to have these properties and",
    "start": "368390",
    "end": "374060"
  },
  {
    "text": "then we want the other values to be set apply the cloud provider as anybody use",
    "start": "374060",
    "end": "379940"
  },
  {
    "start": "378000",
    "end": "692000"
  },
  {
    "text": "count formation or something similar like a zero resource manager templates like I think cool so there's a different",
    "start": "379940",
    "end": "385490"
  },
  {
    "text": "workflow with terraform than all those tools all of those tools in fact a reason the terraform exists is because I don't know anybody that's used",
    "start": "385490",
    "end": "393180"
  },
  {
    "text": "CloudFormation seriously that hasn't lost critical infrastructure because of cloud formation somewhere along the line so terraform takes the stance that",
    "start": "393180",
    "end": "399710"
  },
  {
    "text": "anything it's going to do is going to tell you about first and give you a chance to say none so if I get some AWS",
    "start": "399710",
    "end": "407490"
  },
  {
    "text": "credentials cool then we can run this",
    "start": "407490",
    "end": "416490"
  },
  {
    "text": "command in the directory where a files are terraform plan and what that will do is go and talk to a WS using the credentials that I have in my",
    "start": "416490",
    "end": "422520"
  },
  {
    "text": "environment and work out you know whether whether the state of what's",
    "start": "422520",
    "end": "429210"
  },
  {
    "text": "there now in the London region matches what was in my file and the answer is no it doesn't because that V PC doesn't",
    "start": "429210",
    "end": "434370"
  },
  {
    "text": "exist and if we go to the console we can verify you know your V pcs I'm in the",
    "start": "434370",
    "end": "439409"
  },
  {
    "text": "London region up here and there are no there are no BBC's here and the default so the one we want doesn't exist so we",
    "start": "439409",
    "end": "445680"
  },
  {
    "text": "can see terraform is going to add a WS v pc name with site of what we specified",
    "start": "445680",
    "end": "451440"
  },
  {
    "text": "and the tags we specified and all the other things are going to get there default options so maybe we want to do",
    "start": "451440",
    "end": "457800"
  },
  {
    "text": "something that isn't default options so maybe we want to actually do that a second so if I terraform apply now that",
    "start": "457800",
    "end": "464789"
  },
  {
    "text": "would take the plan and actually go and carry out the operations to make this thing exist cell connection is kind of",
    "start": "464789",
    "end": "474289"
  },
  {
    "text": "spotty hopefully it shouldn't take too long",
    "start": "474289",
    "end": "480080"
  },
  {
    "text": "okay",
    "start": "487259",
    "end": "490259"
  },
  {
    "text": "I guess its network traffic",
    "start": "493169",
    "end": "496999"
  },
  {
    "text": "to good job um okay so when I wait for that",
    "start": "502759",
    "end": "511470"
  },
  {
    "text": "to catch signal and actually do something useful I guess the demos are going to be lifted",
    "start": "511470",
    "end": "520039"
  },
  {
    "text": "as always happening to that and you actually start it again and see if we can make it right can i in google",
    "start": "520099",
    "end": "527220"
  },
  {
    "text": "because it's a really boring talk if they're an idealist cool Google's looking sides are aggressively plan",
    "start": "527220",
    "end": "541130"
  },
  {
    "text": "probably okay so I look like it's actually doing something now so maybe if",
    "start": "547339",
    "end": "554250"
  },
  {
    "text": "we apply and if Vodafone will cooperate then we should actually go and create",
    "start": "554250",
    "end": "559950"
  },
  {
    "text": "this thing in the meantime here we go so we're creating this resource that will",
    "start": "559950",
    "end": "567029"
  },
  {
    "text": "take a second there we go so we now have one resource added zero change zero",
    "start": "567029",
    "end": "574470"
  },
  {
    "text": "destroyed and if we go and look in the console we should see when we refresh",
    "start": "574470",
    "end": "580640"
  },
  {
    "text": "that what we have is a new V PC called let me do it bigger than epic called NBC",
    "start": "580640",
    "end": "588390"
  },
  {
    "text": "London with the tanks that we asked for and the size of address space that we",
    "start": "588390",
    "end": "594750"
  },
  {
    "text": "asked for now common problem with this kind of thing when you have infrastructure as code you may notice it if you run things like puppet on servers",
    "start": "594750",
    "end": "600510"
  },
  {
    "text": "as well if the people go and screw with this so people will go in and they'll edit things so maybe for example they'll",
    "start": "600510",
    "end": "606779"
  },
  {
    "text": "go and change this to be staging and eventually you have this nice",
    "start": "606779",
    "end": "613200"
  },
  {
    "text": "description of what your infrastructure should look like and then what's actually running and they never match up",
    "start": "613200",
    "end": "618529"
  },
  {
    "text": "so terraform will detect drift in configuration so if we run a new plan now having manually changed with",
    "start": "618529",
    "end": "624720"
  },
  {
    "text": "something in the console then terraform will work out that you know the state of the world that we declared no longer",
    "start": "624720",
    "end": "631290"
  },
  {
    "text": "matches the state of the actual world and it will tell us what it needs to do",
    "start": "631290",
    "end": "637709"
  },
  {
    "text": "it will give you a plan to bring it back in line with what the plan set with what the configuration set so in",
    "start": "637709",
    "end": "643590"
  },
  {
    "text": "this case we went air this is the tag so the plan to get it back to the desired",
    "start": "643590",
    "end": "649110"
  },
  {
    "text": "state is we need to change the AWS V PC domain resource I will come to that name",
    "start": "649110",
    "end": "654480"
  },
  {
    "text": "in a second and we need to take the the tag called environment and change this value from staging to production so if",
    "start": "654480",
    "end": "660450"
  },
  {
    "text": "we're going to play that it will do pretty much what you expect one of the",
    "start": "660450",
    "end": "667890"
  },
  {
    "text": "problems once you get beyond a single resource which is kind of boring is you",
    "start": "667890",
    "end": "674220"
  },
  {
    "text": "need a way of linking things together which don't necessarily exist yet there",
    "start": "674220",
    "end": "682140"
  },
  {
    "text": "we go if we go back to the console for a second to refresh we should see there we go we're back to production on our V PC",
    "start": "682140",
    "end": "687420"
  },
  {
    "text": "in the file so one of the one of the problems once we've got a network we",
    "start": "687420",
    "end": "694920"
  },
  {
    "text": "could go in for the subnet in it so we'll call this one public and this will be a sudden net we're going to put",
    "start": "694920",
    "end": "700680"
  },
  {
    "text": "internet-facing instances into so we give that a slider block and we'll say",
    "start": "700680",
    "end": "709640"
  },
  {
    "text": "10110 / 24 but the problem is we need a",
    "start": "709820",
    "end": "716190"
  },
  {
    "text": "way of referencing the V PC that we want this thing to be in and this is quite common pattern where you have a resource that depends on another resource and",
    "start": "716190",
    "end": "722550"
  },
  {
    "text": "there's an order to the creation unfortunately we can't use the ID which is what you'd expect if you're gonna",
    "start": "722550",
    "end": "728220"
  },
  {
    "text": "create one using the CLI you use create subnet and you give it the ID of the V PC that you want to you want to put the",
    "start": "728220",
    "end": "734100"
  },
  {
    "text": "subnet unfortunately for us in this model AWS identifies or assigned a",
    "start": "734100",
    "end": "740130"
  },
  {
    "text": "creation plan so we have no way of knowing right now what the v pc ID is we",
    "start": "740130",
    "end": "745290"
  },
  {
    "text": "might be in a state where it doesn't exist you three need some kind of reference internally to be able to use",
    "start": "745290",
    "end": "750750"
  },
  {
    "text": "to say we want this subnet in that V PC so some syntax for that in terraform",
    "start": "750750",
    "end": "756000"
  },
  {
    "text": "called interpolation so we can say V PC ID equals and then open up an",
    "start": "756000",
    "end": "761040"
  },
  {
    "text": "interpolation context and say AWS V PC so the resource types that we want to find and then the name and then dot ID",
    "start": "761040",
    "end": "768630"
  },
  {
    "text": "so the name here main matches the name that we gave to the V PC up there and then just for good housekeeping",
    "start": "768630",
    "end": "775670"
  },
  {
    "text": "we're going to put some tags on it and say public and just for good measure I'm",
    "start": "775670",
    "end": "786920"
  },
  {
    "text": "also going to put the second one in here and call it privates that would make it 2-0 cry so what we have now is two new",
    "start": "786920",
    "end": "798650"
  },
  {
    "text": "resources and one that already exists so if we go and make a plan in the other",
    "start": "798650",
    "end": "804110"
  },
  {
    "text": "window we expect terraform to find the VP see which we already created and we",
    "start": "804110",
    "end": "811010"
  },
  {
    "text": "expect it to need to create two new subnets and the second that will be",
    "start": "811010",
    "end": "817160"
  },
  {
    "text": "exactly what it does so here we go we need to change nothing except and we need to add these two resources so we",
    "start": "817160",
    "end": "823430"
  },
  {
    "text": "need to add this private subnet in this public something net and we can see that",
    "start": "823430",
    "end": "829160"
  },
  {
    "text": "it's pipe through the VP CID the actual value actually is known to us right now because we already created the thing if",
    "start": "829160",
    "end": "835010"
  },
  {
    "text": "we did if the VP see didn't exist and within this list of things to create that would be much as computed because",
    "start": "835010",
    "end": "840470"
  },
  {
    "text": "the value isn't going to be rarefied until such time as VP sees actually created as we miss something here if we",
    "start": "840470",
    "end": "850340"
  },
  {
    "text": "go back here there's actually nothing that makes this a public subnet so there's a little tag for that map public",
    "start": "850340",
    "end": "855710"
  },
  {
    "text": "IP on launch equals true so that means that instances in this subnet will get",
    "start": "855710",
    "end": "862610"
  },
  {
    "text": "you know an IP address that's public facing instances and the other one will not so if we go and apply this we'll get",
    "start": "862610",
    "end": "872480"
  },
  {
    "start": "870000",
    "end": "1007000"
  },
  {
    "text": "exactly what we expect we'll get the two subnets created and the reference back",
    "start": "872480",
    "end": "878210"
  },
  {
    "text": "so we within the same BBC and everything's good so that's fine when",
    "start": "878210",
    "end": "883580"
  },
  {
    "text": "we've got three resources and we can visualize what this thing looks like in our head there's a command which can",
    "start": "883580",
    "end": "888740"
  },
  {
    "text": "help that's the apply is running in the background just so these things are created quite often what you want is to",
    "start": "888740",
    "end": "897140"
  },
  {
    "text": "be able to visualize what the infrastructure looks like so there's commands of actual terror form grass oh yeah if you run that then it",
    "start": "897140",
    "end": "905869"
  },
  {
    "text": "will output grasses and unless you have like some kind of graphical Espace it in your mind then this means nothing to",
    "start": "905869",
    "end": "912439"
  },
  {
    "text": "anyone and if we pipe it through a tool for this such as dart then what we get",
    "start": "912439",
    "end": "923419"
  },
  {
    "text": "is a graph which shows the order or the dependencies between all the different components of your infrastructures so in",
    "start": "923419",
    "end": "928819"
  },
  {
    "text": "this case an arrow indication in word dependency so in this case we can see the creating the VPC depends on having a",
    "start": "928819",
    "end": "935839"
  },
  {
    "text": "provider creating the two subnets depends on having a V PC and then which",
    "start": "935839",
    "end": "941480"
  },
  {
    "text": "kind of an implementation detail we don't have to care about deserve debugging turned on what's important to",
    "start": "941480",
    "end": "948499"
  },
  {
    "text": "note here is that there's no arrow between the private and public subnets here because they actually share nothing",
    "start": "948499",
    "end": "953919"
  },
  {
    "text": "all the information known to them is all the information was required to go and create them is a known at the time the V",
    "start": "953919",
    "end": "960889"
  },
  {
    "text": "PC has been finished that's finish being created so that means we can paralyze these operations it's actually not a big",
    "start": "960889",
    "end": "967069"
  },
  {
    "text": "deal for subnets because they take about a second to create if you're doing something like an elastic search cluster",
    "start": "967069",
    "end": "972739"
  },
  {
    "text": "or and they'll actually MapReduce cluster or something like that they can take ten to fifteen minutes to come up",
    "start": "972739",
    "end": "978139"
  },
  {
    "text": "so being able to paralyze things that don't depend on one another is actually a really important optimization to be",
    "start": "978139",
    "end": "983239"
  },
  {
    "text": "able to make this thing fast and if we go and look at the the way the",
    "start": "983239",
    "end": "988879"
  },
  {
    "text": "operations were dispatched when we created this when we applied this plan we can see it started creating both of",
    "start": "988879",
    "end": "994039"
  },
  {
    "text": "these things in parallel and neither of them finish they were both running at the same time so they weren't running",
    "start": "994039",
    "end": "1000939"
  },
  {
    "text": "sequentially",
    "start": "1000939",
    "end": "1003569"
  },
  {
    "text": "there's a whole ton of resources that we could go and do like this just for AWS is you know probably 150 maybe 200",
    "start": "1006120",
    "end": "1012870"
  },
  {
    "text": "something like that if we go and look at the docs for the provider here because",
    "start": "1012870",
    "end": "1019070"
  },
  {
    "text": "we can tell they're a we can tell any to them redesign adults when you have to do this and the the list carries on well",
    "start": "1019070",
    "end": "1026910"
  },
  {
    "text": "beyond the actual documentation so basically any aspect of the AWS cloud you can go and automate in this manner",
    "start": "1026910",
    "end": "1033030"
  },
  {
    "text": "and you can tie all of these things together and furthermore all of these",
    "start": "1033030",
    "end": "1038760"
  },
  {
    "text": "clouds or all of these cloud services can be managed in exactly the same way with exactly the same syntax so we can",
    "start": "1038760",
    "end": "1045180"
  },
  {
    "text": "for the the most important ones probably as your Google compute joins which is",
    "start": "1045180",
    "end": "1051600"
  },
  {
    "text": "under trained VMware if you have a local VMware and you can orchestrate that in the same manner digitalocean is anybody",
    "start": "1051600",
    "end": "1059640"
  },
  {
    "text": "using something that's not one of those things what are you using software actually SoftLayer is that yes okay",
    "start": "1059640",
    "end": "1068220"
  },
  {
    "text": "actually someone wrote that for us I forget who it was one of software's customers wrote that for us so what",
    "start": "1068220",
    "end": "1075060"
  },
  {
    "text": "becomes interesting is that you're not limited to having a configuration that references within one cloud so we could",
    "start": "1075060",
    "end": "1081660"
  },
  {
    "text": "for example and I'm not going to run this to that I have any easier credentials but we could do for example",
    "start": "1081660",
    "end": "1088040"
  },
  {
    "start": "1082000",
    "end": "1144000"
  },
  {
    "text": "what's called Azure virtual virtual network test and have whatever and then",
    "start": "1089270",
    "end": "1100800"
  },
  {
    "text": "have route locks in here which map to the AWS VPC we've created and it will",
    "start": "1100800",
    "end": "1109470"
  },
  {
    "text": "orchestrate across clouds using exactly the same dependency graph models that deal with in one so a really common use",
    "start": "1109470",
    "end": "1116040"
  },
  {
    "text": "case for this is to create a bunch of resources in AWS and then don't set the NS records and something like damn",
    "start": "1116040",
    "end": "1122010"
  },
  {
    "text": "simple or blind DNS or somewhere like that so that covers that kind of covers an",
    "start": "1122010",
    "end": "1131510"
  },
  {
    "text": "introduction to how the the resource model of careful works together that works and how resources into link with",
    "start": "1131510",
    "end": "1137900"
  },
  {
    "text": "each other I'm not going to go too much more in depth with that too though I talk about console instead so console is",
    "start": "1137900",
    "end": "1144530"
  },
  {
    "start": "1144000",
    "end": "1442000"
  },
  {
    "text": "a tool for service discovery and what I'm going to do is connect to a VPN and",
    "start": "1144530",
    "end": "1152870"
  },
  {
    "text": "just show you console in action because it's easier to visualize this thing than it is to just look at just abstract",
    "start": "1152870",
    "end": "1160400"
  },
  {
    "text": "descriptions of it so I'm going to connect to one of our new staging environments which is running console",
    "start": "1160400",
    "end": "1166340"
  },
  {
    "text": "inside of AWS and it was created using",
    "start": "1166340",
    "end": "1171440"
  },
  {
    "text": "Sarah forms but the whole thing was managed it was created with zero operator input other than one one",
    "start": "1171440",
    "end": "1176810"
  },
  {
    "text": "command effectively if I go to the console TFE staging local this this is",
    "start": "1176810",
    "end": "1183050"
  },
  {
    "text": "the UI the console present so effectively console is different from terraform in that it's not a build time - it's a run time tool that runs in your",
    "start": "1183050",
    "end": "1189740"
  },
  {
    "text": "infrastructure constantly and it has a server component so some of those active servers and then there's an agent that",
    "start": "1189740",
    "end": "1195800"
  },
  {
    "text": "runs on every single node in your entire infrastructure and that gives you a common place to go and talk to console",
    "start": "1195800",
    "end": "1201140"
  },
  {
    "text": "so one of the questions that the answers for example is if I'm the orders service",
    "start": "1201140",
    "end": "1206630"
  },
  {
    "text": "over here and I need to talk to the payment service over here how do I find one yeah I know that I need to talk to",
    "start": "1206630",
    "end": "1212180"
  },
  {
    "text": "payments but I don't really want to be hugged coding the IP address of the mode that happens to be running payments",
    "start": "1212180",
    "end": "1217280"
  },
  {
    "text": "right now because if we're in the cloud we've got some kind of dynamic infrastructure of play so the instance that's there when your order service was",
    "start": "1217280",
    "end": "1224600"
  },
  {
    "text": "deployed might not be there tomorrow you might be scaling according to demand or you might be I know one might fail you",
    "start": "1224600",
    "end": "1231950"
  },
  {
    "text": "have to bring up a different one you don't have to go and update things to deal with that problem so what counsel",
    "start": "1231950",
    "end": "1238460"
  },
  {
    "text": "does is bringing the idea of services and we can see a few different services are registered with a console right now",
    "start": "1238460",
    "end": "1245410"
  },
  {
    "text": "including console itself so I have for example this console snapshot service and what that does is backs up console",
    "start": "1245410",
    "end": "1253040"
  },
  {
    "text": "it doesn't really matter what the functional post services right now what the point is it registers itself as a and we have it running on three",
    "start": "1253040",
    "end": "1259540"
  },
  {
    "text": "different modes right now and we can see the modes which are running on we prefix",
    "start": "1259540",
    "end": "1265240"
  },
  {
    "text": "at console servers with the name console so we have this node name made up of the",
    "start": "1265240",
    "end": "1270310"
  },
  {
    "text": "IP address and then we have some some service health checks so service health",
    "start": "1270310",
    "end": "1276040"
  },
  {
    "text": "checks help identify so this node is running this software is the software healthy or not can I route request to it",
    "start": "1276040",
    "end": "1282660"
  },
  {
    "text": "if it was a web app maybe it would look to see can I connect to my database or can I connect to this third-party",
    "start": "1282660",
    "end": "1289510"
  },
  {
    "text": "service that they need is this other downstream thing available to me this is a really important thing to know whether",
    "start": "1289510",
    "end": "1294790"
  },
  {
    "text": "I should be routing traffic to it or not you need to know is it going to be able to service my request because otherwise just going to keep serving up errors so",
    "start": "1294790",
    "end": "1301870"
  },
  {
    "text": "in this case all of our nodes are healthy we have one which is actually",
    "start": "1301870",
    "end": "1308140"
  },
  {
    "text": "operating right now this is a backup program this is one of the things where we run it three times but only one of it's actually doing any work and if that",
    "start": "1308140",
    "end": "1315370"
  },
  {
    "text": "one fails a different one will take over leadership and and take on the responsibility of backing up our data",
    "start": "1315370",
    "end": "1321390"
  },
  {
    "text": "look at a different one here in this case we have a service named OpenVPN",
    "start": "1321390",
    "end": "1327400"
  },
  {
    "text": "which is the way that i'm connecting into this free pc even though everything's private and that has a",
    "start": "1327400",
    "end": "1334090"
  },
  {
    "text": "health check which is is the box available which is the serf health status and then it has a secondary check",
    "start": "1334090",
    "end": "1339940"
  },
  {
    "text": "which is is the open VPN software",
    "start": "1339940",
    "end": "1345070"
  },
  {
    "text": "running correctly can I make a TCP connection to port 1 1 9 which is what I'm running on and establish that",
    "start": "1345070",
    "end": "1351460"
  },
  {
    "text": "connection these are actually Maggio's compatible checks so if you're already using something like Nagios or sensitive",
    "start": "1351460",
    "end": "1357070"
  },
  {
    "text": "to be able to to monitor systems like a",
    "start": "1357070",
    "end": "1363330"
  },
  {
    "text": "hourly or even 5-minute kind of check thing you can just drop them straight it",
    "start": "1363330",
    "end": "1368490"
  },
  {
    "text": "so in this case we can see those nodes alive and reachable and we can connect to that port so we're going to assume",
    "start": "1368490",
    "end": "1374440"
  },
  {
    "text": "this is a healthy instance you could write better checks that verify and serving the correct protocol or that kind of thing or the keys on our date",
    "start": "1374440",
    "end": "1382200"
  },
  {
    "text": "but these are fine for now let's go look at an actual service that",
    "start": "1382200",
    "end": "1388909"
  },
  {
    "text": "you might connect to and see how you can use this information to discover where your things are so in this case we have",
    "start": "1388909",
    "end": "1394789"
  },
  {
    "text": "a vault not a vault server vault is vault of a secret management service so",
    "start": "1394789",
    "end": "1401389"
  },
  {
    "text": "it's quite common for application those who have to go and talk to vault because they need a secret maybe they need an API token for Trulia or maybe they need",
    "start": "1401389",
    "end": "1408019"
  },
  {
    "text": "to get database credentials or something like that so they need to be able to answer the question where is a lot",
    "start": "1408019",
    "end": "1415429"
  },
  {
    "text": "server I can talk to and furthermore with vault it has a high availability mode but because it's an authoritative",
    "start": "1415429",
    "end": "1420499"
  },
  {
    "text": "source of information only one is active at a given time so there's a leader and then was an active mode and Andres",
    "start": "1420499",
    "end": "1426649"
  },
  {
    "text": "standby nodes so what we really want to know is who is the active node right now so we can go and torture we can go ask",
    "start": "1426649",
    "end": "1433279"
  },
  {
    "text": "for the secrets that we need so how would we get this information now we",
    "start": "1433279",
    "end": "1440179"
  },
  {
    "text": "have a couple of all servers running and I'm inside the VPN so I can I can",
    "start": "1440179",
    "end": "1445519"
  },
  {
    "start": "1442000",
    "end": "1532000"
  },
  {
    "text": "resolve names within that private network so one way to do it is DNS right",
    "start": "1445519",
    "end": "1451759"
  },
  {
    "text": "you could look up volt whatever and it could go and tell you okay well the vault servers over here the IP addresses",
    "start": "1451759",
    "end": "1458600"
  },
  {
    "text": "is like the original abstraction but IP is the names well probably not the original one but the most preeminent one",
    "start": "1458600",
    "end": "1465789"
  },
  {
    "text": "so the way we do that for services that aren't going to integrate with console and there are some there are deeper integrations that",
    "start": "1465789",
    "end": "1471320"
  },
  {
    "text": "you can do but for the vast majority of people DNS is fine what they want to be",
    "start": "1471320",
    "end": "1476419"
  },
  {
    "text": "able to do is say where's what so we can use any DNS client and say",
    "start": "1476419",
    "end": "1482499"
  },
  {
    "text": "plus search for Mac OS reasons and we",
    "start": "1482499",
    "end": "1487940"
  },
  {
    "text": "can say vault service console and what that will do is resolve console to a",
    "start": "1487940",
    "end": "1495379"
  },
  {
    "text": "console server and console as a cluster communicates with every node about where everything is so the local thing running",
    "start": "1495379",
    "end": "1501860"
  },
  {
    "text": "on your box can answer the question about what's running like in a different data center or anywhere in your",
    "start": "1501860",
    "end": "1507169"
  },
  {
    "text": "infrastructure now the default name is console we actually use a different one because we have a unique problem where",
    "start": "1507169",
    "end": "1513440"
  },
  {
    "text": "lots of customers also use the name console and we don't want conflict Oh",
    "start": "1513440",
    "end": "1518500"
  },
  {
    "text": "okay",
    "start": "1526020",
    "end": "1528860"
  },
  {
    "text": "fair enough clearly three does not appreciate my DNS forwarding or vote up",
    "start": "1534210",
    "end": "1541050"
  },
  {
    "text": "I'm sorry you can use you can use DNS to ping these things so any services registered becomes a DNS name so in the",
    "start": "1541050",
    "end": "1548070"
  },
  {
    "text": "dot service namespace so if my application my ordering service needs to",
    "start": "1548070",
    "end": "1553710"
  },
  {
    "text": "talk to volt to get a secret for the payment processor or something it can it can just make request as it was doing",
    "start": "1553710",
    "end": "1559320"
  },
  {
    "text": "before with a hostname of volt service with Atlas and volt and the console will",
    "start": "1559320",
    "end": "1564690"
  },
  {
    "text": "take into account the help of all of the instances when it returns your value and",
    "start": "1564690",
    "end": "1573020"
  },
  {
    "text": "furthermore it will show you something more interesting about that if you're in a data center over here and you have an",
    "start": "1573020",
    "end": "1581550"
  },
  {
    "text": "instance of volt right here which happens what ISO volts about example vectors you can only talk to one let's",
    "start": "1581550",
    "end": "1587010"
  },
  {
    "text": "say we're talking to our payments processor and there are lots of those running if I'm over here in my data",
    "start": "1587010",
    "end": "1593160"
  },
  {
    "text": "center so in Iraq one or something and I have another instance in rack one I want",
    "start": "1593160",
    "end": "1600330"
  },
  {
    "text": "to talk to the one in rack one not the one the other side of data center several rows away so I am interested in",
    "start": "1600330",
    "end": "1605490"
  },
  {
    "text": "is not physical distance it's the round-trip time between the services so I'm interested in talking to the closest",
    "start": "1605490",
    "end": "1610980"
  },
  {
    "text": "server to me and because consoles running on every node and it's the gossiping among every node in the entire",
    "start": "1610980",
    "end": "1616350"
  },
  {
    "text": "infrastructure we actually can infer information about which nodes are close",
    "start": "1616350",
    "end": "1622200"
  },
  {
    "text": "to each other in terms of time so here we have this this visualization of this which explains the round-trip time",
    "start": "1622200",
    "end": "1629070"
  },
  {
    "text": "between every nut so in this case if I look at this the center of it is me and",
    "start": "1629070",
    "end": "1637290"
  },
  {
    "text": "then each line on this represents some other computer in the infrastructure and",
    "start": "1637290",
    "end": "1642960"
  },
  {
    "text": "the round-trip time for this service so we can do in text arts through intelligent routing explaining",
    "start": "1642960",
    "end": "1648210"
  },
  {
    "text": "okay well I'm over here and I need to talk to volt where do I go torture well",
    "start": "1648210",
    "end": "1654980"
  },
  {
    "text": "there are some other features that console has as well for things like configuration values so if you ever need to role feature flags around to lots of",
    "start": "1654980",
    "end": "1661830"
  },
  {
    "text": "people it gives you a way to do that as well but the primary for that primary purpose of it is service discovery so the first stage in",
    "start": "1661830",
    "end": "1671659"
  },
  {
    "text": "being able to automate all the infrastructure or one of the first pages is having everything taught through flight service discovery so we want to",
    "start": "1671659",
    "end": "1677210"
  },
  {
    "text": "end the idea that if you're going to deploy an application it needs to know",
    "start": "1677210",
    "end": "1682429"
  },
  {
    "text": "exact locations about all of its dependencies so if I'm deploying my order service then I don't want to be",
    "start": "1682429",
    "end": "1690049"
  },
  {
    "text": "saying the IP addresses payments gateway is 1/9 2 1 6 a 5.6 I want to be saying",
    "start": "1690049",
    "end": "1697719"
  },
  {
    "text": "the way you find it is via this service discovery registry there are lots of these things around you can build them",
    "start": "1697719",
    "end": "1703309"
  },
  {
    "text": "on top of zookeeper or Etsy be a little consul whichever one you whiche have a particular one you like you can also do",
    "start": "1703309",
    "end": "1708799"
  },
  {
    "text": "it with DNS the only problem with most DNS servers is they tend to be",
    "start": "1708799",
    "end": "1714320"
  },
  {
    "text": "configured in a manner that leads cached values to be returned on a fairly",
    "start": "1714320",
    "end": "1720169"
  },
  {
    "text": "regular basis so that's the first kind of step is you want services to register",
    "start": "1720169",
    "end": "1727309"
  },
  {
    "start": "1722000",
    "end": "1892000"
  },
  {
    "text": "themselves with console so that when an instance comes into service say we have an auto service comes up we want it to",
    "start": "1727309",
    "end": "1733429"
  },
  {
    "text": "register with console and say this service is now available on this node and it's in this state of health and",
    "start": "1733429",
    "end": "1738909"
  },
  {
    "text": "then under the third console we'll do I sort of look up to see and it's close to these other notes so we should be",
    "start": "1738909",
    "end": "1744859"
  },
  {
    "text": "returning it in preference to other nodes when we're when we're determining",
    "start": "1744859",
    "end": "1750289"
  },
  {
    "text": "routing policy as soon as you've got that then what you've done is decouple",
    "start": "1750289",
    "end": "1755839"
  },
  {
    "text": "the location of services from the people that need to use them there's also a",
    "start": "1755839",
    "end": "1762710"
  },
  {
    "text": "great property of DNS so most of the same arguments apply you're abstracting out location and name resolution instead",
    "start": "1762710",
    "end": "1771019"
  },
  {
    "text": "of having these things hard-coded so once you've done that you have a lot",
    "start": "1771019",
    "end": "1776029"
  },
  {
    "text": "more freedom about where you put things because you don't have to go and update configuration registries",
    "start": "1776029",
    "end": "1783009"
  },
  {
    "text": "one of the common ones that you have to update is let's say you bring up a website if you have a like a rails app",
    "start": "1785600",
    "end": "1790620"
  },
  {
    "text": "or a Java app or something that's running your your public facing Internet",
    "start": "1790620",
    "end": "1795630"
  },
  {
    "text": "service one of the things that you need to do is register it with a load balancer so when you have when when",
    "start": "1795630",
    "end": "1801990"
  },
  {
    "text": "someone visits google.com or whatever they're being taken to one of several web servers behind the load balancing",
    "start": "1801990",
    "end": "1807780"
  },
  {
    "text": "system what we'd like is for the load",
    "start": "1807780",
    "end": "1813090"
  },
  {
    "text": "balancing system to integrate with this or with some kind of service discovery mechanism to know where can I route",
    "start": "1813090",
    "end": "1822510"
  },
  {
    "text": "traffic to who are my closest to right now so you generally have several load balancers and do some kind of layer",
    "start": "1822510",
    "end": "1828260"
  },
  {
    "text": "something that 2 or 3 routing first Who am i close to who should I be talking to",
    "start": "1828260",
    "end": "1834380"
  },
  {
    "text": "how can i router needs a healthy inferences all the same questions apply all the way out to the edge and this is",
    "start": "1834380",
    "end": "1840000"
  },
  {
    "text": "what's commonly missed there's a service there's a system that eBay built called Fabio I'm not going to talk much about",
    "start": "1840000",
    "end": "1848730"
  },
  {
    "text": "beyond showing that it exists and what Fabio is is a load balancer in the st.",
    "start": "1848730",
    "end": "1854790"
  },
  {
    "text": "in a similar vein to nginx or or H a proxy that will integrate directly with",
    "start": "1854790",
    "end": "1862440"
  },
  {
    "text": "console so all you have to do is register services with consul and it will automatically do route forwarding",
    "start": "1862440",
    "end": "1867780"
  },
  {
    "text": "for you so if you say if the auto services on slash orders then you can specify that when you register the",
    "start": "1867780",
    "end": "1873390"
  },
  {
    "text": "service and it will automatically hook in to any available order processing interfaces and create an API gateway",
    "start": "1873390",
    "end": "1879840"
  },
  {
    "text": "that matches what you need we don't really have time to talk too much about",
    "start": "1879840",
    "end": "1885420"
  },
  {
    "text": "that so let's go back to this idea of",
    "start": "1885420",
    "end": "1890870"
  },
  {
    "start": "1892000",
    "end": "2062000"
  },
  {
    "text": "let's go back to this idea of teams deploying independently and how we can",
    "start": "1892520",
    "end": "1898860"
  },
  {
    "text": "make that work we've now decoupled the runtime discovery of things so runtime",
    "start": "1898860",
    "end": "1906480"
  },
  {
    "text": "orders the order service doesn't need to know about shipping service doesn't need to know about the payment service other than by the fact that it exists at some",
    "start": "1906480",
    "end": "1912930"
  },
  {
    "text": "name and it can go and use this to party shared infrastructure to go into Scovel where these things are",
    "start": "1912930",
    "end": "1919460"
  },
  {
    "text": "how do we do this in the first place how we get these teams to be able to deploy independently at different speeds one",
    "start": "1919890",
    "end": "1927130"
  },
  {
    "text": "thing we could do is one thing we could",
    "start": "1927130",
    "end": "1932320"
  },
  {
    "text": "do is share the values about things like a well we're going to deploy inside this V PC and we're going to deploy in these",
    "start": "1932320",
    "end": "1938560"
  },
  {
    "text": "subnets so we could disseminate the information manually we could have some kind of like shared repository of where",
    "start": "1938560",
    "end": "1944950"
  },
  {
    "text": "that lives and then every service team could write their own configuration for Terra formal transformation which make",
    "start": "1944950",
    "end": "1951130"
  },
  {
    "text": "use of those values there's one way to do it but eventually a system for",
    "start": "1951130",
    "end": "1956590"
  },
  {
    "text": "composing these states built-in to terraform so let me show us some some",
    "start": "1956590",
    "end": "1962980"
  },
  {
    "text": "code that we actually use in production that that uses this model so we have a",
    "start": "1962980",
    "end": "1971710"
  },
  {
    "text": "central operations team that manages and networking routing at work so network",
    "start": "1971710",
    "end": "1977970"
  },
  {
    "text": "networking and shared infrastructure so that we might as council we manage across the schedule we manage world and",
    "start": "1977970",
    "end": "1983890"
  },
  {
    "text": "then everybody deploys services on top of those things but even within that even within our infrastructure team we",
    "start": "1983890",
    "end": "1989530"
  },
  {
    "text": "have different people who've been responsible for different aspects of it we also stick everything in one big",
    "start": "1989530",
    "end": "1995020"
  },
  {
    "text": "repository and say this is our entire infrastructure we have tried doing that and there are ways to do that but it",
    "start": "1995020",
    "end": "2000120"
  },
  {
    "text": "turns out it'll scale that well so one of the things we have for example is a a",
    "start": "2000120",
    "end": "2007670"
  },
  {
    "text": "terraform configuration that creates us a a complete V PC that has all of the",
    "start": "2007670",
    "end": "2017610"
  },
  {
    "text": "resources we would need for the networking it will configure it in a best-practice manner across different",
    "start": "2017610",
    "end": "2023550"
  },
  {
    "text": "data centers with with all the various different traffic abuse rates and mat and Internet gateways and flow logging",
    "start": "2023550",
    "end": "2031200"
  },
  {
    "text": "and all the small of the normal stuff these I'm not currently open source but they probably will be by the end of",
    "start": "2031200",
    "end": "2036660"
  },
  {
    "text": "tomorrow but it's going to open source all of this stuff we actually use for infrastructure wrote this is like",
    "start": "2036660",
    "end": "2042480"
  },
  {
    "text": "everybody trying to bake their own versions of it so what we end up with with what we end",
    "start": "2042480",
    "end": "2050550"
  },
  {
    "text": "up without this I'm just going to show this fat for a second is it that's where it all runs there's nothing here you can't do",
    "start": "2050550",
    "end": "2056190"
  },
  {
    "text": "without without the open-source software so in this case we have these different",
    "start": "2056190",
    "end": "2062070"
  },
  {
    "start": "2062000",
    "end": "2102000"
  },
  {
    "text": "aspects of our infrastructure so in this case we have a base V PC and maybe as I",
    "start": "2062070",
    "end": "2071250"
  },
  {
    "text": "spend this out we can see there are some outputs from this and the outputs of values which we've decided are probably",
    "start": "2071250",
    "end": "2077070"
  },
  {
    "text": "useful to other people so things like what are the IDS of the subnets that you're going to deploy your services into what's the zone idea of a",
    "start": "2077070",
    "end": "2084780"
  },
  {
    "text": "DNS name what's the s3 bucket",
    "start": "2084780",
    "end": "2092639"
  },
  {
    "text": "sorry s3 endpoint names that we can attach policies to it downstream so",
    "start": "2092640",
    "end": "2097650"
  },
  {
    "text": "these can pose together by allowing different different parts of the infrastructures then consume those",
    "start": "2097650",
    "end": "2104220"
  },
  {
    "start": "2102000",
    "end": "2342000"
  },
  {
    "text": "values in a dynamic manner so if we go and look at something that uses this we",
    "start": "2104220",
    "end": "2110580"
  },
  {
    "text": "have no general environment staging main",
    "start": "2110580",
    "end": "2120500"
  },
  {
    "text": "what we have is effectively a module and a module it brings together all of the",
    "start": "2120620",
    "end": "2125940"
  },
  {
    "text": "resources necessary to create some things so in this case it's a cluster I should probably revoke that so kind of",
    "start": "2125940",
    "end": "2132990"
  },
  {
    "text": "spoken now which this is the second climbing to talks where I've displayed",
    "start": "2132990",
    "end": "2138030"
  },
  {
    "text": "something secret on me on the projector last night was my github password yeah it was excellent",
    "start": "2138030",
    "end": "2145580"
  },
  {
    "text": "so one of the things that tariffs unless you do we didn't cover in the basic intro is lookup data dynamically so for",
    "start": "2145580",
    "end": "2152400"
  },
  {
    "text": "example one of the things we might want to know is which machine image are we going to use so we might want to use the",
    "start": "2152400",
    "end": "2157770"
  },
  {
    "text": "latest Amazon provided upon - we might be building custom images so we might be in this case we're using Packer to build",
    "start": "2157770",
    "end": "2164610"
  },
  {
    "text": "an image of a console server which comes up ready to work so we don't boot this and from them run chef on it or",
    "start": "2164610",
    "end": "2170400"
  },
  {
    "text": "something these things are pre baked and they're pre baked to come up discover where they are and then just make everything work",
    "start": "2170400",
    "end": "2177210"
  },
  {
    "text": "so in this case we don't know what the image idea is going to be necessarily",
    "start": "2177210",
    "end": "2182490"
  },
  {
    "text": "because we could run it in a different account we could run in a different region so what we can do is query this thing dynamically so in this case we",
    "start": "2182490",
    "end": "2188880"
  },
  {
    "text": "have a data source called an AWS am I in this case is doc console so we're",
    "start": "2188880",
    "end": "2195030"
  },
  {
    "text": "looking for console servers and we match by tags that are yeah we filtered by tags and them by ownership and we just",
    "start": "2195030",
    "end": "2201660"
  },
  {
    "text": "want the most recent one so what this is going to return is you know am i one two three four or whatever which is the the",
    "start": "2201660",
    "end": "2207480"
  },
  {
    "text": "name of the server but we can extend that concept once we have the ability to dynamically lookup values of planned",
    "start": "2207480",
    "end": "2212760"
  },
  {
    "text": "time then we have the ability to compose different pieces of infrastructure state",
    "start": "2212760",
    "end": "2218940"
  },
  {
    "text": "so if we have one that contains all the information about how to network and it has outputs defined on it which the",
    "start": "2218940",
    "end": "2224369"
  },
  {
    "text": "outputs we saw over here so things like",
    "start": "2224369",
    "end": "2229470"
  },
  {
    "text": "the subnet IDs we can query those a planned time to be able to move values",
    "start": "2229470",
    "end": "2236099"
  },
  {
    "text": "in a read-only fashion from the central authority that controls that thing out to the people that need to use it at",
    "start": "2236099",
    "end": "2243150"
  },
  {
    "text": "least don't change that often so there's no need for it to be a real-time process generally they change generally you need",
    "start": "2243150",
    "end": "2248309"
  },
  {
    "text": "some more than one time when you when you go create the infrastructure so the way that works is a thing called remote",
    "start": "2248309",
    "end": "2256530"
  },
  {
    "text": "state so what we can say is we're interested in the outputs of this part",
    "start": "2256530",
    "end": "2262319"
  },
  {
    "text": "of our infrastructure so in this case TFE staging is that is that our counts of terraform Enterprise staging and then",
    "start": "2262319",
    "end": "2269180"
  },
  {
    "text": "base VP C is the name of that component of the infrastructure that I was just talking about that has subnets that kind",
    "start": "2269180",
    "end": "2276450"
  },
  {
    "text": "of thing so we can look up all of those outputs and make them available through interpolation so if we look up here for",
    "start": "2276450",
    "end": "2284910"
  },
  {
    "text": "example we need to know which subnets we're going to go we're going to deploy into we just go and look that up from",
    "start": "2284910",
    "end": "2292049"
  },
  {
    "text": "the people who created them then we don't have any values to copy and paste we don't have any variables to set and essentially get out of sync we don't",
    "start": "2292049",
    "end": "2298740"
  },
  {
    "text": "have any we don't have any tie to the fact that we originally created in a V",
    "start": "2298740",
    "end": "2304619"
  },
  {
    "text": "PC over here we could go and deploy this exact same script somewhere else and if the values underneath it",
    "start": "2304619",
    "end": "2310290"
  },
  {
    "text": "the plan will be updated to reflect the new reality of what it needs I really",
    "start": "2310290",
    "end": "2318180"
  },
  {
    "text": "need to remove that token now you can",
    "start": "2318180",
    "end": "2325140"
  },
  {
    "text": "apply this for applications as well it's quite common to get individual applications for example let's look at",
    "start": "2325140",
    "end": "2336769"
  },
  {
    "text": "let's look at revolt for example so volt is a system that presents itself as",
    "start": "2339290",
    "end": "2345390"
  },
  {
    "start": "2342000",
    "end": "2562000"
  },
  {
    "text": "software it's just a binary download but just downloading the binary is rarely enough to actually run this with a",
    "start": "2345390",
    "end": "2351120"
  },
  {
    "text": "production quality system you need a whole lot of other resources around it you need things like security groups to",
    "start": "2351120",
    "end": "2358080"
  },
  {
    "text": "lock down the traffic that's going in and out of the instances you need policies so that it can pack itself up",
    "start": "2358080",
    "end": "2363840"
  },
  {
    "text": "into s3 so that you can give it you know instance profile to those not familiar",
    "start": "2363840",
    "end": "2369390"
  },
  {
    "text": "with AWS that's a way that you can run machines access to resources within AWS",
    "start": "2369390",
    "end": "2375740"
  },
  {
    "text": "that's a really neat system allows for a lot but all of these things are part of",
    "start": "2375740",
    "end": "2382080"
  },
  {
    "text": "deploying role they don't live there not someone else's problem there the problem of the person who's setting up volt",
    "start": "2382080",
    "end": "2388620"
  },
  {
    "text": "right now so all of these things should probably live together so one aspect of it is installing software that's fairly",
    "start": "2388620",
    "end": "2396510"
  },
  {
    "text": "straightforward and I'll show you this log we use",
    "start": "2396510",
    "end": "2401720"
  },
  {
    "text": "there are basically two parts to all of this there's there's instances so in this case our instances are a bit more",
    "start": "2406200",
    "end": "2412380"
  },
  {
    "text": "complicated for me the CPC things we were looking at earlier but then making use of data which is pulled in from",
    "start": "2412380",
    "end": "2417900"
  },
  {
    "text": "other places so we're taking things like which subnets are we going into we take them out from the from the V PC",
    "start": "2417900",
    "end": "2425250"
  },
  {
    "text": "configuration we take things like which Amazon machine image am I going to run based on the tags of the image so that",
    "start": "2425250",
    "end": "2431700"
  },
  {
    "text": "all this becomes dynamically discoverable a planned time we also pass in from secrets to it which as I've",
    "start": "2431700",
    "end": "2438089"
  },
  {
    "text": "demonstrated is clearly a bad idea because they get public somehow regardless of what you think they want",
    "start": "2438089",
    "end": "2444950"
  },
  {
    "text": "but the instance is anyone problem is we also have security groups that live with the instance declaration so these you",
    "start": "2444950",
    "end": "2452190"
  },
  {
    "text": "know this defines all the ports that that particular software needs open we also have a bunch of ion policies so ion",
    "start": "2452190",
    "end": "2464039"
  },
  {
    "text": "policies in this case define what things are allowed to do so the in this case this server is allowed to get it TLS",
    "start": "2464039",
    "end": "2470430"
  },
  {
    "text": "keys and decrypt them it's allowed to describe its own environment so that",
    "start": "2470430",
    "end": "2475920"
  },
  {
    "text": "when it comes up it can configure itself correctly and launch itself into service",
    "start": "2475920",
    "end": "2482029"
  },
  {
    "text": "if we imagine that I was a team you know maybe I work in a bank rather than a small company banks have whole teams",
    "start": "2482779",
    "end": "2489509"
  },
  {
    "text": "just dedicated to deploying this one service and they almost certainly have",
    "start": "2489509",
    "end": "2497220"
  },
  {
    "text": "the same requirements right they want to be able to maintain control over all of the resources that they're responsible for in a single place in a controlled",
    "start": "2497220",
    "end": "2503670"
  },
  {
    "text": "manner and be able to replicate this thing across different base infrastructures so you can make use of",
    "start": "2503670",
    "end": "2510079"
  },
  {
    "text": "these patterns effectively across not only to scale between different teams",
    "start": "2510079",
    "end": "2516690"
  },
  {
    "text": "but also to scope responsibilities within a small team which is what we do so there's no reason in principle that",
    "start": "2516690",
    "end": "2521970"
  },
  {
    "text": "each component of your architecture for example console and nomads and OpenVPN",
    "start": "2521970",
    "end": "2530400"
  },
  {
    "text": "and your actual applications there's no reason in principle that you can't apply",
    "start": "2530400",
    "end": "2535740"
  },
  {
    "text": "exactly the same patents for infrastructure as - sorry - applications swim for structure you can take the",
    "start": "2535740",
    "end": "2541710"
  },
  {
    "text": "values you need from elsewhere you can make them discover their environment you can make them dynamically register themselves so that you can scale these",
    "start": "2541710",
    "end": "2548069"
  },
  {
    "text": "things out and move them around in a transparent manner and you can",
    "start": "2548069",
    "end": "2554359"
  },
  {
    "text": "effectively get to the point where you end up with a system like this being",
    "start": "2554359",
    "end": "2562200"
  },
  {
    "start": "2562000",
    "end": "2622000"
  },
  {
    "text": "managed by either one team responsible for different aspects of it or lots of",
    "start": "2562200",
    "end": "2567450"
  },
  {
    "text": "teams have them responsible for managing individual aspects of their of their",
    "start": "2567450",
    "end": "2575099"
  },
  {
    "text": "software stack with that I'm going to",
    "start": "2575099",
    "end": "2580339"
  },
  {
    "text": "sort of stop talking and open up to questions slightly the intent of videos",
    "start": "2580339",
    "end": "2586559"
  },
  {
    "text": "do a ton of demos the Internet's not cooperating for that so I kind of have the ad lib of it I need to be around for",
    "start": "2586559",
    "end": "2593190"
  },
  {
    "text": "a little bit if people want to ask questions about you know either these tools or any other tools that we have or",
    "start": "2593190",
    "end": "2600210"
  },
  {
    "text": "patents for using them or whatever at lea biography so thanks for listening",
    "start": "2600210",
    "end": "2605640"
  },
  {
    "text": "but despite the internet problems and really to go revoke that so colors total now",
    "start": "2605640",
    "end": "2611480"
  },
  {
    "text": "how do you HTF state files so first what is the TS speaks well for those unaware",
    "start": "2615599",
    "end": "2621160"
  },
  {
    "text": "when we ran terraform the way it knows",
    "start": "2621160",
    "end": "2627759"
  },
  {
    "start": "2622000",
    "end": "2962000"
  },
  {
    "text": "what's running in AWS is by maintaining this this file of state so it maintains",
    "start": "2627759",
    "end": "2634449"
  },
  {
    "text": "actually most of it isn't needed the only thing that's really needed in here is the mapping of this identity to the",
    "start": "2634449",
    "end": "2641890"
  },
  {
    "text": "AWS identity so it matched the name through to AWS this idea of what that name means everything else can be",
    "start": "2641890",
    "end": "2646989"
  },
  {
    "text": "populated again there are a few different ways to manage this file",
    "start": "2646989",
    "end": "2652630"
  },
  {
    "text": "actually managing it is a real problem and it's kind of controversial as to whether it should even exist but it does",
    "start": "2652630",
    "end": "2660459"
  },
  {
    "text": "so whatever there are a few different options it will by default just create",
    "start": "2660459",
    "end": "2666789"
  },
  {
    "text": "it locally to wherever you run it that's not ideal there's a system called remote state so you can have it in an s3 bucket",
    "start": "2666789",
    "end": "2672939"
  },
  {
    "text": "for example and then people collaborating and share the state file really easily if you're going to apply this kind of system where you you want",
    "start": "2672939",
    "end": "2679959"
  },
  {
    "text": "to BAM if you get values from other people's states and you kind of Hashmi using a remote storage solution s3 is a",
    "start": "2679959",
    "end": "2685929"
  },
  {
    "text": "good option or whatever the native object storage for your cloud is there's a whole load of different ones here if I",
    "start": "2685929",
    "end": "2692859"
  },
  {
    "text": "look at Terra for my own state remote",
    "start": "2692859",
    "end": "2698019"
  },
  {
    "text": "state this is a list of all the different places that you can store the thing s3 is a good one it's a good",
    "start": "2698019",
    "end": "2705909"
  },
  {
    "text": "default choice if you're on AWS or whatever the major object storage for your cloud is if your company that uses",
    "start": "2705909",
    "end": "2711159"
  },
  {
    "text": "artifactory then like companies that use artifactory I found tend to stick everything in artifactory whether or not",
    "start": "2711159",
    "end": "2716409"
  },
  {
    "text": "it belongs there that one might be a good choice for you we internally use our own stuff so we",
    "start": "2716409",
    "end": "2725559"
  },
  {
    "text": "run a sass will manage state for you so we use that including to provision",
    "start": "2725559",
    "end": "2731199"
  },
  {
    "text": "itself with these for all kinds of interesting chicken-and-egg situation the trick there is to make it come up",
    "start": "2731199",
    "end": "2738630"
  },
  {
    "text": "enough that you can store state in it this is mode like easy solution to that",
    "start": "2738630",
    "end": "2744330"
  },
  {
    "text": "luckily it's a problem that almost no one else has so it's like I'm happy to just punt on that problem with it so",
    "start": "2744330",
    "end": "2749970"
  },
  {
    "text": "like not to fix it properly but yeah remote state is your friend as soon as",
    "start": "2749970",
    "end": "2756120"
  },
  {
    "text": "you've got remote state storage setup you can use that terraform remote state datasource to go and query values from it from other configurations so how",
    "start": "2756120",
    "end": "2763410"
  },
  {
    "text": "you're going to get a module system out of this thing you have remote States shared around you can set different ACLs",
    "start": "2763410",
    "end": "2771930"
  },
  {
    "text": "on each of those depending on what the requirements are that may be under your operations seam can write to the state for for networking and then he use",
    "start": "2771930",
    "end": "2782100"
  },
  {
    "text": "credentials with each of them which are appropriately locked down so it can only do the correct things each in each case but yet we use outlets but you can use",
    "start": "2782100",
    "end": "2788640"
  },
  {
    "text": "whatever any of these they will work equally well and tested fine other",
    "start": "2788640",
    "end": "2797580"
  },
  {
    "text": "questions sure",
    "start": "2797580",
    "end": "2801470"
  },
  {
    "text": "haha actually so joining them is not the biggest problem making them go away",
    "start": "2814380",
    "end": "2820690"
  },
  {
    "text": "again is a much bigger problem with console this is actually a real problem",
    "start": "2820690",
    "end": "2825820"
  },
  {
    "text": "for most quorum systems it actually the other way I found out about it was via production outage which was fun because",
    "start": "2825820",
    "end": "2833020"
  },
  {
    "text": "I wrote a quorum system one time and it does not have this problem so it's kind of it is I don't want to say sloppy",
    "start": "2833020",
    "end": "2839380"
  },
  {
    "text": "because it's it's a great use case for real hardware but for cloud its kind of annoying so the problem is his problem",
    "start": "2839380",
    "end": "2847510"
  },
  {
    "text": "so you have an auto scaling group running console clusters for example as console service you can find you can",
    "start": "2847510",
    "end": "2853840"
  },
  {
    "text": "make them find out where the other members are but let's say you have one two and three running an auto scaling",
    "start": "2853840",
    "end": "2859060"
  },
  {
    "text": "group and then number one goes away because it's terminated because you are not greet it or because the instance was",
    "start": "2859060",
    "end": "2865510"
  },
  {
    "text": "faulty underneath and now number four comes along so the quorum was previously",
    "start": "2865510",
    "end": "2870580"
  },
  {
    "text": "two and it's now machines one two and three two of them have to be available",
    "start": "2870580",
    "end": "2876130"
  },
  {
    "text": "for it to do anything and now one is go away but is still part of the quorum because it still exists you know it's",
    "start": "2876130",
    "end": "2883750"
  },
  {
    "text": "still known as having been there before and it might come back but also scaling",
    "start": "2883750",
    "end": "2889720"
  },
  {
    "text": "launches you instance for so now you have instances two three and four and now you have four instances but a",
    "start": "2889720",
    "end": "2896170"
  },
  {
    "text": "majority of for even those three only exists and will ever exist again console having their way of knowing that so it",
    "start": "2896170",
    "end": "2901630"
  },
  {
    "text": "has to treat them as you know all four of these things still exist so now you have a quorum three so the next time you",
    "start": "2901630",
    "end": "2908170"
  },
  {
    "text": "do that you have machines three four and five now there but suddenly you have",
    "start": "2908170",
    "end": "2914350"
  },
  {
    "text": "five machines you have current three you're still you might be okay there's a",
    "start": "2914350",
    "end": "2919840"
  },
  {
    "text": "point at which like there's a majority of those machines are never going to exist again and it depends on the size",
    "start": "2919840",
    "end": "2925240"
  },
  {
    "text": "you're also scaling group so it's really important to manage the quorum size and to force leave of members so the way we",
    "start": "2925240",
    "end": "2932050"
  },
  {
    "text": "deal with that is via hay-bale and duct tape or bash so this",
    "start": "2932050",
    "end": "2940030"
  },
  {
    "text": "is the exact script we use for it and it also does the discovery package",
    "start": "2940030",
    "end": "2947900"
  },
  {
    "text": "console bootstrap AWS so basically",
    "start": "2947900",
    "end": "2955509"
  },
  {
    "text": "console runs the system D service we grew up in a configuration that says before you run the console executable",
    "start": "2955509",
    "end": "2961609"
  },
  {
    "text": "run the script first and this will generate out the conflict for okay thank",
    "start": "2961609",
    "end": "2968359"
  },
  {
    "start": "2962000",
    "end": "3217000"
  },
  {
    "text": "you shell checks seriously I don't want",
    "start": "2968359",
    "end": "2976670"
  },
  {
    "text": "the alerts go away okay so what this this JavaScript does you know you could",
    "start": "2976670",
    "end": "2982880"
  },
  {
    "text": "rewrite this in Python or Ruby or whatever your scripting language of choice is I like bash it goes and works",
    "start": "2982880",
    "end": "2989569"
  },
  {
    "text": "out Who am I so as a mode number of like this mode",
    "start": "2989569",
    "end": "2994609"
  },
  {
    "text": "running the software what's my IP address you can find that fairly easily what regional I am and then what auto",
    "start": "2994609",
    "end": "3000819"
  },
  {
    "text": "scaling group way in the way you can find the auto scaling group is because auto scaling tags every instance so you",
    "start": "3000819",
    "end": "3006489"
  },
  {
    "text": "can use described also scanner groups and then you can find which which was a scaling group here in for that and then",
    "start": "3006489",
    "end": "3012130"
  },
  {
    "text": "what we'll do is go and find all of the",
    "start": "3012130",
    "end": "3017140"
  },
  {
    "text": "other modes that within that also scaling group because we can use the AWS API from inside the machine and write",
    "start": "3017140",
    "end": "3024789"
  },
  {
    "text": "our config that says when you come up you're going to go and join these are just couple of servers and we do that",
    "start": "3024789",
    "end": "3030819"
  },
  {
    "text": "for all kinds of we do the same thing for Volta no matter almost every service",
    "start": "3030819",
    "end": "3035950"
  },
  {
    "text": "running in AWS has this need to go and self configure if you want it to be flexible so this is health we do it I",
    "start": "3035950",
    "end": "3041739"
  },
  {
    "text": "will open source the script I just need to take out a few bits because it's",
    "start": "3041739",
    "end": "3047200"
  },
  {
    "text": "uncommon for people to be using psycho knows for example these are very heavily weighted eyes these are a production",
    "start": "3047200",
    "end": "3052420"
  },
  {
    "text": "scripts so I think and make them a little bit more generic before putting them out because the chances are you're",
    "start": "3052420",
    "end": "3057940"
  },
  {
    "text": "not running to come a second if you're in other clouds your mileage may vary about how much of this you can do you can normally find out who you are",
    "start": "3057940",
    "end": "3065050"
  },
  {
    "text": "the big problem is that you often can't use the API without having some kind of",
    "start": "3065050",
    "end": "3070220"
  },
  {
    "text": "shared secret already AWS selfish by allowing you to grant an instance so I",
    "start": "3070220",
    "end": "3077150"
  },
  {
    "text": "can show you what what we use for this you can grant an instance permissions so",
    "start": "3077150",
    "end": "3083510"
  },
  {
    "text": "we have where are easy modules Council",
    "start": "3083510",
    "end": "3089260"
  },
  {
    "text": "this is the policy we use for it so console servers are allowed to do these",
    "start": "3089260",
    "end": "3094610"
  },
  {
    "text": "things without credential they have credentials but they're allowed to do these things without without requiring",
    "start": "3094610",
    "end": "3099620"
  },
  {
    "text": "external credentials so allowed to describe the auto-scaling groups instances within them which availability",
    "start": "3099620",
    "end": "3105530"
  },
  {
    "text": "zones are in instance statuses rare instances and tags basically with all of",
    "start": "3105530",
    "end": "3113420"
  },
  {
    "text": "those things you can discover enough about your environment to come up if you're not doing infrastructure",
    "start": "3113420",
    "end": "3119180"
  },
  {
    "text": "applications don't have to do this kind of stuff in general you can use something like console template instead",
    "start": "3119180",
    "end": "3126970"
  },
  {
    "text": "if you have all this service metadata and you just need to know you need to go and talk to somebody else you could do this whole thing with console template",
    "start": "3126970",
    "end": "3133010"
  },
  {
    "text": "because this is tied to low in the infrastructure to have that available you're going to have to go the long way",
    "start": "3133010",
    "end": "3138110"
  },
  {
    "text": "about it and just deal with whatever you've got does that kind of answer and the other important side of that is",
    "start": "3138110",
    "end": "3146950"
  },
  {
    "text": "repackaging console bootstrap",
    "start": "3150490",
    "end": "3157160"
  },
  {
    "text": "is this other one which force leaves the members of the quorum which no longer be",
    "start": "3157160",
    "end": "3162870"
  },
  {
    "text": "there and it basically does exactly the same thing in in that it is particularly",
    "start": "3162870",
    "end": "3169470"
  },
  {
    "text": "annoying the way that them keeps popping all this single it looks at the",
    "start": "3169470",
    "end": "3174930"
  },
  {
    "text": "instances that are currently running it looks at the instances the council knows about and then it dips it to so if",
    "start": "3174930",
    "end": "3180540"
  },
  {
    "text": "there's an instance the council thinks it knows about the auto scaling group doesn't we can use knowledge about also",
    "start": "3180540",
    "end": "3186330"
  },
  {
    "text": "scaling that thing is never coming back so we can just force leave it and then we manage the quraan choice so the",
    "start": "3186330",
    "end": "3192600"
  },
  {
    "text": "pattern is always introduce a new instance so the quorum will go up tick up by one and then force leaves the one isn't",
    "start": "3192600",
    "end": "3197610"
  },
  {
    "text": "there anymore so that we get down by one other questions cool",
    "start": "3197610",
    "end": "3206460"
  },
  {
    "text": "well thanks for listening and sorry that demos weren't exactly functional time to",
    "start": "3206460",
    "end": "3212490"
  },
  {
    "text": "go revoking secrets again this is really a month to talk but thanks listening",
    "start": "3212490",
    "end": "3217970"
  }
]