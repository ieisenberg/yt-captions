[
  {
    "text": "so my name is Nick crowns pretty much in enterprise Dev",
    "start": "9620",
    "end": "15980"
  },
  {
    "text": "I guess if you if you haven't maybe before though through the you know it's",
    "start": "15980",
    "end": "21920"
  },
  {
    "text": "through that I've ended up involved in a whole lot of open-source work they probably come across a lot of FAQ in",
    "start": "21920",
    "end": "27890"
  },
  {
    "text": "your travels which was one of my early projects a couple more things like that along the way this talks about Sarah log",
    "start": "27890",
    "end": "33410"
  },
  {
    "text": "which is an open source library that I'm working on at the moment in case you're in the wrong room you can okay and then",
    "start": "33410",
    "end": "40400"
  },
  {
    "text": "it's right down the front you see I've got a little mini LCD screen here on the back of the monitor so you can get a",
    "start": "40400",
    "end": "45500"
  },
  {
    "text": "good view actually no but before I forget if you want any of the very last run of the original sorry log stickers",
    "start": "45500",
    "end": "51289"
  },
  {
    "text": "I've got a couple I keep forgetting to pass them out so there's those ones so we've got an hour I probably won't need every minute of",
    "start": "51289",
    "end": "59030"
  },
  {
    "text": "that so it's playing time for questions at the end and I'll make sure I spend some time out by the coffee cart if you",
    "start": "59030",
    "end": "66770"
  },
  {
    "text": "want to want to have a chat so we just um we just jump right into it so",
    "start": "66770",
    "end": "74380"
  },
  {
    "text": "everyone I assume has done some work with a plugs over the course of their development so far yeah how was the",
    "start": "74380",
    "end": "82580"
  },
  {
    "text": "experience was it enlightening is that us it's satisfying I don't know I I",
    "start": "82580",
    "end": "89330"
  },
  {
    "text": "think the most terrifying moments in my software development life of have often been accompanied with stack traces and",
    "start": "89330",
    "end": "95750"
  },
  {
    "text": "and logs so and they give me that little feeling that feeling about prehension but there's just something very satisfying about digging through an app",
    "start": "95750",
    "end": "102619"
  },
  {
    "text": "blog whether it's trying to work out what's going wrong in a system-wide performance is poor or just really to",
    "start": "102619",
    "end": "109369"
  },
  {
    "text": "understand better how the how the system behaves in a range of different circumstances the the thing that gets me",
    "start": "109369",
    "end": "117259"
  },
  {
    "text": "though and that a reason that I'm being pulled into really thinking a lot more about them is that in contrast to just",
    "start": "117259",
    "end": "124489"
  },
  {
    "text": "about everything else we do whether it's you know the work we do with databases or or Web API eyes or other other kinds",
    "start": "124489",
    "end": "133940"
  },
  {
    "text": "of eventing like event sourcing application logs have been left in a very unscientific kind of territory that",
    "start": "133940",
    "end": "139940"
  },
  {
    "text": "the feeling that you get when you manage through a log with regular expressions or with text search is not I mean it's",
    "start": "139940",
    "end": "147799"
  },
  {
    "text": "satisfying almost because you achieve something of all the friction that was involved in the process right is that does that",
    "start": "147799",
    "end": "153980"
  },
  {
    "text": "pretty much sum it up yeah so the I",
    "start": "153980",
    "end": "159200"
  },
  {
    "text": "guess the the beauty of logs is that because they're unstructured and freeform it's very quick as a developer",
    "start": "159200",
    "end": "165470"
  },
  {
    "text": "just to go and dump some kind of data into a log as the you know as the mood",
    "start": "165470",
    "end": "171290"
  },
  {
    "text": "takes you as you're writing code leaving yourself a little trail of interesting things that you might want to UM want to pull back out in the future and",
    "start": "171290",
    "end": "178580"
  },
  {
    "text": "you can do it speculatively because it's so cheap and that log becomes this kind",
    "start": "178580",
    "end": "184069"
  },
  {
    "text": "of super set of all the other information in your app like with interactions with other api's and the",
    "start": "184069",
    "end": "190280"
  },
  {
    "text": "state changes that the app goes through itself the vexing thing is that that",
    "start": "190280",
    "end": "196519"
  },
  {
    "text": "very those very characteristics that make application logs so interesting also our big part of why they're so",
    "start": "196519",
    "end": "203420"
  },
  {
    "text": "frustrating and that really brings us to to Sarila which is the project that",
    "start": "203420",
    "end": "209360"
  },
  {
    "text": "we're here to talk about it's a solution to some of those some of those issues by taking a little bit of a fresh fresh",
    "start": "209360",
    "end": "215780"
  },
  {
    "text": "look at app logs and Donette it's been around for four years which is which is crazy it makes me feel much older than I",
    "start": "215780",
    "end": "221600"
  },
  {
    "text": "probably should feel it began as a pretty small scale open source project but especially in the last couple of",
    "start": "221600",
    "end": "227299"
  },
  {
    "text": "years it's picked up quite a lot I originally gave this talk in in Oslo in",
    "start": "227299",
    "end": "232480"
  },
  {
    "text": "June and I have to confess to recycling a few slides now so we had two two and a",
    "start": "232480",
    "end": "239150"
  },
  {
    "text": "half a million downloads on you get at that point I don't know what the met whatever the metric is itself very",
    "start": "239150",
    "end": "244160"
  },
  {
    "text": "scientific and in a couple of months since went out up to 3.4 million so the growth of Siri log is is definitely on",
    "start": "244160",
    "end": "250670"
  },
  {
    "text": "that exponential kind of kind of curve and I think that since you've all spent",
    "start": "250670",
    "end": "256010"
  },
  {
    "text": "a lot of time and dotnet that's maybe even slightly surprising because we've got n log and we've had log4net since",
    "start": "256010",
    "end": "262550"
  },
  {
    "text": "way back in the very early days and they're really mature capable battle-tested libraries so coming along",
    "start": "262550",
    "end": "268430"
  },
  {
    "text": "with a new logging library there has to be something particular about it that makes it um you know that makes people",
    "start": "268430",
    "end": "275180"
  },
  {
    "text": "actually consider leaving those very comfortable existing tools and trying something new and Sarah log is one of",
    "start": "275180",
    "end": "280760"
  },
  {
    "text": "those things I think we've got about 80 contribute across all the different repositories we're about 15 iron repos on you get I",
    "start": "280760",
    "end": "287930"
  },
  {
    "text": "think and it's it's completely",
    "start": "287930",
    "end": "294310"
  },
  {
    "text": "contributed driven now I think so anyway what this talk is not the thing about",
    "start": "295000",
    "end": "302840"
  },
  {
    "text": "logging library is that at this configuration level they're all pretty much the same like you'd expect that",
    "start": "302840",
    "end": "308150"
  },
  {
    "text": "because Sarah log is fairly new compared with log4net or with analog that we might have a few",
    "start": "308150",
    "end": "315200"
  },
  {
    "text": "more modern kinds of sensibilities in the API like configuration is done via",
    "start": "315200",
    "end": "321710"
  },
  {
    "text": "code primarily rather than being through the long esoteric XML DSL switch now",
    "start": "321710",
    "end": "327290"
  },
  {
    "text": "look really tired against the JSON sort of syntax that we were adopting in things like Donna core it's also being",
    "start": "327290",
    "end": "336560"
  },
  {
    "text": "born into a kind of a more modern net so it's had good support facing can those kinds of things built right in there",
    "start": "336560",
    "end": "342650"
  },
  {
    "text": "from the start other than that though the goal of Sarah log wasn't anything like building a new",
    "start": "342650",
    "end": "348970"
  },
  {
    "text": "better logger configuration API you can really understand almost everything",
    "start": "348970",
    "end": "354500"
  },
  {
    "text": "there is to know about configuring Sarah log from this slide and this is about the the extent of how much will dig into",
    "start": "354500",
    "end": "360830"
  },
  {
    "text": "this side of Sarah log you can see that it's configured with the typical kind of",
    "start": "360830",
    "end": "366919"
  },
  {
    "text": "targets like you can log to the console you can log to a file and you can log at",
    "start": "366919",
    "end": "372410"
  },
  {
    "text": "level so you might log less interesting messages that the debug level only turn those on when something's going wrong",
    "start": "372410",
    "end": "378020"
  },
  {
    "text": "and you can log errors at the error level so these are kind of bread-and-butter and these are not not the things that Sarah log was about",
    "start": "378020",
    "end": "383120"
  },
  {
    "text": "changing oh that last point as well as an interesting one Sarah logo also is a",
    "start": "383120",
    "end": "389120"
  },
  {
    "text": "bit opinionated in that it doesn't actually have any any static state by",
    "start": "389120",
    "end": "395090"
  },
  {
    "text": "default which is another little twist so the API of server logs really designs is",
    "start": "395090",
    "end": "400160"
  },
  {
    "text": "just building little generic event pipelines and you can can you can construct one logger or you can construct a hundred we don't force you",
    "start": "400160",
    "end": "406910"
  },
  {
    "text": "into having any kind of one global logger for your app although that's often the way that people use it",
    "start": "406910",
    "end": "413890"
  },
  {
    "text": "so what the talk is about and hopefully to inspire you just got a bit more time",
    "start": "417930",
    "end": "423400"
  },
  {
    "text": "looking into Sarah log is the the couple of concepts that make Sarah log novel",
    "start": "423400",
    "end": "429340"
  },
  {
    "text": "and more interesting subject to dig into those two the way that Suri log captures",
    "start": "429340",
    "end": "436660"
  },
  {
    "text": "events across that's really the the primary kind of reason that Sarah log was built how can we make logs both",
    "start": "436660",
    "end": "444510"
  },
  {
    "text": "trivially easy to capture as well as trivia trivially easy to process with",
    "start": "444510",
    "end": "449910"
  },
  {
    "text": "with software and tools offline when we're actually going to do analysis the",
    "start": "449910",
    "end": "456820"
  },
  {
    "text": "second thing that would do is off of the back of I guess building more more",
    "start": "456820",
    "end": "462100"
  },
  {
    "text": "structured logs events in Syria log have a have a lot more of a first-class nature and the second part of the talk",
    "start": "462100",
    "end": "469300"
  },
  {
    "text": "will look quickly at event enrichment which is how Sarah log makes you able to join the dots in a very large base of a",
    "start": "469300",
    "end": "475210"
  },
  {
    "text": "very large volume of logs which is typical of apps today",
    "start": "475210",
    "end": "480060"
  },
  {
    "text": "part one yeah message templates so a",
    "start": "481680",
    "end": "486930"
  },
  {
    "text": "little bit of a historical view so we're not really the first to consider this problem text logging is the the primary",
    "start": "486930",
    "end": "496419"
  },
  {
    "text": "kind of thing that people think of when they think about logs and that's the printf debugging that we've all done",
    "start": "496419",
    "end": "501550"
  },
  {
    "text": "since we were running basic on a Commodore 64 along a long time ago and",
    "start": "501550",
    "end": "508090"
  },
  {
    "text": "to the present day another school of thought has existed which is that instead of actually writing out lines of",
    "start": "508090",
    "end": "514330"
  },
  {
    "text": "text for logging logs we should be riding out structured events that have properties you can see the left hand",
    "start": "514330",
    "end": "520630"
  },
  {
    "text": "example with text logs show that we're capturing really a string describing say",
    "start": "520630",
    "end": "526300"
  },
  {
    "text": "a transaction being committed here and on the right hand side we've got exactly the same information but with my very",
    "start": "526300",
    "end": "533890"
  },
  {
    "text": "act together sue they're logging API we've got a first class property describing what the event is it's commit",
    "start": "533890",
    "end": "540670"
  },
  {
    "text": "and then the amount of time that the commit took and you can see from the output on the Left the strengths of",
    "start": "540670",
    "end": "547530"
  },
  {
    "text": "text logging you don't have to really do any anything special to pass the the log",
    "start": "547530",
    "end": "553260"
  },
  {
    "text": "statement that's in the code that's about as as simple as it could be to record an event like that and in the",
    "start": "553260",
    "end": "559260"
  },
  {
    "text": "output you've got all of your human perceptual system finely tuned for",
    "start": "559260",
    "end": "564630"
  },
  {
    "text": "parsing large amounts of text and you can read it like a narrative like the",
    "start": "564630",
    "end": "570330"
  },
  {
    "text": "app started up we took an update request we committed something to the database and you don't actually even really",
    "start": "570330",
    "end": "575370"
  },
  {
    "text": "acknowledge to yourself that you're having to parse that to get some information out of it and when something's gone and gone wrong in an",
    "start": "575370",
    "end": "581310"
  },
  {
    "text": "app that's really important because the pressure is on you've got to figure out what's going wrong you don't really want",
    "start": "581310",
    "end": "586440"
  },
  {
    "text": "to spend your time dealing with the kind of dump of JSON that we seen right the",
    "start": "586440",
    "end": "592920"
  },
  {
    "text": "cons of text logging of course are that of those events there's not really anything particular that ties together",
    "start": "592920",
    "end": "598230"
  },
  {
    "text": "that commits versus the updates except for the fact that they've got some common words in each of them so when it",
    "start": "598230",
    "end": "604980"
  },
  {
    "text": "comes to actually going and taking that list and asking the question well what's the average commit time even even though",
    "start": "604980",
    "end": "613110"
  },
  {
    "text": "it's easy to read it's very hard to quickly pull that information out and also writing regular expressions that",
    "start": "613110",
    "end": "618780"
  },
  {
    "text": "pull out pieces of text convert them into numbers and then deal with them is a is a menial process that detracts from",
    "start": "618780",
    "end": "624660"
  },
  {
    "text": "the time you could actually spend understanding the log better so on the",
    "start": "624660",
    "end": "629820"
  },
  {
    "text": "right the solution to this is that we recast events as events which makes a",
    "start": "629820",
    "end": "635850"
  },
  {
    "text": "lot of sense that's really the the natural way to think about logs I think and it's favor imagining a query that",
    "start": "635850",
    "end": "646950"
  },
  {
    "text": "goes through and filters those those events by the event being a commit and then goes and averages out that elapsed",
    "start": "646950",
    "end": "654510"
  },
  {
    "text": "property you know it's a much easier task to have as a programmer and if you were doing some diagnostics and you had",
    "start": "654510",
    "end": "660690"
  },
  {
    "text": "a stream like that and you knew what information you needed you could get it out very easily with probably without",
    "start": "660690",
    "end": "666030"
  },
  {
    "text": "having to really do any extra pausing or or anything beyond what you could do with some JSON and some c-sharp",
    "start": "666030",
    "end": "672890"
  },
  {
    "text": "of course the downside is that this is when you know what you're looking for if you don't know what you're looking for",
    "start": "672890",
    "end": "678690"
  },
  {
    "text": "then trying to make sense of a big of text I probably created a straw man",
    "start": "678690",
    "end": "684150"
  },
  {
    "text": "here by printing Jason to a console right because you know you can print Jason pretty printed in a browser but",
    "start": "684150",
    "end": "689670"
  },
  {
    "text": "you still have that at that problem that you'll you have to look at each line of",
    "start": "689670",
    "end": "694830"
  },
  {
    "text": "an event that's written this way to try to extract some information from it now",
    "start": "694830",
    "end": "701180"
  },
  {
    "text": "okay of course why don't we just combine both approaches you know we'll have a message and we'll have some have some",
    "start": "701180",
    "end": "707520"
  },
  {
    "text": "structured properties as well and historically people have tried that a number of times the problem turns out to",
    "start": "707520",
    "end": "713850"
  },
  {
    "text": "be that in both cases you end up having to actually invest more effort upfront",
    "start": "713850",
    "end": "719810"
  },
  {
    "text": "in order to take both sets of data so if you're going to write a message and you're going to write some properties",
    "start": "719810",
    "end": "725160"
  },
  {
    "text": "then then it's going to take more if there's gonna be more friction at the development end and you don't",
    "start": "725160",
    "end": "731460"
  },
  {
    "text": "necessarily get all the benefits at the Diagnostics end because you haven't necessarily got all of the things that",
    "start": "731460",
    "end": "736680"
  },
  {
    "text": "were interesting in the message also representing those properties and there are few different takes on this with different different approaches none of",
    "start": "736680",
    "end": "742710"
  },
  {
    "text": "them has really taken off and today text logging is still number one and that's still what we see in nearly 99% of apps",
    "start": "742710",
    "end": "749070"
  },
  {
    "text": "and I saying was doing structured logging without a sarah log yeah no oh",
    "start": "749070",
    "end": "757310"
  },
  {
    "text": "sorry clickers getting you better there you go so if we really do want to solve this",
    "start": "757310",
    "end": "765180"
  },
  {
    "text": "problem though if we if we go back and look at the the text log that we've got",
    "start": "765180",
    "end": "771240"
  },
  {
    "text": "using a format string here assuming you're all familiar with c-sharp and don't have format strings when we when",
    "start": "771240",
    "end": "779280"
  },
  {
    "text": "we started out we actually did have a separate a separate representation of",
    "start": "779280",
    "end": "784470"
  },
  {
    "text": "the event that's going on and that payload it was in our application when we were when we were writing the log",
    "start": "784470",
    "end": "790050"
  },
  {
    "text": "message and we just jammed those things together to make the message and we lost that structural information by pushing",
    "start": "790050",
    "end": "795540"
  },
  {
    "text": "everything down this text but let's say",
    "start": "795540",
    "end": "800760"
  },
  {
    "text": "if there was some magic that we could do we don't necessarily have to render the whole thing directly immediately we",
    "start": "800760",
    "end": "807090"
  },
  {
    "text": "could we could conceivably take the format string and we could keep hold of that elapsed that elapsed timing",
    "start": "807090",
    "end": "813389"
  },
  {
    "text": "and store those in an event somehow and then when we get down to the point that we want to render it to the console we",
    "start": "813389",
    "end": "819119"
  },
  {
    "text": "get the exact same human readability as we had before but that magic box in the",
    "start": "819119",
    "end": "824939"
  },
  {
    "text": "middle perhaps we could do something to also keep the structure around so that if we want to do the mechanical analysis then we then we have the option of",
    "start": "824939",
    "end": "831269"
  },
  {
    "text": "turning that on and that is is the essence of Sarah log and hopefully we",
    "start": "831269",
    "end": "837420"
  },
  {
    "text": "will see I window layering is not ideal",
    "start": "837420",
    "end": "842759"
  },
  {
    "text": "there we go so what we'll see here we've got here we've got a very short program I believe",
    "start": "842759",
    "end": "849179"
  },
  {
    "text": "that if you can't demo it with a console app it's too much to take in so we got a",
    "start": "849179",
    "end": "854699"
  },
  {
    "text": "very short program it's a sophisticated hello world this is Sarah logs Sarah log",
    "start": "854699",
    "end": "860549"
  },
  {
    "text": "being used to write a string of stream events that include the counter and a",
    "start": "860549",
    "end": "866399"
  },
  {
    "text": "username so a piece of text in a string so if we run that out",
    "start": "866399",
    "end": "872449"
  },
  {
    "text": "okay there's our CEO you see right away that sorry log is a bit different and",
    "start": "876770",
    "end": "883220"
  },
  {
    "text": "this is the first kind of place where the fact that the that the event is",
    "start": "883220",
    "end": "889770"
  },
  {
    "text": "represented with more than just a blob of text becomes obvious because we're running out to the console but in homage",
    "start": "889770",
    "end": "895170"
  },
  {
    "text": "to the visual studio 6.0 color scheme that i think it was there her c++ in",
    "start": "895170",
    "end": "900810"
  },
  {
    "text": "those early days the the numeric values they've kept that type and they've come",
    "start": "900810",
    "end": "906029"
  },
  {
    "text": "out as magenta and the string values come out as as a nice same piece of text",
    "start": "906029",
    "end": "911640"
  },
  {
    "text": "and so this is this is giving you a clue that under the under the hood there's",
    "start": "911640",
    "end": "917160"
  },
  {
    "text": "more happening in several log than meets the eye but on the surface we've still got a format string and we're writing",
    "start": "917160",
    "end": "922560"
  },
  {
    "text": "out the same information as we did before ah for some reason my mouse cursor has",
    "start": "922560",
    "end": "930000"
  },
  {
    "text": "gone it's gonna be interesting actually I I think we can update this as well so",
    "start": "930000",
    "end": "937980"
  },
  {
    "text": "I can't resist a bit of eye candy and instead of Visual Studio 6.0 we might",
    "start": "937980",
    "end": "946440"
  },
  {
    "text": "have this one in Visual Studio code so you get the idea that in fact the the",
    "start": "946440",
    "end": "951570"
  },
  {
    "text": "log event has become sort of almost like literate programming right like the the data and the texts are interleaved but",
    "start": "951570",
    "end": "957810"
  },
  {
    "text": "they're not really the same thing they haven't been combined together and of course at the console that's not really going to make much difference except to",
    "start": "957810",
    "end": "963060"
  },
  {
    "text": "maybe make the task of scanning through logs a little bit easier if you can highlight some interesting things about",
    "start": "963060",
    "end": "968160"
  },
  {
    "text": "them but what that does mean is if we do go and we blast that out as I still have",
    "start": "968160",
    "end": "975600"
  },
  {
    "text": "the problem of new mouse cursor say as",
    "start": "975600",
    "end": "980760"
  },
  {
    "text": "Jason was a compact Jason the formatter there we go same events out to the",
    "start": "980760",
    "end": "985890"
  },
  {
    "text": "console again you see we've we've got the same log statements but it's",
    "start": "985890",
    "end": "990930"
  },
  {
    "text": "producing an event the template here which is hello number 0 comma 1 and then",
    "start": "990930",
    "end": "997500"
  },
  {
    "text": "we have these properties attached 0 which was that first placeholder has the value 0 1 2 3 4 as we iterate through",
    "start": "997500",
    "end": "1004130"
  },
  {
    "text": "the loop and one keeps that string value and",
    "start": "1004130",
    "end": "1009620"
  },
  {
    "text": "see we've got a little bit more attached there we'll have a look in a minute in a minute so of course we're not also gonna",
    "start": "1009620",
    "end": "1018450"
  },
  {
    "text": "read a lot of Jason at the console but when you've collected thousands of log",
    "start": "1018450",
    "end": "1023910"
  },
  {
    "text": "messages obviously from different sources naming properties things like zero and one who's gonna first this get",
    "start": "1023910",
    "end": "1030569"
  },
  {
    "text": "tiring very fast and I mean writing read reg X is bad enough I can't remember whether I've got a you know have a back",
    "start": "1030570",
    "end": "1036480"
  },
  {
    "text": "reference to the first capture or the second capture half the time and where their indexes start from zero one so so",
    "start": "1036480",
    "end": "1042180"
  },
  {
    "text": "Sarah Clark has a little twist on this which is to which is to allow you to",
    "start": "1042180",
    "end": "1047550"
  },
  {
    "text": "name these placeholders rather than keep them as indexes so it's an extension of",
    "start": "1047550",
    "end": "1054450"
  },
  {
    "text": "dotnet format strings in very a very very slight way you'll see that everything else that happens in them",
    "start": "1054450",
    "end": "1059700"
  },
  {
    "text": "don't net format string still works with Sarah log of course they can be completely backwards compatible so you",
    "start": "1059700",
    "end": "1064920"
  },
  {
    "text": "can take your log4net code and move forwards to the new world so here we've",
    "start": "1064920",
    "end": "1070200"
  },
  {
    "text": "got the number court counter and we've got a name there and if we get the same",
    "start": "1070200",
    "end": "1077700"
  },
  {
    "text": "JSON out you'll see that we kept the same template but instead of instead of",
    "start": "1077700",
    "end": "1083040"
  },
  {
    "text": "having numeric properties attached we've got counter zero and name my handle",
    "start": "1083040",
    "end": "1088110"
  },
  {
    "text": "there let me know by the way if the font size is no good down the back there it",
    "start": "1088110",
    "end": "1094380"
  },
  {
    "text": "seems pretty huge from here but my face right up against it hey if you're really observant - and I",
    "start": "1094380",
    "end": "1101100"
  },
  {
    "text": "keep forgetting to mention this but I think it I think is really cool if you use resharper who's used to be sharper",
    "start": "1101100",
    "end": "1106650"
  },
  {
    "text": "yeah you write a format string it highlights the format string and tells",
    "start": "1106650",
    "end": "1112230"
  },
  {
    "text": "you if you have say put two indexes and only one property at the end so you",
    "start": "1112230",
    "end": "1117510"
  },
  {
    "text": "might be a little bit hesitant to lose that with Sarah log someone has written a really cool Rozlyn extension called",
    "start": "1117510",
    "end": "1126170"
  },
  {
    "text": "Sarah log analyzer and you see in this case we've got 77 there is underlined",
    "start": "1126170",
    "end": "1132420"
  },
  {
    "text": "and get a little squiggly and if my mouse my imaginary mouse cursor can",
    "start": "1132420",
    "end": "1137550"
  },
  {
    "text": "mouse over that you see error while binding properties positional property is not we're named properties are being used",
    "start": "1137550",
    "end": "1143940"
  },
  {
    "text": "and so we can change that back to counter and we get rid of this quickly hopefully so that is a vs extension that",
    "start": "1143940",
    "end": "1151559"
  },
  {
    "text": "you can pop in and it will it will help guide you and make sure that you and you can you and your team and not is not",
    "start": "1151559",
    "end": "1157679"
  },
  {
    "text": "kind of just creating random syntax as you use sera log it produces errors",
    "start": "1157679",
    "end": "1163169"
  },
  {
    "text": "through the visual studio code analysis system so I have it turned on as you know it gets picked up in warnings as",
    "start": "1163169",
    "end": "1169650"
  },
  {
    "text": "errors in my bill that's a nice little extension to be s there okay alrighty so",
    "start": "1169650",
    "end": "1179480"
  },
  {
    "text": "we're probably still not going to get a realistic and appreciation of what it's",
    "start": "1179480",
    "end": "1184679"
  },
  {
    "text": "like to use sera log when we're writing Jason to the console you could write Jason to a file and then",
    "start": "1184679",
    "end": "1189720"
  },
  {
    "text": "use some tools to pick it up and and then ingest those files into something else later on there are plenty of tools",
    "start": "1189720",
    "end": "1197070"
  },
  {
    "text": "out there I guess for like document databases and the like that you could pipe those into Sarah Locke has a notion called sinks and each sink in Sarah log",
    "start": "1197070",
    "end": "1204960"
  },
  {
    "text": "is essentially like a target or in a Pender in n log or in log4net and a sink is a destination for logs and most of",
    "start": "1204960",
    "end": "1211590"
  },
  {
    "text": "the time Sarah log wants to you to cut out the middleman you can pipe your log events",
    "start": "1211590",
    "end": "1216929"
  },
  {
    "text": "from Sarah log directly into a database directly into MongoDB directly into a",
    "start": "1216929",
    "end": "1221940"
  },
  {
    "text": "sequel server all those kinds of things or into elasticsearch or spline cross seek or things that we'll look at a bit",
    "start": "1221940",
    "end": "1228090"
  },
  {
    "text": "further on and the nice thing about that ecosystem is that there's really good",
    "start": "1228090",
    "end": "1234090"
  },
  {
    "text": "support out there now for for JSON documents and a lot of different data sources we'll have a quick look at",
    "start": "1234090",
    "end": "1240210"
  },
  {
    "text": "Postgres because I think that the the JSON support Postgres has is really",
    "start": "1240210",
    "end": "1245610"
  },
  {
    "text": "interesting for this use case so this is the same program oh damn I showed you",
    "start": "1245610",
    "end": "1253110"
  },
  {
    "text": "all my my username and password for my local database lucky I'm not on the Wi-Fi so we write the same messages out",
    "start": "1253110",
    "end": "1262919"
  },
  {
    "text": "and if we pop up over to the console you see we can we can do a select from logs",
    "start": "1262919",
    "end": "1270150"
  },
  {
    "text": "here in a whole Postgres session run our app",
    "start": "1270150",
    "end": "1276169"
  },
  {
    "text": "okay change a startup project no not debug",
    "start": "1277320",
    "end": "1287410"
  },
  {
    "text": "yeah okay okay so run that we don't see anything at the console anymore but now",
    "start": "1287410",
    "end": "1294130"
  },
  {
    "text": "if we whip over and look at the output in that logs table that you can see the a big block of configuration for there",
    "start": "1294130",
    "end": "1299880"
  },
  {
    "text": "here are those same events in a Postgres table and Postgres is really cool because in addition to being a sequel",
    "start": "1299880",
    "end": "1306780"
  },
  {
    "text": "relational database that really worked hard to extend it to cover a whole lot of interesting modern use cases and and",
    "start": "1306780",
    "end": "1313090"
  },
  {
    "text": "one of the ones that we're seeing here is that in that properties column let's",
    "start": "1313090",
    "end": "1323260"
  },
  {
    "text": "do it again okay in that properties :",
    "start": "1323260",
    "end": "1328780"
  },
  {
    "text": "we've got the first-class properties that we wrote out of the console and Postgres actually has a extension to",
    "start": "1328780",
    "end": "1336040"
  },
  {
    "text": "sequel that can let you zip in and filter based on values in those properties so imagining that this is a big heterogeneous log stream we can say",
    "start": "1336040",
    "end": "1345280"
  },
  {
    "text": "where properties on so it's greater than",
    "start": "1345280",
    "end": "1354070"
  },
  {
    "text": "the value 7 and then we just get those those individual events out so we've got",
    "start": "1354070",
    "end": "1361780"
  },
  {
    "text": "a message in there that's as good as any kind of text logging message that we previously would have used and yet we've",
    "start": "1361780",
    "end": "1367360"
  },
  {
    "text": "been able to zoom in and just grab those properties events that we're interested in without any log passing anywhere in",
    "start": "1367360",
    "end": "1374020"
  },
  {
    "text": "the pipeline from right back here where we wrote the log event to the post rest",
    "start": "1374020",
    "end": "1379929"
  },
  {
    "text": "table so that table is just generic we've got a JSON column for the properties so we haven't had to do any more work at all to cut to go and query",
    "start": "1379929",
    "end": "1385750"
  },
  {
    "text": "on logs based on structured data and then we would have really had to do to just record a dumb text log in a file",
    "start": "1385750",
    "end": "1394290"
  },
  {
    "text": "Postgres is not the only place that sarah log will send logs to will have a really quick look at seek which is what",
    "start": "1396740",
    "end": "1402740"
  },
  {
    "text": "I spend my days working on these days I'll just guess where my cut my cursor",
    "start": "1402740",
    "end": "1409940"
  },
  {
    "text": "is we can write to multiple destinations at a time seeks good for showing this",
    "start": "1409940",
    "end": "1417080"
  },
  {
    "text": "stuff especially offline because it's a I can run out locally I don't fully it",
    "start": "1417080",
    "end": "1426499"
  },
  {
    "text": "will see same events go out to the console okay and this is and this is a",
    "start": "1426499",
    "end": "1433639"
  },
  {
    "text": "web UI together those very same those very same events so now we're taking the same lot of events we can write a text",
    "start": "1433639",
    "end": "1438950"
  },
  {
    "text": "log to the console we could write a text log to a file or Jason to a file or Jason to postgres or send that to a log",
    "start": "1438950",
    "end": "1445850"
  },
  {
    "text": "server like seek and in all those cases we've got the combination of the text",
    "start": "1445850",
    "end": "1451970"
  },
  {
    "text": "logs as well as being able to do things like say counter is greater than 7 in a",
    "start": "1451970",
    "end": "1457820"
  },
  {
    "text": "first-class way where the value from the log file keeps its type and we can jump in and use that property without having",
    "start": "1457820",
    "end": "1463759"
  },
  {
    "text": "to to tell the system any one widget if you think about it it's obvious the problem in the beginning that we're",
    "start": "1463759",
    "end": "1470840"
  },
  {
    "text": "working to get around here is is that we were throwing away information so",
    "start": "1470840",
    "end": "1476869"
  },
  {
    "text": "there's not sorry so there's not anything that I'm that we're really",
    "start": "1476869",
    "end": "1482389"
  },
  {
    "text": "doing this magic we're just stopping and doing what was originally hurting us you know we're writing a log event we throw away all the information that we really",
    "start": "1482389",
    "end": "1487970"
  },
  {
    "text": "need later on when we want to do diagnostics so we saw how message templates take us through from",
    "start": "1487970",
    "end": "1496360"
  },
  {
    "text": "originally just doing plain text formatting to having that capturing stage separated out to record a",
    "start": "1496360",
    "end": "1503899"
  },
  {
    "text": "structured event as well as the the text that it's rendered into and we can see",
    "start": "1503899",
    "end": "1508909"
  },
  {
    "text": "how having that intermediate step gives us the ability to choose whether or not",
    "start": "1508909",
    "end": "1514070"
  },
  {
    "text": "we're going to render or whether we're going to serialize into some other format one thing I didn't show in the",
    "start": "1514070",
    "end": "1521809"
  },
  {
    "text": "demo is that it wouldn't really be a first-class structured logging",
    "start": "1521809",
    "end": "1527090"
  },
  {
    "text": "experience if we were restricted to just recording simple and numbers because if you're writing",
    "start": "1527090",
    "end": "1533300"
  },
  {
    "text": "Jason objects to a log you know with a with an API design for that then you can write a raise you can write structures",
    "start": "1533300",
    "end": "1540590"
  },
  {
    "text": "and you can capture all sorts of other information from your program that way Surrey log hacks this in in a sneaky way",
    "start": "1540590",
    "end": "1547370"
  },
  {
    "text": "by introducing the structure capturing operator which is the little @ sign in front of the property name by adding",
    "start": "1547370",
    "end": "1554210"
  },
  {
    "text": "that one in Surrey log will actually serialize whatever object appears in that in that position and include that",
    "start": "1554210",
    "end": "1561020"
  },
  {
    "text": "as for the structured object in the log event rather than rather than using two string like you would without the",
    "start": "1561020",
    "end": "1567380"
  },
  {
    "text": "operator and this has led to all sorts of hilarity in the past now before we",
    "start": "1567380",
    "end": "1572660"
  },
  {
    "text": "really had thought about it a lot we get bug reports from people who would say log an object that had a system dot type",
    "start": "1572660",
    "end": "1579800"
  },
  {
    "text": "in there and you follow the you follow the serialization through the properties attached to system dot type and you've",
    "start": "1579800",
    "end": "1585410"
  },
  {
    "text": "got type two assembly so you start see realizing that assembly doc declared types and starts realizing those and",
    "start": "1585410",
    "end": "1590960"
  },
  {
    "text": "really quickly you find yourself in gigabytes of data there are there are",
    "start": "1590960",
    "end": "1596120"
  },
  {
    "text": "definitely limits in there to protect you today but we still view serializing",
    "start": "1596120",
    "end": "1601400"
  },
  {
    "text": "stuff into the log as being something that's a pretty strong opt-in not really something that you do by default but now",
    "start": "1601400",
    "end": "1606830"
  },
  {
    "text": "you know house here at sarah log got its name it's a serializing logger so is",
    "start": "1606830",
    "end": "1612620"
  },
  {
    "text": "this at all a good idea we thought so for a while it's nice to see that it has",
    "start": "1612620",
    "end": "1618230"
  },
  {
    "text": "actually caught on a bit outside of sarah log as well and if you use sarah log with dotnet core then you find that",
    "start": "1618230",
    "end": "1625190"
  },
  {
    "text": "you can use message templates like that with the microsoft extensions logging api over the top of that and even MVC",
    "start": "1625190",
    "end": "1632540"
  },
  {
    "text": "itself in the dotnet core version like this one is actually using message templates to generate some of its",
    "start": "1632540",
    "end": "1638000"
  },
  {
    "text": "internal events so when you when you log your your requests and things out from a",
    "start": "1638000",
    "end": "1643430"
  },
  {
    "text": "net core app you'll find that all of the things like the action name and controller name that appear in those",
    "start": "1643430",
    "end": "1649100"
  },
  {
    "text": "messages they're all now actually first-class structured properties that you can sort search and filter on",
    "start": "1649100",
    "end": "1655540"
  },
  {
    "text": "whether you're using stereo or not but we you know Sarah logs got a good mature",
    "start": "1655540",
    "end": "1660980"
  },
  {
    "text": "implementation of being able to take those things and and send them to all sorts of destinations while the logging",
    "start": "1660980",
    "end": "1667280"
  },
  {
    "text": "infrastructure in dotnet core is still mostly a facade over different implementations like Sarah log but to",
    "start": "1667280",
    "end": "1677000"
  },
  {
    "text": "try to make sure that we don't really drift off in just making I guess",
    "start": "1677000",
    "end": "1682990"
  },
  {
    "text": "arbitrary changes to the formatting stereo log and and also to give people a pointer to other implementations there's",
    "start": "1682990",
    "end": "1688460"
  },
  {
    "text": "also a site out there you can go and have a look at where you see a few more places that message templates are implemented so in addition to donate",
    "start": "1688460",
    "end": "1694730"
  },
  {
    "text": "core there's also analog 4.5 has now created an implementation that's in beta",
    "start": "1694730",
    "end": "1700270"
  },
  {
    "text": "or alpha I should say I think at this time there are implementations for Java and rust and Python and a couple of",
    "start": "1700270",
    "end": "1709850"
  },
  {
    "text": "others ok all right",
    "start": "1709850",
    "end": "1720760"
  },
  {
    "text": "okay so this is so this is a slightly more",
    "start": "1723049",
    "end": "1729240"
  },
  {
    "text": "realistic log stream it's still much tighter than the logs that I've been forced to spend hours eyeballing in",
    "start": "1729240",
    "end": "1736020"
  },
  {
    "text": "different past lives for sweating profusely but this is more like the kind",
    "start": "1736020",
    "end": "1742110"
  },
  {
    "text": "of thing that you'll see when you're actually using Siri log to collect data from a real app and this one's just a I'm just a test data set that's",
    "start": "1742110",
    "end": "1750500"
  },
  {
    "text": "collecting data from some kind of admissions portal a typical kind of",
    "start": "1750500",
    "end": "1756150"
  },
  {
    "text": "hospital admissions system and you see that we've got the same oh and I've got a cursor back yes okay you'll see that",
    "start": "1756150",
    "end": "1764430"
  },
  {
    "text": "we've got the same kind of structured data here with a lot more properties attached we're getting all those for the time being so in this instance we can do",
    "start": "1764430",
    "end": "1771930"
  },
  {
    "text": "things like we can go and um we can go and take commit time elapsed she's been",
    "start": "1771930",
    "end": "1778920"
  },
  {
    "text": "added to the message we can find that or we can do things like oh there we go now",
    "start": "1778920",
    "end": "1788220"
  },
  {
    "text": "we can plot it over time etc etc but but",
    "start": "1788220",
    "end": "1794490"
  },
  {
    "text": "interestingly I mean those are the kind of those are the kinds of I guess bonus",
    "start": "1794490",
    "end": "1801600"
  },
  {
    "text": "features that you get from from using something like Sarah log most of the time that I turn to application logs",
    "start": "1801600",
    "end": "1807300"
  },
  {
    "text": "like it's really nice to do analytics and and everything else but most of the time I've got a problem to solve and the",
    "start": "1807300",
    "end": "1814740"
  },
  {
    "text": "things that terrify me are usually the unknown unknowns they're not the things that I know about I mean I know I've",
    "start": "1814740",
    "end": "1820260"
  },
  {
    "text": "been watching my commit time on transactions as the systems we're running for months on end and I know that they're not going anywhere fast and",
    "start": "1820260",
    "end": "1826410"
  },
  {
    "text": "so when a bug report comes in generally from the field all you typically end up",
    "start": "1826410",
    "end": "1832290"
  },
  {
    "text": "with is is the",
    "start": "1832290",
    "end": "1838490"
  },
  {
    "text": "is the idea that some at some stage in the afternoon something didn't happen that should have happened and in the",
    "start": "1839340",
    "end": "1846450"
  },
  {
    "text": "logs there somewhere is the clue and but the logs look normal and you can scroll for you know you can scroll for hours",
    "start": "1846450",
    "end": "1854340"
  },
  {
    "text": "and they're um they're generally even from a fairly quiet system here",
    "start": "1854340",
    "end": "1859650"
  },
  {
    "text": "thousands upon thousands of logs and there's a very strong limit on how much data you can actually take in by eye",
    "start": "1859650",
    "end": "1865530"
  },
  {
    "text": "until you start to the coffee cup start stacking up on a desk and and you still haven't found any clues and the system's",
    "start": "1865530",
    "end": "1871530"
  },
  {
    "text": "still not behaving properly it's a horrible experience one of the one of the interesting observations that we made through building stereo log is",
    "start": "1871530",
    "end": "1879810"
  },
  {
    "text": "that in even a fairly large system there are always orders of magnitude more",
    "start": "1879810",
    "end": "1884990"
  },
  {
    "text": "events than there are kinds of events so we might have a million events in the",
    "start": "1884990",
    "end": "1891990"
  },
  {
    "text": "stream since yesterday morning but the application has only been running a certain number of scenarios in that time",
    "start": "1891990",
    "end": "1897450"
  },
  {
    "text": "running a certain number of lines of code and so once we've actually looked at an event for say this sequel server",
    "start": "1897450",
    "end": "1905220"
  },
  {
    "text": "circuit breaker state is open we know that's got nothing to do with the problem or unlikely to have anything to",
    "start": "1905220",
    "end": "1911520"
  },
  {
    "text": "do with it the nice thing that Sarah log lets us do is that because all of the",
    "start": "1911520",
    "end": "1917760"
  },
  {
    "text": "events for this message have actually been generated from the same template you know the template is going to be",
    "start": "1917760",
    "end": "1924180"
  },
  {
    "text": "circuit breaker breaker name state is state and all the events that were",
    "start": "1924180",
    "end": "1931350"
  },
  {
    "text": "raised by that same line of code whether they've got garbage in those properties or not it can all be identified because",
    "start": "1931350",
    "end": "1937260"
  },
  {
    "text": "you can track them back to the type now you can track them back to the message template and in this case we use the",
    "start": "1937260",
    "end": "1944190"
  },
  {
    "text": "hash of that message template to be able to zero in on finding the events which",
    "start": "1944190",
    "end": "1950820"
  },
  {
    "text": "is great if you're doing in the analytics kind of case because you grab all of a particular kind of event and then just go and pluck out the",
    "start": "1950820",
    "end": "1955860"
  },
  {
    "text": "properties to do analysis on but more importantly for me",
    "start": "1955860",
    "end": "1962630"
  },
  {
    "text": "is that once we've decided that we're not interested in that event anymore we can just exclude that from from whatever",
    "start": "1964350",
    "end": "1970500"
  },
  {
    "text": "view we're using to read the log stream and if we do that for a little while like the problem is nothing to do with",
    "start": "1970500",
    "end": "1975990"
  },
  {
    "text": "the claim checks and oh I could tell you it by the way we will give you an idea",
    "start": "1975990",
    "end": "1981299"
  },
  {
    "text": "of what's left so we've got 52,000",
    "start": "1981299",
    "end": "1992520"
  },
  {
    "text": "events to get through but as we zoom our way in we're not interested in that claim status so exclude not interested",
    "start": "1992520",
    "end": "1999120"
  },
  {
    "text": "in that exclude and as we work our way through looking at different kinds of events that are not going to be relevant",
    "start": "1999120",
    "end": "2006559"
  },
  {
    "text": "to our problem we start to design to zoom in on maybe things that are more interesting for our particular scenario",
    "start": "2006559",
    "end": "2013789"
  },
  {
    "text": "and eventually you would hope given a bit of determination and probably still",
    "start": "2013789",
    "end": "2020000"
  },
  {
    "text": "a few cups of coffee okay it's nothing to do with update checks and hey this is",
    "start": "2020000",
    "end": "2026600"
  },
  {
    "text": "the event you can't afford to miss so probably probably sifted through 60,000",
    "start": "2026600",
    "end": "2031700"
  },
  {
    "text": "events by excluding only you know a dozen event types and for for Diagnostics this is a super powerful",
    "start": "2031700",
    "end": "2037370"
  },
  {
    "text": "side effect and most of the time when you first see Sarah log you hear about all of the all of the advantages of",
    "start": "2037370",
    "end": "2042919"
  },
  {
    "text": "being able to query based on properties and filter based on properties but in practice the thing that saved in my bay",
    "start": "2042919",
    "end": "2048618"
  },
  {
    "text": "the most of it has been the ability to go and actually sift out an interesting",
    "start": "2048619",
    "end": "2053990"
  },
  {
    "text": "thing it's like triage particular kinds of exceptions or triage particular kinds of warnings and make sure that I can",
    "start": "2053990",
    "end": "2060200"
  },
  {
    "text": "separate out the data that I'm interested in from the things that are obviously just noise it's kind of the",
    "start": "2060200",
    "end": "2067190"
  },
  {
    "text": "dem tal moment isn't that it's like wait there's still more we've got this so",
    "start": "2067190",
    "end": "2073070"
  },
  {
    "text": "we're just looking at those in seek of course but it's not a sea creature",
    "start": "2073070",
    "end": "2078200"
  },
  {
    "text": "specifically even if you're writing a log file with Sarah log you can still plug in and enrich to attach that hashed",
    "start": "2078200",
    "end": "2086950"
  },
  {
    "text": "message template value straight into your log file and then be able to go and search using whatever tools you use for",
    "start": "2086950",
    "end": "2093950"
  },
  {
    "text": "that plain text processing and still get the having event types their first class do",
    "start": "2093950",
    "end": "2099890"
  },
  {
    "text": "you see here we've got the the the full event has actually rendered into the message and then we just sneakily hashed",
    "start": "2099890",
    "end": "2106039"
  },
  {
    "text": "the template using something like murmur or Jenkins hash or something like that and stick that value in there in a way",
    "start": "2106039",
    "end": "2112369"
  },
  {
    "text": "that we can search it out again later on",
    "start": "2112369",
    "end": "2116018"
  },
  {
    "text": "okay so just to look at the second part of I'm sorry log so on the surface we've",
    "start": "2121960",
    "end": "2129289"
  },
  {
    "text": "got the nice capturing syntax for for recording structured data and then down",
    "start": "2129289",
    "end": "2134869"
  },
  {
    "text": "at the end of that pipeline of event processing we can pop these things into all sorts of different sinks but in",
    "start": "2134869",
    "end": "2141799"
  },
  {
    "text": "between we've got events that I captured from your log statements and then sort",
    "start": "2141799",
    "end": "2148190"
  },
  {
    "text": "of make their way through a pipeline of filtering and and other kinds of processing and by treating events as a",
    "start": "2148190",
    "end": "2155690"
  },
  {
    "text": "first-class entity and having an API that's really tuned for them we can do some interesting things in several log",
    "start": "2155690",
    "end": "2163239"
  },
  {
    "text": "so just a word on terminology we're mostly talking about correlation here",
    "start": "2163239",
    "end": "2168979"
  },
  {
    "text": "which is the the ability to connect the dots in a very large event stream if",
    "start": "2168979",
    "end": "2174680"
  },
  {
    "text": "you've done work with WCF and correlation or the you know the correlation ID header in in a web",
    "start": "2174680",
    "end": "2180829"
  },
  {
    "text": "application you're probably thinking of correlation as being something that's about a single identifier sarah log",
    "start": "2180829",
    "end": "2186289"
  },
  {
    "text": "though is geared strongly towards supporting a more natural style of correlation where say you've got a",
    "start": "2186289",
    "end": "2193819"
  },
  {
    "text": "you've got a stream from your application of millions of events if you've only got one dimension to starts",
    "start": "2193819",
    "end": "2199849"
  },
  {
    "text": "start filtering down it's gonna be very hard to start to home in on a",
    "start": "2199849",
    "end": "2205460"
  },
  {
    "text": "particularly interesting set and to really help make that possible not only",
    "start": "2205460",
    "end": "2213469"
  },
  {
    "text": "do we collect the payload in each event from the message sarah log allows you to",
    "start": "2213469",
    "end": "2218989"
  },
  {
    "text": "attach all other different kinds of contextual information to an event so",
    "start": "2218989",
    "end": "2224779"
  },
  {
    "text": "that you know we might know for instance that the problem was to do with this particular customer and",
    "start": "2224779",
    "end": "2230849"
  },
  {
    "text": "so we can filter on customer ID and then switch onto another dimension it was when we were processing a claim for that",
    "start": "2230849",
    "end": "2236910"
  },
  {
    "text": "customer so we look at the claim ID and the customer ID and we can start to to narrow things down that way",
    "start": "2236910",
    "end": "2243900"
  },
  {
    "text": "and so you can see there's there's really like an infinite number of possible ways to to correlate different",
    "start": "2243900",
    "end": "2249089"
  },
  {
    "text": "sets of related events in this kind of system yeah and that was that slide so",
    "start": "2249089",
    "end": "2264839"
  },
  {
    "text": "once Sara logs started with him started producing fully structured events that way it really opened up the opportunity",
    "start": "2264839",
    "end": "2271829"
  },
  {
    "text": "to go and think hard about I think hard",
    "start": "2271829",
    "end": "2277619"
  },
  {
    "text": "about how to make those events richer and and more useful for Diagnostics so here we've got another I still don't",
    "start": "2277619",
    "end": "2284220"
  },
  {
    "text": "have any cursor oh but if I scroll I do here's the trick okay it's now good",
    "start": "2284220",
    "end": "2291299"
  },
  {
    "text": "another console app similarly trivial to the one we were looking at five minutes ago now it's a it's gotta log the",
    "start": "2291299",
    "end": "2298920"
  },
  {
    "text": "sequence of events it logs a start up event a done event and then and then",
    "start": "2298920",
    "end": "2304609"
  },
  {
    "text": "with within each iteration of the loop its book ending that calculation with some we're gonna do this we've done it",
    "start": "2304609",
    "end": "2311190"
  },
  {
    "text": "and then we do it and then another event that tells you that we've done it when",
    "start": "2311190",
    "end": "2317190"
  },
  {
    "text": "we run that see Oh actually let's leave",
    "start": "2317190",
    "end": "2323190"
  },
  {
    "text": "that yeah you would have you would have seen over when we were looking at the last data setting in seek that we're",
    "start": "2323190",
    "end": "2330150"
  },
  {
    "text": "narrowing down to a particular demo using this selector over on the right here what we're really what we're really",
    "start": "2330150",
    "end": "2337140"
  },
  {
    "text": "doing there is that each of those little programs is using and enrichment with a",
    "start": "2337140",
    "end": "2345059"
  },
  {
    "text": "property to be able to be able to separate it from all the other programs that were running in the same in the",
    "start": "2345059",
    "end": "2350549"
  },
  {
    "text": "same session so in this case we want to enrich it with the demo property",
    "start": "2350549",
    "end": "2355940"
  },
  {
    "text": "and this one is called the enrichment demo and he is he the most basic and",
    "start": "2356559",
    "end": "2363789"
  },
  {
    "text": "fundamental way of of narrowing down to a set of events with Sarah log if we",
    "start": "2363789",
    "end": "2371529"
  },
  {
    "text": "refresh that again see now all of those events that came from that from that",
    "start": "2371529",
    "end": "2377319"
  },
  {
    "text": "application have got demo attached we can find that and then actually I believe that we've already set up a filter for it there we go",
    "start": "2377319",
    "end": "2385469"
  },
  {
    "text": "so Sarah log lets you pin individual properties to an event and most of the time that's going to be something like",
    "start": "2385469",
    "end": "2390849"
  },
  {
    "text": "the name of the application or if you're just running my application it might be the name of the particular service",
    "start": "2390849",
    "end": "2397359"
  },
  {
    "text": "component or sometimes the environment they running in you might want to separate logs that are from dev of a test or acceptance testing that static",
    "start": "2397359",
    "end": "2406299"
  },
  {
    "text": "kind of enrichment is is very useful but fairly limited it's more frequent that",
    "start": "2406299",
    "end": "2412869"
  },
  {
    "text": "you'll have some kind of of data of a value that changes as the application runs typically these start out with",
    "start": "2412869",
    "end": "2420579"
  },
  {
    "text": "things that you'll be familiar with from using log phonetic and log like yesterday enriched with thread ID the in",
    "start": "2420579",
    "end": "2430299"
  },
  {
    "text": "console app I hope there's nothing crazy going on here and we actually do get what I expect in that case it's going to",
    "start": "2430299",
    "end": "2436900"
  },
  {
    "text": "be that doesn't look so good does it ah hmm",
    "start": "2436900",
    "end": "2446940"
  },
  {
    "text": "perhaps the perhaps the little selector is not the right one call that one there",
    "start": "2446940",
    "end": "2455550"
  },
  {
    "text": "we go somebody can point out my typos later on so in this case the thread IDs always",
    "start": "2455550",
    "end": "2462720"
  },
  {
    "text": "one but every lock has a little tool box and a number of different packages that you can add they go on enriching with",
    "start": "2462720",
    "end": "2469080"
  },
  {
    "text": "different values like the thread ID the current HTTP request ID the current",
    "start": "2469080",
    "end": "2474330"
  },
  {
    "text": "machine name the logged on user name all of these pieces of ambient data can get attached to an event was that you really",
    "start": "2474330",
    "end": "2479640"
  },
  {
    "text": "having to worry about it at the place that the app that the event is logged",
    "start": "2479640",
    "end": "2484220"
  },
  {
    "text": "getting uh getting done a bit more specific and I think the most interesting piece of the enrichment API",
    "start": "2485120",
    "end": "2493590"
  },
  {
    "text": "in Sarah log is something called log context and as I said earlier on one of",
    "start": "2493590",
    "end": "2500550"
  },
  {
    "text": "the principles that Sarah really tries hard to adhere to is not to go and make assumptions about being the only logger",
    "start": "2500550",
    "end": "2506430"
  },
  {
    "text": "in a process and and not assuming that any particular static state belongs to it so to be able to get your ambient",
    "start": "2506430",
    "end": "2513300"
  },
  {
    "text": "context into stereo log you need to opt in with enriched from log context and from then we can go and do we can do",
    "start": "2513300",
    "end": "2523050"
  },
  {
    "text": "operations with log context like pushing",
    "start": "2523050",
    "end": "2528480"
  },
  {
    "text": "push property onto the stack in this case we could call it will call it iteration sorry that should be and we'll",
    "start": "2528480",
    "end": "2539160"
  },
  {
    "text": "put I there that should be",
    "start": "2539160",
    "end": "2542690"
  },
  {
    "text": "property okay",
    "start": "2547730",
    "end": "2551470"
  },
  {
    "text": "sorry about the clicking the last thing I wanted to do at 9 a.m. on them on a",
    "start": "2553469",
    "end": "2558789"
  },
  {
    "text": "Friday morning was prove that I'm not a keyboard warrior but so in this case in",
    "start": "2558789",
    "end": "2565239"
  },
  {
    "text": "that using block all of the events that have been raised will have the same iteration property attached to them we",
    "start": "2565239",
    "end": "2573159"
  },
  {
    "text": "sit back and look at those I see here we got the answer was a 9801",
    "start": "2573159",
    "end": "2578619"
  },
  {
    "text": "if there's something wrong with that answer then by using the property we've attached through the log context we can",
    "start": "2578619",
    "end": "2584469"
  },
  {
    "text": "gonna find all of the events that were related that was 99 okay so now I know",
    "start": "2584469",
    "end": "2590199"
  },
  {
    "text": "what ninety nine squared is great so the local context is is useful for things",
    "start": "2590199",
    "end": "2597969"
  },
  {
    "text": "like perhaps it generally appears in middleware more than it appears in user code but if you've used something like",
    "start": "2597969",
    "end": "2604059"
  },
  {
    "text": "mass transit or in-service bus you typically find that your whole application is built up with just these",
    "start": "2604059",
    "end": "2609880"
  },
  {
    "text": "little islands of activity that occur in response to something like a message coming down the bus for a particular",
    "start": "2609880",
    "end": "2615999"
  },
  {
    "text": "order or for a particular customer and when that process begins you've got the",
    "start": "2615999",
    "end": "2622779"
  },
  {
    "text": "opportunity to push that message ID onto the blog context or push an HTTP request ID onto the context and then if",
    "start": "2622779",
    "end": "2628689"
  },
  {
    "text": "something goes wrong in the processing of that message you can go and you can go and just pull out all of the events that occurred only within that logical",
    "start": "2628689",
    "end": "2635199"
  },
  {
    "text": "threat of execution this is part of where Sarah logs async async'",
    "start": "2635199",
    "end": "2641109"
  },
  {
    "text": "friendliness also comes into the picture because hey what is what is the threat",
    "start": "2641109",
    "end": "2646449"
  },
  {
    "text": "of execution has changed about half a dozen times over the life of dotnet we",
    "start": "2646449",
    "end": "2651969"
  },
  {
    "text": "used to use logical call context and a few other few other things so now Sarah log actually uses async",
    "start": "2651969",
    "end": "2658779"
  },
  {
    "text": "local of T for that which is a fairly new type if you if you're on a framework that supports it and that way it follows",
    "start": "2658779",
    "end": "2665739"
  },
  {
    "text": "a thread of execution even if there are weights embedded in there so you can run this in async code just like you can in",
    "start": "2665739",
    "end": "2672069"
  },
  {
    "text": "a synchronous code so the the last kind",
    "start": "2672069",
    "end": "2678549"
  },
  {
    "text": "of way to approach enrichment is the DIY and I think the the thing I really like",
    "start": "2678549",
    "end": "2685970"
  },
  {
    "text": "about sever log is that there isn't really a lot of magic in the library itself the the pipeline is really just a",
    "start": "2685970",
    "end": "2693519"
  },
  {
    "text": "pipeline cobbled together from different plugins and in this case you can quite",
    "start": "2693519",
    "end": "2699980"
  },
  {
    "text": "easily at this point if you want to say put an event type locally into your logs then you can write a new event type and",
    "start": "2699980",
    "end": "2707930"
  },
  {
    "text": "richer and a free Sharpe advise me today",
    "start": "2707930",
    "end": "2716660"
  },
  {
    "text": "and all of these things are implemented with something called a log event and enricher which is plugged into the",
    "start": "2716660",
    "end": "2723410"
  },
  {
    "text": "pipeline you get a log event that comes through the through the process and then you can inspect that event in an richer",
    "start": "2723410",
    "end": "2729500"
  },
  {
    "text": "and see whether or not there's anything interesting about the event that would mean you want to add more data in there so people have used this for things like",
    "start": "2729500",
    "end": "2736180"
  },
  {
    "text": "pulling values out of the exempt exception data property to actually tag",
    "start": "2736180",
    "end": "2742849"
  },
  {
    "text": "on the event as first-class properties when an error occurs so say if you're using Postgres you've got a whole lot of",
    "start": "2742849",
    "end": "2747859"
  },
  {
    "text": "data on attached to each event that comes back from Postgres that gives you things like the the internal Postgres",
    "start": "2747859",
    "end": "2753740"
  },
  {
    "text": "error code that implement that raised that exception and whatever you're working with you you'll find there's similar cases it's also possible to do",
    "start": "2753740",
    "end": "2761630"
  },
  {
    "text": "things like look at the message template and generate a hash that you can then go and include in your output format to",
    "start": "2761630",
    "end": "2767420"
  },
  {
    "text": "show in a log file and enrichment is is",
    "start": "2767420",
    "end": "2774470"
  },
  {
    "text": "really an area you're ready for lots of creativity so at the moment in in Sarah",
    "start": "2774470",
    "end": "2782480"
  },
  {
    "text": "log itself we've got things like the api's for doing fixed values for the ambient state the scoped state you can",
    "start": "2782480",
    "end": "2788539"
  },
  {
    "text": "also attach properties to an individual event using an enrichment API called for context so take a log for context pass a",
    "start": "2788539",
    "end": "2795710"
  },
  {
    "text": "property value and then that gives you a customized logger that will attach that value to every other event that you raised through it",
    "start": "2795710",
    "end": "2803470"
  },
  {
    "text": "but where this all fits into the big picture sarah log has has quite an",
    "start": "2803470",
    "end": "2808849"
  },
  {
    "text": "interesting pipeline it's it's in a fixed topology which you probably feel initially might be limiting of course",
    "start": "2808849",
    "end": "2815029"
  },
  {
    "text": "you the neat thing is you can chain multiple pipelines together but events in this in",
    "start": "2815029",
    "end": "2820540"
  },
  {
    "text": "a semi-log pipeline go through if they pass them in a minimum level check now you can customize the way that values",
    "start": "2820540",
    "end": "2826540"
  },
  {
    "text": "are captured so just like Jason Jeannette you can you can say configure the sûreté serialization for user",
    "start": "2826540",
    "end": "2835240"
  },
  {
    "text": "objects and exclude the password field say if someone logs those and so at that",
    "start": "2835240",
    "end": "2840550"
  },
  {
    "text": "capturing stage you can go and do things like implement custom policies for say",
    "start": "2840550",
    "end": "2845890"
  },
  {
    "text": "if you're working on a system that does a lot of GIS you might want to log GIS objects instead of position objects",
    "start": "2845890",
    "end": "2852100"
  },
  {
    "text": "instead of as strings you might want to automatically convert those into a particular into a particular structured",
    "start": "2852100",
    "end": "2857230"
  },
  {
    "text": "format once you've gotten through that process of capturing the event then",
    "start": "2857230",
    "end": "2862240"
  },
  {
    "text": "things like the enriches that we've been looking at plug-in now all the ones that we were using previously in the demo",
    "start": "2862240",
    "end": "2867670"
  },
  {
    "text": "like the thread ID enricher and log contacts contacts and everything they're just based on a simple API that lets you",
    "start": "2867670",
    "end": "2873190"
  },
  {
    "text": "inspect the events and attach more data to it it can be a little bit scary I think at first though to crack it open",
    "start": "2873190",
    "end": "2878920"
  },
  {
    "text": "because just like JSON net if you if you've worked with the dynamic data in",
    "start": "2878920",
    "end": "2884920"
  },
  {
    "text": "JSON net then you'll have seen things like J objects and J array and you might ask kind of like why don't we just have",
    "start": "2884920",
    "end": "2891100"
  },
  {
    "text": "object an array sera log is a bit similar it's got an object model for",
    "start": "2891100",
    "end": "2896470"
  },
  {
    "text": "representing property data the reason for that is and I think that I bet",
    "start": "2896470",
    "end": "2902890"
  },
  {
    "text": "there's at least one person here who's been just me sweating it since the beginning of course going and grabbing",
    "start": "2902890",
    "end": "2908020"
  },
  {
    "text": "objects from your programming from your application sticking them in events and then passing them through an",
    "start": "2908020",
    "end": "2913810"
  },
  {
    "text": "asynchronous pipeline is kind of like a concurrency in home there to realize",
    "start": "2913810",
    "end": "2918910"
  },
  {
    "text": "this early on and Sarah log uses the type system that has it has built into it like you'll see scalar value here for",
    "start": "2918910",
    "end": "2925480"
  },
  {
    "text": "thread ID it uses that to enforce that only a certain set of values will",
    "start": "2925480",
    "end": "2931420"
  },
  {
    "text": "actually be carried along with a log event and everything else either has to be turned into serious error logs",
    "start": "2931420",
    "end": "2937870"
  },
  {
    "text": "internal types or or converted using to string so all of those values then once",
    "start": "2937870",
    "end": "2943780"
  },
  {
    "text": "they're attached to a log event or immutable and therefore mostly and",
    "start": "2943780",
    "end": "2949180"
  },
  {
    "text": "reasonably so to do things like putting a in a batch so that they can be patched up and",
    "start": "2949180",
    "end": "2955959"
  },
  {
    "text": "shipped maybe over HTTP but I work a thread so there is a little bit to contend with if you want to jump in in",
    "start": "2955959",
    "end": "2961749"
  },
  {
    "text": "them and write your own enriches but it's certainly not super complex the",
    "start": "2961749",
    "end": "2968079"
  },
  {
    "text": "final stage of that pipeline across is filtering client-side filtering is something that I always imagined would be would be really heavily used in sera",
    "start": "2968079",
    "end": "2975099"
  },
  {
    "text": "log you can write a filter expression for your sera log pipeline that says exclude all of the errors where the",
    "start": "2975099",
    "end": "2981609"
  },
  {
    "text": "error code is whatever so that you're not so you're not collecting a lot of it over time though I think we're the",
    "start": "2981609",
    "end": "2987939"
  },
  {
    "text": "people using sera log of tended to move on from log files and on from things that have those kind of constraints and",
    "start": "2987939",
    "end": "2995699"
  },
  {
    "text": "more towards collecting things in backward back-end logs servers and these",
    "start": "2995699",
    "end": "3001199"
  },
  {
    "text": "kinds of systems typically have mechanisms to filter at the server side and that's much more ergonomic to go in",
    "start": "3001199",
    "end": "3007109"
  },
  {
    "text": "exclude events as they arrive at the server will have short retention policies that knock events out based on",
    "start": "3007109",
    "end": "3012390"
  },
  {
    "text": "based on a set of criteria than it is to actually go and update applications with the filters but the filtering is pretty",
    "start": "3012390",
    "end": "3017759"
  },
  {
    "text": "sophisticated as well there if you if you define a use case where it's important to you so that's the real",
    "start": "3017759",
    "end": "3026489"
  },
  {
    "text": "whirlwind tour of what makes sera log sera log we looked at message templates",
    "start": "3026489",
    "end": "3033769"
  },
  {
    "text": "hopefully you're itching to go in them and template up all of your log messages now or even even if you've got log",
    "start": "3033769",
    "end": "3039959"
  },
  {
    "text": "Fernet or analog go and switch them and and start collecting things with those numeric properties because even like",
    "start": "3039959",
    "end": "3045599"
  },
  {
    "text": "filtering for an event based on a numeric placeholder is not the worst thing in the world",
    "start": "3045599",
    "end": "3050699"
  },
  {
    "text": "compared with I don't know what kind of regular expression madness you'd otherwise have to do and we looked at",
    "start": "3050699",
    "end": "3057809"
  },
  {
    "text": "enrichment and how to kind of slice that slice log stuff in across a lot of dimensions that way I think I'm just",
    "start": "3057809",
    "end": "3065459"
  },
  {
    "text": "about short on time now but I've got um some time for some questions if there's anything that anybody would like to dig",
    "start": "3065459",
    "end": "3071789"
  },
  {
    "text": "deeper into sure yeah",
    "start": "3071789",
    "end": "3076429"
  },
  {
    "text": "yeah well you see I use the static log class only because yeah I use a lot of IRC as well as I suffered the IOC bug",
    "start": "3087589",
    "end": "3095239"
  },
  {
    "text": "for many years as well and I do I do in my apps as well inject pretty much everything that I can't get away with",
    "start": "3095239",
    "end": "3102170"
  },
  {
    "text": "making static and stateless like you know functional style stateless I've",
    "start": "3102170",
    "end": "3107689"
  },
  {
    "text": "tended personally not to inject dialog just because when I look at a component for i/o see that constructor list is",
    "start": "3107689",
    "end": "3114109"
  },
  {
    "text": "such an important piece of documentation for me and I want to go to look at it and see really quickly what the",
    "start": "3114109",
    "end": "3119150"
  },
  {
    "text": "components going to do I don't really want to have to have our logger in all of those but you can't of course wire up",
    "start": "3119150",
    "end": "3124219"
  },
  {
    "text": "your ioc container or a published one that i published a new get package called auto effects area log integration",
    "start": "3124219",
    "end": "3130130"
  },
  {
    "text": "I think that it gives you an idea of how stereo log can be configured that way with Auto fact the asp.net core donate",
    "start": "3130130",
    "end": "3136999"
  },
  {
    "text": "core vlogging subsystem has something similar that it can do constructor injection that way it's definitely a",
    "start": "3136999",
    "end": "3143930"
  },
  {
    "text": "possibility and not anything kind of prescribed against and that's that's actually the original reason of course",
    "start": "3143930",
    "end": "3148969"
  },
  {
    "text": "why there's no static state in Syria log because you might want to configure IOC so that some components get a completely",
    "start": "3148969",
    "end": "3155509"
  },
  {
    "text": "different logging pipeline to others one of the instances that that might occur is some sometimes you can configure a",
    "start": "3155509",
    "end": "3161420"
  },
  {
    "text": "logging pipeline with a different set of policies to make it into an auditing pipeline so yeah there's no place where",
    "start": "3161420",
    "end": "3167989"
  },
  {
    "text": "you might want to kind of choose that implementation rather than just use log the static class anybody else anything",
    "start": "3167989",
    "end": "3174170"
  },
  {
    "text": "else yeah sure",
    "start": "3174170",
    "end": "3177969"
  },
  {
    "text": "implementing your in sync yeah we could just about we could just about do one",
    "start": "3180250",
    "end": "3185380"
  },
  {
    "text": "now I'll try I'll try I love it yeah",
    "start": "3185380",
    "end": "3191670"
  },
  {
    "text": "look I love a good challenge I did get my morning coffee and I wasn't",
    "start": "3191670",
    "end": "3198790"
  },
  {
    "text": "that um so you're your own sink is oh",
    "start": "3198790",
    "end": "3204540"
  },
  {
    "text": "that's the page down button so the sinks",
    "start": "3204540",
    "end": "3210550"
  },
  {
    "text": "as well as the underdog Sarah log is",
    "start": "3210550",
    "end": "3217380"
  },
  {
    "text": "Sarah log was really optimized for being easy to get going with I didn't think when I first started working on the API",
    "start": "3217440",
    "end": "3224290"
  },
  {
    "text": "that anybody would spend a lot of time working on working on writing sinks for",
    "start": "3224290",
    "end": "3233260"
  },
  {
    "text": "a brand new logging library that was unproven it's kind of like chicken and egg so the things that the sinks are also very easy easy to write we can do something like console ah do I not have",
    "start": "3233260",
    "end": "3243580"
  },
  {
    "text": "system look console we can write we can write it out the just the timestamp",
    "start": "3243580",
    "end": "3254549"
  },
  {
    "text": "event I understand hey and our richest still throws but",
    "start": "3255330",
    "end": "3261910"
  },
  {
    "text": "that probably gives us another opportunity to see to see Sarah log in",
    "start": "3261910",
    "end": "3267849"
  },
  {
    "text": "practice so Sarah log did there we go there's a there's our other sink in action they're printing out the time timestamp there's a there's a bunch of",
    "start": "3267849",
    "end": "3273790"
  },
  {
    "text": "machinery for doing things like formatting events artist text using it using a format string and those kinds of",
    "start": "3273790",
    "end": "3279339"
  },
  {
    "text": "kind of niceties and they're there's a range of Jason C realizes that you can use to do Jason based inks so you see",
    "start": "3279339",
    "end": "3287080"
  },
  {
    "text": "even though our enricher was throwing every time an event passed through their ass every local will collect up those",
    "start": "3287080",
    "end": "3293530"
  },
  {
    "text": "exceptions and just send them to an internal log its carried its carried that fail stop perspective through from",
    "start": "3293530",
    "end": "3299800"
  },
  {
    "text": "log4net where the logger shouldn't bring down the app if it can avoid it generally of course because your apps at",
    "start": "3299800",
    "end": "3305290"
  },
  {
    "text": "that point crashing in you know if I can't be fought with fire in that instance so yeah there are lots",
    "start": "3305290",
    "end": "3312020"
  },
  {
    "text": "but given that there are probably about a hundred sinks out there I think now even more you don't generally find",
    "start": "3312020",
    "end": "3319490"
  },
  {
    "text": "yourself writing new things too often you can pretty easily grab the code for any of those ones from github when you",
    "start": "3319490",
    "end": "3325010"
  },
  {
    "text": "get and and adapt any other questions or we have some time",
    "start": "3325010",
    "end": "3330910"
  },
  {
    "text": "yep",
    "start": "3337340",
    "end": "3340030"
  },
  {
    "text": "yeah so that the configuration subsystem so the question was how would you change the log level with that configuration so",
    "start": "3343140",
    "end": "3349499"
  },
  {
    "text": "several log does have configuration in fact and here's another opportunity to demo the switch back over to the other",
    "start": "3349499",
    "end": "3354989"
  },
  {
    "text": "example but the fantastic sorry log am analyzer so you can configure sera log completely",
    "start": "3354989",
    "end": "3361079"
  },
  {
    "text": "using XML configure if you want it's just that you need to add read from app settings and install an app settings",
    "start": "3361079",
    "end": "3367049"
  },
  {
    "text": "package or read from configuration to use there's bid on that core all right the donate call Jason configuration but",
    "start": "3367049",
    "end": "3373710"
  },
  {
    "text": "the analyzer has this great little hack where you can write your code first and say in this instance let's add minimum",
    "start": "3373710",
    "end": "3379650"
  },
  {
    "text": "level to it debug and now we're going to go and put that into app config I'll",
    "start": "3379650",
    "end": "3385529"
  },
  {
    "text": "Center we've got a choice between it says show app settings configure app settings so Jason config I just hit",
    "start": "3385529",
    "end": "3393329"
  },
  {
    "text": "enter and we can actually get the Sarah log analyzer to generate the XML config there and then copy and paste that into",
    "start": "3393329",
    "end": "3398940"
  },
  {
    "text": "the config file and get it going so I hat off to the that people have worked on making this thing this thing",
    "start": "3398940",
    "end": "3405720"
  },
  {
    "text": "go because it really it does show how having also having code first gives you",
    "start": "3405720",
    "end": "3411329"
  },
  {
    "text": "a lot of metadata to work with to do these kinds of cool things so any other questions yep",
    "start": "3411329",
    "end": "3419119"
  },
  {
    "text": "you use right to Splunk yep yeah there's a package for Splunk there's a package",
    "start": "3423179",
    "end": "3428769"
  },
  {
    "text": "for a pin sites another very popular one and elasticsearch and lovely and lager and yeah typically all those different",
    "start": "3428769",
    "end": "3436539"
  },
  {
    "text": "back ends have different characteristics of how they like events and so they see this the sinks are all rather",
    "start": "3436539",
    "end": "3441630"
  },
  {
    "text": "specialized for them and the last question on the front yeah yeah yeah",
    "start": "3441630",
    "end": "3454318"
  },
  {
    "text": "yeah yeah that is a very good point so you can also with with the asp.net core I login subsist logger subsystem or she",
    "start": "3458890",
    "end": "3466850"
  },
  {
    "text": "says the dotnet call logging is just the habit of having watched asp.net core develop you can actually plug Sarah log",
    "start": "3466850",
    "end": "3476480"
  },
  {
    "text": "in there and have the framework write all of its events through its a logger and then continue to use Sarah log",
    "start": "3476480",
    "end": "3482240"
  },
  {
    "text": "directly yourself in your code or chop and change pick and choose whichever API you want because yeah ultimately the",
    "start": "3482240",
    "end": "3488380"
  },
  {
    "text": "donut core logging subsystem is a facade and you see that there are providers out",
    "start": "3488380",
    "end": "3493550"
  },
  {
    "text": "there already for things like log4net and and n log I should I don't know about log than that maybe yeah maybe I I",
    "start": "3493550",
    "end": "3499700"
  },
  {
    "text": "need to go and check it out again ok I think that's we may have one one last",
    "start": "3499700",
    "end": "3506630"
  },
  {
    "text": "one last question yeah ok good oh sorry with it was there one",
    "start": "3506630",
    "end": "3514390"
  },
  {
    "text": "ok ok great alright thanks very much coming on really appreciated your time coming out to see this one especially so",
    "start": "3514390",
    "end": "3520490"
  },
  {
    "text": "early but yeah catch me a few if there's anything else that you did want to to know a little bit more about and I hope",
    "start": "3520490",
    "end": "3526850"
  },
  {
    "text": "that I hope that you can take away some things that make your life debugging and diagnosing things a bit more pleasant in",
    "start": "3526850",
    "end": "3532640"
  },
  {
    "text": "the future definitely let me know if let me know if you have some wins yeah thanks [Applause]",
    "start": "3532640",
    "end": "3542690"
  }
]