[
  {
    "text": "right maybe we'll we start and everyone will join catch up because it's one hour long",
    "start": "4720",
    "end": "11960"
  },
  {
    "text": "so um all right I mean um you can see a code over here in this screen can you",
    "start": "13400",
    "end": "19840"
  },
  {
    "text": "guess which programing language it is",
    "start": "19840",
    "end": "24080"
  },
  {
    "text": "so if I run it over here will it run that would be the next",
    "start": "31080",
    "end": "36760"
  },
  {
    "text": "question I mean yeah that's the only code I don't have anything else I'll",
    "start": "39719",
    "end": "45320"
  },
  {
    "text": "just click on this play",
    "start": "45320",
    "end": "48840"
  },
  {
    "text": "button it might right okay so let's see if it works I I mean it might",
    "start": "55239",
    "end": "61280"
  },
  {
    "text": "fail but looks like it worked interestingly enough it's a Java",
    "start": "61280",
    "end": "67360"
  },
  {
    "text": "code can you believe",
    "start": "67360",
    "end": "70880"
  },
  {
    "text": "it is the latest one 23rd so okay next question would be I",
    "start": "81360",
    "end": "87320"
  },
  {
    "text": "mean I hope you you use the Java in in your previous I mean are you a Java developer that would be the question if",
    "start": "87320",
    "end": "93960"
  },
  {
    "text": "not then we'll we'll talk I'll try to convince something else are okay uh how about",
    "start": "93960",
    "end": "104119"
  },
  {
    "text": "you okay so for you this is probably not Java",
    "start": "104119",
    "end": "110399"
  },
  {
    "text": "right how about",
    "start": "110399",
    "end": "113840"
  },
  {
    "text": "you okay okay so this is basically modern Java uh I mean we can do I mean",
    "start": "117439",
    "end": "123640"
  },
  {
    "text": "it it become this much small so if you want to write a main method you can",
    "start": "123640",
    "end": "128720"
  },
  {
    "text": "start like just open a file you can just type the void Main and you can start",
    "start": "128720",
    "end": "134000"
  },
  {
    "text": "coding so that simple it is I'm going to in that in depth but before let me start",
    "start": "134000",
    "end": "139680"
  },
  {
    "text": "the presentation basically okay so to this's presentation",
    "start": "139680",
    "end": "146360"
  },
  {
    "text": "basically I will try to convince you that the Java you saw 10 years back it's",
    "start": "146360",
    "end": "152800"
  },
  {
    "text": "not that Java anymore it's it's much modern and new programming language so",
    "start": "152800",
    "end": "159120"
  },
  {
    "text": "it you'll you'll love it hopefully I mean can I ask what's your I mean",
    "start": "159120",
    "end": "164159"
  },
  {
    "text": "programming background which programing language do you use now Ruby okay I mean Ruby is much better",
    "start": "164159",
    "end": "171319"
  },
  {
    "text": "obviously uh but yeah I mean Java is getting there",
    "start": "171319",
    "end": "176879"
  },
  {
    "text": "hopefully all right um so so there's a story type with Java associated with",
    "start": "177640",
    "end": "182680"
  },
  {
    "text": "that like you you worked with 10 years back so I was talking to a guy the other",
    "start": "182680",
    "end": "188120"
  },
  {
    "text": "uh I mean a year or two back we were in the same flight so he used to use Java like 15 years back so he was asking Java",
    "start": "188120",
    "end": "195640"
  },
  {
    "text": "is still relevant do you guys still use Java so he has some sort of memory that",
    "start": "195640",
    "end": "201920"
  },
  {
    "text": "Java is like you know complex varos you know you have to typ a lot to accomplish",
    "start": "201920",
    "end": "208319"
  },
  {
    "text": "certain things right so I I just wanted to this you know break those stereotypes",
    "start": "208319",
    "end": "213680"
  },
  {
    "text": "today and I'll show you what are the modern um things available in latest Java so that's a whole point I'll give",
    "start": "213680",
    "end": "221000"
  },
  {
    "text": "you some of overview I'll probably not go in depth in many features but I'll show you a lot of features uh what we",
    "start": "221000",
    "end": "227799"
  },
  {
    "text": "can achieve with this latest Java and what are the syntax look like how",
    "start": "227799",
    "end": "232840"
  },
  {
    "text": "shorter how concise are they are so that's the whole goal all right moving",
    "start": "232840",
    "end": "240560"
  },
  {
    "text": "on I mean we have a lot of new features one of them I just showed you earlier so",
    "start": "240560",
    "end": "246599"
  },
  {
    "text": "I'll start with the main method because um I used to teach at a university uh",
    "start": "246599",
    "end": "252280"
  },
  {
    "text": "for two years so I used to teach them Java and whenever I start writing the",
    "start": "252280",
    "end": "257320"
  },
  {
    "text": "first program hell World program uh basically I have to do this sort of you",
    "start": "257320",
    "end": "262960"
  },
  {
    "text": "know uh dance basically you have to write public uh static uh vo Main and",
    "start": "262960",
    "end": "270280"
  },
  {
    "text": "then if you want to write something let's say print Len you have to you to type a whole string and then why what",
    "start": "270280",
    "end": "277400"
  },
  {
    "text": "they used to ask a lot of questions right why there is a public what does it even mean but for a fresh student who",
    "start": "277400",
    "end": "285080"
  },
  {
    "text": "doesn't have the programming background uh these are challenging question I mean",
    "start": "285080",
    "end": "290240"
  },
  {
    "text": "you can answer them but it's difficult to I mean you can explain them but they will not get it uh because uh this comes",
    "start": "290240",
    "end": "298440"
  },
  {
    "text": "later so from from that experience I mean it was it was difficult to convince",
    "start": "298440",
    "end": "304199"
  },
  {
    "text": "the fresher um so it's been that way for like 30 years so they have recently uh",
    "start": "304199",
    "end": "310199"
  },
  {
    "text": "thought about it and you know sort of uh decided to you know remove that barrier",
    "start": "310199",
    "end": "316039"
  },
  {
    "text": "uh so we probably to start a hello world program we probably don't need all of",
    "start": "316039",
    "end": "321560"
  },
  {
    "text": "this ceremonial stuff we can remove all of them and we can just uh you know",
    "start": "321560",
    "end": "326800"
  },
  {
    "text": "write something like that so we'll open a flat file Java file and we can start",
    "start": "326800",
    "end": "333280"
  },
  {
    "text": "coding immediately so we we don't even need the",
    "start": "333280",
    "end": "339319"
  },
  {
    "text": "uh you know class definition at at well as well so you can just open a file like",
    "start": "339319",
    "end": "345160"
  },
  {
    "text": "I I showed you earlier maybe I don't need [Music]",
    "start": "345160",
    "end": "351680"
  },
  {
    "text": "to uh over",
    "start": "351680",
    "end": "355319"
  },
  {
    "text": "here so um you can see in the ID I'm using intelligent idea that's the ID I",
    "start": "358280",
    "end": "364639"
  },
  {
    "text": "use usually but you can choose any ID so over here I I have just opened a file called CDF I mean G and then I start",
    "start": "364639",
    "end": "372880"
  },
  {
    "text": "writing and you see over here I don't have anything can you see my",
    "start": "372880",
    "end": "378120"
  },
  {
    "text": "screen I mean not how can I share the full screen by the",
    "start": "378120",
    "end": "384400"
  },
  {
    "text": "way it went went",
    "start": "384400",
    "end": "389120"
  },
  {
    "text": "uh I I want to show my id id is",
    "start": "391639",
    "end": "398639"
  },
  {
    "text": "gone not appearing here yeah but it's only showing the",
    "start": "398639",
    "end": "406000"
  },
  {
    "text": "presentation though I have to okay oh okay okay okay",
    "start": "406000",
    "end": "416520"
  },
  {
    "text": "okay so so I have to yeah switch up switch okay",
    "start": "416520",
    "end": "421800"
  },
  {
    "text": "understood so yeah so that's the file I have uh as you can see over here I don't have anything it's a simple Java file",
    "start": "421800",
    "end": "429199"
  },
  {
    "text": "and I started uh you know typing void main print then and it's it it basically",
    "start": "429199",
    "end": "435000"
  },
  {
    "text": "start working uh so that's it I mean for I I think this is going to be super",
    "start": "435000",
    "end": "441039"
  },
  {
    "text": "easier for the beginners you don't have to explain a lot you can declare variable you can print",
    "start": "441039",
    "end": "447280"
  },
  {
    "text": "things all right right you can do all sort of things over",
    "start": "447280",
    "end": "453199"
  },
  {
    "text": "here and you don't have to do any any any anything else so that's a super refreshing personally I feel like if I",
    "start": "453199",
    "end": "460120"
  },
  {
    "text": "want to teach a student who has no programming background I can just give give him or her IDE and we can just",
    "start": "460120",
    "end": "468960"
  },
  {
    "text": "start you know learning so that's a new uh that's one",
    "start": "468960",
    "end": "474159"
  },
  {
    "text": "of the new um things that's uh Java added and I am super fan of it",
    "start": "474159",
    "end": "480680"
  },
  {
    "text": "all right so moving on maybe I'll keep on showing the code than the",
    "start": "480680",
    "end": "487638"
  },
  {
    "text": "slides so uh let's let me open a class over",
    "start": "488840",
    "end": "494720"
  },
  {
    "text": "here so let's say I have this class over here conference attendee right it's a uh",
    "start": "501479",
    "end": "507479"
  },
  {
    "text": "can you see the class right or should I increase the font a",
    "start": "507479",
    "end": "512800"
  },
  {
    "text": "more yeah okay okay so so let's say we have a class over here class definition it's",
    "start": "512800",
    "end": "519440"
  },
  {
    "text": "it's just holding a few items like the name and email and we want to transfer",
    "start": "519440",
    "end": "526519"
  },
  {
    "text": "this I mean we want to use this as object in various places we could we could put in a list we can put in a set",
    "start": "526519",
    "end": "532360"
  },
  {
    "text": "right we can pass from one method to another right so but to achieve all of those things you see I have added a lot",
    "start": "532360",
    "end": "539320"
  },
  {
    "text": "of of ceremony over here I need to add gets which is accessor methods name",
    "start": "539320",
    "end": "546160"
  },
  {
    "text": "email and then you know we see if we want to make it imitable we have to add",
    "start": "546160",
    "end": "552160"
  },
  {
    "text": "final keyword over here and then you have to implement those hash code equals",
    "start": "552160",
    "end": "559279"
  },
  {
    "text": "and also if you want to implement tting you have to do a lot of work over here for example if I want to add T string",
    "start": "559279",
    "end": "565240"
  },
  {
    "text": "method over here I'll do this but as you can see it's like around 41",
    "start": "565240",
    "end": "572240"
  },
  {
    "text": "lines of code to achieve a simple things basically it's a carrier it's a holder um object that we have two value in it",
    "start": "572240",
    "end": "581120"
  },
  {
    "text": "and to achieve that basically although the ID is generating all of those things",
    "start": "581120",
    "end": "587399"
  },
  {
    "text": "but still you have to carry all of those things right with your Source control so it's it's it's sort of noise so Java 16",
    "start": "587399",
    "end": "595839"
  },
  {
    "text": "came up with a new idea called record class if we need a some sort of you know",
    "start": "595839",
    "end": "601800"
  },
  {
    "text": "data carrier object what we can do is we can transform this into this uh let me",
    "start": "601800",
    "end": "607959"
  },
  {
    "text": "show you um and we can remove all of",
    "start": "607959",
    "end": "615240"
  },
  {
    "text": "this and I don't need this as well so that's all basically we'll instead of a",
    "start": "619000",
    "end": "624560"
  },
  {
    "text": "class we will Define a keyword called record and we'll we'll write the um you",
    "start": "624560",
    "end": "629959"
  },
  {
    "text": "know filled like this inside the parenthesis and that's it all the things we had earlier are available with this",
    "start": "629959",
    "end": "637399"
  },
  {
    "text": "and we can just Define it and we can use it this is called",
    "start": "637399",
    "end": "642600"
  },
  {
    "text": "record um you need that Curly braces uh that's uh still because you can write a",
    "start": "644639",
    "end": "651360"
  },
  {
    "text": "Constructor over here if you want to if you want to add yeah that's kind of required um if",
    "start": "651360",
    "end": "659440"
  },
  {
    "text": "you remove that uh you will you will get a syntax error so it will not work but we still",
    "start": "659440",
    "end": "665000"
  },
  {
    "text": "need to have this uh syntax um so yeah and these are by default",
    "start": "665000",
    "end": "672240"
  },
  {
    "text": "imitable so if you define once you cannot change them um and uh let me show",
    "start": "672240",
    "end": "678800"
  },
  {
    "text": "you how do I how can I use them right so let me remove this maybe this one so",
    "start": "678800",
    "end": "686519"
  },
  {
    "text": "that I can write main method over here here so as you can",
    "start": "686519",
    "end": "692040"
  },
  {
    "text": "see I have defined a list of conference attendees uh bulur at",
    "start": "692040",
    "end": "699560"
  },
  {
    "text": "something.com",
    "start": "699560",
    "end": "702560"
  },
  {
    "text": "so I have defined over here list of attendance right um and if I want to",
    "start": "705560",
    "end": "712480"
  },
  {
    "text": "print them automatically two string are already there so I can just run it over",
    "start": "712480",
    "end": "718440"
  },
  {
    "text": "here I don't have to do anything it's it's two string is over there already and if I want to access the content of",
    "start": "718440",
    "end": "724519"
  },
  {
    "text": "it let's say um attend the get first name I can just you know",
    "start": "724519",
    "end": "732480"
  },
  {
    "text": "get the name like this um so there is a access method already there so we don't",
    "start": "732480",
    "end": "737720"
  },
  {
    "text": "have to write all of those things so it's so concise I mean earlier we had to write like 40 lines of code now we can",
    "start": "737720",
    "end": "744560"
  },
  {
    "text": "just write one line that's so much good right so much better",
    "start": "744560",
    "end": "749920"
  },
  {
    "text": "because nowadays when we write a lot of uh you know web applications right we have to carry we to use a lot of data",
    "start": "749920",
    "end": "757000"
  },
  {
    "text": "carrier object we call data transfer object they don't do much just carry data from one service to another service",
    "start": "757000",
    "end": "764279"
  },
  {
    "text": "and to do that we have to we previously we had to write a lot of ceremonial code now we don't have to all the all the",
    "start": "764279",
    "end": "771360"
  },
  {
    "text": "things to string um uh hash code uh equality all of those",
    "start": "771360",
    "end": "777480"
  },
  {
    "text": "things are automatically included in into into this so that's that's another amazing",
    "start": "777480",
    "end": "784160"
  },
  {
    "text": "features um let's see if I can go back to my",
    "start": "785079",
    "end": "790240"
  },
  {
    "text": "presentation um so yeah um so records are very F concise uh",
    "start": "790480",
    "end": "797399"
  },
  {
    "text": "immutable data holder and you get all of them in in one go so I have just added",
    "start": "797399",
    "end": "805000"
  },
  {
    "text": "another presentation another slide over here if you want to add a Constructor inside it you can do as well for example",
    "start": "805000",
    "end": "810360"
  },
  {
    "text": "if you need some sort of validation you can add as you can see in the Constructor it doesn't have a you know",
    "start": "810360",
    "end": "817839"
  },
  {
    "text": "method like structure you don't have to pass anything it's called compact Constructor you just write it and you",
    "start": "817839",
    "end": "825120"
  },
  {
    "text": "know you start the Carly and if you need to write certain code over there you can just immediately start writing your code",
    "start": "825120",
    "end": "832199"
  },
  {
    "text": "so less cial all right um so here's some C",
    "start": "832199",
    "end": "839160"
  },
  {
    "text": "characteristics I already um you know shared with you but if you're going to get a quick look um so basically ideal",
    "start": "839160",
    "end": "847560"
  },
  {
    "text": "for since they are all imitable you can use them as a typ safe manner uh so you",
    "start": "847560",
    "end": "853519"
  },
  {
    "text": "don't have to uh make sure they are you know tra safe they're automatically tra",
    "start": "853519",
    "end": "859519"
  },
  {
    "text": "safe all right um so next one that I'm going to share with you called control",
    "start": "859519",
    "end": "865880"
  },
  {
    "text": "inheritance with Sil class have you heard of Sil class um some of other programming",
    "start": "865880",
    "end": "872880"
  },
  {
    "text": "language has it for example cing has it I don't know about CP but uh Scala has",
    "start": "872880",
    "end": "879079"
  },
  {
    "text": "it how would Ruby Ruby does Ruby has a sealed type okay so the idea is um our",
    "start": "879079",
    "end": "887440"
  },
  {
    "text": "inheritance structure in Java was some some sort of open inheritance let's say",
    "start": "887440",
    "end": "893440"
  },
  {
    "text": "maybe I can show you an example quickly um",
    "start": "893440",
    "end": "899800"
  },
  {
    "text": "I should have a example over here yes",
    "start": "903759",
    "end": "909480"
  },
  {
    "text": "um so let's say I have a transaction processor over here right you let me",
    "start": "913240",
    "end": "920440"
  },
  {
    "text": "know if you need to increase the font a bit so it's a simple method it's a",
    "start": "920440",
    "end": "927240"
  },
  {
    "text": "transaction processor um it's process transaction it takes an uh type which is",
    "start": "927240",
    "end": "932560"
  },
  {
    "text": "called financial transaction and it's an interface",
    "start": "932560",
    "end": "938480"
  },
  {
    "text": "basically um so it's an interface it doesn't have the",
    "start": "938480",
    "end": "943800"
  },
  {
    "text": "implementation and I mean it has certain methods defined so to be a basically any",
    "start": "943800",
    "end": "949920"
  },
  {
    "text": "sub type of this uh financial transaction can we can pass to through that method so that's the kind of open",
    "start": "949920",
    "end": "958120"
  },
  {
    "text": "inheritance we have now let's say as a library developer I want to restrict it",
    "start": "958120",
    "end": "963360"
  },
  {
    "text": "to a certain uh number of implementation and all the implementation I'm going to provide as a library developer but as a",
    "start": "963360",
    "end": "970240"
  },
  {
    "text": "user I want to control that you you are not able to you know uh Implement on",
    "start": "970240",
    "end": "975880"
  },
  {
    "text": "your own implementation let's say I have a few over here uh let's say I have Bond",
    "start": "975880",
    "end": "982199"
  },
  {
    "text": "transactions um you know stock transactions and and a few others so I",
    "start": "982199",
    "end": "987880"
  },
  {
    "text": "want to limit limit this only two this sort of transactions the problem is as a",
    "start": "987880",
    "end": "994160"
  },
  {
    "text": "earlier before okay sorry",
    "start": "994160",
    "end": "999399"
  },
  {
    "text": "um so okay so it's it's a basically a uh record which implements the interface",
    "start": "999399",
    "end": "1007360"
  },
  {
    "text": "I'm talking which is uh Financial um financial transaction record can",
    "start": "1007360",
    "end": "1012800"
  },
  {
    "text": "Implement inad interface as well it's like traditional class it just shorter",
    "start": "1012800",
    "end": "1018440"
  },
  {
    "text": "but there's certain distinction between traditional class for example in uh record all um uh you know methods are",
    "start": "1018440",
    "end": "1026720"
  },
  {
    "text": "basically u a accessor type you cannot modify because by default they are all",
    "start": "1026720",
    "end": "1032438"
  },
  {
    "text": "um final class anyway so now as a as a uh you",
    "start": "1032439",
    "end": "1039079"
  },
  {
    "text": "know user of that Library I might be able to implement that interface and",
    "start": "1039079",
    "end": "1044839"
  },
  {
    "text": "pass something to that method right I mean it's open inheritance there's near there",
    "start": "1044839",
    "end": "1051320"
  },
  {
    "text": "is no way to restrict that so until um you know earlier Java version um I think",
    "start": "1051320",
    "end": "1057720"
  },
  {
    "text": "until 16 it was like that but uh late after 16 or 17 I I I don't know exactly",
    "start": "1057720",
    "end": "1063880"
  },
  {
    "text": "which version but probably after six 16 or 17 they introduce A New Concept",
    "start": "1063880",
    "end": "1069679"
  },
  {
    "text": "called seal type so basically what it does is over here this interface I can um",
    "start": "1069679",
    "end": "1078880"
  },
  {
    "text": "defined as a silt interface uh it can be interface it can be class doesn't really",
    "start": "1078880",
    "end": "1084320"
  },
  {
    "text": "matter um and and then I can allow some some sort of",
    "start": "1084320",
    "end": "1089640"
  },
  {
    "text": "permits so let's say I have three uh you know implementation that I want to share",
    "start": "1089640",
    "end": "1095640"
  },
  {
    "text": "as a library developer um I can write permit for example all",
    "start": "1095640",
    "end": "1102559"
  },
  {
    "text": "these three um stock transaction Bond transaction crypto transactions now",
    "start": "1102559",
    "end": "1108840"
  },
  {
    "text": "let's say I have a new um you know I'll increase the font don't",
    "start": "1108840",
    "end": "1117919"
  },
  {
    "text": "worry let's say I have a new you know type over here it's basically doic",
    "start": "1122039",
    "end": "1128080"
  },
  {
    "text": "transaction and it doesn't um the permit doesn't include this so if I now uh you",
    "start": "1128080",
    "end": "1134840"
  },
  {
    "text": "know try to implement it says you cannot do that uh what it says is doic co transaction",
    "start": "1134840",
    "end": "1142919"
  },
  {
    "text": "is not allowed in this SE hierarchy so it's a closed inheritance you are not able to do that and if you try it it",
    "start": "1142919",
    "end": "1150120"
  },
  {
    "text": "will fail immediately in the compile time so that's the um you know that's the kind of things we have now and it's",
    "start": "1150120",
    "end": "1157640"
  },
  {
    "text": "super useful personally for example in Java we have a string class right in",
    "start": "1157640",
    "end": "1163000"
  },
  {
    "text": "string class we have a um you know everything of any sort of a string type",
    "start": "1163000",
    "end": "1168240"
  },
  {
    "text": "is com back into one class it's a final class we cannot inhad them because of security it is not allowed uh but",
    "start": "1168240",
    "end": "1175400"
  },
  {
    "text": "everything in inside the one string class right what if we had this you know",
    "start": "1175400",
    "end": "1181080"
  },
  {
    "text": "closed in I mean hierarchy which is S type then we could have a few type of",
    "start": "1181080",
    "end": "1186720"
  },
  {
    "text": "string it could be uf8 it could be UF 16 and different set of implementation but",
    "start": "1186720",
    "end": "1191760"
  },
  {
    "text": "again as a developer I am not allowed to sort of um you know do experiment with",
    "start": "1191760",
    "end": "1197799"
  },
  {
    "text": "it but at the same time I can use them right so that's a new new uh new new",
    "start": "1197799",
    "end": "1203080"
  },
  {
    "text": "stuff and I personally liked it as if you want if you want to develop a library it's super useful for",
    "start": "1203080",
    "end": "1210600"
  },
  {
    "text": "you all right moving",
    "start": "1210600",
    "end": "1214280"
  },
  {
    "text": "on okay um so I'm going to go a bit quick now because I already spent quite",
    "start": "1218200",
    "end": "1223720"
  },
  {
    "text": "some time on a first two things but there are a few more stuff there so yeah",
    "start": "1223720",
    "end": "1230480"
  },
  {
    "text": "I mean it's an example basically what I have showed you um I can uh basic basically show you over here",
    "start": "1230480",
    "end": "1238679"
  },
  {
    "text": "um there's a class over here is a class hierarchy that I defined over here um so",
    "start": "1238679",
    "end": "1246240"
  },
  {
    "text": "basically it's a I wanted to make expression evaluator um so over here I",
    "start": "1246240",
    "end": "1251559"
  },
  {
    "text": "have interface right expression and it has certain permits and I have a few",
    "start": "1251559",
    "end": "1257159"
  },
  {
    "text": "implementations basically um and that's it it doesn't have any any",
    "start": "1257159",
    "end": "1262360"
  },
  {
    "text": "all of those things so it's it's super compact it's the same thing I just put in one place so that you can see in a",
    "start": "1262360",
    "end": "1268520"
  },
  {
    "text": "one go um you can obviously once um for",
    "start": "1268520",
    "end": "1275600"
  },
  {
    "text": "example this constant expression right it's a final class over here um and it",
    "start": "1275600",
    "end": "1281799"
  },
  {
    "text": "implements the interface expression but later let's say if you want to write",
    "start": "1281799",
    "end": "1287600"
  },
  {
    "text": "another class that would extend constant expression and you don't you don't want to make it a final you can use a",
    "start": "1287600",
    "end": "1293799"
  },
  {
    "text": "non-sealed uh keyword for example let's say class X extend constant",
    "start": "1293799",
    "end": "1302640"
  },
  {
    "text": "expression um so you can make it a non-sealed",
    "start": "1302640",
    "end": "1309600"
  },
  {
    "text": "something like that uh probably um let's see",
    "start": "1309600",
    "end": "1318440"
  },
  {
    "text": "okay so I made it final that's why it's",
    "start": "1320200",
    "end": "1324240"
  },
  {
    "text": "complaining okay so if I make something if I make that that one is non seal then",
    "start": "1328000",
    "end": "1335320"
  },
  {
    "text": "I can basically extend it so that's the idea so there is two type of Hier some",
    "start": "1335320",
    "end": "1341240"
  },
  {
    "text": "of them you can make it seal some of them can make it non seal so that's the idea all right uh moving on",
    "start": "1341240",
    "end": "1350120"
  },
  {
    "text": "so from that two things which is uh basically closed closed hierarchy and",
    "start": "1351799",
    "end": "1356840"
  },
  {
    "text": "record There's A New Concept emerging called Data oriented programming so we we heard of functional programming",
    "start": "1356840",
    "end": "1363200"
  },
  {
    "text": "objectoriented programming they have their own cases but there's a new uh type of uh you know programming Paradigm",
    "start": "1363200",
    "end": "1370720"
  },
  {
    "text": "is emerging which is called Data ored PR programming the idea is it will model your data imita and transparently",
    "start": "1370720",
    "end": "1378200"
  },
  {
    "text": "basically the idea is it will travel data from one place to one another and just data whole data nothing else so",
    "start": "1378200",
    "end": "1385480"
  },
  {
    "text": "there is a New Concept it's still emerging and if you if you you know Google it you will find some of some",
    "start": "1385480",
    "end": "1390919"
  },
  {
    "text": "articles it's not fully uh you know sort of uh immerged it's emerging idea",
    "start": "1390919",
    "end": "1398320"
  },
  {
    "text": "basically emerging Paradigm people are using people are sharing ideas based on these two things which is basically",
    "start": "1398320",
    "end": "1404360"
  },
  {
    "text": "records and seal types and there's another concept I'm going to share in a minute which is called pattern matching",
    "start": "1404360",
    "end": "1411559"
  },
  {
    "text": "that's super useful um now that we have defined data and they're imitable transparent they sealed closed",
    "start": "1411559",
    "end": "1418720"
  },
  {
    "text": "hierarchy how do I you know do operation on it so that's why pattern missing",
    "start": "1418720",
    "end": "1424919"
  },
  {
    "text": "comes right so I'm going to show you pattern missing",
    "start": "1424919",
    "end": "1429360"
  },
  {
    "text": "now um so in ja a pattern matching comes gradually it started with the um smaller",
    "start": "1436279",
    "end": "1443200"
  },
  {
    "text": "stuff for example um it started with something like that I mean have you seen",
    "start": "1443200",
    "end": "1448480"
  },
  {
    "text": "this pattern in some many languages let's say if x instance of a string then",
    "start": "1448480",
    "end": "1454880"
  },
  {
    "text": "you can safely cast it and then use it right X can be any type of object uh I",
    "start": "1454880",
    "end": "1461440"
  },
  {
    "text": "mean we know it's an string but why do I have to cast it again it's another you",
    "start": "1461440",
    "end": "1467159"
  },
  {
    "text": "know ceremonial stuff so with the with this pattern missing uh we can do",
    "start": "1467159",
    "end": "1473880"
  },
  {
    "text": "something like that we don't have to basically cast it you can just Define a variable at the right side um and you",
    "start": "1473880",
    "end": "1481360"
  },
  {
    "text": "can use it basically so that's a first state of you know pattern pring came into Java and gradually on top of it we",
    "start": "1481360",
    "end": "1488279"
  },
  {
    "text": "have built much uh interesting stuff which is I'm going to show you in a",
    "start": "1488279",
    "end": "1494480"
  },
  {
    "text": "minute so for example you can do um much more interesting stuff for example if x",
    "start": "1494480",
    "end": "1500720"
  },
  {
    "text": "is instance of string and it has length uh more than three you can write in one",
    "start": "1500720",
    "end": "1506440"
  },
  {
    "text": "expression I'll do something else I'll do something else basically",
    "start": "1506440",
    "end": "1512520"
  },
  {
    "text": "so um yeah we can do case statement as well case",
    "start": "1512520",
    "end": "1518360"
  },
  {
    "text": "expression if x is string and then when string is greater than three I'll do",
    "start": "1518360",
    "end": "1524760"
  },
  {
    "text": "something else I mean we can write a many cas statement as we want and there",
    "start": "1524760",
    "end": "1530840"
  },
  {
    "text": "obviously there will be a default um U case as well uh because um this with",
    "start": "1530840",
    "end": "1537360"
  },
  {
    "text": "this pattern we cannot make sure it's an exhaustive um so we can keep writing uh",
    "start": "1537360",
    "end": "1542679"
  },
  {
    "text": "things like that so that's a glimpse of pattern matching on top of that we have",
    "start": "1542679",
    "end": "1548520"
  },
  {
    "text": "a various way of uh expressing this for example let's say it's an object value",
    "start": "1548520",
    "end": "1554200"
  },
  {
    "text": "came from somewhere and then we want to you know see if it's a null then",
    "start": "1554200",
    "end": "1560120"
  },
  {
    "text": "obviously this is adding and null is added later because people are",
    "start": "1560120",
    "end": "1565640"
  },
  {
    "text": "complaining we still um sort of uh you know deal with this null",
    "start": "1565640",
    "end": "1572360"
  },
  {
    "text": "pointer Express and null pointer exceptions uh I mean in C it's called null reference exceptions some other",
    "start": "1572360",
    "end": "1578720"
  },
  {
    "text": "programing language I think pretty much all object oriented programming has this issue some programming language basic",
    "start": "1578720",
    "end": "1584880"
  },
  {
    "text": "solved it but Java hasn't yet uh so we have to deal with that and now you can um pretty much uh do a",
    "start": "1584880",
    "end": "1592960"
  },
  {
    "text": "lot of interesting things so over here you can see I written a thing called s",
    "start": "1592960",
    "end": "1598039"
  },
  {
    "text": "Str this this is a preview feature of string template it's not available to",
    "start": "1598039",
    "end": "1604000"
  },
  {
    "text": "Java yet so zva is working to incorporate sting template as well uh",
    "start": "1604000",
    "end": "1609480"
  },
  {
    "text": "it's some sort of Sting interpolation uh but M much better in a",
    "start": "1609480",
    "end": "1615760"
  },
  {
    "text": "way in terms of security for example when we know string interpretation is the source where we can do all sort of",
    "start": "1615760",
    "end": "1621799"
  },
  {
    "text": "SQL injection right um in some other program language it's not safe but we it",
    "start": "1621799",
    "end": "1627720"
  },
  {
    "text": "much easier and interesting uh but Java is trying to avoid that so they are",
    "start": "1627720",
    "end": "1633360"
  },
  {
    "text": "trying to work in a better way so that this integrity and security are are better but they're trying it's not",
    "start": "1633360",
    "end": "1639640"
  },
  {
    "text": "available yet I uh I added this code when I was experimenting but the idea is",
    "start": "1639640",
    "end": "1645880"
  },
  {
    "text": "let's focus on the cas pattern missing so we can sort of you know um do all all types of uh checking",
    "start": "1645880",
    "end": "1654240"
  },
  {
    "text": "over here for example like if if it it's a specific type we'll do certain things",
    "start": "1654240",
    "end": "1659640"
  },
  {
    "text": "and as you can see over here in the LA uh last before last one last case if it",
    "start": "1659640",
    "end": "1667320"
  },
  {
    "text": "is even a um WRA inside another class we can also you know match",
    "start": "1667320",
    "end": "1674200"
  },
  {
    "text": "that for example in the in the bottom we have a class called rapper which is generic",
    "start": "1674200",
    "end": "1681080"
  },
  {
    "text": "but uh the object we are passing it could be rapper of a string or rapper of",
    "start": "1681080",
    "end": "1686120"
  },
  {
    "text": "something I don't know but something and we pass it over here you can see we",
    "start": "1686120",
    "end": "1691320"
  },
  {
    "text": "defined VAR uh so the local type inference is also here available",
    "start": "1691320",
    "end": "1697640"
  },
  {
    "text": "basically uh have you heard of local type inference um like the qord",
    "start": "1697640",
    "end": "1704480"
  },
  {
    "text": "ver so Java has a that basically inside a method meod if you have some variables",
    "start": "1704480",
    "end": "1710600"
  },
  {
    "text": "you can instead of typing all of them all the type you can just write VAR and then you can Define your um stuff so",
    "start": "1710600",
    "end": "1718399"
  },
  {
    "text": "that's another interesting feature I'm I'm not sure uh why some people are not",
    "start": "1718399",
    "end": "1723840"
  },
  {
    "text": "fan of VAR but some people are I'm one of them so I like uh using VAR but some",
    "start": "1723840",
    "end": "1731159"
  },
  {
    "text": "people doesn't anyway so moving on um yeah um so so now let's say we",
    "start": "1731159",
    "end": "1739360"
  },
  {
    "text": "have something called we can combine this two we learned records we learned",
    "start": "1739360",
    "end": "1746000"
  },
  {
    "text": "um you know seal class and we can combine all of those things and write uh",
    "start": "1746000",
    "end": "1751080"
  },
  {
    "text": "use them in a pattern matching for example as you can see we have interface called option and it permits only two uh",
    "start": "1751080",
    "end": "1759039"
  },
  {
    "text": "re class I mean two types which is some and none and that's it nothing else and",
    "start": "1759039",
    "end": "1764919"
  },
  {
    "text": "if I want to you know you want to sort of get extra value from it we can use",
    "start": "1764919",
    "end": "1770519"
  },
  {
    "text": "this kind of pattern matching um as you can see we have only two cases over here nothing else uh because it's already",
    "start": "1770519",
    "end": "1777120"
  },
  {
    "text": "exhaustive from the uh you know hierarchy we know that um you know the",
    "start": "1777120",
    "end": "1782679"
  },
  {
    "text": "option can have only two types right some and none there's no other",
    "start": "1782679",
    "end": "1788039"
  },
  {
    "text": "possibility so in this uh pattern match in pattern matching we can we can just",
    "start": "1788039",
    "end": "1793519"
  },
  {
    "text": "write two two cases that's all and as you can you can even the",
    "start": "1793519",
    "end": "1799240"
  },
  {
    "text": "evaluate the value and return it from a method so previously uh swis did didn't",
    "start": "1799240",
    "end": "1806320"
  },
  {
    "text": "uh didn't support uh as a uh you couldn't write them as a expression now",
    "start": "1806320",
    "end": "1811519"
  },
  {
    "text": "you can and you can uh you know return it from a method or you can put in a",
    "start": "1811519",
    "end": "1817480"
  },
  {
    "text": "variable as well so yeah and the one interesting thing you have seen over",
    "start": "1817480",
    "end": "1823080"
  },
  {
    "text": "here in the case first case um you see I I have used the underscore",
    "start": "1823080",
    "end": "1829159"
  },
  {
    "text": "have you noticed um basically if it is a none we don't have anything right we don't have to",
    "start": "1829159",
    "end": "1835600"
  },
  {
    "text": "operate any value so we can just use unnamed variable we don't need it so we",
    "start": "1835600",
    "end": "1841039"
  },
  {
    "text": "will just replace with the underscore so that's a uh",
    "start": "1841039",
    "end": "1846600"
  },
  {
    "text": "conciseness and and then in the in the later over here we we used uh something",
    "start": "1846600",
    "end": "1852919"
  },
  {
    "text": "called record deconstruction so uh as you can see some",
    "start": "1852919",
    "end": "1859039"
  },
  {
    "text": "um inside the uh bracket we have used the ver value so we can directly use the",
    "start": "1859039",
    "end": "1866000"
  },
  {
    "text": "value from here we don't have to define the uh first of all you know the the",
    "start": "1866000",
    "end": "1871559"
  },
  {
    "text": "type and then a a variable from that variable we don't have to you know",
    "start": "1871559",
    "end": "1876639"
  },
  {
    "text": "access the value from that right we can directly use that value from here it's called record deconstruction and",
    "start": "1876639",
    "end": "1883200"
  },
  {
    "text": "deconstruction is also available in this pattern missing expression so so these are the some of the new",
    "start": "1883200",
    "end": "1890720"
  },
  {
    "text": "stuff maybe I can give you one minutes to process",
    "start": "1890720",
    "end": "1896320"
  },
  {
    "text": "this um all right uh moving on I have a few more stuff to show so",
    "start": "1911639",
    "end": "1918279"
  },
  {
    "text": "the idea is um you know we we combined all of this right so there's a thing called Al algebric data type you know we",
    "start": "1918279",
    "end": "1926840"
  },
  {
    "text": "can combine all of those things for example over here uh I know it's it's a little small to see but I can basically",
    "start": "1926840",
    "end": "1934679"
  },
  {
    "text": "read uh so in the earlier slides uh you I showed you a expression evaluator",
    "start": "1934679",
    "end": "1940960"
  },
  {
    "text": "right so I have basically wrote that expression evaluator over here so now this is basically a 19 lines of code but",
    "start": "1940960",
    "end": "1949320"
  },
  {
    "text": "if you do it traditionally previously without using uh this pattern matching",
    "start": "1949320",
    "end": "1955039"
  },
  {
    "text": "and uh you know seal class records it would take around 60 line of codes so",
    "start": "1955039",
    "end": "1961639"
  },
  {
    "text": "compare 60 line and 19 line it's much more concise much I mean you can't tell",
    "start": "1961639",
    "end": "1969159"
  },
  {
    "text": "this is ver varos right I mean if it was 60 line you could say that you could argue that this is a verbus programming",
    "start": "1969159",
    "end": "1974799"
  },
  {
    "text": "language now you should not I mean what's your opinion what do you think did we dispel the myth did you",
    "start": "1974799",
    "end": "1982760"
  },
  {
    "text": "dispel The Stereotype all right so there are so",
    "start": "1982760",
    "end": "1989120"
  },
  {
    "text": "many other features going on this is called project Ember so many features and many of them are basically already",
    "start": "1989120",
    "end": "1996279"
  },
  {
    "text": "um you know shipped and many of them are in a prev state so pre there is a",
    "start": "1996279",
    "end": "2001799"
  },
  {
    "text": "concept in Java called preview State because nowadays Java is released every six month so they are working on a",
    "start": "2001799",
    "end": "2008279"
  },
  {
    "text": "a feature and it's ready but not yet fully ready to release to so they will",
    "start": "2008279",
    "end": "2013639"
  },
  {
    "text": "ship it under a thing called preview so as a developer you can experiment it",
    "start": "2013639",
    "end": "2019000"
  },
  {
    "text": "perhaps use it but you have to use a additional flag so so basically this is a warning mechanism this is not shift",
    "start": "2019000",
    "end": "2025799"
  },
  {
    "text": "fully but it's available you can use it experiment it and provide feedback so some of the feature are under preview",
    "start": "2025799",
    "end": "2032679"
  },
  {
    "text": "and some of them are already shipped so as you can see list is uh",
    "start": "2032679",
    "end": "2037880"
  },
  {
    "text": "really long a lot of interesting things are happening um yeah so the the for",
    "start": "2037880",
    "end": "2045399"
  },
  {
    "text": "example um there is a thing called module import declaration in in in Java",
    "start": "2045399",
    "end": "2050440"
  },
  {
    "text": "source code you will see we have to define a lot of import statement",
    "start": "2050440",
    "end": "2055679"
  },
  {
    "text": "right uh and the it if the class file is longer then import statement is is also",
    "start": "2055679",
    "end": "2061760"
  },
  {
    "text": "longer I mean for example if you open it you will see import statement only and then you have to scroll down so the",
    "start": "2061760",
    "end": "2068200"
  },
  {
    "text": "module input declaration is it's still under preview so the idea is if you you",
    "start": "2068200",
    "end": "2073520"
  },
  {
    "text": "know you know Java is now is a modular uh they have a they have separated all the modules into uh",
    "start": "2073520",
    "end": "2081320"
  },
  {
    "text": "um so they separate Cod into different modu basically um so let's say you have a a imported SQL module and you can just",
    "start": "2081320",
    "end": "2090158"
  },
  {
    "text": "declare SQL mod import module SQL and all the things are imported",
    "start": "2090159",
    "end": "2095960"
  },
  {
    "text": "automatically so you don't have to write like 10 statement 10 UT statement that's something are coming uh uh but if you",
    "start": "2095960",
    "end": "2103040"
  },
  {
    "text": "want to experiment you can definitely do that uh so moving",
    "start": "2103040",
    "end": "2108880"
  },
  {
    "text": "on uh like I I showed you earlier there is a thing called unnamed uh variable so",
    "start": "2108880",
    "end": "2115320"
  },
  {
    "text": "it's it's a complex hierarchy right we have a seal interface called interaction it permits comments like share and if we",
    "start": "2115320",
    "end": "2122480"
  },
  {
    "text": "have a let's say um method called process inter",
    "start": "2122480",
    "end": "2128640"
  },
  {
    "text": "and we have a pattern Ming oper here maybe we are not interested all of them right some of them we are interested in",
    "start": "2128640",
    "end": "2134599"
  },
  {
    "text": "for example the second case in the comment we are interested in only the content not the two",
    "start": "2134599",
    "end": "2141280"
  },
  {
    "text": "other so you can just put underscore that will you know make your uh code",
    "start": "2141280",
    "end": "2147480"
  },
  {
    "text": "smaller you can read in by one go so that's that's uh called um you",
    "start": "2147480",
    "end": "2154800"
  },
  {
    "text": "know uh unnamed uh variable but I feel like it's much concise now so you can",
    "start": "2154800",
    "end": "2161599"
  },
  {
    "text": "use them in many many places all right this is a small feature",
    "start": "2161599",
    "end": "2168839"
  },
  {
    "text": "I would I wouldn't say this is a enhancement rather than it was a some sort of inconvenience they fixed it and",
    "start": "2168839",
    "end": "2176280"
  },
  {
    "text": "personally I I likeed a lot um but still",
    "start": "2176280",
    "end": "2181760"
  },
  {
    "text": "let me show you what it is so let's say we have a class called Big integer in Java and you want to extend it right and",
    "start": "2181760",
    "end": "2191599"
  },
  {
    "text": "you want to write a positive big integer but the requirement was you have to call this super right before the first line",
    "start": "2191599",
    "end": "2198880"
  },
  {
    "text": "of the Constructor it's a some sort of inconvenience you have to do it it's it's a it's a",
    "start": "2198880",
    "end": "2204640"
  },
  {
    "text": "restriction was uh put in place um so now that let's say super will do some",
    "start": "2204640",
    "end": "2211599"
  },
  {
    "text": "work right in the previous Constructor I mean superclass Constructor it has a lot of work so they will do a lot of work",
    "start": "2211599",
    "end": "2218359"
  },
  {
    "text": "already and then later you are doing if it's not positive then thr",
    "start": "2218359",
    "end": "2224119"
  },
  {
    "text": "exceptions so all of your work basically gone wte uh so they fixed it it's it's",
    "start": "2224119",
    "end": "2230680"
  },
  {
    "text": "it's a convenience now um so you can do call Super later basically so you do Al",
    "start": "2230680",
    "end": "2237200"
  },
  {
    "text": "all your validation before and then you can call Super it's a uh it was inconvenience I feel like it's a it's a",
    "start": "2237200",
    "end": "2243520"
  },
  {
    "text": "fix small feature but personally I like a",
    "start": "2243520",
    "end": "2249800"
  },
  {
    "text": "lot uh if you overwrite a",
    "start": "2252079",
    "end": "2256400"
  },
  {
    "text": "Constructor um sorry I probably in",
    "start": "2261240",
    "end": "2266480"
  },
  {
    "text": "Constructor probably not yeah con you so basically if you",
    "start": "2266480",
    "end": "2272560"
  },
  {
    "text": "have a Constructor in the super class that take uh that takes argument if you ask and I mean I mean if that",
    "start": "2272560",
    "end": "2279480"
  },
  {
    "text": "Constructor do certain Works based on the arguments you provide while you are uh you know instantiating the object",
    "start": "2279480",
    "end": "2286240"
  },
  {
    "text": "it's a sort of requirement you have",
    "start": "2286240",
    "end": "2289520"
  },
  {
    "text": "to okay all right um so let's moving",
    "start": "2293560",
    "end": "2300839"
  },
  {
    "text": "on um I'll I'll I'll go basically swiftly now on because these are",
    "start": "2300839",
    "end": "2306200"
  },
  {
    "text": "basically features that AV you can use uh if you want to so this is",
    "start": "2306200",
    "end": "2311359"
  },
  {
    "text": "called Vector API uh the idea is modern computer Modern Hardware basically support something called s IMD basically",
    "start": "2311359",
    "end": "2318960"
  },
  {
    "text": "single instruction multiple data so um you know let's say you have a for Loop right you want to do some processing so",
    "start": "2318960",
    "end": "2326520"
  },
  {
    "text": "you can do a scalar operation like let's say multiplication addition you can do",
    "start": "2326520",
    "end": "2332280"
  },
  {
    "text": "at a two data at a time right usually that's how we do uh but some hard",
    "start": "2332280",
    "end": "2337440"
  },
  {
    "text": "Hardware Modern Hardware support one single instruction but support multiple data for example you can do mul",
    "start": "2337440",
    "end": "2343640"
  },
  {
    "text": "multiplication of eight data at once so B if you have a like single data uh I",
    "start": "2343640",
    "end": "2350160"
  },
  {
    "text": "mean s there is a two two type operation right single operation and Vector operation let's say Vector operation",
    "start": "2350160",
    "end": "2355680"
  },
  {
    "text": "takes multiple data so you can go eight times faster in in some processing so",
    "start": "2355680",
    "end": "2360800"
  },
  {
    "text": "that's available this is called Vector API and you can take some some advantage of it of those so there's here's a some",
    "start": "2360800",
    "end": "2367920"
  },
  {
    "text": "code for example this is a scalar operation I mean you want to uh let's say addition using a loop and basically",
    "start": "2367920",
    "end": "2377040"
  },
  {
    "text": "you have a two array and you can you know put the value into another array right um this is scalar operation but if",
    "start": "2377040",
    "end": "2384000"
  },
  {
    "text": "your Hardware basically support the S IMD you can go uh this it's a bit",
    "start": "2384000",
    "end": "2390560"
  },
  {
    "text": "involved but you can go faster this way you although you have to write a lot",
    "start": "2390560",
    "end": "2396960"
  },
  {
    "text": "but if can you know achieve result faster so in this way we can go like",
    "start": "2396960",
    "end": "2403160"
  },
  {
    "text": "eight time faster so that's available uh you can search Factor",
    "start": "2403160",
    "end": "2410599"
  },
  {
    "text": "API um all right um should I move or you want to",
    "start": "2417560",
    "end": "2425880"
  },
  {
    "text": "so basically there's some apis uh defined um so basically it's it's uh",
    "start": "2430920",
    "end": "2436839"
  },
  {
    "text": "based on that you can see how many operation at a time you can do on that",
    "start": "2436839",
    "end": "2442560"
  },
  {
    "text": "particular Hardware yeah um so moving on uh there is another",
    "start": "2442560",
    "end": "2451119"
  },
  {
    "text": "thing called foreign factured memory API that's super useful do you know why python is so much popular nowadays",
    "start": "2451119",
    "end": "2459240"
  },
  {
    "text": "because all the data science delated work are done on Python and their massive libraries are available uh",
    "start": "2459400",
    "end": "2467359"
  },
  {
    "text": "written in C and C++ right and python sort of you know use them directly from",
    "start": "2467359",
    "end": "2473839"
  },
  {
    "text": "from the from you know easily basically they have interoperability they can call a c function C++ function easily and",
    "start": "2473839",
    "end": "2480640"
  },
  {
    "text": "Java has this through jni but jni was uh it was a nightmare basically uh as a",
    "start": "2480640",
    "end": "2487920"
  },
  {
    "text": "developer I don't recommend using jni so there are uh you know massive amount of",
    "start": "2487920",
    "end": "2493680"
  },
  {
    "text": "uh libraries written in those language those native language cc++ and we are not we are not taking advantage of those",
    "start": "2493680",
    "end": "2500240"
  },
  {
    "text": "things I mean there was a way g i but I I I can show you how difficult it is um",
    "start": "2500240",
    "end": "2506040"
  },
  {
    "text": "so let's say",
    "start": "2506040",
    "end": "2511960"
  },
  {
    "text": "um over here",
    "start": "2512480",
    "end": "2517000"
  },
  {
    "text": "I want to do a quick s using the native Library I mean it's written it's available probably in the uh in in in",
    "start": "2517760",
    "end": "2523800"
  },
  {
    "text": "this one of the library sections so let's say this is a class um you know I want to loot a library and then do some",
    "start": "2523800",
    "end": "2531480"
  },
  {
    "text": "native operations using uh jni uh so I have to do a multiple stepes",
    "start": "2531480",
    "end": "2538280"
  },
  {
    "text": "basically um I I don't know if you can see it but I can explain so basically you have to first compile the class and",
    "start": "2538280",
    "end": "2545440"
  },
  {
    "text": "then you have to generate a header and then using another you know compilation you have to compile the",
    "start": "2545440",
    "end": "2551520"
  },
  {
    "text": "native library and then you can load this basically you have to go through multiple step and something changed in",
    "start": "2551520",
    "end": "2558359"
  },
  {
    "text": "the library or in your code you have to do the whole processing again whole things again it's a super buggy tricky",
    "start": "2558359",
    "end": "2564760"
  },
  {
    "text": "and and and place for memory crash on all all sort of things so with the",
    "start": "2564760",
    "end": "2570119"
  },
  {
    "text": "foreign memory and um function you don't have to do all those",
    "start": "2570119",
    "end": "2576640"
  },
  {
    "text": "exercise basically um um I can show you the code",
    "start": "2576640",
    "end": "2581839"
  },
  {
    "text": "uh it's all all it's difficult I know but I'll share the slide with all with",
    "start": "2581839",
    "end": "2589079"
  },
  {
    "text": "all of you so the idea is uh you don't have to go through anywhere there a",
    "start": "2589079",
    "end": "2595359"
  },
  {
    "text": "there are few API available for example all these API now available all are written in Java and you can just use",
    "start": "2595359",
    "end": "2601960"
  },
  {
    "text": "them from your comfort um so bottom line of all of this",
    "start": "2601960",
    "end": "2607160"
  },
  {
    "text": "is basically with this foreign um memory foreign function memory you can access",
    "start": "2607160",
    "end": "2612640"
  },
  {
    "text": "native Library you can allocate memory outside of your hip and you can sort of",
    "start": "2612640",
    "end": "2617880"
  },
  {
    "text": "allocate a huge chunk of hip and all of them are controlled from your Java so",
    "start": "2617880",
    "end": "2623480"
  },
  {
    "text": "basically you don't have to you know jump hoop um so that's",
    "start": "2623480",
    "end": "2629680"
  },
  {
    "text": "the you know facility so so now if you are a data scientist or I mean if you're",
    "start": "2629680",
    "end": "2634839"
  },
  {
    "text": "a developer of let's say data scientist related library or you know machine",
    "start": "2634839",
    "end": "2640119"
  },
  {
    "text": "learning AI all those things you can take advantage of those native Library available and you can write a wrapper",
    "start": "2640119",
    "end": "2646680"
  },
  {
    "text": "around it on Java and ship it and people will love love",
    "start": "2646680",
    "end": "2652160"
  },
  {
    "text": "it all right um so I'm not going to spend a lot of time on over here it's I'll share with you uh but the most",
    "start": "2652160",
    "end": "2660119"
  },
  {
    "text": "fascinating stuff in the whole uh recent Java advancement which is called virtual",
    "start": "2660119",
    "end": "2666040"
  },
  {
    "text": "threats uh so Java has a um you know conren from",
    "start": "2666040",
    "end": "2672520"
  },
  {
    "text": "day one the problem with but the the use of the need of concurrence evolved like",
    "start": "2672520",
    "end": "2678599"
  },
  {
    "text": "1995 to 2024 a lot right um so we have a more concr stuff going on on",
    "start": "2678599",
    "end": "2685559"
  },
  {
    "text": "applications but in Java the the threading model was some sort of like",
    "start": "2685559",
    "end": "2691480"
  },
  {
    "text": "one to one mapping with the operating system threats and operating system threat is a limitation uh it based on",
    "start": "2691480",
    "end": "2697640"
  },
  {
    "text": "Hardware based on operating system it's around let's say 2,000 4,000 10,000",
    "start": "2697640",
    "end": "2703760"
  },
  {
    "text": "right but the problem with those limitation um even though if you are",
    "start": "2703760",
    "end": "2711040"
  },
  {
    "text": "want to use all of them if you use employ all of them there will be a contact switching overhead right and",
    "start": "2711040",
    "end": "2717760"
  },
  {
    "text": "they all take like a big chunk of memory so if you add too much St there's a",
    "start": "2717760",
    "end": "2723960"
  },
  {
    "text": "potentially your application will you know slow down gradually but if you use less then less congruency going on so",
    "start": "2723960",
    "end": "2731079"
  },
  {
    "text": "they have solved a new idea solved it with a new idea called virtual threats it's a it's more of a user defined",
    "start": "2731079",
    "end": "2737200"
  },
  {
    "text": "thread user mode thread so uh the idea is there will be an uh operating system",
    "start": "2737200",
    "end": "2743599"
  },
  {
    "text": "thread and on top of that there will be a uh you know we call flatform thread or",
    "start": "2743599",
    "end": "2748680"
  },
  {
    "text": "traditional thread there will be one one mapping with them but all with platform set there will be a virtual set and the",
    "start": "2748680",
    "end": "2756240"
  },
  {
    "text": "relationship is many to one basically um so one uh potentially you",
    "start": "2756240",
    "end": "2762640"
  },
  {
    "text": "can create a millions of virtual threats with this uh new things so I have a",
    "start": "2762640",
    "end": "2767880"
  },
  {
    "text": "short demo for you um that will give you an idea what we can",
    "start": "2767880",
    "end": "2773319"
  },
  {
    "text": "achieve so let's say um okay I have to",
    "start": "2773319",
    "end": "2778920"
  },
  {
    "text": "go back from here um so look at this code um basically",
    "start": "2778920",
    "end": "2784599"
  },
  {
    "text": "it's it's a a simple web application web server it doesn't do a lot of things it's just open a server socket and",
    "start": "2784599",
    "end": "2791240"
  },
  {
    "text": "listen if any client join in um so if anything sent from the client let's say",
    "start": "2791240",
    "end": "2797760"
  },
  {
    "text": "any text it will just you know upper and desend back to the clients so that's only thing it can it can",
    "start": "2797760",
    "end": "2804520"
  },
  {
    "text": "do um so let's run it and I have a terminal over here so",
    "start": "2804520",
    "end": "2810800"
  },
  {
    "text": "I'm going to do taet um I'm not sure if you can see it but I will try to",
    "start": "2810800",
    "end": "2816160"
  },
  {
    "text": "increase the font",
    "start": "2816160",
    "end": "2818838"
  },
  {
    "text": "um so over here it's connected with the port 888 and if I send hello it just",
    "start": "2826680",
    "end": "2833680"
  },
  {
    "text": "send back it's just ping pong ping back the um hello in the uppercase but the",
    "start": "2833680",
    "end": "2839559"
  },
  {
    "text": "problem is I'm only connected with this server with one terminal and if I go to another",
    "start": "2839559",
    "end": "2845040"
  },
  {
    "text": "terminal and try the same thing and if I send it doesn't return",
    "start": "2845040",
    "end": "2851720"
  },
  {
    "text": "anything because the the server application is single threaded inherently one thread is doing connected",
    "start": "2851720",
    "end": "2858000"
  },
  {
    "text": "with the another client and unless we close that it will not respond so that's",
    "start": "2858000",
    "end": "2863160"
  },
  {
    "text": "a difficulties with single threaded application so we can solve this problem simply by creating a",
    "start": "2863160",
    "end": "2871000"
  },
  {
    "text": "thread whenever a new client basically uh joins so so there is a way of doing",
    "start": "2871000",
    "end": "2879400"
  },
  {
    "text": "that thread of platform.",
    "start": "2879400",
    "end": "2886960"
  },
  {
    "text": "start okay so writing this one line we",
    "start": "2887800",
    "end": "2893160"
  },
  {
    "text": "are making it multi-threaded programming so let me um run it",
    "start": "2893160",
    "end": "2898839"
  },
  {
    "text": "again now if I connect as you can see it",
    "start": "2898839",
    "end": "2905040"
  },
  {
    "text": "returned sorry if I try it it will it will",
    "start": "2905040",
    "end": "2912480"
  },
  {
    "text": "definitely send back right so two multiple client can work at the same times now let's say we need a huge",
    "start": "2912480",
    "end": "2920720"
  },
  {
    "text": "amount of concurrency what if 10,000 clients uh you know sort of you know try to connect to this",
    "start": "2920720",
    "end": "2927640"
  },
  {
    "text": "server what would happen so over here I'm I'm basically I wrote a in simulation it's called DS",
    "start": "2927640",
    "end": "2934000"
  },
  {
    "text": "attack I'm sending 10,000 request at a once with to that particular",
    "start": "2934000",
    "end": "2939319"
  },
  {
    "text": "server um so let's see what happens so it's creating creating and",
    "start": "2939319",
    "end": "2948040"
  },
  {
    "text": "after a while you see um I can read read it for",
    "start": "2948040",
    "end": "2953960"
  },
  {
    "text": "you uh unable to create native threats possibly out of memory or um there is",
    "start": "2953960",
    "end": "2959520"
  },
  {
    "text": "another things basically we ran out of the thread we ran out of the Native thread we don't have have ability to",
    "start": "2959520",
    "end": "2966480"
  },
  {
    "text": "create create 10,000 native TR over here so that's a problem right but we want to achieve that level of",
    "start": "2966480",
    "end": "2974440"
  },
  {
    "text": "concurrency so um okay so what we can do is we can just",
    "start": "2974440",
    "end": "2983040"
  },
  {
    "text": "change one line over here",
    "start": "2983040",
    "end": "2988280"
  },
  {
    "text": "um over here instead of using platform threats I'm going to use of virtual so",
    "start": "2989000",
    "end": "2995280"
  },
  {
    "text": "now I'm not going to use the plat from the traditional threats rather the new virtual kind of threads and I'm going to",
    "start": "2995280",
    "end": "3001559"
  },
  {
    "text": "rerun",
    "start": "3001559",
    "end": "3004079"
  },
  {
    "text": "this so now I'm going to run the same dto set again and let's see if it can um",
    "start": "3007440",
    "end": "3016160"
  },
  {
    "text": "you know tolerate this many request as you can see it send and",
    "start": "3016160",
    "end": "3022480"
  },
  {
    "text": "finished basically nothing happened over here it didn't show any sort of error I",
    "start": "3022480",
    "end": "3029280"
  },
  {
    "text": "mean it it handled basically uh 10,000 request at at a time so virtual sets how",
    "start": "3029280",
    "end": "3035079"
  },
  {
    "text": "it works I'm going to go a bit details so what happens is it creates a new kind",
    "start": "3035079",
    "end": "3041040"
  },
  {
    "text": "of java construct uh it's called a um that construct act re act like virtual",
    "start": "3041040",
    "end": "3048520"
  },
  {
    "text": "set but um uh over over there uh we have",
    "start": "3048520",
    "end": "3053640"
  },
  {
    "text": "something called for joint pole so it's it's a thread Pole and threadpool use the number of uh core available on the",
    "start": "3053640",
    "end": "3060839"
  },
  {
    "text": "machine let's say we have 10 core available on the machine so it will create 10 uh thread and it will pull",
    "start": "3060839",
    "end": "3066960"
  },
  {
    "text": "them so and if we have like millions of virtual there they will schedule them so we have a new schedular in place in the",
    "start": "3066960",
    "end": "3074520"
  },
  {
    "text": "in the Java it's not a operating system scheduler it's more of a Java construct",
    "start": "3074520",
    "end": "3079920"
  },
  {
    "text": "so uh if we create a virtual threats it will open it will immediately get",
    "start": "3079920",
    "end": "3085040"
  },
  {
    "text": "created and it will stay in the hip uh but um let's say we have a many of them",
    "start": "3085040",
    "end": "3090160"
  },
  {
    "text": "and the virtual the for joint pool will keep on scheduling them H we'll take one",
    "start": "3090160",
    "end": "3095319"
  },
  {
    "text": "and it will work some for a few moment and there is a thing called um you know",
    "start": "3095319",
    "end": "3101119"
  },
  {
    "text": "the the problem with traditional threats there is a called um blocking operation right so let's say we if we have a",
    "start": "3101119",
    "end": "3108960"
  },
  {
    "text": "blocking oper let's say we have a limited number of threads and we have a few blocking operations and the",
    "start": "3108960",
    "end": "3116040"
  },
  {
    "text": "traditional what happens um if a method calls a blocking operation and some thread is operating",
    "start": "3116040",
    "end": "3122640"
  },
  {
    "text": "on it the thread is blocked we have a limited number of thread and we are basically wasting one threads for a few",
    "start": "3122640",
    "end": "3129160"
  },
  {
    "text": "millisecond or for few seconds and with with those times that particular thre",
    "start": "3129160",
    "end": "3135520"
  },
  {
    "text": "doesn't do anything right it just you know staying there doing nothing uh",
    "start": "3135520",
    "end": "3140640"
  },
  {
    "text": "that's a scar city with the new virtual sets what it can do is uh it's executing",
    "start": "3140640",
    "end": "3146079"
  },
  {
    "text": "something and it seees some blocking operation it can yeld itself from this scheduler and wa somewhere in the Heap",
    "start": "3146079",
    "end": "3153079"
  },
  {
    "text": "and the Schuler gets free and it can it can pick another virtual sets that way it keep on going so and since it's a",
    "start": "3153079",
    "end": "3160760"
  },
  {
    "text": "Java construct we can create millions of them pretty fast I mean I can go in depth because",
    "start": "3160760",
    "end": "3167680"
  },
  {
    "text": "but time doesn't permit but yeah that's a new new construct available in Java so hopefully in future everything is going",
    "start": "3167680",
    "end": "3174680"
  },
  {
    "text": "to go in uh every blocking operation I mean we have a reactive stack as well but people will eventually start using",
    "start": "3174680",
    "end": "3181599"
  },
  {
    "text": "virtual threats instead of reactive that's the uh uh kind of future I'm looking so now if we want to let's say",
    "start": "3181599",
    "end": "3189680"
  },
  {
    "text": "uh write a super IOD driven applications we don't have to",
    "start": "3189680",
    "end": "3195359"
  },
  {
    "text": "worry um okay so I don't have much time left um so I'm going to quickly show you",
    "start": "3199319",
    "end": "3205359"
  },
  {
    "text": "few things uh there is another thing called structure concurrency but uh time doesn't permit but I can quickly give",
    "start": "3205359",
    "end": "3212319"
  },
  {
    "text": "you an idea let's say um I have parall uh calling two methods both of them are",
    "start": "3212319",
    "end": "3219559"
  },
  {
    "text": "uh dependent from one another and if one fails then basically whole result is",
    "start": "3219559",
    "end": "3225720"
  },
  {
    "text": "failed uh and we we want to sort of get get a from quickly from that whole",
    "start": "3225720",
    "end": "3231000"
  },
  {
    "text": "methods right so with the traditional um congruency there is a no correlation",
    "start": "3231000",
    "end": "3236440"
  },
  {
    "text": "between two threats basically they are independent so if uh one method failed",
    "start": "3236440",
    "end": "3242799"
  },
  {
    "text": "and the other let's say let's taking a uh 300 milliseconds and it will still continue even the other one failed so",
    "start": "3242799",
    "end": "3249920"
  },
  {
    "text": "since there is no correlations there is no Communications and they sort of act concr uh even though one method failed",
    "start": "3249920",
    "end": "3258119"
  },
  {
    "text": "we are still waiting for other method although it doesn't make sense we can",
    "start": "3258119",
    "end": "3263200"
  },
  {
    "text": "quickly you know uh inter interrupt that method because other one failed with the",
    "start": "3263200",
    "end": "3268400"
  },
  {
    "text": "structure concurrency it gives us a framework that uh you know if there is a",
    "start": "3268400",
    "end": "3274119"
  },
  {
    "text": "some sort of dependency in between if one method fails we can Define that contract Define that policy if one",
    "start": "3274119",
    "end": "3280480"
  },
  {
    "text": "method fails we can quickly come back the other we can interrupt the other one or we can uh write let's say I have I'm",
    "start": "3280480",
    "end": "3288200"
  },
  {
    "text": "calling five child task if one one of them succeeded I want to go back I don't",
    "start": "3288200",
    "end": "3294119"
  },
  {
    "text": "care about the other four and we can interrupt four of them so I'm not going",
    "start": "3294119",
    "end": "3299680"
  },
  {
    "text": "to spend a lot of time on that so we can sort of come up with a few different uh",
    "start": "3299680",
    "end": "3305400"
  },
  {
    "text": "policies with this structure concurrency so that's a new",
    "start": "3305400",
    "end": "3310480"
  },
  {
    "text": "stuff um all right so that's basically all my uh all of the content I wanted to",
    "start": "3310680",
    "end": "3317240"
  },
  {
    "text": "show you if you have any questions for me",
    "start": "3317240",
    "end": "3322640"
  },
  {
    "text": "um so this is a little bit about me um I'm writing two books one is on or",
    "start": "3328400",
    "end": "3333640"
  },
  {
    "text": "basically called modern concurrency I'm going to write all of the things called uh virtual trade structure concurrency",
    "start": "3333640",
    "end": "3339880"
  },
  {
    "text": "all the modern stuff uh it's Mo mostly based on concurrency I have written a couple of page so if you have or",
    "start": "3339880",
    "end": "3346599"
  },
  {
    "text": "subscriptions you can definitely read it now even and I'm also WR writing another",
    "start": "3346599",
    "end": "3352280"
  },
  {
    "text": "book on a linp this is basically all the newer stuff that I have already showed",
    "start": "3352280",
    "end": "3358319"
  },
  {
    "text": "you um so I am about 45% uh com you know finished and I'm",
    "start": "3358319",
    "end": "3365200"
  },
  {
    "text": "still writing it's an evolving book so if you want to get it you can get it now even it will also get updates but the",
    "start": "3365200",
    "end": "3373440"
  },
  {
    "text": "these are two work currently I'm doing",
    "start": "3373440",
    "end": "3377880"
  },
  {
    "text": "[Applause]",
    "start": "3381950",
    "end": "3388079"
  },
  {
    "text": "thank you and yeah we have like two minutes one minutes if you have any questions for",
    "start": "3388079",
    "end": "3395680"
  },
  {
    "text": "me ask about the classes why would you to",
    "start": "3401559",
    "end": "3408920"
  },
  {
    "text": "restrict I didn't get so let's say um let me give you an",
    "start": "3408920",
    "end": "3417079"
  },
  {
    "text": "example of string right as a string is complicated object and there's a many uh",
    "start": "3417079",
    "end": "3426480"
  }
]