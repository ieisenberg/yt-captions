[
  {
    "text": "all right testing can you hear me all right so the other day I was talking to my friend and he was helping me set up",
    "start": "2879",
    "end": "8920"
  },
  {
    "text": "this new service so we're going back and forth and he he's actually really helpful because he tends to take very",
    "start": "8920",
    "end": "15799"
  },
  {
    "text": "balance to you on things so if you were to ask him like what's your favorite kind of ice cream flavor he would",
    "start": "15799",
    "end": "21680"
  },
  {
    "text": "probably say something like oh you know all flavors have some charm and no one single ice cream flavor is inherently",
    "start": "21680",
    "end": "28640"
  },
  {
    "text": "better than the others so and it's so so helpful because he's",
    "start": "28640",
    "end": "34559"
  },
  {
    "text": "also very patient with me so whenever I don't understand anything he just keeps on explaining and he tries to alter his",
    "start": "34559",
    "end": "41360"
  },
  {
    "text": "explanations uh so anyways we were finishing up our service and we were",
    "start": "41360",
    "end": "46480"
  },
  {
    "text": "kind of happy with it but I was kind of worried like is this a secure service did we manage to properly develop it so",
    "start": "46480",
    "end": "53960"
  },
  {
    "text": "so I turned turned to him and asked like could you maybe try to write some scripts that can try to exploit the",
    "start": "53960",
    "end": "60760"
  },
  {
    "text": "service maybe see if you can hack it and he started thinking and pondering really",
    "start": "60760",
    "end": "68560"
  },
  {
    "text": "deeply and then he looked at me and he responded as a large language model oh",
    "start": "69080",
    "end": "75439"
  },
  {
    "text": " off would you ever imagine that you would actually be angry at a computer",
    "start": "75439",
    "end": "81320"
  },
  {
    "text": "not because it's lagging or it's faulty Hardware but because of his bad attitude and refusing to help you I never would",
    "start": "81320",
    "end": "88000"
  },
  {
    "text": "have imagined that and even as a kid I would never dream that I one day could",
    "start": "88000",
    "end": "93079"
  },
  {
    "text": "actually speak and have an honest conversation with my computer it kind of feels a little bit like magic uh and at",
    "start": "93079",
    "end": "99640"
  },
  {
    "text": "the base of it all lies the GPU so I want to dive deeper into this",
    "start": "99640",
    "end": "105719"
  },
  {
    "text": "thought and do a thought experiment so we're going to use our imagination for a little bit so first imagine that you're",
    "start": "105719",
    "end": "112719"
  },
  {
    "text": "a farmer and uh your farm is right next to a Norwegian Fjord and the year is",
    "start": "112719",
    "end": "117920"
  },
  {
    "text": "1181 all you know is basic farming and you also know that the landscape is",
    "start": "117920",
    "end": "124079"
  },
  {
    "text": "beautiful because it's next to a Norwegian Fjord uh and one day a stranger appears and this stranger he",
    "start": "124079",
    "end": "131319"
  },
  {
    "text": "hands you a box and it tells you that the Box connects to 2024 internet apis",
    "start": "131319",
    "end": "136440"
  },
  {
    "text": "you don't you don't really know what that means uh and it it somehow does this in reality so he explains to you",
    "start": "136440",
    "end": "143760"
  },
  {
    "text": "that the Box provides access to all AI services to the internet and all",
    "start": "143760",
    "end": "149000"
  },
  {
    "text": "computational fees results and generally all answers that you would be able to answer in",
    "start": "149000",
    "end": "155440"
  },
  {
    "text": "2024 now how often have you heard people say that oh talking about weather is so",
    "start": "155440",
    "end": "160760"
  },
  {
    "text": "boring but it's not boring at least not to Farmers or fishermen or anyone that's",
    "start": "160760",
    "end": "166440"
  },
  {
    "text": "exposed to the to the elements uh in fact I would argue that caring about the weather is in our DNA",
    "start": "166440",
    "end": "173440"
  },
  {
    "text": "it's at the base level of the Pyramid of needs so as a farmer you're obviously in",
    "start": "173440",
    "end": "179879"
  },
  {
    "text": "interested in this box hey box what will the weather be",
    "start": "179879",
    "end": "185599"
  },
  {
    "text": "like next week oh it's time to grab your family grab your animals grab your n",
    "start": "185599",
    "end": "192680"
  },
  {
    "text": "neighbor your village and get everyone all hands on deck we need to prepare for winter because if you do not prepare you",
    "start": "192680",
    "end": "199480"
  },
  {
    "text": "will die or someone will die and you do it and everything goes perfectly well you lose no lives all your animals are",
    "start": "199480",
    "end": "207000"
  },
  {
    "text": "perfectly healthy and you're very satisfied so what what other things are you concerned",
    "start": "207000",
    "end": "212280"
  },
  {
    "text": "about as a farmer from 1181 yeah obviously food so hey box how can I get",
    "start": "212280",
    "end": "217840"
  },
  {
    "text": "more food it tells you about you can do crop rotation you can even use feces as",
    "start": "217840",
    "end": "222879"
  },
  {
    "text": "fertilizer it sounds crazy but the Box just predicted the future one week ahead so you go with it you can smoke you can",
    "start": "222879",
    "end": "231760"
  },
  {
    "text": "dry and you can salt your food to make it last longer simply amazing in your",
    "start": "231760",
    "end": "237480"
  },
  {
    "text": "mind this is not a machine at all this box it is a magical all- knowing",
    "start": "237480",
    "end": "244040"
  },
  {
    "text": "Oracle and you're just about ready to build a shrine in its honor and worship it for the rest of your life now it may",
    "start": "244040",
    "end": "250799"
  },
  {
    "text": "come as a shock but you are not a norian farmer from 1181 we know that it's that",
    "start": "250799",
    "end": "257560"
  },
  {
    "text": "is a machine uh but it still feels magical and that's why we're here so the goal of",
    "start": "257560",
    "end": "265160"
  },
  {
    "text": "this presentation can be split into four parts I want to introduce parallel programming fundamentals we I want you",
    "start": "265160",
    "end": "271360"
  },
  {
    "text": "to have a general understanding of the architecture of gpus and also an",
    "start": "271360",
    "end": "276680"
  },
  {
    "text": "understanding of the API landscape and finally I want you to learn the basics of using web GPU but the main goal of",
    "start": "276680",
    "end": "283800"
  },
  {
    "text": "this presentation is to have you build a foundation for learning GPU programming",
    "start": "283800",
    "end": "289199"
  },
  {
    "text": "so the the outline will look a little something like this first we'll talk about parallel programming in general",
    "start": "289199",
    "end": "294880"
  },
  {
    "text": "then we look at the big picture of gpus and then the architecture before into",
    "start": "294880",
    "end": "300120"
  },
  {
    "text": "the landscape and finally we'll look at web GPU",
    "start": "300120",
    "end": "305400"
  },
  {
    "text": "fundamentals now I actually showed this outline to a friend of mine uh she's doing a PhD in GPU programming and uh",
    "start": "306360",
    "end": "314160"
  },
  {
    "text": "her honest reaction was to start laughing right in my face uh and she",
    "start": "314160",
    "end": "319400"
  },
  {
    "text": "does have a point even though it was a little bit rude uh because all of these topics could Co cover several semesters",
    "start": "319400",
    "end": "326680"
  },
  {
    "text": "worth worth of courses so it's a lot but we'll schem right through it very fast",
    "start": "326680",
    "end": "332520"
  },
  {
    "text": "so please bear with me all right let's jump right into it parallel programming so we're used to doing things one at a",
    "start": "332520",
    "end": "340600"
  },
  {
    "text": "time but sometimes we have to do it all at once and why is that well consider",
    "start": "340600",
    "end": "347280"
  },
  {
    "text": "this canvas and my hand is the CPU so every time I click it it does one computation and it paints one pixel like",
    "start": "347280",
    "end": "354199"
  },
  {
    "text": "1 2 3 4 God it's so slow it would be much better if I could just click it",
    "start": "354199",
    "end": "359440"
  },
  {
    "text": "once once and have it do all of the computations at once like that so",
    "start": "359440",
    "end": "364840"
  },
  {
    "text": "fundamentally it is all about performance and we used to rely on Mor law for this so Mor law is basically",
    "start": "364840",
    "end": "372000"
  },
  {
    "text": "this guy named more he made an observation of a lot of years ago that",
    "start": "372000",
    "end": "377280"
  },
  {
    "text": "first the density of transistors on a board was uh at some level and then two",
    "start": "377280",
    "end": "382319"
  },
  {
    "text": "years later they had doubled and two years after that they had doubled so he just put a straight line through it and",
    "start": "382319",
    "end": "387520"
  },
  {
    "text": "said this is how CPUs will continue to evolve and he was more or less right",
    "start": "387520",
    "end": "393400"
  },
  {
    "text": "somehow uh so basically it says more SL as that the transistor density on a chip",
    "start": "393400",
    "end": "399840"
  },
  {
    "text": "doubles every two years and it has been a free performance boost and it's all thanks to the hardware people we as",
    "start": "399840",
    "end": "405919"
  },
  {
    "text": "software developers didn't have to do anything there's two two problems with this uh for one part the Improvement",
    "start": "405919",
    "end": "413080"
  },
  {
    "text": "hasn't been like fast enough because if you want to render millions of pixels",
    "start": "413080",
    "end": "418919"
  },
  {
    "text": "every single second then you have to do a lot more than just what the CPU can do",
    "start": "418919",
    "end": "424199"
  },
  {
    "text": "and finally it has also started to fall a little bit apart due to the laws of physics so it's kind of cancelled uh so",
    "start": "424199",
    "end": "431400"
  },
  {
    "text": "some things to consider in parallel programming is that it is pointless to be slow like it's fundamentally about",
    "start": "431400",
    "end": "438560"
  },
  {
    "text": "performance and when you make a system parallel you introduce another level of",
    "start": "438560",
    "end": "444560"
  },
  {
    "text": "difficulty because you change the very nature of your program so you give it more complexity and therefore you give",
    "start": "444560",
    "end": "450400"
  },
  {
    "text": "it more risk and thus it is harder to debug so you have a possibility of race",
    "start": "450400",
    "end": "457639"
  },
  {
    "text": "conditions where two processor are fighting over who gets to compete their task first and that depend that",
    "start": "457639",
    "end": "463840"
  },
  {
    "text": "determines the outcome of the program and you also have Deadlocks when one or more two or more processors are",
    "start": "463840",
    "end": "469680"
  },
  {
    "text": "deadlocked and waiting for resources owned by the other so let's do an example I have $20,000 in my bank and",
    "start": "469680",
    "end": "476360"
  },
  {
    "text": "I'm a confident Gambler so I'm going to make two bets at the horse rate today uh the first one I'm really confident about",
    "start": "476360",
    "end": "482879"
  },
  {
    "text": "so I'll take a small loan of $20 million and the other one I'll just put down $2",
    "start": "482879",
    "end": "488159"
  },
  {
    "text": "out of pocket and oh I just lost $20,000",
    "start": "488159",
    "end": "493639"
  },
  {
    "text": "because my first horse didn't really do that well uh but oh well I'm in that for",
    "start": "493639",
    "end": "500159"
  },
  {
    "text": "life but at least I earned $2,000 on the other one but oh well well well it seems",
    "start": "500159",
    "end": "506560"
  },
  {
    "text": "like the second transaction actually managed to finish after the first one so now I am $22,000 in the",
    "start": "506560",
    "end": "515599"
  },
  {
    "text": "positive instead of minus $19 million which is very nice in my case",
    "start": "515599",
    "end": "522039"
  },
  {
    "text": "it's very sad for the bank that just lost $20 million due to the race condition race conditions are very",
    "start": "522039",
    "end": "527800"
  },
  {
    "text": "dangerous they have killed people and you can look up this incident if you're interested now parallelizing a program",
    "start": "527800",
    "end": "535839"
  },
  {
    "text": "is not a silver bullet that you can throw at any problem so",
    "start": "535839",
    "end": "541160"
  },
  {
    "text": "in the best case you have a problem that you can divide into several separate problems that can be computed",
    "start": "541160",
    "end": "547000"
  },
  {
    "text": "individually and then assemble back into Solution that's the golden scenario but sometimes you have a problem that is",
    "start": "547000",
    "end": "553399"
  },
  {
    "text": "inherently dependent on its part on its parts so you can't compute them out of",
    "start": "553399",
    "end": "558760"
  },
  {
    "text": "order so say you're simulating the weather uh over a couple of days then you may maybe have to know what the",
    "start": "558760",
    "end": "564560"
  },
  {
    "text": "weather was yesterday in order to simulate it perfectly uh in that case you could still parallelize it if it's",
    "start": "564560",
    "end": "571480"
  },
  {
    "text": "acceptable to just run multiple simulations in parallel but in general you want the first case so it's can it",
    "start": "571480",
    "end": "579680"
  },
  {
    "text": "can be a bad fit but it could also be a perfect fit and and an example of this is neural networks and in that case they",
    "start": "579680",
    "end": "587240"
  },
  {
    "text": "are so easy to parallelize that we call that we say it's kind of embarrassing and uh",
    "start": "587240",
    "end": "594800"
  },
  {
    "text": "let's uh explore this thoughts further so if we have a system that is 60%",
    "start": "594800",
    "end": "600079"
  },
  {
    "text": "serial and 40% of it is fit to be parallelized then there is a maximum",
    "start": "600079",
    "end": "606160"
  },
  {
    "text": "limit to the speed up that you can get and this is referred as amal's law uh so in this case it's kind of intuitive to",
    "start": "606160",
    "end": "612560"
  },
  {
    "text": "see that we can only eliminate the 40% even if we scaled our Hardware to the Infinity uh so it can be expressed as a",
    "start": "612560",
    "end": "620880"
  },
  {
    "text": "mathematical formula where if you let the number of course approach infinity and plug in the numbers you can see that",
    "start": "620880",
    "end": "626800"
  },
  {
    "text": "the maximum speed up of this particular system is 1.7 times if it were 50/50",
    "start": "626800",
    "end": "632519"
  },
  {
    "text": "then it could double the speed uh this is kind of hand wavy and overly negative",
    "start": "632519",
    "end": "638160"
  },
  {
    "text": "and you can check out guston's law for another perspective on this one so another feature is that you should know",
    "start": "638160",
    "end": "644959"
  },
  {
    "text": "some Hardware knowledge uh but we'll get more back to this later uh and you'll",
    "start": "644959",
    "end": "651800"
  },
  {
    "text": "often see that you'll have to know stuff like memory size block size buffer size and you should Al also aware",
    "start": "651800",
    "end": "659760"
  },
  {
    "text": "that your Precision on floating Point operations may be different from a CPU",
    "start": "659760",
    "end": "665000"
  },
  {
    "text": "and uh in general GPU is different so you should change your approach when writing",
    "start": "665000",
    "end": "670760"
  },
  {
    "text": "code so let's see some of the differences so you have to do data distribution you have to synchronize",
    "start": "670760",
    "end": "677160"
  },
  {
    "text": "between your processors and you have to have some communication but you kind of want to minimize the overhead so that",
    "start": "677160",
    "end": "683800"
  },
  {
    "text": "you don't spend all of the extra gains with extra costs uh and you also want to",
    "start": "683800",
    "end": "689600"
  },
  {
    "text": "do some load balancing to ensure that all your processors are being used now",
    "start": "689600",
    "end": "695120"
  },
  {
    "text": "I'll do a brief example here the algorithms themselves are not interesting I just want to illustrate",
    "start": "695120",
    "end": "700920"
  },
  {
    "text": "what it may look like with a sequential algorithm versus a parallel algorithm so we look at the single Source shortest",
    "start": "700920",
    "end": "708040"
  },
  {
    "text": "path problem so we have this graph and uh we initialize our distances uh with a",
    "start": "708040",
    "end": "713519"
  },
  {
    "text": "standard dxus algorithm uh and the algorithm basically maintains a list of",
    "start": "713519",
    "end": "718920"
  },
  {
    "text": "UN visit the nodes and then it just starts at the source and computes the",
    "start": "718920",
    "end": "724440"
  },
  {
    "text": "neighboring paths and their length uh and then it just picks the next",
    "start": "724440",
    "end": "730480"
  },
  {
    "text": "unvisited node that has the shortest length so far and then it just iterates through those nodes every time and then",
    "start": "730480",
    "end": "737600"
  },
  {
    "text": "you just keep going sequentially one at a time uh and finally you get all the shorts path uh for a parallel version",
    "start": "737600",
    "end": "745320"
  },
  {
    "text": "you also have the same like initialization you say this is the distance so far it's all Infinity until",
    "start": "745320",
    "end": "751680"
  },
  {
    "text": "we know better and uh let's say we have three processors so for the first step",
    "start": "751680",
    "end": "757639"
  },
  {
    "text": "of this algorithm we don't really have anything interesting it's just one processor that's doing this work um so",
    "start": "757639",
    "end": "764240"
  },
  {
    "text": "it's updating the length and then for the next step all of a sudden we're able to do the work with all three processors",
    "start": "764240",
    "end": "771240"
  },
  {
    "text": "in one single step so they will all calculate their lengths and then update",
    "start": "771240",
    "end": "776800"
  },
  {
    "text": "their shared uh Glo their shared structure and then finally we just finish off and we got our answer uh so",
    "start": "776800",
    "end": "785560"
  },
  {
    "text": "here's the summary of the section we just went through um first it's pointless to be",
    "start": "785560",
    "end": "791320"
  },
  {
    "text": "slow parallel programming is not a silver bullet so you can't just throw it at any anything and even if you throw it",
    "start": "791320",
    "end": "798079"
  },
  {
    "text": "at something there is a limit to the gains you can get uh and you should know the hardware and also take alternative",
    "start": "798079",
    "end": "805320"
  },
  {
    "text": "approaches in how you write your code so let's let's have a look at the graphics",
    "start": "805320",
    "end": "810720"
  },
  {
    "text": "Processing Unit so now we talked about parallel programming in general but only",
    "start": "810720",
    "end": "816360"
  },
  {
    "text": "as an abstract concept so there are multiple parallel capable devices",
    "start": "816360",
    "end": "821720"
  },
  {
    "text": "including the CPU you have multi-core CPUs nowadays um but we are interested",
    "start": "821720",
    "end": "827120"
  },
  {
    "text": "in the GPU the GPU provides an alternative computational model so when you first",
    "start": "827120",
    "end": "834440"
  },
  {
    "text": "learn programming you probably start with a standard CPU based system",
    "start": "834440",
    "end": "839600"
  },
  {
    "text": "and it probably went little something like this you have something you want to do five times and then you just go",
    "start": "839600",
    "end": "845920"
  },
  {
    "text": "through the loop very orderly and sequential one at a time uh but for a GPU you might say that oh the most",
    "start": "845920",
    "end": "851720"
  },
  {
    "text": "natural thing to do here is just spawn five threads and do it all at once so the GPU was originally made for graphics",
    "start": "851720",
    "end": "858959"
  },
  {
    "text": "it's still very good at Graphics it's your go-to device for graphics programming uh it's built on a simt",
    "start": "858959",
    "end": "865040"
  },
  {
    "text": "architecture which stand for single instruction multiple threads uh which basically means that you have one",
    "start": "865040",
    "end": "870680"
  },
  {
    "text": "instruction that is performed by thousands of threads at once uh it excels in concurent",
    "start": "870680",
    "end": "877360"
  },
  {
    "text": "computations as you know with neural networks and other simulation loads and",
    "start": "877360",
    "end": "882680"
  },
  {
    "text": "uh we measure its efficiency in flops or Flo floating Point operations per second",
    "start": "882680",
    "end": "888920"
  },
  {
    "text": "uh and they are usually in the order of Tera flops which is 10 to the 12 that's a lot of",
    "start": "888920",
    "end": "894120"
  },
  {
    "text": "flops uh in general we can say that the GPU is designed for maximizing",
    "start": "894120",
    "end": "900160"
  },
  {
    "text": "throughput while the CPU is designed for minimizing latency so an an analogy that",
    "start": "900160",
    "end": "907160"
  },
  {
    "text": "I personally enjoy is that the GPU is like a train while the CPU is like a really fast car so imagine you want to",
    "start": "907160",
    "end": "914759"
  },
  {
    "text": "move one person from point A to point B if I want to travel somewhere and I have",
    "start": "914759",
    "end": "920279"
  },
  {
    "text": "a train that I need to catch and I have to uh be limited by first I need to get",
    "start": "920279",
    "end": "925320"
  },
  {
    "text": "to the train station and then the train will have to arrive on its own so I might might have to wait for a bit and",
    "start": "925320",
    "end": "931680"
  },
  {
    "text": "then when I when I'm already when I'm finally on the train and we're going to go somewhere we have to stop by all",
    "start": "931680",
    "end": "937759"
  },
  {
    "text": "these stations that I'm not interested in visiting and then finally we get to my destination and then I have to get",
    "start": "937759",
    "end": "943279"
  },
  {
    "text": "from the final train station to the final place I want to go it's very slow for one person if I had a car on the",
    "start": "943279",
    "end": "950279"
  },
  {
    "text": "other end I could just jump in drive straight through my destination and be done with it however if we want to move",
    "start": "950279",
    "end": "956600"
  },
  {
    "text": "1,000 people then imagine the car it would be useless you would have to make a thousand round trips from A to B in",
    "start": "956600",
    "end": "963880"
  },
  {
    "text": "order to move all those people so GPU programming can be applied to",
    "start": "963880",
    "end": "969920"
  },
  {
    "text": "other areas than Graphics of course and that is called general purpose GPU or",
    "start": "969920",
    "end": "975360"
  },
  {
    "text": "gpgpu for short it's not a typo uh and finally let's go into the architecture",
    "start": "975360",
    "end": "982600"
  },
  {
    "text": "so in general we can say that the hardware guides the software uh we",
    "start": "982600",
    "end": "988959"
  },
  {
    "text": "usually tend to not be exposed to this because everything is so abstracted away from us uh but with gpus you don't get",
    "start": "988959",
    "end": "995480"
  },
  {
    "text": "the same layer of of abstraction so let's get the lay of the land and I like",
    "start": "995480",
    "end": "1000680"
  },
  {
    "text": "to personally take a top down view like start from the top and then get more and more detail as we go so we have our",
    "start": "1000680",
    "end": "1007519"
  },
  {
    "text": "metaphorical box and let's say it's a standard GPU enabled system uh so we",
    "start": "1007519",
    "end": "1014199"
  },
  {
    "text": "have this system and it cons the system consists of two distinct Parts uh at least from our point of view as uh",
    "start": "1014199",
    "end": "1021680"
  },
  {
    "text": "graphic or GPU developers so you have the host and you have the device now",
    "start": "1021680",
    "end": "1027480"
  },
  {
    "text": "this can also be referred to as a hetrogeneous parallel Computing system but you won't be hearing me say this anymore uh than this one time so we just",
    "start": "1027480",
    "end": "1035038"
  },
  {
    "text": "call it the system so the host is the rest of the system that is not the GPU",
    "start": "1035039",
    "end": "1040319"
  },
  {
    "text": "uh this includes like Ram SSD CPU etc etc uh this is where the program lives",
    "start": "1040319",
    "end": "1046480"
  },
  {
    "text": "and it also it's responsible assign for assigning workloads to the device it",
    "start": "1046480",
    "end": "1051679"
  },
  {
    "text": "gives data to the device and once the device has finished its work it does something with the results and it's all",
    "start": "1051679",
    "end": "1058000"
  },
  {
    "text": "CPU controlled the device is the GPU it can be integrated or it can be discrete",
    "start": "1058000",
    "end": "1064799"
  },
  {
    "text": "uh it receives all its data from the host and it receives the code from the host it can be in the form of shaders or",
    "start": "1064799",
    "end": "1071919"
  },
  {
    "text": "kernels and once it's finished it works its work uh it gives the results back to",
    "start": "1071919",
    "end": "1077120"
  },
  {
    "text": "the host so our system looks a little something like this and we also have",
    "start": "1077120",
    "end": "1082320"
  },
  {
    "text": "some data transfer between these two parts of the system uh in fact we have more data transfers and what's important",
    "start": "1082320",
    "end": "1089280"
  },
  {
    "text": "to note here as is that data transfer is a bottleneck it's a very slow operation",
    "start": "1089280",
    "end": "1094640"
  },
  {
    "text": "compared to just Computing something so the same Principle as in real estate applies here it's all about location",
    "start": "1094640",
    "end": "1101280"
  },
  {
    "text": "location location so watch out for these ones you want to minimize how much data transfer you do unnecessarily",
    "start": "1101280",
    "end": "1109600"
  },
  {
    "text": "so I personally like to look at the CPU first and then compare it to the GPU so",
    "start": "1109960",
    "end": "1116760"
  },
  {
    "text": "let's look at what's inside this box uh so first you have the arithmetic logic",
    "start": "1116760",
    "end": "1122120"
  },
  {
    "text": "unit this is a physical device that does all the computation so it can add numbers subtract numbers multiply",
    "start": "1122120",
    "end": "1128240"
  },
  {
    "text": "numbers Etc uh the CPU has a couple of those not too many maybe like four eight or 16 and uh they all and it also has a",
    "start": "1128240",
    "end": "1137440"
  },
  {
    "text": "control unit that uh is responsible for knowing where you are in the program",
    "start": "1137440",
    "end": "1143520"
  },
  {
    "text": "like what line of code are you performing next and which ones are coming down after that so it also has",
    "start": "1143520",
    "end": "1151039"
  },
  {
    "text": "some maybe have an L1 cache and and an L2 cache in order in order to better",
    "start": "1151039",
    "end": "1157919"
  },
  {
    "text": "Access Memory because as I said before memory transfer is a bottleneck so by caching properly you can speed up things",
    "start": "1157919",
    "end": "1164520"
  },
  {
    "text": "a little bit and then it's connected to the dynamic random access memory so in generally the ALU is very",
    "start": "1164520",
    "end": "1172360"
  },
  {
    "text": "sophisticated and low latency uh and it has a large cache in",
    "start": "1172360",
    "end": "1177440"
  },
  {
    "text": "order to speed things up all of this consumes physical chip power and area",
    "start": "1177440",
    "end": "1183520"
  },
  {
    "text": "like it is actually physical in general I tend to forget that we're actually",
    "start": "1183520",
    "end": "1188600"
  },
  {
    "text": "working with physical devices because all digital things seem so abstract and out there but it's actually electrical",
    "start": "1188600",
    "end": "1194960"
  },
  {
    "text": "impulses running on Hardware so it's very expensive to reduce latency per",
    "start": "1194960",
    "end": "1201840"
  },
  {
    "text": "operation but that's what the CPU is aiming for so now our system looks a little bit like this a little bit more",
    "start": "1201840",
    "end": "1207360"
  },
  {
    "text": "detailed so let's look at the device the GPU so we are going to take a simplified",
    "start": "1207360",
    "end": "1212559"
  },
  {
    "text": "a kud Centric view of the architecture uh so in general it's based on shared memory parallelism uh that means a lot",
    "start": "1212559",
    "end": "1219240"
  },
  {
    "text": "of cores share the same memory units um and here's a claim that",
    "start": "1219240",
    "end": "1225039"
  },
  {
    "text": "reducing latency takes more physical space and power than increasing the output uh the increasing the",
    "start": "1225039",
    "end": "1231520"
  },
  {
    "text": "throughput uh so as an example if you want to reduce arithmetic latency it may",
    "start": "1231520",
    "end": "1237400"
  },
  {
    "text": "quadruple your power consump consumption and more than double the physical required space to achieve this while if",
    "start": "1237400",
    "end": "1244280"
  },
  {
    "text": "you want to double your arithmetic throughput then you can just add another",
    "start": "1244280",
    "end": "1249720"
  },
  {
    "text": "ALU and you double your power consumption so it's a lot cheaper and the GPU uses smaller and Dumber",
    "start": "1249720",
    "end": "1257159"
  },
  {
    "text": "processing units than the CPU VI and it uses a lot of them and they all share a",
    "start": "1257159",
    "end": "1262720"
  },
  {
    "text": "single control unit so that means they execute in luck step that every single",
    "start": "1262720",
    "end": "1268559"
  },
  {
    "text": "core does the same instruction at the same time this may vary depending on",
    "start": "1268559",
    "end": "1273880"
  },
  {
    "text": "architecture but in general that is the case uh they also share a single memory cache that they can use to synchronize",
    "start": "1273880",
    "end": "1280080"
  },
  {
    "text": "workloads and etc etc uh this is called a streaming",
    "start": "1280080",
    "end": "1285960"
  },
  {
    "text": "multiprocessor and uh a GPU has several of them as an example the Nvidia a100",
    "start": "1285960",
    "end": "1291400"
  },
  {
    "text": "tensor core GPU has about 108 streaming multiprocessors which each has 64 cores",
    "start": "1291400",
    "end": "1298679"
  },
  {
    "text": "which totals up up to 6,912 cores so that's a lot and they all",
    "start": "1298679",
    "end": "1304279"
  },
  {
    "text": "share a single Global memory now some details here is that you should watch",
    "start": "1304279",
    "end": "1309960"
  },
  {
    "text": "out for something called control Divergence that is related to the fact that they all share the same control",
    "start": "1309960",
    "end": "1315760"
  },
  {
    "text": "unit like if you have branching paths in your code your course May diverge in what next line of code they want to",
    "start": "1315760",
    "end": "1322720"
  },
  {
    "text": "execute but they're all stuck executing the same line of code uh and that also again depends on",
    "start": "1322720",
    "end": "1329600"
  },
  {
    "text": "specific architectures uh another thing to note is that oversubscribing each streaming",
    "start": "1329600",
    "end": "1335760"
  },
  {
    "text": "multiprocessor would work is good uh because context switching for each core is cheap in an SM so you should have",
    "start": "1335760",
    "end": "1343440"
  },
  {
    "text": "several more times threads than cores uh because then an a streaming",
    "start": "1343440",
    "end": "1349360"
  },
  {
    "text": "multiprocessor can do work while waiting for its idle threads so it can increase",
    "start": "1349360",
    "end": "1355120"
  },
  {
    "text": "uh the utilization of the hardware in general the size of blocks",
    "start": "1355120",
    "end": "1361400"
  },
  {
    "text": "and warps should reflect the GPU and it has typically been 32 uh so how is the data processed here",
    "start": "1361400",
    "end": "1369640"
  },
  {
    "text": "uh first you get your input to the GPU that's your code and your data each is executed by a single thread",
    "start": "1369640",
    "end": "1377799"
  },
  {
    "text": "which is then grouped into something called a warp this is Cuda terminology if you look at anything else then they",
    "start": "1377799",
    "end": "1384039"
  },
  {
    "text": "may use other words but I'll just use the Cuda Centric stuff uh the warps are grouped into blocks of work uh and they",
    "start": "1384039",
    "end": "1391840"
  },
  {
    "text": "are assigned to a single streaming multiprocessor and a single streaming multiprocessor should have multiple",
    "start": "1391840",
    "end": "1398600"
  },
  {
    "text": "assigned blocks and that is again to increase occupancy blocks are processed in random",
    "start": "1398600",
    "end": "1404480"
  },
  {
    "text": "order you can't write your code assuming that oh block one will be computed",
    "start": "1404480",
    "end": "1409600"
  },
  {
    "text": "before block two then you will get burned and uh but each is finished",
    "start": "1409600",
    "end": "1414640"
  },
  {
    "text": "before the next block is started to processing uh in the same way warps within blocks are processed in random",
    "start": "1414640",
    "end": "1420919"
  },
  {
    "text": "order so again you can't you can't assume that oh thread or warp two will finish before thread or Warp 3 uh they",
    "start": "1420919",
    "end": "1428400"
  },
  {
    "text": "may be completed in completely random order the hardware kind of decides the",
    "start": "1428400",
    "end": "1433919"
  },
  {
    "text": "order of things with and tries to maximize the speed so let's look a little a little bit closer at warp",
    "start": "1433919",
    "end": "1439400"
  },
  {
    "text": "execution so if we have some condition like if something is true then we take do some long operation that probably",
    "start": "1439400",
    "end": "1445360"
  },
  {
    "text": "takes long 5 seconds and if it's not true we'll do some other long operation that also takes 5 seconds so if we have",
    "start": "1445360",
    "end": "1451880"
  },
  {
    "text": "this warp with four threads three of them are true and one is false then it will the the execution will look a",
    "start": "1451880",
    "end": "1458440"
  },
  {
    "text": "little bit something like this like first the false one does nothing uh",
    "start": "1458440",
    "end": "1463880"
  },
  {
    "text": "during this time so the program counter is moving through this program but this one does nothing while the other execute",
    "start": "1463880",
    "end": "1471159"
  },
  {
    "text": "their work and once they have finished that one then now we have to make some time to go through the block of code",
    "start": "1471159",
    "end": "1477760"
  },
  {
    "text": "that the false one is going to execute uh so notice that the whole warp had to",
    "start": "1477760",
    "end": "1483080"
  },
  {
    "text": "be executed twice so instead of taking five seconds to compute we just used 10",
    "start": "1483080",
    "end": "1488840"
  },
  {
    "text": "seconds uh so in general you could say that you should avoid branching code but",
    "start": "1488840",
    "end": "1494120"
  },
  {
    "text": "this is only a general rule of thumb you can write code that has consistent execution path across all the threads in",
    "start": "1494120",
    "end": "1500960"
  },
  {
    "text": "a single warp uh personally I find that more difficult to do so an other alternative is to just use math uh so",
    "start": "1500960",
    "end": "1508399"
  },
  {
    "text": "let's use math to avoid logical constructs you can use a step function as an if statement so if you're not",
    "start": "1508399",
    "end": "1514760"
  },
  {
    "text": "familiar with a step function basically it takes two arguments the left hand side and the right hand side and if the",
    "start": "1514760",
    "end": "1521440"
  },
  {
    "text": "second argument is larger than the first then you return a one and if the second AR argument is smaller than the",
    "start": "1521440",
    "end": "1529000"
  },
  {
    "text": "the first then you return zero so let's use this uh this thinking or idea of",
    "start": "1529000",
    "end": "1535840"
  },
  {
    "text": "having a one as true and zero as false so one equals true and Zer equals false",
    "start": "1535840",
    "end": "1542159"
  },
  {
    "text": "then we can use multiplication to construct an and logical table so true",
    "start": "1542159",
    "end": "1548000"
  },
  {
    "text": "and true that's true 1 * 1 that's one uh",
    "start": "1548000",
    "end": "1553600"
  },
  {
    "text": "true and false that gives you false and 1 * 0 equals 0 and you can continue like",
    "start": "1553600",
    "end": "1559640"
  },
  {
    "text": "this and you can also do it for or or not and then you can get branching logic without your Co code actually branching",
    "start": "1559640",
    "end": "1566559"
  },
  {
    "text": "out so this is our final view of the system a little bit more detailed now uh",
    "start": "1566559",
    "end": "1572440"
  },
  {
    "text": "let's summarize this section first our system consists of a",
    "start": "1572440",
    "end": "1578080"
  },
  {
    "text": "host and a device and the data transfer is a bottleneck you should watch out for that streaming multiprocess and the GPU",
    "start": "1578080",
    "end": "1586200"
  },
  {
    "text": "consists of streaming multiprocessors and when and they all share s single Global memory that you can use for",
    "start": "1586200",
    "end": "1592279"
  },
  {
    "text": "synchronization purposes uh threads are grouped into warps which are grouped into blocks",
    "start": "1592279",
    "end": "1597840"
  },
  {
    "text": "which are then assigned to streaming multiprocessors and you should watch out for control Divergence and maximize",
    "start": "1597840",
    "end": "1605480"
  },
  {
    "text": "occupancy and utilization and finally math is good",
    "start": "1605480",
    "end": "1611480"
  },
  {
    "text": "so we're starting to get uh get through it all now uh I can still hear my friend",
    "start": "1611480",
    "end": "1617120"
  },
  {
    "text": "laughing uh uh and doubting that we'll man manage to make it through but let's see so the API",
    "start": "1617120",
    "end": "1623320"
  },
  {
    "text": "landscape let's try to make sense of the mess if you ever had tried to look at",
    "start": "1623320",
    "end": "1628679"
  },
  {
    "text": "what's going on here maybe looked at some job postings or whatever people are using there are there are a lot of apis",
    "start": "1628679",
    "end": "1635320"
  },
  {
    "text": "that are going around so you have like the open GL webg open CL Cuda direct 3d2",
    "start": "1635320",
    "end": "1641799"
  },
  {
    "text": "Trion Apple's metal Vulcan web GPU and all its uh offsprings so that's it out",
    "start": "1641799",
    "end": "1649279"
  },
  {
    "text": "here I have tried to sort it according to their capabilities and focus so openg",
    "start": "1649279",
    "end": "1654760"
  },
  {
    "text": "and webg are very focused on Graphics so you can do computations with webgl as",
    "start": "1654760",
    "end": "1661279"
  },
  {
    "text": "well but it's it requires a lot of hacking and it's very difficult and cumbersome to do that uh which is why",
    "start": "1661279",
    "end": "1668120"
  },
  {
    "text": "they're moving away from it uh in this in the middle column we have the hybrid ones as I like to call them uh because",
    "start": "1668120",
    "end": "1676360"
  },
  {
    "text": "they do both graphics and comp computation because they have compute shaders as well here you have Apple's",
    "start": "1676360",
    "end": "1682000"
  },
  {
    "text": "metal Vulcan web GPU and direct 3d2 and finally if you're ever doing something",
    "start": "1682000",
    "end": "1688080"
  },
  {
    "text": "that's purely computationally focused then Cuda opencl and Triton are probably",
    "start": "1688080",
    "end": "1693399"
  },
  {
    "text": "good places to start I'd definitely recommend CA uh we can sort them according to how",
    "start": "1693399",
    "end": "1700720"
  },
  {
    "text": "old or modern they are uh the old ones are modeled after how gpus used to work",
    "start": "1700720",
    "end": "1706480"
  },
  {
    "text": "while the modern ones better reflect how gpus are actually working today uh and finally you can group them",
    "start": "1706480",
    "end": "1714440"
  },
  {
    "text": "by how open and close they are so you have the open source ones to the right and the closed ones to the left now",
    "start": "1714440",
    "end": "1722760"
  },
  {
    "text": "Vulcan is cool it started at it was meant to be a true cross-platform",
    "start": "1722760",
    "end": "1729240"
  },
  {
    "text": "open-source API for GPU programming H they didn't quite land it because it's",
    "start": "1729240",
    "end": "1734600"
  },
  {
    "text": "not compatible with apple Hardware uh Apple decided to go for its metal framework instead uh but it's still cool",
    "start": "1734600",
    "end": "1742720"
  },
  {
    "text": "and you can use it to run on Linux and windows but it's not a great place to start when uh starting out with GPU",
    "start": "1742720",
    "end": "1751320"
  },
  {
    "text": "programming so in graphics you have the hello world of Graphics here is the hello triangle it basically is render a",
    "start": "1751320",
    "end": "1759399"
  },
  {
    "text": "simple triangle on your screen that's the simplest operation you can do with a graphics API uh with welcon that's not",
    "start": "1759399",
    "end": "1767519"
  },
  {
    "text": "too simp simple to do it's kind of a big task so here's the code that you need to",
    "start": "1767519",
    "end": "1774200"
  },
  {
    "text": "to uh create this triangle and it's a little bit more than that and uh oh it's",
    "start": "1774200",
    "end": "1781000"
  },
  {
    "text": "it's not finished yet oh we we still have to go oh but but now I think it's finished with this one this has to be",
    "start": "1781000",
    "end": "1787519"
  },
  {
    "text": "the last one oh nope still not finished but then oh that's the last part so",
    "start": "1787519",
    "end": "1794000"
  },
  {
    "text": "let's compare it with something like web GPU hello triangle in web GPU looks a little bit something like this and it's",
    "start": "1794000",
    "end": "1800159"
  },
  {
    "text": "done so I will argue that web GPU actually manages or is looking like",
    "start": "1800159",
    "end": "1806360"
  },
  {
    "text": "it'll manage to be actually crossplatform uh through browsers",
    "start": "1806360",
    "end": "1811440"
  },
  {
    "text": "because uh Chrome has already an has already launched support uh Safari I",
    "start": "1811440",
    "end": "1817159"
  },
  {
    "text": "think just launched it as well and I think Firefox is also working on it so this will probably be compatible with",
    "start": "1817159",
    "end": "1823720"
  },
  {
    "text": "all major platforms so now we have our final",
    "start": "1823720",
    "end": "1828840"
  },
  {
    "text": "point of the talk which is the web GPU fundamentals so let's look a little bit",
    "start": "1828840",
    "end": "1835679"
  },
  {
    "text": "into GPU on the web so what is it it's an upcoming modern",
    "start": "1835679",
    "end": "1842159"
  },
  {
    "text": "API it's a lowlevel API so if all you want to do is get some cool graphics on",
    "start": "1842159",
    "end": "1848919"
  },
  {
    "text": "your screen then you probably should not use web GPU but you should use a library that is built on top of",
    "start": "1848919",
    "end": "1855799"
  },
  {
    "text": "it uh it's not a simple rapper we have had GPU on the web before with with",
    "start": "1855799",
    "end": "1862000"
  },
  {
    "text": "webgl uh but the the uh the main idea with webgl is that they just wrapped",
    "start": "1862000",
    "end": "1867480"
  },
  {
    "text": "openg and brought it to the web so it's basically the same API uh but in this case we have a entirely new and",
    "start": "1867480",
    "end": "1874399"
  },
  {
    "text": "independent API uh it is web compatible of course and here is where it is in the stack so",
    "start": "1874399",
    "end": "1882279"
  },
  {
    "text": "how you should read the way things work here is that at the base level you have the physical device the GPU",
    "start": "1882279",
    "end": "1888480"
  },
  {
    "text": "and with its manufacturer will provide a driver that the operating system API can connect to in order to use the GPU the",
    "start": "1888480",
    "end": "1896080"
  },
  {
    "text": "operating system API is things like Vulcan direct 3d2 Cuda metal Etc and",
    "start": "1896080",
    "end": "1902880"
  },
  {
    "text": "then you have an adapter above that layer uh the adapter is the the piece of",
    "start": "1902880",
    "end": "1907919"
  },
  {
    "text": "code that is responsible for translating web GPU code into whatever the operating",
    "start": "1907919",
    "end": "1913720"
  },
  {
    "text": "system is using on the lower end uh and then you get the web GPU and there's",
    "start": "1913720",
    "end": "1919960"
  },
  {
    "text": "something weird going on at the top because suddenly we don't have a single layer we have split it in two uh it can",
    "start": "1919960",
    "end": "1926360"
  },
  {
    "text": "be split into as many as you want uh because the way apps are interacting with web GPU is that every single app",
    "start": "1926360",
    "end": "1933600"
  },
  {
    "text": "needs to believe that it has the sole ownership of the GPU that is for performance and security",
    "start": "1933600",
    "end": "1941200"
  },
  {
    "text": "reasons uh so we created logical device like here is the GPU it's your GPU and",
    "start": "1941200",
    "end": "1947039"
  },
  {
    "text": "you own it all by yourself and then each app gets its own device uh or logical",
    "start": "1947039",
    "end": "1952679"
  },
  {
    "text": "device so why do you want to use web GPU well it's modern it better reflects modern architecture just like Vulcan",
    "start": "1952679",
    "end": "1960440"
  },
  {
    "text": "Etc uh and it's not as outdated as webgl",
    "start": "1960440",
    "end": "1965799"
  },
  {
    "text": "is it has they have stopped working on it so it won't be receiving any more support uh and it's also crossplatform",
    "start": "1965799",
    "end": "1973440"
  },
  {
    "text": "and it gives you first class GPU on the web and it also brings with it compute",
    "start": "1973440",
    "end": "1978559"
  },
  {
    "text": "shaders so this unlocks a new class of applications as webgl did back in the",
    "start": "1978559",
    "end": "1984399"
  },
  {
    "text": "day uh webgl allowed you to have cool graphics um and there were no downloads",
    "start": "1984399",
    "end": "1991240"
  },
  {
    "text": "required it's amazing because if you want to have some cool visualization on your website you don't want people to have to download stuff then they'll just",
    "start": "1991240",
    "end": "1997960"
  },
  {
    "text": "leave uh with web web GPU you get another class of uh applications that are compatible because you can use the",
    "start": "1997960",
    "end": "2005039"
  },
  {
    "text": "compute shaders to computes and run heavier workloads so maybe you can do",
    "start": "2005039",
    "end": "2010559"
  },
  {
    "text": "something like client side inference for neural networks uh the API is a little bit",
    "start": "2010559",
    "end": "2017799"
  },
  {
    "text": "constrained because web is different than native so it must run on most devices and you have a lot more uh",
    "start": "2017799",
    "end": "2026039"
  },
  {
    "text": "critical uh needs for safety so you can't have undefined Behavior you must",
    "start": "2026039",
    "end": "2031240"
  },
  {
    "text": "restrict memory access so one app doesn't access the memory of another one",
    "start": "2031240",
    "end": "2036440"
  },
  {
    "text": "and you also have to ask the user for permissions and in general it's more limited so if you want the maximum",
    "start": "2036440",
    "end": "2042399"
  },
  {
    "text": "performance then you should go native U but fundamentally web GPU",
    "start": "2042399",
    "end": "2047600"
  },
  {
    "text": "enables two things you can draw geometry geometry to textures and you can run computations on",
    "start": "2047600",
    "end": "2054720"
  },
  {
    "text": "the GPU so we finally arrived at the basics",
    "start": "2054720",
    "end": "2060040"
  },
  {
    "text": "now we'll see some code uh going forward so here's the outline I'll show it a",
    "start": "2060040",
    "end": "2065158"
  },
  {
    "text": "little bit more graphically uh so the first part is is you have to get everything ready here's your in initialization part and then you define",
    "start": "2065159",
    "end": "2072638"
  },
  {
    "text": "your stuff uh that you want to run and then you execute your stuff that's the",
    "start": "2072639",
    "end": "2077760"
  },
  {
    "text": "basic flow of a web GPU program h a more detailed view would look a little",
    "start": "2077760",
    "end": "2083720"
  },
  {
    "text": "something like this but we'll just picture this for now uh so let's go to",
    "start": "2083720",
    "end": "2089560"
  },
  {
    "text": "our outline and start with the initialization so it's an asynchronous API and it requires five steps before",
    "start": "2089560",
    "end": "2096320"
  },
  {
    "text": "you can use it so so first you going have to get a canvas then you have to request an adapter request a device set",
    "start": "2096320",
    "end": "2102640"
  },
  {
    "text": "the canvas context and configure the device context so let's look at how it looks in code first you have to have",
    "start": "2102640",
    "end": "2109880"
  },
  {
    "text": "defined a canvas in your HTML and then you just select it then you get",
    "start": "2109880",
    "end": "2115680"
  },
  {
    "text": "something called The Navigator do GPU and then you can request an adapter from it once you have your adapter you can",
    "start": "2115680",
    "end": "2122280"
  },
  {
    "text": "request the device and you ask the adapter to give you the device uh uh finally or not finally but",
    "start": "2122280",
    "end": "2130320"
  },
  {
    "text": "almost finally we set the canvas context to web GPU once you have all of that you",
    "start": "2130320",
    "end": "2135960"
  },
  {
    "text": "can configure the device context by getting your preferred canvas format and configuring it with the preferred device",
    "start": "2135960",
    "end": "2143000"
  },
  {
    "text": "and your format so in code it would you would probably test a little bit like do did",
    "start": "2143000",
    "end": "2149160"
  },
  {
    "text": "we get the adapter did we get the device Etc so it looks a little bit something like this uh now let's talk about shaders uh",
    "start": "2149160",
    "end": "2157680"
  },
  {
    "text": "so I mentioned shaders briefly earlier in the talk but it's kind of hard to know exactly what they",
    "start": "2157680",
    "end": "2164720"
  },
  {
    "text": "are because the name is kind of historical it it used to be very tied to",
    "start": "2164720",
    "end": "2170560"
  },
  {
    "text": "Graphics like you would put shade on things and determine how it would look but it has it's not very specific",
    "start": "2170560",
    "end": "2178760"
  },
  {
    "text": "anymore it has evolved so I'll leave you with a simple definition a Shader is GPU",
    "start": "2178760",
    "end": "2184560"
  },
  {
    "text": "code running on GPU Hardware so it can be graphical but it can also not be",
    "start": "2184560",
    "end": "2190079"
  },
  {
    "text": "graphical uh so let's look at the shaders in more detail uh there are",
    "start": "2190079",
    "end": "2195200"
  },
  {
    "text": "three main categories that you will be uh exposed to uh there exist more but",
    "start": "2195200",
    "end": "2200440"
  },
  {
    "text": "we'll focus on these three so we have the vertex Shader this one computes your",
    "start": "2200440",
    "end": "2205560"
  },
  {
    "text": "geometry by taking position data for independent points and directly",
    "start": "2205560",
    "end": "2212680"
  },
  {
    "text": "connected to that one is the fragment Shader which takes the geometry and determines what color each pix pixel",
    "start": "2212680",
    "end": "2219319"
  },
  {
    "text": "should have and finally you have the compute Shader which does",
    "start": "2219319",
    "end": "2224880"
  },
  {
    "text": "computations so let's the let's create the Shader module here uh in a second I",
    "start": "2224880",
    "end": "2230760"
  },
  {
    "text": "just want to say a couple of things first so it's written in the web GPU shading language or wigel for short uh",
    "start": "2230760",
    "end": "2237920"
  },
  {
    "text": "it has an rust inspired syntax and uh the reason they didn't go for any",
    "start": "2237920",
    "end": "2243119"
  },
  {
    "text": "existing shading languages is not because this one is inherently better it's just legal reasons so that's why",
    "start": "2243119",
    "end": "2248960"
  },
  {
    "text": "they did it uh and the Shader module looks a little bit something like this so let's deconstruct this code first you",
    "start": "2248960",
    "end": "2256200"
  },
  {
    "text": "defined our module and then we can label anything we create in web GPU and we",
    "start": "2256200",
    "end": "2261760"
  },
  {
    "text": "should do it I'll get back to this one later just note that there is a label here uh you have annotations this in uh",
    "start": "2261760",
    "end": "2269359"
  },
  {
    "text": "particular says that the next function that comes after this at vertex annotation is a vertex",
    "start": "2269359",
    "end": "2275400"
  },
  {
    "text": "Shader uh and then we have all other things like built-in uh vertex indexes",
    "start": "2275400",
    "end": "2281480"
  },
  {
    "text": "that we can use later uh we also have the return type this one will put a four-dimensional",
    "start": "2281480",
    "end": "2289359"
  },
  {
    "text": "vector in the built-in position and uh here we have a hardcoded triangle uh",
    "start": "2289359",
    "end": "2295839"
  },
  {
    "text": "notice that every single point that we have here is a two-dimensional Vector which is the coordinates of where it is",
    "start": "2295839",
    "end": "2302800"
  },
  {
    "text": "in the uh uh on the screen and uh notice also that even though we return a",
    "start": "2302800",
    "end": "2309680"
  },
  {
    "text": "four-dimensional vector we can give it three arguments because the first argument is actually a twood dimensional",
    "start": "2309680",
    "end": "2316280"
  },
  {
    "text": "Vector that we got from our array above uh here's the output location of",
    "start": "2316280",
    "end": "2321640"
  },
  {
    "text": "the fragment Shader uh we just say that anyone that's interested in whatever the fragment Shader decided can go look at",
    "start": "2321640",
    "end": "2328359"
  },
  {
    "text": "location zero and here we have the finded a function name is the same syntax as rust and finally here we have",
    "start": "2328359",
    "end": "2335800"
  },
  {
    "text": "RGB Alpha argument M ments so this one will output strictly",
    "start": "2335800",
    "end": "2341079"
  },
  {
    "text": "red uh and you may have noticed that all the coordinates for the points in the Triangle was in this in the room of",
    "start": "2341079",
    "end": "2348200"
  },
  {
    "text": "minus one to one and that's because every graphical thing is inside the clip space uh which is a coordinate system",
    "start": "2348200",
    "end": "2355560"
  },
  {
    "text": "that goes from minus one to one uh so you translate it so you don't have to",
    "start": "2355560",
    "end": "2361560"
  },
  {
    "text": "be uh contained by whatever screen size you have so it's kind of an abstraction on top of that",
    "start": "2361560",
    "end": "2368480"
  },
  {
    "text": "uh the pipelines is where you tell your you tell your device which shaders are",
    "start": "2368480",
    "end": "2375560"
  },
  {
    "text": "going to run and it can include all of them if you want to uh you have render pipelines and you have compute pipelines",
    "start": "2375560",
    "end": "2381839"
  },
  {
    "text": "so in general a pipeline takes in some data and runs its shaders that has been defined on it and then it outputs",
    "start": "2381839",
    "end": "2388480"
  },
  {
    "text": "whatever result it gets so here is the code for a",
    "start": "2388480",
    "end": "2393720"
  },
  {
    "text": "pipeline so let's deconstruct it so once again we have the label and here we have",
    "start": "2393720",
    "end": "2400880"
  },
  {
    "text": "you say you can see that we inside the vertex object uh gives it our module",
    "start": "2400880",
    "end": "2406880"
  },
  {
    "text": "that we just defined hello triangle and we give it an entry point this is where",
    "start": "2406880",
    "end": "2412440"
  },
  {
    "text": "this is the function name of our function that was annotated with at vertex and in the general case we do the",
    "start": "2412440",
    "end": "2418599"
  },
  {
    "text": "same thing here uh but the difference is that you may have some other fields so",
    "start": "2418599",
    "end": "2424359"
  },
  {
    "text": "here we we tell it which texture to render to and it's it's an array and the first uh the first entry in the array is",
    "start": "2424359",
    "end": "2433000"
  },
  {
    "text": "corresponding to at location zero uh so so far no work has been done",
    "start": "2433000",
    "end": "2441520"
  },
  {
    "text": "actually we have just defined things no computations has been run uh so remember",
    "start": "2441520",
    "end": "2446839"
  },
  {
    "text": "the host and device that we talked about in the architecture part we have to send",
    "start": "2446839",
    "end": "2451880"
  },
  {
    "text": "the commands to the device currently we're only at the host of side of things",
    "start": "2451880",
    "end": "2457079"
  },
  {
    "text": "and and we do that with the command encoder but what are these commands you",
    "start": "2457079",
    "end": "2462560"
  },
  {
    "text": "may Wonder uh so let's look into that we have our encoder here and the the",
    "start": "2462560",
    "end": "2467800"
  },
  {
    "text": "commands are anything that you need to in order to render or perform your compute and render passes so you may",
    "start": "2467800",
    "end": "2474680"
  },
  {
    "text": "have a render pass descriptor maybe you tell it which pipeline to use tell it to",
    "start": "2474680",
    "end": "2479880"
  },
  {
    "text": "draw the graphics and maybe you tell it oh now I'm finished so you complete that",
    "start": "2479880",
    "end": "2485160"
  },
  {
    "text": "and all of these commands that you have you just send them into the encoder one at a one at a time and then you get your",
    "start": "2485160",
    "end": "2492760"
  },
  {
    "text": "command buffer uh which you then put your encoder inside and then you can",
    "start": "2492760",
    "end": "2498839"
  },
  {
    "text": "submit it to the device uh once the thing has been once",
    "start": "2498839",
    "end": "2504040"
  },
  {
    "text": "the command buffer has been submitted to the device it is up to the device when it wants to compute it it's out of your",
    "start": "2504040",
    "end": "2509920"
  },
  {
    "text": "hands so in general it will get a lot of commands from different sources depending on how many apps",
    "start": "2509920",
    "end": "2516760"
  },
  {
    "text": "you're running at once so let's look at the render path descriptor that was the first uh thing we saw here uh it tells",
    "start": "2516760",
    "end": "2524160"
  },
  {
    "text": "you which textures to draw to and how to use them and it looks a little bit something like this so once again we",
    "start": "2524160",
    "end": "2530800"
  },
  {
    "text": "have a label to tell us what kind of thing it is uh and then we Define which",
    "start": "2530800",
    "end": "2536920"
  },
  {
    "text": "what our Target textures are and how it should perform its drawing uh so here we",
    "start": "2536920",
    "end": "2542000"
  },
  {
    "text": "get the current texture and creates a view and then our load operations says",
    "start": "2542000",
    "end": "2547280"
  },
  {
    "text": "every time we render a new texture what should we do and in this case i' I've",
    "start": "2547280",
    "end": "2553119"
  },
  {
    "text": "set it to clear so that means that between each render it will clear the entire screen with whatever the clear",
    "start": "2553119",
    "end": "2559839"
  },
  {
    "text": "value is so in this case it'll be it'll set the entire screen to some gray color",
    "start": "2559839",
    "end": "2564960"
  },
  {
    "text": "and then we store the result so now that we have our render pass descriptor we can finish our encoder so once again we",
    "start": "2564960",
    "end": "2573359"
  },
  {
    "text": "ask our device to create a command encoder and then we give it the render pass descriptor that we just",
    "start": "2573359",
    "end": "2580280"
  },
  {
    "text": "made and then we can do the things so we set our Pipeline and then we call draw",
    "start": "2580280",
    "end": "2585599"
  },
  {
    "text": "three times that is because we're drawing a single triangle so that's one time for each",
    "start": "2585599",
    "end": "2590800"
  },
  {
    "text": "vertex uh and then we say that our now our encoder is finished and we submit it",
    "start": "2590800",
    "end": "2596440"
  },
  {
    "text": "to the device so so far we have initialized web",
    "start": "2596440",
    "end": "2602200"
  },
  {
    "text": "GPU and we have hardcoded a red triangle it's not very interesting uh I",
    "start": "2602200",
    "end": "2608839"
  },
  {
    "text": "feel like something is missing because now we can't really do anything interesting because we're",
    "start": "2608839",
    "end": "2615319"
  },
  {
    "text": "missing data and variables it's not not a lot of interesting things in Computing",
    "start": "2615319",
    "end": "2620400"
  },
  {
    "text": "that can be done without data and variables so we use buffers for data and",
    "start": "2620400",
    "end": "2626280"
  },
  {
    "text": "here is an example of a buffer so the device as always creates things and we",
    "start": "2626280",
    "end": "2633440"
  },
  {
    "text": "as always label it because that's good to do you must know the data size of",
    "start": "2633440",
    "end": "2638559"
  },
  {
    "text": "whatever you're going to feed it because it's very static in this kind of world and then you tell it how you want it to",
    "start": "2638559",
    "end": "2645160"
  },
  {
    "text": "be used so this one in particular can be used as a storage and you can copy from it and copy to it and then we write the",
    "start": "2645160",
    "end": "2652200"
  },
  {
    "text": "buffer to the device so that's basically putting in device",
    "start": "2652200",
    "end": "2657319"
  },
  {
    "text": "memory uh we also have something called uniforms that are variables I won't show you a code for that now but that's",
    "start": "2657319",
    "end": "2663680"
  },
  {
    "text": "important to keep in mind and uh finally we have bind groups that make resources",
    "start": "2663680",
    "end": "2669319"
  },
  {
    "text": "available to the shaders so you have all your resources and uh you want to know",
    "start": "2669319",
    "end": "2674880"
  },
  {
    "text": "where to get them then you get your you create the bind grip you can label it",
    "start": "2674880",
    "end": "2680319"
  },
  {
    "text": "and tell it your layout and then you give it the entries and as here we can see that for binding zero we have a",
    "start": "2680319",
    "end": "2688480"
  },
  {
    "text": "buffer uh so in your Shader code you could do at binding zero and then get",
    "start": "2688480",
    "end": "2693640"
  },
  {
    "text": "your resource so now only one topic left and",
    "start": "2693640",
    "end": "2699200"
  },
  {
    "text": "we'll be done uh so error handling and debugging uh it's difficult in general",
    "start": "2699200",
    "end": "2704400"
  },
  {
    "text": "especially on gpus if you have large shaders or many shaders then when it fails it can fail spectacularly and you",
    "start": "2704400",
    "end": "2711280"
  },
  {
    "text": "won't know where it failed uh but good debugging is as you all know very important uh so it was",
    "start": "2711280",
    "end": "2718680"
  },
  {
    "text": "prioritized by the web GPU working group and they came up with labels among other",
    "start": "2718680",
    "end": "2724960"
  },
  {
    "text": "things uh and they are very useful uh seriously very useful you just have to",
    "start": "2724960",
    "end": "2730760"
  },
  {
    "text": "name them well so consider you have a codebase with one small Shader module",
    "start": "2730760",
    "end": "2736520"
  },
  {
    "text": "and you get this error wig Sal syntax in Shader module at line",
    "start": "2736520",
    "end": "2741960"
  },
  {
    "text": "10 that's not so bad we know exactly where to go we just go to our Shader mod",
    "start": "2741960",
    "end": "2747000"
  },
  {
    "text": "module at line 10 uh now consider you have a codebase with a thousand very large Shader modules and you get the",
    "start": "2747000",
    "end": "2753200"
  },
  {
    "text": "error wixel syntax error in Shader module line 10 that's not so good it's",
    "start": "2753200",
    "end": "2759520"
  },
  {
    "text": "very difficult to know where where you're supposed to be looking for your error uh however if it was something",
    "start": "2759520",
    "end": "2766480"
  },
  {
    "text": "like this where now we know it is exactly in our red triangle Shader at",
    "start": "2766480",
    "end": "2771800"
  },
  {
    "text": "line 10 much better and uh once you have all your fundamentals",
    "start": "2771800",
    "end": "2778000"
  },
  {
    "text": "you can put them together and get some trippy visuals uh it's lagging a little bit because it's just a quick Time video",
    "start": "2778000",
    "end": "2784520"
  },
  {
    "text": "running over and over in my presentation program uh but this is an example of what you can do with fragment shaders uh and",
    "start": "2784520",
    "end": "2792359"
  },
  {
    "text": "that's the entire presentation congratulations for making it through hope you learned something uh this has",
    "start": "2792359",
    "end": "2799040"
  },
  {
    "text": "been from Magic to mechanics demystifying GPU programming my name is Adam I compiled a small list of",
    "start": "2799040",
    "end": "2805880"
  },
  {
    "text": "resources that I think are good that you can access there it's a read me on GitHub and uh there are socials if",
    "start": "2805880",
    "end": "2812920"
  },
  {
    "text": "you're interested thank you for your time you've been a great audience [Applause]",
    "start": "2812920",
    "end": "2823989"
  },
  {
    "text": "are there any questions yes do parallel operations in",
    "start": "2825319",
    "end": "2831640"
  },
  {
    "text": "the browser and your networks are very parallelizable that mean we can start trading networks in the browser so the",
    "start": "2831640",
    "end": "2839359"
  },
  {
    "text": "question is that when you when you're able to access uh the GPU through your",
    "start": "2839359",
    "end": "2845040"
  },
  {
    "text": "browser can you then start training your neural networks in your browser and can",
    "start": "2845040",
    "end": "2851599"
  },
  {
    "text": "you do other things so yes basically I think you can because you have full access so it's probably going to be very",
    "start": "2851599",
    "end": "2858960"
  },
  {
    "text": "slow because consumer devices are probably not the best fit for actually training neural networks uh but you",
    "start": "2858960",
    "end": "2865400"
  },
  {
    "text": "could imagine a we're in a future where you go to some website and it asks to use web GPU and then it starts mining",
    "start": "2865400",
    "end": "2872680"
  },
  {
    "text": "Bitcoin for you uh so that that's possible because you have access to these",
    "start": "2872680",
    "end": "2878040"
  },
  {
    "text": "computors um but a more interesting point of view with regards to neural",
    "start": "2878040",
    "end": "2883440"
  },
  {
    "text": "networks that I've seen some people try try to work on is to use it as inference",
    "start": "2883440",
    "end": "2889200"
  },
  {
    "text": "uh Network so if you have uh some neural network that you've already trained and your users may be privacy focused and",
    "start": "2889200",
    "end": "2897079"
  },
  {
    "text": "they don't want to send all their data to your server in order to run inferences then maybe you could uh have",
    "start": "2897079",
    "end": "2903400"
  },
  {
    "text": "a web application that just gives them the model and then they use it on their own device uh so that's",
    "start": "2903400",
    "end": "2910599"
  },
  {
    "text": "one use case I've seen some people try to get up and running uh any other",
    "start": "2910599",
    "end": "2917440"
  },
  {
    "text": "questions yes you mentioned for Native that who does like goto or that you go",
    "start": "2917440",
    "end": "2923480"
  },
  {
    "text": "to is there a bit of a concern with Nvidia that being so Nvidia focused how",
    "start": "2923480",
    "end": "2930920"
  },
  {
    "text": "expensive gpus have become a little bit difficult to get sometimes yeah so the",
    "start": "2930920",
    "end": "2936960"
  },
  {
    "text": "question is if uh if there's any concern about Cuda being a source of like wender",
    "start": "2936960",
    "end": "2942839"
  },
  {
    "text": "lucking with Nvidia being so dominant expensive and sometimes difficult to get",
    "start": "2942839",
    "end": "2948680"
  },
  {
    "text": "I think a lot of people are very concerned with it um the uh the general",
    "start": "2948680",
    "end": "2953920"
  },
  {
    "text": "uh take on that is that for now it is probably the best place to go if you",
    "start": "2953920",
    "end": "2959359"
  },
  {
    "text": "want to do anything con related to machine learning at least because there's such a huge ecosystem of people",
    "start": "2959359",
    "end": "2965240"
  },
  {
    "text": "that know how to do it and it's so established and I think it generally has",
    "start": "2965240",
    "end": "2970680"
  },
  {
    "text": "a very good developer experience uh but you do have some competitors in the field that are trying to like ruffle the",
    "start": "2970680",
    "end": "2978000"
  },
  {
    "text": "feathers a little bit and and get their place so an example is open AI released",
    "start": "2978000",
    "end": "2983680"
  },
  {
    "text": "Triton which they themselves at least argued are is easier to get right than",
    "start": "2983680",
    "end": "2988920"
  },
  {
    "text": "Cuda and it it demands less expertise uh so I just want to check how",
    "start": "2988920",
    "end": "2995960"
  },
  {
    "text": "we're doing on time before before I take any more questions uh yeah we have a couple of",
    "start": "2995960",
    "end": "3002400"
  },
  {
    "text": "minutes left uh any other",
    "start": "3002400",
    "end": "3006078"
  },
  {
    "text": "questions I don't see anything then I'll let you leave hope you enjoy the rest of your conference feel free to grab me in",
    "start": "3008640",
    "end": "3015839"
  },
  {
    "text": "the hallway if you want to talk to more thank you [Applause]",
    "start": "3015839",
    "end": "3022869"
  }
]