[
  {
    "start": "0",
    "end": "191000"
  },
  {
    "text": "all right welcome everyone thank you for coming to this talk about data modeling",
    "start": "2220",
    "end": "7259"
  },
  {
    "text": "with document databases who here has heard that document databases are schema-less raise your hand",
    "start": "7259",
    "end": "13860"
  },
  {
    "text": "who here thinks that's a very scary thing to raise their hand",
    "start": "13860",
    "end": "19020"
  },
  {
    "text": "valid with statements like this a really tabloid headlines like this about",
    "start": "19020",
    "end": "24359"
  },
  {
    "text": "document databases we find that a lot of it is characterized in this way so much",
    "start": "24359",
    "end": "30000"
  },
  {
    "text": "that all we talk about is this schemalis thing that we can just do whatever we",
    "start": "30000",
    "end": "35219"
  },
  {
    "text": "want with there's field flexibility for all the documents that we are storing and what data model right it's flexible",
    "start": "35219",
    "end": "42660"
  },
  {
    "text": "it's schemaless you don't need it but what I'm here to tell you today is that this is actually a thing that is",
    "start": "42660",
    "end": "50219"
  },
  {
    "text": "necessary and that's why I am here today to talk to you about it while it",
    "start": "50219",
    "end": "55260"
  },
  {
    "text": "flexibility is great in theory it's actually not that great in reality in",
    "start": "55260",
    "end": "61140"
  },
  {
    "text": "fact reality dictates that all data has some sort of structure that's the whole reason why it is valuable the way that",
    "start": "61140",
    "end": "68280"
  },
  {
    "text": "we work with it the way that we interact with it in our applications the way that we make sense of it the way that we use",
    "start": "68280",
    "end": "74939"
  },
  {
    "text": "it the structure around the data that we're using is what makes it so necessary and so for that very fact we",
    "start": "74939",
    "end": "82740"
  },
  {
    "text": "know that we need to adhere to this and that's what I wanted to say was now",
    "start": "82740",
    "end": "87900"
  },
  {
    "text": "I'm going to talk to you about the developer's guide to data modeling with two else because we're in the UK here about document databases",
    "start": "87900",
    "end": "95159"
  },
  {
    "text": "the goals of this session are how to learn to create a data model in three",
    "start": "95159",
    "end": "100680"
  },
  {
    "text": "specific phases so we're going to learn a methodology that you can use that's an iterative methodology and that you can",
    "start": "100680",
    "end": "107159"
  },
  {
    "text": "use it as your application evolves then we're going to apply that methodology",
    "start": "107159",
    "end": "112200"
  },
  {
    "text": "we'll see how it works by applying it to a casino floor analytics application so I'm based in Las Vegas so I know a thing",
    "start": "112200",
    "end": "119399"
  },
  {
    "text": "or two about slot machines and where to go where not to go and so I figured this example will be a little bit different",
    "start": "119399",
    "end": "125759"
  },
  {
    "text": "than some of the examples you may be used to and finally the last thing which is also one of the most important things",
    "start": "125759",
    "end": "131879"
  },
  {
    "text": "is understanding what are we modeling for so just because we know how to do it it's very important to know what we are",
    "start": "131879",
    "end": "138959"
  },
  {
    "text": "aiming for and how those decisions impact how we develop the rest of the data model",
    "start": "138959",
    "end": "145319"
  },
  {
    "text": "so it is absolutely possible to develop a data model for document databases despite what you may have heard and",
    "start": "145319",
    "end": "151800"
  },
  {
    "text": "despite all the tabloids you may have seen and it's very very necessary to",
    "start": "151800",
    "end": "157200"
  },
  {
    "text": "have one it's necessary because the data model that you create impacts your",
    "start": "157200",
    "end": "162660"
  },
  {
    "text": "application's performance the difference of this could be between something like this this is kind of small but it is a",
    "start": "162660",
    "end": "169019"
  },
  {
    "text": "subreddit post about how mongodb has absolutely staggering performance and they probably had a data model that was",
    "start": "169019",
    "end": "175680"
  },
  {
    "text": "well taken care of well thought through and evolved and in the same subreddit you have I have such terrible issues",
    "start": "175680",
    "end": "182340"
  },
  {
    "text": "with mongodb performance is terrible why are we using this and I can guarantee you that a big part of that is how the",
    "start": "182340",
    "end": "189000"
  },
  {
    "text": "data model was created so let's go through how to build a data",
    "start": "189000",
    "end": "194819"
  },
  {
    "start": "191000",
    "end": "410000"
  },
  {
    "text": "model in three very particular phases the first phase in building a data model",
    "start": "194819",
    "end": "200340"
  },
  {
    "text": "with document databases is to make sense of your workload so what does that mean",
    "start": "200340",
    "end": "206220"
  },
  {
    "text": "in this phase it's a very much a discovery phase you're trying to make sense and gather everything there is",
    "start": "206220",
    "end": "213420"
  },
  {
    "text": "that you could possibly know about the data that you're working with in your application out of this you're going to",
    "start": "213420",
    "end": "219540"
  },
  {
    "text": "get a sense of a batch of inputs rather and in these inputs you'll want to list",
    "start": "219540",
    "end": "225799"
  },
  {
    "text": "qualify and quantify the operations that are running within your application what",
    "start": "225799",
    "end": "231540"
  },
  {
    "text": "are the most frequent operations what are the queries that you are running what are the ones that you have but are",
    "start": "231540",
    "end": "237540"
  },
  {
    "text": "not actually being run what are those like is it posts you know two posts per",
    "start": "237540",
    "end": "243720"
  },
  {
    "text": "second are you reading something a thousand times per second getting that",
    "start": "243720",
    "end": "248760"
  },
  {
    "text": "kind of granular detail is very very important for this particular input because you want to have a sense of what",
    "start": "248760",
    "end": "255420"
  },
  {
    "text": "operations are running in your application to help with that you can also comb",
    "start": "255420",
    "end": "260880"
  },
  {
    "text": "through your production logs and statistics especially if you have them and you you would want to put that to",
    "start": "260880",
    "end": "266160"
  },
  {
    "text": "good use so not only from this would you get the other operations that you may be using you may not be using you can also",
    "start": "266160",
    "end": "272639"
  },
  {
    "text": "measure how is your traffic like what are your average scenarios what are your spiky scenarios what are some things",
    "start": "272639",
    "end": "280139"
  },
  {
    "text": "that you may not anticipate but have logged in these particular logs so those are also very very good to have because",
    "start": "280139",
    "end": "286259"
  },
  {
    "text": "you can have a basis a baseline to measure from and then continue to measure against those as you continue to",
    "start": "286259",
    "end": "292199"
  },
  {
    "text": "iterate your data model from this you can also get current and predicted scenarios so let's say you're",
    "start": "292199",
    "end": "298800"
  },
  {
    "text": "growing your application or you open in another region or you extend some features in your application you can now",
    "start": "298800",
    "end": "305699"
  },
  {
    "text": "also keep track of what is happening when those are deployed as well as what predicted scenarios you might encounter",
    "start": "305699",
    "end": "312660"
  },
  {
    "text": "so similar to the spiky traffic or random quarter where you may have more traffic than anticipated you'll want to",
    "start": "312660",
    "end": "318419"
  },
  {
    "text": "keep track of those too and what's always a good idea is to",
    "start": "318419",
    "end": "323520"
  },
  {
    "text": "collaborate with a business domain expert so as developers we may be always in the weeds of the things we're only",
    "start": "323520",
    "end": "330000"
  },
  {
    "text": "very specifically focused on a particular feature or this particular story that we're implementing and",
    "start": "330000",
    "end": "336180"
  },
  {
    "text": "sometimes it's good to bring in somebody else to kind of help us remind us what other things we may be missing and look",
    "start": "336180",
    "end": "342780"
  },
  {
    "text": "at the bigger picture of all the possible pieces of data that may be running through our application",
    "start": "342780",
    "end": "350060"
  },
  {
    "text": "so we take all of these inputs everything that we could possibly have about how our application is using our",
    "start": "350460",
    "end": "356699"
  },
  {
    "text": "data we take that and out of that we should get a list of outputs we should",
    "start": "356699",
    "end": "361860"
  },
  {
    "text": "get the operations that we have we should get queries that are most",
    "start": "361860",
    "end": "367319"
  },
  {
    "text": "important queries that are not being used queries that are missing similarly we'll get the data sizes that",
    "start": "367319",
    "end": "374039"
  },
  {
    "text": "we have some estimates and also some real sizes based on the logs and things",
    "start": "374039",
    "end": "379440"
  },
  {
    "text": "as we have discovered all of the data we get the indexes again that we have that we are missing and we also get a lot of",
    "start": "379440",
    "end": "386819"
  },
  {
    "text": "the assumptions that we are making about our application",
    "start": "386819",
    "end": "391940"
  },
  {
    "text": "so we take all of that information because all of those pieces will definitely play a part in how we develop",
    "start": "392460",
    "end": "398520"
  },
  {
    "text": "our data model and we kind of feed that into the next phase which is to map out and the identify the relationships that",
    "start": "398520",
    "end": "405720"
  },
  {
    "text": "we find as part of the data that we have made sense of so in this phase we do two things and",
    "start": "405720",
    "end": "413099"
  },
  {
    "start": "410000",
    "end": "504000"
  },
  {
    "text": "this can take a while right we do this as we see necessary the first part of",
    "start": "413099",
    "end": "418800"
  },
  {
    "text": "this is to quantify and identify relationships so who here has seen this",
    "start": "418800",
    "end": "424199"
  },
  {
    "text": "notation and who knows of these relationships one to one one to many many to many okay",
    "start": "424199",
    "end": "430500"
  },
  {
    "text": "it's very similar in document databases so if you come from a relational database background this similar",
    "start": "430500",
    "end": "436199"
  },
  {
    "text": "Crawford notation this applies in document databases too we have one-to-one relationships we have one to",
    "start": "436199",
    "end": "442259"
  },
  {
    "text": "many and we have many to many and one thing that we did find when working with document databases and as the amount of",
    "start": "442259",
    "end": "449280"
  },
  {
    "text": "data that we were able to capture grew we actually found we needed to add another type of relationship something",
    "start": "449280",
    "end": "455039"
  },
  {
    "text": "called one to zillions so with all the data that we are capturing we found that this is another",
    "start": "455039",
    "end": "461539"
  },
  {
    "text": "relationship that was needed to capture and modify how we describe our our data",
    "start": "461539",
    "end": "469440"
  },
  {
    "text": "and with that how we would notate this particular relationship is you would",
    "start": "469440",
    "end": "474660"
  },
  {
    "text": "list the minimum which is usually zero or one we list the likely amount so this",
    "start": "474660",
    "end": "480240"
  },
  {
    "text": "is where having that information from the first phase is very helpful because you can have an estimate or an average",
    "start": "480240",
    "end": "485940"
  },
  {
    "text": "scenario and then you have the maximum amount of this particular relationship this could go way way into the the",
    "start": "485940",
    "end": "492900"
  },
  {
    "text": "millions the hundreds of millions uh you know thinking about iot sensor data or just anything that has a really really",
    "start": "492900",
    "end": "499440"
  },
  {
    "text": "high scale that could apply to this particular relationship",
    "start": "499440",
    "end": "504620"
  },
  {
    "start": "504000",
    "end": "655000"
  },
  {
    "text": "so once you've found all of those relationships and you find the most important ones and you designate to what",
    "start": "505319",
    "end": "511080"
  },
  {
    "text": "type of relationship they are the next thing to decide is do you link it or do",
    "start": "511080",
    "end": "516120"
  },
  {
    "text": "you embed it and how many people are going wait what's linking and what's embedding",
    "start": "516120",
    "end": "521820"
  },
  {
    "text": "does that sound okay cool this is going to be useful for some of you so linking and embedding is very very",
    "start": "521820",
    "end": "528899"
  },
  {
    "text": "easy to understand because one of it you most likely understand already if you come from a relational background",
    "start": "528899",
    "end": "535560"
  },
  {
    "text": "so linking here we have a simple document and I might zoom in because I",
    "start": "535560",
    "end": "540660"
  },
  {
    "text": "know that when I checked from the back it was quite uh hard to read",
    "start": "540660",
    "end": "546779"
  },
  {
    "text": "so we have a very very simple document here a casino document and it lists the names",
    "start": "546779",
    "end": "553920"
  },
  {
    "text": "the nicknames of this particular Casino the year at open Etc some information",
    "start": "553920",
    "end": "559200"
  },
  {
    "text": "about that linking just says we have some other information",
    "start": "559200",
    "end": "564959"
  },
  {
    "text": "that is stored in a different document in this case the owner and we are getting that information very",
    "start": "564959",
    "end": "571980"
  },
  {
    "text": "similarly to a foreign key relationship so we use some sort of identifier to help us see what information is related",
    "start": "571980",
    "end": "578940"
  },
  {
    "text": "to this particular document and so here we have owner with an ID of three and that essentially is linking it's",
    "start": "578940",
    "end": "585839"
  },
  {
    "text": "very very similar almost exactly the same as foreign key relationships embedding on the other hand sounds",
    "start": "585839",
    "end": "592200"
  },
  {
    "text": "exactly like what embedding sounds like so instead of having this in two separate places we will probably take",
    "start": "592200",
    "end": "598380"
  },
  {
    "text": "the most necessary information or the information that we find we are always querying",
    "start": "598380",
    "end": "604260"
  },
  {
    "text": "together and we take that information in this case the name the headquarters and when it was founded and we embed it into",
    "start": "604260",
    "end": "612240"
  },
  {
    "text": "the parent document so obviously in this particular scenario you'll know that",
    "start": "612240",
    "end": "617579"
  },
  {
    "text": "because we embed it here that doesn't necessarily mean we get rid of the other document where the owner information is",
    "start": "617579",
    "end": "624420"
  },
  {
    "text": "so with embedding there will come some data duplication but the benefit of this is that when you embed things you",
    "start": "624420",
    "end": "631560"
  },
  {
    "text": "usually want to do that when you're working with document databases because one of the core things to remember about",
    "start": "631560",
    "end": "637440"
  },
  {
    "text": "working with document databases is that data that is accessed together should stay together and so if we find that we",
    "start": "637440",
    "end": "644399"
  },
  {
    "text": "are querying for this casino information and find that we always need that owner information it's most likely a good idea",
    "start": "644399",
    "end": "650760"
  },
  {
    "text": "to just embed that",
    "start": "650760",
    "end": "653779"
  },
  {
    "start": "655000",
    "end": "755000"
  },
  {
    "text": "so depending on the type of relationship that we have in our application we'll",
    "start": "656459",
    "end": "662579"
  },
  {
    "text": "find that there are some pros and cons to whether or not we decide to link or to embed so if we go through and look at",
    "start": "662579",
    "end": "668760"
  },
  {
    "text": "the first one if we embed things in parent documents for one to one and one to many relationships the benefit of",
    "start": "668760",
    "end": "675300"
  },
  {
    "text": "this is that we'll have a single read right we're taking the information that we need that we're going to most likely",
    "start": "675300",
    "end": "680519"
  },
  {
    "text": "access at the same time we embed it in the parent document and we'll have ideally a single read and that also",
    "start": "680519",
    "end": "688320"
  },
  {
    "text": "lends itself to having less complicated joins or less queries in the in what",
    "start": "688320",
    "end": "694140"
  },
  {
    "text": "we're doing and in many many-to-many relationship we will also again have a single read but as I mentioned you'll",
    "start": "694140",
    "end": "700740"
  },
  {
    "text": "have some duplication of information in the document Linked In parent",
    "start": "700740",
    "end": "706260"
  },
  {
    "text": "document oh I have a I have a laser pointer okay in the",
    "start": "706260",
    "end": "711660"
  },
  {
    "text": "document LinkedIn parent uh document the other hand here is if you do have linking you will have smaller reads and",
    "start": "711660",
    "end": "718260"
  },
  {
    "text": "you will have many reads so it's important to take into account what is more important for your application do",
    "start": "718260",
    "end": "724560"
  },
  {
    "text": "you need quicker performance or can you get by with multiple reads but smaller reads because you have less in memory so",
    "start": "724560",
    "end": "731220"
  },
  {
    "text": "that's something to take into consideration when you are deciding whether to embed or to link and then one",
    "start": "731220",
    "end": "737040"
  },
  {
    "text": "other thing that's actually not part of this chart is if you have that one to zillions type of relationship you'll",
    "start": "737040",
    "end": "743459"
  },
  {
    "text": "most likely want to link this is where linking is actually more encouraged we",
    "start": "743459",
    "end": "748860"
  },
  {
    "text": "actually discourage embedding just because of the vast amount of data that you're working with",
    "start": "748860",
    "end": "755899"
  },
  {
    "text": "so we've made sense of our workload you know what kind of data we're working with we know what kind of operations",
    "start": "755899",
    "end": "761880"
  },
  {
    "text": "we're running and then we found out what the most important relationships are the structure of our data how it's being",
    "start": "761880",
    "end": "767940"
  },
  {
    "text": "used in our application and bonus you actually have a data model at",
    "start": "767940",
    "end": "773760"
  },
  {
    "text": "the end of this phase so one caveat here is that this next pattern or this next",
    "start": "773760",
    "end": "779700"
  },
  {
    "text": "phase here of applying design patterns you may not actually have to go through this phase what we encourage is as you",
    "start": "779700",
    "end": "787200"
  },
  {
    "text": "go through phase one and you go through phase two and you apply that data model to your application you don't",
    "start": "787200",
    "end": "794519"
  },
  {
    "text": "necessarily apply phase three unless you start seeing the need for it the need for it means you start witnessing some",
    "start": "794519",
    "end": "801540"
  },
  {
    "text": "performance issues or you find a degradation and performance of two specific threshold that your application",
    "start": "801540",
    "end": "808320"
  },
  {
    "text": "cannot tolerate when you start finding these types of scenarios that's when you want to apply design patterns so you",
    "start": "808320",
    "end": "816060"
  },
  {
    "text": "don't need to apply design patterns at the beginning but we'll talk more about when you decide when to actually do this",
    "start": "816060",
    "end": "822420"
  },
  {
    "text": "when we talk about what you're modeling for so let's say we don't do go through and",
    "start": "822420",
    "end": "827820"
  },
  {
    "text": "apply design patterns let's go through what those are so what is a design",
    "start": "827820",
    "end": "832860"
  },
  {
    "text": "pattern in this particular case it's a reusable solution to a commonly",
    "start": "832860",
    "end": "838019"
  },
  {
    "text": "recurring problem right we have patterns in computer science we have patterns when we are writing code and it's very",
    "start": "838019",
    "end": "845100"
  },
  {
    "text": "similar here when we're doing data modeling so in this particular case it applies to the data structuring model",
    "start": "845100",
    "end": "851820"
  },
  {
    "text": "that solves common use cases so depending on the type of application that we're creating or depending on the",
    "start": "851820",
    "end": "857760"
  },
  {
    "text": "problem that we are solving there is a way to model the data that actually accounts for that specific problem",
    "start": "857760",
    "end": "866120"
  },
  {
    "start": "865000",
    "end": "1000000"
  },
  {
    "text": "so what design patterns are available I'll have a caveat here there are about",
    "start": "866220",
    "end": "871620"
  },
  {
    "text": "12 design patterns and that could be its own talk I will go through about a few today the ones that we're going to go",
    "start": "871620",
    "end": "877440"
  },
  {
    "text": "through our example but just keep in mind that there are others that account for other scenarios",
    "start": "877440",
    "end": "884519"
  },
  {
    "text": "so we'll start with the polymorphic pattern who here has heard of the word polymorphic",
    "start": "884519",
    "end": "891600"
  },
  {
    "text": "good so you already know this pattern which is great so polymorphic is the basis for most of the design patterns",
    "start": "891600",
    "end": "898380"
  },
  {
    "text": "and what this means is that because documents are flexible and",
    "start": "898380",
    "end": "904920"
  },
  {
    "text": "because they don't have to look the same in every single document that's all that polymorphic really means the added bit",
    "start": "904920",
    "end": "912480"
  },
  {
    "text": "to this is that they can look different and exist in the same collection so",
    "start": "912480",
    "end": "917940"
  },
  {
    "text": "let's see an example here so let's say as part of this application",
    "start": "917940",
    "end": "924180"
  },
  {
    "text": "or a different application rather sports betting or something that keeps track of athletes and when you look at the vast",
    "start": "924180",
    "end": "930959"
  },
  {
    "text": "array of athletes there are different types of athletes and different type of athletes weren't keeping different types",
    "start": "930959",
    "end": "936420"
  },
  {
    "text": "of fields or information about them so here we have the late great Kobe Bryant",
    "start": "936420",
    "end": "941579"
  },
  {
    "text": "who is a star basketball player and we also have Serena Williams here and the",
    "start": "941579",
    "end": "946680"
  },
  {
    "text": "similar information that we're keeping with these athletes are the sport that they're playing their name and their",
    "start": "946680",
    "end": "953459"
  },
  {
    "text": "career earnings what's different is obviously depending on the sport that they played so for Kobe Bryant we're also having NBA",
    "start": "953459",
    "end": "960240"
  },
  {
    "text": "championships and if they're in the Hall of Fame whereas with Serena Williams we're keeping track of the event that",
    "start": "960240",
    "end": "966240"
  },
  {
    "text": "she is playing now because Serena Williams plays tennis there are also different events in",
    "start": "966240",
    "end": "972959"
  },
  {
    "text": "tennis right there could be things like this where she plays in both singles and in doubles type events so polymorphic",
    "start": "972959",
    "end": "981000"
  },
  {
    "text": "just means that this particular type of document though very different than Kobe Bryant's document can exist in the same",
    "start": "981000",
    "end": "988079"
  },
  {
    "text": "collection of athletes and that's just important to remember for the rest of the design patterns that we have here",
    "start": "988079",
    "end": "994079"
  },
  {
    "text": "that two different types of documents can exist within a single collection",
    "start": "994079",
    "end": "1000339"
  },
  {
    "start": "1000000",
    "end": "1105000"
  },
  {
    "text": "the next pattern I want to talk to you about is something called the attribute pattern so this one is useful for",
    "start": "1000759",
    "end": "1007399"
  },
  {
    "text": "problems where if you have a really large amount of documents or big documents but you're only querying on a",
    "start": "1007399",
    "end": "1014240"
  },
  {
    "text": "very specific subset of fields so let's say in this particular example that we",
    "start": "1014240",
    "end": "1019820"
  },
  {
    "text": "want to search for movies based on release date and you'll know that this is a problem",
    "start": "1019820",
    "end": "1025038"
  },
  {
    "text": "because movies don't get released on the same day they get released on different",
    "start": "1025039",
    "end": "1030860"
  },
  {
    "text": "dates in different countries around the world and so if we modeled our data in this",
    "start": "1030860",
    "end": "1036380"
  },
  {
    "text": "way if we had a top level field for every release date that causes a problem",
    "start": "1036380",
    "end": "1042380"
  },
  {
    "text": "right it poses a problem because we know that we're searching for it that means we're going to have to have an index for",
    "start": "1042380",
    "end": "1047900"
  },
  {
    "text": "every single top level field that we have here instead we can apply the",
    "start": "1047900",
    "end": "1053840"
  },
  {
    "text": "attribute pattern to this particular example and do something like this",
    "start": "1053840",
    "end": "1060220"
  },
  {
    "text": "we take the attribute that we know that we're going to search on and we add it",
    "start": "1060260",
    "end": "1065600"
  },
  {
    "text": "into an array we make it a key value pair that we know that we're going to be searching on so instead of having a top",
    "start": "1065600",
    "end": "1072500"
  },
  {
    "text": "level field for every single country which can grow and grow and grow we post",
    "start": "1072500",
    "end": "1077539"
  },
  {
    "text": "it in this way and what this does is now our indexes become more simple in fact",
    "start": "1077539",
    "end": "1083299"
  },
  {
    "text": "we only have to do a single one very directly towards the location and date",
    "start": "1083299",
    "end": "1088640"
  },
  {
    "text": "attribute so the pros of this is that obviously fewer indexes are needed and",
    "start": "1088640",
    "end": "1093679"
  },
  {
    "text": "queries become much simpler to write because we don't have to go through and start filtering on all the particular",
    "start": "1093679",
    "end": "1099980"
  },
  {
    "text": "release date fields if they were at a top level",
    "start": "1099980",
    "end": "1104559"
  },
  {
    "start": "1105000",
    "end": "1235000"
  },
  {
    "text": "finally there's something called the document versioning pattern and this is very very useful because this is",
    "start": "1107360",
    "end": "1113240"
  },
  {
    "text": "something that can be applied even to existing systems today this is very very useful when you need",
    "start": "1113240",
    "end": "1119600"
  },
  {
    "text": "to have a current state of something but you also need to keep the history of any revisions that have been made to your",
    "start": "1119600",
    "end": "1126620"
  },
  {
    "text": "data the other caveat to this is that usually those changes don't occur that often but it's still important to keep",
    "start": "1126620",
    "end": "1133460"
  },
  {
    "text": "track of those changes so a really really good example unfortunately somewhat boring example is insurance so",
    "start": "1133460",
    "end": "1140840"
  },
  {
    "text": "when you get insurance most people get a standard policy writer you have some basic things that are covered and that's",
    "start": "1140840",
    "end": "1148340"
  },
  {
    "text": "how you are stored in a potential an application that keeps track of all the",
    "start": "1148340",
    "end": "1153919"
  },
  {
    "text": "people that get insurance and so for this case we have Bilbo Baggins here and when they first received their",
    "start": "1153919",
    "end": "1161840"
  },
  {
    "text": "insurance the only thing that he really had to ensure was the Elven sword so at the beginning of this we would store",
    "start": "1161840",
    "end": "1167960"
  },
  {
    "text": "Bilbo into our collection of current policies and we will store him in there",
    "start": "1167960",
    "end": "1174140"
  },
  {
    "text": "just like this we have an identifier the name and the key here is this particular",
    "start": "1174140",
    "end": "1179480"
  },
  {
    "text": "identifier the revision so now what happens is let's say Bilbo",
    "start": "1179480",
    "end": "1184940"
  },
  {
    "text": "has something else to ensure he has a new one ring that he now wants to absolutely add to his insurance policy",
    "start": "1184940",
    "end": "1191419"
  },
  {
    "text": "what will happen now is we'll create a new document in a separate collection this could be called the policy",
    "start": "1191419",
    "end": "1198200"
  },
  {
    "text": "revisions collection this is the history of changes that we're keeping track of and we will add that Old State so now we",
    "start": "1198200",
    "end": "1205940"
  },
  {
    "text": "will add what his old Insurance look like and now we'll have the current state here where it's the only changes he",
    "start": "1205940",
    "end": "1212840"
  },
  {
    "text": "added something to the items insured and the versioning is kept by this revision",
    "start": "1212840",
    "end": "1218900"
  },
  {
    "text": "identifier so keeping it in this way allows us to always have the current state available",
    "start": "1218900",
    "end": "1225100"
  },
  {
    "text": "and always allows us to have a history of all of the particular",
    "start": "1225100",
    "end": "1230500"
  },
  {
    "text": "insurance states that Bilbo has had",
    "start": "1230500",
    "end": "1235580"
  },
  {
    "start": "1235000",
    "end": "1288000"
  },
  {
    "text": "the cons of this particular pattern though is that it does double the number of writes so every time you do make a",
    "start": "1235580",
    "end": "1242059"
  },
  {
    "text": "change to the current policy of somebody you have to create a new document to keep track of whatever the old state was",
    "start": "1242059",
    "end": "1248860"
  },
  {
    "text": "and the queries also need to Target the right collection so depending on how you",
    "start": "1248860",
    "end": "1255440"
  },
  {
    "text": "um how you separate how you're keeping track of all of the changes you need to",
    "start": "1255440",
    "end": "1260539"
  },
  {
    "text": "make sure that you are targeting whatever is the place that you are holding all of the current states in the",
    "start": "1260539",
    "end": "1266900"
  },
  {
    "text": "pros to this though is that like I said it's very easy to implement all you really need to add is some sort of",
    "start": "1266900",
    "end": "1272600"
  },
  {
    "text": "revision identifier or any type of identifier that tells you this is the most recent",
    "start": "1272600",
    "end": "1278720"
  },
  {
    "text": "one and there are no performance impact on queries on the latest revision assuming",
    "start": "1278720",
    "end": "1285020"
  },
  {
    "text": "you target the right one and that's just three out of the other",
    "start": "1285020",
    "end": "1291500"
  },
  {
    "start": "1288000",
    "end": "1333000"
  },
  {
    "text": "types of design patterns that are available here so the ones that we went",
    "start": "1291500",
    "end": "1297559"
  },
  {
    "text": "through are the polymorphic which you'll see here the top use cases where you would see this and you would benefit",
    "start": "1297559",
    "end": "1303260"
  },
  {
    "text": "most of from our catalog type of applications content management and",
    "start": "1303260",
    "end": "1308900"
  },
  {
    "text": "mobile applications we talked about the attribute pattern which is similar along with single view type of applications",
    "start": "1308900",
    "end": "1315200"
  },
  {
    "text": "and we also talked about the document versioning which is also a good use case for personalization so if you're",
    "start": "1315200",
    "end": "1321679"
  },
  {
    "text": "interested there's actually a really really good blog series from Ken Elgar who wrote about all of the patterns and",
    "start": "1321679",
    "end": "1328520"
  },
  {
    "text": "I will tweet that out later to you if you want to read more about them foreign",
    "start": "1328520",
    "end": "1334220"
  },
  {
    "text": "and that's it at the end of this three phases you have a data model that you should be happy with and should be",
    "start": "1334220",
    "end": "1340400"
  },
  {
    "text": "working for the application that you have what's important to note is that once you reach this end even if you get",
    "start": "1340400",
    "end": "1347240"
  },
  {
    "text": "to the point where you go through the data phases or the third phase and apply design patterns you can continue to go",
    "start": "1347240",
    "end": "1354500"
  },
  {
    "text": "through this as your application evolves so like I said if you start to see performance issues or you find that your",
    "start": "1354500",
    "end": "1360860"
  },
  {
    "text": "application is growing and has other features then you can go through this process again and that's kind of",
    "start": "1360860",
    "end": "1366380"
  },
  {
    "text": "encouraged you want to go through this methodology as many times as necessary so that you're happy with the data model",
    "start": "1366380",
    "end": "1372740"
  },
  {
    "text": "that you have and it fits with the application that you are building",
    "start": "1372740",
    "end": "1377740"
  },
  {
    "text": "so we've seen how right what is the methodology now let's go through an actual example so hopefully it will",
    "start": "1378140",
    "end": "1384559"
  },
  {
    "text": "stick a little bit more the first phase is to make sense of our",
    "start": "1384559",
    "end": "1389780"
  },
  {
    "start": "1386000",
    "end": "1472000"
  },
  {
    "text": "workload right so for casino floor analytics who here has been to Las Vegas raise your hand",
    "start": "1389780",
    "end": "1395240"
  },
  {
    "text": "okay who here knows that it's more than casinos and strip clubs and buffets and",
    "start": "1395240",
    "end": "1402320"
  },
  {
    "text": "there's one hand in the okay two hands in the back that's good well if you're ever in Las Vegas I would love to show",
    "start": "1402320",
    "end": "1407659"
  },
  {
    "text": "you the other side of Las Vegas where it's actually a nice place to live but a casino looks like this it's very dark on",
    "start": "1407659",
    "end": "1415100"
  },
  {
    "text": "purpose uh you don't know what time it is they want you to be disillusioned to",
    "start": "1415100",
    "end": "1420200"
  },
  {
    "text": "not know what time it is you have your table games you have your slot machines",
    "start": "1420200",
    "end": "1425860"
  },
  {
    "text": "you it's it's a maze and it's made that way because they want you to stay there",
    "start": "1425860",
    "end": "1431179"
  },
  {
    "text": "and give all the money away and give it to the house right and gamble it all away",
    "start": "1431179",
    "end": "1436760"
  },
  {
    "text": "now for our Casino analytics application we will focus on particularly the slot",
    "start": "1436760",
    "end": "1442159"
  },
  {
    "text": "machines so we want to keep track of how our slot machines are doing in our casinos",
    "start": "1442159",
    "end": "1447559"
  },
  {
    "text": "so with this comes all kinds of pieces of information with slot machines there's the wind chance rate there's",
    "start": "1447559",
    "end": "1454159"
  },
  {
    "text": "jackpots that we have to keep track of there's bonus structures that may change either because the Nevada gaming",
    "start": "1454159",
    "end": "1460760"
  },
  {
    "text": "commission changes the limits on them or the casino tweaks them a little bit there's all types of things that we need",
    "start": "1460760",
    "end": "1467419"
  },
  {
    "text": "to take into account in this casino floor analytics application",
    "start": "1467419",
    "end": "1473120"
  },
  {
    "start": "1472000",
    "end": "1604000"
  },
  {
    "text": "and so we'll start with that first phase right we have to make a sense of our",
    "start": "1473120",
    "end": "1479000"
  },
  {
    "text": "workload so after we go through all of those inputs that we may have we find that these are the most important or the",
    "start": "1479000",
    "end": "1485960"
  },
  {
    "text": "most commonly recurring operations maybe we have some query that tells us the",
    "start": "1485960",
    "end": "1491299"
  },
  {
    "text": "total player game time that is a right that occurs and we can get this because",
    "start": "1491299",
    "end": "1496880"
  },
  {
    "text": "every time a player inserts their card into a slot machine we can tap into that",
    "start": "1496880",
    "end": "1501980"
  },
  {
    "text": "we can tap into whenever they insert the card and remove the card and we have the total player time there we have a few",
    "start": "1501980",
    "end": "1508460"
  },
  {
    "text": "reads here we have the win chance rate which again Sim is set by the Nevada gaming commission we have anomalies and",
    "start": "1508460",
    "end": "1514940"
  },
  {
    "text": "win rates which not only on table games but I don't know if you've ever seen any documentaries on how casinos are run",
    "start": "1514940",
    "end": "1521179"
  },
  {
    "text": "there's a million cameras there's heat sensors there's all kinds of things to detect if somebody is cheating or not",
    "start": "1521179",
    "end": "1528500"
  },
  {
    "text": "and if they had a legitimate win at any of the games in the casino because that's very important we have the top",
    "start": "1528500",
    "end": "1535400"
  },
  {
    "text": "slot machines that are played so again not only we can tap into how long people are playing how many times do they go",
    "start": "1535400",
    "end": "1542120"
  },
  {
    "text": "back to that particular slot machine how many times has a jackpot been won on a",
    "start": "1542120",
    "end": "1547220"
  },
  {
    "text": "particular slot machine there's so many different pieces of information that can be captured through these actions that",
    "start": "1547220",
    "end": "1554059"
  },
  {
    "text": "occur within a casino and finally there is a jackpot increases query that we have which is another",
    "start": "1554059",
    "end": "1559940"
  },
  {
    "text": "right so if you've ever been to a casino there are some groups of slot machines",
    "start": "1559940",
    "end": "1564980"
  },
  {
    "text": "that usually they're in a circle or they're in a row but they all contribute to the same jackpot and you'll see the",
    "start": "1564980",
    "end": "1571760"
  },
  {
    "text": "jackpot continues to increase and increase and increase and as people play and nobody wins that jackpot continues",
    "start": "1571760",
    "end": "1578059"
  },
  {
    "text": "to increase when somebody wins that jackpot it resets and goes and continues to increase as more people play",
    "start": "1578059",
    "end": "1585460"
  },
  {
    "text": "sometimes this group of slot machines is just in a single Casino other times",
    "start": "1585460",
    "end": "1590600"
  },
  {
    "text": "there's a whole network where actually multiple groups of slot machines all combine into a single jackpot that could",
    "start": "1590600",
    "end": "1597740"
  },
  {
    "text": "expand across multiple casinos so that is what is taken into account here for these jackpot increases",
    "start": "1597740",
    "end": "1605059"
  },
  {
    "start": "1604000",
    "end": "1649000"
  },
  {
    "text": "so those are the most important operations we have found for our particular application now the next phase is to map out and identify the",
    "start": "1605059",
    "end": "1612440"
  },
  {
    "text": "relationships that we see within these particular pieces of data we find that we actually have quite a",
    "start": "1612440",
    "end": "1620179"
  },
  {
    "text": "few one-to-many relationships right for slots and casinos that's actually a one-to-one because every physical slot",
    "start": "1620179",
    "end": "1626779"
  },
  {
    "text": "machine can only ever exist in a single Casino can only physically ever be there",
    "start": "1626779",
    "end": "1632480"
  },
  {
    "text": "one single time can't be in two places at once and then the rest of our relationships we find that the most",
    "start": "1632480",
    "end": "1638299"
  },
  {
    "text": "important entities we have are the slots right we have the casinos we have the",
    "start": "1638299",
    "end": "1643820"
  },
  {
    "text": "players and then the different types of games and bonuses that we have",
    "start": "1643820",
    "end": "1649720"
  },
  {
    "start": "1649000",
    "end": "1930000"
  },
  {
    "text": "laughs and finally we will be applying a few design patterns to our particular",
    "start": "1649760",
    "end": "1655039"
  },
  {
    "text": "data model and what our data model could look like is something like this so I'm going to zoom in because I know it's a little",
    "start": "1655039",
    "end": "1661159"
  },
  {
    "text": "hard to read so out of the entities that we have we",
    "start": "1661159",
    "end": "1668179"
  },
  {
    "text": "find that we have a slot entity that we need to keep track of some data here for",
    "start": "1668179",
    "end": "1673820"
  },
  {
    "text": "like the manufacturer the location serial number Etc we have the jackpots",
    "start": "1673820",
    "end": "1679580"
  },
  {
    "text": "we have casinos and we have our players and these are",
    "start": "1679580",
    "end": "1685880"
  },
  {
    "text": "the most key entities that we need for our particular application",
    "start": "1685880",
    "end": "1691898"
  },
  {
    "text": "we'll start with the first decision which is deciding to embed these particular pieces of information",
    "start": "1692480",
    "end": "1699440"
  },
  {
    "text": "so for slots we have opted to embed bonuses because and you'll see here it's",
    "start": "1699440",
    "end": "1705320"
  },
  {
    "text": "slightly attribute pattern here which I'm already getting ahead of myself but we've embedded the bonuses because as we",
    "start": "1705320",
    "end": "1710539"
  },
  {
    "text": "query for our slot machines we find that we always look up the bonuses as well",
    "start": "1710539",
    "end": "1715880"
  },
  {
    "text": "for jackpots we want to know the participating slot machines that are contributing to that particular jackpot",
    "start": "1715880",
    "end": "1721640"
  },
  {
    "text": "so we've embedded that information for casinos we usually query them trying",
    "start": "1721640",
    "end": "1727520"
  },
  {
    "text": "to look for what the top slots are so that piece is also embedded into our casinos document",
    "start": "1727520",
    "end": "1734179"
  },
  {
    "text": "and then we have opted to embed both the membership and the contact information for our players because sometimes they",
    "start": "1734179",
    "end": "1742580"
  },
  {
    "text": "can have multiple memberships at multiple casinos and their contact information is usually always needed",
    "start": "1742580",
    "end": "1749899"
  },
  {
    "text": "anytime we need to query for a player so those are the embedded decisions that",
    "start": "1749899",
    "end": "1756020"
  },
  {
    "text": "we have made as part of our data model for our document versioning pattern we have applied that here for both the",
    "start": "1756020",
    "end": "1763340"
  },
  {
    "text": "slots and for the players because as their",
    "start": "1763340",
    "end": "1769580"
  },
  {
    "text": "information changes let's say their contact information changes or their state changes maybe they were a high",
    "start": "1769580",
    "end": "1776059"
  },
  {
    "text": "roller they had one really bad weekend in Las Vegas and they're no longer a high roller that kind of change is",
    "start": "1776059",
    "end": "1781700"
  },
  {
    "text": "something that we want to keep track of similarly to these slots we've opted to",
    "start": "1781700",
    "end": "1787039"
  },
  {
    "text": "use the document versioning pattern here because the slots configuration doesn't change that often but we do want to keep",
    "start": "1787039",
    "end": "1793820"
  },
  {
    "text": "track of when they are changed lately they have been I don't even think they have any mechanical slot machines",
    "start": "1793820",
    "end": "1799820"
  },
  {
    "text": "anymore they're all digital now but all the little wheels that are turning these are all digital there's almost no even",
    "start": "1799820",
    "end": "1806179"
  },
  {
    "text": "in the old local Las Vegas old or downtown Las Vegas those used to be the",
    "start": "1806179",
    "end": "1812659"
  },
  {
    "text": "last refuge for the legit old school slot machines where they were mechanical",
    "start": "1812659",
    "end": "1817820"
  },
  {
    "text": "and those are gone and so keeping track of that maybe with maintenance logs and things like that we do want to keep",
    "start": "1817820",
    "end": "1824000"
  },
  {
    "text": "track of what the life cycle of a particular slot machine was",
    "start": "1824000",
    "end": "1829360"
  },
  {
    "text": "for the attribute pattern I already mentioned that so for partic in particular for slot machines the bonuses",
    "start": "1830899",
    "end": "1837679"
  },
  {
    "text": "that we have when we do query and analyze Which slot machines are performing the best we usually want to",
    "start": "1837679",
    "end": "1843140"
  },
  {
    "text": "take a look at what the multiplier chance is and see if that has an influence on which ones are doing better",
    "start": "1843140",
    "end": "1848299"
  },
  {
    "text": "as well as the location of that particular slot machine",
    "start": "1848299",
    "end": "1853179"
  },
  {
    "text": "and then we have our trusty polymorphic pattern at play here right so most slot",
    "start": "1854059",
    "end": "1860360"
  },
  {
    "text": "machine documents will look like this they'll have the identifier the manufacturer where it's currently",
    "start": "1860360",
    "end": "1866000"
  },
  {
    "text": "located serial number Etc but depending on the type of slot machine that it is it could look like this this one would",
    "start": "1866000",
    "end": "1873500"
  },
  {
    "text": "relate to a slot machine if you've ever seen there are slot machines where you can choose a particular type of game on",
    "start": "1873500",
    "end": "1880519"
  },
  {
    "text": "it and there could be up to 16 games on it that's the jacks or better or Texas Hold'em all of those different types of",
    "start": "1880519",
    "end": "1887000"
  },
  {
    "text": "games on a single physical machine so depending on the type of game that you are playing that changes the",
    "start": "1887000",
    "end": "1892940"
  },
  {
    "text": "configuration of the slot machine and that's how that particular slot machine information could look like that",
    "start": "1892940",
    "end": "1898100"
  },
  {
    "text": "document could look like this or like I alluded to with an older slot",
    "start": "1898100",
    "end": "1903260"
  },
  {
    "text": "machine maybe we want to keep track of its decommission date it's no longer in service we want to have a history of the",
    "start": "1903260",
    "end": "1910519"
  },
  {
    "text": "log maintenance log that it has gone through especially for the mechanical parts so again this kind of document can",
    "start": "1910519",
    "end": "1917779"
  },
  {
    "text": "exist within the slots collection even though it is slightly different and more",
    "start": "1917779",
    "end": "1922880"
  },
  {
    "text": "configured for a very particular kind of slot machine",
    "start": "1922880",
    "end": "1928419"
  },
  {
    "start": "1930000",
    "end": "2284000"
  },
  {
    "text": "and that is how you would apply an example of how you would apply these phases to a particular casino floor",
    "start": "1931340",
    "end": "1938840"
  },
  {
    "text": "analytics application so now the next question you should be asking yourself is this is great Adrian now I know how",
    "start": "1938840",
    "end": "1945799"
  },
  {
    "text": "to develop a data model now I know what to do and how to do it but the next",
    "start": "1945799",
    "end": "1951200"
  },
  {
    "text": "question is what do we model for and it always comes down to the two",
    "start": "1951200",
    "end": "1957740"
  },
  {
    "text": "things that are competing Simplicity or performance",
    "start": "1957740",
    "end": "1963200"
  },
  {
    "text": "so when you're deciding between the two there are obviously some things that you should take into consideration these are",
    "start": "1963200",
    "end": "1969559"
  },
  {
    "text": "General guidelines of what you would want to choose but they are pretty good guidelines when you're first starting",
    "start": "1969559",
    "end": "1975440"
  },
  {
    "text": "out and starting to develop your data model so if you want to go for Simplicity you",
    "start": "1975440",
    "end": "1981500"
  },
  {
    "text": "want to take a look at the size of your project and the size of your team is it",
    "start": "1981500",
    "end": "1986659"
  },
  {
    "text": "a very small project is it an early stage is it an MVP are you the only one",
    "start": "1986659",
    "end": "1991820"
  },
  {
    "text": "that's going to be maintaining this project and this data model what are your data sizes like are you using",
    "start": "1991820",
    "end": "1998000"
  },
  {
    "text": "shared or hosted resources and what is your skill like do you only have a few",
    "start": "1998000",
    "end": "2003159"
  },
  {
    "text": "requests every week or do you only have a low read and write rate these are the",
    "start": "2003159",
    "end": "2009340"
  },
  {
    "text": "types of things that would kind of push you to say I don't really need a complex data model this one the simple one is",
    "start": "2009340",
    "end": "2015880"
  },
  {
    "text": "actually going to serve me just fine now if you find that you need to model",
    "start": "2015880",
    "end": "2020919"
  },
  {
    "text": "for performance because you're way past that you are on multiple uh regions",
    "start": "2020919",
    "end": "2026440"
  },
  {
    "text": "you're a distributed team maybe you already have sharded clusters that you're working with and your scale is",
    "start": "2026440",
    "end": "2032740"
  },
  {
    "text": "way more into the thousands per second and you need to give the same experience",
    "start": "2032740",
    "end": "2038440"
  },
  {
    "text": "to all of the people who are using your application then yes performance is something you probably want to take a",
    "start": "2038440",
    "end": "2043899"
  },
  {
    "text": "look at and focus on when you are developing your data model",
    "start": "2043899",
    "end": "2049379"
  },
  {
    "text": "if you take anything away from this I encourage you to err on the side of Simplicity because again because the",
    "start": "2050200",
    "end": "2056740"
  },
  {
    "text": "methodology is iterative you can continue to work on it and go through it and evolve it along with your",
    "start": "2056740",
    "end": "2063040"
  },
  {
    "text": "application and it's always easier to build on top of a simpler data model one that you can understand and one that is",
    "start": "2063040",
    "end": "2070599"
  },
  {
    "text": "can make use of and have the design patterns that you apply be beneficial to",
    "start": "2070599",
    "end": "2076060"
  },
  {
    "text": "it always be better so always err on the side of Simplicity start out with the simplest data model because you can",
    "start": "2076060",
    "end": "2082118"
  },
  {
    "text": "always build on top of it afterward",
    "start": "2082119",
    "end": "2085980"
  },
  {
    "text": "when you focus on Simplicity what you will focus on are the most frequent operations so instead of",
    "start": "2088839",
    "end": "2095858"
  },
  {
    "text": "listing every single thing out and quantifying every single piece of information you have focus on the most",
    "start": "2095859",
    "end": "2101079"
  },
  {
    "text": "frequent one you embed most things because again data that should be accessed together stays together and",
    "start": "2101079",
    "end": "2107800"
  },
  {
    "text": "that makes for a more simple data model because you have the data in the parent documents already",
    "start": "2107800",
    "end": "2113079"
  },
  {
    "text": "and if it makes sense maybe you use one pattern maybe you have a very specific scenario that could account for one of",
    "start": "2113079",
    "end": "2120520"
  },
  {
    "text": "the patterns if you focus on performance that's where you go full pedal to the metal right you",
    "start": "2120520",
    "end": "2126940"
  },
  {
    "text": "want to list every operation out you want to quantify it you want to get to the rate of you know I know I am doing",
    "start": "2126940",
    "end": "2133240"
  },
  {
    "text": "two posts per second or I am fetching you know all tweets uh at this rate you",
    "start": "2133240",
    "end": "2139660"
  },
  {
    "text": "want to be able to have that granular breakdown of the data that you are doing and you want to have a good grasp on all",
    "start": "2139660",
    "end": "2146740"
  },
  {
    "text": "of the operations that are happening with your application you want to embed and Link as necessary and you will be",
    "start": "2146740",
    "end": "2153280"
  },
  {
    "text": "needing linking because if you are running at the scale that warrants data modeling for performance you won't can't",
    "start": "2153280",
    "end": "2159760"
  },
  {
    "text": "get by with just embedding you're going to need to link a lot of things as well and you'll also need to use as many",
    "start": "2159760",
    "end": "2166000"
  },
  {
    "text": "patterns as necessary but again go through the first two phases even if you're modeling for performance and if",
    "start": "2166000",
    "end": "2172660"
  },
  {
    "text": "you find that you are still struggling or you're not attaining the level of performance that you want to then start",
    "start": "2172660",
    "end": "2179200"
  },
  {
    "text": "thinking about applying design patterns you can go through and you know apply design patterns right away but that goes",
    "start": "2179200",
    "end": "2185980"
  },
  {
    "text": "against what we're encouraging which is to err on the side of simplicity so start out small start out simple only",
    "start": "2185980",
    "end": "2192040"
  },
  {
    "text": "apply as necessary and it will be better in the long run for you and for your data model",
    "start": "2192040",
    "end": "2198579"
  },
  {
    "text": "and if you want both because everybody wants everything in life then you'll want to mix these kind of",
    "start": "2198579",
    "end": "2205300"
  },
  {
    "text": "guidelines right so you will do most operations you will quantify most Ops",
    "start": "2205300",
    "end": "2210940"
  },
  {
    "text": "and instead of being so granular or only focusing on the top come in the middle right find the top five the top 10 most",
    "start": "2210940",
    "end": "2218800"
  },
  {
    "text": "important operations and maybe have that detail for just the top ten you'll want to embed and Link still because for",
    "start": "2218800",
    "end": "2225640"
  },
  {
    "text": "performance especially linking is going to be absolutely necessary if you're modeling for performance and then again",
    "start": "2225640",
    "end": "2231520"
  },
  {
    "text": "you'll meet in the middle you'll use a few patterns you'll absolutely be able to take advantage of document versioning",
    "start": "2231520",
    "end": "2237520"
  },
  {
    "text": "pattern the polymorphic pattern one that I didn't get through is the schema versioning pattern which sounds exactly",
    "start": "2237520",
    "end": "2244420"
  },
  {
    "text": "like it says so if you do change your schema often it's very similar to keep track of what schema type you are using",
    "start": "2244420",
    "end": "2251500"
  },
  {
    "text": "that's also helpful when you're needing to have backwards compatibility all of those are absolutely going to be",
    "start": "2251500",
    "end": "2257440"
  },
  {
    "text": "something you will be able to use and could be one of the three that patterns that you are using",
    "start": "2257440",
    "end": "2263500"
  },
  {
    "text": "and then only apply the more complicated ones as performance issues occur",
    "start": "2263500",
    "end": "2269680"
  },
  {
    "text": "and that's pretty much it that's how you build a data model I want to thank you for listening to me if you have any",
    "start": "2269680",
    "end": "2275920"
  },
  {
    "text": "questions I will be around feel free to come up here or find me I'll be around in the in the conference but thank you",
    "start": "2275920",
    "end": "2282160"
  },
  {
    "text": "so much [Applause]",
    "start": "2282160",
    "end": "2285980"
  }
]