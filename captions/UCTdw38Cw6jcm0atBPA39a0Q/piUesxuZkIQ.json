[
  {
    "start": "0",
    "end": "153000"
  },
  {
    "text": "okay folks right according to the power of the internet it is",
    "start": "4759",
    "end": "10980"
  },
  {
    "text": "apparently now nine o'clock so um okay uh good morning",
    "start": "10980",
    "end": "16619"
  },
  {
    "text": "uh see responsive that's what we want in an architecture",
    "start": "16619",
    "end": "22320"
  },
  {
    "text": "um so uh you may be aware that Britain's been going through some social upheaval in recent years this is some of our",
    "start": "22320",
    "end": "28260"
  },
  {
    "text": "latest architecture um",
    "start": "28260",
    "end": "33740"
  },
  {
    "text": "and so what I want to talk about is refactoring",
    "start": "34079",
    "end": "39780"
  },
  {
    "text": "I want to talk about the fact that it's not just a shortcut key many people think of it in those terms ever since it",
    "start": "39780",
    "end": "47100"
  },
  {
    "text": "got integrated into Ides but refactoring has a longer history and",
    "start": "47100",
    "end": "52620"
  },
  {
    "text": "it also has a different story a story that is rooted in design and design thinking",
    "start": "52620",
    "end": "59160"
  },
  {
    "text": "so the reason this is here is not merely social commentary",
    "start": "59160",
    "end": "64400"
  },
  {
    "text": "and political satire it is the observation that many of us",
    "start": "64400",
    "end": "70740"
  },
  {
    "text": "deal with Legacy code in fact most you spend most of your time programming in the past",
    "start": "70740",
    "end": "78240"
  },
  {
    "text": "okay you think you're on the you think you're in technology and therefore everybody in your family thinks not only",
    "start": "78240",
    "end": "83520"
  },
  {
    "text": "can you fix their computer but you're on the Leading Edge",
    "start": "83520",
    "end": "88619"
  },
  {
    "text": "but you spend most of your time programming in the past the languages you use",
    "start": "88619",
    "end": "94020"
  },
  {
    "text": "they were either developed last century or at the beginning of this Century statistically speaking there are a few",
    "start": "94020",
    "end": "100500"
  },
  {
    "text": "of you who are using languages that were actually invented in the last decade but you're in a relative minority most of",
    "start": "100500",
    "end": "106259"
  },
  {
    "text": "what you are doing is in the past you sit down you write a piece of code it is very unlikely that that code remains in",
    "start": "106259",
    "end": "112860"
  },
  {
    "text": "the present most of your code is written against something that was written yesterday last week last month last year",
    "start": "112860",
    "end": "117960"
  },
  {
    "text": "you are programming in the past in an eight-hour day you spend seven to",
    "start": "117960",
    "end": "123600"
  },
  {
    "text": "seven and a half hours working in the past dealing with the consequences of what was there",
    "start": "123600",
    "end": "129420"
  },
  {
    "text": "so for an industry that is focused on the future we're really pretty crap at it",
    "start": "129420",
    "end": "134819"
  },
  {
    "text": "so surely refactoring solved these problems that's what I want to deal with um but why is it we end up with stuff",
    "start": "134819",
    "end": "140099"
  },
  {
    "text": "like this Legacy systems here we have a legacy system apparently it's a rather large astronomical clock we don't know",
    "start": "140099",
    "end": "145739"
  },
  {
    "text": "who built it we don't know why they built it but twice a year it works",
    "start": "145739",
    "end": "151819"
  },
  {
    "start": "153000",
    "end": "212000"
  },
  {
    "text": "now sometimes it's not just that sometimes there's another side to",
    "start": "153660",
    "end": "159540"
  },
  {
    "text": "develop us oh we love complexity we can look at somebody says here I have",
    "start": "159540",
    "end": "165060"
  },
  {
    "text": "a simple requirement and it seems that many developers look at the simple requirement and go",
    "start": "165060",
    "end": "170099"
  },
  {
    "text": "you know what I can make that harder I just heard I just heard wait a minute",
    "start": "170099",
    "end": "176519"
  },
  {
    "text": "the last five minutes yes there's a new JavaScript framework let's use that okay",
    "start": "176519",
    "end": "182459"
  },
  {
    "text": "so we have an innate technical joy and the point is I'm not",
    "start": "182459",
    "end": "187680"
  },
  {
    "text": "saying that's a bad thing it's actually what got many of us involved or interested in software but we need to",
    "start": "187680",
    "end": "194819"
  },
  {
    "text": "recognize that every good thing has another side to it the very fact that you enjoy",
    "start": "194819",
    "end": "200760"
  },
  {
    "text": "kind of puzzle solving expressing Solutions working with these things and",
    "start": "200760",
    "end": "206159"
  },
  {
    "text": "that Joy of getting something working sometimes has this side effect that you do exactly that when it's not necessary",
    "start": "206159",
    "end": "213120"
  },
  {
    "start": "212000",
    "end": "313000"
  },
  {
    "text": "now many people talk about this in terms of technical debt technical debt is a widely misunderstood metaphor a lot of",
    "start": "213120",
    "end": "218400"
  },
  {
    "text": "people use technical debt just to mean bad the whole point is let me just remind you the debt metaphor is supposed",
    "start": "218400",
    "end": "224700"
  },
  {
    "text": "to tell you that you can have debt and it can be good or bad technical debt is not a bad thing when I hear people say",
    "start": "224700",
    "end": "230459"
  },
  {
    "text": "oh we have technical debt okay so what I have debt as well the question is not do you have it is do",
    "start": "230459",
    "end": "236519"
  },
  {
    "text": "you manage it the thing I want to hear from people is not we have lots of technical debt it's",
    "start": "236519",
    "end": "242580"
  },
  {
    "text": "it's whether or not they have managed or unmanaged technical debt that's the extra word that's really important if you have managed technical debt that is",
    "start": "242580",
    "end": "248640"
  },
  {
    "text": "not a problem well done you're doing the right thing that's the whole point of debt to get an",
    "start": "248640",
    "end": "254220"
  },
  {
    "text": "advantage through occurring a debt that you can then responsibly repay however most people have a really bad",
    "start": "254220",
    "end": "260340"
  },
  {
    "text": "experience with debt both in code and in the real world so they short they short-circuit it to mean bad but that's",
    "start": "260340",
    "end": "266160"
  },
  {
    "text": "not the full metaphor and if you ever have a dashboard that tells you your debt value",
    "start": "266160",
    "end": "271259"
  },
  {
    "text": "in krona euros dollars or whatever I won't choose pounds because pounds are",
    "start": "271259",
    "end": "276300"
  },
  {
    "text": "really not worth very much these days but I'm really glad my expenses are being paid in Corona I'm winning you",
    "start": "276300",
    "end": "282120"
  },
  {
    "text": "know in the months since I bought my flights I am actually earning a profit um",
    "start": "282120",
    "end": "288479"
  },
  {
    "text": "if you have that on your dashboard that's bad science that's false numbers you cannot turn technical debt into a",
    "start": "288479",
    "end": "295919"
  },
  {
    "text": "numerical currency value if you're not sure why that's a separate talk and I'm happy to have it as a conversation but",
    "start": "295919",
    "end": "301440"
  },
  {
    "text": "it's actually if you think no no but we have it no it's against the laws of physics and Mathematics so if you think",
    "start": "301440",
    "end": "307020"
  },
  {
    "text": "you have it you don't but it is a useful thing but I don't want to talk about the debt side of",
    "start": "307020",
    "end": "312720"
  },
  {
    "text": "things I want to talk about how he got there this is a term I started using recently as in last week",
    "start": "312720",
    "end": "319800"
  },
  {
    "start": "313000",
    "end": "462000"
  },
  {
    "text": "I found myself talking to a client and I suddenly realized we keep focusing on a consequence but not the cause technical",
    "start": "319800",
    "end": "325860"
  },
  {
    "text": "debt is not a cause of technical debt of itself there are many things one RNA",
    "start": "325860",
    "end": "331680"
  },
  {
    "text": "desire for complexity one the Blind Eye that we turn to things that's called neglect",
    "start": "331680",
    "end": "338520"
  },
  {
    "text": "okay we we have parallel instead of looking to economics we need to look at Psychology physical neglect emotional",
    "start": "338520",
    "end": "344759"
  },
  {
    "text": "neglect things like that technical neglect is the problem that we suffer in code bases not technical debt",
    "start": "344759",
    "end": "350820"
  },
  {
    "text": "technical debt is the effect what is the cause technical neglect so",
    "start": "350820",
    "end": "356759"
  },
  {
    "text": "this leads us to refactoring and yeah you've got to quote either XKCD or",
    "start": "356759",
    "end": "362460"
  },
  {
    "text": "commit strip so today I'm doing commit strip if you've not come across commit strip that's your homework",
    "start": "362460",
    "end": "368039"
  },
  {
    "text": "okay a couple of guys in Belgium do this it's fantastic um so we'll refactor the manager on the",
    "start": "368039",
    "end": "374100"
  },
  {
    "text": "left we'll be factoring the code improve the loading time developer on the right not really well would improve security then no so",
    "start": "374100",
    "end": "381780"
  },
  {
    "text": "is it for a browser compatibility absolutely not so tell me why is it always the same old",
    "start": "381780",
    "end": "386940"
  },
  {
    "text": "story with you guys wanting to refactor everything I need to know because as devs we know if we know we've",
    "start": "386940",
    "end": "393060"
  },
  {
    "text": "left Mexico we can't stop thinking about it when we wake up in the morning at lunchtime in the evening when we go home",
    "start": "393060",
    "end": "398280"
  },
  {
    "text": "and when we're trying to go to sleep it haunts us",
    "start": "398280",
    "end": "402860"
  },
  {
    "text": "a lot of developers are very conscientious it's just like oh that haunts me like I know it could be better",
    "start": "403919",
    "end": "409560"
  },
  {
    "text": "I know there's something else I could do and why is that because normally what we're doing when we're writing code is",
    "start": "409560",
    "end": "414960"
  },
  {
    "text": "we're expressing an idea ideas are not stationary your understanding of ideas changes with time and experience it",
    "start": "414960",
    "end": "421440"
  },
  {
    "text": "could change 10 minutes after you wrote a piece of code it could change 10 days after a piece of code after somebody",
    "start": "421440",
    "end": "428340"
  },
  {
    "text": "raised a question or you mentored somebody and you explained to them and you suddenly go well now my explanation",
    "start": "428340",
    "end": "434280"
  },
  {
    "text": "makes this code look really stupid because there's a much easier way of doing it but don't blame yourself because you couldn't have known you're",
    "start": "434280",
    "end": "441000"
  },
  {
    "text": "always in a learning process we're always working with incomplete knowledge so therefore the whole point is that software is soft",
    "start": "441000",
    "end": "447960"
  },
  {
    "text": "okay we keep forgetting that you're supposed to be able to change it it's supposed to keep up with your current thinking it's supposed to be a",
    "start": "447960",
    "end": "453720"
  },
  {
    "text": "reflection of here's what we understand collectively as a team the problem is most of what we understand appears to be",
    "start": "453720",
    "end": "459000"
  },
  {
    "text": "what we understood five years ago and we are fighting the past so",
    "start": "459000",
    "end": "464039"
  },
  {
    "start": "462000",
    "end": "553000"
  },
  {
    "text": "there are lots of definitions of architecture so I'm going to get a bit poetic architecture has inhabited sculpture",
    "start": "464039",
    "end": "469259"
  },
  {
    "text": "I think this is a lovely way of looking at architectures generally but I think it also applies to our code bases we",
    "start": "469259",
    "end": "477419"
  },
  {
    "text": "often forget that when we talk about software architecture we are often talking about the Technologies we're talking about the physical arrangement",
    "start": "477419",
    "end": "483180"
  },
  {
    "text": "that's the natural parallel for architecture but we forget",
    "start": "483180",
    "end": "490440"
  },
  {
    "text": "in software that the point of Architecture is to live and work inside it buildings are not there merely to be",
    "start": "490440",
    "end": "495900"
  },
  {
    "text": "structures they are structures for people software architecture is for developers",
    "start": "495900",
    "end": "501360"
  },
  {
    "text": "to live inside and you can ask yourself what is that experience like does it feel Pleasant",
    "start": "501360",
    "end": "507960"
  },
  {
    "text": "or do you feel like you're in a horror movie do you feel that instead you know some people go yeah my the code base is",
    "start": "507960",
    "end": "514800"
  },
  {
    "text": "really nice it's very habitable you know it's nicely lit there's some beautiful tests over there I love the elegant code",
    "start": "514800",
    "end": "519839"
  },
  {
    "text": "over here my packages are all arranged like so and it's just like yeah I feel I can get a coffee anywhere and just relax",
    "start": "519839",
    "end": "525360"
  },
  {
    "text": "with the code and make changes I feel comfortable and confident on the other hand you might be in a",
    "start": "525360",
    "end": "530519"
  },
  {
    "text": "horror scenario yeah you kind of go in it's dark and dimly lit there's some planking somewhere and some there's",
    "start": "530519",
    "end": "536399"
  },
  {
    "text": "something dripping somewhere and it sounds like a child scream in the distance and I know that at least three developers have gone in and not come out",
    "start": "536399",
    "end": "543060"
  },
  {
    "text": "yet we're on a recruitment Drive so that's it it's inhabited culture what",
    "start": "543060",
    "end": "550140"
  },
  {
    "text": "is it like to live in the code that experience of being there so where's refactoring fit in now this",
    "start": "550140",
    "end": "557040"
  },
  {
    "start": "553000",
    "end": "708000"
  },
  {
    "text": "is a quote I've heard attributed to many people um Michelangelo gets credited a lot with",
    "start": "557040",
    "end": "562860"
  },
  {
    "text": "this one but it's actually much more recent George Pentecost there is a beautiful angel in that block of Marvel I'm going to find it all I have to do is",
    "start": "562860",
    "end": "569760"
  },
  {
    "text": "knock off the outside pieces of marble and be very careful not to Chisel into the angel with my chisel",
    "start": "569760",
    "end": "575100"
  },
  {
    "text": "this is to some extent the limits of refactoring in the real world or",
    "start": "575100",
    "end": "580560"
  },
  {
    "text": "creating a design in the real world but guess what in software software is much softer we can chisel into the angel and",
    "start": "580560",
    "end": "587040"
  },
  {
    "text": "then put the pieces back and it doesn't cost us anything in software we have time travel which is kind of cool okay oh I'll undo",
    "start": "587040",
    "end": "594839"
  },
  {
    "text": "that I will revert to a previous version next time you are talking to your",
    "start": "594839",
    "end": "600300"
  },
  {
    "text": "members of your family who want you to fix their computer say no I'm a time traveler that is what I do for a living",
    "start": "600300",
    "end": "606300"
  },
  {
    "text": "I travel in Virtual spaces I travel through space and time you want me to fix your computer that's a hardware",
    "start": "606300",
    "end": "612240"
  },
  {
    "text": "problem that's the stuff of Mortals yeah okay so this is a classic book published in 99",
    "start": "612240",
    "end": "619920"
  },
  {
    "text": "this is before refactoring tools became widely available so what's the book about it Martin goes through",
    "start": "619920",
    "end": "627839"
  },
  {
    "text": "he goes through a series of practices and he shows you the intermediate steps that you need to take to change one",
    "start": "627839",
    "end": "634260"
  },
  {
    "text": "thing from another whether you are doing a rename an extract method extract class whether you are adding parameters",
    "start": "634260",
    "end": "639779"
  },
  {
    "text": "removing parameters whatever you're doing he makes sure that you understand the steps involved if you are doing this",
    "start": "639779",
    "end": "645000"
  },
  {
    "text": "manually a lot of people forget that that's in there and it's a really important idea",
    "start": "645000",
    "end": "650220"
  },
  {
    "text": "because he's trying to show you that refactoring is about a gradual change",
    "start": "650220",
    "end": "655560"
  },
  {
    "text": "automated refactoring speeds that up but it does it in those steps but there's also something else here",
    "start": "655560",
    "end": "661140"
  },
  {
    "text": "this is the the time this book came out this was not an accepted practice the",
    "start": "661140",
    "end": "666839"
  },
  {
    "text": "terminology of refracting was relatively new you know Bill Opdyke was one of the people responsible for actually",
    "start": "666839",
    "end": "672779"
  },
  {
    "text": "legitimizing it this is also in the wave of extreme programming so this is before the term agile was adopted these ideas",
    "start": "672779",
    "end": "679560"
  },
  {
    "text": "are coming out and actually saying this is a first class idea but most importantly I want to refer you to the subtitle",
    "start": "679560",
    "end": "685820"
  },
  {
    "text": "improving the design of existing code this is a design practice",
    "start": "685820",
    "end": "692339"
  },
  {
    "text": "and that's a really important Point Martin was not saying here's ways of tidying up your code here's ways of",
    "start": "692339",
    "end": "697740"
  },
  {
    "text": "managing technical debt he was talking about the idea of improving the design it's a design it's a design practice",
    "start": "697740",
    "end": "705120"
  },
  {
    "text": "he also offered a definition of what is refactoring it is a change made to the internal",
    "start": "705120",
    "end": "710760"
  },
  {
    "text": "structure of software to make it easy to understand and cheaper to modify without changing its observable Behavior",
    "start": "710760",
    "end": "718200"
  },
  {
    "text": "now an important point about this is that it is based on making things easy",
    "start": "718200",
    "end": "724380"
  },
  {
    "text": "to understand it doesn't mean that what was there was wrong it just means that our understanding has improved and our understanding has improved for a number",
    "start": "724380",
    "end": "729779"
  },
  {
    "text": "of reasons either yeah it was really bad or it was really good but the world has",
    "start": "729779",
    "end": "735240"
  },
  {
    "text": "moved on and now it looks kind of out of place it solved a problem that we had but you know that that 5K switch",
    "start": "735240",
    "end": "741120"
  },
  {
    "text": "statement didn't feel too bad but now with 25 cases I'm beginning to think I might have taken a wrong turn somewhere",
    "start": "741120",
    "end": "746760"
  },
  {
    "text": "it doesn't mean that the five cases was bad it just means that 25 is no longer good and that's a point we're allowed to",
    "start": "746760",
    "end": "752519"
  },
  {
    "text": "retake that decision now if this were physical and logistical I'd have to move stuff I'd have to move rocks or you know",
    "start": "752519",
    "end": "759540"
  },
  {
    "text": "stop not in software we don't have a logistics there are a few laws of physics we have",
    "start": "759540",
    "end": "765779"
  },
  {
    "text": "to respect but most of them we're Time Travelers okay and actually the interesting thing about",
    "start": "765779",
    "end": "771720"
  },
  {
    "start": "770000",
    "end": "878000"
  },
  {
    "text": "this is that the second edition this is exactly the same definition it has not changed without changing there's a",
    "start": "771720",
    "end": "777180"
  },
  {
    "text": "certain irony about that so the text of this is identical and second edition which came out in 2019.",
    "start": "777180",
    "end": "784980"
  },
  {
    "text": "um and this one also still tells you the manual steps that you want to take even though this",
    "start": "784980",
    "end": "791040"
  },
  {
    "text": "lives in a world in which Ides have made refactoring normal the point is that Martin is still trying to get you to",
    "start": "791040",
    "end": "796980"
  },
  {
    "text": "think that's a really important thing going on here now I mentioned Bill Opdyke",
    "start": "796980",
    "end": "802800"
  },
  {
    "text": "and I want you to kind of notice this so refactoring object oriented Frameworks this is his PhD it was submitted in the",
    "start": "802800",
    "end": "808500"
  },
  {
    "text": "early 90s um his work was from the late 80s to the early 90s this is refactoring in its",
    "start": "808500",
    "end": "815700"
  },
  {
    "text": "original form his PhD supervisor is Ralph Johnson okay who is better known for the gang of",
    "start": "815700",
    "end": "823800"
  },
  {
    "text": "four patents gamma gamma Helm Johnson for cedis that's that Johnson and these guys Ralph and colleagues did",
    "start": "823800",
    "end": "831540"
  },
  {
    "text": "a lot a lot of work on refactorings where a lot of this came from and so for",
    "start": "831540",
    "end": "836760"
  },
  {
    "text": "a lot of people when they think about the story of refactoring they think okay that's available in tools that I use",
    "start": "836760",
    "end": "842180"
  },
  {
    "text": "but if you know a bit more history you'll go but refraction kind of grew up in the Java space that's where it became",
    "start": "842180",
    "end": "849180"
  },
  {
    "text": "the first class thing that's where Ides started actually saying this is normal this is not an extra this is not an",
    "start": "849180",
    "end": "855180"
  },
  {
    "text": "add-on this is not a plug-in this is integrated but many people there go actually it",
    "start": "855180",
    "end": "860579"
  },
  {
    "text": "started in the small talk Community that's Ralph Johnson stuff actually it didn't this is in C plus plus the",
    "start": "860579",
    "end": "866760"
  },
  {
    "text": "original language under which most of the research for refracting was done in the late 80s early 90s with C plus plus",
    "start": "866760",
    "end": "871920"
  },
  {
    "text": "ironically the language that is perhaps received the least love in this department uh since",
    "start": "871920",
    "end": "878839"
  },
  {
    "start": "878000",
    "end": "992000"
  },
  {
    "text": "Bill update says the refactorings are defined to be Behavior preserving that kind of that that phrase again Behavior",
    "start": "879600",
    "end": "886139"
  },
  {
    "text": "preserving so what do we mean by that so let's talk about possibly the most over-specified abstract data type in the",
    "start": "886139",
    "end": "893160"
  },
  {
    "text": "history of computing the stack okay I'm gonna I'm just going to focus on four operations stack is a vertical",
    "start": "893160",
    "end": "898500"
  },
  {
    "text": "concept Stacks don't have length a stack is a vertical concept so depending on your perspective they either have depth or they have height I tend to think of a",
    "start": "898500",
    "end": "905760"
  },
  {
    "text": "push down stack therefore it and physically most Stacks it's just like yeah it has a depth you go from the top",
    "start": "905760",
    "end": "911399"
  },
  {
    "text": "downwards the language of top tells us that we're looking at something there you can push things onto it and you can",
    "start": "911399",
    "end": "916740"
  },
  {
    "text": "pop things off now I'm going to focus on this just being a strict pop in other words it doesn't return a value as a",
    "start": "916740",
    "end": "922199"
  },
  {
    "text": "result it just reduces the top uh it just drops okay so we're going to keep it really simple",
    "start": "922199",
    "end": "927779"
  },
  {
    "text": "um my language of choice today is going to be JavaScript",
    "start": "927779",
    "end": "933300"
  },
  {
    "text": "for some reason maybe I didn't have enough coffee first thing um but there's an interesting thing here",
    "start": "933300",
    "end": "939420"
  },
  {
    "text": "is this is a really what I'm going to do is I'm just going to Simply use a very pure object form JavaScript has many",
    "start": "939420",
    "end": "945240"
  },
  {
    "text": "different object models you can use a conventional class keyword which was added in",
    "start": "945240",
    "end": "950279"
  },
  {
    "text": "ecmascript 6 2015 or you can use kind of classic prototyping model or you can use",
    "start": "950279",
    "end": "955380"
  },
  {
    "text": "the purest object model that it supports which is that of a closure basically I'm",
    "start": "955380",
    "end": "960839"
  },
  {
    "text": "going to return effectively a record a Cartesian product of",
    "start": "960839",
    "end": "966360"
  },
  {
    "text": "um operations in other words I'm going to offer you here's a set of operations that's that's a pure object it doesn't",
    "start": "966360",
    "end": "972899"
  },
  {
    "text": "have a type it's it's it just is a set of operations and I'm going to make my data private by it being local this is",
    "start": "972899",
    "end": "979380"
  },
  {
    "text": "the whole idea of block structured programming the idea that blocks are a unit of encapsulation you don't need a private keyword it's truly truly private",
    "start": "979380",
    "end": "985440"
  },
  {
    "text": "because it's inside a block and that block outlives the life of the function from which it comes",
    "start": "985440",
    "end": "992399"
  },
  {
    "text": "and then I'm going to bind my operations to lambdas which are bound to this private scope",
    "start": "992399",
    "end": "997500"
  },
  {
    "text": "and I'm going to implement it in terms of the built-in array which does in fact conveniently enough have push and pop operations but I'm not but I'm making",
    "start": "997500",
    "end": "1003980"
  },
  {
    "text": "mine a pure object model it's purely method based and I'm going to wrap this okay so I've got an implementation it's",
    "start": "1003980",
    "end": "1010519"
  },
  {
    "text": "all one-liners that's nice so okay that's great we've just learned about object orientation where's the",
    "start": "1010519",
    "end": "1016040"
  },
  {
    "text": "refactoring well what about this what I've done is I've just turned the underlying representation back to front",
    "start": "1016040",
    "end": "1021500"
  },
  {
    "text": "I've now decided that I'm going to use element zero as the top instead of the",
    "start": "1021500",
    "end": "1026720"
  },
  {
    "text": "last element length minus one I have just changed the representation and it will break no code because it is a",
    "start": "1026720",
    "end": "1032480"
  },
  {
    "text": "refactoring I have preserved the behavior from an external for an external Observer this is identical well",
    "start": "1032480",
    "end": "1039620"
  },
  {
    "text": "is it well yes we need to distinguish the term behavior and that's something that the problem is the word Behavior",
    "start": "1039620",
    "end": "1046459"
  },
  {
    "text": "has too many meanings and the way that Martin and Bill were using it was to",
    "start": "1046459",
    "end": "1053900"
  },
  {
    "text": "imply just semantic Behavior but we need to distinguish different kinds of",
    "start": "1053900",
    "end": "1059000"
  },
  {
    "text": "behavior and it's also worth distinguishing the kinds of change that we make to code because this is also another thing when",
    "start": "1059000",
    "end": "1065539"
  },
  {
    "text": "we find people using the term refactoring sometimes it gets It suffers semantic diffusion I've certainly",
    "start": "1065539",
    "end": "1072020"
  },
  {
    "text": "encountered people who will sit there and anything they're doing is refactoring oh what are you doing I'm refactoring oh so what's the refactoring",
    "start": "1072020",
    "end": "1078200"
  },
  {
    "text": "it's a bug fix well that's not a refactoring the whole point of a bug fix is to change the observable Behavior it's broken now it's not that's the",
    "start": "1078200",
    "end": "1085340"
  },
  {
    "text": "purpose okay so they use refactoring as a more fancy word for the word change I",
    "start": "1085340",
    "end": "1091160"
  },
  {
    "text": "am changing my code doesn't sound very technical if you say refactoring whoa that's great okay so I'm going to give",
    "start": "1091160",
    "end": "1097940"
  },
  {
    "start": "1096000",
    "end": "1411000"
  },
  {
    "text": "you a simple kind of right hand rule I'm going to have to hold my left hand here no no amazing exchange you see I reverse",
    "start": "1097940",
    "end": "1104480"
  },
  {
    "text": "the representation fantastic so I've got a right hand rule here and it's not these are not perfectly orthogonal these",
    "start": "1104480",
    "end": "1110600"
  },
  {
    "text": "genuinely aren't perfect orthogonal and neither of these uh I want to focus on three different",
    "start": "1110600",
    "end": "1116120"
  },
  {
    "text": "qualities that you might see in a piece of code it's functional qualities it's to it's operational quality is its",
    "start": "1116120",
    "end": "1121880"
  },
  {
    "text": "developmental qualities the functional qualities are the semantics that's the thing we normally talk about in unit tests it's the how did the values",
    "start": "1121880",
    "end": "1129679"
  },
  {
    "text": "change how the values transform what events were raised okay there's no question of timing and",
    "start": "1129679",
    "end": "1135260"
  },
  {
    "text": "resources operational is how did it run did it run fast did it run slow did it use more or less memory",
    "start": "1135260",
    "end": "1142460"
  },
  {
    "text": "that stack changes in the way that it uses things there's a time difference because we are using a different end and",
    "start": "1142460",
    "end": "1148760"
  },
  {
    "text": "therefore we are adding things if we are appending versus pre-pending there is a different",
    "start": "1148760",
    "end": "1154039"
  },
  {
    "text": "performance linear versus constant amortized constant time so there is a difference in that that does not show up",
    "start": "1154039",
    "end": "1161000"
  },
  {
    "text": "in the unit test there is an operational change many refactorings will actually result in minor or major changes in",
    "start": "1161000",
    "end": "1168140"
  },
  {
    "text": "performance characteristics either for the better or for the worse or they stay the same developmental qualities of the code is",
    "start": "1168140",
    "end": "1175039"
  },
  {
    "text": "well how good is it how habitable is it how easy to change is it so whenever you're making changes if you think of",
    "start": "1175039",
    "end": "1181160"
  },
  {
    "text": "these three axes it clarifies things rather just I'm changing code is what is my goal here so",
    "start": "1181160",
    "end": "1187220"
  },
  {
    "text": "um when I had a feature what is my goal in adding a feature well it's to add more functionality I am trying to take",
    "start": "1187220",
    "end": "1192980"
  },
  {
    "text": "that axis and do more of it we had this much functionality now I'm going to have this much functionality after my change",
    "start": "1192980",
    "end": "1198620"
  },
  {
    "text": "what happens to the operational developmental axis well maybe they stay the same",
    "start": "1198620",
    "end": "1204860"
  },
  {
    "text": "maybe things get better maybe things get worse that's not I mean we'd always like things to get better but the goal of",
    "start": "1204860",
    "end": "1211039"
  },
  {
    "text": "feature Edition that's not their goal bug fixing kind of looks the same except",
    "start": "1211039",
    "end": "1217039"
  },
  {
    "text": "it works from a different perspective with bug fixing what you're doing is you are taking a deficit in functionality",
    "start": "1217039",
    "end": "1223700"
  },
  {
    "text": "okay instead of we have this much functionality and now you're going to have this what is a bug we promised you",
    "start": "1223700",
    "end": "1229880"
  },
  {
    "text": "this much functionality but you've got this a bug is a shortfall it's a deficit if you want debt that's a debt you have",
    "start": "1229880",
    "end": "1236900"
  },
  {
    "text": "a feature debt that's what a bug is we promise you this you can't have it oh you can do this except that crashes",
    "start": "1236900",
    "end": "1242960"
  },
  {
    "text": "everything oh you can do this except it munges your data in bad ways oh okay that's a that's not what we want so",
    "start": "1242960",
    "end": "1249500"
  },
  {
    "text": "therefore we make up for it but now we get to the interesting stuff what about optimization",
    "start": "1249500",
    "end": "1254960"
  },
  {
    "text": "optimization is a functionality preserving transformation by the way that phrase functionality preserving",
    "start": "1254960",
    "end": "1260419"
  },
  {
    "text": "transformation drop that into conversation casually it sounds good okay",
    "start": "1260419",
    "end": "1266480"
  },
  {
    "text": "but that's what it is you are preserving the semantics the goal of optimization",
    "start": "1266480",
    "end": "1271820"
  },
  {
    "text": "is to improve something on the operational axis and to maintain one of the other axes the",
    "start": "1271820",
    "end": "1279559"
  },
  {
    "text": "performance the semantics fixed because there's no virtue in saying hey look it",
    "start": "1279559",
    "end": "1284720"
  },
  {
    "text": "runs 10 times faster yeah but it crashes every single time but damn it's a fast crash",
    "start": "1284720",
    "end": "1290600"
  },
  {
    "text": "that's not a virtue here okay the idea is you don't want to break things so therefore you keep one thing",
    "start": "1290600",
    "end": "1296960"
  },
  {
    "text": "fixed whilst you improve the other the wild card is what happens to the operational developmental quality",
    "start": "1296960",
    "end": "1303380"
  },
  {
    "text": "sometimes an optimization will not necessarily add any complexity to the code sometimes it will add",
    "start": "1303380",
    "end": "1309679"
  },
  {
    "text": "complexity to the code a piece of code that uses caching is more complex than a piece of code that is not therefore it is developmentally",
    "start": "1309679",
    "end": "1316820"
  },
  {
    "text": "lower quality from the perception of the user if there's more cognitive load that I have to deal with that's not",
    "start": "1316820",
    "end": "1322880"
  },
  {
    "text": "necessarily A Bad Thing but we have to understand that's a payment on the other hand Sometimes some of the",
    "start": "1322880",
    "end": "1328700"
  },
  {
    "text": "greatest performance improvements come through deleting code and simplifying things it's just like whoa wait a minute",
    "start": "1328700",
    "end": "1334520"
  },
  {
    "text": "what's going on here in fact I mentioned caching one of my clients had four levels of caching they'd accumulated in a legacy",
    "start": "1334520",
    "end": "1341299"
  },
  {
    "text": "code base over time every time they migrated platforms and stuff like that it's just like okay oh that went faster but I think we can make it go even",
    "start": "1341299",
    "end": "1347419"
  },
  {
    "text": "faster they went faster because they moved to a different platform",
    "start": "1347419",
    "end": "1352640"
  },
  {
    "text": "the problem is optimizations are often based on a very delicate set of assumptions and any of those change then your optimization disappears it turns",
    "start": "1352640",
    "end": "1359960"
  },
  {
    "text": "out that rather than recheck the validity of the optimizations they just accumulated them when you deleted all of",
    "start": "1359960",
    "end": "1367400"
  },
  {
    "text": "the caching it ran significantly faster yeah it turns out that none of it was an",
    "start": "1367400",
    "end": "1372559"
  },
  {
    "text": "optimization and none of it was necessary anymore but you still want the same semantic",
    "start": "1372559",
    "end": "1377659"
  },
  {
    "text": "Behavior it's the time that changes that's part of that axis and then we hit refactoring",
    "start": "1377659",
    "end": "1383240"
  },
  {
    "text": "which is another functionality preserving transformation which is basically my goal here is to",
    "start": "1383240",
    "end": "1390020"
  },
  {
    "text": "improve something about the developmental quality improve the habitability of the code repay some technical debt",
    "start": "1390020",
    "end": "1396260"
  },
  {
    "text": "the act of refactoring is the opposite of technical neglect it's it's actually",
    "start": "1396260",
    "end": "1401299"
  },
  {
    "text": "technical care what happens to the performance characteristics often it Remains the Same but it may get a little bit worse",
    "start": "1401299",
    "end": "1407480"
  },
  {
    "text": "it may get a little bit better but that's not the goal so Martin also offers a definition of",
    "start": "1407480",
    "end": "1414260"
  },
  {
    "start": "1411000",
    "end": "1549000"
  },
  {
    "text": "refactor as a verb what does it mean to do it well it means to restructure software by",
    "start": "1414260",
    "end": "1419780"
  },
  {
    "text": "applying a refactoring and interestingly enough more importantly Bill optike's thesis was on",
    "start": "1419780",
    "end": "1426260"
  },
  {
    "text": "automated refactoring so this is over 30 years ago now",
    "start": "1426260",
    "end": "1431900"
  },
  {
    "text": "this is a book that um I edited uh 2009 came out 2010",
    "start": "1431900",
    "end": "1439100"
  },
  {
    "text": "um kind of in fact I recognize their own actually a few speakers who are representative in fact I'd just",
    "start": "1439100",
    "end": "1445940"
  },
  {
    "text": "say Norwegians are disproportionately represented in this book um but one of the",
    "start": "1445940",
    "end": "1452539"
  },
  {
    "text": "um guidelines from Dan tur horse North was code in the language of the domain and actually the example that he uses",
    "start": "1452539",
    "end": "1457640"
  },
  {
    "text": "here um is oh it's crowdsourced but it's also an Open Source book it's available on get books",
    "start": "1457640",
    "end": "1463940"
  },
  {
    "text": "um uh the example that Dan uses is actually a",
    "start": "1463940",
    "end": "1469220"
  },
  {
    "text": "really good example of a number of things um good abstraction but also refactoring",
    "start": "1469220",
    "end": "1476419"
  },
  {
    "text": "if we look at this what we are confronted by is something where all of the elements are well named",
    "start": "1476419",
    "end": "1482960"
  },
  {
    "text": "we don't need to do a rename because there's nothing wrong with the",
    "start": "1482960",
    "end": "1488000"
  },
  {
    "text": "terminology portfolio IDs by Trader ID this is perfectly sensible",
    "start": "1488000",
    "end": "1493659"
  },
  {
    "text": "the get and contains key that comes from the Java library on a map get ID get ID",
    "start": "1493659",
    "end": "1500059"
  },
  {
    "text": "Trader portfolio these are all good names there's no names that I need to change the only abbreviation there is actually a real world abbreviation ID is",
    "start": "1500059",
    "end": "1506720"
  },
  {
    "text": "a real world abbreviation not a programmatic abbreviation and yet it's not clear what's going on",
    "start": "1506720",
    "end": "1512240"
  },
  {
    "text": "here what we are missing actually is a name you know we're naming an implied idea",
    "start": "1512240",
    "end": "1517700"
  },
  {
    "text": "it's not a rename it's giving a name sometimes there's a missing name what is this called it doesn't want to comment",
    "start": "1517700",
    "end": "1526120"
  },
  {
    "text": "it wants to be abstracted the semantic level at which we're working is can this Trader view this portfolio this is to do",
    "start": "1526400",
    "end": "1533240"
  },
  {
    "text": "with governance this is to do with whether or not somebody is allowed to see something or not because perhaps",
    "start": "1533240",
    "end": "1539360"
  },
  {
    "text": "they are doing Insider dealing if they can see it and that's a bad thing so what we've got here is this classic",
    "start": "1539360",
    "end": "1544940"
  },
  {
    "text": "extract method which you can do manually or you can do it automated",
    "start": "1544940",
    "end": "1550159"
  },
  {
    "start": "1549000",
    "end": "1755000"
  },
  {
    "text": "so last year I kind of posted this um one of the great things about",
    "start": "1550159",
    "end": "1555440"
  },
  {
    "text": "languages is modern ID support is thanks to refactoring tools Legacy code is the thing of the past",
    "start": "1555440",
    "end": "1561200"
  },
  {
    "text": "along with all the languages developers never have to experience long methods rounding classes poor identifier names with complex logic or any of these",
    "start": "1561200",
    "end": "1567799"
  },
  {
    "text": "things isn't it great that we live in an age where we don't have to tolerate",
    "start": "1567799",
    "end": "1573980"
  },
  {
    "text": "these kinds of issue because we have tools that address them I mean you just sit there going like you",
    "start": "1573980",
    "end": "1580340"
  },
  {
    "text": "know particularly the older ones of you you just say I'm so relieved I don't have to deal with poorly named code",
    "start": "1580340",
    "end": "1586159"
  },
  {
    "text": "anymore it's such a great comfort to me that I don't open this up and find methods that are longer than one screen",
    "start": "1586159",
    "end": "1593360"
  },
  {
    "text": "I live in an age of joy and for those of you who and have no idea what it was",
    "start": "1593360",
    "end": "1599000"
  },
  {
    "text": "like before you're going oh I'm so glad I don't live in the Dark Ages the only dark thing about my code is",
    "start": "1599000",
    "end": "1604100"
  },
  {
    "text": "dark mode foreign by this",
    "start": "1604100",
    "end": "1609559"
  },
  {
    "text": "that is what refactoring meant as we started getting tools that did this I remember doing a talk for the Java User",
    "start": "1609559",
    "end": "1616580"
  },
  {
    "text": "Group yavabin here in Oslo in 2003 at the University and somebody came up to me",
    "start": "1616580",
    "end": "1623360"
  },
  {
    "text": "and he said all these things you're talking about Kevin we don't need to worry about them anymore because we have refactoring tools and I kind of like",
    "start": "1623360",
    "end": "1630799"
  },
  {
    "text": "I kind of smiled at yeah the great thing you know even then I was older than this guy it's just",
    "start": "1630799",
    "end": "1636080"
  },
  {
    "text": "so sweet you're so young you know had I had the benefit of of",
    "start": "1636080",
    "end": "1643159"
  },
  {
    "text": "foresight and Game of Thrones I would have said Oh My Sweet Summer child that's not how this works",
    "start": "1643159",
    "end": "1650320"
  },
  {
    "text": "yeah some people miss the fact that I was joking in this original tweet and made comments but Kevin we do have this",
    "start": "1651020",
    "end": "1656299"
  },
  {
    "text": "and that's the point why do we have this when we have the tools that solve the problem",
    "start": "1656299",
    "end": "1661940"
  },
  {
    "text": "most things that people talk about in terms of unmanaged technical debt or technical neglect are solved problems",
    "start": "1661940",
    "end": "1668240"
  },
  {
    "text": "most people experience and complain about and are experiencing on a day-to-day basis basis",
    "start": "1668240",
    "end": "1674059"
  },
  {
    "text": "problems that have been solved it's not like we don't know how to do this when I entered the industry",
    "start": "1674059",
    "end": "1680720"
  },
  {
    "text": "I was having to deal with a Fortran Legacy code base we did not have any of the language or",
    "start": "1680720",
    "end": "1686419"
  },
  {
    "text": "insights or any of this thing I do not want to go back to that I don't want to live in that past and yet now I do",
    "start": "1686419",
    "end": "1692840"
  },
  {
    "text": "we produce a lot more code than we used to so what happened it turns out",
    "start": "1692840",
    "end": "1698299"
  },
  {
    "text": "it tools were never the problem that's why I think it's so important that refactoring is not about your idea if",
    "start": "1698299",
    "end": "1703880"
  },
  {
    "text": "your ID doesn't have refactoring that doesn't stop you that was never the problem automation lowers the barrier to",
    "start": "1703880",
    "end": "1709039"
  },
  {
    "text": "entry but if you're not prepared to take it as an option it turns out it's this it's not the tools it's our ability to",
    "start": "1709039",
    "end": "1716120"
  },
  {
    "text": "understand and feel empowered to do it that's the obstacle and that's not toolable",
    "start": "1716120",
    "end": "1723140"
  },
  {
    "text": "so I just started you know this I like kicked off this thread last year",
    "start": "1723140",
    "end": "1728360"
  },
  {
    "text": "because I just thought actually yeah seriously um refraction questions what family of refractors do you find you use most",
    "start": "1728360",
    "end": "1734240"
  },
  {
    "text": "whether it's automated or not you probably already in your head have",
    "start": "1734240",
    "end": "1739640"
  },
  {
    "text": "an answer to this you can probably think of the top one two maybe three but also one of the ones that you're",
    "start": "1739640",
    "end": "1745580"
  },
  {
    "text": "aware of that you think people don't use enough what the factors do you feel are most overlooked or underutilized or it's",
    "start": "1745580",
    "end": "1750860"
  },
  {
    "text": "by you or others so the one you know extract method there",
    "start": "1750860",
    "end": "1757820"
  },
  {
    "start": "1755000",
    "end": "2013000"
  },
  {
    "text": "was no surprise importantly it's not the extract family it's the extract method okay that one is",
    "start": "1757820",
    "end": "1764240"
  },
  {
    "text": "a really common one perhaps the most common one is rename okay to the point that sometimes I find",
    "start": "1764240",
    "end": "1771440"
  },
  {
    "text": "people doing a rename refactoring on something that only has one occurrence",
    "start": "1771440",
    "end": "1776539"
  },
  {
    "text": "like you know like a test name you don't need to refactor that the whole point of a refactoring tool is it updates all",
    "start": "1776539",
    "end": "1782000"
  },
  {
    "text": "references to things so in other words it's become so ingrained in people's fingers they don't even they think of it as just a even when they could just",
    "start": "1782000",
    "end": "1788539"
  },
  {
    "text": "rename it there they do a rename refactoring but of course there are limits to this",
    "start": "1788539",
    "end": "1794179"
  },
  {
    "text": "you can't rename everything I don't want to give you the impression that you can just change everything software does have boundaries of hardness",
    "start": "1794179",
    "end": "1799700"
  },
  {
    "text": "that has publication boundaries observation from Josh block public apis like diamonds are forever once you push",
    "start": "1799700",
    "end": "1805640"
  },
  {
    "text": "something out to people that you don't influence or control oh good luck with changing that",
    "start": "1805640",
    "end": "1810919"
  },
  {
    "text": "and that again let's go back to 2003 I was dealing with a team in Germany",
    "start": "1810919",
    "end": "1816679"
  },
  {
    "text": "and one of their guys again had fallen in love with the refactoring tools that's great and he says yeah we're",
    "start": "1816679",
    "end": "1822200"
  },
  {
    "text": "getting some real friction and real pushback from that team over there who are writing automated test tools for the",
    "start": "1822200",
    "end": "1827659"
  },
  {
    "text": "uh for our code systems level um and they don't like the fact that we refactor and I said and yeah they're",
    "start": "1827659",
    "end": "1833600"
  },
  {
    "text": "they're real luddites they're holding us back and I said well what's the problem well you know I'll just refactor and I'll change the name of something on",
    "start": "1833600",
    "end": "1839059"
  },
  {
    "text": "interface or I'll I'll delete an interface and stuff like that and said so basically what you're doing is you're interrupting their workflow",
    "start": "1839059",
    "end": "1845899"
  },
  {
    "text": "why should they be pleased with that the point is that there is an inside and an",
    "start": "1845899",
    "end": "1851120"
  },
  {
    "text": "outside to things there is a boundary you can't ease it once you go across a boundary it's no longer a question of",
    "start": "1851120",
    "end": "1857860"
  },
  {
    "text": "tooling and software engineering it's social engineering you are pissing that team off because they walk in and it's",
    "start": "1857860",
    "end": "1863539"
  },
  {
    "text": "just like oh I've now got things to fix whereas I didn't you're creating work for other people so I said you know you",
    "start": "1863539",
    "end": "1869659"
  },
  {
    "text": "need to understand what the boundaries are and you basically want a soft centered Suite",
    "start": "1869659",
    "end": "1874880"
  },
  {
    "text": "okay whatever your boundaries component layer whatever uh class you know it's Turtles all the way down it's a very",
    "start": "1874880",
    "end": "1881179"
  },
  {
    "text": "fractal thing software it's tougher on the outside and more stable than it is on the inside this is really important",
    "start": "1881179",
    "end": "1887179"
  },
  {
    "text": "otherwise you end up with you know we can see the problem you can't just refactor stuff my favorite example is is",
    "start": "1887179",
    "end": "1892820"
  },
  {
    "text": "clonable Okay so clonable you probably recognize this as an",
    "start": "1892820",
    "end": "1898159"
  },
  {
    "text": "interface or if you don't recognize clonable that's that's in the jvm if you're in the.net space icloneable",
    "start": "1898159",
    "end": "1905000"
  },
  {
    "text": "you developer I hate that I prefix we'll come back to that later I understand people use it but it is one",
    "start": "1905000",
    "end": "1911299"
  },
  {
    "text": "of the dumbest things ever um I will demonstrate its dumbness and how it's anti-software Engineering in a",
    "start": "1911299",
    "end": "1917059"
  },
  {
    "text": "moment but you're in you're entitled to use it you know it's your choice you just know you're doing something wrong",
    "start": "1917059",
    "end": "1923000"
  },
  {
    "text": "um the point there is this one jumped the gene pool it went from",
    "start": "1923000",
    "end": "1928279"
  },
  {
    "text": "and you know lots of languages now have this but here's the really interesting thing",
    "start": "1928279",
    "end": "1935020"
  },
  {
    "text": "I'm sure you okay so this is Norway and most of you are Norwegians all learning Norwegian",
    "start": "1936380",
    "end": "1941840"
  },
  {
    "text": "and you get a new spelling convention I don't know every five years which confuses the hell out of people but every time a Dane comes to Norway they",
    "start": "1941840",
    "end": "1948500"
  },
  {
    "text": "go oh thank goodness spelling actually works okay it's kind of vaguely fanatic even",
    "start": "1948500",
    "end": "1953779"
  },
  {
    "text": "as even as an English speaker I can kind of look at some Norwegian and go yeah I can kind of understand that I don't have to figure out too much it looks vaguely",
    "start": "1953779",
    "end": "1960380"
  },
  {
    "text": "phonetic English no not so much",
    "start": "1960380",
    "end": "1965720"
  },
  {
    "text": "but in as much and sometimes people say English doesn't have a logical system of spelling I'm really interested in language I have",
    "start": "1965720",
    "end": "1972320"
  },
  {
    "text": "bad news for you it's the problem is not that English doesn't have a logical system of spelling is that English has about half",
    "start": "1972320",
    "end": "1977779"
  },
  {
    "text": "a dozen logical systems of spelling simultaneously all in the same language in the same word sometimes",
    "start": "1977779",
    "end": "1985000"
  },
  {
    "text": "I believe that's called competitive spirit but in as much as there is a correct",
    "start": "1985159",
    "end": "1990200"
  },
  {
    "text": "spelling of clonable it doesn't have that first e what happens if I wanted to refactor",
    "start": "1990200",
    "end": "1995240"
  },
  {
    "text": "that what happens if I'm Microsoft and I go yeah you know what let's just refactor that what happens if I'm Oracle I want",
    "start": "1995240",
    "end": "2000700"
  },
  {
    "text": "to refactor that then you just hear the sounds of systems breaking all around the world",
    "start": "2000700",
    "end": "2007240"
  },
  {
    "text": "that's what publication means that's not your interface anymore okay you've given",
    "start": "2007240",
    "end": "2012460"
  },
  {
    "text": "up control of it however I'd just like to point out that with great power comes great",
    "start": "2012460",
    "end": "2018519"
  },
  {
    "start": "2013000",
    "end": "2169000"
  },
  {
    "text": "responsibility here is the Wiktionary entry on clonable Alternative forms especially in Computing contexts well",
    "start": "2018519",
    "end": "2025840"
  },
  {
    "text": "done us we have changed the spelling of a word through repeated misspelling repetition legitimizes repetition",
    "start": "2025840",
    "end": "2033580"
  },
  {
    "text": "legitimizes repetition legitimizes it makes it real",
    "start": "2033580",
    "end": "2039159"
  },
  {
    "text": "but what we learned from this is a simple guidance that not all things are created equal we misunderstand the",
    "start": "2039159",
    "end": "2044200"
  },
  {
    "text": "boundaries that what we want to do is we want to encourage the softness that as",
    "start": "2044200",
    "end": "2049300"
  },
  {
    "text": "much as possible and this is not new advice this is last century advice don't publish interfaces",
    "start": "2049300",
    "end": "2054580"
  },
  {
    "text": "prematurely modify your code ownership policies to",
    "start": "2054580",
    "end": "2060398"
  },
  {
    "text": "smooth refactoring there is a philosophy here it's a design philosophy",
    "start": "2060399",
    "end": "2065618"
  },
  {
    "text": "what this also means goes against what some people think of as being a practice",
    "start": "2065619",
    "end": "2071440"
  },
  {
    "text": "make code AS open to modification as possible Don't Close Your code modification don't make your code",
    "start": "2071440",
    "end": "2077800"
  },
  {
    "text": "extensible these are bad practices these are not good if you are interested in Agile",
    "start": "2077800",
    "end": "2083500"
  },
  {
    "text": "development and keeping software soft you make your code as much of your code",
    "start": "2083500",
    "end": "2088960"
  },
  {
    "text": "AS modified as possible you eliminate the possibility of extension that is not necessary and when you discover it is",
    "start": "2088960",
    "end": "2095500"
  },
  {
    "text": "necessary you will have the knowledge to do it effectively rather than creating a debt",
    "start": "2095500",
    "end": "2101440"
  },
  {
    "text": "we can call this the closed open principle so",
    "start": "2101440",
    "end": "2106900"
  },
  {
    "text": "what about the ones that people neglect extract class really not very popular",
    "start": "2106900",
    "end": "2114520"
  },
  {
    "text": "which is why we end up with large classes we're a lot happier to extract a method but something about a class",
    "start": "2114520",
    "end": "2119800"
  },
  {
    "text": "pushes it into a bound and pushes it across a boundaries like it's like a surface tension issue it's really or an",
    "start": "2119800",
    "end": "2125680"
  },
  {
    "text": "escape velocity it's just like oh I'm not going to pull that into another class because that probably means I put",
    "start": "2125680",
    "end": "2131140"
  },
  {
    "text": "it in another file and that's another different thing in the version control system and I'll have to oh now I'm not",
    "start": "2131140",
    "end": "2137260"
  },
  {
    "text": "going to create a new file for that that's that's that's that's too much there's too much of a an activation energy to get to that level I'll just",
    "start": "2137260",
    "end": "2143320"
  },
  {
    "text": "keep it here you know nobody will notice because the class is already 10 000 lines long nobody's going to notice another few lines",
    "start": "2143320",
    "end": "2151079"
  },
  {
    "text": "so inlining the opposite of extraction sometimes we want to do things that are",
    "start": "2151480",
    "end": "2158859"
  },
  {
    "text": "the opposite simplify by actually removing an abstraction",
    "start": "2158859",
    "end": "2164680"
  },
  {
    "text": "replacing things deleting things oh we're really bad at that",
    "start": "2164680",
    "end": "2170400"
  },
  {
    "start": "2169000",
    "end": "2259000"
  },
  {
    "text": "as I noted quite a while back now we keep talking about incremental development we don't talk enough about",
    "start": "2170619",
    "end": "2175839"
  },
  {
    "text": "decremental development there is a real skill in getting rid of the things that you don't want do we need this no is there a simple way",
    "start": "2175839",
    "end": "2182560"
  },
  {
    "text": "of doing it yes is any other piece of code calling no I can't get rid of it that's that code is dead you don't want",
    "start": "2182560",
    "end": "2188079"
  },
  {
    "text": "to come back to life when you're not expecting it zombie code is bad it has cost the world billions of dollars",
    "start": "2188079",
    "end": "2193300"
  },
  {
    "text": "so there is a kind of philosophy that people normally think of in the context language that we get from lean",
    "start": "2193300",
    "end": "2199839"
  },
  {
    "text": "um Kaizen or let's give them that it's Japanese I will show you the uh hiragana",
    "start": "2199839",
    "end": "2206980"
  },
  {
    "text": "um can I say in Japanese basically means just Improvement but in a business context",
    "start": "2206980",
    "end": "2212859"
  },
  {
    "text": "it has a very specific meaning the idea of continuous Improvement the idea of like we're always doing it's gradual",
    "start": "2212859",
    "end": "2217960"
  },
  {
    "text": "it's gradual this is kind of like the everyday you brush your teeth you have a shower type thing you don't save it up till the",
    "start": "2217960",
    "end": "2224859"
  },
  {
    "text": "end of the month okay you know this is the way a lot of teams do refactoring that's okay uh you",
    "start": "2224859",
    "end": "2230079"
  },
  {
    "text": "know I'm going to save time by not brushing my teeth and having a shower today I will save it all up to the end",
    "start": "2230079",
    "end": "2235780"
  },
  {
    "text": "of the month and then I will spend the last Sunday of the month just just brushing my teeth and having showers and",
    "start": "2235780",
    "end": "2242260"
  },
  {
    "text": "then I will see all those people who've been avoiding me for the last few weeks which has been like honestly a lot easier with working from home",
    "start": "2242260",
    "end": "2249099"
  },
  {
    "text": "um but the point there is that this is the gradual stuff it's it's the prevention of Decay or it's the gradual Improvement it's the we",
    "start": "2249099",
    "end": "2255040"
  },
  {
    "text": "always do one good thing okay just clean things up a little bit",
    "start": "2255040",
    "end": "2260320"
  },
  {
    "start": "2259000",
    "end": "2366000"
  },
  {
    "text": "and it's this Progressive stable intermediate form that we're interesting each step that we go through is a good",
    "start": "2260320",
    "end": "2266320"
  },
  {
    "text": "step when you've refactored what you've got may not be perfect but it was better than what you had before it's moving in",
    "start": "2266320",
    "end": "2272140"
  },
  {
    "text": "a direction you may not be at your destination yet so very simple example um let's let's play around with words by",
    "start": "2272140",
    "end": "2277900"
  },
  {
    "text": "quinary coded decimal um this is a fun word um it's a counting system of",
    "start": "2277900",
    "end": "2283359"
  },
  {
    "text": "representing numbers based on counting in fives I have no idea where that came from",
    "start": "2283359",
    "end": "2288720"
  },
  {
    "text": "with an additional indicator to show whether the count is in the first or the second five okay so in other words we",
    "start": "2288760",
    "end": "2295480"
  },
  {
    "text": "break it down into tens but then we have two groups of five and we can either be counting one to five six to ten or zero",
    "start": "2295480",
    "end": "2301780"
  },
  {
    "text": "to four five to nine and there are a number of systems that use this classic Abacus systems not the kinds you give to",
    "start": "2301780",
    "end": "2308079"
  },
  {
    "text": "your kids because that really messes with them this kind of thing okay I remember as a kid seeing one of these and going like this is really stupid it",
    "start": "2308079",
    "end": "2314380"
  },
  {
    "text": "only goes up to seven um it's like looking at a bike and going like okay there's three gears there and",
    "start": "2314380",
    "end": "2321280"
  },
  {
    "text": "there's five gears there my bike has eight gears no that's not how it works by quinary this is still used in some",
    "start": "2321280",
    "end": "2327820"
  },
  {
    "text": "parts of the world very effective but it's a bike Winery system okay you have an upper register for lower or upper five and then you have your five very",
    "start": "2327820",
    "end": "2334420"
  },
  {
    "text": "effective um it was actually used on early computers before we discovered the joy of just",
    "start": "2334420",
    "end": "2339940"
  },
  {
    "text": "like sort it just do it in binary but we faked up a decimal system and here we",
    "start": "2339940",
    "end": "2346240"
  },
  {
    "text": "have the Colossus with human computers um feeding feeding the machine",
    "start": "2346240",
    "end": "2352060"
  },
  {
    "text": "um but perhaps one of the classic number systems a non-positional counting system",
    "start": "2352060",
    "end": "2357880"
  },
  {
    "text": "is the Roman numeral system it's based on fives you probably never really thought about it like that you just thought about it as a kind of a",
    "start": "2357880",
    "end": "2364300"
  },
  {
    "text": "bunch of letters you know that um made you live it um but you know remembering the various",
    "start": "2364300",
    "end": "2369700"
  },
  {
    "start": "2366000",
    "end": "2530000"
  },
  {
    "text": "letters and this gives us a nice really simple Carter so the kind of standard Carter is okay I'm going to take a",
    "start": "2369700",
    "end": "2374740"
  },
  {
    "text": "number I'm going to take an integer and I'm going to convert it into Roman numerals I'm going to convert it into string form sure fine go ahead and if",
    "start": "2374740",
    "end": "2382300"
  },
  {
    "text": "you tackle this in a kind of enterprisey way you'll end up with code like this if you are being paid by the line of",
    "start": "2382300",
    "end": "2388839"
  },
  {
    "text": "code this is an absolutely fantastic way of doing it it is needlessly imperative it's all",
    "start": "2388839",
    "end": "2393880"
  },
  {
    "text": "about State change it's a lot of repetition and I would generally say this is I mean",
    "start": "2393880",
    "end": "2400060"
  },
  {
    "text": "I'm not saying there's anything wrong with doing this as your first cut Solution that's the whole point it's if this is the way that you're programming",
    "start": "2400060",
    "end": "2405220"
  },
  {
    "text": "in it go for it there is nothing wrong with doing that remember your software is soft okay you're not this is not you're not",
    "start": "2405220",
    "end": "2412720"
  },
  {
    "text": "committing anything to anybody you're not making a promise this is how it's going to be you're just getting your thoughts out on paper there's nothing",
    "start": "2412720",
    "end": "2418119"
  },
  {
    "text": "wrong with writing this there is a problem with checking it in though and saying yep I'm done there is a problem with putting in a",
    "start": "2418119",
    "end": "2424720"
  },
  {
    "text": "book like this this is the thing I was absolutely fascinated by a couple so I",
    "start": "2424720",
    "end": "2429940"
  },
  {
    "text": "like that here I like looking into the history of programming I think we software development doesn't have a very long history but it does have a history",
    "start": "2429940",
    "end": "2436660"
  },
  {
    "text": "and you know history is a vast early warning system of all the mistakes we're going to make",
    "start": "2436660",
    "end": "2441820"
  },
  {
    "text": "again and there is the classic quote you know those who those who do not know history",
    "start": "2441820",
    "end": "2447579"
  },
  {
    "text": "are destined to repeat it there was also the counter quote that those who do know history are destined to watch it being",
    "start": "2447579",
    "end": "2452800"
  },
  {
    "text": "repeated and Pascal was often held up as the",
    "start": "2452800",
    "end": "2458619"
  },
  {
    "text": "language to learn it's a good teaching language I say I I I'm going to go against that",
    "start": "2458619",
    "end": "2464640"
  },
  {
    "text": "I said originally I did Fortran when I saw Pascal I thought this is fantastic now I have a bit more experience Pascal",
    "start": "2464800",
    "end": "2471220"
  },
  {
    "text": "is a crap language I mean you you can try and argue that with me the only people who ever argue that with me are",
    "start": "2471220",
    "end": "2476560"
  },
  {
    "text": "people who use object Pascal I always point out but object Pascal is not Pascal in the same way that Objective C is not",
    "start": "2476560",
    "end": "2483579"
  },
  {
    "text": "C and it's not small talk in the same way that c plus is not small talk in the same way that you pick a language it's",
    "start": "2483579",
    "end": "2489640"
  },
  {
    "text": "not whatever came before it object Pascal is not Pascal it's a pascal-based language it fixes most of the problems",
    "start": "2489640",
    "end": "2495880"
  },
  {
    "text": "not all of them but most of them but this is it people held this up as an ideal and here is one of the original",
    "start": "2495880",
    "end": "2501040"
  },
  {
    "text": "books and yeah right in there that stuff on the right is exactly what I just showed you in Python a moment ago it's",
    "start": "2501040",
    "end": "2508000"
  },
  {
    "text": "just like oh my God it's because Pascal has weak abstraction mechanisms",
    "start": "2508000",
    "end": "2513480"
  },
  {
    "text": "yeah there I said it it's bad for programming it lacks the basic tools for data abstraction it lacks the ability to",
    "start": "2513640",
    "end": "2522160"
  },
  {
    "text": "factor out things appropriately let's look at the kind of factions people do so here is this structure",
    "start": "2522160",
    "end": "2528400"
  },
  {
    "text": "what are we going to do with it we're going to refactor it okay what's the advice on refactoring refractions about",
    "start": "2528400",
    "end": "2533619"
  },
  {
    "start": "2530000",
    "end": "2667000"
  },
  {
    "text": "small changes everything works always it's about stable intermediate forms it's like",
    "start": "2533619",
    "end": "2538900"
  },
  {
    "text": "walking okay with walking the definition of of walking versus running is that walking means you maintain at least one",
    "start": "2538900",
    "end": "2545079"
  },
  {
    "text": "point of contact with the ground at any point at any point in time it's always there it's like one two one two",
    "start": "2545079",
    "end": "2551800"
  },
  {
    "text": "running is zero one zero one maybe that's why developers like running",
    "start": "2551800",
    "end": "2556960"
  },
  {
    "text": "okay but the problem is it's a less stable configuration if you make a mistake you fall it hurts a lot more",
    "start": "2556960",
    "end": "2563200"
  },
  {
    "text": "okay you may move faster but you crash faster as well you're more likely to crash the idea of refactoring",
    "start": "2563200",
    "end": "2569200"
  },
  {
    "text": "refactoring is walking it's gradual change to support us we value tests we value",
    "start": "2569200",
    "end": "2577180"
  },
  {
    "text": "automation we value another pair of eyes these are all ways of ensuring that we don't trip up that every step is",
    "start": "2577180",
    "end": "2584560"
  },
  {
    "text": "confidently placed this when we talk about stable intermediate forms it's the idea of the intermediate form between here and there each step is stable I can",
    "start": "2584560",
    "end": "2591819"
  },
  {
    "text": "stop there and won't fall over that's the idea if you're in a sequence of refactoring",
    "start": "2591819",
    "end": "2596980"
  },
  {
    "text": "and that's the point is refactoring is a plural if you're in a sequence of them you get interrupted that's fine it all",
    "start": "2596980",
    "end": "2602079"
  },
  {
    "text": "still works that's the idea it's not like okay this is going to be a work of art for the next two hours I'm just",
    "start": "2602079",
    "end": "2607839"
  },
  {
    "text": "going to put on the loudest rock on repeat on my headphones and nobody better interrupt me because otherwise",
    "start": "2607839",
    "end": "2613960"
  },
  {
    "text": "the whole thing falls apart I can't hold it in my head for longer than that refactoring is like interrupting me at",
    "start": "2613960",
    "end": "2619180"
  },
  {
    "text": "any point I won't thank you for it but I will recover from it so we put some tests in",
    "start": "2619180",
    "end": "2624940"
  },
  {
    "text": "so here's some tests I've written in Python without a python testing framework it's based on a property-based testing style",
    "start": "2624940",
    "end": "2630760"
  },
  {
    "text": "um it just basically checks that what we've got is Meaningful stuff I'm not expecting you to to read this but these",
    "start": "2630760",
    "end": "2636880"
  },
  {
    "text": "are the tests that I use when messing about with this code or these are the refactored tests I use when messing about this code and so we can take this",
    "start": "2636880",
    "end": "2643540"
  },
  {
    "text": "and what are we going to do well what most people look at first",
    "start": "2643540",
    "end": "2649960"
  },
  {
    "text": "is they see the recurrence they see a repetition they see that there is a grouping here",
    "start": "2649960",
    "end": "2655720"
  },
  {
    "text": "while if if while if if if while if if if and then one more while for luck",
    "start": "2655720",
    "end": "2664079"
  },
  {
    "text": "there's always one left over so in other words what we can factor out we can recognize that it's not just",
    "start": "2664119",
    "end": "2670780"
  },
  {
    "text": "while if if it's that there is another structure here",
    "start": "2670780",
    "end": "2675880"
  },
  {
    "text": "the numeric structure it's a 10 something nine something five something four something",
    "start": "2675880",
    "end": "2681300"
  },
  {
    "text": "1900 500 400 okay 90 or 190 50 40 10 9 5",
    "start": "2681300",
    "end": "2689619"
  },
  {
    "text": "4. there's a recurrence there we fit we've seen the repetition we're cool we're going to extract it",
    "start": "2689619",
    "end": "2695500"
  },
  {
    "text": "not so fast extract method is one of the most popular techniques but actually I'm",
    "start": "2695500",
    "end": "2700900"
  },
  {
    "text": "going to say not always but in most cases it's premature don't extract the method yet",
    "start": "2700900",
    "end": "2706420"
  },
  {
    "text": "the problem here is that you haven't looked enough at the control flow people don't think about control flow enough",
    "start": "2706420",
    "end": "2712060"
  },
  {
    "text": "people think oh control flow that's the thing you used to worry about in the 70s and 80s no it's the basic ingredient of",
    "start": "2712060",
    "end": "2717819"
  },
  {
    "text": "a lot of software particularly in imperative languages control flow matters you need to this is a control flow problem you need to understand why",
    "start": "2717819",
    "end": "2725260"
  },
  {
    "text": "we have while if if and are there any other Transformations you can make well",
    "start": "2725260",
    "end": "2731140"
  },
  {
    "text": "one of the most simple Transformations is to recognize that in the limit an if is like a while",
    "start": "2731140",
    "end": "2738040"
  },
  {
    "text": "and if there's a thing that executes zero or once a while is the thing that execute zero once or many",
    "start": "2738040",
    "end": "2743560"
  },
  {
    "text": "in the limit some ifs can be replaced with a while not all don't don't get please don't go",
    "start": "2743560",
    "end": "2749619"
  },
  {
    "text": "into work and do that tomorrow just that would be really bad things will break but sometimes in the edge case I can",
    "start": "2749619",
    "end": "2756460"
  },
  {
    "text": "happily replace all of the ifs with the Wiles this is a degenerate case in this case it works",
    "start": "2756460",
    "end": "2762280"
  },
  {
    "text": "perfectly that's interesting because what that actually means is that our unit of",
    "start": "2762280",
    "end": "2769359"
  },
  {
    "start": "2766000",
    "end": "2802000"
  },
  {
    "text": "repetition is this it's not the block of ten nine five four it's a single loop",
    "start": "2769359",
    "end": "2776920"
  },
  {
    "text": "with two modifications what we need to do is to extract the data structure this",
    "start": "2776920",
    "end": "2782920"
  },
  {
    "text": "problem is not a control flow problem as it was first presented to us the control flow was like a kind of a squid ink it",
    "start": "2782920",
    "end": "2790660"
  },
  {
    "text": "kind of it clouded our judgment you need to look through it and go oh this is a data structure problem the control flow",
    "start": "2790660",
    "end": "2796839"
  },
  {
    "text": "is trivial actually it's the data model that's important here",
    "start": "2796839",
    "end": "2802359"
  },
  {
    "start": "2802000",
    "end": "2841000"
  },
  {
    "text": "is this a new advice no it isn't um in the mythical man month and the second edition actually I think it was",
    "start": "2802359",
    "end": "2808720"
  },
  {
    "text": "in even in the first no it was in the first edition so in other words this is something that Fred Brooks wrote in this in the 70s",
    "start": "2808720",
    "end": "2815140"
  },
  {
    "text": "Under The Heading of representation is the essence of programming he said sometimes the Strategic breakthrough",
    "start": "2815140",
    "end": "2820540"
  },
  {
    "text": "will be a new algorithm much more often strategic breakthrough will come from redoing the representation of the data or tables",
    "start": "2820540",
    "end": "2827200"
  },
  {
    "text": "this is where the heart of the program is this is the soul of your code it's the data structure it's not the control",
    "start": "2827200",
    "end": "2833260"
  },
  {
    "text": "flow and yet we because we don't understand the control flow we don't see the hidden data structures we end up",
    "start": "2833260",
    "end": "2840700"
  },
  {
    "text": "with a very imperative style of programming John Von Neumann in his Turing award speech are in 1977",
    "start": "2840700",
    "end": "2848319"
  },
  {
    "start": "2841000",
    "end": "2892000"
  },
  {
    "text": "published 78 he talked about probably this is the",
    "start": "2848319",
    "end": "2855160"
  },
  {
    "text": "longest longest uh touring award speech title of all can programming be liberated from the Von Neumann style a",
    "start": "2855160",
    "end": "2861220"
  },
  {
    "text": "functional style and its algebra of programs it's also one of the most technical presentations ever for a touring award",
    "start": "2861220",
    "end": "2866980"
  },
  {
    "text": "speech notice he says style the word Paradigm was not yet used you had to wait one more year before Robert Floyd",
    "start": "2866980",
    "end": "2873460"
  },
  {
    "text": "won the Turing award and introduced the world of programming to the word paradigm okay paradigms are programming",
    "start": "2873460",
    "end": "2880359"
  },
  {
    "text": "was his paper the following year people were not using the word Paradigm in software at all so there is a kind of like a break point 1978 onwards people",
    "start": "2880359",
    "end": "2887859"
  },
  {
    "text": "start using the word Paradigm before that it's just Style and he makes this observation he said conventional programming languages are",
    "start": "2887859",
    "end": "2894339"
  },
  {
    "start": "2892000",
    "end": "2968000"
  },
  {
    "text": "basically high level complex versions of the Von Neumann computer okay Von Neumann languages use variables",
    "start": "2894339",
    "end": "2900339"
  },
  {
    "text": "to imitate storage control statements elaborate jump and Test instructions and assignment",
    "start": "2900339",
    "end": "2905619"
  },
  {
    "text": "statements imitate fetching story and arithmetic now is an interesting thing I'm going to take a",
    "start": "2905619",
    "end": "2911680"
  },
  {
    "text": "I'm going to take an example to kind of exemplify the fact that we're really bad at understanding our own State change lots of people kind of say oh we're",
    "start": "2911680",
    "end": "2917920"
  },
  {
    "text": "doing kind of functional stuff and then I look at their code it's just like no you're not you've just got a couple of immutable objects and a bit of Link",
    "start": "2917920",
    "end": "2924819"
  },
  {
    "text": "it's kind of like it's kind of like uh functional sprinkling but it doesn't make it functional you've not paid",
    "start": "2924819",
    "end": "2931060"
  },
  {
    "text": "attention to what are the changes you'd keep modifying variables and you have incredibly imperative control flow",
    "start": "2931060",
    "end": "2936400"
  },
  {
    "text": "control flow has State you can make control flow less stateless I'll give you one piece of advice today remember",
    "start": "2936400",
    "end": "2943420"
  },
  {
    "text": "the ifs have an else for some reason recently people have I've even seen talks and blogs saying I",
    "start": "2943420",
    "end": "2949240"
  },
  {
    "text": "no longer use else's and it's just like great when's when's your next blog I use assembler",
    "start": "2949240",
    "end": "2955180"
  },
  {
    "text": "um people have missed the message control flow has State that's a really important",
    "start": "2955180",
    "end": "2960579"
  },
  {
    "text": "thing you can make your control for Less stateless by using else technology I've just realized The Branding let's call it",
    "start": "2960579",
    "end": "2966040"
  },
  {
    "text": "a technology and people use it anyway that's that's by the buy okay so I'm not expecting you to read this code although",
    "start": "2966040",
    "end": "2971920"
  },
  {
    "start": "2968000",
    "end": "3287000"
  },
  {
    "text": "quite frankly the size of the screen you can probably read this I want you to get an impression of this code",
    "start": "2971920",
    "end": "2977619"
  },
  {
    "text": "this code is from the Gilded Rose refactoring Carter if you've never tried this Carter it's good fun it's a pure",
    "start": "2977619",
    "end": "2983260"
  },
  {
    "text": "refactoring card it's not about it you do need to put some tests in but it's not about adding new functionality the",
    "start": "2983260",
    "end": "2988660"
  },
  {
    "text": "goal of this is actually to refactor the code and I like this because it actually looks a lot like control flow that I see",
    "start": "2988660",
    "end": "2994780"
  },
  {
    "text": "in real code it's very it's very evolved it's been around for a while nobody ever sat down",
    "start": "2994780",
    "end": "3000720"
  },
  {
    "text": "to write it like this it just got added and added and added it's it's the process of accumulation coupled with a",
    "start": "3000720",
    "end": "3006839"
  },
  {
    "text": "process of neglect so we can see the structure there what I'm going to do is I'm going to get rid of all the curly brackets",
    "start": "3006839",
    "end": "3013560"
  },
  {
    "text": "there is actually by the way as an aside there is a strong case for going against one of the practices",
    "start": "3013560",
    "end": "3019740"
  },
  {
    "text": "people now regard as good practice always put curly braces around your",
    "start": "3019740",
    "end": "3024900"
  },
  {
    "text": "blocks actually I go the other way I challenge people to make everything single statement there are a number of",
    "start": "3024900",
    "end": "3030660"
  },
  {
    "text": "consequences of that one of which is actually safer but that's another talk I'll just leave that one dangling there",
    "start": "3030660",
    "end": "3036300"
  },
  {
    "text": "if you go I don't believe it Kevin just called the open close principle crap and he's telling us that Curly brackets",
    "start": "3036300",
    "end": "3041339"
  },
  {
    "text": "around blocks is not the way to go if your language requires it then of course you do it",
    "start": "3041339",
    "end": "3047040"
  },
  {
    "text": "I'm not asking that you don't compile your code but I am saying you might be surprised but that's another story so I",
    "start": "3047040",
    "end": "3053520"
  },
  {
    "text": "want to focus on the things that happen here and when I talk about the things that happen let me highlight in white all the",
    "start": "3053520",
    "end": "3060720"
  },
  {
    "text": "places where there is State change these are all the places where um oh sorry",
    "start": "3060720",
    "end": "3066180"
  },
  {
    "text": "all the places where we get some kind of modification of State yeah so these are all places with State change I'm going",
    "start": "3066180",
    "end": "3071940"
  },
  {
    "text": "to narrow it you don't need to know what this represents but this looks like feature Envy item I",
    "start": "3071940",
    "end": "3077880"
  },
  {
    "text": "dot quality we if we look here these are all the places that that is modified and here",
    "start": "3077880",
    "end": "3084660"
  },
  {
    "text": "are all the places it is referred to this is what is referred to as the feature Envy smell we are constantly",
    "start": "3084660",
    "end": "3090900"
  },
  {
    "text": "repeatingly going back to this sometimes to check it sometimes to modify it's like we can't leave it alone",
    "start": "3090900",
    "end": "3096660"
  },
  {
    "text": "it's just oh I want to change it I want to look at look at it again maybe it's changing a lot I need to this immediately tells us that our control",
    "start": "3096660",
    "end": "3102960"
  },
  {
    "text": "flow is there's something wrong here and in the worst case this is the worst case scenario this is the path where we so",
    "start": "3102960",
    "end": "3111240"
  },
  {
    "text": "item quality we look at it one two three four five six seven eight times uh or",
    "start": "3111240",
    "end": "3117420"
  },
  {
    "text": "can I not count it's seven sorry plus one um so it's seven times we look at it",
    "start": "3117420",
    "end": "3123300"
  },
  {
    "text": "and we modify it in four places it's like we can't leave it alone",
    "start": "3123300",
    "end": "3130319"
  },
  {
    "text": "it's bizarre it's just like what what have we done that keeps causing us to reassign and recheck and reassign and",
    "start": "3130319",
    "end": "3135720"
  },
  {
    "text": "recheck so here's the refracted version now one",
    "start": "3135720",
    "end": "3141540"
  },
  {
    "text": "of the things I like about the Guild of Rose Carter is that I find a lot of people they do two things with",
    "start": "3141540",
    "end": "3146700"
  },
  {
    "text": "the one or two things that take them in the wrong direction when they do this one of them",
    "start": "3146700",
    "end": "3153059"
  },
  {
    "text": "is they look at this and they say I am going to extract method everywhere",
    "start": "3153059",
    "end": "3158400"
  },
  {
    "text": "premature extract method actually prevents you from seeing the commonality you need to sometimes you need to put it's like tidying a room you need to put",
    "start": "3158400",
    "end": "3164520"
  },
  {
    "text": "everything in one place to see what's going on then you need to reclassify it don't pull it out based on your initial",
    "start": "3164520",
    "end": "3169980"
  },
  {
    "text": "conceptions you will prevent yourself seeing what's wrong the other thing that people do is try and add an object model which would be fine if it were an",
    "start": "3169980",
    "end": "3175800"
  },
  {
    "text": "object-oriented problem it's not an object or any problem though so anybody doing this with classes just",
    "start": "3175800",
    "end": "3181980"
  },
  {
    "text": "creates more complexity first of all take it at the level at which it's presented it's a control flow",
    "start": "3181980",
    "end": "3187079"
  },
  {
    "text": "problem how do I improve the control flow because we seem to be modifying and looking at everything okay",
    "start": "3187079",
    "end": "3193740"
  },
  {
    "text": "this if we flip the control flow if we take an approach to control flow where",
    "start": "3193740",
    "end": "3198900"
  },
  {
    "text": "we understand that what we are doing is effectively setting up some kind of Pipeline and selection mechanism then",
    "start": "3198900",
    "end": "3204240"
  },
  {
    "text": "what you end up with so let's re re um resize this drop the curlies",
    "start": "3204240",
    "end": "3211039"
  },
  {
    "text": "the ones in white that's the only place State change happens now there's no other state change here the",
    "start": "3211800",
    "end": "3217859"
  },
  {
    "text": "only other value being assigned quality adjustment that's not an assignment that's an initialization",
    "start": "3217859",
    "end": "3224760"
  },
  {
    "text": "okay in other words that value is an assigned once very it's basically a constant",
    "start": "3224760",
    "end": "3230760"
  },
  {
    "text": "there is only one place where State change happens and there is only one place where we look at item quality and this is just the control flow",
    "start": "3230760",
    "end": "3237359"
  },
  {
    "text": "refactoring take take the code on the terms it presents you can I clean it up at that",
    "start": "3237359",
    "end": "3242400"
  },
  {
    "text": "level and then if you start saying well that's really funny I've got a selection and then I've got a response to it",
    "start": "3242400",
    "end": "3247680"
  },
  {
    "text": "at this point it's just like actually it's a table lookup problem it's a data driven problem it's a declarative problem it's a table problem",
    "start": "3247680",
    "end": "3254400"
  },
  {
    "text": "but now I have lambdas hanging off this is what I do in this case I classify so",
    "start": "3254400",
    "end": "3259680"
  },
  {
    "text": "I basically end up with here are the tables this is how to find the right entry in the table tables find",
    "start": "3259680",
    "end": "3265980"
  },
  {
    "text": "the thing do the thing tables find the thing do the thing that's it it's a table driven problem it's not an object",
    "start": "3265980",
    "end": "3271260"
  },
  {
    "text": "or into problem it's not even a control flow problem but it was presented as a control flow problem now when I look at this",
    "start": "3271260",
    "end": "3279200"
  },
  {
    "text": "there's the state change that we had before and there is the only point where we actually modify the quality but now it's a lookup problem very very",
    "start": "3279300",
    "end": "3286260"
  },
  {
    "text": "different in that sense and it's a reminder that this is what abstraction is about it's not to be",
    "start": "3286260",
    "end": "3292920"
  },
  {
    "start": "3287000",
    "end": "3545000"
  },
  {
    "text": "vague it is to create a new semantic level in which we can be absolutely precise if we",
    "start": "3292920",
    "end": "3299040"
  },
  {
    "text": "go back to just a simple structure here so",
    "start": "3299040",
    "end": "3304800"
  },
  {
    "text": "this is not a lot of code in all the examples I show they're not a lot of codes oh yeah but we have a big",
    "start": "3304800",
    "end": "3310680"
  },
  {
    "text": "system how do you think you've got a big system you've got a big system because All the Small Things became big",
    "start": "3310680",
    "end": "3317099"
  },
  {
    "text": "it turns out that you know I work with a team a number of years ago we had this kind of like method that was about eight lines long",
    "start": "3317099",
    "end": "3323579"
  },
  {
    "text": "and I said what does this do and everybody went ah it was just this tangle of logic and flags",
    "start": "3323579",
    "end": "3329880"
  },
  {
    "text": "so we worked on it it came out as one line basically it was return a does not equal",
    "start": "3329880",
    "end": "3335760"
  },
  {
    "text": "B it turns out you can make that quite complicated if you really try and put your mind to it",
    "start": "3335760",
    "end": "3342920"
  },
  {
    "text": "and that was the important point the guys then said yeah but Kevin you've only saved us",
    "start": "3343559",
    "end": "3349200"
  },
  {
    "text": "seven lines and I said no think about it another way I've reduced this by a factor of eight",
    "start": "3349200",
    "end": "3354420"
  },
  {
    "text": "the funny thing is I just made an estimate of their code base that was was compatible with that their",
    "start": "3354420",
    "end": "3359819"
  },
  {
    "text": "code base was about a million lines long after working with them for a few weeks I kind of got the feeling that it should be about 10 times smaller I said you've",
    "start": "3359819",
    "end": "3366839"
  },
  {
    "text": "done it a million lines what other teams would do in a hundred thousand and that's because of the little habits if you make everything 10 times long or",
    "start": "3366839",
    "end": "3373500"
  },
  {
    "text": "eight times longer or five times longer than it should be that's how you create big systems so yes the little stuff",
    "start": "3373500",
    "end": "3378839"
  },
  {
    "text": "matters sweat it it's important because that's how you if you don't pay attention to that that's how your",
    "start": "3378839",
    "end": "3383880"
  },
  {
    "text": "systems get big and complicated now you might say this is not the most complicated control flow but we should get a heads up here this is we're",
    "start": "3383880",
    "end": "3390180"
  },
  {
    "text": "looking at this and it's like suddenly with an integer driven counting through a list",
    "start": "3390180",
    "end": "3396000"
  },
  {
    "text": "if you are working in a language that was invented after 1980 you have to think you're doing something wrong",
    "start": "3396000",
    "end": "3401640"
  },
  {
    "text": "okay if I am using an integer to count through there's something wrong and what",
    "start": "3401640",
    "end": "3407339"
  },
  {
    "text": "am I actually doing well initially it's yeah I get a list I've got a list of words then I sort it that's good that's",
    "start": "3407339",
    "end": "3412619"
  },
  {
    "text": "nice and high level and then I do all of this control flow what's going on this is a very stateful piece of control flow",
    "start": "3412619",
    "end": "3418619"
  },
  {
    "text": "so let me extract method okay this is the block that's out of Step high level",
    "start": "3418619",
    "end": "3424859"
  },
  {
    "text": "take a copy of what we've got the list of words high level saw the next level down the mechanics of eliminating",
    "start": "3424859",
    "end": "3430619"
  },
  {
    "text": "adjacent duplicates so therefore we do an extract rather we remove duplicates",
    "start": "3430619",
    "end": "3437339"
  },
  {
    "text": "now this is C Sharp I can use extension Methods at this point do a rename because you're not really removing juice",
    "start": "3437339",
    "end": "3443220"
  },
  {
    "text": "because you're removing adjacent duplicates you're assuming that they are sorted so our work here is done well not quite",
    "start": "3443220",
    "end": "3450420"
  },
  {
    "text": "because we've still we've got a new method it's a bit tidier it's well named but we still have all of that code",
    "start": "3450420",
    "end": "3456420"
  },
  {
    "text": "take a step back and you think if you see Sharp you think oh I know link that's nice for you",
    "start": "3456420",
    "end": "3464000"
  },
  {
    "text": "I tend to find that pure link expressions in many cases are just ways of repeating the same word Lots word",
    "start": "3464339",
    "end": "3469680"
  },
  {
    "text": "word word word if you get that level of repetition in your um link expression",
    "start": "3469680",
    "end": "3475280"
  },
  {
    "text": "try switching it to rawlink much better",
    "start": "3475280",
    "end": "3482099"
  },
  {
    "text": "this is what so this looks really good notice how different this is to the original control flow how fundamentally",
    "start": "3482099",
    "end": "3488280"
  },
  {
    "text": "different I've reframed it I've switched Paradigm what I'm looking at here is list of words order by the word and then",
    "start": "3488280",
    "end": "3496260"
  },
  {
    "text": "make it unique now there's an interesting thing a lot of C sharpers",
    "start": "3496260",
    "end": "3502619"
  },
  {
    "text": "use Link a lot in fact they use it too much because they don't know about data structures",
    "start": "3502619",
    "end": "3509339"
  },
  {
    "text": "I've seen some astonishing pieces of link if you're using link probably I'm going to say half of what you need to do",
    "start": "3509339",
    "end": "3515160"
  },
  {
    "text": "is there's probably already a method for it don't you don't complicate things with additional link Expressions but more",
    "start": "3515160",
    "end": "3521700"
  },
  {
    "text": "importantly you may find there's an additional structure the problem with sitting in front the solution was sitting in front of us all",
    "start": "3521700",
    "end": "3528780"
  },
  {
    "text": "of the time oh you want to you want a list of words that is unique and sorted",
    "start": "3528780",
    "end": "3535740"
  },
  {
    "text": "that's a data structure problem that's not a processing problem okay that's not a data flow problem it's not a control flow problem",
    "start": "3535740",
    "end": "3542040"
  },
  {
    "text": "turns out that the representation is actually the thing which leads us to another word that people often forget",
    "start": "3542040",
    "end": "3547859"
  },
  {
    "start": "3545000",
    "end": "3599000"
  },
  {
    "text": "when they talk about process Improvement they talk about Kaizen they don't talk about Kaku kaikaku means radical change it's also",
    "start": "3547859",
    "end": "3554700"
  },
  {
    "text": "supposed to be right we're going to change something radical here now people normally use this as the ways of working but here I'm saying actually Your Design",
    "start": "3554700",
    "end": "3561000"
  },
  {
    "text": "may change radically it may look completely different to what you had before",
    "start": "3561000",
    "end": "3566280"
  },
  {
    "text": "so I kind of close with another example from 97 program 97 things every program should know uh",
    "start": "3566280",
    "end": "3573000"
  },
  {
    "text": "piece by Burke Hoffner I love this piece because I mean first of all the title is great uh it's also good advice on its",
    "start": "3573000",
    "end": "3579000"
  },
  {
    "text": "own you know if you never do anything else this is the yeah put the mouse down and step away from the keyboard",
    "start": "3579000",
    "end": "3584160"
  },
  {
    "text": "yes you're stuck at the level you're trying to solve a problem at the level you found it you've got to take a break",
    "start": "3584160",
    "end": "3589740"
  },
  {
    "text": "you know you're stuck you clearly tried your best but doing more of that's not going to help you need to change your",
    "start": "3589740",
    "end": "3595319"
  },
  {
    "text": "mind literally you need to change your mood get up go for a walk if you've been standing sit down if you've been drinking coffee drink herbal tea if",
    "start": "3595319",
    "end": "3601740"
  },
  {
    "text": "you've been drinking herbal tea drink coffee if you've been listening to loud Rock listen to something ambient or nothing if you've been listening to",
    "start": "3601740",
    "end": "3607200"
  },
  {
    "text": "ambient or nothing put on loud rock you need to change because whatever it is that you are doing is not causing you to",
    "start": "3607200",
    "end": "3612540"
  },
  {
    "text": "think in the way that it's going to solve the problem you've exhausted that level and he shows this example",
    "start": "3612540",
    "end": "3619500"
  },
  {
    "text": "which is parsing a string that shows time in 12 hour in 12 hour format now",
    "start": "3619500",
    "end": "3624540"
  },
  {
    "text": "what is interesting about this is that so this Java code is kind of like chiseling away",
    "start": "3624540",
    "end": "3630119"
  },
  {
    "text": "but not in a good Angelic sense chiseling away at a piece of go this is what it looked like after he refactored",
    "start": "3630119",
    "end": "3635880"
  },
  {
    "text": "it God only knows what it was like beforehand and notice there's a there's a there's a",
    "start": "3635880",
    "end": "3641880"
  },
  {
    "text": "there's a dot dot dot in here um is that working today no that is not working oh no so that is working this is",
    "start": "3641880",
    "end": "3649079"
  },
  {
    "text": "the thing I want yeah there we go there we go notice there is a dot dot dot there",
    "start": "3649079",
    "end": "3654180"
  },
  {
    "text": "there's a lot of this and this is a brutal and imperative way of trying to solve the problem",
    "start": "3654180",
    "end": "3659640"
  },
  {
    "text": "can I pass this bit bang no okay it's not a number okay return it's not a",
    "start": "3659640",
    "end": "3664859"
  },
  {
    "text": "valid time string and then oh wow this is as procedural as it gets so anyway he stepped away from the keyboard",
    "start": "3664859",
    "end": "3671579"
  },
  {
    "text": "put the mouse down went home next day he says wait a minute",
    "start": "3671579",
    "end": "3677460"
  },
  {
    "text": "this is a declarative problem why am I doing all this control flow",
    "start": "3677460",
    "end": "3682920"
  },
  {
    "text": "this is a declarative problem now sometimes people joke you know hey I had a problem and I solved it with",
    "start": "3682920",
    "end": "3688559"
  },
  {
    "text": "regular Expressions now I have two problems or Star problems but actually in this case what's great",
    "start": "3688559",
    "end": "3694559"
  },
  {
    "text": "is that I can show somebody who doesn't know how to read regular expressions and I can read it literally from left to",
    "start": "3694559",
    "end": "3699720"
  },
  {
    "text": "right and explain oh yeah you take a zero followed by one to nine or a one followed by zero to two then a colon",
    "start": "3699720",
    "end": "3705720"
  },
  {
    "text": "then the next group is zero to five followed by it literally reads from left to right this is a nightmare by comparison it",
    "start": "3705720",
    "end": "3713819"
  },
  {
    "text": "doesn't matter if you if you know Java this is a mess if you don't know reg X's this is easy that's the point the",
    "start": "3713819",
    "end": "3719520"
  },
  {
    "text": "problem was a different shape it wasn't a gradual refactoring so this tells us this gives us a nice piece of advice",
    "start": "3719520",
    "end": "3726720"
  },
  {
    "text": "which we'll close on advice from Isabella Beaton who is a figure in Victorian England sadly died",
    "start": "3726720",
    "end": "3733799"
  },
  {
    "text": "by the time she was 30 but she was known for writing a periodical and column collected together as a the book of",
    "start": "3733799",
    "end": "3740579"
  },
  {
    "text": "household management and you might think well I'm not running a Victorian household hey you're working on a code base that's",
    "start": "3740579",
    "end": "3746400"
  },
  {
    "text": "like a Victorian household and but she gave us advice she anticipated refactoring she gave us the",
    "start": "3746400",
    "end": "3753480"
  },
  {
    "text": "advice for refactoring software engineering advice from the 19th century there is no work like early work",
    "start": "3753480",
    "end": "3761040"
  },
  {
    "text": "clear as you go muddle makes more muddle not to wash plates and dishes soon after",
    "start": "3761040",
    "end": "3766920"
  },
  {
    "text": "using makes more work this is all the advice this is everything you need to know if we look at that as a cleaner",
    "start": "3766920",
    "end": "3773579"
  },
  {
    "text": "this is this is to avoid neglect but more importantly this is a proactive design approach",
    "start": "3773579",
    "end": "3779700"
  },
  {
    "text": "the observation from herb Simon complex system will evolve more rapidly from systems simple systems much more radical",
    "start": "3779700",
    "end": "3785760"
  },
  {
    "text": "if there are stable intermediate forms than if there are not avoid the big Bank changes except when",
    "start": "3785760",
    "end": "3791220"
  },
  {
    "text": "they are needed the idea is progressively always be improving progressively be the idea is that think",
    "start": "3791220",
    "end": "3796500"
  },
  {
    "text": "of your design and development process as a search for design is not a conclusion it's a work in",
    "start": "3796500",
    "end": "3803099"
  },
  {
    "text": "progress you are constantly searching for it and maybe there's something better Over the Horizon but you Embrace",
    "start": "3803099",
    "end": "3808260"
  },
  {
    "text": "that as a possibility if we are writing code let's take the advice of the great authors of the 20th",
    "start": "3808260",
    "end": "3813359"
  },
  {
    "text": "century there's only the only kind of writing is rewriting thank you very much",
    "start": "3813359",
    "end": "3820180"
  },
  {
    "text": "[Applause]",
    "start": "3820180",
    "end": "3823359"
  }
]