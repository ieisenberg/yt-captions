[
  {
    "text": "hello thank you for having me as a speaker today at NDC of London thank you",
    "start": "1740",
    "end": "7200"
  },
  {
    "text": "for turning up we will talk about real-time applications Made Easy with Azure web pubs up today what this",
    "start": "7200",
    "end": "14280"
  },
  {
    "text": "service has to offer but a little bit about myself if my clicker decides to work that is uh no it",
    "start": "14280",
    "end": "22740"
  },
  {
    "text": "doesn't that is because I haven't plugged it in properly",
    "start": "22740",
    "end": "27859"
  },
  {
    "text": "there we go so I'm purnima Nair I'm a freelance.net developer and I am from UK",
    "start": "34800",
    "end": "42420"
  },
  {
    "text": "I live in Berkshire with my husband and my nine-year-old daughter work wise as as you know freelance",
    "start": "42420",
    "end": "49920"
  },
  {
    "text": "developer but I speak at a lot of conferences meetups just to keep up with technology and learn what's new out",
    "start": "49920",
    "end": "56399"
  },
  {
    "text": "there I'm a Microsoft MVP for developer Technologies and I'm also an umbraco MVP",
    "start": "56399",
    "end": "61860"
  },
  {
    "text": "for those who don't know what ambraco is it's an.net based open source CMS and I'm involved in both the communities",
    "start": "61860",
    "end": "68700"
  },
  {
    "text": "quite heavily something that's not on the slide I'm a member of the.net foundation Outreach",
    "start": "68700",
    "end": "75240"
  },
  {
    "text": "committee and I'm also a part of the nominations committee this year so if anyone wants to put forward themselves",
    "start": "75240",
    "end": "81840"
  },
  {
    "text": "for the.net foundation elections please come forward have a chat with me or Joe",
    "start": "81840",
    "end": "87420"
  },
  {
    "text": "who is also in the building today as I said I'm a mother I read a lot",
    "start": "87420",
    "end": "93540"
  },
  {
    "text": "that's my unwinding process at the end of the day and if that was all not enough I'm also a student of carnatic",
    "start": "93540",
    "end": "100439"
  },
  {
    "text": "Music vocals I'm working towards like a diploma in carnatic music and that's my",
    "start": "100439",
    "end": "106079"
  },
  {
    "text": "Twitter handle should you wish to connect with me I'll be in the building all day today and I'll take any",
    "start": "106079",
    "end": "111360"
  },
  {
    "text": "questions if you just find me in the corridor or even at the end of the session so when I think about real-time",
    "start": "111360",
    "end": "118560"
  },
  {
    "text": "applications I think of it as cool and fun and something that puts a smile on my face and of course sharing is caring",
    "start": "118560",
    "end": "126360"
  },
  {
    "text": "that's what I teach my daughter so let me see if I can share the fun that I had",
    "start": "126360",
    "end": "131720"
  },
  {
    "text": "trying and evaluating this service and maybe uh kind of inspire you to have",
    "start": "131720",
    "end": "138780"
  },
  {
    "text": "your own ideas from today and then build on top of it so let's begin about Azure web pops up",
    "start": "138780",
    "end": "145440"
  },
  {
    "text": "it is an Azure offering and it helps you build real-time applications using websockets and the publish subscribe",
    "start": "145440",
    "end": "152099"
  },
  {
    "text": "pattern so first things first is web sockets it's your age-old websockets that you know about",
    "start": "152099",
    "end": "157980"
  },
  {
    "text": "so definitely there is a low barrier to entry there",
    "start": "157980",
    "end": "163140"
  },
  {
    "text": "with Azure web Pub sub there are multiple messaging patterns that you can have you can have updates between server",
    "start": "163140",
    "end": "169860"
  },
  {
    "text": "and all the connected clients like a big broadcast you can have messaging between server",
    "start": "169860",
    "end": "176040"
  },
  {
    "text": "and a group of clients you can also have messaging between clients that belong to a group it's not",
    "start": "176040",
    "end": "183180"
  },
  {
    "text": "messaging like individual connections within a group it's more like publishing",
    "start": "183180",
    "end": "188519"
  },
  {
    "text": "messages within a group completely avoiding the server so we will speak about that but in a nutshell the service",
    "start": "188519",
    "end": "196260"
  },
  {
    "text": "allows for bi-directional messaging a word about publish subscribe pattern",
    "start": "196260",
    "end": "201599"
  },
  {
    "text": "it is a messaging pattern where you have two entities publisher and the subscriber you have the publisher that",
    "start": "201599",
    "end": "208319"
  },
  {
    "text": "publishes messages to channels or topics so that is the terminology when it comes to the publish subscribe pattern it's a",
    "start": "208319",
    "end": "215400"
  },
  {
    "text": "Channel or a topic which can be thought of that as information stream which is",
    "start": "215400",
    "end": "221400"
  },
  {
    "text": "quite specific say for example you are following updates on a football match and you have the Publishers publishing",
    "start": "221400",
    "end": "229379"
  },
  {
    "text": "the real-time updates to like a stream and that stream is the channel or the topic and then you have your subscriber",
    "start": "229379",
    "end": "236700"
  },
  {
    "text": "which can choose to listen to topics so it's an opt-in rather than hey I want to",
    "start": "236700",
    "end": "242519"
  },
  {
    "text": "push the sub the updates to you so subscribers have to first opt-in to listen and they get updates for that",
    "start": "242519",
    "end": "248819"
  },
  {
    "text": "topic or Channel only there is no constant polling with a",
    "start": "248819",
    "end": "254280"
  },
  {
    "text": "publisher subscriber pattern it is pushed updates from the server depending upon what channels or topics the",
    "start": "254280",
    "end": "261180"
  },
  {
    "text": "subscribers are subscribed to and at any point of time the Publishers",
    "start": "261180",
    "end": "267240"
  },
  {
    "text": "do not have any knowledge about what the subscribers are or what topics they are subscribed to so the publisher is like a",
    "start": "267240",
    "end": "274320"
  },
  {
    "text": "standalone entity which means we have loose coupling between Publishers and subscribers it just keeps that",
    "start": "274320",
    "end": "281180"
  },
  {
    "text": "segregation or responsibilities quite a part which is quite nice because we can",
    "start": "281180",
    "end": "286919"
  },
  {
    "text": "then bring in scaling to your publishers talking about web sockets it's",
    "start": "286919",
    "end": "292979"
  },
  {
    "text": "persistent connection between the client and the server and it enables full duplex communication",
    "start": "292979",
    "end": "299160"
  },
  {
    "text": "which means there is data flowing in both directions at any point of time it's not like a request and a response",
    "start": "299160",
    "end": "305639"
  },
  {
    "text": "once we have a single TCP connection established that TCP connection is used",
    "start": "305639",
    "end": "310680"
  },
  {
    "text": "throughout the lifetime of the connection and what makes websockets really great for real-time apps is the",
    "start": "310680",
    "end": "317340"
  },
  {
    "text": "browser support plus the support it has over multiple different platforms as",
    "start": "317340",
    "end": "323039"
  },
  {
    "text": "well as programming languages any platform that can handle a websocket connection in HTTP The World is Yours",
    "start": "323039",
    "end": "329460"
  },
  {
    "text": "with Azure web Pub 7 web sockets plus it is an event driven protocol it can listen to events as well and the",
    "start": "329460",
    "end": "336360"
  },
  {
    "text": "reason why it is so good for real-time apps a typical workflow with Azure web Pub",
    "start": "336360",
    "end": "342660"
  },
  {
    "text": "sub looks like this so you have your server and your clients you have your Azure web Pub service in the middle",
    "start": "342660",
    "end": "349020"
  },
  {
    "text": "between the server and the clients the clients talk to Azure web-up service so",
    "start": "349020",
    "end": "355259"
  },
  {
    "text": "when they establish a websocket connection it is with the service that they establish the websocket connection and any communication to the server is",
    "start": "355259",
    "end": "363240"
  },
  {
    "text": "just between the service and the server the service communicates the server and server communicates back to service",
    "start": "363240",
    "end": "370199"
  },
  {
    "text": "using HTTP so if you are thinking of having like a lightweight service in",
    "start": "370199",
    "end": "375720"
  },
  {
    "text": "between your server and your clients to offload all your websocket connections this is the service for you it is like a",
    "start": "375720",
    "end": "383819"
  },
  {
    "text": "dump messaging service you can instruct it what to do and it'll actually do what",
    "start": "383819",
    "end": "388860"
  },
  {
    "text": "you ask it to do and the key Concepts and the terms that we need to be aware of when it comes to",
    "start": "388860",
    "end": "395580"
  },
  {
    "text": "Azure web Pub sub is the first one is service I will call the Azure web Pub sub",
    "start": "395580",
    "end": "401940"
  },
  {
    "text": "service probably service from now on because stand here and tell web Pub sub like thousand times it's not that easy",
    "start": "401940",
    "end": "408600"
  },
  {
    "text": "to do that so it's service for us from now on we have our clients which is basically",
    "start": "408600",
    "end": "415620"
  },
  {
    "text": "an individual websocket connection so it can be a browser it can be a",
    "start": "415620",
    "end": "421440"
  },
  {
    "text": "tablet it can be an iot device live dashboards anything that can handle a websocket connection is your client so",
    "start": "421440",
    "end": "428520"
  },
  {
    "text": "it's a client connection or a connection or a client various different terms and each websocket gives you a unique",
    "start": "428520",
    "end": "435479"
  },
  {
    "text": "connection ID so if you have two browser windows connecting to the service using websocket is two different connection",
    "start": "435479",
    "end": "441660"
  },
  {
    "text": "IDs that you get and connections belong to the user entity like you and me and a user could",
    "start": "441660",
    "end": "449460"
  },
  {
    "text": "have multiple connection IDs associated with them and a user has a unique connection unique user ID",
    "start": "449460",
    "end": "456840"
  },
  {
    "text": "and then you have your server which at any point of time talks only to the service and that is over HTTP as I said",
    "start": "456840",
    "end": "464340"
  },
  {
    "text": "earlier so which means that your server is completely stateless and it can scale on demand plus your service which is",
    "start": "464340",
    "end": "471240"
  },
  {
    "text": "cloud it can scale on demand as well which means that we are moving closer towards the cloud native development",
    "start": "471240",
    "end": "478139"
  },
  {
    "text": "which is very popular these days then we can talk about hubs which can be",
    "start": "478139",
    "end": "485099"
  },
  {
    "text": "thought of as like specific areas in a service so there are logical Concepts so",
    "start": "485099",
    "end": "490440"
  },
  {
    "text": "like a logical areas in a service which stands for a group of connections it's",
    "start": "490440",
    "end": "495660"
  },
  {
    "text": "not something that you can specify the way a hub is formed is the minute the",
    "start": "495660",
    "end": "500879"
  },
  {
    "text": "first connection comes in and connects to a hub The Hub is formed that is the concept but a hub serves a specific",
    "start": "500879",
    "end": "508740"
  },
  {
    "text": "purpose so you can have a chat Hub or a poll Hub both are mutually exclusive of each other",
    "start": "508740",
    "end": "514880"
  },
  {
    "text": "despite the same service sharing these hubs they don't know what is going on in",
    "start": "514880",
    "end": "520140"
  },
  {
    "text": "each other so if you want you can have that scenario as well in my demos I'm using the same service for for my",
    "start": "520140",
    "end": "527580"
  },
  {
    "text": "applications today and within hubs you can have groups which is a subset of connections so if",
    "start": "527580",
    "end": "534300"
  },
  {
    "text": "you think of hubs like your organizational level Slack slack instances you can think of groups",
    "start": "534300",
    "end": "541440"
  },
  {
    "text": "as like slack channels so just like you can enter an exit a group the same concept applies here you can enter a",
    "start": "541440",
    "end": "548940"
  },
  {
    "text": "group exit a group can send message to everyone in the group Etc so it's a subset of connections you can have",
    "start": "548940",
    "end": "555360"
  },
  {
    "text": "multiple groups in the same Hub again they are mutually exclusive and you have to be a part of the group to receive",
    "start": "555360",
    "end": "561660"
  },
  {
    "text": "messages in that group and you can be a part of multiple groups as well if you want",
    "start": "561660",
    "end": "566940"
  },
  {
    "text": "then you have messages what goes back and forth between the client and the service",
    "start": "566940",
    "end": "572700"
  },
  {
    "text": "when clients come in throughout their lifetime of connection with the service they raise events so when they connect",
    "start": "572700",
    "end": "579300"
  },
  {
    "text": "when they start messaging you can even have custom events that you define all of those races client events and the",
    "start": "579300",
    "end": "586440"
  },
  {
    "text": "service captures that events and you can configure event handlers to handle that",
    "start": "586440",
    "end": "591839"
  },
  {
    "text": "that event on the server side so the client events are pushed to the server",
    "start": "591839",
    "end": "597600"
  },
  {
    "text": "by the service so the server acts like an even Handler that handle the client events and then instructs the service",
    "start": "597600",
    "end": "604440"
  },
  {
    "text": "what action to take talking about the billing model some of",
    "start": "604440",
    "end": "610140"
  },
  {
    "text": "the terms are unit which measures the capability of the service there are one",
    "start": "610140",
    "end": "615420"
  },
  {
    "text": "unit is like 1000 concurrent connections and a pub sub service instance can have",
    "start": "615420",
    "end": "621959"
  },
  {
    "text": "one to hundred units so that many concurrent connections are available on",
    "start": "621959",
    "end": "627120"
  },
  {
    "text": "your service across all the hubs",
    "start": "627120",
    "end": "631339"
  },
  {
    "text": "and further moving on the hosting plans you have the free standard and premium plans with free you have a maximum one",
    "start": "633120",
    "end": "640380"
  },
  {
    "text": "unit with standard you can go up to 100 premium which is in public preview I don't see a maximum limit of units so",
    "start": "640380",
    "end": "647519"
  },
  {
    "text": "which means that it could be like infinite number of units or something you need to speak to your account",
    "start": "647519",
    "end": "653399"
  },
  {
    "text": "manager at Microsoft about I don't know about that but furthermore how you are built you're",
    "start": "653399",
    "end": "660360"
  },
  {
    "text": "built only on the outbound traffic from the service so what that means is from the service the outbound traffic",
    "start": "660360",
    "end": "666420"
  },
  {
    "text": "consists of what the service gives to the clients what the service talks to the server about and there's also a tool",
    "start": "666420",
    "end": "673620"
  },
  {
    "text": "called the live tracing tool which can be helped for debugging what is going on within your service so all that",
    "start": "673620",
    "end": "680820"
  },
  {
    "text": "constitutes around traffic and plus on top of that you have a free quota per",
    "start": "680820",
    "end": "686640"
  },
  {
    "text": "unit per day which is like 1 million messages so if you have 10 units for",
    "start": "686640",
    "end": "691800"
  },
  {
    "text": "each of those unit in a single day you get 1 million messages and one message",
    "start": "691800",
    "end": "696899"
  },
  {
    "text": "is like two kilobytes of data which means per unit per day you are allowed 2",
    "start": "696899",
    "end": "702420"
  },
  {
    "text": "million kilobytes of data which is free and anything over that is what you are",
    "start": "702420",
    "end": "708120"
  },
  {
    "text": "charged on and Microsoft recommends planning for 80",
    "start": "708120",
    "end": "713459"
  },
  {
    "text": "of unit utilization before you start scaling on so don't wait till all your",
    "start": "713459",
    "end": "718740"
  },
  {
    "text": "concurrent connections have run out this is like the optimal what they suggest so with that let us go into a little",
    "start": "718740",
    "end": "725640"
  },
  {
    "text": "demo to begin with what I have is a very simple console",
    "start": "725640",
    "end": "731160"
  },
  {
    "text": "application one publisher and one subscriber let us just close all the other windows close over this",
    "start": "731160",
    "end": "739740"
  },
  {
    "text": "okay so it's not mirroring my screen which is not ideal",
    "start": "739740",
    "end": "747200"
  },
  {
    "text": "of what happened there",
    "start": "761100",
    "end": "764360"
  },
  {
    "text": "no",
    "start": "776220",
    "end": "779060"
  },
  {
    "text": "there's nothing showing there too that's bizarre",
    "start": "786360",
    "end": "790759"
  },
  {
    "text": "duplicate there we go",
    "start": "792480",
    "end": "797360"
  },
  {
    "text": "there we go so this is the publisher and the subscriber just console apps I'm",
    "start": "805079",
    "end": "810600"
  },
  {
    "text": "going to start the publisher and the subscriber so hopefully it starts and runs let me",
    "start": "810600",
    "end": "817139"
  },
  {
    "text": "just minimize the window that's a publisher and that's the subscriber",
    "start": "817139",
    "end": "824240"
  },
  {
    "text": "so it's asking for something called the connection string which I can get from the portal",
    "start": "828720",
    "end": "834240"
  },
  {
    "text": "so if I go into the portal and get my connection string",
    "start": "834240",
    "end": "841940"
  },
  {
    "text": "resource groups talks and my demo is here so that's my service",
    "start": "844860",
    "end": "851100"
  },
  {
    "text": "the Azure web Pub sub service if I go into keys I'll have a connection string",
    "start": "851100",
    "end": "856920"
  },
  {
    "text": "don't attempt this connection string because I will rotate the keys in like",
    "start": "856920",
    "end": "862260"
  },
  {
    "text": "one last time once my session is done with so that's the connection string which using which my clients be the",
    "start": "862260",
    "end": "869459"
  },
  {
    "text": "publisher or the subscriber can connect connect my publisher and subscriber needs to be in the same hub for them to",
    "start": "869459",
    "end": "876120"
  },
  {
    "text": "receive and send messages so I have put them both in the same Hub now if I say hello from my publisher I'm",
    "start": "876120",
    "end": "884519"
  },
  {
    "text": "receiving that hello again I'm receiving that here but to just",
    "start": "884519",
    "end": "889980"
  },
  {
    "text": "prove the point that the subscribers need to be in the same Hub let me bring in under the subscriber use the same",
    "start": "889980",
    "end": "897360"
  },
  {
    "text": "connection string and use a different Hub name so this is the first time a client is connecting to",
    "start": "897360",
    "end": "903420"
  },
  {
    "text": "HUB 2 so the Hub 2 is already formed now if I minimize this and have my publisher",
    "start": "903420",
    "end": "910019"
  },
  {
    "text": "in place and have my other subscriber in place let us see what happens",
    "start": "910019",
    "end": "917720"
  },
  {
    "text": "my subscriber which is connected to hub1 receives this but the subscriber connected to HUB 2 doesn't receive the",
    "start": "922500",
    "end": "929040"
  },
  {
    "text": "message so that actually means that the hubs are mutually exclusive and to see what is going on behind the scenes with",
    "start": "929040",
    "end": "936120"
  },
  {
    "text": "this code is console apps but my publisher has this package called the",
    "start": "936120",
    "end": "941160"
  },
  {
    "text": "messaging web Pub sub nuget package which helps with a library which I can use to connect to",
    "start": "941160",
    "end": "947820"
  },
  {
    "text": "the service in my program CS I'm reading the connection string and the Hub name",
    "start": "947820",
    "end": "953279"
  },
  {
    "text": "and I'm creating an object of the type website web Pub sub service client using",
    "start": "953279",
    "end": "958440"
  },
  {
    "text": "the connection string and the Hub and this is sorry this is a subscriber",
    "start": "958440",
    "end": "964440"
  },
  {
    "text": "this is the publisher so I'm creating the service client and",
    "start": "964440",
    "end": "970079"
  },
  {
    "text": "then I can use the send to all method on the service client giving it the message which then broadcast the message out I",
    "start": "970079",
    "end": "977519"
  },
  {
    "text": "don't need anything specific other than the connection string from the publisher aspect to connect to the service because",
    "start": "977519",
    "end": "983100"
  },
  {
    "text": "by Nature Publishers are considered as like authorized users so they can just",
    "start": "983100",
    "end": "989160"
  },
  {
    "text": "broadcast the service however on the client side the client is not connecting",
    "start": "989160",
    "end": "994740"
  },
  {
    "text": "to the server the client is connecting to the service so it needs a websocket connection established with the service",
    "start": "994740",
    "end": "1000339"
  },
  {
    "text": "for that I am bringing in the web pubs up library as well as the",
    "start": "1000339",
    "end": "1005899"
  },
  {
    "text": "websocket client package using which I can of course create the service client",
    "start": "1005899",
    "end": "1013720"
  },
  {
    "text": "but in this case I need to generate a client access token a JWT token which I",
    "start": "1013720",
    "end": "1020480"
  },
  {
    "text": "can generate using the get client access URI method on the service client so the URL that comes back has the JWT token",
    "start": "1020480",
    "end": "1027678"
  },
  {
    "text": "and I can use that to create a websocket client I can then start subscribing or",
    "start": "1027679",
    "end": "1034400"
  },
  {
    "text": "listening to the incoming messages and start the client after that which at which point if there are any messages I",
    "start": "1034400",
    "end": "1041839"
  },
  {
    "text": "get everything or all the messages back so that is um publisher and subscriber",
    "start": "1041839",
    "end": "1048260"
  },
  {
    "text": "in a nutshell so what have we learned from the demo we can use the send to all method to broadcast any messages to all",
    "start": "1048260",
    "end": "1056660"
  },
  {
    "text": "the connected clients so this is quite an important one which I will be using in quite a few demos today",
    "start": "1056660",
    "end": "1063320"
  },
  {
    "text": "clients for clients to connect to the service they need a JWT token and that",
    "start": "1063320",
    "end": "1069799"
  },
  {
    "text": "can be created using any websocket client and the connection string and the Hub",
    "start": "1069799",
    "end": "1074840"
  },
  {
    "text": "but the connection string and the Hub that we saw are like secrets and they should not be shared with the clients so",
    "start": "1074840",
    "end": "1081140"
  },
  {
    "text": "we need to move that entire JWT token creation workflow onto like a",
    "start": "1081140",
    "end": "1087260"
  },
  {
    "text": "server-side endpoint and that's what we will talk about later and for before we understand all of that",
    "start": "1087260",
    "end": "1093080"
  },
  {
    "text": "we need to understand the service internals which is the server roles and the client roles so let's talk about",
    "start": "1093080",
    "end": "1098480"
  },
  {
    "text": "server protocol and the roles that the server can handle the first role that it handles is that of an event handler so",
    "start": "1098480",
    "end": "1105980"
  },
  {
    "text": "as I said in the workflow earlier when clients connect to the service and throughout their lifetime of connection",
    "start": "1105980",
    "end": "1111919"
  },
  {
    "text": "with the service clients raise events so on connection or on disconnection when",
    "start": "1111919",
    "end": "1117440"
  },
  {
    "text": "they start messaging all of these races events and these events can be captured",
    "start": "1117440",
    "end": "1122600"
  },
  {
    "text": "on the service and if you are configuring an event handler the event data that comes in on the",
    "start": "1122600",
    "end": "1129980"
  },
  {
    "text": "service can be pushed to the event handlers so the service goes and invokes endpoint just basic endpoints that you",
    "start": "1129980",
    "end": "1136220"
  },
  {
    "text": "can configure so the server acts like an upstream web hook in this instance so if you have",
    "start": "1136220",
    "end": "1143840"
  },
  {
    "text": "configured a event handler say for message what the service does is everything every time there's an",
    "start": "1143840",
    "end": "1150140"
  },
  {
    "text": "incoming message event from the client it goes and does an HTTP post to that",
    "start": "1150140",
    "end": "1155600"
  },
  {
    "text": "configured endpoint giving it all the data and that data is passed using the",
    "start": "1155600",
    "end": "1161539"
  },
  {
    "text": "cloud events HTTP protocol which is like a standard way of representing event data these days but to keep things more",
    "start": "1161539",
    "end": "1169940"
  },
  {
    "text": "secure is not just an HTTP post that it does there's something called the cloud events abuse protection that goes on so",
    "start": "1169940",
    "end": "1176240"
  },
  {
    "text": "before the HTTP post happens for every event IT issues an HTTP options request",
    "start": "1176240",
    "end": "1181820"
  },
  {
    "text": "to the configure endpoint and during that it issues a header with a key",
    "start": "1181820",
    "end": "1188360"
  },
  {
    "text": "called Web hook request origin I think and the value of that is set to the",
    "start": "1188360",
    "end": "1193640"
  },
  {
    "text": "domain name of the service and on the server side where I'm handling the event it needs to send a",
    "start": "1193640",
    "end": "1199760"
  },
  {
    "text": "response back with the header called webhook a loud origin again with the value set to the domain name of the",
    "start": "1199760",
    "end": "1205640"
  },
  {
    "text": "service so if the two values match up then it issues an HTTP post request so",
    "start": "1205640",
    "end": "1211220"
  },
  {
    "text": "it's not as simple as you see on the eye but it can again make your event handler",
    "start": "1211220",
    "end": "1216440"
  },
  {
    "text": "more secure by introducing managed Identity or passing in a code as a part of the event handler URL itself",
    "start": "1216440",
    "end": "1223280"
  },
  {
    "text": "and to see the event information and example of the event information this is how it looks so the CE prefix denotes",
    "start": "1223280",
    "end": "1231320"
  },
  {
    "text": "the cloud events data or the cloud events uh information so that is a role of event handler",
    "start": "1231320",
    "end": "1238340"
  },
  {
    "text": "handling events that come in from the service the server Upstream can also act as a",
    "start": "1238340",
    "end": "1244340"
  },
  {
    "text": "Connection Manager we we told about how this server is like an authorized user",
    "start": "1244340",
    "end": "1249500"
  },
  {
    "text": "so it has access to all the metadata from the clients so if I go back one",
    "start": "1249500",
    "end": "1256059"
  },
  {
    "text": "one slide back you can see that there's lots of information coming in the user",
    "start": "1256059",
    "end": "1261320"
  },
  {
    "text": "ID the connection ID all of this is available on the server for it to handle very useful information so it can ha it",
    "start": "1261320",
    "end": "1269059"
  },
  {
    "text": "can use that information to help the service take a decision on whether the",
    "start": "1269059",
    "end": "1274640"
  },
  {
    "text": "client should be connected what happens when the client is connected so the server can instruct the service to say",
    "start": "1274640",
    "end": "1280220"
  },
  {
    "text": "message all the clients or message a group of clients or even a specific client it can also manage the client",
    "start": "1280220",
    "end": "1286460"
  },
  {
    "text": "like hey you are coming into connect let me help you connect of course you can connect now you can disconnect you can",
    "start": "1286460",
    "end": "1293120"
  },
  {
    "text": "grant or revoke permissions you can ask it to join group lead group all of that",
    "start": "1293120",
    "end": "1298580"
  },
  {
    "text": "is done by the Server Connection Manager role so when you talk about the server roles",
    "start": "1298580",
    "end": "1305299"
  },
  {
    "text": "and the communication between the client the service and the server the so the",
    "start": "1305299",
    "end": "1310400"
  },
  {
    "text": "service to server communication is using the event handler role whereas the server to service communication is using",
    "start": "1310400",
    "end": "1317059"
  },
  {
    "text": "the Connection Manager role yet another role which I don't have a demo for today is event listener this",
    "start": "1317059",
    "end": "1324020"
  },
  {
    "text": "recently came into GA when I did the same talk at NDC London it was in preview uh a month later I think it came",
    "start": "1324020",
    "end": "1331700"
  },
  {
    "text": "into GA so this is of event listener whereby you can capture the events and",
    "start": "1331700",
    "end": "1337039"
  },
  {
    "text": "rather than handling it you can push it onto event hubs and use the data in a very different manner if you wish to do",
    "start": "1337039",
    "end": "1343100"
  },
  {
    "text": "so so currently event hubs are the supported event listener Azure event hubs are the event listeners",
    "start": "1343100",
    "end": "1350539"
  },
  {
    "text": "so that is about the server protocol three roles then we have the client protocol",
    "start": "1350539",
    "end": "1356480"
  },
  {
    "text": "um and there are two different websocket clients that Azure web pubs up service",
    "start": "1356480",
    "end": "1362240"
  },
  {
    "text": "can support the first one is your simple websocket client and there's an entire",
    "start": "1362240",
    "end": "1367760"
  },
  {
    "text": "workflow here in which the server is like an inevitable entity so there's",
    "start": "1367760",
    "end": "1373340"
  },
  {
    "text": "multiple round trips to server so you have your client your service and the server the client requests a websocket",
    "start": "1373340",
    "end": "1380419"
  },
  {
    "text": "handshake and at which point it raises a connect event the service pushes that",
    "start": "1380419",
    "end": "1387380"
  },
  {
    "text": "event onto the server the server helps take decision on whether to connect the client or not and if everything goes",
    "start": "1387380",
    "end": "1394820"
  },
  {
    "text": "well the client is connected at that point it raised the client raises another asynchronous or",
    "start": "1394820",
    "end": "1401900"
  },
  {
    "text": "background event called connected it can be used on the server side for say",
    "start": "1401900",
    "end": "1408080"
  },
  {
    "text": "processing just to know that hey I have connected then the client can start messaging at",
    "start": "1408080",
    "end": "1414380"
  },
  {
    "text": "which point it again raises events which are pushed onto the server the server does the processing there and",
    "start": "1414380",
    "end": "1421159"
  },
  {
    "text": "it returns a response and finally after some time if the client completely manages to disconnect again an",
    "start": "1421159",
    "end": "1427460"
  },
  {
    "text": "asynchronous event is raised to the server it can be handled there and then response sent back to the service",
    "start": "1427460",
    "end": "1435620"
  },
  {
    "text": "so talking about this this is typical client server architecture where the",
    "start": "1435620",
    "end": "1441020"
  },
  {
    "text": "server completely fulfills the role of event handlers as well as connection management and every event involves a",
    "start": "1441020",
    "end": "1448940"
  },
  {
    "text": "round trip to the server you cannot have this workflow without a server in place",
    "start": "1448940",
    "end": "1454700"
  },
  {
    "text": "and to demo this I've got a poll app today so a poll just to Mark what's your",
    "start": "1454700",
    "end": "1460760"
  },
  {
    "text": "favorite drink it's a it's a very basic poll app but for you to to understand",
    "start": "1460760",
    "end": "1465880"
  },
  {
    "text": "where this is coming from my web pages connect to the server so what I have is",
    "start": "1465880",
    "end": "1471860"
  },
  {
    "text": "just plain HTML JavaScript Pages hosted on this Azure static web app I have an asp.net core web app running",
    "start": "1471860",
    "end": "1479720"
  },
  {
    "text": "with a negotiate endpoint that negotiating Point helps me get the client access client access token the",
    "start": "1479720",
    "end": "1486919"
  },
  {
    "text": "JWT token that is given back to my static web app and using that access",
    "start": "1486919",
    "end": "1492799"
  },
  {
    "text": "token the clients connect to the poll App Hub in the service and then they",
    "start": "1492799",
    "end": "1498919"
  },
  {
    "text": "start marking their choices at which point message events are sent to the",
    "start": "1498919",
    "end": "1504020"
  },
  {
    "text": "server the server does the processing calculates the results and then it instructs the server to service to",
    "start": "1504020",
    "end": "1511640"
  },
  {
    "text": "broadcast that results to all the connected clients so that is the workflow here so let us first see this",
    "start": "1511640",
    "end": "1519080"
  },
  {
    "text": "in action before we go into the code let me bring this up",
    "start": "1519080",
    "end": "1525880"
  },
  {
    "text": "full demo so I'm my name here so I might have results from before so",
    "start": "1530179",
    "end": "1537020"
  },
  {
    "text": "just excuse me on that one so there there we go purnima joined and",
    "start": "1537020",
    "end": "1542480"
  },
  {
    "text": "I'm getting the result back because at this point I have got the client access token from",
    "start": "1542480",
    "end": "1548720"
  },
  {
    "text": "the server I have connected and the server is sending hey just connect the",
    "start": "1548720",
    "end": "1554480"
  },
  {
    "text": "user who have joined and when I mark my choices it is sending another call to",
    "start": "1554480",
    "end": "1559820"
  },
  {
    "text": "the server it's calculating the results and instructing the service to let all",
    "start": "1559820",
    "end": "1565159"
  },
  {
    "text": "the connected clients know now if I bring in another websocket connection say like so",
    "start": "1565159",
    "end": "1573679"
  },
  {
    "text": "see what happens",
    "start": "1573679",
    "end": "1576820"
  },
  {
    "text": "it should say purnima NDC joint I can Mark say water as my favorite drink I",
    "start": "1579679",
    "end": "1585919"
  },
  {
    "text": "should get the results and as you can see both web pages are updating if I",
    "start": "1585919",
    "end": "1592100"
  },
  {
    "text": "finally disconnect I can get the message saying that purnima NDC is connected but if I mark",
    "start": "1592100",
    "end": "1598640"
  },
  {
    "text": "my choice here again I should not see it updating here so that is it it's uh one",
    "start": "1598640",
    "end": "1605600"
  },
  {
    "text": "of three here but it is one of two here because I have completely disconnected I'm not getting any any updates from the",
    "start": "1605600",
    "end": "1612440"
  },
  {
    "text": "server so what happens behind the scenes is um I have got this page here basic HTML",
    "start": "1612440",
    "end": "1620179"
  },
  {
    "text": "JavaScript I'm not going to put you through the horror horror of this because I'm a friend I'm not a friend",
    "start": "1620179",
    "end": "1625940"
  },
  {
    "text": "and developer it's just basic code but I'm reaching out to the negotiate poll",
    "start": "1625940",
    "end": "1631700"
  },
  {
    "text": "app endpoint using the ID that I give to generate the access token and using",
    "start": "1631700",
    "end": "1636799"
  },
  {
    "text": "normal websockets in JavaScript I'm creating the connection and then",
    "start": "1636799",
    "end": "1641960"
  },
  {
    "text": "listening to the messages but on the server side there's a fair amount of work going on because what I",
    "start": "1641960",
    "end": "1648020"
  },
  {
    "text": "have is an asp.net core web API with this package web Pub sub for asp.net",
    "start": "1648020",
    "end": "1653779"
  },
  {
    "text": "core and I've got a bunch of minimal endpoints but first things first I need",
    "start": "1653779",
    "end": "1659179"
  },
  {
    "text": "to register web Pub sub Services into my ioc container then I can register a hub",
    "start": "1659179",
    "end": "1665179"
  },
  {
    "text": "using the web Pub sub service client passing in a type of T hub and when I",
    "start": "1665179",
    "end": "1671960"
  },
  {
    "text": "registered this to my ioc container of course it's there for me to inject into",
    "start": "1671960",
    "end": "1677299"
  },
  {
    "text": "my own endpoints then in here I've got an endpoint called",
    "start": "1677299",
    "end": "1684140"
  },
  {
    "text": "negotiate poll app which helps me get the client access token as I've said I",
    "start": "1684140",
    "end": "1689179"
  },
  {
    "text": "am injecting the service client here and using the get client access URI to generate the client access token which",
    "start": "1689179",
    "end": "1695659"
  },
  {
    "text": "is the endpoint my web page reaches out to to get access token",
    "start": "1695659",
    "end": "1701860"
  },
  {
    "text": "um and I also need to define a hub to tie it all up together",
    "start": "1702740",
    "end": "1709039"
  },
  {
    "text": "so I am doing that using the map web Pub Sub Hub method passing in a type of T",
    "start": "1709039",
    "end": "1716480"
  },
  {
    "text": "Hub and specifying an endpoint of my choice this method does a lot of work",
    "start": "1716480",
    "end": "1722539"
  },
  {
    "text": "because it registers The Hub saying that this port app class that I have passed",
    "start": "1722539",
    "end": "1728299"
  },
  {
    "text": "in here is a hub and it also does the pre-flight checks that is the cloud events abuse protection check that's",
    "start": "1728299",
    "end": "1736100"
  },
  {
    "text": "also done here and finally if I go into this poll app what you can see in here is that it",
    "start": "1736100",
    "end": "1743539"
  },
  {
    "text": "inherits from the web Pub Sub Hub class which is an instance of a hub and in",
    "start": "1743539",
    "end": "1749539"
  },
  {
    "text": "this class I have many methods which I can override and give my own implementation",
    "start": "1749539",
    "end": "1754820"
  },
  {
    "text": "so in my own message received async which kicks in for every time I mark my",
    "start": "1754820",
    "end": "1761539"
  },
  {
    "text": "choice I'm doing some processing basically just incrementing the numbers",
    "start": "1761539",
    "end": "1766760"
  },
  {
    "text": "and using the send to all async method I am sending that result back to my client",
    "start": "1766760",
    "end": "1772820"
  },
  {
    "text": "and this entire object that I'm sending back is just a plain old Poco which is",
    "start": "1772820",
    "end": "1779120"
  },
  {
    "text": "registered as a Singleton so that everyone gets the same instance",
    "start": "1779120",
    "end": "1784940"
  },
  {
    "text": "so that is here finally I need to tie everything up together like specify that this is the",
    "start": "1784940",
    "end": "1792140"
  },
  {
    "text": "end point for my events and that can be done from the settings so my class here called poll app",
    "start": "1792140",
    "end": "1800840"
  },
  {
    "text": "that should be the name of the Hub that I specify here and if I go into my Hub I",
    "start": "1800840",
    "end": "1806480"
  },
  {
    "text": "can see that I've specified a URL template which is my poll event handler and the system events and all the user",
    "start": "1806480",
    "end": "1814159"
  },
  {
    "text": "events are being handled for me there's no authentication but you can bring in code or you can bring in managed",
    "start": "1814159",
    "end": "1819799"
  },
  {
    "text": "identity whatever you prefer so that is the server side and the simple websocket",
    "start": "1819799",
    "end": "1826100"
  },
  {
    "text": "client but that is not all you can also have client to client messaging like a",
    "start": "1826100",
    "end": "1831320"
  },
  {
    "text": "published group completely keeping the server side role to very minimum you can still bring in the server if you",
    "start": "1831320",
    "end": "1838940"
  },
  {
    "text": "want to handle custom events that should be done but apart from that plane messaging you can do it completely on",
    "start": "1838940",
    "end": "1844940"
  },
  {
    "text": "the client side like a publish and for that you have the pub sub websocket",
    "start": "1844940",
    "end": "1850159"
  },
  {
    "text": "client so it's a websocket client that supports the service sub protocols there are there are two Services sub protocols",
    "start": "1850159",
    "end": "1858020"
  },
  {
    "text": "which is the Json sub protocol and the Proto buff sub protocol so these are two subprotocols that the service actually",
    "start": "1858020",
    "end": "1865179"
  },
  {
    "text": "supports that is the web Pub sub service actually supports and a sub protocol is",
    "start": "1865179",
    "end": "1870980"
  },
  {
    "text": "like a schema or an agreement saying that the between the client and the service they agree that yes what I'm",
    "start": "1870980",
    "end": "1878179"
  },
  {
    "text": "going to send you is Json or protobuf and you can choose to agree with me on",
    "start": "1878179",
    "end": "1883640"
  },
  {
    "text": "that so the outgoing and incoming data frames are in Json or prod above but the data",
    "start": "1883640",
    "end": "1889940"
  },
  {
    "text": "itself from the client to the service that can be plain text Json or binary so",
    "start": "1889940",
    "end": "1895820"
  },
  {
    "text": "if you have whiteboard apps and things like that it would be using this kind of Pub sub websocket client",
    "start": "1895820",
    "end": "1903980"
  },
  {
    "text": "so this is the I'm I'll be using the Json sub protocol today but there is",
    "start": "1903980",
    "end": "1909260"
  },
  {
    "text": "also a reliable version of both the Json and Proto buff subproduct calls if you want more reliable uh clients that is if",
    "start": "1909260",
    "end": "1917059"
  },
  {
    "text": "if there's a network connection drop and then you want to reconnect and still gain your messages back",
    "start": "1917059",
    "end": "1922640"
  },
  {
    "text": "then uh the reliable sub protocol gives you a reconnection token as well so you",
    "start": "1922640",
    "end": "1928399"
  },
  {
    "text": "can connect using that reconnection token and the same connection ID rather than going with a new connection ID",
    "start": "1928399",
    "end": "1935240"
  },
  {
    "text": "so with this type of protocol you can have many many scenarios like you can join a group you can leave a group you",
    "start": "1935240",
    "end": "1943220"
  },
  {
    "text": "can have event information you can raise events and you can also send to groups so in",
    "start": "1943220",
    "end": "1949820"
  },
  {
    "text": "this example I'm sending Json data into the group so the data field is what my message is so which is the default you",
    "start": "1949820",
    "end": "1957140"
  },
  {
    "text": "can also have plain text information sent to the group or even binary information sent to the group so it is",
    "start": "1957140",
    "end": "1963679"
  },
  {
    "text": "publishing within a group rather than communicating with a specific client within a group",
    "start": "1963679",
    "end": "1970640"
  },
  {
    "text": "but this cannot just happen all on a sudden because clients need permissions",
    "start": "1970640",
    "end": "1975679"
  },
  {
    "text": "to perform group level interactions so they need permissions to join a group or",
    "start": "1975679",
    "end": "1981500"
  },
  {
    "text": "leave a group or send messages to a group and permissions are assigned as roles and these roles can be assigned on",
    "start": "1981500",
    "end": "1988940"
  },
  {
    "text": "clients when you create the JWT token so when you go into the server negotiate",
    "start": "1988940",
    "end": "1994640"
  },
  {
    "text": "for the JWT token you can have roles assigned to the client and that role",
    "start": "1994640",
    "end": "1999919"
  },
  {
    "text": "information will be a part of the token or you can do it during the lifetime of the client as well depending upon how",
    "start": "1999919",
    "end": "2006039"
  },
  {
    "text": "your app is and then role names if you all the role",
    "start": "2006039",
    "end": "2011260"
  },
  {
    "text": "names have the web Pub sub prefix to them and the permission to leave or join",
    "start": "2011260",
    "end": "2017200"
  },
  {
    "text": "any group is join leave group to send to any group it is send group and if you want to limit it to a per group basis",
    "start": "2017200",
    "end": "2024760"
  },
  {
    "text": "you can have join leave group dot the group name group name or send group dot",
    "start": "2024760",
    "end": "2029980"
  },
  {
    "text": "the group name so that is the permissions and the roles and if you want acknowledgments from the",
    "start": "2029980",
    "end": "2037000"
  },
  {
    "text": "service for your messages you can also have an ack ID in place so the key night people might have seen an AC ID in the",
    "start": "2037000",
    "end": "2044620"
  },
  {
    "text": "examples that I showed akid is an acknowledgment ID and this is supported for scenarios where you have job clients",
    "start": "2044620",
    "end": "2052839"
  },
  {
    "text": "joining or clients leaving or clients Sending message to the group or even custom events it is totally optional to",
    "start": "2052839",
    "end": "2060339"
  },
  {
    "text": "have that but it is a best practice because when you have an AC ID in place the service gives you an act response",
    "start": "2060339",
    "end": "2066520"
  },
  {
    "text": "saying whether it has been successful or not in delivering or processing that message with no AC ID it's a fire and",
    "start": "2066520",
    "end": "2073839"
  },
  {
    "text": "forget you can just fire and forget about it but when you have anak ID you get an act response but when you have an",
    "start": "2073839",
    "end": "2080378"
  },
  {
    "text": "arc ID it needs to be unique per connection so for every connection that I have it needs to be a unique Arc ID I",
    "start": "2080379",
    "end": "2087398"
  },
  {
    "text": "send every time otherwise the service will reject it saying it's a duplicate",
    "start": "2087399",
    "end": "2093040"
  },
  {
    "text": "and this is how an act response looks like it is of the type act you will say",
    "start": "2093040",
    "end": "2098500"
  },
  {
    "text": "you will get a response about which act ID it is responding to whether it's a",
    "start": "2098500",
    "end": "2103780"
  },
  {
    "text": "successor of failure and if you have any errors that also comes back the maximum",
    "start": "2103780",
    "end": "2109599"
  },
  {
    "text": "times I have failed is due to duplicate Arc IDs so that's something good to know",
    "start": "2109599",
    "end": "2116079"
  },
  {
    "text": "and to demo this I have a chat app it's like a chat room I cannot have real time",
    "start": "2116079",
    "end": "2121900"
  },
  {
    "text": "without chats because that's the Holy Grail of real-time apps again we have",
    "start": "2121900",
    "end": "2128020"
  },
  {
    "text": "our clients in my case simple console apps which negotiates the server for the",
    "start": "2128020",
    "end": "2133119"
  },
  {
    "text": "JWT token the JWT token contains the role information for the clients using",
    "start": "2133119",
    "end": "2139359"
  },
  {
    "text": "which they can connect to the client chat app Hub in the service as well as join the group of",
    "start": "2139359",
    "end": "2146140"
  },
  {
    "text": "their choice and then they can start messaging each other in the chat room but none of those messages actually",
    "start": "2146140",
    "end": "2152619"
  },
  {
    "text": "reaches the server it is all managed within the service itself for you so let us see that in action",
    "start": "2152619",
    "end": "2161160"
  },
  {
    "text": "so that is my client to client chat",
    "start": "2162880",
    "end": "2168220"
  },
  {
    "text": "I slightly changed this demo yesterday so let's see whether it works I've brought in the client sdks",
    "start": "2168220",
    "end": "2176319"
  },
  {
    "text": "so that's my two users let us say user a",
    "start": "2180640",
    "end": "2186040"
  },
  {
    "text": "and I want to join a and this is user B I also want to join",
    "start": "2186040",
    "end": "2193599"
  },
  {
    "text": "group a because you have to be in the same group for this to work so hello",
    "start": "2193599",
    "end": "2199960"
  },
  {
    "text": "a so I'm receiving the message here so hello again",
    "start": "2199960",
    "end": "2207900"
  },
  {
    "text": "hello B so that is client to client communication going on and this",
    "start": "2208540",
    "end": "2215200"
  },
  {
    "text": "completely ignores the server you have to take my word for it uh but this is what happens using the sub protocol but",
    "start": "2215200",
    "end": "2222640"
  },
  {
    "text": "to see the code behind the scenes on the server side um on the program.cs",
    "start": "2222640",
    "end": "2230020"
  },
  {
    "text": "I have the negotiate client chat chat app endpoint which helps me generate the",
    "start": "2230020",
    "end": "2235900"
  },
  {
    "text": "access token I am again using the user ID like uh simulating the authentication",
    "start": "2235900",
    "end": "2241180"
  },
  {
    "text": "but I'm also having some roles for permissions in place so I'm keeping it",
    "start": "2241180",
    "end": "2246280"
  },
  {
    "text": "pretty open and giving the permissions to join and leave any group or send messages to any group and when I create",
    "start": "2246280",
    "end": "2252940"
  },
  {
    "text": "the client access URI I am using the user ID as well as role information here",
    "start": "2252940",
    "end": "2258640"
  },
  {
    "text": "which means that the JWT token has knowledge of that and in my client app",
    "start": "2258640",
    "end": "2266640"
  },
  {
    "text": "I have this package Azure messaging web Pub sub client which is a client SDK to",
    "start": "2267160",
    "end": "2273280"
  },
  {
    "text": "make sure that we can make use of this sub protocol you can bring in just websocket clients so when I did this",
    "start": "2273280",
    "end": "2280180"
  },
  {
    "text": "Docker NDC London I did not have this SDK in place I just relied on websocket",
    "start": "2280180",
    "end": "2285940"
  },
  {
    "text": "clients which means there's a lot of Json serialization going on but with this Library it is made much more easier",
    "start": "2285940",
    "end": "2292780"
  },
  {
    "text": "for you so with this package in place in my program.cs",
    "start": "2292780",
    "end": "2298540"
  },
  {
    "text": "I have my user ID and the group that I'm asking the client to join once I have",
    "start": "2298540",
    "end": "2305440"
  },
  {
    "text": "that I'm using the negotiating Point here to get the client",
    "start": "2305440",
    "end": "2311680"
  },
  {
    "text": "access URI I can then generate a web Pub sub client based on that URI which means",
    "start": "2311680",
    "end": "2317380"
  },
  {
    "text": "I already have permissions to join any group then I start subscribing to the groups",
    "start": "2317380",
    "end": "2323140"
  },
  {
    "text": "then I can start my client and then I can join the group which I want to join",
    "start": "2323140",
    "end": "2328839"
  },
  {
    "text": "and using the send to group async method I can send a broadcast to all the",
    "start": "2328839",
    "end": "2333880"
  },
  {
    "text": "clients just within that group it doesn't leave the boundaries outside the group now this is just the client SDK",
    "start": "2333880",
    "end": "2341560"
  },
  {
    "text": "that Microsoft have have come up with you can come up with your own SDK as well if you need in your programming",
    "start": "2341560",
    "end": "2347980"
  },
  {
    "text": "language of your choice but then there's a certain specification that you have to follow which is again in the Microsoft",
    "start": "2347980",
    "end": "2353920"
  },
  {
    "text": "Docs so this is like a standard one which follows all the specifications of the",
    "start": "2353920",
    "end": "2359380"
  },
  {
    "text": "sub protocols that the service supports so we spoke about the server but the",
    "start": "2359380",
    "end": "2367480"
  },
  {
    "text": "real power of it comes in when we start making this completely serverless so we",
    "start": "2367480",
    "end": "2372880"
  },
  {
    "text": "can have complete Azure functions integration between your clients your service and your Azure functions and you",
    "start": "2372880",
    "end": "2380619"
  },
  {
    "text": "don't have to do much about it because all the server side functionality that I showed you can be made into Azure",
    "start": "2380619",
    "end": "2387160"
  },
  {
    "text": "functions with a few bindings and triggers in place so the first one is the trigger binding",
    "start": "2387160",
    "end": "2394359"
  },
  {
    "text": "which is what is used for running a function when there is an",
    "start": "2394359",
    "end": "2400060"
  },
  {
    "text": "incoming message from the web Pub sub service so the attribute here is the web",
    "start": "2400060",
    "end": "2405520"
  },
  {
    "text": "Pub sub trigger so if you think about the HTTP trigger triggering the function on an HTTP request this is the function",
    "start": "2405520",
    "end": "2412720"
  },
  {
    "text": "getting a trigger when there is a message coming in from web Pub sub service instance and the usage of it is",
    "start": "2412720",
    "end": "2420460"
  },
  {
    "text": "for event handling so event handling is where this comes into real use",
    "start": "2420460",
    "end": "2425980"
  },
  {
    "text": "and if you want to see an example of this if you want to handle system events like connect and disconnect this is what",
    "start": "2425980",
    "end": "2433060"
  },
  {
    "text": "you would start with so you would have the web Pub sub trigger attribute specifying The Hub name which is where",
    "start": "2433060",
    "end": "2440079"
  },
  {
    "text": "the Hub and you would say the type of the event that you're trying to handle in this",
    "start": "2440079",
    "end": "2445540"
  },
  {
    "text": "case is a system event because it's a connect or a disconnect is a system event and you specify the name of the",
    "start": "2445540",
    "end": "2452140"
  },
  {
    "text": "event which is connect and the type of the request is a connect event request as you see here",
    "start": "2452140",
    "end": "2458260"
  },
  {
    "text": "and then I can do the processing let my clients in instruct the service to take action Etc so what I'm trying to do here",
    "start": "2458260",
    "end": "2466000"
  },
  {
    "text": "with my demo here is I have like a simulation of a third-party service just",
    "start": "2466000",
    "end": "2471579"
  },
  {
    "text": "injecting data into my service and the point that I'm trying to prove is that using the Azure functions I can then",
    "start": "2471579",
    "end": "2478119"
  },
  {
    "text": "show that injected data into multiple different platforms so this is an example of a client trying to connect",
    "start": "2478119",
    "end": "2484599"
  },
  {
    "text": "using Azure functions using the web Pub subtrigger and handling system events",
    "start": "2484599",
    "end": "2490540"
  },
  {
    "text": "if you want to handle custom events or messages you can again do that using the web Pub sub trigger specifying the same",
    "start": "2490540",
    "end": "2497920"
  },
  {
    "text": "Hub name but this time the event type will be that of a user and you can you can have",
    "start": "2497920",
    "end": "2505180"
  },
  {
    "text": "messages uh message as the event name you can have your custom event as well",
    "start": "2505180",
    "end": "2511540"
  },
  {
    "text": "so if you want if you're creating say like a game you might want to take action when probably a character moves",
    "start": "2511540",
    "end": "2518380"
  },
  {
    "text": "forward or back uh walks back so all that can be created as custom events you",
    "start": "2518380",
    "end": "2524079"
  },
  {
    "text": "just need to put that in place here and tie it up in the Azure port in your service side",
    "start": "2524079",
    "end": "2530380"
  },
  {
    "text": "and the request type here is user event request and based upon that I can take",
    "start": "2530380",
    "end": "2536260"
  },
  {
    "text": "the action of say send to all or send to a specific client or send to a group of clients which is what I'm doing here",
    "start": "2536260",
    "end": "2543040"
  },
  {
    "text": "with the create send to all action method here this one",
    "start": "2543040",
    "end": "2549280"
  },
  {
    "text": "I can't do that here so this web pups of action is like a base abstract class which contains all",
    "start": "2549280",
    "end": "2555579"
  },
  {
    "text": "the actions it can take and create send to all is like a broadcast or you can",
    "start": "2555579",
    "end": "2560920"
  },
  {
    "text": "have sent to a particular group or sent to a particular user as well",
    "start": "2560920",
    "end": "2566079"
  },
  {
    "text": "then you have input bindings there are two input bindings the first",
    "start": "2566079",
    "end": "2571599"
  },
  {
    "text": "one is the web Pub sub context so this is of particular use with Azure static web apps if you have used Azure static",
    "start": "2571599",
    "end": "2578440"
  },
  {
    "text": "web apps you might know that it has a app part as well as an Azure functions part but the Azure functions is purely",
    "start": "2578440",
    "end": "2584560"
  },
  {
    "text": "HTTP trigger only it cannot work with any other triggers so if you want to run",
    "start": "2584560",
    "end": "2590260"
  },
  {
    "text": "that function when an st when something comes in from the web Pub sub service",
    "start": "2590260",
    "end": "2595300"
  },
  {
    "text": "instance and push information into the app then you need to use this input binding so it actually does the purpose",
    "start": "2595300",
    "end": "2602380"
  },
  {
    "text": "of the web Pub sub trigger attribute but for Azure static web apps the thing that we will be focusing today",
    "start": "2602380",
    "end": "2609700"
  },
  {
    "text": "is the web Pub sub connection attribute which lets the client connect to the service generates the access token and",
    "start": "2609700",
    "end": "2617619"
  },
  {
    "text": "it is nothing but again an attribute that you put in place specifying The Hub",
    "start": "2617619",
    "end": "2623380"
  },
  {
    "text": "and what it does is it it gathers all the information it needs to generate the",
    "start": "2623380",
    "end": "2629260"
  },
  {
    "text": "access token so when you have the web Pub sub connection attribute it goes and looks for an app setting called Web Pub",
    "start": "2629260",
    "end": "2636099"
  },
  {
    "text": "sub connection string and provided you have the connection string in place you can straight away return that",
    "start": "2636099",
    "end": "2642940"
  },
  {
    "text": "connection attribute which contains the JWT token so all you need is that attribute and an app sitting in place",
    "start": "2642940",
    "end": "2649720"
  },
  {
    "text": "for it to create that connection for you",
    "start": "2649720",
    "end": "2655119"
  },
  {
    "text": "and output binding this is the attribute called the web Pub sub attribute this is",
    "start": "2655119",
    "end": "2661540"
  },
  {
    "text": "invoking the service to do something so this is the role of connection management or instructing the service",
    "start": "2661540",
    "end": "2667660"
  },
  {
    "text": "from the server what to do so you can use this to manage clients or groups or",
    "start": "2667660",
    "end": "2672760"
  },
  {
    "text": "broadcast events broadcast messages to Connected clients or specific clients all of that is done via this output",
    "start": "2672760",
    "end": "2679060"
  },
  {
    "text": "binding so broadcasting to clients so I have brought in the web Pub sub",
    "start": "2679060",
    "end": "2685900"
  },
  {
    "text": "attribute which is my output binding and then using the web Pub sub action I can",
    "start": "2685900",
    "end": "2691720"
  },
  {
    "text": "then do the create send to action using which I can broadcast a message to all",
    "start": "2691720",
    "end": "2696940"
  },
  {
    "text": "the connected clients so let us have a look at what happens underneath the hood",
    "start": "2696940",
    "end": "2702960"
  },
  {
    "text": "let us go have a look at the function itself",
    "start": "2702960",
    "end": "2708720"
  },
  {
    "text": "it should have a configuration",
    "start": "2716440",
    "end": "2721960"
  },
  {
    "text": "the web Pub sub connection string this is the connection string that I'm using for my web Pub sub service and this is",
    "start": "2724900",
    "end": "2731400"
  },
  {
    "text": "like a convention a naming convention that it follows so with this",
    "start": "2731400",
    "end": "2736839"
  },
  {
    "text": "connection string and that particular name in place the attribute works out the connection string and using the Hub",
    "start": "2736839",
    "end": "2743140"
  },
  {
    "text": "name that you provide it works out the connection string and the JWT token and in my service",
    "start": "2743140",
    "end": "2751359"
  },
  {
    "text": "if I want to make use of an Azure function as my endpoint",
    "start": "2751359",
    "end": "2756880"
  },
  {
    "text": "which I am doing here it needs a extension key or a code",
    "start": "2756880",
    "end": "2764319"
  },
  {
    "text": "so that when you have an Azure function with the bindings and triggers in place",
    "start": "2764319",
    "end": "2770800"
  },
  {
    "text": "deployed it creates an extension key for you by default",
    "start": "2770800",
    "end": "2776040"
  },
  {
    "text": "which is I can't remember where it is",
    "start": "2776040",
    "end": "2781960"
  },
  {
    "text": "but it is in place and that code is used here so the extension key that you get",
    "start": "2781960",
    "end": "2787480"
  },
  {
    "text": "with a function that needs to be used for authenticating with the function and as before I need to configure my event",
    "start": "2787480",
    "end": "2795220"
  },
  {
    "text": "handlers and this is where I do it think that can be",
    "start": "2795220",
    "end": "2800560"
  },
  {
    "text": "it's one of those days where I've forgotten there we go that is the web Pub sub extension so when you have the",
    "start": "2800560",
    "end": "2807520"
  },
  {
    "text": "function with all these triggers and binding in splay in place it generates the key for you which you can use this",
    "start": "2807520",
    "end": "2813940"
  },
  {
    "text": "is the same key that I'm using here to connect my service Hub to the Azure function and",
    "start": "2813940",
    "end": "2821020"
  },
  {
    "text": "use the Azure function as the event handler so what I'm trying to do here is I have",
    "start": "2821020",
    "end": "2827560"
  },
  {
    "text": "got this sent to web Pub sub Client app",
    "start": "2827560",
    "end": "2832660"
  },
  {
    "text": "which is going to just inject weather information like random weather information to all the connected clients",
    "start": "2832660",
    "end": "2839680"
  },
  {
    "text": "so this is passing a lot of information to the service so it's like a simulating a",
    "start": "2839680",
    "end": "2845020"
  },
  {
    "text": "third-party app which is sending information to the service and that service talks to my Azure",
    "start": "2845020",
    "end": "2851920"
  },
  {
    "text": "function and I have two other clients which is a Blazer app which is what I have here",
    "start": "2851920",
    "end": "2860700"
  },
  {
    "text": "and provided that runs come on come on there we go is that the weather Hub app",
    "start": "2861940",
    "end": "2870099"
  },
  {
    "text": "that's the weather Hub app and it is connected and is ready to receive data",
    "start": "2870099",
    "end": "2875560"
  },
  {
    "text": "there we go this is the information that I'm sending and the information that I'm getting back on the client",
    "start": "2875560",
    "end": "2883000"
  },
  {
    "text": "I can bring in another client if I have say the stream client again",
    "start": "2883000",
    "end": "2891480"
  },
  {
    "text": "that should get the information as well so that is both my Services both my",
    "start": "2891760",
    "end": "2900040"
  },
  {
    "text": "clients getting the information from a third-party app using a service",
    "start": "2900040",
    "end": "2905500"
  },
  {
    "text": "which talks to Azure function and these two clients are connected to my service",
    "start": "2905500",
    "end": "2910540"
  },
  {
    "text": "as well so that is what is going on beneath the scenes now let us talk about some of the other",
    "start": "2910540",
    "end": "2917740"
  },
  {
    "text": "stuff that is all the code done for the day you might want to occasionally debug and see what is going on in your service",
    "start": "2917740",
    "end": "2924339"
  },
  {
    "text": "for that you can bring in resource logs and to see what is going on in your",
    "start": "2924339",
    "end": "2929500"
  },
  {
    "text": "service if you go into the live Trace settings there is the live Trace tool",
    "start": "2929500",
    "end": "2935380"
  },
  {
    "text": "you can't really see what is the message that is happening but you can see that hey I'm receiving information uh there",
    "start": "2935380",
    "end": "2943540"
  },
  {
    "text": "is something being sent to my service here so that is what you can gather from here this also is a part of your",
    "start": "2943540",
    "end": "2950440"
  },
  {
    "text": "outbound traffic from the service so you will get billed for the usage of this so",
    "start": "2950440",
    "end": "2955720"
  },
  {
    "text": "currently I've got both my clients running which is the reason one of the reasons that I have information coming",
    "start": "2955720",
    "end": "2961020"
  },
  {
    "text": "because the Hub name is where the Hub I also have like an Azure function running",
    "start": "2961020",
    "end": "2966339"
  },
  {
    "text": "which with a timer trigger which just sends out random data into the service so that is in the notification Hub so I",
    "start": "2966339",
    "end": "2973300"
  },
  {
    "text": "can see multiple Hub information in the same resource logs as well now what are the benefits of using this",
    "start": "2973300",
    "end": "2980440"
  },
  {
    "text": "service you have a built-in support for large real-time large-scale real-time applications of course it's web sockets",
    "start": "2980440",
    "end": "2987040"
  },
  {
    "text": "so you have multiple platforms various programming languages with a low barrier",
    "start": "2987040",
    "end": "2992319"
  },
  {
    "text": "to entry you have Azure functions integration as you have seen so you can make it completely serverless and pay",
    "start": "2992319",
    "end": "2998619"
  },
  {
    "text": "for your usage and of course the various messaging patterns use cases wide",
    "start": "2998619",
    "end": "3004800"
  },
  {
    "text": "variety of use cases if you go into the samples you can see a lot of examples as well starting from browser apps chat",
    "start": "3004800",
    "end": "3011700"
  },
  {
    "text": "rooms iot live dashboards gaming collaborative whiteboard apps all of",
    "start": "3011700",
    "end": "3017099"
  },
  {
    "text": "that now azure's web Pub sub service is not just the only service out there which",
    "start": "3017099",
    "end": "3023760"
  },
  {
    "text": "you can use to build real-time apps you can have signalr you even have Azure service bus Each of which differs there",
    "start": "3023760",
    "end": "3030839"
  },
  {
    "text": "are other third-party apps as well which I haven't used so I'm not in a position to comment over it but a comparison",
    "start": "3030839",
    "end": "3037260"
  },
  {
    "text": "between Azure web Pub sub and signalr service when to use one over the other if you want to have web sockets in place",
    "start": "3037260",
    "end": "3044339"
  },
  {
    "text": "then go for Azure web Pub sub if you want a simpler messaging pattern like",
    "start": "3044339",
    "end": "3049619"
  },
  {
    "text": "what you have seen today then web Pub sub if you want to offload a bunch of websocket connections to another service",
    "start": "3049619",
    "end": "3055980"
  },
  {
    "text": "and free up your server again that is azure web app sub if you want client to client interactions again web pubs up",
    "start": "3055980",
    "end": "3062700"
  },
  {
    "text": "with signalr you can bring in more complex messaging patterns like RPC or streaming capabilities with fallbacks in",
    "start": "3062700",
    "end": "3069960"
  },
  {
    "text": "place plus another thing to notice here is that with Azure web Pub sub you don't have presence information like if a",
    "start": "3069960",
    "end": "3077040"
  },
  {
    "text": "client is online or not you don't get that information if you want message queuing you need to bring in service bus",
    "start": "3077040",
    "end": "3084059"
  },
  {
    "text": "but I think message queuing is available with the reliable Json protocols but that is still in preview but you don't",
    "start": "3084059",
    "end": "3090599"
  },
  {
    "text": "have message history for replay unless and until you store it elsewhere and bring that data back in it is a lot of",
    "start": "3090599",
    "end": "3097559"
  },
  {
    "text": "work and what about customer data nothing happens to customer data because web Pub",
    "start": "3097559",
    "end": "3103800"
  },
  {
    "text": "sub doesn't store any customer data it is just a messaging service it just acts",
    "start": "3103800",
    "end": "3110460"
  },
  {
    "text": "according to your instructions and that is it from me today web Pub sub",
    "start": "3110460",
    "end": "3116160"
  },
  {
    "text": "that is the resources URL most of it leads to all the Microsoft documentation",
    "start": "3116160",
    "end": "3121460"
  },
  {
    "text": "have a play around with the service I hope I've inspired you enough through my",
    "start": "3121460",
    "end": "3126660"
  },
  {
    "text": "episodes to go and build something of your own um yeah this is a service that's been",
    "start": "3126660",
    "end": "3132420"
  },
  {
    "text": "there for about two years in general availability and there's a wonderful wonderful demo in the resources I think",
    "start": "3132420",
    "end": "3139440"
  },
  {
    "text": "Anthony Chu did a demo about Azure static web apps and Azure web Pub sub",
    "start": "3139440",
    "end": "3144500"
  },
  {
    "text": "which I regard as the God of all demos till date like it's the best demo I have",
    "start": "3144500",
    "end": "3149880"
  },
  {
    "text": "ever ever seen so go have a look at that too in my resources you will be wowed",
    "start": "3149880",
    "end": "3155819"
  },
  {
    "text": "thank you very much any questions just catch me now or later",
    "start": "3155819",
    "end": "3160920"
  },
  {
    "text": "thank you thank you",
    "start": "3160920",
    "end": "3166760"
  }
]