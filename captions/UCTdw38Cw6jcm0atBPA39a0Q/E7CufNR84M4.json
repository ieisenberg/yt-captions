[
  {
    "text": "all right welcome to my talk i'm going to talk about build automation",
    "start": "5200",
    "end": "11759"
  },
  {
    "text": "revolution with nuke anyone has heard about nuke before race hands",
    "start": "11759",
    "end": "17600"
  },
  {
    "text": "okay we're definitely going going to increase that number um a bit of introduction who am i my name",
    "start": "17600",
    "end": "24960"
  },
  {
    "text": "is matthias i come from germany munich very famous for brexit and beer well mostly beer",
    "start": "24960",
    "end": "32078"
  },
  {
    "text": "at my job i do developer advocacy at jetbrains and even before that i was so all of",
    "start": "32079",
    "end": "39440"
  },
  {
    "text": "things about resharper and ryder and even before that i was always very interested in developer tools",
    "start": "39440",
    "end": "46879"
  },
  {
    "text": "and besides all that i'm also an oss and devops enthusiast i can't say maybe",
    "start": "46879",
    "end": "53840"
  },
  {
    "text": "okay so let's dive into the topic and let me start by saying that we're kind of spoiled",
    "start": "53840",
    "end": "61839"
  },
  {
    "text": "we support with a great developer ecosystem um particularly in dotnet where we have",
    "start": "62480",
    "end": "68080"
  },
  {
    "text": "a great language with a very fast development pace all the time there are new language features but also we have",
    "start": "68080",
    "end": "75119"
  },
  {
    "text": "great ides like visual studio visual studio code writer my heart of course",
    "start": "75119",
    "end": "81520"
  },
  {
    "text": "but we know not spoiled in every way like not all our work is",
    "start": "81520",
    "end": "88799"
  },
  {
    "text": "done in c-sharp and net we're kind of getting there in some places like blazer for instance you don't need to write",
    "start": "88799",
    "end": "94640"
  },
  {
    "text": "javascript anymore but then there's also things like docker terraform uh navigating azure portal",
    "start": "94640",
    "end": "101759"
  },
  {
    "text": "management and all that stuff so yeah quite a diverse thing",
    "start": "101759",
    "end": "107520"
  },
  {
    "text": "this the developer live something that we rely on like every day",
    "start": "107520",
    "end": "113119"
  },
  {
    "text": "every developer with every commit our build pipelines yeah",
    "start": "113119",
    "end": "118320"
  },
  {
    "text": "this is an essential part of our development workflow because we want with every change integrate that change",
    "start": "118320",
    "end": "124159"
  },
  {
    "text": "into an existing code base and that is done primarily by deterministic testing packaging",
    "start": "124159",
    "end": "131039"
  },
  {
    "text": "deployment even maybe even continuous deployment and that stuff",
    "start": "131039",
    "end": "137120"
  },
  {
    "text": "the usual suspects here are those i'm sure you've seen one of those maybe",
    "start": "137120",
    "end": "143599"
  },
  {
    "text": "for for the most uh popular ones i would like to do a quick count so who's using",
    "start": "143599",
    "end": "149360"
  },
  {
    "text": "uh gitlab yeah um let's start with azure pipelines",
    "start": "149360",
    "end": "156239"
  },
  {
    "text": "uh probably the majority or github actions maybe that's a majority oh only a few okay uh team city",
    "start": "156239",
    "end": "164319"
  },
  {
    "text": "okay good yeah if if you miss any if you miss your personal um",
    "start": "164319",
    "end": "171040"
  },
  {
    "text": "cicd tool then tell me afterwards and a lot of",
    "start": "171040",
    "end": "176879"
  },
  {
    "text": "tools of those are using yaml tim sutti and jenkins were were exceptions from that so let me ask who's",
    "start": "176879",
    "end": "183440"
  },
  {
    "text": "really in love with yaml raise your hand",
    "start": "183440",
    "end": "188080"
  },
  {
    "text": "okay don't be offended by the next question okay who hates yammer",
    "start": "189360",
    "end": "195280"
  },
  {
    "text": "a couple more at least yeah so for those that don't hate yamu",
    "start": "195280",
    "end": "201840"
  },
  {
    "text": "don't be offended yeah maybe you just don't hate yama yet [Laughter] um",
    "start": "201840",
    "end": "207920"
  },
  {
    "text": "and also that was interesting when i found out about it funny fact yammer was designed or proposed by clark",
    "start": "207920",
    "end": "215599"
  },
  {
    "text": "evans and also together with ingi.net",
    "start": "215599",
    "end": "220640"
  },
  {
    "text": "i have no idea how you pronounce that but looks suspicious from net developer",
    "start": "220640",
    "end": "226080"
  },
  {
    "text": "point of view but yeah let me talk about my seven issues that i have with",
    "start": "226080",
    "end": "233760"
  },
  {
    "text": "yaml hopefully very very briefly the first is you have repeated commits",
    "start": "233760",
    "end": "239120"
  },
  {
    "text": "you're constantly in this try and error approach where you change something you commit it you wait for the response you",
    "start": "239120",
    "end": "246080"
  },
  {
    "text": "investigate if something goes wrong so it's very usual to have a long list of commits that try to fix",
    "start": "246080",
    "end": "253840"
  },
  {
    "text": "and the main reason for that is because we can't execute it locally so",
    "start": "253840",
    "end": "259519"
  },
  {
    "text": "you see this guy here he's looking like when when do i finally land to",
    "start": "259519",
    "end": "266000"
  },
  {
    "text": "continue working on my on my yammer workflows yeah um and i know some",
    "start": "266000",
    "end": "272240"
  },
  {
    "text": "tooling exists to execute github workflow uh workflows for instance but even on the website it says",
    "start": "272240",
    "end": "278960"
  },
  {
    "text": "default runners are intentionally incomplete yeah so there's some limitation that was a quote",
    "start": "278960",
    "end": "285040"
  },
  {
    "text": "um azure pipelines even they tried to get into that direction but meanwhile",
    "start": "285040",
    "end": "290639"
  },
  {
    "text": "they even reverted a commit that tried to document this whole local execution thing",
    "start": "290639",
    "end": "296800"
  },
  {
    "text": "another thing is isolated knowledge yeah it's very common that there's this one person who knows",
    "start": "296800",
    "end": "304080"
  },
  {
    "text": "how everything works and when that person is on vacation like waldo devops developer here",
    "start": "304080",
    "end": "313039"
  },
  {
    "text": "then you have a problem another one something that i see quite often and also just recently there was a",
    "start": "313039",
    "end": "318639"
  },
  {
    "text": "project that required the certain java sdk yeah i also do java sometimes",
    "start": "318639",
    "end": "325919"
  },
  {
    "text": "but this insta installation of the requirements was part of the workflow of the yama",
    "start": "325919",
    "end": "331120"
  },
  {
    "text": "workflow not of the script that i can execute locally yeah and so i have to find out",
    "start": "331120",
    "end": "336560"
  },
  {
    "text": "where do i get this dependency when the login is another thing",
    "start": "336560",
    "end": "343039"
  },
  {
    "text": "has anyone ever moved platforms so let's say from gitlab to azure pipelines",
    "start": "343199",
    "end": "349520"
  },
  {
    "text": "anyone okay a couple maybe this is also because it's not so",
    "start": "349520",
    "end": "355440"
  },
  {
    "text": "easy because once you have everything established and the one side of whatever whatever service you use it's",
    "start": "355440",
    "end": "362400"
  },
  {
    "text": "quite difficult to move because you need to re-implement certain tasks they may not be available",
    "start": "362400",
    "end": "368319"
  },
  {
    "text": "problem also mentally it might be a vendor login because you that you're less likely to move to another platform",
    "start": "368319",
    "end": "374720"
  },
  {
    "text": "because it feels like oh yeah i know how it was done there but here the early stages their steps and then you have all",
    "start": "374720",
    "end": "381440"
  },
  {
    "text": "those different tasks or actions what not security concerns is also an interesting",
    "start": "381440",
    "end": "388720"
  },
  {
    "text": "topic i think still i put a question mark there because we already have that with nougat",
    "start": "388720",
    "end": "394960"
  },
  {
    "text": "to some degree but in yaml it's sometimes much much worse because pulling in an action",
    "start": "394960",
    "end": "402080"
  },
  {
    "text": "is quite easy yeah some action that you don't actually know who is maintaining that action",
    "start": "402080",
    "end": "407840"
  },
  {
    "text": "github actions has around 13 000 actions that you can pull in",
    "start": "407840",
    "end": "414319"
  },
  {
    "text": "and i at one point i got crazily paranoid when someone sent me an issue",
    "start": "414319",
    "end": "419680"
  },
  {
    "text": "along with a build script was just something to test out and i executed it and completely wiped my nougat cache and",
    "start": "419680",
    "end": "426400"
  },
  {
    "text": "i was actually on a train in germany no internet connection or bad at least",
    "start": "426400",
    "end": "432639"
  },
  {
    "text": "so um last thing",
    "start": "432639",
    "end": "439039"
  },
  {
    "text": "it's inherently limited yeah jumping back to my initial point uh",
    "start": "439120",
    "end": "444720"
  },
  {
    "text": "yammer writing yaml isn't anywhere near the experience that we have dealing with",
    "start": "444720",
    "end": "450240"
  },
  {
    "text": "c-sharp or anything like that we usually use search and replace we indent a lot",
    "start": "450240",
    "end": "455280"
  },
  {
    "text": "yeah all that stuff and it shows it shows some places like this",
    "start": "455280",
    "end": "461520"
  },
  {
    "text": "and ultimately it also shows here so we want to do devops and all that but there's yammer yeah blocking our way",
    "start": "461520",
    "end": "470639"
  },
  {
    "text": "although i'm hating a lot on onion and actually it's not me personally because i just reference",
    "start": "475039",
    "end": "480720"
  },
  {
    "text": "tweets yeah but there's also this problem of local build management that's also part of devops",
    "start": "480720",
    "end": "487440"
  },
  {
    "text": "and for that let me just uh bring a few points",
    "start": "487440",
    "end": "492479"
  },
  {
    "text": "so the first is uh local build problems when you use powershell for instance or bash it's a",
    "start": "492479",
    "end": "498960"
  },
  {
    "text": "foreign language at least for c sharp developers like i am i i have a hard time writing something in powershell",
    "start": "498960",
    "end": "507120"
  },
  {
    "text": "there's also limited ide support again the point that i was already making it isn't near that tooling that we're used",
    "start": "507120",
    "end": "513039"
  },
  {
    "text": "to that sometimes also implies that the tools or the scripts that we're writing",
    "start": "513039",
    "end": "519680"
  },
  {
    "text": "for ourselves are not properly documented in any way and it's more like a bit of a black box",
    "start": "519680",
    "end": "526240"
  },
  {
    "text": "and last but not least those languages have a great amount of unknown unknowns that",
    "start": "526240",
    "end": "532800"
  },
  {
    "text": "at first when you decide to go that road you don't even know what you're what you're getting into",
    "start": "532800",
    "end": "538800"
  },
  {
    "text": "the last company i worked for we decided to use powershell for our deployment",
    "start": "538800",
    "end": "544160"
  },
  {
    "text": "and we were constantly googling stuff like this which stuff that is absolutely clear in c-sharp yeah",
    "start": "544160",
    "end": "552000"
  },
  {
    "text": "like not a comparison demystified all right yeah you need to demystify that all right",
    "start": "552000",
    "end": "558640"
  },
  {
    "text": "okay so as the great thought leaders system of don already said revolution is the only",
    "start": "558640",
    "end": "565440"
  },
  {
    "text": "solution and my approach or my idea of a revolution is going to be about nuke",
    "start": "565440",
    "end": "573920"
  },
  {
    "text": "before i tell you what nuke is i want to tell you what it's not",
    "start": "575040",
    "end": "581360"
  },
  {
    "text": "it's not an ms build replacement so you still use ms built same way it's not a c-sharp compiler",
    "start": "581360",
    "end": "588000"
  },
  {
    "text": "replacement although i was ranting about yamu a lot it's not yet a yama replacement but we",
    "start": "588000",
    "end": "594880"
  },
  {
    "text": "will see something that solves a lot of issues around that and",
    "start": "594880",
    "end": "600640"
  },
  {
    "text": "it's also not an atomic bomb so the name originates more like from",
    "start": "600640",
    "end": "606800"
  },
  {
    "text": "new make tool so what is nuke a make tool specifically for people like",
    "start": "606800",
    "end": "612959"
  },
  {
    "text": "you and me people that embrace the existing tooling that like working in a great language which is c-sharp on.net",
    "start": "612959",
    "end": "620800"
  },
  {
    "text": "and maybe even using that for a lot of build automation issues locally for local management but also in",
    "start": "620800",
    "end": "628000"
  },
  {
    "text": "pipelines i will also mention a couple of projects",
    "start": "628000",
    "end": "633680"
  },
  {
    "text": "because i think that's also great if you know where to look for how people are using that so these are",
    "start": "633680",
    "end": "638959"
  },
  {
    "text": "some projects that are using nuke hot chocolate maintainer front draw um and",
    "start": "638959",
    "end": "646480"
  },
  {
    "text": "with that let's dive into some of the basics the first thing that you have to do is",
    "start": "646480",
    "end": "652480"
  },
  {
    "text": "install the new global tool yeah this is like just like a tool that you can then",
    "start": "652480",
    "end": "657680"
  },
  {
    "text": "have globally available and with that we can do our setup yeah we're in our repository nuke demo",
    "start": "657680",
    "end": "665120"
  },
  {
    "text": "is my repository and we call nuke setup then the setup starts and makes a couple",
    "start": "665120",
    "end": "673120"
  },
  {
    "text": "of uh observations like for instance the root directory root directory is usually you",
    "start": "673120",
    "end": "679360"
  },
  {
    "text": "could say it's the same place as the dot git folder so the root of your of your git repository",
    "start": "679360",
    "end": "685760"
  },
  {
    "text": "but i call it root directory because it's not just about git i mean there's also still svn",
    "start": "685760",
    "end": "691279"
  },
  {
    "text": "um then some time ago you could also select the build run time",
    "start": "691279",
    "end": "696640"
  },
  {
    "text": "but then the questions start yeah so how do you want to name your project so that's a new one yeah it's actually",
    "start": "696640",
    "end": "703440"
  },
  {
    "text": "going to be a project how do you want to name your project okay build i'm going to accept the defaults here where do you",
    "start": "703440",
    "end": "709120"
  },
  {
    "text": "want to want it to be located and which version do you want to use",
    "start": "709120",
    "end": "715839"
  },
  {
    "text": "the last thing is really interesting and you can already see it asks for the default solution that you're going to",
    "start": "715839",
    "end": "720959"
  },
  {
    "text": "use and that is because this project up here does the",
    "start": "720959",
    "end": "726320"
  },
  {
    "text": "let me see if my point actually works yeah this project here underscore build this",
    "start": "726320",
    "end": "732800"
  },
  {
    "text": "is actually going to be part of your solution so do you want to have a default solution yes i do",
    "start": "732800",
    "end": "738720"
  },
  {
    "text": "and let's add it there if we head over to the ide then we see",
    "start": "738720",
    "end": "744639"
  },
  {
    "text": "and this is the file system view so this is our repository you can see there's a dot nuke folder this is the",
    "start": "744639",
    "end": "751839"
  },
  {
    "text": "marker for the for the root directory but there's also this sdk bootstrapping",
    "start": "751839",
    "end": "757360"
  },
  {
    "text": "so in these three files this is the minimal bootstrapping that you need to get the net sdk",
    "start": "757360",
    "end": "764000"
  },
  {
    "text": "ready to go so you don't need to have that in your workflow yaml for instance",
    "start": "764000",
    "end": "770720"
  },
  {
    "text": "it will just anyone can check that out execute those files and sdk will be there to bootstrap the build project",
    "start": "770720",
    "end": "778959"
  },
  {
    "text": "um then we switch over to solution view and you can see this is actually",
    "start": "778959",
    "end": "784320"
  },
  {
    "text": "a project it's a console application project and has normal c-sharp files inside",
    "start": "784320",
    "end": "791760"
  },
  {
    "text": "uh if we look at the basic declaration it looks like this class built usually",
    "start": "791760",
    "end": "797040"
  },
  {
    "text": "in console applications you have program you know but you can also rename that so in this case it's built and it's also",
    "start": "797040",
    "end": "802639"
  },
  {
    "text": "going to have a base class defined which is nuke built and with that of course console",
    "start": "802639",
    "end": "808800"
  },
  {
    "text": "application needs a static in main what we do here is really just delegating to nuke",
    "start": "808800",
    "end": "815440"
  },
  {
    "text": "as a framework so that it executes our build",
    "start": "815440",
    "end": "820880"
  },
  {
    "text": "and then we have targets targets are is the notion of a single build step",
    "start": "820880",
    "end": "826880"
  },
  {
    "text": "that you want to make like for instance compiling packing testing etc",
    "start": "826880",
    "end": "832079"
  },
  {
    "text": "and the one question that i like to make here is you see we have the",
    "start": "832079",
    "end": "837920"
  },
  {
    "text": "compiler target can anyone tell me what kind of c sharp fragment compile is",
    "start": "837920",
    "end": "844880"
  },
  {
    "text": "here is it a class is it a field everyone wants to take a guess",
    "start": "844880",
    "end": "852959"
  },
  {
    "text": "yeah it looks a bit funny right because of this tail here anyone",
    "start": "853760",
    "end": "860560"
  },
  {
    "text": "don't be so shy okay i appoint you you tell me",
    "start": "860560",
    "end": "869560"
  },
  {
    "text": "uh all right so what this is is an expression based i hope you were not confused because of the sign but this is",
    "start": "873600",
    "end": "880079"
  },
  {
    "text": "just a ligature you know it's just an arrow basically but what it is is an expression-based property this is the",
    "start": "880079",
    "end": "886399"
  },
  {
    "text": "first part and this property returns a delegate up from here from the first underscore to the very end it's just a",
    "start": "886399",
    "end": "893120"
  },
  {
    "text": "delegate that gets returned all right and what we can do with that",
    "start": "893120",
    "end": "898240"
  },
  {
    "text": "is a lot actually so this is where i start to first implement",
    "start": "898240",
    "end": "903920"
  },
  {
    "text": "something for my uh for my for my compiled target i just want to log something that's the",
    "start": "903920",
    "end": "910959"
  },
  {
    "text": "experience you get shell completion uh not sure completion code completion yeah",
    "start": "910959",
    "end": "916320"
  },
  {
    "text": "you also get the serial lock in this case is a nougat package you can just consume that yeah",
    "start": "916320",
    "end": "922480"
  },
  {
    "text": "like with any other package you have the whole range of nuclear packages available",
    "start": "922480",
    "end": "927680"
  },
  {
    "text": "then we can also search this is cool or this is possible let's",
    "start": "927680",
    "end": "933440"
  },
  {
    "text": "say because compile is actually a symbol it's not like many other build automation tools where you use",
    "start": "933440",
    "end": "940000"
  },
  {
    "text": "strings to identify targets or steps or however you want to call them it's an actual symbol so you can navigate there",
    "start": "940000",
    "end": "946720"
  },
  {
    "text": "even if you're in a very different place inside your solution just navigate there",
    "start": "946720",
    "end": "952800"
  },
  {
    "text": "we can also set breakpoints can you do that with yamu can you do it with ms build if you use that or",
    "start": "952800",
    "end": "959279"
  },
  {
    "text": "powershell powershell probably easy but the others are more difficult",
    "start": "959279",
    "end": "965519"
  },
  {
    "text": "you can even and that works natively just run this or debug",
    "start": "965519",
    "end": "971120"
  },
  {
    "text": "locally this whole console application and with some more support you can see",
    "start": "971120",
    "end": "976720"
  },
  {
    "text": "this little icon here popping up there for all the major players vs code visual studio writer",
    "start": "976720",
    "end": "983759"
  },
  {
    "text": "there are extensions to make this a bit more comfortable so you can go here with this icon and say",
    "start": "983759",
    "end": "990560"
  },
  {
    "text": "compile i actually want to run or i want to debug it or i want to run debugger without dependencies we will look into",
    "start": "990560",
    "end": "996079"
  },
  {
    "text": "dependencies a bit later [Music] all right",
    "start": "996079",
    "end": "1001279"
  },
  {
    "text": "and well yeah one last thing is usually build automation systems they",
    "start": "1001279",
    "end": "1006959"
  },
  {
    "text": "also have this notion of a default target so something that gets executed if you don't specify anything else in",
    "start": "1006959",
    "end": "1013839"
  },
  {
    "text": "this case i can just say this should be compiled as the default target yeah and",
    "start": "1013839",
    "end": "1019279"
  },
  {
    "text": "what i want to point out here is also we can actually use refactoring tools so",
    "start": "1019279",
    "end": "1024558"
  },
  {
    "text": "when we're here compiling we invoke we want to rename that to hello let's say yeah because that's",
    "start": "1024559",
    "end": "1030558"
  },
  {
    "text": "the the better name for something that prints hello world um then this will actually update in all",
    "start": "1030559",
    "end": "1036558"
  },
  {
    "text": "the places where it's used yeah you know that",
    "start": "1036559",
    "end": "1042400"
  },
  {
    "text": "so now i want to show you how it looks when you execute it and as i said before you have this global",
    "start": "1045360",
    "end": "1050960"
  },
  {
    "text": "tool you execute it it prints something i put it in a thread sleep to make this not so fast but in the end you also see",
    "start": "1050960",
    "end": "1058320"
  },
  {
    "text": "let's let this run another time at the end you also see what targets have been",
    "start": "1058320",
    "end": "1064799"
  },
  {
    "text": "have been executed and their status so there are a lot of other statuses like skipped failed",
    "start": "1064799",
    "end": "1070080"
  },
  {
    "text": "naturally of course so compared to yaml just having this basic building block",
    "start": "1070080",
    "end": "1076240"
  },
  {
    "text": "let's say we have quick feedback it runs everywhere just need to check out it's self-contained because it has this",
    "start": "1076240",
    "end": "1083240"
  },
  {
    "text": "bootstrapping4.net sdk i would say for c-sharp developers it's very approachable although i know also",
    "start": "1083240",
    "end": "1090240"
  },
  {
    "text": "some people that do use it in foreign ecosystems and it has native integration yeah no extension whatsoever",
    "start": "1090240",
    "end": "1098400"
  },
  {
    "text": "that you really need everything else is just cherry on top let's say",
    "start": "1098400",
    "end": "1104320"
  },
  {
    "text": "and with this i want to dive into the target model because this is much wider than what you're used to from",
    "start": "1104320",
    "end": "1112240"
  },
  {
    "text": "yaml or it's close to ms build probably but yeah anyway let's take a look",
    "start": "1112240",
    "end": "1118720"
  },
  {
    "text": "first of all we've seen the target already but you can also give it a description yeah",
    "start": "1118720",
    "end": "1124000"
  },
  {
    "text": "that actually shows if you call nuke dash help then from the outside you don't need to go to the c-sharp file but",
    "start": "1124000",
    "end": "1130240"
  },
  {
    "text": "you can see it also from there beside descriptions let's also look at how you can connect",
    "start": "1130240",
    "end": "1137360"
  },
  {
    "text": "different targets with each other and i pick this example because it's i think easy to understand let's say we we start",
    "start": "1137360",
    "end": "1144720"
  },
  {
    "text": "from here we have a compile target and then we want to execute some tests uh ultimately we want to publish",
    "start": "1144720",
    "end": "1150559"
  },
  {
    "text": "something and then we also have quality checks in terms of an inspect target and something to announce",
    "start": "1150559",
    "end": "1159200"
  },
  {
    "text": "the arrow usually should point in the other direction i know that but i couldn't make a mermaid work that way anyway",
    "start": "1160640",
    "end": "1169760"
  },
  {
    "text": "we will focus on this dependency here first so test is dependent on unit tests and",
    "start": "1169760",
    "end": "1175840"
  },
  {
    "text": "integration tests you could say by designing it like that you can actually",
    "start": "1175840",
    "end": "1181440"
  },
  {
    "text": "express that those targets can be executed in parallel unit test and integration test how do you express that",
    "start": "1181440",
    "end": "1189760"
  },
  {
    "text": "with execution dependencies and you can see we have both targets here unit tests and tests and we can either write on",
    "start": "1189760",
    "end": "1196320"
  },
  {
    "text": "tests depends on unit tests or we cannot can reverse it and say",
    "start": "1196320",
    "end": "1201360"
  },
  {
    "text": "dependent four so this is just a matter of where you want to put it it's often a question about semantics",
    "start": "1201360",
    "end": "1208000"
  },
  {
    "text": "yeah and also a question much later which we will see uh what we will see",
    "start": "1208000",
    "end": "1214240"
  },
  {
    "text": "then there are ordering dependencies and you can see uh before we just had this solid gray",
    "start": "1214240",
    "end": "1220000"
  },
  {
    "text": "line now we have a dashed line yeah and i'm just highlighting that in red but ordering dependencies mean that",
    "start": "1220000",
    "end": "1226640"
  },
  {
    "text": "those targets don't necessarily depend on each other but if they're executed together then they should be ored in a",
    "start": "1226640",
    "end": "1233280"
  },
  {
    "text": "certain way yeah like clean for instance clean is not a dependency for compile and test",
    "start": "1233280",
    "end": "1240000"
  },
  {
    "text": "etc but once published is executed we actually do want to make a clean",
    "start": "1240000",
    "end": "1246080"
  },
  {
    "text": "and then it should be scheduled before compile so it shouldn't happen after compile or something and again here we can write it in two",
    "start": "1246080",
    "end": "1252880"
  },
  {
    "text": "different ways um before or after like in this case yeah again this",
    "start": "1252880",
    "end": "1260480"
  },
  {
    "text": "uh idea of you can express it on both targets and the last one i'm not sure if",
    "start": "1260480",
    "end": "1265760"
  },
  {
    "text": "you saw that before but this line was completely yellow before this is a trigger dependency yeah",
    "start": "1265760",
    "end": "1272320"
  },
  {
    "text": "why let me go back for a moment why because",
    "start": "1272320",
    "end": "1278799"
  },
  {
    "text": "often if you invoke build graphs then usually you design this as an execution",
    "start": "1279679",
    "end": "1286799"
  },
  {
    "text": "dependency and then you would need to say execute announce and that just sounds wrong you want to execute publish and",
    "start": "1286799",
    "end": "1292960"
  },
  {
    "text": "publish triggers announced so same game here triggered by and triggers",
    "start": "1292960",
    "end": "1299919"
  },
  {
    "text": "and then we also have static conditions so for a target you can express this target should only run when new members",
    "start": "1299919",
    "end": "1306880"
  },
  {
    "text": "length is greater than zero the static here means that this condition is checked at the very",
    "start": "1306880",
    "end": "1313039"
  },
  {
    "text": "beginning of the build execution so the file should already have those new members just a made up example",
    "start": "1313039",
    "end": "1320640"
  },
  {
    "text": "besides static ah sorry with static conditions you can also express that the dependencies of this one target that has",
    "start": "1320640",
    "end": "1327760"
  },
  {
    "text": "the conditions has or should define whether the dependencies should be executed or not sometimes you",
    "start": "1327760",
    "end": "1334880"
  },
  {
    "text": "want to skip those other dependencies this other work in this case sometimes you still want to execute that",
    "start": "1334880",
    "end": "1342480"
  },
  {
    "text": "and then there are also dynamic conditions like in this case you can see this other",
    "start": "1342480",
    "end": "1348000"
  },
  {
    "text": "work target is actually creating or updating this new members list",
    "start": "1348000",
    "end": "1354000"
  },
  {
    "text": "and then we need to check the condition just right before executing this update target",
    "start": "1354000",
    "end": "1361520"
  },
  {
    "text": "requirements are also a really good one because there what it does is really just",
    "start": "1361520",
    "end": "1368240"
  },
  {
    "text": "you can say in order to execute that this condition must be fulfilled if this is not fulfilled then the build",
    "start": "1368320",
    "end": "1374640"
  },
  {
    "text": "will actually fail instead of skipping a certain target",
    "start": "1374640",
    "end": "1379759"
  },
  {
    "text": "and let me see i forgot ah backpack",
    "start": "1381280",
    "end": "1387120"
  },
  {
    "text": "where was i here yeah like in this case other work could be something that takes a lot of time",
    "start": "1387120",
    "end": "1394000"
  },
  {
    "text": "and when you uh require this today year 2022",
    "start": "1394000",
    "end": "1399440"
  },
  {
    "text": "then this other work won't even be executed we'll see another example later then we also have failure handling like",
    "start": "1399440",
    "end": "1406159"
  },
  {
    "text": "for a target you could say this post database even if something failed before that should still be executed yeah to",
    "start": "1406159",
    "end": "1413120"
  },
  {
    "text": "tear down the database and it's assured to happen after failure or",
    "start": "1413120",
    "end": "1418559"
  },
  {
    "text": "if one target isn't essential then you just say it should proceed after failure",
    "start": "1418559",
    "end": "1423600"
  },
  {
    "text": "and catch everything now the question is with all those targets that you can connect etc how do",
    "start": "1423600",
    "end": "1430400"
  },
  {
    "text": "you keep track of that and that is where nuke dash dash plan comes into play because what this does is creating an",
    "start": "1430400",
    "end": "1437200"
  },
  {
    "text": "html representation of your whole build yeah and while you hover those targets it",
    "start": "1437200",
    "end": "1443919"
  },
  {
    "text": "will actually show you what targets are going to be executed so that you keep track and notice if we",
    "start": "1443919",
    "end": "1450320"
  },
  {
    "text": "if if it highlights publish then pretty much everything is yellow otherwise yeah",
    "start": "1450320",
    "end": "1455440"
  },
  {
    "text": "just a part of or just sub subgraph of that of course people brought this to the extreme",
    "start": "1455440",
    "end": "1462799"
  },
  {
    "text": "um let me flip that so that's if i can trust my telemetry data it's around 130",
    "start": "1462799",
    "end": "1469679"
  },
  {
    "text": "targets and yeah this is maybe maybe too much",
    "start": "1469679",
    "end": "1476320"
  },
  {
    "text": "another problem that i try to approach are input parameters we can take a look",
    "start": "1476320",
    "end": "1481600"
  },
  {
    "text": "at one of the scripts from rosslyn from the russell repository and there and this is the same file but",
    "start": "1481600",
    "end": "1487679"
  },
  {
    "text": "on the left hand side this is a bit higher up in the file and this here comes comes a bit later yeah",
    "start": "1487679",
    "end": "1494640"
  },
  {
    "text": "you can see that the same parameters are first documented for the command that",
    "start": "1494640",
    "end": "1499679"
  },
  {
    "text": "binding or how you call it i don't know and then again for just printing out the help so to inform or or help the user to",
    "start": "1499679",
    "end": "1508080"
  },
  {
    "text": "know what to execute yeah can we do better i say yes",
    "start": "1508080",
    "end": "1514720"
  },
  {
    "text": "um and the way how you can do this in nuke is just creating a field and put an attribute in front of it that's all",
    "start": "1514720",
    "end": "1522320"
  },
  {
    "text": "um and from that then you can just call nuke dash parameter i'm not sure i may",
    "start": "1522320",
    "end": "1528799"
  },
  {
    "text": "have missed the opportunity you can also put the description into the constructor",
    "start": "1528799",
    "end": "1534080"
  },
  {
    "text": "argument maybe there's another slide but i just in a moment i forgot but you have this very concise",
    "start": "1534080",
    "end": "1539919"
  },
  {
    "text": "definition of an input parameter yeah and passing parameters is just nuke dash",
    "start": "1539919",
    "end": "1545600"
  },
  {
    "text": "parameter value yeah that's it you can also provide them through environment variables and also to through a separate",
    "start": "1545600",
    "end": "1552720"
  },
  {
    "text": "configuration file um but that's just a site",
    "start": "1552720",
    "end": "1557760"
  },
  {
    "text": "what are the supported types for those parameters everything that you expect",
    "start": "1557760",
    "end": "1563360"
  },
  {
    "text": "strings numbers all kinds integers enumerations booleans",
    "start": "1563360",
    "end": "1568799"
  },
  {
    "text": "arrays of the four mentioned and you can also provide custom types via the type converter this is the way how c sharp",
    "start": "1568799",
    "end": "1575679"
  },
  {
    "text": "knows how to convert strings to your custom type and this is how it looks",
    "start": "1575679",
    "end": "1580960"
  },
  {
    "text": "so this is the output from nuke dash help here and you can see",
    "start": "1580960",
    "end": "1586320"
  },
  {
    "text": "first it mentions the targets and then our parameters up until here configuration is a custom",
    "start": "1586320",
    "end": "1592799"
  },
  {
    "text": "parameter everything that follows after are parameters that are already defined out of the box",
    "start": "1592799",
    "end": "1598720"
  },
  {
    "text": "and what you can also see is here shell completion yeah so once a build is",
    "start": "1598720",
    "end": "1605919"
  },
  {
    "text": "in place you can just go there and you know how target is called and it's very long in in length as a lot of characters",
    "start": "1605919",
    "end": "1613120"
  },
  {
    "text": "just tap through it and it will just complete even for verbosity which you know",
    "start": "1613120",
    "end": "1618559"
  },
  {
    "text": "has a defined set of arguments that you can pass it knows verbosity has quite a",
    "start": "1618559",
    "end": "1623840"
  },
  {
    "text": "bose minimal normal whatever yeah",
    "start": "1623840",
    "end": "1629120"
  },
  {
    "text": "okay remember target requirements that we had earlier",
    "start": "1629120",
    "end": "1633919"
  },
  {
    "text": "this is another example of that we have this test and pack target which takes ages",
    "start": "1635440",
    "end": "1640960"
  },
  {
    "text": "again we have a parameter to input the api key which is then used from the publish target to actually push those nougat",
    "start": "1640960",
    "end": "1647760"
  },
  {
    "text": "packages for instance yeah now what happens if you don't supply the api key",
    "start": "1647760",
    "end": "1653200"
  },
  {
    "text": "test and pack executed 10 hours let's say okay that's a bit low that's a lot maybe but what we want to",
    "start": "1653200",
    "end": "1660880"
  },
  {
    "text": "have is a fail fast fail behavior and that is where we can use one of those requires calls yeah we",
    "start": "1660880",
    "end": "1668320"
  },
  {
    "text": "can then say publish requires the api key what happens then is right after execution it just says publish requires",
    "start": "1668320",
    "end": "1675760"
  },
  {
    "text": "that i'm not going to do anything if you don't give me that yeah and you can see",
    "start": "1675760",
    "end": "1681600"
  },
  {
    "text": "less than a second that's a lot of time that you've saved um",
    "start": "1681600",
    "end": "1686720"
  },
  {
    "text": "a next topic is absolute and relative paths and new kind of",
    "start": "1686720",
    "end": "1693519"
  },
  {
    "text": "promotes the idea of absolute paths and recommends you to use absolute paths like everywhere you might say",
    "start": "1693600",
    "end": "1700480"
  },
  {
    "text": "see serious funnily enough jess humble wrote in this very nice book",
    "start": "1700480",
    "end": "1708720"
  },
  {
    "text": "the most common mistake in builds in a build is to use absolute paths by default",
    "start": "1708720",
    "end": "1714080"
  },
  {
    "text": "so why why should why do i say use absolute paths well let's look at an absolute path",
    "start": "1714080",
    "end": "1721200"
  },
  {
    "text": "what's the problem with that where's the problem can you kind of shrink it down to some place",
    "start": "1721200",
    "end": "1729039"
  },
  {
    "text": "right that's the that's a difficult part not everyone is caught mad",
    "start": "1731200",
    "end": "1736799"
  },
  {
    "text": "yeah and that's good um but the really",
    "start": "1736840",
    "end": "1741919"
  },
  {
    "text": "the the difficult part the difficult part is up until here",
    "start": "1741919",
    "end": "1747840"
  },
  {
    "text": "because from here it's really just the git repository yeah in my case the new git repository",
    "start": "1747840",
    "end": "1754000"
  },
  {
    "text": "so nuke has a property that gives you exactly that and that is called you build root",
    "start": "1754000",
    "end": "1760240"
  },
  {
    "text": "directory you can just use it that's just important because it's the base type and then",
    "start": "1760240",
    "end": "1765520"
  },
  {
    "text": "we can write this whole thing just like that root directory slash or divided by",
    "start": "1765520",
    "end": "1772159"
  },
  {
    "text": "dockerfile what's the result of that i don't know i don't know but uh",
    "start": "1772159",
    "end": "1778159"
  },
  {
    "text": "what i did was just providing in implicit or or overloading no not",
    "start": "1778159",
    "end": "1783520"
  },
  {
    "text": "overloading defining the division operator for this particular type and that just works great yeah",
    "start": "1783520",
    "end": "1791279"
  },
  {
    "text": "it has this abstraction of operating system paths right built into because on depending on",
    "start": "1791279",
    "end": "1798640"
  },
  {
    "text": "linux or windows it will just issue a backslash or forward slash",
    "start": "1798640",
    "end": "1804080"
  },
  {
    "text": "yeah have you heard of path combined yeah i did but i will show you two",
    "start": "1804080",
    "end": "1810320"
  },
  {
    "text": "examples where path combined is inferior",
    "start": "1810320",
    "end": "1816480"
  },
  {
    "text": "first the writing experience and i will show you just that to provide a",
    "start": "1816480",
    "end": "1821679"
  },
  {
    "text": "packages directory you can just you know slash slash and it will just complete that not sure if you see that but i'm",
    "start": "1821679",
    "end": "1828080"
  },
  {
    "text": "not building up a new string or something i'm just hitting slash and then it provides me with the",
    "start": "1828080",
    "end": "1833760"
  },
  {
    "text": "next string and that's how fast you can type that and another thing",
    "start": "1833760",
    "end": "1839440"
  },
  {
    "text": "is we can actually refactor that yeah once we have two paths let's play this",
    "start": "1839440",
    "end": "1845520"
  },
  {
    "text": "again once we have two paths which are similar which might happen if you do new work you know you just",
    "start": "1845520",
    "end": "1851840"
  },
  {
    "text": "want to get work done you provide the same path two times but in this case you can see that it will ask okay you have",
    "start": "1851840",
    "end": "1858399"
  },
  {
    "text": "two occurrences of that yeah okay yeah of course introduce the variable for both occurrences",
    "start": "1858399",
    "end": "1865039"
  },
  {
    "text": "it also has globbing integrated which is based on the glob package by kevin thompson",
    "start": "1865039",
    "end": "1871360"
  },
  {
    "text": "really nice so with a call like this you can accumulate all the markdown files for instance or",
    "start": "1871360",
    "end": "1877519"
  },
  {
    "text": "any other files doesn't matter but this is a great way of dealing with that as well",
    "start": "1877519",
    "end": "1882960"
  },
  {
    "text": "then what if i need relative paths you know sometimes i really need that in a package or something i don't know",
    "start": "1882960",
    "end": "1889760"
  },
  {
    "text": "those are some ways how you can generate relative paths the first will keep in mind the",
    "start": "1889760",
    "end": "1896159"
  },
  {
    "text": "local path separator on your local system but if you need windows or unix",
    "start": "1896159",
    "end": "1901200"
  },
  {
    "text": "relative paths specifically then that also works",
    "start": "1901200",
    "end": "1906640"
  },
  {
    "text": "um another big topic two invocations so",
    "start": "1906640",
    "end": "1912000"
  },
  {
    "text": "like i said we're dealing also with tools like docker etc yeah and nuke out of the box supports a lot of those",
    "start": "1912000",
    "end": "1918960"
  },
  {
    "text": "third-party tools those are all that i can find that are currently supported",
    "start": "1918960",
    "end": "1924799"
  },
  {
    "text": "and let's take git as an example forget there's this class called the git tasks and then",
    "start": "1924799",
    "end": "1931440"
  },
  {
    "text": "there's a method git and that method git we can use something like that",
    "start": "1931440",
    "end": "1937519"
  },
  {
    "text": "in a string interpolation way yeah where we call git a couple of times and this is just part of my custom",
    "start": "1937519",
    "end": "1944720"
  },
  {
    "text": "git flow that i made but this works really nice right because we can use string interpolation and",
    "start": "1944720",
    "end": "1952320"
  },
  {
    "text": "it reads well yeah and we can provide those values in any form we like as",
    "start": "1952320",
    "end": "1957840"
  },
  {
    "text": "constants or as generated c sharp properties whatever",
    "start": "1957840",
    "end": "1963840"
  },
  {
    "text": "what this invocation gives us is autores resolve tools so",
    "start": "1964240",
    "end": "1969679"
  },
  {
    "text": "it will automatically find whatever tool you're using let me go back uh really quick like for instance n swag comes",
    "start": "1969679",
    "end": "1976320"
  },
  {
    "text": "from a nougat package you just need to reference that but otherwise this invocation will actually find where the",
    "start": "1976320",
    "end": "1981600"
  },
  {
    "text": "executable is um you can pass arguments working directory environment variables timeout",
    "start": "1981600",
    "end": "1987679"
  },
  {
    "text": "and it will also and that's a really nice thing output the lock in the the invocation",
    "start": "1987679",
    "end": "1993600"
  },
  {
    "text": "into the lock because what you can do then and that's why i said absolute paths are a great",
    "start": "1993600",
    "end": "1999440"
  },
  {
    "text": "thing um it will always use absolute paths and you don't need to go to a specific",
    "start": "1999440",
    "end": "2005200"
  },
  {
    "text": "working directory to make that execution work that's a big plus there",
    "start": "2005200",
    "end": "2011679"
  },
  {
    "text": "and then for those tools that are not supported you can also just resolve them through that attribute for instance if docker wasn't there you could resolve it",
    "start": "2014480",
    "end": "2021679"
  },
  {
    "text": "from the path executable yeah because that's basically how also also how it works in the shell",
    "start": "2021679",
    "end": "2028159"
  },
  {
    "text": "um or you can say i i'm shipping this particular what's my point in [Music]",
    "start": "2028159",
    "end": "2034799"
  },
  {
    "text": "okay my pointer does this still work yeah",
    "start": "2034799",
    "end": "2042720"
  },
  {
    "text": "okay pointer's gone i can't point anymore",
    "start": "2042720",
    "end": "2047240"
  },
  {
    "text": "anyway or there's a local tool that you want to resolve it from or a nougat package yeah",
    "start": "2051919",
    "end": "2057839"
  },
  {
    "text": "but now you say okay what's the big deal then about the supported tools that you've shown yeah",
    "start": "2057839",
    "end": "2063919"
  },
  {
    "text": "if it's really just that smooth i mean it doesn't do a lot it's just string interpolation um",
    "start": "2063919",
    "end": "2070240"
  },
  {
    "text": "let me introduce you to this example if you would see that in any of your scripts or yaml pipeline or whatever",
    "start": "2070240",
    "end": "2077200"
  },
  {
    "text": "who knows what slash nr means anyone for ms build if this was some",
    "start": "2077200",
    "end": "2083839"
  },
  {
    "text": "somewhere do you know what the m is for parallelization yeah",
    "start": "2083839",
    "end": "2091839"
  },
  {
    "text": "and r is for node reuse but it should just illustrate this issue",
    "start": "2091839",
    "end": "2097200"
  },
  {
    "text": "that you come somewhere and you don't know what it actually means m is for for cpu count",
    "start": "2097200",
    "end": "2104560"
  },
  {
    "text": "so let me show you the fluent api and it won't be illustrating the same",
    "start": "2104560",
    "end": "2110079"
  },
  {
    "text": "example but i think it still gets the point across so if you want to call",
    "start": "2110079",
    "end": "2115599"
  },
  {
    "text": "something like dot net builds we can do it like this okay that's the",
    "start": "2115599",
    "end": "2121838"
  },
  {
    "text": "also not okay",
    "start": "2122480",
    "end": "2127680"
  },
  {
    "text": "we want to call it.netbuild and you can see this fluent api provides one argument in",
    "start": "2128640",
    "end": "2136960"
  },
  {
    "text": "a single line for instance we want to build the solution we want to set the configuration to",
    "start": "2136960",
    "end": "2143520"
  },
  {
    "text": "another property that we're having like configuration could be a parameter in this case again we want to enable the no",
    "start": "2143520",
    "end": "2149599"
  },
  {
    "text": "restore flag and we want to set the verbosity to something and you see uh i don't have a",
    "start": "2149599",
    "end": "2155119"
  },
  {
    "text": "gif right now but you see this is actually using an enumeration so you know what values you can pass",
    "start": "2155119",
    "end": "2161520"
  },
  {
    "text": "and for node reuse the example that i had earlier you you would actually see enable node node reuse",
    "start": "2161520",
    "end": "2168720"
  },
  {
    "text": "and the cool thing about this is also with an ide you can see all the documentation",
    "start": "2168720",
    "end": "2174640"
  },
  {
    "text": "yeah this is the exact same documentation as from the.net cri and again.net cli is just one",
    "start": "2174640",
    "end": "2182160"
  },
  {
    "text": "example docker has the same way of being documented right inside the ide and you",
    "start": "2182160",
    "end": "2187520"
  },
  {
    "text": "can see which flag which arguments or switches you can pass with which property",
    "start": "2187520",
    "end": "2195200"
  },
  {
    "text": "now i want to show you another example where this really shines",
    "start": "2195200",
    "end": "2200960"
  },
  {
    "text": "for instance with fluent conditionals in this case we're just saying that this",
    "start": "2200960",
    "end": "2208000"
  },
  {
    "text": "part is basically always this is done always but this second part here is only done when is server build is true so",
    "start": "2208000",
    "end": "2215119"
  },
  {
    "text": "only when it's executed on your on your build agent and then i want to really enable this",
    "start": "2215119",
    "end": "2222160"
  },
  {
    "text": "deterministic and continuous integration flag in the string interpolation way you",
    "start": "2222160",
    "end": "2228000"
  },
  {
    "text": "would need to write if statements yeah and even a lot if this is very huge this",
    "start": "2228000",
    "end": "2233760"
  },
  {
    "text": "way this just reads fluent yeah that's the idea of having this fluent api another example",
    "start": "2233760",
    "end": "2241440"
  },
  {
    "text": "imagine you want to where this fluent api can come in handy imagine you want to push a couple of",
    "start": "2241440",
    "end": "2247440"
  },
  {
    "text": "packages and everyone who has pushed nuget packages before knows",
    "start": "2247440",
    "end": "2252880"
  },
  {
    "text": "eventually there's a connection issue yeah and one package doesn't make it through",
    "start": "2252880",
    "end": "2259599"
  },
  {
    "text": "and then you need to update your build definition because you need to skip all the rest uh to not fail on the first",
    "start": "2259599",
    "end": "2266400"
  },
  {
    "text": "that was already pushed so let me show you how you can do this in nuke first of all",
    "start": "2266400",
    "end": "2272560"
  },
  {
    "text": "at first this is the globbing mechanism again and then up until here we just have the same arguments to set",
    "start": "2272560",
    "end": "2280079"
  },
  {
    "text": "the api key etc and then we're creating a combination",
    "start": "2280079",
    "end": "2285839"
  },
  {
    "text": "that won't work i think but thanks um and then we're creating a combination",
    "start": "2285839",
    "end": "2291599"
  },
  {
    "text": "with all the various packages and that will basically give us the amount of invocations in the number of packages so",
    "start": "2291599",
    "end": "2298720"
  },
  {
    "text": "if there are five packages present up here then this will make five invocations",
    "start": "2298720",
    "end": "2305760"
  },
  {
    "text": "and even more so it will do that in parallel",
    "start": "2305760",
    "end": "2310800"
  },
  {
    "text": "and you can also define even if one of those fails continue with the rest of those packages yeah so",
    "start": "2310800",
    "end": "2317520"
  },
  {
    "text": "you don't need to change anything when some phone something goes wrong",
    "start": "2317520",
    "end": "2322400"
  },
  {
    "text": "this is another thing that that is possible just because of having this fluent api this comes through the resharper or",
    "start": "2322880",
    "end": "2329839"
  },
  {
    "text": "writer extension but it can say hey you're putting a clear text argument here for something that is supposed to",
    "start": "2329839",
    "end": "2336400"
  },
  {
    "text": "be a secret don't do that yeah just to show an error and it makes this more",
    "start": "2336400",
    "end": "2341680"
  },
  {
    "text": "visible yet that you don't forget to actually replace that because i get it while you're authoring something or you",
    "start": "2341680",
    "end": "2347599"
  },
  {
    "text": "want to get stuff done maybe you just copy the secret for a moment but don't commit it eventually right",
    "start": "2347599",
    "end": "2354800"
  },
  {
    "text": "um this is another example i want to i want to show you this is my favorite",
    "start": "2354800",
    "end": "2360240"
  },
  {
    "text": "and there's one thing that i that i couldn't talk about because it also takes about",
    "start": "2360240",
    "end": "2366880"
  },
  {
    "text": "five minutes but we have this solution uh field here which also gets automatically initialized",
    "start": "2366880",
    "end": "2374000"
  },
  {
    "text": "and even more so um it's not just initialized it also uses",
    "start": "2374000",
    "end": "2379440"
  },
  {
    "text": "source generator to get you access to the actual projects that depend to that",
    "start": "2379440",
    "end": "2384480"
  },
  {
    "text": "solution so what does that mean look at this we have this solution",
    "start": "2384480",
    "end": "2390160"
  },
  {
    "text": "and it knows i have a project which is called nuke global tool this is a generated property yeah it's not part of",
    "start": "2390160",
    "end": "2397119"
  },
  {
    "text": "the type that we define here manually it's just generated through a source",
    "start": "2397119",
    "end": "2402720"
  },
  {
    "text": "generator and then in the second line because this has ms built",
    "start": "2402720",
    "end": "2407920"
  },
  {
    "text": "integrated as a package you can also use it to get information from those",
    "start": "2407920",
    "end": "2413040"
  },
  {
    "text": "projects like for instance target frameworks and this could be any amount of target frameworks like net core app",
    "start": "2413040",
    "end": "2419839"
  },
  {
    "text": "3.1 net 6.0 yeah this is this is the pain that",
    "start": "2419839",
    "end": "2425040"
  },
  {
    "text": "library authors have to work with right",
    "start": "2425040",
    "end": "2430480"
  },
  {
    "text": "and then we can call net publish for all those different combinations yeah we created our configurations up here",
    "start": "2431599",
    "end": "2438560"
  },
  {
    "text": "that's really difficult with that pointer and then combine it with all the configurations and set the project and",
    "start": "2438560",
    "end": "2444480"
  },
  {
    "text": "the different frameworks that we have it's a really nice and fluent way to do that",
    "start": "2444480",
    "end": "2451599"
  },
  {
    "text": "next the part that i've been waiting for and that's yeah so i i asked before",
    "start": "2451839",
    "end": "2458640"
  },
  {
    "text": "a couple of couple of people that i know that are using it which feature do you value the most and this is this is what",
    "start": "2458640",
    "end": "2465200"
  },
  {
    "text": "they say cicd integration to start small if you execute something where you build",
    "start": "2465200",
    "end": "2472880"
  },
  {
    "text": "uh your build automation that you wrote a nuke in in the ci that would roughly look like this yeah",
    "start": "2472880",
    "end": "2479200"
  },
  {
    "text": "this is github actions and you can see logo of course but all the the targets",
    "start": "2479200",
    "end": "2484319"
  },
  {
    "text": "are collapsed by default so you have a clear overview what happened and you can",
    "start": "2484319",
    "end": "2489760"
  },
  {
    "text": "expand them of course and dive deeper and of course also this the summary the",
    "start": "2489760",
    "end": "2495040"
  },
  {
    "text": "summary is by the way also extendable so you can provide custom metadata that you",
    "start": "2495040",
    "end": "2500079"
  },
  {
    "text": "accumulated during executing that step for instance i can say uh pack created five packages or",
    "start": "2500079",
    "end": "2507440"
  },
  {
    "text": "compiled was compiled with that particular version",
    "start": "2507440",
    "end": "2511920"
  },
  {
    "text": "but now the interesting part comes and that is the generation attributes",
    "start": "2512480",
    "end": "2517760"
  },
  {
    "text": "and those exist for the action at the moment at least github actions team city azure pipelines and appvayer",
    "start": "2517760",
    "end": "2525200"
  },
  {
    "text": "and you see our build is here the rest is just truncated but",
    "start": "2525200",
    "end": "2530240"
  },
  {
    "text": "what we're doing is just putting an attribute onto our build class and that attribute comes with a couple",
    "start": "2530240",
    "end": "2536880"
  },
  {
    "text": "of information for instance for github actions you need to name your",
    "start": "2536880",
    "end": "2542160"
  },
  {
    "text": "workflow so it's the continuous dot yaml that that is what it would translate to",
    "start": "2542160",
    "end": "2549119"
  },
  {
    "text": "we define on which image it should execute we define which target should be executed and again here",
    "start": "2549119",
    "end": "2556800"
  },
  {
    "text": "you can really use the name of operator so when you rename that it will also show there or propagate",
    "start": "2556800",
    "end": "2562960"
  },
  {
    "text": "there and we can also say okay this should uh this should happen on push and",
    "start": "2562960",
    "end": "2568160"
  },
  {
    "text": "on workflow dispatch this is workflow dispatch is the one that you can trigger manually",
    "start": "2568160",
    "end": "2573599"
  },
  {
    "text": "and when we do this boom a generated yammer file",
    "start": "2573599",
    "end": "2579839"
  },
  {
    "text": "that has no indentation errors yeah how great is that um",
    "start": "2580880",
    "end": "2586720"
  },
  {
    "text": "it also comes with a couple of other features like for instance out of the box it has it has a caching step as well",
    "start": "2586720",
    "end": "2593920"
  },
  {
    "text": "to cache your nougat packages for instance yeah which can fast up the build quite",
    "start": "2593920",
    "end": "2599440"
  },
  {
    "text": "quite quite nicely another thing we can do for a packed target let's assume this is creating a",
    "start": "2599440",
    "end": "2605760"
  },
  {
    "text": "couple of packages like we've seen earlier we can say okay this is actually",
    "start": "2605760",
    "end": "2610960"
  },
  {
    "text": "producing nougat packages that are located in the package directory",
    "start": "2610960",
    "end": "2616400"
  },
  {
    "text": "yeah this is like some more information that you give to your target definition",
    "start": "2616400",
    "end": "2622560"
  },
  {
    "text": "and then what happens is once the yaml is regenerated it will just show up in in github actions in this case yeah",
    "start": "2622560",
    "end": "2629599"
  },
  {
    "text": "ready to download all the packages 29 megabyte right um",
    "start": "2629599",
    "end": "2636240"
  },
  {
    "text": "this was the first thing where this can come in really handy another thing i want to show you in this",
    "start": "2636240",
    "end": "2642799"
  },
  {
    "text": "and this thing right now only works on azure pipelines and teamcity to be fair but this is a",
    "start": "2645359",
    "end": "2652400"
  },
  {
    "text": "general way of executing tests let's say yeah we have uh configuration blah blah",
    "start": "2652400",
    "end": "2657920"
  },
  {
    "text": "blah and we have test projects um test projects those are all our test",
    "start": "2657920",
    "end": "2664400"
  },
  {
    "text": "projects and again we're making this this combination of different",
    "start": "2664400",
    "end": "2670480"
  },
  {
    "text": "invocations so it will execute the amount the number whatever number that is of test projects that we have",
    "start": "2670480",
    "end": "2678400"
  },
  {
    "text": "i want to show you three changes that allow us to execute those tests in parallel",
    "start": "2678400",
    "end": "2685280"
  },
  {
    "text": "yeah the first is you'll find in how many parts you want to divide that like in this case five let's say test",
    "start": "2685280",
    "end": "2691839"
  },
  {
    "text": "should be divided into five parts then from the test projects that we already have we just get the chunk for",
    "start": "2691839",
    "end": "2699599"
  },
  {
    "text": "the current partition that is executing so uh",
    "start": "2699599",
    "end": "2705119"
  },
  {
    "text": "like i said this will be executed five times then and each five times it will be a different",
    "start": "2705119",
    "end": "2710720"
  },
  {
    "text": "partition so for the current partition that we're having we just get the current one current",
    "start": "2710720",
    "end": "2716400"
  },
  {
    "text": "chunk from all the test projects and we just combine it with the relevant projects that's it",
    "start": "2716400",
    "end": "2723599"
  },
  {
    "text": "i want to show you how this roughly looks when you look into the web interface with team city in this case",
    "start": "2723599",
    "end": "2730480"
  },
  {
    "text": "and you see this is an artificial solution that i was working with i just created a solution with a couple of um",
    "start": "2730480",
    "end": "2738800"
  },
  {
    "text": "projects different kinds unit tests uh system tests integration tests etc and here you can see at first so 17 000",
    "start": "2738800",
    "end": "2747760"
  },
  {
    "text": "tests at first it was running this is the number",
    "start": "2747760",
    "end": "2752880"
  },
  {
    "text": "in three partitions and took 30 minutes right",
    "start": "2752880",
    "end": "2758160"
  },
  {
    "text": "once i increased that number and it's really just that one number and that one line it went down to five minutes and that",
    "start": "2758160",
    "end": "2764960"
  },
  {
    "text": "was a cold start if i remember correctly but since the agent still had to boot",
    "start": "2764960",
    "end": "2770160"
  },
  {
    "text": "but with a with warmed up agents it was just down to three minutes yeah it's",
    "start": "2770160",
    "end": "2775440"
  },
  {
    "text": "just a matter of having the agents of course also but otherwise just changing that number",
    "start": "2775440",
    "end": "2782480"
  },
  {
    "text": "so that's it as far as i'm concerned about integration",
    "start": "2782800",
    "end": "2788800"
  },
  {
    "text": "yeah the next thing i want to talk about very briefly",
    "start": "2788800",
    "end": "2793920"
  },
  {
    "text": "is build sharing now with with yamu",
    "start": "2793920",
    "end": "2800240"
  },
  {
    "text": "what you quite often have is that you either copy something or",
    "start": "2800240",
    "end": "2805599"
  },
  {
    "text": "i know there's a way to to link some specifications etc but i think people are copying quite a lot",
    "start": "2805599",
    "end": "2813119"
  },
  {
    "text": "um so the question is how do we share something that we once implemented to",
    "start": "2813119",
    "end": "2818400"
  },
  {
    "text": "the next project and the next project and how do you how how are we making that scale",
    "start": "2818400",
    "end": "2824160"
  },
  {
    "text": "because it's not just you know this this sharing approach should be easy",
    "start": "2824160",
    "end": "2829839"
  },
  {
    "text": "the first approach i want to show you are build components so build components are based on the",
    "start": "2829839",
    "end": "2836880"
  },
  {
    "text": "idea of default interface implementations who doesn't know what default interface",
    "start": "2836880",
    "end": "2842880"
  },
  {
    "text": "implementations are or who knows it and wants to explain it yeah",
    "start": "2842880",
    "end": "2848400"
  },
  {
    "text": "yeah basically on the interface",
    "start": "2848400",
    "end": "2853119"
  },
  {
    "text": "yeah so usually interfaces are really just for the declaration or the definition",
    "start": "2854640",
    "end": "2860319"
  },
  {
    "text": "and with default interface implementations you can actually provide an implementation for that yeah",
    "start": "2860319",
    "end": "2865760"
  },
  {
    "text": "and this is what build components are about so some of those targets that we've seen up",
    "start": "2865760",
    "end": "2871200"
  },
  {
    "text": "until now we could just put those into separate interfaces which are then",
    "start": "2871200",
    "end": "2876400"
  },
  {
    "text": "called components and those components are inheriting from",
    "start": "2876400",
    "end": "2882000"
  },
  {
    "text": "one base interface just to have some niceties like like the root directory also for instance but then our build",
    "start": "2882000",
    "end": "2889520"
  },
  {
    "text": "really just inherits from all those components so in practice and code it looks roughly",
    "start": "2889520",
    "end": "2895680"
  },
  {
    "text": "like this we can say our build i can compile i can test i pack yeah",
    "start": "2895680",
    "end": "2902400"
  },
  {
    "text": "or i compile i test i pack and all those targets are automatically inherited",
    "start": "2902400",
    "end": "2908400"
  },
  {
    "text": "no additional word what work whatsoever you can still extend that like for",
    "start": "2908400",
    "end": "2915200"
  },
  {
    "text": "instance you could still sneak between compile and test for instance you can still do that that is actually",
    "start": "2915200",
    "end": "2922559"
  },
  {
    "text": "uh the reason why there are those different forms of creating dependencies",
    "start": "2922559",
    "end": "2927839"
  },
  {
    "text": "this depends on or is dependent for or after and before or triggers and triggered by",
    "start": "2927839",
    "end": "2934480"
  },
  {
    "text": "this is the reason because then you don't do it in a component but you really want to do it inside",
    "start": "2934480",
    "end": "2940880"
  },
  {
    "text": "your actual build implementation one example for that where",
    "start": "2940880",
    "end": "2946000"
  },
  {
    "text": "component would be nice is for instance if you have",
    "start": "2946000",
    "end": "2951200"
  },
  {
    "text": "if you work with azure you want to update functions etc then in another project you're updating your",
    "start": "2951440",
    "end": "2958880"
  },
  {
    "text": "web app something here a component could be really",
    "start": "2958880",
    "end": "2964559"
  },
  {
    "text": "helpful for instance to log into azure yeah you have a component that does the login to",
    "start": "2964559",
    "end": "2972400"
  },
  {
    "text": "allow you to work deploy things to azure and that component could be shared across all",
    "start": "2972400",
    "end": "2980400"
  },
  {
    "text": "just a basic example and the second idea for sharing",
    "start": "2980400",
    "end": "2985920"
  },
  {
    "text": "builds or build definitions are global builds and global builds they",
    "start": "2985920",
    "end": "2991440"
  },
  {
    "text": "they are based on the idea of global tools just like nuke actually and what you do there is basically just",
    "start": "2991440",
    "end": "2999040"
  },
  {
    "text": "shipping that build project just like we've seen before you ship that as a nougat package you can install",
    "start": "2999040",
    "end": "3005280"
  },
  {
    "text": "that for your.net tool um okay this one i forgot it also ships with all the nougat tools",
    "start": "3005280",
    "end": "3012160"
  },
  {
    "text": "that you use for instance what is a good example report generator",
    "start": "3012160",
    "end": "3017920"
  },
  {
    "text": "report generator creates based on your test results creates a human readable",
    "start": "3017920",
    "end": "3023359"
  },
  {
    "text": "report just to follow along and see what happened and this tool will then be automatically",
    "start": "3023359",
    "end": "3030079"
  },
  {
    "text": "included you can see it here on the right hand side i actually have a lot of more tools",
    "start": "3030079",
    "end": "3035119"
  },
  {
    "text": "this is a this is a functionality specifically specifically provided from nuke usually",
    "start": "3035119",
    "end": "3040480"
  },
  {
    "text": "that won't happen but it's a nice thing because then you can just start this build",
    "start": "3040480",
    "end": "3046480"
  },
  {
    "text": "with whatever tool command name you provided tool command name this is a property",
    "start": "3046480",
    "end": "3051520"
  },
  {
    "text": "that you set in the cs project file of your build project yeah something's",
    "start": "3051520",
    "end": "3057760"
  },
  {
    "text": "quite difficult to explain in shorter words",
    "start": "3057760",
    "end": "3062880"
  },
  {
    "text": "anyway in this global builds they are",
    "start": "3062880",
    "end": "3069838"
  },
  {
    "text": "probably impossible to extend but once you have a you have conventions",
    "start": "3070480",
    "end": "3076079"
  },
  {
    "text": "in your at your at your company and all the different projects they",
    "start": "3076079",
    "end": "3081520"
  },
  {
    "text": "should work the same then you can just streamline your whole build with something like that",
    "start": "3081520",
    "end": "3088559"
  },
  {
    "text": "okay this was it i hope",
    "start": "3089599",
    "end": "3094960"
  },
  {
    "text": "what you took from here goes a bit into that direction like this could also be something else",
    "start": "3094960",
    "end": "3101520"
  },
  {
    "text": "you know it's not just yaml it could also be something else that you use for local build automation",
    "start": "3101520",
    "end": "3108079"
  },
  {
    "text": "and some other problems of course because then it's not indenting and committing but then it's",
    "start": "3108079",
    "end": "3113200"
  },
  {
    "text": "unknown unknowns and stuff like that but instead having nuke",
    "start": "3113200",
    "end": "3119200"
  },
  {
    "text": "and having this ability to use c-sharp with great tooling with all the different nougat packages",
    "start": "3119200",
    "end": "3125920"
  },
  {
    "text": "just make it work in an easy way easy to extend etc and",
    "start": "3125920",
    "end": "3131040"
  },
  {
    "text": "then actually have this you know this nice time here um okay with that i want to thank you",
    "start": "3131040",
    "end": "3138720"
  },
  {
    "text": "very much for for coming here no i'm not done yet just one second um",
    "start": "3138720",
    "end": "3145280"
  },
  {
    "text": "on the right hand side the qr code that is for uh for the new website that is not yet",
    "start": "3145280",
    "end": "3151280"
  },
  {
    "text": "released so if you're interested in reading further just go there",
    "start": "3151280",
    "end": "3156960"
  },
  {
    "text": "sometime later will be deployed to another place the actual the actual website is called nuke dot build so",
    "start": "3156960",
    "end": "3164079"
  },
  {
    "text": "maybe don't don't forget that but yeah with that thank you for for coming here and i wish you a good rest of the",
    "start": "3164079",
    "end": "3170400"
  },
  {
    "text": "conference [Applause]",
    "start": "3170400",
    "end": "3178940"
  }
]