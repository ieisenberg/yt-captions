[
  {
    "text": "yeah yeah all good great you know what",
    "start": "5630",
    "end": "14960"
  },
  {
    "text": "my roommates going out of town tomorrow so if we want to come back here after Ehrlich's party oh okay yeah sure that",
    "start": "14960",
    "end": "23420"
  },
  {
    "text": "sounds good to me all right it's a date see you then",
    "start": "23420",
    "end": "28540"
  },
  {
    "text": "[Music]",
    "start": "33860",
    "end": "40449"
  },
  {
    "text": "Richard what's wrong nothing nothing literally it's all good",
    "start": "40449",
    "end": "47140"
  },
  {
    "text": "your roommates are right you really hate space no no no no I don't it's not hate hates a strong word",
    "start": "52280",
    "end": "57440"
  },
  {
    "text": "um truth be told I do have a slight preference for tabs but that's only because I'm anal and because I'd prefer",
    "start": "57440",
    "end": "65710"
  },
  {
    "text": "precision well not to pick a fight here",
    "start": "65710",
    "end": "71300"
  },
  {
    "text": "but if you really care about precision wouldn't you use spaces but whatever",
    "start": "71300",
    "end": "76369"
  },
  {
    "text": "once it goes through the compiler it's the same thing right yeah yeah technically yes I guess I just I just",
    "start": "76369",
    "end": "89810"
  },
  {
    "text": "don't understand why you anyone use spaces over tabs like if it's all the same why not just use tabs because it",
    "start": "89810",
    "end": "96260"
  },
  {
    "text": "could look different on other people's computers tabs create smaller file sizes all right I run a compression company",
    "start": "96260",
    "end": "101869"
  },
  {
    "text": "trust me I've devoted my life to minimalizing file sizes it's what I do I mean I do not get why anyone would use",
    "start": "101869",
    "end": "108340"
  },
  {
    "text": "spaces over tabs I mean why not just use vim over Emacs I do use vamo for Emacs",
    "start": "108340",
    "end": "114560"
  },
  {
    "text": "oh god help us okay you know what I just I don't think this is gonna work I'm so sorry I mean",
    "start": "114560",
    "end": "121790"
  },
  {
    "text": "like what we're gonna bring kids into this world with that over the head that's not really fair to them do you think kids we haven't even slept",
    "start": "121790",
    "end": "127729"
  },
  {
    "text": "together and guess what it's never gonna happen now because there is no way I'm gonna be with someone who uses spaces",
    "start": "127729",
    "end": "133549"
  },
  {
    "text": "over tabs Richard Wow okay goodbye one tab the",
    "start": "133549",
    "end": "145760"
  },
  {
    "text": "eight space [Music]",
    "start": "145760",
    "end": "149499"
  },
  {
    "text": "Oh oh my god I'm sure what happened I",
    "start": "151100",
    "end": "157520"
  },
  {
    "text": "just tried to go down the stairs eight steps at a time okay though",
    "start": "157520",
    "end": "162820"
  },
  {
    "text": "see you around Richard just making a point",
    "start": "162820",
    "end": "167800"
  },
  {
    "text": "all right that's the weird thing about using YouTube probably not a good idea",
    "start": "169960",
    "end": "177160"
  },
  {
    "text": "hello everybody my name is Beth and this is a talk what I've said thank you for waking up so early in the morning and",
    "start": "177220",
    "end": "183410"
  },
  {
    "text": "coming to watch this talk before I begin how many people here use JavaScript for",
    "start": "183410",
    "end": "189290"
  },
  {
    "text": "the day-to-day job please raise your hands all right a lot of you do that's good because this talk is for you how many of",
    "start": "189290",
    "end": "197360"
  },
  {
    "text": "you use a transpiler for a JavaScript nice how many of you use typescript as",
    "start": "197360",
    "end": "205700"
  },
  {
    "text": "your transpiler all right so good audience how many if you use spaces",
    "start": "205700",
    "end": "213880"
  },
  {
    "text": "that's a joke so I use Pacers by the way tabs books",
    "start": "213880",
    "end": "219860"
  },
  {
    "text": "joke the thing that I want to make very clear in this presentation that",
    "start": "219860",
    "end": "226300"
  },
  {
    "text": "typescript is just JavaScript I've been told that I need to stay here to be in the video and essentially providing a",
    "start": "226300",
    "end": "237080"
  },
  {
    "text": "better initial experience when you start using javascript because javascript is not a perfect language we all understand",
    "start": "237080",
    "end": "242420"
  },
  {
    "text": "that it has a few what stuff that makes you go like what instead of like having",
    "start": "242420",
    "end": "249140"
  },
  {
    "text": "nice cats and horses being in how many cats purring horses you get stuff like",
    "start": "249140",
    "end": "257019"
  },
  {
    "text": "javascript does has the concept of errors like I'm sure we've all seen something like this happen to us",
    "start": "258670",
    "end": "265160"
  },
  {
    "text": "we you call some function on something and it does give you a nice error that",
    "start": "265160",
    "end": "274330"
  },
  {
    "text": "this thing doesn't exist on that particular object and we get nice stack",
    "start": "274330",
    "end": "279710"
  },
  {
    "text": "traces as well so you know exactly where something went wrong however it does have pitfalls that in a number of cases",
    "start": "279710",
    "end": "286040"
  },
  {
    "text": "it won't actually give you an error and it's up to you to figure out where stuff",
    "start": "286040",
    "end": "291230"
  },
  {
    "text": "broke like LASIK um here's an example that a beginner Java developer might very well write on his own he'll be like",
    "start": "291230",
    "end": "297710"
  },
  {
    "text": "I can just do add to erase what do you think is going to be the outcome of this thing",
    "start": "297710",
    "end": "303160"
  },
  {
    "text": "not quite again not quite it's actually",
    "start": "303350",
    "end": "310130"
  },
  {
    "text": "going to be an empty string that makes sense like type error would have been a",
    "start": "310130",
    "end": "316520"
  },
  {
    "text": "better thing however we will actually get an empty",
    "start": "316520",
    "end": "322280"
  },
  {
    "text": "string you add an object to an array like this this is exact this is",
    "start": "322280",
    "end": "328220"
  },
  {
    "text": "definitely a type error this makes no sense you'd want an error in this place you'd want a stack trace at this place",
    "start": "328220",
    "end": "333470"
  },
  {
    "text": "but you won't get it and you'll have to debug your variables to see what they hold and what operation is where did the",
    "start": "333470",
    "end": "341210"
  },
  {
    "text": "operation go wrong what do you think is your outcome of this thing it's what",
    "start": "341210",
    "end": "347930"
  },
  {
    "text": "it's essentially going to do it's a JavaScript is essentially what it is going to convert both of these to a string and we saw that an array converts",
    "start": "347930",
    "end": "355160"
  },
  {
    "text": "to a string as an empty string and an object converts to a string is object object so that's why why you get that",
    "start": "355160",
    "end": "361250"
  },
  {
    "text": "thing there and of course like in arithmetic a plus B is equal to B plus a but this is JavaScript this is a",
    "start": "361250",
    "end": "368150"
  },
  {
    "text": "programming language the meaning of addition is driven by the operands and in this case the operands reverse so",
    "start": "368150",
    "end": "375380"
  },
  {
    "text": "this is essentially not the same as the previous one and it's a number which",
    "start": "375380",
    "end": "382310"
  },
  {
    "text": "again makes perfect sense you expect the type better but it's a number you add to objects",
    "start": "382310",
    "end": "388510"
  },
  {
    "text": "it gets even funnier because if I run this through my browser over here you",
    "start": "388510",
    "end": "397450"
  },
  {
    "text": "get testing which is what I show here as well we'll just noted the two objects",
    "start": "397450",
    "end": "403990"
  },
  {
    "text": "two strings and added them together but if you run it through ie you get not a number because that makes sense and of",
    "start": "403990",
    "end": "411940"
  },
  {
    "text": "course once you get not a number it's going to stay an order number small number + and number is not a number",
    "start": "411940",
    "end": "418990"
  },
  {
    "text": "number star number is not number numbered white not number it's not a",
    "start": "418990",
    "end": "425020"
  },
  {
    "text": "number it's all on a number JavaScript does have a few good things for example",
    "start": "425020",
    "end": "431170"
  },
  {
    "text": "the addition of numbers into strings makes perfect sense it just the departing a number to a string is a",
    "start": "431170",
    "end": "437169"
  },
  {
    "text": "something that we understand naturally and JavaScript supports that as well you can add negative numbers to strings",
    "start": "437169",
    "end": "442419"
  },
  {
    "text": "as well and they can catenate nicely as well and we use this to power our user interfaces to show numbers to users all",
    "start": "442419",
    "end": "449080"
  },
  {
    "text": "the time however anybody want to take a guess what the outcome of this",
    "start": "449080",
    "end": "454540"
  },
  {
    "text": "particular expression is like and and",
    "start": "454540",
    "end": "460479"
  },
  {
    "text": "we've seen like once it's not a number it's gonna stain on a number just it's and your user interface is still gonna",
    "start": "460479",
    "end": "466690"
  },
  {
    "text": "work you won't get a nice stack trace but the user might not understand what happened and like you show this to a new",
    "start": "466690",
    "end": "476560"
  },
  {
    "text": "JavaScript worker and they'll probably say that o we have linters we can link this I would like he passes to es saying",
    "start": "476560",
    "end": "484419"
  },
  {
    "text": "it will gladly give you an error but consider this case where we have an odd",
    "start": "484419",
    "end": "490510"
  },
  {
    "text": "function now the function on its own is actually perfectly fine there's nothing wrong with this function its how the",
    "start": "490510",
    "end": "496330"
  },
  {
    "text": "function is actually being used which is actually going to be an error and again you can say that I can link this with my",
    "start": "496330",
    "end": "504280"
  },
  {
    "text": "linter as well just do minor flow allowances and then I'll show you this example where the variables are coming",
    "start": "504280",
    "end": "512140"
  },
  {
    "text": "from elsewhere gonna be like where they're coming from it's coming from the server doesn't matter its external to your",
    "start": "512140",
    "end": "517849"
  },
  {
    "text": "system and we deal with external systems all the time and we want to write safe JavaScript code which doesn't magically",
    "start": "517849",
    "end": "525860"
  },
  {
    "text": "break in certain cases and that's essentially what that script is that script is a linter for JavaScript all",
    "start": "525860",
    "end": "536060"
  },
  {
    "text": "the examples that we saw previously like these things did not make sense to any",
    "start": "536060",
    "end": "541339"
  },
  {
    "text": "of us if you give them to the Tatra compiler it will actually be a compile time error now that script takes any",
    "start": "541339",
    "end": "548240"
  },
  {
    "text": "piece of JavaScript code and I will just go ahead and open that script playground",
    "start": "548240",
    "end": "557589"
  },
  {
    "text": "so this is on the type K plank dot org website on the left hand side you get to",
    "start": "557589",
    "end": "564500"
  },
  {
    "text": "write that script and on the right hand side it produces the generated JavaScript now the great thing about",
    "start": "564500",
    "end": "570800"
  },
  {
    "text": "typescript is that any valid JavaScript is valid typescript",
    "start": "570800",
    "end": "576920"
  },
  {
    "text": "however typescript adds additional syntax essentially for linting so here",
    "start": "576920",
    "end": "585589"
  },
  {
    "text": "I've gone ahead and said that foo is something that must always be a number so type careful not let me and assign something that is unsafe to it",
    "start": "585589",
    "end": "592930"
  },
  {
    "text": "everything in this code right now except for this particular annotation is just JavaScript and you can get fancy with",
    "start": "592930",
    "end": "599900"
  },
  {
    "text": "your annotations as well so I can say that it must be something which has a member bar which must be a number so",
    "start": "599900",
    "end": "606740"
  },
  {
    "text": "then you would actually have to like if you assign a number to it it's going to be an error it must be an object that",
    "start": "606740",
    "end": "613190"
  },
  {
    "text": "has the property bar of type number on it so something like this now that's",
    "start": "613190",
    "end": "619550"
  },
  {
    "text": "fine congratulations you are now all if you already need a skip in on a tight",
    "start": "619550",
    "end": "624740"
  },
  {
    "text": "script that's the only syntax that we'll use in this presentation let's take a",
    "start": "624740",
    "end": "632870"
  },
  {
    "text": "step back and really understand that shifts value proposition it offers two things first of all I've said this",
    "start": "632870",
    "end": "639260"
  },
  {
    "text": "previously and I'm going to say this again again throughout this presentation that it is just JavaScript with",
    "start": "639260",
    "end": "645820"
  },
  {
    "text": "additional syntax and that additional syntax so you'd a scripted a the JavaScript",
    "start": "645820",
    "end": "651480"
  },
  {
    "text": "next that additional syntax is primarily for linting that's always safer and like",
    "start": "651480",
    "end": "658019"
  },
  {
    "text": "so understanding these two value propositions a transpiler and Alinta your first question might probably be",
    "start": "658019",
    "end": "663420"
  },
  {
    "text": "that why is it why use a transpiler anyways a lot of you like like the hands that went up in the beginning of this",
    "start": "663420",
    "end": "668759"
  },
  {
    "text": "presentation of people that use javascript many of them used a transpiler anyway so i don't think i need to do much convincing there what a",
    "start": "668759",
    "end": "679649"
  },
  {
    "text": "transpiler essentially allows you to do is to use modern JavaScript syntax that might not be available in all the users",
    "start": "679649",
    "end": "685619"
  },
  {
    "text": "browsers in your codebase today and there are practical reasons for this it the new syntax does help prevent a few",
    "start": "685619",
    "end": "693119"
  },
  {
    "text": "bugs and does provide a nice syntax for common JavaScript patterns for example",
    "start": "693119",
    "end": "698399"
  },
  {
    "text": "for a functional language you seem to be writing the word function quite a lot and the next version of JavaScript",
    "start": "698399",
    "end": "704209"
  },
  {
    "text": "actually gives you error functions where it's a lot less terse and because you're",
    "start": "704209",
    "end": "711240"
  },
  {
    "text": "creating functions constantly it's a lot easier to do them now there are other",
    "start": "711240",
    "end": "716879"
  },
  {
    "text": "things that actually prevent bugs as well like this is a very common programming interview question presented over here we you give this code to a",
    "start": "716879",
    "end": "723959"
  },
  {
    "text": "developer and ask them what is going to print so what this code is doing is we're creating a bunch of functions that",
    "start": "723959",
    "end": "729870"
  },
  {
    "text": "are going to be stored in an array we loop thrice and then we create these",
    "start": "729870",
    "end": "734999"
  },
  {
    "text": "functions and these functions capture the variable I and then we go ahead and call these functions so that function is",
    "start": "734999",
    "end": "741300"
  },
  {
    "text": "going to execute for each iteration so for coming from C sharp or Java you",
    "start": "741300",
    "end": "747089"
  },
  {
    "text": "might actually expect that the outcome would be 0 1 2 because we created three functions with different variable eyes",
    "start": "747089",
    "end": "753929"
  },
  {
    "text": "however the VAR keyword in javascript is function scoped not block scope so the",
    "start": "753929",
    "end": "761189"
  },
  {
    "text": "variable I is actually shared between the three loop hydration then you get the same output for each of the function",
    "start": "761189",
    "end": "768089"
  },
  {
    "text": "which is 3 3 3 like this code this War I is exactly the same as if someone had",
    "start": "768089",
    "end": "773339"
  },
  {
    "text": "written this thing over here and now it's much more into you table to see why it's going to be 3 T 3 now you use the",
    "start": "773339",
    "end": "779549"
  },
  {
    "text": "let keyword which is new with the new version of JavaScript you don't actually get that Erika's let is blocked scoped",
    "start": "779549",
    "end": "785190"
  },
  {
    "text": "so that let I is actually going to be a new variable created for each function",
    "start": "785190",
    "end": "791880"
  },
  {
    "text": "hydration and then it's a lot more intuitive to what a c-sharp or a Java developer might actually expect they've",
    "start": "791880",
    "end": "798030"
  },
  {
    "text": "got to be and we use multiple languages in our day-to-day jobs so it's nice to",
    "start": "798030",
    "end": "803370"
  },
  {
    "text": "have consistency across your programming languages so you don't have that continuous mental shift that are this is",
    "start": "803370",
    "end": "809550"
  },
  {
    "text": "Java this is too different from my other language and like so the JavaScript URIs",
    "start": "809550",
    "end": "818070"
  },
  {
    "text": "might argue that they're going to get better JavaScript in the browsers",
    "start": "818070",
    "end": "824130"
  },
  {
    "text": "brothers anyways eventually and that's when I'm going to actually use the syntax I don't need to use this today and the two key arguments against that",
    "start": "824130",
    "end": "831840"
  },
  {
    "text": "are that there are going to be new things within the JavaScript specification that are going to prevent",
    "start": "831840",
    "end": "838170"
  },
  {
    "text": "bugs for example I showed the let keyboard over here and additionally if",
    "start": "838170",
    "end": "843210"
  },
  {
    "text": "you want to keep your skills up to date it is good to be using a transpiler and you're going to have to cross this bridge where some stuff runs in the",
    "start": "843210",
    "end": "850440"
  },
  {
    "text": "user's process and there's some stuff that is in specification that's preventing bugs and you're keeping your skills up to date and one of those",
    "start": "850440",
    "end": "856890"
  },
  {
    "text": "bridges is batch script so that's the whole of the transportation story the",
    "start": "856890",
    "end": "863100"
  },
  {
    "text": "two key value propositions for type skateboard that it's going to give you transpiler",
    "start": "863100",
    "end": "868980"
  },
  {
    "text": "and Alinta now as soon as we talk about the linty the first thing that comes up is the name the type script the type",
    "start": "868980",
    "end": "876930"
  },
  {
    "text": "within touch gift and that starts the whole religious argument about static",
    "start": "876930",
    "end": "882930"
  },
  {
    "text": "versus dynamic types and there are a large number of augments people make one of them is that I have tests well you",
    "start": "882930",
    "end": "890310"
  },
  {
    "text": "have tests for most of your codebase it doesn't really like it's good to have",
    "start": "890310",
    "end": "896460"
  },
  {
    "text": "tests for things that a sinking and",
    "start": "896460",
    "end": "901530"
  },
  {
    "text": "typescript is essentially like linting is a form of testing another claim is like so like",
    "start": "901530",
    "end": "907890"
  },
  {
    "text": "and tests can be wrong as well so",
    "start": "907890",
    "end": "911750"
  },
  {
    "text": "this was JavaScript and the test run over black ice oh I'm fine so you want",
    "start": "912910",
    "end": "919000"
  },
  {
    "text": "something more than that and that's is what bad script is another key motivation for actually having these",
    "start": "919000",
    "end": "924520"
  },
  {
    "text": "type annotations within your codebase is that it provides better documentation like take this example this is a very",
    "start": "924520",
    "end": "929890"
  },
  {
    "text": "famous function right now left pad that I if you look at the signature the types",
    "start": "929890",
    "end": "935410"
  },
  {
    "text": "are in the names like STR it's a string length it's a number like you get that",
    "start": "935410",
    "end": "941170"
  },
  {
    "text": "intuitive thing it's just that it's not mentioned in any significant way to your",
    "start": "941170",
    "end": "946420"
  },
  {
    "text": "transpiler to make sure that no one uses them in a wrong way and like no like this is perfectly valid",
    "start": "946420",
    "end": "954580"
  },
  {
    "text": "JavaScript this works just fine however you don't write JavaScript like this you",
    "start": "954580",
    "end": "960160"
  },
  {
    "text": "actually mention your arguments upfront so that the person who's going to read the code is going to understand what the",
    "start": "960160",
    "end": "965320"
  },
  {
    "text": "motivation which will have behind the function was and like I've said this before you give JavaScript I'm sure it's",
    "start": "965320",
    "end": "970840"
  },
  {
    "text": "going to happily transpile it for you the type system is completely optional so give it a tax cap it'll be fine",
    "start": "970840",
    "end": "977050"
  },
  {
    "text": "but you get the opportunity to actually help document your code and essentially",
    "start": "977050",
    "end": "982690"
  },
  {
    "text": "make this available for IDs and essentially testing another claim that I",
    "start": "982690",
    "end": "988720"
  },
  {
    "text": "hear quite commonly is that I have conventions I don't need any type",
    "start": "988720",
    "end": "994030"
  },
  {
    "text": "annotations all my users always have user ID all my users always have display",
    "start": "994030",
    "end": "1000240"
  },
  {
    "text": "name so I'm always consistent there so I don't need type in additions you can how are you going to document these like you",
    "start": "1000240",
    "end": "1006540"
  },
  {
    "text": "can write them like this within your Docs or you can actually just add a type annotation and then your code is self",
    "start": "1006540",
    "end": "1012360"
  },
  {
    "text": "documenting so again type scape the annotations are essentially documenting",
    "start": "1012360",
    "end": "1017880"
  },
  {
    "text": "your conventions and there's a lot of pain that people have felt with type",
    "start": "1017880",
    "end": "1023970"
  },
  {
    "text": "systems in the past type care does not attempt to be the was most sound type",
    "start": "1023970",
    "end": "1031770"
  },
  {
    "text": "system like other languages I don't want to mention the names Hesco it tries to",
    "start": "1031770",
    "end": "1038640"
  },
  {
    "text": "be convenient in that you write JavaScript code and it won't make it painful for you like",
    "start": "1038640",
    "end": "1046400"
  },
  {
    "text": "other languages so this particular piece of code this is valid JavaScript and",
    "start": "1046400",
    "end": "1053300"
  },
  {
    "text": "this is perfectly valid typescript as well and like I've shown this before I'm",
    "start": "1053300",
    "end": "1059060"
  },
  {
    "text": "gonna show this again and again before it burned into your retinas and you can at any point annotate any variable as",
    "start": "1059060",
    "end": "1066020"
  },
  {
    "text": "any and from that point on types it would be quite about it like you can write code like this as well that food",
    "start": "1066020",
    "end": "1071870"
  },
  {
    "text": "can be anything and you can assign a number to it you can assign a spring to it you can assign a regex to it you can",
    "start": "1071870",
    "end": "1077540"
  },
  {
    "text": "assign whatever you can imagine to it and then you can call whatever function you want to call on it and if you",
    "start": "1077540",
    "end": "1083930"
  },
  {
    "text": "execute just this piece of code is going to fail at runtime but you don't ask it to be quite about it and it was so like",
    "start": "1083930",
    "end": "1090680"
  },
  {
    "text": "if you're a right JavaScript as I've said you can do it all day long no problem and another great thing about",
    "start": "1090680",
    "end": "1097220"
  },
  {
    "text": "the typescript ID system what makes it different from the other type systems is that it's structural how many people here have used Auto mapper how many of",
    "start": "1097220",
    "end": "1106940"
  },
  {
    "text": "you have had an auto map an entry that is just x + y without any qualifications",
    "start": "1106940",
    "end": "1114460"
  },
  {
    "text": "alright so you don't need to do that but I've skipped because it's structural so if just because the names differ between",
    "start": "1114460",
    "end": "1121130"
  },
  {
    "text": "the two things if the structure of the two types is the same cross assigning",
    "start": "1121130",
    "end": "1126830"
  },
  {
    "text": "between the types is perfectly fine the types are purely structural they're purely for documentation purposes they",
    "start": "1126830",
    "end": "1132710"
  },
  {
    "text": "do not exist at runtime they do not have the names impacting their runtime semantics another concern that you might",
    "start": "1132710",
    "end": "1141260"
  },
  {
    "text": "have about typescript is that we're going to outlive my project like my",
    "start": "1141260",
    "end": "1147200"
  },
  {
    "text": "project is a 10-year project I don't want X get to die in the middle of it well what same work are you going to use I'm gonna use angular well that's you",
    "start": "1147200",
    "end": "1154610"
  },
  {
    "text": "think that's cap are you going to use ember well the glimmer engine with the number is using typescript cycle GSU's",
    "start": "1154610",
    "end": "1160880"
  },
  {
    "text": "the side script how many people here have heard of this framework alright how many people actually use it alright this",
    "start": "1160880",
    "end": "1169160"
  },
  {
    "text": "is I haven't person said raise your hand when I apologize that give me your",
    "start": "1169160",
    "end": "1174350"
  },
  {
    "text": "simulator there is a synthetic base like quite commonly I raise this that maybe like",
    "start": "1174350",
    "end": "1180500"
  },
  {
    "text": "people are talking about managing leadership or basis is the question that have you considered typescript and then",
    "start": "1180500",
    "end": "1185600"
  },
  {
    "text": "let's say that I don't want to learn Scala or I don't want to learn CoffeeScript who wanna learn dot or",
    "start": "1185600",
    "end": "1190730"
  },
  {
    "text": "something else that skip is just JavaScript we feel familiar with JavaScript all that you're doing is using pet script as a transpiler with",
    "start": "1190730",
    "end": "1196790"
  },
  {
    "text": "optional annotations if you want to again that diagram is it in your retinas",
    "start": "1196790",
    "end": "1202580"
  },
  {
    "text": "yet and there is a comparison between like so how many this is a simple piece",
    "start": "1202580",
    "end": "1207950"
  },
  {
    "text": "of code that I showed previously how many people here think that this is valid JavaScript like if I give this",
    "start": "1207950",
    "end": "1214010"
  },
  {
    "text": "code do my JavaScript engine do you",
    "start": "1214010",
    "end": "1220550"
  },
  {
    "text": "think it'll work so there is additional syntax over here which it didn't work it",
    "start": "1220550",
    "end": "1229040"
  },
  {
    "text": "said again unexpected token semicolon and that additional syntax is that number in addition over there however if",
    "start": "1229040",
    "end": "1236660"
  },
  {
    "text": "you give this to Babel today opening somewhere it'll happily cross valid and",
    "start": "1236660",
    "end": "1243770"
  },
  {
    "text": "these are just the defaults I haven't changed anything over here I do not mean to have that check mark I",
    "start": "1243770",
    "end": "1248990"
  },
  {
    "text": "guess they have the bad fault now that's because the people that make these tools",
    "start": "1248990",
    "end": "1256490"
  },
  {
    "text": "they understand the value of types Babel by default supports flow types and this",
    "start": "1256490",
    "end": "1261530"
  },
  {
    "text": "is exactly the same type in addition syntax that he used with typescript however Babel is very focused on being a",
    "start": "1261530",
    "end": "1267860"
  },
  {
    "text": "transpiler if you want type checking you actually use an external tool like flow with Babel so over here we said that",
    "start": "1267860",
    "end": "1275450"
  },
  {
    "text": "food must be a number and then we assign the string to it and Babel will not complain that's the dog of flow in",
    "start": "1275450",
    "end": "1281870"
  },
  {
    "text": "babbles mind however you give the same piece of code to touch kept and we have seen this before it'll actually",
    "start": "1281870",
    "end": "1290000"
  },
  {
    "text": "complained that string is not assignable to ever so typescript is your one-stop-shop transpiler and linter and",
    "start": "1290000",
    "end": "1298130"
  },
  {
    "text": "one so if you're using something like babbles today is absolutely no point not",
    "start": "1298130",
    "end": "1306200"
  },
  {
    "text": "to try a typescript you don't have to use it but just give it a go and it is like these annotations are all",
    "start": "1306200",
    "end": "1311560"
  },
  {
    "text": "about that ending types key value proposition is not a strands collation that's a secondary proposition the main",
    "start": "1311560",
    "end": "1316780"
  },
  {
    "text": "proposition is linting and the ide tooling that it provides and when I jump into the demos you'll see that so just",
    "start": "1316780",
    "end": "1325330"
  },
  {
    "text": "pick up any library that you've seen out there for example like jQuery this is pointing the jQuery Docs you can see",
    "start": "1325330",
    "end": "1332050"
  },
  {
    "text": "type annotations everywhere like this is essentially documentation that you have to keep in your mind if you want to be",
    "start": "1332050",
    "end": "1338830"
  },
  {
    "text": "successful with jQuery they react as an example so the reaction documentation that has types littered all over it so",
    "start": "1338830",
    "end": "1344950"
  },
  {
    "text": "when it the string is something that returns a string and takes a react element code mirror so how many people",
    "start": "1344950",
    "end": "1351790"
  },
  {
    "text": "here are familiar with code mirror all right so whenever you open dev tools in chrome code mirror is essentially the",
    "start": "1351790",
    "end": "1364570"
  },
  {
    "text": "code editor and that was crashed all",
    "start": "1364570",
    "end": "1370720"
  },
  {
    "text": "right",
    "start": "1370720",
    "end": "1372870"
  },
  {
    "text": "it's the editor that you see within the sources panel within there - it has one",
    "start": "1376179",
    "end": "1381200"
  },
  {
    "text": "of the best documentation in my honest opinion and the reason why is because as soon as you look at the stuff in action",
    "start": "1381200",
    "end": "1386839"
  },
  {
    "text": "you know exactly what it's going to take like you know doctored get value is going to take a separator which is going to be a string and it's actually going",
    "start": "1386839",
    "end": "1392419"
  },
  {
    "text": "to return to your string like get value for a documentation management system you might think that it might return a",
    "start": "1392419",
    "end": "1398589"
  },
  {
    "text": "lines array to you but that a notation tells me up front that is actually going",
    "start": "1398589",
    "end": "1403639"
  },
  {
    "text": "to be a string and like pick your favorite library look at its documentation if you like it I'm sure",
    "start": "1403639",
    "end": "1410119"
  },
  {
    "text": "its documentation contains types that's why you like it otherwise you wouldn't be able to understand what does it take what does it return what is going on so",
    "start": "1410119",
    "end": "1419559"
  },
  {
    "text": "with that the how many people here have heard of definitely typed all right so",
    "start": "1419559",
    "end": "1427339"
  },
  {
    "text": "this was the product that started in 2012 immediately after typescript was released and what they've actually done",
    "start": "1427339",
    "end": "1434509"
  },
  {
    "text": "is they've gone ahead and added documentation that can be used by tasket",
    "start": "1434509",
    "end": "1440839"
  },
  {
    "text": "for all the major libraries out there for example let's just take a look at the documentation for jQuery and this is",
    "start": "1440839",
    "end": "1452629"
  },
  {
    "text": "like that all the stuff about jQuery that you would have to keep within your brain if you wanted to be sure that",
    "start": "1452629",
    "end": "1460279"
  },
  {
    "text": "nothing would go wrong with jQuery and then you would actually have to pass someone else's commit to your codebase",
    "start": "1460279",
    "end": "1466609"
  },
  {
    "text": "and review them and make sure that they're using jQuery is the way it's meant to be used so with that",
    "start": "1466609",
    "end": "1477849"
  },
  {
    "text": "it is by Microsoft but it's the new Microsoft so it's all open source I'm",
    "start": "1479220",
    "end": "1485909"
  },
  {
    "text": "running it on a Mac it works everywhere it's just JavaScript it's written in",
    "start": "1485909",
    "end": "1491340"
  },
  {
    "text": "touch script as well which is again just JavaScript so are there any questions at this point all right let's just jump",
    "start": "1491340",
    "end": "1501389"
  },
  {
    "text": "into the demo so so over here",
    "start": "1501389",
    "end": "1515149"
  },
  {
    "text": "I'm just going to go ahead and open a J's phone can you see the file back",
    "start": "1517340",
    "end": "1524580"
  },
  {
    "text": "there can you see it now can you see it",
    "start": "1524580",
    "end": "1531690"
  },
  {
    "text": "now all right so this is a JavaScript file it has a",
    "start": "1531690",
    "end": "1536940"
  },
  {
    "text": "bunch of errors in it they are intentional but the key thing that I want to point out is that it's",
    "start": "1536940",
    "end": "1544409"
  },
  {
    "text": "hard to review like this is a JavaScript that you have to review from the new developer you feel your player that object I define properties when call",
    "start": "1544409",
    "end": "1550919"
  },
  {
    "text": "does anybody see anything wrong with this line beyond the fact that the new developer is adding stuff to a window",
    "start": "1550919",
    "end": "1556789"
  },
  {
    "text": "that's because you're not expected to memorize the signature of object or",
    "start": "1557120",
    "end": "1562649"
  },
  {
    "text": "define property from the leimia brain however type scripts already contains",
    "start": "1562649",
    "end": "1569850"
  },
  {
    "text": "the definition for this particular thing and the kind of structure that it expects and it's going to go ahead and",
    "start": "1569850",
    "end": "1575789"
  },
  {
    "text": "point out that read-only is not something that you add to define property what is something that you add",
    "start": "1575789",
    "end": "1582240"
  },
  {
    "text": "to object a different property well that's just lead this and let tax click Auto compete it for us all writable",
    "start": "1582240",
    "end": "1587370"
  },
  {
    "text": "sounds like something that the developer might have wanted to use and now it's fine",
    "start": "1587370",
    "end": "1592470"
  },
  {
    "text": "being a non-native English speaker I don't even know how to spell right about correctly so it's nice that I don't have",
    "start": "1592470",
    "end": "1599340"
  },
  {
    "text": "to all of this stuff that the JavaScript runtime has I don't have to have it in",
    "start": "1599340",
    "end": "1605700"
  },
  {
    "text": "my brain it's all being limited for me and being autocomplete it for me so I can focus on my actual application",
    "start": "1605700",
    "end": "1611760"
  },
  {
    "text": "can understand that delivery method what it does that's more significant to me than understanding the browser ad sync",
    "start": "1611760",
    "end": "1617880"
  },
  {
    "text": "receives and the exact semantics of the browser API and making sure that no one actually uses it in the wrong way so",
    "start": "1617880",
    "end": "1626370"
  },
  {
    "text": "here's another area does anybody know what the error is within this line the",
    "start": "1626370",
    "end": "1632670"
  },
  {
    "text": "error is that parts int actually goes ahead and takes a string however document get element by ID returns an",
    "start": "1632670",
    "end": "1637830"
  },
  {
    "text": "HTML element you the developer probably wanted something like text content and",
    "start": "1637830",
    "end": "1643470"
  },
  {
    "text": "then so that's a string and that that that's what they wanted masked or something like that that's",
    "start": "1643470",
    "end": "1648810"
  },
  {
    "text": "just like this this is another example which very well might not actually feel",
    "start": "1648810",
    "end": "1654660"
  },
  {
    "text": "that runtime everything might give you an an where they actually meant to use",
    "start": "1654660",
    "end": "1660740"
  },
  {
    "text": "the binary or instead of the bit or operator which is like this is quite",
    "start": "1660740",
    "end": "1666780"
  },
  {
    "text": "common way of getting a default value from something and that that fixes the",
    "start": "1666780",
    "end": "1673320"
  },
  {
    "text": "error that I should caught up front but if you look within this file send updates it has a comment it says that",
    "start": "1673320",
    "end": "1678930"
  },
  {
    "text": "email address an email address or an array of email addresses to chip with now that that's that's something that",
    "start": "1678930",
    "end": "1684420"
  },
  {
    "text": "you want to document any code like if you were writing good JavaScript that's what you would write anyways but what you can do now with typescript is that",
    "start": "1684420",
    "end": "1691110"
  },
  {
    "text": "you can actually go ahead and document this for the compiler as well you can say it to the compiler that make sure",
    "start": "1691110",
    "end": "1696780"
  },
  {
    "text": "that anybody who calls this function passes me a string or a string array you don't have to read this particular",
    "start": "1696780",
    "end": "1703110"
  },
  {
    "text": "comment and pass the meaning of that within your brain once you become familiar with the types of syntax it",
    "start": "1703110",
    "end": "1708600"
  },
  {
    "text": "becomes much more natural and what's going to happen over here that purpose is going to actually figure out that the",
    "start": "1708600",
    "end": "1715050"
  },
  {
    "text": "function body conforms to this structure as well if you think about it the",
    "start": "1715050",
    "end": "1721220"
  },
  {
    "text": "function signature that's just a theorem and the function body is the proof of",
    "start": "1721220",
    "end": "1726990"
  },
  {
    "text": "the theorem like if I go ahead and annotate that something must be a string that this function must return a string",
    "start": "1726990",
    "end": "1732240"
  },
  {
    "text": "that shit's going to actually essentially do a test on the function and make sure that it returns a string which in this case it doesn't",
    "start": "1732240",
    "end": "1738890"
  },
  {
    "text": "so with that simple inhalation of converting that comment do a type annotation that's just going to go ahead",
    "start": "1738890",
    "end": "1744870"
  },
  {
    "text": "and figure out there are miss usages of the parameter within the function and over here does",
    "start": "1744870",
    "end": "1751140"
  },
  {
    "text": "anybody know that the error like why would this not work like this sounds like a perfectly valid comment if it's",
    "start": "1751140",
    "end": "1756330"
  },
  {
    "text": "an array loop over it that's that's duck typing like why would that not work",
    "start": "1756330",
    "end": "1762300"
  },
  {
    "text": "does anybody know yeah and that's just go ahead and figure that out so like a",
    "start": "1762300",
    "end": "1767790"
  },
  {
    "text": "proper way to discriminate between a string and a string array with es5 is",
    "start": "1767790",
    "end": "1773460"
  },
  {
    "text": "this method so array dot is array so that would actually go ahead and within",
    "start": "1773460",
    "end": "1779790"
  },
  {
    "text": "this block there is no way that email address cannot be an array so that she's",
    "start": "1779790",
    "end": "1785910"
  },
  {
    "text": "going to go ahead and figure that out and it's going to figure out that email address must be a string array and there's an else over here and that's",
    "start": "1785910",
    "end": "1791670"
  },
  {
    "text": "just going to go ahead and figure out that within this block it must be a string because there's not a string array because that's in the previous",
    "start": "1791670",
    "end": "1797310"
  },
  {
    "text": "block and then you get more errors within this code does anybody know the error over here yes that's error here",
    "start": "1797310",
    "end": "1807000"
  },
  {
    "text": "thank you for that this is why you start skipping demos does anybody know the",
    "start": "1807000",
    "end": "1813090"
  },
  {
    "text": "error here so it's the issue is that",
    "start": "1813090",
    "end": "1820230"
  },
  {
    "text": "it's actually welcome index that's a signature of for each and they will swap",
    "start": "1820230",
    "end": "1826620"
  },
  {
    "text": "around so what was happening was that RDX was actually the string and valve",
    "start": "1826620",
    "end": "1832680"
  },
  {
    "text": "was the index within the for each like so this is something that the universe might very well write and we've just",
    "start": "1832680",
    "end": "1838470"
  },
  {
    "text": "seen that like if they push this with like okay let's just push this production let's make it a testings problem well you can add pipe on",
    "start": "1838470",
    "end": "1844170"
  },
  {
    "text": "additions and just fix it there and then you don't even like this is essentially code coverage for this particular block",
    "start": "1844170",
    "end": "1849870"
  },
  {
    "text": "that if you write tests for it that test is only going to get so and become a",
    "start": "1849870",
    "end": "1855270"
  },
  {
    "text": "nightmare to maintain because if you want to change something you have to change it to as many if justified why",
    "start": "1855270",
    "end": "1861420"
  },
  {
    "text": "did you change the test why did elite the test cuz it wasn't working you should have fixed the code that I",
    "start": "1861420",
    "end": "1867330"
  },
  {
    "text": "skip it's much more natural so that's just a quick demonstration does anybody",
    "start": "1867330",
    "end": "1873120"
  },
  {
    "text": "have questions about this particular thing",
    "start": "1873120",
    "end": "1878240"
  },
  {
    "text": "all right ugly let's jump to the next one so what",
    "start": "1878540",
    "end": "1887520"
  },
  {
    "text": "I am going to do now is I have a very simple react app written in typescript",
    "start": "1887520",
    "end": "1897470"
  },
  {
    "text": "so how many people here are familiar with react alright so that number is a",
    "start": "1897830",
    "end": "1907740"
  },
  {
    "text": "bit low so three people everybody does not react but you might not actually know why react is awesome so the reason",
    "start": "1907740",
    "end": "1914940"
  },
  {
    "text": "why react is awesome let me just before I go there let me just explain the setup and just show you exactly how simple to",
    "start": "1914940",
    "end": "1920910"
  },
  {
    "text": "set up as it is if you just initialize an NPM module so NPM in it you get this",
    "start": "1920910",
    "end": "1926760"
  },
  {
    "text": "packaged edition npm install before you bring in web back into the project and then within start I have a",
    "start": "1926760",
    "end": "1933510"
  },
  {
    "text": "pax - - watch and what that's going to do it's going to pick up a web backdoor",
    "start": "1933510",
    "end": "1938790"
  },
  {
    "text": "config in the same folder and the web backdoor config is even simpler we have",
    "start": "1938790",
    "end": "1944040"
  },
  {
    "text": "an entry point for our application and then we have an output bundle with which web pack is going to generate and we",
    "start": "1944040",
    "end": "1950700"
  },
  {
    "text": "then tell web pack that just take if a module is also RTS or TS x transpile it",
    "start": "1950700",
    "end": "1958110"
  },
  {
    "text": "with TS laura that's like so that is essentially copy/paste I don't imagine",
    "start": "1958110",
    "end": "1965250"
  },
  {
    "text": "how that can be any simpler than that we have a very simple industrial HTML with",
    "start": "1965250",
    "end": "1970650"
  },
  {
    "text": "that which is actually just going to go ahead and load that bundle yes and then we have our apt or TS X which is the",
    "start": "1970650",
    "end": "1976860"
  },
  {
    "text": "main entry point for our application so with that if I go ahead and in a",
    "start": "1976860",
    "end": "1983280"
  },
  {
    "text": "separate window just run NPM stock that is going to go ahead and run wet back in",
    "start": "1983280",
    "end": "1990870"
  },
  {
    "text": "watch mode cool so like that's",
    "start": "1990870",
    "end": "1996150"
  },
  {
    "text": "blindingly easy I'm just going to go ahead and copy the path to this HTML file I don't need to even need a server",
    "start": "1996150",
    "end": "2002570"
  },
  {
    "text": "I'm just showing this HTML file to the browser directly what I will do to prove",
    "start": "2002570",
    "end": "2007940"
  },
  {
    "text": "that this is that file is just I will console.log hey and DC peeps and you",
    "start": "2007940",
    "end": "2016310"
  },
  {
    "text": "actually see that logged within the",
    "start": "2016310",
    "end": "2022490"
  },
  {
    "text": "console cool now the reason why react",
    "start": "2022490",
    "end": "2029540"
  },
  {
    "text": "I'm a big advocate of react is that it's just JavaScript here's an example of",
    "start": "2029540",
    "end": "2035570"
  },
  {
    "text": "something that is coming from yet so I'm",
    "start": "2035570",
    "end": "2041450"
  },
  {
    "text": "just going to go ahead and have a div with hello world inside a fan and I'm",
    "start": "2041450",
    "end": "2046730"
  },
  {
    "text": "going to go ahead and console the clock now this syntax sort of scares a few",
    "start": "2046730",
    "end": "2053120"
  },
  {
    "text": "people and it's essentially very similar",
    "start": "2053120",
    "end": "2058158"
  },
  {
    "text": "to something like so let me just show you what it logs out you'll actually see that it's just an object that's being",
    "start": "2058159",
    "end": "2064040"
  },
  {
    "text": "created nothing fancy about it it's essentially very similar to something like console dot log something like like",
    "start": "2064040",
    "end": "2077980"
  },
  {
    "text": "type is a div and then it has some props which has some children which is hello",
    "start": "2077980",
    "end": "2085490"
  },
  {
    "text": "world that's all that is like the two objects that are going to get logged out they're very similar it's just syntactic",
    "start": "2085490",
    "end": "2092179"
  },
  {
    "text": "sugar on top of that but the great thing of using this is that it allows you to",
    "start": "2092179",
    "end": "2098600"
  },
  {
    "text": "use all your JavaScript tooling for maintaining your HTML stuff as well so you can have a cohesive story for an",
    "start": "2098600",
    "end": "2105740"
  },
  {
    "text": "application with just one programming language and touch get suppose said out of the box all that I've done over here is created a tight ship config file and",
    "start": "2105740",
    "end": "2115220"
  },
  {
    "text": "just told it that for the GSX syntax go ahead and convert that to the react",
    "start": "2115220",
    "end": "2121100"
  },
  {
    "text": "version of transporation so so that's very clear that's just an object and",
    "start": "2121100",
    "end": "2128000"
  },
  {
    "text": "then what you can do with the GATT is you can actually go ahead and ask it to convert it to any format so for example",
    "start": "2128000",
    "end": "2135260"
  },
  {
    "text": "I can go ahead and convert this object into something that you can set as an inner HTML for something so I'll just go",
    "start": "2135260",
    "end": "2140720"
  },
  {
    "text": "ahead and bring in react on server and I'm actually going to go ahead and",
    "start": "2140720",
    "end": "2148520"
  },
  {
    "text": "react Tom server dot render the string",
    "start": "2148520",
    "end": "2154670"
  },
  {
    "text": "so I'm just gonna go ahead and store this in a variable foo is equal to this",
    "start": "2154670",
    "end": "2161940"
  },
  {
    "text": "thing done console.log foo you saw this before I'm just going to go ahead and render the food to a string as well so",
    "start": "2161940",
    "end": "2168930"
  },
  {
    "text": "now if I go ahead and run this you'll actually see that it there's an idea",
    "start": "2168930",
    "end": "2174059"
  },
  {
    "text": "nice div that you can potentially set as an inner HTML for something in addition",
    "start": "2174059",
    "end": "2179280"
  },
  {
    "text": "to rendering to a string you can actually have react render to some",
    "start": "2179280",
    "end": "2185579"
  },
  {
    "text": "element within your Dom as well so within our index.html we just have this one Dave with an ID root I can get a",
    "start": "2185579",
    "end": "2192300"
  },
  {
    "text": "handle to that div quite easily with document dot get element by ID root if I",
    "start": "2192300",
    "end": "2200369"
  },
  {
    "text": "just lock that out you'll see that they've logged out that's fine what I can do is ask react to render foo do",
    "start": "2200369",
    "end": "2216690"
  },
  {
    "text": "that Dave and now you'll actually see hello world being shown up as it if so are there any",
    "start": "2216690",
    "end": "2224150"
  },
  {
    "text": "questions about that",
    "start": "2224150",
    "end": "2226750"
  },
  {
    "text": "No so so the great thing is that it's this GSX that you see over here it's",
    "start": "2235859",
    "end": "2242460"
  },
  {
    "text": "within a TSX file so it is what it's the",
    "start": "2242460",
    "end": "2248339"
  },
  {
    "text": "GS x index plus that I've steps index supported in that as well and the only transpiler that you need for this is static if you saw the web backdoor",
    "start": "2248339",
    "end": "2254849"
  },
  {
    "text": "config there is no Babel reference over here it's just TS flora so for any TS or",
    "start": "2254849",
    "end": "2261089"
  },
  {
    "text": "TSX files you toe-touch get to use sorry swept-back to use touch script and",
    "start": "2261089",
    "end": "2266190"
  },
  {
    "text": "that's only transpire that selection over here yep so this is something that",
    "start": "2266190",
    "end": "2275099"
  },
  {
    "text": "is very similar to something I mentioned previously that if you give a js4 with type annotations to be able it'll",
    "start": "2275099",
    "end": "2280499"
  },
  {
    "text": "happily transpose it I'm not a big fan of that I'd like to have my GS files",
    "start": "2280499",
    "end": "2285559"
  },
  {
    "text": "only contained J s index nothing matter if it's es next index that's totally fine with me but I don't want",
    "start": "2285559",
    "end": "2291029"
  },
  {
    "text": "non-standard track es syntax in a J's file that's why I prefer to have that syntax in a TS file and use something",
    "start": "2291029",
    "end": "2297329"
  },
  {
    "text": "like that script instead of something like flow additionally with JSX syntax",
    "start": "2297329",
    "end": "2302460"
  },
  {
    "text": "it's quite common for people to actually put that in a J's file and then just pass it through rebel with that conversion as well the task a team has",
    "start": "2302460",
    "end": "2309210"
  },
  {
    "text": "gone to the decision that because it's actually different from TS as well as a TS the main motivation for TS is having",
    "start": "2309210",
    "end": "2315779"
  },
  {
    "text": "type annotations the main motivation for having TS x is to have type annotations and JSX supported",
    "start": "2315779",
    "end": "2322548"
  },
  {
    "text": "so that's just like so now you can go ahead and update your resume on LinkedIn that you know react what you can",
    "start": "2324300",
    "end": "2333870"
  },
  {
    "text": "additionally do because it's just an object that's being passed around like it's very easy for me to convert this to a function so this is a function that",
    "start": "2333870",
    "end": "2341450"
  },
  {
    "text": "returns that Dave so now I actually have to go ahead and call that function and you can see that it still works fine now",
    "start": "2341450",
    "end": "2347730"
  },
  {
    "text": "with that you can actually have the function take parameters as well so I can just go ahead and say that it is something that has message inside of it",
    "start": "2347730",
    "end": "2356190"
  },
  {
    "text": "now because this stretchy bits gonna pick up the fact that within your code base somewhere you're actually calling",
    "start": "2356190",
    "end": "2361350"
  },
  {
    "text": "this function without passing in all the objects so it's gonna enforce you to use",
    "start": "2361350",
    "end": "2367140"
  },
  {
    "text": "message over here which must be something so I'll just go ahead and say hello NDC and I'll actually go ahead and",
    "start": "2367140",
    "end": "2375320"
  },
  {
    "text": "use that within my component as well so",
    "start": "2375320",
    "end": "2381150"
  },
  {
    "text": "now if I run this you can see that that essentially what I've done is I've actually created a react component without ever actually creating a react",
    "start": "2381150",
    "end": "2388530"
  },
  {
    "text": "component because it's just JavaScript what you can you can take this further",
    "start": "2388530",
    "end": "2395010"
  },
  {
    "text": "and that's what the original sample was we just go ahead and take two properties",
    "start": "2395010",
    "end": "2402750"
  },
  {
    "text": "so I'm saying that properties is something that must have a compiler of type string and framework of type string and then when you go ahead and so I",
    "start": "2402750",
    "end": "2409980"
  },
  {
    "text": "could very easily do this as well hello and as soon as I do this it's a function",
    "start": "2409980",
    "end": "2416130"
  },
  {
    "text": "that takes two properties types it's gonna complain it's gonna say that it must have a compiler which is something and then it must have a framework which",
    "start": "2416130",
    "end": "2423030"
  },
  {
    "text": "is something else or whatever and this would work perfectly fine as well",
    "start": "2423030",
    "end": "2428780"
  },
  {
    "text": "however what I am converting this particular function call into JSX syntax",
    "start": "2428780",
    "end": "2436800"
  },
  {
    "text": "is going to do is I'm creating and again an object instead of actually creating a",
    "start": "2436800",
    "end": "2442200"
  },
  {
    "text": "function I'm telling react that render the hello function with these particular",
    "start": "2442200",
    "end": "2450900"
  },
  {
    "text": "properties so I'm not actually immediately invoking the function I'm just giving that object specification to",
    "start": "2450900",
    "end": "2456480"
  },
  {
    "text": "react and then react is going to render it when it needs to so that's all all the GS X is",
    "start": "2456480",
    "end": "2462950"
  },
  {
    "text": "is a better way of creating an object you can write that object yourself if you want to it's just more painful",
    "start": "2462950",
    "end": "2468460"
  },
  {
    "text": "now with that so that you could use babble with this as well then you",
    "start": "2468460",
    "end": "2473960"
  },
  {
    "text": "wouldn't get any even get them discriminating experience there but if",
    "start": "2473960",
    "end": "2479960"
  },
  {
    "text": "you use type skip what you actually get is compiled on safety so for example if you go ahead and misspell something over",
    "start": "2479960",
    "end": "2487309"
  },
  {
    "text": "here you're going to get an error that our compiler is not a property that this particular component accepts if you",
    "start": "2487309",
    "end": "2493730"
  },
  {
    "text": "misspell the component name that is going to complain this variable is not defined I don't see any hello / hello so",
    "start": "2493730",
    "end": "2501289"
  },
  {
    "text": "ver here there's only a hello maybe you were meant to use that and then additionally the type subject as well so",
    "start": "2501289",
    "end": "2506990"
  },
  {
    "text": "if I go ahead and say that compiler must be a number and if someone calls that",
    "start": "2506990",
    "end": "2512000"
  },
  {
    "text": "wrong that shit's going to go ahead and complain that we keep trying to give a string to a number you're probably making a mistake there so it's really",
    "start": "2512000",
    "end": "2518720"
  },
  {
    "text": "about that agility of your developer to do this is really about developer tooling touch scripts key value",
    "start": "2518720",
    "end": "2524150"
  },
  {
    "text": "proposition is the key is the linking and the type checking for your code now",
    "start": "2524150",
    "end": "2529460"
  },
  {
    "text": "additionally what you can do is like have has anybody ever tried to rename stuff in the JavaScript did you enjoy it",
    "start": "2529460",
    "end": "2536569"
  },
  {
    "text": "so yeah we touch get the experience is",
    "start": "2536569",
    "end": "2542480"
  },
  {
    "text": "something like this so if I just go ahead and fix my compiler error I can go ahead and rename compilers to something",
    "start": "2542480",
    "end": "2548000"
  },
  {
    "text": "else and it just works like so you can",
    "start": "2548000",
    "end": "2553069"
  },
  {
    "text": "get the non-native English speaker to name their variables whatever makes sense to them and then when the code comes to you you can say well I'm not",
    "start": "2553069",
    "end": "2558440"
  },
  {
    "text": "you just gonna rename this don't worry about it it's myself you can go home now whereas we're - can you like can you",
    "start": "2558440",
    "end": "2565279"
  },
  {
    "text": "please rename this to the standards that I'm following cuz I can't rename this it's going to be a nightmare and then",
    "start": "2565279",
    "end": "2571309"
  },
  {
    "text": "send it to me again and then I look at it so that that's the beauty of touch get any questions about that it's within",
    "start": "2571309",
    "end": "2582529"
  },
  {
    "text": "the toshka project so over here we have it is configure jason which is including everything within the folder and the",
    "start": "2582529",
    "end": "2588440"
  },
  {
    "text": "folder actually only contain contains one father a party yes definitely",
    "start": "2588440",
    "end": "2595510"
  },
  {
    "text": "yes so that does exist and that is what this particular project was set up to do",
    "start": "2606710",
    "end": "2612990"
  },
  {
    "text": "so you can see Taipings dot typings install so if you run npm install on this project it'll go ahead and install",
    "start": "2612990",
    "end": "2618210"
  },
  {
    "text": "the latest Taipings for you so sorry it will just install the type things you",
    "start": "2618210",
    "end": "2623609"
  },
  {
    "text": "can add a new one which is like something some NPM script that typings - - update and it will do that that said",
    "start": "2623609",
    "end": "2630329"
  },
  {
    "text": "the key thing that you should keep in your mind is if you don't have type definitions your experience is very",
    "start": "2630329",
    "end": "2636210"
  },
  {
    "text": "similar to what a JavaScript developers experience would be so any pain you feel in bringing in typing's is essentially",
    "start": "2636210",
    "end": "2642839"
  },
  {
    "text": "the pain of bringing in any documentation like I'd rather have the documentation and go through that pain",
    "start": "2642839",
    "end": "2647880"
  },
  {
    "text": "once and then not have to worry about it and keep it in my head then having to memorize the whole of the jQuery API and",
    "start": "2647880",
    "end": "2653160"
  },
  {
    "text": "then keep it in my brain at all times I'd like to think of higher order problems than that so that is their like",
    "start": "2653160",
    "end": "2660539"
  },
  {
    "text": "because it's all statically analyzable you get other things like fine references as well so for what are all",
    "start": "2660539",
    "end": "2668220"
  },
  {
    "text": "the references of this particular thing this is essentially like fine references it's simpler than we name so nothing",
    "start": "2668220",
    "end": "2673829"
  },
  {
    "text": "fancy to show that now the next demo that I'm actually going to jump to is",
    "start": "2673829",
    "end": "2682789"
  },
  {
    "text": "the experience of converting a JavaScript project to typescript how",
    "start": "2682789",
    "end": "2688950"
  },
  {
    "text": "many people here have heard of UDS I see",
    "start": "2688950",
    "end": "2695099"
  },
  {
    "text": "no chance so a number of you have heard of it it's one of the very popular",
    "start": "2695099",
    "end": "2702089"
  },
  {
    "text": "frameworks out there it's written in es6 now because I've been showing this",
    "start": "2702089",
    "end": "2707609"
  },
  {
    "text": "continually that typescript is just JavaScript you can give it a JavaScript file and will happily cross buy it for",
    "start": "2707609",
    "end": "2714119"
  },
  {
    "text": "you I'm just going to as a demo open up the view source code within my IDE now this",
    "start": "2714119",
    "end": "2723119"
  },
  {
    "text": "is the directory for VG's so you can see that there's nothing up my sleeve I am",
    "start": "2723119",
    "end": "2728520"
  },
  {
    "text": "on the dev branch up to arrest there are some files and I'm curious why are they",
    "start": "2728520",
    "end": "2734250"
  },
  {
    "text": "on Save Changes yep so that's just when my ID booted up it editor so far so nothing up my sleeve it's all",
    "start": "2734250",
    "end": "2740269"
  },
  {
    "text": "just the view J source code vanilla now",
    "start": "2740269",
    "end": "2745549"
  },
  {
    "text": "at this point there is no type shipped within this code base this code base is",
    "start": "2745549",
    "end": "2750920"
  },
  {
    "text": "massive it has a lot of GS files and you might be worried this is something that",
    "start": "2750920",
    "end": "2756559"
  },
  {
    "text": "your project your project might look like and you might want to migrate to the typescript the first thing that you're actually going to do is go ahead",
    "start": "2756559",
    "end": "2764959"
  },
  {
    "text": "and create a TS config dot jason and it is to configure adjacent file is just essentially you telling the Tatra",
    "start": "2764959",
    "end": "2770900"
  },
  {
    "text": "compiler the source code of your project and the configuration options and it's actually very easy all that i need to do",
    "start": "2770900",
    "end": "2777349"
  },
  {
    "text": "within my compiler options is just tell it that a large s because I have a J's",
    "start": "2777349",
    "end": "2783859"
  },
  {
    "text": "file a bunch of J's files within my project and then as soon as you do that because it's going to have to transpile",
    "start": "2783859",
    "end": "2789499"
  },
  {
    "text": "them it's going to have to move them from some source directly to a destination directly I see that there's a dist folder here so I'll just go ahead",
    "start": "2789499",
    "end": "2795769"
  },
  {
    "text": "and specify an out DAR as well as the dist folder and then I'm going to tell",
    "start": "2795769",
    "end": "2802339"
  },
  {
    "text": "stipes kept all the files that are to be included within my project and all the",
    "start": "2802339",
    "end": "2808369"
  },
  {
    "text": "source code seems to be inside the source folder it isn't but let's just go with that assumption so a source get",
    "start": "2808369",
    "end": "2816380"
  },
  {
    "text": "every start of J's from that folder and because I'm actually going to be migrating into TS I'm just going to go",
    "start": "2816380",
    "end": "2821719"
  },
  {
    "text": "ahead and the TS as well so that's like I couldn't make that configuration any",
    "start": "2821719",
    "end": "2827029"
  },
  {
    "text": "simpler than that I'm just going to go ahead and tell type scripts and this is the project that I want to work on as",
    "start": "2827029",
    "end": "2832160"
  },
  {
    "text": "soon as I do that you can see that the source folder lights up so these are all the files that are now within the pet",
    "start": "2832160",
    "end": "2837170"
  },
  {
    "text": "ship completion context and you can see that there are actually no errors with this project because this was valid JavaScript that script took that valid",
    "start": "2837170",
    "end": "2844130"
  },
  {
    "text": "JavaScript and give back with a JavaScript it will not complain for JS files now if I just jump into index or",
    "start": "2844130",
    "end": "2850640"
  },
  {
    "text": "chase with in that file I can actually go ahead and see whatever translation",
    "start": "2850640",
    "end": "2855709"
  },
  {
    "text": "that ship is actually going to go ahead and do for this file so for example I can go ahead and say let Foos equal to 1",
    "start": "2855709",
    "end": "2861439"
  },
  {
    "text": "2 3 and then touch it was actually going to go ahead and cross file let away from",
    "start": "2861439",
    "end": "2866660"
  },
  {
    "text": "me and convert it into R I can go ahead and say that foo is something that is a function that always returns",
    "start": "2866660",
    "end": "2872770"
  },
  {
    "text": "and now and taps is going to go ahead and convert that arrow into a function that always returns now so you can",
    "start": "2872770",
    "end": "2880990"
  },
  {
    "text": "actually use cross spy script as just your transpiler but the key thing about that is that",
    "start": "2880990",
    "end": "2888060"
  },
  {
    "text": "javascript has very low semantics about what is and isn't",
    "start": "2888060",
    "end": "2893860"
  },
  {
    "text": "so it's essentially doing a syntactic check but it's not putting any restrictions on your code base which",
    "start": "2893860",
    "end": "2899350"
  },
  {
    "text": "means it cannot provide guarantees about the quality of tooling that you get and this is essentially like if you open up JetBrains and like if you have some",
    "start": "2899350",
    "end": "2906520"
  },
  {
    "text": "variable foo over here and then you have some variable bar over here it will happily provide autocomplete that maybe",
    "start": "2906520",
    "end": "2914050"
  },
  {
    "text": "he wanted fubar dot foo like no foo is a number why would you suggest that as an",
    "start": "2914050",
    "end": "2920470"
  },
  {
    "text": "autocomplete for bar but that is the kind of JavaScript tooling that you get",
    "start": "2920470",
    "end": "2925480"
  },
  {
    "text": "in any idea out there and that's so this is this using typescript code",
    "start": "2925480",
    "end": "2930850"
  },
  {
    "text": "intelligence for JavaScript files this is codename salsa and you'll see this mention in a number of other tools as well you see that in visual studio you",
    "start": "2930850",
    "end": "2937600"
  },
  {
    "text": "see that in vs code as well but this is the experience that you'll get if you're using code intelligence for pure",
    "start": "2937600",
    "end": "2943480"
  },
  {
    "text": "JavaScript JavaScript files what you can do within the same project is I can go ahead and add for example a bar or TS",
    "start": "2943480",
    "end": "2950140"
  },
  {
    "text": "file and now when this file gets into the types of population context here's an example so if I go ahead and define a",
    "start": "2950140",
    "end": "2956980"
  },
  {
    "text": "function over here and I specify that the function always takes some argument",
    "start": "2956980",
    "end": "2963120"
  },
  {
    "text": "that Schiphol not let me call this function without an argument why would you have a function that takes an",
    "start": "2963120",
    "end": "2969070"
  },
  {
    "text": "argument and not call it without an argument it makes no sense it's going to force you to have that however within",
    "start": "2969070",
    "end": "2974980"
  },
  {
    "text": "JavaScript people write this code all the time that they have functions that when they take optional arguments",
    "start": "2974980",
    "end": "2981160"
  },
  {
    "text": "because there is no way of annotating it that's keeping a lot hurt you for using",
    "start": "2981160",
    "end": "2990340"
  },
  {
    "text": "javascript it'll try to help you as much as it can but it cannot provide static guarantees that you actually get from",
    "start": "2990340",
    "end": "2996310"
  },
  {
    "text": "something that is designed to be statically analyzable so if you want something that is optional touch will actually force you",
    "start": "2996310",
    "end": "3002460"
  },
  {
    "text": "down the path of that is optional and this is something that people run into when they think about that did they open up a taxi",
    "start": "3002460",
    "end": "3009000"
  },
  {
    "text": "father start writing code and then test it starts screaming at them that this is unsafe and then they say this is valid",
    "start": "3009000",
    "end": "3014670"
  },
  {
    "text": "JavaScript I'm going to move to a JavaScript file but the pain that you're actually feeling is the pain you're",
    "start": "3014670",
    "end": "3020700"
  },
  {
    "text": "going to feel at a future point or the next person is going to feel after you've clift so that's that but you",
    "start": "3020700",
    "end": "3027690"
  },
  {
    "text": "can't actually like so mix and match them quite easy within your project as well so I can go ahead and export this function from that does nothing from",
    "start": "3027690",
    "end": "3035339"
  },
  {
    "text": "this board or TAS and I can I can actually use this quite easily within my JavaScript file as well so I can go",
    "start": "3035339",
    "end": "3040680"
  },
  {
    "text": "ahead and import from bar let's just bring in the function bar and just call",
    "start": "3040680",
    "end": "3048030"
  },
  {
    "text": "it oh good perfectly fine I just mixed matched bad shape and JavaScript in the same project not a problem you can",
    "start": "3048030",
    "end": "3053640"
  },
  {
    "text": "convert PGS to JavaScript I've skipped in one second because you just need a TS config file you can do that with any",
    "start": "3053640",
    "end": "3059700"
  },
  {
    "text": "project if it's better JavaScript it's going to valley touch get what you will not get is stuff like if I have so I",
    "start": "3059700",
    "end": "3066500"
  },
  {
    "text": "have a question so if I just go ahead",
    "start": "3066500",
    "end": "3074040"
  },
  {
    "text": "and have something that isn't valid JavaScript within a tasket file that",
    "start": "3074040",
    "end": "3079080"
  },
  {
    "text": "ship is going to complain that that's not a valid variable number what I doing this is the JavaScript file so you do get syntactic errors type checked but",
    "start": "3079080",
    "end": "3085470"
  },
  {
    "text": "that's good by checking you do get some of it but you don't get it to the extent that you",
    "start": "3085470",
    "end": "3091349"
  },
  {
    "text": "respect primarily because it doesn't have that guarantees and there are others like so the great thing about",
    "start": "3091349",
    "end": "3097530"
  },
  {
    "text": "that ship is that there's a slider that you can move as far as you want for example I can be a bit more strict about",
    "start": "3097530",
    "end": "3103859"
  },
  {
    "text": "my code I can say that it must it no implicit any like don't let and if it's",
    "start": "3103859",
    "end": "3110130"
  },
  {
    "text": "not analyzable don't let me do that and you can see that an error shows up over here what like this function there is no",
    "start": "3110130",
    "end": "3117630"
  },
  {
    "text": "way for that ship to figure out what the type of Argos it can be anything that's essentially something that you've left",
    "start": "3117630",
    "end": "3122820"
  },
  {
    "text": "undocumented for the next developer as well but not that she was actually going to complain and force you to say that oh",
    "start": "3122820",
    "end": "3128220"
  },
  {
    "text": "I cannot infer the type of this what did you mean well I meant a number so just go ahead and do that and the test it",
    "start": "3128220",
    "end": "3134099"
  },
  {
    "text": "will be quite about it and there are a lot of other slags as well for example you can say that no unused parameters and if I set",
    "start": "3134099",
    "end": "3144390"
  },
  {
    "text": "that as crew you'll actually see that so you define up but you never use it did",
    "start": "3144390",
    "end": "3150600"
  },
  {
    "text": "you mean to do that why would you do that right is that to confuse the next guy no no no sorry I didn't mean to use",
    "start": "3150600",
    "end": "3156240"
  },
  {
    "text": "it that's why sorry my bad okay so these",
    "start": "3156240",
    "end": "3165960"
  },
  {
    "text": "so what what are the - a team is doing so they went from having a very JavaScript experience for everyone to be",
    "start": "3165960",
    "end": "3174420"
  },
  {
    "text": "a very strict experience for those that can afford that luxury like if you go into a new team and you tell them that",
    "start": "3174420",
    "end": "3180810"
  },
  {
    "text": "please use type script for your JavaScript they'll be like I don't like types and then we'll say you don't have to use them and that'll work",
    "start": "3180810",
    "end": "3188580"
  },
  {
    "text": "that's the default experience that you want because it is your JavaScript like it touch Gabe is focused on making your",
    "start": "3188580",
    "end": "3194910"
  },
  {
    "text": "JavaScript the best experience out there so if you want a different experience",
    "start": "3194910",
    "end": "3200610"
  },
  {
    "text": "you have flex to switch them all you have to know like so to do it if and",
    "start": "3200610",
    "end": "3206150"
  },
  {
    "text": "essentially this is something that other transpilers flow they'll actually give",
    "start": "3206150",
    "end": "3212190"
  },
  {
    "text": "you more errors and then they might actually confuse you whereas with touch it you actually understand the type system before you",
    "start": "3212190",
    "end": "3218700"
  },
  {
    "text": "can actually use it yep still tomorrow",
    "start": "3218700",
    "end": "3227640"
  },
  {
    "text": "so you can see that there are seven errors that have started to show up so that's uh no those aren't those aren't",
    "start": "3227640",
    "end": "3234840"
  },
  {
    "text": "so that that isn't that's just a syntactic errors that have many of them",
    "start": "3234840",
    "end": "3241170"
  },
  {
    "text": "do because you don't have the opportunity to mention an optional in JavaScript right so forcing you to be",
    "start": "3241170",
    "end": "3248760"
  },
  {
    "text": "excited about your arguments that's not something that your javascript is going to be able to migrate to so if you want",
    "start": "3248760",
    "end": "3254670"
  },
  {
    "text": "the best tuning spinning best learning experience you / - yeah",
    "start": "3254670",
    "end": "3260090"
  },
  {
    "text": "so what I wasn't writing that I was writing Java so this let foods equal to something that is just JavaScript if you",
    "start": "3260310",
    "end": "3269109"
  },
  {
    "text": "go ahead and annotate it like something that is like this thing you'll actually see that should contain that you cannot use type annotations in a geographer and",
    "start": "3269109",
    "end": "3278440"
  },
  {
    "text": "that that's what you want you want don't want a George a as for with type inside of it so if you're concerned about that",
    "start": "3278440",
    "end": "3283810"
  },
  {
    "text": "script getting all up in your JavaScript don't be so for for those things like",
    "start": "3283810",
    "end": "3310000"
  },
  {
    "text": "you can still keep this separate so a key example of that would be like if you have jQuery within your project you can",
    "start": "3310000",
    "end": "3315070"
  },
  {
    "text": "actually go ahead and do this thing so right now so within like this yes file",
    "start": "3315070",
    "end": "3323140"
  },
  {
    "text": "dollar isn't something that's actually going to show up as an autocomplete thing because you can go ahead and",
    "start": "3323140",
    "end": "3328960"
  },
  {
    "text": "declare with another dids that there is something called dollar that has less to say the method ajax on it which is",
    "start": "3328960",
    "end": "3336330"
  },
  {
    "text": "anything I don't care to annotate that right now but then you actually get to use dollar dot Ajax and all that",
    "start": "3336330",
    "end": "3342700"
  },
  {
    "text": "autocomplete and then additionally so this is essentially a documentation for J's file out there within your project",
    "start": "3342700",
    "end": "3349119"
  },
  {
    "text": "or within someone else's project in this case jQuery you can actually use the task file but then within here",
    "start": "3349119",
    "end": "3354280"
  },
  {
    "text": "immediately right now like if I go ahead and comment out all of this dot b dot es",
    "start": "3354280",
    "end": "3360760"
  },
  {
    "text": "documentation for o dot J's file I can at this moment not use dollar however if",
    "start": "3360760",
    "end": "3367930"
  },
  {
    "text": "I go ahead and document my JavaScript I can actually use that within a dot d s",
    "start": "3367930",
    "end": "3373990"
  },
  {
    "text": "file and if you did this error will go away and it does and you get nice stop it jump you know all the thing so you",
    "start": "3373990",
    "end": "3380380"
  },
  {
    "text": "can have like you don't someone says that I don't want you writing I don't want to convert this to it Ortiz file",
    "start": "3380380",
    "end": "3386680"
  },
  {
    "text": "you don't have to document that in a dot d dot ES file right next to it",
    "start": "3386680",
    "end": "3391980"
  },
  {
    "text": "all right that seems to be the end of the questions so the key takeaway is",
    "start": "3394539",
    "end": "3402289"
  },
  {
    "text": "that like just it's just happening you it's just JavaScript and the idea that",
    "start": "3402289",
    "end": "3407989"
  },
  {
    "text": "I've been using today that's all written in typescript and react and that's all open source as well and I have a free",
    "start": "3407989",
    "end": "3414349"
  },
  {
    "text": "book on the subject as well so like I'm I love helping people that's what I left",
    "start": "3414349",
    "end": "3419389"
  },
  {
    "text": "my life go many going out please leave a green card that would really help me a lot so yes I am presenting at ng Sydney",
    "start": "3419389",
    "end": "3432739"
  },
  {
    "text": "about exactly how all the features that exist within this developer IDE so",
    "start": "3432739",
    "end": "3438109"
  },
  {
    "text": "please join us if you want [Applause]",
    "start": "3438109",
    "end": "3447960"
  }
]