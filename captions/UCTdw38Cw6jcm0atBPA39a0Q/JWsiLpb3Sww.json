[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "right so hi thank you for coming I know there's some other sessions in parallel",
    "start": "30",
    "end": "6480"
  },
  {
    "text": "and I appreciate you coming maybe you should you can come come in closer you have more time for questions so that",
    "start": "6480",
    "end": "13320"
  },
  {
    "text": "that's great so I want to talk about quest cross-platform development and I'm",
    "start": "13320",
    "end": "20820"
  },
  {
    "text": "a software architect I do a lot of computer vision for multiple platforms",
    "start": "20820",
    "end": "25890"
  },
  {
    "text": "and I want to talk to you about some methodologies and architectures that I",
    "start": "25890",
    "end": "31050"
  },
  {
    "text": "developed over time to to enable me to target multiple platforms now the first",
    "start": "31050",
    "end": "37320"
  },
  {
    "start": "36000",
    "end": "241000"
  },
  {
    "text": "question that comes to mind is what do I mean when I say a cross-platform because there are many many different",
    "start": "37320",
    "end": "44270"
  },
  {
    "text": "interpretations of what this might mean and there are many different target",
    "start": "44270",
    "end": "49289"
  },
  {
    "text": "platforms that one might have to target with the same app or similar app or",
    "start": "49289",
    "end": "54510"
  },
  {
    "text": "similar functionality so if you go to the lowest level we can think about",
    "start": "54510",
    "end": "60710"
  },
  {
    "text": "custom hardware custom chips like Aztec chips and then we when we start going",
    "start": "60710",
    "end": "66630"
  },
  {
    "text": "higher we get to embedded systems and mobile systems where we have multiple different operating systems different",
    "start": "66630",
    "end": "74430"
  },
  {
    "text": "chips the different types of processor architectures very often we get",
    "start": "74430",
    "end": "79860"
  },
  {
    "text": "heterogeneous architecture so we might have GPUs and CPUs both on the same chip",
    "start": "79860",
    "end": "85140"
  },
  {
    "text": "or on the same board of course on desktop we have Windows Linux OSX which",
    "start": "85140",
    "end": "90600"
  },
  {
    "text": "are just the main desktop operating systems but there are other types of",
    "start": "90600",
    "end": "95820"
  },
  {
    "text": "operating systems and these days we can't ignore things like browsers which",
    "start": "95820",
    "end": "101909"
  },
  {
    "text": "have their own abilities to run computations and they are a very important platform that we might want to",
    "start": "101909",
    "end": "109259"
  },
  {
    "text": "target the same type of functionalities so up until a few years ago maybe we add",
    "start": "109259",
    "end": "115200"
  },
  {
    "text": "things called browser plugins maybe remember ActiveX controls back in the days of Internet Explorer Google tried",
    "start": "115200",
    "end": "122700"
  },
  {
    "text": "something called the Native Client version and of course today javascript and web assembly basically became the de",
    "start": "122700",
    "end": "131009"
  },
  {
    "text": "facto standards we can go even higher in this hierarchy and think about cloud applications so",
    "start": "131009",
    "end": "137610"
  },
  {
    "text": "we're not running on some clothes machine we were running somewhere else on somebody else's computer and there we",
    "start": "137610",
    "end": "144240"
  },
  {
    "text": "have servers we have docker containers nodejs serverless type of cloud applications and all of these might have",
    "start": "144240",
    "end": "151440"
  },
  {
    "text": "to be targeted by the same type of apps and the same type of functionality especially the kind of apps which",
    "start": "151440",
    "end": "157830"
  },
  {
    "text": "require more compute and less of the data retrieval type of applications but",
    "start": "157830",
    "end": "165630"
  },
  {
    "text": "that's not all because these days we're seeing more and more and more platforms that are able and need and require",
    "start": "165630",
    "end": "171600"
  },
  {
    "text": "computation so we can think about our cars and I'm not even talking about things like autonomous vehicles which",
    "start": "171600",
    "end": "177420"
  },
  {
    "text": "have their own embedded systems but even a car entertainment systems car that",
    "start": "177420",
    "end": "183720"
  },
  {
    "text": "cannot run apps and interact with the user we have IOT devices robots and like I mentioned heterogeneous systems with",
    "start": "183720",
    "end": "190350"
  },
  {
    "text": "CPUs and GPUs so it's a very very wide ecosystem where we might want to target",
    "start": "190350",
    "end": "196470"
  },
  {
    "text": "our applications and that's what I mean when I talk about cross-platform when I",
    "start": "196470",
    "end": "202770"
  },
  {
    "text": "say what platforms are and I've actually had to write multiple applications which",
    "start": "202770",
    "end": "207989"
  },
  {
    "text": "targeted many of many subsets of this type these types of architectures so and",
    "start": "207989",
    "end": "213300"
  },
  {
    "text": "my claim is that since e+ are probably the only viable languages for true cross-platform development because many",
    "start": "213300",
    "end": "219360"
  },
  {
    "text": "of these environments have there might have their own sort of native languages",
    "start": "219360",
    "end": "225630"
  },
  {
    "text": "which you have to you might need to work with like objective-c or Swift or or Java but that's generally doesn't",
    "start": "225630",
    "end": "233910"
  },
  {
    "text": "generalize to to other platforms so the",
    "start": "233910",
    "end": "242190"
  },
  {
    "start": "241000",
    "end": "355000"
  },
  {
    "text": "main issue that you see when you go and try to figure out ok how do i structure my application how do i structure my",
    "start": "242190",
    "end": "248720"
  },
  {
    "text": "system in such a way then you go to all these popular websites that give a lot",
    "start": "248720",
    "end": "253800"
  },
  {
    "text": "of very good advice with from there's some very smart people but generally the kind of code and examples you see there",
    "start": "253800",
    "end": "260940"
  },
  {
    "text": "is the very it's a mixture it's a big spaghetti ball of",
    "start": "260940",
    "end": "266970"
  },
  {
    "text": "nation of SDKs and API and techniques and algorithms and it's very difficult to separate the functional parts from",
    "start": "266970",
    "end": "274170"
  },
  {
    "text": "the business logic from the API from the platform-specific from the cross-platform part so and that",
    "start": "274170",
    "end": "280470"
  },
  {
    "text": "makes the code the resulting code really very difficult to refactor very difficult to maintain it's generally non",
    "start": "280470",
    "end": "286260"
  },
  {
    "text": "totally and non portable and of course the things like the stability or and",
    "start": "286260",
    "end": "292560"
  },
  {
    "text": "fixing bugs become so much more difficult and one other aspect that's",
    "start": "292560",
    "end": "298110"
  },
  {
    "text": "not generally considered is the mixing of skills so we might have an app",
    "start": "298110",
    "end": "303780"
  },
  {
    "text": "developer that's like a superstar in writing iPhone apps or maybe some kind",
    "start": "303780",
    "end": "310290"
  },
  {
    "text": "of web applications but he doesn't he or she are not necessarily capable of doing",
    "start": "310290",
    "end": "316460"
  },
  {
    "text": "some complicated business logic or they're not the right person to think about other aspects so we want some kind",
    "start": "316460",
    "end": "324300"
  },
  {
    "text": "of methodology that can allow us to separate these aspects in a clean and clear way and on top of all these issues",
    "start": "324300",
    "end": "331800"
  },
  {
    "text": "we have things like module boundaries where we're actually running multiple types of binaries on the same systems",
    "start": "331800",
    "end": "337800"
  },
  {
    "text": "and we have to see what happens along these boundaries because things like exceptions don't percolate between let's",
    "start": "337800",
    "end": "344400"
  },
  {
    "text": "say dll's and host application so there's a whole there's a whole lot of things we need to think about when we",
    "start": "344400",
    "end": "350370"
  },
  {
    "text": "were structuring a system in this way now the system I I want to show you I",
    "start": "350370",
    "end": "359010"
  },
  {
    "start": "355000",
    "end": "388000"
  },
  {
    "text": "called it I finally called it the salami method because it's based about slicing our system so thin that everything",
    "start": "359010",
    "end": "365880"
  },
  {
    "text": "becomes very easy to understand it is it it's very easy to build it can it's very",
    "start": "365880",
    "end": "371490"
  },
  {
    "text": "easy to maintain and also built by different people so different people",
    "start": "371490",
    "end": "376620"
  },
  {
    "text": "with different skills can maintain separate layers but every layer is generally very very thin and very clear and does only want one thing which make",
    "start": "376620",
    "end": "385169"
  },
  {
    "text": "it very makes it transparent and it's very easy to maintain so the benefits",
    "start": "385169",
    "end": "391919"
  },
  {
    "start": "388000",
    "end": "516000"
  },
  {
    "text": "that we're getting and I'm running through because we don't have a lot of time is at first the first and foremost",
    "start": "391919",
    "end": "397890"
  },
  {
    "text": "is what with the dry principle if you have you heard about the dragons but don't repeat yourself so we're not we're going to try",
    "start": "397890",
    "end": "405040"
  },
  {
    "text": "and keep the most common stuff common to all our system so that includes things",
    "start": "405040",
    "end": "410230"
  },
  {
    "text": "like business logic and a lot of because I've seen a mobile applications where",
    "start": "410230",
    "end": "415720"
  },
  {
    "text": "you add the team of iOS developers and a totally separate team of Android developers and they were basically",
    "start": "415720",
    "end": "421560"
  },
  {
    "text": "duplicating the complete app for these different platforms and of course if you fix a bug you find a bug in one version",
    "start": "421560",
    "end": "428170"
  },
  {
    "text": "it then somebody else needs to go and find to check whether the bug actually exists in the second codebase and then",
    "start": "428170",
    "end": "434770"
  },
  {
    "text": "to fix it separately instead of fixing it once and having it automatically automatically deploy to the rest of the",
    "start": "434770",
    "end": "440140"
  },
  {
    "text": "system and again the transparency which really comes from the single",
    "start": "440140",
    "end": "445210"
  },
  {
    "text": "responsibility and testability so what whenever our systems has very clear",
    "start": "445210",
    "end": "450510"
  },
  {
    "text": "roles and very clear targets then everything is much easier to maintain and to test and of course the business",
    "start": "450510",
    "end": "457900"
  },
  {
    "text": "logic is totally isolated in because I said as a by-product it means",
    "start": "457900",
    "end": "463480"
  },
  {
    "text": "that whenever there's a new system let's say windows mobile operating systems become the hot thing of 9th of 2019",
    "start": "463480",
    "end": "470640"
  },
  {
    "text": "suddenly then our system is almost ready we just need to pull in the new UI stuff",
    "start": "470640",
    "end": "475990"
  },
  {
    "text": "and and we can very bootstrap very quickly and be target ready or on the",
    "start": "475990",
    "end": "481060"
  },
  {
    "text": "other hand we might be able to target I had clients that had desktop applications and they want to suddenly",
    "start": "481060",
    "end": "487210"
  },
  {
    "text": "run it in the browser at the client-side browser and this type of architecture",
    "start": "487210",
    "end": "493210"
  },
  {
    "text": "makes it almost trivial to do so there's a lot of promise here and I'm going to show you and of course I'll be happy to",
    "start": "493210",
    "end": "500100"
  },
  {
    "text": "take questions as I said developer skills so we can have different people",
    "start": "500100",
    "end": "505180"
  },
  {
    "text": "working on different aspects each one maximizing the strength and their skills and it's good for the company it's good",
    "start": "505180",
    "end": "510640"
  },
  {
    "text": "for the developers it's good for the system and making everything very easily reflectable now this is the gist of the",
    "start": "510640",
    "end": "519280"
  },
  {
    "start": "516000",
    "end": "617000"
  },
  {
    "text": "talk right so if you take one thing away from this talk and you wanna print out just this part just this table and it",
    "start": "519280",
    "end": "525670"
  },
  {
    "text": "will help you remember what I was trying to say and it basically shows the layer",
    "start": "525670",
    "end": "531790"
  },
  {
    "text": "these layers that I'm talking about that I'll go over one by one during the talk so at the bottom we have the clock",
    "start": "531790",
    "end": "538389"
  },
  {
    "text": "cross-platform core which is really the business logic and at the top we have the host application so that would be",
    "start": "538389",
    "end": "545290"
  },
  {
    "text": "the UI part the things that the user interacts with and in between we're",
    "start": "545290",
    "end": "550810"
  },
  {
    "text": "going to talk about the different aspects that we have to consider now the important thing to remember is that not",
    "start": "550810",
    "end": "557620"
  },
  {
    "text": "every application is going to need every layer as a separate implementation there",
    "start": "557620",
    "end": "563790"
  },
  {
    "text": "this is very similar to if you know the OSI networking layer concept it's the",
    "start": "563790",
    "end": "569560"
  },
  {
    "text": "same thing some application might actually produce thick use thicker slices but the aspect that I'm going to",
    "start": "569560",
    "end": "575350"
  },
  {
    "text": "talk about do exist in every system and a common question that I get sometimes",
    "start": "575350",
    "end": "581290"
  },
  {
    "text": "is yeah but I'm using things like swig or I'm using some kind of automatic code",
    "start": "581290",
    "end": "586959"
  },
  {
    "text": "generation system or some kind of abstraction there so what I'm going to talk about is if you're the one who's",
    "start": "586959",
    "end": "592720"
  },
  {
    "text": "designed this abstraction layer you're you're probably going to have to think about these things if you're working",
    "start": "592720",
    "end": "597970"
  },
  {
    "text": "with something swig or in Skipton then maybe you can skip up some of these layers for example objective-c can",
    "start": "597970",
    "end": "604029"
  },
  {
    "text": "handle C++ code directly so you don't need multiple layers but that's one of",
    "start": "604029",
    "end": "609250"
  },
  {
    "text": "the reason we're thinking about this in layers which build one on top of the other and each one brings us closer to",
    "start": "609250",
    "end": "615459"
  },
  {
    "text": "our target now the first layer we want to talk about is the cross-platform C++",
    "start": "615459",
    "end": "621819"
  },
  {
    "start": "617000",
    "end": "697000"
  },
  {
    "text": "core so this is where our business logic resides this is where we apply the best C++",
    "start": "621819",
    "end": "627459"
  },
  {
    "text": "design idioms we do we use our design patterns and the beautiful code coding",
    "start": "627459",
    "end": "634899"
  },
  {
    "text": "practices we have a bunch of unit tests and really the focus as I say here is in",
    "start": "634899",
    "end": "640449"
  },
  {
    "text": "solid maintainable well-designed architecture the things we're thinking about is how this is our company IP this",
    "start": "640449",
    "end": "647139"
  },
  {
    "text": "is the code that's going to go forward for years with our come within our company and we want it well maintained",
    "start": "647139",
    "end": "652870"
  },
  {
    "text": "and of course it's it's it should be cross plateau totally cross-platform and",
    "start": "652870",
    "end": "659230"
  },
  {
    "text": "but we know cnc plus was basically compiled to everything so that's generally not the main idea but we're",
    "start": "659230",
    "end": "665019"
  },
  {
    "text": "not going to insert we're not in AD platform-specific interactions",
    "start": "665019",
    "end": "670360"
  },
  {
    "text": "here so if we need some kind of more platform related things we abstract it",
    "start": "670360",
    "end": "675939"
  },
  {
    "text": "in such a way that we don't tie it down into the cross-platform part and",
    "start": "675939",
    "end": "681119"
  },
  {
    "text": "generally I use this is typically compiled into some kind of static",
    "start": "681119",
    "end": "686589"
  },
  {
    "text": "libraries so this is the the thing that maybe most of us enjoy the most writing and it's it we want to keep it elegant",
    "start": "686589",
    "end": "693999"
  },
  {
    "text": "and simple or at least maintainable now the second layer at the corner there we",
    "start": "693999",
    "end": "700929"
  },
  {
    "start": "697000",
    "end": "879000"
  },
  {
    "text": "can see those layers and now we just skipped from the bottom layer up to the second layer which I call the cross-platform public C++ interface now",
    "start": "700929",
    "end": "707699"
  },
  {
    "text": "this is kind of a shifty thing because many systems don't actually need this as",
    "start": "707699",
    "end": "714399"
  },
  {
    "text": "a separate layer but I do believe this is a true concern that you need to think about when you're designing when you're",
    "start": "714399",
    "end": "721209"
  },
  {
    "text": "trying to target multiple platforms and in this case this is the public C++ API",
    "start": "721209",
    "end": "727929"
  },
  {
    "text": "here we're trying we're starting to think of in services with starting to think in SDKs which is starting to think",
    "start": "727929",
    "end": "734319"
  },
  {
    "text": "about the users of our service so it's less about the internal architecture of",
    "start": "734319",
    "end": "739689"
  },
  {
    "text": "our code and more about how users are going to use our system from the API",
    "start": "739689",
    "end": "745149"
  },
  {
    "text": "point of view so in this in this case we're applying good API design principles and focusing on the consumers",
    "start": "745149",
    "end": "751329"
  },
  {
    "text": "and here which starting to think about how consumers are going to initialize and shut down some things like lifetime",
    "start": "751329",
    "end": "758079"
  },
  {
    "text": "management sessions how we're going to serialize and read things from files so",
    "start": "758079",
    "end": "763149"
  },
  {
    "text": "these are all issues that are generally more software practical soft practically",
    "start": "763149",
    "end": "769839"
  },
  {
    "text": "software related they're not necessarily related to the beautiful architecture of whatever we're designing it's also an",
    "start": "769839",
    "end": "776949"
  },
  {
    "text": "opportunity to for example hide proprietary code because this is something that we might give to a client",
    "start": "776949",
    "end": "783160"
  },
  {
    "text": "as a compiled dll or a compiled binary which they might link against although",
    "start": "783160",
    "end": "789309"
  },
  {
    "text": "this is still cross-platform C++ code but the client might be another team within the company so we want to reduce",
    "start": "789309",
    "end": "796179"
  },
  {
    "text": "for example some of the dependencies because the builds is unfortunately too complicated to",
    "start": "796179",
    "end": "803019"
  },
  {
    "text": "deploy to everyone or or things along this night we're hopefully we're going",
    "start": "803019",
    "end": "809170"
  },
  {
    "text": "to get modules so this is a very classical place to think about modules",
    "start": "809170",
    "end": "814839"
  },
  {
    "text": "because this is the things we want to expose to the outside users we don't need everything it's just what actually",
    "start": "814839",
    "end": "821230"
  },
  {
    "text": "usable for the user again the type of testing we do it this layer is mocking",
    "start": "821230",
    "end": "826449"
  },
  {
    "text": "and unit testing the API itself so we're not going to test that the functionality works because we've already done that",
    "start": "826449",
    "end": "832240"
  },
  {
    "text": "the previous layer but we want to make sure that building a session for example testing and working and making sure it",
    "start": "832240",
    "end": "838660"
  },
  {
    "text": "starts properly and initializes this is the right place to do it then the naming convention that I use",
    "start": "838660",
    "end": "844569"
  },
  {
    "text": "again this is just a recommendation of course you do whatever you like let's have some core CPP file then I generally",
    "start": "844569",
    "end": "850120"
  },
  {
    "text": "call it core API is dot CPP which is the thin layer typically on top of the the",
    "start": "850120",
    "end": "857040"
  },
  {
    "text": "basic C++ core and as I said before small projects and the example I'll show",
    "start": "857040",
    "end": "862089"
  },
  {
    "text": "you at the end actually might skip this because the basic c++ the core is",
    "start": "862089",
    "end": "867399"
  },
  {
    "text": "sufficient to to behave as this layer as well but again this is the concern that",
    "start": "867399",
    "end": "873040"
  },
  {
    "text": "exists everywhere so it's something that you might need to think about now at",
    "start": "873040",
    "end": "880990"
  },
  {
    "start": "879000",
    "end": "1131000"
  },
  {
    "text": "this point we get to the layer we're going to have to stop there is no more business logic from this point on when",
    "start": "880990",
    "end": "888100"
  },
  {
    "text": "we're going up the layer stack so at this point is we because we're nearing",
    "start": "888100",
    "end": "894309"
  },
  {
    "text": "the plat for the cross platform boundary it means that some systems that might",
    "start": "894309",
    "end": "900069"
  },
  {
    "text": "already interact directly with the public C++ API which we just saw so some",
    "start": "900069",
    "end": "905259"
  },
  {
    "text": "target systems are not going to go further so that means that we can't keep any business logic out of this out of",
    "start": "905259",
    "end": "912670"
  },
  {
    "text": "here because we don't want to duplicate and we don't want to to have inconsistencies",
    "start": "912670",
    "end": "918490"
  },
  {
    "text": "so the third layer which is the still cross-platform in the sense that it's",
    "start": "918490",
    "end": "926129"
  },
  {
    "text": "here it's the C API so now we're moving from C++ to C and we're trying to expose",
    "start": "926129",
    "end": "933220"
  },
  {
    "text": "the more general or more powerful C++ API switch might be object-oriented or use some higher stronger typeset type",
    "start": "933220",
    "end": "942339"
  },
  {
    "text": "system and and such an NSC a more capi because really C is the basic library",
    "start": "942339",
    "end": "950079"
  },
  {
    "text": "there is no hardware that doesn't have C compiler right even if it there's no C pluses anything from the tiniest",
    "start": "950079",
    "end": "956639"
  },
  {
    "text": "microprocessor for it for the washing machines generally has a C compiler so",
    "start": "956639",
    "end": "962110"
  },
  {
    "text": "if we need to go to the lowest level or e or for example interact with other languages for example we want to expose",
    "start": "962110",
    "end": "968560"
  },
  {
    "text": "to Python or some ruby or many other scripting languages then generally working through dll's with a capi is",
    "start": "968560",
    "end": "976800"
  },
  {
    "text": "pretty much in many cases the only way to do it so in this layer we're going to take the",
    "start": "976800",
    "end": "983050"
  },
  {
    "text": "public C++ API we saw before we're going to wrap it again in very very thin represent we're going to see some",
    "start": "983050",
    "end": "988240"
  },
  {
    "text": "examples to give you so that I'm not just hand waving here and expose this",
    "start": "988240",
    "end": "993699"
  },
  {
    "text": "capi which is much easier to bring up to the cross-platform level so in this case",
    "start": "993699",
    "end": "1000569"
  },
  {
    "text": "we're using externally would use externally for linking ABI a be as is the application binary interface it's",
    "start": "1000569",
    "end": "1005970"
  },
  {
    "text": "four-seat standardized and most compilers can interact and build them",
    "start": "1005970",
    "end": "1011339"
  },
  {
    "text": "without it doesn't matter which compiler you use what compiler settings the ABI is stable and things like type",
    "start": "1011339",
    "end": "1019500"
  },
  {
    "text": "conversions now we have to start thinking about lowering the type strength of our system to be the basic",
    "start": "1019500",
    "end": "1026280"
  },
  {
    "text": "primitive c types so this is the place where we do the type conversions and again it's very it's this is the place",
    "start": "1026280",
    "end": "1034350"
  },
  {
    "text": "where we do it so we don't need to think to have to lower the type safety of all",
    "start": "1034350",
    "end": "1039780"
  },
  {
    "text": "of our system we just did in this very isolated in some very isolated places so we have much more control and less",
    "start": "1039780",
    "end": "1045900"
  },
  {
    "text": "chances of messing out messing about so if we want to move from strings to 2",
    "start": "1045900",
    "end": "1051419"
  },
  {
    "text": "character arrays we know where it happens and we can manage that and I'll show you some examples in just a minute",
    "start": "1051419",
    "end": "1057350"
  },
  {
    "text": "as I said object lifetime management that's kind of the most difficult thing",
    "start": "1057350",
    "end": "1062610"
  },
  {
    "text": "we need to think about when you're using C and there is no object there's no shared pointers and we have to think",
    "start": "1062610",
    "end": "1068660"
  },
  {
    "text": "about allocations maybe we used in Global's or single terms we can use opaque handles there",
    "start": "1068660",
    "end": "1074330"
  },
  {
    "text": "are many ways to do it and it's this is the place to think about them now",
    "start": "1074330",
    "end": "1079390"
  },
  {
    "text": "things like C++ can overload on the same function name secant so we have to start",
    "start": "1079390",
    "end": "1084890"
  },
  {
    "text": "changing function names again with the regards to testing we can mark and unit",
    "start": "1084890",
    "end": "1091370"
  },
  {
    "text": "tests the C API generally very simple because we're not doing actual functionality testing it's just making",
    "start": "1091370",
    "end": "1097730"
  },
  {
    "text": "sure the API performs the way we think it we want it to and the nice thing is",
    "start": "1097730",
    "end": "1104360"
  },
  {
    "text": "that since in Syrians if as we separate between headers and implementations of this the header files this the API",
    "start": "1104360",
    "end": "1111560"
  },
  {
    "text": "itself can be very C like and very low level but in the implementation we might",
    "start": "1111560",
    "end": "1118340"
  },
  {
    "text": "immediately go to lift up the types using things like STD span which is gorgeous l span coming up in c + s 20 or",
    "start": "1118340",
    "end": "1125510"
  },
  {
    "text": "moving directly to or string views as views to array so immediately we're listening and let's see some examples",
    "start": "1125510",
    "end": "1131150"
  },
  {
    "start": "1131000",
    "end": "1281000"
  },
  {
    "text": "just to make it a little bit more concrete so we have a typical something",
    "start": "1131150",
    "end": "1138320"
  },
  {
    "text": "header file it has four functions there inside the externally because we want the seemed ABI and have four four",
    "start": "1138320",
    "end": "1146450"
  },
  {
    "text": "functions the first two in the C we will see in the implementation in a minute",
    "start": "1146450",
    "end": "1152240"
  },
  {
    "text": "but we see they were both called in it something because C can't overload on the same function and this is a this",
    "start": "1152240",
    "end": "1159290"
  },
  {
    "text": "what it would typically look like now the way I think about the see in the air quotes is that like to think about it",
    "start": "1159290",
    "end": "1166250"
  },
  {
    "text": "it's not really it doesn't have to be like to see it can be you say I kept the string here although I might use a",
    "start": "1166250",
    "end": "1172340"
  },
  {
    "text": "character star and I'll show in a minute why I did it it's just because I wanted to have different examples within the",
    "start": "1172340",
    "end": "1178640"
  },
  {
    "text": "same snippet so let's say we have process buffer which takes a pointer and",
    "start": "1178640",
    "end": "1184160"
  },
  {
    "text": "a size and the way we might implement this type of thing again it looks like a",
    "start": "1184160",
    "end": "1191030"
  },
  {
    "text": "wall of code but there's actually very little code here this is just the implementation of of the four functions",
    "start": "1191030",
    "end": "1196730"
  },
  {
    "text": "we include the relevant headers and in this case I just have one object it's",
    "start": "1196730",
    "end": "1202050"
  },
  {
    "text": "a global object so think about it it lives in the DLL memory space and it's it are allocated once I can initialize",
    "start": "1202050",
    "end": "1208920"
  },
  {
    "text": "it process some buffer and ask it whether it's ready so the implementations are generally just",
    "start": "1208920",
    "end": "1214320"
  },
  {
    "text": "calling the member functions of this global object of course if we need to handle multiple objects we would need",
    "start": "1214320",
    "end": "1220650"
  },
  {
    "text": "something like shared pointers or a proper opaque handle management and in",
    "start": "1220650",
    "end": "1228000"
  },
  {
    "text": "case we don't have default constructors then we might use a CD optional or unique pointer if we want to allocate it",
    "start": "1228000",
    "end": "1233850"
  },
  {
    "text": "on the hip again this is the place to think about it it's very difficult to get lost because all the functions are",
    "start": "1233850",
    "end": "1239580"
  },
  {
    "text": "extremely thin I'm not doing anything very complicated here so we're just",
    "start": "1239580",
    "end": "1245670"
  },
  {
    "text": "calling you see there is one method called init here and another in it here but they have different arguments so I'm",
    "start": "1245670",
    "end": "1251700"
  },
  {
    "text": "actually that's why I needed to change their names process buffer like I",
    "start": "1251700",
    "end": "1257430"
  },
  {
    "text": "mentioned uses STD span so immediately already in the implementation of this Lam I'm lifting my pointer plus size",
    "start": "1257430",
    "end": "1264300"
  },
  {
    "text": "into a higher level abstraction a stronger type which means that everything underneath would be more type",
    "start": "1264300",
    "end": "1270420"
  },
  {
    "text": "safe and more strongly typed right questions does that make sense",
    "start": "1270420",
    "end": "1279260"
  },
  {
    "text": "all right so up to now we we moved up to",
    "start": "1279260",
    "end": "1284820"
  },
  {
    "start": "1281000",
    "end": "1322000"
  },
  {
    "text": "the middle of our diagram and everything up to here was cross-platform so the",
    "start": "1284820",
    "end": "1291210"
  },
  {
    "text": "blue part is cross-platform code which generally compiles on all of our target",
    "start": "1291210",
    "end": "1297680"
  },
  {
    "text": "target platforms now we're going to move into the realm of non cross-platform",
    "start": "1297680",
    "end": "1304890"
  },
  {
    "text": "code and see how we're going to structure that in such a way that we can leverage and still may get the",
    "start": "1304890",
    "end": "1309900"
  },
  {
    "text": "manageability and maintainability refactor ability to stability that we were discussing in the more that form",
    "start": "1309900",
    "end": "1319530"
  },
  {
    "text": "specific way right so the next layer is",
    "start": "1319530",
    "end": "1325530"
  },
  {
    "start": "1322000",
    "end": "1482000"
  },
  {
    "text": "what I call the platform boundary interface layer and as I said this is",
    "start": "1325530",
    "end": "1330540"
  },
  {
    "text": "where we're actually going to start touching platform-specific so this is where we might have different",
    "start": "1330540",
    "end": "1336009"
  },
  {
    "text": "developers interacting with our code not necessarily because often you need",
    "start": "1336009",
    "end": "1342279"
  },
  {
    "text": "something that's very someone who is specializes in knowing how to do inter up between the platform and in the code",
    "start": "1342279",
    "end": "1349419"
  },
  {
    "text": "but still it's it you might separate somebody might do the the web targeting and somebody else might do the mobile",
    "start": "1349419",
    "end": "1355389"
  },
  {
    "text": "app and at this point we're starting to think about conventions and constraints",
    "start": "1355389",
    "end": "1362619"
  },
  {
    "text": "that come from the target platform so we might have to convert between types because not for example JavaScript",
    "start": "1362619",
    "end": "1369489"
  },
  {
    "text": "support only doubles right and and the C++ or C we have integers we have float we have multiple different types of",
    "start": "1369489",
    "end": "1376029"
  },
  {
    "text": "numbers and this is where we have to think about them and we'll see it some examples in a minute",
    "start": "1376029",
    "end": "1382149"
  },
  {
    "text": "similarly things like conventions like function and meaning if anybody is here done any and decay Android targeting",
    "start": "1382149",
    "end": "1390100"
  },
  {
    "text": "then you know the functions need to be named in a certain way and there's there are certain data types that you used to",
    "start": "1390100",
    "end": "1395830"
  },
  {
    "text": "do this type of J in high interaction so this is where we do and also one it's a",
    "start": "1395830",
    "end": "1402340"
  },
  {
    "text": "great place to set up a lot logging logic so there are many logging libraries that have very generic",
    "start": "1402340",
    "end": "1408999"
  },
  {
    "text": "backends that you can cross platform and then only hook in platform specific",
    "start": "1408999",
    "end": "1414039"
  },
  {
    "text": "implementations at the beginning so this is the great place to hook in your",
    "start": "1414039",
    "end": "1419350"
  },
  {
    "text": "logging infrastructure for each particular platform and still get the same logging infrastructure underneath",
    "start": "1419350",
    "end": "1424659"
  },
  {
    "text": "that works for all platforms this is our",
    "start": "1424659",
    "end": "1429820"
  },
  {
    "text": "module boundary right you know the world because this is where really the last",
    "start": "1429820",
    "end": "1435779"
  },
  {
    "text": "the last place where we're going to see C and C++ so we have to think about interoperability with the external",
    "start": "1435779",
    "end": "1442480"
  },
  {
    "text": "system and things like exceptions can't escape so we need to catch them and",
    "start": "1442480",
    "end": "1447789"
  },
  {
    "text": "handle them and understand think how are we going to percolate errors how do report errors do we report errors do we",
    "start": "1447789",
    "end": "1454929"
  },
  {
    "text": "just crash so these are all things that we need to think about and regarding to testing I don't know this is a I have an",
    "start": "1454929",
    "end": "1463480"
  },
  {
    "text": "open question on Stack Overflow with no answers for the past probably five or six years I don't know",
    "start": "1463480",
    "end": "1469840"
  },
  {
    "text": "how to test this part so if you have an idea come and talk to me",
    "start": "1469840",
    "end": "1475900"
  },
  {
    "text": "and yeah so naming is pretty obvious and trivial and let's see some examples",
    "start": "1475900",
    "end": "1482020"
  },
  {
    "start": "1482000",
    "end": "1613000"
  },
  {
    "text": "so we have the same what I'm going to use the same example I used before we want to expose our food session",
    "start": "1482020",
    "end": "1488860"
  },
  {
    "text": "functions to for Windows or Linux DLL or shared object file and in this case most",
    "start": "1488860",
    "end": "1497049"
  },
  {
    "text": "of the the code here is code that comes from the platform so we are might have some kind of defined called DLL export",
    "start": "1497049",
    "end": "1503559"
  },
  {
    "text": "which is set to DLL import or export by actually I've seen Mac generate this stuff for me so but it's typical the way",
    "start": "1503559",
    "end": "1513400"
  },
  {
    "text": "you do shared objects on Windows or on Linux and again we have to append this",
    "start": "1513400",
    "end": "1518890"
  },
  {
    "text": "some kind of name so we don't have name collisions within the DLL system and for",
    "start": "1518890",
    "end": "1525130"
  },
  {
    "text": "example on Windows I chose the filename is the LPC STR which is a win32 string string type",
    "start": "1525130",
    "end": "1533919"
  },
  {
    "text": "I just wanted to show because here we already live inside the platform-specific code so it's okay to",
    "start": "1533919",
    "end": "1539679"
  },
  {
    "text": "use the more native or more if we're doing iOS it would be on or in a string",
    "start": "1539679",
    "end": "1544900"
  },
  {
    "text": "or something that write an objective-c so that that's the type it's okay to use",
    "start": "1544900",
    "end": "1553360"
  },
  {
    "text": "this one because we're already are doing a platform-specific code now let's say we let's look at the implementation so",
    "start": "1553360",
    "end": "1559090"
  },
  {
    "text": "again looks like a little bit like a wall of code but there's really just four lines here if you look just at the returns it's just calling the functions",
    "start": "1559090",
    "end": "1566110"
  },
  {
    "text": "we saw before and for example we can see that this function just passes the LPC",
    "start": "1566110",
    "end": "1574150"
  },
  {
    "text": "string file name into the init from file name and windows automatically converts",
    "start": "1574150",
    "end": "1579400"
  },
  {
    "text": "that work to a car strength for an STD string and the rest are simple calls so",
    "start": "1579400",
    "end": "1587140"
  },
  {
    "text": "there is no surprise here no surprises here let's see another example oh by the",
    "start": "1587140",
    "end": "1594340"
  },
  {
    "text": "way I'm using what's called the try block I try a function try block you see",
    "start": "1594340",
    "end": "1599740"
  },
  {
    "text": "that the try the catcher outside the main body of the I like to doing you I like using using",
    "start": "1599740",
    "end": "1606460"
  },
  {
    "text": "that style when writing the LS and I'll show an example in a minute why but it's kind of an obscure feature",
    "start": "1606460",
    "end": "1612820"
  },
  {
    "text": "nobody knows so this is the same the same code that's targeted to Android and",
    "start": "1612820",
    "end": "1619360"
  },
  {
    "text": "it looks like a lot of code but 99% of it is mandatory by the j'ni convention so I didn't I didn't have I don't have",
    "start": "1619360",
    "end": "1626950"
  },
  {
    "text": "any extra code that I had to write it's ugly but the ugliness stays in this file that's the main thing with the pasta",
    "start": "1626950",
    "end": "1633100"
  },
  {
    "text": "code that the ugliness is contained only in this file where I do have to do the",
    "start": "1633100",
    "end": "1638440"
  },
  {
    "text": "Jana interaction and you know you need to have this macro at the beginning we",
    "start": "1638440",
    "end": "1643600"
  },
  {
    "text": "have to use j4j boolean or J object and all these types that come from the Jana",
    "start": "1643600",
    "end": "1649090"
  },
  {
    "text": "the Java di system for the names have to be appended with the Java underscore so",
    "start": "1649090",
    "end": "1657450"
  },
  {
    "text": "it's very similar to what we just saw when we were targeting windows dll's but",
    "start": "1657450",
    "end": "1663190"
  },
  {
    "text": "it uses the conventions from and constraints coming from the Android JVM",
    "start": "1663190",
    "end": "1668740"
  },
  {
    "text": "so for example if you're passing it we saw in it from filename requires a",
    "start": "1668740",
    "end": "1673750"
  },
  {
    "text": "string but this string is actually going to come from Java it comes from the JVM the Java Virtual Machine and the way we",
    "start": "1673750",
    "end": "1680320"
  },
  {
    "text": "need to get the characters of a string requires some work involving the environment with the environment is like",
    "start": "1680320",
    "end": "1686830"
  },
  {
    "text": "the hook into the JVM so I'm using some kind of helper r-iii",
    "start": "1686830",
    "end": "1693120"
  },
  {
    "text": "utilities that I wrote to help me get this string and converted to as to displaying it then that the function",
    "start": "1693120",
    "end": "1698830"
  },
  {
    "text": "it's going to be released properly from the JVM similarly I have something",
    "start": "1698830",
    "end": "1704380"
  },
  {
    "text": "called the Jenny byte array adapter which again is the IRA buffer tool to",
    "start": "1704380",
    "end": "1709510"
  },
  {
    "text": "get to let me access and really keep the code as short as possible there is it's",
    "start": "1709510",
    "end": "1715450"
  },
  {
    "text": "very difficult to write something shorter than this when really each function is but it's just one or a line",
    "start": "1715450",
    "end": "1722080"
  },
  {
    "text": "or two lines of code right so it's ugly but the ugliness comes from the",
    "start": "1722080",
    "end": "1727210"
  },
  {
    "text": "interaction and from the target system it's not our code this is the it's as",
    "start": "1727210",
    "end": "1732340"
  },
  {
    "text": "maintainable can be and interesting thing here you can see with the function try blocks I'm actually",
    "start": "1732340",
    "end": "1739060"
  },
  {
    "text": "returning something called exception handler which is a special class that I wrote which handles the exceptions for",
    "start": "1739060",
    "end": "1747100"
  },
  {
    "text": "all of these things similarly and in fact what it does it catches the simplest last exception and creates a",
    "start": "1747100",
    "end": "1754450"
  },
  {
    "text": "java exception on the JVM and copies the information into that Java exception and",
    "start": "1754450",
    "end": "1760360"
  },
  {
    "text": "then percolates the exception in Java so whoever is going to be using that it's going to be able to catch an exception",
    "start": "1760360",
    "end": "1766290"
  },
  {
    "text": "within the JVM not knowing that this was actually translated from a court",
    "start": "1766290",
    "end": "1771550"
  },
  {
    "text": "exception inside the C++ code but of course you can put any handler you want you can just return false or whatever",
    "start": "1771550",
    "end": "1779010"
  },
  {
    "text": "right so our next layer is this is like",
    "start": "1779820",
    "end": "1785350"
  },
  {
    "start": "1780000",
    "end": "1970000"
  },
  {
    "text": "we're not in Kansas anymore okay so we're not this I know this is zipper sauce conference but now we're totally",
    "start": "1785350",
    "end": "1790930"
  },
  {
    "text": "in alien territory this is we're already on the target platform right so this is",
    "start": "1790930",
    "end": "1797770"
  },
  {
    "text": "the in this case we have it we're running on on the device itself this can",
    "start": "1797770",
    "end": "1804400"
  },
  {
    "text": "be a mobile phone we have different hardware a different operating system different language different conventions",
    "start": "1804400",
    "end": "1809860"
  },
  {
    "text": "different styles different idioms running at the same code and most of",
    "start": "1809860",
    "end": "1816850"
  },
  {
    "text": "these target systems have what I find I call I kind of ironically the native",
    "start": "1816850",
    "end": "1821890"
  },
  {
    "text": "native interface because the word native is overloaded with two totally opposite",
    "start": "1821890",
    "end": "1827400"
  },
  {
    "text": "interpretations because if you think about it iOS the native language for",
    "start": "1827400",
    "end": "1832510"
  },
  {
    "text": "development on our eyes would be a swift or objective-c in android the native thing you develop is like for the net",
    "start": "1832510",
    "end": "1839500"
  },
  {
    "text": "developers who are working for that platform will be Java but in fact all of these languages they call what they call",
    "start": "1839500",
    "end": "1846430"
  },
  {
    "text": "native is really sick code which is touching the bare metal of the processor",
    "start": "1846430",
    "end": "1851530"
  },
  {
    "text": "so that's why it's kind of ironic that the word native really talks about both things simulate simultaneously and this",
    "start": "1851530",
    "end": "1858820"
  },
  {
    "text": "is what we're going to use then it's the native native interface so it's how the local platform the platform specific SDK",
    "start": "1858820",
    "end": "1865780"
  },
  {
    "text": "allows us to load these load this native code or C++ code into",
    "start": "1865780",
    "end": "1872370"
  },
  {
    "text": "our binary and that usually allows us to do some kind of reflection of the",
    "start": "1872370",
    "end": "1878850"
  },
  {
    "text": "functionality and it's very very very low level because we saw most of the systems only interact at the sea level",
    "start": "1878850",
    "end": "1884630"
  },
  {
    "text": "so the kind of testing we do here of course is integration testing we can",
    "start": "1884630",
    "end": "1890190"
  },
  {
    "text": "write a kind of test suite with our target platform loading this DLL or",
    "start": "1890190",
    "end": "1895380"
  },
  {
    "text": "loading this code and checking that it works and of course the filenames here or do you see we can have Java or C",
    "start": "1895380",
    "end": "1903360"
  },
  {
    "text": "sharp or JavaScript so we're not even there's no more C++ here and let's see",
    "start": "1903360",
    "end": "1909090"
  },
  {
    "text": "an example this is a very variable example it's this is Java but I think the c-sharp is almost exactly the same",
    "start": "1909090",
    "end": "1916350"
  },
  {
    "text": "so we have some kind of public class foo session we call the system load library",
    "start": "1916350",
    "end": "1922170"
  },
  {
    "text": "with the name of the DLL we load it and then we define these public static native functions which just expose the",
    "start": "1922170",
    "end": "1929400"
  },
  {
    "text": "DLL function so if you've ever loaded then I dynamic library function this is what it looks like",
    "start": "1929400",
    "end": "1935520"
  },
  {
    "text": "the interesting part as you can see that we have the define name now this is the Capitol's as string which is a Java type",
    "start": "1935520",
    "end": "1942510"
  },
  {
    "text": "this is the Java string it's not a character array or when we want to pass",
    "start": "1942510",
    "end": "1947850"
  },
  {
    "text": "an array of bytes it's a byte array buffer so this is already the Java world",
    "start": "1947850",
    "end": "1952890"
  },
  {
    "text": "and our Jana interface took care of making the conversions and we converted from the j'ni types to our C++ types",
    "start": "1952890",
    "end": "1959940"
  },
  {
    "text": "wherever it was necessary so this is really a direct mapping of the j'ni",
    "start": "1959940",
    "end": "1966350"
  },
  {
    "text": "interface in this example now the last",
    "start": "1966350",
    "end": "1971790"
  },
  {
    "start": "1970000",
    "end": "2223000"
  },
  {
    "text": "layer that we have to what I generally like to write is what I call this the",
    "start": "1971790",
    "end": "1977640"
  },
  {
    "text": "interface wrappers because as we saw every platform has its own idioms I",
    "start": "1977640",
    "end": "1985200"
  },
  {
    "text": "mentioned this before they have their own style their own types that people the developers are comfortable working",
    "start": "1985200",
    "end": "1990840"
  },
  {
    "text": "with and very often these low-level interfaces that come from the dealer are not don't necessarily fit the mindset of",
    "start": "1990840",
    "end": "1999090"
  },
  {
    "text": "the developer they don't they to low level and they you don't want your developers messing about with such",
    "start": "1999090",
    "end": "2005480"
  },
  {
    "text": "low level and this type of low level types leaking into the main application",
    "start": "2005480",
    "end": "2011090"
  },
  {
    "text": "code so I generally like to add this interface wrapper layer which allows us",
    "start": "2011090",
    "end": "2018260"
  },
  {
    "text": "to let our users work within their normal comfortable zone of types and and",
    "start": "2018260",
    "end": "2025250"
  },
  {
    "text": "things the way as they're used for each particular platform so I'm going to show",
    "start": "2025250",
    "end": "2030409"
  },
  {
    "text": "an example because it will make a lot more sense so this example actually uses slightly different it's not these are",
    "start": "2030409",
    "end": "2037279"
  },
  {
    "text": "not the same functions we saw before but it's the same concept let's say we have a class that is this a",
    "start": "2037279",
    "end": "2043100"
  },
  {
    "text": "face detector for some video processing application so it reads there's a some",
    "start": "2043100",
    "end": "2049908"
  },
  {
    "text": "kind of video stream analysis and we want to extract where there is a face and that the algorithm actually does the",
    "start": "2049909",
    "end": "2055790"
  },
  {
    "text": "face detection and returns the position of the face so at first this is the Java code for Android right so we're going to",
    "start": "2055790",
    "end": "2063560"
  },
  {
    "text": "load the DLL it's called the native face detector and we are going to expose this function called get face center point I",
    "start": "2063560",
    "end": "2070730"
  },
  {
    "text": "remember this is just Jenna the Jane ID version and since it uses the center",
    "start": "2070730",
    "end": "2075980"
  },
  {
    "text": "face the only thing it can really return is an array of float because it's very low-level it's only primitive C++ types",
    "start": "2075980",
    "end": "2083169"
  },
  {
    "text": "but this but working with a float array that has to be a size two and it",
    "start": "2083169",
    "end": "2089108"
  },
  {
    "text": "represents the x and y coordinates of the face is not very comfortable for",
    "start": "2089109",
    "end": "2094368"
  },
  {
    "text": "somebody who's developing a UI and needs to draw a square there for example so it's not it's too low-level and it ruins",
    "start": "2094369",
    "end": "2101210"
  },
  {
    "text": "the obstruction so the the interface",
    "start": "2101210",
    "end": "2106490"
  },
  {
    "text": "layer the interface layer that the native interface layer that I'm talking",
    "start": "2106490",
    "end": "2112760"
  },
  {
    "text": "about is really about adding this additional function so you see it's in the same file it's not even separate implementation file and right now I'm",
    "start": "2112760",
    "end": "2119990"
  },
  {
    "text": "actually using the conventions of the platform so maybe my function names",
    "start": "2119990",
    "end": "2125300"
  },
  {
    "text": "would be with the uppercase get face center point and the return type is in fact not an area of floats but it's",
    "start": "2125300",
    "end": "2133369"
  },
  {
    "text": "something called which comes from the Android graphics library and our user I could actually",
    "start": "2133369",
    "end": "2141020"
  },
  {
    "text": "make this private or something like that so the user doesn't even know that this",
    "start": "2141020",
    "end": "2146420"
  },
  {
    "text": "dysfunction exists and they only interact with this high level function now you might think that why is the",
    "start": "2146420",
    "end": "2153260"
  },
  {
    "text": "actually why is he showing us this because that's it's so trivial and obvious and maybe mind if my api's are",
    "start": "2153260",
    "end": "2161390"
  },
  {
    "text": "sufficiently good that my users are smart enough and they can use the low",
    "start": "2161390",
    "end": "2166670"
  },
  {
    "text": "level like the eyes but in fact most of Android is implemented this way I mean",
    "start": "2166670",
    "end": "2172010"
  },
  {
    "text": "Android isn't written in Java only the apps are written in Java Android is the C++ it's a Linux system written in C and",
    "start": "2172010",
    "end": "2179060"
  },
  {
    "text": "C++ and most of the hardware api's are actually implemented in scene C++ and exposed via the Android SDK in exactly",
    "start": "2179060",
    "end": "2187130"
  },
  {
    "text": "this way so we are there are good examples and you can see that even if",
    "start": "2187130",
    "end": "2193130"
  },
  {
    "text": "you used to working in Java with this these high-level API functions really",
    "start": "2193130",
    "end": "2198290"
  },
  {
    "text": "underneath what they're doing is this type of conversion so we're bringing the",
    "start": "2198290",
    "end": "2203630"
  },
  {
    "text": "low-level c-type interfaces into the high level java class type system okay",
    "start": "2203630",
    "end": "2209690"
  },
  {
    "text": "so I think that's the important thing to remember it it might appear almost very loose and trivial and thin and but but",
    "start": "2209690",
    "end": "2217250"
  },
  {
    "text": "this is how all of the Android ecosystem really works under the operating system right so to summarize I kind of flipped",
    "start": "2217250",
    "end": "2229040"
  },
  {
    "start": "2223000",
    "end": "2305000"
  },
  {
    "text": "the layers on its side now so on the Left we have the core C++ of course there's the last layer is the application layer right this is what we",
    "start": "2229040",
    "end": "2235640"
  },
  {
    "text": "don't actually have to write ourselves so this is the developers we're doing the you are doing the into the UX doing",
    "start": "2235640",
    "end": "2242240"
  },
  {
    "text": "the rest of the application and loading our files but now we've done this kind",
    "start": "2242240",
    "end": "2247610"
  },
  {
    "text": "of motion of going down in abstraction",
    "start": "2247610",
    "end": "2252620"
  },
  {
    "text": "level X passivity expressiveness and types of T but we brought it back up we",
    "start": "2252620",
    "end": "2258170"
  },
  {
    "text": "lifted everything back up into the platform system in such a way that we still kept all of the business logic",
    "start": "2258170",
    "end": "2263330"
  },
  {
    "text": "shared between everything and wherever we need to do the conversions we're smart enough to do it",
    "start": "2263330",
    "end": "2268369"
  },
  {
    "text": "in the optimal way for each platform so now I have a few more minutes and I",
    "start": "2268369",
    "end": "2276470"
  },
  {
    "text": "wanted to show you an example so I do you notice have you seen this parent",
    "start": "2276470",
    "end": "2282589"
  },
  {
    "text": "meeting before you've seen the party parrot it's a very common animated gif",
    "start": "2282589",
    "end": "2288170"
  },
  {
    "text": "on the web's and I decided that I'm going to try and I found that the",
    "start": "2288170",
    "end": "2293839"
  },
  {
    "text": "original video where this came from it's a it's a real parrot actually and I said okay let's see if I can apply that",
    "start": "2293839",
    "end": "2300710"
  },
  {
    "text": "type of color rotation on the actual video in in Wilton so I wrote a simple",
    "start": "2300710",
    "end": "2307240"
  },
  {
    "start": "2305000",
    "end": "2426000"
  },
  {
    "text": "function called rotate here I used OpenCV that's the open it's a computer vision image processing library and I'm",
    "start": "2307240",
    "end": "2315380"
  },
  {
    "text": "not going to go into how the implementation are into showing the code of the plantation but I have a function",
    "start": "2315380",
    "end": "2320599"
  },
  {
    "text": "called rotate here it takes a three channel 8-bit image with returns another",
    "start": "2320599",
    "end": "2327440"
  },
  {
    "text": "image with the colors that had this color cycling rotated and it has a third",
    "start": "2327440",
    "end": "2332890"
  },
  {
    "text": "variable which sets the speed of the rotation so the larger the value the faster the numbers are going to the",
    "start": "2332890",
    "end": "2339739"
  },
  {
    "text": "faster the color change is going to happen and some memory related function",
    "start": "2339739",
    "end": "2346849"
  },
  {
    "text": "so I wrote this function and I have a simple main in C++ which I could run and",
    "start": "2346849",
    "end": "2352880"
  },
  {
    "text": "load the video and it works on my desktop machine but my goal was to have",
    "start": "2352880",
    "end": "2358400"
  },
  {
    "text": "it run in the browser because when you think about open CV which is a giant C++",
    "start": "2358400",
    "end": "2364400"
  },
  {
    "text": "library the browser doesn't seem like the typical target that you would think",
    "start": "2364400",
    "end": "2369619"
  },
  {
    "text": "about I'm talking about front-end JavaScript right now doing a real-time video processing in the browser in your",
    "start": "2369619",
    "end": "2376519"
  },
  {
    "text": "browser but again this when I'm thinking about the salami master this it really",
    "start": "2376519",
    "end": "2381980"
  },
  {
    "text": "allows me to do a lot of things that were generally quite difficult to do otherwise so I have a lot of big walls",
    "start": "2381980",
    "end": "2389960"
  },
  {
    "text": "of text I'm not going I'm not planning on actually discussing all of them but I",
    "start": "2389960",
    "end": "2395239"
  },
  {
    "text": "just want to show the layers and this function this is we can think about it this is both my core C++ API",
    "start": "2395239",
    "end": "2402109"
  },
  {
    "text": "this is my and the public API and even this C API so here I rolled everything",
    "start": "2402109",
    "end": "2407329"
  },
  {
    "text": "it's just a single function so I'm not going to separate it into three different implementation files just",
    "start": "2407329",
    "end": "2412819"
  },
  {
    "text": "because I said so in this slides right so but we are thinking about all the",
    "start": "2412819",
    "end": "2417980"
  },
  {
    "text": "aspects that I mentioned before so the aspects are always there they don't go away when you have to target",
    "start": "2417980",
    "end": "2423230"
  },
  {
    "text": "multiple platforms but in this case it's just a single file and when we're targeting the web or in this case I'm",
    "start": "2423230",
    "end": "2431960"
  },
  {
    "start": "2426000",
    "end": "2642000"
  },
  {
    "text": "going to use them script and have you in Skipton and Skipton is it's a fork or a",
    "start": "2431960",
    "end": "2443329"
  },
  {
    "text": "clone of LLVM or in clang which targets the output is not binaries for CPU it's",
    "start": "2443329",
    "end": "2450380"
  },
  {
    "text": "actually a version of JavaScript or web assembly which can run in the browser so it's like a type of binaries that can",
    "start": "2450380",
    "end": "2457519"
  },
  {
    "text": "run inside browsers and it allows us to do a lot of the conversions from C++",
    "start": "2457519",
    "end": "2462980"
  },
  {
    "text": "code or any or any other code that's supported by LLVM into running inside",
    "start": "2462980",
    "end": "2468140"
  },
  {
    "text": "most modern browsers so this would be the boundary interface layer we have",
    "start": "2468140",
    "end": "2473569"
  },
  {
    "text": "some global fungal objects for the images this saves us from having to allocate and we allocate images every",
    "start": "2473569",
    "end": "2481220"
  },
  {
    "text": "function code because this is C code we don't have objects at week that are alive so in this case I'm just saving",
    "start": "2481220",
    "end": "2486739"
  },
  {
    "text": "them globally the function interface here it needs this there's some macros",
    "start": "2486739",
    "end": "2494269"
  },
  {
    "text": "related to inscription and you can see that the types that I'm passing a relatively low level so we need the",
    "start": "2494269",
    "end": "2500390"
  },
  {
    "text": "width and the height and there's some kind of buffer types that are related to the pixels the interesting thing is that",
    "start": "2500390",
    "end": "2506779"
  },
  {
    "text": "as I mentioned the JavaScript doesn't know numbers with that are not doubles but it also doesn't know pixels and",
    "start": "2506779",
    "end": "2514039"
  },
  {
    "text": "images that are not in the format of RGB a so every pixel in an image that is",
    "start": "2514039",
    "end": "2519349"
  },
  {
    "text": "having the Dom tree in the in your browser actually has four channels including a is the Alpha Channel it's",
    "start": "2519349",
    "end": "2524930"
  },
  {
    "text": "kind of transparency thing but our function actually processes only three",
    "start": "2524930",
    "end": "2530690"
  },
  {
    "text": "channel images in the BG our color space which is like the colors so we said that the boundary",
    "start": "2530690",
    "end": "2539849"
  },
  {
    "text": "interface layer is where you actually do the type conversions between different systems and this is exactly what I do so",
    "start": "2539849",
    "end": "2546480"
  },
  {
    "text": "I'm taking in these four channel buffers and then I'm calling color conversion to",
    "start": "2546480",
    "end": "2551670"
  },
  {
    "text": "swap the buffers swap their channels and remove the Alpha Channel so and then the",
    "start": "2551670",
    "end": "2557010"
  },
  {
    "text": "only thing that actually does any work is calling our C function rotate you with the number of steps which also gets",
    "start": "2557010",
    "end": "2563730"
  },
  {
    "text": "passed from from outside and then I just copy back the numbers into the values of",
    "start": "2563730",
    "end": "2570690"
  },
  {
    "text": "the pixels back into the the outputs frame again in the JavaScript expect in",
    "start": "2570690",
    "end": "2577200"
  },
  {
    "text": "the format that JavaScript expect so you can see that the only thing that happens here beyond calling the actual function",
    "start": "2577200",
    "end": "2584130"
  },
  {
    "text": "is really the type conversions which are platform specific and this is the right layer to do it in and okay so now we",
    "start": "2584130",
    "end": "2596430"
  },
  {
    "text": "have to go into JavaScript I'm not a big JavaScript developer this is based mostly on stackoverflow copy/paste the",
    "start": "2596430",
    "end": "2603599"
  },
  {
    "text": "technique you might have heard of the design pattern then the only interesting",
    "start": "2603599",
    "end": "2608940"
  },
  {
    "text": "part is really calling module is that the name of the object that comes from in script and it has a method called",
    "start": "2608940",
    "end": "2614609"
  },
  {
    "text": "rotate colors which is the way I'm scripting compiled the function we just saw previously and it causes width the",
    "start": "2614609",
    "end": "2621809"
  },
  {
    "text": "width the height the offset the actual pointer is to the data and some the",
    "start": "2621809",
    "end": "2626849"
  },
  {
    "text": "color change speed which is a variable that comes from the external javascript most of the code here is only related to",
    "start": "2626849",
    "end": "2633809"
  },
  {
    "text": "memory management so I'm not going to go into it I have a blog post about it if you're really interested and all that",
    "start": "2633809",
    "end": "2643260"
  },
  {
    "text": "left really is the host application and now what's the host application for the web it's just an HTML file right it's a",
    "start": "2643260",
    "end": "2651690"
  },
  {
    "text": "web it's a static web page that that's all it is so we have some kind of div that I think",
    "start": "2651690",
    "end": "2656970"
  },
  {
    "text": "it just means okay put an element here I'm going to load the JavaScript files",
    "start": "2656970",
    "end": "2663000"
  },
  {
    "text": "this is the compiled binary this is the adapter that we just saw in the previous slide we have some locals",
    "start": "2663000",
    "end": "2669300"
  },
  {
    "text": "that makes basically passes the video name and and we are I'm adding a slider",
    "start": "2669300",
    "end": "2681090"
  },
  {
    "text": "so we can change the speed in real time right so you don't I'm not just gonna rotate the colors I'm actually going to",
    "start": "2681090",
    "end": "2688200"
  },
  {
    "text": "have it interactive so we're going to see it live changing life so this is like real real true real time with your",
    "start": "2688200",
    "end": "2693690"
  },
  {
    "text": "processing and this is the in the slider",
    "start": "2693690",
    "end": "2698700"
  },
  {
    "text": "right so the values get updated into your update color change speed just",
    "start": "2698700",
    "end": "2705480"
  },
  {
    "text": "changes the value right so and that's all there is to it let's see the let's",
    "start": "2705480",
    "end": "2710610"
  },
  {
    "start": "2708000",
    "end": "2814000"
  },
  {
    "text": "see it running right",
    "start": "2710610",
    "end": "2717740"
  },
  {
    "text": "yo right so on the left this is the original video it's a I actually didn't",
    "start": "2728970",
    "end": "2735510"
  },
  {
    "text": "do anything this is just a regular HTML video tag so you put the video tag you",
    "start": "2735510",
    "end": "2741390"
  },
  {
    "text": "say this is the name of the file this is what you get the video started playing automatically on the right these are",
    "start": "2741390",
    "end": "2748349"
  },
  {
    "text": "friends that my JavaScript is actually calling the code and you can see that the colors are rotating so every frame",
    "start": "2748349",
    "end": "2755010"
  },
  {
    "text": "that's shown here gets that hooked into the real-time video processing passed",
    "start": "2755010",
    "end": "2760079"
  },
  {
    "text": "into the function a new frame which has a shifted color it is generated and displayed on the side you can see that",
    "start": "2760079",
    "end": "2766410"
  },
  {
    "text": "there's a slight delay especially because there is PowerPoint running in the background and this is our slider",
    "start": "2766410",
    "end": "2771599"
  },
  {
    "text": "right so if I go to the slider and I can move it to the right you can see that",
    "start": "2771599",
    "end": "2778170"
  },
  {
    "text": "the colors start changing faster right and I can go to delay all the way to the",
    "start": "2778170",
    "end": "2784560"
  },
  {
    "text": "left and then it gets stuck so you see this is real-time video processing in the browser running C++ code which took",
    "start": "2784560",
    "end": "2795210"
  },
  {
    "text": "it didn't take a lot of work to well at least the separation makes it relatively",
    "start": "2795210",
    "end": "2801359"
  },
  {
    "text": "easy to understand what we're doing and if we stuck on some particular aspect it's not hard to know where the problem",
    "start": "2801359",
    "end": "2807240"
  },
  {
    "text": "is and that I think that's the main message I'm trying to say and thank you",
    "start": "2807240",
    "end": "2816000"
  },
  {
    "start": "2814000",
    "end": "3191000"
  },
  {
    "text": "so if you have any questions I'll be happy to I mean we're such a small group so just feel free to ask and I'm good Anton yeah",
    "start": "2816000",
    "end": "2826770"
  },
  {
    "text": "sure",
    "start": "2826770",
    "end": "2829010"
  },
  {
    "text": "yes okay do you have multiple questions",
    "start": "2854460",
    "end": "2901470"
  },
  {
    "text": "the first one was about callbacks no a callback mechanism really depends on the",
    "start": "2901470",
    "end": "2906910"
  },
  {
    "text": "type of system you're working and so if if your system is in is multi thread",
    "start": "2906910",
    "end": "2913090"
  },
  {
    "text": "truly multi threaded and you're expecting the callback to return are in different red you usually have it means",
    "start": "2913090",
    "end": "2919210"
  },
  {
    "text": "your system is multi-threaded so you can use threads within C++ as well and have",
    "start": "2919210",
    "end": "2926350"
  },
  {
    "text": "it multi-threaded in that way I've written an app which generates callbacks",
    "start": "2926350",
    "end": "2931750"
  },
  {
    "text": "on different responses from callbacks on different threads the way does it is it",
    "start": "2931750",
    "end": "2937180"
  },
  {
    "text": "actually opens an STD thread inside the C++ code returns immediately to the caller whenever that thread is finished",
    "start": "2937180",
    "end": "2944620"
  },
  {
    "text": "it actually hooks into the Java JVM creates a Java thread and connected to",
    "start": "2944620",
    "end": "2950980"
  },
  {
    "text": "this current C++ thread and generates the callback that's possible I've",
    "start": "2950980",
    "end": "2956100"
  },
  {
    "text": "written Jana interfaces that mirror",
    "start": "2956100",
    "end": "2962250"
  },
  {
    "text": "abstract interfaces so I have like a callback function as the derives from some abstract interface and like a like",
    "start": "2963400",
    "end": "2970930"
  },
  {
    "text": "a true virtual function both on the Java side percolates through this interface",
    "start": "2970930",
    "end": "2976779"
  },
  {
    "text": "cause calls of virtual functions on the Android side which also we turn to so",
    "start": "2976779",
    "end": "2982510"
  },
  {
    "text": "everything is possible and this actually makes it much more easy easier to maintain because the separation is so",
    "start": "2982510",
    "end": "2989260"
  },
  {
    "text": "obvious and you know what you have to do where and it helps you manage what the things you need to think about I'm not",
    "start": "2989260",
    "end": "2994900"
  },
  {
    "text": "saying the code isn't horrible what I'm saying is that your users don't see the",
    "start": "2994900",
    "end": "3000390"
  },
  {
    "text": "horrible code and you have a much easier life maintaining this type of code so",
    "start": "3000390",
    "end": "3006599"
  },
  {
    "text": "and about the strings I'm not sure I understood but I think I'm not sure how you can do it I mean nothing I said here",
    "start": "3006599",
    "end": "3014339"
  },
  {
    "text": "is something you don't have to do today anyway the only thing I'm showing you is that it's possible to cut things thin",
    "start": "3014339",
    "end": "3021359"
  },
  {
    "text": "enough so that it's more maintainable and it's more obvious what needs to be done where so if you can do it in some",
    "start": "3021359",
    "end": "3028589"
  },
  {
    "text": "other way you can probably do it here as well because it's more about what aspects we need to think of when we're",
    "start": "3028589",
    "end": "3035220"
  },
  {
    "text": "treating a system and if you're doing concurrency well concurrency is hard always you know so yeah I hope that",
    "start": "3035220",
    "end": "3043799"
  },
  {
    "text": "answers the question",
    "start": "3043799",
    "end": "3046700"
  },
  {
    "text": "but you are using the native code yeah",
    "start": "3060890",
    "end": "3066000"
  },
  {
    "text": "but the layers are mostly conceptual most of the functions are in lines and sometimes they're not even separate",
    "start": "3066000",
    "end": "3072690"
  },
  {
    "text": "functions is the same function as I said I'm not actually I'm not actually doing anything you wouldn't be doing anyway",
    "start": "3072690",
    "end": "3079350"
  },
  {
    "text": "I'm just showing you how to you know change the structure of your code so it's more obvious what you're doing and",
    "start": "3079350",
    "end": "3086610"
  },
  {
    "text": "it's easier to maintain I'm not doing anything I mean maybe you might have one extra function call but that's like if",
    "start": "3086610",
    "end": "3093960"
  },
  {
    "text": "you're already passing through a difficult j'ni interface then that's really you're talking about microseconds",
    "start": "3093960",
    "end": "3100560"
  },
  {
    "text": "or even in a mobile device so I would there is no obvious penalty that I could",
    "start": "3100560",
    "end": "3107460"
  },
  {
    "text": "see here so I might be wrong and I'll be happy to see one but some scripting",
    "start": "3107460",
    "end": "3139260"
  },
  {
    "text": "started out as a project in Mozilla and what they did they took the LLVM",
    "start": "3139260",
    "end": "3145490"
  },
  {
    "text": "back-end for clang and they they basically take the optimized ast or the",
    "start": "3145490",
    "end": "3154140"
  },
  {
    "text": "optimized into intermediate the IR the intermitted representation for generating binaries and the instead of",
    "start": "3154140",
    "end": "3161880"
  },
  {
    "text": "writing a binary for a particular processor the first thing they did they",
    "start": "3161880",
    "end": "3167160"
  },
  {
    "text": "wrote something called ASM Jas it's a subset of JavaScript which is highly",
    "start": "3167160",
    "end": "3173010"
  },
  {
    "text": "optimizable by JavaScript by by the JavaScript engines like v8 from Google",
    "start": "3173010",
    "end": "3178980"
  },
  {
    "text": "another process I think you know what let's let's move it a little bit of air",
    "start": "3178980",
    "end": "3185370"
  },
  {
    "text": "let him get to settled here sorry",
    "start": "3185370",
    "end": "3189050"
  }
]