[
  {
    "text": "all right I think we'll start so welcome",
    "start": "6380",
    "end": "11820"
  },
  {
    "text": "to this talk about kubernetes security with Sto originally when I started",
    "start": "11820",
    "end": "17370"
  },
  {
    "text": "looking at this do I we were looking at it for a client and it looked rather",
    "start": "17370",
    "end": "22920"
  },
  {
    "text": "interesting it has a lot of interesting properties and I really wanted to sort of dive into it and see what it could do",
    "start": "22920",
    "end": "29220"
  },
  {
    "text": "and the end result of this was was this talk so I'm I'm Alan I work at Blanc I",
    "start": "29220",
    "end": "36769"
  },
  {
    "text": "normally work as a developer but also with some security testing and all kinds of other stuff in there I build",
    "start": "36769",
    "end": "44609"
  },
  {
    "text": "open-source security tools and I'm head of the OS Norway chapter as well before",
    "start": "44609",
    "end": "50280"
  },
  {
    "text": "we we head over to Sto we're going to discuss a little bit about container threats so in in",
    "start": "50280",
    "end": "56789"
  },
  {
    "text": "kubernetes we have this thing called pods and a pod is basically a deployment",
    "start": "56789",
    "end": "63149"
  },
  {
    "text": "unit and usually it's one container so we have a pod that the pod has one container it can have multiple",
    "start": "63149",
    "end": "69180"
  },
  {
    "text": "containers but the usual is is to have one container in a pod so in this case we have two pots we have we have a pod",
    "start": "69180",
    "end": "77040"
  },
  {
    "text": "with service a in it and a pod with service B in it and we have multiple of each these are usually deployed on notes",
    "start": "77040",
    "end": "84600"
  },
  {
    "text": "so they might be on the same node or they might be on different nodes in this case I have have them on different nodes",
    "start": "84600",
    "end": "90240"
  },
  {
    "text": "and then we have our not friend or enemy the hacker that wants to hack this",
    "start": "90240",
    "end": "96299"
  },
  {
    "text": "solution so the hacker might try to listen in on traffic between these nodes",
    "start": "96299",
    "end": "102240"
  },
  {
    "text": "or between these these pods the hacker might try to attack one of these pots",
    "start": "102240",
    "end": "108149"
  },
  {
    "text": "and and gain access into the pot and if the attacker is able to do let's say a",
    "start": "108149",
    "end": "114299"
  },
  {
    "text": "remote code execution attack and get access into the pot itself and breach that the attacker now has some more",
    "start": "114299",
    "end": "120570"
  },
  {
    "text": "options because maybe the attacker can now start to attack other pots that are not available from the outside so maybe",
    "start": "120570",
    "end": "127259"
  },
  {
    "text": "maybe service B was it had an open port to the outside world but service a didn't but now because the attacker has",
    "start": "127259",
    "end": "134069"
  },
  {
    "text": "been able to compromise service be the attacker is now able to attack service aid the attacker could also do",
    "start": "134069",
    "end": "142530"
  },
  {
    "text": "something else which is to try to compromise the note so do a container escape and become either our normal user",
    "start": "142530",
    "end": "149310"
  },
  {
    "text": "or the root user of the node itself and this last threat is not something that is do can help us a lot with but some of",
    "start": "149310",
    "end": "156150"
  },
  {
    "text": "the previous stuff is something is do can help us with so it's do this is the",
    "start": "156150",
    "end": "161819"
  },
  {
    "text": "logo this - it's it's kind of a sailboat and I think sto means sail in Greek so",
    "start": "161819",
    "end": "166860"
  },
  {
    "text": "we have this nautical team on kubernetes with with steering wheels and everything in it and the idea as you can see the",
    "start": "166860",
    "end": "174720"
  },
  {
    "text": "tagline here connect secure control and observe services so history offers more than just security but a lot of the",
    "start": "174720",
    "end": "182760"
  },
  {
    "text": "features that it offers can be used for security as well so if you recently hit",
    "start": "182760",
    "end": "189390"
  },
  {
    "text": "the 1.0 milestone so this was in August last year and the current version is one",
    "start": "189390",
    "end": "195329"
  },
  {
    "text": "dot zero dot five and they're fixing small bugs they're doing all kinds of improvements to it all the time and it's",
    "start": "195329",
    "end": "201930"
  },
  {
    "text": "quite an active project it's on github and it was it's built on top of things",
    "start": "201930",
    "end": "207900"
  },
  {
    "text": "that have come out of Google and especially lift which we'll get back to but then IBM VMware and and Cisco and a",
    "start": "207900",
    "end": "216480"
  },
  {
    "text": "lot of other companies are also contributing to s do it still adds to",
    "start": "216480",
    "end": "224819"
  },
  {
    "text": "kubernetes something we call a service mesh and it's kind of hard to explain what a service mesh is the only sort of",
    "start": "224819",
    "end": "232590"
  },
  {
    "text": "explanation I could find that made the list some kind of sense was it's the network of micro services and the interactions between them because we're",
    "start": "232590",
    "end": "239190"
  },
  {
    "text": "kind of adding stuff that's not there at the moment to kubernetes to to make things better and a service mesh",
    "start": "239190",
    "end": "247530"
  },
  {
    "text": "typically adds things like discovery load balancing failure recovery metrics and monitoring which are all interesting",
    "start": "247530",
    "end": "254430"
  },
  {
    "text": "properties but they could also include other things like a be testing and canary releases so we can we can push",
    "start": "254430",
    "end": "261209"
  },
  {
    "text": "out a new version and just direct some of the traffic to this new version we can do rate limiting we can do access",
    "start": "261209",
    "end": "267510"
  },
  {
    "text": "control and we can do end to an authentication this is one of the things - this - adds",
    "start": "267510",
    "end": "273289"
  },
  {
    "text": "sto has some security goals the first one is security by default and this is a very very interesting property",
    "start": "273909",
    "end": "280449"
  },
  {
    "text": "because what what they aim to do is allow you to add a certain amount of security to the applications without",
    "start": "280449",
    "end": "287259"
  },
  {
    "text": "changing them so you deploy something and then you kind of wrap it in in your wrap around it to protect it so so you",
    "start": "287259",
    "end": "294789"
  },
  {
    "text": "can use it with any type of container it doesn't have to be job or nodes or something specific you don't even have",
    "start": "294789",
    "end": "300610"
  },
  {
    "text": "to have the ability to change the code they aim to have a defense in depth so",
    "start": "300610",
    "end": "307719"
  },
  {
    "text": "this is going to be add-ons to existing security things that you might have in",
    "start": "307719",
    "end": "314379"
  },
  {
    "text": "your network or on your hosts and they also aim to support what we call a Sarah",
    "start": "314379",
    "end": "319659"
  },
  {
    "text": "trust network so if you can't trust the network we still want to be able to communicate between these workloads as",
    "start": "319659",
    "end": "325000"
  },
  {
    "text": "we color or the pods in a way where we know that no one is listening in or changing the traffic so we have our",
    "start": "325000",
    "end": "335500"
  },
  {
    "text": "trusted services once again service a and service B and what would normally happen is a service or a pod would speak",
    "start": "335500",
    "end": "342460"
  },
  {
    "text": "directly to another pod but would sto we're going to do things a little bit differently we're going to introduce",
    "start": "342460",
    "end": "348629"
  },
  {
    "text": "proxies so these proxies are in the same pod so they're a new container in the",
    "start": "348629",
    "end": "353740"
  },
  {
    "text": "same pod and instead of speaking directly between the services we now only speak to the pot and then the pod",
    "start": "353740",
    "end": "361089"
  },
  {
    "text": "or oh sorry did the proxy and the proxy speaks to the proxy at the other end and this is how we now communicate so",
    "start": "361089",
    "end": "366430"
  },
  {
    "text": "there's no direct communication between service a and service B and this is how we can add things to this container",
    "start": "366430",
    "end": "373539"
  },
  {
    "text": "without actually changing the service itself so let's look at what's going on",
    "start": "373539",
    "end": "379210"
  },
  {
    "text": "here so we have what's called a sidecar container so the proxy is a sidecar",
    "start": "379210",
    "end": "384490"
  },
  {
    "text": "container we also call this out of process architecture because we're adding new stuff without changing the existing code we're adding a new process",
    "start": "384490",
    "end": "390849"
  },
  {
    "text": "that handles some of the security for us and as I said this we this allows us to add a lot of things without changing the",
    "start": "390849",
    "end": "397919"
  },
  {
    "text": "existing code so let's say this was a database or is something that we just purchased from someone and we want to",
    "start": "397919",
    "end": "404979"
  },
  {
    "text": "deploy this on a cluster now we can actually add more security more metrics more things to it without",
    "start": "404979",
    "end": "410900"
  },
  {
    "text": "changing that code which you might not even have access to it's it's also a way",
    "start": "410900",
    "end": "417680"
  },
  {
    "text": "that we can do this across different types of systems so it doesn't have to be all Java or nodejs as I said you can",
    "start": "417680",
    "end": "424400"
  },
  {
    "text": "you can use this across different types of of pods or services or containers so",
    "start": "424400",
    "end": "433100"
  },
  {
    "text": "what's used in initio is something called the Envoy proxy and this was created by lyft and it's a it's written",
    "start": "433100",
    "end": "439700"
  },
  {
    "text": "in C and C++ so it's really high performance and it does a lot of things it can do dynamic just the service",
    "start": "439700",
    "end": "445640"
  },
  {
    "text": "discovery it does load balancing and you can see all the other things there so it doesn't just do HTTP it also the this.g",
    "start": "445640",
    "end": "451850"
  },
  {
    "text": "RPC and we can add things like circuit breakers we can add things like staged",
    "start": "451850",
    "end": "456890"
  },
  {
    "text": "rollouts with percentage based traffic's based and this is kind of important because you can't normally do this in",
    "start": "456890",
    "end": "462470"
  },
  {
    "text": "kubernetes but because you're limited to the amount of pods you have but now you can set a percentage I want only 1% of",
    "start": "462470",
    "end": "469700"
  },
  {
    "text": "this traffic to go to the new version and then the rest should go to the old version so you can slowly roll out the",
    "start": "469700",
    "end": "475400"
  },
  {
    "text": "new version we can do things like fault injection to test the resilience of our applications we can get richer metrics",
    "start": "475400",
    "end": "481880"
  },
  {
    "text": "and we can do TLS that's a part of the proxy so but that's not all we get from",
    "start": "481880",
    "end": "489320"
  },
  {
    "text": "misty oh wow we have a few more things here we have what we call the control",
    "start": "489320",
    "end": "495140"
  },
  {
    "text": "pain which actually controls how the these proxy work together in there we have something called the pilot and the",
    "start": "495140",
    "end": "502070"
  },
  {
    "text": "pilot is when we want to configure these proxies we send in policies and what the",
    "start": "502070",
    "end": "507980"
  },
  {
    "text": "pilot will do is push those policies out to the proxies to tell them what what",
    "start": "507980",
    "end": "513289"
  },
  {
    "text": "they're going to do what they're going to allow etc etc we also have the mixer",
    "start": "513290",
    "end": "518990"
  },
  {
    "text": "the mixer is a thing that mainly collects information so it collects metrics it collects all kinds of things",
    "start": "518990",
    "end": "527240"
  },
  {
    "text": "around what's going on but it can also do evaluation of things so the proxies can ask the mixer is this thing supposed",
    "start": "527240",
    "end": "534140"
  },
  {
    "text": "to be allowed and then the mixer can say yes or no and the third part here is called Citadel",
    "start": "534140",
    "end": "539870"
  },
  {
    "text": "and we'll talk a bit more about that one later but it's the thing that helps us with certificates and secure",
    "start": "539870",
    "end": "546350"
  },
  {
    "text": "communication we have a couple of more things there we have what we call",
    "start": "546350",
    "end": "552020"
  },
  {
    "text": "ingress and egress so ingress is what controls what comes into the cluster so",
    "start": "552020",
    "end": "558110"
  },
  {
    "text": "this is where we open up endpoints to the outside world and we can apply these policies all the way out during in",
    "start": "558110",
    "end": "563750"
  },
  {
    "text": "Indian Gress or we can apply them on the proxies themselves and similarly we have",
    "start": "563750",
    "end": "568820"
  },
  {
    "text": "an egress and what was great about having an egress here is that we can in the egress we can control where you're",
    "start": "568820",
    "end": "575150"
  },
  {
    "text": "allowed to connect to and we can even use this also if we if we have multiple clusters where we have is to install we",
    "start": "575150",
    "end": "582170"
  },
  {
    "text": "can we can use these certificates that we're going to set up we can use them across the clusters so this one controls",
    "start": "582170",
    "end": "588710"
  },
  {
    "text": "how we speak to the outside world we don't have to use it we can let the the pod stem cells speak directly to the",
    "start": "588710",
    "end": "595310"
  },
  {
    "text": "outside if we want to but it can add a lot of extra security if we can control every every outbound communication from",
    "start": "595310",
    "end": "603050"
  },
  {
    "text": "any of our services so back to this proxy the applications that we deploy",
    "start": "603050",
    "end": "611540"
  },
  {
    "text": "they're supposed to be unaware of this proxies because we're going to be we are supposed to be able to add this to our applications without changing them and I",
    "start": "611540",
    "end": "619700"
  },
  {
    "text": "was wondering about this when I first read about it like how does it actually hijack the traffic because I mean you",
    "start": "619700",
    "end": "625190"
  },
  {
    "text": "could easily create your own proxy where you would in your code you would have just tell it to use the proxy but in",
    "start": "625190",
    "end": "631130"
  },
  {
    "text": "this case this just happens you just deploy it and it suddenly starts hijacking all the traffic and managing",
    "start": "631130",
    "end": "637430"
  },
  {
    "text": "it and I was kind of confused about this at first how how can one one container",
    "start": "637430",
    "end": "642560"
  },
  {
    "text": "in a pod hijack the traffic of the other container in the pod that sounds like a problem security wise but the thing is",
    "start": "642560",
    "end": "650570"
  },
  {
    "text": "containers in a pod they share a network namespace and I'm gonna show you this what what actually happens so I have a",
    "start": "650570",
    "end": "660710"
  },
  {
    "text": "small human heads cluster running on my laptop here and I have a as you can see",
    "start": "660710",
    "end": "666350"
  },
  {
    "text": "all the way to the top here I have this this container called net tools and it",
    "start": "666350",
    "end": "671510"
  },
  {
    "text": "has two containers in it so what I'm going to do now I'm going to go into one of these containers up here",
    "start": "671510",
    "end": "679549"
  },
  {
    "text": "so it's gonna be net tools one I'm gonna",
    "start": "679549",
    "end": "684809"
  },
  {
    "text": "go into this one Oh remember to add",
    "start": "684809",
    "end": "690739"
  },
  {
    "text": "gonna get a get a shell into this container and I'm gonna do the same thing down here with the other one so",
    "start": "693259",
    "end": "700799"
  },
  {
    "text": "now I have I have a shell in two different containers but they're in the same pot so if I try to check here if",
    "start": "700799",
    "end": "708569"
  },
  {
    "text": "any is there anything listening here there's nothing listening at all just",
    "start": "708569",
    "end": "713909"
  },
  {
    "text": "there's no listener zero I'm gonna set up a listener down here so I'm gonna say again I'm gonna listen in on local host",
    "start": "713909",
    "end": "720659"
  },
  {
    "text": "because that wouldn't be visible from the outside and I'm gonna listen at a specific port if I now go back to the",
    "start": "720659",
    "end": "726989"
  },
  {
    "text": "other pod and check we can see it can see this listener because they share",
    "start": "726989",
    "end": "732569"
  },
  {
    "text": "local host local host is the same thing for these two pots what's interesting",
    "start": "732569",
    "end": "737819"
  },
  {
    "text": "though is there's no kid here there's no process ID and in fact if I try to do to",
    "start": "737819",
    "end": "744209"
  },
  {
    "text": "list all the processes I can't see this net cap that I'm running in the in the other container because they don't share",
    "start": "744209",
    "end": "749249"
  },
  {
    "text": "the process namespace they only share the network name space so the hints they can see one of the things but I can't see the other they can see something is",
    "start": "749249",
    "end": "755669"
  },
  {
    "text": "listening but they don't know what it is but this is also a way for two containers to talk to each other with within the same pod you can do this",
    "start": "755669",
    "end": "765479"
  },
  {
    "text": "normal doctor as well just by first starting one container and then set the network of the second container to be",
    "start": "765479",
    "end": "772350"
  },
  {
    "text": "the container Network of the first container so something like the line I'm",
    "start": "772350",
    "end": "778499"
  },
  {
    "text": "showing up here so you can do the same thing if you want to try it out you don't have to have given Ares what's",
    "start": "778499",
    "end": "786269"
  },
  {
    "text": "what we're going to do when we're deploying something with Sto is we have this new tool normally when we're using",
    "start": "786269",
    "end": "791639"
  },
  {
    "text": "kubernetes we have control or a coop couple with is do we get a new thing",
    "start": "791639",
    "end": "797009"
  },
  {
    "text": "called SCO cuddle and what this one does is we can sort of add the stuff that we want from",
    "start": "797009",
    "end": "803549"
  },
  {
    "text": "sto to an existing kubernetes deployment so we we take a file that we have that",
    "start": "803549",
    "end": "809790"
  },
  {
    "text": "describes the deployment and we just do this cube inject thing and it's gonna add some new stuff to it so in this case",
    "start": "809790",
    "end": "816269"
  },
  {
    "text": "we see that it's added a new container we see that it's called the proxy which",
    "start": "816269",
    "end": "822329"
  },
  {
    "text": "you can see down here it runs as user 1 3 3 7 with this number seems to be a",
    "start": "822329",
    "end": "828509"
  },
  {
    "text": "number that they use a lot leet and and so they're adding this new container we",
    "start": "828509",
    "end": "834600"
  },
  {
    "text": "can also see there's something here called a control plane policy mutual TLS so they're adding mutual TLS that's",
    "start": "834600",
    "end": "840540"
  },
  {
    "text": "error and you can add all kinds of stuff in here um but so it's adding this new it's adding this new container it also",
    "start": "840540",
    "end": "846779"
  },
  {
    "text": "mounts some certificates and things down here what it also does is it uses",
    "start": "846779",
    "end": "853230"
  },
  {
    "text": "something called an init container so we talked about a sidecar container but what's an init container well an init",
    "start": "853230",
    "end": "859290"
  },
  {
    "text": "container is a container that runs before the other containers so the init container can do things to set up the",
    "start": "859290",
    "end": "867899"
  },
  {
    "text": "pot itself for free the the containers that are coming after it so uh that if",
    "start": "867899",
    "end": "873420"
  },
  {
    "text": "one of the differences between a normal container and an init container is that an inner container runs to completion",
    "start": "873420",
    "end": "878699"
  },
  {
    "text": "and then stops so it only runs at the beginning and then it stops while the other containers are running until you",
    "start": "878699",
    "end": "884100"
  },
  {
    "text": "kill them and in this case we also see something all the way to the bottom here we see that for this container we have a",
    "start": "884100",
    "end": "891749"
  },
  {
    "text": "special capability called net admin and now we're kind of starting to see what's",
    "start": "891749",
    "end": "897269"
  },
  {
    "text": "going on here so it needs the net admin capability and the net admin capability allows us to redirect traffic aha",
    "start": "897269",
    "end": "904230"
  },
  {
    "text": "so there's something here that's going to redirect the traffic from this service pod and into the proxy and if we",
    "start": "904230",
    "end": "912809"
  },
  {
    "text": "look at the the repo or the github repo we find that there's something called sto iptables",
    "start": "912809",
    "end": "918929"
  },
  {
    "text": "I don't expect you to read all of this by the way I'm just showing you so what it does is it redirects traffic from all",
    "start": "918929",
    "end": "925559"
  },
  {
    "text": "the incoming traffic is redirected into a certain chain and then it's sent to",
    "start": "925559",
    "end": "930600"
  },
  {
    "text": "the proxy and then back and forth and actually a guy called Jimmy song has created this really useful blog post",
    "start": "930600",
    "end": "937049"
  },
  {
    "text": "about this again I'm not going to go through the diagram here but you can see the",
    "start": "937049",
    "end": "942569"
  },
  {
    "text": "traffic's coming in from the left it's going into pre routing it's sent to East your inbound and then it's kind of sent",
    "start": "942569",
    "end": "948660"
  },
  {
    "text": "to the proxy back in force of the proxy can do its thing and then it's it towards the end it's sent into the app",
    "start": "948660",
    "end": "954299"
  },
  {
    "text": "container and then from the app container when it goes out it also goes through the proxy due to this routing",
    "start": "954299",
    "end": "960509"
  },
  {
    "text": "and then the proxy can add all kinds of stuff to it and or the policy evaluation",
    "start": "960509",
    "end": "965759"
  },
  {
    "text": "and things like that and then we actually send the traffic out so if you want to learn more about it go read this",
    "start": "965759",
    "end": "971040"
  },
  {
    "text": "blog post and at least look at this diagram in more detail because really useful one of the things I was wondering",
    "start": "971040",
    "end": "978989"
  },
  {
    "text": "about with this was how can a if we redirect the traffic using IP tables and",
    "start": "978989",
    "end": "984449"
  },
  {
    "text": "we were gonna we have an outbound connection it's going to google.com and then we have something that hijacks it",
    "start": "984449",
    "end": "991499"
  },
  {
    "text": "and sends it on to another service how can this service that gets it know where it was supposed to go and it turns out",
    "start": "991499",
    "end": "997889"
  },
  {
    "text": "that there's a way to get socket options in C and I am NOT a C programmer so I didn't know this area originally but in",
    "start": "997889",
    "end": "1005749"
  },
  {
    "text": "if we redirect this using IP tables we can ask the socket but what was your original destination so that's what's",
    "start": "1005749",
    "end": "1012139"
  },
  {
    "text": "the second line here and we can do this from even from from JavaScript or other languages we just have to find the right",
    "start": "1012139",
    "end": "1017509"
  },
  {
    "text": "api's for it but that's how it knows what was the original did the proxy knows what was the original location of",
    "start": "1017509",
    "end": "1023720"
  },
  {
    "text": "this because there's no normal proxy headers that we would have an HTTP where we're like saying well connected to this",
    "start": "1023720",
    "end": "1029480"
  },
  {
    "text": "thing and server etc it's all it's all on the on the socket low so a side note",
    "start": "1029480",
    "end": "1036949"
  },
  {
    "text": "on this net admin capability is that this is the thing that's had a lot of",
    "start": "1036949",
    "end": "1042620"
  },
  {
    "text": "bugs around it and some CDs so it's not something you want you to let your",
    "start": "1042620",
    "end": "1049460"
  },
  {
    "text": "containers have while it's running so they made a really sane choice and this in this architecture that they use",
    "start": "1049460",
    "end": "1055909"
  },
  {
    "text": "it only in the init container and let that set up the traffic so it goes through the proxy and then it's dropped",
    "start": "1055909",
    "end": "1062389"
  },
  {
    "text": "so you don't have that capability in the containers anymore that's not something you want out there's a really good paper",
    "start": "1062389",
    "end": "1067970"
  },
  {
    "text": "from NCC group called understanding and hardening Linux containers which I highly recommend you read if your",
    "start": "1067970",
    "end": "1073700"
  },
  {
    "text": "interests in doctor and container security routing",
    "start": "1073700",
    "end": "1079869"
  },
  {
    "text": "in policies we can do a lot of things with sto around routing and and policies",
    "start": "1079869",
    "end": "1086019"
  },
  {
    "text": "so we can do automatic load balancing for many different types of traffic we",
    "start": "1086019",
    "end": "1091480"
  },
  {
    "text": "can do a fine-grained control so we can we can do things like a circuit breakers and retries so we can say well if you",
    "start": "1091480",
    "end": "1098529"
  },
  {
    "text": "try to connect this thing and it's not answering well wait a bit and then try again or we can failover to different",
    "start": "1098529",
    "end": "1104379"
  },
  {
    "text": "services if one of them is failing we can also do things like policies and",
    "start": "1104379",
    "end": "1109629"
  },
  {
    "text": "this can be interesting in terms of denial of service for instance if if one of our services is really hammering and",
    "start": "1109629",
    "end": "1116980"
  },
  {
    "text": "one of the others it might be useful to introduce rate limits or or quote us and we can also do access control using is",
    "start": "1116980",
    "end": "1123309"
  },
  {
    "text": "do the communication itself is set up",
    "start": "1123309",
    "end": "1128529"
  },
  {
    "text": "using mutual TLS or at least we can set it up to use mutual TLS and we can use this as a way to get authentication and",
    "start": "1128529",
    "end": "1135519"
  },
  {
    "text": "authorization but before we we go into detail on how that works we're going to",
    "start": "1135519",
    "end": "1141369"
  },
  {
    "text": "sidetrack a little bit and talk about something called spiffy spiffy is the",
    "start": "1141369",
    "end": "1146799"
  },
  {
    "text": "secure production identity framework for everyone it's on spiffy i/o and it's",
    "start": "1146799",
    "end": "1152980"
  },
  {
    "text": "inspired by googling Google create it's called a LTS application layer Transport",
    "start": "1152980",
    "end": "1158980"
  },
  {
    "text": "Security one of the ideas here is when",
    "start": "1158980",
    "end": "1165549"
  },
  {
    "text": "we're starting deploying containers and all kinds of of application micro services we we don't really care that",
    "start": "1165549",
    "end": "1173320"
  },
  {
    "text": "much about the hostname anymore because these things will move around they won't stay at one host they're gonna move around from different notes to all kinds",
    "start": "1173320",
    "end": "1180879"
  },
  {
    "text": "of places and so using hostname as the identity of a let's say us or",
    "start": "1180879",
    "end": "1188259"
  },
  {
    "text": "certificate that doesn't make much sense anymore what we want to know is the workloads so we want to know am i",
    "start": "1188259",
    "end": "1194409"
  },
  {
    "text": "speaking to the right type of process am i speaking to right type of micro service I don't really care where it is",
    "start": "1194409",
    "end": "1200679"
  },
  {
    "text": "as long as it has this way of proving that it is the workload that it's supposed to be so we have",
    "start": "1200679",
    "end": "1208029"
  },
  {
    "text": "we work load or service identification instead of host identification in in",
    "start": "1208029",
    "end": "1214719"
  },
  {
    "text": "spiffy we have a kind of Uri buy based scheme which is called a spiffy ID and",
    "start": "1214719",
    "end": "1220389"
  },
  {
    "text": "the spiffy ID has an issuer as the first part and then we have some kind of identifier on the right side this",
    "start": "1220389",
    "end": "1227320"
  },
  {
    "text": "doesn't have to be hierarchical it can be but it doesn't have to be but we have the issuer of the of this ID and then we",
    "start": "1227320",
    "end": "1234429"
  },
  {
    "text": "have some kind of some kind of identifier for the service itself to",
    "start": "1234429",
    "end": "1240489"
  },
  {
    "text": "prove your spiffy identity we have a spiffy verifiable identity document and",
    "start": "1240489",
    "end": "1246159"
  },
  {
    "text": "this contains two spiffy ID it contains a public key and it contains a valid signature so this is of course normally",
    "start": "1246159",
    "end": "1252669"
  },
  {
    "text": "implemented as x.509 certificates and this is what what is do is using as well",
    "start": "1252669",
    "end": "1258929"
  },
  {
    "text": "usually these things are short-lived as well we want them to be shortly we want to issue new certificate often and then",
    "start": "1258929",
    "end": "1265690"
  },
  {
    "text": "just remove the other ones and the one and have them expire as fast as possible basically so if we're going to use Biffy",
    "start": "1265690",
    "end": "1273580"
  },
  {
    "text": "we can use something called spire the spiffy runtime environment and in this case we set up a spire server over here",
    "start": "1273580",
    "end": "1279729"
  },
  {
    "text": "and we have a node agent that runs on a node and the node agent will first have",
    "start": "1279729",
    "end": "1285159"
  },
  {
    "text": "to register it with the spire server so it sits there and what the node agent",
    "start": "1285159",
    "end": "1290649"
  },
  {
    "text": "does it does at the station so when we fire up some kind of a service on this node this the node agent knows something",
    "start": "1290649",
    "end": "1298629"
  },
  {
    "text": "about this service it can be if you know what what container hash it has it can know what kind of a process it is it can",
    "start": "1298629",
    "end": "1305409"
  },
  {
    "text": "do all kinds of at the stations to figure out what is this service that's now trying to be a part of this networks",
    "start": "1305409",
    "end": "1311320"
  },
  {
    "text": "so the service will just simply ask the node agent who am i and the node agent",
    "start": "1311320",
    "end": "1316359"
  },
  {
    "text": "will then go to the spire server to get some kind of credential for this and then from there on on the service can",
    "start": "1316359",
    "end": "1322690"
  },
  {
    "text": "use this credential to speak to other services so why am I talking about",
    "start": "1322690",
    "end": "1327789"
  },
  {
    "text": "spiffy well Sto off the authorization and authentication part is is or at least",
    "start": "1327789",
    "end": "1333940"
  },
  {
    "text": "the authentication part is it's considered a spiffy implementation the",
    "start": "1333940",
    "end": "1339220"
  },
  {
    "text": "spiffy people are reopen saying i sto is one of the implementations of",
    "start": "1339220",
    "end": "1344290"
  },
  {
    "text": "spiffy while the sto people are more in terms of well su has a spiffy implementation but it also offers a lot",
    "start": "1344290",
    "end": "1350620"
  },
  {
    "text": "more what it does in this case instead of having this spire server that's a",
    "start": "1350620",
    "end": "1356200"
  },
  {
    "text": "very different thing in these node agents so we're using the underlying platform which is kubernetes and we're",
    "start": "1356200",
    "end": "1361720"
  },
  {
    "text": "using that for at the station so that the platform itself knows which pods are running where and we can use this to",
    "start": "1361720",
    "end": "1368170"
  },
  {
    "text": "give them certificates but so it's the office is more comprehensive inspired",
    "start": "1368170",
    "end": "1374140"
  },
  {
    "text": "because it doesn't just do authentication but it also does authorization and auditing and all kinds",
    "start": "1374140",
    "end": "1379570"
  },
  {
    "text": "of metrics and things like that so we can get from from history and here we",
    "start": "1379570",
    "end": "1385360"
  },
  {
    "text": "come back to this SEO Citadel because this Citadel was something formerly",
    "start": "1385360",
    "end": "1390910"
  },
  {
    "text": "known as sto CA because it's it's kind of a certificate authority it creates the certificate creates this these SV",
    "start": "1390910",
    "end": "1397690"
  },
  {
    "text": "documents for us and it actually runs as a kubernetes pod itself so I can show you quickly just",
    "start": "1397690",
    "end": "1405490"
  },
  {
    "text": "what happens if we list out what's running in our and what's going to",
    "start": "1405490",
    "end": "1411910"
  },
  {
    "text": "happen when you install this do which is quite easy is you're going to get a new",
    "start": "1411910",
    "end": "1417400"
  },
  {
    "text": "namespace called sto system and within this Istria system namespace there's gonna be a set of pods",
    "start": "1417400",
    "end": "1423460"
  },
  {
    "text": "running so we can do this we're gonna",
    "start": "1423460",
    "end": "1429640"
  },
  {
    "text": "see the pods is running so we see the Citadel as the second one up here we see the egress and ingress gateways and we",
    "start": "1429640",
    "end": "1436060"
  },
  {
    "text": "see the pilot and some other things as well in here so this the this Citadel it",
    "start": "1436060",
    "end": "1442690"
  },
  {
    "text": "runs as a Cuban era spot in sits in years to an atheist but it has some rights into all namespaces in the system",
    "start": "1442690",
    "end": "1449580"
  },
  {
    "text": "it has a CA certificate if you don't provide one to it it's going to create",
    "start": "1449580",
    "end": "1455170"
  },
  {
    "text": "one a self signed one but you can if you have an existing PKI you can for",
    "start": "1455170",
    "end": "1460330"
  },
  {
    "text": "instance you can issue on intermediate CA and you can plug that in and have it use that one instead",
    "start": "1460330",
    "end": "1466140"
  },
  {
    "text": "so the citadel has rights to all the namespaces on your cluster because it",
    "start": "1466140",
    "end": "1472150"
  },
  {
    "text": "needs to be able to create secrets though Secrets is where it stores these these certificates and it needs to be",
    "start": "1472150",
    "end": "1478570"
  },
  {
    "text": "able to watch these secrets and to see what's happening through them so and it",
    "start": "1478570",
    "end": "1483640"
  },
  {
    "text": "also looks for service accounts and services which we'll get back to so the",
    "start": "1483640",
    "end": "1489210"
  },
  {
    "text": "these SV documents in Israel they're created by this Citadel it's per service",
    "start": "1489210",
    "end": "1496180"
  },
  {
    "text": "account so it's not really tied to the workload as such but as long as we run",
    "start": "1496180",
    "end": "1502360"
  },
  {
    "text": "each pod with or if not each pod but each deployment with the specific with unique service account this works as",
    "start": "1502360",
    "end": "1509650"
  },
  {
    "text": "intended the default is that these certificates are valid for one hour so",
    "start": "1509650",
    "end": "1515890"
  },
  {
    "text": "they're really short-lived certificates I mean we're used to having certificates that are valid for a year or two but now",
    "start": "1515890",
    "end": "1521650"
  },
  {
    "text": "we have certificates that are valid for only one hour so if someone steals one of these it's it's quickly going to",
    "start": "1521650",
    "end": "1527560"
  },
  {
    "text": "expire they're also refreshed every 30 minutes so you won't have these delays where you",
    "start": "1527560",
    "end": "1533980"
  },
  {
    "text": "try to renew something and you're too late and then you're going to get an outage so there we have a 30 minute gap",
    "start": "1533980",
    "end": "1541000"
  },
  {
    "text": "these are these things are all configurable so you can you can set them up with with different time limits if",
    "start": "1541000",
    "end": "1546670"
  },
  {
    "text": "you want to so the certificate only contains the spiffy spiffy ID there's",
    "start": "1546670",
    "end": "1553690"
  },
  {
    "text": "there are no dns names in these certificates and this can sometimes be annoying if you're trying to do like a",
    "start": "1553690",
    "end": "1559600"
  },
  {
    "text": "cluster where you have some things using Sto and some things that are not using is do typically a job application will",
    "start": "1559600",
    "end": "1567130"
  },
  {
    "text": "have problems or talking to one of this Buffay things because it's going to it's going to hit a certificate that doesn't",
    "start": "1567130",
    "end": "1573040"
  },
  {
    "text": "have a dns name and it's gonna not going to be trusted by default as mentioned these this certificate are also tied to",
    "start": "1573040",
    "end": "1579850"
  },
  {
    "text": "the service account so you can if you want to you can boot up multiple workloads that are very different with",
    "start": "1579850",
    "end": "1585160"
  },
  {
    "text": "the same service account and thus they will get the same certificate an",
    "start": "1585160",
    "end": "1591130"
  },
  {
    "text": "interesting thing that I noticed when I had worked on this for a while trying to look at what it's doing we installed it",
    "start": "1591130",
    "end": "1598630"
  },
  {
    "text": "and we were using it a bit is a bug that was introduced in 0.51 this is the",
    "start": "1598630",
    "end": "1607030"
  },
  {
    "text": "commit that fixes the problem but the problem in this case was that they introduced a grace period as a",
    "start": "1607030",
    "end": "1613780"
  },
  {
    "text": "conflict setting so you could say how long before the certificate expires are you supposed to renew it but the problem",
    "start": "1613780",
    "end": "1619960"
  },
  {
    "text": "was in this case that they were using integers and they weren't aware that",
    "start": "1619960",
    "end": "1625150"
  },
  {
    "text": "they were using integers so in this case we ended up with if you set the grace period to 0.5 it would become 0 and so",
    "start": "1625150",
    "end": "1634240"
  },
  {
    "text": "the certificates would not be renewed until after they had expired which is kind of annoying so you get like a 1",
    "start": "1634240",
    "end": "1640330"
  },
  {
    "text": "minute gap at once per hour where everything would fail and like what's going on why is it failing and I was",
    "start": "1640330",
    "end": "1646120"
  },
  {
    "text": "reading through the code and actually found this thing and and then I went back in and so well they've actually",
    "start": "1646120",
    "end": "1651490"
  },
  {
    "text": "fixed it in a newer version and I wouldn't have had to spend all this time reading code to figure out what was going on but the weird thing was that",
    "start": "1651490",
    "end": "1659080"
  },
  {
    "text": "this was in 0.5 which at the point was supposed to be like a long-term release at least for awhile but they fixed it in",
    "start": "1659080",
    "end": "1665830"
  },
  {
    "text": "a short-term release which was 0.6 and I tried to make them fix it back in 0.5",
    "start": "1665830",
    "end": "1670870"
  },
  {
    "text": "but they and they didn't want to but this is fixed now of course so we were",
    "start": "1670870",
    "end": "1677410"
  },
  {
    "text": "using mutual TLS between these services or these pods and so we were creating",
    "start": "1677410",
    "end": "1684250"
  },
  {
    "text": "these TLS channels so we this doesn't have to be HTTP I mean it doesn't have to be HTTP it can be any type of TCP",
    "start": "1684250",
    "end": "1690430"
  },
  {
    "text": "connection and we can enforce this on either a cluster level so we can say",
    "start": "1690430",
    "end": "1696370"
  },
  {
    "text": "that all the pods that I have in my cluster now there are going to use mutual TLS between them or we can say",
    "start": "1696370",
    "end": "1702220"
  },
  {
    "text": "that only the pods with in this specific namespace they are going to use mutual TLS but the other ones I don't care",
    "start": "1702220",
    "end": "1707560"
  },
  {
    "text": "about or you can also do it on on a service level so this is the this is",
    "start": "1707560",
    "end": "1714280"
  },
  {
    "text": "kind of the way that we set this up we're using these rules so in this case we're saying",
    "start": "1714280",
    "end": "1719830"
  },
  {
    "text": "TLS mode is two mutual and if you're going to speak to something that started local you have to use this and there",
    "start": "1719830",
    "end": "1727450"
  },
  {
    "text": "there you can see that you arrive down at the bottom here on on the sto document pages there are a lot of tasks",
    "start": "1727450",
    "end": "1734770"
  },
  {
    "text": "that you can do to learn how this works which is really useful this is the way",
    "start": "1734770",
    "end": "1741130"
  },
  {
    "text": "that you used to do authorization by in sto 0.5 and this was kind of horrible",
    "start": "1741130",
    "end": "1747200"
  },
  {
    "text": "the first time I looked at it to be honest because this is a blacklist approach so we have Adonai product",
    "start": "1747200",
    "end": "1754490"
  },
  {
    "text": "Handler denier and and we were saying like well this spiffy ID here is not allowed to talk to us and of course this",
    "start": "1754490",
    "end": "1760399"
  },
  {
    "text": "is not the way we want to do security we want to say who's allowed to talk to us not who is not allowed to talk to us because that's that would be really hard",
    "start": "1760399",
    "end": "1767330"
  },
  {
    "text": "to get right and luckily they fix this in in later versions so we now have a",
    "start": "1767330",
    "end": "1774110"
  },
  {
    "text": "much wider way of awfully doing authorization as well so in this case we",
    "start": "1774110",
    "end": "1779840"
  },
  {
    "text": "have a couple of rules with any services that start with tests anyone can call them but if there's a service called",
    "start": "1779840",
    "end": "1786980"
  },
  {
    "text": "bookstore default as we see it goes local and you're trying to go to the reviews paths and using get there you",
    "start": "1786980",
    "end": "1795950"
  },
  {
    "text": "can add two constraints so we can do kind of fine-grained authorization here I'm not sure that I think this is a good",
    "start": "1795950",
    "end": "1801980"
  },
  {
    "text": "idea I would rather use like an authorization that says you're allowed to speak to the service or not and put",
    "start": "1801980",
    "end": "1807380"
  },
  {
    "text": "the actual authorization in the application itself but it's possible at least here is another here is how we",
    "start": "1807380",
    "end": "1816950"
  },
  {
    "text": "bind this we created the service role and then we can bind this role to a service account so in the previous",
    "start": "1816950",
    "end": "1823909"
  },
  {
    "text": "version we have everything in one but now in the latest version of this do we have two different so we created us a",
    "start": "1823909",
    "end": "1829250"
  },
  {
    "text": "row and then we bind the role to a service account so and we allow them to to talk we can also do something like",
    "start": "1829250",
    "end": "1837500"
  },
  {
    "text": "this so we have this properties request auth claims email okay what's this all",
    "start": "1837500",
    "end": "1843740"
  },
  {
    "text": "about well actually sto doesn't just add service to service mutual TLS but it",
    "start": "1843740",
    "end": "1850070"
  },
  {
    "text": "also adds a way to do end-user validation so this is implemented it for",
    "start": "1850070",
    "end": "1858019"
  },
  {
    "text": "now it supports JSON web tokens jots and we can have sto check the signature of",
    "start": "1858019",
    "end": "1864230"
  },
  {
    "text": "these tokens on their way in instead of having to do it ourselves in the applications and it it supports what",
    "start": "1864230",
    "end": "1872600"
  },
  {
    "text": "zero firebase Google auth but you can also do your own if you want to and it's quite it's actually quite easy",
    "start": "1872600",
    "end": "1878570"
  },
  {
    "text": "to set up so in this case we have a service and what we configure it to do",
    "start": "1878570",
    "end": "1884540"
  },
  {
    "text": "is we can say this is where you find my my JSON web keys or in this location",
    "start": "1884540",
    "end": "1890299"
  },
  {
    "text": "here and if you ever see a token coming in with an issuer called demo you're",
    "start": "1890299",
    "end": "1896570"
  },
  {
    "text": "gonna use this disc the key the public keys that you find on this location to",
    "start": "1896570",
    "end": "1901820"
  },
  {
    "text": "try to verify it so I have an example of that as well so in this case I have a",
    "start": "1901820",
    "end": "1910490"
  },
  {
    "text": "service that's deployed on my cluster and if I try to invoke it I get a 401 unauthorized as you can see up here if I",
    "start": "1910490",
    "end": "1919850"
  },
  {
    "text": "look at what's what's actually deployed in this cluster its I have added a",
    "start": "1919850",
    "end": "1927049"
  },
  {
    "text": "policy and the important parts are what you see down here this is the like the",
    "start": "1927049",
    "end": "1933049"
  },
  {
    "text": "demo in key store and the demo is sure that that's used if you do the tasks for",
    "start": "1933049",
    "end": "1939650"
  },
  {
    "text": "a phrase do that's in the documentation so I have to have a token and luckily I",
    "start": "1939650",
    "end": "1945080"
  },
  {
    "text": "have a talk you know as well so I can try to call this with the token it",
    "start": "1945080",
    "end": "1950090"
  },
  {
    "text": "should be here and actually it's failing right now that's fun always fun probably",
    "start": "1950090",
    "end": "1956419"
  },
  {
    "text": "it might be because I'm now I'm not connected to the internet and it can't download the JSON web pieces it's gonna",
    "start": "1956419",
    "end": "1962600"
  },
  {
    "text": "fail normally what would happen is it would it would add the original it will",
    "start": "1962600",
    "end": "1969020"
  },
  {
    "text": "forward the original token in the header to the end target service yeah",
    "start": "1969020",
    "end": "1978460"
  },
  {
    "text": "so the sto authorization is coarse-grained it's on you can do like",
    "start": "1979850",
    "end": "1987090"
  },
  {
    "text": "path based authorization you can do source based authorization but I'm not",
    "start": "1987090",
    "end": "1994649"
  },
  {
    "text": "really sure that this is where I want to add those kinds of things I'm I'm um",
    "start": "1994649",
    "end": "1999740"
  },
  {
    "text": "I've seen these things go wrong many times so I'm not sure that that's what I want to do and and and there's also",
    "start": "1999740",
    "end": "2005269"
  },
  {
    "text": "something other than some other thing that's a bit annoying at the moment and that's issue it doesn't forward this",
    "start": "2005269",
    "end": "2011389"
  },
  {
    "text": "beefy identity to the container as such the the authorization stops in",
    "start": "2011389",
    "end": "2017120"
  },
  {
    "text": "the in the proxy so the application itself has no way of knowing which",
    "start": "2017120",
    "end": "2022549"
  },
  {
    "text": "service was calling it so if this was like let's say this was a search index or something and you wanted to have",
    "start": "2022549",
    "end": "2028820"
  },
  {
    "text": "different search indexes for different micro services there's no way for the pot itself to know which service is now",
    "start": "2028820",
    "end": "2035029"
  },
  {
    "text": "calling in which data to provide I added this as an issue in in the github repo",
    "start": "2035029",
    "end": "2040690"
  },
  {
    "text": "but that issue repo has now been renamed to old issues repo because then I moved",
    "start": "2040690",
    "end": "2046159"
  },
  {
    "text": "all the issues to a new repo but it didn't move mine but then someone else actually added a new issue on the new",
    "start": "2046159",
    "end": "2052908"
  },
  {
    "text": "rep repo and they're now considering adding this in 1.1 so you can actually",
    "start": "2052909",
    "end": "2058429"
  },
  {
    "text": "get the spiffy ID all the way into the application and know who the callers are",
    "start": "2058429",
    "end": "2063970"
  },
  {
    "text": "you can also use these sto certs without the sidecar so you don't have to use the",
    "start": "2064089",
    "end": "2069800"
  },
  {
    "text": "proxy and this this can actually be a bit useful if if you let's say you you at the moment you want to be able to",
    "start": "2069800",
    "end": "2076908"
  },
  {
    "text": "know which certificates are coming in or which clients are calling you but you don't want to use the proxy because you want to have the certificates all the",
    "start": "2076909",
    "end": "2082669"
  },
  {
    "text": "way into your application what you could do it is you could set up an engine X for instance and you can use that to to",
    "start": "2082669",
    "end": "2088158"
  },
  {
    "text": "verify the certificates and then forward the identities into your applications so because these certificates they're just",
    "start": "2088159",
    "end": "2095270"
  },
  {
    "text": "Cuba NetID secrets which also means that they're just stored as base64 encoded",
    "start": "2095270",
    "end": "2100820"
  },
  {
    "text": "stuff in the cluster but yeah you can you can you can use them you can mount them into your own applications so what",
    "start": "2100820",
    "end": "2107720"
  },
  {
    "text": "I usually do is my when I've done this is unmounted Emma's volumes into the containers and then actually what kubernetes will",
    "start": "2107720",
    "end": "2115160"
  },
  {
    "text": "do is it whenever the secret changes it will update the volume that's mounted",
    "start": "2115160",
    "end": "2120230"
  },
  {
    "text": "into the application this is contrary to popular belief that like when you start",
    "start": "2120230",
    "end": "2125810"
  },
  {
    "text": "a container if whatever changes you do to the sequence it's not going to be reflected then you have to restart the",
    "start": "2125810",
    "end": "2131210"
  },
  {
    "text": "containers but secrets are actually updated and I have a demo of this as",
    "start": "2131210",
    "end": "2137540"
  },
  {
    "text": "well because we can set up an application that's like kind of listening for filesystem events and then reloads their certificates so in in",
    "start": "2137540",
    "end": "2144920"
  },
  {
    "text": "node.js we can simply do something like this I've mounted the certificates under a slash secret and then I can do FS",
    "start": "2144920",
    "end": "2150470"
  },
  {
    "text": "watch watch for changes and whenever there's a change I'm gonna notify the",
    "start": "2150470",
    "end": "2157010"
  },
  {
    "text": "clients so I have this tiny little website here which has a it now has a",
    "start": "2157010",
    "end": "2163160"
  },
  {
    "text": "certificate that's loaded you don't really have to read what's up there just says there is a certificate and it was",
    "start": "2163160",
    "end": "2168860"
  },
  {
    "text": "loaded and I'm now going to go in and show you what we can do with this because we now have these secrets here",
    "start": "2168860",
    "end": "2176990"
  },
  {
    "text": "and you can see the sto secrets are called sto dot and then the name of the service account and the type is sto dot io key",
    "start": "2176990",
    "end": "2184610"
  },
  {
    "text": "insert so we didn't it such a secret we have the private key we have the public",
    "start": "2184610",
    "end": "2190280"
  },
  {
    "text": "key and we have the CA chain so we can mount this in but what happens if we",
    "start": "2190280",
    "end": "2195620"
  },
  {
    "text": "delete one of them so now I'm going to delete the one called SPO website up there and what I'm doing up here with",
    "start": "2195620",
    "end": "2202670"
  },
  {
    "text": "the dot with the dash W is I'm watching what are the what secrets are there so",
    "start": "2202670",
    "end": "2207800"
  },
  {
    "text": "immediately when I delete this it's gonna say a something something went",
    "start": "2207800",
    "end": "2212840"
  },
  {
    "text": "missing and then it's gonna actually create a new one so if I delete a secret I can do this many times if I delete",
    "start": "2212840",
    "end": "2217940"
  },
  {
    "text": "it's just gonna immediately create a new one from for me and this is this is the",
    "start": "2217940",
    "end": "2223730"
  },
  {
    "text": "watching part this is what all the rights that the the Citadel has where it's kind of watching all kinds of stuff",
    "start": "2223730",
    "end": "2229040"
  },
  {
    "text": "watching all the secrets throughout the cluster this is what it's using so it's it's also watching these things if I now",
    "start": "2229040",
    "end": "2236360"
  },
  {
    "text": "go back to this this website you can see it's now updated because II it got only",
    "start": "2236360",
    "end": "2242870"
  },
  {
    "text": "the filesystem events that says hey this secret is updated you now have a new certificate so we now got a new certificate with a new expiry",
    "start": "2242870",
    "end": "2249380"
  },
  {
    "text": "because I just killed the old one and it immediately adds a new one so this isn't this is quite easy to just",
    "start": "2249380",
    "end": "2254660"
  },
  {
    "text": "listen on filesystem event no when the certificate is updated and then changed to using that I'm my worries about using",
    "start": "2254660",
    "end": "2266690"
  },
  {
    "text": "SEO and and a service mesh of any other kind is miss configuration so let's say",
    "start": "2266690",
    "end": "2272750"
  },
  {
    "text": "we're setting this up we're adding all kinds of applications to to our kubernetes cluster and then we messed",
    "start": "2272750",
    "end": "2278540"
  },
  {
    "text": "something up with the configuration and if we now trusted all authorization authentication and everything else to",
    "start": "2278540",
    "end": "2284510"
  },
  {
    "text": "these to sto and history was not working properly well all the security is",
    "start": "2284510",
    "end": "2290780"
  },
  {
    "text": "basically borked also I'm a bit worried about broken access control because I I'm wondering if we're gonna see cases",
    "start": "2290780",
    "end": "2298040"
  },
  {
    "text": "where things are not handled the same way in the proxy as in the application itself we can have some kind of",
    "start": "2298040",
    "end": "2305270"
  },
  {
    "text": "impedance mismatch between how they do URL parsing for instance so maybe it's",
    "start": "2305270",
    "end": "2310280"
  },
  {
    "text": "GOC something is to say well this is okay but then when it comes into the application it does a double decode or",
    "start": "2310280",
    "end": "2315290"
  },
  {
    "text": "something and then it kind of fails regardless so there are some things to",
    "start": "2315290",
    "end": "2320480"
  },
  {
    "text": "look for there also is tio bugs like we had the the timing bugs but there's there's been some other bugs as well so",
    "start": "2320480",
    "end": "2327410"
  },
  {
    "text": "what I would do is I would use some kind of tests and kind of automate automated",
    "start": "2327410",
    "end": "2332660"
  },
  {
    "text": "verification tests that checks whether or not you have access and things like that",
    "start": "2332660",
    "end": "2337839"
  },
  {
    "text": "assign odom bugs in when sto was zero point our 1.0 the two was released in",
    "start": "2337839",
    "end": "2343820"
  },
  {
    "text": "September 2018 one of the things that I wanted to fix was a bug in envoy where",
    "start": "2343820",
    "end": "2348980"
  },
  {
    "text": "the sidecar would crash if receiving normal traffic on the mutual TLS port that's kind of a nasty bug and we just",
    "start": "2348980",
    "end": "2354650"
  },
  {
    "text": "killed the proxy immediately if you try to send non TLS traffic so there there",
    "start": "2354650",
    "end": "2361670"
  },
  {
    "text": "have been quite a few bugs there was a big blog post couple of months ago also where someone was writing about all the",
    "start": "2361670",
    "end": "2367460"
  },
  {
    "text": "problems that they had we just do and it's it is still quite new so but I it",
    "start": "2367460",
    "end": "2372619"
  },
  {
    "text": "looks like there's a lot of power behind it so and I think it's going to be quite",
    "start": "2372619",
    "end": "2379070"
  },
  {
    "text": "good actually and it's getting there now because they're doing a lot of work on it all the time",
    "start": "2379070",
    "end": "2386109"
  },
  {
    "text": "another question that I've gotten is like are our service meshes the new app servers and what what I mean by there or",
    "start": "2386420",
    "end": "2392960"
  },
  {
    "text": "what what the person meant by that this was for those of you who have been developing job applications on App",
    "start": "2392960",
    "end": "2399470"
  },
  {
    "text": "servers you know that we we we took out a lot of the stuff that was in the application and we put them in the app",
    "start": "2399470",
    "end": "2404690"
  },
  {
    "text": "server so the app servers they would do authentication and authorization and they would do database connection pooling and they would do all kinds of",
    "start": "2404690",
    "end": "2410390"
  },
  {
    "text": "stuff and this is kind of in the direction where is do is or is do some of these",
    "start": "2410390",
    "end": "2416059"
  },
  {
    "text": "things as well it kind of pulls things out of the application and to kind of understand why this is a problem",
    "start": "2416059",
    "end": "2421250"
  },
  {
    "text": "consider as a thing such as a service breakers with retries like how would you",
    "start": "2421250",
    "end": "2428030"
  },
  {
    "text": "know if it's ok to retry this thing is if it failed that's probably something the application itself knows better than",
    "start": "2428030",
    "end": "2434809"
  },
  {
    "text": "the service mesh-like is it okay to try to transfer this amount of money more",
    "start": "2434809",
    "end": "2440540"
  },
  {
    "text": "than once if it fails the first time maybe not maybe you don't want to do that so like use a bit of caution when",
    "start": "2440540",
    "end": "2446839"
  },
  {
    "text": "you're when you're using something like this that's that's basically what I'm trying to say here",
    "start": "2446839",
    "end": "2452540"
  },
  {
    "text": "so to summarize all of this sto provides",
    "start": "2452540",
    "end": "2460190"
  },
  {
    "text": "quite a lot of things most importantly security wise is this service to service authentication through mutual TLS and",
    "start": "2460190",
    "end": "2466849"
  },
  {
    "text": "this allows us to to have encrypted channels so if we go all the way back to",
    "start": "2466849",
    "end": "2472849"
  },
  {
    "text": "the threats that we looked at at the beginning we now have even if this attacker is able to breach one of our",
    "start": "2472849",
    "end": "2479720"
  },
  {
    "text": "containers that doesn't necessarily mean that that attacker is able to attack other containers the attacker would",
    "start": "2479720",
    "end": "2485000"
  },
  {
    "text": "still be able to try to breach out of the container if the if the platform itself had vulnerabilities but at least",
    "start": "2485000",
    "end": "2491180"
  },
  {
    "text": "we've now we've used this to try to protect the services that we have from",
    "start": "2491180",
    "end": "2497390"
  },
  {
    "text": "each other we can can have end-user authentication through JWT I'm guessing",
    "start": "2497390",
    "end": "2505460"
  },
  {
    "text": "that they might want to add other types of end user authentication as well we",
    "start": "2505460",
    "end": "2511220"
  },
  {
    "text": "can actually choose where we want to do the JWT evaluation as well we can do it either on the ingress so all the way to",
    "start": "2511220",
    "end": "2517400"
  },
  {
    "text": "the front where when the request is coming into the cluster or we can do it at the proxy level itself when I try to",
    "start": "2517400",
    "end": "2524690"
  },
  {
    "text": "do this recently while preparing this talk it's failed when I try to do it in",
    "start": "2524690",
    "end": "2530240"
  },
  {
    "text": "the proxy I can do it in the ingress but I can't do it in the proxy I would just get out of 503 service unavailable all",
    "start": "2530240",
    "end": "2536120"
  },
  {
    "text": "the time if I try to do it and in the proxy itself so it had to be on the",
    "start": "2536120",
    "end": "2541520"
  },
  {
    "text": "ingress for now I'm not sure what's going on there was a big discussion on",
    "start": "2541520",
    "end": "2547070"
  },
  {
    "text": "github about this as well why it wasn't working it might be because the cluster I'm using is mini cube which is like a 1",
    "start": "2547070",
    "end": "2553460"
  },
  {
    "text": "DM given a DS cluster and it's not quite the same as running in a proper",
    "start": "2553460",
    "end": "2559430"
  },
  {
    "text": "kubernetes cluster we as mentioned we can do authorization through policies so",
    "start": "2559430",
    "end": "2565070"
  },
  {
    "text": "we we use policies to set up who can talk to who and if they need to use mutual TLS and all kinds of stuff and we",
    "start": "2565070",
    "end": "2571850"
  },
  {
    "text": "can of course you do the rate-limiting and the other things as well with Google being one of the the",
    "start": "2571850",
    "end": "2578900"
  },
  {
    "text": "companies behind this do it's really easy to set this up if you're using",
    "start": "2578900",
    "end": "2584050"
  },
  {
    "text": "containers on kubernetes on a Google cloud because they've done a lot of work",
    "start": "2584050",
    "end": "2590570"
  },
  {
    "text": "to make it easy to deploy but it's also quite easy to deploy on a normal machine",
    "start": "2590570",
    "end": "2596330"
  },
  {
    "text": "as well like on for instance on mini cube because what you get when you",
    "start": "2596330",
    "end": "2601490"
  },
  {
    "text": "download the code is is a set of of deployment files so let's see here so I",
    "start": "2601490",
    "end": "2613760"
  },
  {
    "text": "downloaded version 1.0 dot 5 here and have the old one dot zero dot one as",
    "start": "2613760",
    "end": "2619700"
  },
  {
    "text": "well and in inherit is an install folder and we can choose where we want to",
    "start": "2619700",
    "end": "2626120"
  },
  {
    "text": "install it so we can say ok this is Cuban Alice or it's googled out and there are some some of the llamo files",
    "start": "2626120",
    "end": "2632900"
  },
  {
    "text": "that we can use to install it there is also an idea about you being able to use sto outside of kubernetes so",
    "start": "2632900",
    "end": "2639800"
  },
  {
    "text": "you can have some workloads that exists on other types of hosts like in just",
    "start": "2639800",
    "end": "2645500"
  },
  {
    "text": "like a normal occasional running in a VM or something like that that could also be a part of",
    "start": "2645500",
    "end": "2650539"
  },
  {
    "text": "the service mesh because the service mesh can be extended outside of kubernetes went through the mechanisms",
    "start": "2650539",
    "end": "2657829"
  },
  {
    "text": "that they've added which is also quite interesting because then we we're not no longer limited to to only using this in",
    "start": "2657829",
    "end": "2664160"
  },
  {
    "text": "incriminates there are some resources if",
    "start": "2664160",
    "end": "2670760"
  },
  {
    "text": "you want to learn more about this the first part here is the security documentation under Doc's concept",
    "start": "2670760",
    "end": "2677000"
  },
  {
    "text": "security there's the documentation for sto is super good I'm really impressed with",
    "start": "2677000",
    "end": "2682160"
  },
  {
    "text": "what they've done and especially these tasks that they have where you cannot just do security related tasks but you",
    "start": "2682160",
    "end": "2687890"
  },
  {
    "text": "can do all kinds of tasks related to Sto so you can do you you get a set of applications that you can deploy and",
    "start": "2687890",
    "end": "2694819"
  },
  {
    "text": "then you can set up these kind of circuit breakers and fault injection and all kinds of things through these tasks",
    "start": "2694819",
    "end": "2700160"
  },
  {
    "text": "so this is a really good way to learn it if you want to try it out there's also really good talk called sto",
    "start": "2700160",
    "end": "2707089"
  },
  {
    "text": "defense-in-depth from modern production environment from cloud next last year which I also recommend that you take a",
    "start": "2707089",
    "end": "2713480"
  },
  {
    "text": "look at if you find this to be interesting but yeah the documentation is super good so you can learn a lot of",
    "start": "2713480",
    "end": "2719059"
  },
  {
    "text": "the stuff that you can do it with ease just by reading the documentation may be",
    "start": "2719059",
    "end": "2724339"
  },
  {
    "text": "setting up mini cube yourself the way I did and just install it stay on that or or using Google Cloud for that matter",
    "start": "2724339",
    "end": "2731119"
  },
  {
    "text": "and set it up there instead so I tried to find a picture to explain what a pot",
    "start": "2731119",
    "end": "2738200"
  },
  {
    "text": "is and this thing came up as a pods works together lights music and sounds bounce back and forth so this is the",
    "start": "2738200",
    "end": "2745220"
  },
  {
    "text": "sidecar on one side and the service on the sorry",
    "start": "2745220",
    "end": "2749710"
  },
  {
    "text": "that's it any questions at all",
    "start": "2750589",
    "end": "2755799"
  },
  {
    "text": "yes [Music]",
    "start": "2759500",
    "end": "2765869"
  },
  {
    "text": "so trying to rephrase kubernetes has a lot of complexity is too adds more",
    "start": "2782470",
    "end": "2788750"
  },
  {
    "text": "complexity and a lot of companies are concerned with this complexity when when",
    "start": "2788750",
    "end": "2793820"
  },
  {
    "text": "will sto be production ready that's a good question I know there are some companies that are now using in the in",
    "start": "2793820",
    "end": "2799849"
  },
  {
    "text": "production I think knob here in Oslo is using it in production at least to some degree",
    "start": "2799849",
    "end": "2806240"
  },
  {
    "text": "there has been some issues with it they have some issues with like health checks",
    "start": "2806240",
    "end": "2811640"
  },
  {
    "text": "in kubernetes as far as I understood from them so but this is something",
    "start": "2811640",
    "end": "2817400"
  },
  {
    "text": "that's being worked on all the time and there's there seems to be quite a big a",
    "start": "2817400",
    "end": "2822619"
  },
  {
    "text": "lot of commits coming into to the github repo and iGoogle and and with Google and",
    "start": "2822619",
    "end": "2828380"
  },
  {
    "text": "these other companies being behind it I think we're we're kind of approaching in a setting with that said I would never",
    "start": "2828380",
    "end": "2835220"
  },
  {
    "text": "run my own kubernetes cluster like try to set up a burn areas or nodes because that's super complex tasks so I would",
    "start": "2835220",
    "end": "2842390"
  },
  {
    "text": "probably use this on on my cloud providers urban area set ups like Google",
    "start": "2842390",
    "end": "2847400"
  },
  {
    "text": "cloud or maybe usher or or Amazon any",
    "start": "2847400",
    "end": "2854690"
  },
  {
    "text": "other questions",
    "start": "2854690",
    "end": "2857260"
  },
  {
    "text": "do okay thanks for listening [Applause]",
    "start": "2860380",
    "end": "2871268"
  }
]