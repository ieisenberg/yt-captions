[
  {
    "text": "and I think the experience so far is great at all although we have some",
    "start": "0",
    "end": "6060"
  },
  {
    "text": "hiccups here and there and I'm actually now talking for my from the Lego room of",
    "start": "6060",
    "end": "11490"
  },
  {
    "text": "my son which I converted into my office now for the pandemic so I'm Michael",
    "start": "11490",
    "end": "19470"
  },
  {
    "text": "Stipe I'm a Microsoft MVP and I'm the author of the hot chocolate",
    "start": "19470",
    "end": "25109"
  },
  {
    "text": "Raphael library and today I want to explore with you what rough world is and",
    "start": "25109",
    "end": "31579"
  },
  {
    "text": "how we can make dotnet better with it so when I go to conferences and user groups",
    "start": "31579",
    "end": "39149"
  },
  {
    "text": "and lot of them if developers still don't know what Raphael is what you can",
    "start": "39149",
    "end": "44460"
  },
  {
    "text": "do with it and there's also a list a lot of misunderstanding what graph will",
    "start": "44460",
    "end": "50280"
  },
  {
    "text": "actually can do for you so Roth guerre actually was developed by",
    "start": "50280",
    "end": "56520"
  },
  {
    "text": "Facebook in 2012 and they did that because when they started developing",
    "start": "56520",
    "end": "64080"
  },
  {
    "text": "mobile applications I don't know if any of you remember that it was actually",
    "start": "64080",
    "end": "69360"
  },
  {
    "text": "quite a disaster for them because they tried basically to use standard internet",
    "start": "69360",
    "end": "75590"
  },
  {
    "text": "technology like HTML and rest to build their mobile applications and when these",
    "start": "75590",
    "end": "82830"
  },
  {
    "text": "came out they a lot of criticism but they are too slow they eat through your",
    "start": "82830",
    "end": "89670"
  },
  {
    "text": "battery life and on top of that they used a lot of lose a lot of your data",
    "start": "89670",
    "end": "97020"
  },
  {
    "text": "plans so Facebook back then sat down",
    "start": "97020",
    "end": "103439"
  },
  {
    "text": "with the engineers and they looked into the problem and they discovered that",
    "start": "103439",
    "end": "108600"
  },
  {
    "text": "their application actually had a ton of data just by starting up so they",
    "start": "108600",
    "end": "115649"
  },
  {
    "text": "basically opened up hundreds of connection just by opening the application so in order to explore that",
    "start": "115649",
    "end": "122430"
  },
  {
    "text": "a little bit what actually went wrong with the application I've prepared a little demo because I like a lot of",
    "start": "122430",
    "end": "129840"
  },
  {
    "text": "hands on in presentations so start with the devil so what I want to do with you is",
    "start": "129840",
    "end": "135900"
  },
  {
    "text": "basically salt a little algorithm here what we want to do is basically fetching",
    "start": "135900",
    "end": "142050"
  },
  {
    "text": "and fetching data from REST API that is called the Star Wars API and our little",
    "start": "142050",
    "end": "149550"
  },
  {
    "text": "algorithm that we want to create with the Stowers API is to fetch all the",
    "start": "149550",
    "end": "154680"
  },
  {
    "text": "characters that appeared alongside luke skywalker in movies it's an easy enough task we",
    "start": "154680",
    "end": "161340"
  },
  {
    "text": "just want to build up a list of names with all the characters that appeared in Star Wars movies alongside loops color",
    "start": "161340",
    "end": "167790"
  },
  {
    "text": "and there is a API that is called swap eco or I'm using now a different clone",
    "start": "167790",
    "end": "174870"
  },
  {
    "text": "of it which basically gives us all the data and in rest data is organized in",
    "start": "174870",
    "end": "182160"
  },
  {
    "text": "resources so rest services typically expose like resources through endpoints",
    "start": "182160",
    "end": "188489"
  },
  {
    "text": "and they are easy experiment on this service we have four instances of people",
    "start": "188489",
    "end": "194610"
  },
  {
    "text": "and point that exposes all the characters of Star Wars that appeared in",
    "start": "194610",
    "end": "202200"
  },
  {
    "text": "any movie we have other resources like the firm resource and species resource",
    "start": "202200",
    "end": "207330"
  },
  {
    "text": "Starship resource and home that you that is associated with Star Wars and it's",
    "start": "207330",
    "end": "213900"
  },
  {
    "text": "kind of if we want to build our algorithm that fetches all the characters that appear together with",
    "start": "213900",
    "end": "218940"
  },
  {
    "text": "luke skywalker's we might want to start and fetch maybe first the people's end point and look what data it has so if we",
    "start": "218940",
    "end": "227400"
  },
  {
    "text": "fetch the people's list here then we would get to though as we expect maybe a",
    "start": "227400",
    "end": "234360"
  },
  {
    "text": "list of characters and these if we look into the data it's easy understandable",
    "start": "234360",
    "end": "241260"
  },
  {
    "text": "because it's just jay-z instance we have here a luke skywalker character and the",
    "start": "241260",
    "end": "247799"
  },
  {
    "text": "next is maybe a three CPU and so on or the character and and we also can see",
    "start": "247799",
    "end": "253230"
  },
  {
    "text": "that we down here have attribute called URL which is pointing to the reference",
    "start": "253230",
    "end": "260070"
  },
  {
    "text": "to this specific object so if you would follow that along we would get the loot",
    "start": "260070",
    "end": "265919"
  },
  {
    "text": "the single Luke Skywalker object and it's again easy to explore if",
    "start": "265919",
    "end": "271610"
  },
  {
    "text": "we look for the data that we need for our I've no reason we might see okay there's a name in the character object",
    "start": "271610",
    "end": "278150"
  },
  {
    "text": "which is good because we want to build a list of names and then I can see here there is an array of films and when I",
    "start": "278150",
    "end": "287540"
  },
  {
    "text": "think about it we just need to grab these items that are in the array of therms and if you look at that is again",
    "start": "287540",
    "end": "294580"
  },
  {
    "text": "reference is pointing to the actual movie objects there I could again follow",
    "start": "294580",
    "end": "300139"
  },
  {
    "text": "these along and get basically the specific movie objects and I again see",
    "start": "300139",
    "end": "309050"
  },
  {
    "text": "that lots of like there's a title of the movie there is a opening for describing",
    "start": "309050",
    "end": "314090"
  },
  {
    "text": "the movie and also we can see there is a character's array again with lots of",
    "start": "314090",
    "end": "320570"
  },
  {
    "text": "references pointing to the characters so it's easy now to guess how we would need",
    "start": "320570",
    "end": "327260"
  },
  {
    "text": "to build our algorithm to fetch that data so let's head over to visual studio",
    "start": "327260",
    "end": "332960"
  },
  {
    "text": "code when I prepared already this algorithm and let me scroll to the rest",
    "start": "332960",
    "end": "338390"
  },
  {
    "text": "huh gruesome and let me walk you through that it's the only JavaScript I will",
    "start": "338390",
    "end": "343610"
  },
  {
    "text": "show today the other code is all nice done it so basically the first thing",
    "start": "343610",
    "end": "349580"
  },
  {
    "text": "that we do is we go to fetch luke gonna fetch the character one and then we",
    "start": "349580",
    "end": "356750"
  },
  {
    "text": "basically start iterating over the movies array and then we're gonna fetch each of those movies and then we're",
    "start": "356750",
    "end": "364100"
  },
  {
    "text": "gonna iterate over each of those movie objects characters array and fetch each",
    "start": "364100",
    "end": "369800"
  },
  {
    "text": "of the characters because these are actually the characters that we want and then we just extract from their payload",
    "start": "369800",
    "end": "376100"
  },
  {
    "text": "the name and if we look at this already we already can see that this might be",
    "start": "376100",
    "end": "381710"
  },
  {
    "text": "not the best approach to fetching data because we will have a lot of requests",
    "start": "381710",
    "end": "389030"
  },
  {
    "text": "that are dependent on each other so I have the program already here let up",
    "start": "389030",
    "end": "395330"
  },
  {
    "text": "because my internet is not so good let me get my prepared version here",
    "start": "395330",
    "end": "402050"
  },
  {
    "text": "this one and I already ran this test hood in the morning and I would actually",
    "start": "402050",
    "end": "409099"
  },
  {
    "text": "do it life but with my network issues I refer to that a fixed version so what we",
    "start": "409099",
    "end": "415639"
  },
  {
    "text": "can see basically is that that our have arisen rent for thirty thirteen seconds and it took sixty two requests and we",
    "start": "415639",
    "end": "423949"
  },
  {
    "text": "can already see that we have kind of a data waterfall where we have the emulation request and then our movie",
    "start": "423949",
    "end": "430819"
  },
  {
    "text": "requests waited for this one and then issued more requests and this is exactly what happened with the Facebook app",
    "start": "430819",
    "end": "438020"
  },
  {
    "text": "basically they fetched their their timeline and then had to fetch the",
    "start": "438020",
    "end": "445759"
  },
  {
    "text": "comments had to fetch other related data and took forever to get all the data",
    "start": "445759",
    "end": "450909"
  },
  {
    "text": "display and the another thing here yes you also fetch a lot of data that you",
    "start": "450909",
    "end": "457099"
  },
  {
    "text": "don't need you can see there are like 577 bytes here 780 bind there and",
    "start": "457099",
    "end": "463400"
  },
  {
    "text": "actually I just want the name so let's let's let's have a peek how we would get",
    "start": "463400",
    "end": "470150"
  },
  {
    "text": "at such a problem was wrapped well so I have another program prepared here I",
    "start": "470150",
    "end": "476060"
  },
  {
    "text": "basically rewrote we wrote that I just",
    "start": "476060",
    "end": "483650"
  },
  {
    "text": "rewrote the graphical server on top of the rest service behind that and that is",
    "start": "483650",
    "end": "492440"
  },
  {
    "text": "basically exporting this Star Wars API in a draft platform okay so this 2 is",
    "start": "492440",
    "end": "498469"
  },
  {
    "text": "called banana cake pop is is built by our project and it is an awesome way to",
    "start": "498469",
    "end": "503569"
  },
  {
    "text": "explore Bradford API so I put in my graph where service right here and when",
    "start": "503569",
    "end": "512060"
  },
  {
    "text": "I click here on the left hand side on the book I can I can see that there is a",
    "start": "512060",
    "end": "517520"
  },
  {
    "text": "very root type and I have a field called character that is basically the data",
    "start": "517520",
    "end": "523430"
  },
  {
    "text": "that I can vary for so I can already look at that so if I want to explore",
    "start": "523430",
    "end": "528980"
  },
  {
    "text": "that more I can click on that character here and I can see okay let returns a",
    "start": "528980",
    "end": "534380"
  },
  {
    "text": "character and the character has like a couple of heels here and I can see this character",
    "start": "534380",
    "end": "541710"
  },
  {
    "text": "exposes a movie when I click on that I can see old it returns a movie object it's different and with the rest",
    "start": "541710",
    "end": "549390"
  },
  {
    "text": "approach where I got this references to the movie here I get the actual object and I again can explore my movie object",
    "start": "549390",
    "end": "557730"
  },
  {
    "text": "here and see that I can call the carrots so basically like the rest so let's go",
    "start": "557730",
    "end": "564120"
  },
  {
    "text": "back to my Trebek pay and so in this Bradford IDE on the left hand side I can write my query on the right hand side I",
    "start": "564120",
    "end": "571620"
  },
  {
    "text": "can get the result so let's explore how we would write a graphic Remy so in rough I would start with the",
    "start": "571620",
    "end": "578940"
  },
  {
    "text": "keyword query and then with curly braces and then the tool will already help me along and today offer me what I can do",
    "start": "578940",
    "end": "586200"
  },
  {
    "text": "so in this case I can ask the character the character needs an ID and I already",
    "start": "586200",
    "end": "591570"
  },
  {
    "text": "know from the resting point that my ID is 1 and I actually can drill into that",
    "start": "591570",
    "end": "599100"
  },
  {
    "text": "I for instance and pick the name of the character and maybe just let's execute",
    "start": "599100",
    "end": "607950"
  },
  {
    "text": "that and see Oh awesome I just get that back what I am requested",
    "start": "607950",
    "end": "614970"
  },
  {
    "text": "so I asked for the character of Luke and I get back the Luke Skywalker character there ok let's let's explore that",
    "start": "614970",
    "end": "621150"
  },
  {
    "text": "further I can drill into the date of his I can pick the movies and I may be asked",
    "start": "621150",
    "end": "628260"
  },
  {
    "text": "for the title of the movie and then I also can drill into the characters and",
    "start": "628260",
    "end": "633270"
  },
  {
    "text": "ask for the name of the character it's issued that request boom I already have",
    "start": "633270",
    "end": "638460"
  },
  {
    "text": "the data it's super fast and remember behind that service is the actual rest",
    "start": "638460",
    "end": "644880"
  },
  {
    "text": "service that we used earlier but it's much faster in here and I can already",
    "start": "644880",
    "end": "650700"
  },
  {
    "text": "see I quite have what I want but actually why I'm losing let's get rid of these two",
    "start": "650700",
    "end": "656220"
  },
  {
    "text": "and basically I'm done so compare this to the algorithm that we had to write",
    "start": "656220",
    "end": "662430"
  },
  {
    "text": "for the rest service and here I just wrote the graph query and send it over",
    "start": "662430",
    "end": "667800"
  },
  {
    "text": "HTTP to my graphical server and get exactly the data back that I need nor creation on",
    "start": "667800",
    "end": "674029"
  },
  {
    "text": "the client the aggregation is done in the cloud where we have unlimited bandwidth and where we are close to our",
    "start": "674029",
    "end": "680449"
  },
  {
    "text": "micro services ok let's go back to our",
    "start": "680449",
    "end": "687009"
  },
  {
    "text": "benchmark I pre ran this also and when you look the benchmark actually says 105",
    "start": "687009",
    "end": "694519"
  },
  {
    "text": "milliseconds for to fetch these characters but actually it was 47",
    "start": "694519",
    "end": "699949"
  },
  {
    "text": "milliseconds that it needed yeah because wrong some kind needed to",
    "start": "699949",
    "end": "705740"
  },
  {
    "text": "queue the request and actually it only needed 70 47 milliseconds to fetch this",
    "start": "705740",
    "end": "713750"
  },
  {
    "text": "data of a graph when compare that to the 30 second 13 seconds at the same time",
    "start": "713750",
    "end": "719300"
  },
  {
    "text": "that I needed to touch that all the rest okay let's go back to our slides let's",
    "start": "719300",
    "end": "725870"
  },
  {
    "text": "reflect a bit on that so with raft well I have a consumer of the API and in the",
    "start": "725870",
    "end": "735019"
  },
  {
    "text": "driver seat I define what data I want I define the shape and I define how deep I",
    "start": "735019",
    "end": "741410"
  },
  {
    "text": "want to drill into the graph and the server will give me with basically",
    "start": "741410",
    "end": "746899"
  },
  {
    "text": "filled out that graph you can maybe think of rough way when you get started with it it is not like that but you",
    "start": "746899",
    "end": "753470"
  },
  {
    "text": "can't think of it like an empty J's and graphs that you sent to the server and the server please learn up and that",
    "start": "753470",
    "end": "761990"
  },
  {
    "text": "means request and response closely aligned and that is by design and one of the big features so we could also do",
    "start": "761990",
    "end": "770420"
  },
  {
    "text": "dynamic requests was rest right we could wait something like this Amazon shop a P",
    "start": "770420",
    "end": "776509"
  },
  {
    "text": "I that can do lots of things but actually with rest it's all it's more",
    "start": "776509",
    "end": "782180"
  },
  {
    "text": "complicated because with rest basically the consume of the API was implemented",
    "start": "782180",
    "end": "787730"
  },
  {
    "text": "the back-end developer have to closely work together because the front-end",
    "start": "787730",
    "end": "794149"
  },
  {
    "text": "developer might have a requirement to support needs a smaller or larger",
    "start": "794149",
    "end": "800149"
  },
  {
    "text": "request that has more data or less data or needs an optimized",
    "start": "800149",
    "end": "805400"
  },
  {
    "text": "request so he has to walk to the back end developer and request the back end developer has to build that in and",
    "start": "805400",
    "end": "811190"
  },
  {
    "text": "there's a lot of back-end force and often things to over owners we have",
    "start": "811190",
    "end": "816200"
  },
  {
    "text": "multiple iterations of trying to fix that fix that service that we actually",
    "start": "816200",
    "end": "823700"
  },
  {
    "text": "want to build and there's a lot of frustration so what is graphic well",
    "start": "823700",
    "end": "830030"
  },
  {
    "text": "actually so graph well is a query language or your API and runtime to",
    "start": "830030",
    "end": "837770"
  },
  {
    "text": "execute on those execute those queries and in an ideal world or that's actually",
    "start": "837770",
    "end": "847010"
  },
  {
    "text": "how Facebook did it you would put a very thin layer of grudge cloud over your",
    "start": "847010",
    "end": "852500"
  },
  {
    "text": "business layer so you have with graphical a way to expose your business logic in a much better way because the",
    "start": "852500",
    "end": "859850"
  },
  {
    "text": "graphical type system knows things like interfaces Union types objects scalars",
    "start": "859850",
    "end": "866120"
  },
  {
    "text": "and you have a very rich type system that is enforced by the query engine but",
    "start": "866120",
    "end": "871640"
  },
  {
    "text": "graphical is very flexible so you don't have to do that in that way",
    "start": "871640",
    "end": "876650"
  },
  {
    "text": "we can also put that over microservices or you can put it over hold sub",
    "start": "876650",
    "end": "882680"
  },
  {
    "text": "infrastructure and basically create from those fragmented microservices one",
    "start": "882680",
    "end": "889070"
  },
  {
    "text": "monolithic throughs of sorts of tools from which you actually can pick the",
    "start": "889070",
    "end": "895100"
  },
  {
    "text": "data like you needed and the graph query engine will aggregate the data from",
    "start": "895100",
    "end": "900320"
  },
  {
    "text": "those different sources very efficiently with execution plans or data loader and",
    "start": "900320",
    "end": "907130"
  },
  {
    "text": "stuff like that so with wrapper and we strive for this one single source of",
    "start": "907130",
    "end": "913520"
  },
  {
    "text": "choose where we can pick everywhere pick the data from its as some kind a fixed",
    "start": "913520",
    "end": "919790"
  },
  {
    "text": "for the micro service world so that we still can interact with one endpoint and",
    "start": "919790",
    "end": "927410"
  },
  {
    "text": "exposes our data and this allows us to touch everything in one week first",
    "start": "927410",
    "end": "932930"
  },
  {
    "text": "because we control the requests we built the week and that basically fixes the n plus one",
    "start": "932930",
    "end": "941390"
  },
  {
    "text": "problem falls on the client-side because we don't have over fetching and all fetching is every time I had to consume",
    "start": "941390",
    "end": "949100"
  },
  {
    "text": "some data from my rest service that I actually didn't need when since the",
    "start": "949100",
    "end": "954320"
  },
  {
    "text": "first initial Luke Skywalker checked and the movies objects I didn't need them really I just needed to fetch them",
    "start": "954320",
    "end": "961670"
  },
  {
    "text": "because there was a reference to another object and that's also what under fetching is about every time I hit one",
    "start": "961670",
    "end": "968329"
  },
  {
    "text": "of those references those new eyes and I needed to fetch some other data that's basically under fetching because I",
    "start": "968329",
    "end": "975230"
  },
  {
    "text": "actually didn't want the reference I wanted the object behind and graph is",
    "start": "975230",
    "end": "982610"
  },
  {
    "text": "built on a strong type system and we won't see that in further demo what that",
    "start": "982610",
    "end": "989180"
  },
  {
    "text": "really means because these from type system I said we have interfaces we have objects and really secures me as a",
    "start": "989180",
    "end": "995630"
  },
  {
    "text": "front-end developer and also me as a back-end developer because I can put the",
    "start": "995630",
    "end": "1002529"
  },
  {
    "text": "data that we expose in a very strict type model type of type model and graph",
    "start": "1002529",
    "end": "1011260"
  },
  {
    "text": "well in real time and real time is so simple with graft well since you",
    "start": "1011260",
    "end": "1017320"
  },
  {
    "text": "basically write a simple query and we can make that real time we will see that also and all of this makes graphically a",
    "start": "1017320",
    "end": "1025270"
  },
  {
    "text": "very predictable to use so what I've told you so far is basically that which",
    "start": "1025270",
    "end": "1032980"
  },
  {
    "text": "raft where we can give the lines or the on the developers the power to ask exactly for the or what they want I",
    "start": "1032980",
    "end": "1039220"
  },
  {
    "text": "basically told you so far that we can basically drill into the data as we want",
    "start": "1039220",
    "end": "1046380"
  },
  {
    "text": "so there was a nice article on medium about that when Airbnb introduced draft",
    "start": "1046380",
    "end": "1053200"
  },
  {
    "text": "well and basically the reaction from the second Ebola class was not so good in",
    "start": "1053200",
    "end": "1059380"
  },
  {
    "text": "the beginning but actually ruff has a real opportunity for back-end developers",
    "start": "1059380",
    "end": "1065100"
  },
  {
    "text": "because we are second developers are now able to",
    "start": "1065100",
    "end": "1070510"
  },
  {
    "text": "is described our data in a much stronger way with strong types and we can define",
    "start": "1070510",
    "end": "1077140"
  },
  {
    "text": "how you issue you can request we can control what complexity a query can have",
    "start": "1077140",
    "end": "1082900"
  },
  {
    "text": "we can put in there's things like persisted Crabbie's to make it a very efficient to fetch your data so rough",
    "start": "1082900",
    "end": "1090190"
  },
  {
    "text": "way is actually really an opportunity and if we look back at the history of Facebook it was actually developed by",
    "start": "1090190",
    "end": "1098200"
  },
  {
    "text": "second engineers to solve back-end problems okay and Raphael if we look at",
    "start": "1098200",
    "end": "1108250"
  },
  {
    "text": "how prefer words so in graph per week very data through you types we learn",
    "start": "1108250",
    "end": "1114190"
  },
  {
    "text": "already the first one type which is called Trevin it's basically a side effect with a side effect we fetch of",
    "start": "1114190",
    "end": "1120520"
  },
  {
    "text": "data you could compare it to the get in rest and side effect means that the server basically can optimize the data",
    "start": "1120520",
    "end": "1128620"
  },
  {
    "text": "fetching too so that it fetches most data in parallel to get the data faster",
    "start": "1128620",
    "end": "1135400"
  },
  {
    "text": "and then we have something that called is called mutation and that is basically",
    "start": "1135400",
    "end": "1141000"
  },
  {
    "text": "the right request and mutations have side effects because they change data on",
    "start": "1141000",
    "end": "1147280"
  },
  {
    "text": "our server and it basically compares to the put post patch and delete I never knew what to for to choose all those but",
    "start": "1147280",
    "end": "1155230"
  },
  {
    "text": "in rough words just a mutation and then we have the subscription you type which",
    "start": "1155230",
    "end": "1160300"
  },
  {
    "text": "basically is our event system or pops up it's our real time data fetching so this",
    "start": "1160300",
    "end": "1165910"
  },
  {
    "text": "makes the graphical I'll really awesome to use because you have all the data",
    "start": "1165910",
    "end": "1171310"
  },
  {
    "text": "capabilities that you need you have the stateless data interaction with queries and mutation and you have the stateful",
    "start": "1171310",
    "end": "1178060"
  },
  {
    "text": "connection with reference subscriptions so let's have head to my next demo to",
    "start": "1178060",
    "end": "1184840"
  },
  {
    "text": "explore bit what that actually means let me get to my console and h1 project and",
    "start": "1184840",
    "end": "1195870"
  },
  {
    "text": "let's pick operation that was so this is another Star Wars",
    "start": "1195870",
    "end": "1201950"
  },
  {
    "text": "example this server has a bit more",
    "start": "1201950",
    "end": "1207080"
  },
  {
    "text": "operations so let's just I'm in the",
    "start": "1207080",
    "end": "1213070"
  },
  {
    "text": "localhost about 5,000 of QN defects that",
    "start": "1213070",
    "end": "1222410"
  },
  {
    "text": "okay our schema has already refreshed I can see this it's no longer valid and we",
    "start": "1222410",
    "end": "1229190"
  },
  {
    "text": "can see I have known much more I have here my query types and I have my mutation type I have my subscription",
    "start": "1229190",
    "end": "1235820"
  },
  {
    "text": "type and if we would drill into those things we can see okay and the character",
    "start": "1235820",
    "end": "1242600"
  },
  {
    "text": "type now actually is an interface oh",
    "start": "1242600",
    "end": "1247840"
  },
  {
    "text": "that is some kind row just refresh that and get back into yeah now my character",
    "start": "1247840",
    "end": "1257830"
  },
  {
    "text": "return type is no longer object it is an interface it is implemented by droid and",
    "start": "1257830",
    "end": "1265190"
  },
  {
    "text": "human that means I have a much richer data model now let's explore first how",
    "start": "1265190",
    "end": "1272120"
  },
  {
    "text": "we can query instance with interfaces so we could ask for character therefore",
    "start": "1272120",
    "end": "1280130"
  },
  {
    "text": "let's ask for the year off of a specific episode maybe let's say Empire and then",
    "start": "1280130",
    "end": "1287450"
  },
  {
    "text": "we can fetch data so that is simple we did that before it's Luke Skywalker but since we have no",
    "start": "1287450",
    "end": "1295760"
  },
  {
    "text": "interfaces we can look at specific aspects of our character so we could say",
    "start": "1295760",
    "end": "1301190"
  },
  {
    "text": "so if this object is a human then give",
    "start": "1301190",
    "end": "1307610"
  },
  {
    "text": "me for instance the home planet if we fact that we get this specific property",
    "start": "1307610",
    "end": "1313820"
  },
  {
    "text": "of this specific specific object because now it's a human but if we switch to a",
    "start": "1313820",
    "end": "1320270"
  },
  {
    "text": "different fetch and fetched r2d2 we wouldn't get that property because now",
    "start": "1320270",
    "end": "1325640"
  },
  {
    "text": "it's a droid and we couldn't do that by saying okay if it's a droid I actually",
    "start": "1325640",
    "end": "1332330"
  },
  {
    "text": "want the primary function of that awesome so",
    "start": "1332330",
    "end": "1337430"
  },
  {
    "text": "this is you can already see that there is much more possible with data fetching and graphical so because time is short",
    "start": "1337430",
    "end": "1345650"
  },
  {
    "text": "let's head to mutations so mutation means we can change data and I now have",
    "start": "1345650",
    "end": "1353140"
  },
  {
    "text": "mutation here that is called rate review and I am able to write revenues for",
    "start": "1353140",
    "end": "1359120"
  },
  {
    "text": "certain episodes so I could say I want to write a review and let me add some",
    "start": "1359120",
    "end": "1365870"
  },
  {
    "text": "stars maybe five stars do a commentary good movie and and then and then they",
    "start": "1365870",
    "end": "1379520"
  },
  {
    "text": "actually in graph where you don't have like mutations that which are nothing you may always return something like I",
    "start": "1379520",
    "end": "1386000"
  },
  {
    "text": "could really select the data that I have written written in actual graphic implementations you basically would be",
    "start": "1386000",
    "end": "1392210"
  },
  {
    "text": "query all the objects that your rotation has affected and that allows you to",
    "start": "1392210",
    "end": "1398930"
  },
  {
    "text": "instantly update stores like a relay or",
    "start": "1398930",
    "end": "1404240"
  },
  {
    "text": "an Apollo with the correct ID set the server produced or stuff like that so",
    "start": "1404240",
    "end": "1410030"
  },
  {
    "text": "let's just execute that okay awesome it doesn't feel awesome because it's",
    "start": "1410030",
    "end": "1415460"
  },
  {
    "text": "just we had data that we had but bear with me in a second so let's create a",
    "start": "1415460",
    "end": "1421280"
  },
  {
    "text": "new tap here because I said we have real-time data and those real-time data",
    "start": "1421280",
    "end": "1426530"
  },
  {
    "text": "most often driven by mutations so a real-time query would start in this case",
    "start": "1426530",
    "end": "1433880"
  },
  {
    "text": "with subscription with the keyword subscription and I now have things like",
    "start": "1433880",
    "end": "1439340"
  },
  {
    "text": "over there on review when there is a review and the review is written for",
    "start": "1439340",
    "end": "1445850"
  },
  {
    "text": "Empire Strikes Back for this episode and actually I want this task because I'm writing like Elissa application that",
    "start": "1445850",
    "end": "1452690"
  },
  {
    "text": "aptly aggregates now the stars for every given review of episode so I know",
    "start": "1452690",
    "end": "1459530"
  },
  {
    "text": "execute that and actually nothing happens because my referee now starts to",
    "start": "1459530",
    "end": "1465770"
  },
  {
    "text": "listening for this issue the query to the server and the server who are keep it now a connection with us and only sends us",
    "start": "1465770",
    "end": "1473179"
  },
  {
    "text": "messages when we issue requests I put open the results tab here and if",
    "start": "1473179",
    "end": "1479960"
  },
  {
    "text": "we go now back and issue now requests here you can see that my results tap on",
    "start": "1479960",
    "end": "1486559"
  },
  {
    "text": "the other than my other tab with my real-time data I already had three results here with ok",
    "start": "1486559",
    "end": "1492799"
  },
  {
    "text": "with five stars I could change that and just to see that it's not fake vn and I",
    "start": "1492799",
    "end": "1499820"
  },
  {
    "text": "get basically my last result three stars",
    "start": "1499820",
    "end": "1505340"
  },
  {
    "text": "back so that's real time and it it feels the same way as as if you would write Brad Claire",
    "start": "1505340",
    "end": "1511880"
  },
  {
    "text": "Remy okay that's good without that let's leave that open of",
    "start": "1511880",
    "end": "1520820"
  },
  {
    "text": "this server and then head back to our slides because I have to learn more demos okay so we looked at what Rack",
    "start": "1520820",
    "end": "1529970"
  },
  {
    "text": "fairness let's also look at what black squared is not a graphic way that has nothing to do with the graph database",
    "start": "1529970",
    "end": "1536690"
  },
  {
    "text": "query language often people think Ruffman is it a graph database language for I don't know it has nothing to do with",
    "start": "1536690",
    "end": "1543440"
  },
  {
    "text": "that it initially Facebook called graph well actually super graphs that was the",
    "start": "1543440",
    "end": "1549559"
  },
  {
    "text": "internal name but I think with the name brassware they really did a better",
    "start": "1549559",
    "end": "1554720"
  },
  {
    "text": "choice but they still sometimes confused with and it's actually graphical is not",
    "start": "1554720",
    "end": "1561409"
  },
  {
    "text": "bound to any specific data source I said we can put it over our microservice we can put it over a square we can put it",
    "start": "1561409",
    "end": "1567350"
  },
  {
    "text": "over our an API so it is not bound to a specific data source and it's not",
    "start": "1567350",
    "end": "1572750"
  },
  {
    "text": "Facebook's version of whoo data it's capable it has so much more capabilities than raw data and has a different",
    "start": "1572750",
    "end": "1580130"
  },
  {
    "text": "mindset if you look at the design and also graph there is not a good solution",
    "start": "1580130",
    "end": "1586640"
  },
  {
    "text": "for binaries if you look at Netflix Netflix is using graph that is using graph glare but they are not using graph",
    "start": "1586640",
    "end": "1593539"
  },
  {
    "text": "query to stream movies because if we looked at profiles so far it's very good for data well very",
    "start": "1593539",
    "end": "1600500"
  },
  {
    "text": "where you have data with relations where you drill in and stuff and an important",
    "start": "1600500",
    "end": "1606530"
  },
  {
    "text": "aspect is also that graph coil is not bound to http it's a reference actually",
    "start": "1606530",
    "end": "1612590"
  },
  {
    "text": "transport agnostic and our project is releasing rough plan on G RPC in August",
    "start": "1612590",
    "end": "1619040"
  },
  {
    "text": "so you can't put it any actually on anything we already supported on WebSockets over",
    "start": "1619040",
    "end": "1628160"
  },
  {
    "text": "on signal art on HTTP and you could put it on any transporter and graph is also",
    "start": "1628160",
    "end": "1635809"
  },
  {
    "text": "not limited to JavaScript and if you look at the history of of graph where you actually see that it was designed to",
    "start": "1635809",
    "end": "1643760"
  },
  {
    "text": "improve data fetching for mobile applications and maybe run on a bad network and actually the first graph",
    "start": "1643760",
    "end": "1650330"
  },
  {
    "text": "player server what's written in PHP by Facebook because in the days they used mostly PHP okay so let's have another",
    "start": "1650330",
    "end": "1660950"
  },
  {
    "text": "demo and let's have a look how we would use graphical in.net and now we will do",
    "start": "1660950",
    "end": "1667790"
  },
  {
    "text": "actual coding okay so I will use just",
    "start": "1667790",
    "end": "1675860"
  },
  {
    "text": "three code and open that up okay",
    "start": "1675860",
    "end": "1681340"
  },
  {
    "text": "actually make that let us be smaller and",
    "start": "1681340",
    "end": "1686660"
  },
  {
    "text": "thinking so this project here is a simple empty empty hey speed up the core",
    "start": "1686660",
    "end": "1696080"
  },
  {
    "text": "project it basically is a Dublin core 3.0 project in this instance it has not been",
    "start": "1696080",
    "end": "1701720"
  },
  {
    "text": "reference types on just keep that in mind and it has hot chocolate HP that",
    "start": "1701720",
    "end": "1707360"
  },
  {
    "text": "make or packaging but apart from that we have an empty experiment",
    "start": "1707360",
    "end": "1714370"
  },
  {
    "text": "a empty start up here and there's nothing in there so how would we go",
    "start": "1714370",
    "end": "1719510"
  },
  {
    "text": "about writing a graph query server we saw that it's about blue types so we",
    "start": "1719510",
    "end": "1725179"
  },
  {
    "text": "have maybe types like Fermi type so we could start writing a classic fairy",
    "start": "1725179",
    "end": "1732299"
  },
  {
    "text": "okay bye what now we need something to return let's maybe create a character P",
    "start": "1732299",
    "end": "1738320"
  },
  {
    "text": "object so we create another class called character wallet and parties I have",
    "start": "1738320",
    "end": "1750959"
  },
  {
    "text": "already prepared some properties maybe we have a two properties here an ID ID",
    "start": "1750959",
    "end": "1757919"
  },
  {
    "text": "property and a name property and then we might just go here in our very class and",
    "start": "1757919",
    "end": "1764429"
  },
  {
    "text": "say okay we will be turning a character and the character is maybe called yet",
    "start": "1764429",
    "end": "1770249"
  },
  {
    "text": "characters and we're just doing a new character and then maybe run it but",
    "start": "1770249",
    "end": "1779459"
  },
  {
    "text": "let's go a bit further let's maybe say we have a string here at the string its",
    "start": "1779459",
    "end": "1784950"
  },
  {
    "text": "name and it has a default maybe Luke and actually let's feed in the name here to",
    "start": "1784950",
    "end": "1794639"
  },
  {
    "text": "look so how do we get this to be become",
    "start": "1794639",
    "end": "1800489"
  },
  {
    "text": "graphed well so what we could do is or what we have to do is we add a schema to",
    "start": "1800489",
    "end": "1808259"
  },
  {
    "text": "our services with the extension method at GraphLab and there is something",
    "start": "1808259",
    "end": "1815849"
  },
  {
    "text": "called in hot chocolate that is the schema below you basically say schema builder a new and very type that",
    "start": "1815849",
    "end": "1823379"
  },
  {
    "text": "is our root type and then say and aqua here then we actually are done our",
    "start": "1823379",
    "end": "1831719"
  },
  {
    "text": "schema is ready it should be a valid schema and but we need one more thing",
    "start": "1831719",
    "end": "1836879"
  },
  {
    "text": "we need something to execute on our schema that is say HP don't need commit",
    "start": "1836879",
    "end": "1842489"
  },
  {
    "text": "aware called use graphical and that actually just a magic let's do it",
    "start": "1842489",
    "end": "1852269"
  },
  {
    "text": "and over to our graphical IDE we've had",
    "start": "1852269",
    "end": "1862500"
  },
  {
    "text": "actually the schema that's right okay and we have our a root type view it has",
    "start": "1862500",
    "end": "1869309"
  },
  {
    "text": "actually it has the field character and we can expand this and then we can see",
    "start": "1869309",
    "end": "1875700"
  },
  {
    "text": "it has an argument name and also correctly inferred the default value",
    "start": "1875700",
    "end": "1881159"
  },
  {
    "text": "that we pass in that is loop that's awesome and it also because we are using the nullable reference types it also",
    "start": "1881159",
    "end": "1888090"
  },
  {
    "text": "detected okay string this exclamation mark means this string actually is an",
    "start": "1888090",
    "end": "1893130"
  },
  {
    "text": "inaudible type so if I go now back into my a query here I can say give me that",
    "start": "1893130",
    "end": "1900510"
  },
  {
    "text": "character actually I put something else in let's fetch that name boom and I'm",
    "start": "1900510",
    "end": "1909360"
  },
  {
    "text": "done it's so easy to create a draft endpoint but there's actually more to that and",
    "start": "1909360",
    "end": "1915350"
  },
  {
    "text": "you can do much more complex graph query services like in many implementations",
    "start": "1915350",
    "end": "1921899"
  },
  {
    "text": "you have to use use like type like like",
    "start": "1921899",
    "end": "1928679"
  },
  {
    "text": "type classes to use some kind of a fluent API to tell the graph engine how",
    "start": "1928679",
    "end": "1935940"
  },
  {
    "text": "the type of structure you can do that with hot chocolate as well because it's",
    "start": "1935940",
    "end": "1943919"
  },
  {
    "text": "a useful thing if you don't own the library or if you're if you are character asked for instance lives in a",
    "start": "1943919",
    "end": "1950490"
  },
  {
    "text": "different library and you can't change it and maybe doesn't use known alibi",
    "start": "1950490",
    "end": "1955620"
  },
  {
    "text": "reference types and we could use a type class like that and we could tell that",
    "start": "1955620",
    "end": "1963260"
  },
  {
    "text": "field for instance a Aidid it should",
    "start": "1963260",
    "end": "1968820"
  },
  {
    "text": "actually be the type ID tag and then we could basically tell our route type",
    "start": "1968820",
    "end": "1978740"
  },
  {
    "text": "actually this type now is the graph where",
    "start": "1978740",
    "end": "1984138"
  },
  {
    "text": "raph 12 type of evolved corrector time",
    "start": "1984210",
    "end": "1993289"
  },
  {
    "text": "which will Jen which now would tell the engine from this fault well what you",
    "start": "1995720",
    "end": "2001760"
  },
  {
    "text": "return here is actually a corrector type and take your type information yep you could also have a character type",
    "start": "2001760",
    "end": "2008570"
  },
  {
    "text": "class at a class for Prairie and put that also in the schema builder we will figure that out or chop is very good in",
    "start": "2008570",
    "end": "2015440"
  },
  {
    "text": "your fur in your types ok let's move on let's close that get back to our slides",
    "start": "2015440",
    "end": "2021670"
  },
  {
    "text": "so awesome we did our first graph for a server in under two minutes and donut",
    "start": "2021670",
    "end": "2029410"
  },
  {
    "text": "a.net and you saw it is quite easy to build so but there's this hello world",
    "start": "2029410",
    "end": "2037130"
  },
  {
    "text": "examples of over-simplistic i know most",
    "start": "2037130",
    "end": "2042830"
  },
  {
    "text": "of the times people ask us i have their I use entity framework I have an entity",
    "start": "2042830",
    "end": "2048500"
  },
  {
    "text": "model how can we use that with hot chocolate in graphic where make my old",
    "start": "2048500",
    "end": "2055010"
  },
  {
    "text": "object with a new world okay let's head to our next demo and think oh it is how",
    "start": "2055010",
    "end": "2063770"
  },
  {
    "text": "we think so let's have a look at more code so I go to this next demo and I",
    "start": "2063770",
    "end": "2072830"
  },
  {
    "text": "took this demo it's not any more Stowers it's now from total university because I",
    "start": "2072830",
    "end": "2079730"
  },
  {
    "text": "went to the Microsoft to the Microsoft Docs and they actually have an example",
    "start": "2079730",
    "end": "2087710"
  },
  {
    "text": "to use entity framework with asp.net quote and there they basically have this",
    "start": "2087710",
    "end": "2093980"
  },
  {
    "text": "new context it's called the controller University and they have like entities like this students and basically our",
    "start": "2093980",
    "end": "2101540"
  },
  {
    "text": "student has a lot of enrollments two courses at the University and the",
    "start": "2101540",
    "end": "2109990"
  },
  {
    "text": "enrollment basically exposes",
    "start": "2109990",
    "end": "2114310"
  },
  {
    "text": "relationship but also the environment has a property great which is great for",
    "start": "2116290",
    "end": "2122869"
  },
  {
    "text": "this course that was reached and the course is then again have like the",
    "start": "2122869",
    "end": "2128540"
  },
  {
    "text": "credits that you would earn as a student at that course so how can we spin a",
    "start": "2128540",
    "end": "2133670"
  },
  {
    "text": "rough conserve around this so again it's a stunner asp.net application adjust it",
    "start": "2133670",
    "end": "2140660"
  },
  {
    "text": "a bit logging here and extra logging because you will see why in a second and our startup is a bit more prepared",
    "start": "2140660",
    "end": "2147740"
  },
  {
    "text": "because I now have B context I already set up this Emma here there's actually",
    "start": "2147740",
    "end": "2153890"
  },
  {
    "text": "nothing in the schema yet it's just an empty schema builder and I also set up",
    "start": "2153890",
    "end": "2160130"
  },
  {
    "text": "the graphical middleware and I'm also initializing the database when we start so a very simple set up so as we did",
    "start": "2160130",
    "end": "2169430"
  },
  {
    "text": "before we would probably start by writing our class query Cosette is our",
    "start": "2169430",
    "end": "2179119"
  },
  {
    "text": "new type which was which with which with",
    "start": "2179119",
    "end": "2184369"
  },
  {
    "text": "which we would fetch the data and we would basically start by maybe saying",
    "start": "2184369",
    "end": "2191329"
  },
  {
    "text": "okay we want to first fetch the students let's let's let's write a function that",
    "start": "2191329",
    "end": "2196670"
  },
  {
    "text": "fantasy students so we would write a variable here and that maybe is a",
    "start": "2196670",
    "end": "2203030"
  },
  {
    "text": "credible off student and then we would call this get students made and then we",
    "start": "2203030",
    "end": "2209809"
  },
  {
    "text": "need some and in in graph glad everything is resolved a specific because I can use fields on use them not",
    "start": "2209809",
    "end": "2216349"
  },
  {
    "text": "it's good for the execution engine to actually know what we are using so we",
    "start": "2216349",
    "end": "2223220"
  },
  {
    "text": "could use like a service in here and the service actually for us is the school context so are you using the school",
    "start": "2223220",
    "end": "2230450"
  },
  {
    "text": "context and then we can take this a school context and which is a DB context",
    "start": "2230450",
    "end": "2239059"
  },
  {
    "text": "and basically fetched from that the students let's check let's just return the students",
    "start": "2239059",
    "end": "2246099"
  },
  {
    "text": "and then we grab this creamy type and basically and that to our scheming build",
    "start": "2246099",
    "end": "2252970"
  },
  {
    "text": "up you say that very tight worried and",
    "start": "2252970",
    "end": "2258599"
  },
  {
    "text": "maybe just run this thing or net rather watch run because we're gonna change it",
    "start": "2258599",
    "end": "2264460"
  },
  {
    "text": "further okay so the thing is they're getting up it is second okay we can see",
    "start": "2264460",
    "end": "2274480"
  },
  {
    "text": "already as well because it's checking if our data is there and it's oh here it's",
    "start": "2274480",
    "end": "2281320"
  },
  {
    "text": "the same pod store or roughly IDs shortly messed up okay so I can already",
    "start": "2281320",
    "end": "2288670"
  },
  {
    "text": "see I have the students there awesome but when I look closer I can already see Oh a healthy enrollments there and if I",
    "start": "2288670",
    "end": "2296980"
  },
  {
    "text": "drill in I can already see I have the courses there okay so the schema builder actually inferred automatically our full",
    "start": "2296980",
    "end": "2304390"
  },
  {
    "text": "object model and if I'm starting to",
    "start": "2304390",
    "end": "2309910"
  },
  {
    "text": "query that I actually can query maybe the students last name maybe I can take",
    "start": "2309910",
    "end": "2316569"
  },
  {
    "text": "the even Romans here and let's get the course of course title and maybe let's",
    "start": "2316569",
    "end": "2324550"
  },
  {
    "text": "also get the great okay awesome let's fire it up",
    "start": "2324550",
    "end": "2329920"
  },
  {
    "text": "okay disappointment I have to name but I don't get the enrollment know how it",
    "start": "2329920",
    "end": "2340750"
  },
  {
    "text": "works yet so we can head back to our very class here and there's something in",
    "start": "2340750",
    "end": "2346510"
  },
  {
    "text": "broth well that is called in our Bradfield implementation that is called few middleware so we can't tell our",
    "start": "2346510",
    "end": "2355050"
  },
  {
    "text": "graphic engine it should use maybe selections and selections basically is a",
    "start": "2355050",
    "end": "2361000"
  },
  {
    "text": "projection middleware that knows now it understands variables and it understands how to navigate data okay so let's go",
    "start": "2361000",
    "end": "2369520"
  },
  {
    "text": "back in here I have an up and boom I get the data I get all the data the graph",
    "start": "2369520",
    "end": "2376180"
  },
  {
    "text": "coil Crimea engine now knows that this is and very good and that they can rewrite",
    "start": "2376180",
    "end": "2382540"
  },
  {
    "text": "expression trees on that side and if we look at our output here we can see that",
    "start": "2382540",
    "end": "2389080"
  },
  {
    "text": "it wrote that we brought basically the incoming craft well into SQL and we can",
    "start": "2389080",
    "end": "2396010"
  },
  {
    "text": "do actually more because we have momentum in Midwest so we could say use filtering and we",
    "start": "2396010",
    "end": "2403780"
  },
  {
    "text": "could say maybe use sorting and because",
    "start": "2403780",
    "end": "2409270"
  },
  {
    "text": "it's actually not safe to expose the API like best we also want to use eg",
    "start": "2409270",
    "end": "2414810"
  },
  {
    "text": "okay it's recompiling nothing",
    "start": "2414810",
    "end": "2420570"
  }
]