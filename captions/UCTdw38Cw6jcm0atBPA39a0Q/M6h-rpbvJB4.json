[
  {
    "text": "so have you ever thought about that there are actually four pillars here to the web",
    "start": "3600",
    "end": "8960"
  },
  {
    "text": "so maybe three of them are quite well known it's html it's css and it's javascript but tonight we're going to be",
    "start": "8960",
    "end": "15679"
  },
  {
    "text": "talking about the fourth pillar which is web assembly so in my presentation i'm going to be",
    "start": "15679",
    "end": "21039"
  },
  {
    "text": "describing here why you should actually consider webassembly in your next front-end project my name is",
    "start": "21039",
    "end": "27680"
  },
  {
    "text": "huuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu kan silvrogel i work as a manager for ai and big data at miles an hour and",
    "start": "27680",
    "end": "33360"
  },
  {
    "text": "consultancy company and before we start here i'm just going to go through a little bit about a",
    "start": "33360",
    "end": "39200"
  },
  {
    "text": "little bit of the agenda here for today so first of all we're gonna cover what",
    "start": "39200",
    "end": "44480"
  },
  {
    "text": "this web assembly and then we're gonna go through like a hello world example here hello wasp hello web assembly and",
    "start": "44480",
    "end": "51280"
  },
  {
    "text": "then we're gonna talk about um how you actually want to do when you want to develop with web assembly so what you",
    "start": "51280",
    "end": "57440"
  },
  {
    "text": "want to do is what you want to use a high-level language that you can compile down to web assembly",
    "start": "57440",
    "end": "63760"
  },
  {
    "text": "and because of that we need to know about one or two high-level languages",
    "start": "63760",
    "end": "69280"
  },
  {
    "text": "so i'm going to give you an example here in rust so because of that we need to have a quick",
    "start": "69280",
    "end": "74640"
  },
  {
    "text": "introduction into what rust actually is then we will make a program here a component in rust we will compile it",
    "start": "74640",
    "end": "82320"
  },
  {
    "text": "down to web assembly and then we will upload this web assembly to npm and then after that we're going to start",
    "start": "82320",
    "end": "88560"
  },
  {
    "text": "from scratch right just write web application and then we're going to use this",
    "start": "88560",
    "end": "94720"
  },
  {
    "text": "mpm package we're going to use awesome in our web assembly and when we're through with that we're",
    "start": "94720",
    "end": "100400"
  },
  {
    "text": "going to have a look at a little bit more involved example a game of life example and then we're going to cover a little",
    "start": "100400",
    "end": "106320"
  },
  {
    "text": "bit about performance because performance is a big deal here when we talk about web assembly we're going to",
    "start": "106320",
    "end": "112479"
  },
  {
    "text": "go through some real world examples go through the future plans for webassembly and we're also going to",
    "start": "112479",
    "end": "117759"
  },
  {
    "text": "cover some other frameworks that are using webassembly then we have a title here that might",
    "start": "117759",
    "end": "124000"
  },
  {
    "text": "seem a little bit cryptic that it says new old you just have to wait to see what that actually",
    "start": "124000",
    "end": "129920"
  },
  {
    "text": "covers and then we finish off with some conclusions and then i also have some references for you who want to have a",
    "start": "129920",
    "end": "137200"
  },
  {
    "text": "little bit deeper look into this material but before we start i'm just going to say a couple of words here about me",
    "start": "137200",
    "end": "144160"
  },
  {
    "text": "so um so i work as a manager for big data at miles an hour reading consultancy company",
    "start": "144160",
    "end": "150160"
  },
  {
    "text": "and i'm quite active in the local user group community in oslo i'm part of the norwegian.net user group",
    "start": "150160",
    "end": "156959"
  },
  {
    "text": "i'm also part of virtual group the azure user group sweden and i'm part of oslo",
    "start": "156959",
    "end": "162879"
  },
  {
    "text": "ai i'm also running an online ai school called ai42 so if we have some time left",
    "start": "162879",
    "end": "168720"
  },
  {
    "text": "at the end of session i'm gonna be covering a little bit more about this online as school",
    "start": "168720",
    "end": "173840"
  },
  {
    "text": "and if you want to reach me you can find all of my links here on this slide",
    "start": "173840",
    "end": "179920"
  },
  {
    "text": "let's start here with a background into webassembly so in 2015 there was a group formed by",
    "start": "181599",
    "end": "187760"
  },
  {
    "text": "all the major browser vendors and by 2017 there was a web assembly released",
    "start": "187760",
    "end": "194080"
  },
  {
    "text": "and then by february 2018 a w3c public draft was published and from december",
    "start": "194080",
    "end": "201200"
  },
  {
    "text": "this web assembly is a w3c recommendation so that means that it stands on the same sort of standard as",
    "start": "201200",
    "end": "207760"
  },
  {
    "text": "html css and javascript and one of the great things here with",
    "start": "207760",
    "end": "212799"
  },
  {
    "text": "webassembly is that it both works in all the major browser endings both on desktop but also",
    "start": "212799",
    "end": "220640"
  },
  {
    "text": "on the mobile versions so if you want to compare or contrast",
    "start": "220640",
    "end": "227360"
  },
  {
    "text": "javascript with webassembly we can see that javascript is you know it's a high-level language it's quite flexible",
    "start": "227360",
    "end": "233599"
  },
  {
    "text": "and expressive than empty typed you don't need to compile and as we all know it has a huge ecosystem that you can use",
    "start": "233599",
    "end": "241200"
  },
  {
    "text": "but on the other hand webassembly is a low-level assembly-like language and in a short while we'll actually have a look",
    "start": "241200",
    "end": "247040"
  },
  {
    "text": "at what it looks like and it has a compact binary format and what it promises us is that it promises a",
    "start": "247040",
    "end": "252400"
  },
  {
    "text": "near-native performance and you can write webassembly sort of from manually but you don't really want",
    "start": "252400",
    "end": "258239"
  },
  {
    "text": "to do that and the reasons for that will be quite clear here in a short while but instead what you want to do is you want",
    "start": "258239",
    "end": "263759"
  },
  {
    "text": "to use a high level language like c or c plus plus or raster go or several other",
    "start": "263759",
    "end": "268800"
  },
  {
    "text": "languages that you can compile down to web assembly",
    "start": "268800",
    "end": "273919"
  },
  {
    "text": "so this picture is trying to illustrate here that what you usually have is that you have",
    "start": "276080",
    "end": "281600"
  },
  {
    "text": "a high level language that you can translate so the compilers will take",
    "start": "281600",
    "end": "287360"
  },
  {
    "text": "this high level language and then it will translate it to an intermediate representation as you can see here in",
    "start": "287360",
    "end": "292479"
  },
  {
    "text": "this picture here denoted by ir and then you have another part of the compiler we'll compile it",
    "start": "292479",
    "end": "298479"
  },
  {
    "text": "down to the target architecture which can be for example an x86 or an arm",
    "start": "298479",
    "end": "304080"
  },
  {
    "text": "processor but when we talk about webassembly we need to take into account that this is",
    "start": "304080",
    "end": "310160"
  },
  {
    "text": "code that will actually be executed over the web so we don't know beforehand what",
    "start": "310160",
    "end": "315360"
  },
  {
    "text": "is this target architecture that will actually run on you can see webassembly sort of as a",
    "start": "315360",
    "end": "321120"
  },
  {
    "text": "machine language or conceptual machine and you can also say that webassembly",
    "start": "321120",
    "end": "326240"
  },
  {
    "text": "instructions are virtual instructions so the browser will download the web assembly and then it can compile it down",
    "start": "326240",
    "end": "333280"
  },
  {
    "text": "to the target architecture that it's running on and this uh these two um slides here are",
    "start": "333280",
    "end": "339600"
  },
  {
    "text": "taken from a blog series by link clark that you can find here also and then i recommend you to have a look at",
    "start": "339600",
    "end": "346720"
  },
  {
    "text": "so as i said their webassembly is a new browser standard it's based on a previous project called asm js",
    "start": "346720",
    "end": "353440"
  },
  {
    "text": "and then and it's an intermediate language so in the same manner as you compile down java down to byte code or",
    "start": "353440",
    "end": "359440"
  },
  {
    "text": "c-sharp onto msil code and it's strongly typed and you have 32-bit integer 64-bit",
    "start": "359440",
    "end": "366319"
  },
  {
    "text": "integral 32-bit float and 60-volt 64-bit float",
    "start": "366319",
    "end": "372319"
  },
  {
    "text": "so now we're going to be writing our first hello hello web assembly of hello awesome but",
    "start": "372720",
    "end": "378080"
  },
  {
    "text": "as you saw here in my previous slide we could see that we don't actually have we don't have strings and we don't have",
    "start": "378080",
    "end": "384000"
  },
  {
    "text": "shares so that means that it's quite complicated actually to write a hello world program in webassembly so what you",
    "start": "384000",
    "end": "390800"
  },
  {
    "text": "instead want to do when you write the hello world programming summits you usually take a mathematical",
    "start": "390800",
    "end": "396000"
  },
  {
    "text": "calculations like addition or subtraction so that will be our hello world webassembly program",
    "start": "396000",
    "end": "404479"
  },
  {
    "text": "so in this example here so there's a format called wat which stands to for",
    "start": "404479",
    "end": "409680"
  },
  {
    "text": "web assembly textual format so here we define webassembly with first will find",
    "start": "409680",
    "end": "415280"
  },
  {
    "text": "a module and then we define a function inside this module that we call add2 and this function has two input parameters",
    "start": "415280",
    "end": "422080"
  },
  {
    "text": "to 32-bit integer and the result will also be a 32-bit integer so web assembly",
    "start": "422080",
    "end": "428160"
  },
  {
    "text": "is a stack-based language you can pop post on the pop and push on the stack",
    "start": "428160",
    "end": "433759"
  },
  {
    "text": "and then you can also use some some 60 different mathematical",
    "start": "433759",
    "end": "439199"
  },
  {
    "text": "operations here so in this case we since we're using the 32-bit integral we used",
    "start": "439199",
    "end": "444319"
  },
  {
    "text": "a 32-bit add operation and then finally we need to define what will this function actually be called so",
    "start": "444319",
    "end": "451520"
  },
  {
    "text": "if we have a calling program that calling problem can call the add to because it's it's exported as",
    "start": "451520",
    "end": "458080"
  },
  {
    "text": "add to and in addition we can also have",
    "start": "458080",
    "end": "465599"
  },
  {
    "text": "so webassembly has both a textual format and a binary format and we can parse this wat format the textual format and",
    "start": "465599",
    "end": "472879"
  },
  {
    "text": "write it to a binary format you can see the result here on this screen here",
    "start": "472879",
    "end": "478479"
  },
  {
    "text": "so as we can see here this is very much an assembly like language",
    "start": "478479",
    "end": "484720"
  },
  {
    "text": "and if you want to use this what you can do is you can write an html page where you fetch your",
    "start": "485599",
    "end": "492479"
  },
  {
    "text": "web assembly and then you read it into an array buffer and then since webassembly is web standard we can just",
    "start": "492479",
    "end": "498960"
  },
  {
    "text": "simply call webassembly dot and then instantiate to instantiate an object by this web assembly that we",
    "start": "498960",
    "end": "506400"
  },
  {
    "text": "have just fetched and then we can define an object that here we call it add to",
    "start": "506400",
    "end": "511759"
  },
  {
    "text": "so you can see here that we are using results instance exports and then the name of this module that we were",
    "start": "511759",
    "end": "518159"
  },
  {
    "text": "exporting and then we can use it just as any other type of javascript function so if we load this",
    "start": "518159",
    "end": "524399"
  },
  {
    "text": "out in the console then we'll have the result out here when we run it",
    "start": "524399",
    "end": "531600"
  },
  {
    "text": "another tool that is worth mentioning here is something called the wasp code explorer so the wasp explorer what you",
    "start": "532480",
    "end": "538080"
  },
  {
    "text": "can do is you can load um you can load the binary web assembly module into a web assembly code explorer",
    "start": "538080",
    "end": "544480"
  },
  {
    "text": "and then you can get the texture representation back so that's what we've done here so we took our",
    "start": "544480",
    "end": "551600"
  },
  {
    "text": "web ascend module we loaded it into this tool and then we can see here in the textual format that it looks pretty much",
    "start": "551600",
    "end": "558160"
  },
  {
    "text": "the same as what it did when we wrote our function this can be a nice way of",
    "start": "558160",
    "end": "564640"
  },
  {
    "text": "of actually figuring out what does this website web assembly actually do",
    "start": "564640",
    "end": "571040"
  },
  {
    "text": "so now when we covered our first web assembly example we can see here that you know we didn't have",
    "start": "571920",
    "end": "578160"
  },
  {
    "text": "many types we had four different types we don't have not have shares we don't have",
    "start": "578160",
    "end": "584399"
  },
  {
    "text": "no pointers there's a lot of things that we don't really have so we don't really want to work with webassembly in this",
    "start": "584399",
    "end": "589920"
  },
  {
    "text": "way so instead the way that we want to work is we want to use a high level language where we can express us much",
    "start": "589920",
    "end": "595839"
  },
  {
    "text": "more freely and then we want to compile down our high level language into a web assembly one of these high level",
    "start": "595839",
    "end": "601600"
  },
  {
    "text": "languages is rust in order for us to understand this a little bit better i'm",
    "start": "601600",
    "end": "607200"
  },
  {
    "text": "going to be covering just a very quick introduction into rust rust comes from mozilla it's a system",
    "start": "607200",
    "end": "613440"
  },
  {
    "text": "program language it has a syntax very similar to c or c plus plus it's strongly typed",
    "start": "613440",
    "end": "618800"
  },
  {
    "text": "and it compiles down to native code one of the design goes when they design rust as a",
    "start": "618800",
    "end": "624959"
  },
  {
    "text": "programming language watch was that they should be memory safe that means that you don't have any dangling memory",
    "start": "624959",
    "end": "631760"
  },
  {
    "text": "pointers or memory leaks so when you use rust you should know",
    "start": "631760",
    "end": "638880"
  },
  {
    "text": "about the rust tool chain the rust 2 chain consists of rostap which is",
    "start": "638880",
    "end": "644399"
  },
  {
    "text": "an installer for us and then cargo which is the rust package manager",
    "start": "644399",
    "end": "650000"
  },
  {
    "text": "um so cargo will upload your package into a site called crates.io which is like the",
    "start": "650000",
    "end": "657200"
  },
  {
    "text": "rust community package registry and here's an example of a hello world program in rust we just define a main",
    "start": "657200",
    "end": "663519"
  },
  {
    "text": "function we print out the hello world and then we can use rust compile rusty",
    "start": "663519",
    "end": "668959"
  },
  {
    "text": "to compile a rasp program and on a windows machine it generates an exe file that we can execute and we get hello",
    "start": "668959",
    "end": "675839"
  },
  {
    "text": "world out on the console but we can also use cargo so we can",
    "start": "675839",
    "end": "681440"
  },
  {
    "text": "issue command with cargo cargo new hello world and it will create",
    "start": "681440",
    "end": "686839"
  },
  {
    "text": "both the world project here that contains of the main rust file and also a cargo thermal file so then in the main",
    "start": "686839",
    "end": "694079"
  },
  {
    "text": "rust file we get function main and then we can define what we want to do here in our main function",
    "start": "694079",
    "end": "699519"
  },
  {
    "text": "and the terminal file is like a package definition of our rust",
    "start": "699519",
    "end": "705760"
  },
  {
    "text": "package here so by minimum it needs a name version and also author and if you have",
    "start": "705760",
    "end": "711920"
  },
  {
    "text": "any dependencies you also need to define that in your tommy file so we can run this by running cargo run",
    "start": "711920",
    "end": "718959"
  },
  {
    "text": "so cargo run it will compile our rust file and then it will",
    "start": "718959",
    "end": "724959"
  },
  {
    "text": "run the exe file that is getting generated",
    "start": "724959",
    "end": "730839"
  },
  {
    "text": "so some types in rust we have both primitive types like integra and float and we also have something they call",
    "start": "731360",
    "end": "737120"
  },
  {
    "text": "primitive constructs like that can be pointers or references or arrays",
    "start": "737120",
    "end": "744399"
  },
  {
    "text": "so now when we know a little bit more about rust now can we actually do what we what we want to set out to do here",
    "start": "744399",
    "end": "750079"
  },
  {
    "text": "which is we want to build a component rust we want to compile it down to webassembly we want to package this web",
    "start": "750079",
    "end": "757839"
  },
  {
    "text": "assembly it's a package that we can upload to npm and then after that we want to as any other web developer we",
    "start": "757839",
    "end": "764240"
  },
  {
    "text": "want to use this mpm package in our own in our own application so that's what",
    "start": "764240",
    "end": "769440"
  },
  {
    "text": "we're going to have a look at here next first thing if we want to do if we want",
    "start": "769440",
    "end": "774800"
  },
  {
    "text": "to compile our rasp program to wasp first thing we want to do is we want to install this tool chain rust up the",
    "start": "774800",
    "end": "781760"
  },
  {
    "text": "cargo and the rust compiler and then after that we need to install an add-on called boss pack",
    "start": "781760",
    "end": "788240"
  },
  {
    "text": "so this was pack will compile our code to webassembly and we'll also install",
    "start": "788240",
    "end": "793360"
  },
  {
    "text": "something called the wasmbine gen so the wasp binding will generate some bindings",
    "start": "793360",
    "end": "798880"
  },
  {
    "text": "or i usually call it blue code the glue code is javascript code that we can call",
    "start": "798880",
    "end": "804079"
  },
  {
    "text": "from another program and then this glue code will be responsible for making the calls down to webassembly",
    "start": "804079",
    "end": "812560"
  },
  {
    "text": "uh so here again is uh example here of uh of this package definition",
    "start": "813519",
    "end": "819279"
  },
  {
    "text": "so we have caller package hello wasp silver and we have an author and we also have",
    "start": "819279",
    "end": "826480"
  },
  {
    "text": "what type of library what type of rate so in this case it needs to be defined as a c die lab",
    "start": "826480",
    "end": "832800"
  },
  {
    "text": "that's the type of crate that we're uh using here and then we have a dependency here on the vos binding so again this",
    "start": "832800",
    "end": "840079"
  },
  {
    "text": "was binding is the code that is sort of responsible for the communication from the outside world",
    "start": "840079",
    "end": "846240"
  },
  {
    "text": "down to webassembly so i usually call it the glue glue code",
    "start": "846240",
    "end": "852160"
  },
  {
    "text": "and here we have the rust file so here we define that we are um",
    "start": "852160",
    "end": "857600"
  },
  {
    "text": "we are requiring an external crate which is the vos binden and then we also defined that we need to",
    "start": "857600",
    "end": "864079"
  },
  {
    "text": "use an external function which is the regular alert function in javascript and then we can",
    "start": "864079",
    "end": "870800"
  },
  {
    "text": "define a function here greet which take name as a string input parameter and then we can just alert it out",
    "start": "870800",
    "end": "879199"
  },
  {
    "text": "now we can use wasp pack in order to build this to uh to a package here",
    "start": "880720",
    "end": "887360"
  },
  {
    "text": "so then we get the package uh folder here with this content and we will have a look at what this different file",
    "start": "887360",
    "end": "892880"
  },
  {
    "text": "contains in a short while but if you want to publish this to mpm you can just go into",
    "start": "892880",
    "end": "898320"
  },
  {
    "text": "this directory and then do mpm publish package and then as we can see here we",
    "start": "898320",
    "end": "903360"
  },
  {
    "text": "got the package published npm that we call called hello wasp silver and we're going to be using that",
    "start": "903360",
    "end": "909839"
  },
  {
    "text": "in a later example but let's have a look at this package structure and what we get here from",
    "start": "909839",
    "end": "916639"
  },
  {
    "text": "from that so first of all we get the typescript file and in this type of file it's",
    "start": "916639",
    "end": "921920"
  },
  {
    "text": "defined what are the functions that an external application can actually call and as we can see here there's only one",
    "start": "921920",
    "end": "927760"
  },
  {
    "text": "function which is greed and it takes an input parameter which is a string and it doesn't return anything",
    "start": "927760",
    "end": "934480"
  },
  {
    "text": "um and then we also get the hello silver js so this is this glue code i was",
    "start": "934480",
    "end": "940720"
  },
  {
    "text": "talking about uh so what this is you can see that this it says export function grid with an",
    "start": "940720",
    "end": "946160"
  },
  {
    "text": "input parameter and after a while it it's the course of function pass string to us so that it tries to return was not",
    "start": "946160",
    "end": "953680"
  },
  {
    "text": "great with this input that i got and then we also got the package",
    "start": "953680",
    "end": "960160"
  },
  {
    "text": "package.json which is a regular json file layer and",
    "start": "960160",
    "end": "966639"
  },
  {
    "text": "in order for us to use this uh in an example here then we can write a webpack config file we define an",
    "start": "966880",
    "end": "974800"
  },
  {
    "text": "entry point or application index.js and we write the package.json file and in this json file we write that we have a",
    "start": "974800",
    "end": "982480"
  },
  {
    "text": "dependency on this um on the same pm package that we have created this hell was silver",
    "start": "982480",
    "end": "989920"
  },
  {
    "text": "and in our index.html file we refer to this index.js file and in index.js file",
    "start": "990639",
    "end": "997040"
  },
  {
    "text": "we can import this hello wasp silver and then we call can call it asynchronously",
    "start": "997040",
    "end": "1002560"
  },
  {
    "text": "as we can call a js grid and then with with some input parameters",
    "start": "1002560",
    "end": "1008240"
  },
  {
    "text": "so if we run this we will get that back here on the on the console",
    "start": "1008240",
    "end": "1013920"
  },
  {
    "text": "now we have seen you know some basic stuff for what you can do here with rust then with web assembly so now i'm going",
    "start": "1014639",
    "end": "1020959"
  },
  {
    "text": "to show you a little bit more a little bit more complex example here this is an example that comes from",
    "start": "1020959",
    "end": "1028798"
  },
  {
    "text": "uh from the rust wasom and it's the game of life so the game of life is sort of a",
    "start": "1028799",
    "end": "1034959"
  },
  {
    "text": "simulation where you have a couple of rules here so one of the rules is that you have",
    "start": "1034959",
    "end": "1040000"
  },
  {
    "text": "um you have a generation plan where you have live and dead cells and then there are some rules on uh on how a cell will",
    "start": "1040000",
    "end": "1047438"
  },
  {
    "text": "live in the next simulation so if you have a live cell with fewer than two live neighbors it",
    "start": "1047439",
    "end": "1053600"
  },
  {
    "text": "will die because of underpopulation or if you have a live cell with two or three live neighbors it will live on to",
    "start": "1053600",
    "end": "1059760"
  },
  {
    "text": "the next generation and if you have a livestock with more than three live neighbors it will die because of overpopulation and then the",
    "start": "1059760",
    "end": "1066400"
  },
  {
    "text": "last rule is if you have any dead cell with exactly three live neighbors it will become a live cell through",
    "start": "1066400",
    "end": "1072000"
  },
  {
    "text": "reproduction and then if we run this thing here",
    "start": "1072000",
    "end": "1080919"
  },
  {
    "text": "so now we're running simulation and then we also have a pause button that we can",
    "start": "1081120",
    "end": "1086640"
  },
  {
    "text": "push and if we push this pause button then we can go in now pushed it and now we can go into the simulation plan and add some",
    "start": "1086640",
    "end": "1094240"
  },
  {
    "text": "new cells here and affect the simulation in one way or the other",
    "start": "1094240",
    "end": "1099360"
  },
  {
    "text": "let's have a look at how this was built",
    "start": "1099360",
    "end": "1104960"
  },
  {
    "text": "so again similar to our other previous examples here we have a tommel file which is this package definition",
    "start": "1105039",
    "end": "1111280"
  },
  {
    "text": "define our package our authors what type it is so similar to previously it's a c",
    "start": "1111280",
    "end": "1117360"
  },
  {
    "text": "dilib and then if we have any dependencies and again we have this dependency on the wasp binding which is",
    "start": "1117360",
    "end": "1123600"
  },
  {
    "text": "this blue file that i was talking about then we have our main uh",
    "start": "1123600",
    "end": "1129760"
  },
  {
    "text": "our main rust function here we call lib.rs where we define our simulation",
    "start": "1129760",
    "end": "1135440"
  },
  {
    "text": "plan or which is called universe here so define what is the width and what is the height",
    "start": "1135440",
    "end": "1140720"
  },
  {
    "text": "of our universe and then we also define some public getter and center functions for getting the width and the height of the",
    "start": "1140720",
    "end": "1146640"
  },
  {
    "text": "simulation and also toggle cell function that i was using you know when we pushed",
    "start": "1146640",
    "end": "1151840"
  },
  {
    "text": "post then we can use this toggle cell function in order to in order to define a row work and then",
    "start": "1151840",
    "end": "1157440"
  },
  {
    "text": "column where we want to toggle the value of that particular cell",
    "start": "1157440",
    "end": "1163200"
  },
  {
    "text": "and then we also have this typescript file where it's defined what are different functions that the calling",
    "start": "1163600",
    "end": "1169760"
  },
  {
    "text": "application or watch functions are available to the external world so for example we have the width and the",
    "start": "1169760",
    "end": "1176480"
  },
  {
    "text": "height together and setters and we also have this toggle cell function which is also available for us to use",
    "start": "1176480",
    "end": "1184160"
  },
  {
    "text": "then we have the the javascript file which is this glue file",
    "start": "1184720",
    "end": "1190160"
  },
  {
    "text": "so again it tries to for example when we try to call toggle cell you can see it",
    "start": "1190160",
    "end": "1195679"
  },
  {
    "text": "tries to return was not the universe toggle cell with some input parameters here",
    "start": "1195679",
    "end": "1202799"
  },
  {
    "text": "and if we want to use this we can create an index.html file where we have a",
    "start": "1202799",
    "end": "1208400"
  },
  {
    "text": "bootstrap javascript file and in that file we are loading index",
    "start": "1208400",
    "end": "1213919"
  },
  {
    "text": "so this is the content here of our index javascript file so here we import this universe and as you can see here marked",
    "start": "1213919",
    "end": "1220240"
  },
  {
    "text": "in red we're calling this universe toggle cell with a row and the specific column index",
    "start": "1220240",
    "end": "1228080"
  },
  {
    "text": "so now i'm just going to take a little bit of water here",
    "start": "1229360",
    "end": "1234679"
  },
  {
    "text": "so now when we covered the and now we have a better idea here what webassembly can be used",
    "start": "1235600",
    "end": "1241760"
  },
  {
    "text": "for we can talk a little bit more about performance um so in this slide the we there are some",
    "start": "1241760",
    "end": "1249760"
  },
  {
    "text": "people who have made some experiments running the same calculations both in javascript and in webassembly and on",
    "start": "1249760",
    "end": "1256480"
  },
  {
    "text": "chrome chrome and firefox and on safari and one of the things that we can see",
    "start": "1256480",
    "end": "1261840"
  },
  {
    "text": "immediately here is that you get a much faster execution using webassembly",
    "start": "1261840",
    "end": "1268799"
  },
  {
    "text": "which which is what webassembly is actually is probably promising us but another thing",
    "start": "1268799",
    "end": "1274159"
  },
  {
    "text": "which is maybe even more interesting here to have a look at is that if you look at this box plot for the",
    "start": "1274159",
    "end": "1279919"
  },
  {
    "text": "performance for javascript you can see that the the spread of this box plot is much much higher for the javascript",
    "start": "1279919",
    "end": "1286000"
  },
  {
    "text": "examples than what it is for for the web assembly so that means that for if we write the program in",
    "start": "1286000",
    "end": "1291440"
  },
  {
    "text": "webassembly we can be uh we can have a much higher confidence that this program",
    "start": "1291440",
    "end": "1296559"
  },
  {
    "text": "will execute in a specified specified amount of time and we can't really do that in",
    "start": "1296559",
    "end": "1302320"
  },
  {
    "text": "javascript so that's that can be a very interesting and important thing to take into consideration and another thing",
    "start": "1302320",
    "end": "1309120"
  },
  {
    "text": "which is also interesting to have a look here is that you know we have javascript has been around for quite a long time so",
    "start": "1309120",
    "end": "1315200"
  },
  {
    "text": "a lot of the browser endings has already been optimized for javascript whereas with",
    "start": "1315200",
    "end": "1321120"
  },
  {
    "text": "webassembly it's a much newer technology we can expect that this uh this difference",
    "start": "1321120",
    "end": "1326559"
  },
  {
    "text": "uh this efficiency difference between webassembly and javascript will be even greater going forward",
    "start": "1326559",
    "end": "1335120"
  },
  {
    "text": "so then i have we have some examples here from the real world so first i should mention here so what",
    "start": "1336000",
    "end": "1342640"
  },
  {
    "text": "are the real good use cases here for web assemblies so one of the good use cases here is so",
    "start": "1342640",
    "end": "1349200"
  },
  {
    "text": "you have an application that you want to run really fast so think about if you have some mathematical",
    "start": "1349200",
    "end": "1356080"
  },
  {
    "text": "mathematical calculations maybe have some simulation maybe have a game engine or maybe have a graphic engine or",
    "start": "1356080",
    "end": "1362240"
  },
  {
    "text": "something along along that way that's a very good example for webassembly and another good example is if you have",
    "start": "1362240",
    "end": "1369440"
  },
  {
    "text": "like a legacy code base or if you have a program that you already have developed but that program is not available on the",
    "start": "1369440",
    "end": "1376080"
  },
  {
    "text": "web maybe you've written it in c or c plus plus or it's",
    "start": "1376080",
    "end": "1381440"
  },
  {
    "text": "in some technology that is not easily exposable on the web then you can write",
    "start": "1381440",
    "end": "1387039"
  },
  {
    "text": "a thin wrapper layer using webassembly and then you can run your application on the web because if you can find",
    "start": "1387039",
    "end": "1394240"
  },
  {
    "text": "language for it so for example if you have a c program then see you can compile that down to webassembly and",
    "start": "1394240",
    "end": "1399600"
  },
  {
    "text": "then you can use that in order to expose it on the web and we're going to have a look at people who have done that in a",
    "start": "1399600",
    "end": "1404960"
  },
  {
    "text": "short while here but here in our first example it's a digital signal processing library",
    "start": "1404960",
    "end": "1411120"
  },
  {
    "text": "where they had an application here using both c and c plus plus and what they did was that",
    "start": "1411120",
    "end": "1417360"
  },
  {
    "text": "they used webassembly in order to expose this on the web and then it looks",
    "start": "1417360",
    "end": "1423200"
  },
  {
    "text": "something like this so this is for manipulating images and",
    "start": "1423200",
    "end": "1430320"
  },
  {
    "text": "also live video so you can you can see here that you can do different types of",
    "start": "1430320",
    "end": "1435679"
  },
  {
    "text": "filters on this [Music]",
    "start": "1435679",
    "end": "1441039"
  },
  {
    "text": "live video stream",
    "start": "1441039",
    "end": "1444679"
  },
  {
    "text": "and another example is from autocad so so autocad is a company that deals with",
    "start": "1447440",
    "end": "1454320"
  },
  {
    "text": "drawings so they have a large customer base they've been around since the 1970s",
    "start": "1454320",
    "end": "1460240"
  },
  {
    "text": "there are many many different types of drawings that they want to be able to expose on the web and",
    "start": "1460240",
    "end": "1465600"
  },
  {
    "text": "until quite recently they haven't been able to do that because this has just been available on",
    "start": "1465600",
    "end": "1472799"
  },
  {
    "text": "the desktop so the way that autocad solved this using webassembly was that they",
    "start": "1472799",
    "end": "1478240"
  },
  {
    "text": "were using a layer here with webassembly that could call down to the core c plus",
    "start": "1478240",
    "end": "1483279"
  },
  {
    "text": "plus functionality on autocad and then you can use any type of you know modern ui component library like",
    "start": "1483279",
    "end": "1490880"
  },
  {
    "text": "react or angular or something and this is also a good example of a separation of concerns here because what you can do",
    "start": "1490880",
    "end": "1497279"
  },
  {
    "text": "here is you can have your your developers that are folk have focused on",
    "start": "1497279",
    "end": "1502559"
  },
  {
    "text": "the c plus bus code they can still focus on their core competence whereas you can have",
    "start": "1502559",
    "end": "1507760"
  },
  {
    "text": "maybe other developers that are focused more on the ui and on the front end they can use their strength which is web",
    "start": "1507760",
    "end": "1514320"
  },
  {
    "text": "programming and the way that enables this is through webassembly web assemblies sort of a wrapper here",
    "start": "1514320",
    "end": "1520559"
  },
  {
    "text": "between the new world which is the web and the old world which is more this desktop",
    "start": "1520559",
    "end": "1526559"
  },
  {
    "text": "application so now i'm going to cover sort of what",
    "start": "1526559",
    "end": "1532159"
  },
  {
    "text": "is the current state i'm going to be talking a little bit about what are the future plans here for web assembly",
    "start": "1532159",
    "end": "1537600"
  },
  {
    "text": "so one of the things that we can't do right now is we can't call directly to the dome or we can call a web api for",
    "start": "1537600",
    "end": "1543919"
  },
  {
    "text": "example and that's on the plans here for webassembly that they want to be able to directly be affecting the dom from",
    "start": "1543919",
    "end": "1550080"
  },
  {
    "text": "webassembly and also maybe you saw her in most of my examples here we needed a call we wanted to call our web",
    "start": "1550080",
    "end": "1556720"
  },
  {
    "text": "assignment we needed to do it in an assumptions way here but what they want to do is they want to be able to",
    "start": "1556720",
    "end": "1561919"
  },
  {
    "text": "directly import webassembly right into javascript so we can use it just as we are importing other libraries",
    "start": "1561919",
    "end": "1570679"
  },
  {
    "text": "one interesting um one interesting thing here is something that calls serverless web assembly the webassembly is not only",
    "start": "1571039",
    "end": "1577679"
  },
  {
    "text": "for the browser on the client but you can also use it on the server for example we have cloudflare and also",
    "start": "1577679",
    "end": "1583360"
  },
  {
    "text": "fastly that's a push webassembly on the server and some reasons why why you would want to do this is you",
    "start": "1583360",
    "end": "1590080"
  },
  {
    "text": "want to have less large times you might want to be able to not need to",
    "start": "1590080",
    "end": "1595520"
  },
  {
    "text": "rewrite an existing application application to javascript but instead you want to be able to just compile it",
    "start": "1595520",
    "end": "1601679"
  },
  {
    "text": "down to webassembly and run it on the server and you get also more lightweight applications",
    "start": "1601679",
    "end": "1608159"
  },
  {
    "text": "so you can here you can see a couple of different scenarios here so one is sort of a",
    "start": "1608159",
    "end": "1613679"
  },
  {
    "text": "classical scenario where you have a server side so let's say that we have a calculation engine so then we run our calculations",
    "start": "1613679",
    "end": "1620559"
  },
  {
    "text": "on the server side and the front end is just calling the back end to get the results or you can do everything here",
    "start": "1620559",
    "end": "1626240"
  },
  {
    "text": "client-side you do your calculations in javascript on the client or let's say",
    "start": "1626240",
    "end": "1631919"
  },
  {
    "text": "that you had your calculation engine in c and you can compile your the code to",
    "start": "1631919",
    "end": "1637200"
  },
  {
    "text": "webassembly and then you can run that also on the client client-side web assembly or you can run it server-less",
    "start": "1637200",
    "end": "1643760"
  },
  {
    "text": "web assembly so then again you had your your calculation engine in c you compile",
    "start": "1643760",
    "end": "1649919"
  },
  {
    "text": "it down to webassembly and then you run it as a serverless webassembly",
    "start": "1649919",
    "end": "1655840"
  },
  {
    "text": "so some different alternatives here that we have for running this is either through node as a serverless function",
    "start": "1657919",
    "end": "1665039"
  },
  {
    "text": "and with node it can also be interesting in what is sort of the penalty here in terms of initialization timer with node",
    "start": "1665039",
    "end": "1672480"
  },
  {
    "text": "we typically have somewhere around 200 millisecond startup time here",
    "start": "1672480",
    "end": "1678880"
  },
  {
    "text": "then we have fastly has environment they call the fastly terrarium and here they have an engine",
    "start": "1678880",
    "end": "1685520"
  },
  {
    "text": "called the set engine and with this we get the less station time down to 35",
    "start": "1685520",
    "end": "1691679"
  },
  {
    "text": "microseconds which is a drastic performance boost from comparing to node",
    "start": "1691679",
    "end": "1698480"
  },
  {
    "text": "or we can use a cloudflare worker they are using the v8 engine and here we get the inlet association times around",
    "start": "1698480",
    "end": "1705600"
  },
  {
    "text": "five milliseconds as you can see that there is quite big spread here so then you just have to see",
    "start": "1705600",
    "end": "1711760"
  },
  {
    "text": "what would work out best for you and as",
    "start": "1711760",
    "end": "1718000"
  },
  {
    "text": "as we have heard about here previously today there's also something called the web assembly system interface or versi",
    "start": "1718000",
    "end": "1725520"
  },
  {
    "text": "so here the main idea here is that we want to have web assembly running outside of the browser so in order to do",
    "start": "1725520",
    "end": "1731760"
  },
  {
    "text": "that we need some sort of interface for an operating system so that you can call for example",
    "start": "1731760",
    "end": "1737600"
  },
  {
    "text": "you can call the file system or maybe you want to open a socket or something like this",
    "start": "1737600",
    "end": "1744559"
  },
  {
    "text": "so here's sort of again here from from link clark here how this would",
    "start": "1744559",
    "end": "1750880"
  },
  {
    "text": "work so you have some sort of a guardian here that stands between the operating system and your web",
    "start": "1750880",
    "end": "1756640"
  },
  {
    "text": "assembly so the web assembly needs to request permissions from this guardian in order to do some sensitive operations",
    "start": "1756640",
    "end": "1763200"
  },
  {
    "text": "like for example a file reader file write operation",
    "start": "1763200",
    "end": "1768399"
  },
  {
    "text": "and in in general uh webassembly is governed by the same rules as for",
    "start": "1768399",
    "end": "1774559"
  },
  {
    "text": "as for javascript so now i'm going to be talking a little",
    "start": "1774559",
    "end": "1780480"
  },
  {
    "text": "bit about some other frameworks that are also using webassembly so the first one is iodide with paradight we bring the",
    "start": "1780480",
    "end": "1788559"
  },
  {
    "text": "python runtime to the browser through webassembly so that means that we as data scientists can again be using our",
    "start": "1788559",
    "end": "1795120"
  },
  {
    "text": "numpy or pandas matplotlib and so on directly in the browser so a good thing",
    "start": "1795120",
    "end": "1800559"
  },
  {
    "text": "with this is that this makes it very easy for data scientists to share their results with other data scientists in a",
    "start": "1800559",
    "end": "1806480"
  },
  {
    "text": "very easy way and another",
    "start": "1806480",
    "end": "1811760"
  },
  {
    "text": "another example here is something called assembly script so with assembly script we have a subset",
    "start": "1811760",
    "end": "1818159"
  },
  {
    "text": "here of typescript that has been compiled down to webassembly and",
    "start": "1818159",
    "end": "1825200"
  },
  {
    "text": "and one of the things that you need to take into account here that for example rust is based by mozilla",
    "start": "1825200",
    "end": "1831760"
  },
  {
    "text": "and but assembly script has a much uh smaller uh backup so that can be",
    "start": "1831760",
    "end": "1838240"
  },
  {
    "text": "interesting to know if you want to go here for assembly script or not another thing with the semiscript that",
    "start": "1838240",
    "end": "1844240"
  },
  {
    "text": "with the same script you need to both allocate to memory so you allocate your memory and then you do something with",
    "start": "1844240",
    "end": "1849360"
  },
  {
    "text": "that memory and then after that you need to remember to free up your memory again",
    "start": "1849360",
    "end": "1856399"
  },
  {
    "text": "and also which has also been talked about earlier today here is blazer",
    "start": "1857600",
    "end": "1863440"
  },
  {
    "text": "so by the way has any one of you in the audience used blazer before",
    "start": "1863440",
    "end": "1869039"
  },
  {
    "text": "oh okay so some people just use it so so basically there are two different flavors of blazers so blazers to",
    "start": "1869039",
    "end": "1874640"
  },
  {
    "text": "framework which enables you as a developer to build web applications just using a c sharp you don't need to learn",
    "start": "1874640",
    "end": "1881760"
  },
  {
    "text": "anything about javascript or anything about any new tooling you can just use",
    "start": "1881760",
    "end": "1887200"
  },
  {
    "text": "visual studio as you have been used to do before and write everything using c-sharp there are two flavors",
    "start": "1887200",
    "end": "1893760"
  },
  {
    "text": "either you can run it run the blazer on the server this is using a technology called signalr to",
    "start": "1893760",
    "end": "1899519"
  },
  {
    "text": "send events back and forth from the server to the client or you can run it on webassembly the way that this works",
    "start": "1899519",
    "end": "1906080"
  },
  {
    "text": "is that we have a version of the net framework that is running on webassembly so by this we can use any type of code",
    "start": "1906080",
    "end": "1913440"
  },
  {
    "text": "that we can write here.net we can actually have it running in in the browser",
    "start": "1913440",
    "end": "1920159"
  },
  {
    "text": "so the history of this is uh there is a there's a guy from microsoft steve",
    "start": "1920159",
    "end": "1925519"
  },
  {
    "text": "sanderson who is also here on this conference in the ndc oslo 2017 um conference he",
    "start": "1925519",
    "end": "1932840"
  },
  {
    "text": "presented he presented web assembly and he presented web assembly by making",
    "start": "1932840",
    "end": "1938960"
  },
  {
    "text": "a quite simple example of how i can run the fibonacci calculations",
    "start": "1938960",
    "end": "1944640"
  },
  {
    "text": "in the web using web assembly and this caught the interest from the mono team at microsoft so they saw that mono which",
    "start": "1944640",
    "end": "1951679"
  },
  {
    "text": "is um which was an open source framework here of the net",
    "start": "1951679",
    "end": "1958240"
  },
  {
    "text": "framework can be a compiled target for web assembly and at the same time there was a team in the asp.net team that were",
    "start": "1958240",
    "end": "1965440"
  },
  {
    "text": "thinking of generating this laser framework so that was sort of a good combination",
    "start": "1965440",
    "end": "1970559"
  },
  {
    "text": "error the way that it basically works is you have your cs files your cs html files",
    "start": "1970559",
    "end": "1976320"
  },
  {
    "text": "and then you compile it to assemblies then since we have this",
    "start": "1976320",
    "end": "1981360"
  },
  {
    "text": "uh this version of the net framework the mono that can run that can run inside the webassembly we can actually run dot",
    "start": "1981360",
    "end": "1988399"
  },
  {
    "text": "net dlls inside the browser so it can look something like this so",
    "start": "1988399",
    "end": "1994399"
  },
  {
    "text": "this is sort of the introductory example here that you have a blazer app you'll be the counter and then you can change some properties",
    "start": "1994399",
    "end": "2001600"
  },
  {
    "text": "here on this counter and then this is maybe the most interesting here that here we are looking at what is loaded inside our",
    "start": "2001600",
    "end": "2008159"
  },
  {
    "text": "browser for example you can see our rdl the blazer app dll is running inside",
    "start": "2008159",
    "end": "2014000"
  },
  {
    "text": "the browser and you also have for example the ms core lib dll or the dotnet standard dll is also running",
    "start": "2014000",
    "end": "2020799"
  },
  {
    "text": "inside the browser you were not really used to see that before we were using blazer so blazers",
    "start": "2020799",
    "end": "2027679"
  },
  {
    "text": "blazer is very interesting technology to have a look at",
    "start": "2027679",
    "end": "2033840"
  },
  {
    "text": "but for those amongst us that are more interested in",
    "start": "2037039",
    "end": "2042080"
  },
  {
    "text": "functional programming maybe we'll have a look at bolero which is a way that you can use f sharp in web assembly",
    "start": "2042080",
    "end": "2048960"
  },
  {
    "text": "so then you can develop spawn quotations with the full power of f sharp and dot net",
    "start": "2048960",
    "end": "2055200"
  },
  {
    "text": "so i'm not going to say too much about this but if you're if you're a functional programmer or if",
    "start": "2055200",
    "end": "2060398"
  },
  {
    "text": "you're a f-sharp developer i can highly recommend you to have a look at this bolero framework",
    "start": "2060399",
    "end": "2067520"
  },
  {
    "text": "so now we've reached this cryptic headline called new old",
    "start": "2070159",
    "end": "2077200"
  },
  {
    "text": "so the question here question here is haven't we seen all of this before",
    "start": "2077200",
    "end": "2083358"
  },
  {
    "text": "for those amongst us who has been around for a while we remember the active vex component",
    "start": "2083359",
    "end": "2088560"
  },
  {
    "text": "was had the same similar type of promises as we have now with web assembly we can remember flash",
    "start": "2088560",
    "end": "2095440"
  },
  {
    "text": "or we can also remember the microsoft silverlight so the question is why",
    "start": "2095440",
    "end": "2100480"
  },
  {
    "text": "what does it make that webassembly should be more successful than all of these things",
    "start": "2100480",
    "end": "2106640"
  },
  {
    "text": "so i think one of the reasons is that now we actually have because all of these previous examples they have been",
    "start": "2106640",
    "end": "2111680"
  },
  {
    "text": "proprietary standards now we have a web standard which is has been accepted by the w3c",
    "start": "2111680",
    "end": "2118000"
  },
  {
    "text": "and it's also seen as a pillar here of web development so we have html we have css we have",
    "start": "2118000",
    "end": "2125359"
  },
  {
    "text": "javascript and then web assembly is sort of on the same level as this other technologies so i think that is a good",
    "start": "2125359",
    "end": "2133440"
  },
  {
    "text": "indication that webassembly will live much longer than these previous",
    "start": "2133440",
    "end": "2138880"
  },
  {
    "text": "types of frameworks so question here what is the conclusion",
    "start": "2138880",
    "end": "2145920"
  },
  {
    "text": "should we go web assembly all the things because when i started looking into webassembly there were many articles",
    "start": "2145920",
    "end": "2151599"
  },
  {
    "text": "that said that now you know javascript this javascript is dead web assembly will take over everything but i don't",
    "start": "2151599",
    "end": "2157920"
  },
  {
    "text": "think that's actually the case here so i think that webassembly is a tool that can be really useful in some very",
    "start": "2157920",
    "end": "2164400"
  },
  {
    "text": "specific use cases like for example the ones that we talked about when you want to have high performance you maybe have",
    "start": "2164400",
    "end": "2170640"
  },
  {
    "text": "a mathematical engine or some graphical programming or if you have some legacy code",
    "start": "2170640",
    "end": "2176000"
  },
  {
    "text": "that you want to be able to expose out on the web then webassembly is a very nice tool to have but it's just one tool",
    "start": "2176000",
    "end": "2182720"
  },
  {
    "text": "amongst many other in your toolbox so i don't think there is any risk at",
    "start": "2182720",
    "end": "2188240"
  },
  {
    "text": "all that javascript will disappear either in the short run or in the in the long run but you can see as webassembly",
    "start": "2188240",
    "end": "2194400"
  },
  {
    "text": "is a very good tool to use for some specific use cases",
    "start": "2194400",
    "end": "2200359"
  },
  {
    "text": "then i have some some references so you can there is both some references",
    "start": "2200480",
    "end": "2206640"
  },
  {
    "text": "on the mozilla webpage on webassembly and if you want to know more about blazer if",
    "start": "2206640",
    "end": "2213040"
  },
  {
    "text": "you want to watch this presentation from the ndc oslo presentation in 2017 you can find this",
    "start": "2213040",
    "end": "2219520"
  },
  {
    "text": "on this link over here",
    "start": "2219520",
    "end": "2222720"
  },
  {
    "text": "so with that said you can find me here either on uh on my twitter which is a grab list or",
    "start": "2224560",
    "end": "2231680"
  },
  {
    "text": "you can also send me an email if you should have any types of questions so",
    "start": "2231680",
    "end": "2237520"
  },
  {
    "text": "with that i want to thank all of you for coming to my talk thank you so much",
    "start": "2237520",
    "end": "2243800"
  },
  {
    "text": "yeah sure what's the most complicated thing in written raw",
    "start": "2253119",
    "end": "2258160"
  },
  {
    "text": "i wrote absolutely basically nothing it's that's a very it's not an",
    "start": "2258160",
    "end": "2263599"
  },
  {
    "text": "environment that you really want to do anything in actually it's more risk for testing it testing it out",
    "start": "2263599",
    "end": "2271440"
  },
  {
    "text": "and i think that's maybe one of the drawbacks right now with webassembly is that the tooling has much to uh",
    "start": "2271440",
    "end": "2278480"
  },
  {
    "text": "hasn't much to offer so it's both is quite clunky to install and",
    "start": "2278480",
    "end": "2283599"
  },
  {
    "text": "you know you can get errors every now and then but but i think with time it will probably",
    "start": "2283599",
    "end": "2288640"
  },
  {
    "text": "be much more improved",
    "start": "2288640",
    "end": "2292000"
  },
  {
    "text": "yes yes we have a question there",
    "start": "2294880",
    "end": "2299000"
  },
  {
    "text": "yeah so with native that's a in comparison to a web application to for example c or c plus",
    "start": "2303119",
    "end": "2310720"
  },
  {
    "text": "that sort of the comparison here",
    "start": "2310720",
    "end": "2314240"
  },
  {
    "text": "now we're comparing it to if you would if you wouldn't write it if you wouldn't run it on the web if you would run it",
    "start": "2320560",
    "end": "2325920"
  },
  {
    "text": "you know natively just on your uh just on your operating system without",
    "start": "2325920",
    "end": "2331040"
  },
  {
    "text": "the web yes",
    "start": "2331040",
    "end": "2335880"
  },
  {
    "text": "thank you yeah then i just wish you a",
    "start": "2343119",
    "end": "2348480"
  },
  {
    "text": "good conference thank you so much",
    "start": "2348480",
    "end": "2353640"
  }
]