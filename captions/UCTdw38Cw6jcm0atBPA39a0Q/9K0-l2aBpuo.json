[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "okay hello everyone I hope you had a good lunch and probably it's time to start um so we'll talk today about",
    "start": "4839",
    "end": "11840"
  },
  {
    "text": "standard C++ tool set we'll try to figure out if we have it or what we are",
    "start": "11840",
    "end": "17520"
  },
  {
    "text": "missing from it what are the in general proc cons of having it and what are the challenges in",
    "start": "17520",
    "end": "23279"
  },
  {
    "text": "C++ uh before that a few disclaimers so my name is Anastasia kazaka I work for jet brains but I'm not going going to be",
    "start": "23279",
    "end": "30679"
  },
  {
    "text": "an advocate for our tools here I will be showing them a bit as a part of ecosystem luckily we are a part of this",
    "start": "30679",
    "end": "35960"
  },
  {
    "text": "ecosystem but if you want some specific uh question or topic regarding our tools",
    "start": "35960",
    "end": "41239"
  },
  {
    "text": "we have a boo there so please come and ask so any types of questions like why this doesn't work for me or why this is",
    "start": "41239",
    "end": "47360"
  },
  {
    "text": "hanging for me whatever we are ready to answer these questions at the booth um",
    "start": "47360",
    "end": "53520"
  },
  {
    "text": "so just briefly uh a few words about myself so uh I worked in embedded",
    "start": "53520",
    "end": "58719"
  },
  {
    "start": "55000",
    "end": "130000"
  },
  {
    "text": "development actually in Telo home uh and I was launching the 4G LT networks and",
    "start": "58719",
    "end": "64000"
  },
  {
    "text": "all that fun uh for8 years in total so doing some C and",
    "start": "64000",
    "end": "69479"
  },
  {
    "text": "then C++ uh I then joined J brains where I do marketing which is a surprising role for",
    "start": "69479",
    "end": "76159"
  },
  {
    "text": "me but uh I'm with J brains for nearly 10 years already so uh yeah marketing is",
    "start": "76159",
    "end": "81759"
  },
  {
    "text": "kind of um my main role right now um you can also find me on Twitter which is now",
    "start": "81759",
    "end": "88880"
  },
  {
    "text": "not Twitter but X whatever so but uh my name is still there the same and if",
    "start": "88880",
    "end": "94680"
  },
  {
    "text": "you're just around Amsterdam one day where I do leave now uh we run a Dutch",
    "start": "94680",
    "end": "100119"
  },
  {
    "text": "C++ user group and you're all very welcome to our Meetup as guests or speakers uh we don't do meetups",
    "start": "100119",
    "end": "107640"
  },
  {
    "text": "regularly but we try to so uh Everyone is always welcome and if you want to speak at Dutch Meetup in Amsterdam just",
    "start": "107640",
    "end": "114399"
  },
  {
    "text": "ping me for example via Twitter and we'll organize that we like speakers um um so before talking about",
    "start": "114399",
    "end": "121399"
  },
  {
    "text": "the standard uh tool set let's take a look at the general impression of the C++ developers from the perspective what",
    "start": "121399",
    "end": "128800"
  },
  {
    "text": "of what is frustrating them the most luckily we have a good answer uh thanks",
    "start": "128800",
    "end": "134319"
  },
  {
    "start": "130000",
    "end": "218000"
  },
  {
    "text": "to the C++ Foundation survey which they um kind of run yearly and they yearly ask these questions to the C++",
    "start": "134319",
    "end": "140959"
  },
  {
    "text": "developers so what are the most frustrating points about C++ for you and interestingly enough given all the",
    "start": "140959",
    "end": "147640"
  },
  {
    "text": "challenges the C++ language has given the difficulty of the language and like the evolution of the language the top",
    "start": "147640",
    "end": "155319"
  },
  {
    "text": "reasons are not related to language at all uh actually there are more than four",
    "start": "155319",
    "end": "160480"
  },
  {
    "text": "reasons not related to language because like I guess concurrency concurrency safety specifically got to this list",
    "start": "160480",
    "end": "166920"
  },
  {
    "text": "quite recently but below it you still see the things not related to the",
    "start": "166920",
    "end": "172280"
  },
  {
    "text": "language so what usually bothers people in C++ and frustrate them the most are",
    "start": "172280",
    "end": "177440"
  },
  {
    "text": "the things connected to tools like how to set up properly how to build properly how to find a good project model how to",
    "start": "177440",
    "end": "185040"
  },
  {
    "text": "find a good uh tooling for doing this or that so the most frustrating people",
    "start": "185040",
    "end": "190480"
  },
  {
    "text": "points frustrating people are still um things not related to the language which is a little bit a surprise with C++",
    "start": "190480",
    "end": "197159"
  },
  {
    "text": "right so we're always talking about the complexity of the language and how we can do things better in language there",
    "start": "197159",
    "end": "202920"
  },
  {
    "text": "but the people are frustrated with the things like how to deal with libraries and I totally understand them um",
    "start": "202920",
    "end": "210319"
  },
  {
    "text": "so okay so the tools are kind of important to the people the tool set so let's try to explore um what we actually",
    "start": "210319",
    "end": "217200"
  },
  {
    "text": "have there before we do that uh I would like to kind of a little bit divide the tools into tick groups so this is my",
    "start": "217200",
    "end": "223519"
  },
  {
    "start": "218000",
    "end": "282000"
  },
  {
    "text": "like personal view on that so uh you might have a different opinion here but",
    "start": "223519",
    "end": "228560"
  },
  {
    "text": "anyway I think that there are essential tools and complimentary tools essential tools are the tools without which we can",
    "start": "228560",
    "end": "234840"
  },
  {
    "text": "do anything like right so you can do anything without a compiler or some kind of a standard Library uh you probably",
    "start": "234840",
    "end": "242120"
  },
  {
    "text": "need some kind of a debugger and some build system there are still people who are dealing with C++ without any kind of",
    "start": "242120",
    "end": "248159"
  },
  {
    "text": "the like project model or build system uh but I do think this this is an",
    "start": "248159",
    "end": "253239"
  },
  {
    "text": "essential tool and like some libraries and some kind of a dependency manager the other things is like good to have",
    "start": "253239",
    "end": "260079"
  },
  {
    "text": "things like I would like to have a code analyzer but like strictly speaking I",
    "start": "260079",
    "end": "265280"
  },
  {
    "text": "can live without it I will be a little bit suffering or may be suffering a lot but I can do without it and so we'll try",
    "start": "265280",
    "end": "271479"
  },
  {
    "text": "to cover both groups today and we'll also get into some new Tools in our like",
    "start": "271479",
    "end": "276639"
  },
  {
    "text": "whole development environment which are based on AI and how they do now in C++ for",
    "start": "276639",
    "end": "282039"
  },
  {
    "start": "282000",
    "end": "382000"
  },
  {
    "text": "example again before doing that let's try to figure out how the tool set actually helps so what is the reason for",
    "start": "282039",
    "end": "289639"
  },
  {
    "text": "having for example a standard tool set what it actually simplifies so first of all a very simple and obvious reason it",
    "start": "289639",
    "end": "295720"
  },
  {
    "text": "helps the ubis right so when you're coming to your language if you take just something in standard recommended you",
    "start": "295720",
    "end": "301039"
  },
  {
    "text": "don't have to deal with like which compiler should I take that's not the question if you're in UB you would like",
    "start": "301039",
    "end": "306880"
  },
  {
    "text": "to deal with you would like to learn language right but it also helped help the professionals like say on boarding",
    "start": "306880",
    "end": "313320"
  },
  {
    "text": "via the def environments when you have some standard tool set in your company it's much easier just to set up a",
    "start": "313320",
    "end": "318759"
  },
  {
    "text": "container with all the tools and to give it to a new employee right so that it he or she already has everything they need",
    "start": "318759",
    "end": "325840"
  },
  {
    "text": "for developing your project uh codification is very important and it's more for tools like",
    "start": "325840",
    "end": "332440"
  },
  {
    "text": "code analysis and other stuff because we want our code to be unified not just for the sake of unification itself but",
    "start": "332440",
    "end": "339400"
  },
  {
    "text": "because it's easier to maintain and to spread up the good practices with it and yeah if talking about practices",
    "start": "339400",
    "end": "347080"
  },
  {
    "text": "like standard tool set kind of helps with the and the tools in general are helping with the best practices adoption",
    "start": "347080",
    "end": "352759"
  },
  {
    "text": "because as quite often the people from the uh like standard committee uh turn",
    "start": "352759",
    "end": "359919"
  },
  {
    "text": "to say like and many others is that if you have a good practice or you have a guideline without a tool it means",
    "start": "359919",
    "end": "366080"
  },
  {
    "text": "nothing so if there is nothing pushing this guideline on you or forcing this guideline on you so it's very hard to",
    "start": "366080",
    "end": "372000"
  },
  {
    "text": "follow this practice even if it's like very very good and uh yeah of course",
    "start": "372000",
    "end": "377440"
  },
  {
    "text": "like curing and libraries and all that stuff is also related to the tool set",
    "start": "377440",
    "end": "382840"
  },
  {
    "start": "382000",
    "end": "686000"
  },
  {
    "text": "before I come into C++ let's think about this for icons generally how the other",
    "start": "382840",
    "end": "388120"
  },
  {
    "text": "languages are doing let's take a few examples so we have Java uh what does",
    "start": "388120",
    "end": "393919"
  },
  {
    "text": "Java have Java actually is a very interesting uh case because it has several compilers uh and there are",
    "start": "393919",
    "end": "401560"
  },
  {
    "text": "interesting cases like javak is kind of standard one but there is this for example Eclipse compiler for Java which",
    "start": "401560",
    "end": "408599"
  },
  {
    "text": "was created specifically for the eclipse ID because it can deal with the blocks",
    "start": "408599",
    "end": "414160"
  },
  {
    "text": "of code that doesn't compile for example and kind of skip them and the is as a reg regular compiler can do that and it",
    "start": "414160",
    "end": "421680"
  },
  {
    "text": "can do like incremental bills whatever so this second compiler actually has a reason it was created for the purposes",
    "start": "421680",
    "end": "427479"
  },
  {
    "text": "of the specific IDE like they definitely have a fantastic Library um like if you kind of",
    "start": "427479",
    "end": "435120"
  },
  {
    "text": "aware and um know the other language or heard something about it you know that they have a great",
    "start": "435120",
    "end": "440639"
  },
  {
    "text": "Library um they kind of have this standard project models like Maven and grle are the top two ant is also used",
    "start": "440639",
    "end": "448000"
  },
  {
    "text": "quite uh often but like the first two are the like most uh popular and yeah",
    "start": "448000",
    "end": "453759"
  },
  {
    "text": "they have kind of the standard approach to unit testing so um Ruby uh Ruby is actually a",
    "start": "453759",
    "end": "462000"
  },
  {
    "text": "very interesting language here uh as well because they have a Dos of compilers and these uh variety of",
    "start": "462000",
    "end": "469000"
  },
  {
    "text": "compilers actually represent all the possible compiler techniques like from interpreter to the you know uh G",
    "start": "469000",
    "end": "476520"
  },
  {
    "text": "compilation whatever so every compiler technique you would like to learn take a ruby compiler the proper one and just",
    "start": "476520",
    "end": "483199"
  },
  {
    "text": "explore it with it and it's a very interesting thing that they have this rail Singularity I don't know if you've",
    "start": "483199",
    "end": "488479"
  },
  {
    "text": "heard about that those who probably uh did some Ruby in the past or doing some Ruby now so you know that uh this is the",
    "start": "488479",
    "end": "496120"
  },
  {
    "text": "uh measurement for the compiler so this is the um kind of the thing the compiler should do to be a proper Ruby compiler",
    "start": "496120",
    "end": "502680"
  },
  {
    "text": "so they have this ruon rails framework which is very popular and it's used by like something 70% of the Ruby",
    "start": "502680",
    "end": "508599"
  },
  {
    "text": "Developers so the proper compiler should be able to compile uh ruon rails and that calls the um rail",
    "start": "508599",
    "end": "515599"
  },
  {
    "text": "Singularity um they have like uh these Ruby Gams for uh packaging they have",
    "start": "515599",
    "end": "521440"
  },
  {
    "text": "this uh tests approach so it's kind of standard they still have some variety",
    "start": "521440",
    "end": "526839"
  },
  {
    "text": "but um yeah so generally um they have some standard tools the very very",
    "start": "526839",
    "end": "532760"
  },
  {
    "text": "standard ecosystem is the apple one uh they are locking everyone to the very standard set of tools so Swift is no",
    "start": "532760",
    "end": "538839"
  },
  {
    "text": "exception here of course so it's like uh only working properly with apple",
    "start": "538839",
    "end": "545040"
  },
  {
    "text": "tools uh there is alum and ldb and it's very interesting that that's not the mainstream uh like ldb for example or",
    "start": "545040",
    "end": "552640"
  },
  {
    "text": "Clank that they're using they're always using their own version so if you just take the general Clank or general ldb",
    "start": "552640",
    "end": "558120"
  },
  {
    "text": "you'll always be having issues with that uh because they're not upstreaming the patchers they are applying to that they",
    "start": "558120",
    "end": "565200"
  },
  {
    "text": "have the uh LSP implementation The Source keid basically the code and analyzer uh which you can use uh for",
    "start": "565200",
    "end": "572040"
  },
  {
    "text": "some like tasks of dealing with the code yeah a very standard approach to package management they had to and I said had",
    "start": "572040",
    "end": "580200"
  },
  {
    "text": "because like SPM is kind of standard like the Swift package manager cako pods",
    "start": "580200",
    "end": "585240"
  },
  {
    "text": "is a third party tool which unfortunately gets now uh less popular",
    "start": "585240",
    "end": "591079"
  },
  {
    "text": "because probably apple is pushing SPM more but kako pods is a fantastic tool so they're still uh trying to survive in",
    "start": "591079",
    "end": "598079"
  },
  {
    "text": "this ecosystem let's see how it goes um but yeah unfortunately SPM is probably",
    "start": "598079",
    "end": "603880"
  },
  {
    "text": "taking the whole Market or fortunately I don't know so there is like a standard package manager and they have this fantastic playground where you can play",
    "start": "603880",
    "end": "610680"
  },
  {
    "text": "with code which is nice for like nuis and also a standard approach to un need",
    "start": "610680",
    "end": "616000"
  },
  {
    "text": "testing um rust the ecosystem which is very close to our Huds right as C++",
    "start": "616000",
    "end": "622320"
  },
  {
    "text": "developers and many of us actually do some Rust development so this is a very good example of a wisely created",
    "start": "622320",
    "end": "629640"
  },
  {
    "text": "uh tool set because they do have a standard compiler there is like uh no questions here and uh they have a nice",
    "start": "629640",
    "end": "637160"
  },
  {
    "text": "approach to project models and package management like Cara with crates is just",
    "start": "637160",
    "end": "642480"
  },
  {
    "text": "a fantastic tool and you don't have to think uh about it at all and they have the standard even formatter they have",
    "start": "642480",
    "end": "649200"
  },
  {
    "text": "standard kind of um analyzer which also is an LSP based tool so you can like vs",
    "start": "649200",
    "end": "655240"
  },
  {
    "text": "code is using it for example for its extension for rest and um funny thing",
    "start": "655240",
    "end": "660279"
  },
  {
    "text": "about Rustica system is that they are debugging with pran or Deb macros still we have the proven data that 60 more",
    "start": "660279",
    "end": "666920"
  },
  {
    "text": "than 60% of the rust developers still do that probably because they have some issues with the debugger in their",
    "start": "666920",
    "end": "672639"
  },
  {
    "text": "ecosystem so that but that's probably the only issue for them so the carg test is also Quant standards okay so this is",
    "start": "672639",
    "end": "679440"
  },
  {
    "text": "how the ecosystem in other languages looks like let's get to the interesting part the C++ it won't be that",
    "start": "679440",
    "end": "686440"
  },
  {
    "start": "686000",
    "end": "934000"
  },
  {
    "text": "straightforward uh we'll start with the compilers and we'll just take four out of the whole family um so yeah when you",
    "start": "686440",
    "end": "694880"
  },
  {
    "text": "ask a person about compilers and C++ usually you at least get four in the answer right so it's GCC Clank msvc and",
    "start": "694880",
    "end": "702600"
  },
  {
    "text": "Intel uh and there are like details here GCC could be GCC or GCC based for",
    "start": "702600",
    "end": "707839"
  },
  {
    "text": "example compilers which are very popular in various embedded uh projects Intel can be now Intel or Intel alivium which",
    "start": "707839",
    "end": "714519"
  },
  {
    "text": "is an Intel uh version of the alivium compiler with uh like tuned for their",
    "start": "714519",
    "end": "721639"
  },
  {
    "text": "Hardware the interesting thing is that these compilers do things differently and sometimes they do things differently",
    "start": "721639",
    "end": "728519"
  },
  {
    "text": "in some like core factors like they have they generate different assembly which",
    "start": "728519",
    "end": "733880"
  },
  {
    "text": "means different performance they uh do error reporting differently like if you ever try to",
    "start": "733880",
    "end": "740320"
  },
  {
    "text": "compare the error report from say msvc and Clank it looks like they're talking about different issues to you right um",
    "start": "740320",
    "end": "749040"
  },
  {
    "text": "interestingly like when we do tools like IDs we often have to um like ask",
    "start": "749040",
    "end": "754560"
  },
  {
    "text": "compilers some specific information for example we do ask for the compiler predefined macros because that affects",
    "start": "754560",
    "end": "759680"
  },
  {
    "text": "actually how we parse and resolve the code and finally enough these compilers they also do these differently I mean",
    "start": "759680",
    "end": "766079"
  },
  {
    "text": "like GCC and Clank they somehow manage to unify the interface and they have this they have the same uh like",
    "start": "766079",
    "end": "773040"
  },
  {
    "text": "parameter list um to grab this information from the compiler Microsoft compiler uh till the very recent time uh",
    "start": "773040",
    "end": "782000"
  },
  {
    "text": "it didn't have a proper way at all uh then they added this uh kind of option so you can now extract the compella",
    "start": "782000",
    "end": "788760"
  },
  {
    "text": "predefined mecos but it's completely different from the approach with gcco Clank right so if you do that you have",
    "start": "788760",
    "end": "794399"
  },
  {
    "text": "to think about like which compiler you will be working with and this is the information many uh tools working with",
    "start": "794399",
    "end": "801320"
  },
  {
    "text": "code rely at because like if you do an ID or you do a code analyzer you have to extract this information to uh par the",
    "start": "801320",
    "end": "808199"
  },
  {
    "text": "code properly then there is a very interesting story which I'm not going to go into that much",
    "start": "808199",
    "end": "814160"
  },
  {
    "text": "details but still synx style and C++ is very very different you can write one",
    "start": "814160",
    "end": "819880"
  },
  {
    "text": "thing in say five to 10 different ways and they all will be correct they all will be compiled correctly but you just",
    "start": "819880",
    "end": "826959"
  },
  {
    "text": "do things differently the most typical examples are this almost uh almost always outer approach which is like",
    "start": "826959",
    "end": "834320"
  },
  {
    "text": "sometimes very questionable by some developers uh there is this battle between between East const and West",
    "start": "834320",
    "end": "840079"
  },
  {
    "text": "const so with no Cleo winner um there is the trailing return type approach",
    "start": "840079",
    "end": "846000"
  },
  {
    "text": "because sometime uh some people think that they should only be applied for lambdas and some people think that they",
    "start": "846000",
    "end": "851399"
  },
  {
    "text": "should be applied always where possible uh virtual keyword is a very interesting",
    "start": "851399",
    "end": "857120"
  },
  {
    "text": "thing because I saw different guidelines with different recommendations say Unreal Engine guidelines for the code",
    "start": "857120",
    "end": "862920"
  },
  {
    "text": "for this is the game def engine uh they do recommend uh like virtual EXP",
    "start": "862920",
    "end": "868959"
  },
  {
    "text": "explicitly and on the contrary C++ cor guidelines they uh tend to recommend overriding final over virtual so the two",
    "start": "868959",
    "end": "877120"
  },
  {
    "text": "completely different guidelines which are just like have no common ground and uh just to show you the bigger variety",
    "start": "877120",
    "end": "883639"
  },
  {
    "text": "so we once decided that we'll do the settings for the synx styles for the developers I don't know if anyone is",
    "start": "883639",
    "end": "889160"
  },
  {
    "text": "using this in our tools but we have like 30 to 40 options which you can actually",
    "start": "889160",
    "end": "894320"
  },
  {
    "text": "configure and that will Define your syntax style and this just like the most",
    "start": "894320",
    "end": "899680"
  },
  {
    "text": "um use the most important part from the C++ so there are much more options so you can write code differently the",
    "start": "899680",
    "end": "906000"
  },
  {
    "text": "syntax style could be different sometimes this this is annoying",
    "start": "906000",
    "end": "912000"
  },
  {
    "text": "right uh actually it's not when your tools can automate like when you tools can do something like that when you just",
    "start": "912000",
    "end": "918040"
  },
  {
    "text": "click something and it converts your code say into the trailing return type it's fine I mean like you just ask the",
    "start": "918040",
    "end": "924120"
  },
  {
    "text": "tool to help you so then then it's uh okay and then again it's about tools so when you have just the family of these",
    "start": "924120",
    "end": "930279"
  },
  {
    "text": "guidelines you might be struggling but if you have a proper tool that's fine so uh C++ tool set where are we now",
    "start": "930279",
    "end": "938279"
  },
  {
    "start": "934000",
    "end": "1174000"
  },
  {
    "text": "uh before I will be showing you some data today uh this data is mostly extracted from this C++ Foundation um",
    "start": "938279",
    "end": "945800"
  },
  {
    "text": "light survey uh this year 2023 but also developer ecosystem uh research which we",
    "start": "945800",
    "end": "951920"
  },
  {
    "text": "do in ch brains and also I have the data for this 2023 while it's not yet published but it will be published soon",
    "start": "951920",
    "end": "958600"
  },
  {
    "text": "so I already have the data uh but I have to make a small disclaimer here because",
    "start": "958600",
    "end": "963720"
  },
  {
    "text": "our audiences are different and this is what affects them and we have to take this into account when I will be showing",
    "start": "963720",
    "end": "970480"
  },
  {
    "text": "you some data which has different like green and blue data there is a reason for that because our audience is usually",
    "start": "970480",
    "end": "977959"
  },
  {
    "text": "less uh professional in terms of it we have some average C++ developer Port",
    "start": "977959",
    "end": "983360"
  },
  {
    "text": "rate while the C++ Foundation tends to grab people with 10 plus years of plus",
    "start": "983360",
    "end": "988800"
  },
  {
    "text": "plus experience so and that clearly shows in the data um okay so let's uh think about the",
    "start": "988800",
    "end": "997079"
  },
  {
    "text": "C++ tool set now so I really like Bryce talks and I really love this picture",
    "start": "997079",
    "end": "1002839"
  },
  {
    "text": "from uh one of his talk at um C++ now so about the C++ as you know a universal um",
    "start": "1002839",
    "end": "1011920"
  },
  {
    "text": "Tool uh like this double edged word that it works for everything so with any",
    "start": "1011920",
    "end": "1017199"
  },
  {
    "text": "Paradigm for any problem for any platform and that probably defines the current landscape of tools for us the",
    "start": "1017199",
    "end": "1024160"
  },
  {
    "text": "fact that we have many of them because sometimes they are applicable for say one type of problem or for one Paradigm",
    "start": "1024160",
    "end": "1031280"
  },
  {
    "text": "or for one platform and the others are just for uh other kinds so this is probably fine because we have this",
    "start": "1031280",
    "end": "1038000"
  },
  {
    "text": "universal language it's hard to maybe create one standard tool set when you try to cover like you know everything in",
    "start": "1038000",
    "end": "1043880"
  },
  {
    "text": "the world um whether there are like some standard more standard tool sets like",
    "start": "1043880",
    "end": "1049760"
  },
  {
    "text": "say if you take the Apple platform it's more standard like yeah because it's kind of controlled more by the apple and",
    "start": "1049760",
    "end": "1055600"
  },
  {
    "text": "usually we use like Clank and lb uh and like the tools from this ecosystem uh",
    "start": "1055600",
    "end": "1061400"
  },
  {
    "text": "when we were starting Seine in 2015 we did a research when we were trying to",
    "start": "1061400",
    "end": "1066600"
  },
  {
    "text": "figure out the minimal tool set to support we came up based on our research on this tool set of GCC plus cmake plus",
    "start": "1066600",
    "end": "1073200"
  },
  {
    "text": "GDB it was standard for nearly everyone uh except maybe the Apple platform which is a bit different anyway um let's be",
    "start": "1073200",
    "end": "1080760"
  },
  {
    "text": "back to compilers I showed you that the slide with four names but here are all like the six logas because the C++",
    "start": "1080760",
    "end": "1087159"
  },
  {
    "text": "compiler is not just you know uh GCC Clank Intel or amsc it's much more they",
    "start": "1087159",
    "end": "1093760"
  },
  {
    "text": "IR compilers there like kale family there are even like these things like Green Hills if you work in automotive",
    "start": "1093760",
    "end": "1099480"
  },
  {
    "text": "you know what I'm talking about and many many others and quite often they're not compatible like GCC and clang is with",
    "start": "1099480",
    "end": "1106640"
  },
  {
    "text": "all their differences uh between each other is the most uh correlated compilers in this family um the others",
    "start": "1106640",
    "end": "1114280"
  },
  {
    "text": "are usually doing things differently uh if you take a look at the usage actually it's quite expected I",
    "start": "1114280",
    "end": "1121200"
  },
  {
    "text": "guess that uh GCC and MSC and clang are the most popular we have some different",
    "start": "1121200",
    "end": "1126559"
  },
  {
    "text": "data with foundation and uh our research um we've seen that already probably",
    "start": "1126559",
    "end": "1133480"
  },
  {
    "text": "because Foundation usually has um more people from the windows ecosystem especially from the game DEF where",
    "start": "1133480",
    "end": "1140120"
  },
  {
    "text": "Microsoft uh tool chain is the main one so but anyway you can kind of see uh how",
    "start": "1140120",
    "end": "1146640"
  },
  {
    "text": "it spread so um yeah the people are mostly here um surprisingly C++ Foundation",
    "start": "1146640",
    "end": "1152760"
  },
  {
    "text": "doesn't uh take Intel Alum into account still I don't know the reason for that but uh we kind of see that the people um",
    "start": "1152760",
    "end": "1160640"
  },
  {
    "text": "are coming from Intel to Intel lgm quite many of them anyway so talking about the",
    "start": "1160640",
    "end": "1166679"
  },
  {
    "text": "compilers so why these different compilers actually um why this um the",
    "start": "1166679",
    "end": "1173520"
  },
  {
    "text": "variety is important and why you have to deal with it apart from the fact that there are some like things like this",
    "start": "1173520",
    "end": "1178880"
  },
  {
    "start": "1174000",
    "end": "1331000"
  },
  {
    "text": "compiler predefined macers a very simple example if I would like to set all",
    "start": "1178880",
    "end": "1184080"
  },
  {
    "text": "warnings to be errors in my code I do that differently for Clank GCC or MSC so",
    "start": "1184080",
    "end": "1190960"
  },
  {
    "text": "if I want to run to write a unified code say this is the C code right so if I",
    "start": "1190960",
    "end": "1196960"
  },
  {
    "text": "want to write as Unified Cate code I have to do this eiles Clause to check",
    "start": "1196960",
    "end": "1202320"
  },
  {
    "text": "which compiler actually uh it is so if it's a masterc or if it's like a Clank or GCC or maybe something else so in my",
    "start": "1202320",
    "end": "1210600"
  },
  {
    "text": "like kind of very Journal project model build system I have still to go through these branches through the compilers for",
    "start": "1210600",
    "end": "1217720"
  },
  {
    "text": "say the compiler options so Clank and GCC have many common compiler options this is very good but quite often you",
    "start": "1217720",
    "end": "1224200"
  },
  {
    "text": "don't have this uh things and also msvc is actually very very different often uh",
    "start": "1224200",
    "end": "1229880"
  },
  {
    "text": "in the way they do support the things and do support the options uh in the",
    "start": "1229880",
    "end": "1235039"
  },
  {
    "text": "compiler uh if we talk about the language support um sorry for maybe a",
    "start": "1235039",
    "end": "1240520"
  },
  {
    "text": "little bit outdated uh state-ofthe-art but still usually the picture looks like that so when you take a galor and you",
    "start": "1240520",
    "end": "1247000"
  },
  {
    "text": "say like okay so what's going on there with C++ 23 features and you see this fantastic",
    "start": "1247000",
    "end": "1252360"
  },
  {
    "text": "table um with like different compilers and you",
    "start": "1252360",
    "end": "1257919"
  },
  {
    "text": "have list marks which features are supported which features are not yet supported and usually these uh columns",
    "start": "1257919",
    "end": "1264520"
  },
  {
    "text": "are not aligned so declining GCC and msvc they usually have their own pace",
    "start": "1264520",
    "end": "1269919"
  },
  {
    "text": "and they usually start from different angles um okay maybe that's just the C+",
    "start": "1269919",
    "end": "1275480"
  },
  {
    "text": "plus 23 we are in the 2023 year maybe it's too early to compare let's take the",
    "start": "1275480",
    "end": "1281120"
  },
  {
    "text": "three basic features from the C++ 20 how it was I guess this screenshot was taken like couple of months ago three to four",
    "start": "1281120",
    "end": "1287440"
  },
  {
    "text": "maybe and so these are the three major features of C++ 20 and they are still",
    "start": "1287440",
    "end": "1292600"
  },
  {
    "text": "not aligned so the compilers are different in the way in the uh in the",
    "start": "1292600",
    "end": "1298400"
  },
  {
    "text": "speed of adopting the new language features and they are like not that one",
    "start": "1298400",
    "end": "1304159"
  },
  {
    "text": "language feature is coming to all the compilers at once so it's not true so you might start using the feature but it",
    "start": "1304159",
    "end": "1310400"
  },
  {
    "text": "might only be supported in just one compiler and there might be a problem for you then and it actually slows down",
    "start": "1310400",
    "end": "1315880"
  },
  {
    "text": "the adoption of the features because quite often people dealing with several compilers several platforms they simply",
    "start": "1315880",
    "end": "1321159"
  },
  {
    "text": "wait for the common base uh for all the compilers to support these features before they start using it so we have to",
    "start": "1321159",
    "end": "1327600"
  },
  {
    "text": "wait for all of them not just for one um interesting story about the Clank",
    "start": "1327600",
    "end": "1333799"
  },
  {
    "start": "1331000",
    "end": "1450000"
  },
  {
    "text": "is that Clank is much more than just a compiler uh it's like yeah it's a",
    "start": "1333799",
    "end": "1340120"
  },
  {
    "text": "compiler in the first place there is also a leap Clank there is a Clank Damon and there is an LSP so that's a good set",
    "start": "1340120",
    "end": "1347320"
  },
  {
    "text": "of tools which helps you like create your own tools working with the code so it provides all this LSP based um",
    "start": "1347320",
    "end": "1354679"
  },
  {
    "text": "information and there are many tools which are based on top of Clank it also provides the analyzer and like the Clank",
    "start": "1354679",
    "end": "1361279"
  },
  {
    "text": "tidy uh which is the analyzer most of the people uh in the ecosystem are now",
    "start": "1361279",
    "end": "1367000"
  },
  {
    "text": "relying at it has the format Clank format we'll talk about some specific uh",
    "start": "1367000",
    "end": "1372679"
  },
  {
    "text": "about it later and yeah these days actually many idas are relying in CL so",
    "start": "1372679",
    "end": "1378360"
  },
  {
    "text": "it's not just a compiler it's also a language engine for many tools so literally every tool that needs an a the",
    "start": "1378360",
    "end": "1386640"
  },
  {
    "text": "uh synx tree from your code it usually goes to Clank and asks it because it",
    "start": "1386640",
    "end": "1392440"
  },
  {
    "text": "provides the unified model so Clank is the basis for many C++",
    "start": "1392440",
    "end": "1398000"
  },
  {
    "text": "tools nowadays that makes these tools more unified even though the people are doing some custom stuff on top of the uh",
    "start": "1398000",
    "end": "1404880"
  },
  {
    "text": "mainstream Clank okay that was about the compos what is the next essential thing",
    "start": "1404880",
    "end": "1410480"
  },
  {
    "text": "is the build system or project model and here we have a clear winner for many",
    "start": "1410480",
    "end": "1415600"
  },
  {
    "text": "many years uh you may love it or you may hate it that depends on like on how deep",
    "start": "1415600",
    "end": "1421120"
  },
  {
    "text": "are you in seake but we have it and it's called seake then comes the MS build and make files of course the MS build is a",
    "start": "1421120",
    "end": "1428159"
  },
  {
    "text": "default for a game development so I'm not I think that it will stay for a very very long time with us and also the",
    "start": "1428159",
    "end": "1434080"
  },
  {
    "text": "whole uh Windows ecosystem is kind of uh living now with amaz build resolution",
    "start": "1434080",
    "end": "1439200"
  },
  {
    "text": "files m files are very popular in various um embedded stuff many others",
    "start": "1439200",
    "end": "1445279"
  },
  {
    "text": "however we still see people migrating to cake more more often and again referring",
    "start": "1445279",
    "end": "1450880"
  },
  {
    "text": "uh to Bryce and to his C++ now talk he said that if you want a standard C++",
    "start": "1450880",
    "end": "1456520"
  },
  {
    "text": "build system you have it it's cake you still might be using some different one but you have a standard one and if you",
    "start": "1456520",
    "end": "1462840"
  },
  {
    "text": "look at the way how the seake was adopted in the community you can definitely see the",
    "start": "1462840",
    "end": "1469120"
  },
  {
    "text": "um why it's actually becoming the standard one so because the library s migrate into cake more and more often if",
    "start": "1469120",
    "end": "1475039"
  },
  {
    "text": "you go to the say GitHub and find a library you'll find a cmake file there right so which kind of describes how to",
    "start": "1475039",
    "end": "1481320"
  },
  {
    "text": "build this Library the package managers are using cmake extensively uh and the",
    "start": "1481320",
    "end": "1486360"
  },
  {
    "text": "IDS are these days also relying on cmake a lot cute actually migrated at C6 stage",
    "start": "1486360",
    "end": "1494399"
  },
  {
    "text": "they migrated from Cake to cake also so from there own build system to this kind",
    "start": "1494399",
    "end": "1499440"
  },
  {
    "text": "of a standard one we also see the movement in embedded uh ecosystems so zepher toss Nordic SDK was also migrated",
    "start": "1499440",
    "end": "1508240"
  },
  {
    "text": "to cake so it's getting more and more standard in the way that more and more tools and libraries are now using it um",
    "start": "1508240",
    "end": "1515480"
  },
  {
    "text": "it was also funny to see the Boost effort towards seake I don't think it was completed but yeah a brave move for",
    "start": "1515480",
    "end": "1522360"
  },
  {
    "text": "Boost maybe one day will be there we'll see but I guess what boosted uh",
    "start": "1522360",
    "end": "1528320"
  },
  {
    "text": "uh yeah nice phrase anyway so what actually uh forced many uh tools to migrate to cake was uh the moment when",
    "start": "1528320",
    "end": "1535320"
  },
  {
    "text": "the cmake actually release the file API so you no longer need to run the cmake command if you're getting some",
    "start": "1535320",
    "end": "1541240"
  },
  {
    "text": "information out of your project model you just work with it as a black box you just ask the API and API provides all",
    "start": "1541240",
    "end": "1547880"
  },
  {
    "text": "the information and I have to say that they're updating API quite fast say the story with the modelist show that they",
    "start": "1547880",
    "end": "1553720"
  },
  {
    "text": "can like update the API immediately when they have the feature implemented and also they created this simic prets so",
    "start": "1553720",
    "end": "1560679"
  },
  {
    "text": "together with Microsoft kitware worked on this standard way to configure simic so they are not just standardizing the",
    "start": "1560679",
    "end": "1567720"
  },
  {
    "text": "um like um parts of the ecosystem but also this configuration step which is usually a hard step for quite many",
    "start": "1567720",
    "end": "1574080"
  },
  {
    "text": "people using the cic but actually there is uh there are much more and one thing",
    "start": "1574080",
    "end": "1579919"
  },
  {
    "text": "that I really like about cic or hate uh it depends on um how you feel about that",
    "start": "1579919",
    "end": "1585320"
  },
  {
    "text": "is the fact that sometimes you need a for seake for a project model uh that's",
    "start": "1585320",
    "end": "1591640"
  },
  {
    "text": "our reality uh because seake is a hard language if you want to um prove your",
    "start": "1591640",
    "end": "1597440"
  },
  {
    "text": "knowledge I do recommend you this talk by mat push from C++ now uh it's called",
    "start": "1597440",
    "end": "1603840"
  },
  {
    "text": "um cake plus conon three years later but uh mat is actually starting from the",
    "start": "1603840",
    "end": "1609799"
  },
  {
    "text": "quiz uh so like maybe 20 minutes from his talk he's doing a cmake quiz and I",
    "start": "1609799",
    "end": "1615399"
  },
  {
    "text": "have to tell you I did cmake in production for 5 years I nearly failed most of the questions because there are",
    "start": "1615399",
    "end": "1621640"
  },
  {
    "text": "like these uh crazy values which I used as false values in cake because not found is a false value for Boolean in",
    "start": "1621640",
    "end": "1628640"
  },
  {
    "text": "cmake the way it deals with the strings and all this uh creepy constructions so",
    "start": "1628640",
    "end": "1634679"
  },
  {
    "text": "sometimes you really needs and wants a debugger for cic for your project model that's true and we have it so uh there",
    "start": "1634679",
    "end": "1642320"
  },
  {
    "text": "is a cake debugger Upstream since cake uh 3 point",
    "start": "1642320",
    "end": "1648039"
  },
  {
    "text": "27 uh there is an upstream implementation there is a support in visual studio and in Seine and you can",
    "start": "1648039",
    "end": "1653480"
  },
  {
    "text": "debug your cmix scripts now have fun um also there is actually a",
    "start": "1653480",
    "end": "1659080"
  },
  {
    "text": "profiling option for cake I don't know how many of you here know that you can actually profile the cake it won't be",
    "start": "1659080",
    "end": "1666200"
  },
  {
    "text": "profile in the build step but it will be profile in the cake uh generation step",
    "start": "1666200",
    "end": "1671760"
  },
  {
    "text": "so you can get like uh where you are losing time for example in the cake generation step it can be very fast for",
    "start": "1671760",
    "end": "1678519"
  },
  {
    "text": "your project or it can be very long so it depends um the story about the modelist",
    "start": "1678519",
    "end": "1684279"
  },
  {
    "start": "1683000",
    "end": "1916000"
  },
  {
    "text": "was very interesting in terms of tmak so because when the models appeared everyone were actually first of all",
    "start": "1684279",
    "end": "1689799"
  },
  {
    "text": "asking when the uh finally IDs will implement the models but we were waiting for project models to start with",
    "start": "1689799",
    "end": "1696480"
  },
  {
    "text": "implementing the models support because we are mostly reling relying on uh project models uh cake guarded first",
    "start": "1696480",
    "end": "1703880"
  },
  {
    "text": "with the visual studio generators because it was done by the help of mic so so they uh obviously cared first",
    "start": "1703880",
    "end": "1709960"
  },
  {
    "text": "about their like own uh Tool Set uh then it appeared uh to Cake Plus GCC or clim",
    "start": "1709960",
    "end": "1717000"
  },
  {
    "text": "compiler Flags it was still a little bit creepy code I mean like if you read through this code you never guess that it's about modus until you have a proper",
    "start": "1717000",
    "end": "1724679"
  },
  {
    "text": "variable names here but it was a like it became a better way uh later with free",
    "start": "1724679",
    "end": "1731240"
  },
  {
    "text": "uh 25 when they introduce some uh like uh file sets and other things and so",
    "start": "1731240",
    "end": "1739399"
  },
  {
    "text": "it's getting better uh cake 3.26 added the model support into",
    "start": "1739399",
    "end": "1746279"
  },
  {
    "text": "the file API so now you can extract all the data there if you want to learn more about how to do crossplatform models",
    "start": "1746279",
    "end": "1753200"
  },
  {
    "text": "come to Daniel talk uh tomorrow it will be at 9:00 a.m. uh don't sleep too long",
    "start": "1753200",
    "end": "1759279"
  },
  {
    "text": "it's really an awesome talk about how to do modelist uh in the crossplatform projects disclaimer it's hard there are",
    "start": "1759279",
    "end": "1766279"
  },
  {
    "text": "still not enough we have but yeah if you want to learn how to do that in practice",
    "start": "1766279",
    "end": "1771480"
  },
  {
    "text": "come to this talk tomorrow I really recommend that now let's go to the uh like package",
    "start": "1771480",
    "end": "1777519"
  },
  {
    "text": "management and managing the dependencies so this is a tough part",
    "start": "1777519",
    "end": "1782559"
  },
  {
    "text": "because you remember that's the biggest the uh most voted pain point the point",
    "start": "1782559",
    "end": "1787960"
  },
  {
    "text": "of the frustration of the C++ developers the lack of the proper dependency management and we do ask uh in the FKA",
    "start": "1787960",
    "end": "1796120"
  },
  {
    "text": "and developer ecosystem survey and also the C++ Foundation they ask about like how do you build your dependencies so",
    "start": "1796120",
    "end": "1803399"
  },
  {
    "text": "and you can see that most of the people there actually just have them as part of their build so they simply put the code nearby and just build it with like the",
    "start": "1803399",
    "end": "1810320"
  },
  {
    "text": "whole project some people do compile the library separately and some people do rely on the system package managers and",
    "start": "1810320",
    "end": "1817679"
  },
  {
    "text": "just a few uh people and we have some different numbers here uh between us and",
    "start": "1817679",
    "end": "1823919"
  },
  {
    "text": "C++ Foundation but still so there are just a small portion of the C++ developers who are actually using the",
    "start": "1823919",
    "end": "1830240"
  },
  {
    "text": "C++ package managers which are on the market already we have VC package and we have conon so they're maybe not ideal",
    "start": "1830240",
    "end": "1837919"
  },
  {
    "text": "but they are evolving fast con recently released a completely new version two which is like a very um I would say",
    "start": "1837919",
    "end": "1845399"
  },
  {
    "text": "mature version VC package is also evolving fast they're different I mean you can substitute one by another",
    "start": "1845399",
    "end": "1852159"
  },
  {
    "text": "because I think they're uh for different cases so this package mostly bu builds",
    "start": "1852159",
    "end": "1857480"
  },
  {
    "text": "everything on your machine just like uh uh package manager which does this part of the build but just on its own and",
    "start": "1857480",
    "end": "1864480"
  },
  {
    "text": "conon as a tool by The jrog Who also have this jfrog artifactory they are more oriented on grabbing the pre-built",
    "start": "1864480",
    "end": "1871000"
  },
  {
    "text": "vineries or and like if not it will build it for you but anyway so um and",
    "start": "1871000",
    "end": "1876320"
  },
  {
    "text": "there is actually a good tooling for it so it's definitely like there is a VC package is integrated in I guess visual",
    "start": "1876320",
    "end": "1883360"
  },
  {
    "text": "studio and probably there is a visual studio code uh integration uh conon there is a conon",
    "start": "1883360",
    "end": "1890039"
  },
  {
    "text": "plugin for visual studio code if I'm not mistaken and like in cine in our ACR",
    "start": "1890039",
    "end": "1895240"
  },
  {
    "text": "platform ID you also do the VC package manager integration natively and Conan is maintaining uh like the jrog team is",
    "start": "1895240",
    "end": "1901880"
  },
  {
    "text": "maintaining their conon plug-in the recently released new version for Conan 2 which is now compatible with the new",
    "start": "1901880",
    "end": "1907200"
  },
  {
    "text": "Conan so there is uh an integration so there are tools and their r package",
    "start": "1907200",
    "end": "1912679"
  },
  {
    "text": "managers just start using them uh I promise the story about the Clank format and this is um an important",
    "start": "1912679",
    "end": "1921000"
  },
  {
    "start": "1916000",
    "end": "2266000"
  },
  {
    "text": "part here because Clank format is kind of a standard tool now for formatting the C++ code again if you go to the",
    "start": "1921000",
    "end": "1927519"
  },
  {
    "text": "GitHub and you grab any open source C++ repository uh like",
    "start": "1927519",
    "end": "1933039"
  },
  {
    "text": "95% uh possibility that you'll find a Clank format config in it because the people do commit it along with the uh",
    "start": "1933039",
    "end": "1940000"
  },
  {
    "text": "source code and that's a very standard practice and this is a very good practice because if you do something in",
    "start": "1940000",
    "end": "1945679"
  },
  {
    "text": "this uh library and would like to uh P request it back like you have this uh Clank format config already that's fine",
    "start": "1945679",
    "end": "1953120"
  },
  {
    "text": "there is one thing which like many developers who are using the Clank format are not aware of is that it's",
    "start": "1953120",
    "end": "1958919"
  },
  {
    "text": "called the Clank format but it never does the full parsing as the Clank does because in that case you'll never get",
    "start": "1958919",
    "end": "1965320"
  },
  {
    "text": "the results of your formatting in a reasonable time so it has the fuzzy parser and it's not the full featured",
    "start": "1965320",
    "end": "1971080"
  },
  {
    "text": "C++ parser used by Clank and that get sometimes um brings you some issues and",
    "start": "1971080",
    "end": "1978240"
  },
  {
    "text": "I saw developers who were very very confused with with like the fact that they're getting some creepy formatting",
    "start": "1978240",
    "end": "1984679"
  },
  {
    "text": "and they can't understand why until they actually get to the point is that the Clank format simply passes it",
    "start": "1984679",
    "end": "1990679"
  },
  {
    "text": "differently to Clank but the people got used to the Clank format version and sometimes when you parse it correctly",
    "start": "1990679",
    "end": "1996960"
  },
  {
    "text": "and I also experienced that in our tools because we do parse with Clank and also with Clank format and the people are",
    "start": "1996960",
    "end": "2002600"
  },
  {
    "text": "saying trying to say to us that the Clank the Clank version is incorrect and the Clank format is correct because they",
    "start": "2002600",
    "end": "2008399"
  },
  {
    "text": "just got used to it but generally you have to be accurate because the F par is done there for like Performance Tool",
    "start": "2008399",
    "end": "2015240"
  },
  {
    "text": "performance optimization but it's not a full featured parer so um and also Clank format is known for",
    "start": "2015240",
    "end": "2022039"
  },
  {
    "text": "breaking compatibility between versions I think everyone who used that uh actually knows that because they tend to",
    "start": "2022039",
    "end": "2028360"
  },
  {
    "text": "change the um semantic or the um parameters so for example they sometimes migrate the text values into enumeration",
    "start": "2028360",
    "end": "2035760"
  },
  {
    "text": "for the same parameter and so your whole Clank format config could be broken just because you upgraded to the new Clank",
    "start": "2035760",
    "end": "2041559"
  },
  {
    "text": "format version because of that people quite often do stuck to the specific Clank format version in their project",
    "start": "2041559",
    "end": "2047919"
  },
  {
    "text": "for the whole Project Life um yeah so now about the code analysis",
    "start": "2047919",
    "end": "2055638"
  },
  {
    "text": "um it's good to see that quite many people are actually uh do they actually",
    "start": "2055639",
    "end": "2061440"
  },
  {
    "text": "do care about the code analysis but it's uh a little bit confusing to see the that NE only half of the developers in",
    "start": "2061440",
    "end": "2068398"
  },
  {
    "text": "the world are actually uh just um do the code analysis by simply um compiling the",
    "start": "2068399",
    "end": "2074800"
  },
  {
    "text": "code well you can do that much earlier and improve earlier and fix earlier",
    "start": "2074800",
    "end": "2080280"
  },
  {
    "text": "which is the uh decreases the cost of this um kind of Errors for",
    "start": "2080280",
    "end": "2085520"
  },
  {
    "text": "you um so if you uh we do ask the people about um what they use for the code",
    "start": "2085520",
    "end": "2091878"
  },
  {
    "text": "analysis and there are actually good thing and a bad thing here the good point is is that like 30% of the",
    "start": "2091879",
    "end": "2098400"
  },
  {
    "text": "developers so one3 is actually using what their ID provides them and these days Ides do provide a good tooling at",
    "start": "2098400",
    "end": "2105240"
  },
  {
    "text": "least they do integrate with the Clank tidy most of the time right so 40% of the developers are probably uh getting",
    "start": "2105240",
    "end": "2111880"
  },
  {
    "text": "the decent tool just by default they even don't know about it they simply rely on the IDE but the other F the",
    "start": "2111880",
    "end": "2118160"
  },
  {
    "text": "other F just do nothing they just don't use anything for the code analysis which",
    "start": "2118160",
    "end": "2123520"
  },
  {
    "text": "is to my opinion not good and probably we can teach them how to do that right especially given that there are quite",
    "start": "2123520",
    "end": "2129839"
  },
  {
    "text": "many popular tools which you can see in between like the Clank tidy and the Clank analyzer and sorry I have the",
    "start": "2129839",
    "end": "2135119"
  },
  {
    "text": "Clank format here because every time I try to remove it from this question the people put it to the other option and it",
    "start": "2135119",
    "end": "2141280"
  },
  {
    "text": "just polluted so I like I said okay I'll put Clank format here though it's not a code analysis tool um and also you can",
    "start": "2141280",
    "end": "2148480"
  },
  {
    "text": "see like this sonner here which means that the people are getting used to the fact that you can use the code analysis",
    "start": "2148480",
    "end": "2154119"
  },
  {
    "text": "on your CI the sunar is the company behind behind the sonar Cube sonar uh",
    "start": "2154119",
    "end": "2159200"
  },
  {
    "text": "lint and others so and you can do your code analysis on C and see the dashboards we'll um talk about it later",
    "start": "2159200",
    "end": "2166280"
  },
  {
    "text": "a little bit so talking about the Clank tidy what is good about the Clank tidy is that it has thousands of checks and",
    "start": "2166280",
    "end": "2172920"
  },
  {
    "text": "it represents the journal Baseline for the good quality C++ project right so if",
    "start": "2172920",
    "end": "2178160"
  },
  {
    "text": "you just uh take some uh mostly uh used checks and you just apply them to your",
    "start": "2178160",
    "end": "2185000"
  },
  {
    "text": "code base you just have them so so you already have a baseline for the good code and also there are like modernized",
    "start": "2185000",
    "end": "2191599"
  },
  {
    "text": "checks there are core guidelines yes there are not all of the core guidelines rules implemented something maybe about",
    "start": "2191599",
    "end": "2197480"
  },
  {
    "text": "30 checks there for core guidelines but anyway you'll have already some automated tool which checks the core",
    "start": "2197480",
    "end": "2203720"
  },
  {
    "text": "guidelines for you and as BNA used to say the core guidelines means nothing without a tool forcing them on you right",
    "start": "2203720",
    "end": "2209800"
  },
  {
    "text": "so no one will be following the core guidelines if the tool is not saying you're not right here um also it's",
    "start": "2209800",
    "end": "2215599"
  },
  {
    "text": "interesting to see that many companies are committing their specific custom checks to Clank tidy like there are lots",
    "start": "2215599",
    "end": "2221880"
  },
  {
    "text": "of checks by Google and some other companies which they just put there and you can see what are their good practices and that's because you can",
    "start": "2221880",
    "end": "2228880"
  },
  {
    "text": "also write your custom checks right so if you do your like project in your company and it's quite big and it lives",
    "start": "2228880",
    "end": "2235000"
  },
  {
    "text": "for years it maybe make sense for you to create some custom checks for the typical problems you might get into your",
    "start": "2235000",
    "end": "2241920"
  },
  {
    "text": "code uh code them into Clank tidy get some um binary for the Clank ID just",
    "start": "2241920",
    "end": "2247720"
  },
  {
    "text": "cooked for your company and then run it on CI and just force everyone to use it",
    "start": "2247720",
    "end": "2253240"
  },
  {
    "text": "uh so that's actually a very powerful set of tools and that's why I guess nowadays most of the IDS or tools for",
    "start": "2253240",
    "end": "2259960"
  },
  {
    "text": "editing the code are integrating with the Clank ID because we do realize that that's the minimal Baseline you need to",
    "start": "2259960",
    "end": "2265640"
  },
  {
    "text": "have uh if we go up from this minimum Baseline actually there are now this uh very nice approach which tends to come",
    "start": "2265640",
    "end": "2272400"
  },
  {
    "start": "2266000",
    "end": "2536000"
  },
  {
    "text": "to many tools it's the data flow analysis let me briefly explain what it is is so um usually when you analyze the",
    "start": "2272400",
    "end": "2279440"
  },
  {
    "text": "code say when the compiler does some analysis it looks for some specific patterns in a or in e code in general",
    "start": "2279440",
    "end": "2286040"
  },
  {
    "text": "the data flow analysis does a completely different thing it analyzes how the data flow uh like the values of the like",
    "start": "2286040",
    "end": "2293920"
  },
  {
    "text": "specific variables for example flows through the control graph and it can make some assumptions based on that",
    "start": "2293920",
    "end": "2300200"
  },
  {
    "text": "there is a whole theory if you studied at any computer science um like course",
    "start": "2300200",
    "end": "2305400"
  },
  {
    "text": "um you might have heard about that so you can calculate some possible uh conditions and then you can make some",
    "start": "2305400",
    "end": "2311240"
  },
  {
    "text": "assumptions based on that so if you implement the whole approach you might get a very powerful tool which will be",
    "start": "2311240",
    "end": "2317200"
  },
  {
    "text": "capable of looking things looking for things like dangling pointer for example the most typical problem in C++ right so",
    "start": "2317200",
    "end": "2324599"
  },
  {
    "text": "it can be caught by the data flow analysis in many cases the lifetimes uh",
    "start": "2324599",
    "end": "2330280"
  },
  {
    "text": "for for the variables because we're not trust we don't have the lifetimes in the language but we could have the lifetime",
    "start": "2330280",
    "end": "2335599"
  },
  {
    "text": "analysis in our code an analyzer index out of bounds is also easily checked",
    "start": "2335599",
    "end": "2340640"
  },
  {
    "text": "with the data flow analysis some unreachable codes or endless Loops so all these things could be checked by the",
    "start": "2340640",
    "end": "2348000"
  },
  {
    "text": "uh data flow analysis and I would like just to show you a very simple example of how we just recently used so we",
    "start": "2348000",
    "end": "2354200"
  },
  {
    "text": "working on data flow analysis in Seine for quite a long while I know that sonor",
    "start": "2354200",
    "end": "2360040"
  },
  {
    "text": "is also doing some data flow at least I saw some inspections which look to me as",
    "start": "2360040",
    "end": "2365079"
  },
  {
    "text": "they are based on the data flow analysis um and like we took the Doom",
    "start": "2365079",
    "end": "2370720"
  },
  {
    "text": "code base you probably know that's one of the most famous uh code base for like",
    "start": "2370720",
    "end": "2376440"
  },
  {
    "text": "C++ developers and it's nearly perfect it's it's great really so but we decided",
    "start": "2376440",
    "end": "2381839"
  },
  {
    "text": "to check it with some new version of our um data flow analyzer and we found some",
    "start": "2381839",
    "end": "2387160"
  },
  {
    "text": "um interesting piece of code so there was some uh like array and uh there was like the size of",
    "start": "2387160",
    "end": "2395680"
  },
  {
    "text": "the aray was like hardcoded via this uh macro the font size and there was some",
    "start": "2395680",
    "end": "2400960"
  },
  {
    "text": "interesting check and uh then there was this place",
    "start": "2400960",
    "end": "2406240"
  },
  {
    "text": "which the data flow analysis detected that you can actually jump to this uh to this call and the data flow analysis",
    "start": "2406240",
    "end": "2413079"
  },
  {
    "text": "actually showed us that the index uh may have a value of 63 which is out of bounds which is a potentially an index",
    "start": "2413079",
    "end": "2420680"
  },
  {
    "text": "out of bounds uh error which you will get in the runtime we decided to check and you actually get it in Doom's code",
    "start": "2420680",
    "end": "2428240"
  },
  {
    "text": "so we found which parameter could be passed there and there was some um text",
    "start": "2428240",
    "end": "2433920"
  },
  {
    "text": "uh we just defin some macra like found this macra and we figured out that if we",
    "start": "2433920",
    "end": "2439480"
  },
  {
    "text": "add a simple apostrophe here the Apple crash because it will get to this uh",
    "start": "2439480",
    "end": "2445440"
  },
  {
    "text": "index out of bound case so this is just a simple example so you will never catch this by the static analysis in a classic",
    "start": "2445440",
    "end": "2452839"
  },
  {
    "text": "way like if you have just a compiler checks or a Clank tidy right so you need to understand how the actual data how",
    "start": "2452839",
    "end": "2459560"
  },
  {
    "text": "the actual s lengths of the variables or the actual indexes are flowing for the",
    "start": "2459560",
    "end": "2465079"
  },
  {
    "text": "control flow graph it's a tough analysis I have to say so it usually takes time I mean it's performance greedy for sure",
    "start": "2465079",
    "end": "2471599"
  },
  {
    "text": "because it analyzes the whole control flow graph but the the science is good there so I mean like there are lots of",
    "start": "2471599",
    "end": "2477560"
  },
  {
    "text": "ways how to optimize that there are lots of approaches to that so if you do it right you can get a very nice results",
    "start": "2477560",
    "end": "2483800"
  },
  {
    "text": "and interestingly enough it's not just about the function scope like when you have one function and something is going",
    "start": "2483800",
    "end": "2489040"
  },
  {
    "text": "on there uh in a wrong way it can also be scaled to the translation unit and there are even approaches how to scale",
    "start": "2489040",
    "end": "2495839"
  },
  {
    "text": "this to the Cross transation unit I have to say um like here that I've never seen",
    "start": "2495839",
    "end": "2501480"
  },
  {
    "text": "the cross translation unit analysis in practice for the data flow I only saw an",
    "start": "2501480",
    "end": "2506520"
  },
  {
    "text": "Ericson presentation at lvia meet up of some like prepandemic times uh when they",
    "start": "2506520",
    "end": "2512440"
  },
  {
    "text": "were showing two approaches how to scale from translation unit to cross cross translation unit analysis with the very",
    "start": "2512440",
    "end": "2518599"
  },
  {
    "text": "basic checks implemented and I guess they still have the repository on gab uh",
    "start": "2518599",
    "end": "2524200"
  },
  {
    "text": "with like some proof of concept implementation so maybe once we'll get it in production tools but for now I",
    "start": "2524200",
    "end": "2530319"
  },
  {
    "text": "only know the translation unit uh full analysis in the production",
    "start": "2530319",
    "end": "2535400"
  },
  {
    "text": "tools talking about the code analysis actually there is much more than these General tools because quite often we do",
    "start": "2535400",
    "end": "2541760"
  },
  {
    "start": "2536000",
    "end": "2755000"
  },
  {
    "text": "deal with some dsls like the domain specific languages and there are specific analyzers for these domain",
    "start": "2541760",
    "end": "2547359"
  },
  {
    "text": "specific languages like there is Caz for cute if you haven't heard about it this a fantastic analyzer which deals with",
    "start": "2547359",
    "end": "2553359"
  },
  {
    "text": "this signals concept because cute is obviously a C++ code you can simply check it with C Clank tidy but then you",
    "start": "2553359",
    "end": "2559559"
  },
  {
    "text": "get this uh signals and other concept from cute framework and the default code",
    "start": "2559559",
    "end": "2564960"
  },
  {
    "text": "analyzer will never say you anything about that because uh it usually doesn't know anything about it but the clay it",
    "start": "2564960",
    "end": "2570599"
  },
  {
    "text": "does so it can like uh suggest some good things to you there is this unreal header tool for real engine again if you",
    "start": "2570599",
    "end": "2577559"
  },
  {
    "text": "haven't heard about it so the whole Unreal Engine it's the game engine and so they are definitely using the reflection which was still missing the",
    "start": "2577559",
    "end": "2583720"
  },
  {
    "text": "language and so they're doing the reflection in macras and these macras are quite tricky",
    "start": "2583720",
    "end": "2590160"
  },
  {
    "text": "because they have the line macras inside so it's really a nightmare if you get into this macas but they have this nice",
    "start": "2590160",
    "end": "2596319"
  },
  {
    "text": "analyzer which is a real header tool which helps you check some things about that and also there are like plenties of",
    "start": "2596319",
    "end": "2601680"
  },
  {
    "text": "embedded Checkers so uh that you probably heard about I promise a few words about the",
    "start": "2601680",
    "end": "2607160"
  },
  {
    "text": "code analysis tools on CI um I just want to say why it's really important because",
    "start": "2607160",
    "end": "2612400"
  },
  {
    "text": "you can say that like yeah I will be running the code analysis locally or I will um just do the compilation and it",
    "start": "2612400",
    "end": "2619359"
  },
  {
    "text": "will show me some uh useful warnings that's fine but for example if you have an open source code base or just a big",
    "start": "2619359",
    "end": "2626079"
  },
  {
    "text": "code base in your uh company and like you're doing the code reviews or your P request into some open source repository",
    "start": "2626079",
    "end": "2633000"
  },
  {
    "text": "like it's good for the offers of this codebase to run some Journal code analysis on C so that you can check for",
    "start": "2633000",
    "end": "2638800"
  },
  {
    "text": "example with your uh pool request that like everything is more or less fine yeah like just a basic check which saves",
    "start": "2638800",
    "end": "2644680"
  },
  {
    "text": "time from the code reviews uh they could be Target or platform specific checks which you simply can't run locally right",
    "start": "2644680",
    "end": "2651800"
  },
  {
    "text": "so you do something on a some uh specific uh remote hardware for example you can only do that if you have a",
    "start": "2651800",
    "end": "2658319"
  },
  {
    "text": "configuration set on CI and then you can run some specific checks and they will never work on your local setup and also",
    "start": "2658319",
    "end": "2664640"
  },
  {
    "text": "that's for sure a way to deal with the long greedy checks which runs for say hours you just leave them on CI for",
    "start": "2664640",
    "end": "2671599"
  },
  {
    "text": "weekend and you're happy or unhappy on Monday um yeah and a health check and",
    "start": "2671599",
    "end": "2677880"
  },
  {
    "text": "the timeline I think this is very important for open source projects uh as far as I know like those who are serious",
    "start": "2677880",
    "end": "2684000"
  },
  {
    "text": "about the open source project and who have resources they try to have this constant analysis run on CI so that they",
    "start": "2684000",
    "end": "2689839"
  },
  {
    "text": "actually know how the project is like leaving what's like doing this basic uh health check and looking at the timeline",
    "start": "2689839",
    "end": "2696200"
  },
  {
    "text": "but it's actually good for any project yeah and it's more like a management tool maybe right so you're just trying",
    "start": "2696200",
    "end": "2702760"
  },
  {
    "text": "to understand what's going under um so sometimes the developers don't think",
    "start": "2702760",
    "end": "2708119"
  },
  {
    "text": "about it but the managers and the teams the technical managers do think about it and yeah as I said it's like good for",
    "start": "2708119",
    "end": "2713920"
  },
  {
    "text": "open source and we have great tools for that so there is sner who is doing these uh tools and there is like we also have",
    "start": "2713920",
    "end": "2720800"
  },
  {
    "text": "J brains kadana who is also which brings our analysis from IDs to to cicd so",
    "start": "2720800",
    "end": "2727400"
  },
  {
    "text": "there are tools on the market which you can check and they're doing these dashboards and they're helping with pool",
    "start": "2727400",
    "end": "2733240"
  },
  {
    "text": "requests whatever um like if you want to learn more about the code analysis you can",
    "start": "2733240",
    "end": "2738400"
  },
  {
    "text": "check my talk from C++ now or my talk which I did last year here at TDC it was",
    "start": "2738400",
    "end": "2743720"
  },
  {
    "text": "all dedicated to the various possible code analysis in the more than C++ and what it's actually capable of there are",
    "start": "2743720",
    "end": "2750160"
  },
  {
    "text": "more examples and um funny examples I would say actually uh let's come to the unit",
    "start": "2750160",
    "end": "2756720"
  },
  {
    "start": "2755000",
    "end": "2931000"
  },
  {
    "text": "testing so um unit testing like 75% of all uh respondents in our developer",
    "start": "2756720",
    "end": "2763200"
  },
  {
    "text": "ecosystem survey they says that testing plays an important role in their development processes which sometimes",
    "start": "2763200",
    "end": "2770280"
  },
  {
    "text": "doesn't uh like a little bit clashes with the statistics I get for C++ because every year I'm trying to figure",
    "start": "2770280",
    "end": "2776720"
  },
  {
    "text": "out who are these 40% of the people who are selecting that they're not doing any unit tests so I'm trying to add various",
    "start": "2776720",
    "end": "2783280"
  },
  {
    "text": "options uh for them like trying to figure out if they more like uh in doing integration tests or some other kinds of",
    "start": "2783280",
    "end": "2790359"
  },
  {
    "text": "testing uh but I still have quite many respondents who are saying that they're not doing any unit tests at all um apart",
    "start": "2790359",
    "end": "2797359"
  },
  {
    "text": "from that fact we have a very popular like Google Google test framework which is kind of standard even though it's",
    "start": "2797359",
    "end": "2803319"
  },
  {
    "text": "hard to deal because the people are these days tend more to select the header only Frameworks which was a case",
    "start": "2803319",
    "end": "2810400"
  },
  {
    "text": "for catch which is now no longer like catch 2 version free is no longer uh uh",
    "start": "2810400",
    "end": "2816119"
  },
  {
    "text": "header only framework they moved from that approach because it it became too hard to support this approach with the",
    "start": "2816119",
    "end": "2823319"
  },
  {
    "text": "uh more specific checks and evolution of the framework uh if you're a fan of this header approach you can take the dock",
    "start": "2823319",
    "end": "2829359"
  },
  {
    "text": "test it's like uh maybe a small framework I mean not that widely used but it's uh it's focused on the more um",
    "start": "2829359",
    "end": "2837680"
  },
  {
    "text": "C++ language versions and also it's like a head only framework uh boost is kind",
    "start": "2837680",
    "end": "2843040"
  },
  {
    "text": "of declining but Google T stay with us uh ah the only problem is that yeah you have to get it and you have to compile",
    "start": "2843040",
    "end": "2850200"
  },
  {
    "text": "it properly with the compilation flag you are using for the like whole application it's not a problem if you're",
    "start": "2850200",
    "end": "2855359"
  },
  {
    "text": "using a proper package manager which is a problem because not everyone is using a package manager but I guess that the",
    "start": "2855359",
    "end": "2862680"
  },
  {
    "text": "um actually Google test is a nice task for any project package manager on the market so if the package manager can do",
    "start": "2862680",
    "end": "2869319"
  },
  {
    "text": "a Google test uh like it's already fine um if you're doing test the other",
    "start": "2869319",
    "end": "2875960"
  },
  {
    "text": "important thing that you have to take into account is the code coverage and you can do the code coverage different",
    "start": "2875960",
    "end": "2881599"
  },
  {
    "text": "ways there's like line or statement uh or Branch coverage uh you have to be",
    "start": "2881599",
    "end": "2887240"
  },
  {
    "text": "again accurate because different tools sometimes do different types of the coverage so there is this popular lvm uh",
    "start": "2887240",
    "end": "2893760"
  },
  {
    "text": "com uh coverage which is mostly used with like Clank and GCU which is mostly",
    "start": "2893760",
    "end": "2898800"
  },
  {
    "text": "used when the people are using GCC uh but the thing is that they are doing different types of coverage and",
    "start": "2898800",
    "end": "2904640"
  },
  {
    "text": "sometimes you're a little bit surp price when you compile with different compilers and then you run the different types of coverage on the same set of",
    "start": "2904640",
    "end": "2910319"
  },
  {
    "text": "tests and you get different results so but they do treat um like the say the",
    "start": "2910319",
    "end": "2917760"
  },
  {
    "text": "compil generated branches could be treated differently or uh exception handling could be treated differently so",
    "start": "2917760",
    "end": "2924280"
  },
  {
    "text": "you you have to take uh these parameters into account when you rely on the",
    "start": "2924280",
    "end": "2929680"
  },
  {
    "text": "coverage and now the fun part uh so AI is coming to development it's coming to",
    "start": "2929680",
    "end": "2936160"
  },
  {
    "start": "2931000",
    "end": "3282000"
  },
  {
    "text": "our lives right for already a long time but it's also coming to software developers in a good way I mean there",
    "start": "2936160",
    "end": "2942920"
  },
  {
    "text": "are lots of concerns and legal concerns and like some other types of concerns I'm not going to talk about them but",
    "start": "2942920",
    "end": "2949240"
  },
  {
    "text": "since like I work in in the company who are just crazy about tools and who loves doing the software development",
    "start": "2949240",
    "end": "2955520"
  },
  {
    "text": "experience uh better we would like to bring these opportunities to software developers and so we're very much",
    "start": "2955520",
    "end": "2961480"
  },
  {
    "text": "focused on how we can essentially integrated inter software development workflow",
    "start": "2961480",
    "end": "2966520"
  },
  {
    "text": "so for us the uh eii future is already here because we have Fantastic Tools",
    "start": "2966520",
    "end": "2973040"
  },
  {
    "text": "like GitHub ciler which is on the market for a while already there are some hours",
    "start": "2973040",
    "end": "2978079"
  },
  {
    "text": "like kodum and cod by Swordcraft um and there is also Jabra CI",
    "start": "2978079",
    "end": "2984200"
  },
  {
    "text": "assistant now in the market which we released in summer and what it can do it can actually help developers in their",
    "start": "2984200",
    "end": "2990559"
  },
  {
    "text": "daily routine and this is very important so eii to me is not a chat who you can talk to when you're bored or you don't",
    "start": "2990559",
    "end": "2996720"
  },
  {
    "text": "know how to write a proper algorithm right you can just go to openi website and do it there so that's not what we",
    "start": "2996720",
    "end": "3003240"
  },
  {
    "text": "want to do we don't want like we brought the chat to the IDS but that's not our primary goal our primary goal is to make",
    "start": "3003240",
    "end": "3009880"
  },
  {
    "text": "your Development Everyday development uh routine better with AI and for that",
    "start": "3009880",
    "end": "3015720"
  },
  {
    "text": "we're trying to integrate it essentially into the um into the tooling and we do",
    "start": "3015720",
    "end": "3020880"
  },
  {
    "text": "hope that the others uh the other like vendors will be doing some similar stuff like GitHub compilot here is a very nice",
    "start": "3020880",
    "end": "3027359"
  },
  {
    "text": "example it simply integrates and gives you a very basic thing which you use daily in your IDE right the completion",
    "start": "3027359",
    "end": "3034400"
  },
  {
    "text": "so it just does the completion for you like in a very nice way uh but also like",
    "start": "3034400",
    "end": "3040040"
  },
  {
    "text": "what we were trying to do is like to bring things uh like to your table where",
    "start": "3040040",
    "end": "3045400"
  },
  {
    "text": "the AI could help for example it could help with like writing the documentation or explaining some code or suggesting",
    "start": "3045400",
    "end": "3052359"
  },
  {
    "text": "some refactoring or looking for some potential issues and it should be context to wear so what we do is that we",
    "start": "3052359",
    "end": "3058960"
  },
  {
    "text": "like feed AI with all the context of your recode base of your project and we then ask the questions to AI uh inside",
    "start": "3058960",
    "end": "3067440"
  },
  {
    "text": "the um ID in a proper way and we get the Project Specific uh output which we",
    "start": "3067440",
    "end": "3072960"
  },
  {
    "text": "chose and then try to integrate and I will show you just um a few examples I hope it will yeah run so here in this",
    "start": "3072960",
    "end": "3079960"
  },
  {
    "text": "example I have a test which fails probably you understand why I don't have a termination character there so I just",
    "start": "3079960",
    "end": "3086640"
  },
  {
    "text": "asked AI assistant what was wrong with that AI assistant has heard for a while",
    "start": "3086640",
    "end": "3091760"
  },
  {
    "text": "generated some answer to me then what I did I simply copy paste the code that it",
    "start": "3091760",
    "end": "3096880"
  },
  {
    "text": "generated I pasted it into my editor and then I just rerun the test and hooray my",
    "start": "3096880",
    "end": "3102359"
  },
  {
    "text": "test passed so that was just the uh regular floor where I tried to use the",
    "start": "3102359",
    "end": "3108200"
  },
  {
    "text": "EI assistant with like some integration right um another way another like",
    "start": "3108200",
    "end": "3114440"
  },
  {
    "text": "approach where I can can try and use AI assistant uh is like I could ask it to help me with models because hey I don't",
    "start": "3114440",
    "end": "3121200"
  },
  {
    "text": "know how to migrate my code based models could you maybe help me and because AI assistant could know the Project",
    "start": "3121200",
    "end": "3126599"
  },
  {
    "text": "Specific context it could like uh tell you some uh useful code and say how to",
    "start": "3126599",
    "end": "3131680"
  },
  {
    "text": "do some uh modules there um again I'm not talking here",
    "start": "3131680",
    "end": "3137160"
  },
  {
    "text": "about all these questions about how accurate it is or how it was trained but I'm more focused on how we could",
    "start": "3137160",
    "end": "3143440"
  },
  {
    "text": "integrate it more essentially into the D tools uh another example which I",
    "start": "3143440",
    "end": "3148880"
  },
  {
    "text": "personally do love a lot because uh you probably noticed that I love and hate sake at the same time I do cake errors",
    "start": "3148880",
    "end": "3155200"
  },
  {
    "text": "quite often and so we integrated the EI in the way that if you have a cake",
    "start": "3155200",
    "end": "3160799"
  },
  {
    "text": "errror you can ask AI to explain the error with the AI and get some answer and probably get some proper C code",
    "start": "3160799",
    "end": "3167319"
  },
  {
    "text": "which you can then copy paste in your editor and have a proper um like uh work in Cate code so talking about about the",
    "start": "3167319",
    "end": "3175640"
  },
  {
    "text": "AI scenario so what could be here it could explain the code and errors it's kind of simple and it's better if you",
    "start": "3175640",
    "end": "3181960"
  },
  {
    "text": "not don't go to another chat but do it just instantly in your coding tool but that's a simple case right not maybe",
    "start": "3181960",
    "end": "3188359"
  },
  {
    "text": "that interesting or inspiring um AI could suggest the code transformation or it could suggest some",
    "start": "3188359",
    "end": "3194599"
  },
  {
    "text": "like modernization for the code base or things like um um yeah so um just",
    "start": "3194599",
    "end": "3201079"
  },
  {
    "text": "finding issues and uh transforming the code to proper one it could do these",
    "start": "3201079",
    "end": "3206559"
  },
  {
    "text": "things like helping you during the type assist like the code completion done by the GitHub compilot right so just",
    "start": "3206559",
    "end": "3212319"
  },
  {
    "text": "speeding up the uh code generation it can do some more General code generation",
    "start": "3212319",
    "end": "3217400"
  },
  {
    "text": "the people sometimes are skeptical about it because that's a hard part right so it could be um like it could miss the",
    "start": "3217400",
    "end": "3224200"
  },
  {
    "text": "mark easily so that's probably a little bit still questionable but maybe we could cook it right uh it could do",
    "start": "3224200",
    "end": "3230599"
  },
  {
    "text": "things like generate documentation or we had implemented the feature which is called explain the commit message say so",
    "start": "3230599",
    "end": "3236839"
  },
  {
    "text": "why not just feed to AI all the changes in my code and ask to explain the commit message actually it's quite good at it I",
    "start": "3236839",
    "end": "3243839"
  },
  {
    "text": "have to say it writes much better commit messages than I do at times um and it",
    "start": "3243839",
    "end": "3249000"
  },
  {
    "text": "could be actually any idea I mean um any idea could be now these days implemented with AI and you can try and build it",
    "start": "3249000",
    "end": "3256440"
  },
  {
    "text": "into your tool and I think that the future of some tool set for us is also here and maybe it will help us deal with",
    "start": "3256440",
    "end": "3262280"
  },
  {
    "text": "the C++ complexity and with this hope I would like to finish and show you some",
    "start": "3262280",
    "end": "3268680"
  },
  {
    "text": "uh list of useful links and we still have five time for questions and I have to say that I have some nice presents",
    "start": "3268680",
    "end": "3275079"
  },
  {
    "text": "for the questions so just think about some good questions and I have some nice presents for you thank",
    "start": "3275079",
    "end": "3281920"
  },
  {
    "text": "you",
    "start": "3281920",
    "end": "3284920"
  }
]