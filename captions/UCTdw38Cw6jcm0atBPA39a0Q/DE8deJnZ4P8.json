[
  {
    "text": "oh my microphone is on so this is probably a good time to start good morning everyone welcome to the second",
    "start": "5560",
    "end": "12160"
  },
  {
    "text": "day of NDC um unless you've been here since Tuesday my name is Ido flato it's a",
    "start": "12160",
    "end": "18640"
  },
  {
    "text": "strange name I know that's because I'm from Israel um and this session is about",
    "start": "18640",
    "end": "24160"
  },
  {
    "text": "Entity framework core uh I'm guessing some of you are still familiar with the old name Entity framework 7 same thing",
    "start": "24160",
    "end": "31439"
  },
  {
    "text": "new stuff okay they changed a bit the things as they always do in beta",
    "start": "31439",
    "end": "36440"
  },
  {
    "text": "versions uh so just a couple of words about myself before we begin uh as I said my name is Ido uh I am a consultant",
    "start": "36440",
    "end": "44320"
  },
  {
    "text": "and an architect in a company called cell group based in Israel um among my other titles I'm a Microsoft MVP and the",
    "start": "44320",
    "end": "52280"
  },
  {
    "text": "regional director which basically means that I go to a lot of conferences to talk about Microsoft technologies that I",
    "start": "52280",
    "end": "58359"
  },
  {
    "text": "like uh mostly um and in addition I wrote a couple of",
    "start": "58359",
    "end": "63440"
  },
  {
    "text": "uh books on net and about web development uh um created a couple of",
    "start": "63440",
    "end": "68640"
  },
  {
    "text": "courses for Microsoft anyone doing official Microsoft courses no that's the",
    "start": "68640",
    "end": "74200"
  },
  {
    "text": "reason I don't get any money from it okay um and among other things I manage",
    "start": "74200",
    "end": "79360"
  },
  {
    "text": "a couple of communities in Israel uh the Azure Community web development community so next time you're in Israel",
    "start": "79360",
    "end": "86320"
  },
  {
    "text": "just send me an email I'll tell you when our next meeting is unless you prefer to travel um and first of all let's talk a",
    "start": "86320",
    "end": "93799"
  },
  {
    "text": "bit about Entity framework but first how many people are currently using Entity framework and hibernate",
    "start": "93799",
    "end": "101119"
  },
  {
    "text": "anyone go go outside please nothing for you to do here um so entity fun seven",
    "start": "101119",
    "end": "109119"
  },
  {
    "text": "someone already tried that out seven or core okay the rc1 version the rc2",
    "start": "109119",
    "end": "115040"
  },
  {
    "text": "version rc2 yeah okay um if you want I can talk a bit about migrating from",
    "start": "115040",
    "end": "120719"
  },
  {
    "text": "earlier versions to the new version because I had to migrate all my demos uh",
    "start": "120719",
    "end": "126280"
  },
  {
    "text": "a couple of weeks ago and that was kind of painful so I might talk about that a bit so let's talk about um a bit about",
    "start": "126280",
    "end": "133920"
  },
  {
    "text": "history mostly because um I do development for 20 years so history is",
    "start": "133920",
    "end": "139280"
  },
  {
    "text": "practically the things that I talk about most of the day uh so at the beginning we had Entity framework 0.1 if someone",
    "start": "139280",
    "end": "146720"
  },
  {
    "text": "remembers that version I remember that version back in I think it was 2008 or",
    "start": "146720",
    "end": "152800"
  },
  {
    "text": "2009 um but the first actual version of Entity framework that was usable was Entity framework 4 uh which came out in",
    "start": "152800",
    "end": "161239"
  },
  {
    "text": "net 4 was a part of The NET Framework as you remember came with visual studio",
    "start": "161239",
    "end": "167000"
  },
  {
    "text": "with all the edmx designer and such then we had the different versions of uh 4.x",
    "start": "167000",
    "end": "173040"
  },
  {
    "text": "4.1 4.2 EF5 then we had uh ef6 uh which",
    "start": "173040",
    "end": "178879"
  },
  {
    "text": "had a lot of new new stuff that improved Entity framework at this point Entity",
    "start": "178879",
    "end": "184560"
  },
  {
    "text": "framework was already a nugget package an open source code uh the design was",
    "start": "184560",
    "end": "189720"
  },
  {
    "text": "open to the community to comment on okay and the reason there's uh an A blank",
    "start": "189720",
    "end": "194920"
  },
  {
    "text": "space here is because the next version of Entity framework is going to be Entity framework 6.2 um not currently",
    "start": "194920",
    "end": "201440"
  },
  {
    "text": "available they will work on it after EF core is released you know when they have the M power to work on that stuff uh but",
    "start": "201440",
    "end": "207519"
  },
  {
    "text": "currently if we look at Entity framework core entity forwork core 1.0 to be more exact",
    "start": "207519",
    "end": "213560"
  },
  {
    "text": "entity forwork core is going to be the same as entity frork 6 where it comes to",
    "start": "213560",
    "end": "219200"
  },
  {
    "text": "how you obtain it and how you use it in your application so it's going to be nugg package it's already nugg package",
    "start": "219200",
    "end": "225599"
  },
  {
    "text": "uh for the tooling there are currently not much tools for visual studio itself more for command line tools for",
    "start": "225599",
    "end": "232319"
  },
  {
    "text": "migrations uh but still stuff will be shipped after uh the V1 release okay so",
    "start": "232319",
    "end": "239840"
  },
  {
    "text": "if you look at today at Entity framework Entity framework 6 um as uh as you Rose",
    "start": "239840",
    "end": "245480"
  },
  {
    "text": "your hands most of you are using Entity framework six or some other version of it uh it's mostly for relational",
    "start": "245480",
    "end": "251319"
  },
  {
    "text": "databases right SQL Server sometimes we use it for Oracle um db2 maybe um but",
    "start": "251319",
    "end": "259040"
  },
  {
    "text": "entity Fork six is mostly for relational I'm saying that especially because Entity framework core brings a couple of",
    "start": "259040",
    "end": "265520"
  },
  {
    "text": "new features including non-relational database support okay um second Entity",
    "start": "265520",
    "end": "270600"
  },
  {
    "text": "framework is quite large if you look at the dll files of Entity framework 6 uh it's about five six megabytes in size if",
    "start": "270600",
    "end": "279000"
  },
  {
    "text": "you include the documentation uh for intelligence it's another 3 megabytes um",
    "start": "279000",
    "end": "284600"
  },
  {
    "text": "entity for will also change that it runs only on the doet framework the full doet",
    "start": "284600",
    "end": "290639"
  },
  {
    "text": "framework currently 4.5 4.6 depends on what you're using and uh of course there are stuff that are currently missing",
    "start": "290639",
    "end": "297720"
  },
  {
    "text": "from Entity framework stuff that we all want want such as that wonderful bch update where we can just say save my",
    "start": "297720",
    "end": "304560"
  },
  {
    "text": "changes and it will not generate 10,000 SQL inserts into the database and run",
    "start": "304560",
    "end": "310360"
  },
  {
    "text": "them one after another okay yeah I see some Smiles so that means you're incent that issue uh I'm not saying there is no",
    "start": "310360",
    "end": "317280"
  },
  {
    "text": "support for that at all because there are open sources you can download from GitHub some extensions to F that",
    "start": "317280",
    "end": "322720"
  },
  {
    "text": "Implement that but you know it's not a documented feature it's not a supported feature uh like many open source",
    "start": "322720",
    "end": "330199"
  },
  {
    "text": "you might find it useful you might find it unusable or you can't implement it in your organization because it's a a",
    "start": "330199",
    "end": "336520"
  },
  {
    "text": "source that was written back in 2014 and no one is maintaining that okay",
    "start": "336520",
    "end": "341759"
  },
  {
    "text": "so it depends on you if you want to use that or not um a bit about the the core",
    "start": "341759",
    "end": "347080"
  },
  {
    "text": "features of entity firor call um and by the way most of the session today will be demos okay I have a couple of slides",
    "start": "347080",
    "end": "354440"
  },
  {
    "text": "but we'll go straight to demos and we'll just show all of these new features I don't have any slides that actually",
    "start": "354440",
    "end": "360120"
  },
  {
    "text": "explains each of the features so you have to stick around in order to understand what Entity framework or is",
    "start": "360120",
    "end": "366080"
  },
  {
    "text": "you just can't go outside and then download the the slides um so first of all Entity framework core is not an",
    "start": "366080",
    "end": "372880"
  },
  {
    "text": "update to Entity framework 6 it's an entirely new framework it's written from skretch of course they still try to",
    "start": "372880",
    "end": "379720"
  },
  {
    "text": "maintain the same things I mean they won't ask you to change DB context into something else it's still called DB",
    "start": "379720",
    "end": "385120"
  },
  {
    "text": "context it's still called DB set but it's written from scratch not saying that they didn't copy paste some code",
    "start": "385120",
    "end": "390919"
  },
  {
    "text": "from before but it's written from scratch for example there is no object context in EF core okay so if any of",
    "start": "390919",
    "end": "398599"
  },
  {
    "text": "your code was built on that you need to change it a bit um it supports new",
    "start": "398599",
    "end": "404240"
  },
  {
    "text": "platforms platforms I mean operating systems we'll see a slide about that shortly and new data stores as I",
    "start": "404240",
    "end": "410080"
  },
  {
    "text": "mentioned not necessarily relational database but other types of stores it's",
    "start": "410080",
    "end": "415560"
  },
  {
    "text": "um very friendly to um um ioc um to",
    "start": "415560",
    "end": "420599"
  },
  {
    "text": "depend of depend injection that's because in Microsoft in the past couple of years um they embraced ioc and",
    "start": "420599",
    "end": "428479"
  },
  {
    "text": "embedded it into a lot of Frameworks if you remember if is anyone using web API today yeah so web API from the first",
    "start": "428479",
    "end": "436759"
  },
  {
    "text": "version it used a lot of ioc ASP net core what was once known as ASP Net 5 uses a lot of ioc and so does entity",
    "start": "436759",
    "end": "444319"
  },
  {
    "text": "framewor cor um and because it's using ioc it's a lot easier today to implement",
    "start": "444319",
    "end": "451360"
  },
  {
    "text": "stuffff for Entity framework to customize the services that are embedded into Entity framework okay so you can",
    "start": "451360",
    "end": "457520"
  },
  {
    "text": "just replace them in a second plus the 10 hours it takes you to write the code that actually extends that uh component",
    "start": "457520",
    "end": "464360"
  },
  {
    "text": "uh in addition they invested a lot in optimizing the queries that are generated by Entity framework the link",
    "start": "464360",
    "end": "470879"
  },
  {
    "text": "queries and the SQL queries we'll talk about that later on and see a demo for that um they removed something that was",
    "start": "470879",
    "end": "478400"
  },
  {
    "text": "called model first anyone still using edmx files edmx files anyone okay so",
    "start": "478400",
    "end": "484639"
  },
  {
    "text": "you'll need to change your code a bit um no more model first only code first um",
    "start": "484639",
    "end": "491159"
  },
  {
    "text": "you can still do reverse engineering of the database into classes there are tools for that but if you were planning",
    "start": "491159",
    "end": "497319"
  },
  {
    "text": "on using a designer to design the entities and map them to the data store",
    "start": "497319",
    "end": "502560"
  },
  {
    "text": "that's gone maybe it will be added by Third parties but not for Microsoft and",
    "start": "502560",
    "end": "508319"
  },
  {
    "text": "of course one thing that we got in Entity framework I'm I'm still saying Entity framework 7 because core is still",
    "start": "508319",
    "end": "515479"
  },
  {
    "text": "quite fresh in my mind uh so another thing that we got in Entity framework core is the support the actual support",
    "start": "515479",
    "end": "522399"
  },
  {
    "text": "for batch updates batch inserts and we will see that also in a",
    "start": "522399",
    "end": "528200"
  },
  {
    "text": "demo uh in regards to new platforms um as I said before Entity framework six",
    "start": "528200",
    "end": "534240"
  },
  {
    "text": "only theet framework but today we have a couple more Frameworks in in uh the net",
    "start": "534240",
    "end": "541160"
  },
  {
    "text": "uh environment the net Foundation uh we also have net core and we have the",
    "start": "541160",
    "end": "546279"
  },
  {
    "text": "zarine framework which runs on Mano uh if you're familiar with that if not uh there were a couple of zaring sessions I",
    "start": "546279",
    "end": "553079"
  },
  {
    "text": "think yesterday uh you can check them out so net core can run on any platform",
    "start": "553079",
    "end": "558399"
  },
  {
    "text": "Windows Linux Mac uh zarine is mostly intended for uh cross platform mobile",
    "start": "558399",
    "end": "563920"
  },
  {
    "text": "devices um Entity framework core in comparison to Entity framework six can",
    "start": "563920",
    "end": "569600"
  },
  {
    "text": "actually run on all of those um Target Frameworks so whether you are targeting Windows whether you're targeting an",
    "start": "569600",
    "end": "576360"
  },
  {
    "text": "application for uh iOS uh or for Linux or Mac OS or Android you can use entity",
    "start": "576360",
    "end": "582800"
  },
  {
    "text": "FR core it will actually depends on which database you're going to connect to because I haven't seen anyone",
    "start": "582800",
    "end": "589279"
  },
  {
    "text": "installing SQL server on the Linux machine yet they said that the next version will support that but uh if",
    "start": "589279",
    "end": "595959"
  },
  {
    "text": "you're trying to connect to a remote server you will be able to do that that and we'll see demo for that okay so um",
    "start": "595959",
    "end": "603200"
  },
  {
    "text": "regarding to new data stores as I mentioned before not only relational data stores uh so of course Entity",
    "start": "603200",
    "end": "609680"
  },
  {
    "text": "framework will support SQL Server Oracle all the other relational databases of",
    "start": "609680",
    "end": "615120"
  },
  {
    "text": "course depending on uh the companies that will create providers for them uh the initial version of Entity framework",
    "start": "615120",
    "end": "622399"
  },
  {
    "text": "core supports SQL Server of course um sqlite uh SQL Compact and postgress",
    "start": "622399",
    "end": "628600"
  },
  {
    "text": "that's an open source provider that uh you can add uh on top of Entity framework core um as for other databases",
    "start": "628600",
    "end": "636320"
  },
  {
    "text": "oracl db2 um uh what's the name um um what's it",
    "start": "636320",
    "end": "642800"
  },
  {
    "text": "called forgot the name of the FL database um I want to say basically you",
    "start": "642800",
    "end": "647880"
  },
  {
    "text": "need a provider for that but once efo is released it's version one probably",
    "start": "647880",
    "end": "652959"
  },
  {
    "text": "companies will go ahead and write their providers for that um as for other data stores if you look back at the history",
    "start": "652959",
    "end": "658839"
  },
  {
    "text": "of Entity framework core when it was known as Entity framework 7 uh in the earlier versions the beta versions you",
    "start": "658839",
    "end": "664959"
  },
  {
    "text": "could have seen samples for non- relational databases such as Azure tables which is a key value storage and",
    "start": "664959",
    "end": "671440"
  },
  {
    "text": "redis which is um not only key value cache but it also supports list and and",
    "start": "671440",
    "end": "677519"
  },
  {
    "text": "um hashes and that sort of stuff um there were samples on how to use EF core for that in version one they just",
    "start": "677519",
    "end": "685639"
  },
  {
    "text": "removed all of those samples because well basically they didn't work but once version one is released which",
    "start": "685639",
    "end": "692399"
  },
  {
    "text": "will be in a couple of weeks um alongside with ASP net core 1.0 uh they",
    "start": "692399",
    "end": "697839"
  },
  {
    "text": "are going to go back to that and work on those samples okay it's in the backlog",
    "start": "697839",
    "end": "703399"
  },
  {
    "text": "it's stuff to do after version one is released so I'm guessing that by the end of the year you will see um um providers",
    "start": "703399",
    "end": "711120"
  },
  {
    "text": "for Ready Cash table uh storage of course probably for other um stuff too",
    "start": "711120",
    "end": "717079"
  },
  {
    "text": "such as I don't know maybe s 3 or uh maybe Dynamo DB Amazon Dynamo DB um You",
    "start": "717079",
    "end": "724399"
  },
  {
    "text": "probably see more and more providers since it's coming very easy to implement those",
    "start": "724399",
    "end": "729800"
  },
  {
    "text": "providers okay so version 1.0 only relational databases we see some of those in the demos um as I mentioned",
    "start": "729800",
    "end": "737399"
  },
  {
    "text": "before entity firw core is very lightweight um so first of all it's",
    "start": "737399",
    "end": "744120"
  },
  {
    "text": "about 1 megab in size okay um and it's Rewritten so now more the large object",
    "start": "744120",
    "end": "750199"
  },
  {
    "text": "context under the hood in your DB context you get the simple DB context you get the simple DB set but it's a lot",
    "start": "750199",
    "end": "757560"
  },
  {
    "text": "more lightweight uh but that lightweight comes with new implementations of known",
    "start": "757560",
    "end": "764560"
  },
  {
    "text": "uh Concepts in Entity framework such as the metadata um structure that Maps your",
    "start": "764560",
    "end": "771600"
  },
  {
    "text": "uh um your object uh your Object Store to the data store uh that has improved",
    "start": "771600",
    "end": "776880"
  },
  {
    "text": "we'll see a demo for that uh then the entire change tracking in Entity framework core has changed a bit a bit",
    "start": "776880",
    "end": "783880"
  },
  {
    "text": "meaning it doesn't work like the old one so if you're using change tracking uh to",
    "start": "783880",
    "end": "789360"
  },
  {
    "text": "say attach objects that you get in a service to an object context or DB context and then save them to a database",
    "start": "789360",
    "end": "795760"
  },
  {
    "text": "assuming that they will automatically automatically be marked as added or updated modified deleted that sort of",
    "start": "795760",
    "end": "802160"
  },
  {
    "text": "stuff that will probably won't work out of the box as you expect okay in comparison to ef6 uh um but we'll see",
    "start": "802160",
    "end": "809839"
  },
  {
    "text": "demo on how to tackle that and handle that um as I said before almost all of the components in",
    "start": "809839",
    "end": "817440"
  },
  {
    "text": "Entity framework core are injected into Entity framework doesn't mean it's slower it's actually faster in some",
    "start": "817440",
    "end": "823360"
  },
  {
    "text": "aspects but what you do get is the option to override some of those",
    "start": "823360",
    "end": "828680"
  },
  {
    "text": "injections or all of those injections and bring your own code if you want a different type mapper for your database",
    "start": "828680",
    "end": "835759"
  },
  {
    "text": "you can do that if you want to add your own logging mechanism you can do that okay um a lot of the concepts the the",
    "start": "835759",
    "end": "842720"
  },
  {
    "text": "services in Entity framework can you can just go ahead and replace them it's not any more internal classes as we had in",
    "start": "842720",
    "end": "849519"
  },
  {
    "text": "Entity framework 6 and earlier versions okay so for me for example someone who",
    "start": "849519",
    "end": "854800"
  },
  {
    "text": "used reflection in order to get those internal types and then change their values such as changing schemas on the",
    "start": "854800",
    "end": "861320"
  },
  {
    "text": "Fly uh that is a lot easier now with Entity framework 7 and of course some of the API",
    "start": "861320",
    "end": "869399"
  },
  {
    "text": "Has Changed For example the change tracking API has changed but we'll go over the demos and you'll get the grasp",
    "start": "869399",
    "end": "875279"
  },
  {
    "text": "of what actually changed underneath the hood and of course um efco has been",
    "start": "875279",
    "end": "880839"
  },
  {
    "text": "optimized they improve the queries the SQL queries that are executing in the database uh we'll see some of",
    "start": "880839",
    "end": "887800"
  },
  {
    "text": "those and U the concept of entity frork now is what is called pay for uh payer",
    "start": "887800",
    "end": "893320"
  },
  {
    "text": "play meaning that when I start a um a project I don't need to bring the entire",
    "start": "893320",
    "end": "899639"
  },
  {
    "text": "nugget package of all the Entity framework support for SQL server and Oracle and other stuff I'm just getting",
    "start": "899639",
    "end": "905880"
  },
  {
    "text": "the core itself which is under a megabyte and then I add the stuff I want to it I want to support postgress I only",
    "start": "905880",
    "end": "912160"
  },
  {
    "text": "add the postgress Nugget package I don't need the SQL Server nuget package as it is now separated unlike for example",
    "start": "912160",
    "end": "918959"
  },
  {
    "text": "Entity framework 6 where I added Entity framework and added the SQL server support even if I haven't used it okay",
    "start": "918959",
    "end": "927600"
  },
  {
    "text": "so um the question I'm guessing that some of you are asking if not all of you is what will happen to Entity framework",
    "start": "927600",
    "end": "934560"
  },
  {
    "text": "6 is this the end for Entity framework 6 as we might have heard okay um so the",
    "start": "934560",
    "end": "940720"
  },
  {
    "text": "answer is it's not the end for Entity framework 6 um since a lot of people are still using Entity framework 6 Entity",
    "start": "940720",
    "end": "947480"
  },
  {
    "text": "framework 6 is different than Entity framework 7 in several aspects it will",
    "start": "947480",
    "end": "952639"
  },
  {
    "text": "continue to evolve it won't evolve in the same speed as Entity framework seven of course enti frork core sorry uh but",
    "start": "952639",
    "end": "960160"
  },
  {
    "text": "you'll actually see new stuff coming out improvements of course bug fixes okay um",
    "start": "960160",
    "end": "965680"
  },
  {
    "text": "it just might take you know uh um more time to release new versions okay so",
    "start": "965680",
    "end": "972720"
  },
  {
    "text": "don't expect Entity framework 6.2 6.3 6.4 6.5 by the end of the year probably",
    "start": "972720",
    "end": "978199"
  },
  {
    "text": "6.2 will be the next major version of Entity framework so um some of the new features",
    "start": "978199",
    "end": "985360"
  },
  {
    "text": "that I'm going to show um very soon in demos are um the new actual features of",
    "start": "985360",
    "end": "992720"
  },
  {
    "text": "entity fir cor aside from new platforms new providers uh first of all we have",
    "start": "992720",
    "end": "997800"
  },
  {
    "text": "new options of mixing uh queries that are will run in the database and in",
    "start": "997800",
    "end": "1003839"
  },
  {
    "text": "memory uh Entity framework core now supports a better understanding of what goes in memory and what goes in a",
    "start": "1003839",
    "end": "1010079"
  },
  {
    "text": "database and not foring you exceptions that you cannot do this in a database um",
    "start": "1010079",
    "end": "1015480"
  },
  {
    "text": "we have the support for batch save so when you call save async uh save changes async it will actually do uh batch",
    "start": "1015480",
    "end": "1022519"
  },
  {
    "text": "inserts batch updates we'll see that um SQL query improvements some things have",
    "start": "1022519",
    "end": "1027880"
  },
  {
    "text": "changed for example when you do an eager load using an include statement um the",
    "start": "1027880",
    "end": "1033678"
  },
  {
    "text": "SQL um the SQL query that runs in the database is actually improved and it",
    "start": "1033679",
    "end": "1039240"
  },
  {
    "text": "works faster uh some new features such as Shadow properties and alternative",
    "start": "1039240",
    "end": "1044918"
  },
  {
    "text": "Keys uh we'll talk about that uh using a demo and and there is a new API for",
    "start": "1044919",
    "end": "1050520"
  },
  {
    "text": "change tracking called uh the track graph API which basically lets you",
    "start": "1050520",
    "end": "1056000"
  },
  {
    "text": "control how the entities will be um attached to the DB context okay um again",
    "start": "1056000",
    "end": "1063200"
  },
  {
    "text": "we'll see that in a demo so let's go ahead and start with the first demo showing some of the",
    "start": "1063200",
    "end": "1069039"
  },
  {
    "text": "basics of Entity framework now I'm using a Mac but let me just switch to my uh",
    "start": "1069039",
    "end": "1074480"
  },
  {
    "text": "Windows machine we'll see entity frork running running on a Mac by the end of the",
    "start": "1074480",
    "end": "1079559"
  },
  {
    "text": "session don't worry okay um so let's start with Entity framework the",
    "start": "1079559",
    "end": "1086799"
  },
  {
    "text": "basics okay so first of all um can you see the fonts all right or do I need to increase yeah is that okay okay so first",
    "start": "1086799",
    "end": "1094799"
  },
  {
    "text": "of all if you look at my standard objects the DB context the DB set this",
    "start": "1094799",
    "end": "1101559"
  },
  {
    "text": "is the same as Entity framework 6 okay nothing has changed um in these classes",
    "start": "1101559",
    "end": "1107960"
  },
  {
    "text": "um by the way for my demos I will use Star Wars um I saw one speaker talking",
    "start": "1107960",
    "end": "1114039"
  },
  {
    "text": "about Entity framework using uh demos from uh the model of the seven summar uh video and because this is Entity",
    "start": "1114039",
    "end": "1120720"
  },
  {
    "text": "framework seven so I need to use the number seven so I thought what movie has uh seven prequels and sqls uh and the",
    "start": "1120720",
    "end": "1128120"
  },
  {
    "text": "answer is Star Wars so to do this demo by the way I used an",
    "start": "1128120",
    "end": "1133280"
  },
  {
    "text": "API cuz I don't know all the things there is to know about Star Wars I'm not that of a fan um there is an API called",
    "start": "1133280",
    "end": "1140640"
  },
  {
    "text": "uh swappy which is Star Wars API okay so um if you want to learn more",
    "start": "1140640",
    "end": "1148080"
  },
  {
    "text": "about how uh what is the height of Luke Skywalker or how much does he weigh uh you can do that okay there's a cool API",
    "start": "1148080",
    "end": "1155799"
  },
  {
    "text": "for that uh so I use some of this in my demos so I didn't invent anything uh so",
    "start": "1155799",
    "end": "1162280"
  },
  {
    "text": "let's take a look at the basic DB context as you are familiar DB context um you can get",
    "start": "1162280",
    "end": "1169240"
  },
  {
    "text": "the connection string in a Constructor in Entity framework 6 Entity framework or it's a bit different we now use a DB",
    "start": "1169240",
    "end": "1175679"
  },
  {
    "text": "context options DB context options is um basically an options object uh which",
    "start": "1175679",
    "end": "1182720"
  },
  {
    "text": "allows you to specify which databased provider I'm using so I don't need to specify that in the connection string in",
    "start": "1182720",
    "end": "1188799"
  },
  {
    "text": "my app settings or web config or whatever it is uh I can just specify the type of the provider I'm using in code",
    "start": "1188799",
    "end": "1196360"
  },
  {
    "text": "um and inject that into my context okay so for example in this demo I'm using my",
    "start": "1196360",
    "end": "1202919"
  },
  {
    "text": "local SQL Express so I'm creating a new DB context options Builder which will",
    "start": "1202919",
    "end": "1208960"
  },
  {
    "text": "create my um my options object I'm telling it I'm using SQL Server",
    "start": "1208960",
    "end": "1214280"
  },
  {
    "text": "providing the connection string of course you can provide the connection string from a configuration file uh from",
    "start": "1214280",
    "end": "1219679"
  },
  {
    "text": "I don't know some kind of a secured storage or some sort and then I'm creating the context using those options",
    "start": "1219679",
    "end": "1227919"
  },
  {
    "text": "okay I can of course control other stuff here like the change tracking uh the database",
    "start": "1227919",
    "end": "1233480"
  },
  {
    "text": "settings um all the other stuff that we used to do in enti forwork 6 uh I'm just doing that for an options object uh and",
    "start": "1233480",
    "end": "1241320"
  },
  {
    "text": "that aligns quite well with um Entity framework core when you're using it in aspn net because that way aspn net knows",
    "start": "1241320",
    "end": "1248440"
  },
  {
    "text": "automatically how to inject that options object into your context okay uh now um",
    "start": "1248440",
    "end": "1254480"
  },
  {
    "text": "as you can see there is a new command here called ensure created uh if you're looking for those whole uh database",
    "start": "1254480",
    "end": "1261280"
  },
  {
    "text": "initialization classes of entity forwork 6 they drop creative database if a model",
    "start": "1261280",
    "end": "1267440"
  },
  {
    "text": "uh changes and that sort of stuff all the seed methods um that's currently not available in EF core it will be",
    "start": "1267440",
    "end": "1274880"
  },
  {
    "text": "available some of it will be available after version 1.0 so the current way of",
    "start": "1274880",
    "end": "1281039"
  },
  {
    "text": "um verifying your database exists is either calling andure created or using",
    "start": "1281039",
    "end": "1286120"
  },
  {
    "text": "the migrations command from command line um but as you can see there is no way of",
    "start": "1286120",
    "end": "1292880"
  },
  {
    "text": "doing a seed method here to to insert the basic entities you need in the database that will be added after",
    "start": "1292880",
    "end": "1299559"
  },
  {
    "text": "version one okay um other than that it's mostly the common stuff of Entity",
    "start": "1299559",
    "end": "1305520"
  },
  {
    "text": "framework that we're usually doing we're creating a new object we're adding that into a certain DB set and then we call",
    "start": "1305520",
    "end": "1312720"
  },
  {
    "text": "Save changes okay save changes of course the implementation is a bit different but when we get to to the point where we",
    "start": "1312720",
    "end": "1318600"
  },
  {
    "text": "talk about performance I'll show exactly what's going on underneath the hood in the database okay um after that queries",
    "start": "1318600",
    "end": "1327360"
  },
  {
    "text": "simple link queries work just the same even Advanced Link queries work just the same okay just create your link query um",
    "start": "1327360",
    "end": "1334360"
  },
  {
    "text": "do a two list two array whatever you like um iterate it normally just works",
    "start": "1334360",
    "end": "1340480"
  },
  {
    "text": "the same the same Concepts apply in entity frork 6 so if your entire code of entity frork 6 is simple as that which",
    "start": "1340480",
    "end": "1348120"
  },
  {
    "text": "is never simple as that but let's say it's simple as that migrating from entity frork 6 to entity frork cor just",
    "start": "1348120",
    "end": "1355320"
  },
  {
    "text": "means change the Constructor of your DB context and of course replace the Nugget packages so let me just um point to",
    "start": "1355320",
    "end": "1362000"
  },
  {
    "text": "which nugget packages we're using um I'm using currently two",
    "start": "1362000",
    "end": "1368679"
  },
  {
    "text": "specific nugget packages from Entity",
    "start": "1368679",
    "end": "1374240"
  },
  {
    "text": "framework okay so the first package I'm using is Entity Framework core this is the base package that you need to get",
    "start": "1374600",
    "end": "1381279"
  },
  {
    "text": "all the Entity framework core features um and since I'm using SQL Server as the provider I installed another nuget",
    "start": "1381279",
    "end": "1388400"
  },
  {
    "text": "package which uh brings the relational nugget package uh in addition and that",
    "start": "1388400",
    "end": "1394080"
  },
  {
    "text": "is the Microsoft Entity framework SQL Server nugget package if I didn't want SQL Server if I wanted say postgress or",
    "start": "1394080",
    "end": "1401080"
  },
  {
    "text": "sqlite I will just remove this nugget package and add a different nuget package instead okay by the way since",
    "start": "1401080",
    "end": "1406960"
  },
  {
    "text": "the SQL Server n package uh depends on the Entity framework or it's simply enough to add the Entity framework SQL",
    "start": "1406960",
    "end": "1414240"
  },
  {
    "text": "Server nug package and that will add all the other packages that are required okay so don't have to know do too many",
    "start": "1414240",
    "end": "1421360"
  },
  {
    "text": "stuff there uh so as I said I'm using version rc2 which is the latest version we have",
    "start": "1421360",
    "end": "1427520"
  },
  {
    "text": "now if you have code that was written in rc1 basically it means upgrade the",
    "start": "1427520",
    "end": "1433480"
  },
  {
    "text": "version of the Nugget package and change the name space okay um the namespace",
    "start": "1433480",
    "end": "1440039"
  },
  {
    "text": "before was if today it's Microsoft entity from core before it was",
    "start": "1440039",
    "end": "1445120"
  },
  {
    "text": "microsoft. data. entity okay so we just need to remove the data add framework or",
    "start": "1445120",
    "end": "1451480"
  },
  {
    "text": "and that's it um you can still use the old types of Constructors where you get",
    "start": "1451480",
    "end": "1457559"
  },
  {
    "text": "a connection string instead of an options object in Entity framework rc2 uh that will also work but basically as",
    "start": "1457559",
    "end": "1465360"
  },
  {
    "text": "you can see this is quite straight forward just as using entity frork 6",
    "start": "1465360",
    "end": "1470799"
  },
  {
    "text": "okay looks simple enough right well wait and",
    "start": "1470799",
    "end": "1476320"
  },
  {
    "text": "see okay um let's go to something a bit",
    "start": "1476320",
    "end": "1481520"
  },
  {
    "text": "more advanced let's talk about um link queries SQL queries how they under",
    "start": "1481520",
    "end": "1487399"
  },
  {
    "text": "underneath the hood in the",
    "start": "1487399",
    "end": "1490480"
  },
  {
    "text": "database okay so uh what I have here I have code that uses both Entity",
    "start": "1493000",
    "end": "1499679"
  },
  {
    "text": "framework six and Entity framework core just so we can compare some of the stuff for example how include um eager loading",
    "start": "1499679",
    "end": "1507120"
  },
  {
    "text": "Works inty framework 6 and framework 7 to compare the es queries has anyone ever tried to check uh what type of Esq",
    "start": "1507120",
    "end": "1514600"
  },
  {
    "text": "queries are generated by Entity framework anyone ever triy that yeah to check you know when stuff works slowly",
    "start": "1514600",
    "end": "1520919"
  },
  {
    "text": "why okay um this is something we usually need to do so let's see what's happening",
    "start": "1520919",
    "end": "1528080"
  },
  {
    "text": "here so first of all the um entity model that I'm using is the same in both of",
    "start": "1528080",
    "end": "1533279"
  },
  {
    "text": "the classes okay it's that same person and this time I also have a",
    "start": "1533279",
    "end": "1539480"
  },
  {
    "text": "Starship okay um and I have a DB context that currently has only the uh people",
    "start": "1539480",
    "end": "1547520"
  },
  {
    "text": "list and here as well okay and this is entity from so I'm just adding the",
    "start": "1547520",
    "end": "1553200"
  },
  {
    "text": "connection string in the Constructor not using the options object of vfo",
    "start": "1553200",
    "end": "1558399"
  },
  {
    "text": "in addition I have a data initializer for both databases I didn't use the ef6 data",
    "start": "1558399",
    "end": "1565200"
  },
  {
    "text": "initializer with the seed just the same method so it will be easier to compare okay so clearing out the",
    "start": "1565200",
    "end": "1572120"
  },
  {
    "text": "databases and um seeding the data same entity frork 6 and EF core okay same",
    "start": "1572120",
    "end": "1580679"
  },
  {
    "text": "code you can compare it afterwards the only difference is here I'm using andure created in efco",
    "start": "1580679",
    "end": "1586600"
  },
  {
    "text": "okay so let's compare the code itself okay so what I'm doing here first",
    "start": "1586600",
    "end": "1595320"
  },
  {
    "text": "start with eager load um I'm warming up the databases both the EF core and the ef6 and then",
    "start": "1595320",
    "end": "1602799"
  },
  {
    "text": "I'm doing a simple eager load okay as you can see this one uses",
    "start": "1602799",
    "end": "1609320"
  },
  {
    "text": "EF core second one uses ef6 where I run the same SQL query um selecting a",
    "start": "1609320",
    "end": "1616760"
  },
  {
    "text": "specific person from the people um table and I'm using eager load to also load",
    "start": "1616760",
    "end": "1622240"
  },
  {
    "text": "the Starships okay and of course I run it for each",
    "start": "1622240",
    "end": "1627399"
  },
  {
    "text": "query um to print both the person and the Starship so first of all let's just",
    "start": "1627399",
    "end": "1633000"
  },
  {
    "text": "run this as it is and verify the results are the",
    "start": "1633000",
    "end": "1638120"
  },
  {
    "text": "same oop that's wrong no errors but",
    "start": "1638840",
    "end": "1645120"
  },
  {
    "text": "errors check this for a second I think this is causing a few bugs right now",
    "start": "1646520",
    "end": "1653720"
  },
  {
    "text": "just do this come",
    "start": "1653720",
    "end": "1660559"
  },
  {
    "text": "on if nothing works we'll just R",
    "start": "1661360",
    "end": "1666000"
  },
  {
    "text": "executable it's it compiled last night so there is no reason why it doesn't work now the demo will work a bit slowly",
    "start": "1672840",
    "end": "1678799"
  },
  {
    "text": "at first because I've actually deleted all the databases uh that I had in my server so it's spending a couple of",
    "start": "1678799",
    "end": "1686200"
  },
  {
    "text": "seconds in addition for the ef6 and EF core to create the database okay so it",
    "start": "1686200",
    "end": "1691240"
  },
  {
    "text": "takes a couple of seconds more but you know this is not uh the um the final uh",
    "start": "1691240",
    "end": "1697399"
  },
  {
    "text": "performance that you see in Entity framework or let me run that",
    "start": "1697399",
    "end": "1702600"
  },
  {
    "text": "again okay so as you can see it runs faster and it's the same output we'll fix this doesn't run in a second",
    "start": "1703279",
    "end": "1711159"
  },
  {
    "text": "but let me try to show you what goes on in the database and let me use a an SQL",
    "start": "1711159",
    "end": "1716440"
  },
  {
    "text": "profiler to record everything just run the executable here",
    "start": "1716440",
    "end": "1724000"
  },
  {
    "text": "again okay so what I'm mostly interested is in the select statements there is a couple of of Select statements that run",
    "start": "1726919",
    "end": "1734440"
  },
  {
    "text": "during that ensure database created uh at the the beginning so that's less interesting for me in addition after I",
    "start": "1734440",
    "end": "1741120"
  },
  {
    "text": "delete uh the list of people I'm inserting new stuff so there are couple of inserts here that I'm not interested",
    "start": "1741120",
    "end": "1747399"
  },
  {
    "text": "in I just want to show you for example first of all the um ESL queries for the",
    "start": "1747399",
    "end": "1752440"
  },
  {
    "text": "eager load okay um so let me just do",
    "start": "1752440",
    "end": "1758360"
  },
  {
    "text": "this first uh this is a",
    "start": "1758360",
    "end": "1766320"
  },
  {
    "text": "migrations to select",
    "start": "1766320",
    "end": "1771278"
  },
  {
    "text": "one okay so something is missing here just see delete delete",
    "start": "1771640",
    "end": "1780640"
  },
  {
    "text": "delete just run this",
    "start": "1780640",
    "end": "1784399"
  },
  {
    "text": "again okay for some reason I'm not seeing the",
    "start": "1787080",
    "end": "1793120"
  },
  {
    "text": "SQL query for ef6 but let me just talk a bit about the the the select query for",
    "start": "1793120",
    "end": "1799120"
  },
  {
    "text": "efco um this is how it goes in conferences sometimes demos you know mess up but we'll get to that and fix",
    "start": "1799120",
    "end": "1806240"
  },
  {
    "text": "everything okay so let's talk a bit about um eager loading has anyone seen eager loading select queries in ef6",
    "start": "1806240",
    "end": "1814080"
  },
  {
    "text": "hases anyone ever noticed how that works basically what it does if you select from person from people uh uh and",
    "start": "1814080",
    "end": "1821399"
  },
  {
    "text": "include something from the Starship it will create an SQL query with a join between the two tables and it will",
    "start": "1821399",
    "end": "1827960"
  },
  {
    "text": "actually select all the data from the people list for each of the rows in the",
    "start": "1827960",
    "end": "1833880"
  },
  {
    "text": "Starship okay it will do a cian multiplication for the joint query because it actually outputs one table",
    "start": "1833880",
    "end": "1841519"
  },
  {
    "text": "that includes information from both tables okay so if I have one person and six Starships I will get the information",
    "start": "1841519",
    "end": "1848559"
  },
  {
    "text": "for that person six times the same information and that of course affects Network bandwidth it it affects the",
    "start": "1848559",
    "end": "1855080"
  },
  {
    "text": "amount of time it takes to dilize those objects okay it takes more time to uh um create",
    "start": "1855080",
    "end": "1860240"
  },
  {
    "text": "the objects but if I look now at um EF core so first of all as you can",
    "start": "1860240",
    "end": "1866279"
  },
  {
    "text": "see so which which thing am I running here oh yeah okay now I understand it is",
    "start": "1866279",
    "end": "1874320"
  },
  {
    "text": "running the different kind of code let's build this again it ran the other sample",
    "start": "1874320",
    "end": "1880960"
  },
  {
    "text": "okay let me see if this is updated 11 30",
    "start": "1880960",
    "end": "1888559"
  },
  {
    "text": "just check something something is not working properly let me just try and run this",
    "start": "1888559",
    "end": "1896519"
  },
  {
    "text": "again it's using the come on okay we'll do what is known as close all the",
    "start": "1896519",
    "end": "1902000"
  },
  {
    "text": "windows start over again don't worry we have enough time if nothing works I'll",
    "start": "1902000",
    "end": "1907399"
  },
  {
    "text": "just move it to the",
    "start": "1907399",
    "end": "1910159"
  },
  {
    "text": "Mac come on",
    "start": "1912880",
    "end": "1918919"
  },
  {
    "text": "if nothing works you just create it from sketch I mean it's not that a lot of code",
    "start": "1918919",
    "end": "1924440"
  },
  {
    "text": "okay I have internet connections everything should be okay okay will it",
    "start": "1924440",
    "end": "1931880"
  },
  {
    "text": "compile come on bets people bets will it compile well it will compile will it run",
    "start": "1931880",
    "end": "1938919"
  },
  {
    "text": "okay that's another thing okay Run please yeah Applause",
    "start": "1938919",
    "end": "1945559"
  },
  {
    "text": "anyone for my PC okay okay so now let's look at the",
    "start": "1945559",
    "end": "1951760"
  },
  {
    "text": "queries oh now it's working um okay so first of all uh my first one",
    "start": "1951760",
    "end": "1958840"
  },
  {
    "text": "was let's see the first one is e core right so first one is EF core second one",
    "start": "1958840",
    "end": "1964440"
  },
  {
    "text": "is ef6 so let's look at the queries for ef6 first um as you can see there is a",
    "start": "1964440",
    "end": "1969559"
  },
  {
    "text": "very large select statement here okay um from people left outer join",
    "start": "1969559",
    "end": "1978399"
  },
  {
    "text": "Starship which basically if I copy paste this into the",
    "start": "1978399",
    "end": "1984200"
  },
  {
    "text": "database just refresh the databases",
    "start": "1984200",
    "end": "1988679"
  },
  {
    "text": "here if you look at what is selected here uh well we have one Starship but um",
    "start": "1990120",
    "end": "1995639"
  },
  {
    "text": "say I added another",
    "start": "1995639",
    "end": "1998679"
  },
  {
    "text": "one okay and then run this again as you can",
    "start": "2005960",
    "end": "2013159"
  },
  {
    "text": "see the same the same text appear for the second row even though I'm basically doing a",
    "start": "2013159",
    "end": "2019840"
  },
  {
    "text": "join I want one row of the person and two rows of the Starships now if I go",
    "start": "2019840",
    "end": "2026000"
  },
  {
    "text": "back um to this code and look at what",
    "start": "2026000",
    "end": "2031080"
  },
  {
    "text": "happened in EFC in EF core sorry um so what we see here is that this query was",
    "start": "2031080",
    "end": "2038240"
  },
  {
    "text": "actually split to two different queries okay now I know you think two queries is more than one query so it will work",
    "start": "2038240",
    "end": "2044639"
  },
  {
    "text": "slower well that's not actually true it mostly depends on the number of joins",
    "start": "2044639",
    "end": "2049760"
  },
  {
    "text": "that you have in your large your single large query if there are multiple um",
    "start": "2049760",
    "end": "2054919"
  },
  {
    "text": "includes and you generate a lot of of left outer joints it will actually work",
    "start": "2054919",
    "end": "2060560"
  },
  {
    "text": "slower than just sending you know two or three queries to the database okay uh so",
    "start": "2060560",
    "end": "2065599"
  },
  {
    "text": "what we actually get here is one query that selects the person okay and a",
    "start": "2065599",
    "end": "2071878"
  },
  {
    "text": "second query as you can see that selects the Starship where the Starship uh",
    "start": "2071879",
    "end": "2078398"
  },
  {
    "text": "matches that single person okay so I'm running two queries one to select the person objects that match the query and",
    "start": "2078399",
    "end": "2085158"
  },
  {
    "text": "the second query to select the starships that match the list of people that I got before so the result set will be smaller",
    "start": "2085159",
    "end": "2092200"
  },
  {
    "text": "I'll get a single result set for the people and a single result set for the Starship and then of course the matching",
    "start": "2092200",
    "end": "2097560"
  },
  {
    "text": "between them the join will be done in memory okay but that will actually perform a lot better in the database",
    "start": "2097560",
    "end": "2104920"
  },
  {
    "text": "then using a left outer joint that brings a whole lot of data into the application okay so that's for eager",
    "start": "2104920",
    "end": "2113520"
  },
  {
    "text": "loing and that's how you make Visual Studio work just close everything open it up again",
    "start": "2113520",
    "end": "2119599"
  },
  {
    "text": "um and another thing I want to show",
    "start": "2119599",
    "end": "2124440"
  },
  {
    "text": "is how we mix um client and SQL statements today in EF core so let's say",
    "start": "2125440",
    "end": "2131400"
  },
  {
    "text": "that you want to select from not from a table but from a view maybe you're creating some sort of a multi-tenant",
    "start": "2131400",
    "end": "2138240"
  },
  {
    "text": "application and you want to inject into the SQL statement the tenant ID that you're currently using and you can't use",
    "start": "2138240",
    "end": "2145400"
  },
  {
    "text": "the builtin code first uh um mapping between an entity and its table okay you",
    "start": "2145400",
    "end": "2150920"
  },
  {
    "text": "want to select entities from a given table using SQL queries and you want of course to translate those results into",
    "start": "2150920",
    "end": "2158480"
  },
  {
    "text": "objects now we had that option of course in Entity framework 6 uh in Entity framework s it has changed a bit and is",
    "start": "2158480",
    "end": "2166839"
  },
  {
    "text": "it um it's actually been improved so let's see uh what we have here first of all I'm using the same select statements",
    "start": "2166839",
    "end": "2174440"
  },
  {
    "text": "um select from people where height is more than 1.5 M uh if you are unfamiliar",
    "start": "2174440",
    "end": "2181000"
  },
  {
    "text": "with this syntax this syntax is C 6 uh which allows me to plan",
    "start": "2181000",
    "end": "2187560"
  },
  {
    "text": "um for example here I'm planting the name of the height property which basically I could have just written that",
    "start": "2187560",
    "end": "2195640"
  },
  {
    "text": "as height okay uh but that wouldn't survive uh for example situation where I",
    "start": "2195640",
    "end": "2202839"
  },
  {
    "text": "change the property name and this way this will actually cause my code to not",
    "start": "2202839",
    "end": "2208040"
  },
  {
    "text": "compile anymore uh so it's actually safer um and I'm ordering by descending",
    "start": "2208040",
    "end": "2215400"
  },
  {
    "text": "height okay so for example let me just run this with",
    "start": "2215400",
    "end": "2222680"
  },
  {
    "text": "ef6 first okay let me clear this list here",
    "start": "2222680",
    "end": "2228880"
  },
  {
    "text": "and let's see what's get generated with",
    "start": "2228880",
    "end": "2232880"
  },
  {
    "text": "ef6 okay um let's take a look at the select",
    "start": "2236200",
    "end": "2241960"
  },
  {
    "text": "statements now as you can see for example the order Buy isn't here why is",
    "start": "2241960",
    "end": "2248560"
  },
  {
    "text": "that because it couldn't understand how I wanted to do an order bu on top of a a",
    "start": "2248560",
    "end": "2255119"
  },
  {
    "text": "string SQL statement so we just ran the SQL statement pull the information and ran the order by in memory um if I use",
    "start": "2255119",
    "end": "2263200"
  },
  {
    "text": "ef7 EF core again my apologies I'm still not accustomed to saying EF",
    "start": "2263200",
    "end": "2270800"
  },
  {
    "text": "core running the same query but now let's look at the",
    "start": "2274359",
    "end": "2282160"
  },
  {
    "text": "database okay all these uh um stuff at the beginning is the whole",
    "start": "2282240",
    "end": "2287280"
  },
  {
    "text": "initialization I'm deleting all the people inserting them again so you know it has uh a bit of SQL they need to",
    "start": "2287280",
    "end": "2294480"
  },
  {
    "text": "generate so now if you look at the generated SQL statement you see that that order by is added to the SQL",
    "start": "2294480",
    "end": "2301079"
  },
  {
    "text": "statement so in entity Frameworks core sorry um the",
    "start": "2301079",
    "end": "2307240"
  },
  {
    "text": "translation from link queries into SQL queries um is a lot better it knows how",
    "start": "2307240",
    "end": "2312880"
  },
  {
    "text": "to figure out um orderby wear statements select statements and push them into",
    "start": "2312880",
    "end": "2318880"
  },
  {
    "text": "your select query so you can select from views and still gain the same performance in the database um now since",
    "start": "2318880",
    "end": "2324800"
  },
  {
    "text": "we are um sorry since we are using efco we",
    "start": "2324800",
    "end": "2330640"
  },
  {
    "text": "have a couple of more stuff that we need to look at so let's move on but as you can see there are a lot of of",
    "start": "2330640",
    "end": "2336760"
  },
  {
    "text": "improvements that can be done here and of course EF core is still able uh to run stuff in memory so if you write for",
    "start": "2336760",
    "end": "2343599"
  },
  {
    "text": "example an order by where you call into a method that does the order by uh",
    "start": "2343599",
    "end": "2348640"
  },
  {
    "text": "encode okay for example I know Compares it um uh with some strange string",
    "start": "2348640",
    "end": "2355119"
  },
  {
    "text": "comparison regular expression comparison that you're using it will know how to run stuff in the database put it in memory and then run it in memory uh for",
    "start": "2355119",
    "end": "2362520"
  },
  {
    "text": "the rest of the query that you need to create okay so let's go on and talk about another um",
    "start": "2362520",
    "end": "2371760"
  },
  {
    "text": "demo for metadata API okay so how many people ever needed",
    "start": "2371760",
    "end": "2380040"
  },
  {
    "text": "to fetch metadata from ef6 just me and you okay tell me your",
    "start": "2380040",
    "end": "2387400"
  },
  {
    "text": "story afterwards um because usually when people need to get metadata from The Entity framework uh while in runtime I'm",
    "start": "2387400",
    "end": "2395440"
  },
  {
    "text": "guessing uh um the question is why or why are trying to do that and um the",
    "start": "2395440",
    "end": "2402800"
  },
  {
    "text": "reason why we say why or why is because some of it is so internal that we need to use reflection to do that and",
    "start": "2402800",
    "end": "2408800"
  },
  {
    "text": "reflection sometimes works sometimes doesn't depends you know on the permissions your application has in the",
    "start": "2408800",
    "end": "2414200"
  },
  {
    "text": "operating system um which basically is just depressing uh okay so let's take a",
    "start": "2414200",
    "end": "2420680"
  },
  {
    "text": "look at ef6 mapping okay so I won't bother you with",
    "start": "2420680",
    "end": "2426119"
  },
  {
    "text": "the code because it's ugly code you need to take your DB context you need to",
    "start": "2426119",
    "end": "2433680"
  },
  {
    "text": "convert it into an iob context adapter in order to fetch the object context",
    "start": "2433680",
    "end": "2438760"
  },
  {
    "text": "from it because the entire metadata workspace is in the object context the old object context of ef4 uh and then",
    "start": "2438760",
    "end": "2446280"
  },
  {
    "text": "you need to do some um ugly stuff convert into another ugly stuff uh try",
    "start": "2446280",
    "end": "2453200"
  },
  {
    "text": "to get items iterate them um basically how many lines do we have here",
    "start": "2453200",
    "end": "2460760"
  },
  {
    "text": "from 42 to 72 that's about 60 lines of",
    "start": "2460760",
    "end": "2465920"
  },
  {
    "text": "code no from say for2 30 lines of code um let's move to",
    "start": "2465920",
    "end": "2472680"
  },
  {
    "text": "ef7 this is the code that you need okay so if we want to go over uh the the the",
    "start": "2472680",
    "end": "2481520"
  },
  {
    "text": "model the the metadata of your entities you just need to go to the DB context",
    "start": "2481520",
    "end": "2487240"
  },
  {
    "text": "ask for the model object you can go and just you know iterate over all the",
    "start": "2487240",
    "end": "2492480"
  },
  {
    "text": "entity types and each entity type if you go here exposes basic stuff like its",
    "start": "2492480",
    "end": "2499760"
  },
  {
    "text": "type uh its name the base type of the entity allows you to fetch information",
    "start": "2499760",
    "end": "2505920"
  },
  {
    "text": "about foreign Keys indexes Keys properties a lot simpler if you want to",
    "start": "2505920",
    "end": "2511400"
  },
  {
    "text": "just scan over your metadata to understand the mapping between the database base and your object okay so if",
    "start": "2511400",
    "end": "2518720"
  },
  {
    "text": "you look here for example um go ahead and type for each entity the CLR name",
    "start": "2518720",
    "end": "2524680"
  },
  {
    "text": "and the SQL Server table name so let's run this code and it will also allow me",
    "start": "2524680",
    "end": "2530960"
  },
  {
    "text": "to um Talk a bit about a small change in EF core when it comes to table",
    "start": "2530960",
    "end": "2536560"
  },
  {
    "text": "mappings um it's creating the database right now so give it a",
    "start": "2536560",
    "end": "2543318"
  },
  {
    "text": "second",
    "start": "2545160",
    "end": "2548160"
  },
  {
    "text": "okay so um those of you in the front line can you see the difference take a",
    "start": "2555680",
    "end": "2563200"
  },
  {
    "text": "second can you see the difference it's one character that is missing somewhere the Starship versus",
    "start": "2563200",
    "end": "2571680"
  },
  {
    "text": "Starships um there is a difference are you familiar with the pluralis ation of Entity framework 6 right usually when it",
    "start": "2571680",
    "end": "2579240"
  },
  {
    "text": "doesn't work you you you're starting to get familiar with it um Entity framework six automatically tries to name the",
    "start": "2579240",
    "end": "2586800"
  },
  {
    "text": "table as a pluralized version of your entity so if my entity is a person it will call the table people if it's a",
    "start": "2586800",
    "end": "2593040"
  },
  {
    "text": "Starship it will call it Starships automatically of course you can change that convention but that's the convention um in EF core it has changed",
    "start": "2593040",
    "end": "2601960"
  },
  {
    "text": "a bit at first they removed the pluralization entirely so you will have uh uh got a person table and a Starship",
    "start": "2601960",
    "end": "2609800"
  },
  {
    "text": "table in the latest version the rc2 version they again changed it a bit and",
    "start": "2609800",
    "end": "2615680"
  },
  {
    "text": "this time they um didn't use pluralization they just just said we won't name the table after your entity",
    "start": "2615680",
    "end": "2623760"
  },
  {
    "text": "type we will name the table after your dbet property so in this case for",
    "start": "2623760",
    "end": "2629480"
  },
  {
    "text": "example the reason my that my person table is called actually people is",
    "start": "2629480",
    "end": "2635079"
  },
  {
    "text": "because if you look at my uh DB context you'll see that I have a people",
    "start": "2635079",
    "end": "2641839"
  },
  {
    "text": "properties okay uh but I don't have a Starships property for the DB set that",
    "start": "2641839",
    "end": "2648440"
  },
  {
    "text": "that's why he took the entity type name which is Starship of course you can use",
    "start": "2648440",
    "end": "2654480"
  },
  {
    "text": "um data annotations you can use fluent API in order to um um select the name of",
    "start": "2654480",
    "end": "2661400"
  },
  {
    "text": "the table you can of course inject your own Logic on how to create table names if you want to do this in for example",
    "start": "2661400",
    "end": "2668160"
  },
  {
    "text": "German or French or whatever okay Hebrew God forbid",
    "start": "2668160",
    "end": "2673599"
  },
  {
    "text": "um there only a couple of companies in Israel that actually write table names",
    "start": "2673599",
    "end": "2678960"
  },
  {
    "text": "in Hebrew it's supported you but you can't code against it okay because it's mixing Hebrew and English together and",
    "start": "2678960",
    "end": "2684720"
  },
  {
    "text": "it changes from left to right to right to left text and just awful um don't",
    "start": "2684720",
    "end": "2690359"
  },
  {
    "text": "ever try to do that and that goes to the um the Israelis that will watch this video",
    "start": "2690359",
    "end": "2696559"
  },
  {
    "text": "afterwards I'm guessing no one here actually writes in Hebrew Okay um so",
    "start": "2696559",
    "end": "2701720"
  },
  {
    "text": "this is one of the differences between ef6 and of course so for your example take that U um that basic sample that we",
    "start": "2701720",
    "end": "2708720"
  },
  {
    "text": "did before and you run it on top of an existing database that will probably won't work unless you name your",
    "start": "2708720",
    "end": "2714599"
  },
  {
    "text": "properties exactly as the names of the tables okay no convention in ef7 uh and",
    "start": "2714599",
    "end": "2720760"
  },
  {
    "text": "that is one of the changes that you actually need to um cope with uh next demo extensibility of",
    "start": "2720760",
    "end": "2728720"
  },
  {
    "text": "Entity framework 7 and by the way all the code I'm showing you is already available on",
    "start": "2728720",
    "end": "2735200"
  },
  {
    "text": "GitHub uh but you'll need to wait for the end of the session to see the link so don't go",
    "start": "2735200",
    "end": "2742640"
  },
  {
    "text": "away okay so you have course Services now what do",
    "start": "2742800",
    "end": "2748520"
  },
  {
    "text": "we have here so of course there are a bunch of um it's called services in",
    "start": "2748520",
    "end": "2753760"
  },
  {
    "text": "Entity framework cor the entire P injection each type each interface that",
    "start": "2753760",
    "end": "2759280"
  },
  {
    "text": "is being injected is known as a service um there are about 150 services in EF core when you use it",
    "start": "2759280",
    "end": "2767000"
  },
  {
    "text": "with um SQL Server so I'm not going to show to replace the whole 150 okay I'm",
    "start": "2767000",
    "end": "2772599"
  },
  {
    "text": "just going to show how to use one existing and how to replace an existing one um so first thing um in this code",
    "start": "2772599",
    "end": "2781599"
  },
  {
    "text": "since I need to work with the dependency injection mechanism uh I needed to some code in order to create that options",
    "start": "2781599",
    "end": "2788880"
  },
  {
    "text": "object because that options object also needs to manage the injection of the new",
    "start": "2788880",
    "end": "2794280"
  },
  {
    "text": "types that I'm creating okay so if you familiar with ASP net core it's the same",
    "start": "2794280",
    "end": "2800280"
  },
  {
    "text": "types in EF core um so I'm using a service collection to manage the entire",
    "start": "2800280",
    "end": "2805640"
  },
  {
    "text": "list of services as I mentioned uh the dependency injection uses components that are refer to as services so I'm",
    "start": "2805640",
    "end": "2812000"
  },
  {
    "text": "saying well I want to add Entity framework SQL server. will inject all",
    "start": "2812000",
    "end": "2817160"
  },
  {
    "text": "the basic the buil-in types that match the different interfaces and then what",
    "start": "2817160",
    "end": "2822480"
  },
  {
    "text": "I'm doing is I'm replacing the I batch executor with um my own custom executor",
    "start": "2822480",
    "end": "2830000"
  },
  {
    "text": "the batch executor is responsible for executing um um batch updates batch",
    "start": "2830000",
    "end": "2836640"
  },
  {
    "text": "inserts and well I won't override it because I have no idea how to write that code that converts an entire list of",
    "start": "2836640",
    "end": "2842640"
  },
  {
    "text": "entities into a bch update uh I just you know hooked up to the existing one and did some stuff before calling into the",
    "start": "2842640",
    "end": "2850319"
  },
  {
    "text": "uh the next pipeline component um so we'll see that in a second well we can see that actually now it doesn't do that",
    "start": "2850319",
    "end": "2857599"
  },
  {
    "text": "much okay uh what I'm doing here is I'm iterating each of the command batches so",
    "start": "2857599",
    "end": "2862720"
  },
  {
    "text": "for example if you needed to insert into multiple tables you'll have more than one command batches one batch is uh um",
    "start": "2862720",
    "end": "2869240"
  },
  {
    "text": "per entity type I'm just going ahead counting how many entities it's going to",
    "start": "2869240",
    "end": "2874720"
  },
  {
    "text": "modify and uh what is the name of the table and just printing out you can use it for log files for performance and",
    "start": "2874720",
    "end": "2881720"
  },
  {
    "text": "such to know exactly how much time it took to update say 50 entities in table X okay",
    "start": "2881720",
    "end": "2888839"
  },
  {
    "text": "um so this is my batch executor and what I basically do is just you know call the",
    "start": "2888839",
    "end": "2895960"
  },
  {
    "text": "the default batch executor which I derive from the second thing I'm using is I",
    "start": "2895960",
    "end": "2901520"
  },
  {
    "text": "want to use an existing service and hook up to that existing service and add my own stuff and the service that I'm going",
    "start": "2901520",
    "end": "2907079"
  },
  {
    "text": "to hook up to is the loging service um entity FR has built in loging support",
    "start": "2907079",
    "end": "2913079"
  },
  {
    "text": "and I can just hook up my um my login login components log components not log",
    "start": "2913079",
    "end": "2918960"
  },
  {
    "text": "in loging in uh for example you can log to a console window to the debug window",
    "start": "2918960",
    "end": "2926040"
  },
  {
    "text": "to log foret entity um Event Viewer okay wherever you want to log to um don't log",
    "start": "2926040",
    "end": "2933000"
  },
  {
    "text": "into the database because that will use SQL Server to log log and then it will log to SQL server and then you'll get an",
    "start": "2933000",
    "end": "2938640"
  },
  {
    "text": "infinite Loop of logging and writing to the database um so what I have here is",
    "start": "2938640",
    "end": "2944799"
  },
  {
    "text": "basically the same options Builder from before but now I'm telling it use the SQL server and use that internal service",
    "start": "2944799",
    "end": "2952040"
  },
  {
    "text": "provider that I used before okay now I can of course uh when I add this implementation of the custom",
    "start": "2952040",
    "end": "2959920"
  },
  {
    "text": "batch executor I can also add implementation for my logging but I want to show a different way of doing that",
    "start": "2959920",
    "end": "2966720"
  },
  {
    "text": "and that is not adding that into all of your DB context but adding it into a",
    "start": "2966720",
    "end": "2971880"
  },
  {
    "text": "specific DB context so you'll know how to uh um hook up stuff into a specific",
    "start": "2971880",
    "end": "2977000"
  },
  {
    "text": "DB context so once you have the DB context I can get that service provider",
    "start": "2977000",
    "end": "2983160"
  },
  {
    "text": "from the context I can get a list of all the services I am uh searching for a",
    "start": "2983160",
    "end": "2988640"
  },
  {
    "text": "service called I logger Factory that is the class that is responsible for",
    "start": "2988640",
    "end": "2994400"
  },
  {
    "text": "creating the different log uh logger objects and I'm adding a new provider to",
    "start": "2994400",
    "end": "2999880"
  },
  {
    "text": "that logger Factory for a console logger provider that I created it's written",
    "start": "2999880",
    "end": "3005079"
  },
  {
    "text": "right here we'll see that shortly and I'm just specifying what is the minimum",
    "start": "3005079",
    "end": "3010640"
  },
  {
    "text": "um log level that I want to write to the console I don't want to write everything just information and above okay and I'm",
    "start": "3010640",
    "end": "3016960"
  },
  {
    "text": "also adding an existing provider which is the debug output provider uh this one",
    "start": "3016960",
    "end": "3023079"
  },
  {
    "text": "I got from a nougat package um let me just open the packages here I'll show you the name Microsoft extension loging",
    "start": "3023079",
    "end": "3031119"
  },
  {
    "text": "debug okay that will output to the debug you also have an Event Viewer an ITW one",
    "start": "3031119",
    "end": "3036960"
  },
  {
    "text": "um event trace and that sort of things so this is my own custom logging",
    "start": "3036960",
    "end": "3043280"
  },
  {
    "text": "provider you can see it here it implements the interface so it has a couple of stuff it needs to implement",
    "start": "3043280",
    "end": "3049119"
  },
  {
    "text": "such as create the logger itself okay so this is the provider and the logger is",
    "start": "3049119",
    "end": "3054599"
  },
  {
    "text": "just down here uh basically what you need to uh to do is just decide if it's",
    "start": "3054599",
    "end": "3062040"
  },
  {
    "text": "currently enabled according to the log level that is um required right now and",
    "start": "3062040",
    "end": "3067520"
  },
  {
    "text": "support the log um method which you get",
    "start": "3067520",
    "end": "3072720"
  },
  {
    "text": "the log level the event ID of course the state which contains the entire message and um you get a formatter function here",
    "start": "3072720",
    "end": "3080839"
  },
  {
    "text": "from the back end that actually knows how to format and pull out information from that state object um so you can",
    "start": "3080839",
    "end": "3088599"
  },
  {
    "text": "output it you know um without understanding exactly what is that state object uh so as you can see what I'm",
    "start": "3088599",
    "end": "3095280"
  },
  {
    "text": "doing here is I'm just changing the color of my output according to the type of the log level okay just so it be so",
    "start": "3095280",
    "end": "3102040"
  },
  {
    "text": "it will be interesting and using that formatter so I won't need to understand exactly how to uh replace that object to",
    "start": "3102040",
    "end": "3109520"
  },
  {
    "text": "pull the two string from it or to to pull one or another property from it um",
    "start": "3109520",
    "end": "3115920"
  },
  {
    "text": "so I've added both providers and then I'm just doing stuff like you know new person add that person save changes that",
    "start": "3115920",
    "end": "3123000"
  },
  {
    "text": "sort of stuff let me just take this time to also show you the save changes and",
    "start": "3123000",
    "end": "3128680"
  },
  {
    "text": "how it works so let's just run this um I should actually run it in",
    "start": "3128680",
    "end": "3134960"
  },
  {
    "text": "debug um so you can see the debug output but first of all let's see those um",
    "start": "3134960",
    "end": "3140920"
  },
  {
    "text": "print outputs to the console okay so as you can see this is all written in white",
    "start": "3140920",
    "end": "3146680"
  },
  {
    "text": "so this is the information stuff I can see each of the SQL statements that are",
    "start": "3146680",
    "end": "3152319"
  },
  {
    "text": "written um that are sent into SQL Server including by the way this command which",
    "start": "3152319",
    "end": "3158160"
  },
  {
    "text": "is my insert command okay the 10 in uh the 10 inserts I'm doing into the",
    "start": "3158160",
    "end": "3165680"
  },
  {
    "text": "database it's actually let me see that oh thank",
    "start": "3165680",
    "end": "3171319"
  },
  {
    "text": "you they finished earlier um we still have 8 minutes okay so this is the insert",
    "start": "3171319",
    "end": "3177680"
  },
  {
    "text": "command um so insert her color height and name into the table and here are all",
    "start": "3177680",
    "end": "3184359"
  },
  {
    "text": "the values that I'm inserting into the database as you can see Skywalker number",
    "start": "3184359",
    "end": "3189799"
  },
  {
    "text": "two 58 and of course all the numbers are here and this is a single SQL statement",
    "start": "3189799",
    "end": "3195880"
  },
  {
    "text": "okay of course it's a dynamic SQL statement but it's a single SQL statements and of course um The Entity",
    "start": "3195880",
    "end": "3201559"
  },
  {
    "text": "from provider managers all the stuff underneath the hood such as for for example if you're inserting 10,000",
    "start": "3201559",
    "end": "3207280"
  },
  {
    "text": "entities it will break it down to I think it will be two uh queries 5,000",
    "start": "3207280",
    "end": "3212920"
  },
  {
    "text": "each okay so it automatically knows how to do that and if I also look for that",
    "start": "3212920",
    "end": "3219040"
  },
  {
    "text": "um batch executor here is the me message batching nine items into table people okay so I",
    "start": "3219040",
    "end": "3226480"
  },
  {
    "text": "probably did um less than 10 instead of less or equal than 10 let me just check",
    "start": "3226480",
    "end": "3233000"
  },
  {
    "text": "that yeah equal 1 less than 10 instead of less or equal so it's nine entities not 10 okay bugs you know happens um so",
    "start": "3233000",
    "end": "3246400"
  },
  {
    "text": "let's run this again this time in debug so just so you'll see the debug output yeah I think I should have opened",
    "start": "3246400",
    "end": "3253400"
  },
  {
    "text": "the debug output first oh yeah it's see okay so the same",
    "start": "3253400",
    "end": "3260440"
  },
  {
    "text": "messages as you see in the console are here now in the debug output okay okay",
    "start": "3260440",
    "end": "3265960"
  },
  {
    "text": "so if you need to do that just include the add debug in your code um the last demo um incorporates a",
    "start": "3265960",
    "end": "3273599"
  },
  {
    "text": "couple of samples so both the data stores and the features and the platforms are all embedded into one",
    "start": "3273599",
    "end": "3279880"
  },
  {
    "text": "sample so let's see that one let me just load that again because",
    "start": "3279880",
    "end": "3285839"
  },
  {
    "text": "I unloaded this project and the difference between this project and the previous ones all of the others were",
    "start": "3285839",
    "end": "3292640"
  },
  {
    "text": "just console application this next sample is an entity is is an asp net",
    "start": "3292640",
    "end": "3297920"
  },
  {
    "text": "core example okay so basically since I'm running in ASP net core I should be able",
    "start": "3297920",
    "end": "3303799"
  },
  {
    "text": "to un this code both on my windows and on my Mac and on the Linux if someone has one to give me um and any other type",
    "start": "3303799",
    "end": "3311760"
  },
  {
    "text": "that knows how to run net core so um the basic concepts of uh adding",
    "start": "3311760",
    "end": "3320040"
  },
  {
    "text": "Entity framework into ASP net core are the same as we've seen before so what",
    "start": "3320040",
    "end": "3325839"
  },
  {
    "text": "I'm doing here I'm using um add DB context and I'm setting",
    "start": "3325839",
    "end": "3333640"
  },
  {
    "text": "the options so I can actually inject a context with options into my uh ASP net",
    "start": "3333640",
    "end": "3340720"
  },
  {
    "text": "controllers how many people are using aspnet in general so just so I understand if I say the word controller",
    "start": "3340720",
    "end": "3346160"
  },
  {
    "text": "everyone will understand what I'm talking about okay so for example if you look at my controller you'll see that",
    "start": "3346160",
    "end": "3352440"
  },
  {
    "text": "I'm um asking for a context Star Wars context object it will automatically be",
    "start": "3352440",
    "end": "3357599"
  },
  {
    "text": "injected including the options settings uh that I need it to have and that",
    "start": "3357599",
    "end": "3363520"
  },
  {
    "text": "options is basically saying use SQL server with the following connection string okay now as you can see I have",
    "start": "3363520",
    "end": "3370200"
  },
  {
    "text": "another one here that I'll use shortly which uses um postgress database instead",
    "start": "3370200",
    "end": "3375920"
  },
  {
    "text": "of a SQL Server database okay now um in my",
    "start": "3375920",
    "end": "3383359"
  },
  {
    "text": "controller as you can see doing all the simple stuff such as eager loading okay",
    "start": "3383359",
    "end": "3389440"
  },
  {
    "text": "I have here the option to add stuff here so let me just run this once get the",
    "start": "3389440",
    "end": "3394599"
  },
  {
    "text": "database created hopefully it will work I'll drink a sip of",
    "start": "3394599",
    "end": "3403520"
  },
  {
    "text": "water we should see a list of all the entities that were added to the database",
    "start": "3406640",
    "end": "3411720"
  },
  {
    "text": "basically means Luke Skywalker and Han Solo each with their",
    "start": "3411720",
    "end": "3417160"
  },
  {
    "text": "starship okay so that basically worked um The Starships didn't work because uh",
    "start": "3417160",
    "end": "3423520"
  },
  {
    "text": "when I get all the people I don't want to get all the Starships so if I go to people/ one I should get the Starships",
    "start": "3423520",
    "end": "3430280"
  },
  {
    "text": "okay let me just zoom in a",
    "start": "3430280",
    "end": "3434359"
  },
  {
    "text": "bit okay now um first of all this is as",
    "start": "3436240",
    "end": "3441280"
  },
  {
    "text": "SP net core so I should be able to run it on my Mac we should see it shortly um I just want to show you something about",
    "start": "3441280",
    "end": "3448319"
  },
  {
    "text": "the um the change tracking in Entity framework so let me just open up my",
    "start": "3448319",
    "end": "3453839"
  },
  {
    "text": "feedler so I can post stuff into my",
    "start": "3453839",
    "end": "3458880"
  },
  {
    "text": "service just go here how many people are familiar with",
    "start": "3458960",
    "end": "3465000"
  },
  {
    "text": "fidler fidler okay anyone been to my fidler session in",
    "start": "3465000",
    "end": "3471039"
  },
  {
    "text": "NDC in 2012 no okay um let me just refresh that okay",
    "start": "3471039",
    "end": "3480599"
  },
  {
    "text": "here it is composer want to do a",
    "start": "3480599",
    "end": "3486079"
  },
  {
    "text": "post content type okay um I'll show this demo in um",
    "start": "3486079",
    "end": "3493640"
  },
  {
    "text": "the co platform one because we we do need to wrap up",
    "start": "3493640",
    "end": "3499520"
  },
  {
    "text": "things okay I'm going to add Chewbacca are you familiar with Chewbacca yeah okay um so first let's use the people Ed",
    "start": "3499520",
    "end": "3509839"
  },
  {
    "text": "person now this person has a Starship alongside it so it's going to add a",
    "start": "3509839",
    "end": "3515280"
  },
  {
    "text": "Starship but that Starship already exists okay um so let's see what",
    "start": "3515280",
    "end": "3522359"
  },
  {
    "text": "happens and we get a for four of course because it's without this one okay we get a 400 which means it's",
    "start": "3522359",
    "end": "3530119"
  },
  {
    "text": "my fault and if I check the Json content basically it says canot not insert",
    "start": "3530119",
    "end": "3535680"
  },
  {
    "text": "explicit value for identity column in Starship I can't add a Starship with an existing identity uh that it has so",
    "start": "3535680",
    "end": "3543760"
  },
  {
    "text": "probably add isn't the correct method to use uh because basically it says so in",
    "start": "3543760",
    "end": "3548880"
  },
  {
    "text": "the comment Ed assumes all the entities are new and it tries to edit using the",
    "start": "3548880",
    "end": "3554119"
  },
  {
    "text": "existing ID that I um I got from the database before then so let's try",
    "start": "3554119",
    "end": "3559880"
  },
  {
    "text": "attach okay um let's do this and this is a call so I don't need to compile again",
    "start": "3559880",
    "end": "3566720"
  },
  {
    "text": "it actually compiles it just now that's why it's taking some",
    "start": "3566720",
    "end": "3572240"
  },
  {
    "text": "time and come",
    "start": "3572839",
    "end": "3576920"
  },
  {
    "text": "on takes a bit more to compile come",
    "start": "3579359",
    "end": "3587000"
  },
  {
    "text": "on seriously we need to wrap up things come on",
    "start": "3589520",
    "end": "3595640"
  },
  {
    "text": "let's reply okay so it might have flown somewhere because I didn't use yeah I",
    "start": "3595640",
    "end": "3602160"
  },
  {
    "text": "have try catch you okay basically let me just tell you what will happen nothing will happen uh because when you use",
    "start": "3602160",
    "end": "3608440"
  },
  {
    "text": "attach nothing not in the sense that it will get stuck like now nothing the sense that it just won't add anything to",
    "start": "3608440",
    "end": "3614480"
  },
  {
    "text": "the database because using attach attaches the identity is unmodified so if you use unmodified and you call save",
    "start": "3614480",
    "end": "3622119"
  },
  {
    "text": "it looks at the object and says well it's unmodified won't save it so nothing will be added um let me just show you",
    "start": "3622119",
    "end": "3628839"
  },
  {
    "text": "what I need to do so first of all um using the state anyone used the um entry",
    "start": "3628839",
    "end": "3634359"
  },
  {
    "text": "option in ef6 yeah okay so there is a bit of difference in ef6 and ef7 in ef6",
    "start": "3634359",
    "end": "3640799"
  },
  {
    "text": "when I use entry for a top level entity which has references uh in ef6 it will",
    "start": "3640799",
    "end": "3646880"
  },
  {
    "text": "also set the state for its child entities its related entities in ef7 it",
    "start": "3646880",
    "end": "3652559"
  },
  {
    "text": "won't it will only set the the state it will only attach this single entity so",
    "start": "3652559",
    "end": "3658440"
  },
  {
    "text": "if I do added what it basically will do it will add chwaka but it won't update",
    "start": "3658440",
    "end": "3663880"
  },
  {
    "text": "the Starship okay the actual way of doing uh what I want to do add chwaca",
    "start": "3663880",
    "end": "3669640"
  },
  {
    "text": "and change the ownership of the Starship to chwaca that will require me to iterate the object graph myself but",
    "start": "3669640",
    "end": "3676359"
  },
  {
    "text": "instead of iterating the graph and setting each uh um state for each entity",
    "start": "3676359",
    "end": "3681720"
  },
  {
    "text": "I can ask ef7 to use the change tracker API and just",
    "start": "3681720",
    "end": "3690280"
  },
  {
    "text": "create a call back that will receive each and every one of the nodes in the graph and you allow me to investigate",
    "start": "3690280",
    "end": "3696920"
  },
  {
    "text": "that node in order to um to specify what type of State I want for that node so I",
    "start": "3696920",
    "end": "3703599"
  },
  {
    "text": "can add my own logic and say that if it's a Starship and it has an ID then it's modified if it doesn't have an ID",
    "start": "3703599",
    "end": "3711119"
  },
  {
    "text": "then it was added and if it's not a Starship then it was probably added because it's that person okay so for",
    "start": "3711119",
    "end": "3717599"
  },
  {
    "text": "each type of of insert that I want into database if I'm posting a new person or I'm posting in Starship I can change the",
    "start": "3717599",
    "end": "3724839"
  },
  {
    "text": "logic of how to attach things into the entity graph okay so this is the actual",
    "start": "3724839",
    "end": "3730160"
  },
  {
    "text": "way to do that and oh finally I got the error um I can save now and try to run",
    "start": "3730160",
    "end": "3736160"
  },
  {
    "text": "it again but it will work you can try that code later on just want to um show you how to use that in um Mac and let me",
    "start": "3736160",
    "end": "3745279"
  },
  {
    "text": "just go to my Mac and",
    "start": "3745279",
    "end": "3753160"
  },
  {
    "text": "platforms okay so when you use a command line I need to",
    "start": "3753160",
    "end": "3758760"
  },
  {
    "text": "use net let's restore packages now um of course I need to tell",
    "start": "3758760",
    "end": "3767359"
  },
  {
    "text": "tell entity F which database to connect to so let me just verify which database I'm connecting to",
    "start": "3767359",
    "end": "3773359"
  },
  {
    "text": "here um this one so I'm connecting to a specific IP okay so basically my Mac",
    "start": "3773359",
    "end": "3781000"
  },
  {
    "text": "will go to the SQL Server that is installed on my Windows machine it's a virtual machine that I have on my Mac um",
    "start": "3781000",
    "end": "3788680"
  },
  {
    "text": "so it restored all the packages net",
    "start": "3788680",
    "end": "3794318"
  },
  {
    "text": "run okay it's hosted let me go to Local Host 5,000 on",
    "start": "3796640",
    "end": "3802960"
  },
  {
    "text": "my Mac API people",
    "start": "3802960",
    "end": "3811920"
  },
  {
    "text": "one and it works it's actually connecting for my Mac to my PC and if I",
    "start": "3812039",
    "end": "3818520"
  },
  {
    "text": "let's see if Chewbacca was already added I don't think it was",
    "start": "3818520",
    "end": "3823240"
  },
  {
    "text": "added okay because the attach didn't work before um now of course as I showed",
    "start": "3823799",
    "end": "3830400"
  },
  {
    "text": "before just switch here I can also use other database providers for example I",
    "start": "3830400",
    "end": "3835640"
  },
  {
    "text": "can install the um the postgress nuget package and use postgress instead of that and that can actually also run on a",
    "start": "3835640",
    "end": "3843079"
  },
  {
    "text": "database on my Mac I don't need to have an SQL server for that so if I for",
    "start": "3843079",
    "end": "3848400"
  },
  {
    "text": "example go to my um uh postgress admin on my Mac and I",
    "start": "3848400",
    "end": "3854160"
  },
  {
    "text": "use that provider you will see the database being created on my Mac so the provider also knows how to use postest",
    "start": "3854160",
    "end": "3860039"
  },
  {
    "text": "databases whether they're on Windows or Mac or Linux wherever okay okay I see",
    "start": "3860039",
    "end": "3866000"
  },
  {
    "text": "that no one is excited by the fact that entity Forks works on a Mac okay so I just want to um um just",
    "start": "3866000",
    "end": "3875240"
  },
  {
    "text": "two minutes about what's going to happen with Entity framework 7 so first of all there is a backlog that still needs to",
    "start": "3875240",
    "end": "3881680"
  },
  {
    "text": "be fixed for version one so for example there still isn't lazy load in Entity",
    "start": "3881680",
    "end": "3887279"
  },
  {
    "text": "framework core which I mean come on how am I supposed to walk without an a lazy",
    "start": "3887279",
    "end": "3893119"
  },
  {
    "text": "load or I'm going to pulled the enti tities on my own okay so this has to be fixed um there isn't support for St",
    "start": "3893119",
    "end": "3900359"
  },
  {
    "text": "procedure mapping yet uh there isn't any support for data seeding yet but those will be get fixed there is something",
    "start": "3900359",
    "end": "3907599"
  },
  {
    "text": "really silly about EF C that hasn't been fixed yet um if you have a many to many",
    "start": "3907599",
    "end": "3912799"
  },
  {
    "text": "relationship today with efco you actually need to create a relation entity so for example if I had multiple",
    "start": "3912799",
    "end": "3919920"
  },
  {
    "text": "Starships per person and that Starship can belong to different people many to many I should have added an entity not a",
    "start": "3919920",
    "end": "3926960"
  },
  {
    "text": "table an entity for a person to Starship object okay that would have generated a",
    "start": "3926960",
    "end": "3934359"
  },
  {
    "text": "person to Starship table okay so basically I don't have many too many I just have two one to many relationships",
    "start": "3934359",
    "end": "3942240"
  },
  {
    "text": "okay to to to twwo okay uh so this needs to be fixed so we can actually map end",
    "start": "3942240",
    "end": "3949000"
  },
  {
    "text": "to end relationships in the database uh of course they will also support uh inheritance mapping other than the the",
    "start": "3949000",
    "end": "3955599"
  },
  {
    "text": "uh table per hierarchy okay in E6 we have table per type and table per concrete type this hasn't been",
    "start": "3955599",
    "end": "3961279"
  },
  {
    "text": "implemented in F6 in EF core and of course command interception which we now have in ef6 still doesn't exist in EF",
    "start": "3961279",
    "end": "3968680"
  },
  {
    "text": "core so as you can see it's still not an entirely ef6 equivalent solution in E",
    "start": "3968680",
    "end": "3977079"
  },
  {
    "text": "core okay so in progress for version one back fixing of course performance improvements documentation which is",
    "start": "3977079",
    "end": "3983440"
  },
  {
    "text": "lacking um and just to sum things up uh what was thrown out as I mentioned before there",
    "start": "3983440",
    "end": "3989480"
  },
  {
    "text": "is no EDM mix support anymore um if you use entity SQL that Dynamic SQL um like",
    "start": "3989480",
    "end": "3995640"
  },
  {
    "text": "statements that also out and of course object context API is",
    "start": "3995640",
    "end": "4001359"
  },
  {
    "text": "gone God bless them um so relation",
    "start": "4001359",
    "end": "4006400"
  },
  {
    "text": "between EF core and ef6 Eco is still the right way to go for",
    "start": "4006400",
    "end": "4013000"
  },
  {
    "text": "new projects unless of course you need some specific stuff from ef7 like the uh",
    "start": "4013000",
    "end": "4018640"
  },
  {
    "text": "the support for net core and such uh as you seen some features are still missing",
    "start": "4018640",
    "end": "4024760"
  },
  {
    "text": "okay um some code is still not mature enough not all the link support has been added um but you know it's on its way",
    "start": "4024760",
    "end": "4033640"
  },
  {
    "text": "okay so moving from ef6 to E4 it's not just upgrading the Nu package is it it's an entirely new um um new engine it has",
    "start": "4033640",
    "end": "4042920"
  },
  {
    "text": "different behaviors like the change tracking that I explained before uh like the conventions for pluralization and",
    "start": "4042920",
    "end": "4049520"
  },
  {
    "text": "such okay so beware of those changes test your code if you're going to just",
    "start": "4049520",
    "end": "4054839"
  },
  {
    "text": "update it to Entity framework 7 no um so if you want to use Entity framework 7 if",
    "start": "4054839",
    "end": "4060200"
  },
  {
    "text": "it's something simple like something that just need to edit a table okay a simple web API uh sort of stuff then you",
    "start": "4060200",
    "end": "4067599"
  },
  {
    "text": "can use Entity framework or no problem with that um stuff will still work in the RTM they're they aren't going to to",
    "start": "4067599",
    "end": "4074079"
  },
  {
    "text": "be that many changes but if you are targeting at net core ASP net core the",
    "start": "4074079",
    "end": "4079760"
  },
  {
    "text": "universal uh um Windows platform or whatever it's called I'm not a client",
    "start": "4079760",
    "end": "4085400"
  },
  {
    "text": "person so I don't know what it's called actually uh if you're aiming at zarine okay if you're aiming at any of those",
    "start": "4085400",
    "end": "4090880"
  },
  {
    "text": "different types of Frameworks are not the full doet Frameworks then EF core is the only way for you right now okay so",
    "start": "4090880",
    "end": "4098640"
  },
  {
    "text": "just go ahead and pray for the gods that they won't change everything in V1",
    "start": "4098640",
    "end": "4105838"
  },
  {
    "text": "so um where do you go from here aside from your next session um there is a link to the documentation here and at",
    "start": "4105920",
    "end": "4113600"
  },
  {
    "text": "the bottom you can see the link to my demos you can go on ahead and check I skipped two demos that show two features",
    "start": "4113600",
    "end": "4120560"
  },
  {
    "text": "are called Shadow properties and Alternate Keys you can see those in the platform demo um basically Shadow",
    "start": "4120560",
    "end": "4127920"
  },
  {
    "text": "properties is using properties that um are not in the entity table uh not in",
    "start": "4127920",
    "end": "4134278"
  },
  {
    "text": "the entity object but are in the table itself okay so you can pull data from the table but not showing in the object",
    "start": "4134279",
    "end": "4140719"
  },
  {
    "text": "and Alternate Keys is just adding new um unique indexes into the table uh by",
    "start": "4140719",
    "end": "4146199"
  },
  {
    "text": "saying so for example the name of the person is also a unique key okay so it's",
    "start": "4146199",
    "end": "4151920"
  },
  {
    "text": "an alternative key um and that's it enjoy the rest of the conference if there are any questions I'm",
    "start": "4151920",
    "end": "4158568"
  },
  {
    "text": "[Applause] here thank you",
    "start": "4158569",
    "end": "4165718"
  },
  {
    "text": "you",
    "start": "4192719",
    "end": "4195719"
  }
]