[
  {
    "text": "okay um welcome everyone uh thanks for jumping in I know it's the last session of the day which is always a tough one",
    "start": "11559",
    "end": "17520"
  },
  {
    "text": "to stay awake during um hopefully the content's pretty interesting though um and it's related to something called",
    "start": "17520",
    "end": "24240"
  },
  {
    "text": "command lines spoofing um and and really the question is can we trust the process creation logs in Windows",
    "start": "24240",
    "end": "30480"
  },
  {
    "text": "and the short answer is not really um but sometimes you can sometimes you can't and it's it is difficult to",
    "start": "30480",
    "end": "36079"
  },
  {
    "text": "determine under which circumstances logs are true and which ones have been tampered",
    "start": "36079",
    "end": "41200"
  },
  {
    "text": "with um my name is Tristan Benner I work at a company called seamless intelligence which I actually co-founded",
    "start": "41200",
    "end": "47480"
  },
  {
    "text": "about 8 years ago and we operate out of Perth Western Australia um so I flew across on Monday it was 44 degrees in",
    "start": "47480",
    "end": "54320"
  },
  {
    "text": "Perth when I flew across um Celsius and then hit Oslo and it was bit B chiler um",
    "start": "54320",
    "end": "61280"
  },
  {
    "text": "but yeah it's really nice here um we run a sock we do one thing we do security operations and we attempted to do one",
    "start": "61280",
    "end": "68759"
  },
  {
    "text": "thing and do it really well um and so I'm head up the research team and so",
    "start": "68759",
    "end": "73840"
  },
  {
    "text": "we're looking for new attacker techniques um new tools to play with GitHub repositories that have code for",
    "start": "73840",
    "end": "79880"
  },
  {
    "text": "us to go and play with those sorts of things throughout all of this testing our main goal is to be able to",
    "start": "79880",
    "end": "85200"
  },
  {
    "text": "understand and then detect um whatever we have looked at um new techniques um and we've actually had bug bounties from",
    "start": "85200",
    "end": "91439"
  },
  {
    "text": "crowd strike and from Microsoft for finding various things that um get around either their tools or or Break",
    "start": "91439",
    "end": "97479"
  },
  {
    "text": "Stuff in Windows um that we've been assigned bug bounties for and we've got three uh attributions into the miter",
    "start": "97479",
    "end": "104280"
  },
  {
    "text": "attack framework which is pretty cool um and it's a really good um uh sort of",
    "start": "104280",
    "end": "109719"
  },
  {
    "text": "framework to assign things to um within the sort of techniques that attackers",
    "start": "109719",
    "end": "116799"
  },
  {
    "text": "use what we're talking about though is actually GitHub repository that's probably 4 years old now this",
    "start": "116799",
    "end": "122560"
  },
  {
    "text": "technique's not brand new which is part of the reason why it's so disappointing with the results we'll get at the end um",
    "start": "122560",
    "end": "129879"
  },
  {
    "text": "and it came across because it's it's a tool that can make our lives when we're",
    "start": "129879",
    "end": "135000"
  },
  {
    "text": "looking at logs very difficult um and you'll see why so we started to look into it we compiled it we ran it um it",
    "start": "135000",
    "end": "140920"
  },
  {
    "text": "does what it says it does um and it makes it very very difficult for our sock analysts to understand if it's used",
    "start": "140920",
    "end": "147239"
  },
  {
    "text": "uh exactly the commands that are run um so what it is it is a novel uh",
    "start": "147239",
    "end": "153519"
  },
  {
    "text": "technique to go and alter the logs in Windows without having any sort of special permissions um and what it leads",
    "start": "153519",
    "end": "159360"
  },
  {
    "text": "to and what it can lead to is an incorrect assessment on what has happened in an environment because you",
    "start": "159360",
    "end": "164560"
  },
  {
    "text": "don't actually know uh what an attacker has run because you can't see the actual uh command line that was truly run you",
    "start": "164560",
    "end": "171319"
  },
  {
    "text": "only see uh the portion of the attacker wants you to see not what was run um and so the really difficult thing for us is",
    "start": "171319",
    "end": "178440"
  },
  {
    "text": "when this gets paired up with brand brand new techniques and tools that hide this it's very difficult to work back um",
    "start": "178440",
    "end": "184560"
  },
  {
    "text": "to understand exactly what happened what it's not though is it's not any sort of privilege escalation",
    "start": "184560",
    "end": "191040"
  },
  {
    "text": "technique um if you need a command uh to be run that requires local admin privilege you'll need that privilege",
    "start": "191040",
    "end": "197560"
  },
  {
    "text": "within your session you don't just magically get it through this tool it doesn't hide all types of commands um",
    "start": "197560",
    "end": "203480"
  },
  {
    "text": "which is a benefit for us um and it doesn't stop software like EDR like your antivirus from looking at what the",
    "start": "203480",
    "end": "210000"
  },
  {
    "text": "command is trying to do or if it's interacting with memory or other processes it doesn't stop EDR seeing",
    "start": "210000",
    "end": "217519"
  },
  {
    "text": "that so our process creation very simple one at the top which is just us telling",
    "start": "217519",
    "end": "222840"
  },
  {
    "text": "Powershell to run this Bas 64 encoded command uh and all it is is a who am I all uh which lists out my uh domain user",
    "start": "222840",
    "end": "230920"
  },
  {
    "text": "account uh it lists all of my groups and it lists the privileges in the current session um and attackers do run this or",
    "start": "230920",
    "end": "237319"
  },
  {
    "text": "their scripts do run it at the start um cuz we can get all of our domain uh group memberships we can see I'm a",
    "start": "237319",
    "end": "243120"
  },
  {
    "text": "domain admin um but we can also see that I'm running in a low privilege or a normal user um mandatory label which",
    "start": "243120",
    "end": "250280"
  },
  {
    "text": "medium there means I'm just a normal user these privileges are quite interesting to an attacker as well um",
    "start": "250280",
    "end": "256479"
  },
  {
    "text": "there's a couple of notorious ones within windows that allow you quite a high level of privilege regardless of",
    "start": "256479",
    "end": "261959"
  },
  {
    "text": "your um groups that you're a member of um and so these commands are quite common they're also quite common to be",
    "start": "261959",
    "end": "267440"
  },
  {
    "text": "packaged up just running with power shell as an encoded command cuz it's that level of obfuscation um and every",
    "start": "267440",
    "end": "274120"
  },
  {
    "text": "layer they they add they seem to think helps and helps and helps when that's kind of suspect on its own a normal user",
    "start": "274120",
    "end": "279680"
  },
  {
    "text": "running an encoded command um generally when people start an argument with the dictionary",
    "start": "279680",
    "end": "286039"
  },
  {
    "text": "definition of something I sort of turn off if if that's what you're relying on then um then you don't have much else",
    "start": "286039",
    "end": "292520"
  },
  {
    "text": "but it's really important in this case because I was under the assumption before all of this that this is what",
    "start": "292520",
    "end": "298240"
  },
  {
    "text": "Windows runs this this that I get this process creation log is what Windows runs that's simply not the case it is",
    "start": "298240",
    "end": "304759"
  },
  {
    "text": "just the process being created it doesn't even need to start there's a there's a structure which will go into",
    "start": "304759",
    "end": "310680"
  },
  {
    "text": "which says I've created a process that's what gets logged at windows and so it being a process",
    "start": "310680",
    "end": "316000"
  },
  {
    "text": "creation is actually quite important there is no logs in Windows for what runs um as far as command lined um",
    "start": "316000",
    "end": "323080"
  },
  {
    "text": "running running programs um this here is the XML for a",
    "start": "323080",
    "end": "329360"
  },
  {
    "text": "command process creation log um up the top here in this is timestamps another important",
    "start": "329360",
    "end": "335880"
  },
  {
    "text": "information for us but it's stuff I've just carved out of all the examples um and what we're left with is the good",
    "start": "335880",
    "end": "341120"
  },
  {
    "text": "stuff here where we can see our command line um we can see the parent process and those sorts of things in there so we",
    "start": "341120",
    "end": "346960"
  },
  {
    "text": "can often follow the stream of what's happened in a set of commands by looking just at a process creation log which has",
    "start": "346960",
    "end": "353199"
  },
  {
    "text": "all of this uh including the user it also shows here the mandatory label",
    "start": "353199",
    "end": "358560"
  },
  {
    "text": "which Windows Mar Microsoft do not have any sort of consistency across any of their products you'll see here it's a",
    "start": "358560",
    "end": "365440"
  },
  {
    "text": "it's a numeric in cismon see later on it says high medium or system which is far far",
    "start": "365440",
    "end": "371960"
  },
  {
    "text": "better um but the command line is really cool so when we see something that's executed via command that then goes and",
    "start": "371960",
    "end": "379039"
  },
  {
    "text": "calls power sh the Bas 64 command or whatever arguments they there we can go and pull those out and we can do things",
    "start": "379039",
    "end": "384840"
  },
  {
    "text": "like just Bas 64 decode this really quickly to go and see what's happening",
    "start": "384840",
    "end": "390479"
  },
  {
    "text": "uh if you're using something like uh Sentinel or Defender which has uh kql or something like Splunk you can do a lot",
    "start": "390479",
    "end": "397000"
  },
  {
    "text": "more manipulation to your logs when you're looking at them and so this kql here actually grabs this Bas 64 portion",
    "start": "397000",
    "end": "404400"
  },
  {
    "text": "of the command line decodes it and then shows us that in one simple search so",
    "start": "404400",
    "end": "409840"
  },
  {
    "text": "this for our analysts is is pretty gold because we can just show them immediately what the base 64 decoded",
    "start": "409840",
    "end": "416479"
  },
  {
    "text": "command is within Powershell and show it to them in one simple",
    "start": "416479",
    "end": "421520"
  },
  {
    "text": "search this is a cismon log um so evid one in cismon Land is Our process",
    "start": "421919",
    "end": "428039"
  },
  {
    "text": "creation and it's almost identical to a process creation log natively in Windows",
    "start": "428039",
    "end": "433240"
  },
  {
    "text": "which the other ones were uh we just get a heat more information like we get the hash of the executable that was run um",
    "start": "433240",
    "end": "439879"
  },
  {
    "text": "and here we get Integrity level and we get the human readable so this was run uh as a medium which is a normal user",
    "start": "439879",
    "end": "446319"
  },
  {
    "text": "not not admin um we also get things like original file name um which descriptions",
    "start": "446319",
    "end": "451800"
  },
  {
    "text": "and products which can often have the author's name so MIM cats which is a credential stealing tool that's been",
    "start": "451800",
    "end": "457960"
  },
  {
    "text": "around for the best part of a decade we so often see attackers will change the",
    "start": "457960",
    "end": "463720"
  },
  {
    "text": "XE name but the original file name stays the same and so does all the metad data on the descriptions um and so those can",
    "start": "463720",
    "end": "469560"
  },
  {
    "text": "still be used outside of this technique to to um help detect",
    "start": "469560",
    "end": "475440"
  },
  {
    "text": "things this is the process creation uh which is a device process so if your organizations are running uh",
    "start": "475440",
    "end": "481759"
  },
  {
    "text": "Defender xdr that actually produces logs as well these go up into the um advanc",
    "start": "481759",
    "end": "487840"
  },
  {
    "text": "hunting you can look through them there with kql and you can put those into Sentinel um and they look like this so",
    "start": "487840",
    "end": "493440"
  },
  {
    "text": "slightly different they have a lot more information um about the event such as if I idpd onto a server and then ran the",
    "start": "493440",
    "end": "500479"
  },
  {
    "text": "command it would have my original workstation IP and so you could track that back in one log which is really",
    "start": "500479",
    "end": "505759"
  },
  {
    "text": "cool but unfortunately all of them suffer from this technique and so ultimately this this process command",
    "start": "505759",
    "end": "512240"
  },
  {
    "text": "line can't be trusted when it's when it's um spoofed in the way that we'll",
    "start": "512240",
    "end": "517640"
  },
  {
    "text": "show um they're good they're good for lots of things so within windows they're our primary log for detections uh",
    "start": "517640",
    "end": "524640"
  },
  {
    "text": "authentication stuff is all well and good for brute forcing and some initial access um but really an authentication",
    "start": "524640",
    "end": "530519"
  },
  {
    "text": "log doesn't have much context on it within within a Windows domain environment you succeed you pass you're",
    "start": "530519",
    "end": "535640"
  },
  {
    "text": "generally still on the internal Network you may be from a VPN but it doesn't tell us a whole lot was when you go and",
    "start": "535640",
    "end": "542279"
  },
  {
    "text": "start running things and Performing actions that's where we start to see Powershell command logs we start to see",
    "start": "542279",
    "end": "548680"
  },
  {
    "text": "what someone is doing um and it's it's it's a lot the detections there are are",
    "start": "548680",
    "end": "554079"
  },
  {
    "text": "much higher confidence than simply being able to log in to a server now brute forcing password spray and those things",
    "start": "554079",
    "end": "560200"
  },
  {
    "text": "are completely different they're great indicators but one user logging into a server as a one-off um is not is not the",
    "start": "560200",
    "end": "566720"
  },
  {
    "text": "greatest of indicators to called rubius This is a it",
    "start": "566720",
    "end": "572560"
  },
  {
    "text": "interacts with keros it's the Swiss army knife of abusing keros in Windows um and what we often find is attackers will go",
    "start": "572560",
    "end": "579240"
  },
  {
    "text": "and change executable names cuz that's easy they may change metadata and recompile um but we've just seen time",
    "start": "579240",
    "end": "586320"
  },
  {
    "text": "and time again that if there's a releases page on GitHub they'll grab that XE and run it they may even pull it",
    "start": "586320",
    "end": "591519"
  },
  {
    "text": "down with po Shield directly from GitHub and then we have this command line argument cerb roast which will go off",
    "start": "591519",
    "end": "598040"
  },
  {
    "text": "and cerb roastings are pretty cool attack that's still relevant once again it's probably a best part of a decade",
    "start": "598040",
    "end": "603279"
  },
  {
    "text": "old where if an account in a domain has a service principle name and we're a domain user we can basically get the",
    "start": "603279",
    "end": "610240"
  },
  {
    "text": "password hash um it's as simple as that if the password is quite bad root force that you've got the hash for a service",
    "start": "610240",
    "end": "616760"
  },
  {
    "text": "account or something like that so we see ker roosting used a lot um but this is where it becomes",
    "start": "616760",
    "end": "623720"
  },
  {
    "text": "really useful the amount of information that um generally attack tools allow to",
    "start": "623720",
    "end": "629600"
  },
  {
    "text": "put on the command line in the form of parameters is huge um and so this is still rubious I just changed it to",
    "start": "629600",
    "end": "635760"
  },
  {
    "text": "nobius so if we had a detection just looking for rubius on the command line which we do as insurance because we'd",
    "start": "635760",
    "end": "641920"
  },
  {
    "text": "look like idiots if we missed it um it won't fire so what we do is we test and",
    "start": "641920",
    "end": "648120"
  },
  {
    "text": "we go and say this is uh this is going to abuse a silver ticket in Kerberos and it's going to give me hopefully when I",
    "start": "648120",
    "end": "655240"
  },
  {
    "text": "run it um admin access using the built-in administrator account on a server um so that user of t-boss has a",
    "start": "655240",
    "end": "662920"
  },
  {
    "text": "certain level of privileges we run this command and we use this flag here PT to",
    "start": "662920",
    "end": "668440"
  },
  {
    "text": "pass a token into the current session we can then use it so all of these are really good indicators because they're",
    "start": "668440",
    "end": "675519"
  },
  {
    "text": "not command line parameters that are normal uh and seen a lot from normal users and even admins and then what you",
    "start": "675519",
    "end": "682680"
  },
  {
    "text": "can do in cental is something like all right well I'll list out silver uh cred user curb encryption type and then I'll",
    "start": "682680",
    "end": "690680"
  },
  {
    "text": "say if I see three of them on a command line let me know about it at a at a quite high priority so we can get a lot",
    "start": "690680",
    "end": "696079"
  },
  {
    "text": "of information about attack tools from what's on the command line the other thing we have going for us is there's",
    "start": "696079",
    "end": "702760"
  },
  {
    "text": "really only one way to execute po shell remotely using PS remoting um but there are many ways to execute things via",
    "start": "702760",
    "end": "709519"
  },
  {
    "text": "command so very often we'll see Powershell packaged up and run via command which means we get all of these",
    "start": "709519",
    "end": "715920"
  },
  {
    "text": "logs or not if we use command l boofing so the process creation itself starts",
    "start": "715920",
    "end": "723079"
  },
  {
    "text": "with the process environment block um I wish everything in computers actually",
    "start": "723079",
    "end": "728240"
  },
  {
    "text": "look like all of this uh but the process environment block and being a Dev conference this might look better that's",
    "start": "728240",
    "end": "734519"
  },
  {
    "text": "what it looks like so this is the structure that Windows builds whenever you go and um execute anything in",
    "start": "734519",
    "end": "741000"
  },
  {
    "text": "command you open windal it will create one of these um the important things to",
    "start": "741000",
    "end": "746320"
  },
  {
    "text": "note and it's really only the first one the rest born off that is that it's a user mode structure so the user that",
    "start": "746320",
    "end": "752680"
  },
  {
    "text": "executes the process can then write those memory locations there's no restrictions on that once again it",
    "start": "752680",
    "end": "758560"
  },
  {
    "text": "doesn't give you any prives but it means any user on a Windows system can do this and play with security logs basically",
    "start": "758560",
    "end": "765959"
  },
  {
    "text": "which previous to this technique were only accessible if you had local admin the memory locations can be overwritten",
    "start": "765959",
    "end": "772480"
  },
  {
    "text": "directly and it's the contents are initialized by The Entity create user",
    "start": "772480",
    "end": "778040"
  },
  {
    "text": "process so it's all in user there's no kernel there's no nothing there uh it's all in",
    "start": "778040",
    "end": "783920"
  },
  {
    "text": "usland and what it boils down to this is the um source code for the original command line spoofer is that we will",
    "start": "784519",
    "end": "791880"
  },
  {
    "text": "package our pay malicious command for that one it's a PO shell Empire Beacon",
    "start": "791880",
    "end": "797199"
  },
  {
    "text": "um and that's all we need to get a C2 link back to our Command and control server to then go and um execute",
    "start": "797199",
    "end": "803040"
  },
  {
    "text": "whatever we want in that user context and so that's all it is really",
    "start": "803040",
    "end": "808399"
  },
  {
    "text": "um and then what we do is we have our spoofed Command and you'll notice here we just take the malicious command",
    "start": "808399",
    "end": "814519"
  },
  {
    "text": "command's length sorry and we just Pat it with spaces so this spoof command must be shorter initially than your",
    "start": "814519",
    "end": "820600"
  },
  {
    "text": "malicious command and we're just going to pad it out the reason that it gets padded is within that process",
    "start": "820600",
    "end": "825839"
  },
  {
    "text": "environment block when we set the memory for it we can't then change that whatever we overwrite it with has to be",
    "start": "825839",
    "end": "832040"
  },
  {
    "text": "exactly the same size which is why we need to do this padding which I thought was going to be an awesome detection",
    "start": "832040",
    "end": "838040"
  },
  {
    "text": "Avenue it turned out wasn't um so then in Windows we can create processes",
    "start": "838040",
    "end": "844480"
  },
  {
    "text": "suspended now I I don't know why and I don't know how prevalent this is because",
    "start": "844480",
    "end": "850519"
  },
  {
    "text": "it's not logged and I I can't tell but I don't know why this would be used over",
    "start": "850519",
    "end": "856720"
  },
  {
    "text": "suspending it within code this is W this is telling Windows start my process but",
    "start": "856720",
    "end": "862000"
  },
  {
    "text": "don't start it just create it um and so I I just don't know the legitimate use for doing it at the OS level versus",
    "start": "862000",
    "end": "868519"
  },
  {
    "text": "doing it within code there must be a reason probably being Microsoft backwards compatibility Legacy something",
    "start": "868519",
    "end": "874959"
  },
  {
    "text": "but it is there so this gets created suspended and we'll see here what it",
    "start": "874959",
    "end": "880040"
  },
  {
    "text": "looks like when we run I added a few break points in the code just to see if I could see in Windows any logs that",
    "start": "880040",
    "end": "888000"
  },
  {
    "text": "would allow me to see the malicious command and and there wasn't for um for",
    "start": "888000",
    "end": "893079"
  },
  {
    "text": "many of these uh examples so that was it running the who am I we can hide that Powershell all of",
    "start": "893079",
    "end": "899519"
  },
  {
    "text": "all of the demos are really simple things but you can hide that PO shell so the user would never see it and all that sort of stuff and so what we can see",
    "start": "899519",
    "end": "906480"
  },
  {
    "text": "here is it's that's the SPO command all the spaces are there um and gets gets",
    "start": "906480",
    "end": "912920"
  },
  {
    "text": "added into the process environment block or process um yeah environment block and then most of the code in command line",
    "start": "912920",
    "end": "918759"
  },
  {
    "text": "spoofer is just looking for memory addresses so we get the process um PID",
    "start": "918759",
    "end": "924000"
  },
  {
    "text": "we go and get its PEB we go and find within the PEB where the command line is specified the memory location and then",
    "start": "924000",
    "end": "930519"
  },
  {
    "text": "we go and overwrite our new command and then we say resume thread and so what",
    "start": "930519",
    "end": "936440"
  },
  {
    "text": "happens is if we look at the execution flow we have process created and it's",
    "start": "936440",
    "end": "941759"
  },
  {
    "text": "suspended with the spoofed command we then read the PEB here and we find the",
    "start": "941759",
    "end": "947079"
  },
  {
    "text": "command line part of the PEB we then write the memory directly and we can see here we overwrite it with",
    "start": "947079",
    "end": "952880"
  },
  {
    "text": "the malicious command and just pop that into the PB and then we just call resume thread and that actually executes what's",
    "start": "952880",
    "end": "960759"
  },
  {
    "text": "in the PB cuz the process doesn't even start here only gets",
    "start": "960759",
    "end": "966360"
  },
  {
    "text": "created so from a logging point of view where I would like it logged is probably",
    "start": "966360",
    "end": "972399"
  },
  {
    "text": "here where Windows logs it is here this is where the problem lies it logs the",
    "start": "972399",
    "end": "978560"
  },
  {
    "text": "spoofed command with all the padded spaces or whatever character you want here but then we change it before it",
    "start": "978560",
    "end": "985680"
  },
  {
    "text": "actually executes it and we don't get a l L there we don't get a log there and",
    "start": "985680",
    "end": "990920"
  },
  {
    "text": "we don't get a log there there's nothing and so really Windows could log",
    "start": "990920",
    "end": "997000"
  },
  {
    "text": "can log what's in the PEB what's in the PEB there in that structure but the process memory looks completely",
    "start": "997000",
    "end": "1002079"
  },
  {
    "text": "different when we execute it but it logs that one whoops it logs that one and not",
    "start": "1002079",
    "end": "1007399"
  },
  {
    "text": "the bottom one and so that's the the whole technique summed up that's what it does and so it's pretty cool because any",
    "start": "1007399",
    "end": "1013639"
  },
  {
    "text": "user can do it and as we'll see there are some commands in windows that are perfect for um using this technique and",
    "start": "1013639",
    "end": "1019040"
  },
  {
    "text": "there are some that are terrible so we're hoping the attackers don't really understand which ones are good and bad they think it will hide",
    "start": "1019040",
    "end": "1025918"
  },
  {
    "text": "everything so when we go and um tell pal shell to run a who am I it's very simple",
    "start": "1025919",
    "end": "1031839"
  },
  {
    "text": "we get thousands thousands of lines in process monitor which is another CIS internals tool and we can see here when",
    "start": "1031839",
    "end": "1038880"
  },
  {
    "text": "I've highlighted it all the spaces are there they're just not really visible um",
    "start": "1038880",
    "end": "1043918"
  },
  {
    "text": "unless you know what you're looking for or they pat it out with a different character and we can see here that",
    "start": "1043919",
    "end": "1049120"
  },
  {
    "text": "further down here Powershell has then gone and created The Who Ami process",
    "start": "1049120",
    "end": "1054600"
  },
  {
    "text": "with the who Ami all out there and so this is an example of a composite command which we'll go into but",
    "start": "1054600",
    "end": "1060360"
  },
  {
    "text": "composite commands are detectable because we're jumping through too many Hoops because we're telling po shell to",
    "start": "1060360",
    "end": "1065640"
  },
  {
    "text": "create another process and that one hasn't been spoofed and so we get the log there um but parent process wise we",
    "start": "1065640",
    "end": "1072559"
  },
  {
    "text": "never see that that was initially executed by an encoded string forced into Power shell",
    "start": "1072559",
    "end": "1080000"
  },
  {
    "text": "so I thought this is easy I will just look for let's say 10 trailing spaces",
    "start": "1080000",
    "end": "1086080"
  },
  {
    "text": "and at least there's a thread to pour on it's not the greatest detection in the world but the vast majority that catch attackers and pentesters aren't the best",
    "start": "1086080",
    "end": "1093159"
  },
  {
    "text": "detections in the world so I thought yep sweet easy um we can see here we get parent we get no other real metadata um",
    "start": "1093159",
    "end": "1100440"
  },
  {
    "text": "so this was all I really had to work on um or we could wait and hope that",
    "start": "1100440",
    "end": "1106240"
  },
  {
    "text": "they do a composite command where we can see Power shell now calling something else and we would",
    "start": "1106240",
    "end": "1111720"
  },
  {
    "text": "have a detection for that um this isn't a great option it's it's still okay",
    "start": "1111720",
    "end": "1116880"
  },
  {
    "text": "there's still all of these detections for weird command lines out of Powershell but as we'll see if we use certain tools then we wouldn't get any",
    "start": "1116880",
    "end": "1124320"
  },
  {
    "text": "detections so I thought yep the spacers this is how I'll get them um that's how it comes in the XML data so I initially",
    "start": "1124320",
    "end": "1132400"
  },
  {
    "text": "thought Windows was truncating the the trailing spaces to save space or something like that from the 80s where",
    "start": "1132400",
    "end": "1139080"
  },
  {
    "text": "every bite counted um but then I actually Googled it looks like and I haven't I haven't delved into XML",
    "start": "1139080",
    "end": "1145120"
  },
  {
    "text": "standards if anyone's an XML Guru let me know I'm pretty sure it's just an XML thing where it just kills off the",
    "start": "1145120",
    "end": "1150480"
  },
  {
    "text": "trailing spaces CU why would they be important um this is probably the only case where they are important um and",
    "start": "1150480",
    "end": "1156360"
  },
  {
    "text": "it's taken away and almost all monitoring platforms from Windows are going to take the XML log out because",
    "start": "1156360",
    "end": "1163080"
  },
  {
    "text": "it's the easiest to process so then we um began looking at",
    "start": "1163080",
    "end": "1168559"
  },
  {
    "text": "what other tools might be using it and this is where cuz it's a 4-year-old repository this is why it came back on",
    "start": "1168559",
    "end": "1173640"
  },
  {
    "text": "our radar um this one multi dump came up we love when um researchers or attackers",
    "start": "1173640",
    "end": "1180400"
  },
  {
    "text": "or pentesters release code to dump Elsas and things that are quite old but still really really useful you can get away",
    "start": "1180400",
    "end": "1185640"
  },
  {
    "text": "with them um and something like a crowd Strike Defender paloalto cortex are going to pretty much kill any attempt to",
    "start": "1185640",
    "end": "1193320"
  },
  {
    "text": "dump LS memory really really quickly and so we love it when it's just it dump it",
    "start": "1193320",
    "end": "1199159"
  },
  {
    "text": "discreetly without triggering Defender alert it's almost never the case what we find is um these guys will test with the",
    "start": "1199159",
    "end": "1206280"
  },
  {
    "text": "home version not the pro version and they are named the same and they couldn't be um they couldn't be more",
    "start": "1206280",
    "end": "1212159"
  },
  {
    "text": "dissimilar the Enterprise version has so much more to it um so we ran all of this and it didn't really work but what",
    "start": "1212159",
    "end": "1218320"
  },
  {
    "text": "piqued our interest was looking at the source code we saw that it created the thread in a suspended State um and we're",
    "start": "1218320",
    "end": "1224840"
  },
  {
    "text": "like we've seen this before um no no window either on this one and then as",
    "start": "1224840",
    "end": "1230880"
  },
  {
    "text": "we're looking further we see dummy arguments that are going to be passed in before it does the real stuff and so",
    "start": "1230880",
    "end": "1237320"
  },
  {
    "text": "what our fear was being a four-year-old technique that most EDR didn't get as she'll say and Microsoft won't fix was",
    "start": "1237320",
    "end": "1244559"
  },
  {
    "text": "that it would become prevalent um our bigger fear is that they coded into to",
    "start": "1244559",
    "end": "1250039"
  },
  {
    "text": "do every command dynamically with this technique so right now I compile executables and run one thing at a time",
    "start": "1250039",
    "end": "1256840"
  },
  {
    "text": "because I'm just looking at it and researching but I think to weaponize this to the next level uh people will",
    "start": "1256840",
    "end": "1262760"
  },
  {
    "text": "either use Powershell or they'll actually dynamically generate their commands into this technique every time",
    "start": "1262760",
    "end": "1269720"
  },
  {
    "text": "so other tools using it they're using in this somewhat static way I'm going to run one command but I'm going to spoof",
    "start": "1269720",
    "end": "1275320"
  },
  {
    "text": "this one here and the big problem with this is apologies for the size but this",
    "start": "1275320",
    "end": "1281760"
  },
  {
    "text": "is what Defender looks like so you get a nice processed tree but you only get this when you get a detection for",
    "start": "1281760",
    "end": "1287880"
  },
  {
    "text": "something and as you'll see on the second run through Defender didn't detect anything so we never got this but",
    "start": "1287880",
    "end": "1294600"
  },
  {
    "text": "you'll also see here if we go back one our dummy command is saying and it's all",
    "start": "1294600",
    "end": "1300320"
  },
  {
    "text": "it's all just trash it's not real it doesn't work it's not a real command but it looks good enough so we're going to optimize startup and who doesn't want an",
    "start": "1300320",
    "end": "1306840"
  },
  {
    "text": "optimize startup an optimize control panel none of it exists but here it is in the defender",
    "start": "1306840",
    "end": "1313799"
  },
  {
    "text": "log and this was the trigger for us to raise this to Microsoft when the security products within their",
    "start": "1313799",
    "end": "1321320"
  },
  {
    "text": "ecosystem excuse me were vulnerable to this technique and giving wrong information in a detection um and so",
    "start": "1321320",
    "end": "1328320"
  },
  {
    "text": "it's all too easy then for an analyst or someone who's potentially looking at too",
    "start": "1328320",
    "end": "1333799"
  },
  {
    "text": "many of these cuz Defenders pretty false positive heavy as are most edrs um to go",
    "start": "1333799",
    "end": "1339000"
  },
  {
    "text": "AR now that that looks fine or where fault the Windows error reporting um",
    "start": "1339000",
    "end": "1345000"
  },
  {
    "text": "process in Windows will dump elsar if a server crashes in a certain way and we have a lot of alerts for were fault",
    "start": "1345000",
    "end": "1351520"
  },
  {
    "text": "dumping Elsas so that's what I would choose to to spoof as and so it gets run",
    "start": "1351520",
    "end": "1357200"
  },
  {
    "text": "here with its uh dummy command and what it's hiding is a really common technique",
    "start": "1357200",
    "end": "1362360"
  },
  {
    "text": "to use this built-in dll to create a mini dump of the Elsas process what",
    "start": "1362360",
    "end": "1367799"
  },
  {
    "text": "Defender reports it did is here and all the logging reports this spoofed command",
    "start": "1367799",
    "end": "1372960"
  },
  {
    "text": "here which can can send an analyst down a rabbit hole or can lead to someone triaging the out as a false positive",
    "start": "1372960",
    "end": "1379600"
  },
  {
    "text": "it's just Defender again it's unknown sign like a lot of it just doesn't add up to being something of a critical",
    "start": "1379600",
    "end": "1386880"
  },
  {
    "text": "severity and defended us throw out uh a fair few low and mediums throughout",
    "start": "1386880",
    "end": "1392039"
  },
  {
    "text": "throughout our customer base so then we went on to do some more testing to see exactly which commands we",
    "start": "1392039",
    "end": "1399120"
  },
  {
    "text": "couldn't see and which ones we could so we've got our composite commands these are where command to",
    "start": "1399120",
    "end": "1406440"
  },
  {
    "text": "Powershell to do something else we got Powershell where it will just be po shell using command LS to run a script",
    "start": "1406440",
    "end": "1412480"
  },
  {
    "text": "just in line so it will never leave Powershell and then we have built-in tools to Windows where command just calls a tool to do something and then",
    "start": "1412480",
    "end": "1419039"
  },
  {
    "text": "doesn't call poell or anything else like that um so then what we decided to do as",
    "start": "1419039",
    "end": "1426000"
  },
  {
    "text": "well just to test our analysts is put something that was legitimate so I've",
    "start": "1426000",
    "end": "1432360"
  },
  {
    "text": "got the advantage I know attackers can't necessarily do this but these are the top command lines for my environment off",
    "start": "1432360",
    "end": "1438200"
  },
  {
    "text": "all my windows workstations um and so if I was going to choose one it's probably",
    "start": "1438200",
    "end": "1443400"
  },
  {
    "text": "going to be cor host which gets generated once every 5 seconds or something but we chose something down",
    "start": "1443400",
    "end": "1449640"
  },
  {
    "text": "here and in fact I think for the demo I even made something up but attack you can just go and get common service",
    "start": "1449640",
    "end": "1455440"
  },
  {
    "text": "command line arguments put those in um or make something up I don't think it's going to make a real big difference um",
    "start": "1455440",
    "end": "1461480"
  },
  {
    "text": "unless it's one of these exactly which I doubt they're going to match and so a composite command we have",
    "start": "1461480",
    "end": "1469159"
  },
  {
    "text": "once again that's just our Who Am why in our uh Bas 64 encoding and I just did some teams",
    "start": "1469159",
    "end": "1476000"
  },
  {
    "text": "update something that you'd like yeah teams is updating again even though it never updates through po shell um and",
    "start": "1476000",
    "end": "1481559"
  },
  {
    "text": "then we just pad it with spaces you can pad with any character um and one thing to note is your malicious and spoof",
    "start": "1481559",
    "end": "1489960"
  },
  {
    "text": "commands sorry your milias and spoof commands have to right now with with the prer",
    "start": "1489960",
    "end": "1496120"
  },
  {
    "text": "concept code have to have the same process name because if you change the command line arguments without changing",
    "start": "1496120",
    "end": "1502240"
  },
  {
    "text": "the proc you won't change the process name it will bug out um but one of our um one of the people we work with who",
    "start": "1502240",
    "end": "1508960"
  },
  {
    "text": "was a um student which I'll go through later is actually looking to be able to change the process completely which if",
    "start": "1508960",
    "end": "1514760"
  },
  {
    "text": "it works so he's coding it in C if it works will be even more dangerous because now we won't even necessarily",
    "start": "1514760",
    "end": "1521000"
  },
  {
    "text": "know what they use so right now if we use Powershell we match it up and I know they' probably used PO shell I don't",
    "start": "1521000",
    "end": "1526799"
  },
  {
    "text": "know exactly what it is but but with his new code we're going to be able to change the process name as well as the",
    "start": "1526799",
    "end": "1531880"
  },
  {
    "text": "command line that's just another layer of annoyance um so for this one as we",
    "start": "1531880",
    "end": "1538120"
  },
  {
    "text": "discussed before because it jumps between and it needs to create a new process at the very end which isn't",
    "start": "1538120",
    "end": "1543600"
  },
  {
    "text": "obfuscated or spoofed we get a command line logging detection we can do it",
    "start": "1543600",
    "end": "1549360"
  },
  {
    "text": "there we can also do it in power shell module logging but we still don't get that initial process Creation with our",
    "start": "1549360",
    "end": "1555840"
  },
  {
    "text": "base 64 string Now command line with all the logging as",
    "start": "1555840",
    "end": "1561000"
  },
  {
    "text": "well this is where it gets really fun so command line logging as we've been looking at has so much detail if it's",
    "start": "1561000",
    "end": "1568240"
  },
  {
    "text": "turned on if it's in a default State that's what it looks like so it's not on",
    "start": "1568240",
    "end": "1575399"
  },
  {
    "text": "by default and this is Microsoft's wording basically if you haven't turned it on you won't get anything and the",
    "start": "1575399",
    "end": "1582200"
  },
  {
    "text": "default to this day is not configured so there are still organizations out there",
    "start": "1582200",
    "end": "1587919"
  },
  {
    "text": "that have process creation logging on without the command line loging component CU it's",
    "start": "1587919",
    "end": "1592960"
  },
  {
    "text": "two settings and so without it we often come in and as soon as we we search for a 4688 or well not an EV one but a",
    "start": "1592960",
    "end": "1601080"
  },
  {
    "text": "4688 if we don't see command line logging we got a we got a visibility Gap and we need to we need to turn that on",
    "start": "1601080",
    "end": "1606799"
  },
  {
    "text": "pretty quickly I can't believe it's still not on by default power shell commands uh these",
    "start": "1606799",
    "end": "1614320"
  },
  {
    "text": "are where we're going to use commandlets so for this example we're going to add an exclusion for xes for all xes on the",
    "start": "1614320",
    "end": "1620840"
  },
  {
    "text": "system um and these MP preference type commandlets are all related to interacting with Windows Defender",
    "start": "1620840",
    "end": "1627159"
  },
  {
    "text": "depending on setup they may not work um but what we found with ransomware gang scripts I'll try all this even if",
    "start": "1627159",
    "end": "1634279"
  },
  {
    "text": "Defender not there they don't they don't care and they don't have time to look at a system and understand exactly the",
    "start": "1634279",
    "end": "1640720"
  },
  {
    "text": "Privileges exactly it are they'll run their script that tries to stop crowd strike silence carbon black and they'll",
    "start": "1640720",
    "end": "1647240"
  },
  {
    "text": "do it all in sequence and you go through and you look at the logs and they're all there in sequence Stop This Server stop this stop this stop this stop this cuz",
    "start": "1647240",
    "end": "1654200"
  },
  {
    "text": "ultimately if they get detected probably wasn't a place they could progress any further and if their script runs without",
    "start": "1654200",
    "end": "1660120"
  },
  {
    "text": "anyone knowing they're probably a good Target and so we do see this all the time on environments without Defender",
    "start": "1660120",
    "end": "1666679"
  },
  {
    "text": "that you'll have set MP pref and try and disable realtime monitoring and you'll have ADD exclusions and folders and",
    "start": "1666679",
    "end": "1672320"
  },
  {
    "text": "things like that and so once again just spoof the teams update type Comm",
    "start": "1672320",
    "end": "1679600"
  },
  {
    "text": "and this is what we get we now get the SPO command only coming off our initial",
    "start": "1679600",
    "end": "1686360"
  },
  {
    "text": "executable and we don't see anything else cuz Powershell never jumps out to",
    "start": "1686360",
    "end": "1691480"
  },
  {
    "text": "create another process that does everything within Powershell so we can't detect the use of",
    "start": "1691480",
    "end": "1698159"
  },
  {
    "text": "these commandlets through process creation or command line logging at all we can with poell module logging um and",
    "start": "1698159",
    "end": "1705760"
  },
  {
    "text": "what poell module logging allows us to do this this is an 800 there are a few different ways to log in Powershell",
    "start": "1705760",
    "end": "1712799"
  },
  {
    "text": "there is module logging which produces an 800 there is script block logging which produces um massive enormous um uh",
    "start": "1712799",
    "end": "1721720"
  },
  {
    "text": "logs but these ones are are a bit better but the really cool thing with the 800s",
    "start": "1721720",
    "end": "1727159"
  },
  {
    "text": "is because Powell is a scripting language it actually will show you exactly what was executed at the end of",
    "start": "1727159",
    "end": "1732399"
  },
  {
    "text": "the chain so if you if you run I'll show one later but if you run an encoded command we'll get the decode command in",
    "start": "1732399",
    "end": "1738840"
  },
  {
    "text": "the logs as well CU that's what Powershell runs it decodes it before running it and so you can see here",
    "start": "1738840",
    "end": "1744159"
  },
  {
    "text": "within the 800 in the module logging we get Powell at MP PR exclusion cool so we",
    "start": "1744159",
    "end": "1749519"
  },
  {
    "text": "can detect it the problem is it's not on by default",
    "start": "1749519",
    "end": "1755080"
  },
  {
    "text": "and it's not even part of Windows security logging it's not part of cismont and you don't get it with Device",
    "start": "1755080",
    "end": "1760279"
  },
  {
    "text": "logs it's a specific set of Powershell logging which is isn't available on",
    "start": "1760279",
    "end": "1765600"
  },
  {
    "text": "Powershell core so we've gone from Power shell having no logging to poell having some amazing logging back to where cores",
    "start": "1765600",
    "end": "1773000"
  },
  {
    "text": "deployed poell having no logging again and so we we were relying on PO shell quite heavily for lots of things and a",
    "start": "1773000",
    "end": "1779960"
  },
  {
    "text": "lot of attack tools now have just gone to net um so yeah even harder to detect but Power shell is not there by",
    "start": "1779960",
    "end": "1787080"
  },
  {
    "text": "default and as I said some of these encoded commands can be really large",
    "start": "1787080",
    "end": "1792640"
  },
  {
    "text": "and I it's completely understandable why people use it to get around syntax errors and things things like that and",
    "start": "1792640",
    "end": "1798799"
  },
  {
    "text": "it it just makes it really nice and easy to use but this command here we would have to grab it put it through b64",
    "start": "1798799",
    "end": "1805600"
  },
  {
    "text": "decoda all that sort of stuff to understand what it was but in an 800 it decodes it cuz that's what it's going to",
    "start": "1805600",
    "end": "1811600"
  },
  {
    "text": "run so this is me I stripped out the Kerber roasting module from the Empire",
    "start": "1811600",
    "end": "1816799"
  },
  {
    "text": "framework cut it down to the lines I needed and I can now uh run this attack",
    "start": "1816799",
    "end": "1821919"
  },
  {
    "text": "against any account that I know has an SPN and I don't trigger any of the current edrs or Defender for ident or",
    "start": "1821919",
    "end": "1828440"
  },
  {
    "text": "anything like that because we're very uh clear in which ticket we want um it doesn't it doesn't uh produce any",
    "start": "1828440",
    "end": "1835080"
  },
  {
    "text": "detections but we can see the full poers shell there if we've got module logging turned on not default",
    "start": "1835080",
    "end": "1841960"
  },
  {
    "text": "though and you need to specify the modules so we star the modules and just say log everything which fortunately is",
    "start": "1841960",
    "end": "1848799"
  },
  {
    "text": "valid so then we have our built-in tools and these are things like the sh for",
    "start": "1848799",
    "end": "1855639"
  },
  {
    "text": "manipulating the Windows Firewall um and there's the he other ones that I've got in a little table in the end but so for",
    "start": "1855639",
    "end": "1861799"
  },
  {
    "text": "this one um we're going to add a firewall rule inbound on Port uh 8338",
    "start": "1861799",
    "end": "1867039"
  },
  {
    "text": "but really for iddp it would be it would be 3389 once again we'll do a bit of a",
    "start": "1867039",
    "end": "1873000"
  },
  {
    "text": "longer um padded out SPO command and once again you'll see I've had to match the X's up",
    "start": "1873000",
    "end": "1879080"
  },
  {
    "text": "but I'm hoping to get around this limitation so you know someone using it sh you wouldn't know what they did but",
    "start": "1879080",
    "end": "1885159"
  },
  {
    "text": "that's if you even discover this and track back as well and that's the other thing with using these buil-in commands",
    "start": "1885159",
    "end": "1890720"
  },
  {
    "text": "you don't see the final result to get a detection anyway and so all we ever see here is",
    "start": "1890720",
    "end": "1897000"
  },
  {
    "text": "teams update register embedding blah blah blah nothing logs the true command here",
    "start": "1897000",
    "end": "1903039"
  },
  {
    "text": "so these are the ones that that sort of are worrying um and there's a lot you can do with built-in Windows commands so",
    "start": "1903039",
    "end": "1909399"
  },
  {
    "text": "process creation we don't get it command line doesn't do anything and this never hits poers shell so running these sorts",
    "start": "1909399",
    "end": "1915200"
  },
  {
    "text": "of commands through our testing through EDR and logging we just do not get the log",
    "start": "1915200",
    "end": "1921399"
  },
  {
    "text": "whatsoever and so what we'd be looking at if I was an attacker um of builing tools to use would be netsh but it's not",
    "start": "1921399",
    "end": "1930240"
  },
  {
    "text": "it's not even that useful cuz a lot of organizations just turn off the Windows File um C util though um certificates in",
    "start": "1930240",
    "end": "1938880"
  },
  {
    "text": "Windows have been a problem for about 2 years now there is a really simple escalation from domain user to domain",
    "start": "1938880",
    "end": "1945039"
  },
  {
    "text": "admin through uh incorrectly configured s certificate templates and almost every",
    "start": "1945039",
    "end": "1951320"
  },
  {
    "text": "organization has a CA running on Windows has at least one certificate template vulnerable to this escalation which",
    "start": "1951320",
    "end": "1957919"
  },
  {
    "text": "you'd be able to find and do most of the attack using CT util and then the last few things are different attack tool Ms",
    "start": "1957919",
    "end": "1965039"
  },
  {
    "text": "build is pretty cool just pass it a a um project file it can compile and run in",
    "start": "1965039",
    "end": "1970840"
  },
  {
    "text": "line so it's not just it doesn't just need to compile the axi MS bill can run it too so we could completely hide what",
    "start": "1970840",
    "end": "1977840"
  },
  {
    "text": "is run through Ms build which could be could be anything um net",
    "start": "1977840",
    "end": "1983840"
  },
  {
    "text": "wise vsss admin this will allow us to um abuse volume Shadow copies generally",
    "start": "1983840",
    "end": "1990320"
  },
  {
    "text": "this is done when Taki gets to a domain controller but it is useful on other servers if you've taken control of a",
    "start": "1990320",
    "end": "1996360"
  },
  {
    "text": "domain control it's it's game over anyway but you can create a shot for C and take the ntds file and then you've",
    "start": "1996360",
    "end": "2002880"
  },
  {
    "text": "got all the passwords for the domain um hashed of course but yeah you could crack them uh and then reg the amount of",
    "start": "2002880",
    "end": "2009679"
  },
  {
    "text": "register keys still in Windows that allow for a degrading of security is",
    "start": "2009679",
    "end": "2014880"
  },
  {
    "text": "huge this is a classic one we look for w digest if you change this registry key",
    "start": "2014880",
    "end": "2020600"
  },
  {
    "text": "um wait for a reboot so they just wait for patching or reboot a server Els now",
    "start": "2020600",
    "end": "2025919"
  },
  {
    "text": "has plain text passwords cached in there so despite everything Microsoft's done in the last sort of 5 to 10 years to",
    "start": "2025919",
    "end": "2032120"
  },
  {
    "text": "protect Elsas specifically this one registry key will override it now you do need to be local admin to write that key",
    "start": "2032120",
    "end": "2039320"
  },
  {
    "text": "um but that's not extremely difficult and you could hide it no one would ever",
    "start": "2039320",
    "end": "2045679"
  },
  {
    "text": "know so I added in the logging locations mostly for if anyone was to read this",
    "start": "2045679",
    "end": "2051520"
  },
  {
    "text": "afterwards but these are the group policy locations for each of these logging types um and we for for our",
    "start": "2051520",
    "end": "2057200"
  },
  {
    "text": "customers within our monitoring we do turn them all on with module logging set to Star but of course there's always",
    "start": "2057200",
    "end": "2063878"
  },
  {
    "text": "caveats um cismon is really good but it it is more difficult to maintain long",
    "start": "2063879",
    "end": "2069000"
  },
  {
    "text": "term because you do need to install on every endpoint um and you need to provide it with a configuration",
    "start": "2069000",
    "end": "2075638"
  },
  {
    "text": "file uh which needs to be updated because each time cismon comes out with a new piece of functionality you'll need",
    "start": "2075639",
    "end": "2082000"
  },
  {
    "text": "to basically reinstall cismon with a different config file and so across fleets of thousands of servers that can",
    "start": "2082000",
    "end": "2087839"
  },
  {
    "text": "become quite a task just to keep syis one up to date and then you've got your device process events so if you are",
    "start": "2087839",
    "end": "2093560"
  },
  {
    "text": "running Defender xdr you'll get those but there's currently no power shell logging the",
    "start": "2093560",
    "end": "2099760"
  },
  {
    "text": "only way you see po shell is if there is po shell within that process tree for a detection which is it's common enough",
    "start": "2099760",
    "end": "2107320"
  },
  {
    "text": "but with this technique it sometimes doesn't trigger so then we thought EDR will be",
    "start": "2107320",
    "end": "2113520"
  },
  {
    "text": "the Savior it's often the first line of defense and the last line of defense and in the middle is where the good stuff",
    "start": "2113520",
    "end": "2119560"
  },
  {
    "text": "is unfortunately EDR was pretty well it was a hit and miss so 50% of the ENT these",
    "start": "2119560",
    "end": "2127240"
  },
  {
    "text": "are ENT prise grade EDR they're all different we had customers and we were able to get six different edrs and",
    "start": "2127240",
    "end": "2133119"
  },
  {
    "text": "they're configured for the organizations most have a high level of blocking",
    "start": "2133119",
    "end": "2139240"
  },
  {
    "text": "configured but these are real world configurations not turn absolutely everything on um these are actually",
    "start": "2139240",
    "end": "2146640"
  },
  {
    "text": "usable and so this one was the who am I encoded command and the first three",
    "start": "2146640",
    "end": "2152200"
  },
  {
    "text": "nothing got the file right which I'm not surprised by EDR is not there to detect every single file upon being written",
    "start": "2152200",
    "end": "2159200"
  },
  {
    "text": "there's just too much whereas what they all claim is once the executable is run",
    "start": "2159200",
    "end": "2164680"
  },
  {
    "text": "we detect the the activity or what happens which which I kind of agree with",
    "start": "2164680",
    "end": "2169839"
  },
  {
    "text": "and so half of them got the execution even just of a who am I and we wouldn't ever get a detection if we just ran h i",
    "start": "2169839",
    "end": "2176720"
  },
  {
    "text": "so we were pretty confident they were detecting the technique the other three not a beep and we're able to execute all",
    "start": "2176720",
    "end": "2182920"
  },
  {
    "text": "day every day on those three so then to make the test uh a bit fairer we did the vsss admin create the",
    "start": "2182920",
    "end": "2191280"
  },
  {
    "text": "volume Shadow copy for all of C drive which would be generally flagged at",
    "start": "2191280",
    "end": "2196480"
  },
  {
    "text": "information or a low you'd want to know about it but it's not necessarily the end of the world and we had exactly the",
    "start": "2196480",
    "end": "2202160"
  },
  {
    "text": "same set of detections so we were pretty confident here that these three were detecting the technique rather than what",
    "start": "2202160",
    "end": "2208400"
  },
  {
    "text": "we were executing which is what we wanted the technique is the thing we cared about here um although the",
    "start": "2208400",
    "end": "2213520"
  },
  {
    "text": "detections all had really generic names that doesn't matter so much with the way they work these days but um it sort of",
    "start": "2213520",
    "end": "2220680"
  },
  {
    "text": "got Defender um later as we'll see so I mentioned we had um so we have",
    "start": "2220680",
    "end": "2227720"
  },
  {
    "text": "a program where we take University students who are in their last year we take them for their final semester and",
    "start": "2227720",
    "end": "2233119"
  },
  {
    "text": "they work with us on projects I ran through this presentation with the team a few months ago and one of the they're",
    "start": "2233119",
    "end": "2239520"
  },
  {
    "text": "called will students work integrad learning one of the will students saw that it was running net saw that we",
    "start": "2239520",
    "end": "2244839"
  },
  {
    "text": "needed the same processes and saw that it was was being detected by a number of edrs and they rewrote it in C over a",
    "start": "2244839",
    "end": "2251400"
  },
  {
    "text": "weekend he's a smart kid um so the GitHub repository is up there as well um",
    "start": "2251400",
    "end": "2256880"
  },
  {
    "text": "it's up to V4 now I think as he sort of iterates and just adds more functionality and it's basically it's",
    "start": "2256880",
    "end": "2264480"
  },
  {
    "text": "it's the same technique but it's written in C so it's done slightly different way",
    "start": "2264480",
    "end": "2269920"
  },
  {
    "text": "the outcome was not what I expected so now one of the EDR got it on fire right",
    "start": "2269920",
    "end": "2275200"
  },
  {
    "text": "there must be something in there there must be a strali string or a function call that that EDR says is just not",
    "start": "2275200",
    "end": "2281880"
  },
  {
    "text": "usually in executables so we never even got an execution on on that EDR but EDR",
    "start": "2281880",
    "end": "2288000"
  },
  {
    "text": "number two we could execute things all day every day and this is really common",
    "start": "2288000",
    "end": "2293359"
  },
  {
    "text": "it's surprising how often we'll grab source code we just compile it and run it and see what happens in EDR land and",
    "start": "2293359",
    "end": "2299119"
  },
  {
    "text": "they detect it but if we take it and we get rid of all comments any silly function names then strings it and get",
    "start": "2299119",
    "end": "2305960"
  },
  {
    "text": "rid of anything else we can see it's not zero the amount of times we bypass EDR with that and that that led",
    "start": "2305960",
    "end": "2312800"
  },
  {
    "text": "to the crow R bug Bounty was asked just recompiling with most comments going so I have no doubt edrs are just doing a",
    "start": "2312800",
    "end": "2319359"
  },
  {
    "text": "strings pass there are certain strings that they will just say nope not allowed to see that in an executable and then",
    "start": "2319359",
    "end": "2325560"
  },
  {
    "text": "there is once it executes behaviors but this one now it's exactly the same",
    "start": "2325560",
    "end": "2330920"
  },
  {
    "text": "encoded command using a similar technique just in a different language and we bypass an EDR on a weekend's",
    "start": "2330920",
    "end": "2337200"
  },
  {
    "text": "worth of the work so not great for us being able to not detect it even more",
    "start": "2337200",
    "end": "2342400"
  },
  {
    "text": "now um but a pretty cool project for someone in their uh last year of",
    "start": "2342400",
    "end": "2347680"
  },
  {
    "text": "University and so this is what it looked like um command line spoofer was detected by um Windows Defender xdr and",
    "start": "2347680",
    "end": "2357079"
  },
  {
    "text": "it was the Rosen malware and that's where I sort of thought this is a very generic detection I don't think there's",
    "start": "2357079",
    "end": "2362920"
  },
  {
    "text": "a lot to it and I think then when we ran inzy run it was different enough half",
    "start": "2362920",
    "end": "2368079"
  },
  {
    "text": "that Defender just didn't detect it anymore and to this day we can still run V2 on Defender I just tell it not to",
    "start": "2368079",
    "end": "2375119"
  },
  {
    "text": "submit it to Microsoft so we can keep running it but yeah it wasn't a very strong detection in the first place and",
    "start": "2375119",
    "end": "2381880"
  },
  {
    "text": "then a weakens worth the working we around it so then we thought maybe logging we",
    "start": "2381880",
    "end": "2388800"
  },
  {
    "text": "can get some fixes on the logging side um and so Mark rovic who's now one of",
    "start": "2388800",
    "end": "2394920"
  },
  {
    "text": "the quite High VPS at Microsoft he authored cismon he coded it in the early days and Microsoft bought the CIS",
    "start": "2394920",
    "end": "2401800"
  },
  {
    "text": "internals tool set the the suite completely and so I added him on on",
    "start": "2401800",
    "end": "2407240"
  },
  {
    "text": "Twitter um gave him some examples and said could we get the process Flags CU I'm sure something is deep down as",
    "start": "2407240",
    "end": "2414000"
  },
  {
    "text": "cismon could just tell us that the thread was started in a suspended State and uh he got back to me I was really",
    "start": "2414000",
    "end": "2420960"
  },
  {
    "text": "really really surprised but he said process tampering will work and we had played with process tampering before",
    "start": "2420960",
    "end": "2426839"
  },
  {
    "text": "unfortun Al um EV 25 is a process tampering log and it actually doesn't",
    "start": "2426839",
    "end": "2432720"
  },
  {
    "text": "work so I spent hours trying to formulate a response that didn't make me look like a",
    "start": "2432720",
    "end": "2438040"
  },
  {
    "text": "dick saying hey man you're actually wrong um and so I came up with this and",
    "start": "2438040",
    "end": "2443079"
  },
  {
    "text": "it just didn't work uh and then he ghosted me never got back to me after this interaction but we still don't have",
    "start": "2443079",
    "end": "2449800"
  },
  {
    "text": "something in cismon or Windows where we can see that flag um and I think it would be really useful but I've had",
    "start": "2449800",
    "end": "2455920"
  },
  {
    "text": "these thoughts in the past and I think if we got this flag we' we'd see so much Start suspended um because that's just",
    "start": "2455920",
    "end": "2462400"
  },
  {
    "text": "usually how Windows works you think you have a good idea you look under the hood and it's not a good idea on the",
    "start": "2462400",
    "end": "2468359"
  },
  {
    "text": "monitoring side so then we submitted it to msrc um",
    "start": "2468359",
    "end": "2473480"
  },
  {
    "text": "and this is what we submitted um if you've ever submitted a bug to Microsoft you don't actually need that much you just need to tell them exactly what it",
    "start": "2473480",
    "end": "2479640"
  },
  {
    "text": "is and how to reproduce it and I said hey I'm running this stuff that's 3 years old from GitHub repos and altering",
    "start": "2479640",
    "end": "2485920"
  },
  {
    "text": "security logs and I got the classic classic back does",
    "start": "2485920",
    "end": "2491280"
  },
  {
    "text": "not meet msc's current bar for servicing which is their way saying nah um but",
    "start": "2491280",
    "end": "2497040"
  },
  {
    "text": "they report it as valid which I was happy with and then they hit me with the uh defin security boundaries so if you",
    "start": "2497040",
    "end": "2502920"
  },
  {
    "text": "ever see um on on Twitter or X whatever it's going to be called tomorrow people when they get rejected by Microsoft it's",
    "start": "2502920",
    "end": "2508760"
  },
  {
    "text": "almost always it didn't cross a security boundary I did this talk earlier last year no later last year uh there was a",
    "start": "2508760",
    "end": "2516160"
  },
  {
    "text": "representative from Microsoft in the audience and they came up after and and asked for the case number and that escalator and I still I haven't heard",
    "start": "2516160",
    "end": "2522200"
  },
  {
    "text": "anything back so we'll see I'm I'm not sure how easy it is to actually fix for them I'd be happy enough that we could",
    "start": "2522200",
    "end": "2528079"
  },
  {
    "text": "log and detect when this technique is used so where we're at today is EDR",
    "start": "2528079",
    "end": "2536040"
  },
  {
    "text": "coverage is pretty poor um 50% and their Enterprise edrs log detections it's just",
    "start": "2536040",
    "end": "2543119"
  },
  {
    "text": "not there um I can't detect built-in tools whatsoever power and composite commands we have a thread to pull on but",
    "start": "2543119",
    "end": "2551359"
  },
  {
    "text": "still has a chance that an analyst is is going to go back so far and then think it's a false positive attack of mistakes",
    "start": "2551359",
    "end": "2558240"
  },
  {
    "text": "is going to be something that we do see and we have seen in some of their scripts where they'll do things that",
    "start": "2558240",
    "end": "2564240"
  },
  {
    "text": "simply don't work but still produce a logging artifact and if they try and hide poers shell or composite commands as we've",
    "start": "2564240",
    "end": "2570800"
  },
  {
    "text": "seen we'll still get the detections we just may then go back um and not",
    "start": "2570800",
    "end": "2576520"
  },
  {
    "text": "discover the initial um actual command that was run and lucky",
    "start": "2576520",
    "end": "2581599"
  },
  {
    "text": "last a fix from Microsoft which 2 years now I think um when was this this was",
    "start": "2581599",
    "end": "2589400"
  },
  {
    "text": "yeah Feb 24 so it's a year it's still could be there for Microsoft to fix um",
    "start": "2589400",
    "end": "2595559"
  },
  {
    "text": "but I don't have a lot of hope that it will be fixed from Microsoft so what I'll do is jump",
    "start": "2595559",
    "end": "2604200"
  },
  {
    "text": "into my trusty VM all the way back in",
    "start": "2604200",
    "end": "2609440"
  },
  {
    "text": "Perth do we get the RDP session up on the screen are we able to get the um my",
    "start": "2611880",
    "end": "2619559"
  },
  {
    "text": "screen up",
    "start": "2619559",
    "end": "2622920"
  },
  {
    "text": "oh it's a different could be a different",
    "start": "2642160",
    "end": "2645720"
  },
  {
    "text": "screen Okay cool so don't crucify me for my ID I",
    "start": "2660400",
    "end": "2665920"
  },
  {
    "text": "just use whatever simplest so vs code or or this um this is command line spoofer",
    "start": "2665920",
    "end": "2671720"
  },
  {
    "text": "um as you can see I have um commented out various different um test commands",
    "start": "2671720",
    "end": "2677480"
  },
  {
    "text": "that we've done uh but you can see our po shell bypass we've got our run DL 32",
    "start": "2677480",
    "end": "2683160"
  },
  {
    "text": "executable in there that runs some cool stuff that we just pulled from the internet uh another encoded command",
    "start": "2683160",
    "end": "2689800"
  },
  {
    "text": "which is huge and that's our um curb roasting add M pref and then our our",
    "start": "2689800",
    "end": "2696640"
  },
  {
    "text": "fire um changes and basically all you need to do is change those make sure they're",
    "start": "2696640",
    "end": "2702359"
  },
  {
    "text": "longer than your spoofed command compile it and you're good to go it'll pull out an",
    "start": "2702359",
    "end": "2708880"
  },
  {
    "text": "exe and so then what we can do is I've just named them as all my",
    "start": "2708920",
    "end": "2714960"
  },
  {
    "text": "different commands um and what I'll do is I'll just run the built-in tool one first and so what we can do is just",
    "start": "2714960",
    "end": "2721480"
  },
  {
    "text": "quickly so I tested this just before is",
    "start": "2721480",
    "end": "2728079"
  },
  {
    "text": "so just looking for any of the firewalls that uh allow uh remote desktop hack all",
    "start": "2728079",
    "end": "2733640"
  },
  {
    "text": "um and no rules match that on our firewall and so what we'll do now is csor",
    "start": "2733640",
    "end": "2741520"
  },
  {
    "text": "NDC buil-in tools these are the debug versions too",
    "start": "2744800",
    "end": "2750280"
  },
  {
    "text": "so realistically attackers you're not going to see any of this there'll be no window there'll be no output I'm just outputting it so I can remember what",
    "start": "2750280",
    "end": "2756640"
  },
  {
    "text": "I've done on so that then has run for some reason we need to press",
    "start": "2756640",
    "end": "2764359"
  },
  {
    "text": "enter um and then we'll have a look now so our rule is in there now as expected",
    "start": "2764359",
    "end": "2770079"
  },
  {
    "text": "so it worked and I do have this one as a local admin uh prompt and so I will quickly refresh",
    "start": "2770079",
    "end": "2777480"
  },
  {
    "text": "these the quickest way to get at them you can search through these using Powershell but the output is",
    "start": "2777480",
    "end": "2783760"
  },
  {
    "text": "not not really human readable and so we can see see",
    "start": "2783760",
    "end": "2788839"
  },
  {
    "text": "here command line we have our show the rule so that's cool so if we work our",
    "start": "2788839",
    "end": "2793960"
  },
  {
    "text": "way backwards as I said conhost it's all day every day we've actually excluded it",
    "start": "2793960",
    "end": "2800359"
  },
  {
    "text": "from a customer we're saving him a terabyte of Sentinel space every year just by carving those out it's crazy how",
    "start": "2800359",
    "end": "2807640"
  },
  {
    "text": "much and this one C script those two together we're carving out terabyte a year savings yeah there's another one um",
    "start": "2807640",
    "end": "2815200"
  },
  {
    "text": "so here we go next ATT teams update register com blah blah blah blah embedding so that's me running it there",
    "start": "2815200",
    "end": "2822240"
  },
  {
    "text": "will'll be one more which is here because NDC built-in to tools calls it",
    "start": "2822240",
    "end": "2828280"
  },
  {
    "text": "but I can name this anything call it win cow call it whatever you want um and so",
    "start": "2828280",
    "end": "2833400"
  },
  {
    "text": "if we go back one more this should be U me showing it initially so we can see",
    "start": "2833400",
    "end": "2838440"
  },
  {
    "text": "there there was me showing it two logs both both uh attacker controlled command",
    "start": "2838440",
    "end": "2843880"
  },
  {
    "text": "line parameters basically and then me showing the rule again so it's just not there it does not get logged at all um",
    "start": "2843880",
    "end": "2850800"
  },
  {
    "text": "and then this comes across and then if we go very quickly to",
    "start": "2850800",
    "end": "2856000"
  },
  {
    "text": "this one a friendly",
    "start": "2856000",
    "end": "2860558"
  },
  {
    "text": "view if I can highlight",
    "start": "2862000",
    "end": "2866240"
  },
  {
    "text": "this Sor right we got to do it in general not even friendly uh view shows",
    "start": "2867599",
    "end": "2872640"
  },
  {
    "text": "it there's my padding so the padding oh did it show it ah cool yeah so the",
    "start": "2872640",
    "end": "2880280"
  },
  {
    "text": "padding's there and then as soon as we go to the XML side it's it's stripped away even on the Local Host so it's not",
    "start": "2880280",
    "end": "2887000"
  },
  {
    "text": "as though it gets stripped to be sent up to a monitoring platform it's gone completely from the detail section here",
    "start": "2887000",
    "end": "2893520"
  },
  {
    "text": "even in the friendly view it's not there so when when I stumbled across that I knew that what kind of stuff for some",
    "start": "2893520",
    "end": "2900640"
  },
  {
    "text": "commands because we just weren't going to get um anything out out of the logs",
    "start": "2900640",
    "end": "2905839"
  },
  {
    "text": "and so then what we can do is one more where we'll use run dll so",
    "start": "2905839",
    "end": "2913440"
  },
  {
    "text": "CLS NDC 25 on DL",
    "start": "2913440",
    "end": "2919880"
  },
  {
    "text": "demo so this is really cool it's a so all it does is pop C but",
    "start": "2919880",
    "end": "2926079"
  },
  {
    "text": "um what we do here is run dll actually",
    "start": "2926079",
    "end": "2931160"
  },
  {
    "text": "executes via the built-in JavaScript interpreter um whatever I pull down",
    "start": "2931160",
    "end": "2936359"
  },
  {
    "text": "using power shell so you can see how this jumps around but attackers use this because they don't want to necessarily",
    "start": "2936359",
    "end": "2941880"
  },
  {
    "text": "always put um files on a system um I can host it at seamless intelligence test",
    "start": "2941880",
    "end": "2947240"
  },
  {
    "text": "run dll Powershell Cal and it just tells tells me what to do which is pop Cal but",
    "start": "2947240",
    "end": "2953640"
  },
  {
    "text": "it's using it's even net in there so JavaScript net it's everything it's almost everything in Windows and when we",
    "start": "2953640",
    "end": "2961480"
  },
  {
    "text": "go and look at the uh logs but it's a common way for attackers to do things",
    "start": "2961480",
    "end": "2968440"
  },
  {
    "text": "conhost C script so yeah Cal produces two logs cuz",
    "start": "2975839",
    "end": "2983000"
  },
  {
    "text": "Cal actually calls Wind 32 Cal as well so just another quirk in Windows but",
    "start": "2983000",
    "end": "2989240"
  },
  {
    "text": "there's Powershell calling Cal so let's say that actually had malicious commands",
    "start": "2989240",
    "end": "2995119"
  },
  {
    "text": "or suspicious command line parameters we would get that one we then get this",
    "start": "2995119",
    "end": "3001079"
  },
  {
    "text": "would have a detection not for execution of bypass necessarily more for I so",
    "start": "3001079",
    "end": "3007280"
  },
  {
    "text": "Microsoft don't consider bypassing um uh execution policy a security boundary",
    "start": "3007280",
    "end": "3013119"
  },
  {
    "text": "once again it's really there to stop you breaking a server if there is an execution policy but I ex says execute",
    "start": "3013119",
    "end": "3022000"
  },
  {
    "text": "whatever I pass into to you and all we passed in was Cal but we can pass anything so we can see that so the use",
    "start": "3022000",
    "end": "3027680"
  },
  {
    "text": "of ex is suspicious conhost but it's really this one this is",
    "start": "3027680",
    "end": "3033559"
  },
  {
    "text": "where we would get our main detection of Powershell um specifying TLS types with",
    "start": "3033559",
    "end": "3040520"
  },
  {
    "text": "an I from a website so basically here our detection would be a combination of",
    "start": "3040520",
    "end": "3046640"
  },
  {
    "text": "Powell HTTP or ttps download string I those sorts of things all on one line",
    "start": "3046640",
    "end": "3052559"
  },
  {
    "text": "for a normal user very very uncommon unless you run something like service now which just does all sorts of stuff um on",
    "start": "3052559",
    "end": "3060599"
  },
  {
    "text": "servers it's all legitimate just takes some time to find tune it and go through what program software like that is doing",
    "start": "3060599",
    "end": "3066920"
  },
  {
    "text": "um so as you can see we got a lot of uh logging artifacts there and there's our very first one so we still don't see",
    "start": "3066920",
    "end": "3074160"
  },
  {
    "text": "exactly what it did on the command line because we get this spoofed command but everything after that because of how",
    "start": "3074160",
    "end": "3080520"
  },
  {
    "text": "that works being a composite command is detectable just makes it a little bit you may skip pass this log cuz it",
    "start": "3080520",
    "end": "3087480"
  },
  {
    "text": "doesn't look like it's",
    "start": "3087480",
    "end": "3090440"
  },
  {
    "text": "related so more than happy to show any of those afterwards",
    "start": "3094280",
    "end": "3100160"
  },
  {
    "text": "but are there any questions related to any of",
    "start": "3100160",
    "end": "3105400"
  },
  {
    "text": "that",
    "start": "3105400",
    "end": "3108400"
  },
  {
    "text": "yep the attempt to see uh the like whatever comes",
    "start": "3110559",
    "end": "3118520"
  },
  {
    "text": "track suion that's that's the struggle for us",
    "start": "3127720",
    "end": "3134319"
  },
  {
    "text": "so if I go back into here try and get one that is",
    "start": "3134319",
    "end": "3142400"
  },
  {
    "text": "related even this one here we don't get that data about the thread um State at",
    "start": "3142440",
    "end": "3149799"
  },
  {
    "text": "all ever in a Windows log so there's nothing here all that's saying basically",
    "start": "3149799",
    "end": "3154839"
  },
  {
    "text": "is Cal the processes being created then 9 99 million times out of 100 million",
    "start": "3154839",
    "end": "3162920"
  },
  {
    "text": "it'll run what's in there the problem is that we can change it and we just can't",
    "start": "3162920",
    "end": "3168240"
  },
  {
    "text": "see it so there's just not even in a cismon log we don't get that state which it's if Microsoft just did that as a fix",
    "start": "3168240",
    "end": "3175359"
  },
  {
    "text": "is gave us the state of the um the process when it was created I think I",
    "start": "3175359",
    "end": "3180640"
  },
  {
    "text": "could detect it far far better but I'm still never going to know what they changed it to because it's a direct memory",
    "start": "3180640",
    "end": "3187240"
  },
  {
    "text": "right",
    "start": "3187240",
    "end": "3190240"
  },
  {
    "text": "y nope not at",
    "start": "3194640",
    "end": "3198519"
  },
  {
    "text": "all follow how",
    "start": "3201480",
    "end": "3206079"
  },
  {
    "text": "yeah so on this view I don't know where that's stored I don't know so when when",
    "start": "3218799",
    "end": "3225640"
  },
  {
    "text": "when when so the evtx files themselves are binary files too you can't just grab an evtx file open it in notepad and",
    "start": "3225640",
    "end": "3232640"
  },
  {
    "text": "scroll through it there are Powershell commandlets and when you interrogate the security Logs with Powershell you get",
    "start": "3232640",
    "end": "3239520"
  },
  {
    "text": "these back you get the XML I don't know and even friendly friendly is still XML it's just I don't know I I don't find it",
    "start": "3239520",
    "end": "3246400"
  },
  {
    "text": "friendlier to be honest I don't think either of them are friendly but that's what you get when you quer it with power",
    "start": "3246400",
    "end": "3252720"
  },
  {
    "text": "shell where this one exists Microsoft",
    "start": "3252720",
    "end": "3257839"
  },
  {
    "text": "no yeah I don't know where that one is haven't been able to quer yet yeah",
    "start": "3257839",
    "end": "3264760"
  },
  {
    "text": "nothing else all right as well thank you very much for jumping in last session of the",
    "start": "3268960",
    "end": "3274040"
  },
  {
    "text": "day um hope it was a good conference [Applause]",
    "start": "3274040",
    "end": "3280309"
  }
]