[
  {
    "text": "okay well it's it's 11 40 now so um people may still wander in but i will",
    "start": "4000",
    "end": "10880"
  },
  {
    "text": "kick this off um so yeah good morning everyone uh hello",
    "start": "10880",
    "end": "16080"
  },
  {
    "text": "and welcome to this talk uh thank you for coming along i'm glad to see you i'll introduce myself i'm steve i work",
    "start": "16080",
    "end": "23119"
  },
  {
    "text": "at microsoft and i'm on the.net team and i've been focusing on web development",
    "start": "23119",
    "end": "28240"
  },
  {
    "text": "for for quite a number of years now particularly been focusing on this thing called blazer which uh apparently about",
    "start": "28240",
    "end": "34480"
  },
  {
    "text": "half of you in the room are users of um now partly that's going to be a major",
    "start": "34480",
    "end": "39600"
  },
  {
    "text": "focus of this talk but also another major focus is going to be some slightly more wild and exotic ideas about things",
    "start": "39600",
    "end": "46800"
  },
  {
    "text": "we might do with net in the further future so this is going to be a very very content",
    "start": "46800",
    "end": "53440"
  },
  {
    "text": "packed talk so i hope you've got plenty of energy to take in all of this stuff",
    "start": "53440",
    "end": "58800"
  },
  {
    "text": "uh to give you a little bit of a model for what we're gonna cover here uh",
    "start": "58800",
    "end": "64000"
  },
  {
    "text": "prepare yourself to go on a journey through time uh as we start with uh a little recap and overview of where we",
    "start": "64000",
    "end": "72080"
  },
  {
    "text": "are with things with blazer development uh as of the the current release uh",
    "start": "72080",
    "end": "77280"
  },
  {
    "text": "we'll then move on to talk about the next few releases that we've got planned out uh coming in the future and like i",
    "start": "77280",
    "end": "84240"
  },
  {
    "text": "said we'll end with a slightly more speculative look at some of the things",
    "start": "84240",
    "end": "89439"
  },
  {
    "text": "we might do in the more distant future okay so let's get started with this where things",
    "start": "89439",
    "end": "96320"
  },
  {
    "text": "are at today section of the talk now some of you may have seen some of this stuff already and",
    "start": "96320",
    "end": "102640"
  },
  {
    "text": "for the rest of you this is going to be um hopefully bringing you up to speed so blazer for those of you who don't know",
    "start": "102640",
    "end": "108720"
  },
  {
    "text": "is a ui framework for net which allows you to build hopefully the the richest",
    "start": "108720",
    "end": "115600"
  },
  {
    "text": "and most productive kinds of web uis that you can the most current release of",
    "start": "115600",
    "end": "121680"
  },
  {
    "text": "this is the dot net six release which came out in november last year and that is a long term support release which",
    "start": "121680",
    "end": "127520"
  },
  {
    "text": "means that you get three years of support for this one and we did a lot of investment in blazer for net six and i'm",
    "start": "127520",
    "end": "135360"
  },
  {
    "text": "going to give you a quick view of some of the highlights from.net six",
    "start": "135360",
    "end": "140640"
  },
  {
    "text": "we added the hot reload feature which is the ability to make code changes and have them reflected live in your",
    "start": "140640",
    "end": "146800"
  },
  {
    "text": "application so you don't have to wait for recompilation and reloading and losing your state and things i'll show",
    "start": "146800",
    "end": "152640"
  },
  {
    "text": "you some of that in a minute we added a very powerful feature that allows you to use blazer components",
    "start": "152640",
    "end": "158560"
  },
  {
    "text": "inside other javascript applications so if you've got an angular view or react",
    "start": "158560",
    "end": "163760"
  },
  {
    "text": "application if you want to use blazer inside that you can do that and i'll show you an example of that in a bit we added ahead",
    "start": "163760",
    "end": "170480"
  },
  {
    "text": "of time compilation for blazer webassembly and this is the ability to pre-compile the dot-net code to",
    "start": "170480",
    "end": "176800"
  },
  {
    "text": "webassembly by code so that it can run 10 or 20 times faster when it gets to your end users",
    "start": "176800",
    "end": "183920"
  },
  {
    "text": "we've shrunk the size of the smallest blazer webassembly applications from about 1.6 megabytes before to down to",
    "start": "183920",
    "end": "190879"
  },
  {
    "text": "about one megabyte as of net six because you can strip more stuff out we've added the ability to consume",
    "start": "190879",
    "end": "197920"
  },
  {
    "text": "dependencies that are written in other languages such as rust swift go and so on and i'll show you that in a minute",
    "start": "197920",
    "end": "204480"
  },
  {
    "text": "and there's various other features that i'm not really going to have time to talk about in great detail",
    "start": "204480",
    "end": "210080"
  },
  {
    "text": "there's actually tons and tons of stuff but you can check back on some of the release notes or any other content you",
    "start": "210080",
    "end": "215920"
  },
  {
    "text": "can find if you want an overview of some of that but let's have a quick look at",
    "start": "215920",
    "end": "221040"
  },
  {
    "text": "some of the highlights of this stuff in an application so we need a bit of a scenario and the sample application that",
    "start": "221040",
    "end": "227519"
  },
  {
    "text": "we're going to use for this is something called blaze orbital which",
    "start": "227519",
    "end": "232640"
  },
  {
    "text": "is a application for a fictional space agency so imagine the scenario you work",
    "start": "232640",
    "end": "238080"
  },
  {
    "text": "for a space agency okay this could be the european space agency or nasa or spacex or or something else and your",
    "start": "238080",
    "end": "245760"
  },
  {
    "text": "particular job is working in the manufacturing group that's the people who design and build the rockets and",
    "start": "245760",
    "end": "252799"
  },
  {
    "text": "space stations or whatever okay and you've got an application that you've built in blazer web assembly for",
    "start": "252799",
    "end": "258720"
  },
  {
    "text": "managing the state of all the inventory in your warehouses and i'll show it to you and then we'll do a little bit of",
    "start": "258720",
    "end": "264960"
  },
  {
    "text": "work to improve it so i'm just going to pop this up in a browser okay so here it comes and the first thing well we're",
    "start": "264960",
    "end": "271440"
  },
  {
    "text": "going to have to log in because you know there's a there's a secure back end data store that only lets you access the data",
    "start": "271440",
    "end": "277520"
  },
  {
    "text": "if you're logged in so i'm going to just log in and this is using the standard",
    "start": "277520",
    "end": "282880"
  },
  {
    "text": "identity login system that comes with asp.net core and once we're logged in we can start to see some statistics that",
    "start": "282880",
    "end": "290000"
  },
  {
    "text": "are coming back from the back end about what's going on in the manufacturing facilities and things like that but",
    "start": "290000",
    "end": "295759"
  },
  {
    "text": "we're not really going to focus on this page in this talk we're going to focus more on this inventory screen and when i",
    "start": "295759",
    "end": "303039"
  },
  {
    "text": "go over there you can see that it's talking with the back end over a secured grpc channel and it's synchronizing the",
    "start": "303039",
    "end": "310320"
  },
  {
    "text": "latest state of all the data that the back end has got and it's actually putting that into a sqlite database",
    "start": "310320",
    "end": "317520"
  },
  {
    "text": "which is inside the browser i'll show you more about how that is working in a bit but the fact that we can get all",
    "start": "317520",
    "end": "324880"
  },
  {
    "text": "this data and have it locally in the browser means we can do some really powerful things and we can have a really",
    "start": "324880",
    "end": "330080"
  },
  {
    "text": "nice user experience for example we've got a lot of data here we've got hundreds out thousand items but the user",
    "start": "330080",
    "end": "335919"
  },
  {
    "text": "can just instantly scroll to any part of all of that data through this virtualized grid they can",
    "start": "335919",
    "end": "341199"
  },
  {
    "text": "start doing things like filtering so as i type you can see that's updating on every keystroke and",
    "start": "341199",
    "end": "347680"
  },
  {
    "text": "that's very nice we can do sorting and then one thing i particularly like is if we want to do filtering we can even like",
    "start": "347680",
    "end": "354720"
  },
  {
    "text": "move sliders and just see how quickly that that's able to react notice that number in the bottom left as i move the",
    "start": "354720",
    "end": "360240"
  },
  {
    "text": "slider it's like 60 frames per second of of querying there which is a pretty beautiful user experience and that is",
    "start": "360240",
    "end": "366960"
  },
  {
    "text": "possible because we've got this database inside the browser and our blazer webassembly application can talk",
    "start": "366960",
    "end": "372960"
  },
  {
    "text": "directly to it using the entity framework apis and i'll show you how that works in a bit",
    "start": "372960",
    "end": "378720"
  },
  {
    "text": "okay but let's do some work to improve this okay the first feature we're gonna make use of is hot reload because it's",
    "start": "378720",
    "end": "386080"
  },
  {
    "text": "my favorite feature of dot net six all right so if we look at the ui as it stands okay it's all great we can scroll",
    "start": "386080",
    "end": "393039"
  },
  {
    "text": "around and everything's nice but what on earth are these numbers over here like this price what is that crazy looking",
    "start": "393039",
    "end": "398960"
  },
  {
    "text": "number is that is that in euros dollars and how big is that number anyway it's hard to even read it let's try and",
    "start": "398960",
    "end": "405440"
  },
  {
    "text": "improve that a little bit shall we so let's go to the code for that particular",
    "start": "405440",
    "end": "410880"
  },
  {
    "text": "component now there's going to be too much code for you to read all of it so don't worry about trying to interpret",
    "start": "410880",
    "end": "416960"
  },
  {
    "text": "every line of this the only bit you really need to notice is that we've got a grid the source code for that is in",
    "start": "416960",
    "end": "422240"
  },
  {
    "text": "this project and it's on github you can find it if you want and it's a virtualized grid which is how it's able",
    "start": "422240",
    "end": "428160"
  },
  {
    "text": "to perform really well and if we scroll down here you'll see we've got various columns one of which",
    "start": "428160",
    "end": "434720"
  },
  {
    "text": "is displaying the price and it's currently displaying the price in cents which is not a great way of displaying",
    "start": "434720",
    "end": "440639"
  },
  {
    "text": "it so let's start editing that and i want to be able to see my browser window at the same time as my code winner and",
    "start": "440639",
    "end": "447680"
  },
  {
    "text": "firstly i want to change this from cents to dollars so i'm going to divide by 100 and then i'm going to press ctrl s in my",
    "start": "447680",
    "end": "454880"
  },
  {
    "text": "ide and when i do that you'll see in the background my browser immediately updates i do not have to recompile i",
    "start": "454880",
    "end": "461280"
  },
  {
    "text": "don't lose my scroll position or my sort configuration or anything it just instantly changes or near instantly",
    "start": "461280",
    "end": "467199"
  },
  {
    "text": "that's pretty nice now in case that was a bit subtle let's make a more obvious change let's add a dollar into this",
    "start": "467199",
    "end": "473199"
  },
  {
    "text": "title here so i'm going to press save now and you'll see immediately the dollar sign pops up there that's good",
    "start": "473199",
    "end": "479440"
  },
  {
    "text": "how else could i improve it well i'll change the alignment to be right because it's a number so i save and again that",
    "start": "479440",
    "end": "485440"
  },
  {
    "text": "jumps across there and i'd also like to have some thousands separators in there",
    "start": "485440",
    "end": "491360"
  },
  {
    "text": "some commas since this is uh going to be a uk or us style thing so let's put two",
    "start": "491360",
    "end": "497840"
  },
  {
    "text": "string and i'll have numeric with zero decimal places press save again and then",
    "start": "497840",
    "end": "503599"
  },
  {
    "text": "you'll see that the comma starts popping interview over there now so that is a really nice fluid development experience",
    "start": "503599",
    "end": "511599"
  },
  {
    "text": "that allows you to work on your code and hopefully like in a multi-monitor setup or",
    "start": "511599",
    "end": "516959"
  },
  {
    "text": "something that's a little easier to view but you get to work nicely and",
    "start": "516959",
    "end": "522080"
  },
  {
    "text": "productively okay so that is the hot reload system what else did we add",
    "start": "522080",
    "end": "527680"
  },
  {
    "text": "in.net six well we added something called native dependencies this is a",
    "start": "527680",
    "end": "533440"
  },
  {
    "text": "feature that's specific to blazer webassembly and it allows you to pull in dependencies that have been written in",
    "start": "533440",
    "end": "539279"
  },
  {
    "text": "other languages such as rust go swift as long as they can compile to web assembly",
    "start": "539279",
    "end": "544320"
  },
  {
    "text": "which all of those can okay so that is actually how the sqlite",
    "start": "544320",
    "end": "550080"
  },
  {
    "text": "database has been added into the browser here and we'll get to that in a minute but before we do let's consider a",
    "start": "550080",
    "end": "555760"
  },
  {
    "text": "slightly simpler scenario let's consider for example this alien liquid fuel",
    "start": "555760",
    "end": "561760"
  },
  {
    "text": "engine thing if i go in there well that is displaying a stock label and the",
    "start": "561760",
    "end": "567120"
  },
  {
    "text": "idea is that people can print this out and put it on stuff in warehouses and we want to have a qr code appearing here",
    "start": "567120",
    "end": "573680"
  },
  {
    "text": "where this big gray box so how can i render a qr code well i could use some net library or javascript",
    "start": "573680",
    "end": "581200"
  },
  {
    "text": "library or something like that but let's just say for the sake of the example that we are required to use a library",
    "start": "581200",
    "end": "588399"
  },
  {
    "text": "that's been written in rust so some of the team has created a qr code rendering library in rust and we want to use it in",
    "start": "588399",
    "end": "595360"
  },
  {
    "text": "our blazer web assembly application can we do that well as it just so happens i",
    "start": "595360",
    "end": "600399"
  },
  {
    "text": "have in fact actually got a rust library that renders qr codes right here now i",
    "start": "600399",
    "end": "606480"
  },
  {
    "text": "know you're probably not a rust developer most of you so you're not expected to understand every line of",
    "start": "606480",
    "end": "611920"
  },
  {
    "text": "this but what you should hopefully be able to get is we're using something that generates qr codes this comes from",
    "start": "611920",
    "end": "618880"
  },
  {
    "text": "a third-party rust package or crate as they call it to render the qr code and we're",
    "start": "618880",
    "end": "624880"
  },
  {
    "text": "exporting a function called generate qr code and we want to be able to call this",
    "start": "624880",
    "end": "629920"
  },
  {
    "text": "from our blazerwebassembly.net code all right so how can we compile and use this well let's just move my screen around a",
    "start": "629920",
    "end": "636560"
  },
  {
    "text": "little bit i can very easily just build this using rust standard build tool chain cargo",
    "start": "636560",
    "end": "643040"
  },
  {
    "text": "because this project has already been configured to produce webassembly binaries and you'll notice when i did",
    "start": "643040",
    "end": "648399"
  },
  {
    "text": "that in my source control window it shows that i've just generated this file",
    "start": "648399",
    "end": "653560"
  },
  {
    "text": "librusqr.a and that actually contains webassembly bytecode so let's use that",
    "start": "653560",
    "end": "658880"
  },
  {
    "text": "in our dot net code and the way we can do it with this native dependencies feature is",
    "start": "658880",
    "end": "665279"
  },
  {
    "text": "we can add a native file reference to our project and tell it that we want to use this lib",
    "start": "665279",
    "end": "672720"
  },
  {
    "text": "rust qr that we've just built and then inside our laser component we",
    "start": "672720",
    "end": "678240"
  },
  {
    "text": "can call exports from it so i've got this laser component called qr code here",
    "start": "678240",
    "end": "684079"
  },
  {
    "text": "and that is the thing that's trying to render a qr code into an html canvas and",
    "start": "684079",
    "end": "689519"
  },
  {
    "text": "the way it does that is it's got this buffer here and we need to populate it with the qr code and in fact we can do",
    "start": "689519",
    "end": "696000"
  },
  {
    "text": "so just by calling this generate qr code so we're importing lib rust qr there and",
    "start": "696000",
    "end": "701839"
  },
  {
    "text": "we're defining a net representation of what the export is and then we can call it so let's do that shall we i'm going",
    "start": "701839",
    "end": "708560"
  },
  {
    "text": "to just bring my browser window back into view here and then i'm going to",
    "start": "708560",
    "end": "713680"
  },
  {
    "text": "uncomment this line and press save and then hot reload should happen and then in the browser you'll see we've now got",
    "start": "713680",
    "end": "719519"
  },
  {
    "text": "our qr code coming up so that's actually calling in from.net to rust and it's the same approach that we could",
    "start": "719519",
    "end": "725680"
  },
  {
    "text": "use to add sql line and in fact when i've done an earlier version of this talk last year i had to show people how",
    "start": "725680",
    "end": "731760"
  },
  {
    "text": "to compile sqlite to webassembly how to add a native file reference how to add all of these different dll import and",
    "start": "731760",
    "end": "738880"
  },
  {
    "text": "extern methods and stuff wouldn't it be nice if someone could do all that work for you and just put it all in a package",
    "start": "738880",
    "end": "744720"
  },
  {
    "text": "well great news they can and they have that's one of the ways that we designed the native file references it can just",
    "start": "744720",
    "end": "750959"
  },
  {
    "text": "go into a package so in fact if we look inside the project file you'll see that",
    "start": "750959",
    "end": "757200"
  },
  {
    "text": "the way that i'm using sqlite is by adding these two packages sqlite pcl raw",
    "start": "757200",
    "end": "762480"
  },
  {
    "text": "that contains binaries for sqlite for windows linux mac ios android and as of",
    "start": "762480",
    "end": "769519"
  },
  {
    "text": "a couple of months ago webassembly so simply by adding that package and also the entity framework one we can",
    "start": "769519",
    "end": "776560"
  },
  {
    "text": "just use the normal entity framework apis and it just works across all platforms we don't need to think about anymore so that's pretty nice well done",
    "start": "776560",
    "end": "782800"
  },
  {
    "text": "to the people who created this package okay so that's native file references",
    "start": "782800",
    "end": "788399"
  },
  {
    "text": "what about this javascript interop improvements well when you're writing.net code in blazer whether",
    "start": "788399",
    "end": "794160"
  },
  {
    "text": "that's plays a webassembly or blazer server sometimes you need to call into javascript that's what js interop is for",
    "start": "794160",
    "end": "800480"
  },
  {
    "text": "and in the past that was exclusively done by serializing any parameters and",
    "start": "800480",
    "end": "806240"
  },
  {
    "text": "return values as json because that's a nice way of transferring things between.net and javascript but it's not",
    "start": "806240",
    "end": "812560"
  },
  {
    "text": "so good if you want to pass binary data because you know text is not as efficiently compact as binary data so",
    "start": "812560",
    "end": "819040"
  },
  {
    "text": "what we did in dot net six is we improved it so that if you pass any byte arrays or any streams they'll be",
    "start": "819040",
    "end": "824880"
  },
  {
    "text": "transferred in a very efficient format and not json serialized and in fact we're already using that here so you'll",
    "start": "824880",
    "end": "831839"
  },
  {
    "text": "see that after we've called rust to populate this byte buffer here we call invoke this",
    "start": "831839",
    "end": "838240"
  },
  {
    "text": "javascript method buffer to canvas and we're passing to it this thing here buffer which if you look closely is a",
    "start": "838240",
    "end": "845199"
  },
  {
    "text": "byte array and that now just works which wouldn't have just worked before but now it does and it's a very efficient way of",
    "start": "845199",
    "end": "851360"
  },
  {
    "text": "getting data out of net memory into javascript memory whether you're using webassembly or blazer server so that's",
    "start": "851360",
    "end": "857680"
  },
  {
    "text": "that feature okay now last one of the dot net six features i'm going to show you the ability to use blazer components whether",
    "start": "857680",
    "end": "865680"
  },
  {
    "text": "it's blazer server or blazer web assembly inside other javascript applications for example if you've got",
    "start": "865680",
    "end": "872000"
  },
  {
    "text": "an angular react or something application now our scenario for this then is going to be as follows",
    "start": "872000",
    "end": "878959"
  },
  {
    "text": "you work in the manufacturing hub and you're having a happy life and that's great but there's another team within your space agency called the missions",
    "start": "878959",
    "end": "886079"
  },
  {
    "text": "control team that's the team that deals with people who are actually in space and keeping track of their missions and",
    "start": "886079",
    "end": "891199"
  },
  {
    "text": "things like that it's a different team they've made some different technology choices and they've built their application in react now i've actually",
    "start": "891199",
    "end": "898800"
  },
  {
    "text": "got their application over here in no over here okay nvs code and i'm going to",
    "start": "898800",
    "end": "905680"
  },
  {
    "text": "open it in my browser so here it comes there it is all right so this is mission",
    "start": "905680",
    "end": "910959"
  },
  {
    "text": "control and it keeps track of where satellites are and you know how long since we saw any aliens that kind of",
    "start": "910959",
    "end": "916079"
  },
  {
    "text": "thing and it's got all the kind of functionality that's needed when you're managing missions it talks to the same",
    "start": "916079",
    "end": "921920"
  },
  {
    "text": "back end so of course we have to log in but it's you know single sign on so i don't have to enter my password again",
    "start": "921920",
    "end": "927600"
  },
  {
    "text": "and then it's got this equipment finder because when you're in the middle of a mission and something goes wrong you",
    "start": "927600",
    "end": "932800"
  },
  {
    "text": "might need replacement parts very quickly you want to know where those replacement parts are where are they in",
    "start": "932800",
    "end": "937839"
  },
  {
    "text": "stock so they would like to add your wonderful inventory grid that you've",
    "start": "937839",
    "end": "943040"
  },
  {
    "text": "built onto their missions control application of course you've built it in blazer web assembly they've got a react",
    "start": "943040",
    "end": "948079"
  },
  {
    "text": "application can you somehow use your component in their application well let's have a look at the rust uh the um",
    "start": "948079",
    "end": "955360"
  },
  {
    "text": "react code a little bit let's just reorganize my windows a little bit",
    "start": "955360",
    "end": "961199"
  },
  {
    "text": "like that okay all right so here is this react",
    "start": "961199",
    "end": "967839"
  },
  {
    "text": "application and it's a bit hard to see right now so move all things around right now if you don't know react this",
    "start": "967839",
    "end": "973680"
  },
  {
    "text": "might look unfamiliar but don't worry about it it's kind of simple all it's doing is keeping track of some text",
    "start": "973680",
    "end": "979600"
  },
  {
    "text": "that's been entered in this search box and then it just says to do put the inventory ui here so how could we do",
    "start": "979600",
    "end": "986399"
  },
  {
    "text": "that well one way we could do it which has always worked but it's a bit rubbish is that we could add an iframe element",
    "start": "986399",
    "end": "993120"
  },
  {
    "text": "to just contain the whole blazer universe in a separate iframe inside the page and that would work but it's kind",
    "start": "993120",
    "end": "999920"
  },
  {
    "text": "of rubbish because it wouldn't share any of the state like the authentication",
    "start": "999920",
    "end": "1005199"
  },
  {
    "text": "state would be completely unrelated between the iframe and the containing app it wouldn't share any styling and it",
    "start": "1005199",
    "end": "1010959"
  },
  {
    "text": "would be really hard to get any data into it or any data back out so that would be a bit lame wouldn't it be a lot",
    "start": "1010959",
    "end": "1016399"
  },
  {
    "text": "nicer if we could just use a plain html element if our laser components were just like normal html",
    "start": "1016399",
    "end": "1023199"
  },
  {
    "text": "well that's something that is now possible so to see how that's possible",
    "start": "1023199",
    "end": "1028798"
  },
  {
    "text": "i'm going to go to the startup program cs for this application and",
    "start": "1028799",
    "end": "1034400"
  },
  {
    "text": "you'll notice that we're telling the system that we want to take this inventory component that we built and",
    "start": "1034400",
    "end": "1040400"
  },
  {
    "text": "register it as a custom element called inventory grid and then since i've already added all",
    "start": "1040400",
    "end": "1046400"
  },
  {
    "text": "the necessary script tags to this react application i can just use inventory",
    "start": "1046400",
    "end": "1051520"
  },
  {
    "text": "grid as an element and when i press save then react's hot reload system will happen and we will see in our browser",
    "start": "1051520",
    "end": "1058480"
  },
  {
    "text": "our blazer webassembly component just show up and you know it's going to work it's got all the correct behaviors that",
    "start": "1058480",
    "end": "1063840"
  },
  {
    "text": "we've already implemented that's pretty good but one thing i don't really like about it is the styling of it you see it uses",
    "start": "1063840",
    "end": "1070799"
  },
  {
    "text": "this light mode here and everything else is using a dark mode how can we change the styling for this",
    "start": "1070799",
    "end": "1076320"
  },
  {
    "text": "application well since it's just regular html i can use normal html mechanisms",
    "start": "1076320",
    "end": "1081840"
  },
  {
    "text": "such as css because in react for each component you can have a corresponding css file and for this",
    "start": "1081840",
    "end": "1088240"
  },
  {
    "text": "one i'll say if you can find an inventory grid table then i'll apply a css filter invert one and hit save and",
    "start": "1088240",
    "end": "1096320"
  },
  {
    "text": "then boom instant dark mode and everyone can feel good while they're doing their mission control stuff all right so",
    "start": "1096320",
    "end": "1102400"
  },
  {
    "text": "that's cool um but what about searching if i start typing you'll see it doesn't do anything well that's because i",
    "start": "1102400",
    "end": "1108799"
  },
  {
    "text": "haven't done anything to wire up the react state into my.net state now this inventory grid in my blazer component it",
    "start": "1108799",
    "end": "1115840"
  },
  {
    "text": "takes a parameter called search name and i can simply pass that in as an attribute and i'll pass in the",
    "start": "1115840",
    "end": "1122400"
  },
  {
    "text": "current search text from react and then when i hit save you'll see the search has now taken place and as i type i've",
    "start": "1122400",
    "end": "1129120"
  },
  {
    "text": "got the um you know typing and on every keystroke it's updating so that's pretty nice cool and",
    "start": "1129120",
    "end": "1136240"
  },
  {
    "text": "you might have noticed that the hot reload system in react has been doing quite a bit of work as i've changed things here but what about the dot net",
    "start": "1136240",
    "end": "1142960"
  },
  {
    "text": "hot reload system if i change my.net components what will happen well let's find out i'm going to go back to this",
    "start": "1142960",
    "end": "1149440"
  },
  {
    "text": "inventory component here and i'm going to make a completely arbitrary change i'm going to",
    "start": "1149440",
    "end": "1155440"
  },
  {
    "text": "change the title of this template column for category and i'll change it to cat name just for the sake of making a",
    "start": "1155440",
    "end": "1161520"
  },
  {
    "text": "change and i'll press save now and then if we look over here you'll see net's hot reload system has kicked in as well",
    "start": "1161520",
    "end": "1168640"
  },
  {
    "text": "so we've got react hot reload system and nets hot reload system working together in the same application allowing you to",
    "start": "1168640",
    "end": "1175600"
  },
  {
    "text": "make changes anywhere while returning your state and sharing your data so hopefully you can be very very happy and",
    "start": "1175600",
    "end": "1182720"
  },
  {
    "text": "productive okay so that is as much of a recap as i'm going to give you of what we've done in",
    "start": "1182720",
    "end": "1188880"
  },
  {
    "text": "dot net six i want to now change the focus a little bit to what's coming up",
    "start": "1188880",
    "end": "1194720"
  },
  {
    "text": "in the near future and we're going to start with the very next release which is planned which is extremely soon",
    "start": "1194720",
    "end": "1200720"
  },
  {
    "text": "indeed uh this is something that is scheduled for the current quarter that we're in now q2 of 2022",
    "start": "1200720",
    "end": "1209280"
  },
  {
    "text": "and what we'll be doing in this next release is giving you the option to take blazer beyond web browsers and into",
    "start": "1209280",
    "end": "1217280"
  },
  {
    "text": "native desktop and mobile applications and that is possible thanks to the.net",
    "start": "1217280",
    "end": "1223120"
  },
  {
    "text": "maui project now i don't know if you've heard of.net maui we've been talking about for a",
    "start": "1223120",
    "end": "1228159"
  },
  {
    "text": "little while uh to give you a quick overview if you're not familiar with that dotnet maui is kind of the",
    "start": "1228159",
    "end": "1233520"
  },
  {
    "text": "successor to xamarin forms we've done a lot of work to make it the most first-class elegant and streamlined part",
    "start": "1233520",
    "end": "1240320"
  },
  {
    "text": "of dot-net core that we can we've given it a new name and just done a ton of investment to make this really nice and",
    "start": "1240320",
    "end": "1246799"
  },
  {
    "text": "it gives you the ability to create cross-platform native ui with net and target windows mac ios and android all",
    "start": "1246799",
    "end": "1255679"
  },
  {
    "text": "from a single codebase and maui itself is mainly focused on building native ui",
    "start": "1255679",
    "end": "1262400"
  },
  {
    "text": "not web-based ui but one of the things you can do with maui if you want to is",
    "start": "1262400",
    "end": "1267760"
  },
  {
    "text": "put some blazer inside it and the benefit of that is it means you can now",
    "start": "1267760",
    "end": "1273039"
  },
  {
    "text": "reuse the same components that you've built for web deployment and have them be part of your native ui application as",
    "start": "1273039",
    "end": "1281200"
  },
  {
    "text": "well as of course making use of any other native functionality on the device that you're targeting and",
    "start": "1281200",
    "end": "1287919"
  },
  {
    "text": "still reach all four of those platforms okay so let's give an example of this and we'll go back to our manufacturing",
    "start": "1287919",
    "end": "1294240"
  },
  {
    "text": "hub and we'll imagine that we want to make a native application for this",
    "start": "1294240",
    "end": "1299440"
  },
  {
    "text": "so that it can be installed on our employees tablets or whatever and we can maybe make use of other native",
    "start": "1299440",
    "end": "1304960"
  },
  {
    "text": "functionality so how can we do that then how can we reuse our web ui inside a native",
    "start": "1304960",
    "end": "1311360"
  },
  {
    "text": "application well one way that i think is particularly convenient is to put all of",
    "start": "1311360",
    "end": "1316480"
  },
  {
    "text": "your shared ui into a class library so that's what i've done here you'll see i've got",
    "start": "1316480",
    "end": "1322159"
  },
  {
    "text": "a project called blazer orbital manufacturing hub here and that's got very little in it this is a web project",
    "start": "1322159",
    "end": "1328480"
  },
  {
    "text": "a blazer webassembly project and it doesn't really have anything in it other than a reference to this class library",
    "start": "1328480",
    "end": "1333919"
  },
  {
    "text": "manufacturinghub.com and that's where all my real functionality is all of my different components as well as things like",
    "start": "1333919",
    "end": "1341200"
  },
  {
    "text": "static content and everything else that i need okay so that's where all the shared stuff is going and then i've also",
    "start": "1341200",
    "end": "1347520"
  },
  {
    "text": "got this other project called native app and i'll set that to be startup and this",
    "start": "1347520",
    "end": "1352559"
  },
  {
    "text": "is a.net maui project if you haven't seen one of these before it gives you the ability to set things up in",
    "start": "1352559",
    "end": "1359039"
  },
  {
    "text": "different ways for different platforms depending on what you're targeting and then you can start defining your",
    "start": "1359039",
    "end": "1364799"
  },
  {
    "text": "native ui using xamarin uh sorry not well what was the xamarin but it's now maui's",
    "start": "1364799",
    "end": "1370559"
  },
  {
    "text": "xaml uh technology so i've got this main page dot xaml and this where it's where i can start",
    "start": "1370559",
    "end": "1376799"
  },
  {
    "text": "defining my native ui and the thing that i'm using here is a blazer webview laser",
    "start": "1376799",
    "end": "1382400"
  },
  {
    "text": "webview is a way of using your existing blazer components or your new ones",
    "start": "1382400",
    "end": "1387760"
  },
  {
    "text": "inside a maui application and the component i'm using in this case is one that is called app which is actually my",
    "start": "1387760",
    "end": "1394400"
  },
  {
    "text": "entire application so you can use individual components or you can just dump the entire application right in",
    "start": "1394400",
    "end": "1399440"
  },
  {
    "text": "there and that's what i've done in this case so let's start that up and see how it looks and works and i'm going to do",
    "start": "1399440",
    "end": "1405600"
  },
  {
    "text": "this for windows initially it's going to use the latest win ui 3 technology so",
    "start": "1405600",
    "end": "1411200"
  },
  {
    "text": "it's a very nice modern windows application and here it comes",
    "start": "1411200",
    "end": "1416640"
  },
  {
    "text": "all right so when that first comes up we should see that it just looks and behaves the same as what we had inside",
    "start": "1416640",
    "end": "1423200"
  },
  {
    "text": "our uh web when we deployed it to the web okay so we've got the same inventory and we've",
    "start": "1423200",
    "end": "1429039"
  },
  {
    "text": "got all the same functionality as before but one thing you really need to understand here is this is not",
    "start": "1429039",
    "end": "1435440"
  },
  {
    "text": "webassembly anymore there is no webassembly whatsoever in this project this is just running on",
    "start": "1435440",
    "end": "1441400"
  },
  {
    "text": "regularnative.net core and it's the same blazer components that are being used through a shared library",
    "start": "1441400",
    "end": "1448000"
  },
  {
    "text": "reference okay now you may be looking at this and thinking oh that's very nice but",
    "start": "1448000",
    "end": "1453760"
  },
  {
    "text": "you know what i've been able to do that for years already have you heard of electron and yes it's true that electron",
    "start": "1453760",
    "end": "1459679"
  },
  {
    "text": "does in fact allow you to do quite similar things electron is a way of using web rendered ui inside and native",
    "start": "1459679",
    "end": "1465679"
  },
  {
    "text": "frame but maui goes beyond what electron does in two main ways one is that it",
    "start": "1465679",
    "end": "1470960"
  },
  {
    "text": "targets a wider range of platforms so it's mobile as well as desktop but the more important way is that it allows you",
    "start": "1470960",
    "end": "1478880"
  },
  {
    "text": "to mix native ui with web ui in whatever combination you want so in electron you're pretty much just doing web ui",
    "start": "1478880",
    "end": "1485360"
  },
  {
    "text": "with some exceptions but with maui you can use as much native ui as you want so",
    "start": "1485360",
    "end": "1490400"
  },
  {
    "text": "to give you an example of that let's say we want to change this navigation system at the top",
    "start": "1490400",
    "end": "1495600"
  },
  {
    "text": "and make it not web ui anymore but we'll have a native navigation system to do that i'm going to go back into my",
    "start": "1495600",
    "end": "1501840"
  },
  {
    "text": "mainpage.xml and i'm going to change this content page here and replace it with a tabbed",
    "start": "1501840",
    "end": "1508559"
  },
  {
    "text": "page which contains a content page and inside this particular tab i'm going to just display the dashboard only not",
    "start": "1508559",
    "end": "1515760"
  },
  {
    "text": "everything else okay so i'm going to control f5 on that we haven't actually finished",
    "start": "1515760",
    "end": "1521200"
  },
  {
    "text": "implementing hot reload for maui yet but we should do with the next vs preview update so that's why i'm having to restart my application and oh there it",
    "start": "1521200",
    "end": "1529440"
  },
  {
    "text": "is all right so now you see we don't have that blue navigation bar at the top we've now got this native thing that's",
    "start": "1529440",
    "end": "1534559"
  },
  {
    "text": "just got dashboard on it and i'd like to put in all the other pages as well so let's grab",
    "start": "1534559",
    "end": "1540320"
  },
  {
    "text": "a bit more stuff from my content page and now i've got different content pages for all these different things designs",
    "start": "1540320",
    "end": "1546720"
  },
  {
    "text": "inventory and so on which all render different root components so let's try that again one more time",
    "start": "1546720",
    "end": "1553360"
  },
  {
    "text": "and hopefully we will now see a full native navigation menu there",
    "start": "1553360",
    "end": "1558880"
  },
  {
    "text": "okay so these are win ui three tabs up at the top and other than that everything's going to look and behave",
    "start": "1558880",
    "end": "1564880"
  },
  {
    "text": "like it should do okay so that's pretty good now we're not limited to just deploying",
    "start": "1564880",
    "end": "1571360"
  },
  {
    "text": "for windows like i said we can target other platforms as well and let's have a",
    "start": "1571360",
    "end": "1577120"
  },
  {
    "text": "look at how this looks on android because it's actually going to look slightly different bear in mind how",
    "start": "1577120",
    "end": "1583120"
  },
  {
    "text": "these tabs look here this is designed for windows because with maui when you use native ui",
    "start": "1583120",
    "end": "1589760"
  },
  {
    "text": "it will be styled to match whichever platform you're on so if i run the same application on android which i'm already",
    "start": "1589760",
    "end": "1596320"
  },
  {
    "text": "doing in this emulator here you'll see it it works you know and all the web ui is the same and you know behaves like",
    "start": "1596320",
    "end": "1602720"
  },
  {
    "text": "you expect it to work which is all you know lovely and everything but the tabs actually look different because these",
    "start": "1602720",
    "end": "1608720"
  },
  {
    "text": "are now native android tabs which not only look different but also have slightly different behaviors like this",
    "start": "1608720",
    "end": "1614720"
  },
  {
    "text": "slightly weird scrolly thing that it does which whether you like that or not probably depends whether you're an android user",
    "start": "1614720",
    "end": "1620240"
  },
  {
    "text": "but other than that it behaves in the way that you expect okay",
    "start": "1620240",
    "end": "1625520"
  },
  {
    "text": "so that's nice um of course we can also deploy to ios and macos as well i don't",
    "start": "1625520",
    "end": "1631360"
  },
  {
    "text": "have a mac here to actually show you that but i have pre-recorded a video of the same application deployed to both",
    "start": "1631360",
    "end": "1638880"
  },
  {
    "text": "ipad and iphone and when that comes up again you'll see that the web part of it looks the same but the native ui is a",
    "start": "1638880",
    "end": "1645919"
  },
  {
    "text": "bit different for ios the tabs actually show up at the bottom that's just the conventions of that platform so very",
    "start": "1645919",
    "end": "1653600"
  },
  {
    "text": "good now before we move on from this i want to try and make sure that i'm giving you a realistic expectations around this",
    "start": "1653600",
    "end": "1660880"
  },
  {
    "text": "because sometimes i'm worried that when i do a demo that's been all worked out in advance everything works and it's as",
    "start": "1660880",
    "end": "1666080"
  },
  {
    "text": "if oh we're in this happy universe where nothing ever goes wrong that's great but in the real world it's actually more",
    "start": "1666080",
    "end": "1671120"
  },
  {
    "text": "complicated than that so i had a bunch of problems getting this to work on ios and android and i want to be honest and",
    "start": "1671120",
    "end": "1676559"
  },
  {
    "text": "tell you about those so when i first tried to make this work on android i was getting errors because it was trying to",
    "start": "1676559",
    "end": "1682080"
  },
  {
    "text": "save the sqlite database into a location that android doesn't allow so i had to debug and fix that and when i've",
    "start": "1682080",
    "end": "1687600"
  },
  {
    "text": "deployed it to ios there's a number of styling issues which i actually haven't fixed so you can see them there so can",
    "start": "1687600",
    "end": "1693279"
  },
  {
    "text": "you see at the top of the screen how the text weirdly overlaps with the status bar that's because it's translucent i",
    "start": "1693279",
    "end": "1698640"
  },
  {
    "text": "need to make that not translucent and notice that the bar at the bottom that tells you how many items we're viewing",
    "start": "1698640",
    "end": "1704000"
  },
  {
    "text": "is just not there well it's behind the tabs also on the iphone you'll see that there",
    "start": "1704000",
    "end": "1709679"
  },
  {
    "text": "should be icons there but i haven't defined any icons because hey i was developing for windows which doesn't need icons so i didn't know um so i want",
    "start": "1709679",
    "end": "1717520"
  },
  {
    "text": "to make sure you've got realistic expectations your code can work on all these platforms we absolutely enabled it",
    "start": "1717520",
    "end": "1723919"
  },
  {
    "text": "but you will still have to test on all those platforms you will find differences and quirks that you need to",
    "start": "1723919",
    "end": "1730080"
  },
  {
    "text": "account for because the platforms are meant to look and behave differently so please have realistic expectations",
    "start": "1730080",
    "end": "1737279"
  },
  {
    "text": "around that but with that in mind just think about what kind of power and",
    "start": "1737279",
    "end": "1742559"
  },
  {
    "text": "reach you're getting from this so we've talked about how your blazer components can now run in windows macos ios on",
    "start": "1742559",
    "end": "1749840"
  },
  {
    "text": "android as native applications as well as of course web-based deployment whether you're using blazer webassembly",
    "start": "1749840",
    "end": "1756880"
  },
  {
    "text": "or blazer server so that's a pretty fantastic level of reach and payoff that you're getting for your investment in a",
    "start": "1756880",
    "end": "1763120"
  },
  {
    "text": "blazer component but that's not all there are also other types of",
    "start": "1763120",
    "end": "1768320"
  },
  {
    "text": "applications we know that people have got existing maybe legacy applications that they want to update and modernize",
    "start": "1768320",
    "end": "1775679"
  },
  {
    "text": "so as part of the same release we are also adding support for using your",
    "start": "1775679",
    "end": "1781200"
  },
  {
    "text": "blazer components as part of windows forms and wpf applications as well so",
    "start": "1781200",
    "end": "1787200"
  },
  {
    "text": "let me give you a quick example of that as well so as well as the manufacturing group",
    "start": "1787200",
    "end": "1793279"
  },
  {
    "text": "and the missions control group in your space agency there is also the accounting team the accounting team are",
    "start": "1793279",
    "end": "1800399"
  },
  {
    "text": "a fun bunch and they have got an application written in traditional wpf",
    "start": "1800399",
    "end": "1806559"
  },
  {
    "text": "and maybe it's a bit of a legacy application i don't know um but here it is and if you know wpf you'll know that",
    "start": "1806559",
    "end": "1814159"
  },
  {
    "text": "it's implemented with xaml and i'm going into this xaml page here within the wpf",
    "start": "1814159",
    "end": "1820080"
  },
  {
    "text": "app and you can see that just in the same way that we can use blazer webview in maui we've also set it up so that you",
    "start": "1820080",
    "end": "1827039"
  },
  {
    "text": "can use it inside wpf and windows forms let's see that working shall we i'm",
    "start": "1827039",
    "end": "1832960"
  },
  {
    "text": "going to control f5 on that and then when the accounting application opens up you can see it's got all this boring",
    "start": "1832960",
    "end": "1838720"
  },
  {
    "text": "accounting related stuff and then we go over to the inventory screen and we are going to see our blaze blazer",
    "start": "1838720",
    "end": "1846880"
  },
  {
    "text": "implemented grid there now it's going to make me log in because it's trying to synchronize changes from",
    "start": "1846880",
    "end": "1852080"
  },
  {
    "text": "the server which there aren't any so that was pointless but anyway right i'm logged in and now my",
    "start": "1852080",
    "end": "1857360"
  },
  {
    "text": "application is going to look and work the same as before in fact one slightly interesting thing",
    "start": "1857360",
    "end": "1863200"
  },
  {
    "text": "to point out if i go in here notice how we've got this qr code there now if you",
    "start": "1863200",
    "end": "1868720"
  },
  {
    "text": "think carefully you might be thinking hang on a minute how is that working because that's the rust thing that you compiled to",
    "start": "1868720",
    "end": "1875039"
  },
  {
    "text": "webassembly and you've just been saying that this is not webassembly this is all native code so",
    "start": "1875039",
    "end": "1880880"
  },
  {
    "text": "what's going on are you lying to me well actually what's going on here is that when i compiled that rust library to",
    "start": "1880880",
    "end": "1887440"
  },
  {
    "text": "webassembly i didn't tell you but i also compiled it to a native windows binary and i could have compiled it to a native",
    "start": "1887440",
    "end": "1893279"
  },
  {
    "text": "mac and android binary and so on as well and then the way that we're actually using that",
    "start": "1893279",
    "end": "1899200"
  },
  {
    "text": "in here with the dll import well that's the same way that you import dlls in.net on",
    "start": "1899200",
    "end": "1904720"
  },
  {
    "text": "any platform so the fact that i've got a windows binary for this means that it's just going to work the same way there in",
    "start": "1904720",
    "end": "1910559"
  },
  {
    "text": "all my native applications or at least the windows ones as well and i would need uh android and ios binaries if i",
    "start": "1910559",
    "end": "1916159"
  },
  {
    "text": "want that to work as well okay so there we go we can now run your",
    "start": "1916159",
    "end": "1922080"
  },
  {
    "text": "blazer components in an incredibly wide range of places",
    "start": "1922080",
    "end": "1927600"
  },
  {
    "text": "let's move on shall we let's think about what's coming after all that so the next major release of dotnet is going to be",
    "start": "1927600",
    "end": "1935600"
  },
  {
    "text": "dotnet seven which is scheduled for november of this year and we're doing a major release of net core every year so",
    "start": "1935600",
    "end": "1942399"
  },
  {
    "text": "you should be expecting this by now and we've got a bunch of ideas partly ones",
    "start": "1942399",
    "end": "1947600"
  },
  {
    "text": "we've come up with ourselves and partly ones that the communities ask for about what to do to improve blazer in dot net",
    "start": "1947600",
    "end": "1953200"
  },
  {
    "text": "seven i can't actually demonstrate this to you because we haven't implemented them yet because we've been so busy with",
    "start": "1953200",
    "end": "1958480"
  },
  {
    "text": "maui but i can tell you about some of the stuff we're considering so um actually i have kind of demonstrated",
    "start": "1958480",
    "end": "1964159"
  },
  {
    "text": "this already so when i was using the inventory grid as a custom element in the react application that was partly",
    "start": "1964159",
    "end": "1970720"
  },
  {
    "text": "using net six features and partly using something that we haven't actually shipped yet um so we're going to",
    "start": "1970720",
    "end": "1975760"
  },
  {
    "text": "hopefully make that we'll definitely make that fully official as part of net 7.",
    "start": "1975760",
    "end": "1980880"
  },
  {
    "text": "we're also looking at adding multi-threading into blazer web assembly so historically webassembly has been",
    "start": "1980880",
    "end": "1986399"
  },
  {
    "text": "limited to single threading because it's built on javascript engines and javascript has always been single",
    "start": "1986399",
    "end": "1992080"
  },
  {
    "text": "threaded but modern browsers do now support multi-threading in webassembly so we want to bring that into blazer as",
    "start": "1992080",
    "end": "1997679"
  },
  {
    "text": "well we've got lots of plans to improve the tooling for the razer editor both in",
    "start": "1997679",
    "end": "2003440"
  },
  {
    "text": "terms of its features as well as its performance and stability um so yeah look out for lots of good stuff there um",
    "start": "2003440",
    "end": "2010000"
  },
  {
    "text": "many people have asked us could we give them a template that doesn't include a counter page and a silly weather",
    "start": "2010000",
    "end": "2015360"
  },
  {
    "text": "forecast screen and yes uh if i get my way we will definitely be",
    "start": "2015360",
    "end": "2021200"
  },
  {
    "text": "providing you with a nice fresh empty template there we going to improve hot reload so it can handle more types of",
    "start": "2021200",
    "end": "2027440"
  },
  {
    "text": "code changes people have asked us hey can i have multiple blazer applications running simultaneously and",
    "start": "2027440",
    "end": "2034080"
  },
  {
    "text": "same the same web page that's actually not supported with dot net six and earlier but we'll hopefully sort that",
    "start": "2034080",
    "end": "2039679"
  },
  {
    "text": "out for you in dot net seven we are thinking about providing a basic uh a",
    "start": "2039679",
    "end": "2045279"
  },
  {
    "text": "small but highly performant grid starter in the box that's something i was using inside the blaze orbital",
    "start": "2045279",
    "end": "2052079"
  },
  {
    "text": "sample that is not intended to replace the more sophisticated grids that you can find",
    "start": "2052079",
    "end": "2057118"
  },
  {
    "text": "from open source projects and component vendors but it does provide a basic starting point for anyone who just wants",
    "start": "2057119",
    "end": "2062800"
  },
  {
    "text": "something simple and needs it to make sure it really performs well and then there's various other things",
    "start": "2062800",
    "end": "2068158"
  },
  {
    "text": "improving interactions between pre-rendering the north making sure that when you use the crypto apis in net they",
    "start": "2068159",
    "end": "2075118"
  },
  {
    "text": "correctly map to the underlying javascript ones to maximize performance and some improvements to ahead of time",
    "start": "2075119",
    "end": "2081118"
  },
  {
    "text": "compilation today with aot compilation it's an all or nothing thing like it's your whole application or nothing but",
    "start": "2081119",
    "end": "2088240"
  },
  {
    "text": "there's a bit of a trade-off because although aot makes your application faster it also makes it bigger and take",
    "start": "2088240",
    "end": "2094079"
  },
  {
    "text": "longer to download so it would be nice if you could just selectively aot",
    "start": "2094079",
    "end": "2099280"
  },
  {
    "text": "individual parts of it that you really need the performance improvement in so that's something we will hopefully add",
    "start": "2099280",
    "end": "2104800"
  },
  {
    "text": "in dot net seven now if you want more details you can go to the url that i've got at the bottom there and hopefully",
    "start": "2104800",
    "end": "2110400"
  },
  {
    "text": "you will leave us your upvotes or your comments or your downvotes and maybe give us some other ideas and we'll",
    "start": "2110400",
    "end": "2115680"
  },
  {
    "text": "account for that as we get started on the buildingthe.net 7 features all right",
    "start": "2115680",
    "end": "2121200"
  },
  {
    "text": "so let's move further forwards into the uncertain fog of the future and",
    "start": "2121200",
    "end": "2127920"
  },
  {
    "text": "think about what we might do as we go forwards much further now",
    "start": "2127920",
    "end": "2133280"
  },
  {
    "text": "everything i'm about to say for the rest of the talk is not a commitment it's just a bunch of experiments that we're",
    "start": "2133280",
    "end": "2138960"
  },
  {
    "text": "doing that we are trying to get your feedback about and see if this is of interest to you",
    "start": "2138960",
    "end": "2144480"
  },
  {
    "text": "and this is going to be not actually even about blazer this is going to be about net on web assembly in general and",
    "start": "2144480",
    "end": "2151200"
  },
  {
    "text": "specifically webassembly on the server and to understand how that works and why",
    "start": "2151200",
    "end": "2156560"
  },
  {
    "text": "it's interesting we need to start by taking a quick step back to make sure everyone really understands what",
    "start": "2156560",
    "end": "2161760"
  },
  {
    "text": "webassembly itself actually is so webassembly has been around for many years like seven years or something by",
    "start": "2161760",
    "end": "2167680"
  },
  {
    "text": "now but what actually is it well it's a by-code format it's a way of",
    "start": "2167680",
    "end": "2172960"
  },
  {
    "text": "representing instructions that are independent of any particular cpu architecture or or operating system and",
    "start": "2172960",
    "end": "2179760"
  },
  {
    "text": "it is designed for running your code in a sandbox it was originally designed for running inside a browser where you will",
    "start": "2179760",
    "end": "2186640"
  },
  {
    "text": "be running hostile code so the sandbox needs to be incredibly rigorous and bulletproof and to make sure it's that",
    "start": "2186640",
    "end": "2193520"
  },
  {
    "text": "rigorous the only thing that webassembly bytecode can do by default is perform",
    "start": "2193520",
    "end": "2198720"
  },
  {
    "text": "operations on its own memory that's it it just changes numbers in its own memory space",
    "start": "2198720",
    "end": "2204160"
  },
  {
    "text": "which is kind of pointless if there's no way of interacting with the outside world so the other main thing that it",
    "start": "2204160",
    "end": "2210320"
  },
  {
    "text": "has is the ability to import and export functions so the host that is running your code can import functions into the",
    "start": "2210320",
    "end": "2217680"
  },
  {
    "text": "webassembly which it can then call and webassembly can export functions that the host can call",
    "start": "2217680",
    "end": "2223119"
  },
  {
    "text": "okay so that's fine but if we want to use this for server-side programming the code is",
    "start": "2223119",
    "end": "2228320"
  },
  {
    "text": "going to have to interact with the operating system in some way ideally through some functions that we",
    "start": "2228320",
    "end": "2233359"
  },
  {
    "text": "import but what would those function imports be wouldn't it be nice if there was some sort of standard well that",
    "start": "2233359",
    "end": "2240160"
  },
  {
    "text": "brings us to wazi the web assembly server interface specification which has",
    "start": "2240160",
    "end": "2245440"
  },
  {
    "text": "been around for three or four years by now and that defines a standard set of imports that represents operating system",
    "start": "2245440",
    "end": "2252880"
  },
  {
    "text": "type functionality such as accessing a file system or working with network sockets",
    "start": "2252880",
    "end": "2258240"
  },
  {
    "text": "but it's still sandboxed so just because there are some file system apis it",
    "start": "2258240",
    "end": "2263920"
  },
  {
    "text": "doesn't mean you can use them the host chooses whether or not to let you access the file system or network or whatever",
    "start": "2263920",
    "end": "2270160"
  },
  {
    "text": "and like i said this is not about running in a browser or any javascript environment",
    "start": "2270160",
    "end": "2275200"
  },
  {
    "text": "this is focused on server-side programming now you might be thinking why what's the",
    "start": "2275200",
    "end": "2280400"
  },
  {
    "text": "point i can already run code on a server why would i want to stick it inside an additional webassembly sandbox",
    "start": "2280400",
    "end": "2288160"
  },
  {
    "text": "well there's a number of ways that people think about that and describe those benefits one way that i think is",
    "start": "2288160",
    "end": "2293440"
  },
  {
    "text": "useful to think is that wazi can be a universal application binary interface",
    "start": "2293440",
    "end": "2299520"
  },
  {
    "text": "so that is a contract between a host that runs some code and then the code",
    "start": "2299520",
    "end": "2304720"
  },
  {
    "text": "that you're writing and this host it could be a cloud-based service or something that runs at the edge of the",
    "start": "2304720",
    "end": "2310800"
  },
  {
    "text": "cloud like a content delivery network or a low-powered iot device it could be a",
    "start": "2310800",
    "end": "2316000"
  },
  {
    "text": "plug-in system for an application like an office plug-in or a flight simulator plug-in or a plug-in for some kind of",
    "start": "2316000",
    "end": "2322480"
  },
  {
    "text": "music creation studio or something like that or it could be a programmable feature of an operating system and then",
    "start": "2322480",
    "end": "2328480"
  },
  {
    "text": "the code that is running in it is just whatever code you the application developer choose to write and there are",
    "start": "2328480",
    "end": "2334560"
  },
  {
    "text": "benefits to using wazi as the api on both sides of this equation so on the",
    "start": "2334560",
    "end": "2340320"
  },
  {
    "text": "host side one of the main benefits is that the code is fully sandbox which is obviously very useful if that code turns",
    "start": "2340320",
    "end": "2347119"
  },
  {
    "text": "out to be malicious but that's a bit of an unusual case a more common case would be that the code is trying to behave",
    "start": "2347119",
    "end": "2354000"
  },
  {
    "text": "well but it just accidentally contains a security vulnerability well even in that case the sandbox is going to protect the",
    "start": "2354000",
    "end": "2361280"
  },
  {
    "text": "host and it allows the host to control things like what the code can do can it access the disk can it access the",
    "start": "2361280",
    "end": "2368320"
  },
  {
    "text": "network but even beyond that it allows the host to constrain things like how many cpu instructions is this call",
    "start": "2368320",
    "end": "2375760"
  },
  {
    "text": "allowed to take before i say it's using too much cpu resources how much memory is it allowed to allocate so the host",
    "start": "2375760",
    "end": "2383599"
  },
  {
    "text": "can very rigorously defend itself against whatever code it's running and then as well as that it also simplifies",
    "start": "2383599",
    "end": "2390480"
  },
  {
    "text": "things in terms of the development experience so the host doesn't need a custom build tool chain it can just",
    "start": "2390480",
    "end": "2396320"
  },
  {
    "text": "accept a single wasm file that's been built by any existing wasm tool chain",
    "start": "2396320",
    "end": "2402640"
  },
  {
    "text": "and then on the other side of the equation for the application developer it means that you can write your code in",
    "start": "2402640",
    "end": "2407839"
  },
  {
    "text": "any programming language at all as long as it compiles to webassembly which is most of them now and it means that when",
    "start": "2407839",
    "end": "2414160"
  },
  {
    "text": "you are deploying your application you don't have to care what operating system it's got being run on or even what cpu",
    "start": "2414160",
    "end": "2421599"
  },
  {
    "text": "architecture because the same binary is going to work everywhere so even if your development machine has got an arm",
    "start": "2421599",
    "end": "2428240"
  },
  {
    "text": "processor and the host is x64 or vice versa you don't have to care about that the same binary will run everywhere and",
    "start": "2428240",
    "end": "2435599"
  },
  {
    "text": "because of the nature of webassembly which has always been built designed for speed you should be able to get",
    "start": "2435599",
    "end": "2441359"
  },
  {
    "text": "something approximating native speed not exactly but close enough that hopefully it won't matter",
    "start": "2441359",
    "end": "2447839"
  },
  {
    "text": "okay so let's think about net now in this environment and what uh how we would actually use that in fact actually",
    "start": "2447839",
    "end": "2454720"
  },
  {
    "text": "before that just i just want to add a note so you might look at this and say hey that's actually kind of similar to some of the same benefits that you get",
    "start": "2454720",
    "end": "2461359"
  },
  {
    "text": "with containerization like docker or similar and it's true there are some similarities in fact some people have",
    "start": "2461359",
    "end": "2467119"
  },
  {
    "text": "been saying that wazi could be the next big evolution in cloud containerization",
    "start": "2467119",
    "end": "2472800"
  },
  {
    "text": "now i don't know if that's going to be true in fact as a whole across the dot-net team we don't know if wazi is going to",
    "start": "2472800",
    "end": "2479440"
  },
  {
    "text": "take over the industry or whether it's just going to disappear one day but our purpose with exploring this is to make",
    "start": "2479440",
    "end": "2485040"
  },
  {
    "text": "sure that wherever the industry does go net can be at the cutting edge of it right at the forefront of innovation and",
    "start": "2485040",
    "end": "2490960"
  },
  {
    "text": "you as net developers can be confident that your skills and even your existing code can go wherever the industry goes",
    "start": "2490960",
    "end": "2498000"
  },
  {
    "text": "so that's why we're exploring this area now let's think about how exactly we could run.net in this environment you",
    "start": "2498000",
    "end": "2505200"
  },
  {
    "text": "might think well we can already run blazer webassembly on webassembly so we",
    "start": "2505200",
    "end": "2510480"
  },
  {
    "text": "can just use that right we've already got a way of running.net and webassembly we're done but actually that won't work",
    "start": "2510480",
    "end": "2515520"
  },
  {
    "text": "it's a bit more complex than that and let me just explain why when we build a blazer webassembly application to run in",
    "start": "2515520",
    "end": "2522000"
  },
  {
    "text": "a browser we use this tool chain called m scriptin which has been around for a while and it's designed around running",
    "start": "2522000",
    "end": "2527920"
  },
  {
    "text": "stuff in browsers so the output from this build is the net runtime compiled",
    "start": "2527920",
    "end": "2533200"
  },
  {
    "text": "to webassembly as a binary it's all of your dlls that you've written yourself your.net dlls and anything that you",
    "start": "2533200",
    "end": "2539440"
  },
  {
    "text": "depend on as well as a bit of javascript that knows how to start this stuff up in a browser and then when that's running",
    "start": "2539440",
    "end": "2546400"
  },
  {
    "text": "when you make any calls to operating system type features for example you do a network request that becomes a call",
    "start": "2546400",
    "end": "2552960"
  },
  {
    "text": "into the javascript runtime that's what emscripton is doing for us and this is great in a browser it's great that we've",
    "start": "2552960",
    "end": "2559359"
  },
  {
    "text": "split things up into lots of files because you know the download can be parallelized it's great that we're using javascript because that's what there is",
    "start": "2559359",
    "end": "2566400"
  },
  {
    "text": "but this is not great in a was the environment because for one thing you don't want to have loads of files that's",
    "start": "2566400",
    "end": "2572160"
  },
  {
    "text": "really inconvenient to deploy and sometimes it's actually impossible some wisely runners only let you deploy one file and it's no use to depend on",
    "start": "2572160",
    "end": "2578800"
  },
  {
    "text": "javascript because there isn't any javascript that's kind of the whole point so we started looking at an experimental",
    "start": "2578800",
    "end": "2585359"
  },
  {
    "text": "new way of compiling.net to webassembly using the the wazi sdk a different tool",
    "start": "2585359",
    "end": "2590640"
  },
  {
    "text": "chain which is built of the llvm compiler tool chain and the output from this when you build your application is",
    "start": "2590640",
    "end": "2597280"
  },
  {
    "text": "just a single file your application.wasm and that contains everything you need the relevant parts of the.net runtime",
    "start": "2597280",
    "end": "2603839"
  },
  {
    "text": "your code your libraries any other static files you're using and then when you make your network calls or your",
    "start": "2603839",
    "end": "2609680"
  },
  {
    "text": "other operating system calls it doesn't use javascript it uses the system interface functions provided by yz so",
    "start": "2609680",
    "end": "2617040"
  },
  {
    "text": "hopefully it can run anywhere now this is just an experiment as i've been saying uh we're not committed to",
    "start": "2617040",
    "end": "2622319"
  },
  {
    "text": "shipping this but we want to get your feedback about it so let me give you an example",
    "start": "2622319",
    "end": "2627920"
  },
  {
    "text": "let's start by creating a new thing with uh net and running in a wazzy runner i'm",
    "start": "2627920",
    "end": "2634079"
  },
  {
    "text": "going to start by making the simplest thing i possibly can which is a basic",
    "start": "2634079",
    "end": "2639760"
  },
  {
    "text": "console application that just prints hello world so i'll run that now i need to go into the directory",
    "start": "2639760",
    "end": "2648079"
  },
  {
    "text": "and then i will run that okay now this is not webassembly yet this is just normal.net core and that's just going to",
    "start": "2648079",
    "end": "2654400"
  },
  {
    "text": "print hello world great nothing new here let's just quickly make it do something slightly more useful i'll get a bit more",
    "start": "2654400",
    "end": "2661119"
  },
  {
    "text": "information out of it so i just want to grab a bit of code and then i'm going to edit that and i'll",
    "start": "2661119",
    "end": "2668560"
  },
  {
    "text": "change it so that it now tells us what the current time is in utc and also what",
    "start": "2668560",
    "end": "2673920"
  },
  {
    "text": "operating system architecture we are running on okay so of course i can run that as a",
    "start": "2673920",
    "end": "2679200"
  },
  {
    "text": "normal.net core application and it tells us what the time is and that this laptop has an x64 processor cool",
    "start": "2679200",
    "end": "2686960"
  },
  {
    "text": "can we turn that into a wasm module that can run in a way runner well to do that",
    "start": "2686960",
    "end": "2692240"
  },
  {
    "text": "we can add this new experimental sdk was the sdk which is on nougat you can try",
    "start": "2692240",
    "end": "2697920"
  },
  {
    "text": "it yourself if you want and then when i've done that the next time i build something slightly different is going to",
    "start": "2697920",
    "end": "2704240"
  },
  {
    "text": "start happening so firstly you'll see it builds the hello wazi.dll same as normal",
    "start": "2704240",
    "end": "2709520"
  },
  {
    "text": "but we're actually not going to use that at runtime so you could ignore it or delete it if you want then it does a little bit of work to prepare all the",
    "start": "2709520",
    "end": "2716160"
  },
  {
    "text": "assemblies and our dependencies and puts them into a single wasm file it's a bit hard to read so let's just do that again",
    "start": "2716160",
    "end": "2723040"
  },
  {
    "text": "you'll see it builds much quicker the second time because it doesn't have to repeat all those processes so it's nice and fast and we've now built this hello",
    "start": "2723040",
    "end": "2730280"
  },
  {
    "text": "wazi.wasm file and we can run it so how can we run these things well there are various wasm runners that are designed",
    "start": "2730280",
    "end": "2737200"
  },
  {
    "text": "for server-side use and i'm going to start by using one called wasmtime this is an open source project built by the",
    "start": "2737200",
    "end": "2744240"
  },
  {
    "text": "bytecode alliance that's a group of companies that includes microsoft and google and some others so this is a pretty good one and i can use that like",
    "start": "2744240",
    "end": "2752240"
  },
  {
    "text": "the following so i'm just going to paste in the path to my wasm file that i've just built and",
    "start": "2752240",
    "end": "2757280"
  },
  {
    "text": "you'll see that now runs and it works exactly the same as before except that now our machine architecture is",
    "start": "2757280",
    "end": "2763599"
  },
  {
    "text": "webassembly and this is a totally standard yz compliant file so it can run anywhere",
    "start": "2763599",
    "end": "2770480"
  },
  {
    "text": "now what do i mean by that and how can we be sure that that's actually true well i'm going to use this tool called",
    "start": "2770480",
    "end": "2776560"
  },
  {
    "text": "wasm objemp to say hey please give me a list of all the function imports that this particular module depends on so we",
    "start": "2776560",
    "end": "2783839"
  },
  {
    "text": "know what the host needs to provide and it tells us this depends on 23 imports and it's a",
    "start": "2783839",
    "end": "2789680"
  },
  {
    "text": "load of stuff to do with clocks and file system and stuff like that now you don't have to read all that all you have to",
    "start": "2789680",
    "end": "2794720"
  },
  {
    "text": "notice is that every single one of these is within the wazi snapshot preview 1 namespace which means they are all wazi",
    "start": "2794720",
    "end": "2801760"
  },
  {
    "text": "standard functions which means that this module should work in any compliant wazey runner and to prove that i will",
    "start": "2801760",
    "end": "2808400"
  },
  {
    "text": "use a different wazey runner called wasma which is built by a different third party it's another open source",
    "start": "2808400",
    "end": "2814079"
  },
  {
    "text": "project and inside there i'm going to give it a reference to the same module and you'll see it runs exactly the same",
    "start": "2814079",
    "end": "2820800"
  },
  {
    "text": "same behavior as you should expect okay cool so this is a good start we've shown",
    "start": "2820800",
    "end": "2826720"
  },
  {
    "text": "that basic.net code can run but what about more sophisticated.net code generally people aren't that interested",
    "start": "2826720",
    "end": "2833599"
  },
  {
    "text": "in login hello world to console the more relevant thing to do with wazi is to",
    "start": "2833599",
    "end": "2838720"
  },
  {
    "text": "explore the new frontiers of cloud native architecture and build some modern network services and if you're a",
    "start": "2838720",
    "end": "2846160"
  },
  {
    "text": "net developer you probably want to build that using something like asp.net core so can we compile something as",
    "start": "2846160",
    "end": "2852960"
  },
  {
    "text": "sophisticated and big as a whole asp.net core application into a single wasm file",
    "start": "2852960",
    "end": "2858559"
  },
  {
    "text": "well let's have a look shall we i'm going to go over to this other vs instance over here and inside there i've",
    "start": "2858559",
    "end": "2865599"
  },
  {
    "text": "got the most basic asp.net core application i can possibly create it does almost",
    "start": "2865599",
    "end": "2871280"
  },
  {
    "text": "nothing all it does is for every http request it just replies with this hello",
    "start": "2871280",
    "end": "2876559"
  },
  {
    "text": "i'm running on which os architecture and it's completely standard except for this",
    "start": "2876559",
    "end": "2882319"
  },
  {
    "text": "call here used wisely connection listener and this is an extension method that says i don't want to use the normal",
    "start": "2882319",
    "end": "2888800"
  },
  {
    "text": "windows or linux networking apis i want to use the network apis that are part of",
    "start": "2888800",
    "end": "2894319"
  },
  {
    "text": "wazi and if you're wondering where that extension method comes from well it comes from this package why is the",
    "start": "2894319",
    "end": "2900720"
  },
  {
    "text": "asp.net core server native which is part of this experimental bundle of packages",
    "start": "2900720",
    "end": "2906319"
  },
  {
    "text": "of course i've also referenced the wazi sdk because i want to compile it to a webassembly file and then i've also set",
    "start": "2906319",
    "end": "2912160"
  },
  {
    "text": "up a few other runner arguments to tell it which port to listen on now this is set up so that i can just do net run or",
    "start": "2912160",
    "end": "2918559"
  },
  {
    "text": "control f5 so i'll actually do that now i'll do control f5 in vs and that will pop up in a browser and you'll see hello",
    "start": "2918559",
    "end": "2926000"
  },
  {
    "text": "from asp.net core running on wasm and if we check you'll see that the native",
    "start": "2926000",
    "end": "2931520"
  },
  {
    "text": "binary that we're using here is in fact wasm time the same thing i was using in the command line but other than that it",
    "start": "2931520",
    "end": "2938480"
  },
  {
    "text": "looks and behaves exactly like a normal asp.net core application because it is a normal asp.net core",
    "start": "2938480",
    "end": "2944400"
  },
  {
    "text": "application so we should expect that all right so this is cool but it's still a bit boring right this is just the web",
    "start": "2944400",
    "end": "2950720"
  },
  {
    "text": "equivalent of logging hello world to a console can we use more sophisticated features",
    "start": "2950720",
    "end": "2956480"
  },
  {
    "text": "of asp.net core within this kind of environment well to explore that i've got another project here which i will",
    "start": "2956480",
    "end": "2963440"
  },
  {
    "text": "set as startup and you'll see that this is basically what you get when you create a file new asp.net core",
    "start": "2963440",
    "end": "2969520"
  },
  {
    "text": "application except i've also added a few things into it just to try out a bunch of extra features so i'm going to start",
    "start": "2969520",
    "end": "2976480"
  },
  {
    "text": "that up now and hopefully that will also start under wasm time there it is coming",
    "start": "2976480",
    "end": "2981920"
  },
  {
    "text": "up and if we look in there we're now doing a bit more than before we're now rendering an mvc controller which in",
    "start": "2981920",
    "end": "2988240"
  },
  {
    "text": "turn is rendering an mvc view with razer and we've also got an example of razer",
    "start": "2988240",
    "end": "2993839"
  },
  {
    "text": "pages with static files inside them uh we've got an example of a minimal api",
    "start": "2993839",
    "end": "2998960"
  },
  {
    "text": "there it's pretty minimal it just tells you what the time is if you want to see the source code for that well that's",
    "start": "2998960",
    "end": "3005119"
  },
  {
    "text": "here right there yep indeed very minimal api we've also got",
    "start": "3005119",
    "end": "3010720"
  },
  {
    "text": "grpc this is the classic greeter example for grpc now i don't know if you've seen",
    "start": "3010720",
    "end": "3016800"
  },
  {
    "text": "grpc running underway before i haven't seen that done but it was actually extremely easy to do in this case",
    "start": "3016800",
    "end": "3022480"
  },
  {
    "text": "because it's all just standard a-spin it code uh to actually make a request to this grpc endpoint i need a client",
    "start": "3022480",
    "end": "3029200"
  },
  {
    "text": "application so i've got this console application here called greeter client and when i run that it'll make a call to",
    "start": "3029200",
    "end": "3035359"
  },
  {
    "text": "the server and it does indeed say hey look i'm running on wazi and grpc works good uh what else have we got well we've",
    "start": "3035359",
    "end": "3043119"
  },
  {
    "text": "also got uh signalr and websockets so again i don't probably haven't seen websockets",
    "start": "3043119",
    "end": "3048720"
  },
  {
    "text": "on wazi before but you know absolutely can work standard signalr code this is the",
    "start": "3048720",
    "end": "3054079"
  },
  {
    "text": "classic signalr chat example the normal way to demo this is to have two windows",
    "start": "3054079",
    "end": "3059680"
  },
  {
    "text": "so let's um send a message hello on wazi and then when we send the message it",
    "start": "3059680",
    "end": "3065440"
  },
  {
    "text": "shows up in both browser windows because they're both connected to the same uh websocket endpoint okay and all of that",
    "start": "3065440",
    "end": "3072800"
  },
  {
    "text": "is of course here on our native wasm time binary all right cool so what have we learned",
    "start": "3072800",
    "end": "3078880"
  },
  {
    "text": "well we've learned that we can indeed compile a asp.net core application to a",
    "start": "3078880",
    "end": "3084160"
  },
  {
    "text": "single wasm file and run it in a was the environment and our familiar programming model all works there are some caveats",
    "start": "3084160",
    "end": "3091359"
  },
  {
    "text": "to what works and what doesn't but you know to a reasonable approximation it all works okay but that's not really the",
    "start": "3091359",
    "end": "3098559"
  },
  {
    "text": "point of doing all this if you just want to build the same kinds of asp.net core applications then you don't really need",
    "start": "3098559",
    "end": "3105119"
  },
  {
    "text": "to run them in wazi the point of doing this is to explore new kinds of application architectures and to run",
    "start": "3105119",
    "end": "3111920"
  },
  {
    "text": "your code in new places where it would not have been able to run before and i'm going to show you a reasonable example",
    "start": "3111920",
    "end": "3117760"
  },
  {
    "text": "of that in a little bit but before we get to that i want to show you a completely unreasonable and ridiculous",
    "start": "3117760",
    "end": "3123760"
  },
  {
    "text": "example of something that you can do even though you absolutely should not do but i just want to show it to you",
    "start": "3123760",
    "end": "3129280"
  },
  {
    "text": "because it's really amusing and mind-bending that it's possible okay so let me just introduce this",
    "start": "3129280",
    "end": "3134880"
  },
  {
    "text": "scenario just bear with me for a minute as we go into this so i've got another",
    "start": "3134880",
    "end": "3140160"
  },
  {
    "text": "asp.net core application here which is rendering a a boring familiar to-do list",
    "start": "3140160",
    "end": "3145440"
  },
  {
    "text": "kind of example so you can you know add stuff to your to-do list and then delete it later and so on but the important thing to note",
    "start": "3145440",
    "end": "3151920"
  },
  {
    "text": "here is this is not blazer this is not any javascript framework this is pure",
    "start": "3151920",
    "end": "3158240"
  },
  {
    "text": "server-side rendering so this is just a traditional old-fashioned thing where the server renders html and then the",
    "start": "3158240",
    "end": "3164800"
  },
  {
    "text": "browser does form posts back to the server in order to change the state there so where can we deploy and run a",
    "start": "3164800",
    "end": "3172960"
  },
  {
    "text": "server rendered application like this can we run it on github pages well",
    "start": "3172960",
    "end": "3179440"
  },
  {
    "text": "traditionally the answer would be no of course you can't do that github pages is a static file server you cannot use a",
    "start": "3179440",
    "end": "3185520"
  },
  {
    "text": "server rendered application there well let's see about that shall we so i am",
    "start": "3185520",
    "end": "3190880"
  },
  {
    "text": "going to grab this url here and go into my browser and you can see that this url very much",
    "start": "3190880",
    "end": "3197599"
  },
  {
    "text": "is on github pages it's a real url you can go to it on your phone or whatever if you want and when i go in there it",
    "start": "3197599",
    "end": "3203520"
  },
  {
    "text": "says starting asp.net core server and then what happens is our server-rendered",
    "start": "3203520",
    "end": "3208720"
  },
  {
    "text": "application actually pops up and we can go in there and we can start you know adding stuff to the list do stuff okay",
    "start": "3208720",
    "end": "3215599"
  },
  {
    "text": "cool we can have multiple browser tabs and see that we've got the same state so if i go into another tab you'll see",
    "start": "3215599",
    "end": "3222000"
  },
  {
    "text": "we've got that thing that i've just added there we could go to other pages like this minimal api endpoint here and again see",
    "start": "3222000",
    "end": "3229920"
  },
  {
    "text": "the same state so what on earth is going on how are we running this server-ended application on a static file server well",
    "start": "3229920",
    "end": "3237119"
  },
  {
    "text": "you may have noticed it gives away the trick here this is asp.net core actually running inside the browser and to really",
    "start": "3237119",
    "end": "3243599"
  },
  {
    "text": "see that we can go into the console and if you look closely we've got all of the server log output showing up in the",
    "start": "3243599",
    "end": "3249920"
  },
  {
    "text": "browser console there so what on earth how is that working well i've just shown you how we've now got a",
    "start": "3249920",
    "end": "3256240"
  },
  {
    "text": "tool chain for compiling a whole asp.net core application to a webassembly file a",
    "start": "3256240",
    "end": "3261920"
  },
  {
    "text": "wazi uh flavor webassembly file so obviously we can run that in a wazi environment but another thing that's famously very",
    "start": "3261920",
    "end": "3268800"
  },
  {
    "text": "good at running webassembly is browsers so we can now technically run asp.net core the server inside a browser if we",
    "start": "3268800",
    "end": "3275520"
  },
  {
    "text": "want to which is a ridiculous idea and you absolutely should not do it because it gives up on all the real benefits of",
    "start": "3275520",
    "end": "3281200"
  },
  {
    "text": "server side programming it's just a weird trick but i think it's useful to see just to illustrate the extreme power",
    "start": "3281200",
    "end": "3287920"
  },
  {
    "text": "and flexibility that we get from being able to compile our applications in this way and run them in new kinds of",
    "start": "3287920",
    "end": "3293839"
  },
  {
    "text": "environments now just in case you're feeling a bit confused about how this",
    "start": "3293839",
    "end": "3298880"
  },
  {
    "text": "was actually working in the browser and how i was sharing state across tabs well what's actually going on here",
    "start": "3298880",
    "end": "3304880"
  },
  {
    "text": "is for this url there's a service worker registered and that service worker",
    "start": "3304880",
    "end": "3310079"
  },
  {
    "text": "contains the asp.net core application compiled to webassembly and then when any browser tab tries to make a request",
    "start": "3310079",
    "end": "3317599"
  },
  {
    "text": "to the application the service worker intercepts it and it says hey we won't bother the network with this i'll just",
    "start": "3317599",
    "end": "3324000"
  },
  {
    "text": "push this request through the asp.net core pipeline which is running in webassembly and then it gives me back",
    "start": "3324000",
    "end": "3330160"
  },
  {
    "text": "some html and i'll just give that back to the tab and then if there's multiple tabs they're all interacting with the same",
    "start": "3330160",
    "end": "3336400"
  },
  {
    "text": "service worker which is how they're sharing the same state so again to recap this is not a smart",
    "start": "3336400",
    "end": "3342559"
  },
  {
    "text": "move this is a terrible way to deploy application but it just goes to show that we can do this kind of thing okay",
    "start": "3342559",
    "end": "3348240"
  },
  {
    "text": "so if this is such a bad idea what is a good idea how should you actually be",
    "start": "3348240",
    "end": "3353760"
  },
  {
    "text": "using this and what are the ways of delivering a useful wisely-powered application well there's actually quite",
    "start": "3353760",
    "end": "3359920"
  },
  {
    "text": "a lot of momentum in the industry around this it's really been picking up this year and you'll probably see more of it over",
    "start": "3359920",
    "end": "3366319"
  },
  {
    "text": "the next one or two years there are lots of startups and open source projects that are trying to do stuff around aussie",
    "start": "3366319",
    "end": "3372799"
  },
  {
    "text": "for example there's a startup called suborbital they've got a range of open source projects built around wazzy and",
    "start": "3372799",
    "end": "3378880"
  },
  {
    "text": "i'm going to show you an example of one of those in just a minute so we'll get to that there's wasmcloud and that is trying to",
    "start": "3378880",
    "end": "3385119"
  },
  {
    "text": "do something similar to kubernetes but instead of having a cluster of docker containers you instead have a cluster of",
    "start": "3385119",
    "end": "3392559"
  },
  {
    "text": "wazi powered wasm modules so it's much more lightweight there's also envoy which is a",
    "start": "3392559",
    "end": "3400400"
  },
  {
    "text": "well that is an existing product that's been around for a while it's a reverse proxy that's often used inside",
    "start": "3400400",
    "end": "3405520"
  },
  {
    "text": "kubernetes or other service mesh architectures and it has a plug-in model written to allow web assembly so if you",
    "start": "3405520",
    "end": "3412640"
  },
  {
    "text": "want to you can now run asp.net core inside envoy there's also fermion another startup",
    "start": "3412640",
    "end": "3419200"
  },
  {
    "text": "they've got a bunch of interesting work going on about new cloud hosts for wazi you can check their website for",
    "start": "3419200",
    "end": "3425440"
  },
  {
    "text": "details lunatic is trying to do something similar to the erlang beam virtual",
    "start": "3425440",
    "end": "3431520"
  },
  {
    "text": "machine so lunatec is an open source project that gives you an actor model way of deploying your code and the idea",
    "start": "3431520",
    "end": "3439280"
  },
  {
    "text": "is that instead of having just a single instance of your was a module you'll have hundreds thousands tens of",
    "start": "3439280",
    "end": "3446000"
  },
  {
    "text": "thousands of very lightweight instances representing different parts of your running application and this is intended",
    "start": "3446000",
    "end": "3452240"
  },
  {
    "text": "to give you massive scale and robustness in production and then finally let's not forget",
    "start": "3452240",
    "end": "3458079"
  },
  {
    "text": "our very own microsoft azure which now supports wazi workloads as an experimental part of the azure",
    "start": "3458079",
    "end": "3464799"
  },
  {
    "text": "kubernetes service and you might see more from azure in the future okay so the last little bit of demo then",
    "start": "3464799",
    "end": "3472559"
  },
  {
    "text": "now i just want to show you an example of this suborbital product so suborbital has got this very",
    "start": "3472559",
    "end": "3478559"
  },
  {
    "text": "lightweight wazey runner called sat and the idea is that that would be used on low-powered iot devices or within a cdn",
    "start": "3478559",
    "end": "3485839"
  },
  {
    "text": "and as well as running your webassembly code it also provides additional services like key value storage or",
    "start": "3485839",
    "end": "3491599"
  },
  {
    "text": "graphql querying other things that you would need for your application so i just want to quickly show you that we",
    "start": "3491599",
    "end": "3497520"
  },
  {
    "text": "can use asp.net core under sat and this is not a visually spectacular demo this",
    "start": "3497520",
    "end": "3502960"
  },
  {
    "text": "is very simple all i'm going to do is show you that we can receive requests to this asp.net core endpoint with a key in",
    "start": "3502960",
    "end": "3510079"
  },
  {
    "text": "value and we'll store them inside the key value store that is provided by sat and then we've also got an end point for",
    "start": "3510079",
    "end": "3516480"
  },
  {
    "text": "getting the data back out so that's really all this is just to show you that all these things can actually work together so i've started that up and you",
    "start": "3516480",
    "end": "3523280"
  },
  {
    "text": "can see that this is not wasm time now this has sat and i should be able to hit my asp.net core endpoints inside there",
    "start": "3523280",
    "end": "3531040"
  },
  {
    "text": "if i just grab a curl command all right so i'm going to send a key",
    "start": "3531040",
    "end": "3537440"
  },
  {
    "text": "event name and give it a value ndc porto all right so i do that and",
    "start": "3537440",
    "end": "3543040"
  },
  {
    "text": "you'll see that it's been it says 200 okay and then i'll do another request with just the key and you'll see the",
    "start": "3543040",
    "end": "3549200"
  },
  {
    "text": "value comes back as ndc porter okay so not visually impressive but it's kind of",
    "start": "3549200",
    "end": "3554480"
  },
  {
    "text": "worthy to see that all these things really do work together we can genuinely compile our asp.net core application to",
    "start": "3554480",
    "end": "3560240"
  },
  {
    "text": "a single file which then really does run under a third-party new wazi runner",
    "start": "3560240",
    "end": "3566319"
  },
  {
    "text": "and makes use of the services provided so that's all i'm going to show you around that uh finally i would really love it if you",
    "start": "3566319",
    "end": "3573280"
  },
  {
    "text": "get a chance to try any of this stuff out yourself so if you want to get",
    "start": "3573280",
    "end": "3578640"
  },
  {
    "text": "access to the source code for the blaze orbital app you can find it on github at this location and play with that and if",
    "start": "3578640",
    "end": "3585040"
  },
  {
    "text": "you want to have a go with running.net code on wazi then go to this location here and you will find uh the actual sdk",
    "start": "3585040",
    "end": "3593040"
  },
  {
    "text": "that i've been using but more importantly instructions for how to use it with your own code and again please remember this is",
    "start": "3593040",
    "end": "3600079"
  },
  {
    "text": "just an experiment we're not committed to do anything with this but we really want dot-net developers to be at the",
    "start": "3600079",
    "end": "3605440"
  },
  {
    "text": "forefront of exploring what's possible with wazi and using it with all the different third-party services that are",
    "start": "3605440",
    "end": "3611280"
  },
  {
    "text": "appearing and we would love your feedback about how you get on with that so that's all we have time for end of",
    "start": "3611280",
    "end": "3617520"
  },
  {
    "text": "talk i hope you have a fantastic rest of the conference i hope this has been useful to you in the session",
    "start": "3617520",
    "end": "3624559"
  },
  {
    "text": "um yeah so have a nice rest of day please remember to evaluate as you go",
    "start": "3624559",
    "end": "3631640"
  },
  {
    "text": "[Music] [Applause]",
    "start": "3633570",
    "end": "3640040"
  },
  {
    "text": "you",
    "start": "3648400",
    "end": "3650480"
  }
]