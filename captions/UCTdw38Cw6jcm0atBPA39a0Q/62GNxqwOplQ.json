[
  {
    "text": "I'm Todd and this is squashing JavaScript bugs so where everybody wants",
    "start": "9570",
    "end": "15539"
  },
  {
    "text": "to be right how many of you hate JavaScript secretly way down but you",
    "start": "15539",
    "end": "21630"
  },
  {
    "text": "just have to use it I know I feel yeah all right so this session is squashing javascript bugs and what we're gonna do",
    "start": "21630",
    "end": "28500"
  },
  {
    "text": "together is we're gonna debug several several bugs in an app live here together we're gonna use the real tools",
    "start": "28500",
    "end": "34980"
  },
  {
    "text": "that are available to you today for free that you can download and play with at firm like there's lots of great sessions",
    "start": "34980",
    "end": "40860"
  },
  {
    "text": "here at the conference I firmly believe in the rule of two feet so that means if you are not getting anything out of the",
    "start": "40860",
    "end": "46410"
  },
  {
    "text": "session there's so many other great things happening feel free to stand up and go to one of the other sessions I promise I will only be minorly offended",
    "start": "46410",
    "end": "53760"
  },
  {
    "text": "if you do it but I still want you to do it okay so before we get started debugging we gotta I have to show you",
    "start": "53760",
    "end": "59760"
  },
  {
    "text": "the app that I have that has some bugs in it so how many of you use Twitter",
    "start": "59760",
    "end": "66679"
  },
  {
    "text": "yeah I use Twitter a lot and Twitter is great but Twitter has a couple of really",
    "start": "66679",
    "end": "73920"
  },
  {
    "text": "big problems and they're perfectly illustrated by this comic there are just",
    "start": "73920",
    "end": "83520"
  },
  {
    "text": "so many people who are wrong on Twitter and it's our job to go and correct them",
    "start": "83520",
    "end": "89490"
  },
  {
    "text": "no matter what our personal sacrifices might be and I think this is that the big problem with Twitter as a business",
    "start": "89490",
    "end": "95790"
  },
  {
    "text": "and as a network and I think I have an opportunity to fix it so I created this little thing that I call get Rancher and",
    "start": "95790",
    "end": "104189"
  },
  {
    "text": "I want to show it to you today are you ready you wants to get ranter this is",
    "start": "104189",
    "end": "109680"
  },
  {
    "text": "get ranter and it looks kind of like Twitter so like up in the upper left I",
    "start": "109680",
    "end": "114869"
  },
  {
    "text": "have I have a picture of my profile picture this is an older picture of me back when I had more hair on the top of",
    "start": "114869",
    "end": "120360"
  },
  {
    "text": "my head and a little bit less on the bottom and I've been ranting since 2015 and i Brants about all kinds of things",
    "start": "120360",
    "end": "126479"
  },
  {
    "text": "about like Silicon Valley stuff and Donald Trump and crazy things like CSS",
    "start": "126479",
    "end": "131790"
  },
  {
    "text": "and all that sort of thing and I have these awesome advertisements that are totally targeted at me I'm gonna make so",
    "start": "131790",
    "end": "138449"
  },
  {
    "text": "much money like based on where I go on the internet like it targets all these things that I like bacon and Hasselhoff and bears and",
    "start": "138449",
    "end": "146069"
  },
  {
    "text": "Crocodile Dundee and it's just it's so spot-on but get rancher leaves off the",
    "start": "146069",
    "end": "152550"
  },
  {
    "text": "most irritating part of Twitter other people because we've get ranter it's all",
    "start": "152550",
    "end": "160620"
  },
  {
    "text": "about you only you can rant on your profile only you can see your rants on your profile",
    "start": "160620",
    "end": "166440"
  },
  {
    "text": "and no get rancher user can interact with any other get ranch or user so",
    "start": "166440",
    "end": "171780"
  },
  {
    "text": "that's brilliant you can scream into the void and there will be no consequence for your actions",
    "start": "171780",
    "end": "177000"
  },
  {
    "text": "I think there'd be so much on on Twitter that would be better for that so",
    "start": "177000",
    "end": "182610"
  },
  {
    "text": "obviously get rancher we're still kind of a stealthy startup so like don't go telling everybody about",
    "start": "182610",
    "end": "187769"
  },
  {
    "text": "it but if you ever want to like play with it and like get an idea of what kind of things are in get Rancher you can pick it up on github here I'll put",
    "start": "187769",
    "end": "194730"
  },
  {
    "text": "these online later alright so clearly this is going to be",
    "start": "194730",
    "end": "199829"
  },
  {
    "text": "Silicon Valley's new hotness like next year this is gonna be everywhere if any",
    "start": "199829",
    "end": "205829"
  },
  {
    "text": "of you are VC's I'll take term sheets at the door on the end this thing is gonna blow up but the big problem here is that",
    "start": "205829",
    "end": "213120"
  },
  {
    "text": "get ranter was written with JavaScript and so javascript is going to have some",
    "start": "213120",
    "end": "220410"
  },
  {
    "text": "bugs in it and so that's what we're gonna do today we're going to collaboratively go through a couple of bugs that different people have reported",
    "start": "220410",
    "end": "226829"
  },
  {
    "text": "to me on using get ranter and and work through them together we're gonna to do",
    "start": "226829",
    "end": "231959"
  },
  {
    "text": "that we're gonna need some help from another little thing that I work on called track jeaious which is a javascript error monitoring service it",
    "start": "231959",
    "end": "238680"
  },
  {
    "text": "helps me know when my end-users run into run into bugs through trucks yes which",
    "start": "238680",
    "end": "243930"
  },
  {
    "text": "I've been doing for four years I've helped fix 50 billion bugs for all kinds of big companies all over the world",
    "start": "243930",
    "end": "249980"
  },
  {
    "text": "that's enough about that moving on to the knot to the actual interesting part here's our first bug now this is a bug",
    "start": "249980",
    "end": "257579"
  },
  {
    "text": "that my QA team has reported to me so use a user using using get ranter they",
    "start": "257579",
    "end": "265260"
  },
  {
    "text": "couldn't delete one of their rants out of the timeline and so I have a delete",
    "start": "265260",
    "end": "270539"
  },
  {
    "text": "button but there's no like apparently it's not working so here's a big scary bug let's",
    "start": "270539",
    "end": "276630"
  },
  {
    "text": "wash it together so here we have get rancher this is my user account now my",
    "start": "276630",
    "end": "282810"
  },
  {
    "text": "I'm a dev like I write this and so my dev account like your dev accounts on your system it's probably full of all",
    "start": "282810",
    "end": "288900"
  },
  {
    "text": "kinds of weird unusual data like you've been doing one-off testing you have sample data you've been messing with",
    "start": "288900",
    "end": "295590"
  },
  {
    "text": "your stuff and so it's not really representative of a real user so one of",
    "start": "295590",
    "end": "301050"
  },
  {
    "text": "the best recommendations I can offer for debugging JavaScript or any other app is",
    "start": "301050",
    "end": "306750"
  },
  {
    "text": "to have a way to impersonate real users with real user data it gets you a better picture of of how a real user account is",
    "start": "306750",
    "end": "315750"
  },
  {
    "text": "structured so I'm going to impersonate one of my real users I'm gonna switch",
    "start": "315750",
    "end": "321090"
  },
  {
    "text": "that out here and so now now I'm going",
    "start": "321090",
    "end": "327150"
  },
  {
    "text": "to impersonate a real a real get rancher user and so now I can try and debug this",
    "start": "327150",
    "end": "334530"
  },
  {
    "text": "issue using a much more targeted and representative sample and as on the side",
    "start": "334530",
    "end": "339900"
  },
  {
    "text": "here um you can really tell that my advertisement targeting is going to make",
    "start": "339900",
    "end": "345900"
  },
  {
    "text": "me a fortune like how spot-on are these ads they like",
    "start": "345900",
    "end": "351270"
  },
  {
    "text": "this is gonna be ridiculous anyway that aside let's say let's try and recreate",
    "start": "351270",
    "end": "356580"
  },
  {
    "text": "our bug they're our QA team identified for us so our QA team said that a user couldn't delete something out of their",
    "start": "356580",
    "end": "362880"
  },
  {
    "text": "timeline so let's say Donald here wants to delete this this rant here where he",
    "start": "362880",
    "end": "369120"
  },
  {
    "text": "called into question the ethics of a federal judge maybe he says aside he didn't want that on the internet anymore and so he goes",
    "start": "369120",
    "end": "375690"
  },
  {
    "text": "to delete that at rant and it doesn't work the page reloads but nothing is",
    "start": "375690",
    "end": "384360"
  },
  {
    "text": "actually happening so let's start digging in to figure out what's going wrong if I open up so I'm running chrome",
    "start": "384360",
    "end": "390870"
  },
  {
    "text": "here just the latest chrome web browser if I open up my developer tools from",
    "start": "390870",
    "end": "396660"
  },
  {
    "text": "chrome excuse me and and try and execute",
    "start": "396660",
    "end": "401970"
  },
  {
    "text": "this this process here where I delete something even Chrome developer tools doesn't tell me anything it's like the",
    "start": "401970",
    "end": "408419"
  },
  {
    "text": "whole page is kind of flashes and reloads and goes away and so the first thing I need to do is figure out",
    "start": "408419",
    "end": "413729"
  },
  {
    "text": "like was even going on so I'm going to configure chrome dev tools to persist",
    "start": "413729",
    "end": "419760"
  },
  {
    "text": "the log or preserve the log what this is gonna allow it to do is it's going to be able to tell me the things that have",
    "start": "419760",
    "end": "425370"
  },
  {
    "text": "happened on previous sessions even though the page is clearing I can maintain that the log is going to exist",
    "start": "425370",
    "end": "432030"
  },
  {
    "text": "after that so if I try this again and I delete this statement notice that",
    "start": "432030",
    "end": "438600"
  },
  {
    "text": "the actual flow that's happening is my application initializes by printing out this console message I feel a ramped",
    "start": "438600",
    "end": "445260"
  },
  {
    "text": "coming on and then we we trigger an error or an error is occurs this cannot",
    "start": "445260",
    "end": "450630"
  },
  {
    "text": "read property destroy of undefined and immediately after that we navigate to a",
    "start": "450630",
    "end": "456150"
  },
  {
    "text": "new page and so it's that navigation event that's causing out our page to flash so how do we how do we identify",
    "start": "456150",
    "end": "463080"
  },
  {
    "text": "that well so rather than looking at the error we can trace the user interaction",
    "start": "463080",
    "end": "468180"
  },
  {
    "text": "to try and understand what is the bits of JavaScript that might be running that responds to those user interactions and",
    "start": "468180",
    "end": "474270"
  },
  {
    "text": "so I'm going to use the elements panel here of chrome dev tools which allows us to explore the HTML markup of a page I",
    "start": "474270",
    "end": "481289"
  },
  {
    "text": "imagine many of you have used this it's very useful when you're like styling a page you're trying to put together",
    "start": "481289",
    "end": "486389"
  },
  {
    "text": "elements but it also has some really powerful tools for identifying",
    "start": "486389",
    "end": "493070"
  },
  {
    "text": "JavaScript so I'm going to grab the little selector tool and what this lets me do is it lets me mouse over all these",
    "start": "493070",
    "end": "500430"
  },
  {
    "text": "different elements and identify them in the markup and I want to look for the button here's our button you can see on",
    "start": "500430",
    "end": "508740"
  },
  {
    "text": "the Left we have the button it's a class got some stuff on it you've probably seen this screen as you've done CSS work",
    "start": "508740",
    "end": "515779"
  },
  {
    "text": "one of the one of the things that a lot of people have not seen though is that there's this event listener tab and what",
    "start": "515779",
    "end": "523140"
  },
  {
    "text": "event listeners lets us do is it lets us see all of the bits of JavaScript the care about this bit of markup tell me",
    "start": "523140",
    "end": "530610"
  },
  {
    "text": "all of the bits of JavaScript that are listening for events here and there's a ton of JavaScript listening for events",
    "start": "530610",
    "end": "536130"
  },
  {
    "text": "look there's a JavaScript looking for blur click error pop state submit unhandled rejection there's JavaScript",
    "start": "536130",
    "end": "542790"
  },
  {
    "text": "listen to all of these things on your page on this element right now and so going back to",
    "start": "542790",
    "end": "549190"
  },
  {
    "text": "our bug our bug is that when the user clicks delete it doesn't do anything it",
    "start": "549190",
    "end": "554200"
  },
  {
    "text": "just reloads and so the event that I think we want to trace here is the click and so now I can see all the different",
    "start": "554200",
    "end": "560950"
  },
  {
    "text": "bits of of JavaScript that are listening for this event know there's three bits",
    "start": "560950",
    "end": "566050"
  },
  {
    "text": "here there's this thing called rant ListView which I recognize as part of my code and then I have these two other",
    "start": "566050",
    "end": "571630"
  },
  {
    "text": "things which is just like a third party script or a utility library like the like jQuery or angular knockout or",
    "start": "571630",
    "end": "578500"
  },
  {
    "text": "whatever you might be using one of the things you'll often run into building JavaScript apps is that you'll be",
    "start": "578500",
    "end": "584200"
  },
  {
    "text": "relying on libraries that abstract a lot of this interaction for you like if you're using jQuery you probably don't",
    "start": "584200",
    "end": "591160"
  },
  {
    "text": "often interact with elements directly you interact with jQuery proxies of elements or angular proxies of elements",
    "start": "591160",
    "end": "597820"
  },
  {
    "text": "or react proxies of elements what the this chrome thing lets us do is it has",
    "start": "597820",
    "end": "604330"
  },
  {
    "text": "this checkbox that knows how to look through those frameworks and understand what are the actual bits of your code",
    "start": "604330",
    "end": "610060"
  },
  {
    "text": "that are really doing the listening if I don't turn that on I don't see any of my code here I just see my frameworks but",
    "start": "610060",
    "end": "617260"
  },
  {
    "text": "if I activate this I'm able to look through it and see the actual bits of my code that I likely care about so I can",
    "start": "617260",
    "end": "624580"
  },
  {
    "text": "navigate from here and take a look at its the rant ListView here's the bit of",
    "start": "624580",
    "end": "629920"
  },
  {
    "text": "code the chrome identified as listening to the element is this big enough for everybody to see can you see in the back",
    "start": "629920",
    "end": "635620"
  },
  {
    "text": "can you see the code right here good so here we see a jQuery style event",
    "start": "635620",
    "end": "642850"
  },
  {
    "text": "listener we're saying hey we have some elements and we're gonna use the jQuery esque syntax of on click so we're gonna",
    "start": "642850",
    "end": "650290"
  },
  {
    "text": "listen for a click event and that function is going to do some stuff this is what's called an event delegation",
    "start": "650290",
    "end": "657430"
  },
  {
    "text": "pattern where you might listen to an event at a higher level element than what you actually care about and then",
    "start": "657430",
    "end": "663880"
  },
  {
    "text": "you filter events to see whether or not it matches so in this case we're seeing",
    "start": "663880",
    "end": "669400"
  },
  {
    "text": "hey tell me when anything gets clicked on and if the thing that got clicked on event that target",
    "start": "669400",
    "end": "676120"
  },
  {
    "text": "if it looks like jst eat in the CSS class or style syntax then we want to",
    "start": "676120",
    "end": "682510"
  },
  {
    "text": "delete so this ranch presumably but if",
    "start": "682510",
    "end": "687550"
  },
  {
    "text": "we go back and take a look at the elements in question back on our events panel here we see that it does indeed",
    "start": "687550",
    "end": "693730"
  },
  {
    "text": "have the class J s delete but where is this button in the context of the",
    "start": "693730",
    "end": "699250"
  },
  {
    "text": "overall page this is a button inside of a form what happens when you click on a",
    "start": "699250",
    "end": "706300"
  },
  {
    "text": "button inside of a form if you didn't have any JavaScript it submits right the",
    "start": "706300",
    "end": "712720"
  },
  {
    "text": "button is treated as a submit the form submits the form doesn't have any decoration so the default would be to",
    "start": "712720",
    "end": "718300"
  },
  {
    "text": "just do a get back on the current page and it would reload so even though we have JavaScript trying to grab a hold of",
    "start": "718300",
    "end": "725260"
  },
  {
    "text": "this element we haven't stopped the browsers native behavior from continuing so what we need to do is we need to tell",
    "start": "725260",
    "end": "733900"
  },
  {
    "text": "the browser to not do its native behavior before we finish our interception so here I'm going to just",
    "start": "733900",
    "end": "740380"
  },
  {
    "text": "edit this file if you're not like that might have been magic I can just open",
    "start": "740380",
    "end": "745839"
  },
  {
    "text": "this Chrome thing just edit it check it out just event dot prevent defaults is",
    "start": "745839",
    "end": "751720"
  },
  {
    "text": "what I want to do an event that prevent default allows us to stop the browser from doing that default piece of piece",
    "start": "751720",
    "end": "759010"
  },
  {
    "text": "of behavior but I just edited this file just straight up inline well what this",
    "start": "759010",
    "end": "764620"
  },
  {
    "text": "allows us to do is a tool in in chrome called workspaces workspaces allows me",
    "start": "764620",
    "end": "770500"
  },
  {
    "text": "to add the JavaScript source code that I'm hosting here on my machine and connect it to the how its presented",
    "start": "770500",
    "end": "777700"
  },
  {
    "text": "through a web server and so I have a the actual source code of get Rancher here locally and so by linking these two",
    "start": "777700",
    "end": "784720"
  },
  {
    "text": "things up I'm able to make these modifications I'm not gonna walk through that right now but the term is chrome",
    "start": "784720",
    "end": "791110"
  },
  {
    "text": "workspaces and there's really detailed documentation on how to connect those so",
    "start": "791110",
    "end": "796870"
  },
  {
    "text": "I added event.preventdefault and so that should stop that that reload",
    "start": "796870",
    "end": "802540"
  },
  {
    "text": "part of our bug so with that in place let's reload the page and see if we can still what the state of our bug is now",
    "start": "802540",
    "end": "811440"
  },
  {
    "text": "so we've reloaded and let's have let's have our user Donald try and delete something out of his timeline again",
    "start": "811650",
    "end": "819900"
  },
  {
    "text": "unless it didn't work at all hope it",
    "start": "821130",
    "end": "826779"
  },
  {
    "text": "didn't save my changes I have to file system resource prevent default good all",
    "start": "826779",
    "end": "841630"
  },
  {
    "text": "right so now when we try and delete something out of our timeline here",
    "start": "841630",
    "end": "847800"
  },
  {
    "text": "notice we still have the error we haven't actually fixed the root error but what we have fixed is that it is no",
    "start": "847800",
    "end": "854589"
  },
  {
    "text": "longer reloading the page and so now I'm able to actually see the error without having to do this pesky preserve log and",
    "start": "854589",
    "end": "862120"
  },
  {
    "text": "see what's happening in previous sessions so if I turn that back off I'm now getting this error all right so",
    "start": "862120",
    "end": "868570"
  },
  {
    "text": "let's now try to address this so here is an error the Chrome has detected that we",
    "start": "868570",
    "end": "873970"
  },
  {
    "text": "have this globally unhandled air and it's padded into the console and the error is cannot read property destroy of",
    "start": "873970",
    "end": "881350"
  },
  {
    "text": "undefined and so if we break that down what that means is that we have some some object where we think that there is",
    "start": "881350",
    "end": "889150"
  },
  {
    "text": "a property destroy on that object and we think that object is a thing we think",
    "start": "889150",
    "end": "895030"
  },
  {
    "text": "it's it's it's some real thing that we can interact with but in reality it's undefined so if we look at where this is",
    "start": "895030",
    "end": "902980"
  },
  {
    "text": "pointing to us we get we get a whole stack trace of what was executing at the time but one of the things that is",
    "start": "902980",
    "end": "909970"
  },
  {
    "text": "really remarkable about Chrome and it's on by default now you used to have to know where the magic check box was to turn it on is that the stack traces that",
    "start": "909970",
    "end": "918100"
  },
  {
    "text": "they give you now include these asynchronous boundaries how many people have ever looked at async stack traces",
    "start": "918100",
    "end": "924850"
  },
  {
    "text": "in chrome anybody alright so so much JavaScript that we all write isn't about",
    "start": "924850",
    "end": "931510"
  },
  {
    "text": "writing code that's going to execute now it's about giving code to the browser to execute later when something happens and",
    "start": "931510",
    "end": "939220"
  },
  {
    "text": "what I mean by that is we set up code to respond to user acts we write code to say hey when the user",
    "start": "939220",
    "end": "945459"
  },
  {
    "text": "clicks on this button do something or when the remote server comes back with our network request process it like this",
    "start": "945459",
    "end": "952000"
  },
  {
    "text": "or after this timer expires do this so much of the code isn't about synchronous",
    "start": "952000",
    "end": "958660"
  },
  {
    "text": "operations it's about asynchronous operations and up until recently it was really hard to understand how did that",
    "start": "958660",
    "end": "965680"
  },
  {
    "text": "actually apply to our code because a normal stack trace in JavaScript would",
    "start": "965680",
    "end": "970899"
  },
  {
    "text": "have told us that hey something blew up on rant ListView J s line 34 and that's",
    "start": "970899",
    "end": "976720"
  },
  {
    "text": "all we really know we have some other goo code some some stuff from our third-party wrappers but nothing else",
    "start": "976720",
    "end": "985329"
  },
  {
    "text": "we don't really know any context about how did we get to rant ListView J s line 34 how do I trace that back to the entry",
    "start": "985329",
    "end": "991570"
  },
  {
    "text": "point of my application and what the async stack traces let us do is trace",
    "start": "991570",
    "end": "997060"
  },
  {
    "text": "those asynchronous boundaries back it tells us that we landed on rant ListView",
    "start": "997060",
    "end": "1002310"
  },
  {
    "text": "J s line 34 through a call to set timeout and set timeout was called from",
    "start": "1002310",
    "end": "1009390"
  },
  {
    "text": "line 33 which was called from line 22 and so it's able to trace it farther",
    "start": "1009390",
    "end": "1014820"
  },
  {
    "text": "back into the code to understand its entry points if we interact with this",
    "start": "1014820",
    "end": "1019920"
  },
  {
    "text": "and go back to rant lists UJ s line 22 we see here is that same call that we",
    "start": "1019920",
    "end": "1025438"
  },
  {
    "text": "manipulated earlier this call to on delete so if we take a look at the",
    "start": "1025439",
    "end": "1032250"
  },
  {
    "text": "actual line of the error we fall into that function on delete that was getting",
    "start": "1032250",
    "end": "1037530"
  },
  {
    "text": "called and an on delete we call a set timeout obviou presumably there's some",
    "start": "1037530",
    "end": "1042928"
  },
  {
    "text": "reason that that exists and then we do two things we do this stop model dot destroy and this dot remove now what",
    "start": "1042929",
    "end": "1049980"
  },
  {
    "text": "those do isn't necessarily important but for whatever reason we're trying to call destroy on something that ends up being",
    "start": "1049980",
    "end": "1058919"
  },
  {
    "text": "undefined so we think we have this object called model but in reality it's",
    "start": "1058919",
    "end": "1064260"
  },
  {
    "text": "it's not there some of you might have already spotted what this error is because it is the most common error in",
    "start": "1064260",
    "end": "1071460"
  },
  {
    "text": "JavaScript land and this is a misunderstanding of what the value of this is",
    "start": "1071460",
    "end": "1076470"
  },
  {
    "text": "going to be we've lost our context when we've passed this function in to set",
    "start": "1076470",
    "end": "1082380"
  },
  {
    "text": "time out we think the value of this is this is is whatever this rant listview",
    "start": "1082380",
    "end": "1089549"
  },
  {
    "text": "object is that we're working with but in reality we've passed this function to the browser to execute later and when",
    "start": "1089549",
    "end": "1097260"
  },
  {
    "text": "later arrives it doesn't know what this should be anymore and so this ends up being something else",
    "start": "1097260",
    "end": "1103250"
  },
  {
    "text": "we can attach a break point to actually understand what the value of this would be here's another new thing that landed",
    "start": "1103250",
    "end": "1109320"
  },
  {
    "text": "in the latest chrome check this out you've probably seen that you can add breakpoints to code and all that sort of stuff just like any other IDE but now it",
    "start": "1109320",
    "end": "1116340"
  },
  {
    "text": "can evaluate each expression independently and you can put breakpoints within a given line how",
    "start": "1116340",
    "end": "1122610"
  },
  {
    "text": "awesome is that I can put a breakpoint only when we try and like identify destroy and not when we try and identify",
    "start": "1122610",
    "end": "1129150"
  },
  {
    "text": "this dot model that's pretty cool anyway so we're gonna put that breakpoint in",
    "start": "1129150",
    "end": "1134909"
  },
  {
    "text": "place and let's try and execute our our process here again and here we land on",
    "start": "1134909",
    "end": "1144840"
  },
  {
    "text": "our code and we can see what do we think this these values are if we just mouse over our values that's going to give us",
    "start": "1144840",
    "end": "1150240"
  },
  {
    "text": "a pop-up of what they are this is window",
    "start": "1150240",
    "end": "1156210"
  },
  {
    "text": "and window probably doesn't have a thing on it called model so when we're trying",
    "start": "1156210",
    "end": "1163890"
  },
  {
    "text": "to call destroy we're trying to call destroy on an object that ends up being undefined so there's a bunch of",
    "start": "1163890",
    "end": "1170010"
  },
  {
    "text": "different ways we could fix this the problem here is that we lost the context of this so the simplest most highly",
    "start": "1170010",
    "end": "1176640"
  },
  {
    "text": "compatible way of fixing this would be to save what you want the value of this to be into your own into your own",
    "start": "1176640",
    "end": "1183360"
  },
  {
    "text": "variable which depending on which JavaScript book you probably read first you would either call that variable that",
    "start": "1183360",
    "end": "1189860"
  },
  {
    "text": "equals this or you might call it self doesn't really matter which one you pick",
    "start": "1189860",
    "end": "1195360"
  },
  {
    "text": "they do the same thing so then when you have that value saved you can then",
    "start": "1195360",
    "end": "1201030"
  },
  {
    "text": "reference it farther down the closure where you have more control over the lifetime of those variables so with that",
    "start": "1201030",
    "end": "1208950"
  },
  {
    "text": "in place we try and delete something again and it",
    "start": "1208950",
    "end": "1215340"
  },
  {
    "text": "works great there's no errors now that is a highly compatible old way of doing",
    "start": "1215340",
    "end": "1221250"
  },
  {
    "text": "it but we all want to be new cool super hip JavaScript developers using the",
    "start": "1221250",
    "end": "1226380"
  },
  {
    "text": "latest technologies right and so instead of doing it this way there's a couple of",
    "start": "1226380",
    "end": "1231539"
  },
  {
    "text": "other ways we could solve this problem the first is that in most browsers ie 10",
    "start": "1231539",
    "end": "1236700"
  },
  {
    "text": "and newer we have this concept called dot bind on functions and using dot bind",
    "start": "1236700",
    "end": "1242640"
  },
  {
    "text": "we can glue what we want the value of this to be when it runs later so I can",
    "start": "1242640",
    "end": "1249390"
  },
  {
    "text": "glue the value of this from the outer scope into what I want the value of this",
    "start": "1249390",
    "end": "1257520"
  },
  {
    "text": "to be in the inner scope this particular call to adopt bind this will execute",
    "start": "1257520",
    "end": "1262980"
  },
  {
    "text": "before set timeout is called I'm declaring a new function I'm binding its value to this so that when set timeout",
    "start": "1262980",
    "end": "1270840"
  },
  {
    "text": "calls the value of this is still what it used to be let's just prove that that works and I can delete America is great",
    "start": "1270840",
    "end": "1282539"
  },
  {
    "text": "again now there's one other way we can do this this even cooler new or even hipper than then bind this and that is",
    "start": "1282539",
    "end": "1289679"
  },
  {
    "text": "rather than using bind we can use a different kind of function so rather",
    "start": "1289679",
    "end": "1296250"
  },
  {
    "text": "than declaring a function literal here and just using the keyword function I can use a fat arrow function and what",
    "start": "1296250",
    "end": "1303090"
  },
  {
    "text": "these arrow functions let me do is it lets me have a shortcut syntax for defining of the function and they have a",
    "start": "1303090",
    "end": "1310020"
  },
  {
    "text": "series of constraints the first constraint is that the value of this is automatically and irrevocably bound to",
    "start": "1310020",
    "end": "1316980"
  },
  {
    "text": "the value of this of the outer scope you cannot manipulate the value of this but it's probably what you want it to be",
    "start": "1316980",
    "end": "1323399"
  },
  {
    "text": "anyway the second constraint is that it doesn't have an arguments property which is one of the fancy questions in the",
    "start": "1323399",
    "end": "1330809"
  },
  {
    "text": "JavaScript quiz that we have up at our booth so with this in place which would",
    "start": "1330809",
    "end": "1336570"
  },
  {
    "text": "only work in edge I think in Chrome's we",
    "start": "1336570",
    "end": "1343230"
  },
  {
    "text": "can do time out with a fat arrow function and we can still delete these things all day long so long as we run it in a new cool",
    "start": "1343230",
    "end": "1350830"
  },
  {
    "text": "modern browser okay so with this in place I believe we have fixed our first",
    "start": "1350830",
    "end": "1357909"
  },
  {
    "text": "bug Donald can come in here and he can delete statements out of his time line all day long and they are gone forever",
    "start": "1357909",
    "end": "1366960"
  },
  {
    "text": "BAM we squashed this bug this was a logical bug and it had two steps in it",
    "start": "1366960",
    "end": "1372460"
  },
  {
    "text": "first we were using javascript to take over a normal or a default piece of",
    "start": "1372460",
    "end": "1378879"
  },
  {
    "text": "behavior from the browser that of clicking a button inside of a form and we were trying to intercept that behavior and do something else with it",
    "start": "1378879",
    "end": "1384879"
  },
  {
    "text": "but we weren't actually stopping the browser from doing its native behavior the second thing is the most common",
    "start": "1384879",
    "end": "1391450"
  },
  {
    "text": "JavaScript bug that you shouldn't feel bad when you make because I make it all the time too is that we lost what our",
    "start": "1391450",
    "end": "1396609"
  },
  {
    "text": "functional context is we misunderstand what the value of this would be at runtime and we looked at Keystone users",
    "start": "1396609",
    "end": "1404259"
  },
  {
    "text": "which is something I highly recommend you build into your designs looking at the Dom inspector as a way to trace code",
    "start": "1404259",
    "end": "1410679"
  },
  {
    "text": "based on what elements the users are interacting with and playing with async call stacks so here's our second bug and",
    "start": "1410679",
    "end": "1419559"
  },
  {
    "text": "our second bug came in from a user and a user had this problem where I have this",
    "start": "1419559",
    "end": "1425139"
  },
  {
    "text": "cool feature and get ranter where a user can come in and they can type in a long",
    "start": "1425139",
    "end": "1430239"
  },
  {
    "text": "rant they can really get up you know up all angry about whatever is happening in their life and they can type a lot of",
    "start": "1430239",
    "end": "1435429"
  },
  {
    "text": "text and then if they're not quite ready that you know they want a wordsmith a little bit more they can come back to",
    "start": "1435429",
    "end": "1441309"
  },
  {
    "text": "get Rancher later and I'll remember what they had written in like a draft phase but the problem is here that the rant",
    "start": "1441309",
    "end": "1449619"
  },
  {
    "text": "text still gets remembered as a draft even if they delete it which led to some",
    "start": "1449619",
    "end": "1455230"
  },
  {
    "text": "embarrassing situations I imagine so let's see if we can recreate and squash",
    "start": "1455230",
    "end": "1460330"
  },
  {
    "text": "this bug so here let's continue using",
    "start": "1460330",
    "end": "1465879"
  },
  {
    "text": "our Keystone user and let's type something that we're gonna try and delete let's cite let's try and get into",
    "start": "1465879",
    "end": "1471249"
  },
  {
    "text": "the head of our users and type something that is obviously untrue and scandalous",
    "start": "1471249",
    "end": "1476679"
  },
  {
    "text": "something like in DC Sydney is the worst conference",
    "start": "1476679",
    "end": "1482049"
  },
  {
    "text": "ever fake News CNN sucks and then let's",
    "start": "1482049",
    "end": "1492159"
  },
  {
    "text": "say you know what that's that's probably not true let's delete that and pretend",
    "start": "1492159",
    "end": "1498429"
  },
  {
    "text": "it never happened but when Donald comes back later and reloads the page there it is again",
    "start": "1498429",
    "end": "1505059"
  },
  {
    "text": "it's still remembered in that draft phase and pops right back up again so in",
    "start": "1505059",
    "end": "1510100"
  },
  {
    "text": "order to figure out what's going on here let's use the same kind of techniques that we used for the last one we're",
    "start": "1510100",
    "end": "1515109"
  },
  {
    "text": "gonna use the element inspector and look at that text area to see what are the bits of JavaScript that care about that",
    "start": "1515109",
    "end": "1521919"
  },
  {
    "text": "so we can trace the interaction that way so if we look at this text area and we",
    "start": "1521919",
    "end": "1529090"
  },
  {
    "text": "look at the event listeners that are listening to it we see a blur a click and error a key up a pop state cement an",
    "start": "1529090",
    "end": "1536109"
  },
  {
    "text": "unhandled rejection based on what this bug is this bug is based on is a",
    "start": "1536109",
    "end": "1542970"
  },
  {
    "text": "interaction with text I think the most likely candidate here is that we want to",
    "start": "1542970",
    "end": "1548200"
  },
  {
    "text": "take a look at KeyUp which would be bits of JavaScript that are reacting every time the user hits a key and so we have",
    "start": "1548200",
    "end": "1555369"
  },
  {
    "text": "one bit of code that I recognize here this add rant view j/s and so if we go",
    "start": "1555369",
    "end": "1560590"
  },
  {
    "text": "into that we can see what is our code here that is actually running can't zoom",
    "start": "1560590",
    "end": "1569230"
  },
  {
    "text": "it any farther so here we have a function called on change an on change",
    "start": "1569230",
    "end": "1575639"
  },
  {
    "text": "it's taking an event so the event of a key up and when that key up comes in we're trying to create a text variable",
    "start": "1575639",
    "end": "1583409"
  },
  {
    "text": "which is probably trying to pull the value off of that form field now",
    "start": "1583409",
    "end": "1588909"
  },
  {
    "text": "JavaScript and browsers can really suck sometimes sometimes things that we",
    "start": "1588909",
    "end": "1594429"
  },
  {
    "text": "expect to be there like an event target aren't always there sometimes a browser",
    "start": "1594429",
    "end": "1600429"
  },
  {
    "text": "might not reveal that and so here we have a bit of shortcut JavaScript code that you might have interacted with or",
    "start": "1600429",
    "end": "1606159"
  },
  {
    "text": "used at some point where I'm saying hey I want to get something off of event target but",
    "start": "1606159",
    "end": "1611890"
  },
  {
    "text": "vente target isn't there I don't want to blow up with an error like unable to read value on proper or a property value",
    "start": "1611890",
    "end": "1619300"
  },
  {
    "text": "on undefined I want to guarantee that event dot target is a thing so event that target",
    "start": "1619300",
    "end": "1625690"
  },
  {
    "text": "is a thing or I want to create an empty object so that I can pull a value on it",
    "start": "1625690",
    "end": "1630700"
  },
  {
    "text": "off of it without necessarily having the whole thing blow up so if text then is a thing if I have",
    "start": "1630700",
    "end": "1637690"
  },
  {
    "text": "some piece of valid text I don't have undefined or null or some other garbage",
    "start": "1637690",
    "end": "1643240"
  },
  {
    "text": "then I want to put it in local storage local storage is one of a handful of",
    "start": "1643240",
    "end": "1648340"
  },
  {
    "text": "ways we have in the browser to persist data in the browser itself without sending it to a server you can interact",
    "start": "1648340",
    "end": "1655870"
  },
  {
    "text": "with those values that you might have put in local storage through the application tab of chrome dev tools the",
    "start": "1655870",
    "end": "1663250"
  },
  {
    "text": "application tab lists all of these different ways you can store data local storage session storage index DB web",
    "start": "1663250",
    "end": "1669190"
  },
  {
    "text": "sequel and cookies and you can interact with it so here in my local storage I",
    "start": "1669190",
    "end": "1674200"
  },
  {
    "text": "see that I have this particular value this this heinous rant that we have in",
    "start": "1674200",
    "end": "1679300"
  },
  {
    "text": "our in our draft state in this key next rant and I can see nd Sydney is the worst conference ever and I could go in",
    "start": "1679300",
    "end": "1686020"
  },
  {
    "text": "here and I could manipulate that if I so chose so let's um let's play with this a",
    "start": "1686020",
    "end": "1693220"
  },
  {
    "text": "little bit let's see this in action so I'm gonna add a breakpoint here on line 13 and and as I interact with this it's",
    "start": "1693220",
    "end": "1705040"
  },
  {
    "text": "going to go in here and so will drop in here we'll say hey we have a vent and we",
    "start": "1705040",
    "end": "1710320"
  },
  {
    "text": "have a vent target event that target is a is a truth eval you and it's a it's a thing and so we're able to pull value",
    "start": "1710320",
    "end": "1717250"
  },
  {
    "text": "off of it and so as we step through the value of text will be that value and it",
    "start": "1717250",
    "end": "1724390"
  },
  {
    "text": "passes that condition and we get set in local storage but so what's going to happen here if we clear out the value of",
    "start": "1724390",
    "end": "1732760"
  },
  {
    "text": "that text area if we clear out the value of that text area what will text be",
    "start": "1732760",
    "end": "1741750"
  },
  {
    "text": "it's going to be an empty string right we're going to if we zero this out if we",
    "start": "1742210",
    "end": "1751820"
  },
  {
    "text": "zero this out I got to do this without actually triggering a key up which I",
    "start": "1751820",
    "end": "1762350"
  },
  {
    "text": "never can I can't actually even do it if",
    "start": "1762350",
    "end": "1770480"
  },
  {
    "text": "we trigger this without it or if we trigger this with an empty string or",
    "start": "1770480",
    "end": "1775610"
  },
  {
    "text": "with by clearing it out the value of text is going to be empty string what",
    "start": "1775610",
    "end": "1780860"
  },
  {
    "text": "happens when we put empty string into a condition it's false this is a problem",
    "start": "1780860",
    "end": "1787190"
  },
  {
    "text": "of truthy and falsy values all objects all things in JavaScript can be coerced",
    "start": "1787190",
    "end": "1793730"
  },
  {
    "text": "down into a boolean value into either true or false there's a handful of values that will become false these are",
    "start": "1793730",
    "end": "1800900"
  },
  {
    "text": "called the false e values they include hold on this is my quiz false which is",
    "start": "1800900",
    "end": "1806510"
  },
  {
    "text": "the one I always forget false becomes false empty string becomes false undefined null not a number zero and one",
    "start": "1806510",
    "end": "1816620"
  },
  {
    "text": "obscure one called document dot all which is neither here nor there I'm just showing off document dot all is",
    "start": "1816620",
    "end": "1823670"
  },
  {
    "text": "available in older browsers and some like a way of checking to see if it's an old crappy browser to see a document dot",
    "start": "1823670",
    "end": "1829400"
  },
  {
    "text": "all is a thing all right so text is this condition here if we pop an empty string",
    "start": "1829400",
    "end": "1837080"
  },
  {
    "text": "into it it's going to evaluate to false which means we won't execute it and local storage never gets updated so this",
    "start": "1837080",
    "end": "1844010"
  },
  {
    "text": "condition is meant to you know prevent invalid values like undefined from",
    "start": "1844010",
    "end": "1850790"
  },
  {
    "text": "creeping into our our storage we don't want to actually ever store undefined because then we'd get the word undefined",
    "start": "1850790",
    "end": "1857180"
  },
  {
    "text": "showing up in our text area but we're being a little too zealous or we're being too vague about this here we're",
    "start": "1857180",
    "end": "1864680"
  },
  {
    "text": "preventing undefined but we're also preventing the valid value empty string and so rather than naively just checking",
    "start": "1864680",
    "end": "1871310"
  },
  {
    "text": "to see if text is truthy or false e let's see if type is a string if the type of text is any",
    "start": "1871310",
    "end": "1880700"
  },
  {
    "text": "string we probably want to save it but",
    "start": "1880700",
    "end": "1886730"
  },
  {
    "text": "if it's not a string if it's undefined if it's null if it's zero if it's some other garbage that's creeped in there",
    "start": "1886730",
    "end": "1892010"
  },
  {
    "text": "somehow then we don't want to save it and so with that in place we can come back in",
    "start": "1892010",
    "end": "1898730"
  },
  {
    "text": "here and we can delete this this heinous rant and when we reload the page it is",
    "start": "1898730",
    "end": "1905059"
  },
  {
    "text": "still gone and if we just double check our application tab we see that next",
    "start": "1905059",
    "end": "1910460"
  },
  {
    "text": "rant contains the value of empty string as well so this was another logical bug",
    "start": "1910460",
    "end": "1917059"
  },
  {
    "text": "this particular bug had to do with truthy or false e values you often will",
    "start": "1917059",
    "end": "1922850"
  },
  {
    "text": "run into truthy and falsy nests sometimes by design oftentimes on accident when you put objects into",
    "start": "1922850",
    "end": "1929270"
  },
  {
    "text": "conditionals or into and or statements and what the objects that you pump into",
    "start": "1929270",
    "end": "1934790"
  },
  {
    "text": "them will be transformed into those truth here false e values whether or not you plan to it or not what we looked at",
    "start": "1934790",
    "end": "1941960"
  },
  {
    "text": "was the application Explorer which lets you interact with those sort of things and a little bit with braking execution",
    "start": "1941960",
    "end": "1947540"
  },
  {
    "text": "and how hard it can be sometimes here's our third bug this bug came in from our",
    "start": "1947540",
    "end": "1953570"
  },
  {
    "text": "monitoring so as you build software there's a couple of different places you",
    "start": "1953570",
    "end": "1958610"
  },
  {
    "text": "can catch bugs hopefully you can catch it during development where you're like you're actively developing it and you're",
    "start": "1958610",
    "end": "1964670"
  },
  {
    "text": "like oh that's not right and you fix it and you don't even ever think of it as a buck you just fixed it in line if you",
    "start": "1964670",
    "end": "1971150"
  },
  {
    "text": "can't catch it there hopefully you have somebody who is testing your stuff might be a QA team it might be your buddy next",
    "start": "1971150",
    "end": "1977270"
  },
  {
    "text": "to you it might be your boss who knows what it is but somebody else is looking at you're at the end result to see if it",
    "start": "1977270",
    "end": "1983270"
  },
  {
    "text": "works that's the next best place to catch a bug the worst place to catch a bug is when your users find it and they",
    "start": "1983270",
    "end": "1990710"
  },
  {
    "text": "have to call and complain to you or rant about you on Twitter about how awful your site is because for every user who",
    "start": "1990710",
    "end": "1996950"
  },
  {
    "text": "spends the time to do that you probably have 10 or 20 or a hundred who just wrote you off and went to a competitor",
    "start": "1996950",
    "end": "2002590"
  },
  {
    "text": "or spent the day screwing around on Facebook so in order to prevent that you can monitor stuff by understand",
    "start": "2002590",
    "end": "2009789"
  },
  {
    "text": "when your production environment actually encounters bugs you can solve them cheaper because you don't have to wait for your users to tell you and so",
    "start": "2009789",
    "end": "2016899"
  },
  {
    "text": "get ranter use as a monitoring tool and so it we're seeing that our our application is reporting lots of 500 bad",
    "start": "2016899",
    "end": "2024940"
  },
  {
    "text": "requests specifically where we've recorded 237 times that we've had a 400",
    "start": "2024940",
    "end": "2031869"
  },
  {
    "text": "bad request to Slatter - post / api / rants and we even know a little bit more",
    "start": "2031869",
    "end": "2039159"
  },
  {
    "text": "we know that there's a couple of different actions that take place immediately before this so we see that a",
    "start": "2039159",
    "end": "2045549"
  },
  {
    "text": "user comes in and they enter zero characters into the text area rant and then they click on the submit button and",
    "start": "2045549",
    "end": "2052809"
  },
  {
    "text": "then right after that we have an ajax problem where we get a 400 bad request to api rants so let's see if we can",
    "start": "2052809",
    "end": "2060368"
  },
  {
    "text": "recreate that that's a that's a good story to tell so let's take a look at this bug and try and kill it so here",
    "start": "2060369",
    "end": "2068260"
  },
  {
    "text": "we're still here using Donald and what we're gonna do is we're gonna try and recreate this bug using the same steps",
    "start": "2068260",
    "end": "2075240"
  },
  {
    "text": "so here I'm going to come in and interact with this text area and I'm going to enter 0 characters done and now",
    "start": "2075240",
    "end": "2084849"
  },
  {
    "text": "I'm going to hit on the submit button I'm going to hit rant and what chrome",
    "start": "2084849",
    "end": "2090309"
  },
  {
    "text": "has told me is that we had a post to slash API slash rants and it came back",
    "start": "2090309",
    "end": "2095679"
  },
  {
    "text": "with a HTTP code of 400 it's commonly considered for any HP code 400 or",
    "start": "2095679",
    "end": "2100960"
  },
  {
    "text": "greater to be considered an error chrome will consider it an error and solo mini monitoring tools so we can use this",
    "start": "2100960",
    "end": "2109480"
  },
  {
    "text": "errors shown here in the in the console to even understand more about it we can pop this down and we can even see the",
    "start": "2109480",
    "end": "2115690"
  },
  {
    "text": "actual lines of code that we're executing that leads to this call to be made so we can see where in my",
    "start": "2115690",
    "end": "2122020"
  },
  {
    "text": "application is making this call and so I see a bunch of goo code that I don't necessarily care about I see some",
    "start": "2122020",
    "end": "2128619"
  },
  {
    "text": "infrastructure code tracker and jQuery and backbone and blah blah blah what I",
    "start": "2128619",
    "end": "2133780"
  },
  {
    "text": "care about is that I have a little bit of code here that I recognize from an ad rant view J s line 27 now I can also",
    "start": "2133780",
    "end": "2142750"
  },
  {
    "text": "find out a bunch of em for about this request from the network tab the network tab shows all of the",
    "start": "2142750",
    "end": "2148580"
  },
  {
    "text": "different requests that are made about for your application scripts and documents and images and CSS and dynamic",
    "start": "2148580",
    "end": "2155510"
  },
  {
    "text": "stuff and everything is in here this page becomes far more valuable when you",
    "start": "2155510",
    "end": "2160820"
  },
  {
    "text": "turn on the filter which is this little filter icon right here which lets you find the requests that you're probably",
    "start": "2160820",
    "end": "2166070"
  },
  {
    "text": "looking for I can trace through and try and find that same thing that we're talking about by just typing in the",
    "start": "2166070",
    "end": "2171800"
  },
  {
    "text": "partial URL slash API slash rants and here it'll show me all the different requests made to that",
    "start": "2171800",
    "end": "2178460"
  },
  {
    "text": "you'll even highlight this one here that we thought was a failure and we can go in and we can see all kinds of",
    "start": "2178460",
    "end": "2183500"
  },
  {
    "text": "information about it what kind of the request and response headers that went through what was sent",
    "start": "2183500",
    "end": "2188599"
  },
  {
    "text": "up to the server all of that I can even see here that what was sent to the",
    "start": "2188599",
    "end": "2195500"
  },
  {
    "text": "server is here at the bottom this request payload where we sent a object",
    "start": "2195500",
    "end": "2200540"
  },
  {
    "text": "literal that has a property text with empty string which I think actually",
    "start": "2200540",
    "end": "2205700"
  },
  {
    "text": "makes sense based on what we did we entered 0 characters and submitted it so it sent 0 characters but our API is",
    "start": "2205700",
    "end": "2214480"
  },
  {
    "text": "pretty good about error messaging and so it returns something to us as well it said hey you cannot send me empty text",
    "start": "2214480",
    "end": "2222230"
  },
  {
    "text": "our API was smart enough to do its own validation and say this is an invalid request and I'm not going to take it and",
    "start": "2222230",
    "end": "2229640"
  },
  {
    "text": "it spat it back to us with a good enough message that we can react to it so let's",
    "start": "2229640",
    "end": "2236240"
  },
  {
    "text": "go back to our code and see if we can find a way to handle this so back in our console where we have this whole",
    "start": "2236240",
    "end": "2242500"
  },
  {
    "text": "traceability of what was our code that was running at the time I'm gonna go in here and to add rant view jeaious line",
    "start": "2242500",
    "end": "2249020"
  },
  {
    "text": "27 and see this is the last line of my code that was running before an ajax",
    "start": "2249020",
    "end": "2254150"
  },
  {
    "text": "event started somewhere in the infrastructure bowels of my app the action of this dot collection dot create",
    "start": "2254150",
    "end": "2261380"
  },
  {
    "text": "will issue an ajax request so if i trace",
    "start": "2261380",
    "end": "2266450"
  },
  {
    "text": "back on what's going on in this function here we have another event response called on submit an on submit takes an",
    "start": "2266450",
    "end": "2273890"
  },
  {
    "text": "event and we prevent its default behavior and then we build that object literal",
    "start": "2273890",
    "end": "2278940"
  },
  {
    "text": "that rant object with one property called text that we just pull off of the",
    "start": "2278940",
    "end": "2283950"
  },
  {
    "text": "forum and then we do things with it we trigger an analytics event we create it in a collection and then we zero it back",
    "start": "2283950",
    "end": "2290580"
  },
  {
    "text": "out but what we haven't addressed here is that what if the rant text value is",
    "start": "2290580",
    "end": "2296580"
  },
  {
    "text": "invalid what happens if we're not allowed to send that because the server has already told us that it cannot be",
    "start": "2296580",
    "end": "2301590"
  },
  {
    "text": "empty so what I think that we want to do is we want to wrap these actions in a",
    "start": "2301590",
    "end": "2308100"
  },
  {
    "text": "condition that we only want to do these things if it's valid how do we know it's",
    "start": "2308100",
    "end": "2318270"
  },
  {
    "text": "valid well we need to know that rant dot text is not empty so first we probably",
    "start": "2318270",
    "end": "2328860"
  },
  {
    "text": "want to know that it's a truth eval you any truth eval you but we also want to know it's a string because we can't we",
    "start": "2328860",
    "end": "2334860"
  },
  {
    "text": "should probably send up numbers or undefined type so that sort of thing either so I want to know that rant dot",
    "start": "2334860",
    "end": "2340680"
  },
  {
    "text": "text is a thing it is a truth eval you and the type of rant dot text is a",
    "start": "2340680",
    "end": "2347580"
  },
  {
    "text": "string I think if both of those things are true we are okay to send this value",
    "start": "2347580",
    "end": "2353700"
  },
  {
    "text": "up so if we save this and try and send again",
    "start": "2353700",
    "end": "2360170"
  },
  {
    "text": "so I'm clicking and we're not getting any for hundreds anymore but the problem",
    "start": "2366330",
    "end": "2372070"
  },
  {
    "text": "here is is that this is a really crappy user experience based on my air monitoring I know that 230 some people",
    "start": "2372070",
    "end": "2379420"
  },
  {
    "text": "have done this and they didn't see any interaction and I recorded errors now",
    "start": "2379420",
    "end": "2384730"
  },
  {
    "text": "I'm not recording errors anymore but it's still a crappy user interaction the user is still trying to do something and",
    "start": "2384730",
    "end": "2389770"
  },
  {
    "text": "our app is preventing it and we're not telling them why so should probably do some client-side error messaging of some",
    "start": "2389770",
    "end": "2395770"
  },
  {
    "text": "kind now we could write that in our JavaScript here where we were playing with before an else condition that would",
    "start": "2395770",
    "end": "2401290"
  },
  {
    "text": "show an error message or whatever or we can just rely on the browser's itself to do it so this is a pretty standard form",
    "start": "2401290",
    "end": "2408340"
  },
  {
    "text": "that's just doing a submit action so what we can do is we could just manipulate the form itself to add our",
    "start": "2408340",
    "end": "2414100"
  },
  {
    "text": "own validation rules so here's the form on our HTML form specifically here is",
    "start": "2414100",
    "end": "2419380"
  },
  {
    "text": "the text area in here's the text area in question so we have this text area named",
    "start": "2419380",
    "end": "2426430"
  },
  {
    "text": "rant and here's where where the user puts stuff in and now I know that this this particular value has some",
    "start": "2426430",
    "end": "2433360"
  },
  {
    "text": "constraints specifically that it is required most text controls have or all",
    "start": "2433360",
    "end": "2440470"
  },
  {
    "text": "the text areas are all the all the form controls have the required attribute and there's more complicated attributes that",
    "start": "2440470",
    "end": "2446740"
  },
  {
    "text": "are available in news newer browsers this is going to let you add like regular expression validation or certain",
    "start": "2446740",
    "end": "2452350"
  },
  {
    "text": "other kinds of formats so that you can add form validation directly to your apps without writing all of that",
    "start": "2452350",
    "end": "2458230"
  },
  {
    "text": "complicated messy error messaging code that ends up being far harder than we",
    "start": "2458230",
    "end": "2463420"
  },
  {
    "text": "ever expect it to be when we embark on that phase of projects and so with that in place when we try and do this now",
    "start": "2463420",
    "end": "2471550"
  },
  {
    "text": "Chrome itself will tell us error messaging that that this is required now",
    "start": "2471550",
    "end": "2477580"
  },
  {
    "text": "it's probably not the best user experience in the world it doesn't integrate with the look and feel of get ranter I should probably make some sort",
    "start": "2477580",
    "end": "2483850"
  },
  {
    "text": "of other ranting joke in response to it but it's good enough for now and it was really fast to implement",
    "start": "2483850",
    "end": "2491340"
  },
  {
    "text": "so here was a date above which is very",
    "start": "2494740",
    "end": "2499810"
  },
  {
    "text": "common in most web applications you were sooner or later you are going to be gathering data from a server or pushing",
    "start": "2499810",
    "end": "2505270"
  },
  {
    "text": "data to a server and you're gonna need to do data validation your API should always validate data regardless of what",
    "start": "2505270",
    "end": "2513520"
  },
  {
    "text": "the clients do because that is the actual source of truth of your systems and people can exploit your api's and",
    "start": "2513520",
    "end": "2519490"
  },
  {
    "text": "send garbage data through other ways than your UI so your API is always should protect it but your clients I",
    "start": "2519490",
    "end": "2524830"
  },
  {
    "text": "should probably protect it as well so that you provide a good user experience and good indications back to your users",
    "start": "2524830",
    "end": "2531700"
  },
  {
    "text": "on what you expect from them as part of this we looked at the network inspector",
    "start": "2531700",
    "end": "2537760"
  },
  {
    "text": "we looked at response previews and we played more with the JavaScript debugger",
    "start": "2537760",
    "end": "2542940"
  },
  {
    "text": "this is my favorite one here is a bug that our developers have found now our",
    "start": "2543150",
    "end": "2550150"
  },
  {
    "text": "developers spend all day every day and get ranter they're playing with it they're developing on it they're renting",
    "start": "2550150",
    "end": "2556810"
  },
  {
    "text": "their own things in it and what they found is after they've been using get ranter for a couple hours",
    "start": "2556810",
    "end": "2563250"
  },
  {
    "text": "fans on their laptops just start screaming and they can't like the",
    "start": "2563250",
    "end": "2570099"
  },
  {
    "text": "browser tabs start crashing and then they look at the memory utilization of their PC and like Chrome that chrome tab",
    "start": "2570099",
    "end": "2577270"
  },
  {
    "text": "is taking up 16 gigs of memory to render their rant time lines and so that sounds",
    "start": "2577270",
    "end": "2583450"
  },
  {
    "text": "a lot like a memory bug a memory leak and so let's see if we can diagnose whether there's some memory leaks in get",
    "start": "2583450",
    "end": "2590320"
  },
  {
    "text": "ranter let's see if we can crush this bug so here and get rancher there are or",
    "start": "2590320",
    "end": "2597400"
  },
  {
    "text": "here in chrome there's a couple of different tools that have been falling a lot recently to understand where is our application",
    "start": "2597400",
    "end": "2604990"
  },
  {
    "text": "using memory how many of you thought hey this is JavaScript in the web I don't have to worry about memory management",
    "start": "2604990",
    "end": "2610990"
  },
  {
    "text": "that's stupid yeah I thought that too and then I wrote but I wrote JavaScript",
    "start": "2610990",
    "end": "2617109"
  },
  {
    "text": "apps that had tons of memory leaks in it because I didn't think I had to deal with any of it you do it's a big deal so",
    "start": "2617109",
    "end": "2622240"
  },
  {
    "text": "much of the wet like how many of you have been to a website that you were now reasonably confident has some crazy",
    "start": "2622240",
    "end": "2627250"
  },
  {
    "text": "memory leaks yeah so here's some ways that we can figure it out the first tool that I like to use is now",
    "start": "2627250",
    "end": "2634990"
  },
  {
    "text": "here under the memory tab it used to be called something else I don't remember what used to be called but it was very cryptic I think it was like profiling or",
    "start": "2634990",
    "end": "2641410"
  },
  {
    "text": "something like that which didn't give you any good name about what it actually did so I'm very happy that now they call",
    "start": "2641410",
    "end": "2646600"
  },
  {
    "text": "it memory and so in here what this lets us do is it lets us take different",
    "start": "2646600",
    "end": "2651790"
  },
  {
    "text": "snapshots about what's going on in our application what we want specifically we",
    "start": "2651790",
    "end": "2657520"
  },
  {
    "text": "want to do is this last option here this record allocation timeline this even tells you exactly what it's for use this",
    "start": "2657520",
    "end": "2664630"
  },
  {
    "text": "profile type to isolate memory leaks what this is going to do is it's going to tell us whether or not our app has a",
    "start": "2664630",
    "end": "2672040"
  },
  {
    "text": "memory leak it's not so good at telling us where the memory leak is but so let's",
    "start": "2672040",
    "end": "2677860"
  },
  {
    "text": "run it and see what we get here so I'm",
    "start": "2677860",
    "end": "2683680"
  },
  {
    "text": "just going to hit record and I'm gonna let this run for a little while so it starts recording what is the action",
    "start": "2683680",
    "end": "2688870"
  },
  {
    "text": "happening in the background of my application and what this looks like is we have a timeline of activity happening",
    "start": "2688870",
    "end": "2694240"
  },
  {
    "text": "you see the current time moving across is this gray bar and occasionally you see a pop up of another bar shoot up now",
    "start": "2694240",
    "end": "2702640"
  },
  {
    "text": "that bar is our application requesting memory from the operating system it's saying hey I need some new memory in",
    "start": "2702640",
    "end": "2709420"
  },
  {
    "text": "fact it's asking for about a hundred K of memory every 10 seconds or so now the",
    "start": "2709420",
    "end": "2717340"
  },
  {
    "text": "other thing you'll see is that the bar drops from being entirely blue to maybe half blue what that means is that the",
    "start": "2717340",
    "end": "2724420"
  },
  {
    "text": "gray part has been returned to the operating system we said all right we're done with this memory garbage collector",
    "start": "2724420",
    "end": "2730240"
  },
  {
    "text": "you can grab it and destroy it but if it's still blue that means we're still",
    "start": "2730240",
    "end": "2735310"
  },
  {
    "text": "holding on to the memory we still have something in our app that's pointing to it and so the garbage collector can't do",
    "start": "2735310",
    "end": "2741550"
  },
  {
    "text": "it and so we can see this pattern emerging of every 10 seconds we grab",
    "start": "2741550",
    "end": "2747720"
  },
  {
    "text": "100k more of memory but we never completely free the previous fact we're",
    "start": "2747720",
    "end": "2753880"
  },
  {
    "text": "holding on to between 50 and 80 K every 10 seconds over and over and over again",
    "start": "2753880",
    "end": "2762190"
  },
  {
    "text": "and that will eventually start adding up to real amounts of memory and cause all kinds of problems if we stop this",
    "start": "2762190",
    "end": "2768820"
  },
  {
    "text": "allocation we can see a whole bunch of information about what it actually captured that doesn't mean anything at",
    "start": "2768820",
    "end": "2775330"
  },
  {
    "text": "all to me if you understand very low level stuff about about the JavaScript",
    "start": "2775330",
    "end": "2781770"
  },
  {
    "text": "garbage collector you can go in here and you can say here's the actual closures and arrays and stuff that was amassing",
    "start": "2781770",
    "end": "2788710"
  },
  {
    "text": "these bits of memory but it's very hard to navigate through this and understand what these objects actually are so that",
    "start": "2788710",
    "end": "2796330"
  },
  {
    "text": "you understand how to fix this fortunately there's another option we have what this kind of memory profile",
    "start": "2796330",
    "end": "2803110"
  },
  {
    "text": "tells us is that there is a memory leak we're continuing to allocate memory but",
    "start": "2803110",
    "end": "2808180"
  },
  {
    "text": "it's not so good at telling us where it is so and understand where it is we can use a different tool here under performance",
    "start": "2808180",
    "end": "2815880"
  },
  {
    "text": "now what performance lets us do is it lets us profile different kinds of things over time like memory utilization",
    "start": "2815880",
    "end": "2823030"
  },
  {
    "text": "what are the actual bits of our code that are allocating memory and so I'm gonna run this here as well and I'm",
    "start": "2823030",
    "end": "2831100"
  },
  {
    "text": "gonna see if I can identify that same pattern that we are seeing in our memory allocation what I was what we were",
    "start": "2831100",
    "end": "2837220"
  },
  {
    "text": "seeing before is that about every 10 seconds we would see something happen that would grab a bunch of memory and",
    "start": "2837220",
    "end": "2842740"
  },
  {
    "text": "then it would let go of some of it but it would never really let go of all of it and so I want to let this run for at",
    "start": "2842740",
    "end": "2849100"
  },
  {
    "text": "least like 30 35 seconds so that we get you know a good you know representative",
    "start": "2849100",
    "end": "2854380"
  },
  {
    "text": "sample of the same kind of data so hopefully I can talk for another few",
    "start": "2854380",
    "end": "2859840"
  },
  {
    "text": "seconds until that hits about 35 and then I'm going to stop it okay so I'm",
    "start": "2859840",
    "end": "2868720"
  },
  {
    "text": "gonna pop this out and show this full screen because there's a lot of data here this is this is a kind of",
    "start": "2868720",
    "end": "2874810"
  },
  {
    "text": "intimidating screen and that's okay for you to be a little intimidated by the screen there's a lot of data here but it",
    "start": "2874810",
    "end": "2880630"
  },
  {
    "text": "shows you a bunch of really cool data I'm going to show you how to walk through this so there's a couple of",
    "start": "2880630",
    "end": "2887260"
  },
  {
    "text": "different charts here that are good at different things here at the top we have",
    "start": "2887260",
    "end": "2892330"
  },
  {
    "text": "a time line and this time line is for the entire timing that we were according and it shows us a bunch of",
    "start": "2892330",
    "end": "2897820"
  },
  {
    "text": "different stats that might be interesting for your apps so for example the top is your frames per second if",
    "start": "2897820",
    "end": "2904300"
  },
  {
    "text": "you're building like a graphically intensive animations games other",
    "start": "2904300",
    "end": "2909550"
  },
  {
    "text": "visualizations you might care about frames per second because if that starts getting too low you'll get a choppy",
    "start": "2909550",
    "end": "2914680"
  },
  {
    "text": "feeling in your application you'll see CPU utilization network traffic heap size that sort of thing in this we're",
    "start": "2914680",
    "end": "2923560"
  },
  {
    "text": "gonna skip over the second one because that I'll become more interesting here in a second here we have a simplistic",
    "start": "2923560",
    "end": "2929830"
  },
  {
    "text": "view just a line chart that shows different kinds of things and their utilization in your app so here in blue",
    "start": "2929830",
    "end": "2935650"
  },
  {
    "text": "we see the j/s heap size in green the number of nodes in our document so how",
    "start": "2935650",
    "end": "2940840"
  },
  {
    "text": "many HTML nodes exists in gold the number of listeners and the reason those",
    "start": "2940840",
    "end": "2946840"
  },
  {
    "text": "are important and they're on this chart is that nodes and listeners are a primary cause of memory utilization the",
    "start": "2946840",
    "end": "2953770"
  },
  {
    "text": "more nodes you have and the more listeners you have the more places you've added to your app that are going",
    "start": "2953770",
    "end": "2959440"
  },
  {
    "text": "to retain memory every time you create a new node and you have a pointer to it that node continues to exist in browser",
    "start": "2959440",
    "end": "2966730"
  },
  {
    "text": "memory regardless of whether or not it's visible so if we look at this we can",
    "start": "2966730",
    "end": "2973120"
  },
  {
    "text": "kind of see the same pattern that we are seeing in in the allocation timeline so",
    "start": "2973120",
    "end": "2979990"
  },
  {
    "text": "up here we see a big decrease so there was some sort of garbage collection event where some some things got cleared",
    "start": "2979990",
    "end": "2985900"
  },
  {
    "text": "out but we see a similar pattern where we see an increase in the number in the",
    "start": "2985900",
    "end": "2991120"
  },
  {
    "text": "J's heap the number of nodes and the number of listeners here and then again here and then again here and so that",
    "start": "2991120",
    "end": "3000180"
  },
  {
    "text": "same pattern will get reflected here and so I want to zoom in on these and so this is what's really cool about",
    "start": "3000180",
    "end": "3005910"
  },
  {
    "text": "this is where this page becomes a lot more valuable so up here on the timeline",
    "start": "3005910",
    "end": "3010920"
  },
  {
    "text": "all of these charts are late and so as I start zooming in on one of these things everything else gets bigger and I can",
    "start": "3010920",
    "end": "3017880"
  },
  {
    "text": "focus more on what's actually happening here now many years ago I used to play a",
    "start": "3017880",
    "end": "3022980"
  },
  {
    "text": "lot of video games particularly a lot of first-person shooter video games did anybody else anybody else do that",
    "start": "3022980",
    "end": "3029410"
  },
  {
    "text": "spent ridiculously too much time doing that but one of the most common things in those kind of video games were the",
    "start": "3029410",
    "end": "3035470"
  },
  {
    "text": "controls specifically the WASD keys on the keyboard for like moving around and this uses the",
    "start": "3035470",
    "end": "3043119"
  },
  {
    "text": "same controls which makes it super fun so as we start wanting to like explore",
    "start": "3043119",
    "end": "3049809"
  },
  {
    "text": "this I can use W to zoom in and s to",
    "start": "3049809",
    "end": "3055960"
  },
  {
    "text": "zoom out and I can strafe left and I can strafe right and I can just make a big game of it and it's a lot more fun and",
    "start": "3055960",
    "end": "3061660"
  },
  {
    "text": "so what I want to do is I want to start zooming in on this big increase to see if I can understand more about what's",
    "start": "3061660",
    "end": "3067509"
  },
  {
    "text": "happening and so as I keep zooming in what we'll start seeing is that line",
    "start": "3067509",
    "end": "3073479"
  },
  {
    "text": "chart isn't one increase it's lots and lots of little increases happening in",
    "start": "3073479",
    "end": "3078759"
  },
  {
    "text": "rapid order and the other thing you might notice is that that middle chart that we skipped over that looked boring",
    "start": "3078759",
    "end": "3085119"
  },
  {
    "text": "and it didn't have anything in it now that we start zooming in this has actual",
    "start": "3085119",
    "end": "3090420"
  },
  {
    "text": "information about what was the JavaScript that was actually executing during this particular time and look at",
    "start": "3090420",
    "end": "3097420"
  },
  {
    "text": "the scale that we're at we're like really zoomed in we're at you know two millisecond timings right here and so as",
    "start": "3097420",
    "end": "3104950"
  },
  {
    "text": "we continue to zoom in we'll see more and more detail about what was happening",
    "start": "3104950",
    "end": "3110049"
  },
  {
    "text": "at this time and we can start understanding what was the JavaScript doing when our memory footprint",
    "start": "3110049",
    "end": "3116440"
  },
  {
    "text": "increased so I can see that around the time of this memory increase we were",
    "start": "3116440",
    "end": "3121569"
  },
  {
    "text": "finishing an xhr load which means a network request was finishing a network",
    "start": "3121569",
    "end": "3126670"
  },
  {
    "text": "request to slash API slash ads and we can look down through here and figure",
    "start": "3126670",
    "end": "3132880"
  },
  {
    "text": "out here's all the different pieces of our code that were actually involved in this executing and a lot of this I don't",
    "start": "3132880",
    "end": "3140410"
  },
  {
    "text": "really recognize this doesn't look like my code it looks like infrastructure code but I have a function here called",
    "start": "3140410",
    "end": "3147009"
  },
  {
    "text": "render I've I write render functions that that could be interesting and so",
    "start": "3147009",
    "end": "3152680"
  },
  {
    "text": "you can select the different things here and on the the very bottom frame of this which is frankly kind of hard to see",
    "start": "3152680",
    "end": "3159369"
  },
  {
    "text": "because I'm pretty zoomed in on the UI right now down here in the summary once I've",
    "start": "3159369",
    "end": "3164680"
  },
  {
    "text": "selected one of those functions I get a bunch of metrics about it so here I have my render function my",
    "start": "3164680",
    "end": "3171190"
  },
  {
    "text": "render function took 1.6 milliseconds to execute and here's where it is it's an add list view J s I think this is",
    "start": "3171190",
    "end": "3179920"
  },
  {
    "text": "related to the increase this is one piece of my code those executing at the time of a memory increase increase so I",
    "start": "3179920",
    "end": "3186940"
  },
  {
    "text": "think that's a strong indication that this is one of the sources of my memory leaks so we can pop in and use this as a",
    "start": "3186940",
    "end": "3195790"
  },
  {
    "text": "good starting place if I have a strong piece of evidence that in this bit of code there is a memory leak so let's",
    "start": "3195790",
    "end": "3203230"
  },
  {
    "text": "kind of walk through it so up on line 33 I see an interval getting started an",
    "start": "3203230",
    "end": "3209940"
  },
  {
    "text": "interval that executes every 10 seconds evidence 1 we have something repeating",
    "start": "3209940",
    "end": "3216490"
  },
  {
    "text": "every 10 seconds every 10 seconds we do this this call to collection dot fetch",
    "start": "3216490",
    "end": "3223000"
  },
  {
    "text": "and somewhere along the lines our render function gets executed as part of that now this render function is doing a few",
    "start": "3223000",
    "end": "3231130"
  },
  {
    "text": "things it looks like we have an HTML element because we're calling dot inner",
    "start": "3231130",
    "end": "3236410"
  },
  {
    "text": "HTML on it and dot inner HTML is just zeroing it out saying hey whatever was",
    "start": "3236410",
    "end": "3242110"
  },
  {
    "text": "in your HTML before it's empty string now let's move on and then we loop over",
    "start": "3242110",
    "end": "3248260"
  },
  {
    "text": "something and render some new stuff so we call this other function called",
    "start": "3248260",
    "end": "3253780"
  },
  {
    "text": "render add and render add creates a thing that does something and then",
    "start": "3253780",
    "end": "3260290"
  },
  {
    "text": "sticks it into the HTML so we call element dot prepend which is a way that",
    "start": "3260290",
    "end": "3265420"
  },
  {
    "text": "you can add new markup to an HTML element so let's add a breakpoint here",
    "start": "3265420",
    "end": "3271780"
  },
  {
    "text": "and see if we can actually walk through some of this and understand what's happening so within the next 10 seconds",
    "start": "3271780",
    "end": "3277990"
  },
  {
    "text": "if our Theory's right we should break and we can see all right what is this dot L if we look at this dot l dot inner",
    "start": "3277990",
    "end": "3285970"
  },
  {
    "text": "HTML now here's what's in it right now so we have div div class add add link",
    "start": "3285970",
    "end": "3293430"
  },
  {
    "text": "who's com slash gold bathroom slash images slash add gold",
    "start": "3293430",
    "end": "3300190"
  },
  {
    "text": "bathroom sounds like one of our ads for mr. Donald Trump so if we keep stepping",
    "start": "3300190",
    "end": "3306880"
  },
  {
    "text": "through here so it looks like we're taking our advertisement container and we're zeroing it out so then we'll go",
    "start": "3306880",
    "end": "3313180"
  },
  {
    "text": "through here and we'll do something we'll render a bunch of new ads and as we step through this we're going to",
    "start": "3313180",
    "end": "3319660"
  },
  {
    "text": "render a new ad so if we just take a look at executing that not meant to do",
    "start": "3319660",
    "end": "3329859"
  },
  {
    "text": "any good if we will render a new ad and then we're going to take that",
    "start": "3329859",
    "end": "3335260"
  },
  {
    "text": "advertisement presumably that we created as a view and we're gonna stick it in",
    "start": "3335260",
    "end": "3340330"
  },
  {
    "text": "this thing called children what's in children now is an array with 243 things",
    "start": "3340330",
    "end": "3348670"
  },
  {
    "text": "in it there's 243 advertisement views in here",
    "start": "3348670",
    "end": "3355710"
  },
  {
    "text": "that as we look through we could see each one of them has a whole bit of",
    "start": "3355710",
    "end": "3361080"
  },
  {
    "text": "advertising markup and an image link to each of them and I'm holding onto all of",
    "start": "3361080",
    "end": "3368050"
  },
  {
    "text": "these because I have a pointer to all of them here in this children array so even",
    "start": "3368050",
    "end": "3373540"
  },
  {
    "text": "though my my application here only shows",
    "start": "3373540",
    "end": "3379390"
  },
  {
    "text": "I got to stop my breakpoint here even",
    "start": "3379390",
    "end": "3384580"
  },
  {
    "text": "though my application here only shows three advertisements I'm holding on to",
    "start": "3384580",
    "end": "3390400"
  },
  {
    "text": "memory for hundreds of advertisements because I'm not getting rid of my old",
    "start": "3390400",
    "end": "3395710"
  },
  {
    "text": "pointers even though I've removed them from the Dom I still have a pointer to it and so this browser right now has",
    "start": "3395710",
    "end": "3403900"
  },
  {
    "text": "like 200 pictures of topless Putin wandering around in it just waiting for",
    "start": "3403900",
    "end": "3410320"
  },
  {
    "text": "you to click on it and it's so sad that nobody will ever click on it because they're not visible anymore and so we",
    "start": "3410320",
    "end": "3417280"
  },
  {
    "text": "need to to stop that like here here we have this leak of we're creating new ads every 10 seconds and we're never getting",
    "start": "3417280",
    "end": "3424030"
  },
  {
    "text": "rid of the old ones and so right here on line 39 where we are zeroing out the old",
    "start": "3424030",
    "end": "3429790"
  },
  {
    "text": "age tml we can probably zero out the old children too we probably don't need to retain them anymore so right here after",
    "start": "3429790",
    "end": "3436339"
  },
  {
    "text": "it the children object is just an array and so what is the what do you think is",
    "start": "3436339",
    "end": "3442309"
  },
  {
    "text": "the best way to like release all of the things in the in an array a common way",
    "start": "3442309",
    "end": "3447319"
  },
  {
    "text": "to do it just be to say hey this dot children is an empty array but that's",
    "start": "3447319",
    "end": "3452900"
  },
  {
    "text": "not the coolest way to do it the coolest way to do it so I imagine many of you know that you can figure out what the",
    "start": "3452900",
    "end": "3459440"
  },
  {
    "text": "length of an array is by calling the property dot length you've built a for",
    "start": "3459440",
    "end": "3465410"
  },
  {
    "text": "loop you say hey I'm gonna loop over this array for all of the things in it and get the length what you might not",
    "start": "3465410",
    "end": "3470869"
  },
  {
    "text": "know is that length is settable as an I can say this thought children dot length",
    "start": "3470869",
    "end": "3476960"
  },
  {
    "text": "is zero and it will drop everything in the array because why wouldn't you it's",
    "start": "3476960",
    "end": "3483890"
  },
  {
    "text": "JavaScript so if we go back here we see",
    "start": "3483890",
    "end": "3489619"
  },
  {
    "text": "that before I execute this the length of the array is 258 things and as we step",
    "start": "3489619",
    "end": "3495140"
  },
  {
    "text": "through here now the length of the array is zero things which is the most",
    "start": "3495140",
    "end": "3502849"
  },
  {
    "text": "efficient way of actually zeroing out array even though it's really weird to read that we are setting the length of",
    "start": "3502849",
    "end": "3509150"
  },
  {
    "text": "an array all right so with that in place hopefully we fixed this memory link the",
    "start": "3509150",
    "end": "3514220"
  },
  {
    "text": "only way to really tell if you fixed it though is to go back into your memory and run another profile so one of the",
    "start": "3514220",
    "end": "3520789"
  },
  {
    "text": "cool things about this memory profiling tool that we talked about earlier is that these memory profiles are",
    "start": "3520789",
    "end": "3526150"
  },
  {
    "text": "independent of the browser itself as an I can take this snapshot and I could save it off and put it in my file system",
    "start": "3526150",
    "end": "3532880"
  },
  {
    "text": "somewhere if you're building a big app you could once an iteration once a release once a court or whatever take a",
    "start": "3532880",
    "end": "3539750"
  },
  {
    "text": "memory snapshot of important workflows in your app and save them in your repository so that you have ideas of",
    "start": "3539750",
    "end": "3546289"
  },
  {
    "text": "when are bits of your application when are they increasing the memory footprint and you can get a better idea of when do",
    "start": "3546289",
    "end": "3552769"
  },
  {
    "text": "memory leaks actually creep into your application what I'm gonna do right now is I'm just going to run another snapshot and see if we've made it better",
    "start": "3552769",
    "end": "3561400"
  },
  {
    "text": "which hopefully it starts going I'm probably at a breakpoint somewhere",
    "start": "3561400",
    "end": "3566570"
  },
  {
    "text": "no there we go I'm gonna start that over so now we're",
    "start": "3566570",
    "end": "3575360"
  },
  {
    "text": "going to run this again now we didn't change the fundamental structure of our application dance we didn't change the",
    "start": "3575360",
    "end": "3584660"
  },
  {
    "text": "fundamental structure of our application so what we should still see is about every 10 seconds a new memory allocation",
    "start": "3584660",
    "end": "3591650"
  },
  {
    "text": "happens where we render a new set of ads but hopefully what is going to happen here which I'm really hoping it happens",
    "start": "3591650",
    "end": "3600170"
  },
  {
    "text": "here hopefully what happens here is that the amount of memory that we retain",
    "start": "3600170",
    "end": "3605200"
  },
  {
    "text": "subsequently starts dropping considerably so what we can see here is that we're still retaining some of this",
    "start": "3605200",
    "end": "3612470"
  },
  {
    "text": "blue memory it's not always going to retain in the exact same patterns but",
    "start": "3612470",
    "end": "3617600"
  },
  {
    "text": "what we are seeing here is the amount of memory that is actually being kept is considerably lower than how it used to",
    "start": "3617600",
    "end": "3623180"
  },
  {
    "text": "be we're only retaining about 10k of memory every 10 seconds so there's probably",
    "start": "3623180",
    "end": "3628880"
  },
  {
    "text": "still a memory leak somewhere in here and we should probably keep digging into it to find the rest of it but we've made",
    "start": "3628880",
    "end": "3634700"
  },
  {
    "text": "a lot of progress into how how how much impact it's going to have so this was a",
    "start": "3634700",
    "end": "3646310"
  },
  {
    "text": "memory bug and specifically it was a memory bug caused by unreleased objects we had bits of HTML Dom that we had",
    "start": "3646310",
    "end": "3655370"
  },
  {
    "text": "created as part of rendering our ads and those bits of HTML consume a fair amount",
    "start": "3655370",
    "end": "3662390"
  },
  {
    "text": "of memory regardless of whether or not they are visible so if you're building an application that renders HTML renders",
    "start": "3662390",
    "end": "3669230"
  },
  {
    "text": "new content on the client and changes what it is if you're creating new stuff you're responsible for making sure it",
    "start": "3669230",
    "end": "3675620"
  },
  {
    "text": "goes away completely when you're done with it otherwise you're just collecting more and more markup in a page and never",
    "start": "3675620",
    "end": "3682130"
  },
  {
    "text": "really getting rid of it so we looked at the memory profiler and the performance",
    "start": "3682130",
    "end": "3689450"
  },
  {
    "text": "timeline so I think I'm getting pretty close on time so we got one more bug I want to show you quickly so this is our",
    "start": "3689450",
    "end": "3696170"
  },
  {
    "text": "last bug we is a bug that I imagine many many of you have had reported to you over time and",
    "start": "3696170",
    "end": "3701940"
  },
  {
    "text": "this is a bug that hey sometimes my application is slow which sucks but we",
    "start": "3701940",
    "end": "3713579"
  },
  {
    "text": "can figure out whether or not an application is slow using some of the things we've already looked at so we're",
    "start": "3713579",
    "end": "3718829"
  },
  {
    "text": "gonna look at the performance management or the performance tab again but this time rather than profiling the memory",
    "start": "3718829",
    "end": "3725489"
  },
  {
    "text": "we're just gonna take a overall look and maybe even take a look at some screenshots what I want to do here is",
    "start": "3725489",
    "end": "3731039"
  },
  {
    "text": "rather than profiling the page during its operation I just want to see what",
    "start": "3731039",
    "end": "3736890"
  },
  {
    "text": "the page does at the beginning of its load time and so I can do this this reload button and what's going to do is",
    "start": "3736890",
    "end": "3743640"
  },
  {
    "text": "it's going to take a snapshot of my page during its initial load and what this captured is what are all the different",
    "start": "3743640",
    "end": "3749670"
  },
  {
    "text": "things that happen during during a load phase during a initial page view of my",
    "start": "3749670",
    "end": "3755339"
  },
  {
    "text": "application now this isn't very long my page loaded in like two seconds which doesn't seem like it's that long like",
    "start": "3755339",
    "end": "3762799"
  },
  {
    "text": "what my users are complaining about a two-second page time like what do you want out of me like it's fine but I'm",
    "start": "3762799",
    "end": "3769619"
  },
  {
    "text": "running on a big fancy laptop on a good network and a lot of my users are probably going to have crappy networks",
    "start": "3769619",
    "end": "3775259"
  },
  {
    "text": "so we can simulate some of that by going into the network and saying you know what I want to pretend to be a user way",
    "start": "3775259",
    "end": "3783210"
  },
  {
    "text": "out in the middle of nowhere in Australia where I don't have any connectivity at all or really bad slowed",
    "start": "3783210",
    "end": "3788400"
  },
  {
    "text": "3G connections and so I can tell chrome to pretend to be a crappy browser with a",
    "start": "3788400",
    "end": "3794640"
  },
  {
    "text": "bad network connection instead and so now if I reload this with a network throttle in place I can see this is how",
    "start": "3794640",
    "end": "3801630"
  },
  {
    "text": "long my page is going to take for real users on certain bad networks which",
    "start": "3801630",
    "end": "3810809"
  },
  {
    "text": "takes considerably longer in fact using some of these tools here I can see that",
    "start": "3810809",
    "end": "3817140"
  },
  {
    "text": "here's what my users would actually see here's what my users actually see during",
    "start": "3817140",
    "end": "3823529"
  },
  {
    "text": "the low time so at one second they see a blank page at two seconds they still see",
    "start": "3823529",
    "end": "3829769"
  },
  {
    "text": "a blank page at three seconds they see a little bit of my chrome at four seconds they still",
    "start": "3829769",
    "end": "3837030"
  },
  {
    "text": "haven't seen anything interesting at five seconds they see the title of my",
    "start": "3837030",
    "end": "3842340"
  },
  {
    "text": "page at six seconds still nothing more at eight seconds nothing at nine seconds",
    "start": "3842340",
    "end": "3851130"
  },
  {
    "text": "nothing at ten seconds nothing at 11 seconds their rant show up at 12 seconds",
    "start": "3851130",
    "end": "3857970"
  },
  {
    "text": "we start showing some advertising Chrome and then this thing ends before we've even shown all of the pictures so 12",
    "start": "3857970",
    "end": "3864000"
  },
  {
    "text": "seconds in them that we still haven't loaded images and so using these tools we can actually step-by-step go through",
    "start": "3864000",
    "end": "3870330"
  },
  {
    "text": "and say what are all of the different things that are happening during these",
    "start": "3870330",
    "end": "3876660"
  },
  {
    "text": "page executions and I actually care about that I care about these",
    "start": "3876660",
    "end": "3883069"
  },
  {
    "text": "I mean so what we can do is we can look",
    "start": "3893460",
    "end": "3899460"
  },
  {
    "text": "at this and we can see what are the individual Network requests that are taking the longest as part of building",
    "start": "3899460",
    "end": "3906500"
  },
  {
    "text": "building up this application and I don't know where that went",
    "start": "3906500",
    "end": "3912890"
  },
  {
    "text": "so what this paint what this is telling us is that our page on bad networks is",
    "start": "3912890",
    "end": "3918119"
  },
  {
    "text": "taking a really really long time and we can look and see all the different things that are happening that might",
    "start": "3918119",
    "end": "3923940"
  },
  {
    "text": "cause that and so if we look at what those things are we can time out all the",
    "start": "3923940",
    "end": "3931320"
  },
  {
    "text": "different calls that are being there taking place in order to build the page and which are the ones that are the big",
    "start": "3931320",
    "end": "3937290"
  },
  {
    "text": "tents in the in the totem pole here and so if we look at these individual times we can say hey at the beginning of our",
    "start": "3937290",
    "end": "3942780"
  },
  {
    "text": "page here's all the different calls being made and how long they're taking and so we got some real long ones we",
    "start": "3942780",
    "end": "3947880"
  },
  {
    "text": "have look at all these different things we're pulling in a CSS file and then a whole bunch of individual bits of",
    "start": "3947880",
    "end": "3953400"
  },
  {
    "text": "JavaScript are all coming in like we're not bundling the JavaScript together we're not minifying it we're not doing",
    "start": "3953400",
    "end": "3959550"
  },
  {
    "text": "anything to actually reduce that and so there's a ton of performance improvements we can use what the",
    "start": "3959550",
    "end": "3964619"
  },
  {
    "text": "performance page can use when you do this is it'll show you that the big things in your application they're",
    "start": "3964619",
    "end": "3969960"
  },
  {
    "text": "causing the worst performance lags and so you can focus on the biggest wins to improve the performance of your page",
    "start": "3969960",
    "end": "3977599"
  },
  {
    "text": "there's a whole much more that we could talk about with that but unfortunately I'm running out of time so this was a performance bug what I want to show you",
    "start": "3977599",
    "end": "3985109"
  },
  {
    "text": "is that all of the stuff that we talked about today is actually available in a full day workshop form with like 10 more",
    "start": "3985109",
    "end": "3992700"
  },
  {
    "text": "bugs relying on you to help me like debug them together you can find this out on a service called front-end",
    "start": "3992700",
    "end": "3998580"
  },
  {
    "text": "masters which is like an online training head log for front-end stuff there's a ton of other great catalogs out there of",
    "start": "3998580",
    "end": "4005119"
  },
  {
    "text": "course is my course is called debugging juror squashing JavaScript bugs we used",
    "start": "4005119",
    "end": "4011119"
  },
  {
    "text": "a little service that I build called Trek jeaious as part of a little bit of stuff I talked earlier about monitoring",
    "start": "4011119",
    "end": "4016400"
  },
  {
    "text": "and knowing you know it's a less expensive way of finding out when you let bugs creep into production truck JS",
    "start": "4016400",
    "end": "4023420"
  },
  {
    "text": "tells you all kinds of awesome stuff about how bugs came into your sis what were all the events in the changes",
    "start": "4023420",
    "end": "4029300"
  },
  {
    "text": "that would have led to it for example our bug about the 400 truck Jess can tell you things like hey this happens",
    "start": "4029300",
    "end": "4035810"
  },
  {
    "text": "when the user enters zero characters and types and pushes a button that's the sort of information that we can provide",
    "start": "4035810",
    "end": "4041119"
  },
  {
    "text": "if you want to play with that that's out at trackjs.com or we have a lounge upstairs where you can come talk to me and I'll do a full",
    "start": "4041119",
    "end": "4046820"
  },
  {
    "text": "demo for you and this was squashing JavaScript bugs I hope it was fun I hope",
    "start": "4046820",
    "end": "4052520"
  },
  {
    "text": "you've learned a few things about chrome and fixing things and how to approach bugs and I'd be happy to chat with you more afterwards otherwise enjoy lunch",
    "start": "4052520",
    "end": "4059510"
  },
  {
    "text": "thank you [Applause]",
    "start": "4059510",
    "end": "4064349"
  }
]