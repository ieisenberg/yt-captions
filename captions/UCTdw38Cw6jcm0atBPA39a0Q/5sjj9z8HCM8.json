[
  {
    "start": "0",
    "end": "106000"
  },
  {
    "text": "okay thank you for being here uh so i'm an independent uh",
    "start": "8080",
    "end": "13840"
  },
  {
    "text": "development architect i'm mostly doing security stuff when my kids ask what i",
    "start": "13840",
    "end": "19439"
  },
  {
    "text": "do at work i say that i build login buttons uh and behind those login buttons",
    "start": "19439",
    "end": "25519"
  },
  {
    "text": "there's usually a sample to open a deconnect or a mix of them or well",
    "start": "25519",
    "end": "30720"
  },
  {
    "text": "complicated stuff but i do like security and i've always liked security since i started coding",
    "start": "30720",
    "end": "37360"
  },
  {
    "text": "more than 30 years ago so today we are going to look at os top",
    "start": "37360",
    "end": "43520"
  },
  {
    "text": "10 and see how that how asp.net core stands up to those",
    "start": "43520",
    "end": "49520"
  },
  {
    "text": "threats and to be honest this version of os top",
    "start": "49520",
    "end": "54879"
  },
  {
    "text": "10 i'm basing this talk on is not the latest one uh this is kind of a bonus talk where",
    "start": "54879",
    "end": "62399"
  },
  {
    "text": "they asked yesterday if there were anyone that had had extra talks to fill i'm just losing the schedule so i bring",
    "start": "62399",
    "end": "68799"
  },
  {
    "text": "up one and obviously someone released a new over as top 10 version since i created this talk",
    "start": "68799",
    "end": "75360"
  },
  {
    "text": "but still the asp.net core mechanism are the same so let's get started",
    "start": "75360",
    "end": "81600"
  },
  {
    "text": "so why asp.net core well a full repeats mistakes smart personally learns from",
    "start": "81600",
    "end": "86880"
  },
  {
    "text": "their mistakes and wise person learns from others mistakes so that's why i want to use ervos protein because that's",
    "start": "86880",
    "end": "93439"
  },
  {
    "text": "a top list of other people's mistakes and we can learn from them so let's see",
    "start": "93439",
    "end": "98840"
  },
  {
    "text": "how is a split on that core standing up to the threats in er was top 10",
    "start": "98840",
    "end": "106640"
  },
  {
    "start": "106000",
    "end": "106000"
  },
  {
    "text": "the number one on this version of roster 10 is injection so what is",
    "start": "106640",
    "end": "112960"
  },
  {
    "text": "an injection attack well consider webshop where we do have a possibility to view orders",
    "start": "112960",
    "end": "120079"
  },
  {
    "text": "site.com order question mark id equals 17. this would typically be used in a sql",
    "start": "120079",
    "end": "128399"
  },
  {
    "text": "query in this way that the program takes whatever is after that",
    "start": "128399",
    "end": "134160"
  },
  {
    "text": "parameter and put it into the template here and creates a sql statement that is",
    "start": "134160",
    "end": "139599"
  },
  {
    "text": "run on the sql server and an injection attack well consider if",
    "start": "139599",
    "end": "147200"
  },
  {
    "text": "i entered this order number when trying to access the site",
    "start": "147200",
    "end": "152640"
  },
  {
    "text": "it's still a valid order number but i also added drop table orders",
    "start": "152640",
    "end": "157840"
  },
  {
    "text": "so the program will happily do what it should it will take this part",
    "start": "157840",
    "end": "163120"
  },
  {
    "text": "put it there and create this sql statement and if this sql statement is executed to the database or the webshop",
    "start": "163120",
    "end": "170959"
  },
  {
    "text": "i guess the web shop will not be very healthy afterwards what do you think",
    "start": "170959",
    "end": "176400"
  },
  {
    "text": "so let's have a look at how",
    "start": "178480",
    "end": "185640"
  },
  {
    "text": "asp.net core handles the risk of injections",
    "start": "186400",
    "end": "191599"
  },
  {
    "text": "it doesn't because what is the default",
    "start": "194879",
    "end": "200720"
  },
  {
    "text": "database accessing you when using asp.net nowadays is link language integrated query there is no string",
    "start": "200720",
    "end": "207599"
  },
  {
    "text": "manipulation anymore we are simply using a strongly typed representation of",
    "start": "207599",
    "end": "214239"
  },
  {
    "text": "the query and then we have an engine behind a hardened engine that creates the actual sql statements that are run",
    "start": "214239",
    "end": "221360"
  },
  {
    "text": "and that hardened engine of course use correct parameterized queries and this",
    "start": "221360",
    "end": "227120"
  },
  {
    "text": "is something unlike with asp.net core they have secure practices so go with",
    "start": "227120",
    "end": "232159"
  },
  {
    "text": "the stream follow the stream use the main tools it will be secure in most",
    "start": "232159",
    "end": "238159"
  },
  {
    "text": "ways then of course there are exceptions if you for example are using",
    "start": "238159",
    "end": "244879"
  },
  {
    "text": "dapper it's a popular lightweight orm with net it's fast",
    "start": "244879",
    "end": "250959"
  },
  {
    "text": "it allows you to you write your sql queries directly then you of course need to be careful to not open up for",
    "start": "250959",
    "end": "258079"
  },
  {
    "text": "injection attacks but on the other hand i think that the choice of using",
    "start": "258079",
    "end": "263199"
  },
  {
    "text": "dapper is probably something that is uh",
    "start": "263199",
    "end": "269280"
  },
  {
    "text": "not what uh is a conscious decision probably and",
    "start": "269280",
    "end": "275120"
  },
  {
    "text": "with that conscious decision i hope comes uh awareness of the risks of using sql",
    "start": "275120",
    "end": "281360"
  },
  {
    "text": "strings so",
    "start": "281360",
    "end": "286560"
  },
  {
    "text": "let's move on to broken authentication this is my favorite i'm doing authentication and login buttons most of my time the time",
    "start": "286560",
    "end": "295440"
  },
  {
    "start": "287000",
    "end": "287000"
  },
  {
    "text": "so when we have authentication when we go to website and log on we have something like this uh username password",
    "start": "295520",
    "end": "302560"
  },
  {
    "text": "we hit the login button we send that over to the server the server valid is that",
    "start": "302560",
    "end": "308400"
  },
  {
    "text": "and then since http is a stateless the next time",
    "start": "308400",
    "end": "313600"
  },
  {
    "text": "my client sends a request to that server the server goes like",
    "start": "313600",
    "end": "318639"
  },
  {
    "text": "who are you and how did you find me so what do we mechanism do we typically",
    "start": "318639",
    "end": "324320"
  },
  {
    "text": "use to um to pre preserve state or represent the",
    "start": "324320",
    "end": "330160"
  },
  {
    "text": "session i have a special price what is the technology we are using cookie you want cookies",
    "start": "330160",
    "end": "338800"
  },
  {
    "text": "of course we give it a cookie and the server is happy now i want you to have that face because",
    "start": "338800",
    "end": "345120"
  },
  {
    "text": "you also get cookies um",
    "start": "345120",
    "end": "351720"
  },
  {
    "text": "so let's see at an example on how uh another login method might look like and this is",
    "start": "352960",
    "end": "359520"
  },
  {
    "text": "actually fun because i did create this example sometime back and",
    "start": "359520",
    "end": "365199"
  },
  {
    "text": "i meant to put in some issues in this i meant to put in like two or three",
    "start": "365199",
    "end": "370880"
  },
  {
    "text": "issues i've used this as a number of conferences and now the list is up to six different issues people have found",
    "start": "370880",
    "end": "377759"
  },
  {
    "text": "in this code let me see if you can find a seventh i don't know if there is a seventh issue",
    "start": "377759",
    "end": "383280"
  },
  {
    "text": "here or not so okay what's wrong this is something i might have written",
    "start": "383280",
    "end": "388960"
  },
  {
    "text": "like 25 years ago to the best of my ability it's wrong what's wrong with this",
    "start": "388960",
    "end": "395840"
  },
  {
    "text": "sql injection right we have sql injection here uh",
    "start": "400639",
    "end": "405919"
  },
  {
    "text": "what do we have more yes to store the username uh right away",
    "start": "405919",
    "end": "413520"
  },
  {
    "text": "in the cookie uh so i i have no i really just put current user username",
    "start": "413520",
    "end": "420160"
  },
  {
    "text": "so what if the uh anyone just modifies the cookie they would you",
    "start": "420160",
    "end": "427120"
  },
  {
    "text": "could create you know set your own cookie and say your admin so it's horrible yeah what more",
    "start": "427120",
    "end": "435639"
  },
  {
    "text": "yeah there's no kind of lockout or anything we can just try whatever as many times as possible no protection",
    "start": "439680",
    "end": "446639"
  },
  {
    "text": "against that what about the password validation is",
    "start": "446639",
    "end": "452240"
  },
  {
    "text": "this a good way to validate passwords with the in a database",
    "start": "452240",
    "end": "457759"
  },
  {
    "text": "they should be sorted and hashed right we're just restoring them obviously in clear text um",
    "start": "457919",
    "end": "466240"
  },
  {
    "text": "so we have a couple more on my list still known you",
    "start": "466240",
    "end": "471280"
  },
  {
    "text": "no no lockout yep and",
    "start": "476000",
    "end": "481199"
  },
  {
    "text": "no password requirements yeah that's actually or um this wouldn't be where we would put",
    "start": "481199",
    "end": "487840"
  },
  {
    "text": "in password requirements because this is when we log in and validate the password so it's not the set password",
    "start": "487840",
    "end": "495520"
  },
  {
    "text": "method where we set it there's a simple logic flaw",
    "start": "495919",
    "end": "502080"
  },
  {
    "text": "if you follow the code because what would happen if you enter the wrong password",
    "start": "502080",
    "end": "509199"
  },
  {
    "text": "still logs you in exactly there's no return or anything here it",
    "start": "513599",
    "end": "518719"
  },
  {
    "text": "shakes if results not has rose but then it sets the cookie unconditionally at the end",
    "start": "518719",
    "end": "524480"
  },
  {
    "text": "either way that was not intentional um",
    "start": "524480",
    "end": "529519"
  },
  {
    "text": "and then there's something when doing cookies an authentication cookie we should be a bit more careful",
    "start": "529519",
    "end": "535839"
  },
  {
    "text": "about our cookie what should we mature about cookies",
    "start": "535839",
    "end": "541519"
  },
  {
    "text": "same side and also http only we should be strict about so much reviews on the cookies so this is a brilliant example",
    "start": "541519",
    "end": "548240"
  },
  {
    "text": "on how to not write the login method",
    "start": "548240",
    "end": "552240"
  },
  {
    "text": "oh yes it actually says http post",
    "start": "561120",
    "end": "566000"
  },
  {
    "text": "uh okay might be you usually when you set that kind of requirement it should be",
    "start": "571920",
    "end": "577519"
  },
  {
    "text": "posted it will require a post but yeah if that's true it's it's bad as well",
    "start": "577519",
    "end": "585200"
  },
  {
    "text": "because you're in that way yeah okay",
    "start": "585200",
    "end": "590959"
  },
  {
    "text": "that's new okay there's a new thing you deserve the second package of cookies for that",
    "start": "590959",
    "end": "597360"
  },
  {
    "text": "here you are uh now i got it so yeah no guard that",
    "start": "597360",
    "end": "603600"
  },
  {
    "text": "the username and password really came from the body that's right",
    "start": "603600",
    "end": "609360"
  },
  {
    "text": "okay so well what should we do",
    "start": "609360",
    "end": "614959"
  },
  {
    "text": "uh we shouldn't do this ourselves we should use between components to do like asp.net identity so let's look at",
    "start": "614959",
    "end": "622560"
  },
  {
    "text": "how uh authentication works in asp.net core and first look at what a speed on the",
    "start": "622560",
    "end": "629200"
  },
  {
    "text": "asp.net core pipeline works it's the official name is a chain of",
    "start": "629200",
    "end": "636959"
  },
  {
    "text": "responsibility pattern it's one of the original design patterns in the gang of four books from 94 something 1994.",
    "start": "636959",
    "end": "645680"
  },
  {
    "text": "i usually refer to it as a blame game it means that the first middleware the static files",
    "start": "645680",
    "end": "651600"
  },
  {
    "text": "middleware i get the chance to handle the request if it doesn't know it blames the next one the",
    "start": "651600",
    "end": "657760"
  },
  {
    "text": "authentication middleware and so on and at the end of the chain there's also always a hardcover 404 middleware that",
    "start": "657760",
    "end": "664480"
  },
  {
    "text": "just says 404 doesn't exist and returns",
    "start": "664480",
    "end": "669920"
  },
  {
    "text": "so instead of using that crappy login method from the last slide",
    "start": "672160",
    "end": "677920"
  },
  {
    "text": "we should use asp.net identity which is a built-in library",
    "start": "677920",
    "end": "682959"
  },
  {
    "text": "i can have some opinions about the design but it's not insecure",
    "start": "682959",
    "end": "689519"
  },
  {
    "text": "asp.net identity would validate the",
    "start": "689519",
    "end": "694800"
  },
  {
    "text": "would validate the username and password against the [Music] storage whatever and then",
    "start": "696320",
    "end": "703519"
  },
  {
    "text": "set an app cookie and on the subsequent request when a subsequent request comes in the",
    "start": "703519",
    "end": "709920"
  },
  {
    "text": "authentication middleware will check is there a cookie set okay and let's test",
    "start": "709920",
    "end": "715279"
  },
  {
    "text": "the user uh property on the http context so subsequent like the",
    "start": "715279",
    "end": "720800"
  },
  {
    "text": "middleware in the pipeline such as the msc handler or milwaukee will be able to",
    "start": "720800",
    "end": "728079"
  },
  {
    "text": "just access user and that will be the login session",
    "start": "728079",
    "end": "734480"
  },
  {
    "text": "but there's one drawback with this and that is when i whenever i come to a site that looks like this i said oh no",
    "start": "734480",
    "end": "741600"
  },
  {
    "text": "let's bring out the password manager let's create another password let's try to remember this this is not what people accept nowadays",
    "start": "741600",
    "end": "748639"
  },
  {
    "text": "what people ex [Music] expect is that they should use their favorite",
    "start": "748639",
    "end": "755600"
  },
  {
    "text": "social network or external login provider right or in corporate setup you want single",
    "start": "755600",
    "end": "761839"
  },
  {
    "text": "sign on with your corporate account and this is where asp.net identity has a",
    "start": "761839",
    "end": "767519"
  },
  {
    "text": "really good data model because they have the idea that one user can",
    "start": "767519",
    "end": "772720"
  },
  {
    "text": "have multiple logins so there is an identity your user identity in the application that is connected or mapped",
    "start": "772720",
    "end": "780320"
  },
  {
    "text": "to a number of login methods one or more",
    "start": "780320",
    "end": "787240"
  },
  {
    "text": "so back to our chain of responsibility sorry blame game and see how this would work",
    "start": "787760",
    "end": "793680"
  },
  {
    "text": "if i on that login page would hit sign in with google that would trigger a call to the",
    "start": "793680",
    "end": "800320"
  },
  {
    "text": "external authentication handler for google that will do the redirect out to google",
    "start": "800320",
    "end": "805839"
  },
  {
    "text": "where google does their authentication thingy and then they post or redirects a result back",
    "start": "805839",
    "end": "815040"
  },
  {
    "text": "that is caught by the authentication hand authentication middleware",
    "start": "815040",
    "end": "820240"
  },
  {
    "text": "that routes the incoming response to the google authentication handler",
    "start": "820240",
    "end": "827519"
  },
  {
    "text": "the google authentication handler will in a typical setup preserve that at",
    "start": "827519",
    "end": "833519"
  },
  {
    "text": "in something called an external cookie so we have two different cookie schemes",
    "start": "833519",
    "end": "838720"
  },
  {
    "text": "in a typical setup we do not want to sign the user in to",
    "start": "838720",
    "end": "844639"
  },
  {
    "text": "our application with the identity we got from google directly we want to preserve that identity we got",
    "start": "844639",
    "end": "851040"
  },
  {
    "text": "from google and then we want to redirect them to somewhere in",
    "start": "851040",
    "end": "856800"
  },
  {
    "text": "our application where we can see is this a user that is mapped to an existing account or is it a new user do we want",
    "start": "856800",
    "end": "864480"
  },
  {
    "text": "to grab some information we got from google and stored in our database kind of kind of thing that is typically done in",
    "start": "864480",
    "end": "871440"
  },
  {
    "text": "an external callback method and the external callback method calls",
    "start": "871440",
    "end": "876880"
  },
  {
    "text": "into asp.net identity to look up this google identity we just",
    "start": "876880",
    "end": "883680"
  },
  {
    "text": "got here is that mapped to some a user in our system and if it is",
    "start": "883680",
    "end": "890160"
  },
  {
    "text": "it calls to the app cookie to set that preserve that user identity for subsequent requests",
    "start": "890160",
    "end": "897199"
  },
  {
    "text": "and on the subsequent request we simply use the app cookie and all of these complex",
    "start": "897199",
    "end": "902320"
  },
  {
    "text": "things are hidden um one might ask why do we do all of this",
    "start": "902320",
    "end": "910000"
  },
  {
    "text": "but well this gives us an opportunity to show ui while we hang on to the google identity",
    "start": "910000",
    "end": "917120"
  },
  {
    "text": "we got from google and we're still trying to figure out if this is linked to something where we",
    "start": "917120",
    "end": "923120"
  },
  {
    "text": "might want to bring the users through a license acceptance screen or anything a workflow before actually letting them",
    "start": "923120",
    "end": "930639"
  },
  {
    "text": "into our application some a bit complex maybe but powerful",
    "start": "930639",
    "end": "940000"
  },
  {
    "text": "so more about authentication",
    "start": "940000",
    "end": "945759"
  },
  {
    "text": "back in the days we had web apps and we had browsers and we used cookies and everyone was happy",
    "start": "945759",
    "end": "952959"
  },
  {
    "text": "then we added more powerful javascript applications we're writing entire client applications that are running in the",
    "start": "952959",
    "end": "959839"
  },
  {
    "text": "browser nowadays and those are typically calling a rest api",
    "start": "959839",
    "end": "965600"
  },
  {
    "text": "and if this had been four or five four years ago i would now have started on a long",
    "start": "965600",
    "end": "972639"
  },
  {
    "text": "explanation why the javascript app should be an open id connect client and why it should use",
    "start": "972639",
    "end": "981279"
  },
  {
    "text": "an oauth 2 beer token to call the rest api to mitigate sea surf attacks etc etc",
    "start": "981279",
    "end": "988959"
  },
  {
    "text": "but it turns out that no that was a dead end",
    "start": "988959",
    "end": "994800"
  },
  {
    "text": "design wise the up-to-date recommendation is to stick to your cookies",
    "start": "994800",
    "end": "1000800"
  },
  {
    "text": "and use cookies even for javascript applications and in case your javascript apple app",
    "start": "1000800",
    "end": "1006639"
  },
  {
    "text": "needs to call multiple apis it should do that through",
    "start": "1006639",
    "end": "1012560"
  },
  {
    "text": "what is called a back-end for front-end so the javascript app should just call api endpoints on its own domain",
    "start": "1012560",
    "end": "1019759"
  },
  {
    "text": "and then that that back-end can relay to other services",
    "start": "1019759",
    "end": "1025839"
  },
  {
    "text": "so that's the authentication any questions on the authentication block",
    "start": "1026959",
    "end": "1032079"
  },
  {
    "text": "okay let's move on to number three on the obos top 10 list sensitive data exposure",
    "start": "1033520",
    "end": "1039918"
  },
  {
    "start": "1035000",
    "end": "1035000"
  },
  {
    "text": "this is really about how data is stored and there are a couple of mechanisms in",
    "start": "1039919",
    "end": "1048480"
  },
  {
    "text": "asp.net core to mitigate this one is in asp.net identity core we mentioned that",
    "start": "1048480",
    "end": "1053520"
  },
  {
    "text": "storing the passwords in plain text as my silly login method",
    "start": "1053520",
    "end": "1058799"
  },
  {
    "text": "did was wrong asp.net identity core used nist approved pbkdf2",
    "start": "1058799",
    "end": "1065360"
  },
  {
    "text": "algorithm hmx shot 256 with 10 000 iterations as default",
    "start": "1065360",
    "end": "1072160"
  },
  {
    "text": "is configurable if you want to have more iterations",
    "start": "1072160",
    "end": "1076799"
  },
  {
    "text": "we do have a required http as a tribute to force particular to force uh some controllers",
    "start": "1078160",
    "end": "1086720"
  },
  {
    "text": "uh to use https but i think that is actually already deprecated",
    "start": "1086720",
    "end": "1092400"
  },
  {
    "text": "would you run anything on plane http anymore nope just use https everywhere",
    "start": "1092400",
    "end": "1100080"
  },
  {
    "text": "then we have a piece that you've all used in if you're",
    "start": "1100240",
    "end": "1105520"
  },
  {
    "text": "net developers many times probably without knowing about it is the data protector",
    "start": "1105520",
    "end": "1112320"
  },
  {
    "text": "so the data protector is a wrapper around low-level encryption primitives",
    "start": "1112320",
    "end": "1119760"
  },
  {
    "text": "that is really simple to use you can take a data protector take source string hello world put it",
    "start": "1119760",
    "end": "1126080"
  },
  {
    "text": "through a data protector you get some gibberish back",
    "start": "1126080",
    "end": "1131200"
  },
  {
    "text": "and you can then unprotect it and get hello world back so why is this important well",
    "start": "1131200",
    "end": "1138640"
  },
  {
    "text": "uh the data protection there is accessed by the way uh by using a data protection",
    "start": "1138640",
    "end": "1144799"
  },
  {
    "text": "provider is a service that you can inject into you get",
    "start": "1144799",
    "end": "1150160"
  },
  {
    "text": "injection from the da system and then you need to create a specific data protector with a purpose and i'll just",
    "start": "1150160",
    "end": "1155840"
  },
  {
    "text": "show you why in the next slide to use it",
    "start": "1155840",
    "end": "1161120"
  },
  {
    "text": "dp.protect hello world or unprotect the protected data",
    "start": "1161120",
    "end": "1166320"
  },
  {
    "text": "and this is the elegance elegance really of the data protector it's simple to use behind this",
    "start": "1166320",
    "end": "1171840"
  },
  {
    "text": "we have key management key rotation proper encryption proper signing with",
    "start": "1171840",
    "end": "1177919"
  },
  {
    "text": "strong algorithm correct uses of aes with initialization vectors all of that",
    "start": "1177919",
    "end": "1184160"
  },
  {
    "text": "that it's just so simple to get wrong so i like this abstraction",
    "start": "1184160",
    "end": "1189840"
  },
  {
    "text": "it's encryption that like it should be just hand in something a simple method",
    "start": "1189840",
    "end": "1194960"
  },
  {
    "text": "method where is it used well one example is the authentication",
    "start": "1194960",
    "end": "1200000"
  },
  {
    "text": "cookies it's really a claims identity that is just run through the data protector and",
    "start": "1200000",
    "end": "1205280"
  },
  {
    "text": "put in the cookie that's what's in the asp.net",
    "start": "1205280",
    "end": "1210400"
  },
  {
    "text": "application cookie and then i mentioned we had to specify",
    "start": "1210400",
    "end": "1216320"
  },
  {
    "text": "purpose and why that consider if i have both using data protector with the",
    "start": "1216320",
    "end": "1221919"
  },
  {
    "text": "session cookies and i also have in my application i have a wizard where",
    "start": "1221919",
    "end": "1228720"
  },
  {
    "text": "i do some really expensive validation of the data in one step",
    "start": "1228720",
    "end": "1234640"
  },
  {
    "text": "and i want to carry that on in hidden input fields",
    "start": "1234640",
    "end": "1239840"
  },
  {
    "text": "and the next time i'm using that data i just want to trust it without having to revalidate i could use the data",
    "start": "1239840",
    "end": "1245679"
  },
  {
    "text": "protector to do that so i can run the complex validation when someone enters the data",
    "start": "1245679",
    "end": "1251679"
  },
  {
    "text": "put the validated data through data protector and let it be carried on as a hidden input field for the rest of the",
    "start": "1251679",
    "end": "1258080"
  },
  {
    "text": "wizard now consider what if i",
    "start": "1258080",
    "end": "1264640"
  },
  {
    "text": "enter some data in that wizard that",
    "start": "1264640",
    "end": "1270480"
  },
  {
    "text": "is like user anders royal admin i and then i use that to swap with the",
    "start": "1270480",
    "end": "1277520"
  },
  {
    "text": "cookie so i don't have the encryption key i cannot create encrypted just create",
    "start": "1277520",
    "end": "1284720"
  },
  {
    "text": "encrypted values but i could piggyback on the functionality that i can input information in the wizard that is run",
    "start": "1284720",
    "end": "1290960"
  },
  {
    "text": "through the data protector and then i can take that encrypted data and put it in the cookie",
    "start": "1290960",
    "end": "1296640"
  },
  {
    "text": "well this is why your purpose this is because the reason that we need",
    "start": "1296640",
    "end": "1302559"
  },
  {
    "text": "to specify purpose is that we should not be able to take something that was generated by the data potential for one",
    "start": "1302559",
    "end": "1308480"
  },
  {
    "text": "purpose and abused it for a different purpose",
    "start": "1308480",
    "end": "1312799"
  },
  {
    "text": "one thing to mention also with data protection is that when we are running",
    "start": "1316720",
    "end": "1322000"
  },
  {
    "text": "in a modern environment which is load balanced we need to make sure that the data",
    "start": "1322000",
    "end": "1327440"
  },
  {
    "text": "protection keys are handled in a way if we're on multiple",
    "start": "1327440",
    "end": "1332559"
  },
  {
    "text": "servers that they share the same data protection keys and app identifiers otherwise they will not be able to",
    "start": "1332559",
    "end": "1338720"
  },
  {
    "text": "recognize cookies if a cookie is issued by one node in the cluster and the subsequent request is",
    "start": "1338720",
    "end": "1345360"
  },
  {
    "text": "processed by another node in the cluster they must be a matching keys if you are running on azure",
    "start": "1345360",
    "end": "1351840"
  },
  {
    "text": "azure web apps just handles this out of the box but with aws for example there's",
    "start": "1351840",
    "end": "1357200"
  },
  {
    "text": "some configuration you need to do to ensure the data protection works across the nodes in the cluster",
    "start": "1357200",
    "end": "1364960"
  },
  {
    "text": "let's move on to number four xml external entities",
    "start": "1367760",
    "end": "1372960"
  },
  {
    "start": "1369000",
    "end": "1369000"
  },
  {
    "text": "you remember xml that's the old version of json where we had angle brackets",
    "start": "1373360",
    "end": "1378720"
  },
  {
    "text": "and where we could do all weird kind of stuff with dtds etc",
    "start": "1378720",
    "end": "1384399"
  },
  {
    "text": "uh so so this is an interesting example of where xml is powerful but a",
    "start": "1384559",
    "end": "1392720"
  },
  {
    "text": "bit too powerful what this does is to say that we do this",
    "start": "1392720",
    "end": "1399600"
  },
  {
    "text": "is a dangerous document with the dtd",
    "start": "1399600",
    "end": "1404320"
  },
  {
    "text": "it actually resolves this to uh when it resolves uh",
    "start": "1404640",
    "end": "1412080"
  },
  {
    "text": "this entity it will actually call out to somewhere else",
    "start": "1412080",
    "end": "1417280"
  },
  {
    "text": "and it will do that uh at that point i can return another",
    "start": "1417280",
    "end": "1422400"
  },
  {
    "text": "entity which contains some stuff and in the end",
    "start": "1422400",
    "end": "1427440"
  },
  {
    "text": "i could cause the exit just loading an xml document to actually submit the etc password wd",
    "start": "1427440",
    "end": "1436559"
  },
  {
    "text": "file to the remote attacker so consider if i just upload or send in a simple xml",
    "start": "1436559",
    "end": "1442799"
  },
  {
    "text": "file to an api if they have have external entity processing enabled",
    "start": "1442799",
    "end": "1449279"
  },
  {
    "text": "i could actually steal the password database of that system or use a database of the system",
    "start": "1449279",
    "end": "1456799"
  },
  {
    "text": "so what need to be done when running an asp.net core to protect against this kind of attacks",
    "start": "1456799",
    "end": "1462720"
  },
  {
    "text": "well once more section is attention and left blank because this these behaviors",
    "start": "1462720",
    "end": "1468640"
  },
  {
    "text": "are disabled by default in a bit of net core",
    "start": "1468640",
    "end": "1473840"
  },
  {
    "text": "number five on the list broken access control",
    "start": "1476559",
    "end": "1481039"
  },
  {
    "start": "1477000",
    "end": "1477000"
  },
  {
    "text": "this is also relates to direct object reference which is another item on the list i was",
    "start": "1483120",
    "end": "1489120"
  },
  {
    "text": "blisp so what if i click this link it probably says shopping.com order and",
    "start": "1489120",
    "end": "1495279"
  },
  {
    "text": "then an id if i just modify that url",
    "start": "1495279",
    "end": "1501200"
  },
  {
    "text": "enter 47 is that link properly protected it's not",
    "start": "1501200",
    "end": "1506480"
  },
  {
    "text": "uncommon to see that people are showing that you're just shown the list of your own orders",
    "start": "1506480",
    "end": "1512840"
  },
  {
    "text": "but they forgot to protect the actual end point",
    "start": "1512840",
    "end": "1518799"
  },
  {
    "text": "um and this is an area where i think asp.net core is is so much better than",
    "start": "1520159",
    "end": "1525200"
  },
  {
    "text": "previous versions of asp.net because previous versions of asp.net they had the authorized attribute anyone has been",
    "start": "1525200",
    "end": "1532080"
  },
  {
    "text": "using that yeah and you could also do roles",
    "start": "1532080",
    "end": "1541039"
  },
  {
    "text": "the problem with this is that if it is a customer that is only allowed to view their own orders",
    "start": "1541760",
    "end": "1549440"
  },
  {
    "text": "this doesn't help authorized with roles was under the assumption that either you're allowed to",
    "start": "1550320",
    "end": "1556000"
  },
  {
    "text": "execute a method with any kind of parameters or you're not allowed to access the method at all",
    "start": "1556000",
    "end": "1563278"
  },
  {
    "text": "with asp.net core we do have more powerful policies that we should use and why that well",
    "start": "1563360",
    "end": "1570080"
  },
  {
    "text": "because you do define the policy somewhere else and now we do not have the",
    "start": "1570080",
    "end": "1575840"
  },
  {
    "text": "knowledge that there is a role or claim um or type role that has the value admin",
    "start": "1575840",
    "end": "1582559"
  },
  {
    "text": "we centralize that knowledge to one place in the application and we can do a lot more things than",
    "start": "1582559",
    "end": "1589360"
  },
  {
    "text": "just evaluate on the role we can actually here we can actually run",
    "start": "1589360",
    "end": "1595520"
  },
  {
    "text": "any kind of curves there and implement any kind of complex access rules",
    "start": "1595520",
    "end": "1602320"
  },
  {
    "text": "policies are really powerful this is a simple way to just inline define a policy but there is a more",
    "start": "1603840",
    "end": "1609840"
  },
  {
    "text": "powerful way where we have policy that represents by requirements requirements",
    "start": "1609840",
    "end": "1616400"
  },
  {
    "start": "1610000",
    "end": "1610000"
  },
  {
    "text": "or objects carrying parameters and then we have handlers that verifies",
    "start": "1616400",
    "end": "1622400"
  },
  {
    "text": "requirements in this example we could have a generic minimum age handler",
    "start": "1622400",
    "end": "1629840"
  },
  {
    "text": "that can validate any age and the over 18 policy",
    "start": "1629840",
    "end": "1635120"
  },
  {
    "text": "puts in the requirement with a par meter of 18.",
    "start": "1635120",
    "end": "1641559"
  },
  {
    "text": "that looks a bit ridiculous let's take a more complex read journal medical records",
    "start": "1641840",
    "end": "1648720"
  },
  {
    "text": "we might have multiple requirements to read medical record one is that in sweden list there's a rule you need to",
    "start": "1648720",
    "end": "1654960"
  },
  {
    "text": "have a smart card login or strong authentication mechanisms to be able to read medical records that can",
    "start": "1654960",
    "end": "1660960"
  },
  {
    "text": "be done by a medical handler we can also put in another requirement",
    "start": "1660960",
    "end": "1666080"
  },
  {
    "text": "to say that you can only read medical records of someone where you have a patient relationship the doctor cannot",
    "start": "1666080",
    "end": "1672399"
  },
  {
    "text": "go in and read any medical record for anyone on the hospital they are just allowed to do that for their own",
    "start": "1672399",
    "end": "1678480"
  },
  {
    "text": "patients that can be handled by an app",
    "start": "1678480",
    "end": "1683919"
  },
  {
    "text": "a handler that checks the booking system to see if this doctor has",
    "start": "1683919",
    "end": "1689520"
  },
  {
    "text": "an appointment booked with that patient it could also be done by hand but we can",
    "start": "1689520",
    "end": "1696240"
  },
  {
    "text": "also have another handler that says is this doctor in the emergency room if this was someone coming in by ambulance",
    "start": "1696240",
    "end": "1703840"
  },
  {
    "text": "there's probably not an appointment because people did not plan to go have an accident and go in by ambulance",
    "start": "1703840",
    "end": "1711840"
  },
  {
    "text": "uh an advantage here is that the handlers are full-blown services registered with the di system so you can",
    "start": "1712640",
    "end": "1719200"
  },
  {
    "text": "access databases any service anything so it's really powerful",
    "start": "1719200",
    "end": "1726080"
  },
  {
    "text": "but is also quite complex so i would say that it's good to know that this story exists",
    "start": "1726080",
    "end": "1732240"
  },
  {
    "text": "and that there is a powerful authorization concept but if you can stick to the simple in-line policies do",
    "start": "1732240",
    "end": "1738960"
  },
  {
    "text": "that and move on to the more powerful systems when you need it",
    "start": "1738960",
    "end": "1745679"
  },
  {
    "text": "but this morse to authorization were not yet done they did a lot of improvements let's get back to our order here",
    "start": "1746559",
    "end": "1754799"
  },
  {
    "text": "that we said we couldn't handle that with a simple authorized attribute because we",
    "start": "1754799",
    "end": "1759919"
  },
  {
    "text": "we cannot we don't know if a customer is allowed to view order 42",
    "start": "1759919",
    "end": "1766159"
  },
  {
    "text": "right we cannot tell that right away we need to check the order and see if the current user is actually the customer to",
    "start": "1766159",
    "end": "1773200"
  },
  {
    "text": "that particular order right that's called resource-based authorization",
    "start": "1773200",
    "end": "1780799"
  },
  {
    "text": "so i can first load the order object from the database or storage wherever i have",
    "start": "1780799",
    "end": "1786799"
  },
  {
    "text": "it and then i can have a policy where i submit i submit the order retrieved from the",
    "start": "1786799",
    "end": "1794000"
  },
  {
    "text": "database let's see here laser pointer i include",
    "start": "1794000",
    "end": "1799279"
  },
  {
    "text": "the order as a parameter when evaluating the policy so what does the policy look like",
    "start": "1799279",
    "end": "1807200"
  },
  {
    "text": "well the policy is part of ad authorization in the services registration you would",
    "start": "1807200",
    "end": "1813360"
  },
  {
    "text": "obviously move this to a separate file if you have complex policies but let's just do it in line here we add a",
    "start": "1813360",
    "end": "1819840"
  },
  {
    "text": "policy show order the policy requires searching and this is my favorite",
    "start": "1819840",
    "end": "1825679"
  },
  {
    "text": "require researching means run this expression over here or this method over here and see if it returned",
    "start": "1825679",
    "end": "1832720"
  },
  {
    "text": "in short it returns true that's the escape hatch out of that horrible or not",
    "start": "1832720",
    "end": "1838240"
  },
  {
    "text": "horrible but that complex requirement handler thing you can just require a",
    "start": "1838240",
    "end": "1843360"
  },
  {
    "text": "searching so the policy here if a user is allowed to show an order is",
    "start": "1843360",
    "end": "1850480"
  },
  {
    "text": "that if the user is enrolled employee or",
    "start": "1850480",
    "end": "1856480"
  },
  {
    "text": "we the owner of the order is the current user",
    "start": "1857200",
    "end": "1862720"
  },
  {
    "text": "then we allow the user to view the order resource-based authorization",
    "start": "1863360",
    "end": "1870559"
  },
  {
    "text": "solves one of the problems another problem with authorization is the mismatch that sometimes happened do",
    "start": "1870559",
    "end": "1877679"
  },
  {
    "text": "you know when when you have that edit button visible you do a lot of changes and then you hit",
    "start": "1877679",
    "end": "1883360"
  },
  {
    "text": "save just to say access denied that is just awkward ux",
    "start": "1883360",
    "end": "1889519"
  },
  {
    "text": "to work around that we can inject the authorization service into views",
    "start": "1889519",
    "end": "1895519"
  },
  {
    "text": "and actually use the same policy this policy we're using when the order is saved",
    "start": "1895519",
    "end": "1902080"
  },
  {
    "text": "exactly the same policy can be used to decide whether to render the edit button or not",
    "start": "1902080",
    "end": "1908159"
  },
  {
    "text": "when doing mvc and this is something i really like that we can do it in",
    "start": "1908159",
    "end": "1914559"
  },
  {
    "text": "in one place",
    "start": "1914559",
    "end": "1917880"
  },
  {
    "text": "so the order to summarize on authorization uh we do have the authorized attribute",
    "start": "1921039",
    "end": "1927120"
  },
  {
    "text": "which is the very basic thing that just requires the user to be logged in",
    "start": "1927120",
    "end": "1932399"
  },
  {
    "text": "don't use roles use policies and we do have the policy requirement",
    "start": "1932399",
    "end": "1937840"
  },
  {
    "text": "handler set up that is powerful but often overkill",
    "start": "1937840",
    "end": "1943440"
  },
  {
    "text": "resource-based authorization which i think is a huge improvement that you can now",
    "start": "1943440",
    "end": "1950399"
  },
  {
    "text": "first load the resource in a controlled manner i mean i've seen all sort of strange things where",
    "start": "1950399",
    "end": "1957440"
  },
  {
    "text": "they mandated an application mandated that all urls",
    "start": "1957440",
    "end": "1962640"
  },
  {
    "text": "contains a specific parameter so they could have a handcrafted attribute that looks at that parameter",
    "start": "1962640",
    "end": "1969600"
  },
  {
    "text": "and it's just awkward this is so much more powerful and natural",
    "start": "1969600",
    "end": "1975360"
  },
  {
    "text": "we have used the view based authorization uh so",
    "start": "1975360",
    "end": "1981360"
  },
  {
    "text": "finally a powerful authorization framework question authorization in asp.net core",
    "start": "1981360",
    "end": "1990600"
  },
  {
    "text": "uh let's go back to where we're using it it's it's simply in in this method",
    "start": "1992559",
    "end": "2000000"
  },
  {
    "text": "uh is it me they're having sound on let's no i thought it was muted uh so uh",
    "start": "2000000",
    "end": "2007760"
  },
  {
    "text": "when we did sorry i just need to i thought i had mute um",
    "start": "2007760",
    "end": "2014799"
  },
  {
    "text": "this is just an exterior so that really here what you would have is that before you do load it from your normal",
    "start": "2015600",
    "end": "2022799"
  },
  {
    "text": "data store without doing any validation you receive from the database or anything and once you've retrieved it",
    "start": "2022799",
    "end": "2028960"
  },
  {
    "text": "you call this block of code so i simply omitted the resource loading",
    "start": "2028960",
    "end": "2035120"
  },
  {
    "text": "you have to have it in your code and you're moving the authorization from an attribute and into the actual body of",
    "start": "2036880",
    "end": "2042960"
  },
  {
    "text": "the controller or whatever method does it so it's an imperative",
    "start": "2042960",
    "end": "2049200"
  },
  {
    "text": "way to call the authorization service you have still have the attribute option if that",
    "start": "2049200",
    "end": "2055200"
  },
  {
    "text": "is enough which is often the more simple way but in some cases you need to do",
    "start": "2055200",
    "end": "2060320"
  },
  {
    "text": "some work and then check authorization by calling the authorization service directly",
    "start": "2060320",
    "end": "2067358"
  },
  {
    "text": "was there more questions okay let's move on",
    "start": "2070560",
    "end": "2075919"
  },
  {
    "text": "skimming through here and security misconfiguration",
    "start": "2075919",
    "end": "2081440"
  },
  {
    "start": "2078000",
    "end": "2078000"
  },
  {
    "text": "this is about adding services you know way back when things just added everything that you",
    "start": "2081440",
    "end": "2088320"
  },
  {
    "text": "could potentially need and you had even to go to the machine to config to see",
    "start": "2088320",
    "end": "2093358"
  },
  {
    "text": "hidden http modules that were all preloaded into any application running on the system",
    "start": "2093359",
    "end": "2099040"
  },
  {
    "text": "those were the days and if one of those had an issue you had problems and you might even not",
    "start": "2099040",
    "end": "2104880"
  },
  {
    "text": "be aware that it was in the material config asp.net core takes the",
    "start": "2104880",
    "end": "2111040"
  },
  {
    "text": "uh another approach it just does whatever you map into the pipeline",
    "start": "2111040",
    "end": "2118240"
  },
  {
    "text": "if you're not adding new static files it won't even serve static files from anywhere on",
    "start": "2118240",
    "end": "2125040"
  },
  {
    "text": "the file system if you want to use identity you need to add it and this opt-in method really",
    "start": "2125040",
    "end": "2132079"
  },
  {
    "text": "guards against security misconfiguration",
    "start": "2132079",
    "end": "2136800"
  },
  {
    "text": "number seven on the list cross-site scripting",
    "start": "2139920",
    "end": "2145640"
  },
  {
    "start": "2140000",
    "end": "2140000"
  },
  {
    "text": "what is it consider we have a simple rating form if i leave a comment",
    "start": "2145680",
    "end": "2151920"
  },
  {
    "text": "three does anyone ever leave in three stars in rating form have you seen that",
    "start": "2151920",
    "end": "2157760"
  },
  {
    "text": "people leave one this is this is crap or five this is brilliant they never leave a number",
    "start": "2157760",
    "end": "2163760"
  },
  {
    "text": "three um but i would do works but nothing fancy",
    "start": "2163760",
    "end": "2169920"
  },
  {
    "text": "because what i do want to put in there here is a script",
    "start": "2169920",
    "end": "2174960"
  },
  {
    "text": "evil.comcookie.js script tag because i want this review comment to be published on the site for",
    "start": "2174960",
    "end": "2183040"
  },
  {
    "text": "subsequent visitors to the site and then my hope is that",
    "start": "2183040",
    "end": "2188240"
  },
  {
    "text": "it will actually render the script tag as a tag",
    "start": "2188240",
    "end": "2192960"
  },
  {
    "text": "and mainly traditionally to guard against cross-site",
    "start": "2193280",
    "end": "2198839"
  },
  {
    "text": "scripting there was really a burden on the developer remember to always html escape all",
    "start": "2198839",
    "end": "2206000"
  },
  {
    "text": "content you put out if you forgot that in one single place in your application",
    "start": "2206000",
    "end": "2211280"
  },
  {
    "text": "you could have cross-eyed scripting vulnerabilities what about asp.net core let's see",
    "start": "2211280",
    "end": "2218320"
  },
  {
    "text": "let's just put out a simple script as a string",
    "start": "2218320",
    "end": "2224079"
  },
  {
    "text": "in a razor what will it do well it will actually display this",
    "start": "2224079",
    "end": "2230079"
  },
  {
    "text": "because razer html escapes it escapes anything by default",
    "start": "2230079",
    "end": "2236079"
  },
  {
    "text": "if you actually want to prove that pre-formatted html you need to tell a razer that this is indeed already",
    "start": "2236079",
    "end": "2244320"
  },
  {
    "text": "an html string please do not escape it and it's once more",
    "start": "2244320",
    "end": "2249520"
  },
  {
    "text": "secure by default if we forget this gate if we forget about it what would happen is that our",
    "start": "2249520",
    "end": "2256240"
  },
  {
    "text": "html will be escaped and the tags visible to the user and that is something you find",
    "start": "2256240",
    "end": "2262480"
  },
  {
    "text": "in the tests or find just when you run it the first time but if you forgot",
    "start": "2262480",
    "end": "2268960"
  },
  {
    "text": "html escape it where you should have done it then it can pass through the tests",
    "start": "2268960",
    "end": "2277040"
  },
  {
    "text": "yep",
    "start": "2277280",
    "end": "2280280"
  },
  {
    "text": "the built-in functionalities is that either you run it through full escape and and",
    "start": "2293760",
    "end": "2299839"
  },
  {
    "text": "then then uh anything will be escaped and put out as is or that",
    "start": "2299839",
    "end": "2305280"
  },
  {
    "text": "you say that this is pre-formatted html string i want exactly this html string",
    "start": "2305280",
    "end": "2310880"
  },
  {
    "text": "to be put out",
    "start": "2310880",
    "end": "2313838"
  },
  {
    "text": "yeah because you should never really put out a html that came from user input",
    "start": "2317680",
    "end": "2326359"
  },
  {
    "text": "not that i'm aware of for example if you if you allow them to people to enter",
    "start": "2333680",
    "end": "2339920"
  },
  {
    "text": "html that could be published no nothing built in that i'm aware of",
    "start": "2339920",
    "end": "2347440"
  },
  {
    "text": "so let's move to number eight on the list insecurity serialization",
    "start": "2349440",
    "end": "2355400"
  },
  {
    "start": "2350000",
    "end": "2350000"
  },
  {
    "text": "so what is that well consider there is a class in the dot net framework that",
    "start": "2359920",
    "end": "2367599"
  },
  {
    "text": "uh is called temp file collection what temp file collection does the idea",
    "start": "2367599",
    "end": "2373200"
  },
  {
    "text": "with the temp file collection is that you create a number of um",
    "start": "2373200",
    "end": "2379680"
  },
  {
    "text": "you create now create a temp temporary files during some operation and you want",
    "start": "2379680",
    "end": "2385359"
  },
  {
    "text": "automatic cleanup so when the temp file collection object is destroyed it deletes all the files",
    "start": "2385359",
    "end": "2391920"
  },
  {
    "text": "it's kept track of that's handy right what if i can send in a json object",
    "start": "2391920",
    "end": "2400640"
  },
  {
    "text": "that gets deserialized into a temp file collection instance",
    "start": "2400640",
    "end": "2405760"
  },
  {
    "text": "and i send in that arbitrary file names that i know are critical to a windows system",
    "start": "2405760",
    "end": "2413599"
  },
  {
    "text": "then when that object is destroyed it would delete those files and here is something that is actually",
    "start": "2413599",
    "end": "2419760"
  },
  {
    "text": "one one way the only place in this presentation where i have this red box to be careful",
    "start": "2419760",
    "end": "2427280"
  },
  {
    "text": "and that is if you ever do using the json serializer if you ever",
    "start": "2427280",
    "end": "2432720"
  },
  {
    "text": "switch on type name handling all you are vulnerable never ever deserialize untrusted data",
    "start": "2432720",
    "end": "2440720"
  },
  {
    "text": "with allowing it to deserialize into any or",
    "start": "2440720",
    "end": "2446160"
  },
  {
    "text": "any class",
    "start": "2446160",
    "end": "2448799"
  },
  {
    "text": "so deserialization there are still dangers here and you need to keep track of if there's trusted",
    "start": "2451200",
    "end": "2458000"
  },
  {
    "text": "data or untrusted data when running it through decentralization",
    "start": "2458000",
    "end": "2463280"
  },
  {
    "text": "but for example the data protector if you serialize data and run it through the",
    "start": "2463280",
    "end": "2468480"
  },
  {
    "text": "data protector when you're unprotected you can be sure it's your data and it's secure to just deserialize it",
    "start": "2468480",
    "end": "2476400"
  },
  {
    "text": "and number nine uh on this version of evostrep10 using",
    "start": "2478720",
    "end": "2484960"
  },
  {
    "start": "2479000",
    "end": "2479000"
  },
  {
    "text": "components with known vulnerabilities who would do that",
    "start": "2484960",
    "end": "2490640"
  },
  {
    "text": "well of course we keep track of our components do we it was easier way",
    "start": "2491119",
    "end": "2496240"
  },
  {
    "text": "way back windows update saved us with the net framework",
    "start": "2496240",
    "end": "2501280"
  },
  {
    "text": "uh and it's still that if you're running the.net framework it's the responsibility of the windows",
    "start": "2501280",
    "end": "2507680"
  },
  {
    "text": "system administrator or to run it but it and also if you're relying on the",
    "start": "2507680",
    "end": "2512800"
  },
  {
    "text": "shard.net core or dotnet is nowadays named",
    "start": "2512800",
    "end": "2518160"
  },
  {
    "text": "it's also the system but for if we are packaging and this redistribution the the net",
    "start": "2518160",
    "end": "2526640"
  },
  {
    "text": "libraries with our application we are responsible for also updating that but the same with all other components",
    "start": "2526640",
    "end": "2533760"
  },
  {
    "text": "what about all those new get packages and this is something that",
    "start": "2533760",
    "end": "2540800"
  },
  {
    "text": "um i think that now we have tooling there was a talk previously today that i i couldn't attend about the",
    "start": "2540800",
    "end": "2548240"
  },
  {
    "text": "github how github helps and github warns you if you have code",
    "start": "2548240",
    "end": "2554400"
  },
  {
    "text": "that references and you get packages with known vulnerabilities but still you need to keep track of that you need to",
    "start": "2554400",
    "end": "2560160"
  },
  {
    "text": "update them um and this is really when when our",
    "start": "2560160",
    "end": "2565520"
  },
  {
    "text": "ecosystem is expanding with more components third-party components you need to have a strategy to",
    "start": "2565520",
    "end": "2572160"
  },
  {
    "text": "monitor all of them to see if there are security vulnerabilities and",
    "start": "2572160",
    "end": "2577440"
  },
  {
    "text": "update and redeploy if that happens",
    "start": "2577440",
    "end": "2581440"
  },
  {
    "text": "and this is really nothing that asp.net core as a development environment or web",
    "start": "2583760",
    "end": "2588800"
  },
  {
    "text": "framework can help with",
    "start": "2588800",
    "end": "2592599"
  },
  {
    "start": "2594000",
    "end": "2594000"
  },
  {
    "text": "number 10 finally instead of no not finally we i have a bonus uh",
    "start": "2594240",
    "end": "2599920"
  },
  {
    "text": "number 10 uh insufficient logging monitoring well i think the built-in logging abilities",
    "start": "2599920",
    "end": "2606720"
  },
  {
    "text": "of asp.net core is great we have an eye logger that can be",
    "start": "2606720",
    "end": "2612720"
  },
  {
    "text": "injected everywhere we have structured logging which means that tools like",
    "start": "2612720",
    "end": "2620640"
  },
  {
    "text": "application insights can help us search easier for parameters and known parameters and there are a lot of",
    "start": "2620640",
    "end": "2627200"
  },
  {
    "text": "good tooling out there just use it that was all on that version was it was",
    "start": "2627200",
    "end": "2634240"
  },
  {
    "text": "part 10 but there's one more that i think is so important i want to mention it and that's cross-site request forgery",
    "start": "2634240",
    "end": "2642880"
  },
  {
    "start": "2639000",
    "end": "2639000"
  },
  {
    "text": "you remember the cookies so uh to you",
    "start": "2642960",
    "end": "2649200"
  },
  {
    "text": "who are lucky to have a bunch of cookies for later i can tell you they are delicious",
    "start": "2649200",
    "end": "2654560"
  },
  {
    "text": "but i also want to warn you they are bad for your health in if you eat too many of them",
    "start": "2654560",
    "end": "2660560"
  },
  {
    "text": "when we talk about uh computer cookies or web cookies they are simple because they are auto",
    "start": "2660560",
    "end": "2666480"
  },
  {
    "text": "transmitted by they are bad because they are auto transmitted let me tell you a story about what",
    "start": "2666480",
    "end": "2673200"
  },
  {
    "text": "happened some years ago this is a 6-0",
    "start": "2673200",
    "end": "2678319"
  },
  {
    "text": "modem adsl mode and i had one it was very common there were a few hundred thousand i think sweden distributed by",
    "start": "2678319",
    "end": "2684960"
  },
  {
    "text": "one of the large operators it had a page where you could just all the dns settings and if you enter the",
    "start": "2684960",
    "end": "2691839"
  },
  {
    "text": "information there it would be sent to some action that's stored so one day in a",
    "start": "2691839",
    "end": "2697040"
  },
  {
    "text": "net online form i got a request from a security researcher saying hey do i know anyone that has one of these",
    "start": "2697040",
    "end": "2703280"
  },
  {
    "text": "modems and i said um yes i do and he said oh great please can go to",
    "start": "2703280",
    "end": "2710640"
  },
  {
    "text": "this link",
    "start": "2710640",
    "end": "2713119"
  },
  {
    "text": "no no no not at all suspicious so so okay um well i did",
    "start": "2715920",
    "end": "2723280"
  },
  {
    "text": "and i got a page of kittens the evil kittens",
    "start": "2723359",
    "end": "2728880"
  },
  {
    "text": "of course i the browser devtools what is it on this",
    "start": "2728880",
    "end": "2734240"
  },
  {
    "text": "well what happened was that there was an iframe hidden iframe on this page with a hidden form",
    "start": "2734240",
    "end": "2740480"
  },
  {
    "text": "that say the mimic the dns settings and",
    "start": "2740480",
    "end": "2746480"
  },
  {
    "text": "send that to the static ip address of my modem and it changed dns server so suddenly i",
    "start": "2746480",
    "end": "2753599"
  },
  {
    "text": "was not using the right in a service i was using dns servers all devices on my home network we're now using the dns",
    "start": "2753599",
    "end": "2760800"
  },
  {
    "text": "servers of the attacker just by me going to",
    "start": "2760800",
    "end": "2767200"
  },
  {
    "text": "a simple page viewing some cute kittens",
    "start": "2767200",
    "end": "2772800"
  },
  {
    "text": "the problem here is cross-site request forgery so the evil kittens were able to",
    "start": "2773359",
    "end": "2778640"
  },
  {
    "text": "post to the modem or rather the modem accepted",
    "start": "2778640",
    "end": "2784000"
  },
  {
    "text": "settings coming from the evil kittens they shouldn't to avoid this",
    "start": "2784000",
    "end": "2790480"
  },
  {
    "text": "anything that accepts posted data should remember to create a token containing a",
    "start": "2790480",
    "end": "2797040"
  },
  {
    "start": "2794000",
    "end": "2794000"
  },
  {
    "text": "random component preferably tied to the current users encrypt and sign it store",
    "start": "2797040",
    "end": "2802319"
  },
  {
    "text": "that token in a form field and store the same token in a cookie and when there is",
    "start": "2802319",
    "end": "2807839"
  },
  {
    "text": "a post back to your system verify that the tokens are actual equal",
    "start": "2807839",
    "end": "2814480"
  },
  {
    "text": "check the signature and decrypt them and validate it's still the same user signed on",
    "start": "2814480",
    "end": "2821838"
  },
  {
    "text": "and to do all of that in asp.net core call val remember add validate and",
    "start": "2822480",
    "end": "2828560"
  },
  {
    "text": "afford your token",
    "start": "2828560",
    "end": "2831839"
  },
  {
    "text": "and that is actually that the default in asp.net core is that",
    "start": "2834240",
    "end": "2840000"
  },
  {
    "text": "whenever you're using a form entry a form where the the",
    "start": "2840000",
    "end": "2845599"
  },
  {
    "text": "asp.something attributes the form tag helper kicks in and the",
    "start": "2845599",
    "end": "2852480"
  },
  {
    "text": "form tag helper ensures that the cookie is created if it doesn't exist and it ensures the hidden",
    "start": "2852480",
    "end": "2858000"
  },
  {
    "text": "form fill is generated so you actually kind of need to opt out of that behavior to not have the",
    "start": "2858000",
    "end": "2863920"
  },
  {
    "text": "request verification uh in hidden input field in a form jade",
    "start": "2863920",
    "end": "2869520"
  },
  {
    "text": "narrated by razer and then you add validate and afford your token on on the methods",
    "start": "2869520",
    "end": "2877200"
  },
  {
    "text": "or you can add it as a global filter then same site restrictions for cookies",
    "start": "2877200",
    "end": "2885119"
  },
  {
    "text": "helps a lot because if your cook session cookies are",
    "start": "2885119",
    "end": "2890480"
  },
  {
    "text": "with the same size strict that would have saved us from the evil kittens",
    "start": "2890480",
    "end": "2896400"
  },
  {
    "text": "on the other hand i usually think about that we have like 98 percent i think of",
    "start": "2896400",
    "end": "2901839"
  },
  {
    "text": "users now use browsers that are compatible with the modern cookie restrictions and",
    "start": "2901839",
    "end": "2908960"
  },
  {
    "text": "that are following the same site rules the problem is who are those two percent",
    "start": "2908960",
    "end": "2914880"
  },
  {
    "text": "that have legacy browsers are there security aware people are there are those typically people that",
    "start": "2914880",
    "end": "2922720"
  },
  {
    "text": "uh know how to see a phishing mail or something no",
    "start": "2922720",
    "end": "2928880"
  },
  {
    "text": "those two percent running the legacy browsers are typically people that are not that tech savvy and",
    "start": "2928880",
    "end": "2936079"
  },
  {
    "text": "they are typically running an older device that is unpatched so i think",
    "start": "2936079",
    "end": "2941280"
  },
  {
    "text": "that even though we have same side that is a great tool i think still think we",
    "start": "2941280",
    "end": "2947599"
  },
  {
    "text": "should for a few more years carry on having anti-forgery",
    "start": "2947599",
    "end": "2953040"
  },
  {
    "text": "validation or protection this is actually removed from our top 10 since a couple of revisions",
    "start": "2953040",
    "end": "2959920"
  },
  {
    "text": "because the it's not seen as a problem in the wild but that is thanks to what asp.net core",
    "start": "2959920",
    "end": "2968000"
  },
  {
    "text": "now the frameworks do to protect against this",
    "start": "2968000",
    "end": "2972079"
  },
  {
    "text": "so that was the bonus to summarize",
    "start": "2973040",
    "end": "2978240"
  },
  {
    "text": "aspen.net core is mostly secure by default we have the blame game sorry middleweb",
    "start": "2978240",
    "end": "2984960"
  },
  {
    "text": "pipeline that is good to just understand that it exists and how it relates to",
    "start": "2984960",
    "end": "2991680"
  },
  {
    "text": "authentication that authentication happens as part of the pipeline and typically i forgot to mention that",
    "start": "2991680",
    "end": "2998880"
  },
  {
    "text": "static files are served before authentication is checked",
    "start": "2998880",
    "end": "3004319"
  },
  {
    "text": "so the static files have no protection at all in a standard",
    "start": "3004319",
    "end": "3009920"
  },
  {
    "text": "setup and authorization with the policies",
    "start": "3009920",
    "end": "3016640"
  },
  {
    "text": "a brand new way more flexible and powerful authorization",
    "start": "3016640",
    "end": "3021839"
  },
  {
    "text": "framework data protection that is a key component behind the scenes",
    "start": "3021839",
    "end": "3027839"
  },
  {
    "text": "and it's something you might need to configure in a hosting environment",
    "start": "3027839",
    "end": "3034559"
  },
  {
    "text": "and afford your token cross-site request forgery well it's a built-in protection that is",
    "start": "3034559",
    "end": "3040960"
  },
  {
    "text": "really smart but you need to enable it and make sure it runs",
    "start": "3040960",
    "end": "3047200"
  },
  {
    "text": "so that's all i had for asp.net core meets it was top 10 and",
    "start": "3047280",
    "end": "3052839"
  },
  {
    "text": "my uh views on this is that i think asp.net core has a really great and",
    "start": "3052839",
    "end": "3059040"
  },
  {
    "text": "solid security foundation to tackle the uh most common uh scenarios",
    "start": "3059040",
    "end": "3067200"
  },
  {
    "text": "any more questions i can go back to the summer if you wanted to be here",
    "start": "3067200",
    "end": "3073200"
  },
  {
    "start": "3070000",
    "end": "3070000"
  },
  {
    "text": "yes there might be cases where it re falsely rejects data",
    "start": "3080839",
    "end": "3089280"
  },
  {
    "text": "uh very few but i've seen people for example running very high volume websites",
    "start": "3089280",
    "end": "3095119"
  },
  {
    "text": "and having data that is not sensitive",
    "start": "3095119",
    "end": "3100800"
  },
  {
    "text": "and uh they got rejections and they say we are losing customers over it",
    "start": "3100800",
    "end": "3107119"
  },
  {
    "text": "um there's also scenarios that if you",
    "start": "3107119",
    "end": "3113440"
  },
  {
    "text": "if you load a form and then for example you are get signed out when the form is still open your",
    "start": "3113520",
    "end": "3120240"
  },
  {
    "text": "session expires that then the middleware will reject it or handler",
    "start": "3120240",
    "end": "3125520"
  },
  {
    "text": "will reject it because it is tied to the current user and that is a in many ways a protection",
    "start": "3125520",
    "end": "3132960"
  },
  {
    "text": "so that if you hit save you see i'm logged in as anders and i hit save i should be sure",
    "start": "3132960",
    "end": "3139839"
  },
  {
    "text": "that i'm actually saving the data to my account and not yours account your account if you if you somehow have evil",
    "start": "3139839",
    "end": "3146400"
  },
  {
    "text": "kittens that i've watched that somehow tr used other vulnerabilities to",
    "start": "3146400",
    "end": "3151680"
  },
  {
    "text": "cause my session to get signed out from my account and signed into your account i don't want my sensitive database to be",
    "start": "3151680",
    "end": "3157760"
  },
  {
    "text": "saved to your account so there are some occasions where there might be drawbacks",
    "start": "3157760",
    "end": "3164079"
  },
  {
    "text": "but usually not",
    "start": "3164079",
    "end": "3167839"
  },
  {
    "text": "yes is there a way to",
    "start": "3169920",
    "end": "3174800"
  },
  {
    "text": "configure authentication before the static files or for specifics",
    "start": "3174960",
    "end": "3181359"
  },
  {
    "text": "yes absolutely uh it is depending on the order in the startup file where you have",
    "start": "3181359",
    "end": "3186800"
  },
  {
    "text": "this app dot use static files app.use authentication just put you use",
    "start": "3186800",
    "end": "3191920"
  },
  {
    "text": "authentication before static files then that will ensure that",
    "start": "3191920",
    "end": "3197119"
  },
  {
    "text": "you know who the user is but then you also need to configure the static file middleware to have some authorization",
    "start": "3197119",
    "end": "3204559"
  },
  {
    "text": "rules because by default the aesthetic file middleware",
    "start": "3204559",
    "end": "3209760"
  },
  {
    "text": "just serves as files to anyone uh i'm sure it can be done but i don't know how",
    "start": "3209760",
    "end": "3217480"
  },
  {
    "text": "you can so there's a lot",
    "start": "3228800",
    "end": "3233520"
  },
  {
    "text": "any more questions okay",
    "start": "3234559",
    "end": "3240559"
  },
  {
    "text": "i think that's it for and that wraps the first day of the conference and uh it's",
    "start": "3240559",
    "end": "3246240"
  },
  {
    "text": "over to the final session the party you for attending",
    "start": "3246240",
    "end": "3253160"
  }
]