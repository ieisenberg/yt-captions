[
  {
    "text": "all right i guess we'll get started then um since it's uh it's 7am my time that's about right",
    "start": "8559",
    "end": "14240"
  },
  {
    "text": "so hello everyone uh good morning good afternoon good evening wherever you're joining from um thanks for checking out the session",
    "start": "14240",
    "end": "20160"
  },
  {
    "text": "on working with the aws cloud development kit to define and manage cloud infrastructure um my name is steve",
    "start": "20160",
    "end": "26400"
  },
  {
    "text": "roberts i'm a developer advocate at aws where i specialize in dotnet and powershell and currently speaking to you",
    "start": "26400",
    "end": "32480"
  },
  {
    "text": "from a very dark seattle area about 7am so let's get started almost in the right",
    "start": "32480",
    "end": "40719"
  },
  {
    "text": "place there we go all right so today nice and simple um we're aiming to cover a basic intro to",
    "start": "40719",
    "end": "46960"
  },
  {
    "text": "just talking about what existing infrastructure as code techniques we've done before um in relation to aws primarily um",
    "start": "46960",
    "end": "54320"
  },
  {
    "text": "how we've used things then we're going to introduce the aws cdk or cloud development kit and explain",
    "start": "54320",
    "end": "59600"
  },
  {
    "text": "what it is what it does how you work with it and i'm going to head off into a couple of demos to show you how to work with the cdk the",
    "start": "59600",
    "end": "66560"
  },
  {
    "text": "first one to get you comfortable working with the command line tooling inside the cdk and then a slightly more involved example um to follow up using.net as our",
    "start": "66560",
    "end": "74000"
  },
  {
    "text": "technology stack um feel free to post any questions in the chat room and my colleague bill is",
    "start": "74000",
    "end": "79119"
  },
  {
    "text": "monitoring the chat um if we don't get to any questions or there's something more involved you'd like to talk about",
    "start": "79119",
    "end": "84320"
  },
  {
    "text": "visit us in the partner aws booth afterwards um and we'll follow up then",
    "start": "84320",
    "end": "90400"
  },
  {
    "text": "okay so declaring infrastructure what have we done before or up to now well many people have used",
    "start": "91439",
    "end": "98240"
  },
  {
    "text": "consoles for example the aws management console um the problem with web consoles",
    "start": "98240",
    "end": "104079"
  },
  {
    "text": "or apps for doing this is it's it's hard to repeat exactly um without writing things down or",
    "start": "104079",
    "end": "110159"
  },
  {
    "text": "standing over someone's shoulder showing click here enter this here and enter this particular piece of data to",
    "start": "110159",
    "end": "115680"
  },
  {
    "text": "replicate infrastructure um sometimes even both um it's great for learning your way around",
    "start": "115680",
    "end": "122560"
  },
  {
    "text": "but it's not hugely practical for real-world infrastructure setups where you're launching an untold amount of resource",
    "start": "122560",
    "end": "128800"
  },
  {
    "text": "in the cloud so not a great start what about a templated approach well as",
    "start": "128800",
    "end": "135520"
  },
  {
    "text": "a developer um i didn't code in json or yaml all day and jason and yaml are the two template",
    "start": "135520",
    "end": "140959"
  },
  {
    "text": "languages supported by cloud formation that's our infrastructure provisioning service i mean i don't know about you but i just",
    "start": "140959",
    "end": "146640"
  },
  {
    "text": "don't code in those all day and what i found was that context switching between jason and yaml",
    "start": "146640",
    "end": "152000"
  },
  {
    "text": "and the languages i was working in c-sharp powershell you know it was actually pretty draining it was almost as bad as you know colleagues",
    "start": "152000",
    "end": "158480"
  },
  {
    "text": "walking up during the day and saying hey this chat about xyz problem that i have or did you see the game last night on tv",
    "start": "158480",
    "end": "164400"
  },
  {
    "text": "you know it took a while to get back into that mental mindset when i was switching from the template language back to the code i was working on and",
    "start": "164400",
    "end": "170560"
  },
  {
    "text": "then back to the template the other and probably more serious problem with templates is that they have",
    "start": "170560",
    "end": "175599"
  },
  {
    "text": "minimal expressiveness so there's no looping for example let's say that i want to stand up just a",
    "start": "175599",
    "end": "180879"
  },
  {
    "text": "couple of vms i have to copy and paste um the the various infrastructure settings for those vms to",
    "start": "180879",
    "end": "187760"
  },
  {
    "text": "get those couple of resources or i need to resort to additional resources for example on aws i need to",
    "start": "187760",
    "end": "193120"
  },
  {
    "text": "launch an aws auto scaling group or ec2 vms even if i only want to couple because that's the more convenient way",
    "start": "193120",
    "end": "199200"
  },
  {
    "text": "of saying hey give me one two three four five vms etc the conditional support inside",
    "start": "199200",
    "end": "206080"
  },
  {
    "text": "templates is somewhat limited and awkward to express as well if i want to do",
    "start": "206080",
    "end": "211280"
  },
  {
    "text": "launch a particular resource if some condition is true or false you know the syntax is there",
    "start": "211280",
    "end": "217200"
  },
  {
    "text": "but it's not hugely approachable there are some expressions in there that allow me to build strings or compose",
    "start": "217200",
    "end": "223920"
  },
  {
    "text": "names of resources again it's awkward it's hard to recall and frankly every time i had to do it i had to go and resort to the docs to",
    "start": "223920",
    "end": "230000"
  },
  {
    "text": "remember how to do the various functions templates also have a limited",
    "start": "230000",
    "end": "235439"
  },
  {
    "text": "sharing capability now sure you can share the entire template but if i'm working with a particular component that",
    "start": "235439",
    "end": "241680"
  },
  {
    "text": "i just want to share just that component i'm back to copy and paste it um it's not great embedding any",
    "start": "241680",
    "end": "248400"
  },
  {
    "text": "scripting can be difficult in templates so when we launch an amazon ec2 virtual machine",
    "start": "248400",
    "end": "253439"
  },
  {
    "text": "we can specify what's called the user data script to configure that instance and i'm going to show you an example of that later on",
    "start": "253439",
    "end": "258959"
  },
  {
    "text": "trying to put that script um it can be powershell or bash script whatever you need inside a",
    "start": "258959",
    "end": "264400"
  },
  {
    "text": "template and then escaping all of the quotes the backslashes etc that can be really awkward and error-prone",
    "start": "264400",
    "end": "271440"
  },
  {
    "text": "and the final problem with templates that i found is it's somewhat inflexible if you need to reach out into your",
    "start": "271440",
    "end": "277280"
  },
  {
    "text": "existing environment do resource discovery for example reusing existing resources that you've launched previously inside",
    "start": "277280",
    "end": "283040"
  },
  {
    "text": "the cloud get those ids there are ways of doing it but it's it's a little bit cluedy",
    "start": "283040",
    "end": "289040"
  },
  {
    "text": "but that's not to say templates are bad right they are reasonably simple and straightforward and with modern editing environments you",
    "start": "289040",
    "end": "295520"
  },
  {
    "text": "know we get intelligent suggestions to help us as we're coding those templates so that's not to say they're all bad but",
    "start": "295520",
    "end": "301280"
  },
  {
    "text": "there are better ways and the third way that we've previously declared infrastructure is to code",
    "start": "301280",
    "end": "306320"
  },
  {
    "text": "against the low-level service apis now all aws services expose an api and we then multiple sdks",
    "start": "306320",
    "end": "312960"
  },
  {
    "text": "in different languages c-sharp java typescript whatever to help you work against those apis but",
    "start": "312960",
    "end": "320320"
  },
  {
    "text": "we're really down at the metal here um we need to understand sometimes complex apis and their relationships you",
    "start": "320320",
    "end": "326800"
  },
  {
    "text": "know um i can't call api a on resource b until apic on resource d is completed",
    "start": "326800",
    "end": "333120"
  },
  {
    "text": "that can be hard to express in code and sometimes you know i need to add in weight or status check loops",
    "start": "333120",
    "end": "339440"
  },
  {
    "text": "this is something where the template approach really has the wing because it will do all the waiting for resources to stabilize before",
    "start": "339440",
    "end": "345520"
  },
  {
    "text": "progressing to the next resource with code i don't have that i have to do it myself but you know hey i'm a developer so",
    "start": "345520",
    "end": "352479"
  },
  {
    "text": "working with service apis to spin up cloud resources is pretty cold as far as i'm concerned",
    "start": "352479",
    "end": "358000"
  },
  {
    "text": "so here's one example of a template approach this is a cloud formation template so here we're using the json format of a",
    "start": "358000",
    "end": "364960"
  },
  {
    "text": "template and here we're expressing our intent in a declarative manner like what i want not how to do it let's take",
    "start": "364960",
    "end": "371199"
  },
  {
    "text": "a closer look at some other templates that i have um that illustrate the the template",
    "start": "371199",
    "end": "376560"
  },
  {
    "text": "approach so here's one where it's launching an ec2 virtual machine um with what's called a weight",
    "start": "376560",
    "end": "381840"
  },
  {
    "text": "condition so it's waiting for the instance to stabilize because i want to run a script on it and you can see that at the top of the",
    "start": "381840",
    "end": "386880"
  },
  {
    "text": "template i have some parameterization i can pass in parameters to my template so i can do some customization",
    "start": "386880",
    "end": "392479"
  },
  {
    "text": "this is also how i can do reaching out into my environment to discover ids of other resources if",
    "start": "392479",
    "end": "398240"
  },
  {
    "text": "i've stored them in a key value store online such as systems manager's parameter store you'll",
    "start": "398240",
    "end": "405520"
  },
  {
    "text": "notice that i can set allowed values for particular parameters so i can restrict what people can enter",
    "start": "405520",
    "end": "411599"
  },
  {
    "text": "i'm scrolling a little bit further down this template has a lot of parameters on it then i have the definition of the",
    "start": "411599",
    "end": "417280"
  },
  {
    "text": "resources that i want here i'm declaring i want an ec2 instance or a virtual machine it has a certain number of properties",
    "start": "417280",
    "end": "423599"
  },
  {
    "text": "that i'm filling out you can see here has references to the",
    "start": "423599",
    "end": "428960"
  },
  {
    "text": "parameters again it's a simple syntax but it's a little bit more verbose than i",
    "start": "428960",
    "end": "434800"
  },
  {
    "text": "would like and here is an example of a user data script written inside a template",
    "start": "434800",
    "end": "441360"
  },
  {
    "text": "and you can see that it's just here's a one of the expressions join so this will join all these lines together",
    "start": "441360",
    "end": "447919"
  },
  {
    "text": "with no delimiter to form the eventual script and inside the script you can see that we're referencing",
    "start": "447919",
    "end": "453360"
  },
  {
    "text": "other resources inside the template again it's it's reasonably simple but it's it's",
    "start": "453360",
    "end": "458639"
  },
  {
    "text": "kind of hard on the first pass to get it correct without typos and typing mistakes here's",
    "start": "458639",
    "end": "464319"
  },
  {
    "text": "another example template this is from a net sample application we have that we've talked about at our own reinvent",
    "start": "464319",
    "end": "469919"
  },
  {
    "text": "conferences a few years ago called cloud mosaic and you can see that this is defining more resources for the stack",
    "start": "469919",
    "end": "476560"
  },
  {
    "text": "the provisioned infrastructure is called a database table table gallery sorry another table for",
    "start": "476560",
    "end": "484160"
  },
  {
    "text": "the tables and then this just goes on and on you see it's quite a lengthy template",
    "start": "484160",
    "end": "489680"
  },
  {
    "text": "if i just scroll very very quickly through this it took a lot of time to develop this template and get it accurate and correct",
    "start": "489680",
    "end": "497919"
  },
  {
    "text": "here's another example this time dropping down to the low level service api level so this is a powershell script",
    "start": "497919",
    "end": "503440"
  },
  {
    "text": "that launches an aws virtual private cloud so a private network um hosting ec2 virtual machines that are",
    "start": "503440",
    "end": "511520"
  },
  {
    "text": "going to run iis so windows web servers and again you can see i can parameterize my script it's",
    "start": "511520",
    "end": "516560"
  },
  {
    "text": "powershell so that's what you expect but this is using commandlets from the aws tools for powershell",
    "start": "516560",
    "end": "522080"
  },
  {
    "text": "to actually work with ec2 or work with aws service apis so here i'm getting all",
    "start": "522080",
    "end": "528000"
  },
  {
    "text": "all the availability zones inside a region that i can run gc2 instances into",
    "start": "528000",
    "end": "533040"
  },
  {
    "text": "i create a virtual private cloud i attach an internet gateway so that traffic can reach my",
    "start": "533040",
    "end": "538399"
  },
  {
    "text": "private cloud or my private network through the internet gateway and you'll notice that when i launch",
    "start": "538399",
    "end": "543839"
  },
  {
    "text": "create the gateway i then have to go and attach it to my vpc this is something the template approach does for me",
    "start": "543839",
    "end": "550480"
  },
  {
    "text": "i go through and add what are called public and private subnets so public subnets are reachable from the wider internet",
    "start": "550480",
    "end": "555920"
  },
  {
    "text": "private subnets are only reachable from inside the virtual private cloud and then add",
    "start": "555920",
    "end": "561040"
  },
  {
    "text": "on firewalls what we call security groups and you'll notice there's a lot of code in here",
    "start": "561040",
    "end": "566640"
  },
  {
    "text": "just to wire up these basic resources and you'll see where the cdk really adds value when we look at this example later on uh",
    "start": "566640",
    "end": "574399"
  },
  {
    "text": "in cdk4 so let's go back to slides and start looking at the cdk",
    "start": "574399",
    "end": "581040"
  },
  {
    "text": "and what it brings to the table and let's start with what is it so the cdk",
    "start": "581040",
    "end": "588000"
  },
  {
    "text": "um as it is on the site it's a multi-language software development framework for modeling cloud infrastructure",
    "start": "588000",
    "end": "593279"
  },
  {
    "text": "as reusable components um now that language can be typescript javascript java c-sharp or",
    "start": "593279",
    "end": "599760"
  },
  {
    "text": "python um it's an open source project so you'll find it on github and what it does it takes your",
    "start": "599760",
    "end": "606720"
  },
  {
    "text": "infrastructure definition written in code in this case an example here c sharp and turns it into a cloud",
    "start": "606720",
    "end": "612959"
  },
  {
    "text": "formation template behind the scenes which it then deploys out to cloud formation",
    "start": "612959",
    "end": "618399"
  },
  {
    "text": "and you can manage the stack as it's called um the infrastructure from the cdk command",
    "start": "618399",
    "end": "624160"
  },
  {
    "text": "line so here's another example of defining some infrastructure here we've got a",
    "start": "624160",
    "end": "630079"
  },
  {
    "text": "simple notification service topic that's going to subscribe to a queue and as messages come into the queue it's",
    "start": "630079",
    "end": "636480"
  },
  {
    "text": "going to fire off notifications and you can see that in this example we have some dependencies on namespaces",
    "start": "636480",
    "end": "641920"
  },
  {
    "text": "related to the aws services service resources we want to use these are just nuget packages inside our",
    "start": "641920",
    "end": "648160"
  },
  {
    "text": "we have a class derived from the cdk stack type this defines our unit of deployment",
    "start": "648160",
    "end": "654000"
  },
  {
    "text": "inside the class we have what are called constructs so sns simple topic stack has a cue",
    "start": "654000",
    "end": "659519"
  },
  {
    "text": "construct and a topic construct and notice how that when we're configuring them you know it's a natural flow in the code",
    "start": "659519",
    "end": "666320"
  },
  {
    "text": "there's no clumsy wire up syntax i just say hey add subscription to this object",
    "start": "666320",
    "end": "672800"
  },
  {
    "text": "we have available to us all of that power and expressiveness of the chosen language right now this simple example doesn't",
    "start": "672800",
    "end": "677920"
  },
  {
    "text": "show much um but you can imagine uh running queries inside real environments to say hey",
    "start": "677920",
    "end": "683440"
  },
  {
    "text": "if this resource exists do this else do this or um you know other expressive statements",
    "start": "683440",
    "end": "691519"
  },
  {
    "text": "as i mentioned the code is used to create a cloud formation template that then gets deployed by the cdk tooling now you don't need to pay any",
    "start": "691519",
    "end": "698160"
  },
  {
    "text": "attention to the template unless you really want to you can just continue to work with your",
    "start": "698160",
    "end": "703519"
  },
  {
    "text": "whatever language your chosen language is so i've seen a brief example there of a",
    "start": "703519",
    "end": "709200"
  },
  {
    "text": "stack type but let's see how this fits into the broader picture right so at the outermost level we have what's called a cdk application",
    "start": "709200",
    "end": "716160"
  },
  {
    "text": "and that's the code that the cdk tooling runs to emit or in cdk terms",
    "start": "716160",
    "end": "721200"
  },
  {
    "text": "synthesize a cloud information template that then was ultimately deployed within the app are one or more stack",
    "start": "721200",
    "end": "727519"
  },
  {
    "text": "definitions and as i mentioned stacks are the unit of deployment each stack defines one cloud formation",
    "start": "727519",
    "end": "734880"
  },
  {
    "text": "template and they're separately deployed that means that if you want to you can separate infrastructure concerns into",
    "start": "734880",
    "end": "740480"
  },
  {
    "text": "different stacks now i'm not going to do that in this particular session i'm going to stick with just having one stack inside my",
    "start": "740480",
    "end": "746399"
  },
  {
    "text": "my demos but you know it's certainly possible to have multiple stacks inside one app",
    "start": "746399",
    "end": "752639"
  },
  {
    "text": "within each stack we compose our infrastructure by using one or more constructs and constructs",
    "start": "752639",
    "end": "758480"
  },
  {
    "text": "mapped to cloud resources now they can map to low-level cloud formation resources",
    "start": "758480",
    "end": "763760"
  },
  {
    "text": "for example uh say just a virtual machine instance or they can be higher level opinionated",
    "start": "763760",
    "end": "770839"
  },
  {
    "text": "resources now opinionated resources or opinionated constructs they pre-supply certain reasonable or",
    "start": "770839",
    "end": "777040"
  },
  {
    "text": "common defaults for some of the resource properties you can also group resources and",
    "start": "777040",
    "end": "782560"
  },
  {
    "text": "constructs into an additional reusable construct so you can compose your own constructs let's say",
    "start": "782560",
    "end": "787839"
  },
  {
    "text": "for example that as a company you have certain requirements that virtual private clouds or virtual private networks",
    "start": "787839",
    "end": "793120"
  },
  {
    "text": "that you instantiate have to have certain configuration properties set by default you can build your own construct that",
    "start": "793120",
    "end": "799040"
  },
  {
    "text": "expresses that or maybe you you want the ppc configured with additional resources",
    "start": "799040",
    "end": "804079"
  },
  {
    "text": "you can certainly define all of that inside a construct and then easily share that within your company",
    "start": "804079",
    "end": "809360"
  },
  {
    "text": "or externally",
    "start": "809360",
    "end": "814480"
  },
  {
    "text": "so aws provides what's called a construct library that has mappings to various aws resources",
    "start": "814480",
    "end": "820240"
  },
  {
    "text": "and this has a number of levels so at level 1 or l1 these are the low level cloud formation resources they're called",
    "start": "820240",
    "end": "826000"
  },
  {
    "text": "cfn resources and you'll see in their names they begin with the cfn prefix now with these property with these",
    "start": "826000",
    "end": "831920"
  },
  {
    "text": "constructs you have to configure all the resource properties yourself these are not opinionated they are generated directly from the cloud formation",
    "start": "831920",
    "end": "838480"
  },
  {
    "text": "resource specification up the stack we have l2 constructs",
    "start": "838480",
    "end": "844240"
  },
  {
    "text": "there's a higher level intent based and these add the common defaults you that you might want to work with and",
    "start": "844240",
    "end": "849360"
  },
  {
    "text": "some useful methods so for example on an s3 a simple storage service bucket",
    "start": "849360",
    "end": "854560"
  },
  {
    "text": "you can add a life cycle rule using a convenient method you don't need to go drop down to any",
    "start": "854560",
    "end": "859920"
  },
  {
    "text": "low level properties to do that and l3 is what we call the pattern-based",
    "start": "859920",
    "end": "865440"
  },
  {
    "text": "resources these the highest level abstraction and these use composition to define additional tor to include",
    "start": "865440",
    "end": "871440"
  },
  {
    "text": "additional constructs usually with multiple coordinating resources that make it really convenient to stand",
    "start": "871440",
    "end": "877680"
  },
  {
    "text": "up entire levels of infrastructure with a single construct instantiation",
    "start": "877680",
    "end": "883199"
  },
  {
    "text": "some examples you might typically see in demos are the application load balance file gate service it's quite a lengthy",
    "start": "883199",
    "end": "888560"
  },
  {
    "text": "name but the resources that sets up is actually quite extensive or you might set up a serverless rest api with a lambda rest",
    "start": "888560",
    "end": "894880"
  },
  {
    "text": "api so that's a lambda function a service function fronted by an api hosted in the cloud as i mentioned you",
    "start": "894880",
    "end": "902160"
  },
  {
    "text": "can define your own reusable constructs you can build your own construct library inside your company or to share it publicly",
    "start": "902160",
    "end": "909600"
  },
  {
    "text": "so what's the big picture then how does this work together so we take our cdk application that's our",
    "start": "909600",
    "end": "914880"
  },
  {
    "text": "source and we run it through the cdk command line tooling which effectively acts like a compiler it emits the cloud",
    "start": "914880",
    "end": "922240"
  },
  {
    "text": "formation template or the assembly language if you like of the cloud on aws and then you can",
    "start": "922240",
    "end": "928000"
  },
  {
    "text": "deploy that template to cloud formation which is our runtime processor that then spins up the infrastructure",
    "start": "928000",
    "end": "934720"
  },
  {
    "text": "that's defined in the template now there's the synthesized step that's mentioned here that's something you can",
    "start": "934720",
    "end": "939759"
  },
  {
    "text": "also run if you want to go and take a look at the template before you deploy i also use that command or that mode of",
    "start": "939759",
    "end": "945600"
  },
  {
    "text": "the command to do like pre-deployed compilation checks does everything check out okay my code compiles but is the",
    "start": "945600",
    "end": "952399"
  },
  {
    "text": "are the dependencies all correct there's no cyclic dependence etc i can use synthesize to do that and then",
    "start": "952399",
    "end": "958160"
  },
  {
    "text": "you deploy as a separate step but there's no requirement for me to run synthesize i can just go straight from my source code to deploy to the cloud",
    "start": "958160",
    "end": "966959"
  },
  {
    "text": "so an overview of the main components of the cdk we have the core framework um which is what's hosting your application with its stacks and its",
    "start": "967279",
    "end": "973360"
  },
  {
    "text": "constructs the construct library um and then your own construct libraries",
    "start": "973360",
    "end": "979519"
  },
  {
    "text": "which are not shown on this this diagram and then the cdk cli now that's node based or npm based so that's for all languages",
    "start": "979519",
    "end": "986160"
  },
  {
    "text": "so even if i'm working with net or java or python i do need to have node installed",
    "start": "986160",
    "end": "991759"
  },
  {
    "text": "to install the cdk cli so let's dive into some examples to see",
    "start": "991759",
    "end": "997440"
  },
  {
    "text": "the cdk in action and um we're going to start with a simple one just to get us um comfortably the idea",
    "start": "997440",
    "end": "1005279"
  },
  {
    "text": "of using the cdks command line and what i'm going to do is i'm going to build a static website hosted in an",
    "start": "1005279",
    "end": "1010639"
  },
  {
    "text": "amazon s3 bucket a very very simple demo i realized that but it's a great one for just kicking the tizen and seeing how",
    "start": "1010639",
    "end": "1016880"
  },
  {
    "text": "things work so inside this command this folder i'm going to make myself a little",
    "start": "1016880",
    "end": "1022480"
  },
  {
    "text": "let's create hello world site it's early in the morning here seattle my fingers have not warmed up yet so bear with me",
    "start": "1022480",
    "end": "1028319"
  },
  {
    "text": "as i'm typing um i've already defined some static content for my site so i'm just going to",
    "start": "1028319",
    "end": "1033678"
  },
  {
    "text": "move that to where i am because i wanted to be alongside my code so",
    "start": "1033679",
    "end": "1039038"
  },
  {
    "text": "there's my site contents just the html page um but you know you could be much more than that okay so how do i get the cdk",
    "start": "1039039",
    "end": "1046959"
  },
  {
    "text": "well i mentioned it was mode based so install g aws cek we'll install the cdk command",
    "start": "1046959",
    "end": "1053520"
  },
  {
    "text": "line tools that you need i already have them installed i'm not going to run that but once i've done that then i have access to a cdk command line",
    "start": "1053520",
    "end": "1060880"
  },
  {
    "text": "tool and if i run that and just scroll up you'll see it has a number of options on",
    "start": "1060880",
    "end": "1066400"
  },
  {
    "text": "it um listens we'll come to those a minute but cdk init so i can get started with a",
    "start": "1066400",
    "end": "1072320"
  },
  {
    "text": "cdk init command and this is going to say okay there's a couple of templates that",
    "start": "1072320",
    "end": "1078320"
  },
  {
    "text": "you can have pre-generated for you i'm going to go with an empty construct but you'll notice that",
    "start": "1078320",
    "end": "1083679"
  },
  {
    "text": "there's a language switch so i'm going to choose a c-sharp",
    "start": "1083679",
    "end": "1089679"
  },
  {
    "text": "example oops i've got code in here and i just need to prematurely move side contents back",
    "start": "1089919",
    "end": "1097760"
  },
  {
    "text": "up again because you have to run this in okay hopefully this is empty okay cdk in",
    "start": "1097760",
    "end": "1104000"
  },
  {
    "text": "it let's just do that again okay okay so that's added",
    "start": "1104000",
    "end": "1109200"
  },
  {
    "text": "my cdk first sample so now let's just move side contents back into here all right",
    "start": "1109200",
    "end": "1116640"
  },
  {
    "text": "cool ready to go so i'm gonna launch visual studio code on this",
    "start": "1116640",
    "end": "1122559"
  },
  {
    "text": "and we'll take a look at the files that we generated so you'll see that there's a cdk.json",
    "start": "1122559",
    "end": "1128559"
  },
  {
    "text": "file and this defines you'll see there's an app entry here this defines the command to run so the ck will run this command to",
    "start": "1128559",
    "end": "1135679"
  },
  {
    "text": "generate the template yes you can do it for the dependencies for me",
    "start": "1135679",
    "end": "1141039"
  },
  {
    "text": "and there's some additional switches we'll see context in that in a later demo inside there is a source folder there's",
    "start": "1141039",
    "end": "1147919"
  },
  {
    "text": "a solution and inside there is a project folder and you can take a look at program there's this window here here is my top",
    "start": "1147919",
    "end": "1154480"
  },
  {
    "text": "level application so you'll see we instantiate an app a cdk app",
    "start": "1154480",
    "end": "1160640"
  },
  {
    "text": "and then we instantiate something called hello world site staff this is going to be our infrastructure stack",
    "start": "1160640",
    "end": "1165919"
  },
  {
    "text": "it takes the application as a parent and then the logical name and then you'll see just calls app.synth this is what",
    "start": "1165919",
    "end": "1170960"
  },
  {
    "text": "causes the template to be emitted inside my project there is just a",
    "start": "1170960",
    "end": "1177360"
  },
  {
    "text": "reference to the cdk core assembly and then in the stack itself you'll notice we",
    "start": "1177360",
    "end": "1182400"
  },
  {
    "text": "take a class and we derive it from the cdk stack class that all constructs in the cdk are",
    "start": "1182400",
    "end": "1188799"
  },
  {
    "text": "instantiated the same pattern they take a scope construct which is like the parent typically this is always",
    "start": "1188799",
    "end": "1194000"
  },
  {
    "text": "going to be the stack when you're defining inside the stack a logical id now this is not the name of",
    "start": "1194000",
    "end": "1199360"
  },
  {
    "text": "the resource this is just a logical id that you'll use to refer to it inside the code and then optionally a set of properties",
    "start": "1199360",
    "end": "1206159"
  },
  {
    "text": "that configure that particular resource so let's get started with defining a website uh",
    "start": "1206159",
    "end": "1212400"
  },
  {
    "text": "published in s3 now the first thing i'm going to want is an s3 storage bucket",
    "start": "1212400",
    "end": "1217679"
  },
  {
    "text": "so to work with s3 i'm just going to add a dependency on the s3",
    "start": "1217679",
    "end": "1224799"
  },
  {
    "text": "newbie package for the cdk and all of the net packages have the same name in format amazon.cdk.aws",
    "start": "1224799",
    "end": "1232799"
  },
  {
    "text": "dot in this case s3 version will be 186 or 187 zero now the new one",
    "start": "1232799",
    "end": "1239919"
  },
  {
    "text": "overnight i knew there'd be a new cdk version it ships quite frequently and i had a feeling there'd be a new version before",
    "start": "1239919",
    "end": "1245280"
  },
  {
    "text": "i even started today so that's fairly cool i'll update those later on",
    "start": "1245280",
    "end": "1251600"
  },
  {
    "text": "how's that window so let's go back to our site so i can start defining our resource so first thing i'm going to",
    "start": "1251600",
    "end": "1257679"
  },
  {
    "text": "want is a reference to the namespace amazon.com",
    "start": "1257679",
    "end": "1263280"
  },
  {
    "text": "s3 and now that i have that namespace i can create myself a storage bucket",
    "start": "1263280",
    "end": "1270960"
  },
  {
    "text": " it i mentioned the the common construction pattern so i'm going to pass in this which is the stack that's",
    "start": "1270960",
    "end": "1276960"
  },
  {
    "text": "the parent of the bucket um let's just call it my uh give an id",
    "start": "1276960",
    "end": "1282159"
  },
  {
    "text": "of my site click it will do and i can",
    "start": "1282159",
    "end": "1287440"
  },
  {
    "text": "book it option as optional properties but i'm going to specify a couple because i need to configure this bucket",
    "start": "1287440",
    "end": "1294000"
  },
  {
    "text": "as a static website so to do that",
    "start": "1294000",
    "end": "1300000"
  },
  {
    "text": "you'll notice that here are all the different properties on the resource itself many of which because",
    "start": "1300000",
    "end": "1305520"
  },
  {
    "text": "i'm using an l1 construct here it doesn't have the cfn previously named will have predefined default set for me",
    "start": "1305520",
    "end": "1311679"
  },
  {
    "text": "the two that i want are public read access to be true right no point having a website hosted",
    "start": "1311679",
    "end": "1318240"
  },
  {
    "text": "if people can't get to the content and then to configure an actual s3 storage bucket as a website",
    "start": "1318240",
    "end": "1324799"
  },
  {
    "text": "which needs an index document and my site content i'm going to deploy i'm going to call that",
    "start": "1324799",
    "end": "1330840"
  },
  {
    "text": "index.html and that's it for now that's going to create a resource so let's jump back to the",
    "start": "1330840",
    "end": "1336240"
  },
  {
    "text": "command line and see how i work with the particular stack that i have so",
    "start": "1336240",
    "end": "1342559"
  },
  {
    "text": "here so we're sitting in that top level cdk folder where i have the cdk json file that's the requirements for this",
    "start": "1343039",
    "end": "1349440"
  },
  {
    "text": "let's take another look at my commands that i have available to me",
    "start": "1349440",
    "end": "1355360"
  },
  {
    "text": "so we have which is usually using multiple stacks",
    "start": "1356799",
    "end": "1362640"
  },
  {
    "text": "inside an app synthesize which will print the cloud formation template uh bootstrap if you're going to be doing",
    "start": "1362640",
    "end": "1369120"
  },
  {
    "text": "deployments with the cdk you can also do deployments as well as standard infrastructure you need to bootstrap first so it has a",
    "start": "1369120",
    "end": "1375200"
  },
  {
    "text": "storage bucket where you can put resources i've already gone ahead and done that deploy is the one i'm going to use to deploy the stack and so on so let's take",
    "start": "1375200",
    "end": "1382720"
  },
  {
    "text": "a quick look at cdk synthesize",
    "start": "1382720",
    "end": "1389120"
  },
  {
    "text": "if i could type and spell that would be really helpful",
    "start": "1389120",
    "end": "1395760"
  },
  {
    "text": "so that will now compile that code run it and emit the cloud formation template",
    "start": "1399360",
    "end": "1404799"
  },
  {
    "text": "and you'll notice that you just scroll up here you can see that there's the actual contents of the template that's emitted",
    "start": "1404799",
    "end": "1410000"
  },
  {
    "text": "and this is stored on disk so if we take a quick look you'll see there's a now a cdk.org folder we'll take a look",
    "start": "1410000",
    "end": "1416640"
  },
  {
    "text": "at that in a moment actually let's go do it now let's go back into visual studio code why not why not so here's the cdkr file and",
    "start": "1416640",
    "end": "1424320"
  },
  {
    "text": "you'll notice there's a template.json and this is the generated template from",
    "start": "1424320",
    "end": "1429360"
  },
  {
    "text": "that code so a couple of lines of code has expanded to i don't know over 100 lines of template",
    "start": "1429360",
    "end": "1435120"
  },
  {
    "text": "that i would have to write myself or narrow all right we have our template everything's",
    "start": "1435120",
    "end": "1441279"
  },
  {
    "text": "looking good so let's go ahead and deploy and when i deploy i'm going to give it",
    "start": "1441279",
    "end": "1447440"
  },
  {
    "text": "my account or my credential profile to deploy with",
    "start": "1447440",
    "end": "1452559"
  },
  {
    "text": "and that will start to stand up the resources in the cloud in this case just an amazon s3 bucket now because i'm",
    "start": "1454799",
    "end": "1460400"
  },
  {
    "text": "opening up an s3 storage bucket um to people to have access to it",
    "start": "1460400",
    "end": "1465760"
  },
  {
    "text": "the cdk has detected there are permission changes needed and it's prompting me first before i",
    "start": "1465760",
    "end": "1471600"
  },
  {
    "text": "deploy are you sure about this people need to do get object to read yep i'm good so let's just go ahead",
    "start": "1471600",
    "end": "1479919"
  },
  {
    "text": "this will take a few seconds",
    "start": "1483440",
    "end": "1487840"
  },
  {
    "text": "so there's the bucket that i requested you'll see some type aws s3 bucket that's how you would express it in the cloud formation template",
    "start": "1494080",
    "end": "1501679"
  },
  {
    "text": "and you'll notice that i didn't give the bucket a name either there was a property in the property bucket called bucket name and that",
    "start": "1501679",
    "end": "1507120"
  },
  {
    "text": "allows me to give it a fixed name the thing with amazon s3 storage buckets is that the names are global have to be",
    "start": "1507120",
    "end": "1512960"
  },
  {
    "text": "globally unique so as this is an opinionated construct it will pre-supply a name if i don't",
    "start": "1512960",
    "end": "1518799"
  },
  {
    "text": "actually give it one um that makes working with book it's a lot more convenient okay the stack is stood up you'll see it",
    "start": "1518799",
    "end": "1525200"
  },
  {
    "text": "emits the the id of the stack now we actually have a storage bucket in fact if i use",
    "start": "1525200",
    "end": "1532000"
  },
  {
    "text": "a command line from the edges tools for powershell there is the bucket that just got created and you can see that it's named after my stack",
    "start": "1532000",
    "end": "1538640"
  },
  {
    "text": "and with some random characters on site to make it unique so we have a bucket but we don't yet have a website because",
    "start": "1538640",
    "end": "1544320"
  },
  {
    "text": "we haven't deployed any code so we need to fix that so going back to the project",
    "start": "1544320",
    "end": "1550400"
  },
  {
    "text": "and close off the template i mentioned earlier on that the cdk can also be used to do deployments",
    "start": "1550400",
    "end": "1556480"
  },
  {
    "text": "so it has some notion of assets",
    "start": "1556480",
    "end": "1561200"
  },
  {
    "text": "i'm going to add another reference here to a package and this is called amazon.ck.ews.s3",
    "start": "1561919",
    "end": "1571840"
  },
  {
    "text": "and this is typical um if you're doing as i'm doing here on a static website deployment",
    "start": "1573360",
    "end": "1578799"
  },
  {
    "text": "or it works with containers lambda surplus functions it will actually take the assets bundle",
    "start": "1578799",
    "end": "1585200"
  },
  {
    "text": "them up and then deploy them for you using different uh different libraries",
    "start": "1585200",
    "end": "1590640"
  },
  {
    "text": "okay so let's build so let's go and extend our stack a little bit further now and add in a deployment oh actually i",
    "start": "1590640",
    "end": "1597760"
  },
  {
    "text": "need to make a new space first before i do that",
    "start": "1597760",
    "end": "1601919"
  },
  {
    "text": "deployment okay so now i can create something called a bucket oops okay deployment and again",
    "start": "1605520",
    "end": "1613360"
  },
  {
    "text": "i pass in this for the construct the stack um site deployment we'll do",
    "start": "1613360",
    "end": "1620640"
  },
  {
    "text": "new one props",
    "start": "1621200",
    "end": "1627840"
  },
  {
    "text": "okay so what i'm going to want to do for this is i need to give it the",
    "start": "1627919",
    "end": "1632960"
  },
  {
    "text": "destination bucket and here i just reference the bucket",
    "start": "1632960",
    "end": "1638720"
  },
  {
    "text": "oops click it yeah so i don't have to take the name of the bucket don't take the id",
    "start": "1638840",
    "end": "1645120"
  },
  {
    "text": "i just referenced the construct that i just created and then i need to give it sources what",
    "start": "1645120",
    "end": "1650960"
  },
  {
    "text": "are called the sources of the the assets to deploy so in my particular case i'm",
    "start": "1650960",
    "end": "1658799"
  },
  {
    "text": "going to use something called source this is a cdk utility asset and i'm going to point it",
    "start": "1658799",
    "end": "1666159"
  },
  {
    "text": "at my site contents folder",
    "start": "1666159",
    "end": "1670240"
  },
  {
    "text": "intense okay i should do it",
    "start": "1672640",
    "end": "1678320"
  },
  {
    "text": "like that one yep that's fine okay this is",
    "start": "1679679",
    "end": "1687679"
  },
  {
    "text": "sauce i'm just checking against my nose because it's early morning and you know easy to make a mistake now the other",
    "start": "1687679",
    "end": "1694399"
  },
  {
    "text": "thing that would be really useful to know would be the url of the bucket website remember to stand up",
    "start": "1694399",
    "end": "1699760"
  },
  {
    "text": "so from stacks or cdk um stacks you can also emit data so",
    "start": "1699760",
    "end": "1706000"
  },
  {
    "text": "we have something called a cfn output now this is an l0 resource remember the cfn resources i talked",
    "start": "1706000",
    "end": "1712000"
  },
  {
    "text": "about so i'm going to attach an output from this and we're going to call it site url",
    "start": "1712000",
    "end": "1719679"
  },
  {
    "text": "cfn output props to configure what i actually want output and in this particular case i'm",
    "start": "1719919",
    "end": "1725600"
  },
  {
    "text": "just going to give you a value i can give it names as well i'm just going to book it dot",
    "start": "1725600",
    "end": "1731039"
  },
  {
    "text": "and it's called public website url okay finish that out it should be good",
    "start": "1731039",
    "end": "1737760"
  },
  {
    "text": "so we've added two extra resources now the bucket deployment which is going to do some additional work and then the cfn output parameters so",
    "start": "1737760",
    "end": "1744799"
  },
  {
    "text": "i'm going to get the url of the bucket that's been constructed but let's go back to the",
    "start": "1744799",
    "end": "1752960"
  },
  {
    "text": "command line here and one of the additional useful tools inside the cdk is you can diff",
    "start": "1752960",
    "end": "1758240"
  },
  {
    "text": "stacks so remember i deployed earlier on and i created a bucket oops sort of stuff i said whoops i knew i'd",
    "start": "1758240",
    "end": "1764960"
  },
  {
    "text": "done something wrong one second",
    "start": "1764960",
    "end": "1768559"
  },
  {
    "text": "dot sources equals",
    "start": "1770080",
    "end": "1781840"
  },
  {
    "text": "oh silly i've got extra bucket in there there we go that's more like it okay back to the",
    "start": "1785600",
    "end": "1792320"
  },
  {
    "text": "command line good let's pull that out okay so i was mentioning that i deployed the bucket",
    "start": "1792320",
    "end": "1797360"
  },
  {
    "text": "earlier on that was the single resource now i've added extra resources so let's go and take a look at",
    "start": "1797360",
    "end": "1802720"
  },
  {
    "text": "what the differences are using the diff command and this can be really useful if you have large stacks",
    "start": "1802720",
    "end": "1809200"
  },
  {
    "text": "and of course i need to give it my uh credentials otherwise it doesn't know what existing resources i have now this can be really useful if you",
    "start": "1809200",
    "end": "1815360"
  },
  {
    "text": "have large stacks lots of resources and you've made a small change maybe it's permission change who knows um you can diff and say you",
    "start": "1815360",
    "end": "1821919"
  },
  {
    "text": "know what am i actually going to get from this so you can see that i've added i only two things right the bucket",
    "start": "1821919",
    "end": "1828000"
  },
  {
    "text": "deployment and a cfn output but notice there's a whole bunch of additional uh fields in here is the tab",
    "start": "1828000",
    "end": "1836159"
  },
  {
    "text": "here's the bookie deployment um and so on the way the deployment works is it uses",
    "start": "1836159",
    "end": "1842080"
  },
  {
    "text": "the lambda function the background i'm not going to define that lambda function the cdk will define it for me part of its opinionated constructs so",
    "start": "1842080",
    "end": "1848880"
  },
  {
    "text": "let's deploy this and we'll see those extra resources get stood up",
    "start": "1848880",
    "end": "1864080"
  },
  {
    "text": "okay again we're making security changes in here because we've got the deployment as the lambda function which has permissions associated with it",
    "start": "1864080",
    "end": "1871600"
  },
  {
    "text": "the first thing you'll see is publishing with some random number that's actually taking that site contents it's bundled it up",
    "start": "1871600",
    "end": "1877919"
  },
  {
    "text": "and it's sent it up to a storage bucket ready to be deployed to the site now he's making additional change to the",
    "start": "1877919",
    "end": "1884000"
  },
  {
    "text": "stack itself to add a lambda function that's going to take those assets and deploy them",
    "start": "1884000",
    "end": "1890240"
  },
  {
    "text": "to the bucket me now this has been easy thing to do using additional scripting but it when",
    "start": "1890240",
    "end": "1896000"
  },
  {
    "text": "you're working with containers lambda functions etc this is a really convenient way of just working on the site i can just change",
    "start": "1896000",
    "end": "1902399"
  },
  {
    "text": "those site contents rebuild rerun the stack deploy cdk will take care of it for me",
    "start": "1902399",
    "end": "1909360"
  },
  {
    "text": "so you'll see there's some additional resources now we have a role so that's the role that the bucket deployment is going to run under what permissions that",
    "start": "1912640",
    "end": "1918799"
  },
  {
    "text": "bucket deployment has to access that bucket a lambda serverless function that's going to do the work for me",
    "start": "1918799",
    "end": "1926158"
  },
  {
    "text": "which is a version layer a policy that's it actually defines the",
    "start": "1926880",
    "end": "1934080"
  },
  {
    "text": "permissions that are going to be used to do the deployment",
    "start": "1934080",
    "end": "1938480"
  },
  {
    "text": "in fact while that stands up let's go and take a look at the resources so i'm going to jump to the management console here jump to the identity access",
    "start": "1940000",
    "end": "1947120"
  },
  {
    "text": "management tab while that finishes and if i go into roles",
    "start": "1947120",
    "end": "1953760"
  },
  {
    "text": "and scroll through all my roles i should find the one for hello world site there it is custom cdk deployment",
    "start": "1953760",
    "end": "1960320"
  },
  {
    "text": "you'll see that it says the lambda basic execution role so that lambda can actually run and then it has",
    "start": "1960320",
    "end": "1965519"
  },
  {
    "text": "this custom policy attached to it if we look at the custom policy you'll see that it's allowed to access my",
    "start": "1965519",
    "end": "1972240"
  },
  {
    "text": "staging bucket to get those assets the deployed site contents and then put them into my storage bucket",
    "start": "1972240",
    "end": "1981200"
  },
  {
    "text": "that i created earlier on okay it should be almost done deployed",
    "start": "1981200",
    "end": "1988320"
  },
  {
    "text": "so the next thing we're waiting for is for that bucket url to be output and there it is",
    "start": "1988320",
    "end": "1993919"
  },
  {
    "text": "just in time to take a swallow of coffee all right so i'm going to take hold of this and hopefully this",
    "start": "1994000",
    "end": "1999279"
  },
  {
    "text": "will paste into one string",
    "start": "1999279",
    "end": "2003679"
  },
  {
    "text": "[Music]",
    "start": "2004430",
    "end": "2007640"
  },
  {
    "text": "go away",
    "start": "2011120",
    "end": "2019840"
  },
  {
    "text": "we should see the low world website static website",
    "start": "2023200",
    "end": "2028000"
  },
  {
    "text": "okay so that's my deployed site right that was fairly easy let's go back to the code and take another look at what i",
    "start": "2029200",
    "end": "2034320"
  },
  {
    "text": "did so i created the bucket adding a name adding a dependency on the s3",
    "start": "2034320",
    "end": "2040640"
  },
  {
    "text": "cdk assembly then i created a bucket deployment just to make things convenient pointed at my site contents",
    "start": "2040640",
    "end": "2047120"
  },
  {
    "text": "and then ask for the bucket your website url to be output from the end of the stack we're going to take a look at the code",
    "start": "2047120",
    "end": "2053839"
  },
  {
    "text": "or the template that was generated you'll see that now it's expanded quite",
    "start": "2053839",
    "end": "2058878"
  },
  {
    "text": "a lot right uh how many lines of code do we actually have inside here",
    "start": "2058879",
    "end": "2064000"
  },
  {
    "text": "so we've got 30 lines of code with spacing here we've got a quite extensive",
    "start": "2064000",
    "end": "2069200"
  },
  {
    "text": "template just building up doing my deployment for me",
    "start": "2069200",
    "end": "2074240"
  },
  {
    "text": "and here you can see some of these when i was talking about expression um inside templates earlier on you can",
    "start": "2074240",
    "end": "2079760"
  },
  {
    "text": "see how complex expressions can get in just joining and selecting and splitting",
    "start": "2079760",
    "end": "2085118"
  },
  {
    "text": "strings inside a template to get to the actual resources or the resource ids resource names you want to",
    "start": "2085119",
    "end": "2090560"
  },
  {
    "text": "use i mean this is stuff ignoring the the cdk is quite lengthy names",
    "start": "2090560",
    "end": "2095679"
  },
  {
    "text": "this is stuff i really don't want to write right i'd much rather write",
    "start": "2095679",
    "end": "2100839"
  },
  {
    "text": "this and then have it done for me so that was a cdk deployment there's one",
    "start": "2100839",
    "end": "2107599"
  },
  {
    "text": "other thing you might be curious about okay i've stood up that stack um how do i get rid of it well the cdk",
    "start": "2107599",
    "end": "2113119"
  },
  {
    "text": "has a destroy command and that will tear down the stack and all the resources for you",
    "start": "2113119",
    "end": "2120000"
  },
  {
    "text": "except the storage bucket now when i created the storage bucket um i could have optionally set an",
    "start": "2120000",
    "end": "2125920"
  },
  {
    "text": "additional property that said delete it when when the stack is torn down however s3",
    "start": "2125920",
    "end": "2132079"
  },
  {
    "text": "has a rule that buckets that contain content cannot be deleted",
    "start": "2132079",
    "end": "2138320"
  },
  {
    "text": "and that's a good thing i don't want to accidentally delete a production bucket um so this is not a bad thing it's a",
    "start": "2138320",
    "end": "2143760"
  },
  {
    "text": "good thing so the scdk will actually leave the bucket intact so i'm going to use a separate command to remove that",
    "start": "2143760",
    "end": "2149920"
  },
  {
    "text": "bucket um and do the full cleanup but this will tear down the remainder of the resources it tears",
    "start": "2149920",
    "end": "2155760"
  },
  {
    "text": "down the deployment assets the lambda function the roles etc and everything's gone",
    "start": "2155760",
    "end": "2162880"
  },
  {
    "text": "and now if i get my list of s3 buckets uh there was the bucket that was created",
    "start": "2162880",
    "end": "2168320"
  },
  {
    "text": "and this is a quick tip for any of you that work with the um",
    "start": "2168320",
    "end": "2173359"
  },
  {
    "text": "ages tools for powershell knowing that you cannot delete the bucket unless you do the content there's a handy switch on remove",
    "start": "2173359",
    "end": "2179920"
  },
  {
    "text": "s3 bucket that will do it all in for you in one hit so super useful",
    "start": "2179920",
    "end": "2187440"
  },
  {
    "text": "all right so let's move to the second example um and earlier on i showed you a",
    "start": "2187440",
    "end": "2193200"
  },
  {
    "text": "powershell script that stood up an ec2 uh a bunch of ec2 virtual machines in an",
    "start": "2193200",
    "end": "2198640"
  },
  {
    "text": "auto scaling group in a private network to host a windows ios web server fleet",
    "start": "2198640",
    "end": "2205119"
  },
  {
    "text": "so i've put that into a cdk um demo application in fact i've already gone ahead and deployed it this morning because it takes about 15 to 20 minutes",
    "start": "2205119",
    "end": "2212000"
  },
  {
    "text": "for all the resources to stabilize but i've taken it a little bit further so let's take a look at the code and",
    "start": "2212000",
    "end": "2218720"
  },
  {
    "text": "what i've done and again i've put this into one um one stack now this is this is an",
    "start": "2218720",
    "end": "2225359"
  },
  {
    "text": "example where in the real world you would probably have multiple stacks you'd have one for the ios web server fleet",
    "start": "2225359",
    "end": "2231760"
  },
  {
    "text": "you'd have one maybe for the ci cd pipeline that i'm going to set up and one for the deployment infrastructure i'm going to use code",
    "start": "2231760",
    "end": "2237440"
  },
  {
    "text": "deploy to lay my application down on the instances to keep things simple today i've got",
    "start": "2237440",
    "end": "2242880"
  },
  {
    "text": "everything inside one stack so here's my generated cdk application",
    "start": "2242880",
    "end": "2248000"
  },
  {
    "text": "and inside the program we have just a simple app that stands up single stack if i look at",
    "start": "2248000",
    "end": "2254560"
  },
  {
    "text": "the stack take a look at what i'm actually going to do with this so skipping past the entry here so the",
    "start": "2254560",
    "end": "2259599"
  },
  {
    "text": "first thing that i need is a new virtual private cloud a virtual network private network to host my web",
    "start": "2259599",
    "end": "2265040"
  },
  {
    "text": "server fleet and inside the region i'm going to have this fleet span two availability zones for redundancy",
    "start": "2265040",
    "end": "2272000"
  },
  {
    "text": "and inside each zone i'm gonna have two subnets a public subnet so traffic from",
    "start": "2272000",
    "end": "2277760"
  },
  {
    "text": "the internet can reach my net reach my application or reach my network and a private subnet",
    "start": "2277760",
    "end": "2282880"
  },
  {
    "text": "which is where my instances are going to reside so my web servers are not directly accessible from the internet this is a best",
    "start": "2282880",
    "end": "2288880"
  },
  {
    "text": "practice and you'll notice that i'm standing up the virtual private cloud here with this effectively a single command this is",
    "start": "2288880",
    "end": "2295440"
  },
  {
    "text": "another one of those higher level opinionated constructs remember when i showed you the um i think it was the clay the cloud",
    "start": "2295440",
    "end": "2302480"
  },
  {
    "text": "mosaic template earlier on when we started you know there were rooms and reams of template constructing a virtual private",
    "start": "2302480",
    "end": "2308480"
  },
  {
    "text": "cloud in the powershell example there were reams and reams of api calls to set up a private cloud",
    "start": "2308480",
    "end": "2314480"
  },
  {
    "text": "here it's just a simple vpc construct inside that vpc construct i'm going to",
    "start": "2314480",
    "end": "2319839"
  },
  {
    "text": "launch an auto scaling group so i'm going to ask for one instance to start a maximum of four",
    "start": "2319839",
    "end": "2326800"
  },
  {
    "text": "my instance type is going to be on the free tier ones and i'm going to start from",
    "start": "2326800",
    "end": "2334160"
  },
  {
    "text": "a base virtual machine image provided by aws this has pretty much nothing on it no custom software at all i'm going to install",
    "start": "2334160",
    "end": "2340800"
  },
  {
    "text": "everything that i need via a script as the instances start up now my instances are going to need some",
    "start": "2340800",
    "end": "2347839"
  },
  {
    "text": "roles they're going to need to have code deploy run on them or the code deploy agent run on them to lay down the bits sorry my mess keeps",
    "start": "2347839",
    "end": "2353440"
  },
  {
    "text": "popping over the tool tips and i want those instances to be able to get to my amazon s3 storage bucket where i'm going",
    "start": "2353440",
    "end": "2360000"
  },
  {
    "text": "to put my application bundle so i've added a couple of managed policies here to do that i could lock them down even further to the specific",
    "start": "2360000",
    "end": "2366160"
  },
  {
    "text": "bucket etc but i'm going to keep it simple today and i'm going to wait the auto scanning group is going to be",
    "start": "2366160",
    "end": "2372000"
  },
  {
    "text": "configured to wait for these resources to stabilize before it brings a new instance into the fleet",
    "start": "2372000",
    "end": "2378160"
  },
  {
    "text": "so i'm going to do that with the signal so here's my script to customize those vanilla ec2 virtual",
    "start": "2378160",
    "end": "2385119"
  },
  {
    "text": "machine images it's going to be a powershell script you can see i'm going to install iis i'm then going to install a tool called",
    "start": "2385119",
    "end": "2391119"
  },
  {
    "text": "chocolaty which is actually quite useful installing web deploy installing web deploy for an asp.net application can be a little bit",
    "start": "2391119",
    "end": "2397599"
  },
  {
    "text": "grungy if you try to get hold of the msi to do it so using chocolate is way",
    "start": "2397599",
    "end": "2402640"
  },
  {
    "text": "simpler then from an s3 storage bucket i'm going to download the code deploy agent which",
    "start": "2402640",
    "end": "2407760"
  },
  {
    "text": "i need running on the instance so that i can do deployments to it notice how much simpler and",
    "start": "2407760",
    "end": "2414240"
  },
  {
    "text": "cleaner that is than in the example i showed earlier on where we had the user data script in the template",
    "start": "2414240",
    "end": "2420079"
  },
  {
    "text": "all right then i'm going to add a signal and exit command here so when this script finishes an",
    "start": "2420079",
    "end": "2426560"
  },
  {
    "text": "extra command will be added to the end that says hey signal the scaling group that i'm stable and ready to go",
    "start": "2426560",
    "end": "2432240"
  },
  {
    "text": "the next thing i'm going to do because this is going to be a fleet of instances i need a load balancer so here i'm going to instantiate an",
    "start": "2432240",
    "end": "2437280"
  },
  {
    "text": "application load balancer and again very very simple construction high level opinionated construct constructs",
    "start": "2437280",
    "end": "2442880"
  },
  {
    "text": "that supply many of the default set it attaches to my virtual private network or it runs inside that",
    "start": "2442880",
    "end": "2448560"
  },
  {
    "text": "vpc and it has internet facing turned on so people can reach it from the public",
    "start": "2448560",
    "end": "2454560"
  },
  {
    "text": "internet the load balancer has a listener for port 80 and that's going to have a set of targets attached to it",
    "start": "2454560",
    "end": "2460640"
  },
  {
    "text": "that say hey anything traffic coming on port 80 forward it to my scaling group and that will automatically then reach",
    "start": "2460640",
    "end": "2466000"
  },
  {
    "text": "my instances and you can see i'm allowing port 80 from anywhere open access to port 80.",
    "start": "2466000",
    "end": "2472560"
  },
  {
    "text": "the next thing i need that that that finishes my fleet that's it right that entire powershell script that we looked at earlier on is encoded in",
    "start": "2472560",
    "end": "2479200"
  },
  {
    "text": "just those few lines of code next i need some deployment resources um so what i'm going to do is i'm going",
    "start": "2479200",
    "end": "2485680"
  },
  {
    "text": "to build web deploy sorry an asp.net sample application build it as a web deploy package",
    "start": "2485680",
    "end": "2492000"
  },
  {
    "text": "upload it to a storage bucket and have it deployed to the instances from there so i want to go and want to book a new",
    "start": "2492000",
    "end": "2499119"
  },
  {
    "text": "chief back a new s3 storage bucket then i'm going to set up a code deploy",
    "start": "2499119",
    "end": "2505359"
  },
  {
    "text": "application and you'll notice here that this looks a bit weird what's this node try get context",
    "start": "2505359",
    "end": "2511040"
  },
  {
    "text": "well this allows me to pass in values to the stack when i build it when i deploy it that customizes some of the names if i",
    "start": "2511040",
    "end": "2518319"
  },
  {
    "text": "look at cdk.json file here you'll notice that i have these additional context switches they're just",
    "start": "2518319",
    "end": "2524240"
  },
  {
    "text": "key value pairs at the end of the context so these pre-supply some defaults",
    "start": "2524240",
    "end": "2529920"
  },
  {
    "text": "now when i run cdk deploy i can give a dash c switch and override these values simply the key equals value",
    "start": "2529920",
    "end": "2536480"
  },
  {
    "text": "here i've pre put them into the context file itself sorry the context entries in the file",
    "start": "2536480",
    "end": "2542880"
  },
  {
    "text": "itself so here i'm going to get the name of the code to play application and deployment group that i want to have",
    "start": "2542880",
    "end": "2549200"
  },
  {
    "text": "specified from the context create a code deploy application then create a deployment group that is",
    "start": "2549200",
    "end": "2555760"
  },
  {
    "text": "targeting my auto scaling group so all the instances inside that scaling group will have the deployment performed",
    "start": "2555760",
    "end": "2561760"
  },
  {
    "text": "to them i can optionally have the agent installed the code deploy agent in this case i've already done it inspired user",
    "start": "2561760",
    "end": "2567599"
  },
  {
    "text": "data so i've turned that off and then again permissions role that allow code deploy to reach my instances",
    "start": "2567599",
    "end": "2575760"
  },
  {
    "text": "and then the final thing that i've set up is a deployment pipeline so rather than me have to go and",
    "start": "2575839",
    "end": "2581280"
  },
  {
    "text": "manually fire up a code deploy um i've taken advantage of the cdk's code pipeline actions",
    "start": "2581280",
    "end": "2587359"
  },
  {
    "text": "libraries or patent libraries to add a ci cd pipeline that is triggered by me",
    "start": "2587359",
    "end": "2592640"
  },
  {
    "text": "uploading new bundles new web deploy bundles to my s3 storage bucket for this",
    "start": "2592640",
    "end": "2598160"
  },
  {
    "text": "particular cdk stack so here i'm pointing at my deployment bucket where my bundle is going to go",
    "start": "2598160",
    "end": "2604960"
  },
  {
    "text": "and uh if i write a new object to that bucket i upload a new application bundle that's",
    "start": "2604960",
    "end": "2611280"
  },
  {
    "text": "going to fire an event that event is going to trigger the code pipeline to run",
    "start": "2611280",
    "end": "2617040"
  },
  {
    "text": "and then here's the code pipeline itself it triggers off the build upload that",
    "start": "2617040",
    "end": "2622720"
  },
  {
    "text": "will then trigger the next step which is to actually deploy that bundle using a code deploy server deploy action",
    "start": "2622720",
    "end": "2629839"
  },
  {
    "text": "this is a really convenient way of setting up ci cd pipelines using the code pipeline",
    "start": "2629839",
    "end": "2635680"
  },
  {
    "text": "service i could also add custom builds in here using code build if i wanted to go and build the bundle so i could take for example the source",
    "start": "2635680",
    "end": "2642240"
  },
  {
    "text": "code from github using a github action have it built and then deployed to the instances but here",
    "start": "2642240",
    "end": "2647599"
  },
  {
    "text": "i'm just gonna i've already pre pre-built the bundle i'm just gonna upload it to s3 so that really is my app and at the end i've got",
    "start": "2647599",
    "end": "2654480"
  },
  {
    "text": "some outputs that tell me uh some of the resources that i'm gonna want to use",
    "start": "2654480",
    "end": "2660079"
  },
  {
    "text": "so let's go and take a look at the actual deployed application let me",
    "start": "2660079",
    "end": "2666880"
  },
  {
    "text": "get back to my command line here so here is the output from here you can see here's my windows web server fleet",
    "start": "2666880",
    "end": "2672400"
  },
  {
    "text": "load balancer url so i'm going to copy that let's jump to the web browser",
    "start": "2672400",
    "end": "2679040"
  },
  {
    "text": "and if i paste that in there we should see iis home page cool now if i go to sample which is",
    "start": "2679119",
    "end": "2686079"
  },
  {
    "text": "where the application is going to be deployed that's the way i've configured it we should see a 404 right so the apk is not",
    "start": "2686079",
    "end": "2692560"
  },
  {
    "text": "yet deployed so what i'm going to do next is go and",
    "start": "2692560",
    "end": "2697599"
  },
  {
    "text": "look at this stack very briefly",
    "start": "2697599",
    "end": "2704880"
  },
  {
    "text": "and here's my web server fleet stack that i've deployed and if i go to resources here and scroll",
    "start": "2704880",
    "end": "2710160"
  },
  {
    "text": "through you'll see all the individual resources i've got created so there's my application deployment bucket",
    "start": "2710160",
    "end": "2716079"
  },
  {
    "text": "my fleet stack some roles define the permissions that the various resources in the stack",
    "start": "2716079",
    "end": "2722079"
  },
  {
    "text": "can can use aws has a very fine grain permissions mechanism uh it's possible to define a role that",
    "start": "2722079",
    "end": "2728640"
  },
  {
    "text": "has policies on it that permit access only to certain apis",
    "start": "2728640",
    "end": "2733680"
  },
  {
    "text": "on certain resources or that involves certain resources and we start from a position of nothing",
    "start": "2733680",
    "end": "2739599"
  },
  {
    "text": "is allowed so you build up the permissions that you need rather than take them away if you're not familiar with the way we",
    "start": "2739599",
    "end": "2745440"
  },
  {
    "text": "do things you can see that the security groups related to ec2 that's",
    "start": "2745440",
    "end": "2750720"
  },
  {
    "text": "the firewalls and so on and so forth so a whole bundle of resources that i got created",
    "start": "2750720",
    "end": "2757040"
  },
  {
    "text": "inside this stack so how am i going to deploy to this well i'm going to cheat a little bit actually let me go to",
    "start": "2757040",
    "end": "2764480"
  },
  {
    "text": "a pipeline before i do a deployment",
    "start": "2764480",
    "end": "2769520"
  },
  {
    "text": "here's my pipeline uh and this one failed because there's nothing to deploy hopefully let me just check the details",
    "start": "2773280",
    "end": "2779599"
  },
  {
    "text": "here that yeah that's fine because i've not yet uploaded anything that's cool i'm good with that other people might",
    "start": "2779599",
    "end": "2785200"
  },
  {
    "text": "not be but i'm good with it so let's jump back to visual shooter code and what i've done",
    "start": "2785200",
    "end": "2790880"
  },
  {
    "text": "is inside the readme here all these files are actually up on a github repo i've pre-written the",
    "start": "2790880",
    "end": "2797599"
  },
  {
    "text": "command that i need to do the upload so inside here is a sample app folder and inside",
    "start": "2797599",
    "end": "2805760"
  },
  {
    "text": "there is my pre-built web deploy bundle so i'm going to use again the commands from the tools for powershell",
    "start": "2805760",
    "end": "2811520"
  },
  {
    "text": "to actually deploy that bundle all i need is the bucket name that i need to upload",
    "start": "2811520",
    "end": "2816720"
  },
  {
    "text": "to now this is an example of where you might do something let's say",
    "start": "2816720",
    "end": "2822000"
  },
  {
    "text": "um i because this cicd pipeline isn't doing the build of the app which would be a normal way of doing things i'm",
    "start": "2822000",
    "end": "2827040"
  },
  {
    "text": "i'm kind of cheating and shortcuting a little bit here but it's a perfectly valid way to do things if for example you have an existing ci",
    "start": "2827040",
    "end": "2832880"
  },
  {
    "text": "cd setup and you just want that last mile to get to aws just build your",
    "start": "2832880",
    "end": "2838000"
  },
  {
    "text": "application put it into an s3 bucket and then use the simple ci cd pipeline to do the deployment",
    "start": "2838000",
    "end": "2845839"
  },
  {
    "text": "okay so i have my command there's my bucket it should upload",
    "start": "2847119",
    "end": "2854160"
  },
  {
    "text": "done okay and now if we access the pipeline go back to my pipelines",
    "start": "2854800",
    "end": "2862160"
  },
  {
    "text": "you should sign this pipeline is now in progress you see that the bundle upload is already triggered it detected that s3",
    "start": "2862160",
    "end": "2868880"
  },
  {
    "text": "upload of the new app now it's calling code deploy if we go and take a look at code deploy",
    "start": "2868880",
    "end": "2875440"
  },
  {
    "text": "we can see the deployment should be underway yeah if i scroll to the end",
    "start": "2875440",
    "end": "2880880"
  },
  {
    "text": "and go to events in fact it's already done it's finished here all the events on the instances as",
    "start": "2880880",
    "end": "2886319"
  },
  {
    "text": "it laid down those bits on the fleet so now if we go back to our app we should see and don't get excited",
    "start": "2886319",
    "end": "2891839"
  },
  {
    "text": "this is just a simple asp.net application generated from a visual studio template nothing else",
    "start": "2891839",
    "end": "2897040"
  },
  {
    "text": "um you'll see it's taking a little longer to start up as it call boots on the instance",
    "start": "2897040",
    "end": "2903838"
  },
  {
    "text": "and there's a simple app and you can see that serving it from an ec2 instance at the bottom here so a very simple ci",
    "start": "2904880",
    "end": "2911760"
  },
  {
    "text": "cd pipeline allied to a web server fleet inside a virtual private network",
    "start": "2911760",
    "end": "2918400"
  },
  {
    "text": "let's go back to the code to finish up and again i just want to review the code that we have here",
    "start": "2918400",
    "end": "2925440"
  },
  {
    "text": "here's my stack and remember that all the way to the top so we created the virtual private",
    "start": "2925440",
    "end": "2930480"
  },
  {
    "text": "network of the not scaling group with a fleet of ec2 virtual machines inside there",
    "start": "2930480",
    "end": "2935920"
  },
  {
    "text": "configured on the fly from stock images supplied by amazon i did a load balancer",
    "start": "2935920",
    "end": "2944160"
  },
  {
    "text": "then we added a deployment some deployment resources a bucket to put our application in our application bundle in",
    "start": "2944160",
    "end": "2949359"
  },
  {
    "text": "co-deploy resources to deploy those to the instances in the scaling group",
    "start": "2949359",
    "end": "2954400"
  },
  {
    "text": "and then a deployment pipeline using the code pipeline actions uh library inside",
    "start": "2954400",
    "end": "2960079"
  },
  {
    "text": "the cdk that just took care of the deployment once i uploaded the bundle so that came in at let's see around",
    "start": "2960079",
    "end": "2967839"
  },
  {
    "text": "all right ignoring spaces 230 odd lines of code",
    "start": "2967839",
    "end": "2973279"
  },
  {
    "text": "this is the template that was generated from that and this i think is a huge illustration of the time saver",
    "start": "2975520",
    "end": "2982319"
  },
  {
    "text": "the cdk brings to the table the time savings it brings to the table this template which is json",
    "start": "2982319",
    "end": "2989920"
  },
  {
    "text": "is over 2000 lines okay so that's 130 lines to 2 2000 lines",
    "start": "2989920",
    "end": "2998640"
  },
  {
    "text": "it saved me cdk is a huge time saver in my opinion um if you haven't tried it out yet i",
    "start": "2998640",
    "end": "3005760"
  },
  {
    "text": "really encourage you to go give it a check so that brings us to the end of the demos um",
    "start": "3005760",
    "end": "3013839"
  },
  {
    "text": "so quick recap um in which we have left so we took a quick look at the starter what have we done with iac or",
    "start": "3014000",
    "end": "3019760"
  },
  {
    "text": "infrastructure's code to date using declarative templates consoles scripting etc what works what",
    "start": "3019760",
    "end": "3024880"
  },
  {
    "text": "does not the problems that we have introduced the cdk um the concepts it has",
    "start": "3024880",
    "end": "3030000"
  },
  {
    "text": "the command line tools that it has we have net bindings for the cdk they're just a",
    "start": "3030000",
    "end": "3035040"
  },
  {
    "text": "collection of donets standard two zero nougat packages um with consistent naming you find them",
    "start": "3035040",
    "end": "3040240"
  },
  {
    "text": "on nougat you can build your own um and distribute those and a couple of examples the simple website hosts on s3 to get us",
    "start": "3040240",
    "end": "3046880"
  },
  {
    "text": "started with kicking the ties with the cdk command line using constructs in a stack how to structure the applications etc",
    "start": "3046880",
    "end": "3052880"
  },
  {
    "text": "and then slightly more involved demo the windows ias web server fleet",
    "start": "3052880",
    "end": "3058000"
  },
  {
    "text": "and having a ci cd pipeline set up for us a very simple one albeit but a very",
    "start": "3058000",
    "end": "3063359"
  },
  {
    "text": "useful one okay some useful resources all the session samples",
    "start": "3063359",
    "end": "3069440"
  },
  {
    "text": "that i use today and there's some more from other cdk talks i've done can be found at that github repo i will also upload the deck into a dex",
    "start": "3069440",
    "end": "3076720"
  },
  {
    "text": "folder uh later on cdk developer guide and cdk api reference",
    "start": "3076720",
    "end": "3082319"
  },
  {
    "text": "are your go-to resources for learning about the cdk in fact i have the api reference up",
    "start": "3082319",
    "end": "3089680"
  },
  {
    "text": "let me bring it up here so here's the cdkr reference you can see that all of the construct libraries",
    "start": "3089680",
    "end": "3096240"
  },
  {
    "text": "are defined in here so one of the ones we use today was auto scaling the different water scaling group it",
    "start": "3096240",
    "end": "3103280"
  },
  {
    "text": "gives you all the properties etc all the methods on those individual constructs that you need this is my",
    "start": "3103280",
    "end": "3108640"
  },
  {
    "text": "go-to resource for finding out uh what i need to set up",
    "start": "3108640",
    "end": "3114160"
  },
  {
    "text": "uh cdk itself as i mentioned earlier on is open source and you can find on github github.com",
    "start": "3114160",
    "end": "3119920"
  },
  {
    "text": "aws aws open cdk and there's also a samples repo",
    "start": "3119920",
    "end": "3125119"
  },
  {
    "text": "on github as well so with that thanks for coming along and",
    "start": "3125119",
    "end": "3131680"
  },
  {
    "text": "listening i hope you found that useful um and intriguing i feel like you want to go and check out the cdk um",
    "start": "3131680",
    "end": "3138319"
  },
  {
    "text": "invite you to follow me there and also um invite you to follow dotnet on aws we have the dot net on aws twitter",
    "start": "3138319",
    "end": "3144480"
  },
  {
    "text": "handle um that's where we make all our announcements um things that we find over interest",
    "start": "3144480",
    "end": "3150400"
  },
  {
    "text": "etc etc the usual twitter stuff you know how it goes okay so with that uh if there are any",
    "start": "3150400",
    "end": "3156880"
  },
  {
    "text": "questions i didn't see any in the chat window get entered so i'm guessing there are no questions",
    "start": "3156880",
    "end": "3162000"
  },
  {
    "text": "that brings me to the end of the presentation um again thanks for listening hope you found that useful",
    "start": "3162000",
    "end": "3168799"
  },
  {
    "text": "if there are any questions",
    "start": "3169440",
    "end": "3181119"
  }
]