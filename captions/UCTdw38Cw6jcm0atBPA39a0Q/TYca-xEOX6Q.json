[
  {
    "text": "well good morning everyone good morning good morning good morning this I'm so excited to be here's my first time at nd",
    "start": "10210",
    "end": "16460"
  },
  {
    "text": "C Sydney I am I'm really excited my first time in Sydney yes I know I was really afraid to come to Australia just",
    "start": "16460",
    "end": "22490"
  },
  {
    "text": "because of Australians but I'm you guys so far been pretty good alright enough",
    "start": "22490",
    "end": "28010"
  },
  {
    "text": "stupid jokes I've got a lot to get into today I'm going to talk about this thing",
    "start": "28010",
    "end": "33050"
  },
  {
    "text": "I've been building for the last six months I'm gonna skip the preamble of all the things of why I'm building it",
    "start": "33050",
    "end": "38600"
  },
  {
    "text": "whatever I'm gonna touch on some of the technology but basically what I want to do is I want to focus this talk on",
    "start": "38600",
    "end": "44480"
  },
  {
    "text": "nerding out and geeking out I mean it's kind of unstructured it's just gonna be me saying we'll look what I made however",
    "start": "44480",
    "end": "51620"
  },
  {
    "text": "it's not even a prototype it really is kind of just pre pre pre pre alpha if",
    "start": "51620",
    "end": "57680"
  },
  {
    "text": "you can say that I've been making stuff because I want to see what's possible I want to see what I can do with Postgres",
    "start": "57680",
    "end": "63079"
  },
  {
    "text": "I want to see what I can do with Express I want to see what I can do with view and I want to build this thing that I",
    "start": "63079",
    "end": "69110"
  },
  {
    "text": "really am struggling to define I named it Velzy but it's a front-end",
    "start": "69110",
    "end": "74420"
  },
  {
    "text": "application and I used to call it a CLI if your API which doesn't make any sense",
    "start": "74420",
    "end": "80360"
  },
  {
    "text": "at all my friend Damian Edwards who's here today too he said oh it's a back-end in a box that's my best",
    "start": "80360",
    "end": "86569"
  },
  {
    "text": "Australian accent I'm not gonna try it again I promise thank you okay your might never mind",
    "start": "86569",
    "end": "95530"
  },
  {
    "text": "otherwise it's also called a bucket of buzzwords because I've got a bunch of stuff in there so you're looking at the",
    "start": "95530",
    "end": "101179"
  },
  {
    "text": "screen right here and it's a view app and it's supposed to kind of just be a back-end for whatever front-end app",
    "start": "101179",
    "end": "107630"
  },
  {
    "text": "you're building and it's supposed to do well lots of fun things I try to say",
    "start": "107630",
    "end": "112819"
  },
  {
    "text": "it's kind of like firebase except it's Postgres if you've ever used firebase to anybody here use firebase yeah firebase",
    "start": "112819",
    "end": "119479"
  },
  {
    "text": "we love firebase firebase is awesome I've used firebase for years and I really like it I've used it for a lot of",
    "start": "119479",
    "end": "125270"
  },
  {
    "text": "things and I kind of miss it now that I work at Microsoft that's not funny one",
    "start": "125270",
    "end": "131420"
  },
  {
    "text": "of the things that I want I wanted to do is just a quick whirlwind tour of what this thing has and is and does and so because we're working with data we have",
    "start": "131420",
    "end": "137780"
  },
  {
    "text": "to have the obligatory data Explorer so you can see here's your records you can go click on them",
    "start": "137780",
    "end": "143010"
  },
  {
    "text": "you can edit them as you can see it's just a JSON document I'm storing JSON in Postgres that's not terribly exciting",
    "start": "143010",
    "end": "149370"
  },
  {
    "text": "yet it's got a full graph QL interface too so you can work graph QL you can work rest if you want to and then the",
    "start": "149370",
    "end": "157709"
  },
  {
    "text": "database as I mentioned is JSON B's is just pure Postgres there's nothing exciting or scary there because I",
    "start": "157709",
    "end": "164340"
  },
  {
    "text": "mentioned their real time real time already I have to give the obligatory real-time demo which is not working the",
    "start": "164340",
    "end": "175860"
  },
  {
    "text": "video is not playing ok that's not fun why isn't this going just because I have to click yeah what do they say here yeah",
    "start": "175860",
    "end": "188489"
  },
  {
    "text": "nah all right that sucks is it gonna go there it goes hey all right so right now",
    "start": "188489",
    "end": "197160"
  },
  {
    "text": "I don't have any tables in the database I'm using postman which is a really cool API tool I'm posting to the products",
    "start": "197160",
    "end": "203129"
  },
  {
    "text": "table which doesn't exist you guys know it's coming up next I showed this to Damien Edwards and he says let me guess",
    "start": "203129",
    "end": "208950"
  },
  {
    "text": "the UI is gonna update real time like exactly so that's kind of cool though so",
    "start": "208950",
    "end": "214709"
  },
  {
    "text": "the table is created on the fly and blah blah blah blah but here's the cool thing about it this is where we get to nerd",
    "start": "214709",
    "end": "220019"
  },
  {
    "text": "out and geek out a zoomed-in a little bit on what I just did and what is in the forefront here is navitat which is",
    "start": "220019",
    "end": "226290"
  },
  {
    "text": "just a database Explorer it's just looks right at Postgres I'm not going through any API or anything in the background is",
    "start": "226290",
    "end": "232919"
  },
  {
    "text": "the UI and so that time it worked here I'm gonna update the record and then if",
    "start": "232919",
    "end": "238260"
  },
  {
    "text": "I skip away of course this is a real time demo but that's just the database I'm not going through a server to get",
    "start": "238260",
    "end": "244500"
  },
  {
    "text": "that real time the database is doing that and I think that's pretty cool and I've never seen that done before with just pure Postgres that makes sense like",
    "start": "244500",
    "end": "252329"
  },
  {
    "text": "it's just like running an update query and having it bang out to bang out to a UI here's another thing that I think is",
    "start": "252329",
    "end": "258150"
  },
  {
    "text": "really neat now that we have a record we might want to search for the stuff",
    "start": "258150",
    "end": "263820"
  },
  {
    "text": "that's in the in the database you can just use a keyword and you can do full-text search over JSON documents you",
    "start": "263820",
    "end": "270870"
  },
  {
    "text": "can't do that in firebase which i think is pretty cool you can't do that with fana DB you can't do that with a bunch of other online",
    "start": "270870",
    "end": "276630"
  },
  {
    "text": "systems like what's the one I'm thinking of Cloudant you can hook them up to external services but I want it all",
    "start": "276630",
    "end": "282210"
  },
  {
    "text": "built in all right well as I mentioned I showed this to Damien Edwards and his reaction was pretty typical why why why",
    "start": "282210",
    "end": "289290"
  },
  {
    "text": "would you do this why Rob why Rob why Rob why this is my nightmare working with this guy I love Damien he's a",
    "start": "289290",
    "end": "294870"
  },
  {
    "text": "really good guy he tends to get right to it and my answer was typical me the cool thing this is my job this is what I do I",
    "start": "294870",
    "end": "301710"
  },
  {
    "text": "work at Microsoft I'm in the cloud advocate group and one of the fun things is that a lot of people think that all",
    "start": "301710",
    "end": "308130"
  },
  {
    "text": "we do is go around and talk on stage like I'm doing right now but we actually my part of the job I work in the",
    "start": "308130",
    "end": "314280"
  },
  {
    "text": "engineering group where we actually write code and try and speak to developers in terms of code and open-source projects and other things",
    "start": "314280",
    "end": "320700"
  },
  {
    "text": "like that so I am building this as a way to help developers do their jobs better",
    "start": "320700",
    "end": "325830"
  },
  {
    "text": "have more fun and then also as you see at the very end maybe work with Azure a little bit better and I'll show you that",
    "start": "325830",
    "end": "331200"
  },
  {
    "text": "at the very end so really why did I build this what did I why did I want to do this does anybody here used view or",
    "start": "331200",
    "end": "337590"
  },
  {
    "text": "any kind of than yeah you guys like the new kind of new up-and-coming front-end",
    "start": "337590",
    "end": "343650"
  },
  {
    "text": "frameworks well they all come with a CLI and that CLI is insanely powerful I was",
    "start": "343650",
    "end": "350400"
  },
  {
    "text": "blown away I think it was six months ago I climbed back into using view because normally what I would do is I just download the library or get a script tag",
    "start": "350400",
    "end": "356670"
  },
  {
    "text": "throw it on the page and start working stuff like okay let's make that thing explode or move around or whatever and",
    "start": "356670",
    "end": "362910"
  },
  {
    "text": "then a friend of mine burke holland was like 'hey you can do a lot more than just you know orchestrating you know",
    "start": "362910",
    "end": "369300"
  },
  {
    "text": "events on a page and he showed me the CLI and he showed me a bunch of other frameworks and I was like what comes",
    "start": "369300",
    "end": "374850"
  },
  {
    "text": "with its own server you've got plugins like if you want to make something look better work better have persistence",
    "start": "374850",
    "end": "380130"
  },
  {
    "text": "across the entire app it's crazy what these things can do and I was just absolutely blown away there's this other",
    "start": "380130",
    "end": "385320"
  },
  {
    "text": "framework called next which is a framework on top of view and it is kind of opinionated but it gives you all",
    "start": "385320",
    "end": "391260"
  },
  {
    "text": "kinds of things including server-side rendering which is weird it chunks out your JavaScript delays it makes it so",
    "start": "391260",
    "end": "398160"
  },
  {
    "text": "the front-end when it loads up doesn't take forever and so if you go to individual pages it just chunks out the",
    "start": "398160",
    "end": "404190"
  },
  {
    "text": "JavaScript sends it down it's amazing the experience is awesome because it's focused on the front-end",
    "start": "404190",
    "end": "410160"
  },
  {
    "text": "of the application that's what you user cares about so that's what the team is focused on is those requirements you build out the capabilities and then",
    "start": "410160",
    "end": "416880"
  },
  {
    "text": "later on you might hire a deaf person to come and build the back end for you but as you're building these things you",
    "start": "416880",
    "end": "423330"
  },
  {
    "text": "need to store data you need to somehow work with persistence so how do you do that well I learned this trick from the",
    "start": "423330",
    "end": "430290"
  },
  {
    "text": "view mastery folks that's to atom jar and Greg Pollock",
    "start": "430290",
    "end": "436680"
  },
  {
    "text": "who used to run code school and two of my very favorite people I'm so envious",
    "start": "436680",
    "end": "442290"
  },
  {
    "text": "of Greg because he's so good they created a site called V mastery comm which shows you all about view and it's",
    "start": "442290",
    "end": "447360"
  },
  {
    "text": "great and one of the tips he said is to use this thing called JSON server and what it does is it stares at a JSON file",
    "start": "447360",
    "end": "455160"
  },
  {
    "text": "and that JSON file has some keys and some data and whatever keys and data you have in that file it will just create a",
    "start": "455160",
    "end": "461340"
  },
  {
    "text": "REST API and store the data and so on so it just mocks out a back-end API that stores data in a file that works great",
    "start": "461340",
    "end": "468480"
  },
  {
    "text": "it's pretty cool to see this because it focuses your front-end developers or just developers now 100 cent on building",
    "start": "468480",
    "end": "476190"
  },
  {
    "text": "an application that's relevant to your client and they just don't worry about the back end because the back end doesn't matter some point it'll come",
    "start": "476190",
    "end": "481650"
  },
  {
    "text": "along there's also a real-time database that you can use at firebase right so",
    "start": "481650",
    "end": "487620"
  },
  {
    "text": "you can you can have something that's a little bit more orchestrated with a system that you might go live with so",
    "start": "487620",
    "end": "492750"
  },
  {
    "text": "this is firebase for those who haven't seen it as I mentioned it's real-time database they also have cloud firestore",
    "start": "492750",
    "end": "498030"
  },
  {
    "text": "which is a massively scalable key value store which is amazing firebase also has free hosting free",
    "start": "498030",
    "end": "505260"
  },
  {
    "text": "hosting for static pages so you can send your stuff up there there's secure file storage so if you want to deliver things",
    "start": "505260",
    "end": "510720"
  },
  {
    "text": "like I do like books and videos you can send stuff up to firebase service whoo",
    "start": "510720",
    "end": "515849"
  },
  {
    "text": "so you can have little functions in the sky they have user authentication and my god they have everything so this is what",
    "start": "515849",
    "end": "522990"
  },
  {
    "text": "I meant like this is what I was trying to make when I started I was trying to try to make something like firebase but",
    "start": "522990",
    "end": "529320"
  },
  {
    "text": "you might be asking well why don't you just use firebase why would you want to recreate what's already been made and",
    "start": "529320",
    "end": "535020"
  },
  {
    "text": "the answer is I have things that I want to do what about me where am I in this I",
    "start": "535020",
    "end": "540540"
  },
  {
    "text": "don't mind my data and my app living the sky on some service something they",
    "start": "540540",
    "end": "546390"
  },
  {
    "text": "distrust google why would I oh boy yeah Microsoft employee says he",
    "start": "546390",
    "end": "552360"
  },
  {
    "text": "distrust Google that's nice it's not what I said it is what I said anyway I",
    "start": "552360",
    "end": "558770"
  },
  {
    "text": "don't just I don't trust any service that's the truth I don't trust any service to hold my code and my data",
    "start": "558770",
    "end": "564500"
  },
  {
    "text": "because at the end of the day I want to own the entire experience so I have",
    "start": "564500",
    "end": "570960"
  },
  {
    "text": "built and maintained I'd say five or six apps for my own over the last ten years",
    "start": "570960",
    "end": "576510"
  },
  {
    "text": "or so and every time I've run into the same problem in the beginning I am focused on I need to get up get to",
    "start": "576510",
    "end": "582630"
  },
  {
    "text": "market get out get to market get out get to market and all that crap and then I do that and so I use this system like",
    "start": "582630",
    "end": "587910"
  },
  {
    "text": "firebase I'll use WordPress I'll use whatever I can to get things up and running but eventually problems creep in",
    "start": "587910",
    "end": "593250"
  },
  {
    "text": "and you have to answer customer queries you have to do support you have to do all kinds of stuff and then you fix and",
    "start": "593250",
    "end": "599520"
  },
  {
    "text": "change things you're like I can't really do it because WordPress plugins is gonna not like the book and it's really a pain",
    "start": "599520",
    "end": "606060"
  },
  {
    "text": "in the butt so basically what I've come to realize is after a few years what really really matters is control I want",
    "start": "606060",
    "end": "612450"
  },
  {
    "text": "as much control as I can have and that in my experience is sometimes run afoul of using online services platforms and",
    "start": "612450",
    "end": "620280"
  },
  {
    "text": "whatever so what I really want is I want Postgres I want Express and I want it in",
    "start": "620280",
    "end": "626700"
  },
  {
    "text": "my way I want the simplest possible experience I can build I want something that I have control over but also that",
    "start": "626700",
    "end": "632100"
  },
  {
    "text": "kind of helps me along as firebase might but then that I can expand later on that is the goal of why I'm building this",
    "start": "632100",
    "end": "638250"
  },
  {
    "text": "complete control okay so that's that's the quick look at Velzy and what I'm",
    "start": "638250",
    "end": "644580"
  },
  {
    "text": "trying to do now I get to geek out nerd out show you how I put it together and",
    "start": "644580",
    "end": "649860"
  },
  {
    "text": "how I made it all work and none of these are good ideas I love the quote in the beginning because I like the idea of",
    "start": "649860",
    "end": "656910"
  },
  {
    "text": "being foolish of just not caring because I'm at that stage right now I just don't care I just want to see what's possible",
    "start": "656910",
    "end": "662070"
  },
  {
    "text": "and you're gonna see what I mean by that in just a minute of how I'm making this all work and I do hope someday to",
    "start": "662070",
    "end": "667410"
  },
  {
    "text": "open-source this and turn it out for people to use so the first goal that I",
    "start": "667410",
    "end": "672480"
  },
  {
    "text": "had in mind the first goal I was thinking about are the people that it's for the people that are going to use this",
    "start": "672480",
    "end": "677820"
  },
  {
    "text": "the goal is to make this as simple as I can so I want API parity across every",
    "start": "677820",
    "end": "683790"
  },
  {
    "text": "level I want you to be able to use this on the server using the same set of methods that you might on the client or",
    "start": "683790",
    "end": "690870"
  },
  {
    "text": "maybe in the database itself so I have these core methods and I'm I'm so focused on trying to keep things simple",
    "start": "690870",
    "end": "696630"
  },
  {
    "text": "I didn't want any more than this just stumped something that you can do to operate with a document operate with the",
    "start": "696630",
    "end": "702090"
  },
  {
    "text": "documents that are stored in Postgres this is the client out that I'm building out right now same thing I want to have",
    "start": "702090",
    "end": "708750"
  },
  {
    "text": "just save I want to have filter find and so on that's going to be in parity with",
    "start": "708750",
    "end": "713820"
  },
  {
    "text": "the server so you can just bounce things back and forth I also have functions and",
    "start": "713820",
    "end": "719520"
  },
  {
    "text": "this is the core of what Velzy is it is a bunch of functions that sit in Postgres and everything you're about to see you",
    "start": "719520",
    "end": "726300"
  },
  {
    "text": "have to keep in the context that buildi is an extension that lives on top of Postgres it's not supposed to be an app",
    "start": "726300",
    "end": "732390"
  },
  {
    "text": "or a framework so every function that you see here they only got some I got some problems with the naming I'm gonna",
    "start": "732390",
    "end": "738480"
  },
  {
    "text": "fix that but they're supposed to be almost exactly in line with what you use in the server and what to use anywhere else graph QL the names of the queries",
    "start": "738480",
    "end": "747030"
  },
  {
    "text": "also are the same so that's what I'm going for I'm going for parody that you can use throughout well wherever you're",
    "start": "747030",
    "end": "753720"
  },
  {
    "text": "building things okay so get to the geek out part I want to show you a fun thing that I had to learn since I'm building",
    "start": "753720",
    "end": "760650"
  },
  {
    "text": "things in the fly I kind of have to do stuff at a meta level with my functions and I had to learn how to write a",
    "start": "760650",
    "end": "766860"
  },
  {
    "text": "function that uses dynamic sequel and that's probably gonna sound like absolute bonkers craziness maybe it is",
    "start": "766860",
    "end": "772740"
  },
  {
    "text": "maybe it's not a sequel doesn't scare me I love sequel I love Postgres is version",
    "start": "772740",
    "end": "777960"
  },
  {
    "text": "of sequel it is anti sequel but they have they have ways of doing things with",
    "start": "777960",
    "end": "783180"
  },
  {
    "text": "certain keywords and other things it just makes life wonderful and if you dig in and get to know how to use it it's",
    "start": "783180",
    "end": "788700"
  },
  {
    "text": "really really fun but I understand that as application developers a lot of times you just want relational managers to",
    "start": "788700",
    "end": "794400"
  },
  {
    "text": "deal with things and I get that so do you want to dig into I want to show you",
    "start": "794400",
    "end": "799560"
  },
  {
    "text": "is anybody ever written a function here Lightwave laughing it's that funny it is",
    "start": "799560",
    "end": "806820"
  },
  {
    "text": "funny alright it's a little funny okay this is what a function looks like in Postgres it's really not that scary but it's a",
    "start": "806820",
    "end": "814079"
  },
  {
    "text": "little bit different I know a lot of people don't want to write stored procedures and don't wanna write functions and routines in a database for",
    "start": "814079",
    "end": "820800"
  },
  {
    "text": "because business logic and so on I get you I hear you but when you're working on a database extension like I am you",
    "start": "820800",
    "end": "826199"
  },
  {
    "text": "kind of have to but this is what a function looks like you have create function you got the function name you've got the argument type and the",
    "start": "826199",
    "end": "832589"
  },
  {
    "text": "argument itself and then you've got this weird as and then dollar signs which is good about weird and those dollar signs",
    "start": "832589",
    "end": "838290"
  },
  {
    "text": "are just delimiter x' that just means here comes a string because when you define a function you're actually defining the body of it as a string but",
    "start": "838290",
    "end": "845639"
  },
  {
    "text": "you can just ignore it because syntax highlighting will just let it go so that's what those are the interesting thing is that the very",
    "start": "845639",
    "end": "851430"
  },
  {
    "text": "end is the language specification as you can see I'm using PL PG sequel it's a",
    "start": "851430",
    "end": "857940"
  },
  {
    "text": "little bit funky but it's basically just sequel with some control structures on it and some control flow some",
    "start": "857940",
    "end": "864209"
  },
  {
    "text": "conditionals and so on so that's all that is you can also if you want to just use plain old sequel you don't need to",
    "start": "864209",
    "end": "870420"
  },
  {
    "text": "use anything crazy in there you can just store everything encapsulate everything in a function if you want to if you're",
    "start": "870420",
    "end": "876329"
  },
  {
    "text": "feeling really nuts you can attach the v8 engine to Postgres and use javascript i've done this before it's a little bit strange but it's kind",
    "start": "876329",
    "end": "883170"
  },
  {
    "text": "of fun because javascript is a bit easier to write conditional logic in then say sequel if you're feeling really",
    "start": "883170",
    "end": "890670"
  },
  {
    "text": "crazy you can also use Python there's a bunch of other languages including Perl",
    "start": "890670",
    "end": "895829"
  },
  {
    "text": "if you really want to torture yourself and write functions in a database with Perl man I can feel the red cards coming",
    "start": "895829",
    "end": "905149"
  },
  {
    "text": "I'm going to switch back to PL PG sequel and kind of show you what the body of a function is all about you have two",
    "start": "905149",
    "end": "912089"
  },
  {
    "text": "sections the first you have a declare block and then down below you have a beginning and end that is a transaction",
    "start": "912089",
    "end": "917459"
  },
  {
    "text": "space begin and end in a database marks a transaction everything inside what happens at a transaction so in Postgres",
    "start": "917459",
    "end": "924689"
  },
  {
    "text": "a function is a transaction so everything you do inside of there which is kind of nice just happens within a",
    "start": "924689",
    "end": "931589"
  },
  {
    "text": "transaction and this is it this is the skeleton of a function and then what you write goes inside of there so that's",
    "start": "931589",
    "end": "937380"
  },
  {
    "text": "just the basics I also want to show you how I'm storing the JSON and again I'm",
    "start": "937380",
    "end": "942449"
  },
  {
    "text": "trying to keep this as absolutely simple as I Sibley can I just have a simple data table in there and it's got a single ID",
    "start": "942449",
    "end": "950590"
  },
  {
    "text": "with a long or a big int if you want to call it that so you don't run out of space with your keys big serial is one",
    "start": "950590",
    "end": "957640"
  },
  {
    "text": "of those key words I was telling you about that allows you to create a auto incrementing numeric ID and here I'm",
    "start": "957640",
    "end": "964120"
  },
  {
    "text": "just saying it's the primary key and it's not null this is where all the goodness happens this is JSON be inside",
    "start": "964120",
    "end": "971410"
  },
  {
    "text": "of Postgres and if you don't know Postgres not only allows you to store JSON allows you to store binary JSON",
    "start": "971410",
    "end": "977230"
  },
  {
    "text": "which is the same thing that MongoDB uses or the same idea at least and that's nice because the JSON B can be",
    "start": "977230",
    "end": "984940"
  },
  {
    "text": "indexed which means you can run some really fast interesting queries and if you're wondering if Postgres blows",
    "start": "984940",
    "end": "990580"
  },
  {
    "text": "MongoDB away it does by a long shot the only difference is that MongoDB has a",
    "start": "990580",
    "end": "996130"
  },
  {
    "text": "much nicer API which I'm aiming to fix the next thing we have is something I'm",
    "start": "996130",
    "end": "1002100"
  },
  {
    "text": "going to talk about more later on which is the search field this is what powers the full text search behind these",
    "start": "1002100",
    "end": "1007410"
  },
  {
    "text": "documents and the type here is TS vector house a name for that the way that",
    "start": "1007410",
    "end": "1013320"
  },
  {
    "text": "full-text searching works inside of Postgres is it is actually a data type that gets handled on the fly in the",
    "start": "1013320",
    "end": "1020790"
  },
  {
    "text": "query you can store it as a document or a data type if you want it's ts vector or you can just do it on the fly which",
    "start": "1020790",
    "end": "1026100"
  },
  {
    "text": "most people do but if you want something built super fast then you could use TTS vector as a column and then we just have",
    "start": "1026100",
    "end": "1033000"
  },
  {
    "text": "the time stamps that's it this is how the document is stored again I'm trying to keep things as murderously simple as",
    "start": "1033000",
    "end": "1039959"
  },
  {
    "text": "I can okay so how do we actually create this table how does this table habit get created on the fly this is my save",
    "start": "1039960",
    "end": "1047310"
  },
  {
    "text": "function I've obviously truncated it I just want to show you the main part about it which is that you can execute",
    "start": "1047310",
    "end": "1053070"
  },
  {
    "text": "sequel on the fly with in function if you want using PL PG sequel you use the execute function which is pretty obvious",
    "start": "1053070",
    "end": "1059550"
  },
  {
    "text": "but then you can do a format string and this looks crazy I mean I showed this to somebody and they said man you're gonna",
    "start": "1059550",
    "end": "1065100"
  },
  {
    "text": "get laughed off the stage and like wow I need to do this I don't have any other way that I know how to do this to create",
    "start": "1065100",
    "end": "1070530"
  },
  {
    "text": "a table on the fly from within the database so this is how I did it so if you ever find yourself needing to do",
    "start": "1070530",
    "end": "1075870"
  },
  {
    "text": "something like this in Postgres that's format function takes the % des as you can see public is the schema percent s",
    "start": "1075870",
    "end": "1082150"
  },
  {
    "text": "and creates that table this is going to be the real fun one in my save function",
    "start": "1082150",
    "end": "1088260"
  },
  {
    "text": "later on down below I'm also using dynamic sequel the format function to",
    "start": "1088260",
    "end": "1094540"
  },
  {
    "text": "create a trigger which is uh I'm proud to say very foolish but this is the",
    "start": "1094540",
    "end": "1101410"
  },
  {
    "text": "thing that people hate about triggers one of many and I understand it when a trigger goes off a lot of people use it",
    "start": "1101410",
    "end": "1107500"
  },
  {
    "text": "to go update something else go change data and a table go change data somewhere else and they're almost impossible to debug cuz they'll just",
    "start": "1107500",
    "end": "1114370"
  },
  {
    "text": "throw and you won't know what's going on just say the query failed and no one's gonna know why until you like do we have",
    "start": "1114370",
    "end": "1119860"
  },
  {
    "text": "triggers on that table I don't know how do you know if you have a trigger in the database and then everyone looks at each other and then it turns out you know the",
    "start": "1119860",
    "end": "1125140"
  },
  {
    "text": "DBA put a trigger on there to do something and it's failing and it's completely out of the developers control",
    "start": "1125140",
    "end": "1130540"
  },
  {
    "text": "and I get that I understand but this trigger oh no you have to say this was",
    "start": "1130540",
    "end": "1136210"
  },
  {
    "text": "Damien's reaction when I showed him the trigger this trigger that I put in actually does something a little more",
    "start": "1136210",
    "end": "1142030"
  },
  {
    "text": "interesting triggers don't scare me if they're doing something that isn't destructive and",
    "start": "1142030",
    "end": "1148630"
  },
  {
    "text": "then won't throw an error and I want to show you this is the body of the trigger when you when you have a trigger",
    "start": "1148630",
    "end": "1155380"
  },
  {
    "text": "function in Postgres you're handed a bunch of variables and settings you get TG op which is the operation you get TG",
    "start": "1155380",
    "end": "1162010"
  },
  {
    "text": "table you get a few other things blah blah blah that you can reference new and old what's the change so it's kind of cool you can see what's happening at the",
    "start": "1162010",
    "end": "1168760"
  },
  {
    "text": "time within the transaction here I'm just checking to see what the operation is what happened to the table this",
    "start": "1168760",
    "end": "1175150"
  },
  {
    "text": "document table if an update happened and I there's no change so if the old bodies indistinct from the new body then I'm",
    "start": "1175150",
    "end": "1181600"
  },
  {
    "text": "gonna not gonna do anything but if a delete happened I am going to execute PG notify which is an internal function but",
    "start": "1181600",
    "end": "1188950"
  },
  {
    "text": "it's going to send out a notification within Postgres and same thing with add or update or whatever a lot of people",
    "start": "1188950",
    "end": "1196750"
  },
  {
    "text": "don't know this but Postgres has pub/sub built in so you can on a given",
    "start": "1196750",
    "end": "1201790"
  },
  {
    "text": "connection you can publish notifications and you can listen and you can react from within Postgres so this is the",
    "start": "1201790",
    "end": "1208780"
  },
  {
    "text": "thing there's nothing destructive going on I just have a trigger that's sending out notifications that's all and it's not gonna it's not",
    "start": "1208780",
    "end": "1215200"
  },
  {
    "text": "going to error out but I do want to show you how listen and notify actually work this is P sequel that you can use to",
    "start": "1215200",
    "end": "1221410"
  },
  {
    "text": "talk to Postgres in the command line and once you have the command line up you can see the name of your database Velzy",
    "start": "1221410",
    "end": "1227680"
  },
  {
    "text": "and then you can use the listen command so you just say listen Velzy and it's saying okay listen feels a little bit",
    "start": "1227680",
    "end": "1232690"
  },
  {
    "text": "like Redis in fact it looks a lot like Redis so here if I send out notify on the velji channel and say hello I get an",
    "start": "1232690",
    "end": "1238690"
  },
  {
    "text": "asynchronous bump back and it's that easy it just has to be on the same connection",
    "start": "1238690",
    "end": "1243910"
  },
  {
    "text": "so then the question became can I do this in code somehow could I have a dedicated connection let's say a node",
    "start": "1243910",
    "end": "1249100"
  },
  {
    "text": "using something like PG promise which is a library that I was using I think you can do this with the n PG sequel driver",
    "start": "1249100",
    "end": "1255940"
  },
  {
    "text": "I want to say you can I haven't used this in dotnet in a long time so here",
    "start": "1255940",
    "end": "1260950"
  },
  {
    "text": "I'm just wiring up PGP PG promise and it is just while connecting to my database",
    "start": "1260950",
    "end": "1266260"
  },
  {
    "text": "and then I'm I have a dedicated connection and I also have a client on that connection so the first thing that",
    "start": "1266260",
    "end": "1272230"
  },
  {
    "text": "I want to do is I want to wire that client to listen for any notification",
    "start": "1272230",
    "end": "1277510"
  },
  {
    "text": "that comes out now the driver has that here the client is actually an event emitter inside of node so what this is",
    "start": "1277510",
    "end": "1285070"
  },
  {
    "text": "going to do is it's going to sit and listen for a note notification to pop out from the database when that happens",
    "start": "1285070",
    "end": "1290860"
  },
  {
    "text": "I can do all kinds of things console dot log I can I can do self-taught emit and receive some data and send along the",
    "start": "1290860",
    "end": "1297040"
  },
  {
    "text": "package this is my LD listener class it itself is an event emitter so I'm just",
    "start": "1297040",
    "end": "1302140"
  },
  {
    "text": "passing the event on up the chain the very last thing I need to do is I need to initiate the query for listening and",
    "start": "1302140",
    "end": "1311050"
  },
  {
    "text": "that's what I'm doing listen to the value change so the connection is executing the query connection dot none simply means I don't expect the result",
    "start": "1311050",
    "end": "1317530"
  },
  {
    "text": "to come back and it's just sitting there and the client is going to be listening to any notifications that come along that's that now I thought this was going",
    "start": "1317530",
    "end": "1324850"
  },
  {
    "text": "to take me hours I thought this was going to take me forever but it turns out that it just took me a couple of",
    "start": "1324850",
    "end": "1331660"
  },
  {
    "text": "hours and it's largely because of this person this is the fun thing number three is open source I love it",
    "start": "1331660",
    "end": "1338020"
  },
  {
    "text": "I know it's vitally Tamil of who runs the PG promise library",
    "start": "1338020",
    "end": "1344299"
  },
  {
    "text": "and he saw that I was working with his stuff and he's like what are you doing over there you know and I said well I'm trying to make your code work and so you",
    "start": "1344299",
    "end": "1351830"
  },
  {
    "text": "came over and he actually jumped in and helped me out put some things together and also tidied up the code which I love",
    "start": "1351830",
    "end": "1356839"
  },
  {
    "text": "so shout out to Vitaly thank you so how would you make this work so this is my op J's file and I kind of",
    "start": "1356839",
    "end": "1364339"
  },
  {
    "text": "wanted to show you how you just wire Velzy up to your app if you wanted to use it so of course the first thing is",
    "start": "1364339",
    "end": "1369830"
  },
  {
    "text": "we need to require it and then we just need to initialize that listener that I just showed you has two lies the",
    "start": "1369830",
    "end": "1375469"
  },
  {
    "text": "connection and the client and it's gonna sit there now our real-time I were just about live they're gonna use socket IO",
    "start": "1375469",
    "end": "1380539"
  },
  {
    "text": "socket IO is gonna talk to the client then I just need to pass socket IO off to a method to wire up the events so",
    "start": "1380539",
    "end": "1386719"
  },
  {
    "text": "that socket IO is knows what's happening and then we're just doing server don't listen this is standard socket IO stuff",
    "start": "1386719",
    "end": "1392499"
  },
  {
    "text": "that's the wire events thing and I'm not going to dive too much into this code this is truncated so it all fit right",
    "start": "1392499",
    "end": "1400249"
  },
  {
    "text": "here but the idea is I'm just taking the i/o from socket IO this is the the back",
    "start": "1400249",
    "end": "1405499"
  },
  {
    "text": "and forth to talk over socket or yeah to talk over sockets to the client and I'm",
    "start": "1405499",
    "end": "1410719"
  },
  {
    "text": "saying whenever the listener whenever an event happens on the listener bump some stuff",
    "start": "1410719",
    "end": "1416719"
  },
  {
    "text": "back and forth to the claim that's the entirety the real-time experience I went from a trigger all the way up to chained",
    "start": "1416719",
    "end": "1423079"
  },
  {
    "text": "to a client all the way up to chain now to two node and socket IO and that's how",
    "start": "1423079",
    "end": "1428749"
  },
  {
    "text": "this all works I'd like to say it's not all that complicated but I mean doing real-time stuff on that on the web is uh",
    "start": "1428749",
    "end": "1435700"
  },
  {
    "text": "it's not as easy as it could be I guess I don't know there might be some other libraries to try and do this but I was",
    "start": "1435700",
    "end": "1441950"
  },
  {
    "text": "able to put this together in a few hours and I'm very proud of myself no need to clap it's okay I don't want you I don't",
    "start": "1441950",
    "end": "1447919"
  },
  {
    "text": "I don't need your praise damn Australians idea so that one just",
    "start": "1447919",
    "end": "1454099"
  },
  {
    "text": "kidding okay so next let's move on to something that I think is really really interesting full-text search I had to",
    "start": "1454099",
    "end": "1461359"
  },
  {
    "text": "dive into this I mean I know about full-text search I've used full-text search before especially with Postgres but mostly what I've done is I've just",
    "start": "1461359",
    "end": "1467659"
  },
  {
    "text": "put full text indexing on a column or on a blob of text and said okay I've got a",
    "start": "1467659",
    "end": "1473570"
  },
  {
    "text": "full text index now query it and I'll just send it a term and then I'll get back some results but I've never actually dove in to figure",
    "start": "1473570",
    "end": "1480320"
  },
  {
    "text": "out how it works in Postgres and I'm about to do that now I can tell you guys are excited because you love this kind",
    "start": "1480320",
    "end": "1485810"
  },
  {
    "text": "of thing alright so the first thing I want to show you is in my save function in my safe function I'm taking in two",
    "start": "1485810",
    "end": "1493490"
  },
  {
    "text": "things I'm taking in the name of the table that we're gonna save a document to then we're taking in the document",
    "start": "1493490",
    "end": "1498650"
  },
  {
    "text": "itself doc that's it so this is a function body you've seen this before and then I'm returning a chunk of JSON B",
    "start": "1498650",
    "end": "1504320"
  },
  {
    "text": "later on I'm also taking in a third argument called search Keys and those",
    "start": "1504320",
    "end": "1510230"
  },
  {
    "text": "search Keys are commonly indexed keys for lack of better words that people",
    "start": "1510230",
    "end": "1516890"
  },
  {
    "text": "might want to index so I'm making this judgment call it's kind of an opinionated judgment call so when you",
    "start": "1516890",
    "end": "1522590"
  },
  {
    "text": "pass in a document what I'm gonna do is I'm gonna loop over all the keys in the document and I'm gonna see if they exist and then I'm going to do something with",
    "start": "1522590",
    "end": "1528650"
  },
  {
    "text": "them and that something is down below I am doing a loop and a function over some",
    "start": "1528650",
    "end": "1534380"
  },
  {
    "text": "keys that are passed in as an argument yeah I'm checking to see if the key",
    "start": "1534380",
    "end": "1540380"
  },
  {
    "text": "exists on the document and I can do this using the question mark which you see right there body question mark search",
    "start": "1540380",
    "end": "1546200"
  },
  {
    "text": "key that is the exists operator within postgres does this key exist on this document if it does I'm pulling it out I",
    "start": "1546200",
    "end": "1553430"
  },
  {
    "text": "will talk about that notation later on if it's unfamiliar to you I'm pulling the value out and I'm setting it in the",
    "start": "1553430",
    "end": "1558680"
  },
  {
    "text": "search term variable and then down below I have to make some judgment calls here because I don't know what you're sending",
    "start": "1558680",
    "end": "1565820"
  },
  {
    "text": "in it could be anything but if it's an email address we don't want that at",
    "start": "1565820",
    "end": "1571760"
  },
  {
    "text": "sigil in there because it's gonna mess everything up maybe just you just want the person's name or maybe we want their",
    "start": "1571760",
    "end": "1577700"
  },
  {
    "text": "domain so I want to strip out anything from the email address I also have other things in there about web addresses and",
    "start": "1577700",
    "end": "1583730"
  },
  {
    "text": "so on it says this is really really hacky I guess is the best word but it",
    "start": "1583730",
    "end": "1590810"
  },
  {
    "text": "brings up the idea about what do you want in your search index and and what do you want to do with it so I had to",
    "start": "1590810",
    "end": "1596210"
  },
  {
    "text": "address that a little bit in here and finally at the very very end down below here this is where the good stuff",
    "start": "1596210",
    "end": "1601790"
  },
  {
    "text": "happens once I loop over everything I'm going to concatenate and build out this variable called search parameter",
    "start": "1601790",
    "end": "1610140"
  },
  {
    "text": "of text or it's not and then I'm just going to update my search field and I",
    "start": "1610140",
    "end": "1616110"
  },
  {
    "text": "have to set it to TS vector I'm going to talk about what TS vector is in just a second but to do that I'm going to use",
    "start": "1616110",
    "end": "1621570"
  },
  {
    "text": "the two TS vector function inside of Postgres in so then boom that's it so it updates it sets it on the fly so in here",
    "start": "1621570",
    "end": "1628260"
  },
  {
    "text": "what I'm showing you is I'm making some opinionated judgments about what is going to be stored as full text and",
    "start": "1628260",
    "end": "1634350"
  },
  {
    "text": "sitting alongside your document that is completely over aidable you can pass in whatever you want as a text array into",
    "start": "1634350",
    "end": "1640830"
  },
  {
    "text": "this function but I'm trying to I'm gonna set that I think as a configuration later on I'm not too sure",
    "start": "1640830",
    "end": "1646230"
  },
  {
    "text": "also as far as performance goes I need to put this under performance check because I'm not sure I want that loop it",
    "start": "1646230",
    "end": "1651870"
  },
  {
    "text": "matters but anyway it's just something to throw against the wall because what I want is I want an experience that looks",
    "start": "1651870",
    "end": "1658440"
  },
  {
    "text": "like this let's go and play with Velzy and again I'm very focused on on user experience with this if you want to save",
    "start": "1658440",
    "end": "1666600"
  },
  {
    "text": "a document this is what it looks like vilsi save all the functions that I showed you before live inside of a",
    "start": "1666600",
    "end": "1671940"
  },
  {
    "text": "schema within postgres so it's isolated from your tables and everything else so to get out it you save Velzy dots schema",
    "start": "1671940",
    "end": "1678660"
  },
  {
    "text": "dot and then you execute the save function using select here I'm specifying that it wants this document",
    "start": "1678660",
    "end": "1684990"
  },
  {
    "text": "goofing around with Postgres to go into the NDC table the NDC table doesn't",
    "start": "1684990",
    "end": "1690060"
  },
  {
    "text": "exist yet so when I execute that it executes quite fast and then I get back the document with the ID array now what",
    "start": "1690060",
    "end": "1697860"
  },
  {
    "text": "I want to do is I want to be able to search that immediately I don't want to mess around I don't have to go TuneIn indexer i don't want to have to go spin",
    "start": "1697860",
    "end": "1704100"
  },
  {
    "text": "up elasticsearch or whatever I just want this ready to go and there it is not only do I get back the result that I'm",
    "start": "1704100",
    "end": "1710490"
  },
  {
    "text": "looking for but I also get back a search rank and that rank is a little bit I'm not going to talk too much about it but",
    "start": "1710490",
    "end": "1716130"
  },
  {
    "text": "that rank is a relative rank between 0 and 1.0 and it just ranks it according to the other Doc's in terms of relevance",
    "start": "1716130",
    "end": "1722940"
  },
  {
    "text": "and I only got one back but if I had like five back I'd want to sort by that rank and I do all that for you in the",
    "start": "1722940",
    "end": "1728910"
  },
  {
    "text": "back end so what is this ts vector thing you've heard me talk about it a couple",
    "start": "1728910",
    "end": "1733950"
  },
  {
    "text": "times and I found this to be fascinating I always just kind of said oh the way Postgres indexes documents and I've kind of just let it go",
    "start": "1733950",
    "end": "1739620"
  },
  {
    "text": "but I recently had to dive in because me just throwing text and a search",
    "start": "1739620",
    "end": "1746370"
  },
  {
    "text": "engine is not good enough you have to know what's going in there because sometimes you want might want to",
    "start": "1746370",
    "end": "1751740"
  },
  {
    "text": "prioritize it you also know how it's going you need to know how it's going to be queried so let's take a look at TS",
    "start": "1751740",
    "end": "1756930"
  },
  {
    "text": "vector and what I can do here is I can just select the function two TS vector when I'll get back is what Postgres is",
    "start": "1756930",
    "end": "1763830"
  },
  {
    "text": "doing to the string or the corpus of text as it's called I can see what's",
    "start": "1763830",
    "end": "1769170"
  },
  {
    "text": "happening to it and this is really fascinating this is simply key value",
    "start": "1769170",
    "end": "1774660"
  },
  {
    "text": "pairs where the key is a lexeme and the the value is its position in the phrase",
    "start": "1774660",
    "end": "1782010"
  },
  {
    "text": "or whatever you're sending in I should say text so here goofing around around is is in position to goof is in position",
    "start": "1782010",
    "end": "1789060"
  },
  {
    "text": "one and then post cur is in position four and width is ignored because it's a",
    "start": "1789060",
    "end": "1794610"
  },
  {
    "text": "noise word a lexeme this is interesting a lexeme is the essence if you will of a",
    "start": "1794610",
    "end": "1801150"
  },
  {
    "text": "word so you can have like goofing goofer goofy goofs whatever strip off what are",
    "start": "1801150",
    "end": "1808320"
  },
  {
    "text": "called stems strip that all off and then you end up with the core of the word called lexeme and so this is what gets",
    "start": "1808320",
    "end": "1815160"
  },
  {
    "text": "stored and and that's how that's how Postgres will do matching against it so",
    "start": "1815160",
    "end": "1820230"
  },
  {
    "text": "to show you how this works I wanted I wanted to share with you that I I was looking online to see if somebody might",
    "start": "1820230",
    "end": "1825480"
  },
  {
    "text": "have created a script this is so funny that would scrape the stalks from in DC here and sure enough Aaron Powell who's",
    "start": "1825480",
    "end": "1832170"
  },
  {
    "text": "my compatriot that Microsoft took a script from Jake",
    "start": "1832170",
    "end": "1837540"
  },
  {
    "text": "Ginn even Jenna van geen even Jin and anybody know how to say his name oh he's",
    "start": "1837540",
    "end": "1843480"
  },
  {
    "text": "over there hi Jake you gonna let us know how to say your name you know he said something I can I'm just gonna I'm gonna",
    "start": "1843480",
    "end": "1850440"
  },
  {
    "text": "say both in my head no he said you know van it's gonna be weird I was joking with him last night about this so anyway",
    "start": "1850440",
    "end": "1855540"
  },
  {
    "text": "he wrote this and you can say thank you thank you for helping me with my demo today I'm so I scraped all the talks here at a and I scraped off the",
    "start": "1855540",
    "end": "1862620"
  },
  {
    "text": "presenters name and and then also the text of the talk and I put it into the",
    "start": "1862620",
    "end": "1868230"
  },
  {
    "text": "database here using the safe function so every time it went in it did its little magic but it also chunked out all of the",
    "start": "1868230",
    "end": "1875510"
  },
  {
    "text": "the text and so I said I didn't actually tell it anything it just used name and",
    "start": "1875510",
    "end": "1880580"
  },
  {
    "text": "it used title and it automatically scraped that forming and so this is what I ended up with and I want to zoom in on",
    "start": "1880580",
    "end": "1886220"
  },
  {
    "text": "that a little bit because you can see the very first talk there at the very very top this is what Heather Downing's",
    "start": "1886220",
    "end": "1891889"
  },
  {
    "text": "keynote looks like when it's chunked down to lexemes in their position and",
    "start": "1891889",
    "end": "1898220"
  },
  {
    "text": "it's interesting I was I was looking at this like wait her talk was the feeding",
    "start": "1898220",
    "end": "1903590"
  },
  {
    "text": "in carob so why is that position 5 is all right cuz her name got slugged into my text so anyway my whole search string",
    "start": "1903590",
    "end": "1911269"
  },
  {
    "text": "it's heather downing the care and feeding whatever I can't remember the rest of it but that's why it looks like",
    "start": "1911269",
    "end": "1916639"
  },
  {
    "text": "this so the interesting thing to me there is a second word down and this",
    "start": "1916639",
    "end": "1923029"
  },
  {
    "text": "right here should make your your brain go wait don't if we're talking about a lexeme how does Postgres know what word",
    "start": "1923029",
    "end": "1929419"
  },
  {
    "text": "we're talking about because downing is Heather's name right but down is a word that could mean something else entirely",
    "start": "1929419",
    "end": "1935960"
  },
  {
    "text": "oh so what do we do about that and I'll tell you in a second to actually work",
    "start": "1935960",
    "end": "1942889"
  },
  {
    "text": "with TS vector and work with full-text indexing inside of Postgres you need what's called a TS query this is another",
    "start": "1942889",
    "end": "1948740"
  },
  {
    "text": "type thankfully you don't need to know how to make one it'll make it for you all you have to do is use the two TS",
    "start": "1948740",
    "end": "1955130"
  },
  {
    "text": "query function and pass in whatever it is so the term of the search so in this",
    "start": "1955130",
    "end": "1960350"
  },
  {
    "text": "I'm going to talk about the body and the arrow stuff in just a little bit here I",
    "start": "1960350",
    "end": "1965570"
  },
  {
    "text": "just wanted to see the name the title of all the json documents that i have from my MVC table and that @ @ symbol right",
    "start": "1965570",
    "end": "1972769"
  },
  {
    "text": "there just as a comparison operator it just says where the search and the query match that's that and so but i get back",
    "start": "1972769",
    "end": "1980299"
  },
  {
    "text": "a bunch of columns here that talk about or they that fire on the azure keyword",
    "start": "1980299",
    "end": "1987559"
  },
  {
    "text": "so dan nelly lace brendon pratik all of them are talking about a sure somewhere unless I don't know where the speakers",
    "start": "1987559",
    "end": "1994880"
  },
  {
    "text": "names there's nobody named Asher in there right because that would be a falsehood so how does that actually work",
    "start": "1994880",
    "end": "2002010"
  },
  {
    "text": "let's take a look at two TS query a sure let's see what it does does anybody have a guess",
    "start": "2002010",
    "end": "2008560"
  },
  {
    "text": "it just chunks it down to a lexeme but here we don't care about position",
    "start": "2008560",
    "end": "2013570"
  },
  {
    "text": "because it's just a single word and so now we can see how Postgres actually matches against es vector it just looks",
    "start": "2013570",
    "end": "2019750"
  },
  {
    "text": "for matching lexemes and then it and from that point on you can do different things to it now I mentioned before like",
    "start": "2019750",
    "end": "2026080"
  },
  {
    "text": "with Heather's last name downing we might want all of that we might not want",
    "start": "2026080",
    "end": "2031930"
  },
  {
    "text": "it set to a lexeme we might also say well it's a name so we want to up the we",
    "start": "2031930",
    "end": "2037750"
  },
  {
    "text": "want to up the the weighting of it you can do all of that and I thought about diving into that it has to do with the",
    "start": "2037750",
    "end": "2044920"
  },
  {
    "text": "indexing you have to know what your indexing but you can tell it don't strip this down this isn't this isn't a word",
    "start": "2044920",
    "end": "2050408"
  },
  {
    "text": "that is strippable that you can remove a stem from and so Postgres will do that and say okay I'll just leave downing in there as a word and then you're good",
    "start": "2050409",
    "end": "2057179"
  },
  {
    "text": "here we can see that a sure is taken down to a Z you are because it could be",
    "start": "2057179",
    "end": "2062290"
  },
  {
    "text": "as your right it could be as yours it could be all kinds of things you can weight this you can change this you can add all kinds of things if you want to",
    "start": "2062290",
    "end": "2069280"
  },
  {
    "text": "tweak it and get your indexing right in fact one of the cool things you can do is you can specify what language you're",
    "start": "2069280",
    "end": "2075070"
  },
  {
    "text": "working with obviously I've been using English but you might want to use a different language like Australian or",
    "start": "2075070",
    "end": "2080500"
  },
  {
    "text": "perhaps French so here I'm just telling the database that I'm super cool and it'll do the right thing it'll go in and",
    "start": "2080500",
    "end": "2088030"
  },
  {
    "text": "say Welsh wet if we remove the T and the e there's our lexeme same with vash which",
    "start": "2088030",
    "end": "2093370"
  },
  {
    "text": "means cow okay let's take a look at",
    "start": "2093370",
    "end": "2100200"
  },
  {
    "text": "seeing it seeing if we can find Heather because I find this interesting we're",
    "start": "2100200",
    "end": "2105820"
  },
  {
    "text": "gonna you've seen this query before we're just gonna run this query and hope for the best to TS query Heather downing let's see if we can find our keynote",
    "start": "2105820",
    "end": "2112330"
  },
  {
    "text": "speaker and unfortunately we get an error that just about everyone runs into",
    "start": "2112330",
    "end": "2118120"
  },
  {
    "text": "when they try and use full-text indexing and and this is infuriating why why would Postgres not turn this into a",
    "start": "2118120",
    "end": "2124660"
  },
  {
    "text": "query that we could then use and the answer is that it doesn't know what you're trying to do which is weird like",
    "start": "2124660",
    "end": "2131590"
  },
  {
    "text": "what you'd think I'd be able to match against more than one word and indeed you can put more than one word is it",
    "start": "2131590",
    "end": "2139420"
  },
  {
    "text": "just a bunch of words or is it afraid is there structure involved are you trying to match against text are you",
    "start": "2139420",
    "end": "2146050"
  },
  {
    "text": "putting in a actual literal string that you expect to be matched precisely or does it have to match in terms of",
    "start": "2146050",
    "end": "2151960"
  },
  {
    "text": "position so Postgres makes this a little bit harder on you but that's okay because we can get around this we can",
    "start": "2151960",
    "end": "2158770"
  },
  {
    "text": "tell Postgres that this is just a plain string and will you do that using a different function we can do plane to",
    "start": "2158770",
    "end": "2166120"
  },
  {
    "text": "TOS query and this is usually what people will tend to do so a post quest does in this case is that will chunk",
    "start": "2166120",
    "end": "2172420"
  },
  {
    "text": "those words down to the lexemes and apply a logical and so both of these words now need to be in there Heather",
    "start": "2172420",
    "end": "2178690"
  },
  {
    "text": "and down so if you run this boom let me get to see Heather that's an awesome keynote by the way so yeah that's how we",
    "start": "2178690",
    "end": "2186430"
  },
  {
    "text": "that's how we'd fix that problem so now we can send in more than one word and we can treat this as a bunch of strings it",
    "start": "2186430",
    "end": "2191620"
  },
  {
    "text": "doesn't really matter they just all need to be there okay what if we'd now look",
    "start": "2191620",
    "end": "2197320"
  },
  {
    "text": "for somebody else I'd show a picture of Troy but I think we could all agree that maybe we've seen his face too much did I",
    "start": "2197320",
    "end": "2206800"
  },
  {
    "text": "did I sound jealous I'm just kidding I have to poke fun at Troy I just have to guess no you can't",
    "start": "2206800",
    "end": "2213190"
  },
  {
    "text": "have a talk if you don't poke fun at Troy on it all right I guess that wasn't funny here I'm",
    "start": "2213190",
    "end": "2219880"
  },
  {
    "text": "saying I want to use a different function because the positioning matters what I have here is Troy and a last name",
    "start": "2219880",
    "end": "2227320"
  },
  {
    "text": "hunt so hunt needs to appear after Troy so I can say to Postgres this is a phrase you know it's a name it's a",
    "start": "2227320",
    "end": "2233140"
  },
  {
    "text": "phrase and so what Postgres will do is they'll use a different operator instead of a logical and it'll use a positional",
    "start": "2233140",
    "end": "2238600"
  },
  {
    "text": "operator so here you can see that the arrows and now it's expecting hunt to appear after Troy and so I get the",
    "start": "2238600",
    "end": "2244360"
  },
  {
    "text": "result back all right let's try something more interesting what if I do",
    "start": "2244360",
    "end": "2249850"
  },
  {
    "text": "a phrase to TOS query to say that we're going Troy hunting so he to go go find",
    "start": "2249850",
    "end": "2255790"
  },
  {
    "text": "it hunt down Troy and find him and now you can see what might happen here it's",
    "start": "2255790",
    "end": "2260950"
  },
  {
    "text": "going to chuck this down to lexemes it's going to remove the ing stem and yes we're gonna get Troy hunt back hmm is",
    "start": "2260950",
    "end": "2269260"
  },
  {
    "text": "this what we want well no Troy hunt is his name and we should be able to tweak this index but",
    "start": "2269260",
    "end": "2274570"
  },
  {
    "text": "it's also nice that we have this ability to do positional arguments I'm just assuming",
    "start": "2274570",
    "end": "2280839"
  },
  {
    "text": "that that's gonna be Troy's reaction if he hears about my demo did you know it's weird it's crazy there's a troy emoticon",
    "start": "2280839",
    "end": "2287079"
  },
  {
    "text": "I didn't know they had such a thing well what if we wanted to say we wanted a hunt at Troy now so this is get some",
    "start": "2287079",
    "end": "2294339"
  },
  {
    "text": "really interesting this courage me because maybe you're thinking that the speakers that are going to be speaking",
    "start": "2294339",
    "end": "2300880"
  },
  {
    "text": "might have like their last name comma first Troy why not or maybe we are literally going to hunt Troy either way",
    "start": "2300880",
    "end": "2307839"
  },
  {
    "text": "we're not gonna get anything back if we use phrase to you to us query because hunt needs to appear after Troy it's so",
    "start": "2307839",
    "end": "2314349"
  },
  {
    "text": "crazy when you get into this stuff it's actually super relevant to because we have to build Search Indexing don't we",
    "start": "2314349",
    "end": "2320380"
  },
  {
    "text": "even if you're using something like elastic or any other kind of search engine out there algo Leah you have to",
    "start": "2320380",
    "end": "2326230"
  },
  {
    "text": "think about these things and how you want them treated okay well if using Postgres 11 version 11 which came out",
    "start": "2326230",
    "end": "2333220"
  },
  {
    "text": "last year they have come up with something that solves or tries to solve this problem web search to TI's query",
    "start": "2333220",
    "end": "2340839"
  },
  {
    "text": "and this is pretty neat so what web search tries to do is it tries to gauge what exactly the person who's querying",
    "start": "2340839",
    "end": "2347769"
  },
  {
    "text": "is looking for maybe it's a person's name maybe they've put in some punctuation maybe they put in a question",
    "start": "2347769",
    "end": "2353170"
  },
  {
    "text": "who knows but here we're gonna get back the response that we'd expect hunt Troy",
    "start": "2353170",
    "end": "2358269"
  },
  {
    "text": "Troy hunt even try hunting whatever web search to TS query supposed to be forgiving but it's supposed to be",
    "start": "2358269",
    "end": "2363519"
  },
  {
    "text": "something that's a little bit more logical than everything else that's all I know about it have any is it all that much basically what I'm trying to say is",
    "start": "2363519",
    "end": "2370900"
  },
  {
    "text": "this is a bit of a dance getting this right I'm not trying to say it's too hard but the cool thing is is if",
    "start": "2370900",
    "end": "2376599"
  },
  {
    "text": "Postgres gives you all the tools that you need to execute really solid queries",
    "start": "2376599",
    "end": "2382359"
  },
  {
    "text": "and I know for like web search and an application you tend to just want to have a broad thing like you're gonna guess it's not gonna be right all the",
    "start": "2382359",
    "end": "2388359"
  },
  {
    "text": "time but if you're doing something like analytics you really want to be able to go in there and fine-tune exactly what",
    "start": "2388359",
    "end": "2394390"
  },
  {
    "text": "you're looking for okay now let's go off the rails to foolish things absolutely",
    "start": "2394390",
    "end": "2399670"
  },
  {
    "text": "crazy that I'm probably gonna you probably gonna throw stuff at me which is great because I enjoy that",
    "start": "2399670",
    "end": "2406900"
  },
  {
    "text": "let's try and do a query where we just pull out the name from our table and we",
    "start": "2406900",
    "end": "2413599"
  },
  {
    "text": "try and do a fuzzy match let's say on the speaker's name here we can just pull a name out of the document you can pull",
    "start": "2413599",
    "end": "2418999"
  },
  {
    "text": "any key you wan out by using the JSON B column name body and then the double",
    "start": "2418999",
    "end": "2424069"
  },
  {
    "text": "arrow syntax is going to pull it out as text so because we do that that means",
    "start": "2424069",
    "end": "2429200"
  },
  {
    "text": "that we can then operate on it with any kind of query functionality we want with in Postgres so here you can see all of",
    "start": "2429200",
    "end": "2434420"
  },
  {
    "text": "our speakers if I use the single arrow just to point this out it treats it like JSON B so if you have nested documents",
    "start": "2434420",
    "end": "2441650"
  },
  {
    "text": "within a document for instance or keys that are also further JSON you can select those and keep on going with the arrows until you",
    "start": "2441650",
    "end": "2447920"
  },
  {
    "text": "get what you want okay well let's say that I want to find all the talks where",
    "start": "2447920",
    "end": "2453049"
  },
  {
    "text": "the speaker's name starts with Damien and this is just an I like or like a query in a case insensitive where I'm",
    "start": "2453049",
    "end": "2460549"
  },
  {
    "text": "looking for Damien's and I'm using the percentage wildcard flag and so here boom I get back",
    "start": "2460549",
    "end": "2466430"
  },
  {
    "text": "pragmatic DevOps how and why that's Damien Brady and then hidden gems in dotnet core which is Damien Edwards so",
    "start": "2466430",
    "end": "2472940"
  },
  {
    "text": "those are coming up that's neat but this kind of syntax doesn't really work well",
    "start": "2472940",
    "end": "2477979"
  },
  {
    "text": "for DBAs because DBAs when they see this they'll probably come pounding on your door and saying look we have a table of",
    "start": "2477979",
    "end": "2484009"
  },
  {
    "text": "zillions of Records it's gonna keep growing you keep doing this you're gonna slow our system down because you're",
    "start": "2484009",
    "end": "2489079"
  },
  {
    "text": "running what's called a sequential scan I think in sequel server it's called",
    "start": "2489079",
    "end": "2495160"
  },
  {
    "text": "totally blanked someone shout it out if you know full table full table scan something like that anyway the idea is",
    "start": "2495160",
    "end": "2500960"
  },
  {
    "text": "that you're going over every single record you're not using an index and you're running that comparison that query is gonna be fast in the beginning",
    "start": "2500960",
    "end": "2507440"
  },
  {
    "text": "but as the records grow then it slows down slows down until you kill until it kills your system we don't want that we",
    "start": "2507440",
    "end": "2513799"
  },
  {
    "text": "want to be able to use an index and not as a problem when you're using JSON inside of Postgres yes you can index the",
    "start": "2513799",
    "end": "2520069"
  },
  {
    "text": "JSON but it gets indexed in terms of the key not the value and so that means that we can't run very highly efficient",
    "start": "2520069",
    "end": "2526400"
  },
  {
    "text": "queries which is a bummer unless you're a complete hack like me this is just Postgres we should be able to do",
    "start": "2526400",
    "end": "2531979"
  },
  {
    "text": "something about this I want to run a function starts with I want to run that",
    "start": "2531979",
    "end": "2538969"
  },
  {
    "text": "function and I don't want to think about anything else that's happening show me everything in the NDC table and the name key that starts with",
    "start": "2538969",
    "end": "2545210"
  },
  {
    "text": "D a.m. so I made that function and here it is and it works pretty well",
    "start": "2545210",
    "end": "2551060"
  },
  {
    "text": "because I have the one really bad thing right there in the middle perform Velzy",
    "start": "2551060",
    "end": "2556250"
  },
  {
    "text": "create lookup column and you guys can probably guess what's coming because at the very end I want to be able to",
    "start": "2556250",
    "end": "2562250"
  },
  {
    "text": "execute this query down below this I like query and I want a column to exist and I want to flex the power of Postgres",
    "start": "2562250",
    "end": "2569080"
  },
  {
    "text": "this is my create lookup column function when I'm doing a bunch of bad things on",
    "start": "2569080",
    "end": "2575690"
  },
  {
    "text": "the fly I'm checking to see if the column exists and if it does exist or it",
    "start": "2575690",
    "end": "2581119"
  },
  {
    "text": "doesn't exist I'm altering the table and I'm adding the column and then I'm updating that column with all the values",
    "start": "2581119",
    "end": "2586430"
  },
  {
    "text": "that are in the key that you're looking for in all the documents in the table and then I'm creating an index I'll use",
    "start": "2586430",
    "end": "2593300"
  },
  {
    "text": "it using a b-tree index I'm creating an index so you can do fuzzy lookups and then finally I'm creating another",
    "start": "2593300",
    "end": "2599359"
  },
  {
    "text": "trigger again this is just me being a fool I'm trying to figure out how this is gonna work out but I want to try it",
    "start": "2599359",
    "end": "2605750"
  },
  {
    "text": "now I can see he's taking a picture of it I'm dead now it's gonna end up on Twitter I'm watching you",
    "start": "2605750",
    "end": "2611359"
  },
  {
    "text": "go ahead sorry I don't mind so this is my great lookup column this is absolute",
    "start": "2611359",
    "end": "2616430"
  },
  {
    "text": "bonkers craziness but again this is the experience that I'm going for I want to show you when you're doing",
    "start": "2616430",
    "end": "2621710"
  },
  {
    "text": "this is how they were in peace equal again if you do backslash D it is described describe this table to me and",
    "start": "2621710",
    "end": "2627920"
  },
  {
    "text": "you could see this is our basic table that we had from before we have search we have our time stamps we have our body and so on",
    "start": "2627920",
    "end": "2633020"
  },
  {
    "text": "I want a developer to be able to say select starts with and boom get their",
    "start": "2633020",
    "end": "2638030"
  },
  {
    "text": "get their stuff and not have to worry about not using index not have to worry about the DBA coming and pounding on",
    "start": "2638030",
    "end": "2643520"
  },
  {
    "text": "their door that's all I care about at this moment I don't really care that there's a trigger that trigger by the way I kind of glossed over that but it's",
    "start": "2643520",
    "end": "2650060"
  },
  {
    "text": "just simply updating on any change it's making sure that this lookup column is in sync if we go back and we take a look",
    "start": "2650060",
    "end": "2657410"
  },
  {
    "text": "again slash D and DC describe our table to us you can see that I now have an",
    "start": "2657410",
    "end": "2662480"
  },
  {
    "text": "additional column in there it's just a text column I now have another index that's b-tree that's going to help me with this search",
    "start": "2662480",
    "end": "2668599"
  },
  {
    "text": "and finally I have I trigger this is supposed to be",
    "start": "2668599",
    "end": "2674820"
  },
  {
    "text": "development only obviously you do not want this running in production I know that kind of like Auto mapper this is",
    "start": "2674820",
    "end": "2681120"
  },
  {
    "text": "kind of a ticking time bomb in waiting I know people run into problems when",
    "start": "2681120",
    "end": "2686700"
  },
  {
    "text": "they have tools that allow them to do crazy things but in my case I'm just trying to be helpful and this is the key",
    "start": "2686700",
    "end": "2692070"
  },
  {
    "text": "this is the key here that this is a development time tool that builds itself",
    "start": "2692070",
    "end": "2698370"
  },
  {
    "text": "as well as trying to be a back-end it loves you and cares for you you're supposed to use this to build out your",
    "start": "2698370",
    "end": "2704310"
  },
  {
    "text": "table schemas and then also if you need to add additional columns because you want to do other queries you can lock it",
    "start": "2704310",
    "end": "2710310"
  },
  {
    "text": "down and then when you're all done deploy it as you need to and so that is",
    "start": "2710310",
    "end": "2715350"
  },
  {
    "text": "my goal here this is kind of a database that builds itself that's what I was thinking at least that's my excuse if I",
    "start": "2715350",
    "end": "2721440"
  },
  {
    "text": "kind of know it works I kind of think it's fine okay so let's skip ahead let's",
    "start": "2721440",
    "end": "2727590"
  },
  {
    "text": "say you've used a view and you've you've created your your radical application and you've made it and then you've",
    "start": "2727590",
    "end": "2734010"
  },
  {
    "text": "bounced it off Velzy on the back end and you've built out the schema that you need to accommodate your app and you're",
    "start": "2734010",
    "end": "2739050"
  },
  {
    "text": "feeling good about this maybe have auth built in everything's wired up maybe now what how do we get this thing live how",
    "start": "2739050",
    "end": "2745980"
  },
  {
    "text": "does it work well at the end of the day we're just talking about node and we're talking about Postgres that's it and",
    "start": "2745980",
    "end": "2752700"
  },
  {
    "text": "that to me is the best part so I've actually tried to build some deployment help into the thing where it tells you",
    "start": "2752700",
    "end": "2759270"
  },
  {
    "text": "how to do things for free and so one of the things that you can do is that you can stick these things into a container",
    "start": "2759270",
    "end": "2765120"
  },
  {
    "text": "and deploy them wherever you like it just happens that Azure since I work on the cloud advocacy",
    "start": "2765120",
    "end": "2770940"
  },
  {
    "text": "advocate advocacy team words one of my",
    "start": "2770940",
    "end": "2776820"
  },
  {
    "text": "tasks was to figure out how to build out something for free using multi container deployment just run on App Services and",
    "start": "2776820",
    "end": "2783390"
  },
  {
    "text": "I was able to do it which is really fun you can build your own image push it to wherever you like for both Postgres and",
    "start": "2783390",
    "end": "2789660"
  },
  {
    "text": "fir node have your application be just the way you like push it up to docker hub for instance and then when you're",
    "start": "2789660",
    "end": "2795990"
  },
  {
    "text": "ready to go you can then use your this docker compose dot yml file that I have in the root of the project you just",
    "start": "2795990",
    "end": "2802110"
  },
  {
    "text": "replace it with your own image names and when you're done with that you can then copy and paste it right here inside of",
    "start": "2802110",
    "end": "2808410"
  },
  {
    "text": "the portal and then hit go it'll pull your image down every time you change the image it'll update it'll pull your",
    "start": "2808410",
    "end": "2814230"
  },
  {
    "text": "image down you'll have a running set of Postgres you'll have running no doubt and you're good to go for free the f1",
    "start": "2814230",
    "end": "2820049"
  },
  {
    "text": "tier it works it works pretty well for it works pretty well for development it's probably not want to do anything",
    "start": "2820049",
    "end": "2825809"
  },
  {
    "text": "live in that sense if you want to see more about what I'm talking about I also do these things called Ashur",
    "start": "2825809",
    "end": "2832289"
  },
  {
    "text": "casts you can find them on YouTube episode number eight I did creating free",
    "start": "2832289",
    "end": "2837630"
  },
  {
    "text": "multi container deployments using docker and Linux and that's number eight you can go watch that if you like I also was",
    "start": "2837630",
    "end": "2845130"
  },
  {
    "text": "playing around with a deploy to Azure button which I wanted to put somewhere on the app but I still have a few more",
    "start": "2845130",
    "end": "2851369"
  },
  {
    "text": "things that I want to tweak this uses what's called arm templates a source resource as your resource management",
    "start": "2851369",
    "end": "2857279"
  },
  {
    "text": "templates anyway you click a button it orchestrates everything up on asher for you pulls the things down that you need",
    "start": "2857279",
    "end": "2863400"
  },
  {
    "text": "and you're off to the races now I think that's neat I think that's neat but I don't think",
    "start": "2863400",
    "end": "2868799"
  },
  {
    "text": "that's all that compelling because what I want as I keep saying is I want a CLI kind of experience I want you to sit",
    "start": "2868799",
    "end": "2874410"
  },
  {
    "text": "down and crack out a back-end app as fast as you can crack out something on",
    "start": "2874410",
    "end": "2879599"
  },
  {
    "text": "the front end using like the view CLI so in that sense I want you to also to be able to deploy it my idea and I haven't",
    "start": "2879599",
    "end": "2886739"
  },
  {
    "text": "made this yet my idea is that you do deploy dot deploy whatever is in here and it's gonna go up to Azure or",
    "start": "2886739",
    "end": "2892589"
  },
  {
    "text": "wherever you set and it's going to create the resources that you need to run this thing the nice thing about this",
    "start": "2892589",
    "end": "2899400"
  },
  {
    "text": "is if Velzy owns a deployment it can give you a choice you can do it for free if you want or you can do it super scale",
    "start": "2899400",
    "end": "2906450"
  },
  {
    "text": "you can do on an app services where you link up note apps and and whatever that have a scaling plan you can also do",
    "start": "2906450",
    "end": "2912119"
  },
  {
    "text": "manage Postgres which I don't know if you know but we do manage Postgres now that's actually one of my focuses is to",
    "start": "2912119",
    "end": "2917910"
  },
  {
    "text": "help the Postgres team build out its management capabilities and it's really fun but you can now have it hosted and",
    "start": "2917910",
    "end": "2924390"
  },
  {
    "text": "you can have you can have a super scale back end just with a click ideally that's where I'm gonna go I also have",
    "start": "2924390",
    "end": "2930269"
  },
  {
    "text": "CLI scripts cuz I'm here to see Li fan so I created some CLI scripts that can do this",
    "start": "2930269",
    "end": "2935460"
  },
  {
    "text": "right this is all in progress this is all me having fun right now I've been at",
    "start": "2935460",
    "end": "2940960"
  },
  {
    "text": "it for about four months I showed it to a couple of people internally and they're all very interested and they're hoping and hoping",
    "start": "2940960",
    "end": "2946630"
  },
  {
    "text": "that I'm hoping the best for me they all said the same thing there let's see what",
    "start": "2946630",
    "end": "2951850"
  },
  {
    "text": "happens like okay so I'm going for it if you're wondering oh by the way I",
    "start": "2951850",
    "end": "2957280"
  },
  {
    "text": "still have authentication that I need to to build in also I need to lock this thing down with rules and permissions I",
    "start": "2957280",
    "end": "2963040"
  },
  {
    "text": "have this plan sketched out I just haven't done yet so I'm getting there if you're wondering what what a Velzy is it",
    "start": "2963040",
    "end": "2970240"
  },
  {
    "text": "is this guy it's Dale Velzy I was one of my heroes he's a surfing legend from the 40s and",
    "start": "2970240",
    "end": "2976630"
  },
  {
    "text": "50s created the very first surf shop under the Manhattan pure Manhattan Beach",
    "start": "2976630",
    "end": "2983020"
  },
  {
    "text": "Pier in Los Angeles they used to make this is crazy they used to make surfboards out of these massive planks",
    "start": "2983020",
    "end": "2989290"
  },
  {
    "text": "and they'd laminate and glue them together and they plane them down by hand that's Dale on the left over there",
    "start": "2989290",
    "end": "2995170"
  },
  {
    "text": "and I think that's Tom Blake on the right I'm not sure who that is but these are these are pioneers these guys are",
    "start": "2995170",
    "end": "3000210"
  },
  {
    "text": "legends buddy gonna be plain down these huge planks like wait 80 pounds and they carry them to the beach and throw them",
    "start": "3000210",
    "end": "3006420"
  },
  {
    "text": "in the water and I don't know hope for the best I guess but what Dale what Dale came to realize",
    "start": "3006420",
    "end": "3011700"
  },
  {
    "text": "is that you can do something like this but with lighter would like balsa wood",
    "start": "3011700",
    "end": "3017220"
  },
  {
    "text": "so he actually pioneered the use of balsa wood to make lighter and easier for people to go surf and then a few",
    "start": "3017220",
    "end": "3022800"
  },
  {
    "text": "years later he joined the foam revolution by helping to shape some of the the foam boards that you see in all",
    "start": "3022800",
    "end": "3031320"
  },
  {
    "text": "the old surf videos that was his design that was the tank the big old long gun that's Dale Velzy so anyway I figured it",
    "start": "3031320",
    "end": "3037800"
  },
  {
    "text": "kind of was appropriate for what I'm trying to do here just trying to make something lighter faster and more fun",
    "start": "3037800",
    "end": "3043040"
  },
  {
    "text": "all right well that's yeah I do have some time for questions if you guys are nice to me and if you need to get a hold of me at",
    "start": "3043040",
    "end": "3049290"
  },
  {
    "text": "all there's my twitter and my email and my blog and I'll be blogging about this too thank you so much that's it",
    "start": "3049290",
    "end": "3058250"
  },
  {
    "text": "shout out some questions if you want to sorry for making fun of you",
    "start": "3060920",
    "end": "3066900"
  },
  {
    "text": "I was still Jake said it Jake said it'd be a good idea to make fun of the audience because they liked it they said",
    "start": "3066900",
    "end": "3072329"
  },
  {
    "text": "okay all right well then get out here",
    "start": "3072329",
    "end": "3076579"
  }
]