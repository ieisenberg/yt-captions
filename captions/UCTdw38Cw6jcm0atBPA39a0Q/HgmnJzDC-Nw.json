[
  {
    "start": "0",
    "end": "71000"
  },
  {
    "text": "welcome mom my name is Austin Bingham I work for and half owned 60 North it's a",
    "start": "4590",
    "end": "12190"
  },
  {
    "text": "small three-person consulting company that two-thirds of the company are in the room right now me and Eric here",
    "start": "12190",
    "end": "17760"
  },
  {
    "text": "working here in Norway based in our offices are an Oscar we do a lot of",
    "start": "17760",
    "end": "24160"
  },
  {
    "text": "Python consulting Python training and various bits of development and this",
    "start": "24160",
    "end": "29230"
  },
  {
    "text": "talk comes out of one of our it's not a commercial project it's it's a it's a hobby project in the sense it's a tool",
    "start": "29230",
    "end": "35050"
  },
  {
    "text": "that we we kind of push on when we have time and capacity and it's very interesting in many ways and it could",
    "start": "35050",
    "end": "40870"
  },
  {
    "text": "use more hands or maybe just more insight even just more Minds thinking about it cuz it's an interesting problem so what is the problem is anchor'd",
    "start": "40870",
    "end": "46960"
  },
  {
    "text": "metadata and you may have some sense of what that is if you read the the abstract of the talk but we'll go into",
    "start": "46960",
    "end": "52480"
  },
  {
    "text": "all the details and I'll try to motivate what I'm talking about here I think I'm",
    "start": "52480",
    "end": "59230"
  },
  {
    "text": "supposed to offer 50 minutes and so I might talk a bit quickly if I start going really rapidly which is one of my weaknesses as a presenter just tell me",
    "start": "59230",
    "end": "66430"
  },
  {
    "text": "to slow down I won't take offense because I know I get excited sometimes into move too quickly so what is the problem",
    "start": "66430",
    "end": "73930"
  },
  {
    "start": "71000",
    "end": "175000"
  },
  {
    "text": "that I'm talking about here I want to associate metadata with code we all I'm",
    "start": "73930",
    "end": "79060"
  },
  {
    "text": "assuming everybody here as a programmer or in some way working on software projects we have lots of source code and there are some times you want to add",
    "start": "79060",
    "end": "85630"
  },
  {
    "text": "information to our code we want to say something about this piece of code don't test it or don't QA it or somebody",
    "start": "85630",
    "end": "93790"
  },
  {
    "text": "please review it there's things you want to say about our code we want to sometimes attach data to it and there",
    "start": "93790",
    "end": "100990"
  },
  {
    "text": "are ways to do this there are known techniques for doing this and I'm going to be exploring a relatively sort of",
    "start": "100990",
    "end": "106380"
  },
  {
    "text": "unexplored unused Avenue to doing this and I think it's there's some neat data",
    "start": "106380",
    "end": "111520"
  },
  {
    "text": "structures and algorithms one of the things I really like about this problem is its applying the stuff I learned in my computer science degree which I don't",
    "start": "111520",
    "end": "117490"
  },
  {
    "text": "get to do all that often but it's also potentially very very useful so I hope that you guys think the same so when we",
    "start": "117490",
    "end": "123040"
  },
  {
    "text": "talk about attaching metadata to programs what are we trying to say imagine I have some code here what",
    "start": "123040",
    "end": "129099"
  },
  {
    "text": "language is that anybody know it's new and fancy it's rust yeah I might want to",
    "start": "129099",
    "end": "135609"
  },
  {
    "text": "say at that bit you see as you 64 don't mutate that for mutation testing a topic will cover very briefly here in a second",
    "start": "135609",
    "end": "141910"
  },
  {
    "text": "or maybe I want to say don't do linting on this bit for some reason or maybe I want to say disable testing on this bit",
    "start": "141910",
    "end": "149440"
  },
  {
    "text": "here because the tests we know are broken and we're trying to ship and of course we want to go green before we ship because we're solid programmers or",
    "start": "149440",
    "end": "157330"
  },
  {
    "text": "arbitrary kinds of things and things that are in different domains linting isn't the same as testing is not the",
    "start": "157330",
    "end": "163030"
  },
  {
    "text": "same as mutation yet we have metadata from all those domains somehow pointing at our code somehow conceptually",
    "start": "163030",
    "end": "169390"
  },
  {
    "text": "relevant to our code so I approached this kind of problem from another",
    "start": "169390",
    "end": "176410"
  },
  {
    "start": "175000",
    "end": "192000"
  },
  {
    "text": "project I work on cosmic race or cosmic ray is a mutation testing tool for Python I think I've talked about it here",
    "start": "176410",
    "end": "183670"
  },
  {
    "text": "in the past and certainly at other NDC's it's a very fun kind of big exciting project that I wish I could just work on",
    "start": "183670",
    "end": "189190"
  },
  {
    "text": "full-time but it doesn't pay the bills so what is what is mutation testing briefly well mutation testing and this",
    "start": "189190",
    "end": "194980"
  },
  {
    "start": "192000",
    "end": "382000"
  },
  {
    "text": "kind of motivates the rest of the talk so I'm just not D railing things here you have some code under test your",
    "start": "194980",
    "end": "201640"
  },
  {
    "text": "library your application and you have a test suite think of these two things as separate for the purposes of mutation",
    "start": "201640",
    "end": "207430"
  },
  {
    "text": "testing I introduced a single small change typically very small change like",
    "start": "207430",
    "end": "212680"
  },
  {
    "text": "changing an operator from greater than to less than or something like that into my code and I run my tests and my test",
    "start": "212680",
    "end": "219459"
  },
  {
    "text": "should fail right my test should be high fidelity enough to tell me if I've made",
    "start": "219459",
    "end": "224680"
  },
  {
    "text": "a change of that significance in my code so that's what cosmic ray does and there's another talk about mutation testing here in C++ I think so it's",
    "start": "224680",
    "end": "232810"
  },
  {
    "text": "probably very interesting that whole other set of problems right so there are",
    "start": "232810",
    "end": "238269"
  },
  {
    "text": "certain technical issues with mutation testing one of those is this what's called an equivalent to mutant I can",
    "start": "238269",
    "end": "243670"
  },
  {
    "text": "make a change to a piece of code that is for one reason or another one reason or",
    "start": "243670",
    "end": "248980"
  },
  {
    "text": "another in detectable or virtually in detectable by a test suite no matter how good the test suite is and here's an",
    "start": "248980",
    "end": "254140"
  },
  {
    "text": "example coming from Python if you don't know Python that well what this is is it's the main block right and this will this bot body here is protected by this",
    "start": "254140",
    "end": "260919"
  },
  {
    "text": "if statement it will only be executed if this is the top level module in your",
    "start": "260919",
    "end": "266860"
  },
  {
    "text": "program it's like the main package right but if you're running tests this is not my definition this",
    "start": "266860",
    "end": "272070"
  },
  {
    "text": "not the main module and so nothing in here gets executed but the mutation testing tool doesn't know that I could",
    "start": "272070",
    "end": "277620"
  },
  {
    "text": "probably make it smart enough to but I don't want to build too many exceptions into it so it's gonna see this code and go I can mutate things in here all day",
    "start": "277620",
    "end": "283140"
  },
  {
    "text": "long run the tests and of course the tests are going to pass because it never sees anything in here so that's one example of an equivalent mutant any",
    "start": "283140",
    "end": "289860"
  },
  {
    "text": "change it happens in this block can't be detected by tests almost by definition another more devious one can anybody see",
    "start": "289860",
    "end": "297480"
  },
  {
    "text": "the problem no of course yeah I couldn't eyeball this right there right and you don't have to know Python to understand this the the relevant point here is that",
    "start": "297480",
    "end": "303300"
  },
  {
    "text": "this comes from this is a bit of code that comes from the standard library documentation fight then it's telling",
    "start": "303300",
    "end": "308790"
  },
  {
    "text": "Python programmers how to do a certain thing that is consumed and iterable without side effects just like plow through an iterable and do all the",
    "start": "308790",
    "end": "314610"
  },
  {
    "text": "things right and it's a it's a technique it doesn't matter the details this is",
    "start": "314610",
    "end": "319920"
  },
  {
    "text": "important though if cosmic cosmic ray sees this code it's gonna come to that zero and say oh I know what to do two",
    "start": "319920",
    "end": "325800"
  },
  {
    "text": "numbers I make them other numbers and then run your tests right in this case what's going on is the technique is to",
    "start": "325800",
    "end": "331740"
  },
  {
    "text": "is saying create a double-ended queue of maximum length zero and then run your",
    "start": "331740",
    "end": "336900"
  },
  {
    "text": "integrator into that so allocate zero memory plow an iterator into that and just wait",
    "start": "336900",
    "end": "342390"
  },
  {
    "text": "for the side-effects to happen of course if I change this from zero to say ten okay ten pieces of memory or something",
    "start": "342390",
    "end": "349530"
  },
  {
    "text": "are allocated behind the scenes and deep inside pythons memory allocator but I can't it's hard to tell that it's almost",
    "start": "349530",
    "end": "355260"
  },
  {
    "text": "impossible for a test to tell that this has gone from zero to ten because hey you would never write a test ago that's",
    "start": "355260",
    "end": "360570"
  },
  {
    "text": "a nonsense kind of test to write and even if you did write it it would be this immense complicated test it doesn't provide any value to you so this is",
    "start": "360570",
    "end": "366720"
  },
  {
    "text": "another area where you'd want to be able to tell the tool please you know please don't mutate that it gives us it's noise",
    "start": "366720",
    "end": "372150"
  },
  {
    "text": "right so it's being able to attach data to things like that to arbitrary bits of code saying don't mutate them or don't",
    "start": "372150",
    "end": "378780"
  },
  {
    "text": "apply certain mutation operators to them that motivated this work so of course I",
    "start": "378780",
    "end": "384030"
  },
  {
    "start": "382000",
    "end": "433000"
  },
  {
    "text": "you know being a good open-source programmer this is all open-source if you want to check out cosmic ray or the",
    "start": "384030",
    "end": "389250"
  },
  {
    "text": "tool we'll talk about in a second I created an issue back in 2015 and said",
    "start": "389250",
    "end": "395130"
  },
  {
    "text": "there are cases where surviving mutants are acceptable please consider ways to add exceptions this is my way of saying adds add some information to the code",
    "start": "395130",
    "end": "401669"
  },
  {
    "text": "saying don't you take this bit of code okay and of course I thought about this a little and said you know a reasonable approach",
    "start": "401669",
    "end": "407210"
  },
  {
    "text": "would be to let the users have some kind of file that says you know line six a file such-and-such don't mutate it line",
    "start": "407210",
    "end": "412910"
  },
  {
    "text": "seven of file such-and-such don't mutate it that's fine or you could also try things like embedding exceptions in the",
    "start": "412910",
    "end": "419840"
  },
  {
    "text": "code itself having a comment that says don't you take this line something along those lines so I was kind of hashing out",
    "start": "419840",
    "end": "425630"
  },
  {
    "text": "the the possibilities the things that I could possibly do almost everybody I'm",
    "start": "425630",
    "end": "431090"
  },
  {
    "text": "sure has seen an example of these kind of embedded if directives if you look at I'm sure most programming languages have",
    "start": "431090",
    "end": "437390"
  },
  {
    "start": "433000",
    "end": "469000"
  },
  {
    "text": "some something like this so does my pointer work it doesn't seem to hash no",
    "start": "437390",
    "end": "443690"
  },
  {
    "text": "QA is that's a comment that's a Python you know Python comment and they'll in the language right and then some tool",
    "start": "443690",
    "end": "450230"
  },
  {
    "text": "parses your code sees as is odd no QA don't apply linting to this line right so we use the mechanisms of the language",
    "start": "450230",
    "end": "456740"
  },
  {
    "text": "plus an external tool to parse the language to figure out what to do this is an example of embedding directives",
    "start": "456740",
    "end": "463960"
  },
  {
    "text": "that works clearly it works by ad it clearly works because we see it used in all sorts of tools but it has some",
    "start": "463960",
    "end": "469340"
  },
  {
    "start": "469000",
    "end": "566000"
  },
  {
    "text": "problems right it's language specific I can write that tool for Python then I",
    "start": "469340",
    "end": "475130"
  },
  {
    "text": "have to write it again for C++ I have to write it again for rust for elm for Ruby for whatever okay clearly also not a",
    "start": "475130",
    "end": "481610"
  },
  {
    "text": "huge crippling problem because that's just what's been done collisions are",
    "start": "481610",
    "end": "487040"
  },
  {
    "text": "maybe a bigger problem if I have three things I want to say about that line that there are directives two different",
    "start": "487040",
    "end": "492500"
  },
  {
    "text": "tools how do they cooperate do I have to have some higher-level meta tool that knows how to like parse out the bits and",
    "start": "492500",
    "end": "497900"
  },
  {
    "text": "pass the information around okay it's a problems probably not unsolvable maybe it has been solved but I haven't seen a",
    "start": "497900",
    "end": "502910"
  },
  {
    "text": "good solution to it it clutters the code I think it's kind of ugly all right I think it's just a",
    "start": "502910",
    "end": "508160"
  },
  {
    "text": "messed I have to stare at the code and see this extra bit of metadata that doesn't apply to me when I'm trying to understand what the code does it's",
    "start": "508160",
    "end": "513770"
  },
  {
    "text": "giving directions to some other tool that I don't I'm not paying attention to at the time the fourth is is it in a lot",
    "start": "513770",
    "end": "519710"
  },
  {
    "text": "of cases it's not robust against refactoring right if I run some refactoring I use my fancy refactoring",
    "start": "519710",
    "end": "524750"
  },
  {
    "text": "tool and changes my code all around it's not necessarily and generally going to know to move those comments to the right",
    "start": "524750",
    "end": "530480"
  },
  {
    "text": "places if it moves a lot of stuff around it it extracts a function or a method or something like that do those comments get moved maybe they do is that right",
    "start": "530480",
    "end": "536870"
  },
  {
    "text": "maybe maybe not so this is this is the bust this problem with refactoring and those kinds of comments again it's a",
    "start": "536870",
    "end": "544129"
  },
  {
    "text": "technically solvable problem Emmy it has been solved but all of these combined together lead me to think that this is",
    "start": "544129",
    "end": "549860"
  },
  {
    "text": "not a very elegant way to approach this and not a very interesting way to approach the question of how we attach",
    "start": "549860",
    "end": "555470"
  },
  {
    "text": "metadata to code I wanted to find something more interesting because because it's more interesting to work on",
    "start": "555470",
    "end": "561350"
  },
  {
    "text": "so what's the alternative then as we saw in the in the github issue tracker the",
    "start": "561350",
    "end": "568249"
  },
  {
    "start": "566000",
    "end": "626000"
  },
  {
    "text": "solution question work because it still has some open issues can we externalize the metadata can I as",
    "start": "568249",
    "end": "574790"
  },
  {
    "text": "I kind of talked about have a separate file some separate files maybe that lists the things that are supposed to",
    "start": "574790",
    "end": "581720"
  },
  {
    "text": "control the tools the commute ation testing tools the linting tools and so forth can I do that obviously I can create an external file and put",
    "start": "581720",
    "end": "588139"
  },
  {
    "text": "information in it not a problem this the motivation for doing this what got me",
    "start": "588139",
    "end": "593990"
  },
  {
    "text": "kind of thinking about this years ago was a discussion with Rob small share who was running a pipe Eastman them",
    "start": "593990",
    "end": "599959"
  },
  {
    "text": "business partner the other third of 60 north and this guy David McKeever who you ever get a chance to meet David sit",
    "start": "599959",
    "end": "606139"
  },
  {
    "text": "down and have a chat with him he's a very very smart guy incredibly smart too smart in fact but we got talking about",
    "start": "606139",
    "end": "611660"
  },
  {
    "text": "this and of course there was also there's some beer involved and we had this brilliant idea let's just move everything out at these external files",
    "start": "611660",
    "end": "617569"
  },
  {
    "text": "and we kind of hashed around the ways you would do that and the problems you would run into and I said okay I think I can do this but of course I thought I",
    "start": "617569",
    "end": "624110"
  },
  {
    "text": "could do and then I sat on it for a couple years not doing anything about it but the fundamental idea is I think",
    "start": "624110",
    "end": "630439"
  },
  {
    "text": "you've probably picked up by now is I've my source code here with red lines of code for some reason I have my metadata",
    "start": "630439",
    "end": "635809"
  },
  {
    "text": "in some other file and the metadata has some way of pointing to a piece of code",
    "start": "635809",
    "end": "641029"
  },
  {
    "text": "right how do you point to a piece of code you say file name line number or maybe range of your range of offsets in",
    "start": "641029",
    "end": "647629"
  },
  {
    "text": "to the file it's not a hard problem to determine how to how to anchor things into a file it so I can have arbitrary",
    "start": "647629",
    "end": "654439"
  },
  {
    "text": "metadata here and it doesn't have to intrude into this source code but of course what's the problem with this",
    "start": "654439",
    "end": "659870"
  },
  {
    "text": "approach what's your intuitive take on why this is hard what a source code do",
    "start": "659870",
    "end": "667329"
  },
  {
    "text": "it changes yeah yeah that's the Achilles that's the Achilles heel knows this is Achilles until he works out",
    "start": "667329",
    "end": "673400"
  },
  {
    "text": "the Achilles heel of this problem is how do I keep my metadata pointing to the right piece of code as my code changes",
    "start": "673400",
    "end": "681050"
  },
  {
    "text": "which it will do I need some way to update the file I can do that by hand but that's tedious we want a computer to",
    "start": "681050",
    "end": "686060"
  },
  {
    "text": "did hard work for us and that really became the the crux of the issue and that arrow looks really big does anybody",
    "start": "686060",
    "end": "692660"
  },
  {
    "text": "know enough about classic Greek history to tell me if that's a properly sized arrow or not I have no idea I can see",
    "start": "692660",
    "end": "698510"
  },
  {
    "text": "that killing you though if it eats you anywhere it's big and you know a little classic statue stuff so the challenge",
    "start": "698510",
    "end": "705890"
  },
  {
    "start": "704000",
    "end": "757000"
  },
  {
    "text": "then the challenge we were faced with was how to keep the metadata aligned this became I found that's a technical",
    "start": "705890",
    "end": "711770"
  },
  {
    "text": "term for this apparently aligned with changing source code as Mykel source code changes can I look at the previous",
    "start": "711770",
    "end": "717380"
  },
  {
    "text": "anchor that I created and make it match we're a bit of code moved to and this was the this was the real challenge and",
    "start": "717380",
    "end": "724580"
  },
  {
    "text": "we recognized this challenge pretty much straight off and but because I had you know a thousand other things to work on",
    "start": "724580",
    "end": "730880"
  },
  {
    "text": "in cosmic ray I didn't have to get to it immediately and I could kind of put it off and put it off and and ponder it and then one day for some reason I finally",
    "start": "730880",
    "end": "739490"
  },
  {
    "text": "got the energy the motivation maybe the time to to do some thinking about this you know so weekend with nothing else to",
    "start": "739490",
    "end": "745520"
  },
  {
    "text": "do so I sat down with my computer and did some some research and I find this to be an effective technique effective",
    "start": "745520",
    "end": "751400"
  },
  {
    "text": "procrastination put something off until you get the inspiration to work on it and fortunately I was able to do that and I did some searching around and I",
    "start": "751400",
    "end": "758390"
  },
  {
    "start": "757000",
    "end": "834000"
  },
  {
    "text": "found this paper alright she basically describes the problem metadata anchoring",
    "start": "758390",
    "end": "764450"
  },
  {
    "text": "for source code robust location description definition building and interpreting right so this is you know",
    "start": "764450",
    "end": "770240"
  },
  {
    "text": "scholastic speak for the stuff we've been talking about past what fifteen or twenty minutes here I think the main",
    "start": "770240",
    "end": "777620"
  },
  {
    "text": "thinker behind this is this woman Maria beinac OVA never met her but she had",
    "start": "777620",
    "end": "783230"
  },
  {
    "text": "some really good ideas in her paper and it was an interesting read and I decided to try to run with the ideas that she",
    "start": "783230",
    "end": "788600"
  },
  {
    "text": "had in there the the basic idea of what they",
    "start": "788600",
    "end": "794000"
  },
  {
    "text": "described in their paper is very straightforward in a sense I have my",
    "start": "794000",
    "end": "799339"
  },
  {
    "text": "source code like we talked about earlier and if I want to address a reference a portion of that code what I need to do",
    "start": "799339",
    "end": "806120"
  },
  {
    "text": "is store what I call the topic which is the bit that you're actually concerned about",
    "start": "806120",
    "end": "811490"
  },
  {
    "text": "this bit in the middle right that's the code that I want to actually reference don't mutate this or don't lint it or",
    "start": "811490",
    "end": "816830"
  },
  {
    "text": "whatever so I store the actual code that's in that range in my in my anchor as well as some of the text before and",
    "start": "816830",
    "end": "823760"
  },
  {
    "text": "some of the text after that right so this context we get a snapshot of what the file what some range of the file",
    "start": "823760",
    "end": "829700"
  },
  {
    "text": "look that looked like when we made the anchor all right nothing too difficult about that the other main component the",
    "start": "829700",
    "end": "837950"
  },
  {
    "start": "834000",
    "end": "951000"
  },
  {
    "text": "part I wouldn't have found on my own is what's called the smith-waterman alignment algorithm does anybody here",
    "start": "837950",
    "end": "843170"
  },
  {
    "text": "work in biology genomics or anything like that you may have heard of it I think it's I think it's a big deal in in",
    "start": "843170",
    "end": "848870"
  },
  {
    "text": "that domain but I don't know much about it or its origins except that it's used to align sequences of nucleotides",
    "start": "848870",
    "end": "857650"
  },
  {
    "text": "Gattaca Gattaca alright great movie in its job is to say given two strings of",
    "start": "857650",
    "end": "864230"
  },
  {
    "text": "these you know GT CAS how how was the best match between them how do they best",
    "start": "864230",
    "end": "869330"
  },
  {
    "text": "align and it provides mechanisms for scoring those and finding perhaps multiple best matches if they exist and",
    "start": "869330",
    "end": "874970"
  },
  {
    "text": "you can kind of see it will go into the algorithm in in more detail but you can see their face these arrows and the basic idea is you fill up this matrix",
    "start": "874970",
    "end": "881330"
  },
  {
    "text": "with scores and the scores are based on how good the match has been so far you find the biggest one and then you backtrack through those arrows and that",
    "start": "881330",
    "end": "887480"
  },
  {
    "text": "gives you the best alignment between the two strings so their idea and the one that I stole is to say well I'm not",
    "start": "887480",
    "end": "894830"
  },
  {
    "text": "gonna worry about nucleic acids I'm gonna worry about source code I'm gonna take the the source code file and I'm gonna take your anchor I'm gonna find",
    "start": "894830",
    "end": "900890"
  },
  {
    "text": "where that anchor best matches the change source code and then update it automatically if the score is good",
    "start": "900890",
    "end": "906410"
  },
  {
    "text": "enough to do so that's a bit of open open discussion how best to do that that's the fundamental idea you compare",
    "start": "906410",
    "end": "913280"
  },
  {
    "text": "your your anchor you have a snapshot of what it looked like or what some range looked like find where that range best matches the change source code realign",
    "start": "913280",
    "end": "920090"
  },
  {
    "text": "the anchor reset it and now your anchor is following your source code as it changes and I mean spoiler alert it",
    "start": "920090",
    "end": "925400"
  },
  {
    "text": "works actually surprisingly well for as little work as I've been able to invest into it it actually and will if we have",
    "start": "925400",
    "end": "930890"
  },
  {
    "text": "time we'll do a demo it's works so much shockingly well in many cases although",
    "start": "930890",
    "end": "937190"
  },
  {
    "text": "there's lots of work to understand the best way to score the best way to have reversible anchor movements and things",
    "start": "937190",
    "end": "943700"
  },
  {
    "text": "like that's a lot of open questions so here we get into the the computer",
    "start": "943700",
    "end": "950120"
  },
  {
    "text": "science II stuff the stuff that I thought was interesting to dive into so data structures that the data structures here actually very straightforward we",
    "start": "950120",
    "end": "957710"
  },
  {
    "start": "956000",
    "end": "1066000"
  },
  {
    "text": "have what's called the context which you've already explored a bit so the topic is the text that you are anchored",
    "start": "957710",
    "end": "963410"
  },
  {
    "text": "to the stuff you're referring to the stuff you're trying to associate metadata with you have some offset where",
    "start": "963410",
    "end": "969560"
  },
  {
    "text": "did that exist in the file when I first read it so was it you know the 10 character 10 bytes into the file or ten",
    "start": "969560",
    "end": "975770"
  },
  {
    "text": "characters appending on how we cast that after remember that and I'll go back we",
    "start": "975770",
    "end": "983210"
  },
  {
    "text": "have to remember this so that I can later on look at my anchor and say does it match what's still in the file if I didn't know the offset of where I",
    "start": "983210",
    "end": "989750"
  },
  {
    "text": "expected the anchor to me there's no way I could look at the file and say yeah the file is absolutely change it could be that the stuff I'm anchoring is move",
    "start": "989750",
    "end": "995330"
  },
  {
    "text": "but not changing any other way so I need to know if the offset has been been modified because of course also the text",
    "start": "995330",
    "end": "1001510"
  },
  {
    "text": "is anchored here could show up several times in the code so I need to know where it applies the most so the topic a",
    "start": "1001510",
    "end": "1007690"
  },
  {
    "text": "string offset a number and some amount of text for and after the topic and",
    "start": "1007690",
    "end": "1014830"
  },
  {
    "text": "those are there's a nominal width associated with those I might say I want you know 100 characters before 100",
    "start": "1014830",
    "end": "1020050"
  },
  {
    "text": "characters after the topic but I may not have that many characters to work with so these may not be as big as the nominal width so we store the nominal",
    "start": "1020050",
    "end": "1026380"
  },
  {
    "text": "width as well so that we can propagate that later when we move anchors around so here's a bit more rust code this is",
    "start": "1026380",
    "end": "1034510"
  },
  {
    "text": "this is this is fairly meta maybe maybe recursive is better because this is a rust implementation of the tool that",
    "start": "1034510",
    "end": "1041110"
  },
  {
    "text": "does this work but how do we what does an anchor look like sort of graphically the topic is some bit of text the before",
    "start": "1041110",
    "end": "1048250"
  },
  {
    "text": "part that's that's hard to see that but the before part is here all the way it back to this e and the after bit is all",
    "start": "1048250",
    "end": "1054580"
  },
  {
    "text": "the way through here nothing nothing mind-blowing there and the offset so",
    "start": "1054580",
    "end": "1060010"
  },
  {
    "text": "that's that's the maybe the core data structure to this entire thing we call that a context layered above that is",
    "start": "1060010",
    "end": "1066790"
  },
  {
    "start": "1066000",
    "end": "1117000"
  },
  {
    "text": "what we called an anchor an anchor contains I'm sorry yes the offsets is just the number of I",
    "start": "1066790",
    "end": "1075760"
  },
  {
    "text": "think we're using code points right now the number of code points into the file where that this starts yeah so that so",
    "start": "1075760",
    "end": "1085270"
  },
  {
    "text": "that say see I added ten lines here just something else some includes or something like that this gets bumped down I need to know",
    "start": "1085270",
    "end": "1091450"
  },
  {
    "text": "where to look for this when I want to see does the anchor still match the source code yeah yes I was this is an",
    "start": "1091450",
    "end": "1105730"
  },
  {
    "text": "old version of the code yeah and well actually if we get to the demo we'll see an evolution of action this bit of code yep but very good yeah I went through",
    "start": "1105730",
    "end": "1112390"
  },
  {
    "text": "some gyrations of the best way to to model this stuff right so an anchor then",
    "start": "1112390",
    "end": "1120070"
  },
  {
    "start": "1117000",
    "end": "1168000"
  },
  {
    "text": "contains a context it's it's it's an ml file really so the context says you know what am I looking at in this file what",
    "start": "1120070",
    "end": "1125890"
  },
  {
    "text": "is the file name itself what's the encoding of the file I need to know that because we have to actually read that file and then some arbitrary",
    "start": "1125890",
    "end": "1132550"
  },
  {
    "text": "yamo metadata and I I will dab it maybe maybe metadata should just be a string",
    "start": "1132550",
    "end": "1138400"
  },
  {
    "text": "but I decided no I want to make it yeah mol or Tamil or something that's I have some notion of its of its nature so that",
    "start": "1138400",
    "end": "1144760"
  },
  {
    "text": "I can present to minimum information about it so I just I stuck with the animal because it was easy to work with in rust and and in Python for that",
    "start": "1144760",
    "end": "1152440"
  },
  {
    "text": "matter and so yeah there's some arbitrary yellow blob down here which is the data associated with that bit of",
    "start": "1152440",
    "end": "1158080"
  },
  {
    "text": "code that is the basic those two contexts and anchor are the basic data structures we work with and it you know",
    "start": "1158080",
    "end": "1165640"
  },
  {
    "text": "there's there's nothing revolutionary about those there's there's nothing magic about those the real magic of this comes in the algorithms so we talked a",
    "start": "1165640",
    "end": "1172420"
  },
  {
    "start": "1168000",
    "end": "1257000"
  },
  {
    "text": "bit about smith-waterman so it comes from genomics it's for aligning nucleic",
    "start": "1172420",
    "end": "1179080"
  },
  {
    "text": "acid sequences and what's interesting is because this is used in a pretty broad",
    "start": "1179080",
    "end": "1186010"
  },
  {
    "text": "spectrum of research and Industry there's been a lot of work done on this algorithm itself and they're actually",
    "start": "1186010",
    "end": "1191530"
  },
  {
    "text": "like there's hardware implementations of smith-waterman and people put a lot of effort into making very fast implementations of it which is something",
    "start": "1191530",
    "end": "1197620"
  },
  {
    "text": "I should probably take advantage of instead of using a homegrown one but we could make this tool pretty fast I think because a lot of thought has gone into",
    "start": "1197620",
    "end": "1203470"
  },
  {
    "text": "how to run this so it finds all potentially optimal alignments we're all equally",
    "start": "1203470",
    "end": "1210160"
  },
  {
    "text": "optimal alignments there may be six ways my anchor matches the new updated code",
    "start": "1210160",
    "end": "1216300"
  },
  {
    "text": "that are all equally good in some sense and this is this is a bit of a problem how do I choose between those if I get",
    "start": "1216300",
    "end": "1222700"
  },
  {
    "text": "that money back typically that doesn't actually happen and I think currently I'm just kind of punting on that and picking the first but some thought needs",
    "start": "1222700",
    "end": "1228850"
  },
  {
    "text": "to go into that you can apply you can give it a scoring function and a gap penalty function basically saying you",
    "start": "1228850",
    "end": "1234970"
  },
  {
    "text": "know if if I'm marching down the two strings and they match is the scores big and if I see a discontinuity in the",
    "start": "1234970",
    "end": "1240850"
  },
  {
    "text": "strings what's the penalty for a discontinuity and this it's essentially the sum of these scores and gaps that",
    "start": "1240850",
    "end": "1246700"
  },
  {
    "text": "gives us the ultimate score those the cells we were filling in with numbers and then if we want to find the optimal",
    "start": "1246700",
    "end": "1252460"
  },
  {
    "text": "alignment once we've made all the scores we backtrack through and we'll see a small example of that I think very soon",
    "start": "1252460",
    "end": "1259540"
  },
  {
    "start": "1257000",
    "end": "1571000"
  },
  {
    "text": "well the fundamental idea the fundamental algorithmic idea is for each pair of input elements so for each each",
    "start": "1259540",
    "end": "1266200"
  },
  {
    "text": "nucleotide pair I the score is the maximum of the I like this word afferent",
    "start": "1266200",
    "end": "1272200"
  },
  {
    "text": "alignment score plus so the afferent alignments are those that have already been calculated before essentially the",
    "start": "1272200",
    "end": "1277720"
  },
  {
    "text": "upper left left and top scores plus a scoring function if we have a continuous",
    "start": "1277720",
    "end": "1284320"
  },
  {
    "text": "alignment you have to memorize all this stuff it's just interesting a gap penalty if there's a discontinuity I think I have more on this yes and then",
    "start": "1284320",
    "end": "1291370"
  },
  {
    "text": "all maximal scores represent equally optimal alignment so what that means is it for a given cell I may have several",
    "start": "1291370",
    "end": "1297220"
  },
  {
    "text": "arrows coming out of it or going into it depending on how you think about it representing a potential backtrack from",
    "start": "1297220",
    "end": "1302710"
  },
  {
    "text": "that point and this is how we end up with multiple possible optimal solutions to the problem of alignment right and",
    "start": "1302710",
    "end": "1310690"
  },
  {
    "text": "then yeah the alignments are so we once we've done all the scoring we find the cells that have the maximum value all of",
    "start": "1310690",
    "end": "1316060"
  },
  {
    "text": "them all of them that share the maximum value we do the backtracking through those collect all the back tracks and those become the possible new alignments",
    "start": "1316060",
    "end": "1322240"
  },
  {
    "text": "for the nucleic acids or the source code so what does that look like more graphically I find I'm very visual when",
    "start": "1322240",
    "end": "1329560"
  },
  {
    "text": "it comes to these kinds of algorithms all kinds of algorithms actually so let's take G ACC G and GCC I think I",
    "start": "1329560",
    "end": "1335920"
  },
  {
    "text": "stole these from a article so the first thing we do is construct this scoring matrix and you",
    "start": "1335920",
    "end": "1341660"
  },
  {
    "text": "can see across the top one of our genes I guess it's called and the other one is here we want to see how do they align",
    "start": "1341660",
    "end": "1348290"
  },
  {
    "text": "you can look at that and have a pretty good intuitive sense of how they're going to align right you can see that you know they both start with G okay",
    "start": "1348290",
    "end": "1354830"
  },
  {
    "text": "that's a good start and then we have an A here it's not here that's not so great that's a discontinuity but then CCA CCG",
    "start": "1354830",
    "end": "1362060"
  },
  {
    "text": "so intuitively we can say okay the G is gonna line with that G the two seeds are going to line with the two CS and we're",
    "start": "1362060",
    "end": "1367130"
  },
  {
    "text": "gonna see this continuity at a and maybe at the end with the G and you can I'm assuming we all kind of can see that in",
    "start": "1367130",
    "end": "1373610"
  },
  {
    "text": "fact that's exactly what comes out of running the algorithm so we initialize a score and you can see we have this sort",
    "start": "1373610",
    "end": "1379160"
  },
  {
    "text": "of empty column an empty row those are all zeros because we're essentially working in this order and the score here",
    "start": "1379160",
    "end": "1387080"
  },
  {
    "text": "depends on all the neighbors at the left top and diagonal there to kind of work",
    "start": "1387080",
    "end": "1392870"
  },
  {
    "text": "through it hard to parallel eyes for that reason right so the score here is",
    "start": "1392870",
    "end": "1400690"
  },
  {
    "text": "the score here plus a the score function",
    "start": "1400690",
    "end": "1406210"
  },
  {
    "text": "or the score here minus the gap penalty or the score here minus the gap penalty or zero which ever one is biggest that's",
    "start": "1406210",
    "end": "1413600"
  },
  {
    "text": "what's saying right here and the score function I use currently all this is very configurable is very simple that if",
    "start": "1413600",
    "end": "1419690"
  },
  {
    "text": "there's a match so if G matches G you get three points and if C doesn't match a you get minus three points that's the",
    "start": "1419690",
    "end": "1425630"
  },
  {
    "text": "score function and the gap penalty is always minus two these are areas you know choosing these algorithms is something that needs a I think quite a",
    "start": "1425630",
    "end": "1431690"
  },
  {
    "text": "bit of thought this is these are some of the major tuning knobs on how this algorithm works but these seem to work",
    "start": "1431690",
    "end": "1437060"
  },
  {
    "text": "well enough for for now so the score here is three because G matches G 0 plus",
    "start": "1437060",
    "end": "1444020"
  },
  {
    "text": "3 is 3 fine no problem we'll remember these back pointers here and then I fill in a few more I see I calculate 1 I",
    "start": "1444020",
    "end": "1450860"
  },
  {
    "text": "calculate 0 that I'm just doing this for every IJ in the matrix if I fill that",
    "start": "1450860",
    "end": "1458450"
  },
  {
    "text": "whole thing in this is what I get ok that's kind of cool got a graph you",
    "start": "1458450",
    "end": "1463520"
  },
  {
    "text": "can something with that we see the maximum value here is 7 right it's the",
    "start": "1463520",
    "end": "1468830"
  },
  {
    "text": "only 7 in the matrix but there's no guarantee there could be multiple sevens and that would be where we started all of our backtracking but",
    "start": "1468830",
    "end": "1474440"
  },
  {
    "text": "for here we only have to start backtracking from one place and we're just going to follow the arrows back to zero that gives us our backtrack yeah we",
    "start": "1474440",
    "end": "1484400"
  },
  {
    "text": "don't include the yeah we don't include the zero because obviously that doesn't match a nucleotide or a matching of any sort and we can you can see from that",
    "start": "1484400",
    "end": "1490970"
  },
  {
    "text": "path that we've we found that path we're talking about at the beginning G maps to G then there's this a it's a queen oh",
    "start": "1490970",
    "end": "1498260"
  },
  {
    "text": "it's a discontinuity because it doesn't move at a at a diagonal it moves across here and then we have a diagonal down",
    "start": "1498260",
    "end": "1503960"
  },
  {
    "text": "here representing continuous matching that's what diagonals represent in these back traces and that gives us an",
    "start": "1503960",
    "end": "1509540"
  },
  {
    "text": "alignment of G ACC mapping to G discontinuity see see that's the in a",
    "start": "1509540",
    "end": "1516350"
  },
  {
    "text": "nutshell and this quite a smallest interesting example that's how the algorithm works so there any questions",
    "start": "1516350",
    "end": "1521630"
  },
  {
    "text": "about that you had your hand first and I'll get to you oh the the G you mean",
    "start": "1521630",
    "end": "1534040"
  },
  {
    "text": "right so the the definition of the algorithm is I find the maximum value and start from there so it leaves that",
    "start": "1534040",
    "end": "1540230"
  },
  {
    "text": "out because it considers that not part of the match maybe that's a problem but",
    "start": "1540230",
    "end": "1547130"
  },
  {
    "text": "this is the strict reading of the smith-waterman algorithm says to work this way different scoring functions",
    "start": "1547130",
    "end": "1553549"
  },
  {
    "text": "might somehow include G maybe if the score function didn't have a negative component to it that might show up for",
    "start": "1553549",
    "end": "1558710"
  },
  {
    "text": "example yeah anyhow so you can imagine applying that",
    "start": "1558710",
    "end": "1564770"
  },
  {
    "text": "to two source code and you have the the idea so what was your question oh okay yeah so given that if I want to",
    "start": "1564770",
    "end": "1575750"
  },
  {
    "start": "1571000",
    "end": "1651000"
  },
  {
    "text": "update an anchor remember an anchor remembers the the the actual text that's being referenced text before and text",
    "start": "1575750",
    "end": "1583669"
  },
  {
    "text": "after and an offset into the file I take",
    "start": "1583669",
    "end": "1588850"
  },
  {
    "text": "the context that is the the the topic before and after and I align it with the",
    "start": "1588850",
    "end": "1594290"
  },
  {
    "text": "brand-new source code so I detect that the source code has changed because I can see that my anchor no longer matches what it what's in the file so I know I",
    "start": "1594290",
    "end": "1600620"
  },
  {
    "text": "need to make an update and that that grace not showing up is it so I align my text with the new source code that gives",
    "start": "1600620",
    "end": "1607610"
  },
  {
    "text": "me one of those back tracks we saw a second ago within that match I find just",
    "start": "1607610",
    "end": "1613730"
  },
  {
    "text": "the portion that applies to the topic I can do that pretty easily because the back track associates both the context",
    "start": "1613730",
    "end": "1619100"
  },
  {
    "text": "and the source code itself I then just create essentially a brand new anchor with that topic and its new offset and I",
    "start": "1619100",
    "end": "1626720"
  },
  {
    "text": "replace the old anchor with the new one and I just use the same mechanism I would use for creating a brand new",
    "start": "1626720",
    "end": "1631850"
  },
  {
    "text": "anchor in the first place so it's pretty straightforward update operation but it explains why we need all the information that we need in the anchor and the",
    "start": "1631850",
    "end": "1638570"
  },
  {
    "text": "context right okay so that's a quick description of how it all works we've",
    "start": "1638570",
    "end": "1645380"
  },
  {
    "text": "implemented this well before I move on if there any questions about that guys",
    "start": "1645380",
    "end": "1650450"
  },
  {
    "text": "are smart there's nothing to nothing to ask about there so we've written we I've written up this implemented this in two",
    "start": "1650450",
    "end": "1658820"
  },
  {
    "start": "1651000",
    "end": "1765000"
  },
  {
    "text": "languages initially I implemented it in Python because that's what I know best that's my my day to day work and that",
    "start": "1658820",
    "end": "1665630"
  },
  {
    "text": "was very straightforward fundamentally but for multiple reasons that we'll get",
    "start": "1665630",
    "end": "1672350"
  },
  {
    "text": "into I thought maybe rust would be a good answer to implementing this you can",
    "start": "1672350",
    "end": "1677690"
  },
  {
    "text": "imagine perhaps some of the reasons I might have chosen a language besides Python for doing something that is",
    "start": "1677690",
    "end": "1682900"
  },
  {
    "text": "somewhat numerically intensive right and I wanted to learn Russ it's the cool new",
    "start": "1682900",
    "end": "1688820"
  },
  {
    "text": "thing and I'm tired of C++ so I didn't go back to C++ so the tool implements a",
    "start": "1688820",
    "end": "1695650"
  },
  {
    "text": "it draws a lot of inspiration from get as do a lot of tools these days you have your project route here you might have a",
    "start": "1695650",
    "end": "1701510"
  },
  {
    "text": "dot get directory you have a dot spore directory that's not spore directories or all the metadata lives a bunch of files and you have all your rest of your",
    "start": "1701510",
    "end": "1708800"
  },
  {
    "text": "project here so what's in the dots poor directory so it's being a Norwegian",
    "start": "1708800",
    "end": "1714320"
  },
  {
    "text": "conference so this is pro tip right I'm American obviously a native English",
    "start": "1714320",
    "end": "1720050"
  },
  {
    "text": "speaker but although all the project names in English were taken up so when I had to name a new project I'd pick something from Norwegian I live in egged",
    "start": "1720050",
    "end": "1726590"
  },
  {
    "text": "also I can steal steal from Norwegian so spore for track right I thought that was kind of clever I'm doing that for years",
    "start": "1726590",
    "end": "1733310"
  },
  {
    "text": "it's great so okay inside the dot sport directory I just have a bunch of you know",
    "start": "1733310",
    "end": "1739010"
  },
  {
    "text": "autogenerated UUID file names with the mo files containing all the information for each of the anchors and then inside",
    "start": "1739010",
    "end": "1746030"
  },
  {
    "text": "any one of those is just Gamal what's the path to the file relative to the parent of dots for the encoding the",
    "start": "1746030",
    "end": "1752870"
  },
  {
    "text": "metadata you know don't mutate and where and this is what a context looks like in any Amal okay",
    "start": "1752870",
    "end": "1759560"
  },
  {
    "text": "nothing shocking it's a very straightforward intentionally kind of dumb easy implementation okay there's a",
    "start": "1759560",
    "end": "1767810"
  },
  {
    "start": "1765000",
    "end": "1785000"
  },
  {
    "text": "command-line interface again sort of inspired by the sub command style you",
    "start": "1767810",
    "end": "1773450"
  },
  {
    "text": "know you can initialize directories you can add or sorry initialize repos add anchors lists some details disks status",
    "start": "1773450",
    "end": "1779120"
  },
  {
    "text": "updates etc the update one is the most interesting it's the one that realigns things so given a longer time span I",
    "start": "1779120",
    "end": "1787400"
  },
  {
    "start": "1785000",
    "end": "1795000"
  },
  {
    "text": "would immediately do the demo now but I want to go through the rest of my slides and get to some other bits so I think",
    "start": "1787400",
    "end": "1795380"
  },
  {
    "start": "1795000",
    "end": "1814000"
  },
  {
    "text": "we'll have time for a quick demo at least there is plenty of work to do on this tool as I mentioned I mean I can",
    "start": "1795380",
    "end": "1801620"
  },
  {
    "text": "show you that it works for a certain degree of work but it's never been used on a multi-million line codebase that's",
    "start": "1801620",
    "end": "1807890"
  },
  {
    "text": "got a lot of churn in it it's really only been applied to very small things you know in my my little sphere of",
    "start": "1807890",
    "end": "1813680"
  },
  {
    "text": "influence one thing that would be great that I miss right now is IDE integration",
    "start": "1813680",
    "end": "1819860"
  },
  {
    "start": "1814000",
    "end": "1871000"
  },
  {
    "text": "so I use code right now for most of my looks to my work and this is a mock-up of what I you know I would imagine it might look like I could turn on you know",
    "start": "1819860",
    "end": "1827600"
  },
  {
    "text": "spore mode and it would say Oh in this file you've got you know this tagged and this is the metadata you've got associated with it do you want to modify",
    "start": "1827600",
    "end": "1834080"
  },
  {
    "text": "that you might have six or seven tags in there there are some problems I mean",
    "start": "1834080",
    "end": "1839840"
  },
  {
    "text": "some issues we'd have to work around what if this is has two pieces of metadata associated with it you know they show up here kind of stacked maybe",
    "start": "1839840",
    "end": "1846470"
  },
  {
    "text": "so I don't know so if anybody is eager to write plug-ins for vs code which is",
    "start": "1846470",
    "end": "1852020"
  },
  {
    "text": "not that not a heart of a problem in my experience this is something that might be low-hanging fruit and interesting to",
    "start": "1852020",
    "end": "1858560"
  },
  {
    "text": "work on but I don't think the integration needs to be all that complex this is about it can I see the metadata",
    "start": "1858560",
    "end": "1864380"
  },
  {
    "text": "can I modify it can I delete it can I add new anchors I think that's the extent of what I'm thinking about right",
    "start": "1864380",
    "end": "1870260"
  },
  {
    "text": "now anchoring directories this is something I've given very little",
    "start": "1870260",
    "end": "1877260"
  },
  {
    "start": "1871000",
    "end": "2086000"
  },
  {
    "text": "thought to but came up in a discussion with the developer of another mutation testing tool he said you know there are",
    "start": "1877260",
    "end": "1882960"
  },
  {
    "text": "times that I have a whole directory and I want to be able to say don't mutate anything in there we don't it's a waste",
    "start": "1882960",
    "end": "1888030"
  },
  {
    "text": "of time it's not well tested etc etc so rather than having to somehow anchor everything in all these files can I just",
    "start": "1888030",
    "end": "1893940"
  },
  {
    "text": "anchor directory I think this is not a huge problem I think I just need a new sort of style of anchor or a bit in the",
    "start": "1893940",
    "end": "1900270"
  },
  {
    "text": "anchor that says this is a directory or something along those lines and then I think it could work pretty well it's yes",
    "start": "1900270",
    "end": "1905280"
  },
  {
    "text": "oh no yeah I agree",
    "start": "1905280",
    "end": "1913650"
  },
  {
    "text": "if if some organization has made the made the decision to not test a huge",
    "start": "1913650",
    "end": "1918750"
  },
  {
    "text": "swath of their code I mean I'm not I'm not passing judgment on them one way or the other but it does happen",
    "start": "1918750",
    "end": "1924180"
  },
  {
    "text": "I mean it's simply a fact of reality it may it may just be that I'm actually",
    "start": "1924180",
    "end": "1929370"
  },
  {
    "text": "testing all my code but I know my mutation testing I really only want to run it on a small part of my project",
    "start": "1929370",
    "end": "1935550"
  },
  {
    "text": "because of the time constraints there that's another big issue in mutation testing is time it might be in practice",
    "start": "1935550",
    "end": "1954480"
  },
  {
    "text": "or to have a or maybe you have somewhere in between with like a regex glob or something saying you know matching these",
    "start": "1954480",
    "end": "1959820"
  },
  {
    "text": "Feiler I mean there's a lot of space for exploration in here I agree on a sort of the project level you you you want to",
    "start": "1959820",
    "end": "1966990"
  },
  {
    "text": "keep problems visible but I do know that people I also know how they work but",
    "start": "1966990",
    "end": "1973620"
  },
  {
    "text": "that's a good point was your hand up or you were just stretching okay yeah you still cringing a bit so",
    "start": "1973620",
    "end": "1981380"
  },
  {
    "text": "yes yeah yeah",
    "start": "1989599",
    "end": "1999619"
  },
  {
    "text": "right I mean this is you're right this",
    "start": "2005730",
    "end": "2014590"
  },
  {
    "text": "is again an organizational sort of project level problem we lose sight of the things we can't see so how do I mean how do I maintain disability fortunately",
    "start": "2014590",
    "end": "2023500"
  },
  {
    "text": "I can I can kind of shrug it off and say this is not a problem with this technique I'm talking about it's a problem with ignoring tests right no",
    "start": "2023500",
    "end": "2030279"
  },
  {
    "text": "matter how I choose to ignore tests you know people do it all the time they want to get things to green so they just comment out some tests it's the same",
    "start": "2030279",
    "end": "2036399"
  },
  {
    "text": "thing to me at least this just gives you a another tool for ignoring your work so",
    "start": "2036399",
    "end": "2046138"
  },
  {
    "text": "yeah we could build we could build policies and protocols around it we could have Jenkins do things where they",
    "start": "2059669",
    "end": "2065200"
  },
  {
    "text": "you know it turns off Spore maybe for you know once a week to see what happens lots of things we could consider or",
    "start": "2065200",
    "end": "2070839"
  },
  {
    "text": "maybe your IDE could have a little badge saying you have six anchors in this file you know maybe you want to look at them or something like that again",
    "start": "2070839",
    "end": "2078669"
  },
  {
    "text": "there are lots of lots of scope for interesting work in this in this problem I have just the very rough core of it",
    "start": "2078669",
    "end": "2085419"
  },
  {
    "text": "working right now this one is a real nice to have and it's not just forget",
    "start": "2085419",
    "end": "2092408"
  },
  {
    "start": "2086000",
    "end": "2118000"
  },
  {
    "text": "but any anything that renames a file fundamentally is going to break Spore right now because for uses file name",
    "start": "2092409",
    "end": "2097480"
  },
  {
    "text": "based so some of you may been wondering how we deal this we don't deal with this right now you have to know to do it and",
    "start": "2097480",
    "end": "2104230"
  },
  {
    "text": "this is a this is an open hole but I imagine that git has some hook system so for that's especially I could arrange",
    "start": "2104230",
    "end": "2111339"
  },
  {
    "text": "something that updates anchors you can envision engineering any number of fraught solutions to this problem but it",
    "start": "2111339",
    "end": "2116560"
  },
  {
    "text": "is a known issue and quite a bit more maybe less less pressing I should find a",
    "start": "2116560",
    "end": "2124420"
  },
  {
    "start": "2118000",
    "end": "2189000"
  },
  {
    "text": "third-party smith-waterman algorithm and use that I have sight I have a handwritten one that was fun to write but it's probably not as efficient as it",
    "start": "2124420",
    "end": "2129550"
  },
  {
    "text": "could be especially cuz I don't really know rust that well either I'm just kind of Bank doubts encode alternative",
    "start": "2129550",
    "end": "2135700"
  },
  {
    "text": "tokenization this is an area where I think I differ from the original paper they were tokenizing their source code",
    "start": "2135700",
    "end": "2141430"
  },
  {
    "text": "on words I believe in symbols I suppose our tokens lexical tokens where eyes I'm",
    "start": "2141430",
    "end": "2148569"
  },
  {
    "text": "working at the character level so I say that yeah I'm matching character character I think they were matching",
    "start": "2148569",
    "end": "2153579"
  },
  {
    "text": "essentially the word to word when they did their matching their way is probably faster but I think mine is more robust",
    "start": "2153579",
    "end": "2159549"
  },
  {
    "text": "against simple renaming x' if I have a and identifiers in my program and I had",
    "start": "2159549",
    "end": "2164739"
  },
  {
    "text": "an underscore in the middle of it I'm pretty robust against that but there their algorithm might say no those are totally two different things",
    "start": "2164739",
    "end": "2170920"
  },
  {
    "text": "so that's the space for exploration it's fortunately pretty easy to to explore and there could be you know hybrid",
    "start": "2170920",
    "end": "2177700"
  },
  {
    "text": "tokenization maybe I match at the word level and then then I do some kind of what's the levenshtein distance on those",
    "start": "2177700",
    "end": "2184839"
  },
  {
    "text": "matches they are they kind of close even if they're not exactly the same there's all sorts of space a broad spectrum I've",
    "start": "2184839",
    "end": "2191109"
  },
  {
    "start": "2189000",
    "end": "2540000"
  },
  {
    "text": "talked about this exploring scoring functions or I think that's one of the major knobs in the system function",
    "start": "2191109",
    "end": "2196839"
  },
  {
    "text": "ensembles maybe I don't have one scoring function I have several scoring functions that work together I mean obviously that's just a sort of",
    "start": "2196839",
    "end": "2203160"
  },
  {
    "text": "extrapolation of one scoring function but we currently don't support anything like that I could America don't even",
    "start": "2203160",
    "end": "2208749"
  },
  {
    "text": "imagine a plug-in based system where you can provide arbitrary scoring functions via plugins or via some kind of configuration storing anchor history I",
    "start": "2208749",
    "end": "2217509"
  },
  {
    "text": "don't remember what motivated me to add this bullet point but it's kind of interesting can I see how the anchor has",
    "start": "2217509",
    "end": "2223180"
  },
  {
    "text": "evolved over time maybe you just get that through git or your revision",
    "start": "2223180",
    "end": "2228579"
  },
  {
    "text": "control system perhaps but maybe there's a reason to have it as a first order thing that that Spore works with match",
    "start": "2228579",
    "end": "2236499"
  },
  {
    "text": "quality warnings you can get so you have to decide given the scoring matrix find",
    "start": "2236499",
    "end": "2242859"
  },
  {
    "text": "the maximum score is that score high enough to count as a match that I trust if it's really high probably okay you",
    "start": "2242859",
    "end": "2248950"
  },
  {
    "text": "trust it I don't know what really high means right now if it's zero or negative clearly I don't want to trust that but",
    "start": "2248950",
    "end": "2254680"
  },
  {
    "text": "what if it's like in a gray zone should I warn users yeah I found a match but you need to look at this you know maybe",
    "start": "2254680",
    "end": "2260950"
  },
  {
    "text": "the ID a little red box pops up and says you need to look at this match because I don't entirely trust it",
    "start": "2260950",
    "end": "2266310"
  },
  {
    "text": "right the most interesting thing that came up in discussing this is semantics",
    "start": "2266310",
    "end": "2271750"
  },
  {
    "text": "angers can i anchor a function can i anchor a class can i anchor the block of",
    "start": "2271750",
    "end": "2279100"
  },
  {
    "text": "a for-loop something like that sure right yeah we can certainly do that",
    "start": "2279100",
    "end": "2284500"
  },
  {
    "text": "we have all sorts of tools at our disposal for understanding the shape of code the problem I face with that is",
    "start": "2284500",
    "end": "2290080"
  },
  {
    "text": "that you then have a language specific aspect to sports we're currently is language agnostic it doesn't care about",
    "start": "2290080",
    "end": "2295930"
  },
  {
    "text": "what its anchoring could be a text document markdown source code whatever but if we have semantic anchors we have",
    "start": "2295930",
    "end": "2302470"
  },
  {
    "text": "to say oh this is a C++ file and you know you're looking for the template function named foo right and that's the",
    "start": "2302470",
    "end": "2308860"
  },
  {
    "text": "thing I'm anchoring so that sounds really powerful but it comes with a whole other boat of you know buttload of complexity so it's requires some thought",
    "start": "2308860",
    "end": "2315520"
  },
  {
    "text": "and it might be nice to be able to have again some point of inflection in the implementation this is how you can use",
    "start": "2315520",
    "end": "2320650"
  },
  {
    "text": "semantic anchors you can use text anchors you can use whatever kind of anchors you want and we identify where that that customization phases but I",
    "start": "2320650",
    "end": "2327280"
  },
  {
    "text": "haven't spent much time on it yes right",
    "start": "2327280",
    "end": "2331410"
  },
  {
    "text": "it is it is similar to patch yes yeah",
    "start": "2349320",
    "end": "2361180"
  },
  {
    "text": "there's a reason but it's not a great one it's going I didn't think about it at first you're not the first person to suggest this and I think it's a good",
    "start": "2361180",
    "end": "2366670"
  },
  {
    "text": "idea to at least explore the possibility of yeah using the patch format instead of what were you in here I don't know",
    "start": "2366670",
    "end": "2374560"
  },
  {
    "text": "exactly what we would lose or gain by that but it seems like a it hasn't it",
    "start": "2374560",
    "end": "2379600"
  },
  {
    "text": "has the resonance of being a good idea",
    "start": "2379600",
    "end": "2383250"
  },
  {
    "text": "yeah that could work and we'd like to do some experiments to see if they give the",
    "start": "2394390",
    "end": "2400850"
  },
  {
    "text": "same or similar results over time it it may be that there's a real good synergy there but it's just another one he's",
    "start": "2400850",
    "end": "2406970"
  },
  {
    "text": "areas that I haven't had time to poke at and it would simplify things vastly I",
    "start": "2406970",
    "end": "2412370"
  },
  {
    "text": "mean that that would be a big engineering win right so I I don't know",
    "start": "2412370",
    "end": "2426350"
  },
  {
    "text": "enough about patch to know if there's a fine-grained patch or something like that so ok ok yeah ok then and and",
    "start": "2426350",
    "end": "2443450"
  },
  {
    "text": "actually that's come up as well can people anchor a lense of like iam binary",
    "start": "2443450",
    "end": "2448520"
  },
  {
    "text": "data files and stuff like that oil companies have these just lying around gigabytes terabytes of these awful",
    "start": "2448520",
    "end": "2454340"
  },
  {
    "text": "binary files if you want to know can they attach data to it right so all good",
    "start": "2454340",
    "end": "2462680"
  },
  {
    "text": "ideas and if you have energy and time up yes right ok that would be really",
    "start": "2462680",
    "end": "2487070"
  },
  {
    "text": "interesting I mean the thing that scares me about it I think it's logically the right way to go but it's the work of",
    "start": "2487070",
    "end": "2492290"
  },
  {
    "text": "maintaining than multiple language support which maybe it's not that hard of a problem",
    "start": "2492290",
    "end": "2498730"
  },
  {
    "text": "yeah okay okay yeah yeah well I mean I'd",
    "start": "2503099",
    "end": "2527980"
  },
  {
    "text": "be willing to bend things to use somebody else's format if it did the heavy lifting for me um yeah okay so you",
    "start": "2527980",
    "end": "2536259"
  },
  {
    "text": "guys are give me a lot to think about and hopefully I find some time to do these things one of the big changes that",
    "start": "2536259",
    "end": "2543099"
  },
  {
    "start": "2540000",
    "end": "2552000"
  },
  {
    "text": "occurred in the development of this project we move from Python to rest so in a conference like this where we're",
    "start": "2543099",
    "end": "2548170"
  },
  {
    "text": "very much about C++ and kind of you know machine level languages and stuff maybe I talk about rust is worth having the",
    "start": "2548170",
    "end": "2554109"
  },
  {
    "start": "2552000",
    "end": "2578000"
  },
  {
    "text": "main reason was speed okay Python is a slow startup relatively so startup compared to something written in rust or",
    "start": "2554109",
    "end": "2559690"
  },
  {
    "text": "C++ for example and and plus we're running algorithms like smith-waterman which just take time by their nature",
    "start": "2559690",
    "end": "2564789"
  },
  {
    "text": "they are you know in by in complexity so I wanted things to be super fast so that",
    "start": "2564789",
    "end": "2569880"
  },
  {
    "text": "was the main motivation for switching to another language wasn't the main",
    "start": "2569880",
    "end": "2575440"
  },
  {
    "text": "motivation for choosing rust and that's worked out pretty well I was curious right Russ is new it's",
    "start": "2575440",
    "end": "2582730"
  },
  {
    "text": "shiny despite its name it's very shiny and it's cool it's especially an interesting language if you spent no",
    "start": "2582730",
    "end": "2587739"
  },
  {
    "text": "time with it I suggest you know looking into it and it's kind of familiarizing yourself with what it's trying to do it",
    "start": "2587739",
    "end": "2592869"
  },
  {
    "text": "has some neat goals some neat design decisions that I find very comforting",
    "start": "2592869",
    "end": "2599529"
  },
  {
    "text": "coming from languages like Haskell which I've used a bit or elm where you have a lot of safety built into the way the language is built Russ is kind of pulled",
    "start": "2599529",
    "end": "2606249"
  },
  {
    "text": "those in and kind of married them with C++ a bit a bit with languages more in",
    "start": "2606249",
    "end": "2611380"
  },
  {
    "text": "that vein and it's a neat set of decisions and trade-offs it's a bit of a learning curve I'm still in the middle",
    "start": "2611380",
    "end": "2616779"
  },
  {
    "start": "2612000",
    "end": "2636000"
  },
  {
    "text": "of this learning curve I don't program rust every day and so I'm still wrapping my head around the way to design things",
    "start": "2616779",
    "end": "2622809"
  },
  {
    "text": "the way to expose abstractions and work with generics and so forth in the language it's a side note this is",
    "start": "2622809",
    "end": "2629230"
  },
  {
    "text": "somebody's job to say stand in the corner put wires in your head and look dumb while I take pictures so be",
    "start": "2629230",
    "end": "2634329"
  },
  {
    "text": "thankful every day the Europe program right it's been a very positive experience I liked the experience of",
    "start": "2634329",
    "end": "2639720"
  },
  {
    "start": "2636000",
    "end": "2719000"
  },
  {
    "text": "working with the language it has very nice tooling so vs code has some good plugins I am I don't know about IntelliJ",
    "start": "2639720",
    "end": "2646690"
  },
  {
    "text": "if I'm sure he has something and and there's I'm sure Emacs has good support for it has it has this nice command line",
    "start": "2646690",
    "end": "2651940"
  },
  {
    "text": "based tooling to do compilations and built-in stuff so it's all very easy to integrate into your tool systems it's a",
    "start": "2651940",
    "end": "2657790"
  },
  {
    "text": "very fast development cycle I can make changes and quickly see the results without having to jump through too many",
    "start": "2657790",
    "end": "2663100"
  },
  {
    "text": "complicated hoops very fast execution I mean just not quite eyeballing but",
    "start": "2663100",
    "end": "2669490"
  },
  {
    "text": "comparing it to the Python implementation it's about 10 times faster that's what I would say that's I would wave my hands and say that about Python for Python versus C++ Python",
    "start": "2669490",
    "end": "2676510"
  },
  {
    "text": "versus Java about 10 times faster I find it very maintainable compared to my",
    "start": "2676510",
    "end": "2682720"
  },
  {
    "text": "experience with admittedly older versions of C++ but I spent you know 15 years programming C++ and so I have some",
    "start": "2682720",
    "end": "2688720"
  },
  {
    "text": "sense of what a pain it can be and this feels somehow better in the",
    "start": "2688720",
    "end": "2694570"
  },
  {
    "text": "maintainability end of things that's coming from the gut I can't apply a lot of logic to that",
    "start": "2694570",
    "end": "2701170"
  },
  {
    "text": "explanation it feels very robust as well then this is nice to get these two together well to be fast maintainable",
    "start": "2701170",
    "end": "2706840"
  },
  {
    "text": "and robust my program has never crashed I've never had a null pointer because I can't have no pointers in rust you can",
    "start": "2706840",
    "end": "2713020"
  },
  {
    "text": "but you really have to try hard to get them the natural way to write rust prevents your program falling over so",
    "start": "2713020",
    "end": "2721020"
  },
  {
    "start": "2719000",
    "end": "2759000"
  },
  {
    "text": "it's a trade-off do I have to choose between cake and the Apple I mean I'm glad I made the decision to switch to",
    "start": "2721020",
    "end": "2726640"
  },
  {
    "text": "rust in this case it's fulfilled its goal of being fast and it's you know scratch my itch of curiosity and so",
    "start": "2726640",
    "end": "2732400"
  },
  {
    "text": "forth so I recommend that you look into it if you're at all interested in these kinds of languages you may not ever use",
    "start": "2732400",
    "end": "2737440"
  },
  {
    "text": "it but it's interesting to see what people are thinking about when they design these new languages it's",
    "start": "2737440",
    "end": "2742720"
  },
  {
    "text": "different enough from C++ and Java and c-sharp and so forth to make you smarter",
    "start": "2742720",
    "end": "2747730"
  },
  {
    "text": "right it's the Paul Graham called it the Python paradox just thinking about other languages and working in a bit you know",
    "start": "2747730",
    "end": "2753640"
  },
  {
    "text": "it makes you smarter in the sense we are five minutes away from the end that's",
    "start": "2753640",
    "end": "2759460"
  },
  {
    "start": "2759000",
    "end": "2763000"
  },
  {
    "text": "all the slides so I can do a quick quick demo perhaps or if you guys want to",
    "start": "2759460",
    "end": "2766120"
  },
  {
    "start": "2763000",
    "end": "2785000"
  },
  {
    "text": "stick around you're welcome to do that as well so I think I first need to",
    "start": "2766120",
    "end": "2771390"
  },
  {
    "text": "now that's not what I meant switch displays",
    "start": "2771570",
    "end": "2777960"
  },
  {
    "text": "so let's mirror the displays okay so now I'll bring up code that's way too small",
    "start": "2783640",
    "end": "2792480"
  },
  {
    "text": "is that okay that font size I'll get rid of some of this cruft here okay okay so",
    "start": "2792480",
    "end": "2803440"
  },
  {
    "text": "to orient you a bit we're in we're in a directory we're in the live demo",
    "start": "2803440",
    "end": "2809530"
  },
  {
    "text": "directory that's where this terminal is running right now I hope that there's enough contrast there to see way this is",
    "start": "2809530",
    "end": "2816490"
  },
  {
    "text": "set up so I've got this directory called history which contains snapshots of what a particular file looked like over time I just grabbed him out of git and stored",
    "start": "2816490",
    "end": "2822010"
  },
  {
    "text": "them here we're gonna kind of step through we're gonna pretend to edit this file by placing new versions over it and in the using sport to keep it um an",
    "start": "2822010",
    "end": "2828640"
  },
  {
    "text": "anchor aligned with it so this is anchored RS that's the one we're gonna work with so let me first copy history",
    "start": "2828640",
    "end": "2835230"
  },
  {
    "text": "0-0 what's going on here zero one okay",
    "start": "2835230",
    "end": "2844890"
  },
  {
    "text": "okay well I think this anchor is in the right form already so anchor is the implementation of",
    "start": "2844890",
    "end": "2850360"
  },
  {
    "start": "2847000",
    "end": "3313000"
  },
  {
    "text": "anchor in rust for spore itself and you can see this is the the old-style implementation with vectors of strings",
    "start": "2850360",
    "end": "2856420"
  },
  {
    "text": "and we're going to evolve away from that so the first thing I need to do is well",
    "start": "2856420",
    "end": "2861550"
  },
  {
    "text": "normally if I had installed this normally I would say sport in it but since I'm working within a Russ project I can use cargo run and that stands for",
    "start": "2861550",
    "end": "2869860"
  },
  {
    "text": "for right now and an enable see if things need to be get built and then execute the command and we see we should",
    "start": "2869860",
    "end": "2876520"
  },
  {
    "text": "see not oh yeah a dot spore directory and it is thrillingly full of nothing",
    "start": "2876520",
    "end": "2882670"
  },
  {
    "text": "there's nothing in it right now we have no anchors so the first thing I need to do is look up the command I'm supposed",
    "start": "2882670",
    "end": "2889150"
  },
  {
    "text": "to run yeah I need to create an anchor currently the way to create an anchor is",
    "start": "2889150",
    "end": "2896170"
  },
  {
    "text": "I echo in some legitimate stringify yeah mole here into the add command so add",
    "start": "2896170",
    "end": "2903280"
  },
  {
    "text": "- anchor RS at offset 46 length 20 with ten characters before and after so I've",
    "start": "2903280",
    "end": "2909010"
  },
  {
    "text": "described an anchor there so I do that I should get excellent this new file here",
    "start": "2909010",
    "end": "2916860"
  },
  {
    "text": "right so it said yeah I'm looking at NCAR RS it's utf-8 meta data is the",
    "start": "2916860",
    "end": "2923290"
  },
  {
    "text": "amazing metadata we've attached to it and you can see it's anchoring this bit for vex string so let me go back and",
    "start": "2923290",
    "end": "2929500"
  },
  {
    "text": "look at anchored RS it's anchoring this bit here alright and we can see context",
    "start": "2929500",
    "end": "2937630"
  },
  {
    "text": "and line come after it yeah next comes before and new line line right there",
    "start": "2937630",
    "end": "2944110"
  },
  {
    "text": "okay so create an anchor that's great I can do things like you know cargo runs",
    "start": "2944110",
    "end": "2950590"
  },
  {
    "text": "status basically asking are my anchors up-to-date do they seem to be out of date with the source code and this is",
    "start": "2950590",
    "end": "2955810"
  },
  {
    "text": "saying everything looks fine so let's go ahead and copy edit our anchor RS so I'm",
    "start": "2955810",
    "end": "2963100"
  },
  {
    "text": "going to copy version 1 and anchor RS has changed because I've added some",
    "start": "2963100",
    "end": "2969400"
  },
  {
    "text": "usings in here I should have had this up so you can see those but you can see the struct itself hasn't really changed much",
    "start": "2969400",
    "end": "2975400"
  },
  {
    "text": "I think we're about to get booted so if I say cargo runs status now it's gonna say ah yeah your anchor blahdy blahdy",
    "start": "2975400",
    "end": "2983020"
  },
  {
    "text": "blah is out of date here the files changed you have to do something about it so let's go ahead and bring up the",
    "start": "2983020",
    "end": "2990130"
  },
  {
    "text": "anchor here and I'm gonna just do a well actually we can do cargo run diff that's another thing we can do anything",
    "start": "2990130",
    "end": "2996250"
  },
  {
    "text": "can we oh yes we can do it on you can",
    "start": "2996250",
    "end": "3002100"
  },
  {
    "text": "see our anchors and I can say cargo run diff on six five five and it will give",
    "start": "3002100",
    "end": "3007380"
  },
  {
    "text": "me add if this is a it's a useless stuff at this point because the files changed quite a bit so if I say now cargo run",
    "start": "3007380",
    "end": "3012660"
  },
  {
    "text": "update this is going to take the anchor try to match it back to the source code and then update the anchor in that file",
    "start": "3012660",
    "end": "3018810"
  },
  {
    "text": "they're updated in place effectively so I run that see boom all that's really changed is the offsets been updated to",
    "start": "3018810",
    "end": "3025110"
  },
  {
    "text": "194 okay so as a very minimum this demonstrates the basic idea of what",
    "start": "3025110",
    "end": "3032220"
  },
  {
    "text": "Spore is trying to do so if I if I go through a couple more edit cycles copy history so just but we",
    "start": "3032220",
    "end": "3041190"
  },
  {
    "text": "can watch this file as we edit it nope",
    "start": "3041190",
    "end": "3046700"
  },
  {
    "text": "we see a little bit of stuff change but not much so I'm just gonna car to run",
    "start": "3046700",
    "end": "3053369"
  },
  {
    "text": "update and then let's copy when we get to final five something interesting happens I think it's interesting so I'm",
    "start": "3053369",
    "end": "3060119"
  },
  {
    "text": "gonna plow through these updates go to version 4 you can see things are kind of",
    "start": "3060119",
    "end": "3066779"
  },
  {
    "text": "gyrating down here kind of out of the scope of the anchor so there's no this is a really easy problem for score to",
    "start": "3066779",
    "end": "3072480"
  },
  {
    "text": "solve now I'm gonna copy version 5 over and I think this is where we do it really substantial change right so this",
    "start": "3072480",
    "end": "3081900"
  },
  {
    "text": "struct went from containing vex of strings and so forth to tweak substantially different right that's a you know it's a it's a it's not a huge",
    "start": "3081900",
    "end": "3090299"
  },
  {
    "text": "change but it is a substantial change to do that struct I look at my thing here",
    "start": "3090299",
    "end": "3098190"
  },
  {
    "text": "it's still anchoring the old version the before vex string so if I now run cargo",
    "start": "3098190",
    "end": "3103739"
  },
  {
    "text": "updates don't fall over see great it has",
    "start": "3103739",
    "end": "3110999"
  },
  {
    "text": "actually found that change is still anchoring what to my mind is what it should still be anchoring you might",
    "start": "3110999",
    "end": "3116730"
  },
  {
    "text": "bicker and saying that I should be anchoring something else but I think that update is conceptually correct that's why I expected it to do and",
    "start": "3116730",
    "end": "3122819"
  },
  {
    "text": "that's the spirit of the tool yeah",
    "start": "3122819",
    "end": "3126890"
  },
  {
    "text": "all right so yeah wind changes to occur in cargo says I mean the sport says yeah things are out of date that's a good",
    "start": "3144390",
    "end": "3150520"
  },
  {
    "text": "signal to revisit your anchors that's a really good point yeah and you can even",
    "start": "3150520",
    "end": "3156490"
  },
  {
    "text": "imagine having some kind of you know Spore you know lint tool that says things are things change a little bit",
    "start": "3156490",
    "end": "3162130"
  },
  {
    "text": "you're probably fine or things changed a lot you should look at it yeah yeah",
    "start": "3162130",
    "end": "3178510"
  },
  {
    "text": "that's a really good point yeah we have a lot of information at that point to to leverage and communicate back so we're a",
    "start": "3178510",
    "end": "3184599"
  },
  {
    "text": "few minutes over time but there's not much more the demo than that so um are there any questions before we close up",
    "start": "3184599",
    "end": "3191040"
  },
  {
    "text": "yeah yeah let me bring that command back",
    "start": "3191040",
    "end": "3200410"
  },
  {
    "text": "or I can uh yes and this is the command I was yeah sure everybody can see that",
    "start": "3200410",
    "end": "3205900"
  },
  {
    "text": "but you know echoing some string into the command is adds to this file at this",
    "start": "3205900",
    "end": "3211150"
  },
  {
    "text": "offset for this many characters and that's that's the location and size of the topic and then ten characters before",
    "start": "3211150",
    "end": "3216880"
  },
  {
    "text": "and after as the before and after part of the context well know that was why I",
    "start": "3216880",
    "end": "3226599"
  },
  {
    "text": "had a slide about we don't have that support yet I would love that kind of support it would be great this is obviously this is not optimal but it's",
    "start": "3226599",
    "end": "3233740"
  },
  {
    "text": "you know the tools are there if anybody's feeling energetic yeah yeah",
    "start": "3233740",
    "end": "3245579"
  },
  {
    "text": "yes okay okay okay this is this would be",
    "start": "3249640",
    "end": "3271369"
  },
  {
    "text": "great because it might also solve that problem of file moves and things like that if I can get that information from get telling me this is what's happened",
    "start": "3271369",
    "end": "3276500"
  },
  {
    "text": "then that solves a lot of problems I'm I'm a for the same reasons I'm a bit",
    "start": "3276500",
    "end": "3282740"
  },
  {
    "text": "hesitant about semantic anchors I'm also a bit hesitant about making this to get specific as well so I'd lied I mean I",
    "start": "3282740",
    "end": "3288230"
  },
  {
    "text": "like the idea but I want to I want to solve it in a with an abstraction at you",
    "start": "3288230",
    "end": "3293240"
  },
  {
    "text": "know and all problems are solvable with abstractions so and it's coming up with that I think it'll be the hard work well",
    "start": "3293240",
    "end": "3298400"
  },
  {
    "text": "that might be hard too I don't know okay well let's close it up I guess it's",
    "start": "3298400",
    "end": "3303530"
  },
  {
    "text": "close to the lunch or something like that now so thanks for coming to the talk this is more than I expected and I'll see you around the conference",
    "start": "3303530",
    "end": "3311109"
  },
  {
    "text": "[Applause]",
    "start": "3311530",
    "end": "3314899"
  }
]