[
  {
    "text": "initiating system",
    "start": "4359",
    "end": "7400"
  },
  {
    "text": "one system one [Music]",
    "start": "14759",
    "end": "26329"
  },
  {
    "text": "loaded [Music]",
    "start": "28960",
    "end": "54540"
  },
  {
    "text": "that's what I do when I'm bored",
    "start": "54680",
    "end": "60540"
  },
  {
    "text": "[Applause] [Music]",
    "start": "60540",
    "end": "88840"
  },
  {
    "text": "the [Music] [Applause]",
    "start": "88840",
    "end": "97460"
  },
  {
    "text": "[Music] [Applause] [Music]",
    "start": "97460",
    "end": "102840"
  },
  {
    "text": "[Applause] [Music] [Applause]",
    "start": "102840",
    "end": "108960"
  },
  {
    "text": "[Music]",
    "start": "108960",
    "end": "116489"
  },
  {
    "text": "for [Music]",
    "start": "118840",
    "end": "125519"
  },
  {
    "text": "yeah that's your cute a clap you got it all right so since it's right after",
    "start": "127599",
    "end": "133360"
  },
  {
    "text": "lunch I wanted to do something that you most most of you probably won't like stand",
    "start": "133360",
    "end": "140000"
  },
  {
    "text": "up and I'm out you're out all right when",
    "start": "140000",
    "end": "145040"
  },
  {
    "text": "I say three I want you to to yell in your native language I love Copenhagen",
    "start": "145040",
    "end": "153400"
  },
  {
    "text": "no I love Copenhagen developers Festival",
    "start": "153400",
    "end": "158799"
  },
  {
    "text": "ready no one two",
    "start": "158879",
    "end": "164519"
  },
  {
    "text": "3 you didn't put your hands up all right do it again one two",
    "start": "169560",
    "end": "177799"
  },
  {
    "text": "three okay whatever you said that's",
    "start": "178760",
    "end": "185000"
  },
  {
    "text": "right all right now that we've shaking off the the lunchtime Asian stuff right uh",
    "start": "185000",
    "end": "194959"
  },
  {
    "text": "I'm David McCarter welcome to rock your code code and app performance for microsoft.net and I'm really excited to",
    "start": "194959",
    "end": "201640"
  },
  {
    "text": "do this here for the first time because I'm showing I'm going to show you all the differences between performance of",
    "start": "201640",
    "end": "206680"
  },
  {
    "text": "done at 6 and eight okay and this is the first first time I'm really talking about it in public I've been saving this",
    "start": "206680",
    "end": "212480"
  },
  {
    "text": "up for months and uh you guys will be the first ones to see it and I'm even",
    "start": "212480",
    "end": "217640"
  },
  {
    "text": "amazed about some of the things I'm seeing atet 8et 8 has dramatically sped up in most areas I'll show you at the",
    "start": "217640",
    "end": "224720"
  },
  {
    "text": "very end what hasn't but I'll show you all the stuff that has well not all the stuff but as much as I can cram into an",
    "start": "224720",
    "end": "233280"
  },
  {
    "text": "hour all right I'm David mcarter I'm Microsoft MVP I've been doing. net",
    "start": "234439",
    "end": "239680"
  },
  {
    "text": "before it's even was released I'm also a C Corner MVP feed writer uh architect",
    "start": "239680",
    "end": "246959"
  },
  {
    "text": "cold quality whatever there's all my handles uh that'll be at the end too if you didn't grab it at the beginning if",
    "start": "246959",
    "end": "252879"
  },
  {
    "text": "you want to contact me later all right this talk is based off of that",
    "start": "252879",
    "end": "259320"
  },
  {
    "text": "book uh called Rock your code code and that performance for microsoft.net just like this talk okay so if you didn't",
    "start": "259320",
    "end": "266720"
  },
  {
    "text": "hear everything today you can get the you can get book I also have two other books out uh a coding centers book and",
    "start": "266720",
    "end": "273880"
  },
  {
    "text": "also one I released two months ago which is surviving the technal interview so if you're looking for a job you need that",
    "start": "273880",
    "end": "280120"
  },
  {
    "text": "book okay uh because uh because I'll",
    "start": "280120",
    "end": "285280"
  },
  {
    "text": "tell you why because you all suck at interviewing so that's that's why the book is there all right all",
    "start": "285280",
    "end": "292680"
  },
  {
    "text": "right I'm a little nervous for some reason maybe it's my oh I want to how many people actually live in Denmark",
    "start": "292680",
    "end": "300320"
  },
  {
    "text": "wow awesome I've been here since Sunday and I really like this place uh all right so",
    "start": "300320",
    "end": "308479"
  },
  {
    "text": "today we're going to talk about uh why we're here then some general tips really quick just to get you started and some",
    "start": "308479",
    "end": "315120"
  },
  {
    "text": "of the practices I do then we'll talk about some of the big things uh strings and Collections and then Source",
    "start": "315120",
    "end": "321120"
  },
  {
    "text": "generators how many have played with Source generators yet a few okay and",
    "start": "321120",
    "end": "326919"
  },
  {
    "text": "then we're out of here in uh beard time oh it's not five is it",
    "start": "326919",
    "end": "334199"
  },
  {
    "text": "sorry it's five o'clock somewhere yeah all",
    "start": "334199",
    "end": "339280"
  },
  {
    "text": "right I did photography for her a few years back awesome awesome",
    "start": "339280",
    "end": "347240"
  },
  {
    "text": "guitarist all right so the goal of this session is to",
    "start": "350720",
    "end": "357560"
  },
  {
    "text": "quickly get some performance increases in your code as soon as you go home on Monday or tomorrow or whatever okay uh",
    "start": "357560",
    "end": "365160"
  },
  {
    "text": "there was a workshop here for two days that really drilled down for your specific problems on eeking out that",
    "start": "365160",
    "end": "372840"
  },
  {
    "text": "last little performance but this is going to be more top level and I'll I'll",
    "start": "372840",
    "end": "378199"
  },
  {
    "text": "tell you why in a second because these These are basically the exact same things I do every company I go work at",
    "start": "378199",
    "end": "384880"
  },
  {
    "text": "because they all suffer from memory problems and performance problems every single problem project I'm hired on to",
    "start": "384880",
    "end": "391199"
  },
  {
    "text": "okay and so these are all those things uh that I've been finding for many many",
    "start": "391199",
    "end": "396840"
  },
  {
    "text": "many years that people keep doing wrong and I don't know why",
    "start": "396840",
    "end": "402280"
  },
  {
    "text": "so um you know code performance is really really important for everything",
    "start": "402280",
    "end": "407960"
  },
  {
    "text": "these days but especially for cloud because you know we we all know that we get charged Pro you how long that code",
    "start": "407960",
    "end": "414840"
  },
  {
    "text": "is executing right so if you can cut it by half that's half your cost right and",
    "start": "414840",
    "end": "420960"
  },
  {
    "text": "companies you know like Facebook you know hire people right out of college for 250 Grand uh 250k US dollar a month",
    "start": "420960",
    "end": "430080"
  },
  {
    "text": "just to eek out a million dollars worth of performance because it's worth it to them okay so I'm not going to teach you",
    "start": "430080",
    "end": "436599"
  },
  {
    "text": "how to e out a million dollars worth but enough to get your apps a lot better and",
    "start": "436599",
    "end": "441840"
  },
  {
    "text": "both are very important for now and the future a lot of things people don't think about is the future right and if",
    "start": "441840",
    "end": "449120"
  },
  {
    "text": "you code stuff right in the beginning then things will be a lot easier to change and memory affects performance",
    "start": "449120",
    "end": "456560"
  },
  {
    "text": "and performance affects memory so I have a whole separate talk about memory that I'm not doing here uh but if you go",
    "start": "456560",
    "end": "463879"
  },
  {
    "text": "Google it or Bing it or whatever you'll be able to find it uh because they both go hand in hand and really when I go",
    "start": "463879",
    "end": "470199"
  },
  {
    "text": "into a brand new project the Asian food's coming out of my mouth sorry um when I go to a brand",
    "start": "470199",
    "end": "477960"
  },
  {
    "text": "new project the first thing I do is fix all their memory problems because every 100% of the projects I work on have",
    "start": "477960",
    "end": "485159"
  },
  {
    "text": "memory issues and I'm not talking about old guy memory issues I'm talking about cold Cod memory",
    "start": "485159",
    "end": "492960"
  },
  {
    "text": "issues so the the way I got really interested in this is a company not far from where",
    "start": "492960",
    "end": "499560"
  },
  {
    "text": "I live hired me uh because they only had two super busy traffic days a year the",
    "start": "499560",
    "end": "506039"
  },
  {
    "text": "rest of the rest of the year is pretty flat and and um and their biggest",
    "start": "506039",
    "end": "511120"
  },
  {
    "text": "traffic days were Black Friday in America which is the day after our Thanksgiving right and then Cyber Monday",
    "start": "511120",
    "end": "517959"
  },
  {
    "text": "which is the Monday after that okay and that's when they were spiking to 20,000",
    "start": "517959",
    "end": "523760"
  },
  {
    "text": "transactions per second average uh sorry and spikes to 50,000 transactions per",
    "start": "523760",
    "end": "530000"
  },
  {
    "text": "second only those two days the rest of the the year was pretty flat okay and we had one customer who was",
    "start": "530000",
    "end": "537920"
  },
  {
    "text": "Nike and don't get me talk to me afterwards why they did this but they put the Nike the entire Nike catalog in",
    "start": "537920",
    "end": "547720"
  },
  {
    "text": "memory 200 gigs which took two hours to reboot that machine yeah don't get me started on why",
    "start": "547720",
    "end": "555399"
  },
  {
    "text": "they they chose to do that but they did but one of the things that I did there was not only did I get them through",
    "start": "555399",
    "end": "561959"
  },
  {
    "text": "Black Friday and Cyber Monday with no problems which they were having every single year before me um but I was",
    "start": "561959",
    "end": "569279"
  },
  {
    "text": "allowing them to start moving their stuff to the cloud because 200 gabt of memory is not going to move to the cloud",
    "start": "569279",
    "end": "576200"
  },
  {
    "text": "right so that's why they hired me and I was successful in that",
    "start": "576200",
    "end": "581680"
  },
  {
    "text": "company all right so code performance here's are just a quick easy tips these are things",
    "start": "581680",
    "end": "588640"
  },
  {
    "text": "I always look at when I'm looking at uh projects and files uh to make sure",
    "start": "588640",
    "end": "593680"
  },
  {
    "text": "things are cleaned up I like to keep things nice and clean and organized the first thing is remove all all the usings",
    "start": "593680",
    "end": "599839"
  },
  {
    "text": "in your at the top of your code files right and I'll tell you why in a second",
    "start": "599839",
    "end": "605320"
  },
  {
    "text": "but you need to remove those because that can actually sorry hurt",
    "start": "605320",
    "end": "611200"
  },
  {
    "text": "performance okay and the second thing you need to do after you do that I think it's control K D or something like that",
    "start": "611200",
    "end": "618640"
  },
  {
    "text": "cleans them up if you want to do the uh the the switch um but I usually just use",
    "start": "618640",
    "end": "625160"
  },
  {
    "text": "code rush because when I save the file code Rush will clean it up all four and I don't have to worry about it and then",
    "start": "625160",
    "end": "632480"
  },
  {
    "text": "the next thing you need to do right after that is to get rid of all the references in your projects you're not",
    "start": "632480",
    "end": "637600"
  },
  {
    "text": "using anymore right and inevitably there's going to be some especially when",
    "start": "637600",
    "end": "643279"
  },
  {
    "text": "during development you're going to add things you're going to forget to remove it you go to add things forget to remove it and pretty soon you have a big",
    "start": "643279",
    "end": "650160"
  },
  {
    "text": "bloated you know uh deployment and you don't really need it okay so first clean",
    "start": "650160",
    "end": "655959"
  },
  {
    "text": "up all your usings and then clean up all your references okay and you'll be a much better uh for at least that the way",
    "start": "655959",
    "end": "664000"
  },
  {
    "text": "that goes and that's the way that screen looks like oops sorry so one thing in all my",
    "start": "664000",
    "end": "670880"
  },
  {
    "text": "sessions is everything you're about to see is real I don't make this stuff up because I don't code like this anymore",
    "start": "670880",
    "end": "677639"
  },
  {
    "text": "uh and all of this is real from uh past projects I've been on I've changed a little bit so uh I",
    "start": "677639",
    "end": "685760"
  },
  {
    "text": "don't get in trouble sued um I still see people doing",
    "start": "685760",
    "end": "692200"
  },
  {
    "text": "this right they're initializing variables to their default State stop it",
    "start": "692200",
    "end": "699519"
  },
  {
    "text": "okay you're hurting your performance not a huge but it adds up when you're doing 50,000 transactions for second right um",
    "start": "699519",
    "end": "708279"
  },
  {
    "text": "so stop doing that I don't know why people do that um because those that",
    "start": "708279",
    "end": "713399"
  },
  {
    "text": "that's the default state of those two types right the default of an integer is zero the default of a a reference type",
    "start": "713399",
    "end": "720320"
  },
  {
    "text": "is null okay so stop doing that uh only set",
    "start": "720320",
    "end": "726160"
  },
  {
    "text": "it to something different if it's not the default okay and again you're going to I'm not going",
    "start": "726160",
    "end": "732160"
  },
  {
    "text": "to show you the performance stuff on this because it's not a lot but it does add up okay so make sure you go through",
    "start": "732160",
    "end": "737680"
  },
  {
    "text": "your code there's actually code editor stuff um I'm sorry editor config uh settings you can do to help you uh",
    "start": "737680",
    "end": "744199"
  },
  {
    "text": "prevent that I'll give you those at the end all right so let's talk about the",
    "start": "744199",
    "end": "750240"
  },
  {
    "text": "first big thing strings right strings is always a memory issue most of the time",
    "start": "750240",
    "end": "756600"
  },
  {
    "text": "especially if you don't do it right because why why is strings a",
    "start": "756600",
    "end": "763519"
  },
  {
    "text": "problem immutable right so even though you're concatenating two strings you're",
    "start": "763519",
    "end": "768959"
  },
  {
    "text": "really you're hurting performance when you're doing that so detecting empty strings this is",
    "start": "768959",
    "end": "776000"
  },
  {
    "text": "one thing that most UI should do especially when you know any value coming from the user is probably wrong",
    "start": "776000",
    "end": "783760"
  },
  {
    "text": "right so the first thing we do is we check to make sure there's actually something in the string because if we do",
    "start": "783760",
    "end": "789959"
  },
  {
    "text": "any method if we call any methods after that it's going to blow up on us right",
    "start": "789959",
    "end": "795040"
  },
  {
    "text": "and I still see people doing this right I this is like donet one kind",
    "start": "795040",
    "end": "802279"
  },
  {
    "text": "of coding right cut it out don't do that",
    "start": "802279",
    "end": "807760"
  },
  {
    "text": "um what you really should be doing is using isol or empty or isol or widespace if",
    "start": "807760",
    "end": "814440"
  },
  {
    "text": "you really need that that's a lot less performant okay how many people do",
    "start": "814440",
    "end": "820639"
  },
  {
    "text": "that good some hands are down I'll slap you later",
    "start": "820639",
    "end": "826399"
  },
  {
    "text": "um so make sure you always do that I'm going to show you the performance which has changed a lot between six and eight",
    "start": "826399",
    "end": "834600"
  },
  {
    "text": "so you can actually see here I've tested all kinds of different ways of doing the same thing pattern matching is actually",
    "start": "834600",
    "end": "841480"
  },
  {
    "text": "a tiny bit faster uh now than is is n or empty okay so my suggestion would be to",
    "start": "841480",
    "end": "850199"
  },
  {
    "text": "use pattern matching or is nler empty I probably will stick with his n or empty",
    "start": "850199",
    "end": "855639"
  },
  {
    "text": "because I don't know what's going to happen with those other things his n or empty has worked perfectly for a very long time okay um oh I'm sorry that's uh",
    "start": "855639",
    "end": "865320"
  },
  {
    "text": "see that's the difference between done at uh seven and uh six now look uh",
    "start": "865320",
    "end": "870839"
  },
  {
    "text": "between six and 8 yeah dramatic change isn't it so now",
    "start": "870839",
    "end": "878199"
  },
  {
    "text": "you can almost say uh you can use just about anything except for isolo white",
    "start": "878199",
    "end": "883279"
  },
  {
    "text": "space right but I like I said I'm going to stick with isol or empty because that's the way it's it's worked fine",
    "start": "883279",
    "end": "890639"
  },
  {
    "text": "since the beginning okay comparing strings so this is",
    "start": "890639",
    "end": "897040"
  },
  {
    "text": "important especially um those of you who are have programs that need to take care",
    "start": "897040",
    "end": "903959"
  },
  {
    "text": "of multiple languages in locals right so",
    "start": "903959",
    "end": "909000"
  },
  {
    "text": "uh a lot of people including that company that was doing 50,000 transactions per",
    "start": "909000",
    "end": "914920"
  },
  {
    "text": "second was comparing strings like this right they had a lowercase string and",
    "start": "914920",
    "end": "920399"
  },
  {
    "text": "they had some other string and they did it to lower and then compared it like that okay that does not work with",
    "start": "920399",
    "end": "926839"
  },
  {
    "text": "multiple languages okay to lower does not work correctly",
    "start": "926839",
    "end": "932639"
  },
  {
    "text": "okay um what I recommend now which is a",
    "start": "932639",
    "end": "939000"
  },
  {
    "text": "little bit different than the last time I did this talk is use two upper and variant okay this will take care of",
    "start": "939000",
    "end": "945440"
  },
  {
    "text": "those globalization issues and you're going to see here it's not the fastest but it's the",
    "start": "945440",
    "end": "950880"
  },
  {
    "text": "safest so you can see there to lower invariant to Upper invariant a little",
    "start": "950880",
    "end": "956199"
  },
  {
    "text": "bit slower than two upper to lower but don't use two Upp or to lower okay uh if",
    "start": "956199",
    "end": "961639"
  },
  {
    "text": "you're using multiple languages which you you will someday okay and there's their uh metrics for the rest of",
    "start": "961639",
    "end": "968800"
  },
  {
    "text": "it",
    "start": "968800",
    "end": "971800"
  },
  {
    "text": "okay string Builder who uses string Builder to concatenate strings",
    "start": "974120",
    "end": "980399"
  },
  {
    "text": "what that's it okay I'll change your mind",
    "start": "980399",
    "end": "986360"
  },
  {
    "text": "um so if you have a new string Builder before which is like half of you uh you",
    "start": "986360",
    "end": "992199"
  },
  {
    "text": "create string Builder you go through a loop you append things together and then you spit it out into a string right a",
    "start": "992199",
    "end": "998319"
  },
  {
    "text": "string Builder will always be more performant than using plus plus equals or Plus+ or whatever okay and you can",
    "start": "998319",
    "end": "1006720"
  },
  {
    "text": "see um concat and Joint actually uses underneath the covers it uses a string",
    "start": "1006720",
    "end": "1013319"
  },
  {
    "text": "Builder underneath the covers but you can see the speed difference between uh plus and plus equals right dramatic",
    "start": "1013319",
    "end": "1020959"
  },
  {
    "text": "difference right um now if we use a string",
    "start": "1020959",
    "end": "1028678"
  },
  {
    "text": "Builder there's basically the same kind of things and you can see string Builder is 21 times faster than plus equals so",
    "start": "1028679",
    "end": "1037280"
  },
  {
    "text": "the half of you that are still doing that that's what you're going to do Monday right because 21 times faster I",
    "start": "1037280",
    "end": "1044319"
  },
  {
    "text": "think is pretty awesome by doing just a little bit of extra code",
    "start": "1044319",
    "end": "1050400"
  },
  {
    "text": "okay but wait there's more I don't know if you have advertisements like that here um so",
    "start": "1055679",
    "end": "1063760"
  },
  {
    "text": "something newer for the string Builder there's an extension method that basically uh you can use string Builder",
    "start": "1063760",
    "end": "1069520"
  },
  {
    "text": "from an object pull how many people have used object pulls in net one two three",
    "start": "1069520",
    "end": "1075960"
  },
  {
    "text": "okay you're going to like this uh so with an object pull it basically pulls",
    "start": "1075960",
    "end": "1081400"
  },
  {
    "text": "these objects together so they're not being created every single time you need it right so it's really easy to use",
    "start": "1081400",
    "end": "1088559"
  },
  {
    "text": "First in a private uh field you create an object pull by using Create um a",
    "start": "1088559",
    "end": "1094720"
  },
  {
    "text": "create string Builder pool and then you get it from the pool like that and then",
    "start": "1094720",
    "end": "1101240"
  },
  {
    "text": "you use it just like the string Builder right and then when you're done you put",
    "start": "1101240",
    "end": "1106400"
  },
  {
    "text": "it back okay and because I'm really worry about uh eror you know exceptions",
    "start": "1106400",
    "end": "1113240"
  },
  {
    "text": "and things like that I I wrap it into try finally if you if you take that off it'll probably be a little bit faster uh",
    "start": "1113240",
    "end": "1120159"
  },
  {
    "text": "but I'm I like to be safer than uh cause exceptions in the program so now watch",
    "start": "1120159",
    "end": "1128720"
  },
  {
    "text": "this so a pend is 1.4 times faster than string",
    "start": "1128760",
    "end": "1136159"
  },
  {
    "text": "Builder so that's not I mean a huge amount of difference but it's still a lot better okay if you're really trying",
    "start": "1136480",
    "end": "1143520"
  },
  {
    "text": "to get that last little bit of uh uh performance out of your strings and uh",
    "start": "1143520",
    "end": "1149200"
  },
  {
    "text": "because of the object pull I've changed everywhere I use strings in my open source project called Spartan to use",
    "start": "1149200",
    "end": "1156840"
  },
  {
    "text": "object pull I don't use string builder in the traditional way anymore so if you want to go check out my repository you",
    "start": "1156840",
    "end": "1162960"
  },
  {
    "text": "can see how you see how I did thatat safy thread",
    "start": "1162960",
    "end": "1170640"
  },
  {
    "text": "safety um in regards [Music]",
    "start": "1170799",
    "end": "1176660"
  },
  {
    "text": "to no no they get in the put back it works perfectly yeah because I test all",
    "start": "1179280",
    "end": "1185120"
  },
  {
    "text": "this you know being these methods that I test uh I'll tell you what I use later you know they're hit millions of times",
    "start": "1185120",
    "end": "1191280"
  },
  {
    "text": "and that's what I how I come up with these you know benchmarks so yeah it's fine okay regular Expressions how many",
    "start": "1191280",
    "end": "1198000"
  },
  {
    "text": "people people use regular Expressions how many people like Regular",
    "start": "1198000",
    "end": "1204159"
  },
  {
    "text": "Expressions oh come on you're pulling my leg right",
    "start": "1204159",
    "end": "1209679"
  },
  {
    "text": "um so I I know a lot of people don't like using regular Expressions because",
    "start": "1209679",
    "end": "1215559"
  },
  {
    "text": "uh they're kind of a pain to come up with and uh they're a pain right and uh",
    "start": "1215559",
    "end": "1223679"
  },
  {
    "text": "I have found I'll give you a tip it's in one of my articles I I recently wrote",
    "start": "1223679",
    "end": "1228720"
  },
  {
    "text": "uh that chat GPT is really good at doing regular Expressions a lot better than me",
    "start": "1228720",
    "end": "1235120"
  },
  {
    "text": "so uh there's your tip for the day so anyway normally you use regular",
    "start": "1235120",
    "end": "1240640"
  },
  {
    "text": "expression you create the the regular expression with the pattern then you do his match or whatever else you're doing",
    "start": "1240640",
    "end": "1246799"
  },
  {
    "text": "and that's the way that's been done forever inet",
    "start": "1246799",
    "end": "1252320"
  },
  {
    "text": "right speeding up regular Expressions so now if you just you if you just move the",
    "start": "1252679",
    "end": "1260360"
  },
  {
    "text": "Declaration of that regular expression to a field a private readon field at the",
    "start": "1260360",
    "end": "1266200"
  },
  {
    "text": "top of your class and use it that way watch the uh",
    "start": "1266200",
    "end": "1272039"
  },
  {
    "text": "performance increase oh wait is that the",
    "start": "1272039",
    "end": "1278519"
  },
  {
    "text": "performance oh yeah see I forget where I put multiple things so there's eight and",
    "start": "1280360",
    "end": "1285720"
  },
  {
    "text": "six uh with the validating strings uh with contains that's the normal way of doing regular",
    "start": "1285720",
    "end": "1292840"
  },
  {
    "text": "expressions and this is the newer way of doing regular Expressions where default at least in",
    "start": "1292960",
    "end": "1299400"
  },
  {
    "text": "this uh test is 21 times faster during regular expression and zero",
    "start": "1299400",
    "end": "1307480"
  },
  {
    "text": "allocations and the other one has a lot of allocations",
    "start": "1307480",
    "end": "1313520"
  },
  {
    "text": "okay so start using it that way don't use it the old way but I I have more coming up on that",
    "start": "1313520",
    "end": "1321200"
  },
  {
    "text": "later all right any questions real",
    "start": "1322480",
    "end": "1326679"
  },
  {
    "text": "quick the what compile compile is the",
    "start": "1333080",
    "end": "1341200"
  },
  {
    "text": "slowest yes according to my Benchmark tests it's",
    "start": "1341200",
    "end": "1347200"
  },
  {
    "text": "the slowest that's why I don't talk about it yeah",
    "start": "1347200",
    "end": "1354600"
  },
  {
    "text": "huh yeah I will next I'll put it back next time but the reason I took it out is",
    "start": "1354600",
    "end": "1361080"
  },
  {
    "text": "because it skews the graph so bad that you know everything will be",
    "start": "1361080",
    "end": "1366480"
  },
  {
    "text": "this big and the compiled will be this big right",
    "start": "1366480",
    "end": "1372039"
  },
  {
    "text": "so no it's only compiling once y",
    "start": "1372880",
    "end": "1379960"
  },
  {
    "text": "if you can show me how it works better let me know yeah I don't know either okay so",
    "start": "1381120",
    "end": "1388600"
  },
  {
    "text": "collections uh you know we all use collections because that's how we use our data most of the most of these days",
    "start": "1388600",
    "end": "1395240"
  },
  {
    "text": "especially coming from a database and you can achieve a lot of of really big performance gains by doing collections",
    "start": "1395240",
    "end": "1402400"
  },
  {
    "text": "and before I forget you know the the last contract I was on when I started the company",
    "start": "1402400",
    "end": "1408840"
  },
  {
    "text": "their goal was to have 40,000 concurrent users when I started uh because they",
    "start": "1408840",
    "end": "1414440"
  },
  {
    "text": "were about to launch uh this program in uh this application in India and when I",
    "start": "1414440",
    "end": "1420120"
  },
  {
    "text": "got there they had a they could only handle a 100 concurrent users yeah uh it doesn't work does it",
    "start": "1420120",
    "end": "1428320"
  },
  {
    "text": "and so by the time I left six months later I had them up to 7,000 and they still have a ways to go",
    "start": "1428320",
    "end": "1434240"
  },
  {
    "text": "but at least I was moving them along the way and and and all these things is what",
    "start": "1434240",
    "end": "1440039"
  },
  {
    "text": "I'm going to what I did for them is what I'm about to show you so uh generating a",
    "start": "1440039",
    "end": "1446200"
  },
  {
    "text": "bite array um this is how I see most people",
    "start": "1446200",
    "end": "1451679"
  },
  {
    "text": "creating a bite array by using the random um type and just doing next bites",
    "start": "1451679",
    "end": "1457200"
  },
  {
    "text": "and creating a bite array like that actually my open source project did that until very very recently",
    "start": "1457200",
    "end": "1464080"
  },
  {
    "text": "okay don't use that anymore use random number",
    "start": "1464080",
    "end": "1469279"
  },
  {
    "text": "generator okay so create a random number generator",
    "start": "1469279",
    "end": "1474600"
  },
  {
    "text": "in a field and then use get bites just like you were before but you're just moving it up to be instead use the",
    "start": "1474600",
    "end": "1481279"
  },
  {
    "text": "random number generator okay it's much much more performant as you can",
    "start": "1481279",
    "end": "1488840"
  },
  {
    "text": "see what eight times faster and the allocations are just about identical",
    "start": "1488840",
    "end": "1494360"
  },
  {
    "text": "okay so stop using random for generating by start using a a random number",
    "start": "1494360",
    "end": "1501159"
  },
  {
    "text": "generator",
    "start": "1501159",
    "end": "1504159"
  },
  {
    "text": "okay any versus how many uses any to see if there's something in a",
    "start": "1510080",
    "end": "1515720"
  },
  {
    "text": "collection okay um so they've added a new one called exists and they both can",
    "start": "1515720",
    "end": "1523559"
  },
  {
    "text": "take predicates like you see here but look at the difference",
    "start": "1523559",
    "end": "1529679"
  },
  {
    "text": "yep so if use exist now and down at8 at least uh it's four times faster okay so",
    "start": "1531640",
    "end": "1541039"
  },
  {
    "text": "those of you using any cut it out and uh start using",
    "start": "1541039",
    "end": "1547000"
  },
  {
    "text": "exists and I've got more in that coming up in a",
    "start": "1547000",
    "end": "1551600"
  },
  {
    "text": "second iterating through a collection so forever and doet we've had",
    "start": "1553120",
    "end": "1559679"
  },
  {
    "text": "these four ways of going through a collection right four doe while and four each",
    "start": "1559679",
    "end": "1565600"
  },
  {
    "text": "right how many people use four or four each most of the",
    "start": "1565600",
    "end": "1571919"
  },
  {
    "text": "time okay you need a copy of my performance book because every uh I'll",
    "start": "1571919",
    "end": "1578399"
  },
  {
    "text": "I'll I'll it's going to come up here in a second but every collection type and every type of type operates differently",
    "start": "1578399",
    "end": "1585600"
  },
  {
    "text": "you just can't blank you can just can't do a blanket for each everywhere because you can hurt your performance doing that",
    "start": "1585600",
    "end": "1593760"
  },
  {
    "text": "okay so anyway this is four and you can see here is that down",
    "start": "1593760",
    "end": "1601200"
  },
  {
    "text": "at eight and six yeah so the last time I gave this talk",
    "start": "1601200",
    "end": "1607240"
  },
  {
    "text": "if I'm going through a collection of reference types of list uh 4 each was",
    "start": "1607240",
    "end": "1613399"
  },
  {
    "text": "the fastest for years that's why I've been telling you all to use as 4 each",
    "start": "1613399",
    "end": "1618480"
  },
  {
    "text": "right now you can see four is actually slightly faster okay so basically now do whatever",
    "start": "1618480",
    "end": "1628679"
  },
  {
    "text": "you want because dot8 has sped it up so much",
    "start": "1628679",
    "end": "1634320"
  },
  {
    "text": "is Matt's here I was hoping he was to be here uh Dada sped up so much that those",
    "start": "1634320",
    "end": "1640720"
  },
  {
    "text": "things don't really matter a ton anymore okay so go do whatever you want but I'm",
    "start": "1640720",
    "end": "1645960"
  },
  {
    "text": "probably going to still use 4 h and zero allocations which is always",
    "start": "1645960",
    "end": "1652960"
  },
  {
    "text": "good so is link really faster how many people use Link to quy their",
    "start": "1652960",
    "end": "1658399"
  },
  {
    "text": "objects okay um so I did an any and basically",
    "start": "1658399",
    "end": "1665799"
  },
  {
    "text": "reproduced it in a loop and the loop was faster than any okay so I guess my little note on",
    "start": "1665799",
    "end": "1674600"
  },
  {
    "text": "this one is you know before you just start all going using link make",
    "start": "1674600",
    "end": "1681039"
  },
  {
    "text": "sure the old way of doing it isn't faster okay so test both and see which",
    "start": "1681039",
    "end": "1687440"
  },
  {
    "text": "one is faster and use that okay I know we're all lazy CU we like",
    "start": "1687440",
    "end": "1694840"
  },
  {
    "text": "link but so here's the tip about the different collection",
    "start": "1694840",
    "end": "1701000"
  },
  {
    "text": "types so every collection type uh the performance is",
    "start": "1701000",
    "end": "1707480"
  },
  {
    "text": "based on the collection type and the object type okay if and like I said if",
    "start": "1707480",
    "end": "1712600"
  },
  {
    "text": "you get a copy on my book it's all listed in there okay whether you're using dictionary array list I I test",
    "start": "1712600",
    "end": "1720320"
  },
  {
    "text": "every single collection type that comes and done that okay and the other tip",
    "start": "1720320",
    "end": "1728960"
  },
  {
    "text": "[Music] is I forgot what it",
    "start": "1729020",
    "end": "1734039"
  },
  {
    "text": "is uh oh yeah so far the guy over there there was question me the other a couple",
    "start": "1734039",
    "end": "1740240"
  },
  {
    "text": "minutes ago uh using any of the parallel stuff is slower I have not been able to",
    "start": "1740240",
    "end": "1747559"
  },
  {
    "text": "get the parallel code to work faster than using normal code okay you're your",
    "start": "1747559",
    "end": "1753840"
  },
  {
    "text": "results May Vary and probably will but I can't get it to go faster it's actually a lot",
    "start": "1753840",
    "end": "1761200"
  },
  {
    "text": "slower all right so we're back to validating items at collection again",
    "start": "1762559",
    "end": "1768320"
  },
  {
    "text": "uh a lot of people use count or any and that one company I worked at that was doing 50,000 transactions per second",
    "start": "1768320",
    "end": "1775159"
  },
  {
    "text": "they were using any everywhere okay every single time they were testing a collection if there's something in it",
    "start": "1775159",
    "end": "1781559"
  },
  {
    "text": "they were just using any brackets that's it okay so you can use count you can use",
    "start": "1781559",
    "end": "1789760"
  },
  {
    "text": "any you can use Long Count you you can use try get non enumerated count so",
    "start": "1789760",
    "end": "1796159"
  },
  {
    "text": "there's many different ways ways of of doing the same thing at doet now so which one is faster uh",
    "start": "1796159",
    "end": "1804799"
  },
  {
    "text": "count okay so in this case at least for reference types a list of reference",
    "start": "1804799",
    "end": "1810640"
  },
  {
    "text": "types count is slightly faster actually it's about half the speed as any and",
    "start": "1810640",
    "end": "1816120"
  },
  {
    "text": "then uh Long Count is the slowest okay so if using Long Count I would recommend",
    "start": "1816120",
    "end": "1822960"
  },
  {
    "text": "uh not to do that and there's the allocations there",
    "start": "1822960",
    "end": "1828000"
  },
  {
    "text": "you can see the allocations for count is very very small compared to the other",
    "start": "1828000",
    "end": "1833398"
  },
  {
    "text": "ones all right verifying array contents",
    "start": "1834120",
    "end": "1839200"
  },
  {
    "text": "so for arrays don't use count okay uh you should use length or",
    "start": "1839200",
    "end": "1846679"
  },
  {
    "text": "something else I'll show you in a second okay um count is is uh typically been",
    "start": "1846679",
    "end": "1852559"
  },
  {
    "text": "slower with arrays okay so now if I test long l length length count any and Long",
    "start": "1852559",
    "end": "1860559"
  },
  {
    "text": "Count long length now is actually a little bit faster than",
    "start": "1860559",
    "end": "1865880"
  },
  {
    "text": "length Okay where that was swapped the last time I did this talk uh last time I did it length was",
    "start": "1865880",
    "end": "1873200"
  },
  {
    "text": "faster and long length uh was actually I think after count",
    "start": "1873200",
    "end": "1879639"
  },
  {
    "text": "okay so now you can start using I would use length or long length Okay when",
    "start": "1879639",
    "end": "1885000"
  },
  {
    "text": "you're doing arrays okay but only array okay the rest of the stuff is okay it's",
    "start": "1885000",
    "end": "1890159"
  },
  {
    "text": "just the Rays operate a little bit differently and zero",
    "start": "1890159",
    "end": "1896919"
  },
  {
    "text": "allocations all right let's talk about link um I've been using link before it's",
    "start": "1898200",
    "end": "1906320"
  },
  {
    "text": "before it came out and this is the way a lot of people still use Link by using",
    "start": "1906320",
    "end": "1912159"
  },
  {
    "text": "the uh I mean still use uh uh link by using the API okay how many people do",
    "start": "1912159",
    "end": "1918960"
  },
  {
    "text": "link like this only one two okay uh so there's kind of the",
    "start": "1918960",
    "end": "1928240"
  },
  {
    "text": "older way we've always done it but now we can use lambdas right basically the",
    "start": "1928240",
    "end": "1934919"
  },
  {
    "text": "exact same thing you can use a Lambda do first so which link call is faster do",
    "start": "1934919",
    "end": "1940799"
  },
  {
    "text": "you think do you think it's the API or the expression who who chooses",
    "start": "1940799",
    "end": "1946320"
  },
  {
    "text": "the API two all of you using the API should be",
    "start": "1946320",
    "end": "1953120"
  },
  {
    "text": "choosing it right it's actually",
    "start": "1953120",
    "end": "1961080"
  },
  {
    "text": "Lambda okay and this was actually posed to me when I was uh doing a contract at",
    "start": "1961080",
    "end": "1966799"
  },
  {
    "text": "Verizon where some developer told somebody I was mentoring he had to change all the Lambda Expressions back",
    "start": "1966799",
    "end": "1973519"
  },
  {
    "text": "to the API and he came to me and goes Dave I don't I don't want to change all that code is it really faster did a",
    "start": "1973519",
    "end": "1980519"
  },
  {
    "text": "benchmark test uh no so tell whatever lead developer you",
    "start": "1980519",
    "end": "1985919"
  },
  {
    "text": "have uh he's not",
    "start": "1985919",
    "end": "1989759"
  },
  {
    "text": "right yeah at the end hold on",
    "start": "1991559",
    "end": "1995799"
  },
  {
    "text": "SEC so finding items in D how many people use dictionaries yep a lot of people do how",
    "start": "1996760",
    "end": "2003960"
  },
  {
    "text": "many code dictionaries like that come on only some of you I thought there'd be",
    "start": "2003960",
    "end": "2011679"
  },
  {
    "text": "more all right so when you code addiction if you're looking something up in a dictionary like this this is the",
    "start": "2011679",
    "end": "2019480"
  },
  {
    "text": "safe way of doing it right first check make sure it's there and then and then get it right but you're doing a double",
    "start": "2019480",
    "end": "2026440"
  },
  {
    "text": "lookup at this point okay you're basically doing the same operation twice okay so uh cut that",
    "start": "2026440",
    "end": "2035639"
  },
  {
    "text": "out just use try get value okay most of the time at net when you see a try get",
    "start": "2035639",
    "end": "2042159"
  },
  {
    "text": "value it's going to be more performant okay um and it works the same way really",
    "start": "2042159",
    "end": "2048398"
  },
  {
    "text": "if try get value then update the value",
    "start": "2048399",
    "end": "2053679"
  },
  {
    "text": "okay but look at the speed difference try get value with uh ordinal",
    "start": "2053679",
    "end": "2061960"
  },
  {
    "text": "is fastest then try get value and then the other two are slower okay so if you",
    "start": "2061960",
    "end": "2067760"
  },
  {
    "text": "can use ordinal whether that's you know with a collection or even strings ordinal can actually speed things up",
    "start": "2067760",
    "end": "2074599"
  },
  {
    "text": "okay but again make sure you test",
    "start": "2074599",
    "end": "2078480"
  },
  {
    "text": "that all right",
    "start": "2081960",
    "end": "2085358"
  },
  {
    "text": "question",
    "start": "2095879",
    "end": "2098879"
  },
  {
    "text": "right yeah and you always have to think about what you're using it for and what kind of types you're using in that right",
    "start": "2113880",
    "end": "2120320"
  },
  {
    "text": "so yeah my blanket blanket blanket statement might not apply everywhere right that's why you need to test your",
    "start": "2120320",
    "end": "2127240"
  },
  {
    "text": "code and see which way is",
    "start": "2127240",
    "end": "2130880"
  },
  {
    "text": "better regarding uh linku expression versus Lambda so link all linku",
    "start": "2133760",
    "end": "2139200"
  },
  {
    "text": "Expressions will be uh uh turned into uh",
    "start": "2139200",
    "end": "2145160"
  },
  {
    "text": "Lambda Expressions before execution the API does yeah that is the",
    "start": "2145160",
    "end": "2150319"
  },
  {
    "text": "underlying C why it will be always faster oh yeah yeah I didn't even know that yeah see I learned something today",
    "start": "2150319",
    "end": "2157079"
  },
  {
    "text": "all right okay that's was it yeah thanks all",
    "start": "2157079",
    "end": "2163079"
  },
  {
    "text": "right so Source generators how many have used Source generators yet just a few",
    "start": "2163079",
    "end": "2171000"
  },
  {
    "text": "hopefully I'll change your mind while I'm way I'm going way too",
    "start": "2171000",
    "end": "2176200"
  },
  {
    "text": "fast you need to ask more questions uh so I've been really really",
    "start": "2176200",
    "end": "2183920"
  },
  {
    "text": "really pleased with the performance I've been seeing with sorcer inovator I want to write my own I haven't got",
    "start": "2183920",
    "end": "2189760"
  },
  {
    "text": "around to it yet because it's not the easiest thing to do um but generally at",
    "start": "2189760",
    "end": "2195480"
  },
  {
    "text": "least everything I've been able to test a source generators can dramatically speed up your code",
    "start": "2195480",
    "end": "2203560"
  },
  {
    "text": "okay",
    "start": "2203640",
    "end": "2206640"
  },
  {
    "text": "sure you tested with string um what about the new read only span Char any",
    "start": "2209920",
    "end": "2215760"
  },
  {
    "text": "test with that yes yes I have and do you know if string Builder is going to be able to create a read only span it's",
    "start": "2215760",
    "end": "2222920"
  },
  {
    "text": "going to be do what like right now it seems a bit waste like sometimes you use the string Builder and then you have to",
    "start": "2222920",
    "end": "2228440"
  },
  {
    "text": "you put two string into something which uses a read only chart why can't string",
    "start": "2228440",
    "end": "2233720"
  },
  {
    "text": "Builder just create a read only uh span of chars like so they should have a",
    "start": "2233720",
    "end": "2239000"
  },
  {
    "text": "you're asking me well I don't know if I get enough Mod Mo like momentum maybe I",
    "start": "2239000",
    "end": "2244280"
  },
  {
    "text": "we can get it done right well you know the architect of CP is here right all",
    "start": "2244280",
    "end": "2249400"
  },
  {
    "text": "right well there you go yeah I'll I'll talk to him later about that uh huh it makes sense yep it does",
    "start": "2249400",
    "end": "2259640"
  },
  {
    "text": "does um so uhet be I'm not going to this is",
    "start": "2259640",
    "end": "2265359"
  },
  {
    "text": "not a talk about Source generators uhet right now only ships with just a handful",
    "start": "2265359",
    "end": "2271640"
  },
  {
    "text": "of source generators there's a there's a GitHub page out there somewhere that l it's like almost every single one that",
    "start": "2271640",
    "end": "2278560"
  },
  {
    "text": "somebody else has created to so I'm only going to show you a few but there's a lot more out there you just got to uh",
    "start": "2278560",
    "end": "2285599"
  },
  {
    "text": "Google it or Bing it or whatever you want um or write your own",
    "start": "2285599",
    "end": "2291960"
  },
  {
    "text": "right so Source generators basically work with attributes and it looks at",
    "start": "2291960",
    "end": "2297599"
  },
  {
    "text": "your code and then preens the code for you okay and that's how you can get this",
    "start": "2297599",
    "end": "2303560"
  },
  {
    "text": "really big import performance incase sorry it's hot up here um by using Source",
    "start": "2303560",
    "end": "2312119"
  },
  {
    "text": "generators and Source generators actually started and done at six okay and they keep adding them you know with",
    "start": "2312119",
    "end": "2318720"
  },
  {
    "text": "every new version they're adding more and more uh Source generators I hope they add more I think there there's a",
    "start": "2318720",
    "end": "2324839"
  },
  {
    "text": "lot of room uh for Microsoft to add more but so far there's not a ton in the",
    "start": "2324839",
    "end": "2330240"
  },
  {
    "text": "framework itself so Jason serialization this is",
    "start": "2330240",
    "end": "2337119"
  },
  {
    "text": "something that we do constantly right we're always changing things in and out of Jason um going across the wire",
    "start": "2337119",
    "end": "2344480"
  },
  {
    "text": "whatever you want to do and this is a way this is in my uh uh open source project this is from my open",
    "start": "2344480",
    "end": "2351760"
  },
  {
    "text": "source project and this is how you can do uh use Source generators with a just",
    "start": "2351760",
    "end": "2357760"
  },
  {
    "text": "a single type up there at the top so you can see uh person proper Jason",
    "start": "2357760",
    "end": "2363200"
  },
  {
    "text": "serializer context and then I have one down right below that for a collection of",
    "start": "2363200",
    "end": "2368839"
  },
  {
    "text": "that same type okay because they actually act a little bit differently",
    "start": "2368839",
    "end": "2374839"
  },
  {
    "text": "okay so and that's all you have to do you just have to declare it in a public I mean a partial class that's it that's",
    "start": "2374839",
    "end": "2381640"
  },
  {
    "text": "all the code right there I wrote and you use it almost exactly the",
    "start": "2381640",
    "end": "2388880"
  },
  {
    "text": "same as the old way you can see serialization is sorry exactly the same",
    "start": "2388880",
    "end": "2394319"
  },
  {
    "text": "but deserialization is a little bit different because we're using the context down there at the end as person",
    "start": "2394319",
    "end": "2401319"
  },
  {
    "text": "proper okay and that's like I said that's what you use for the",
    "start": "2401319",
    "end": "2407560"
  },
  {
    "text": "collections and now look at the speed increase right",
    "start": "2407560",
    "end": "2413960"
  },
  {
    "text": "deserialize a lot slower than the generator and serial serialize is almost",
    "start": "2413960",
    "end": "2419599"
  },
  {
    "text": "the same so you're not getting a lot on serialization but you are getting a lot on the",
    "start": "2419599",
    "end": "2425079"
  },
  {
    "text": "deserialization thanks sense yep so I would start using that now it's",
    "start": "2425079",
    "end": "2432480"
  },
  {
    "text": "it's a little more work to set this up but it as you can see it really pays off",
    "start": "2432480",
    "end": "2437599"
  },
  {
    "text": "was that overd double the performance for D seral",
    "start": "2437599",
    "end": "2443040"
  },
  {
    "text": "station who logs in their code why isn't every hand",
    "start": "2447079",
    "end": "2455319"
  },
  {
    "text": "up um so typically this is the way we log right with the new ilogger interface",
    "start": "2455319",
    "end": "2461640"
  },
  {
    "text": "in net I'm really glad they added that um but how many people log like this",
    "start": "2461640",
    "end": "2470119"
  },
  {
    "text": "now really what else do you use",
    "start": "2470400",
    "end": "2476000"
  },
  {
    "text": "nlog well this is using Siri log or whatever underneath the covers so this is the way most people",
    "start": "2476000",
    "end": "2483720"
  },
  {
    "text": "log with I logger right they just do logger log air give it the number the exception and the message right but we",
    "start": "2483720",
    "end": "2491960"
  },
  {
    "text": "all want you know I've worked at companies where you know they they basically told me we don't do a lot of",
    "start": "2491960",
    "end": "2497599"
  },
  {
    "text": "logging because of the performance and I go well then how do you fix",
    "start": "2497599",
    "end": "2503318"
  },
  {
    "text": "stuff sometimes I can never get it through people's heads so this is how",
    "start": "2504880",
    "end": "2511400"
  },
  {
    "text": "the logger Source generator generator works I'm saying that too many times uh uh logger message is the",
    "start": "2511400",
    "end": "2519119"
  },
  {
    "text": "attribute and then you basically do the same thing except with the placeholder for the message so you can see I have a",
    "start": "2519119",
    "end": "2525480"
  },
  {
    "text": "public static partial void log error it takes ey logger it takes a message that's it",
    "start": "2525480",
    "end": "2532359"
  },
  {
    "text": "okay and then I use it pretty much this is from my open source project I have a",
    "start": "2532359",
    "end": "2537440"
  },
  {
    "text": "type in there called easy logger that uses the source generator generator underneath the covers and you can do it",
    "start": "2537440",
    "end": "2544800"
  },
  {
    "text": "like normal okay but",
    "start": "2544800",
    "end": "2549319"
  },
  {
    "text": "look what is that 11 times faster using a sourc orator gosh I've",
    "start": "2549880",
    "end": "2556920"
  },
  {
    "text": "said that word way too many times now that's dramatically faster don't you",
    "start": "2556920",
    "end": "2562960"
  },
  {
    "text": "think yeah so how many going to start using that back at work I hope",
    "start": "2562960",
    "end": "2570520"
  },
  {
    "text": "so uh yeah I wouldn't use the old way at all anymore all",
    "start": "2570520",
    "end": "2578799"
  },
  {
    "text": "right Rex now we're back to Rex okay now there is a new source generator",
    "start": "2581119",
    "end": "2588800"
  },
  {
    "text": "for RX okay and this is how I have it set up in",
    "start": "2588800",
    "end": "2594160"
  },
  {
    "text": "my open source project where I have the options um up there in the field I have",
    "start": "2594160",
    "end": "2599400"
  },
  {
    "text": "uh uh the actual pattern up there as a Rex contains word and then you just use",
    "start": "2599400",
    "end": "2605559"
  },
  {
    "text": "an attrib just like that do reject contains word that's it okay it's all you have to do to set",
    "start": "2605559",
    "end": "2613520"
  },
  {
    "text": "up the uh redj Source generator okay and the one thing I really like about the",
    "start": "2613520",
    "end": "2619119"
  },
  {
    "text": "redj source generator I I don't remember who wrote it it writes really good",
    "start": "2619119",
    "end": "2625720"
  },
  {
    "text": "intellisense and it tells you exactly how it's matching the patterns in it I",
    "start": "2625720",
    "end": "2631839"
  },
  {
    "text": "really like it but it but but what that does is that single attribute basically",
    "start": "2631839",
    "end": "2639359"
  },
  {
    "text": "creates like a couple hundred lines of code and that's what shorts rators do",
    "start": "2639359",
    "end": "2644520"
  },
  {
    "text": "they do all this stuff in advance and look contains",
    "start": "2644520",
    "end": "2651599"
  },
  {
    "text": "word is 36 times faster than normal and six times faster than using the",
    "start": "2651599",
    "end": "2657599"
  },
  {
    "text": "field okay and looking for uh replace spaces is 2.5 2.4 times faster than",
    "start": "2657599",
    "end": "2665440"
  },
  {
    "text": "normal and two times faster than the the field okay so if you are using uh",
    "start": "2665440",
    "end": "2672880"
  },
  {
    "text": "regular Expressions I really really really recommend you start using this",
    "start": "2672880",
    "end": "2679200"
  },
  {
    "text": "okay again it's a little more coding don't be afraid of coding it's okay um",
    "start": "2679200",
    "end": "2686319"
  },
  {
    "text": "but you can see the big performance increase you get from",
    "start": "2686319",
    "end": "2691160"
  },
  {
    "text": "that I like that one all right",
    "start": "2691559",
    "end": "2697960"
  },
  {
    "text": "any questions you over there no no that's",
    "start": "2705319",
    "end": "2713599"
  },
  {
    "text": "okay I'm kidding any other",
    "start": "2713599",
    "end": "2717839"
  },
  {
    "text": "questions",
    "start": "2724880",
    "end": "2727880"
  },
  {
    "text": "[Music]",
    "start": "2732980",
    "end": "2736090"
  },
  {
    "text": "um yeah yeah um I I don't know the",
    "start": "2738160",
    "end": "2743839"
  },
  {
    "text": "differences off the top of my head but me personally I usually use code I don't",
    "start": "2743839",
    "end": "2748920"
  },
  {
    "text": "use the data valid Val the the what was it called dat anot data annotations yeah",
    "start": "2748920",
    "end": "2755880"
  },
  {
    "text": "I don't use those very much I use code yep and whenever you're validating data it's going to slow things down a little",
    "start": "2755880",
    "end": "2762160"
  },
  {
    "text": "bit right it's it's a nature of the Beast you can't really change that you know so uh don't validate any more than",
    "start": "2762160",
    "end": "2769599"
  },
  {
    "text": "you need to you know and uh and uh and only",
    "start": "2769599",
    "end": "2774760"
  },
  {
    "text": "validate what you really need to validate right um but my if you look at",
    "start": "2774760",
    "end": "2780599"
  },
  {
    "text": "my open source project I validate everything except for booleans basically",
    "start": "2780599",
    "end": "2785640"
  },
  {
    "text": "right uh because uh you know we all know bad data in bad data out and once that bad",
    "start": "2785640",
    "end": "2791480"
  },
  {
    "text": "data B bad data gets into the database it's really really hard to fix right and",
    "start": "2791480",
    "end": "2798280"
  },
  {
    "text": "uh for many many many years I have an architecture that I use where I put all that validation into one assembly so it",
    "start": "2798280",
    "end": "2805480"
  },
  {
    "text": "can be used throughout servers clients whatever right I put it in one place and",
    "start": "2805480",
    "end": "2810920"
  },
  {
    "text": "basically so when I uh set up uh models right data models right I put all the",
    "start": "2810920",
    "end": "2817680"
  },
  {
    "text": "data models in their own assembly and that's the only thing in there okay",
    "start": "2817680",
    "end": "2822960"
  },
  {
    "text": "because that way that as long as you're using net everywhere you can use that on the server you can use it on the client",
    "start": "2822960",
    "end": "2829240"
  },
  {
    "text": "you can use it wherever you want right and because most people uh when they do stuff like that they put the the models",
    "start": "2829240",
    "end": "2836400"
  },
  {
    "text": "along with the data context and I've never done that because that just you're not separating it out enough and you",
    "start": "2836400",
    "end": "2843960"
  },
  {
    "text": "basically have to start uh uh rewriting your validation code everywhere right so",
    "start": "2843960",
    "end": "2850359"
  },
  {
    "text": "yeah I keep everything separate any other questions yeah I'm sorry I'm uh",
    "start": "2850359",
    "end": "2856520"
  },
  {
    "text": "returning to one of the previous uh string and uh string Builder uh have you",
    "start": "2856520",
    "end": "2863160"
  },
  {
    "text": "done uh the any measurements on interpolated strings yes um so typically interpolated",
    "start": "2863160",
    "end": "2874119"
  },
  {
    "text": "strings um I'm trying to remember my benchmarks right now uh",
    "start": "2874119",
    "end": "2882480"
  },
  {
    "text": "there so before I answer that uh uh I",
    "start": "2882880",
    "end": "2888040"
  },
  {
    "text": "don't really use interpolated strings okay um anybody guess why I don't like",
    "start": "2888040",
    "end": "2893920"
  },
  {
    "text": "interpolated strings Nobody Does anybody have a",
    "start": "2893920",
    "end": "2900160"
  },
  {
    "text": "program that works in two different spoken languages nobody",
    "start": "2900160",
    "end": "2906440"
  },
  {
    "text": "come on you're in Denmark nobody okay so here's my role",
    "start": "2906440",
    "end": "2913760"
  },
  {
    "text": "interpret related strings I only use them for error messages that's it okay because you",
    "start": "2913760",
    "end": "2919559"
  },
  {
    "text": "can't globalize those right uh right now at least last time I looked you can't",
    "start": "2919559",
    "end": "2924920"
  },
  {
    "text": "use them with resources right and anything I showed to the user is in a",
    "start": "2924920",
    "end": "2930599"
  },
  {
    "text": "resource anything okay because that way it can be easily translated",
    "start": "2930599",
    "end": "2936760"
  },
  {
    "text": "and if you come to build uh build stuff in Lithuania in a couple months I'll",
    "start": "2936760",
    "end": "2942000"
  },
  {
    "text": "show you exactly how to do that okay because I'm doing a whole workshop on globalization one of my",
    "start": "2942000",
    "end": "2948880"
  },
  {
    "text": "favorite subjects well it's not really my favorite but I never see anybody do it right yeah any other",
    "start": "2948880",
    "end": "2958359"
  },
  {
    "text": "questions Downs to a generator because for something like log error",
    "start": "2958720",
    "end": "2964520"
  },
  {
    "text": "or might as well just include that comp",
    "start": "2964520",
    "end": "2969880"
  },
  {
    "text": "always I have not found a downside to source source generators yet yeah I'm",
    "start": "2969880",
    "end": "2975839"
  },
  {
    "text": "going to tell mads to rame that because it's messing my mouth up um but now I haven't seen any",
    "start": "2975839",
    "end": "2982559"
  },
  {
    "text": "downsides it it makes your code uh creates more code uh so a bigger",
    "start": "2982559",
    "end": "2988839"
  },
  {
    "text": "deployment but that's about it yeah I don't see any downsides any other questions",
    "start": "2988839",
    "end": "2997520"
  },
  {
    "text": "yes there was just a comment that you're using interpolated strings for the error messages which is the one place you",
    "start": "2997760",
    "end": "3003480"
  },
  {
    "text": "shouldn't use it for in logs huh in I shouldn't use interpolated strings for",
    "start": "3003480",
    "end": "3009240"
  },
  {
    "text": "error messages yeah you shouldn't try doing the the you can read on it online as well they're like half your",
    "start": "3009240",
    "end": "3014559"
  },
  {
    "text": "performance on logging you should be putting it in the parameters that you're passing what you want the actual value",
    "start": "3014559",
    "end": "3020040"
  },
  {
    "text": "used to be no seriously check then it it will affect your performance even worse and",
    "start": "3020040",
    "end": "3025680"
  },
  {
    "text": "the other stuff you shown but hopefully you're not generating those error strings very much right yeah well I'm",
    "start": "3025680",
    "end": "3032440"
  },
  {
    "text": "not I'm just saying man if you want to talk at the log statistics then have a look at interpolated strings it's like",
    "start": "3032440",
    "end": "3038280"
  },
  {
    "text": "uh one of the first things like 101 don't do it h maybe Microsoft should",
    "start": "3038280",
    "end": "3044760"
  },
  {
    "text": "remove that then but you can't remove it because it's passing the string as a message but",
    "start": "3044760",
    "end": "3049839"
  },
  {
    "text": "I know I'm using it they've they've allowed you to add parameters afterwards yeah stuff that you want passed I'll",
    "start": "3049839",
    "end": "3055760"
  },
  {
    "text": "look into that but yeah anything the user cares about",
    "start": "3055760",
    "end": "3061200"
  },
  {
    "text": "should be in new resource that's my my my golden",
    "start": "3061200",
    "end": "3067720"
  },
  {
    "text": "role the way I showed you it's fine yeah it won't it won't make any difference",
    "start": "3083960",
    "end": "3089480"
  },
  {
    "text": "because they're not those variables aren't being changed right so for scalability it work",
    "start": "3089480",
    "end": "3094960"
  },
  {
    "text": "fine okay am I running low on battery I forgot to bring my",
    "start": "3094960",
    "end": "3102559"
  },
  {
    "text": "uh uh my converter so I better hurry up all",
    "start": "3102559",
    "end": "3109070"
  },
  {
    "text": "[Music]",
    "start": "3109070",
    "end": "3114359"
  },
  {
    "text": "right [Music]",
    "start": "3114359",
    "end": "3120799"
  },
  {
    "text": "sorry I had to listen to a little bit of metal uh so nearly everything is sped up",
    "start": "3120799",
    "end": "3127960"
  },
  {
    "text": "and down at eight except for",
    "start": "3127960",
    "end": "3132400"
  },
  {
    "text": "that so um I'm showing you at the very end because I'm not super worried about",
    "start": "3134160",
    "end": "3140599"
  },
  {
    "text": "this yet until they come out with the final release because things change you know between every release uh this is uh",
    "start": "3140599",
    "end": "3147119"
  },
  {
    "text": "all these benchmarks were done uh off the August",
    "start": "3147119",
    "end": "3152400"
  },
  {
    "text": "SDK okay so it'll change in the next one next month okay uh but the when I looked",
    "start": "3152400",
    "end": "3159960"
  },
  {
    "text": "at it those things are not performing as well as they used to be okay uh so watch",
    "start": "3159960",
    "end": "3166760"
  },
  {
    "text": "out for my uh blog site and now if it if those things hold true I'll be writing",
    "start": "3166760",
    "end": "3172119"
  },
  {
    "text": "blog posts about it okay to warn you",
    "start": "3172119",
    "end": "3177240"
  },
  {
    "text": "all right so the last thing is you know unless you wrote a book on performance",
    "start": "3178480",
    "end": "3185319"
  },
  {
    "text": "it's really hard to remember a lot of this stuff and you know the last version of my book I learned a lot uh just",
    "start": "3185319",
    "end": "3191680"
  },
  {
    "text": "writing uh that version of it I think it's the third version um but you might not remember all these",
    "start": "3191680",
    "end": "3199200"
  },
  {
    "text": "things I have a hard time most of the time remembering these things and I'm sure a lot of your Junior Developers",
    "start": "3199200",
    "end": "3205240"
  },
  {
    "text": "won't ever remember these things so if you want these things to be uncovered uh when you build uh put these",
    "start": "3205240",
    "end": "3213000"
  },
  {
    "text": "settings in your editor config okay the editor config that Visual Studio creates is sucks sorry uh",
    "start": "3213000",
    "end": "3222000"
  },
  {
    "text": "my editor config I think is over whoops over 2,000 lines the one that Visual",
    "start": "3222000",
    "end": "3227520"
  },
  {
    "text": "Studio creates is uh like uh 50 lines or less okay I've spent many many many many",
    "start": "3227520",
    "end": "3235640"
  },
  {
    "text": "many hours trying to scour the the web on all the settings you can put in your editor config and they're in mind so if",
    "start": "3235640",
    "end": "3242720"
  },
  {
    "text": "you go to that URL right there you can get the editor config that I use at every single project I work on okay and",
    "start": "3242720",
    "end": "3250720"
  },
  {
    "text": "I update that editor editor config every time I make a major update to my open source project which is once a quarter",
    "start": "3250720",
    "end": "3258359"
  },
  {
    "text": "okay so if you get it now make sure you check back in a quarter because I'm always changing things I change things",
    "start": "3258359",
    "end": "3264720"
  },
  {
    "text": "not only because I find things but I also change the settings based on what I see developers doing if I see developers",
    "start": "3264720",
    "end": "3272760"
  },
  {
    "text": "doing the same thing over and over again I usually turn those to errors or Warnings not suggestions or messages",
    "start": "3272760",
    "end": "3282079"
  },
  {
    "text": "okay so make sure you get that there's a uh section in my editor config that all",
    "start": "3282079",
    "end": "3287839"
  },
  {
    "text": "about performance I don't know how many settings are in there uh but every single one I could find",
    "start": "3287839",
    "end": "3294079"
  },
  {
    "text": "okay",
    "start": "3294079",
    "end": "3297079"
  },
  {
    "text": "my last tip uh Benchmark your",
    "start": "3299280",
    "end": "3307160"
  },
  {
    "text": "code how do you know if it's any faster if you're not benchmarking it okay and",
    "start": "3307160",
    "end": "3313040"
  },
  {
    "text": "I'm not talking about the speed of h2b calls and things like that of just the code itself okay so I was I I think I",
    "start": "3313040",
    "end": "3321000"
  },
  {
    "text": "was telling mads earlier that uh the benchmark test for my book",
    "start": "3321000",
    "end": "3326359"
  },
  {
    "text": "takes over 3 Days To Run there's tens of thousands of",
    "start": "3326359",
    "end": "3332520"
  },
  {
    "text": "benchmarks that I use for my book and it takes a really really long time to run",
    "start": "3332520",
    "end": "3338079"
  },
  {
    "text": "uh but I use I religiously use",
    "start": "3338079",
    "end": "3342559"
  },
  {
    "text": "benchmark.com you should be using",
    "start": "3345559",
    "end": "3349839"
  },
  {
    "text": "be based on the types that you're using okay because like I said different",
    "start": "3355240",
    "end": "3360400"
  },
  {
    "text": "types perform differently okay so make sure you Benchmark if you're ever like that guy",
    "start": "3360400",
    "end": "3366880"
  },
  {
    "text": "remember I told you a story a little bit ago about the uh the the link API and the and the lambdas right that's exactly",
    "start": "3366880",
    "end": "3374640"
  },
  {
    "text": "what I did when he came to me that night at home I wrote the code and proved the lead developer",
    "start": "3374640",
    "end": "3380480"
  },
  {
    "text": "wrong okay and I went back to that uh the person I was mentoring and I said",
    "start": "3380480",
    "end": "3385520"
  },
  {
    "text": "yeah don't listen to him listen to me all right uh oh I want to promote my",
    "start": "3385520",
    "end": "3395000"
  },
  {
    "text": "show so uh I have a show uh twice monthly now that coid is over um it's",
    "start": "3395000",
    "end": "3401799"
  },
  {
    "text": "called Rock in the cold world uh with Don at Dave it's a on Saturdays at 10: a.m. PST I uh interview everybody at big",
    "start": "3401799",
    "end": "3411319"
  },
  {
    "text": "wigs at Microsoft all the way down to you guys okay not that you're low or anything",
    "start": "3411319",
    "end": "3416920"
  },
  {
    "text": "but uh so uh uh I'm in season 3 right now I uh season two finished with over",
    "start": "3416920",
    "end": "3424880"
  },
  {
    "text": "250,000 people uh watching the show and season 4 starts on October 7th with mad",
    "start": "3424880",
    "end": "3432440"
  },
  {
    "text": "tenson who's here who did the community event last night and he'll be on talking",
    "start": "3432440",
    "end": "3437760"
  },
  {
    "text": "about all the cool stuff coming out down at eight okay so I hope you join us mad's an awesome guy I've known him for",
    "start": "3437760",
    "end": "3444319"
  },
  {
    "text": "years now and uh we even uh spent two days touring uh Delhi India together that was really",
    "start": "3444319",
    "end": "3451280"
  },
  {
    "text": "fun um so I hope you go watch my show it's all recorded on it's simoc cast on like",
    "start": "3451280",
    "end": "3458680"
  },
  {
    "text": "five different platforms so watch it wherever you want uh but watch okay because uh I tackle a lot of things that",
    "start": "3458680",
    "end": "3465799"
  },
  {
    "text": "people either don't know about or just stuff I care about like uh the beginning",
    "start": "3465799",
    "end": "3471280"
  },
  {
    "text": "of this month I had someone on talking about mental health at work work something we all",
    "start": "3471280",
    "end": "3477599"
  },
  {
    "text": "need and then uh uh the week after that I had somebody on talking about impostor",
    "start": "3477599",
    "end": "3482960"
  },
  {
    "text": "syndrome something that we all have right so I hope you uh watch those shows",
    "start": "3482960",
    "end": "3489520"
  },
  {
    "text": "uh because uh I work really hard with uh my producer and uh I love doing a show I",
    "start": "3489520",
    "end": "3495119"
  },
  {
    "text": "love talking to people on Saturdays uh because I have nothing better to do no I'm kidding I have lots better to do I",
    "start": "3495119",
    "end": "3501559"
  },
  {
    "text": "live a mile from the beach so um here's some resources my website sourcer",
    "start": "3501559",
    "end": "3507799"
  },
  {
    "text": "inovator so I've dedicated myself to write really really good documentation",
    "start": "3507799",
    "end": "3513359"
  },
  {
    "text": "for the Microsoft sourcer inators which has really bad documentation right so",
    "start": "3513359",
    "end": "3520400"
  },
  {
    "text": "every time Microsoft adds a new one I'll be adding it there um I have another um",
    "start": "3520400",
    "end": "3526720"
  },
  {
    "text": "article called reuse reuse and more reuse something I practice and preach and on that one you know one thing I've",
    "start": "3526720",
    "end": "3534160"
  },
  {
    "text": "been preaching for a very very long time is 90% of your code should not be in the application for many many reasons and",
    "start": "3534160",
    "end": "3541119"
  },
  {
    "text": "talk to me later if you want to know what those reasons uh there's my open source project there's a link to my",
    "start": "3541119",
    "end": "3548440"
  },
  {
    "text": "show um I've only found two courses on plural site wrapped around this that I like one's done by uh clean code by",
    "start": "3548440",
    "end": "3556160"
  },
  {
    "text": "Corey house a great speaker if you get to see him live and then someone who's been my friend since the '90s de Kata",
    "start": "3556160",
    "end": "3563920"
  },
  {
    "text": "has a c best practices so check that out too all right with that thanks and uh",
    "start": "3563920",
    "end": "3571440"
  },
  {
    "text": "see you next",
    "start": "3571440",
    "end": "3574000"
  },
  {
    "text": "time",
    "start": "3580960",
    "end": "3583960"
  }
]