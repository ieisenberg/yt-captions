[
  {
    "text": "so then welcome everyone um to our session implementing an event sourcing strategy on asia",
    "start": "8559",
    "end": "15200"
  },
  {
    "text": "um first of all before going to um to the meat i have to say and to",
    "start": "15200",
    "end": "21199"
  },
  {
    "text": "introduction couple of words about the session itself uh back to the times when i was working",
    "start": "21199",
    "end": "26720"
  },
  {
    "text": "with the product company we were building new warehouse system and i started to work with the cosmos db",
    "start": "26720",
    "end": "33200"
  },
  {
    "text": "it was quite new for me and was added together we were discussing quite a lot of different scenarios and we were",
    "start": "33200",
    "end": "39920"
  },
  {
    "text": "spending evenings trying to build different architectures and see how it's going to fit um just",
    "start": "39920",
    "end": "46239"
  },
  {
    "text": "just basically for uh out of interest and this scenario was the event sourcing",
    "start": "46239",
    "end": "51360"
  },
  {
    "text": "strategy um was quite interesting for me because it was good fit for for the product and",
    "start": "51360",
    "end": "56480"
  },
  {
    "text": "what i was doing back then but also the cosmos db was a great fit and we decided",
    "start": "56480",
    "end": "62000"
  },
  {
    "text": "to create a session around it just to show everyone how it could be easily used and",
    "start": "62000",
    "end": "67360"
  },
  {
    "text": "basically other features of asia so ender maybe you can uh introduce",
    "start": "67360",
    "end": "72960"
  },
  {
    "text": "yourself a couple of words yes so uh first of all welcome everyone",
    "start": "72960",
    "end": "78240"
  },
  {
    "text": "uh thank you for being here uh feel free to turn on your camera by the way if you want to it's always nice to talk to people um but yeah so i'm el coteburg i",
    "start": "78240",
    "end": "86400"
  },
  {
    "text": "come from the netherlands i live in rotterdam where i work at a company called motion 10. so with motion 10 we focus on basically",
    "start": "86400",
    "end": "92880"
  },
  {
    "text": "everything microsoft by myself i'm a technology lead and architect so basically i'm working",
    "start": "92880",
    "end": "98960"
  },
  {
    "text": "both internally and externally with clients and mostly on azure and integration i'm also an azure mp so i also love",
    "start": "98960",
    "end": "105759"
  },
  {
    "text": "working with the community i love sharing knowledge i love doing these talks i write i blog i do a lot of",
    "start": "105759",
    "end": "111600"
  },
  {
    "text": "different things with community and of course that's also why i'm here today if you have any questions any comments",
    "start": "111600",
    "end": "117200"
  },
  {
    "text": "you can always reach out to me on twitter and elena bit by q um yeah just a couple of words i'm",
    "start": "117200",
    "end": "123360"
  },
  {
    "text": "uh hola nebrasenko my name is started not from the right place but i'm working in dia deco group",
    "start": "123360",
    "end": "130479"
  },
  {
    "text": "company it's a global hr solution as a senior software developer and",
    "start": "130479",
    "end": "137360"
  },
  {
    "text": "as well if you have any questions or comments i'll be happy to chat here is my twitter tag and also in the",
    "start": "137360",
    "end": "143680"
  },
  {
    "text": "end there's gonna be more details about other sessions so let's go",
    "start": "143680",
    "end": "149520"
  },
  {
    "text": "so let's with that let's take it away and first of all we are going to do a quick look at what is event sourcing",
    "start": "149520",
    "end": "156400"
  },
  {
    "text": "some of my you might have already heard of it others it might be new concepts so just a very quick introduction about",
    "start": "156400",
    "end": "162239"
  },
  {
    "text": "okay what is event sourcing and why do we need this so event sourcing is about as name says",
    "start": "162239",
    "end": "168480"
  },
  {
    "text": "it's about events so we have different events and with those events we can actually get the current status of an",
    "start": "168480",
    "end": "174720"
  },
  {
    "text": "entity so today we are talking about this warehouse system and of course with the warehouse system we're talking about",
    "start": "174720",
    "end": "179840"
  },
  {
    "text": "orders so with orders you might have an event order has been created they might have another event that says",
    "start": "179840",
    "end": "186800"
  },
  {
    "text": "okay we added two shirts so this new event new message coming in saying okay we have now added two shirts",
    "start": "186800",
    "end": "193360"
  },
  {
    "text": "can we get another event saying okay we added four hats and we have another event saying okay shipping info is added and what we can",
    "start": "193360",
    "end": "200239"
  },
  {
    "text": "now do by playing back these messages we can actually see okay what is the current status of this entity of this",
    "start": "200239",
    "end": "206640"
  },
  {
    "text": "order so we play this bank message back then we will see that okay there was an order",
    "start": "206640",
    "end": "211840"
  },
  {
    "text": "created that has two shirts in it four heads in it and it has some shipping info and now any client can just basically",
    "start": "211840",
    "end": "218400"
  },
  {
    "text": "play this and play back these events and see okay what is the current status of this specific order of this specific",
    "start": "218400",
    "end": "223920"
  },
  {
    "text": "entity so why should we use event sourcing",
    "start": "223920",
    "end": "229519"
  },
  {
    "text": "because i think most people here if not everyone at some point created or worked with a crot application",
    "start": "229519",
    "end": "236159"
  },
  {
    "text": "so we create an order in our database we have different different providers reading from this",
    "start": "236159",
    "end": "242799"
  },
  {
    "text": "some of them might be updating this there might be some deletions and this is okay as long as we are not",
    "start": "242799",
    "end": "248640"
  },
  {
    "text": "in a very wide heavy environment if you have a lot of different consumers",
    "start": "248640",
    "end": "253920"
  },
  {
    "text": "and producers we might run into some troubles here so for example if you have a lot of different producers that are all trying",
    "start": "253920",
    "end": "260000"
  },
  {
    "text": "to update this data or working with the same entity we start to see that we are locking our",
    "start": "260000",
    "end": "265360"
  },
  {
    "text": "data because that's the way we work with the database if someone is working with that row we are going to look at row",
    "start": "265360",
    "end": "271440"
  },
  {
    "text": "because of course we cannot have two producers riding in the same entity at the same time",
    "start": "271440",
    "end": "276800"
  },
  {
    "text": "and this looking of data is something that is really good for a database of course but maybe not something that you always want because",
    "start": "276800",
    "end": "282960"
  },
  {
    "text": "it means that if you have lots of producers they will have to wait for each other and you might get into some deadlocks or",
    "start": "282960",
    "end": "288960"
  },
  {
    "text": "timeouts or something like that so crud is not really easily scalable so",
    "start": "288960",
    "end": "296400"
  },
  {
    "text": "with quads we run into the issue that okay if we it's okay if we have like tens hundreds maybe even thousands of",
    "start": "296400",
    "end": "302800"
  },
  {
    "text": "producers but as soon as you're coming into like millions of producers like really high",
    "start": "302800",
    "end": "308800"
  },
  {
    "text": "throughput right heavy workloads we see that quad is just not scalable enough for what our needs are",
    "start": "308800",
    "end": "316240"
  },
  {
    "text": "because concurrency in this case is really difficult it's very difficult to say okay we have different producers",
    "start": "316479",
    "end": "322320"
  },
  {
    "text": "that all go to write to the same entities all to the same rows all to the same objects because we get into the locking issues",
    "start": "322320",
    "end": "329120"
  },
  {
    "text": "but also we get into issues like okay one of them is going to read the data it's going to update this data it's",
    "start": "329120",
    "end": "334880"
  },
  {
    "text": "going to write a new state but in the meantime someone else might have read this and you're getting those",
    "start": "334880",
    "end": "340080"
  },
  {
    "text": "concurrency issues like okay i have many different providers many different consumers how do we know that our data is actually",
    "start": "340080",
    "end": "347199"
  },
  {
    "text": "in the way that we expect it to be and finally one more thing about crud is",
    "start": "347199",
    "end": "352560"
  },
  {
    "text": "there's no history we cannot really see okay who changed what um at which point what was the previous data unless of",
    "start": "352560",
    "end": "359360"
  },
  {
    "text": "course we built our own audit store and it's like of course you can build our own store but it's another thing",
    "start": "359360",
    "end": "365840"
  },
  {
    "text": "that we have to introduce we have to once again look into the unlocking of data looking at concurrency",
    "start": "365840",
    "end": "371759"
  },
  {
    "text": "so it's not something that we cannot do with crop but it makes it life much more difficult and this is where event",
    "start": "371759",
    "end": "376880"
  },
  {
    "text": "sources come in comes in because event sourcing basically helps us solve all these different issues that",
    "start": "376880",
    "end": "382560"
  },
  {
    "text": "we have with crotch so the event sourcing pattern is all",
    "start": "382560",
    "end": "387759"
  },
  {
    "text": "about insertions instead of updates so we don't only earn insert objects we",
    "start": "387759",
    "end": "394160"
  },
  {
    "text": "only insert events so we have a data store and this data only receives events and inserts them",
    "start": "394160",
    "end": "400560"
  },
  {
    "text": "we don't have a database where we are going to a specific object and update this instead we just have all these events",
    "start": "400560",
    "end": "406960"
  },
  {
    "text": "that you can play back and this is perfect for those white heavy workloads",
    "start": "406960",
    "end": "412240"
  },
  {
    "text": "because this allows us to actually have multiple like big amounts of consumers big amount of producers or writing to",
    "start": "412240",
    "end": "418400"
  },
  {
    "text": "that same data store and then whenever a consumer needs this and we will see that later on where we",
    "start": "418400",
    "end": "424080"
  },
  {
    "text": "can work with projections like cqrs kind of style basically what the consumers are going to do is just read back all those",
    "start": "424080",
    "end": "430000"
  },
  {
    "text": "different events and just say okay so this is the current status and then they can update this on their own software",
    "start": "430000",
    "end": "438720"
  },
  {
    "text": "and in search of of course much more efficient because i don't first get the current state of that state update that",
    "start": "438800",
    "end": "444800"
  },
  {
    "text": "state make sure that data is locked make sure no one else can update it instantly just okay here's my message",
    "start": "444800",
    "end": "450479"
  },
  {
    "text": "inserted this is what i want to do and that is what event sourcing is all about just like okay i did this i want",
    "start": "450479",
    "end": "456960"
  },
  {
    "text": "you to this to this specific resource please do this for me",
    "start": "456960",
    "end": "462319"
  },
  {
    "text": "and of course because you have this uh these events you already have a built-in autolog because you can exactly see who",
    "start": "462319",
    "end": "469360"
  },
  {
    "text": "sent what event at what time so we can exactly see what object in which state it was at specific",
    "start": "469360",
    "end": "475199"
  },
  {
    "text": "time just by playing back those events up to that point so this all comes out of the box with",
    "start": "475199",
    "end": "481440"
  },
  {
    "text": "event sourcing um i know that you have a question can you uh please tell us a bit about",
    "start": "481440",
    "end": "488400"
  },
  {
    "text": "scalability before in the previous slide there was easy not easy scalable easily scalable",
    "start": "488400",
    "end": "494639"
  },
  {
    "text": "and what about event sourcing how easy it is to scale it event sourcing is very scalable as long",
    "start": "494639",
    "end": "501360"
  },
  {
    "text": "as our data source can handle this and we have a look at that in the next slide but as long as our",
    "start": "501360",
    "end": "507120"
  },
  {
    "text": "data store can handle those inserts then we can just scale up independently because inserts are very easy like we",
    "start": "507120",
    "end": "513919"
  },
  {
    "text": "don't have to lock things we don't have to care about concurrency we just have to make sure we can handle our inserts",
    "start": "513919",
    "end": "520640"
  },
  {
    "text": "and we are going to look at how we can do this on azure of course because there are some different components that will",
    "start": "520640",
    "end": "526080"
  },
  {
    "text": "come into play here because of course once you have the pattern for this like we have a very scalable pattern we also",
    "start": "526080",
    "end": "531839"
  },
  {
    "text": "need to write surfaces for this because not any service can just handle the scale",
    "start": "531839",
    "end": "537279"
  },
  {
    "text": "so let's have a look at how we can implement event sourcing on azure and which services we are going to use with",
    "start": "537279",
    "end": "542480"
  },
  {
    "text": "this because this is really important event sourcing is really about that high scalability of course you can also do it",
    "start": "542480",
    "end": "548800"
  },
  {
    "text": "like in low scalability scenarios like it's not that you can adjust this high your scalability but",
    "start": "548800",
    "end": "554320"
  },
  {
    "text": "it's really make prioritized capability so we have to think about okay which services can actually handle that",
    "start": "554320",
    "end": "559920"
  },
  {
    "text": "scalability actually elena can you talk about about cost",
    "start": "559920",
    "end": "566399"
  },
  {
    "text": "sure of course um so yeah actually already i said that",
    "start": "567200",
    "end": "572480"
  },
  {
    "text": "um basically scaling depends on if if our data store can handle it and that's true",
    "start": "572480",
    "end": "579040"
  },
  {
    "text": "that's why exactly what we decided to go with cosmos db to try it because cosmos db is a globally distributed and",
    "start": "579040",
    "end": "586000"
  },
  {
    "text": "massively scalable multi-modal database um like stores so",
    "start": "586000",
    "end": "592640"
  },
  {
    "text": "beside this cosmos db has a great feature we will have a look into it a bit later but it's called",
    "start": "592640",
    "end": "599680"
  },
  {
    "text": "change feed and this change feed can save for us all the events which are happening all the",
    "start": "599680",
    "end": "605680"
  },
  {
    "text": "changes which are happening all the documents will be stay safe there and uh regardless our wishes",
    "start": "605680",
    "end": "612079"
  },
  {
    "text": "like this history will remain there um like until the end like until you would",
    "start": "612079",
    "end": "617120"
  },
  {
    "text": "not remove the document itself and um this is basically even sourcing out of the box whatever is happening in",
    "start": "617120",
    "end": "622480"
  },
  {
    "text": "your system it's all saved and you can uh access the change feed pull the data or maybe subscribe in the change feed",
    "start": "622480",
    "end": "629040"
  },
  {
    "text": "when the those events can be pushed to you um and that was a great fit for for us in this",
    "start": "629040",
    "end": "636000"
  },
  {
    "text": "case yes indeed the event when we talk about defense like cosmos b is the perfect",
    "start": "636000",
    "end": "641519"
  },
  {
    "text": "data store for this but once you have the data store we still have some other components that we actually need because our events are",
    "start": "641519",
    "end": "648240"
  },
  {
    "text": "coming from somewhere and we don't want to expose our customers to be directly to our",
    "start": "648240",
    "end": "653440"
  },
  {
    "text": "producers so what we are going to do we are going to put it",
    "start": "653440",
    "end": "658800"
  },
  {
    "text": "and then what we are going to put in front is event hubs here we go",
    "start": "658800",
    "end": "664000"
  },
  {
    "text": "and event ops is once again about the scalability so event hops as the name kind of suggests is also about",
    "start": "664000",
    "end": "669680"
  },
  {
    "text": "processing events it's about processing streams of events so if you have many different events",
    "start": "669680",
    "end": "675680"
  },
  {
    "text": "coming in but they are belonging to the same kind of process so in our case the order process",
    "start": "675680",
    "end": "681360"
  },
  {
    "text": "for example these can all be streamed into there and then we can play them back and we can",
    "start": "681360",
    "end": "686800"
  },
  {
    "text": "push them out to different like for example to custom to be and what is really nice about event tops",
    "start": "686800",
    "end": "692560"
  },
  {
    "text": "is it's very high throughput it can handle millions of messages per second and once again we are talking about",
    "start": "692560",
    "end": "698079"
  },
  {
    "text": "higher scalability event types is perfect for this of course there's different other",
    "start": "698079",
    "end": "703440"
  },
  {
    "text": "options that we could have a look at but i think event hubs especially when you talk about like high scale ability event ups is the place to go",
    "start": "703440",
    "end": "709760"
  },
  {
    "text": "um so definitely have a look at that and what's actually quite nice about event tops is that this has some other protocols that can handle as well for",
    "start": "709760",
    "end": "716480"
  },
  {
    "text": "example you can handle the protocol and i'll talk a bit about more than that later on but what you can actually do is",
    "start": "716480",
    "end": "722399"
  },
  {
    "text": "have a kafka application change the connection string and stream it into event tops and then have all the nice",
    "start": "722399",
    "end": "728800"
  },
  {
    "text": "things of a pass service like the maintainability that you don't really have to think",
    "start": "728800",
    "end": "734320"
  },
  {
    "text": "about what is running on all that in azure while still running your existing applications",
    "start": "734320",
    "end": "740320"
  },
  {
    "text": "however of course when going to from event ops 2 customers to b we need to have something there as well because we",
    "start": "740320",
    "end": "745839"
  },
  {
    "text": "cannot just directly connect this so can you talk about functions",
    "start": "745839",
    "end": "750880"
  },
  {
    "text": "of course um yes so we can basically using asia functions we",
    "start": "750880",
    "end": "757519"
  },
  {
    "text": "can connect to our cosmos db so to change fit for example azure function has built-in",
    "start": "757519",
    "end": "764160"
  },
  {
    "text": "triggers so we can use those triggers to subscribe on a specific container and react on all the changes which are",
    "start": "764160",
    "end": "770720"
  },
  {
    "text": "happening if there is update of the document or it's a read or it's a creation of the document",
    "start": "770720",
    "end": "776320"
  },
  {
    "text": "so uh with this we can first of all be very uh responsive on all the changes but also asia functions as seminars they",
    "start": "776320",
    "end": "783680"
  },
  {
    "text": "as well like managed by asia but also easily scalable so for us again it's a",
    "start": "783680",
    "end": "789680"
  },
  {
    "text": "perfectly perfect fit we taking this brick connecting to the cosmos db and then we can do whatever we want in the",
    "start": "789680",
    "end": "795120"
  },
  {
    "text": "creative materials views build out of it uh some functionality maybe transfer",
    "start": "795120",
    "end": "800399"
  },
  {
    "text": "data in another data store basically control the the data flow and application as we want",
    "start": "800399",
    "end": "807120"
  },
  {
    "text": "exactly so basically with these two components we have everything to build our high scalable event sourcing",
    "start": "807120",
    "end": "812839"
  },
  {
    "text": "application and that's actually actually what we are going to do right now so we are going to show you a demo",
    "start": "812839",
    "end": "818480"
  },
  {
    "text": "um where we actually have a copy application like i said event hubs can actually handle copper protocol",
    "start": "818480",
    "end": "823920"
  },
  {
    "text": "so we have an existing kafka application and we are just going to connect this to event hubs",
    "start": "823920",
    "end": "829440"
  },
  {
    "text": "to our application in this case will be our order system our warehouse system um we did uh of course a demo we have",
    "start": "829440",
    "end": "836560"
  },
  {
    "text": "just one application where we're doing this normally in the real world this would be like many different applications many different systems uh",
    "start": "836560",
    "end": "843600"
  },
  {
    "text": "where orders are coming in where the processing is being handled inventory is being checked",
    "start": "843600",
    "end": "849839"
  },
  {
    "text": "in this case in demo we just have one single system that will do all this but that system is going to send different",
    "start": "849839",
    "end": "855120"
  },
  {
    "text": "events for different transitions of the order basically",
    "start": "855120",
    "end": "860160"
  },
  {
    "text": "and those are going to push into event apps because like i said you want to have something in between where you can actually stream the data in we can play",
    "start": "860160",
    "end": "866480"
  },
  {
    "text": "back if we need to we can process it we can transform it and then finally we have a function that",
    "start": "866480",
    "end": "872880"
  },
  {
    "text": "will actually trigger on this stream of data and actually going to maybe do some",
    "start": "872880",
    "end": "878160"
  },
  {
    "text": "transformations in this case we are not going to but we could do some transformations in this case we're just going to gather data from the stream",
    "start": "878160",
    "end": "884800"
  },
  {
    "text": "and push it into our questions d so our function is going to trigger whenever new messages are available to",
    "start": "884800",
    "end": "890480"
  },
  {
    "text": "us it's going to spin up one or multiple functions depending on how many messages are available",
    "start": "890480",
    "end": "895600"
  },
  {
    "text": "and it's going to transfer those messages into cosmos db so let's have a look what this looks like",
    "start": "895600",
    "end": "900800"
  },
  {
    "text": "so first of all let's grab that application so i have my application over here as",
    "start": "900800",
    "end": "906160"
  },
  {
    "text": "you can see it's just a simple application i'm not going to run through all the code the code is available on github so",
    "start": "906160",
    "end": "912079"
  },
  {
    "text": "if you want to actually check all the code then you can do that there i'm just going to quickly run through okay what are we going to do here so first of all",
    "start": "912079",
    "end": "919040"
  },
  {
    "text": "we are going to use the kafka library so we just use the kafka library",
    "start": "919040",
    "end": "924959"
  },
  {
    "text": "so as you can see this is just default copycat nothing special i don't have to change anything for event apps i can",
    "start": "924959",
    "end": "930160"
  },
  {
    "text": "just use our deeper kafka library and i can then connect that to our event hops over here so in my connection",
    "start": "930160",
    "end": "936320"
  },
  {
    "text": "stream i just have my connection string from event ups and they'll just send the data there so we're going to create a producer and",
    "start": "936320",
    "end": "942720"
  },
  {
    "text": "this producer is going to process an order or actually mod borders but let's say we are going to create",
    "start": "942720",
    "end": "948000"
  },
  {
    "text": "1000 different audits actually let's start this so this can run in the background while i'll talk to",
    "start": "948000",
    "end": "953839"
  },
  {
    "text": "this code and this is just going to create all these tasks to process the order",
    "start": "953839",
    "end": "958959"
  },
  {
    "text": "and what this will do is the process order is just my simulation of our complete warehouse environment",
    "start": "958959",
    "end": "966000"
  },
  {
    "text": "so it's going to create an order as you can see it's all random data so we can actually have different constant customers with different orders",
    "start": "966000",
    "end": "972959"
  },
  {
    "text": "and this order is going to go to some different states so of course first order will be created",
    "start": "972959",
    "end": "979839"
  },
  {
    "text": "the order has been requested so someone place an order to the website to an app or something like that",
    "start": "979839",
    "end": "985360"
  },
  {
    "text": "so we go to create different orders and then we are going to update these orders we are going to add some articles so",
    "start": "985360",
    "end": "991120"
  },
  {
    "text": "different orders for their different articles and then we are going to submit this and this will be for every state like that's",
    "start": "991120",
    "end": "997279"
  },
  {
    "text": "what we are going to do so next up we have we're going to accept the order after a certain amount of time we might update some articles so some",
    "start": "997279",
    "end": "1003759"
  },
  {
    "text": "orders might get some update articles the order might be cancelled so we have some cancelled orders in there the order",
    "start": "1003759",
    "end": "1010720"
  },
  {
    "text": "might be picked the order is going out for delivery and finally the order will be delivered",
    "start": "1010720",
    "end": "1016079"
  },
  {
    "text": "and so we have different orders in different states at some point and by playing back all these different events",
    "start": "1016079",
    "end": "1021120"
  },
  {
    "text": "because these are all events that are being sent to our event hub by playing those events back finally our consumers",
    "start": "1021120",
    "end": "1027280"
  },
  {
    "text": "can see okay this order is currently being picked this order has been delivered this order was cancelled and",
    "start": "1027280",
    "end": "1033678"
  },
  {
    "text": "they can just see okay what was in order and who was the customer and something like that",
    "start": "1033679",
    "end": "1039199"
  },
  {
    "text": "so as you can see these orders are all being sent and these are being sent to my event apps so if i go to my azure environment over",
    "start": "1039199",
    "end": "1045199"
  },
  {
    "text": "here i have my event apps over here and if i refresh this let's see if we can already see some messages to it",
    "start": "1045199",
    "end": "1051360"
  },
  {
    "text": "might take a while because this logging is lagging a bit so we don't see it yet",
    "start": "1051360",
    "end": "1056799"
  },
  {
    "text": "but um well if we go back over to our customer to be later on we actually will see that we have data in there like i",
    "start": "1056799",
    "end": "1063120"
  },
  {
    "text": "said this kind of logging the next bit like can take a couple of minutes to actually get some data in there",
    "start": "1063120",
    "end": "1068960"
  },
  {
    "text": "but what happens so we are sending those events to our event hubs and we then have a function over here in this function",
    "start": "1068960",
    "end": "1074960"
  },
  {
    "text": "as you can see it's being triggered this function will actually get the data from event hubs so it sees hey there's new",
    "start": "1074960",
    "end": "1080240"
  },
  {
    "text": "data in my event ops queue it will get the data it will start processing it and we'll send this out to",
    "start": "1080240",
    "end": "1086799"
  },
  {
    "text": "customer b let's have a look at the code of this function by my event.processor over here",
    "start": "1086799",
    "end": "1093200"
  },
  {
    "text": "and what's really nice is i don't actually need to know how does event apps work how does the sdk work because",
    "start": "1093200",
    "end": "1099280"
  },
  {
    "text": "i'm using functions i can actually just say i want to have event up trigger and this trigger has some different",
    "start": "1099280",
    "end": "1106160"
  },
  {
    "text": "parameters so i have to say okay what is the stream i'm looking on and what is my connection stream and",
    "start": "1106160",
    "end": "1112880"
  },
  {
    "text": "that's all i need to know about connecting to event ops so i don't need to know about check",
    "start": "1112880",
    "end": "1117919"
  },
  {
    "text": "pointing i don't need to know about how is the the messages being uh i'll do it the serialized message or anything",
    "start": "1117919",
    "end": "1124160"
  },
  {
    "text": "like that i just get an array with events and i can look to that array and if i have many different uh",
    "start": "1124160",
    "end": "1132080"
  },
  {
    "text": "um if i am sending in log messages this will actually spin up multiple functions and each of those functions will have a",
    "start": "1132080",
    "end": "1138960"
  },
  {
    "text": "certain amount of data in there so what i'm going to do then is i'm going to create a cosmos client and this",
    "start": "1138960",
    "end": "1144799"
  },
  {
    "text": "one actually want to show you because over here i'm using this event.trigger this is really nice because it abstracts",
    "start": "1144799",
    "end": "1150720"
  },
  {
    "text": "away all the logic i could do the same for my custom db i could actually have a custom v output",
    "start": "1150720",
    "end": "1156320"
  },
  {
    "text": "binding however with bindings you don't have as much control as you have",
    "start": "1156320",
    "end": "1161760"
  },
  {
    "text": "with sdk and in here i actually want to ignore all the null values because my schema actually has i'm using",
    "start": "1161760",
    "end": "1169600"
  },
  {
    "text": "the same schema for all my different events and in my schema i just want to say okay if there's not any data in there i want",
    "start": "1169600",
    "end": "1175440"
  },
  {
    "text": "to ignore the null value and that's not something you can do on the binding so instead i'm using the sdk",
    "start": "1175440",
    "end": "1181440"
  },
  {
    "text": "once again this is nice thing about functions like i can use those bindings that abstract everything away from me",
    "start": "1181440",
    "end": "1186720"
  },
  {
    "text": "but i can also just say well instead of using a binding i'm just going to use the sk8 cell to have a bit more control",
    "start": "1186720",
    "end": "1192799"
  },
  {
    "text": "so in this case i'm going to connect to my custom v i'm going to make sure that container exists",
    "start": "1192799",
    "end": "1198960"
  },
  {
    "text": "and then i'm just going to loop to all those different events that are coming in from event hops",
    "start": "1198960",
    "end": "1204000"
  },
  {
    "text": "i'm going to get the message body so i'm just going to get the data from them from there i'm deserializing this as an",
    "start": "1204000",
    "end": "1210000"
  },
  {
    "text": "order and then i'm once again i'm going to ignore some different things and then i'm going to just observe this item and",
    "start": "1210000",
    "end": "1216640"
  },
  {
    "text": "of course we will never have an update it will always be an insert so we're just going to push all those",
    "start": "1216640",
    "end": "1221840"
  },
  {
    "text": "events into my cosmos db now if i have any exceptions i will handle those but this is the important",
    "start": "1221840",
    "end": "1227840"
  },
  {
    "text": "part like i'm running through these events i'm pushing them out to imply cost b and",
    "start": "1227840",
    "end": "1232880"
  },
  {
    "text": "that's it so if you now switch over to my constantly b over here",
    "start": "1232880",
    "end": "1238960"
  },
  {
    "text": "i should see that i have some orders in here as you can see i already have some orders in here let's just refresh this",
    "start": "1238960",
    "end": "1246559"
  },
  {
    "text": "and when i look into these orders i will see that i have different orders and different state statuses like for example i have an order here",
    "start": "1246559",
    "end": "1253200"
  },
  {
    "text": "for this customer it's been requested there's some different articles in there so they're they're ordering some",
    "start": "1253200",
    "end": "1259200"
  },
  {
    "text": "different articles as you can see i've already quite a few different orders in here",
    "start": "1259200",
    "end": "1264240"
  },
  {
    "text": "so of course the first ones will always be always requested because i first request 1000 orders and then i'm going",
    "start": "1264240",
    "end": "1271039"
  },
  {
    "text": "to update them so what i'm actually going to do is get an order that has already been through this previously and",
    "start": "1271039",
    "end": "1276960"
  },
  {
    "text": "just see okay what are the different events that came for this order so i got this specific order over here",
    "start": "1276960",
    "end": "1283200"
  },
  {
    "text": "this order number and if i look over here i see that some different events for this so i have a request event where it says",
    "start": "1283200",
    "end": "1289679"
  },
  {
    "text": "okay it was requested is order number this customer design articles it was then accepted and as you can see",
    "start": "1289679",
    "end": "1296640"
  },
  {
    "text": "there's different information here so i still have the hop id and the hub id will later on be the warehouse where",
    "start": "1296640",
    "end": "1302000"
  },
  {
    "text": "we're actually going to pick this from but this one for example just updates",
    "start": "1302000",
    "end": "1307440"
  },
  {
    "text": "tends to be accepted this one is picking right now for picking start time that i can update can",
    "start": "1307440",
    "end": "1313840"
  },
  {
    "text": "retrieve from this at some point it went out for delivery and finally it was delivered",
    "start": "1313840",
    "end": "1320480"
  },
  {
    "text": "and by playing back these five different events any customer consumer sorry any consumer",
    "start": "1320480",
    "end": "1326320"
  },
  {
    "text": "can now see okay this order has these different [Music]",
    "start": "1326320",
    "end": "1331520"
  },
  {
    "text": "has these different uh articles in it it was for this customer it went out to delivery it was delivered we can see",
    "start": "1331520",
    "end": "1338240"
  },
  {
    "text": "different times and so this allows us to actually play back those different events and just see",
    "start": "1338240",
    "end": "1343440"
  },
  {
    "text": "okay what's the end state of this specific order and of course different producers can send in different events",
    "start": "1343440",
    "end": "1350000"
  },
  {
    "text": "and they will all just come in this look and we can just play back the log and see okay what is the status of this",
    "start": "1350000",
    "end": "1359158"
  },
  {
    "text": "so we have now seen how we can actually create those events how we can send them out to event tabs how our function will",
    "start": "1360480",
    "end": "1366960"
  },
  {
    "text": "pick them up we'll maybe transform them and finally push them into our custom b",
    "start": "1366960",
    "end": "1372000"
  },
  {
    "text": "and from there we can actually start working with those events now next up i'm going to actually pass",
    "start": "1372000",
    "end": "1378480"
  },
  {
    "text": "our presentation over to elena um and then she can share her screen and",
    "start": "1378480",
    "end": "1384880"
  },
  {
    "text": "she will continue this and talk a bit more about material fuse",
    "start": "1384880",
    "end": "1391679"
  },
  {
    "text": "yep thanks a lot you should be able to see my screen just if you can yep cool",
    "start": "1391679",
    "end": "1397760"
  },
  {
    "text": "great so um my part we're going to talk about materialized",
    "start": "1397760",
    "end": "1403200"
  },
  {
    "text": "views so basically um we already saw that we can write some data in cosmos db",
    "start": "1403200",
    "end": "1410159"
  },
  {
    "text": "what are going to happen next so why do we need to use modules views how to do this and",
    "start": "1410159",
    "end": "1416400"
  },
  {
    "text": "in general we will have a look on the implementation as well so in a traditional way normally uh when i",
    "start": "1416400",
    "end": "1422960"
  },
  {
    "text": "have data in my in my store data store database doesn't matter i would write a query and every",
    "start": "1422960",
    "end": "1430240"
  },
  {
    "text": "time i need to fetch this data i will call this query and basically that's that's how i would do this",
    "start": "1430240",
    "end": "1436400"
  },
  {
    "text": "normally but with the cosmos db um that's not exactly the case if you would execute query every time",
    "start": "1436400",
    "end": "1443120"
  },
  {
    "text": "when we need to fetch some data uh it will just end up in like increasing our cost",
    "start": "1443120",
    "end": "1448880"
  },
  {
    "text": "and increasing consumption of request units like for memory and",
    "start": "1448880",
    "end": "1454640"
  },
  {
    "text": "we will end up just complaining the customs cosmos db is just too too um too expensive so",
    "start": "1454640",
    "end": "1460960"
  },
  {
    "text": "what we can do to optimize basically um [Music] our querying operation for for make it",
    "start": "1460960",
    "end": "1468559"
  },
  {
    "text": "in more efficient manner we can uh pre-calculate pre-populate pre-save our views um so",
    "start": "1468559",
    "end": "1477120"
  },
  {
    "text": "the queries which we will execute which will normally call on",
    "start": "1477120",
    "end": "1482480"
  },
  {
    "text": "every fetch of data we will pre-calculate them and we will store them somewhere maybe in a separate",
    "start": "1482480",
    "end": "1488320"
  },
  {
    "text": "container maybe a separate database but this data will be ready for us to fetch and we would have no need to",
    "start": "1488320",
    "end": "1494720"
  },
  {
    "text": "uh execute it again on the fly and of course um we will react on every",
    "start": "1494720",
    "end": "1501520"
  },
  {
    "text": "change which is happening in our container uh so whatever document a new document arrived or maybe the document",
    "start": "1501520",
    "end": "1508559"
  },
  {
    "text": "got changed with the change fit uh we will react in those changes when using",
    "start": "1508559",
    "end": "1513600"
  },
  {
    "text": "azure functions and we will update our pre-calculated views so we will also always be sure",
    "start": "1513600",
    "end": "1520960"
  },
  {
    "text": "that whatever is happening in our system our state is always will be up to date and",
    "start": "1520960",
    "end": "1526240"
  },
  {
    "text": "and current um so yeah a cosmos db change fit is going to be a great help",
    "start": "1526240",
    "end": "1531679"
  },
  {
    "text": "for us in this in this case and i want to say a couple of uh a couple of words about house actually",
    "start": "1531679",
    "end": "1538799"
  },
  {
    "text": "works um as we can see um our application can communicate to",
    "start": "1538799",
    "end": "1545120"
  },
  {
    "text": "our database and what is happening basically under the hood when we wrote our data in a container",
    "start": "1545120",
    "end": "1552000"
  },
  {
    "text": "say in our case it's a container with orders auto documents",
    "start": "1552000",
    "end": "1558080"
  },
  {
    "text": "change feed will store all the all the information about our actions like",
    "start": "1558080",
    "end": "1564480"
  },
  {
    "text": "document got created then document was updated one order got added or maybe",
    "start": "1564480",
    "end": "1569760"
  },
  {
    "text": "customer change this information maybe some more articles were added to them",
    "start": "1569760",
    "end": "1575200"
  },
  {
    "text": "to to our order all this information going to be saved a certain change feed so what we can do",
    "start": "1575200",
    "end": "1581039"
  },
  {
    "text": "in this case we can interact with the change feed so we can pull all the data from the change",
    "start": "1581039",
    "end": "1587600"
  },
  {
    "text": "feed so there's three ways basically how to do this we can first way is to pull all the information from the change feed",
    "start": "1587600",
    "end": "1594080"
  },
  {
    "text": "either from the very beginning um when our database is created or from the certain point in time we can extract",
    "start": "1594080",
    "end": "1601679"
  },
  {
    "text": "those events and uh basically replaying them either create materialized views or like",
    "start": "1601679",
    "end": "1608320"
  },
  {
    "text": "basically aggregate aggregate our data and um as you see on",
    "start": "1608320",
    "end": "1613679"
  },
  {
    "text": "the screen we can uh have an overview for the customer how many orders he had or maybe overview for the warehouse um",
    "start": "1613679",
    "end": "1622400"
  },
  {
    "text": "how many order was orders were fulfilled today um and et cetera et cetera so",
    "start": "1622400",
    "end": "1629600"
  },
  {
    "text": "we can create those views we can pre-save them somewhere in a different place but this when we are pulling this data",
    "start": "1629600",
    "end": "1636320"
  },
  {
    "text": "it's basically the most complex way how to interact with the change feed because everything has to be handled we have to",
    "start": "1636320",
    "end": "1642159"
  },
  {
    "text": "specify which partition we're going to access and handle all the exceptions basically everything the full management",
    "start": "1642159",
    "end": "1649360"
  },
  {
    "text": "is on us however this could be a great way to to interact with it if we need to",
    "start": "1649360",
    "end": "1655919"
  },
  {
    "text": "to have one time data transfer so if we want to",
    "start": "1655919",
    "end": "1660960"
  },
  {
    "text": "go away from cosmos db and use another data store we can connect the change feed pull everything save it and then be",
    "start": "1660960",
    "end": "1668720"
  },
  {
    "text": "done but i would not maintain that kind of approach if i need to do this on a regular basis because this is another",
    "start": "1668720",
    "end": "1675520"
  },
  {
    "text": "like potential um potential source of problems a second way is to um implement change",
    "start": "1675520",
    "end": "1683520"
  },
  {
    "text": "heat processor using change with processing library basically an abstraction on top of",
    "start": "1683520",
    "end": "1688720"
  },
  {
    "text": "change feed where we can specify which container we want to listen to we want to subscribe on and",
    "start": "1688720",
    "end": "1696320"
  },
  {
    "text": "every time when there is a change can uh when the change will happen we will uh receive those uh events they",
    "start": "1696320",
    "end": "1703840"
  },
  {
    "text": "they're going to be pushed to us and we can do exactly the same",
    "start": "1703840",
    "end": "1709200"
  },
  {
    "text": "what we had did before create materialized view maybe trusted data somewhere it's just much easier way",
    "start": "1709200",
    "end": "1715120"
  },
  {
    "text": "if we need to interact with change fit on a regular basis but of course",
    "start": "1715120",
    "end": "1722000"
  },
  {
    "text": "we going to use asian function because this is the easiest way it's a serverless small piece of",
    "start": "1722000",
    "end": "1728159"
  },
  {
    "text": "small brick of uh like business logic basically azure is going to manage everything for us i just",
    "start": "1728159",
    "end": "1734240"
  },
  {
    "text": "need to say which database connection string and the container name i want to be subscribed on",
    "start": "1734240",
    "end": "1740720"
  },
  {
    "text": "and then again all the changes everything was happening change field gonna be pushed to us",
    "start": "1740720",
    "end": "1746240"
  },
  {
    "text": "as the events so that's basically the destruction how a service works under the boot so what is",
    "start": "1746240",
    "end": "1752399"
  },
  {
    "text": "happening when we are writing data to cosmos db there is the whole ecosystem which is like",
    "start": "1752399",
    "end": "1758799"
  },
  {
    "text": "basically handling our our our actions and our data",
    "start": "1758799",
    "end": "1766039"
  },
  {
    "text": "let's so right now before we go ahead i do have a question",
    "start": "1766159",
    "end": "1771200"
  },
  {
    "text": "so yes so you are talking about we are going to create different views of our data we are going to replicate our data",
    "start": "1771200",
    "end": "1777919"
  },
  {
    "text": "now when i was in school and this was black when we were still using borland and stuff like that so uh things have",
    "start": "1777919",
    "end": "1784000"
  },
  {
    "text": "probably changed but i was always always thought like we are going to normalize our data we are going to make sure we in",
    "start": "1784000",
    "end": "1789360"
  },
  {
    "text": "depth duplicate our data [Music] every now you are basically saying we",
    "start": "1789360",
    "end": "1794559"
  },
  {
    "text": "are going to duplicate our data for different views so can you elaborate a little bit about okay what has changed",
    "start": "1794559",
    "end": "1800159"
  },
  {
    "text": "that we can now are going to duplicate our data instead of normalize it what has changed",
    "start": "1800159",
    "end": "1807039"
  },
  {
    "text": "of course i mean uh i'm still amazed from the school year anyway but it was",
    "start": "1807039",
    "end": "1812399"
  },
  {
    "text": "which yeah um yes that's that's exactly what what i uh",
    "start": "1812399",
    "end": "1818480"
  },
  {
    "text": "what i said if we going to dublicate our data so we have one storage we have",
    "start": "1818480",
    "end": "1824240"
  },
  {
    "text": "azure cosmos db we have change feed for every container and then we're going to",
    "start": "1824240",
    "end": "1829440"
  },
  {
    "text": "um depends on the changes actually what we want to do we want we're going to either duplicate it or aggregate it and",
    "start": "1829440",
    "end": "1835919"
  },
  {
    "text": "and re-save those pre-calculated views why do we need to do this because um as",
    "start": "1835919",
    "end": "1842159"
  },
  {
    "text": "i said before like when we have relational database like i know typical um",
    "start": "1842159",
    "end": "1847760"
  },
  {
    "text": "scale database we have all the data in one place and we can just write a query",
    "start": "1847760",
    "end": "1853679"
  },
  {
    "text": "and fetch this data anytime we want because the course must be that's not the case because they use partition strategy",
    "start": "1853679",
    "end": "1860640"
  },
  {
    "text": "and basically the physical servers they are globally distributed and",
    "start": "1860640",
    "end": "1866320"
  },
  {
    "text": "they guarantee that data from one your of your containers like the logical partition the whole logical petition",
    "start": "1866320",
    "end": "1872559"
  },
  {
    "text": "group of documents will be always stored in the same physical machine however it doesn't mean that your whole database",
    "start": "1872559",
    "end": "1880640"
  },
  {
    "text": "will be always in the same place in the same region so it means if you have",
    "start": "1880640",
    "end": "1885919"
  },
  {
    "text": "really a lot of data um varying this data would mean not not only like cross partition querying but",
    "start": "1885919",
    "end": "1892559"
  },
  {
    "text": "also sometimes you you will need to access different servers and it will not just be slow it",
    "start": "1892559",
    "end": "1899039"
  },
  {
    "text": "it will be super slow but also it will be very very very expensive and it's fine if you need to do this one",
    "start": "1899039",
    "end": "1906080"
  },
  {
    "text": "and like call this query only one time per per month then then it's fine but if you have to do this every every",
    "start": "1906080",
    "end": "1913200"
  },
  {
    "text": "day or like really like every minute um yeah yeah",
    "start": "1913200",
    "end": "1918240"
  },
  {
    "text": "you will need to really invest a lot in cosmos db so that's why you need to duplicate your data it's it's the best",
    "start": "1918240",
    "end": "1924320"
  },
  {
    "text": "it's kind of the best practice and recommended approach uh storage for of data one gigabyte of",
    "start": "1924320",
    "end": "1931200"
  },
  {
    "text": "data is cost like 50 cents or something like this so basically uh you can delegate as much as you want",
    "start": "1931200",
    "end": "1936880"
  },
  {
    "text": "so as close to the user as possible and um in aggregated way for for all your",
    "start": "1936880",
    "end": "1942640"
  },
  {
    "text": "consumers as they wanted because you have single source of truth and you just transform your data and",
    "start": "1942640",
    "end": "1947919"
  },
  {
    "text": "expose it in a way how they want to have it awesome thank you good so um",
    "start": "1947919",
    "end": "1955200"
  },
  {
    "text": "we stopped at the point when we brought more data in the cosmos db and what we're going to to do now we're",
    "start": "1955200",
    "end": "1962399"
  },
  {
    "text": "going to have a look on the asia function which is uh we're going to be to listen to the specific container in",
    "start": "1962399",
    "end": "1969840"
  },
  {
    "text": "our case it's all the container uh with this asia function uh we will",
    "start": "1969840",
    "end": "1975760"
  },
  {
    "text": "implement a creation of materialized views we're going to have only one asian function just for for demo purposes but",
    "start": "1975760",
    "end": "1982399"
  },
  {
    "text": "normally i would go for with two independent functions for scalability of course and",
    "start": "1982399",
    "end": "1990000"
  },
  {
    "text": "to basically make development process easier for for the team and then",
    "start": "1990000",
    "end": "1995760"
  },
  {
    "text": "in general then we will pre-save our materials used in the asia cosmos db and of course",
    "start": "1995760",
    "end": "2002240"
  },
  {
    "text": "they're going to be it's going to be easily accessible for our clients and consumers",
    "start": "2002240",
    "end": "2008960"
  },
  {
    "text": "oops let's go to them",
    "start": "2008960",
    "end": "2013278"
  },
  {
    "text": "to the court yeah so there is the our age function",
    "start": "2014640",
    "end": "2021600"
  },
  {
    "text": "uh as we can see i'm using cosmos to be triggered and as i mentioned before i just need to specify the connection",
    "start": "2021600",
    "end": "2027840"
  },
  {
    "text": "string connection name database and database name",
    "start": "2027840",
    "end": "2033200"
  },
  {
    "text": "this collection name and flag if you want to create it or not basically it needed",
    "start": "2033200",
    "end": "2039360"
  },
  {
    "text": "to share the state of between the asian functions of the change fields so",
    "start": "2039360",
    "end": "2046399"
  },
  {
    "text": "once we specify the connection string and database name and which collection we are listening to",
    "start": "2046399",
    "end": "2054079"
  },
  {
    "text": "we will be able to receive those updates in in this case read on the list of documents it's going to be",
    "start": "2054079",
    "end": "2060398"
  },
  {
    "text": "our input and we can interact with this event so",
    "start": "2060399",
    "end": "2066320"
  },
  {
    "text": "i will skip for now those two lines what what was what gonna happen here uh we will just iterate through the documents",
    "start": "2066320",
    "end": "2072638"
  },
  {
    "text": "which will receive and we will write log some data maybe maybe not depends it depends on our needs and",
    "start": "2072639",
    "end": "2079440"
  },
  {
    "text": "then we will disregard the document in the order object",
    "start": "2079440",
    "end": "2084480"
  },
  {
    "text": "and create those materialized views so basically create and save them in the back to cosmos to be",
    "start": "2084480",
    "end": "2091839"
  },
  {
    "text": "i'm using um as well cosmos client as i did used before in",
    "start": "2091839",
    "end": "2097118"
  },
  {
    "text": "his example i'm doing this just for demo purposes what i can do i can also use output",
    "start": "2097119",
    "end": "2103920"
  },
  {
    "text": "binding like this so i will not need to use cosmos client i can just say okay i have",
    "start": "2103920",
    "end": "2109520"
  },
  {
    "text": "cosmos db output binding i will have a dynamic type here",
    "start": "2109520",
    "end": "2115520"
  },
  {
    "text": "but i can also specify that this will be a collection of my documents like to automatically serialize it i think it",
    "start": "2115520",
    "end": "2122000"
  },
  {
    "text": "should be possible so we have out of our documents and here i also have to",
    "start": "2122000",
    "end": "2128320"
  },
  {
    "text": "specify which connection string collection name and database so where i want to write my data after after the i",
    "start": "2128320",
    "end": "2134240"
  },
  {
    "text": "will finish execution of asia function but just to have a look how this could be",
    "start": "2134240",
    "end": "2140240"
  },
  {
    "text": "done with the cosmos client as well i decided to to go only this trigger in this case",
    "start": "2140240",
    "end": "2147040"
  },
  {
    "text": "so we have uh two objects which are customer or u repository in hubble review repository there's not much logic",
    "start": "2147040",
    "end": "2153599"
  },
  {
    "text": "in there they are just basically uh creation of containers",
    "start": "2153599",
    "end": "2161200"
  },
  {
    "text": "uh in this case we have customer overview container",
    "start": "2161200",
    "end": "2167200"
  },
  {
    "text": "which will store much advice to use for our customers so basically how many orders and what articles were ordered by",
    "start": "2167200",
    "end": "2173040"
  },
  {
    "text": "this customer and then the second um repository it's a hub monitoring",
    "start": "2173040",
    "end": "2178400"
  },
  {
    "text": "basically for our warehouses uh to display on the dashboards how many orders um",
    "start": "2178400",
    "end": "2183839"
  },
  {
    "text": "incoming in system for today for example uh we will save this information in this container but the main logic basically",
    "start": "2183839",
    "end": "2190560"
  },
  {
    "text": "what we're going to do is in base repository again we you can also access the",
    "start": "2190560",
    "end": "2195920"
  },
  {
    "text": "source code in our github repository and to have a look in more details but just to briefly",
    "start": "2195920",
    "end": "2203520"
  },
  {
    "text": "explain what's happening here we have three methods to access document create document and update document when we",
    "start": "2203520",
    "end": "2209280"
  },
  {
    "text": "need it i will read the document using point trees so it means that i",
    "start": "2209280",
    "end": "2215440"
  },
  {
    "text": "know exactly which logical position i want to tackle and which exactly document i want to access",
    "start": "2215440",
    "end": "2221440"
  },
  {
    "text": "because i'm going to use id of the customer or id the idea of the customer as a partition",
    "start": "2221440",
    "end": "2228720"
  },
  {
    "text": "key and i know that this id is always unique so i can use it as a partition key and",
    "start": "2228720",
    "end": "2234800"
  },
  {
    "text": "as a document id this will just simplify the way how i'm going to read my documents for the",
    "start": "2234800",
    "end": "2240640"
  },
  {
    "text": "creation and update of the documents quite similar here of course for the demo purposes it might be more",
    "start": "2240640",
    "end": "2246079"
  },
  {
    "text": "complicated uh but what is interesting here first i'm",
    "start": "2246079",
    "end": "2251200"
  },
  {
    "text": "providing i'm setting flag enable content response and write to false it means after",
    "start": "2251200",
    "end": "2257119"
  },
  {
    "text": "i will execute my quest after my data will be written in cosmos db i would not receive back",
    "start": "2257119",
    "end": "2262720"
  },
  {
    "text": "um a response of what was created or what was changed so i'll just say i'll just have okay like 200 or not and i'm",
    "start": "2262720",
    "end": "2270240"
  },
  {
    "text": "also providing a partition key it's not required i can just remove it and it will also work",
    "start": "2270240",
    "end": "2276000"
  },
  {
    "text": "fine uh because we're using sdk but it's just a small improvement",
    "start": "2276000",
    "end": "2283119"
  },
  {
    "text": "to basically performance improvements so sdk would not extract it",
    "start": "2283119",
    "end": "2288160"
  },
  {
    "text": "uh under the hood but it will be explicitly provided and for the update it's basically looks",
    "start": "2288160",
    "end": "2293920"
  },
  {
    "text": "exactly the same instead they accept the method we are calling",
    "start": "2293920",
    "end": "2298960"
  },
  {
    "text": "and going back to our triggers so we have those two repositories they will allow us to interact with um",
    "start": "2298960",
    "end": "2305200"
  },
  {
    "text": "cosmos db and as i said before we will enter in just iterate through our documents and",
    "start": "2305200",
    "end": "2311599"
  },
  {
    "text": "we will create much less views and save them to a database so for the customer as i",
    "start": "2311599",
    "end": "2317280"
  },
  {
    "text": "said i'm going to use customer id the logic is pretty simple i will just",
    "start": "2317280",
    "end": "2322320"
  },
  {
    "text": "have a look if i already have this aggregated view uh saved in the",
    "start": "2322320",
    "end": "2327440"
  },
  {
    "text": "database or not if i don't have it then i will just create a new one if i already have it i",
    "start": "2327440",
    "end": "2334320"
  },
  {
    "text": "will update existing one for the warehouse",
    "start": "2334320",
    "end": "2339839"
  },
  {
    "text": "in general logic is the same the interesting thing is that i'm going to use here synthetic key synthetic",
    "start": "2339839",
    "end": "2346880"
  },
  {
    "text": "partition key i'm going to combine warehouse id uh which i'm using like",
    "start": "2346880",
    "end": "2353520"
  },
  {
    "text": "to start my documents as well with the daytime so this will make it uh this will make",
    "start": "2353520",
    "end": "2360240"
  },
  {
    "text": "my uh basically petition key unique for every day for every warehouse and will allow me as well to have a point read of",
    "start": "2360240",
    "end": "2368079"
  },
  {
    "text": "the document for every day and i can be sure that it's going to be only one document per day which makes it",
    "start": "2368079",
    "end": "2375040"
  },
  {
    "text": "unique and safe for me to read this document the same operation here i'm getting the",
    "start": "2375040",
    "end": "2381359"
  },
  {
    "text": "document if i don't have it i'm creating one if i have it i'm just updating",
    "start": "2381359",
    "end": "2386800"
  },
  {
    "text": "which is exist so yeah that's basically it how azure",
    "start": "2386800",
    "end": "2393839"
  },
  {
    "text": "function looks like and again i would normally remove",
    "start": "2393839",
    "end": "2399119"
  },
  {
    "text": "this functionality in a separate asian function and i'll keep one asian function for creating a customer overview and a separate azure function",
    "start": "2399119",
    "end": "2406640"
  },
  {
    "text": "for the warehouse overview let's have a look then",
    "start": "2406640",
    "end": "2411839"
  },
  {
    "text": "go to our portal and see how it actually looks",
    "start": "2411839",
    "end": "2418160"
  },
  {
    "text": "in the database so we have our our cosmos tp we already uh i let run his uh his part of the demo",
    "start": "2418400",
    "end": "2425680"
  },
  {
    "text": "because the database was created with the containers inside and",
    "start": "2425680",
    "end": "2431359"
  },
  {
    "text": "here we already saw this part uh our document with other information",
    "start": "2431359",
    "end": "2436640"
  },
  {
    "text": "but also as you can see the customer overview and hub monitoring container was also created because my asian",
    "start": "2436640",
    "end": "2443040"
  },
  {
    "text": "function when and that was writing this part of a demo azure function was already published on asia so",
    "start": "2443040",
    "end": "2449040"
  },
  {
    "text": "here for hub monitoring if i will select the items",
    "start": "2449040",
    "end": "2454160"
  },
  {
    "text": "we will see as i mentioned before for the id of the document and the",
    "start": "2454160",
    "end": "2460480"
  },
  {
    "text": "partition key i'm using the same value and this is basically warehouse id combined with today's date and here i",
    "start": "2460480",
    "end": "2467119"
  },
  {
    "text": "have the summary of the orders it's basically just order numbers",
    "start": "2467119",
    "end": "2472480"
  },
  {
    "text": "and a count so every time when in my warehouse with id",
    "start": "2472480",
    "end": "2478319"
  },
  {
    "text": "like 10 000 thousand gonna be gonna be new order uh the order will be",
    "start": "2478319",
    "end": "2483760"
  },
  {
    "text": "created there or updated i will discount number will change and of course like numbers on the dashboard",
    "start": "2483760",
    "end": "2490880"
  },
  {
    "text": "will also be updated",
    "start": "2490880",
    "end": "2495720"
  },
  {
    "text": "that's how the warehouse the hub monitoring like overview looks like and it will go to",
    "start": "2495920",
    "end": "2501040"
  },
  {
    "text": "the customer overview here is the same situation",
    "start": "2501040",
    "end": "2506560"
  },
  {
    "text": "we have a id of a document and a customer id which is partition key in",
    "start": "2506720",
    "end": "2512880"
  },
  {
    "text": "our case which is partition key path they are the same and as we can see here we have a count",
    "start": "2512880",
    "end": "2519920"
  },
  {
    "text": "of orders and we have all the details for every customer so basically if we have um in",
    "start": "2519920",
    "end": "2525760"
  },
  {
    "text": "our web application or maybe one more application page where customer wants to see on the other overview of all the",
    "start": "2525760",
    "end": "2532720"
  },
  {
    "text": "history of his orders this would be a great great example of how to use this materials view",
    "start": "2532720",
    "end": "2539760"
  },
  {
    "text": "um basically that's it for them",
    "start": "2539760",
    "end": "2545280"
  },
  {
    "text": "for the materialized view materials for part and let's go back to",
    "start": "2545280",
    "end": "2550480"
  },
  {
    "text": "our presentation and um we are almost done with the with the",
    "start": "2550480",
    "end": "2556160"
  },
  {
    "text": "presentation before we will finish uh just a couple of key takeaways",
    "start": "2556160",
    "end": "2563560"
  },
  {
    "text": "yep and so we already had a look how we can um use cosmos db as a central up and only",
    "start": "2564480",
    "end": "2571440"
  },
  {
    "text": "persistent data store we also had a look how we can use change feed in our case",
    "start": "2571440",
    "end": "2577359"
  },
  {
    "text": "to to react in all those changes and uh basically how we can use uh events",
    "start": "2577359",
    "end": "2582720"
  },
  {
    "text": "sourcing with a cosmos db also",
    "start": "2582720",
    "end": "2588319"
  },
  {
    "text": "yes so um event sourcing on azure is amazing because when you have those right heavy loads",
    "start": "2588319",
    "end": "2595280"
  },
  {
    "text": "this is very shines and not just azure of course like we are talking about azure today but every",
    "start": "2595280",
    "end": "2601119"
  },
  {
    "text": "cloud has their own capabilities for this i really think that thanks to the cloud we can do these kind",
    "start": "2601119",
    "end": "2607119"
  },
  {
    "text": "of event sourcing patterns where we can have millions of producers and consumers",
    "start": "2607119",
    "end": "2612400"
  },
  {
    "text": "that are all connecting these different systems because we now have the different services that can actually handle this",
    "start": "2612400",
    "end": "2617520"
  },
  {
    "text": "load without us having to buy like big data centers or stuff like that we can just get that capacity use it when",
    "start": "2617520",
    "end": "2624720"
  },
  {
    "text": "needed and scale down again when needed as well so when you are looking this heavy white loads actually do have a look at event",
    "start": "2624720",
    "end": "2630960"
  },
  {
    "text": "sourcing pattern of course we have seen it here today there's also different information out there uh among other things on the",
    "start": "2630960",
    "end": "2637599"
  },
  {
    "text": "microsoft documentation about how to set this up and how we can implement this",
    "start": "2637599",
    "end": "2643440"
  },
  {
    "text": "yeah that's great and um also we had a look uh how we can prepare much less to",
    "start": "2643599",
    "end": "2648720"
  },
  {
    "text": "use um when you ended when you were talking like about your like first demo part i",
    "start": "2648720",
    "end": "2655599"
  },
  {
    "text": "think you mentioned something like a cqrs approach and uh actually yeah does much device",
    "start": "2655599",
    "end": "2661440"
  },
  {
    "text": "use um that's exactly um what he said so we will have",
    "start": "2661440",
    "end": "2666960"
  },
  {
    "text": "our uh right operations uh separately from for read operations so we will basically prepare our system",
    "start": "2666960",
    "end": "2673520"
  },
  {
    "text": "to be uh easily accessible for read operations and in this in the same time under the hood",
    "start": "2673520",
    "end": "2679760"
  },
  {
    "text": "we will perform our write operations our updates so they're going to be separately and we'll have this separations between the queries and",
    "start": "2679760",
    "end": "2687520"
  },
  {
    "text": "basically comments execution and um also materialized views as we saw already um",
    "start": "2687520",
    "end": "2694079"
  },
  {
    "text": "we can recreate and dublicate data as much as we want but the great thing is that it's gonna be from the single",
    "start": "2694079",
    "end": "2700160"
  },
  {
    "text": "source of truth so we can be sure that our state is always current always the same and",
    "start": "2700160",
    "end": "2705760"
  },
  {
    "text": "our data is also not corrupted somehow and the last point",
    "start": "2705760",
    "end": "2712720"
  },
  {
    "text": "yes so um and of course today we have seen three different services we have seen constant b we have seen functions",
    "start": "2712720",
    "end": "2718400"
  },
  {
    "text": "we have seen event ups mouse but um azure has much more out there",
    "start": "2718400",
    "end": "2724720"
  },
  {
    "text": "azure has a lot of different services that can all combine and that we can",
    "start": "2724720",
    "end": "2730960"
  },
  {
    "text": "use together to actually create more powerful solutions so what i would say is have a look at what is out there on azure there is at",
    "start": "2730960",
    "end": "2737440"
  },
  {
    "text": "the moment 280 servers or something like that maybe even more if you count all the",
    "start": "2737440",
    "end": "2742720"
  },
  {
    "text": "sub-services as well but there's a load of different services out there so really have a look at your",
    "start": "2742720",
    "end": "2748319"
  },
  {
    "text": "scenario which pattern fits that and how azure can actually help you",
    "start": "2748319",
    "end": "2753440"
  },
  {
    "text": "solve those solutions great uh yes i i remember that you also",
    "start": "2753440",
    "end": "2759839"
  },
  {
    "text": "told me this many times to have a look at different features and that's exactly the case uh",
    "start": "2759839",
    "end": "2765200"
  },
  {
    "text": "even with cosmos db we can have some uh connectors under the hood to apache",
    "start": "2765200",
    "end": "2770319"
  },
  {
    "text": "spark if we need to have some real-time aggregations what i found quite um great because uh for for the warehouse system",
    "start": "2770319",
    "end": "2777280"
  },
  {
    "text": "for example that was exactly what we were looking into but yeah for for now it's um",
    "start": "2777280",
    "end": "2784960"
  },
  {
    "text": "we are down uh here is again our details for the linkedin or twitter feel free to",
    "start": "2784960",
    "end": "2790800"
  },
  {
    "text": "connect and leave us comments or questions if you have any and i do believe that there's",
    "start": "2790800",
    "end": "2797440"
  },
  {
    "text": "some yeah so um i also want to like say thank you elena because it was amazing to be on",
    "start": "2797440",
    "end": "2804319"
  },
  {
    "text": "stage with you again even this personally hopefully next time we can do this in person instantly because i'm really missing something oh we will soon",
    "start": "2804319",
    "end": "2811839"
  },
  {
    "text": "in couple of days oh not the city that",
    "start": "2811839",
    "end": "2817040"
  },
  {
    "text": "thank you for being here and i hope that you are enjoying the nbc sydney uh nbc is actually one of my favorite events um",
    "start": "2820480",
    "end": "2828319"
  },
  {
    "text": "so enjoy the rest of the session today and indeed there are already some questions out there so let's have a look",
    "start": "2828319",
    "end": "2834000"
  },
  {
    "text": "if you have any more questions feel free to put them in the chat either here or on slack",
    "start": "2834000",
    "end": "2839200"
  },
  {
    "text": "or contact us on our twitter so let's start with glob so there seems to be multiple points of potential",
    "start": "2839200",
    "end": "2845680"
  },
  {
    "text": "failure before an event event gets to the single source of truth event source in the cosmic b we go through kaka event",
    "start": "2845680",
    "end": "2852319"
  },
  {
    "text": "hubs functions and finally event source to act on from application perspective there seems to be the suggest multiple",
    "start": "2852319",
    "end": "2859040"
  },
  {
    "text": "points of compensation required if one message fails but other related ones get through and he thoughts on this and how",
    "start": "2859040",
    "end": "2864240"
  },
  {
    "text": "he can tackle it so yeah basically the question here is okay we have different points where",
    "start": "2864240",
    "end": "2869280"
  },
  {
    "text": "things can fail and what do we do if one of these points fail but we have multiple different events that might be",
    "start": "2869280",
    "end": "2875920"
  },
  {
    "text": "working with the same entity and this indeed is a very interesting question and",
    "start": "2875920",
    "end": "2881680"
  },
  {
    "text": "i'm an architect so my answer is always it depends",
    "start": "2881680",
    "end": "2886920"
  },
  {
    "text": "yeah first of all event sourcing is not the single solution for every issue let's put that first so what we have",
    "start": "2887920",
    "end": "2893760"
  },
  {
    "text": "shown today is working with a specific scenario and i would actually say that event",
    "start": "2893760",
    "end": "2899280"
  },
  {
    "text": "sourcing if you need like two transactional transactional",
    "start": "2899280",
    "end": "2905599"
  },
  {
    "text": "processes you can do it with defense sourcing but it will be harder so maybe look also",
    "start": "2905599",
    "end": "2910640"
  },
  {
    "text": "into different options there like for example service bus has much more functional",
    "start": "2910640",
    "end": "2916079"
  },
  {
    "text": "around transactionality and rollbacks and things like that however of course you can do it in event",
    "start": "2916079",
    "end": "2922240"
  },
  {
    "text": "sourcing as well with the different components we show you today you think have to think about okay what",
    "start": "2922240",
    "end": "2927920"
  },
  {
    "text": "happens if one of those comm if one of the components fails what do i need to compensate",
    "start": "2927920",
    "end": "2932960"
  },
  {
    "text": "sometimes it might just be like okay we'll just accept that maybe one of those entities might not be in the",
    "start": "2932960",
    "end": "2938240"
  },
  {
    "text": "perfect state for example on facebook in one of my messages don't come true okay",
    "start": "2938240",
    "end": "2944000"
  },
  {
    "text": "it's not great but no one is going to really care about it that one of my messages might not have come true or",
    "start": "2944000",
    "end": "2949200"
  },
  {
    "text": "might come to later like five minutes later or something like that so that is one option that you just say okay we just don't really care about it",
    "start": "2949200",
    "end": "2955680"
  },
  {
    "text": "if something goes wrong our data is not that important that this will break something on the other hand if you're talking",
    "start": "2955680",
    "end": "2962000"
  },
  {
    "text": "about especially like financial data or something like that you definitely have to think about compensation",
    "start": "2962000",
    "end": "2967359"
  },
  {
    "text": "so if you're working with financial data stock transactions things like that really have a look okay what are the",
    "start": "2967359",
    "end": "2973119"
  },
  {
    "text": "different points where we can fail and maybe indeed implement some kind of compensation logic around this where you",
    "start": "2973119",
    "end": "2979920"
  },
  {
    "text": "can say okay if this this part fails then we might have to actually get all the events for this maybe flag it for",
    "start": "2979920",
    "end": "2986240"
  },
  {
    "text": "someone to actually look at this maybe we are okay with okay if this event comes in later then we will just",
    "start": "2986240",
    "end": "2992720"
  },
  {
    "text": "pause like lock this one until it has been cut up so there's different options and like i said i'm a architect so it",
    "start": "2992720",
    "end": "3000160"
  },
  {
    "text": "all depends on your scenario so there's not one size fits all that's definitely something to think about at start of your uh",
    "start": "3000160",
    "end": "3007520"
  },
  {
    "text": "of your design okay if something goes wrong what does this mean",
    "start": "3007520",
    "end": "3013839"
  },
  {
    "text": "well that's a great answer um that i think that",
    "start": "3014160",
    "end": "3019200"
  },
  {
    "text": "i can read the next question which is much smaller and then you can read the next one which is much bigger",
    "start": "3019200",
    "end": "3025280"
  },
  {
    "text": "sorry but um so how do you handle multiple updates to the same entity at",
    "start": "3025280",
    "end": "3030400"
  },
  {
    "text": "once question from iron um well in cosmos db",
    "start": "3030400",
    "end": "3036319"
  },
  {
    "text": "um in asia customs db they have a functionality of conflict resolution so",
    "start": "3036319",
    "end": "3041520"
  },
  {
    "text": "basically you can set some rules that automatically for example the the latest",
    "start": "3041520",
    "end": "3046800"
  },
  {
    "text": "change will be picked or you can have a kind of like journal of your your exceptions like of",
    "start": "3046800",
    "end": "3053520"
  },
  {
    "text": "errors and then you can go and manually decide manually maybe programmatically but decide how to handle those um those",
    "start": "3053520",
    "end": "3062000"
  },
  {
    "text": "conflicts and yeah basically that's what related to cosmos db but particularly to your logic i guess it",
    "start": "3062000",
    "end": "3069440"
  },
  {
    "text": "depends on how you will implement uh the functionality itself but it's not",
    "start": "3069440",
    "end": "3074720"
  },
  {
    "text": "that big of a problem so of course if there is a um like concurrent concurrency maybe there's",
    "start": "3074720",
    "end": "3081599"
  },
  {
    "text": "there could be some some complications but in general cosmetic has this functionality of conflict resolution",
    "start": "3081599",
    "end": "3089440"
  },
  {
    "text": "perfect and so i think this will be the final question so far if you have more questions actually no there's a new one",
    "start": "3090079",
    "end": "3096240"
  },
  {
    "text": "after that as well first let's start with this one so consider a scenario where you have",
    "start": "3096240",
    "end": "3101680"
  },
  {
    "text": "multiple types of events incoming like already created item edit order order canceled etc",
    "start": "3101680",
    "end": "3107200"
  },
  {
    "text": "how to manage ordering when we play these events at a later time if the three events are types on twitch",
    "start": "3107200",
    "end": "3113280"
  },
  {
    "text": "separate topics so one for the created one for the item added and one for order cancelled there's a good chance that the order",
    "start": "3113280",
    "end": "3120400"
  },
  {
    "text": "cancel will already be processed before all the i or the item edit events are processed",
    "start": "3120400",
    "end": "3125760"
  },
  {
    "text": "um this could cause items added to fail because the materialized order is",
    "start": "3125760",
    "end": "3132160"
  },
  {
    "text": "already cancelled when trying to update this yeah so this indeed a thing that once again you really had to think about okay",
    "start": "3132160",
    "end": "3138800"
  },
  {
    "text": "especially when you're playing that later on so if you play back later you have to think about",
    "start": "3138800",
    "end": "3144000"
  },
  {
    "text": "do i start playing back in specific order of my different topics for example",
    "start": "3144000",
    "end": "3150000"
  },
  {
    "text": "so for example if i order cancel event i know that this should always be the last event i got for example then i know okay",
    "start": "3150000",
    "end": "3156720"
  },
  {
    "text": "i'm first going to for example uh read my order created topic get all the orders created then",
    "start": "3156720",
    "end": "3163760"
  },
  {
    "text": "i'm going to read all the order edit and then i'm going to read all the already cancelled so there might be one solution",
    "start": "3163760",
    "end": "3169520"
  },
  {
    "text": "another solution might be something like um actually just as soon as you get an or cancelled event",
    "start": "3169520",
    "end": "3175359"
  },
  {
    "text": "then they say okay this order has now been locked you can still add to the document but we are not going to do this",
    "start": "3175359",
    "end": "3181040"
  },
  {
    "text": "i don't know anyway this anymore in the front end will show just so this has cancelled even though there's still",
    "start": "3181040",
    "end": "3186319"
  },
  {
    "text": "playback happening in the in the back end for the order i didn't edit so once again uh different ways to",
    "start": "3186319",
    "end": "3192880"
  },
  {
    "text": "handle this different options to handle this and also of course once again depends on",
    "start": "3192880",
    "end": "3198640"
  },
  {
    "text": "your scenario what makes sense for you but there's definitely some guidance around this on the internet as well",
    "start": "3198640",
    "end": "3205680"
  },
  {
    "text": "also just because this is not specific actually like there's a lot of guys around event sourcing uh for example",
    "start": "3205680",
    "end": "3211920"
  },
  {
    "text": "greg young has read a lot about this so definitely if you want to know more about event sourcing look up greg yarn",
    "start": "3211920",
    "end": "3217599"
  },
  {
    "text": "and he will like explain a lot of different details about this as well about how you can indeed have this kind",
    "start": "3217599",
    "end": "3223280"
  },
  {
    "text": "of scenarios yeah that's stroke i can talk about it",
    "start": "3223280",
    "end": "3228800"
  },
  {
    "text": "for a really long time um the next question we have is the",
    "start": "3228800",
    "end": "3234880"
  },
  {
    "text": "kafka support dynamic topic creation does this service follow over the event hubs as well question from cn",
    "start": "3234880",
    "end": "3243440"
  },
  {
    "text": "yeah so um i'm not quite sure i don't think so that we have dynamic top creation already",
    "start": "3243440",
    "end": "3250800"
  },
  {
    "text": "uh but i'm not like i said i'm not completely sure i don't work that much with kafka i've done it a few times with",
    "start": "3250800",
    "end": "3256960"
  },
  {
    "text": "different customers um but i'm not very deep into this so i know that it's there in kafka i have not",
    "start": "3256960",
    "end": "3262880"
  },
  {
    "text": "used it myself with vent ups but i would definitely say that have a look at the documentation side of event",
    "start": "3262880",
    "end": "3268559"
  },
  {
    "text": "hops because there is a complete list of all of each parity for kafka i know they want to be completely",
    "start": "3268559",
    "end": "3274240"
  },
  {
    "text": "featured like feature parody at some point i don't know where they are yet so i",
    "start": "3274240",
    "end": "3279520"
  },
  {
    "text": "cannot answer this question right away but i definitely would say have a look at documentation for event ops and there's a whole view okay what what",
    "start": "3279520",
    "end": "3286559"
  },
  {
    "text": "parity do we have at the moment um cool and there was another question if",
    "start": "3286559",
    "end": "3293920"
  },
  {
    "text": "you'll share the samples just like yesterday well we will send a link to source code",
    "start": "3293920",
    "end": "3299119"
  },
  {
    "text": "and the other one what if what if there is inconsistency between source code of truth the source of truth and machine",
    "start": "3299119",
    "end": "3305680"
  },
  {
    "text": "lies you how do we travel should find such inconsistency well first of all uh we",
    "start": "3305680",
    "end": "3312960"
  },
  {
    "text": "will need to understand why why why do we have this um inconsistency it's i can imagine this",
    "start": "3312960",
    "end": "3320480"
  },
  {
    "text": "scenario if we went to the materialized u and edited",
    "start": "3320480",
    "end": "3325760"
  },
  {
    "text": "it manually or we allowed other maybe parts of the system maybe now that",
    "start": "3325760",
    "end": "3332480"
  },
  {
    "text": "maybe some asian functions i don't know whatever like your your system also like went and then edited materialize you",
    "start": "3332480",
    "end": "3338640"
  },
  {
    "text": "which should not happen because your materials you is just not just a snapshot of uh like your aggregated data",
    "start": "3338640",
    "end": "3345200"
  },
  {
    "text": "and it should not be changed if you want to change your materials view uh there are some some events should be replayed",
    "start": "3345200",
    "end": "3351920"
  },
  {
    "text": "and um yeah some some events should happen and they should be updated not by just just",
    "start": "3351920",
    "end": "3358400"
  },
  {
    "text": "changing the state of the view but actually something happened in the in the system but if you have this inconsistency you",
    "start": "3358400",
    "end": "3365280"
  },
  {
    "text": "can do kind of like smoke testing with with cosmos db so you can",
    "start": "3365280",
    "end": "3372319"
  },
  {
    "text": "um identify for which point of view you started to have the problems so you can",
    "start": "3372319",
    "end": "3377440"
  },
  {
    "text": "replay from the very beginning or at some point of the of in the change fit you can replay the",
    "start": "3377440",
    "end": "3383839"
  },
  {
    "text": "oldest events and see from what exactly moment you started to have the problems",
    "start": "3383839",
    "end": "3388880"
  },
  {
    "text": "if you replayed everything couple of times and there is no problems but your data is still inconsistent then there is",
    "start": "3388880",
    "end": "3394400"
  },
  {
    "text": "definitely somewhere some out from outer basically factor which is",
    "start": "3394400",
    "end": "3399760"
  },
  {
    "text": "changing or updating your data something went wrong and maybe in your business logic maybe if you have some",
    "start": "3399760",
    "end": "3405440"
  },
  {
    "text": "dependencies um in your your core during creation of materials views on on",
    "start": "3405440",
    "end": "3411440"
  },
  {
    "text": "other part of the system maybe those those pieces like give a failure but normally you can",
    "start": "3411440",
    "end": "3419280"
  },
  {
    "text": "replay and see if your state is changing of the materials view",
    "start": "3419280",
    "end": "3425440"
  },
  {
    "text": "if it's changing you can identify from which point of view it happened and then find the problem isn't the problem with",
    "start": "3425440",
    "end": "3431200"
  },
  {
    "text": "the data or it's a problem in your dependencies or it's a problem in the business logic itself",
    "start": "3431200",
    "end": "3436799"
  },
  {
    "text": "um but yeah basically replaying change fit that's good already quite a lot it gives you a lot of flexibility of how to",
    "start": "3436799",
    "end": "3443520"
  },
  {
    "text": "find the problem and yeah that was the last question i",
    "start": "3443520",
    "end": "3449200"
  },
  {
    "text": "guess so once again thank you everyone thank you elena for a great session",
    "start": "3449200",
    "end": "3455520"
  },
  {
    "text": "thank you to the nbc crew for being our host and having us here today and i already saw just coming by so i was",
    "start": "3455520",
    "end": "3462240"
  },
  {
    "text": "looking at the session looks very interesting so definitely people can stay around for that as well and enjoy the rest of the conference if",
    "start": "3462240",
    "end": "3468799"
  },
  {
    "text": "that would not be a night maybe i would also sit and watch something yes thanks a lot again thanks for for the great questions",
    "start": "3468799",
    "end": "3475839"
  },
  {
    "text": "thanks for the um for the nice uh welcoming um",
    "start": "3475839",
    "end": "3480880"
  },
  {
    "text": "hosts and really it was pleasure to be here thanks adad for sharing the stage for being an amazing co-speaker",
    "start": "3480880",
    "end": "3488319"
  },
  {
    "text": "and yeah enjoy the rest of the conference everyone",
    "start": "3488319",
    "end": "3493079"
  }
]