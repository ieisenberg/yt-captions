[
  {
    "start": "0",
    "end": "61000"
  },
  {
    "text": "III feel involved with this thing called identity server for quite a while and as",
    "start": "4650",
    "end": "9730"
  },
  {
    "text": "the name implies it's a server yeah and I never really cared about clients but I also completely appreciate the fact that",
    "start": "9730",
    "end": "16930"
  },
  {
    "text": "most people the only reason people bring up a service to connect clients to it so we have lots of customers that actually",
    "start": "16930",
    "end": "23380"
  },
  {
    "text": "write clients and and what this talk is about is basically giving you an",
    "start": "23380",
    "end": "28869"
  },
  {
    "text": "overview basically of the things you need to know when writing a client for a token-based back-end and that is",
    "start": "28869",
    "end": "35410"
  },
  {
    "text": "typically open early connect and a wharf ok this is not an introduction to open early connect or Wharf otherwise we",
    "start": "35410",
    "end": "41860"
  },
  {
    "text": "would need two more days after this session so the assumption is that you kind of know what it's about and you",
    "start": "41860",
    "end": "51070"
  },
  {
    "text": "know and and you basically just get the guidance that the digest if you like",
    "start": "51070",
    "end": "56890"
  },
  {
    "text": "ma'am so when you when you start going",
    "start": "56890",
    "end": "68320"
  },
  {
    "start": "61000",
    "end": "61000"
  },
  {
    "text": "out to the internet and and you know like Google for how do I build a client for my connect yeah you're gonna get",
    "start": "68320",
    "end": "74590"
  },
  {
    "text": "tons of links basically yeah and and",
    "start": "74590",
    "end": "80850"
  },
  {
    "text": "part of that reason why why you gonna get tons of links and also maybe",
    "start": "80850",
    "end": "86470"
  },
  {
    "text": "confusing and conflicting information is because it's complicated okay and one",
    "start": "86470",
    "end": "93100"
  },
  {
    "start": "90000",
    "end": "90000"
  },
  {
    "text": "reason it's complicated more complicated than it could be is is that ooofff an",
    "start": "93100",
    "end": "100390"
  },
  {
    "text": "open oh bloody connect are maintained by two different standards bodies okay normally you don't use a Wharf on your",
    "start": "100390",
    "end": "108490"
  },
  {
    "text": "own on its own rudder or and you don't use open re connect on its own it's typically a combination of the two",
    "start": "108490",
    "end": "114640"
  },
  {
    "text": "protocols that make up a useful system the problem is is that one is maintained by the IETF and one is maintained by the",
    "start": "114640",
    "end": "121570"
  },
  {
    "text": "oh bloody foundation and you have to basically piece together the information from both websites into into one",
    "start": "121570",
    "end": "128429"
  },
  {
    "text": "guideline if you like okay so if I go to",
    "start": "128429",
    "end": "134290"
  },
  {
    "text": "these websites here and and transform the content into this it gets apparent that there are a",
    "start": "134290",
    "end": "140400"
  },
  {
    "text": "significant number of specifications out there ma'am I I recently saw that somebody counted",
    "start": "140400",
    "end": "149349"
  },
  {
    "text": "the pages of all specifications and it was twice the number of pages than one piece so it's a lot of stuff to read",
    "start": "149349",
    "end": "156969"
  },
  {
    "text": "okay unfortunately I can tell you I have read them all I guess so what this talk is about",
    "start": "156969",
    "end": "163480"
  },
  {
    "text": "basically is you know sorting out the useful versus the not so useful stuff okay so um so normally you know we talk",
    "start": "163480",
    "end": "173379"
  },
  {
    "text": "about the things on the right size today we're gonna talk about the things on the on the left side and we will make a",
    "start": "173379",
    "end": "181419"
  },
  {
    "text": "distinction between so-called public lines and confidential clients yeah so when you look up look into spec the",
    "start": "181419",
    "end": "188829"
  },
  {
    "text": "definition of a confidential client is a client that can securely store a secret and that for all practical means",
    "start": "188829",
    "end": "194169"
  },
  {
    "text": "typically means it's a server based client yeah something that lives on the server that is a you know secure in a",
    "start": "194169",
    "end": "200200"
  },
  {
    "text": "data center and you can store stuff there ma'am various the public line is exactly the",
    "start": "200200",
    "end": "205599"
  },
  {
    "text": "opposite of that it's basically something that is well that cannot store a secret securely because there there is",
    "start": "205599",
    "end": "213250"
  },
  {
    "text": "no good place to store it yeah like JavaScript based applications or you know like things that you install on on",
    "start": "213250",
    "end": "219220"
  },
  {
    "text": "users machines okay so we're gonna have a distinction between the two so",
    "start": "219220",
    "end": "225599"
  },
  {
    "text": "generally speaking regardless of the client yeah the requirements looks",
    "start": "225599",
    "end": "231129"
  },
  {
    "text": "simple right you get a token you use the token there's the whole point of the system when we look at the most simplest",
    "start": "231129",
    "end": "237819"
  },
  {
    "start": "235000",
    "end": "235000"
  },
  {
    "text": "flow in in which is called the client credentials flow which is for server to server based communication the way this",
    "start": "237819",
    "end": "244689"
  },
  {
    "text": "works is basically it is you have a client that's this thing here you have api's in your system and you have this",
    "start": "244689",
    "end": "251530"
  },
  {
    "text": "thing called the authorization server which is basically the the token service so when the client now wants to talk to",
    "start": "251530",
    "end": "257709"
  },
  {
    "text": "the API he doesn't send his secret directly to the API he first goes to the token server or authenticated a token",
    "start": "257709",
    "end": "264669"
  },
  {
    "text": "server gets back a token and from that point on users to token to access the API right that is the way it works",
    "start": "264669",
    "end": "272410"
  },
  {
    "text": "all the time in variations sending the",
    "start": "272410",
    "end": "277690"
  },
  {
    "start": "276000",
    "end": "276000"
  },
  {
    "text": "token to the API there's a spec for that hour of c6 750 basically that the",
    "start": "277690",
    "end": "282940"
  },
  {
    "text": "recommendation is use the authorization header in HTTP that's a special header from the SEF you know from from an from",
    "start": "282940",
    "end": "290110"
  },
  {
    "text": "a security point of view web servers are aware of this header that it will contain confidential information they",
    "start": "290110",
    "end": "296380"
  },
  {
    "text": "typically don't lock these headers browsers handle them in a special way",
    "start": "296380",
    "end": "301840"
  },
  {
    "text": "and so on so that's basically how you send the token to the API so that's easy",
    "start": "301840",
    "end": "307690"
  },
  {
    "text": "but the hard part and that's probably the the the biggest part of this talk is",
    "start": "307690",
    "end": "316450"
  },
  {
    "text": "what's happening in between after you requested the token and before you use the token do you have to manage those",
    "start": "316450",
    "end": "322540"
  },
  {
    "text": "tokens yeah so what you don't want to do is for each API call get a new token that would be very inefficient yeah so",
    "start": "322540",
    "end": "328740"
  },
  {
    "text": "so what the typical approach is is you get a token you see you store it",
    "start": "328740",
    "end": "334840"
  },
  {
    "text": "somewhere you hold on to this token for a certain amount of time and you keep using or reusing their token to talk to",
    "start": "334840",
    "end": "340930"
  },
  {
    "text": "the API okay so there are many approaches on how to do that you know like maybe you're just storing it in a",
    "start": "340930",
    "end": "346450"
  },
  {
    "text": "variable that's good enough or maybe you have like a real caching system a net",
    "start": "346450",
    "end": "351550"
  },
  {
    "text": "has the session storage system maybe you have more you know like a vault for example things like that a database",
    "start": "351550",
    "end": "357730"
  },
  {
    "text": "might might do as well and then there are two general strategies here either",
    "start": "357730",
    "end": "365050"
  },
  {
    "text": "you just you know put that thing in your cache maybe give that cache a lifetime of token lifetime minus one minute or",
    "start": "365050",
    "end": "373030"
  },
  {
    "text": "two minutes or something like this and as soon as the cache doesn't give you back the token you get a new one cache",
    "start": "373030",
    "end": "378280"
  },
  {
    "text": "it again and and continue you think that the other approach is called you know it's more like you don't care too much",
    "start": "378280",
    "end": "384340"
  },
  {
    "text": "about the caching you just keep using their token until you get back a 4 1 4 1 means well the token is expired",
    "start": "384340",
    "end": "390520"
  },
  {
    "text": "you get a new token you resend the request so it you know it's it's proactive versus reactive one of the two",
    "start": "390520",
    "end": "396970"
  },
  {
    "text": "you have to implement ok so in other words the real challenges are requesting",
    "start": "396970",
    "end": "403600"
  },
  {
    "text": "the token well but which type of protocol flow we are using managing to talk and",
    "start": "403600",
    "end": "408750"
  },
  {
    "text": "storing them renewing them you know make up your mind for how long you need to access those api's and then you use the",
    "start": "408750",
    "end": "415320"
  },
  {
    "text": "token for that's you know that's how it works okay so let's have a look at some",
    "start": "415320",
    "end": "420350"
  },
  {
    "text": "at some typical scenarios here yeah so",
    "start": "420350",
    "end": "425370"
  },
  {
    "text": "one is um one is or the most common scenario I should say is basically you",
    "start": "425370",
    "end": "431400"
  },
  {
    "text": "have an interactive application you know with a UI let's say it's an application",
    "start": "431400",
    "end": "437210"
  },
  {
    "text": "so you have a couple of jobs to do here",
    "start": "437210",
    "end": "442530"
  },
  {
    "text": "you want to authenticate the user first you want to know who the user is you want to probably start a session or join",
    "start": "442530",
    "end": "448920"
  },
  {
    "text": "a session like like a single sign-on session for example you know there are",
    "start": "448920",
    "end": "454380"
  },
  {
    "text": "some other things here related to the session like listening for session and modifications and so on and then you",
    "start": "454380",
    "end": "459720"
  },
  {
    "text": "want to make calls to api's on behalf of that currently logged on user and then you want to manage the token basically",
    "start": "459720",
    "end": "466020"
  },
  {
    "text": "that for a lifetime this user is using the application you know you are actually able to call these api's because they expire at some point and",
    "start": "466020",
    "end": "472710"
  },
  {
    "text": "you need to manage them so for that the original o of specification has created",
    "start": "472710",
    "end": "479880"
  },
  {
    "text": "this thing called the authorization code flow and the idea of the authorization code flow is it's a two-step process the",
    "start": "479880",
    "end": "486300"
  },
  {
    "start": "483000",
    "end": "483000"
  },
  {
    "text": "first step is coordinating all of the UI work and the second step is then getting the tokens so if you know that the UI",
    "start": "486300",
    "end": "493140"
  },
  {
    "text": "work happens on them on the front channel in the browser typically where you go to the authorized endpoint and",
    "start": "493140",
    "end": "498330"
  },
  {
    "text": "you say okay I want to have access to these things give me a code that represents the outcome of this request",
    "start": "498330",
    "end": "504480"
  },
  {
    "text": "so that then afterwards I can on the back-channel you know exchange that code",
    "start": "504480",
    "end": "510120"
  },
  {
    "start": "508000",
    "end": "508000"
  },
  {
    "text": "with the token that that's offer a sation code flow and you know this is not not an introduction to or from the",
    "start": "510120",
    "end": "516810"
  },
  {
    "text": "assumption is you know all these things already okay so that flow was created in",
    "start": "516810",
    "end": "523380"
  },
  {
    "text": "the first place because it seemed to be the most secure option right so if an attacker could steal the code in the",
    "start": "523380",
    "end": "529470"
  },
  {
    "text": "browser then he couldn't turn it back into a token because he's missing the client secret for example for that you",
    "start": "529470",
    "end": "534540"
  },
  {
    "text": "know was that the original motivation so to speak that this code represents all the things that",
    "start": "534540",
    "end": "540060"
  },
  {
    "text": "happened in the UI and then the backend with including that client secret and can harvest the results so to speak",
    "start": "540060",
    "end": "546960"
  },
  {
    "text": "ma'am so that code flow is from 2012",
    "start": "546960",
    "end": "552390"
  },
  {
    "start": "548000",
    "end": "548000"
  },
  {
    "text": "that was really a wolf pack was created it turns out attack us are you know they",
    "start": "552390",
    "end": "560400"
  },
  {
    "text": "they they have some good ideas and they try to attack this protocol in a way",
    "start": "560400",
    "end": "565830"
  },
  {
    "text": "that nobody thought about it first yeah and you know and this is called a code substitution attack and the idea is this",
    "start": "565830",
    "end": "574320"
  },
  {
    "text": "yeah yes the application and the attacker cannot turn that code into a token because he doesn't know the client",
    "start": "574320",
    "end": "580980"
  },
  {
    "text": "secret but if I can trick the application into turning a stolen code",
    "start": "580980",
    "end": "586680"
  },
  {
    "text": "into a token then well I don't need that client secret because the application is doing it for me right so the idea is",
    "start": "586680",
    "end": "593160"
  },
  {
    "text": "maybe I make proc click on a you know install a malicious application for example he looks in that returns the",
    "start": "593160",
    "end": "601140"
  },
  {
    "text": "code I'm stealing that code from him then I'm logging into the real application on the way back I just",
    "start": "601140",
    "end": "606840"
  },
  {
    "text": "exchange the stolen my code with the stolen code and I'm impersonating proc right so it turns out o of has no",
    "start": "606840",
    "end": "615120"
  },
  {
    "text": "mitigation technique for that now so the original code flow is vulnerable to this",
    "start": "615120",
    "end": "621480"
  },
  {
    "text": "problem and there is no solution for that in or of itself um that's my",
    "start": "621480",
    "end": "626970"
  },
  {
    "text": "additional specs exist and you should use one of them one is more like the",
    "start": "626970",
    "end": "632070"
  },
  {
    "text": "open airy connect flavor of solving that problem and one is more the or flavor of solving that problem and it depends",
    "start": "632070",
    "end": "639180"
  },
  {
    "text": "which flavor your client library supports ok so one of the two should be him should be in there let's start with",
    "start": "639180",
    "end": "646320"
  },
  {
    "text": "the hybrid flow and what the hybrid flow approach is doing is basically he adds another token to it yeah but because",
    "start": "646320",
    "end": "652680"
  },
  {
    "start": "647000",
    "end": "647000"
  },
  {
    "text": "ultimately the problem why the client cannot make sure that code is really the code he was looking for is because he",
    "start": "652680",
    "end": "659220"
  },
  {
    "text": "can't validate it right but with an ID token you can validate the identity token and then inside the identity token",
    "start": "659220",
    "end": "665790"
  },
  {
    "start": "664000",
    "end": "664000"
  },
  {
    "text": "there is a special claim called the C hash which which is the hash of the code so in other words you first validate the",
    "start": "665790",
    "end": "672570"
  },
  {
    "text": "signature of the ident touken and with that you can validate the signature of the code okay and that",
    "start": "672570",
    "end": "677800"
  },
  {
    "text": "you know make sure that this code is actually belonging to the identity token and that means nobody has substituted it",
    "start": "677800",
    "end": "684160"
  },
  {
    "text": "okay so a spinner car is an example of that where this is implemented for",
    "start": "684160",
    "end": "689260"
  },
  {
    "text": "example um yes it's been cool so when",
    "start": "689260",
    "end": "696940"
  },
  {
    "text": "you are using a spear core as a client you are in a pretty good state because they are client library is very good",
    "start": "696940",
    "end": "703450"
  },
  {
    "text": "yeah they support hybrid flow they support all the crypto stuff it's it's a",
    "start": "703450",
    "end": "710380"
  },
  {
    "text": "good library we can you know I can",
    "start": "710380",
    "end": "716800"
  },
  {
    "text": "briefly show you that that that that's the example of an agent core application that's their opener you connect handler",
    "start": "716800",
    "end": "723360"
  },
  {
    "text": "you basically specify okay the response type is code ID token that tells the handle okay I'm gonna use hybrid flow",
    "start": "723360",
    "end": "730180"
  },
  {
    "text": "I'm gonna do all of the extra security checks and that's all being done for you okay",
    "start": "730180",
    "end": "737130"
  },
  {
    "text": "another thing that a spirit core does has it has facilities for them for",
    "start": "737130",
    "end": "742420"
  },
  {
    "text": "managing that the tokens are making the token management easier I showed this demo this morning already",
    "start": "742420",
    "end": "748630"
  },
  {
    "text": "so I won't go into detail but basically you can hook into the session lifetime events at a spirit core and implement",
    "start": "748630",
    "end": "754900"
  },
  {
    "text": "your token management there so that your actual business code doesn't need to do",
    "start": "754900",
    "end": "760060"
  },
  {
    "text": "this okay and that's basically by you know implementing a couple of events here on",
    "start": "760060",
    "end": "765190"
  },
  {
    "text": "this cookie authentication Handler and one of them is called validate principles so when the cookie comes in",
    "start": "765190",
    "end": "770880"
  },
  {
    "text": "we we look for the token in the session we checked like is it about to expire if",
    "start": "770880",
    "end": "777460"
  },
  {
    "text": "that's the case under the covers we gonna refresh their token exchange the old one with the new one your",
    "start": "777460",
    "end": "783070"
  },
  {
    "text": "application code doesn't know about this because you know it's it's all happening kind of like in the pipeline okay did",
    "start": "783070",
    "end": "789700"
  },
  {
    "text": "the other thing you can do is which is good hygiene and sign out time we are actually revoking the token again right",
    "start": "789700",
    "end": "796240"
  },
  {
    "text": "because that's that's a good thing to do as I said we don't have time really to",
    "start": "796240",
    "end": "801850"
  },
  {
    "text": "to go into all these details but all of these samples are in our github repo and",
    "start": "801850",
    "end": "807190"
  },
  {
    "text": "I'll show you Burrell later so you can play around with that coach okay",
    "start": "807190",
    "end": "815079"
  },
  {
    "text": "huh there are always issues right so you",
    "start": "815739",
    "end": "821959"
  },
  {
    "start": "816000",
    "end": "816000"
  },
  {
    "text": "could think like okay piped flow is the solution to the problems of why why do we even continue thinking about this",
    "start": "821959",
    "end": "827929"
  },
  {
    "text": "problem it turns out that the solution that Hybrid flow proposes is it's not",
    "start": "827929",
    "end": "835699"
  },
  {
    "text": "simple to implement okay so as I said if you are if you using a spirit core then you're in a pretty good shape",
    "start": "835699",
    "end": "841970"
  },
  {
    "text": "I have many customers that have to integrate with other companies and they don't use the aether core they use PHP and Java and so on and turns out it's",
    "start": "841970",
    "end": "849980"
  },
  {
    "text": "not easy to find spec compliant hybrid flow implementations outside the",
    "start": "849980",
    "end": "855049"
  },
  {
    "text": "Microsoft space because they do not they tame that was there they they implemented it but many other libraries",
    "start": "855049",
    "end": "862639"
  },
  {
    "text": "don't yeah they did it just stayed on pure code flow ignoring the problem with the substitution name so that's one",
    "start": "862639",
    "end": "870019"
  },
  {
    "text": "thing yeah it's it's harder to implement the other thing there's another spec",
    "start": "870019",
    "end": "876860"
  },
  {
    "text": "that came after open D Connect is called gdpr you might have heard of that one as well um since in hype it flow you are you are",
    "start": "876860",
    "end": "885459"
  },
  {
    "text": "sending an identity token you are potentially leaking identity information over the browser right because that's",
    "start": "885459",
    "end": "892129"
  },
  {
    "text": "the nature of the identity token depending on how good your your subject",
    "start": "892129",
    "end": "898009"
  },
  {
    "text": "identify us are or bad how bad they are you might leak identity information",
    "start": "898009",
    "end": "904040"
  },
  {
    "text": "about the user and that might get flagged depending on who you're Chi DPR consultant based yeah so the nice thing",
    "start": "904040",
    "end": "911149"
  },
  {
    "text": "about the code was that all you're really sending over the front channel is this random number and that's it there's",
    "start": "911149",
    "end": "916160"
  },
  {
    "text": "there's no information in it so to speak but it's not good enough yeah and we'll see a second technique in a you know in",
    "start": "916160",
    "end": "921439"
  },
  {
    "text": "a second okay let's switch to public clients so for public lines we typically",
    "start": "921439",
    "end": "928730"
  },
  {
    "start": "924000",
    "end": "924000"
  },
  {
    "text": "deal with two fundamental types one is native clients like a phone you know",
    "start": "928730",
    "end": "934220"
  },
  {
    "text": "phone apps or desktop apps and JavaScript lines yeah so",
    "start": "934220",
    "end": "940380"
  },
  {
    "text": "when we when we look at public clients um the rules are a little bit different",
    "start": "940380",
    "end": "945390"
  },
  {
    "text": "here so normally when we see confidential clients there's a one-to-one mapping between a client ID",
    "start": "945390",
    "end": "951210"
  },
  {
    "text": "and an and the instant of a software now whereas with public lines basically you know you're creating your mobile client",
    "start": "951210",
    "end": "958080"
  },
  {
    "text": "you give it a client ID you put it in the app store on 1 million people download it they all have the same client ID ok so that's different um",
    "start": "958080",
    "end": "966740"
  },
  {
    "text": "there is a process called dynamic client registration which basically is a way to how you can turn a public client into a",
    "start": "966740",
    "end": "973710"
  },
  {
    "text": "confidential client and that is typically done for if it's done then it only makes sense for mobile I mean for",
    "start": "973710",
    "end": "979500"
  },
  {
    "text": "for for native apps and the idea is this that basically you are putting your app into the app store with a bootstrap",
    "start": "979500",
    "end": "985740"
  },
  {
    "text": "client ID and then it's downloaded the first time you run it there's some sort of user authentication happening that's",
    "start": "985740",
    "end": "991290"
  },
  {
    "text": "pairing that instance of the client with some back-end you issue a new client ID you issue a client secret and then you",
    "start": "991290",
    "end": "997410"
  },
  {
    "text": "have have a confidential client basic to him but that is rarely done to be honest",
    "start": "997410",
    "end": "1002870"
  },
  {
    "text": "em ok the good thing is if you're",
    "start": "1002870",
    "end": "1008300"
  },
  {
    "start": "1007000",
    "end": "1007000"
  },
  {
    "text": "building a native application then there is actually a spec for that or you know a spec is maybe the wrong word and they",
    "start": "1008300",
    "end": "1014090"
  },
  {
    "text": "call it the best current practice now and it basically is a guideline if you like yeah and again you see it's funny",
    "start": "1014090",
    "end": "1023810"
  },
  {
    "text": "they call it or for native apps and not open addy connect for native F because it's written by the IETF and nobody open",
    "start": "1023810",
    "end": "1030020"
  },
  {
    "text": "ID foundation but guess what all of the reference implementations of that spec they live on the github repo of the open",
    "start": "1030020",
    "end": "1036980"
  },
  {
    "text": "ID foundation and guess what they do in their reference implementation they do openly connect and not or fear so it's",
    "start": "1036980",
    "end": "1043250"
  },
  {
    "text": "all a bit silly apart from that this is a very good document to read it's very",
    "start": "1043250",
    "end": "1050060"
  },
  {
    "text": "practical it's been written just a year ago I think and it talks about you know",
    "start": "1050060",
    "end": "1056200"
  },
  {
    "text": "actual features of mobile operating systems like iOS and Android and how to",
    "start": "1056200",
    "end": "1062360"
  },
  {
    "text": "use them to create better applications so the first thing they talk about is how you should not do things and that is",
    "start": "1062360",
    "end": "1069800"
  },
  {
    "start": "1066000",
    "end": "1066000"
  },
  {
    "text": "basically by using a native login page ma'am so you know you're you need all that you install the app it brings",
    "start": "1069800",
    "end": "1077600"
  },
  {
    "text": "up a native login page with name and password and then you think like okay so what are you doing with my password now yeah is that is that secure or not I",
    "start": "1077600",
    "end": "1084860"
  },
  {
    "text": "don't know but generally speaking the spec tries to discourage you from using",
    "start": "1084860",
    "end": "1091700"
  },
  {
    "text": "this flow here where you harvest passwords in the front end send into the token service right and then you stare",
    "start": "1091700",
    "end": "1098630"
  },
  {
    "text": "at the resulting token to to call the API and to be honest in all fairness",
    "start": "1098630",
    "end": "1103970"
  },
  {
    "text": "this is much much better than it used to be where the where the app just",
    "start": "1103970",
    "end": "1109309"
  },
  {
    "text": "harvested the password and just send it over to the to the API directly right I mean that's an improvement the problem",
    "start": "1109309",
    "end": "1115370"
  },
  {
    "text": "is you don't know how how good this this developer was really ugh is he really throwing away your password is he really",
    "start": "1115370",
    "end": "1121159"
  },
  {
    "text": "storing he's talking securely yeah I don't know do don't do an experiment",
    "start": "1121159",
    "end": "1128510"
  },
  {
    "text": "yeah if you have an iPhone you can do a backup of your iPhone and there are two",
    "start": "1128510",
    "end": "1140059"
  },
  {
    "text": "backups one is the application data backup and one is the keychain backup",
    "start": "1140059",
    "end": "1145880"
  },
  {
    "text": "okay normally all your secrets should only live in the keychain and not in the application space now so and then",
    "start": "1145880",
    "end": "1153019"
  },
  {
    "text": "restore that backup on a new phone and see how many applications you are still signed in okay if you're still signed",
    "start": "1153019",
    "end": "1160580"
  },
  {
    "text": "into applications then their developers they stored your secrets just somewhere on the hard disk and not in any secure",
    "start": "1160580",
    "end": "1167419"
  },
  {
    "text": "location and they might probably even have your password and and so on and so forth so you know I don't I don't know I",
    "start": "1167419",
    "end": "1174649"
  },
  {
    "text": "don't like this approach but you know if it's the first party application it's hard to argue against it if you own the",
    "start": "1174649",
    "end": "1180860"
  },
  {
    "text": "front-end you're on the back end it's you know it's up it's a business decision typically what I prefer from a",
    "start": "1180860",
    "end": "1187100"
  },
  {
    "start": "1185000",
    "end": "1185000"
  },
  {
    "text": "technical point of view is this approach where the where the client opens a",
    "start": "1187100",
    "end": "1192679"
  },
  {
    "text": "browser so to speak it it goes to your already existing login page where you have all your logic already in place",
    "start": "1192679",
    "end": "1199549"
  },
  {
    "text": "right you log in there and there are techniques to transport the tokens back from the browser back into your",
    "start": "1199549",
    "end": "1205850"
  },
  {
    "text": "application the people we actually talk about these techniques I can show it to you now just",
    "start": "1205850",
    "end": "1212039"
  },
  {
    "text": "to see how it feels so that's an iPhone apparently so",
    "start": "1212039",
    "end": "1219169"
  },
  {
    "text": "Apple provides native API is to launch a special browser it's a special process",
    "start": "1219169",
    "end": "1225629"
  },
  {
    "text": "specifically made for authentication yeah it has a couple of features it it",
    "start": "1225629",
    "end": "1231570"
  },
  {
    "text": "is secured against the key logging for example so the application cannot read the keystrokes from that browser there",
    "start": "1231570",
    "end": "1237779"
  },
  {
    "text": "is some you know memory protection there and you also get access to the shared cookie container on the phone meaning if",
    "start": "1237779",
    "end": "1244289"
  },
  {
    "text": "you already have a logon session with the the browser on the phone you can reuse that logon session also from",
    "start": "1244289",
    "end": "1251159"
  },
  {
    "text": "within the application when I click that and because it's a special API that is",
    "start": "1251159",
    "end": "1256289"
  },
  {
    "text": "only used for authentication purposes Apple will tell you regardless of what the application just told you that the",
    "start": "1256289",
    "end": "1263070"
  },
  {
    "text": "window that that will open now is used for authentication okay and that's basically a mitigation against you know",
    "start": "1263070",
    "end": "1269399"
  },
  {
    "text": "phishing attacks and and so on okay you press Continue here then the browser",
    "start": "1269399",
    "end": "1275519"
  },
  {
    "text": "opens you have your login page here and you know since this guy supports Google",
    "start": "1275519",
    "end": "1281429"
  },
  {
    "text": "and I already have a lock on session with Google on my phone I think let's",
    "start": "1281429",
    "end": "1286590"
  },
  {
    "text": "try it yep that works no no login page right single sign-on and then the tokens gets sent back to",
    "start": "1286590",
    "end": "1294210"
  },
  {
    "text": "the to the client application ok and from that point on I have a refresh",
    "start": "1294210",
    "end": "1299429"
  },
  {
    "text": "token I can call refresh here right and get it and get it get new access tokens I can call api's and from from that",
    "start": "1299429",
    "end": "1307169"
  },
  {
    "text": "point on this application can run independently and doesn't have to show that browser again and again so that's a",
    "start": "1307169",
    "end": "1312960"
  },
  {
    "text": "pretty pretty good technique I think how does it work basically by registering a",
    "start": "1312960",
    "end": "1320850"
  },
  {
    "text": "special redirect URI with the operating system and when the browser comes back to this URI basically what will happen",
    "start": "1320850",
    "end": "1326730"
  },
  {
    "text": "is is that the operating system will do a callback back to the application where",
    "start": "1326730",
    "end": "1332129"
  },
  {
    "text": "is where this URI belongs to and that's",
    "start": "1332129",
    "end": "1337919"
  },
  {
    "text": "how you how you get back your code you open the back-channel get your tokens okay there's one more",
    "start": "1337919",
    "end": "1343169"
  },
  {
    "text": "thing III mentioned that there's a second technique to to a mitigate code",
    "start": "1343169",
    "end": "1349710"
  },
  {
    "text": "substitution it's called pixie a proof key for code exchange and that's what's",
    "start": "1349710",
    "end": "1355020"
  },
  {
    "text": "being used here so basically what's happening here is before the client application opens that outgoing call it",
    "start": "1355020",
    "end": "1360900"
  },
  {
    "text": "creates a secret a random number basically which is only used for one single request and then then it hashes",
    "start": "1360900",
    "end": "1367980"
  },
  {
    "text": "that random number and sends it along okay and when when it opens the",
    "start": "1367980",
    "end": "1373140"
  },
  {
    "text": "back-channel communication it's gonna it's gonna send the clear text version of that random number and what the",
    "start": "1373140",
    "end": "1378720"
  },
  {
    "start": "1374000",
    "end": "1374000"
  },
  {
    "text": "server's going to do then is it will take the clear text version hash it compare it with the hashed version you got on the front Channel and that's how",
    "start": "1378720",
    "end": "1385169"
  },
  {
    "text": "you can prove that both Network legs actually belong together and that you don't didn't get a code substituted",
    "start": "1385169",
    "end": "1393029"
  },
  {
    "text": "under the covers okay this has exactly the same purpose as hybrid flow but it's",
    "start": "1393029",
    "end": "1400350"
  },
  {
    "text": "a considerably easier implementation yeah because all of the checks happen on the server that they don't have to be",
    "start": "1400350",
    "end": "1405570"
  },
  {
    "text": "done on the client side and that's why more and more people are leaning towards rather implementing pixie as",
    "start": "1405570",
    "end": "1412130"
  },
  {
    "text": "implementing hybrid flow these days okay so because you know all you need to do",
    "start": "1412130",
    "end": "1418260"
  },
  {
    "text": "on the client is hash something send it to the server and that's it right so yeah you need to have one of",
    "start": "1418260",
    "end": "1425370"
  },
  {
    "text": "the two now which one you prefer up to you yeah know that the end result",
    "start": "1425370",
    "end": "1435419"
  },
  {
    "text": "is the same no hybrid flow I think is most it mostly",
    "start": "1435419",
    "end": "1440789"
  },
  {
    "text": "designed for server-side applications with various pixie can be used everywhere ma'am I think it's in yeah",
    "start": "1440789",
    "end": "1446940"
  },
  {
    "text": "it's the simpler solution to the problem okay so just just just to show you",
    "start": "1446940",
    "end": "1463080"
  },
  {
    "text": "another application which is not written by me now if you need to convince someone that this this browser-based",
    "start": "1463080",
    "end": "1468210"
  },
  {
    "text": "logging thing is actually not too bad let's get up for desktop you know when you download that there",
    "start": "1468210",
    "end": "1474480"
  },
  {
    "text": "if that that if you have this application on your desktop you probably",
    "start": "1474480",
    "end": "1480360"
  },
  {
    "text": "also have an existing session already with get up okay so when you go here to preferences and say sign-in you see",
    "start": "1480360",
    "end": "1489630"
  },
  {
    "text": "basically they say sign in using your browser so what they actually gonna do is they gonna now launched the default",
    "start": "1489630",
    "end": "1496140"
  },
  {
    "text": "browser on your machine which holds all the sessions and the cookies and so on and then if you are already locked in in",
    "start": "1496140",
    "end": "1503910"
  },
  {
    "text": "that browser you will directly come back with tokens that github desktop needs to talk to the API is that they provide",
    "start": "1503910",
    "end": "1509669"
  },
  {
    "text": "okay okay now the sign-in experience is",
    "start": "1509669",
    "end": "1517590"
  },
  {
    "text": "not as nice as it is for example on the phone you have this dialog now saying okay I'm done I guess do you want to",
    "start": "1517590",
    "end": "1525540"
  },
  {
    "text": "come back to the application that initiated that and I can see that some people don't like that because maybe a",
    "start": "1525540",
    "end": "1532140"
  },
  {
    "text": "normal user would be confused what's going on here right now yeah what you could do probably is have a nice a page",
    "start": "1532140",
    "end": "1537540"
  },
  {
    "text": "here saying what's going on and why is it okay to click the open link or the open button yeah but they didn't do that",
    "start": "1537540",
    "end": "1544200"
  },
  {
    "text": "I guess the assumption is developers know what that means ma'am anyways when I when I click open it's basically doing",
    "start": "1544200",
    "end": "1550590"
  },
  {
    "text": "the same thing that the code came back to the client application and then the client application cut the tokens and",
    "start": "1550590",
    "end": "1556470"
  },
  {
    "text": "then they can call the github API ice okay or if you're building your next",
    "start": "1556470",
    "end": "1562679"
  },
  {
    "text": "text-based adventure for example yeah and you need authentication you can also make that work in a console app right so",
    "start": "1562679",
    "end": "1570240"
  },
  {
    "text": "all what what this thing is really doing is it launches again that the default browser and makes you sign in there okay",
    "start": "1570240",
    "end": "1582240"
  },
  {
    "text": "so maybe with Google again okay same same behavior right you want to go",
    "start": "1582240",
    "end": "1587730"
  },
  {
    "text": "back to whatever windows console system browser dot XE is but you know we're developers might make sense and then the",
    "start": "1587730",
    "end": "1596549"
  },
  {
    "text": "tokens are back into your console app right and then you can start you know calling API is like you enter at RK k",
    "start": "1596549",
    "end": "1603780"
  },
  {
    "text": "for things like that so yeah so it's it's a general-purpose technique",
    "start": "1603780",
    "end": "1609059"
  },
  {
    "text": "basically to to rather use the server rendered login page dinner then a client rendered login page ok good what is to",
    "start": "1609059",
    "end": "1624600"
  },
  {
    "text": "say about talking management here well it's pretty much the same as on the server right you should store those",
    "start": "1624600",
    "end": "1629730"
  },
  {
    "text": "token somewhere secure every operating system has typically built-in secure data storage mechanism",
    "start": "1629730",
    "end": "1636780"
  },
  {
    "text": "like heat chain an iOS or DP API on Windows or there's something on Android",
    "start": "1636780",
    "end": "1641970"
  },
  {
    "text": "which I don't know the name of you have to again manage your refresh tokens you",
    "start": "1641970",
    "end": "1647760"
  },
  {
    "text": "know same idea you keep the Refresh token somewhere secure if the token expires you get a new access token by",
    "start": "1647760",
    "end": "1653100"
  },
  {
    "text": "the Refresh token and you know that's how the client keeps itself alive and same idea is at lock out or uninstall",
    "start": "1653100",
    "end": "1659460"
  },
  {
    "text": "time of the application you probably should revoke those token for that they are properly been cleaned up ok so oh",
    "start": "1659460",
    "end": "1668420"
  },
  {
    "start": "1668000",
    "end": "1668000"
  },
  {
    "text": "yeah client libraries the the people that wrote did the spec the RFC date",
    "start": "1668420",
    "end": "1674970"
  },
  {
    "text": "they have two reference implementations of that one for iOS one for Android and their native like written in Java and",
    "start": "1674970",
    "end": "1681480"
  },
  {
    "text": "objective-c and the one I just showed you is is a dotnet standard library it's",
    "start": "1681480",
    "end": "1686760"
  },
  {
    "text": "written in C sharp and it works on multiple flavors of off the net ok so",
    "start": "1686760",
    "end": "1693570"
  },
  {
    "text": "now the really the big elephant in the room here is browser-based applications because they have some special",
    "start": "1693570",
    "end": "1700460"
  },
  {
    "text": "considerations okay and that guidance has recently changed and there's a new spec here which is basically for has the",
    "start": "1700460",
    "end": "1709080"
  },
  {
    "text": "same purpose as the OAuth for native apps they won't have an O or for browser-based apps and Brock and I have",
    "start": "1709080",
    "end": "1714510"
  },
  {
    "text": "been working hard for the last weeks to update course material update the client libraries update everything to reflect",
    "start": "1714510",
    "end": "1721350"
  },
  {
    "text": "this new guidance so if the Prok will show you what is this all about which is",
    "start": "1721350",
    "end": "1727410"
  },
  {
    "text": "we're doing this thing that you probably should never do like switching laptops in the middle of a presentation but you",
    "start": "1727410",
    "end": "1733679"
  },
  {
    "text": "know we'll see we're professionals oh right oh good the mics on let's good",
    "start": "1733679",
    "end": "1744590"
  },
  {
    "text": "start Oh scary okay good excellent",
    "start": "1744590",
    "end": "1754820"
  },
  {
    "text": "oh no don't do that all right so yeah",
    "start": "1754820",
    "end": "1762049"
  },
  {
    "start": "1760000",
    "end": "1760000"
  },
  {
    "text": "the the last type of client application that we're gonna look at the the notion of a you know JavaScript browser-based",
    "start": "1762049",
    "end": "1768739"
  },
  {
    "text": "application and the stomach mentioned it's the elephant in the room because it's really the hardest scenario to to",
    "start": "1768739",
    "end": "1774950"
  },
  {
    "text": "secure the the well and but they are as it says up there the the most popular",
    "start": "1774950",
    "end": "1780350"
  },
  {
    "text": "type of application right all the people building angular apps and you know react apps and things like that so the reason",
    "start": "1780350",
    "end": "1787759"
  },
  {
    "text": "it's the one of the hardest scenarios to secure is because that browser is a shared execution context right you'll",
    "start": "1787759",
    "end": "1795080"
  },
  {
    "text": "open up a tab and you go to one application you open up another tab you go to another application and they're sharing the context of that browser so",
    "start": "1795080",
    "end": "1802009"
  },
  {
    "text": "that makes this actually a really hostile environment because you could be in a good app and then in the bad app",
    "start": "1802009",
    "end": "1807710"
  },
  {
    "text": "the bad app is running code in the browser and is doing attacks against the good app these two most common types of",
    "start": "1807710",
    "end": "1814820"
  },
  {
    "text": "attacks cross-site request forgery and cross-site scripting and basically these are both about scenarios where the you",
    "start": "1814820",
    "end": "1822739"
  },
  {
    "text": "know from outside of your good application a malicious app is somehow triggering requests into your good app",
    "start": "1822739",
    "end": "1828590"
  },
  {
    "text": "the cross-site request forgery is trying to take advantage of like submitting",
    "start": "1828590",
    "end": "1833809"
  },
  {
    "text": "data into your application or extracting data and leveraging the users authentication session in the you know",
    "start": "1833809",
    "end": "1840350"
  },
  {
    "text": "the the good application cross-site scripting is where it from outside you know code is injected into your",
    "start": "1840350",
    "end": "1847249"
  },
  {
    "text": "application and both of those obviously are not good so as Dominic showed all the the specs",
    "start": "1847249",
    "end": "1854059"
  },
  {
    "text": "and all the evolutions of the the specifications around Oh off and an open",
    "start": "1854059",
    "end": "1859070"
  },
  {
    "text": "ID connect basically what was happening is you know they would put out one of those specs it was a like a starting",
    "start": "1859070",
    "end": "1864980"
  },
  {
    "text": "point for guidance on how to do something and then somebody would discover a problem or vulnerability and they would then put out",
    "start": "1864980",
    "end": "1870710"
  },
  {
    "text": "to try to fix it or patch it up and so Dominic mentioned the the best practice",
    "start": "1870710",
    "end": "1876650"
  },
  {
    "text": "document for native apps mobile mobile apps so we've been wanting something",
    "start": "1876650",
    "end": "1882770"
  },
  {
    "text": "like that for a long time for JavaScript applications and they just would never you know no one would ever actually you",
    "start": "1882770",
    "end": "1888410"
  },
  {
    "text": "know take up the charge and actually do the work involved with writing one of these documents but finally someone did",
    "start": "1888410",
    "end": "1894920"
  },
  {
    "text": "that and so they're in the process the IETF is in the process of updating their",
    "start": "1894920",
    "end": "1900320"
  },
  {
    "text": "guidance or providing a guidance document for these JavaScript browser-based applications so it's it's",
    "start": "1900320",
    "end": "1907070"
  },
  {
    "text": "sort of been a you know a long time coming so before OAuth though right to just",
    "start": "1907070",
    "end": "1914780"
  },
  {
    "start": "1912000",
    "end": "1912000"
  },
  {
    "text": "kind of look at a little bit of history of how we were securing Web API calls from JavaScript you know before OAuth which is now eight",
    "start": "1914780",
    "end": "1922340"
  },
  {
    "text": "or nine years you know the kind of application that you might have built that had JavaScript calling api's was",
    "start": "1922340",
    "end": "1929300"
  },
  {
    "text": "probably more like a server-side application right I mean I think 10 or 15 years ago I was doing like asp.net",
    "start": "1929300",
    "end": "1934340"
  },
  {
    "text": "and it was a server rendered application and then you learned about like jQuery",
    "start": "1934340",
    "end": "1939500"
  },
  {
    "text": "and you're like wow I can do cool things in JavaScript and then you know actually make my page a little bit more interactive without using like I don't",
    "start": "1939500",
    "end": "1945950"
  },
  {
    "text": "know the update panel or something like that and so the idea is that to get logged",
    "start": "1945950",
    "end": "1951050"
  },
  {
    "text": "into the application in the first place you needed a cookie because it was a server rendered application and so the",
    "start": "1951050",
    "end": "1956420"
  },
  {
    "text": "beauty about cookies is that if you make you know JavaScript calls Ajax calls back to your endpoints the cookie is",
    "start": "1956420",
    "end": "1962900"
  },
  {
    "text": "automatically sent okay that's beautiful we loved it because we didn't have to think about trying to authenticate those calls so that's basically where the",
    "start": "1962900",
    "end": "1972680"
  },
  {
    "text": "problem lies is that the cookie is automatically sent on every request implicitly by the browser and that's",
    "start": "1972680",
    "end": "1979100"
  },
  {
    "text": "actually what that cross-site request forgery attack is taking advantage of right you open up the bad app and",
    "start": "1979100",
    "end": "1985610"
  },
  {
    "text": "another tab and they start making requests across that boundary and the cookie will be sent and the your good",
    "start": "1985610",
    "end": "1991490"
  },
  {
    "text": "apps server-side code doesn't know that which app was making the request so there are mitigations for this for",
    "start": "1991490",
    "end": "2000900"
  },
  {
    "text": "the typical server-side application like your older asp.net or even you know MVC and beef of",
    "start": "2000900",
    "end": "2007480"
  },
  {
    "text": "hi for example the ante forgery style right was the the typical mitigation",
    "start": "2007480",
    "end": "2013419"
  },
  {
    "text": "against that so it's very easy to add in and and all the templates have that kind of built in now for asp.net core as well",
    "start": "2013419",
    "end": "2021789"
  },
  {
    "text": "even but the problem is most often there was nothing in the templates or nobody",
    "start": "2021789",
    "end": "2027279"
  },
  {
    "text": "educated you on how to do it for your JavaScript calls so if you have the scenario where you have normal post",
    "start": "2027279",
    "end": "2032860"
  },
  {
    "text": "backs you're probably protected against cross-site request forgery but are you sure that you're protected on all your",
    "start": "2032860",
    "end": "2037899"
  },
  {
    "text": "Ajax calls okay so very often we we do code reviews for people and we see that",
    "start": "2037899",
    "end": "2043029"
  },
  {
    "text": "they're missing it for the Ajax endpoints okay that's an open problem okay so like I said this is sort of the",
    "start": "2043029",
    "end": "2052210"
  },
  {
    "text": "biggest problem with cookies for authentication is this cross-site request forgery attacked okay all right",
    "start": "2052210",
    "end": "2058658"
  },
  {
    "text": "so you know Oh auth was then being developed as a way to protect api's you",
    "start": "2058659",
    "end": "2066940"
  },
  {
    "text": "know about nine eight or nine years ago now and so as part of their whole guidance around you know how are we",
    "start": "2066940",
    "end": "2073270"
  },
  {
    "text": "gonna do token-based authentication to api's they realized oh there's these new",
    "start": "2073270",
    "end": "2078368"
  },
  {
    "text": "style of apps that are being developed which are more and more JavaScript running in the browser and you know less",
    "start": "2078369",
    "end": "2083560"
  },
  {
    "text": "server-side code okay now some people didn't you know see this coming right",
    "start": "2083560",
    "end": "2088868"
  },
  {
    "text": "and this is actually uh from the IETF archive email archive and somebody was",
    "start": "2088869",
    "end": "2095080"
  },
  {
    "text": "like oh I don't know what this JavaScript thing is all about and I couldn't Google for it but but I'm glad and I'm you know that the IETF or",
    "start": "2095080",
    "end": "2101830"
  },
  {
    "text": "somebody on the OAuth working group you know had the foresight to say hey we need to secure this new style of",
    "start": "2101830",
    "end": "2107260"
  },
  {
    "text": "application being developed the problem is again if you look at the date there it's just when you know 2011 so that is",
    "start": "2107260",
    "end": "2113920"
  },
  {
    "text": "what you know nine years ago nine years ago they had to solve the problem of figuring out how to allow a JavaScript",
    "start": "2113920",
    "end": "2121060"
  },
  {
    "text": "application to get a token and call an API we talked about code flow right code",
    "start": "2121060",
    "end": "2126580"
  },
  {
    "text": "flow is the the one that we talked about is the sort of the user you know interactive application style",
    "start": "2126580",
    "end": "2132720"
  },
  {
    "text": "to get tokens but the problem with that is that that requires using the token endpoint okay and very often your token",
    "start": "2132720",
    "end": "2139109"
  },
  {
    "text": "server would be on a different domain than your JavaScript app so we can't make this cross domain you know Ajax",
    "start": "2139109",
    "end": "2145980"
  },
  {
    "text": "calls because of browser restrictions okay so cores didn't exist at that point in time so basically the token endpoint",
    "start": "2145980",
    "end": "2153330"
  },
  {
    "text": "as the technique was sort of out of the question also to use the token endpoint right we need a client secret and you",
    "start": "2153330",
    "end": "2159330"
  },
  {
    "text": "know that doesn't really make sense for a JavaScript style application so what the OAuth committee came up with is",
    "start": "2159330",
    "end": "2164730"
  },
  {
    "text": "something called the implicit flow and the implicit flow is like an optimized version of the code flow if you will",
    "start": "2164730",
    "end": "2171680"
  },
  {
    "start": "2165000",
    "end": "2165000"
  },
  {
    "text": "where we don't have to use the token endpoint it's a way to get a token back to a front-end application and so the",
    "start": "2171680",
    "end": "2179520"
  },
  {
    "text": "way it would work is that your JavaScript application would be running in the browser you would send the user to the authorized endpoint I know if you",
    "start": "2179520",
    "end": "2186570"
  },
  {
    "text": "notice down here but the request is now requesting ID token token as opposed to a code okay",
    "start": "2186570",
    "end": "2192270"
  },
  {
    "text": "that's basically saying I want two token directly back from the token server and that's exactly what would happen then in",
    "start": "2192270",
    "end": "2198150"
  },
  {
    "text": "this implicit flow the response would come back into the browser the tokens that you're looking for are being sent",
    "start": "2198150",
    "end": "2203609"
  },
  {
    "text": "in the URL okay and they're being sent after this hash fragment in in the URL there and",
    "start": "2203609",
    "end": "2209640"
  },
  {
    "text": "you know the ultimate destination for the token is the JavaScript right so",
    "start": "2209640",
    "end": "2214800"
  },
  {
    "text": "that makes sense we have to hand it somehow back to the JavaScript and again this avoids using the token endpoint so",
    "start": "2214800",
    "end": "2220349"
  },
  {
    "text": "the app doesn't have to make you the Ajax calls back to the token server to get tokens okay so that is still",
    "start": "2220349",
    "end": "2227270"
  },
  {
    "text": "officially you know technically the official guidance on how you would write",
    "start": "2227270",
    "end": "2232619"
  },
  {
    "text": "JavaScript apps to obtain tokens to call api's but as we saw with the sort of the",
    "start": "2232619",
    "end": "2239280"
  },
  {
    "text": "the charge with all the specs across all the years right the guidance changes",
    "start": "2239280",
    "end": "2244470"
  },
  {
    "text": "over time and that's because we you know get more and more features out of things like our browsers and more and more",
    "start": "2244470",
    "end": "2250890"
  },
  {
    "text": "technologies get developed to help make things like this better you know to really do this right there are a few",
    "start": "2250890",
    "end": "2256440"
  },
  {
    "text": "problems right one is that one of the biggest complaints is that the token is in the URL okay now that's why the hash",
    "start": "2256440",
    "end": "2264210"
  },
  {
    "text": "fragment is used because we don't send those to the server assuming the browsers actually implement that properly it's in",
    "start": "2264210",
    "end": "2270900"
  },
  {
    "text": "your you know your history and you know maybe somebody hits the back arrow and then can see the access token so there",
    "start": "2270900",
    "end": "2277650"
  },
  {
    "text": "are things you could try to do to fix it up but it wasn't wasn't part of the protocol you as the application",
    "start": "2277650",
    "end": "2284190"
  },
  {
    "text": "developer had to know to go do these extra things and it's a bit of work okay so and also of course if you're using to",
    "start": "2284190",
    "end": "2292650"
  },
  {
    "text": "deal with this token substitution attack right we could do open ID connect and do",
    "start": "2292650",
    "end": "2297720"
  },
  {
    "text": "ID token and token but if you're doing just pure ooofff again we didn't have any subset of protection against the",
    "start": "2297720",
    "end": "2304530"
  },
  {
    "text": "token substitution attack okay so anyway that has been the biggest complaint about the implicit flow really since it",
    "start": "2304530",
    "end": "2312119"
  },
  {
    "text": "was invented right tokens in the URL but at the same time it's the best we had given the limitations so what is then",
    "start": "2312119",
    "end": "2321530"
  },
  {
    "start": "2320000",
    "end": "2320000"
  },
  {
    "text": "sort of the the guidance going forward well the things that have been developed since the original recommendation",
    "start": "2321530",
    "end": "2328079"
  },
  {
    "text": "basically is that cores has been developed right now pretty much browsers all support cores so now we could take",
    "start": "2328079",
    "end": "2335430"
  },
  {
    "text": "advantage of the token endpoint and Dominic talked about this new thing called pixie and pixie helps with the",
    "start": "2335430",
    "end": "2341970"
  },
  {
    "text": "code substitution attack so with the you know development of those two features",
    "start": "2341970",
    "end": "2347130"
  },
  {
    "text": "if you will over the last several years it's basically put us in a position where we now can do better than what we",
    "start": "2347130",
    "end": "2354000"
  },
  {
    "text": "did before with the implicit flow so the new guidance that will be coming out from the IETF is basically for spa's",
    "start": "2354000",
    "end": "2361410"
  },
  {
    "text": "JavaScript applications you should be using authorization code flow with pixie okay and that's basically the new guide",
    "start": "2361410",
    "end": "2368940"
  },
  {
    "text": "that's going forward so it's not that the implicit flow is awful and horrible it's just that we now have a better",
    "start": "2368940",
    "end": "2374910"
  },
  {
    "text": "solution so if you've been doing implicit flow for the last several years that's fine okay but you know if you",
    "start": "2374910",
    "end": "2380700"
  },
  {
    "text": "have token server that supports these new things then great maybe you could switch over and start start using them",
    "start": "2380700",
    "end": "2387170"
  },
  {
    "text": "okay so regardless of whichever those flows you end up using we come back to the",
    "start": "2387170",
    "end": "2394020"
  },
  {
    "start": "2389000",
    "end": "2389000"
  },
  {
    "text": "same you know complications that the other types of clients have to contend which is you know the token management",
    "start": "2394020",
    "end": "2399540"
  },
  {
    "text": "where do you store the token and how do you deal with token renewal and how do you protect against attacks against",
    "start": "2399540",
    "end": "2405570"
  },
  {
    "text": "those things so the I guess for browser-based applications this is also",
    "start": "2405570",
    "end": "2411300"
  },
  {
    "text": "why they're kind of a difficult environment to protect is that they have no fundamental safe storage if you will",
    "start": "2411300",
    "end": "2419130"
  },
  {
    "text": "no protected storage like you do on us well obviously on a server side but also in sort of these native apps so you have",
    "start": "2419130",
    "end": "2428490"
  },
  {
    "text": "to store the token somewhere right so the common locations are to put the token in session storage local storage",
    "start": "2428490",
    "end": "2435540"
  },
  {
    "text": "maybe indexdb but usually those are the first two that I said are the ones where we usually see session storage or local",
    "start": "2435540",
    "end": "2442950"
  },
  {
    "text": "storage so of course the big problem here is that your app is still prone to cross-site scripting attacks right and",
    "start": "2442950",
    "end": "2448830"
  },
  {
    "text": "not only your app but your entire domain so not maybe your apps on a you know some path under your domain but you have",
    "start": "2448830",
    "end": "2455580"
  },
  {
    "text": "some other part of your app that has cross-site scripting right so that's a very large surface to protect against so",
    "start": "2455580",
    "end": "2461580"
  },
  {
    "text": "cross-site scripting is really the real biggest concern with building spas it's not Olaf and all this stuff okay",
    "start": "2461580",
    "end": "2468420"
  },
  {
    "text": "so again if you do have a cross-site scripting attack somewhere in your app and it can access that storage an",
    "start": "2468420",
    "end": "2473580"
  },
  {
    "text": "attacker can export the tokens from your app okay so how do we protect against",
    "start": "2473580",
    "end": "2481589"
  },
  {
    "text": "this okay well there is yet another newer feature in browsers that we can",
    "start": "2481589",
    "end": "2487200"
  },
  {
    "text": "start to take advantage of to help with this and it's something called content security policy this is a feature of",
    "start": "2487200",
    "end": "2493020"
  },
  {
    "text": "browsers that allow you to tell your browser that you want to reduce how much",
    "start": "2493020",
    "end": "2500280"
  },
  {
    "text": "JavaScript you'll allow to run ok and basically kind of boils down to where you say I want this block of Travie",
    "start": "2500280",
    "end": "2506400"
  },
  {
    "text": "script I'm gonna like whitelist and allow it to run on my browser and other sources by default are going to be",
    "start": "2506400",
    "end": "2511830"
  },
  {
    "text": "disabled ok so if you're building a JavaScript application you really should be you know leveraging content security",
    "start": "2511830",
    "end": "2518130"
  },
  {
    "text": "policy turns out it's really hard though okay because if you especially if you not",
    "start": "2518130",
    "end": "2525230"
  },
  {
    "text": "built the app designed around content security policy you know depending on",
    "start": "2525230",
    "end": "2530360"
  },
  {
    "text": "the size and complexity of your app it's really really hard to retrofit so there's actually a link down here at the",
    "start": "2530360",
    "end": "2535940"
  },
  {
    "text": "bottom to a video from a couple of researchers from Google I believe it's",
    "start": "2535940",
    "end": "2541040"
  },
  {
    "text": "what they're from and they basically did an analysis on all the websites and how",
    "start": "2541040",
    "end": "2546260"
  },
  {
    "text": "many out there actually use CSP and for the ones that did UCSB and by the way the number was really small and the ones",
    "start": "2546260",
    "end": "2552380"
  },
  {
    "text": "that did use CSP how many were actually had holes in their CSP policies and one",
    "start": "2552380",
    "end": "2558740"
  },
  {
    "text": "of the common things is that you know people will you see the ends for their",
    "start": "2558740",
    "end": "2563750"
  },
  {
    "text": "JavaScript and so very often with a content security policy you can just whitelist an entire CDN and say oh yeah",
    "start": "2563750",
    "end": "2570470"
  },
  {
    "text": "that's where my code runs right that's where I want to cache from so let it you know let it run on my browser well the",
    "start": "2570470",
    "end": "2576290"
  },
  {
    "text": "problem is the CDN is also a shared environment and lots of other people are running all kinds of other code up on the CDN so that's you know probably not",
    "start": "2576290",
    "end": "2584750"
  },
  {
    "text": "the best approach okay so content security policy is something you should be using but again admittedly it's it's really",
    "start": "2584750",
    "end": "2591980"
  },
  {
    "text": "hard there's another specification that was intended to help fix some of these",
    "start": "2591980",
    "end": "2598640"
  },
  {
    "text": "problems as well and it's all called HTTP token binding and the idea with HTTP token binding is that you want to",
    "start": "2598640",
    "end": "2606260"
  },
  {
    "text": "make sure that the token can only be used within the app that was obtaining the token okay and so this is like",
    "start": "2606260",
    "end": "2613010"
  },
  {
    "text": "really promising because then imagine you know you have an app and somehow the cross site scripting steals the access",
    "start": "2613010",
    "end": "2618500"
  },
  {
    "text": "token and now the attacker if they've exported and are trying to use it from some of the location they can't if this",
    "start": "2618500",
    "end": "2624440"
  },
  {
    "text": "HTTP token binding thing ensured that the token could only be used from that particular browser for example okay so",
    "start": "2624440",
    "end": "2631370"
  },
  {
    "text": "this is actually really promising to solve a lot of problems you know now that we're talking about using code flow",
    "start": "2631370",
    "end": "2637880"
  },
  {
    "text": "from a JavaScript app we also think about getting potentially refresh tokens right think of refresh tokens are lost",
    "start": "2637880",
    "end": "2644120"
  },
  {
    "text": "from your app those are even more powerful than access tokens because they can just continue to get new access tokens over and over and over",
    "start": "2644120",
    "end": "2650630"
  },
  {
    "text": "and it's you know outside your browser so refresh tokens in this mode are still",
    "start": "2650630",
    "end": "2656000"
  },
  {
    "text": "very very dangerous to do so anyway this",
    "start": "2656000",
    "end": "2661250"
  },
  {
    "text": "HTTP token binding sounded like it was going to be the solution to the problem because it really restricted who could be actually using the token and then",
    "start": "2661250",
    "end": "2668900"
  },
  {
    "text": "unfortunately I think it was the same month that the token binding specs were actually finished Google announced that",
    "start": "2668900",
    "end": "2674960"
  },
  {
    "text": "they were removing token binding as a feature from chrome okay why it's not",
    "start": "2674960",
    "end": "2681260"
  },
  {
    "text": "terribly clear they didn't seem to understand the benefit of it and it was actually in Chrome and then they removed",
    "start": "2681260",
    "end": "2687530"
  },
  {
    "text": "it so not entirely sure why and I've never seen any justification really since then explaining it but even other",
    "start": "2687530",
    "end": "2694730"
  },
  {
    "text": "people in Google who work on these specs are trying to you know say please let's get it back in yeah question",
    "start": "2694730",
    "end": "2702339"
  },
  {
    "text": "I think there are they working on it yeah yeah so anyway yeah so",
    "start": "2705880",
    "end": "2721270"
  },
  {
    "text": "unfortunately I think because one of the major browser vendors removed it it",
    "start": "2721270",
    "end": "2726619"
  },
  {
    "text": "means we can't really rely upon it right unfortunately so anyway that's kind of a",
    "start": "2726619",
    "end": "2731660"
  },
  {
    "text": "bummer as we say in the u.s. right okay so anyway yeah this is again the cold",
    "start": "2731660",
    "end": "2737329"
  },
  {
    "text": "cross-site scripting and you know it's a hard problem ok now the other thing that",
    "start": "2737329",
    "end": "2743990"
  },
  {
    "text": "we need to talk about in terms of like managing a token is the token renewal and we talked about you know maybe",
    "start": "2743990",
    "end": "2750500"
  },
  {
    "text": "refresh tokens aren't the best approach in these JavaScript apps because of how dangerous they are in that context if",
    "start": "2750500",
    "end": "2756950"
  },
  {
    "text": "they're stolen so the other approach is this thing called a silent renew and",
    "start": "2756950",
    "end": "2762380"
  },
  {
    "text": "that's been around for as a technique for a really long time for JavaScript applications which is basically you make",
    "start": "2762380",
    "end": "2768050"
  },
  {
    "text": "the same authorization request back to the token server to get a new token except you do it in an iframe all right",
    "start": "2768050",
    "end": "2774020"
  },
  {
    "text": "that way the user won't see it that also has the characteristic of the iframe is",
    "start": "2774020",
    "end": "2779780"
  },
  {
    "text": "relying upon the cookie the session at the token server so that means that only somebody with",
    "start": "2779780",
    "end": "2785950"
  },
  {
    "text": "that valid session or cookie can actually continue to get new access tokens so that's actually a nice",
    "start": "2785950",
    "end": "2791290"
  },
  {
    "text": "technique to restrict access you know and ensure only that JavaScript app is",
    "start": "2791290",
    "end": "2796810"
  },
  {
    "text": "the legitimate one to continue to get new tokens okay okay so we have a",
    "start": "2796810",
    "end": "2804490"
  },
  {
    "start": "2802000",
    "end": "2802000"
  },
  {
    "text": "JavaScript library that implements these protocols we've had this now for several",
    "start": "2804490",
    "end": "2809590"
  },
  {
    "text": "years and it was just around the end of last year where we have updated it to",
    "start": "2809590",
    "end": "2815140"
  },
  {
    "text": "now support code flow with pixee okay so I have a quick sample of that maybe not",
    "start": "2815140",
    "end": "2823240"
  },
  {
    "text": "the most beautiful thing in the world there we go so I have this little",
    "start": "2823240",
    "end": "2828550"
  },
  {
    "text": "JavaScript application what I have here is an HTML page ok it is loading in our",
    "start": "2828550",
    "end": "2837370"
  },
  {
    "text": "you know o ID c client javascript library and the idea is that we go off",
    "start": "2837370",
    "end": "2842770"
  },
  {
    "text": "and you know do our normal configuration as a client and the big thing here is the response type years code okay so you",
    "start": "2842770",
    "end": "2848890"
  },
  {
    "text": "might have been using this library before to do implicit flow really not a big deal you just update to the latest version and switch your response type",
    "start": "2848890",
    "end": "2855820"
  },
  {
    "text": "right instead of ID token token which was the implicit flow you can switch over to code and that's pretty much what",
    "start": "2855820",
    "end": "2862330"
  },
  {
    "text": "you need to do to get your app to do this this new flow okay and then what we have is this user manager which can do a",
    "start": "2862330",
    "end": "2869860"
  },
  {
    "text": "little bit of session management for you and do the protocol work the session management is provided by a little get",
    "start": "2869860",
    "end": "2875620"
  },
  {
    "text": "user function that can load up and see if the users you know has a session in your app and some helpers log in and log",
    "start": "2875620",
    "end": "2882250"
  },
  {
    "text": "out right to go do the the protocol work and so simply logging in I have an",
    "start": "2882250",
    "end": "2889600"
  },
  {
    "text": "internet connection good there's my token server Bob and Bob and here we go",
    "start": "2889600",
    "end": "2894640"
  },
  {
    "text": "we got the results and we came back and maybe I guess I should have shown that on the network but if we rerun this yeah",
    "start": "2894640",
    "end": "2903100"
  },
  {
    "text": "somewhere in here we should see the word token right so the point is we were in fact using the token endpoint from the",
    "start": "2903100",
    "end": "2909850"
  },
  {
    "text": "client and somewhere way down here we should see a code the sent along okay so this is an updated",
    "start": "2909850",
    "end": "2915250"
  },
  {
    "text": "app to use code flow with pixee and by the way there's the code verifier for pixie so now we can invoke our API",
    "start": "2915250",
    "end": "2924150"
  },
  {
    "text": "which is just a matter of loading up the session getting the user object getting the access token and calling that API",
    "start": "2924150",
    "end": "2930359"
  },
  {
    "text": "the renewal like I talked about then supports the ability to renew your",
    "start": "2930359",
    "end": "2935589"
  },
  {
    "text": "tokens but it does it in the iframe okay so if you hit renew token I don't know if you can see down here at the bottom",
    "start": "2935589",
    "end": "2941559"
  },
  {
    "text": "but what we're doing is the the library is simply you know crafting up the iframe making the request and getting",
    "start": "2941559",
    "end": "2947829"
  },
  {
    "text": "the result back okay good all right now there's actually one more",
    "start": "2947829",
    "end": "2955809"
  },
  {
    "start": "2952000",
    "end": "2952000"
  },
  {
    "text": "topic here in the space of our JavaScript applications as we've already mentioned there are all these new specs",
    "start": "2955809",
    "end": "2961869"
  },
  {
    "text": "that are coming out to help with all these features and then some vendors decide not to implement them that's a different issue but one other one is",
    "start": "2961869",
    "end": "2968589"
  },
  {
    "text": "something called same site cookies okay do you remember the the original problem",
    "start": "2968589",
    "end": "2974410"
  },
  {
    "text": "with our original design of JavaScript apps using cookies to do authentication was the cross-site request forgery",
    "start": "2974410",
    "end": "2980740"
  },
  {
    "text": "attack okay and we needed to do all kinds of mitigations to protect against that so",
    "start": "2980740",
    "end": "2987660"
  },
  {
    "text": "it turns out that that's exactly what same site cookies is for it's a new spec",
    "start": "2987660",
    "end": "2992920"
  },
  {
    "text": "from the w3c it basically extends of the features of how cookies work with this",
    "start": "2992920",
    "end": "2998410"
  },
  {
    "text": "new flag called same site so the idea now is that when you render your cookie",
    "start": "2998410",
    "end": "3005069"
  },
  {
    "text": "or you issue a cookie back to the browser you can append a same site flag and this tells the browser that the",
    "start": "3005069",
    "end": "3011339"
  },
  {
    "text": "cookie should only be sent back to your app or your API if the page making the",
    "start": "3011339",
    "end": "3017010"
  },
  {
    "text": "request is from the same site okay that effectively kills the attack of",
    "start": "3017010",
    "end": "3023430"
  },
  {
    "text": "cross-site request forgery okay the biggest concern with this of course is that it's a fairly new feature okay so",
    "start": "3023430",
    "end": "3031440"
  },
  {
    "text": "it's just in the last six months that we're actually kind of getting all the latest browsers caught up with",
    "start": "3031440",
    "end": "3036809"
  },
  {
    "text": "implementing this but you still have you know maybe you have many people running on the prior version of browsers so you",
    "start": "3036809",
    "end": "3043079"
  },
  {
    "text": "know whether or not you want to start pending on this is sort of up to you Dominic is still a little gun-shy of it",
    "start": "3043079",
    "end": "3049950"
  },
  {
    "text": "that's a good point too yeah the spec is not finalized yet so but I'm very",
    "start": "3049950",
    "end": "3055330"
  },
  {
    "text": "confident in this so okay so many went that's the idea what this means is then",
    "start": "3055330",
    "end": "3060910"
  },
  {
    "text": "Wow maybe we don't need tokens for protecting our web api's okay",
    "start": "3060910",
    "end": "3066970"
  },
  {
    "text": "now that's only gonna work if your application is the same site application right the cookies only going back to the",
    "start": "3066970",
    "end": "3073900"
  },
  {
    "text": "same site but what if you have API is that our cross-domain still but you want to use the same site cookie well there's",
    "start": "3073900",
    "end": "3080350"
  },
  {
    "text": "a very typical architecture here which is this BFF architecture right it stands for back-end for front-end so this",
    "start": "3080350",
    "end": "3087490"
  },
  {
    "start": "3081000",
    "end": "3081000"
  },
  {
    "text": "actually kind of looks like what we might have done 10 or 15 years ago so imagine what you're gonna do is you're",
    "start": "3087490",
    "end": "3094510"
  },
  {
    "text": "not gonna have your spa connect directly to the web api okay what you'll have is",
    "start": "3094510",
    "end": "3099610"
  },
  {
    "text": "you'll have a back-end right piece of your application that will go and do the normal login workflows with OAuth and",
    "start": "3099610",
    "end": "3106720"
  },
  {
    "text": "open ID connect right you'll get back your tokens and then you'll issue cookie in your browser and all of the calls",
    "start": "3106720",
    "end": "3113470"
  },
  {
    "text": "from your JavaScript are gonna go back to your server your your you know your back-end for your front-end if you will",
    "start": "3113470",
    "end": "3120420"
  },
  {
    "text": "using the cookie style right with our same site cookies okay and then the",
    "start": "3120420",
    "end": "3127570"
  },
  {
    "text": "backend because we have a cookie and we logged in with open ID connected OAuth we can then have our proper access",
    "start": "3127570",
    "end": "3133330"
  },
  {
    "text": "tokens to then call back to the underlying API so that's another style that you could use I think we have a lot",
    "start": "3133330",
    "end": "3141550"
  },
  {
    "text": "of people who are interested in this style because if you think about you know all of this JavaScript that you",
    "start": "3141550",
    "end": "3147850"
  },
  {
    "text": "have to write in your application you're really increasing the complexity in your spa so I think that's you know depends",
    "start": "3147850",
    "end": "3155740"
  },
  {
    "text": "on your architecture depends if you want the spa to go directly to the API or if it's you know you'd rather deal with",
    "start": "3155740",
    "end": "3163960"
  },
  {
    "text": "sort of the lesser of the two evils right in terms of securing the JavaScript from things like you know our",
    "start": "3163960",
    "end": "3170050"
  },
  {
    "text": "various attacks it might be a little bit easier if we have this style okay so it's another option",
    "start": "3170050",
    "end": "3175780"
  },
  {
    "text": "and so actually have a demo of this yeah go ahead yep",
    "start": "3175780",
    "end": "3184920"
  },
  {
    "text": "so the HTTP only flag is a flag it's been around forever as far as I could",
    "start": "3184920",
    "end": "3190480"
  },
  {
    "text": "remember in cookies and it basically is the flag to tell the browser that you",
    "start": "3190480",
    "end": "3196510"
  },
  {
    "text": "don't want the cookie programmatically available from JavaScript which in effect you're relying upon the browser",
    "start": "3196510",
    "end": "3202210"
  },
  {
    "text": "to protect you from like the cross-site scripting attack at least of stealing the cookie it's kind of like the st. you",
    "start": "3202210",
    "end": "3207850"
  },
  {
    "text": "know the the token binding the HTTP binding that we were talking about before okay so we have a sample here let",
    "start": "3207850",
    "end": "3216100"
  },
  {
    "text": "me run this which is now different HTML oh that's not what I wanted let me go",
    "start": "3216100",
    "end": "3222520"
  },
  {
    "text": "run my API so what I have here is another example I have two projects in my solution here the first one is",
    "start": "3222520",
    "end": "3228940"
  },
  {
    "text": "basically a standalone API this is the API that's meant to be the API on the",
    "start": "3228940",
    "end": "3234610"
  },
  {
    "text": "far right on the slide and this is an API that is only gonna receive access tokens okay so I have this running which",
    "start": "3234610",
    "end": "3243850"
  },
  {
    "text": "I think I have it running okay and then over here in my host this is now the",
    "start": "3243850",
    "end": "3249760"
  },
  {
    "text": "application that has a combination of some the backend for front-end if you",
    "start": "3249760",
    "end": "3255370"
  },
  {
    "text": "will right so we're gonna do normal open ID connect over to our token server but",
    "start": "3255370",
    "end": "3262330"
  },
  {
    "text": "we're gonna then have some endpoints in here that are going to be protected for",
    "start": "3262330",
    "end": "3267700"
  },
  {
    "text": "using cookies okay those are going to be invoked by our Ajax code and those will",
    "start": "3267700",
    "end": "3272770"
  },
  {
    "text": "do something like maybe just be the features the the api's that are needed to serve up to our front end okay but",
    "start": "3272770",
    "end": "3280930"
  },
  {
    "text": "you may have again some features that can be implemented at this point and some features that actually need to be",
    "start": "3280930",
    "end": "3287020"
  },
  {
    "text": "sent all the way depending on what you know type of API you need to call so you",
    "start": "3287020",
    "end": "3292120"
  },
  {
    "text": "need something else in this back-end for front-end to produce things like proxy right basically proxy the the requests",
    "start": "3292120",
    "end": "3298240"
  },
  {
    "text": "all the way over so there's another piece in here which is a",
    "start": "3298240",
    "end": "3304120"
  },
  {
    "text": "open-source project called proxy kit I believe it basically allows you to run a",
    "start": "3304120",
    "end": "3309790"
  },
  {
    "text": "reverse proxy as middleware in your asp.net core application so the idea is",
    "start": "3309790",
    "end": "3315940"
  },
  {
    "text": "that maybe some endpoints go just to my BFF other endpoints go to these proxy",
    "start": "3315940",
    "end": "3321700"
  },
  {
    "text": "endpoints and they get proxied over to the to the actual API when I'm doing the",
    "start": "3321700",
    "end": "3326860"
  },
  {
    "text": "proxying from the browser to my BFF is using the cookie and then when we hit",
    "start": "3326860",
    "end": "3331930"
  },
  {
    "text": "this particular reverse proxy notice it's actually extracting the access token from my cookie and then you know",
    "start": "3331930",
    "end": "3338710"
  },
  {
    "text": "using that to call to the actual back-end so that's basically if I rerun",
    "start": "3338710",
    "end": "3344560"
  },
  {
    "text": "this that's basically what this is doing so log in with a Bob and Bob okay so",
    "start": "3344560",
    "end": "3352270"
  },
  {
    "text": "this first button here basically when I invoke this this is just going one hop",
    "start": "3352270",
    "end": "3358810"
  },
  {
    "text": "right to the to the first API call and this is then simply using my you know my",
    "start": "3358810",
    "end": "3364630"
  },
  {
    "text": "BFF cookie that I have okay this just happens to be hitting a different path in the application which actually then",
    "start": "3364630",
    "end": "3370810"
  },
  {
    "text": "routes all the way over to the other guy and that's using the access token and you can see then the return here is",
    "start": "3370810",
    "end": "3376060"
  },
  {
    "text": "actually showing you everything that was in the access token so again for the first hop same idea is using the cookie",
    "start": "3376060",
    "end": "3383470"
  },
  {
    "text": "but for the second hop it's using the access token so there's a sample",
    "start": "3383470",
    "end": "3389680"
  },
  {
    "text": "application that shows you you know how that approach could work okay so here's",
    "start": "3389680",
    "end": "3397900"
  },
  {
    "text": "a list of lots of reading right this is homework for you now that we've come to class for an hour you can go home and",
    "start": "3397900",
    "end": "3404560"
  },
  {
    "text": "read up on all these sort of latest and greatest things from the spec committees",
    "start": "3404560",
    "end": "3409600"
  },
  {
    "text": "and all these other things from you know the w3c so that's there for you and",
    "start": "3409600",
    "end": "3414840"
  },
  {
    "text": "other than that oh we have some stickers if you'd like some identity server stickers but other than that that's it",
    "start": "3414840",
    "end": "3420100"
  },
  {
    "text": "thanks [Applause]",
    "start": "3420100",
    "end": "3428059"
  }
]