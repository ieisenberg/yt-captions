[
  {
    "text": "okay so hi everyone uh my name is einelhost",
    "start": "8080",
    "end": "13120"
  },
  {
    "text": "i'm excited to be here today to talk about something that i care deeply about",
    "start": "13120",
    "end": "18320"
  },
  {
    "text": "which is how we try to build reliable services where i work at an rktv and i'm",
    "start": "18320",
    "end": "24560"
  },
  {
    "text": "going to focus mostly on the process that we try to use to do what i like to call strategic",
    "start": "24560",
    "end": "30720"
  },
  {
    "text": "reliability work so nrktv is where i work nrk being the",
    "start": "30720",
    "end": "36800"
  },
  {
    "text": "public broadcaster in norway nrk tv is our tv streaming service",
    "start": "36800",
    "end": "42960"
  },
  {
    "text": "so if you're a norwegian and you want to sort of use the internet in some way to watch nrk's programming tv programming",
    "start": "42960",
    "end": "50399"
  },
  {
    "text": "uh using your browser or your smartphone or your smart tv or whatever",
    "start": "50399",
    "end": "55600"
  },
  {
    "text": "then you're going to use the service that i'm talking about today uh it is",
    "start": "55600",
    "end": "61039"
  },
  {
    "text": "i like to call it i like to think of it sort of like a serious software service in the sense that",
    "start": "61039",
    "end": "66159"
  },
  {
    "text": "uh i don't have the exact numbers but say something like you have half a million users uh consuming half a",
    "start": "66159",
    "end": "71760"
  },
  {
    "text": "million hours of content from the service every day so it's",
    "start": "71760",
    "end": "78000"
  },
  {
    "text": "it has some real uptime demands in a sense and it has some real load to it and that's part of what makes it",
    "start": "78000",
    "end": "84479"
  },
  {
    "text": "interesting to work on so the agenda for today first i'd like to talk a little bit about uh",
    "start": "84479",
    "end": "91360"
  },
  {
    "text": "what the service itself is because you can't really start thinking about building a reliable",
    "start": "91360",
    "end": "96799"
  },
  {
    "text": "service until you know what the service is going to be and then i'd like to talk a little bit",
    "start": "96799",
    "end": "102399"
  },
  {
    "text": "dig a little bit deep into what reliability really means and how we can",
    "start": "102399",
    "end": "107759"
  },
  {
    "text": "sort of turn this abstract notion into something concrete that we can work on and improve and that's going to lead us towards",
    "start": "107759",
    "end": "115280"
  },
  {
    "text": "a process of what i like to call a reliability engineering right so more like a structured approach to improving",
    "start": "115280",
    "end": "121280"
  },
  {
    "text": "reliability part of that process is going to include stress tests",
    "start": "121280",
    "end": "127520"
  },
  {
    "text": "and i'm going to talk a little bit about the tools and techniques that we use for our stress test to verify sort of",
    "start": "127520",
    "end": "134239"
  },
  {
    "text": "that our the mechanisms that we put in place to improve reliability actually work",
    "start": "134239",
    "end": "141040"
  },
  {
    "text": "but there's also uh this idea that these tools that i'm gonna mention they are",
    "start": "141040",
    "end": "146080"
  },
  {
    "text": "sort of like humble simple tools there are no magic tools that you can sort of use to sprinkle reliability on your",
    "start": "146080",
    "end": "152480"
  },
  {
    "text": "service so you're gonna have to put them together in a reasonable way to get",
    "start": "152480",
    "end": "157680"
  },
  {
    "text": "some results okay so what is the service well obviously then it's a tv streaming",
    "start": "157680",
    "end": "163920"
  },
  {
    "text": "service and i'm sure you're all familiar with some of those and if you're a norwegians presumably even nrktv",
    "start": "163920",
    "end": "172400"
  },
  {
    "text": "specifically most people are familiar with the tv streaming app right which is sort",
    "start": "172640",
    "end": "178720"
  },
  {
    "text": "of the user facing part of the service or the public interface of the streaming",
    "start": "178720",
    "end": "184640"
  },
  {
    "text": "service of course there's going to be a lot of stuff happening that's sort of invisible as",
    "start": "184640",
    "end": "190239"
  },
  {
    "text": "well um we could um take just a quick look at it",
    "start": "190239",
    "end": "195760"
  },
  {
    "text": "to make it concrete can you see this you cannot see it",
    "start": "195760",
    "end": "200879"
  },
  {
    "text": "it doesn't actually work now presumably",
    "start": "200879",
    "end": "207760"
  },
  {
    "text": "hopefully this is going to work can you see it now okay so well it looks like i guess any tv",
    "start": "208560",
    "end": "215519"
  },
  {
    "text": "streaming service right so you have your front page here and then you have a bunch of offerings",
    "start": "215519",
    "end": "222239"
  },
  {
    "text": "this is like my content presumably things that i've looked at",
    "start": "222239",
    "end": "227280"
  },
  {
    "text": "and then we have all kinds of basically ways to try to entice people",
    "start": "227280",
    "end": "232879"
  },
  {
    "text": "we have sports events sort of live things so it's a combination of on-demand content and live content and",
    "start": "232879",
    "end": "239120"
  },
  {
    "text": "you can also go and see actually uh sort of the regular linear programming",
    "start": "239120",
    "end": "245439"
  },
  {
    "text": "is also available so you can watch the channels themselves live in the service and then obviously",
    "start": "245439",
    "end": "252319"
  },
  {
    "text": "you're gonna have some search stuff and things like that like it might maybe i will maybe i'm interested in in",
    "start": "252319",
    "end": "258799"
  },
  {
    "text": "the daily news so i can watch that like here",
    "start": "258799",
    "end": "264800"
  },
  {
    "text": "so that's that's a very quick look at the service hopefully we're back with the slides yes",
    "start": "265600",
    "end": "272720"
  },
  {
    "text": "and of course fundamentally that's a client server architecture with a whole lot of a bunch of different",
    "start": "272720",
    "end": "279120"
  },
  {
    "text": "clients and a bunch of servers as well so we run this um",
    "start": "279120",
    "end": "285759"
  },
  {
    "text": "the api and two data centers in azure and",
    "start": "286320",
    "end": "291600"
  },
  {
    "text": "in a sense when you're using a tv streaming app uh you're playing uh the game of hunter media manifest",
    "start": "291600",
    "end": "297520"
  },
  {
    "text": "because what the user really wants is to grab um a media manifest and start streaming",
    "start": "297520",
    "end": "302960"
  },
  {
    "text": "some content that they're interested in so interacting with the app itself is sort of just a means to an end to get to",
    "start": "302960",
    "end": "309600"
  },
  {
    "text": "that to that content right and for i'd like to say for the petabytes for",
    "start": "309600",
    "end": "315600"
  },
  {
    "text": "for the mass volume of data what you're really going to interact with is a cdn right",
    "start": "315600",
    "end": "321919"
  },
  {
    "text": "so we don't stream that from our servers and that means that our api is uh",
    "start": "321919",
    "end": "327840"
  },
  {
    "text": "strictly speaking an api for metadata right it's worth note and worth noting that",
    "start": "327840",
    "end": "335039"
  },
  {
    "text": "this service almost exclusively reads right",
    "start": "335039",
    "end": "340639"
  },
  {
    "text": "almost just http gets which is quite uh nice for us because",
    "start": "340639",
    "end": "346000"
  },
  {
    "text": "uh it's much easier to handle a lot of reads than a lot of rights we do have some rights some to",
    "start": "346000",
    "end": "352000"
  },
  {
    "text": "report progress how far you watched so that you can pick it up later on if you want to do that",
    "start": "352000",
    "end": "359280"
  },
  {
    "text": "and we have to report analytics how how many people watched what kind of content",
    "start": "359280",
    "end": "364639"
  },
  {
    "text": "traffic sometimes occurs in bursts it's not evenly distributed uh so if you have a big launch that's sort of like a mini",
    "start": "364639",
    "end": "370720"
  },
  {
    "text": "black friday for us so it's a very hit tv show that's sort of launched all at once then we're gonna have a lot of",
    "start": "370720",
    "end": "376880"
  },
  {
    "text": "traffic suddenly the same goes for uh important sports events and stuff like that but again it helps a lot that we have",
    "start": "376880",
    "end": "383039"
  },
  {
    "text": "mostly read so we can cash our way out of some of those problems okay",
    "start": "383039",
    "end": "388400"
  },
  {
    "text": "so that was a quick look at the service what is a reliable service then how can",
    "start": "388400",
    "end": "393680"
  },
  {
    "text": "we make something like this reliable and then we have to almost get a little bit philosophical what we mean by",
    "start": "393680",
    "end": "400400"
  },
  {
    "text": "reliable uh well when people talk about reliability",
    "start": "400400",
    "end": "405680"
  },
  {
    "text": "they're often going to use words like robust and resilient and those sound nice and they presumably",
    "start": "405680",
    "end": "412400"
  },
  {
    "text": "have something to do with reliability but in a sense we just postponed the problem so i said okay what is",
    "start": "412400",
    "end": "418080"
  },
  {
    "text": "reliability maybe it's these two other things now we have to define those so what does it mean to be robust and",
    "start": "418080",
    "end": "424160"
  },
  {
    "text": "what did it mean to be resilient let's start with the first one i think robustness is about sort of how",
    "start": "424160",
    "end": "431199"
  },
  {
    "text": "tough it is how rugged it is how how much stress it can take or how much",
    "start": "431199",
    "end": "436639"
  },
  {
    "text": "abuse it can take before it goes down and there's this uh episode of the",
    "start": "436639",
    "end": "442319"
  },
  {
    "text": "simpsons where homer picks up boxing and it turns out that he does",
    "start": "442319",
    "end": "447360"
  },
  {
    "text": "surprisingly well and it's not because he's a good fighter but it's because he's a very robust fighter",
    "start": "447360",
    "end": "453120"
  },
  {
    "text": "he has this specific uh genetical condition where his brain is insulated by an extra layer of fluid",
    "start": "453120",
    "end": "460319"
  },
  {
    "text": "so his opponents can sort of wear themselves out trying to punch him down and then when they're exhausted he can",
    "start": "460319",
    "end": "466479"
  },
  {
    "text": "push them over and he wins the fight so not a good fighter very robust fighter",
    "start": "466479",
    "end": "473680"
  },
  {
    "text": "a resiliency is related to robustness but not quite the same",
    "start": "473680",
    "end": "478960"
  },
  {
    "text": "so it's more about bouncing back from failure if you fail you get back up and also it is about continuing to work",
    "start": "478960",
    "end": "487599"
  },
  {
    "text": "even under bad conditions if something something fails you can still deliver some kind of service so in terms of",
    "start": "487599",
    "end": "494080"
  },
  {
    "text": "boxing that's more like uh getting back up from the canvas it's more like rocky balboa than sims homer simpson",
    "start": "494080",
    "end": "501840"
  },
  {
    "text": "and there's this uh annoying song from the 90s that sort of captures this spirit of reliability well i think",
    "start": "501840",
    "end": "510000"
  },
  {
    "text": "so you get back up but there's also this property of just uh not giving up even",
    "start": "510080",
    "end": "515200"
  },
  {
    "text": "though things are getting bad even though you're starting to experience failures and i have to say uh the ndc conference",
    "start": "515200",
    "end": "522640"
  },
  {
    "text": "has proven remarkably resilient it's kind of impressive that we're still here uh even under these bad conditions and",
    "start": "522640",
    "end": "529839"
  },
  {
    "text": "carrying on with the conference so that's that's pretty cool it's a resilient conference",
    "start": "529839",
    "end": "535360"
  },
  {
    "text": "and it's important to note that these robustness and resilience it's not about they're not booleans it's",
    "start": "535360",
    "end": "541120"
  },
  {
    "text": "not like either or you're robust am i robust yes or no it's not like that it's",
    "start": "541120",
    "end": "546160"
  },
  {
    "text": "not even about percentages it's more like uh when we say that a service is robust it means that we've",
    "start": "546160",
    "end": "553040"
  },
  {
    "text": "verified that it's robust against certain kinds and amounts of stress right and it implies also that if we",
    "start": "553040",
    "end": "560080"
  },
  {
    "text": "want to build a robust service we're going to have to specify what kinds and amounts of stress we're",
    "start": "560080",
    "end": "565440"
  },
  {
    "text": "going to talk about similar for resiliency it means that you're going to be resilient under",
    "start": "565440",
    "end": "571920"
  },
  {
    "text": "certain kinds of bad conditions right and it's up to us to specify then what those conditions",
    "start": "571920",
    "end": "577600"
  },
  {
    "text": "are going to be so there are non-functional requirements they're not going to be generic they're",
    "start": "577600",
    "end": "583600"
  },
  {
    "text": "going to be specific and contextual so it's going to depend crucially on the service that you're building",
    "start": "583600",
    "end": "591480"
  },
  {
    "text": "and it's important also that these non-functional requirements um",
    "start": "591680",
    "end": "596880"
  },
  {
    "text": "are real business requirements right so they're not purely technical considerations uh they're business",
    "start": "596880",
    "end": "602480"
  },
  {
    "text": "considerations they're gonna probably have to be backed up with some technical consideration definitely going to have",
    "start": "602480",
    "end": "608880"
  },
  {
    "text": "to be backed up with some technical solutions but still they're fundamentally business requirements",
    "start": "608880",
    "end": "615600"
  },
  {
    "text": "now unfortunately it's going to be real hard to go to a quote-unquote business person and have them specify what that's going",
    "start": "615600",
    "end": "622480"
  },
  {
    "text": "to mean and you don't have a domain expert for that and you don't sort of have a product owner that's going to",
    "start": "622480",
    "end": "628800"
  },
  {
    "text": "tell you what that's going to be apart from some vague notion it has to be good enough right it has it has to",
    "start": "628800",
    "end": "635440"
  },
  {
    "text": "work so it's typically left unspecified and then it's sort of up to the developers i",
    "start": "635440",
    "end": "641279"
  },
  {
    "text": "guess to figure out what that's going to mean unfortunately since it's ill-specified",
    "start": "641279",
    "end": "647279"
  },
  {
    "text": "developers often tend to sort of meet it with this uh best effort kind of",
    "start": "647279",
    "end": "652399"
  },
  {
    "text": "approach right everyone is going to try their best to create something that works reasonably well under most",
    "start": "652399",
    "end": "659040"
  },
  {
    "text": "conditions and if there's something a particular failing they're gonna or some obvious",
    "start": "659040",
    "end": "664640"
  },
  {
    "text": "problems they're gonna try to fix it and that's that's sort of uh all well and good but in a sense it's",
    "start": "664640",
    "end": "670480"
  },
  {
    "text": "also it's also a given right most developers do try their best",
    "start": "670480",
    "end": "675760"
  },
  {
    "text": "to create something that's good uh the problem is that best effort isn't automatically good enough right it",
    "start": "675760",
    "end": "682399"
  },
  {
    "text": "doesn't automatically meet that bar so sometimes uh quite simply good enough",
    "start": "682399",
    "end": "689440"
  },
  {
    "text": "um has to be really quite good right and it's not necessarily fall out of",
    "start": "689440",
    "end": "695680"
  },
  {
    "text": "this ad hoc process of doing your best right so you might not be able to reach this",
    "start": "695680",
    "end": "701920"
  },
  {
    "text": "good enough target through um ad hoc measures alone",
    "start": "701920",
    "end": "707839"
  },
  {
    "text": "and i'd like to add a few words then about a mindset here and the reason for that",
    "start": "707839",
    "end": "713839"
  },
  {
    "text": "is i've noticed sort of a change in my own mindset since i've been uh caring more about reliability and",
    "start": "713839",
    "end": "720560"
  },
  {
    "text": "thinking more about how we can create a good process to uh improve reliability",
    "start": "720560",
    "end": "726399"
  },
  {
    "text": "over time to sort of work deliberately to work to improve the reliability",
    "start": "726399",
    "end": "732079"
  },
  {
    "text": "again most developers i i mean are good people they are conscientious people they try their best",
    "start": "732079",
    "end": "738160"
  },
  {
    "text": "and they want to do the right thing but at the same time i think we're all often stuck in sort of like a compile",
    "start": "738160",
    "end": "744000"
  },
  {
    "text": "time mindset right so we sit and work with the code and we're preoccupied with the business",
    "start": "744000",
    "end": "749839"
  },
  {
    "text": "logic which sort of correspond to the functional requirements right",
    "start": "749839",
    "end": "756399"
  },
  {
    "text": "and you might have heard like thought leaders say stuff like the code is the truth or the truth is in the code or",
    "start": "757440",
    "end": "763360"
  },
  {
    "text": "something like that and many believe many developers seem to believe that when i have to ask what kind of truth is",
    "start": "763360",
    "end": "770000"
  },
  {
    "text": "that what what what truth are we talking about the truth about what they're going to be the truth about what",
    "start": "770000",
    "end": "776000"
  },
  {
    "text": "happens what happens in production because if it's not the truth about that i'm not sure what kind of game we're",
    "start": "776000",
    "end": "782000"
  },
  {
    "text": "playing right it should be about what happens in production but if we're going to talk about what happens in production you're",
    "start": "782000",
    "end": "788079"
  },
  {
    "text": "also going to have to factor in the runtime environment right you have to know something about the",
    "start": "788079",
    "end": "793600"
  },
  {
    "text": "environment that your code is going to execute and otherwise you're not going to know what the code is going to do",
    "start": "793600",
    "end": "798639"
  },
  {
    "text": "and then you also had to know something about the resources available you're going to have to know something about the state of external dependencies",
    "start": "798639",
    "end": "805519"
  },
  {
    "text": "how the dependencies work over time and so forth and the problem is that the runtime is a",
    "start": "805519",
    "end": "811600"
  },
  {
    "text": "very dynamic place right and it's also partially out of your control like it",
    "start": "811600",
    "end": "816880"
  },
  {
    "text": "might be that your code is running on some node that node might be running some other code as well and how does",
    "start": "816880",
    "end": "822240"
  },
  {
    "text": "that affect the execution of your code it's not necessarily completely knowable",
    "start": "822240",
    "end": "827839"
  },
  {
    "text": "right so there's something unpredictable about this runtime that means that runtime behavior is not",
    "start": "827839",
    "end": "835040"
  },
  {
    "text": "entirely analytical and by that i mean that you can't really sit down at your terminal and look at the stare at the",
    "start": "835040",
    "end": "841360"
  },
  {
    "text": "code and know exactly how things are going to work out so any truth to me at least that doesn't",
    "start": "841360",
    "end": "848560"
  },
  {
    "text": "factor in this this environment is going to be a lie",
    "start": "848560",
    "end": "853600"
  },
  {
    "text": "so i think we should complement that compile time mindset with more like a runtime mindset which factors in this unpredictability",
    "start": "853680",
    "end": "860800"
  },
  {
    "text": "of the runtime we cannot figure it all out in our heads and that means we have to",
    "start": "860800",
    "end": "867040"
  },
  {
    "text": "move towards sort of like a systems thinking perspective we're in additional to in addition to",
    "start": "867040",
    "end": "872959"
  },
  {
    "text": "this analytical approach we also think more like okay i have a hypothesis of how this is going to work",
    "start": "872959",
    "end": "879199"
  },
  {
    "text": "in production i don't really know for sure and i'm going to run some experiments to validate that my",
    "start": "879199",
    "end": "884320"
  },
  {
    "text": "hypothesis is correct and on a personal note i'm going to say",
    "start": "884320",
    "end": "889839"
  },
  {
    "text": "that being on call for a service does mine really does wonders for this runtime",
    "start": "889839",
    "end": "896560"
  },
  {
    "text": "mindset it's not that i didn't care about reliability before but when you get called up if things",
    "start": "896560",
    "end": "903120"
  },
  {
    "text": "don't work you care in um in a more visceral way you know in a",
    "start": "903120",
    "end": "909360"
  },
  {
    "text": "more concrete way right so skin in the game really has it really does matter right and i know",
    "start": "909360",
    "end": "916320"
  },
  {
    "text": "that being on call is not for everyone and it uh definitely should be well compensated but it's",
    "start": "916320",
    "end": "922959"
  },
  {
    "text": "it's my experience that it affects the way you think and you really concretely",
    "start": "922959",
    "end": "928160"
  },
  {
    "text": "value simplicity not just over uh complexity but simplicity over sophistication as well right you prefer",
    "start": "928160",
    "end": "935680"
  },
  {
    "text": "things that have fewer parts uh i recommend reading this paper uh by",
    "start": "935680",
    "end": "941759"
  },
  {
    "text": "richard cook it's called how complex systems fail because what we are building are complex systems",
    "start": "941759",
    "end": "948320"
  },
  {
    "text": "and you can also watch one of his talks they're great as well okay uh so that was sort of reliability",
    "start": "948320",
    "end": "956240"
  },
  {
    "text": "in general i guess so what about reliability at nrktv and i think",
    "start": "956240",
    "end": "961519"
  },
  {
    "text": "now this is just me throwing out an unvalidated hypothesis but i think often",
    "start": "961519",
    "end": "966880"
  },
  {
    "text": "you see that improvements start with some kind of crisis and our crisis",
    "start": "966880",
    "end": "973360"
  },
  {
    "text": "was not like an acute crisis but it was more like this growing realization that our best effort wasn't really producing",
    "start": "973360",
    "end": "979680"
  },
  {
    "text": "a result that we could confidently state was good enough right wasn't uh really",
    "start": "979680",
    "end": "986240"
  },
  {
    "text": "producing um in a predictable manner um reliability at the level that we wanted",
    "start": "986240",
    "end": "993440"
  },
  {
    "text": "so how then can we improve beyond best effort well first of all we're gonna have to",
    "start": "993440",
    "end": "999360"
  },
  {
    "text": "have some mechanism to tell that we're either getting better or worse right",
    "start": "999360",
    "end": "1005920"
  },
  {
    "text": "and then we need to measure something we need some kind of feedback and i think it's",
    "start": "1005920",
    "end": "1012160"
  },
  {
    "text": "it's fair to assume that in a sense engineering is the combination of best",
    "start": "1012160",
    "end": "1017279"
  },
  {
    "text": "effort and feedback right to have this feedback to to guide you when you're",
    "start": "1017279",
    "end": "1022399"
  },
  {
    "text": "trying to do something well so the purpose here is to move from an ad hoc process when you're doing",
    "start": "1022399",
    "end": "1028079"
  },
  {
    "text": "reliability work to something that's more strategic so we started looking at what's called site reliability engineering that you",
    "start": "1028079",
    "end": "1034480"
  },
  {
    "text": "might have heard of there's this google book [Music] and we decided to start to define some",
    "start": "1034480",
    "end": "1041678"
  },
  {
    "text": "service level objectives for some of our services not all of them at the same time but just start start exploring this right",
    "start": "1041679",
    "end": "1049280"
  },
  {
    "text": "and then you have to choose some service level indicators which are going to be the things that",
    "start": "1049280",
    "end": "1054799"
  },
  {
    "text": "you're going to measure and that typically includes stuff like error rate now error rate sounds very",
    "start": "1054799",
    "end": "1061440"
  },
  {
    "text": "simple but it sort of presupposes that you at least define what an error is and that might be more subtle than than you might",
    "start": "1061440",
    "end": "1068480"
  },
  {
    "text": "initially think right it's going to depend again on the service exactly what an error is going to be",
    "start": "1068480",
    "end": "1074000"
  },
  {
    "text": "and similarly we might want to measure latency or response time from an api",
    "start": "1074000",
    "end": "1079120"
  },
  {
    "text": "which is really important when there's an end user waiting at the other end right but again you're going to have to",
    "start": "1079120",
    "end": "1086559"
  },
  {
    "text": "decide what kind of distribution you're going to accept for this latency that's",
    "start": "1086559",
    "end": "1091840"
  },
  {
    "text": "going to be a choice and for more like pipeline stuff say for",
    "start": "1091840",
    "end": "1097280"
  },
  {
    "text": "publication of new content or the distribution of new content throughput might be something that you",
    "start": "1097280",
    "end": "1103280"
  },
  {
    "text": "want to measure yes and of course so the idea is to start measuring some",
    "start": "1103280",
    "end": "1110080"
  },
  {
    "text": "of those things that matter to us and to back up sort of our gut feelings with some numbers",
    "start": "1110080",
    "end": "1117039"
  },
  {
    "text": "but i have to add some important caveats when you start measuring things like this and the obvious caveat is that metrics",
    "start": "1118080",
    "end": "1124799"
  },
  {
    "text": "can be harmful and then they often are they can be uh abused and misused",
    "start": "1124799",
    "end": "1131520"
  },
  {
    "text": "they can be used in particular by management to sort of evaluate the um the effort of the team how well is the",
    "start": "1131520",
    "end": "1137760"
  },
  {
    "text": "team doing well are they meeting their slos and are they those slows ambitious",
    "start": "1137760",
    "end": "1144320"
  },
  {
    "text": "that's one kind of abuse if management does that what you're going to find is that the teams are going to start gaming the metric in some",
    "start": "1144799",
    "end": "1151600"
  },
  {
    "text": "way and that completely undermines the purpose of doing this what we want is to have something that helps us have a",
    "start": "1151600",
    "end": "1158720"
  },
  {
    "text": "healthy process of strategic improvement or structured improvement",
    "start": "1158720",
    "end": "1164880"
  },
  {
    "text": "so you really have to have some um quite deep level of trust in the",
    "start": "1164880",
    "end": "1169919"
  },
  {
    "text": "organization before trying this right and in particular trust that goes uh across responsibilities and",
    "start": "1169919",
    "end": "1176960"
  },
  {
    "text": "across roles right not just trust between the developers that's fine also have to have sort of trust between",
    "start": "1176960",
    "end": "1182799"
  },
  {
    "text": "developers and management so when we started doing that it was what completely uh bottom-up sort of",
    "start": "1182799",
    "end": "1188480"
  },
  {
    "text": "autonomous initiative right so it was the developer teams themselves they started doing this",
    "start": "1188480",
    "end": "1194960"
  },
  {
    "text": "was self-imposed by the team it was defined by the team it was owned by the team",
    "start": "1194960",
    "end": "1201039"
  },
  {
    "text": "and uh crucially uh there are no rewards involved in meeting",
    "start": "1201039",
    "end": "1207520"
  },
  {
    "text": "or not meet or punishments uh in not meeting an slo right that's not the",
    "start": "1207520",
    "end": "1212799"
  },
  {
    "text": "purpose of an slo at all and we definitely want don't want to encourage competition between teams in",
    "start": "1212799",
    "end": "1219679"
  },
  {
    "text": "setting ambitious slos and then reaching those goals because that means that you don't understand the purpose of setting",
    "start": "1219679",
    "end": "1225840"
  },
  {
    "text": "an slo in the first place which is an slo should not",
    "start": "1225840",
    "end": "1231200"
  },
  {
    "text": "be the goal of an slo is not to be ambitious but to be appropriate right it's going to uh be something that's",
    "start": "1231200",
    "end": "1237440"
  },
  {
    "text": "reasonable for the problem that you're trying to solve so it should be appropriate and if you can get away with it it's",
    "start": "1237440",
    "end": "1242640"
  },
  {
    "text": "much better to uh just set it at lax slo right something that's easy to satisfy because that's much cheaper than to",
    "start": "1242640",
    "end": "1249280"
  },
  {
    "text": "decide if uh satisfy a strictest low right so investing in meeting",
    "start": "1249280",
    "end": "1254480"
  },
  {
    "text": "slo that's set too strict that's pure waste there's no reason to do that and we definitely don't want to turn",
    "start": "1254480",
    "end": "1260960"
  },
  {
    "text": "these slos into some sort of vanity metric something that the developers wear on their sleeve or something like that it's nothing some not something to",
    "start": "1260960",
    "end": "1267520"
  },
  {
    "text": "wear on your chest um okay so what are slos for those were",
    "start": "1267520",
    "end": "1273440"
  },
  {
    "text": "sort of all the negatives all the potential problems why do we want them again so we want them",
    "start": "1273440",
    "end": "1279520"
  },
  {
    "text": "to guide decisions because a lot of time we have sort of technical choices we have to make",
    "start": "1279520",
    "end": "1285600"
  },
  {
    "text": "it might be that you're wondering if you say say you're having a cloud service and you're wondering",
    "start": "1285600",
    "end": "1292320"
  },
  {
    "text": "should i choose the regular blob storage option or the premium one right one thing you could do is okay i'm gonna",
    "start": "1292320",
    "end": "1298720"
  },
  {
    "text": "try the the regular one that's the cheapest one and see if i can meet my slo if i do that there's no reason to",
    "start": "1298720",
    "end": "1304720"
  },
  {
    "text": "invest in the premium one if you cannot you can try the premium one if that fails then you're going to have",
    "start": "1304720",
    "end": "1310400"
  },
  {
    "text": "to go back to the drawing board maybe you can't use this blob storage solution or maybe your slo is up to strict so",
    "start": "1310400",
    "end": "1318880"
  },
  {
    "text": "another purpose of having this slo is to help communicate and that's going to help communicate",
    "start": "1318880",
    "end": "1324000"
  },
  {
    "text": "about the team's priorities in within the team outside the team and to management so if the team is currently",
    "start": "1324000",
    "end": "1330480"
  },
  {
    "text": "having problems reaching their slos that means they're going to have to spend more time",
    "start": "1330480",
    "end": "1336720"
  },
  {
    "text": "improving the reliability of the service at the cost of producing new features and that's something that",
    "start": "1336720",
    "end": "1343120"
  },
  {
    "text": "management understands and that's at least might have been my experience and you can use it of course to validate",
    "start": "1343120",
    "end": "1349679"
  },
  {
    "text": "the improvements or the investments you make into improving uh the reliability",
    "start": "1349679",
    "end": "1354880"
  },
  {
    "text": "of your service right in fact you can work out several different design alternatives and try them all run some",
    "start": "1354880",
    "end": "1361679"
  },
  {
    "text": "experiments and see what causes the greatest improvement of course you put it in place also to",
    "start": "1361679",
    "end": "1368080"
  },
  {
    "text": "notice regressions right so it might be that you're you're measuring your uh service level",
    "start": "1368080",
    "end": "1375120"
  },
  {
    "text": "indicators finding that you're not really consistently meeting your slos and you notice that okay that's been",
    "start": "1375120",
    "end": "1380960"
  },
  {
    "text": "going on now for three or four or four weeks so what happened back then right it might be that you deployed some uh",
    "start": "1380960",
    "end": "1387280"
  },
  {
    "text": "changes to your code that made everything slower or it might be that something in your environment changed",
    "start": "1387280",
    "end": "1392400"
  },
  {
    "text": "but still you need to handle that in a sense right it might be that something out of your control changed but then",
    "start": "1392400",
    "end": "1398159"
  },
  {
    "text": "you're still going to have to sort of take the necessary measures",
    "start": "1398159",
    "end": "1403360"
  },
  {
    "text": "okay uh with this in mind and understand that these slos are there to guide the team's",
    "start": "1403360",
    "end": "1410480"
  },
  {
    "text": "priorities um and to highlight their challenges also and not to assess sort of the quality of",
    "start": "1410480",
    "end": "1416480"
  },
  {
    "text": "the work itself how do you go about actually defining one of these slos and my experience has been that this is",
    "start": "1416480",
    "end": "1423039"
  },
  {
    "text": "actually quite uncomfortable this is something that developers are not comfortable doing including myself",
    "start": "1423039",
    "end": "1429120"
  },
  {
    "text": "so we tend to shy away from it but i i also like to think of it uh in the opposite way so if it's uncomfortable it",
    "start": "1429120",
    "end": "1436320"
  },
  {
    "text": "means that we're on to something we're doing something right right because the value add is in in overcoming that",
    "start": "1436320",
    "end": "1441919"
  },
  {
    "text": "discomfort and producing something so you you have to force some decisions",
    "start": "1441919",
    "end": "1447120"
  },
  {
    "text": "and you have to make sort of your gut instincts about what matters for the reliability of your service concrete so",
    "start": "1447120",
    "end": "1453679"
  },
  {
    "text": "you can't really hand wave your your way out of that so here's an attempt to do just that for",
    "start": "1453679",
    "end": "1459840"
  },
  {
    "text": "some of our endpoints this is going to be again um now one of these um this is the linear channel playback api",
    "start": "1459840",
    "end": "1467760"
  },
  {
    "text": "with three of three of the endpoints so what we measure here well first of all if we set a goal of up time of 99.95",
    "start": "1467760",
    "end": "1475360"
  },
  {
    "text": "which is kind of ambitious uh we also chosen okay we're going to",
    "start": "1475360",
    "end": "1481200"
  },
  {
    "text": "measure the error rate we just measure or we just count the 500 errors 400 hours are not a problem sort",
    "start": "1481200",
    "end": "1488159"
  },
  {
    "text": "of with the service itself and we set quite ambitious goals because",
    "start": "1488159",
    "end": "1493440"
  },
  {
    "text": "basically we never want the service to produce an error right should uh should",
    "start": "1493440",
    "end": "1498960"
  },
  {
    "text": "never do that to do something else um for latency we choose to focus on the 99th percentile which means that",
    "start": "1498960",
    "end": "1506640"
  },
  {
    "text": "um for the each of these limits uh one out of 100",
    "start": "1506640",
    "end": "1512960"
  },
  {
    "text": "requests allowed to take longer but the other 99 had to be within these boundaries",
    "start": "1512960",
    "end": "1520159"
  },
  {
    "text": "but you also notice then we start defining these things that you have to be very specific",
    "start": "1520159",
    "end": "1525840"
  },
  {
    "text": "so this is measured behind the gateway or the cache and that means that is not necessarily",
    "start": "1525840",
    "end": "1532640"
  },
  {
    "text": "exactly the same experience that the end user is going to get so this is just for that for that",
    "start": "1532640",
    "end": "1538159"
  },
  {
    "text": "api and we chose the measuring interval of one minute which basically says that okay we count",
    "start": "1538159",
    "end": "1543760"
  },
  {
    "text": "the number of errors within that minute we measure the latency within that minute we calculate the 99 uh percentile",
    "start": "1543760",
    "end": "1550080"
  },
  {
    "text": "within that minute and we also set some some limits for the load so we have to",
    "start": "1550080",
    "end": "1556640"
  },
  {
    "text": "have some a minimum load uh otherwise that typically you have some longer latency",
    "start": "1556640",
    "end": "1562799"
  },
  {
    "text": "because things are sort of cold and also you're going to have some sort of breaking point right so we say okay",
    "start": "1562799",
    "end": "1568640"
  },
  {
    "text": "up to 55 oh sorry 50 000 requests per minute",
    "start": "1568640",
    "end": "1574559"
  },
  {
    "text": "and we also don't really care that much uh about what happens during the night because again the traffic is going to be",
    "start": "1574799",
    "end": "1581600"
  },
  {
    "text": "low so we basically just count what happens when we have",
    "start": "1581600",
    "end": "1586720"
  },
  {
    "text": "significant traffic so here's very simply our process",
    "start": "1586720",
    "end": "1592000"
  },
  {
    "text": "you basically just started measuring things these service level indicators before choosing the objectives so we",
    "start": "1592000",
    "end": "1597200"
  },
  {
    "text": "know something about where we start and we chose some objectives and that was kind of painful because it felt",
    "start": "1597200",
    "end": "1604159"
  },
  {
    "text": "arbitrary but it's also entirely necessary because you need some starting point",
    "start": "1604159",
    "end": "1609360"
  },
  {
    "text": "before you can iterate right so basically you look at the numbers you have you scratch your chin a little bit",
    "start": "1609360",
    "end": "1614799"
  },
  {
    "text": "and then you choose something once you've chosen something you can start observing it like over time are we",
    "start": "1614799",
    "end": "1620960"
  },
  {
    "text": "meeting these objectives that we chose and then periodically you will revise or",
    "start": "1620960",
    "end": "1626799"
  },
  {
    "text": "invest basically means that okay if we're failing to meet our sls is that",
    "start": "1626799",
    "end": "1632240"
  },
  {
    "text": "because we set too strict slo or is it because we don't have the reliability that we want",
    "start": "1632240",
    "end": "1637760"
  },
  {
    "text": "and we have to make some investments and when you're sort of in that position",
    "start": "1637760",
    "end": "1643279"
  },
  {
    "text": "you can now start to iterate over that and that's sort of the structured process that we want to use",
    "start": "1643279",
    "end": "1651120"
  },
  {
    "text": "um okay so observation how do we do that well it's very easy these days to put up",
    "start": "1651120",
    "end": "1656960"
  },
  {
    "text": "dashboards this is application insights um which shows for one of these endpoints",
    "start": "1656960",
    "end": "1662799"
  },
  {
    "text": "that i talked about the latency i think",
    "start": "1662799",
    "end": "1668080"
  },
  {
    "text": "and um it shows actually uh uh three of these percentiles the 99th",
    "start": "1670000",
    "end": "1675440"
  },
  {
    "text": "percentile which is the one we have an slo for it also shows the 95th and the 50th which gives you sort of a feel uh",
    "start": "1675440",
    "end": "1683440"
  },
  {
    "text": "for how the api works it's fine to have more service level indicators or or more",
    "start": "1683440",
    "end": "1688559"
  },
  {
    "text": "indicators uh in your dashboard in addition to the actual slos",
    "start": "1688559",
    "end": "1693919"
  },
  {
    "text": "themselves uh then we have reports because you can't really stare at these dashboards",
    "start": "1693919",
    "end": "1700000"
  },
  {
    "text": "all day so one thing that several of our teams have done is to implement this sort of weekly slo",
    "start": "1700000",
    "end": "1706799"
  },
  {
    "text": "report that gets posted to a slack channel every week so here we sort of echo what uh the slo",
    "start": "1706799",
    "end": "1713279"
  },
  {
    "text": "is um we also calculated the downtime budget so if you have an slo um",
    "start": "1713279",
    "end": "1720060"
  },
  {
    "text": "[Music] at 99.95 that means you have a downtown budget of",
    "start": "1720060",
    "end": "1725679"
  },
  {
    "text": "four minutes per week it's okay to be to violate the slo uh",
    "start": "1725679",
    "end": "1731200"
  },
  {
    "text": "for four minutes per week uh this week it turns out or for the example that i took uh we had",
    "start": "1731200",
    "end": "1738000"
  },
  {
    "text": "one minute of downtime due to latency we're violating this uh latency as low",
    "start": "1738000",
    "end": "1744399"
  },
  {
    "text": "for one minute and that's our granularity because that's sort of the chunks that we measure",
    "start": "1744399",
    "end": "1750000"
  },
  {
    "text": "and we also note outside the slo hours basically during night we had an additional minute",
    "start": "1750000",
    "end": "1756640"
  },
  {
    "text": "of downtime if the slo were to apply during the night",
    "start": "1756640",
    "end": "1762559"
  },
  {
    "text": "okay so what about notifications initially we were tempted to set up notifications as well",
    "start": "1762640",
    "end": "1767919"
  },
  {
    "text": "so should we set up alerts to sort of notify the team that we're having ongoing slo violations",
    "start": "1767919",
    "end": "1774960"
  },
  {
    "text": "and we actually tried that but it just produces a lot of noise and alerts should mean that there is",
    "start": "1774960",
    "end": "1781279"
  },
  {
    "text": "some action necessary and it's not necessarily the case that you know what to do when you're okay now we had some",
    "start": "1781279",
    "end": "1786559"
  },
  {
    "text": "some slow calls which would do about that it's not it's not that easy to know and it's",
    "start": "1786559",
    "end": "1793279"
  },
  {
    "text": "sort of these slos are not health checks we have health checks we monitor those um",
    "start": "1793279",
    "end": "1798480"
  },
  {
    "text": "that's not what the slo is for so we stop doing that okay so now we have our slos in place we",
    "start": "1798480",
    "end": "1805279"
  },
  {
    "text": "have this process for monitoring and revising our slos and for making investments",
    "start": "1805279",
    "end": "1811760"
  },
  {
    "text": "are we done with this work now so are we reliable at this point well of course not",
    "start": "1813039",
    "end": "1818640"
  },
  {
    "text": "okay this is a starting point now we have feedback and that means that the real work can begin right so this is",
    "start": "1818640",
    "end": "1824399"
  },
  {
    "text": "just to help us do the real work i'd like to talk a little bit about architecting for reliability as well",
    "start": "1824399",
    "end": "1831919"
  },
  {
    "text": "so we make a very coarse distinction between what we call red and green services",
    "start": "1831919",
    "end": "1837039"
  },
  {
    "text": "in the tv streaming service and at the high level you can think of sort of the public facing part of the tv",
    "start": "1837039",
    "end": "1844000"
  },
  {
    "text": "streaming service again partitioned into sub domains like this and then nothing to us matters more than",
    "start": "1844000",
    "end": "1851360"
  },
  {
    "text": "playback because there is no at a high level there is no definition of uptime that doesn't include also the user can",
    "start": "1851360",
    "end": "1857760"
  },
  {
    "text": "watch the actual content on their device if they cannot do that we're down right it doesn't help um whereas um",
    "start": "1857760",
    "end": "1866640"
  },
  {
    "text": "sort of recommendations and personalization stuff like that those are nice to have we want them in our service but they don't sort of",
    "start": "1866640",
    "end": "1873279"
  },
  {
    "text": "contribute to this major use case right so they're sort of optional we don't care that deeply about that",
    "start": "1873279",
    "end": "1879440"
  },
  {
    "text": "and we have some things that fall sort of in the middle which are the things that help you navigate and find the content that you",
    "start": "1879440",
    "end": "1886399"
  },
  {
    "text": "want to watch and you might you might have a need to have some variation of those working as well",
    "start": "1886399",
    "end": "1893519"
  },
  {
    "text": "but importantly then we want to define separate slos for these different subdomains right because they have",
    "start": "1893519",
    "end": "1898799"
  },
  {
    "text": "different non-functional requirements that's why we have these color codes in the first place",
    "start": "1898799",
    "end": "1904159"
  },
  {
    "text": "we want to put into place separate reliability measures and for that we need to run them as independent services",
    "start": "1904159",
    "end": "1910640"
  },
  {
    "text": "right and that also gives us failure isolation which is very nice and important because",
    "start": "1910640",
    "end": "1917279"
  },
  {
    "text": "it enables a scenario of partial failure right and that's a key enabler for this",
    "start": "1917279",
    "end": "1923039"
  },
  {
    "text": "resiliency right because further failure is potential partial success also right",
    "start": "1923039",
    "end": "1929440"
  },
  {
    "text": "it's open sort of at the door for graceful degradation right if something fails it doesn't necessarily bring the",
    "start": "1929440",
    "end": "1935039"
  },
  {
    "text": "whole service down but of course that's just theory at this point right so if the api sets the stage",
    "start": "1935039",
    "end": "1942320"
  },
  {
    "text": "for graceful degradation that's fine doesn't really help if the client doesn't also",
    "start": "1942320",
    "end": "1947760"
  },
  {
    "text": "support graceful degradation so we need to do some sort of validation",
    "start": "1947760",
    "end": "1952880"
  },
  {
    "text": "to make sure that that's the case and one of the techniques that we use for that is what we call a broken proxy",
    "start": "1952880",
    "end": "1958559"
  },
  {
    "text": "that we insert between the client and the server so say our api is working just",
    "start": "1958559",
    "end": "1964159"
  },
  {
    "text": "fine so i just included the personalization and the playback features now",
    "start": "1964159",
    "end": "1969360"
  },
  {
    "text": "everything is really okay and everything then works on the client as well then we insert this broken proxy and the purpose",
    "start": "1969360",
    "end": "1975279"
  },
  {
    "text": "of that is to introduce some sort of noise right some latency or some errors and stuff like that so to break things",
    "start": "1975279",
    "end": "1982000"
  },
  {
    "text": "right so maybe we take out personalization all those calls fail now and the purpose",
    "start": "1982000",
    "end": "1988480"
  },
  {
    "text": "of the test is to verify that okay that happens the client application loses the",
    "start": "1988480",
    "end": "1993519"
  },
  {
    "text": "personalization features but you can still watch the content what often happens if you don't do this validation",
    "start": "1993519",
    "end": "1999120"
  },
  {
    "text": "is that you're going to not be able to do the playback either right and then you lose everything",
    "start": "1999120",
    "end": "2005679"
  },
  {
    "text": "so this to me is the core of resiliency um what about robustness",
    "start": "2005679",
    "end": "2011919"
  },
  {
    "text": "we talked about defining as lows and meetings as lows but that's not really what we that has nothing to do with",
    "start": "2011919",
    "end": "2017440"
  },
  {
    "text": "homer simpson right um it doesn't really tell us much about robustness so it's in a sense it's not",
    "start": "2017440",
    "end": "2023120"
  },
  {
    "text": "that hard to meet your slo on a sunny day right because you defined you're as a low preference presumably on a sunny",
    "start": "2023120",
    "end": "2028559"
  },
  {
    "text": "day by observing how things worked but not all days are sunny the robustness is about meeting your slo",
    "start": "2028559",
    "end": "2034960"
  },
  {
    "text": "on a bad day right and that means meeting your slo under some sort of stress",
    "start": "2034960",
    "end": "2041200"
  },
  {
    "text": "and to verify or to check the extent to which we can which we can do that we run experiments",
    "start": "2041200",
    "end": "2046399"
  },
  {
    "text": "typically than in our pre-production environment and we do that as stress tests",
    "start": "2046399",
    "end": "2053040"
  },
  {
    "text": "and i'm just going to mention quickly some of the tools that we use for that i'm sure there are plenty other tools",
    "start": "2053040",
    "end": "2058398"
  },
  {
    "text": "out there we've just chosen some that work well for us and again these are not magical tools but they're",
    "start": "2058399",
    "end": "2064720"
  },
  {
    "text": "good humble honest tools that we use to create experiments basically we will use",
    "start": "2064720",
    "end": "2070320"
  },
  {
    "text": "anything that helps us set up a useful experiment to run against our services so for load",
    "start": "2070320",
    "end": "2076878"
  },
  {
    "text": "testing we use k6 which has been good for us i mean it's fairly easy",
    "start": "2076879",
    "end": "2083200"
  },
  {
    "text": "to set up you just define your stress test or your load test as a javascript",
    "start": "2083200",
    "end": "2089679"
  },
  {
    "text": "file and then you k6 is going to produce whatever number or configured number you",
    "start": "2089679",
    "end": "2095440"
  },
  {
    "text": "have for calls against your service and then we use the resiliency a library",
    "start": "2095440",
    "end": "2102240"
  },
  {
    "text": "called poly that's not really for creating the stress test it's more about for implementing reliability features",
    "start": "2102240",
    "end": "2108000"
  },
  {
    "text": "gives you uh potential for implementing timeouts and retries circuit breaker and so forth",
    "start": "2108000",
    "end": "2115839"
  },
  {
    "text": "some of those are resiliency patterns that you may have heard about and in conjunction with poly we use a",
    "start": "2115839",
    "end": "2121119"
  },
  {
    "text": "very nice library called simi um which is a fault injection library it uses sort of the same programming",
    "start": "2121119",
    "end": "2126800"
  },
  {
    "text": "interface which means it's nice and easy to use so you can basically use this similar to the broken proxy you can use",
    "start": "2126800",
    "end": "2133359"
  },
  {
    "text": "it to throw errors introduce latency also mock out responses and stuff like",
    "start": "2133359",
    "end": "2138880"
  },
  {
    "text": "that it's quite flexible and then we use uh unleash which is um",
    "start": "2138880",
    "end": "2144960"
  },
  {
    "text": "a feature toggling tool uh and we use it in sort of well you use it for regular feature toggling we also use it in this",
    "start": "2144960",
    "end": "2151200"
  },
  {
    "text": "slightly unconventional sense to turn this noise on and off right",
    "start": "2151200",
    "end": "2156400"
  },
  {
    "text": "so we control basically the faults that we inject with simi using feature toggles right",
    "start": "2156400",
    "end": "2163760"
  },
  {
    "text": "um we do run uh also a pure load test which can be useful sort of to to find",
    "start": "2163760",
    "end": "2170160"
  },
  {
    "text": "the breaking point for your service right so you scale up the load as much as you can",
    "start": "2170160",
    "end": "2176400"
  },
  {
    "text": "and then see when the service starts breaking down right and then you can verify your scalability",
    "start": "2176400",
    "end": "2182720"
  },
  {
    "text": "by sort of okay we're going to scale up now re-run the experiment and see if our breaking point is higher that means our",
    "start": "2182720",
    "end": "2188560"
  },
  {
    "text": "scalability is working as intended now you might wonder about auto scale",
    "start": "2188560",
    "end": "2193839"
  },
  {
    "text": "can't you just set up auto scale and it's going to take care of all this for you well you could and we do use auto scale",
    "start": "2193839",
    "end": "2199520"
  },
  {
    "text": "but you have to validate that that works as intended as well you have to verify that it scales up when it should and",
    "start": "2199520",
    "end": "2205119"
  },
  {
    "text": "that it scales back down right so you have to run these experiments regardless",
    "start": "2205119",
    "end": "2210160"
  },
  {
    "text": "and it's also the case that auto scaling is reactive right so if you have a lot of traffic coming in basically like a",
    "start": "2210160",
    "end": "2216000"
  },
  {
    "text": "tsunami then sort of scaling up is going to be too late right because the traffic already",
    "start": "2216000",
    "end": "2222800"
  },
  {
    "text": "hit you um so it might be okay to verify that you can manually um scale up uh",
    "start": "2222800",
    "end": "2230000"
  },
  {
    "text": "proactively as well right in in front of a big launch or something like that",
    "start": "2230000",
    "end": "2236400"
  },
  {
    "text": "okay so we run load tests with introduced faults in addition to these pure load",
    "start": "2236400",
    "end": "2241920"
  },
  {
    "text": "tests this is now the robust robustness test if you like so we have to simulate",
    "start": "2241920",
    "end": "2246960"
  },
  {
    "text": "failure similar uh to the broken proxy again now if you're going to simulate a failure you're going to have to think a",
    "start": "2246960",
    "end": "2252880"
  },
  {
    "text": "little bit about what is it that can fail",
    "start": "2252880",
    "end": "2257240"
  },
  {
    "text": "and what often fails and causes problems is some kind of dependency from your api right it might be an http call to some",
    "start": "2258560",
    "end": "2265119"
  },
  {
    "text": "other resource or some other service or it might be a database call something like that",
    "start": "2265119",
    "end": "2270880"
  },
  {
    "text": "the problem with failures in these cases is that often also leads to secondary failures right",
    "start": "2270880",
    "end": "2276880"
  },
  {
    "text": "it might actually be more problematic than the primary failures and secondary failures that i'm talking about is that",
    "start": "2276880",
    "end": "2282960"
  },
  {
    "text": "both satp calls and database connections involve things that are",
    "start": "2282960",
    "end": "2288880"
  },
  {
    "text": "limited resources on the runtime environment right so if you have now some latency it",
    "start": "2288880",
    "end": "2295520"
  },
  {
    "text": "means that um these resources are being",
    "start": "2295520",
    "end": "2300720"
  },
  {
    "text": "used longer than they should they're not being freed in a timely manner and that means when",
    "start": "2300720",
    "end": "2306400"
  },
  {
    "text": "you're having new requests those there are going to be no resources left for them and those are going to fail as well",
    "start": "2306400",
    "end": "2312000"
  },
  {
    "text": "so it's important to think about not only what can fail but also how long does it take to fail and i think the",
    "start": "2312000",
    "end": "2318560"
  },
  {
    "text": "assumption that we all often use or or make is that failure is just as fast as success",
    "start": "2318560",
    "end": "2326160"
  },
  {
    "text": "and unfortunately in reality failure is often much much slower than success right because often it's going to be",
    "start": "2326160",
    "end": "2332960"
  },
  {
    "text": "some sort of delay or timeout that's going to occur and then the error hits you",
    "start": "2332960",
    "end": "2338480"
  },
  {
    "text": "okay so if you have failures what are some strategies and remedies we can put in place what should we do about the failures",
    "start": "2338480",
    "end": "2344800"
  },
  {
    "text": "and then we have these reliability patterns and we use poly to implement some of those that's going to be time",
    "start": "2344800",
    "end": "2350079"
  },
  {
    "text": "out you can put some a cap on the time you are going to willing to be waiting uh to get a resource or you might",
    "start": "2350079",
    "end": "2357520"
  },
  {
    "text": "set up a retry perhaps with some exponential back off right so maybe wait for 100 milliseconds then for half a",
    "start": "2357520",
    "end": "2363680"
  },
  {
    "text": "second and for a second or something like that but implementing a retry basically means",
    "start": "2363680",
    "end": "2368800"
  },
  {
    "text": "that you're betting that this error is actually a transient error it's not necessarily the case it might be that you're just sort of badgering a service",
    "start": "2368800",
    "end": "2376000"
  },
  {
    "text": "that's having some problems and if your service is having a problem maybe you want to put into place a",
    "start": "2376000",
    "end": "2381280"
  },
  {
    "text": "circuit breaker which means that okay i'm going to stop bothering this service for a while and then try again",
    "start": "2381280",
    "end": "2387359"
  },
  {
    "text": "at some later point in time to sort of give the server a chance to get back up",
    "start": "2387359",
    "end": "2393119"
  },
  {
    "text": "okay so those are some patterns but um if you're going to choose between some of these patterns we're going to have to",
    "start": "2393520",
    "end": "2399599"
  },
  {
    "text": "ask some more questions and a sort of a fundamental question if you have a dependency is do we really",
    "start": "2399599",
    "end": "2405440"
  },
  {
    "text": "need the result can we make without the dependency at all can we avoid making the call",
    "start": "2405440",
    "end": "2411839"
  },
  {
    "text": "you have to consider how badly do we need it probably you need it a little bit otherwise it wouldn't be there at all",
    "start": "2411839",
    "end": "2417280"
  },
  {
    "text": "um but in a sense for us the only result that we really need is this",
    "start": "2417280",
    "end": "2424720"
  },
  {
    "text": "media manifest link right to the place at the contact delivery network where",
    "start": "2424720",
    "end": "2430079"
  },
  {
    "text": "you can start streaming data everything else is sort of optional i mean we want to have pretty pictures we want to have",
    "start": "2430079",
    "end": "2435440"
  },
  {
    "text": "nice titles we want to have episode descriptions and so forth but in the end the end user is not",
    "start": "2435440",
    "end": "2441040"
  },
  {
    "text": "really going to care that much as long as they can press play and watch the content right",
    "start": "2441040",
    "end": "2446400"
  },
  {
    "text": "and that's then going to matter a lot uh for the strategies that we're going to choose",
    "start": "2446400",
    "end": "2452720"
  },
  {
    "text": "so if you don't really need it like absolutely completely we might do well with the default value and then",
    "start": "2452720",
    "end": "2459040"
  },
  {
    "text": "you can set a short timeout so you can satisfy actually quite strict response time as a low",
    "start": "2459040",
    "end": "2465599"
  },
  {
    "text": "or you might be able to use the cash value right that way you avoid making a bunch of calls",
    "start": "2465599",
    "end": "2470640"
  },
  {
    "text": "and you free up resources and can protect against errors as well",
    "start": "2470640",
    "end": "2476000"
  },
  {
    "text": "so i'd like to talk a little bit about caching i mean i'm sure a lot of you do use caching in some way but it's also um",
    "start": "2476000",
    "end": "2482640"
  },
  {
    "text": "such an important technique i have to talk a little bit about it and in particular i want to sort of talk",
    "start": "2482640",
    "end": "2487680"
  },
  {
    "text": "about the virtues of a good old-fashioned http cache right so it's basically in my mind caching for",
    "start": "2487680",
    "end": "2494319"
  },
  {
    "text": "free you can just take your existing api slap an http proxy in front of it basically any proxy is going to do",
    "start": "2494319",
    "end": "2502640"
  },
  {
    "text": "and it takes out a lot of load right it protects against a lot of failures",
    "start": "2502800",
    "end": "2509599"
  },
  {
    "text": "and your api doesn't even have to be aware that it's there right only thing your api is going to have to do is to",
    "start": "2509599",
    "end": "2515680"
  },
  {
    "text": "set a cache duration header and then everything else works",
    "start": "2515680",
    "end": "2521440"
  },
  {
    "text": "like magic so that's almost like this sort of resiliency magic pixie dust",
    "start": "2521440",
    "end": "2527119"
  },
  {
    "text": "and it's also worth thinking about how can you design",
    "start": "2527119",
    "end": "2532880"
  },
  {
    "text": "your responses or your data so that it supports cachability to the greatest possible extent",
    "start": "2532880",
    "end": "2539680"
  },
  {
    "text": "i'm going to mention a particular instance there's something that we call a works board's time",
    "start": "2539680",
    "end": "2545599"
  },
  {
    "text": "expansion algorithm that's named for one of my previous co-workers",
    "start": "2545599",
    "end": "2551119"
  },
  {
    "text": "he was sort of an advocate for this approach and it's not really an algorithm is it sort of jokey kind of name it's more like",
    "start": "2551119",
    "end": "2557440"
  },
  {
    "text": "maybe you can call it time independence principle the thing is that we have some values in",
    "start": "2557440",
    "end": "2562800"
  },
  {
    "text": "our api that are time dependent in particular we have time dependent titles",
    "start": "2562800",
    "end": "2568240"
  },
  {
    "text": "now i'm going to try uh once more now you can see this now this was docservin this is the daily news",
    "start": "2568240",
    "end": "2574079"
  },
  {
    "text": "and if you see up there let's see if i can point at it it says",
    "start": "2574079",
    "end": "2579280"
  },
  {
    "text": "okay edog which means today and then yesterday's news says igor",
    "start": "2579280",
    "end": "2585359"
  },
  {
    "text": "which means again yesterday but then it falls back to unstuck which is wednesday",
    "start": "2585359",
    "end": "2592960"
  },
  {
    "text": "and so on and so forth and i think you probably can't see it but then a few days later",
    "start": "2592960",
    "end": "2599200"
  },
  {
    "text": "it switches to showing now the date right the purpose is to",
    "start": "2599200",
    "end": "2605520"
  },
  {
    "text": "make it easy for the end user to choose what they want so typically if it's one of the reasons",
    "start": "2605520",
    "end": "2611760"
  },
  {
    "text": "news they want to know if it's today's news or yesterday's news but then later on it's probably oh i want to see the",
    "start": "2611760",
    "end": "2617440"
  },
  {
    "text": "news from the 20th of november right because something particular happened on that day",
    "start": "2617440",
    "end": "2622560"
  },
  {
    "text": "um so in this scenario let's just go back",
    "start": "2622560",
    "end": "2627839"
  },
  {
    "text": "here yes so we have these time dependent titles for news episodes",
    "start": "2627839",
    "end": "2634720"
  },
  {
    "text": "how often should the client refresh to see if if one of those changes appeared basically it happens at midnight every",
    "start": "2634720",
    "end": "2640960"
  },
  {
    "text": "day right then suddenly it switches from today to yesterday",
    "start": "2640960",
    "end": "2646319"
  },
  {
    "text": "how often should we refresh and how should we catch it and what board's principle says is this is stupid",
    "start": "2646319",
    "end": "2652480"
  },
  {
    "text": "this is completely stupid because once uh first of all titles change very rarely the title logic basically never",
    "start": "2652480",
    "end": "2659520"
  },
  {
    "text": "changes and then only at midnight do the titles change right and it's also",
    "start": "2659520",
    "end": "2664880"
  },
  {
    "text": "completely deterministic right we know exactly what titles should be um what the title should be at any given",
    "start": "2664880",
    "end": "2671520"
  },
  {
    "text": "point in time so we can just generate a table right that means we're going to generate",
    "start": "2671520",
    "end": "2677200"
  },
  {
    "text": "these titles so basically we're going to say that okay today",
    "start": "2677200",
    "end": "2682319"
  },
  {
    "text": "the title is going to be it tomorrow it's going to be yesterday and then for a few days it's going to be",
    "start": "2682319",
    "end": "2688839"
  },
  {
    "text": "friday and then if it falls out that you're going to default to the actual date",
    "start": "2688839",
    "end": "2694319"
  },
  {
    "text": "and this is a little more data than sending the title but at the same time you sort of freed yourself completely",
    "start": "2694319",
    "end": "2699359"
  },
  {
    "text": "and the client is going to know the the time anyways you can just choose the right title",
    "start": "2699359",
    "end": "2704640"
  },
  {
    "text": "the idea then is that these time dependent titles no longer have any",
    "start": "2704640",
    "end": "2709920"
  },
  {
    "text": "meaningful influence on cachability might be that you still want to refresh them every so often",
    "start": "2709920",
    "end": "2715280"
  },
  {
    "text": "but that's not going to be due to this time dependent titles so i just wanted to mention that as a",
    "start": "2715280",
    "end": "2720640"
  },
  {
    "text": "concrete example of how you might want to design to improve cache ability",
    "start": "2720640",
    "end": "2726240"
  },
  {
    "text": "okay so if you have that a failure what are you going to do we've seen that we can employ timeouts and retries and it",
    "start": "2726240",
    "end": "2732079"
  },
  {
    "text": "seems we've also seen that what we should do",
    "start": "2732079",
    "end": "2738480"
  },
  {
    "text": "depends on the problem we're solving and depends on how how badly we need the value in",
    "start": "2738960",
    "end": "2744880"
  },
  {
    "text": "the first place so basically if you're going to choose a resiliency strategy that means you have some sort of",
    "start": "2744880",
    "end": "2751119"
  },
  {
    "text": "hypothesis of what errors are going to occur and what might help to fix those errors right",
    "start": "2751119",
    "end": "2757680"
  },
  {
    "text": "and then what you want to do is run some experiment to validate that your assumption is correct",
    "start": "2757680",
    "end": "2763839"
  },
  {
    "text": "so i want to show you a concrete case this is again this",
    "start": "2763839",
    "end": "2769359"
  },
  {
    "text": "linear channel playback api that we looked at we looked at the slo for that",
    "start": "2769359",
    "end": "2775359"
  },
  {
    "text": "and first of all why is this why is this api important well we know it's important because it's",
    "start": "2775359",
    "end": "2781440"
  },
  {
    "text": "part of the playback api and that's one of those red services right and it's also particularly",
    "start": "2781440",
    "end": "2788640"
  },
  {
    "text": "important because as a public broadcaster",
    "start": "2788640",
    "end": "2795680"
  },
  {
    "text": "we also have an obligation to be able to reach the norwegian public",
    "start": "2795680",
    "end": "2800960"
  },
  {
    "text": "with crucial information in times of crisis for instance if this prime minister calls a press conference to",
    "start": "2800960",
    "end": "2807839"
  },
  {
    "text": "tell about the new covet restrictions then the public must be able to go to",
    "start": "2807839",
    "end": "2813839"
  },
  {
    "text": "our service and watch that press conference right so this is sort of",
    "start": "2813839",
    "end": "2819520"
  },
  {
    "text": "an obligation that our service has",
    "start": "2819520",
    "end": "2823520"
  },
  {
    "text": "and well how do we do this how do we verify that we can sort of",
    "start": "2825200",
    "end": "2830800"
  },
  {
    "text": "meet um our slo for this important service well we use this load test with the injector",
    "start": "2830800",
    "end": "2837280"
  },
  {
    "text": "failures so we're going to inject failure now with simi i'm just going to show you",
    "start": "2837280",
    "end": "2842400"
  },
  {
    "text": "real quick what that is going to look like let's see if i can",
    "start": "2842400",
    "end": "2848160"
  },
  {
    "text": "i'm going to have to find my pointer where's my pointer here's my pointer",
    "start": "2849760",
    "end": "2855599"
  },
  {
    "text": "okay so visual studio i'm sure you're all familiar",
    "start": "2855599",
    "end": "2861200"
  },
  {
    "text": "this is is it is it possible to read it not really is it a little bit small",
    "start": "2861200",
    "end": "2867599"
  },
  {
    "text": "is it okay you can see it let's see",
    "start": "2867599",
    "end": "2874319"
  },
  {
    "text": "okay like this um okay so what we do actually is we",
    "start": "2878800",
    "end": "2884880"
  },
  {
    "text": "this is now our uh semi chaos channels blob policy provider",
    "start": "2884880",
    "end": "2891280"
  },
  {
    "text": "descriptive name i hope um and what we do is we fetch a policy for latency and for faults",
    "start": "2891280",
    "end": "2900440"
  },
  {
    "text": "and yeah you can see here depending on that uh policy we're gonna",
    "start": "2900559",
    "end": "2907440"
  },
  {
    "text": "check okay is default config enabled and if it is we're gonna use the specified injection rate and then we're going to",
    "start": "2907440",
    "end": "2913920"
  },
  {
    "text": "throw what's known as a three-headed monkey exception which is one of these which chooses an insult at random these",
    "start": "2913920",
    "end": "2921599"
  },
  {
    "text": "are taking from the monkey island game and the one thing that's nice about having these insults is that you see",
    "start": "2921599",
    "end": "2928400"
  },
  {
    "text": "them very clearly in the log right so you can see okay these these are some of the things that that we injected",
    "start": "2928400",
    "end": "2935040"
  },
  {
    "text": "and okay so that's the fault config then we have",
    "start": "2935040",
    "end": "2941280"
  },
  {
    "text": "a latency config as well and if you look at that we can take a look at the default config",
    "start": "2941280",
    "end": "2946960"
  },
  {
    "text": "what we're actually doing is that we're using these unleash toggles right so if it says that",
    "start": "2946960",
    "end": "2952559"
  },
  {
    "text": "okay if this feature toggle here uh inject fault always is enabled then you're going to",
    "start": "2952559",
    "end": "2958079"
  },
  {
    "text": "have okay enabled fault injection rate one injection rate of one which means always",
    "start": "2958079",
    "end": "2963839"
  },
  {
    "text": "right and then we have uh injection rates of 90 50",
    "start": "2963839",
    "end": "2970880"
  },
  {
    "text": "and 20 and even 5 and then disabled so we have sort of",
    "start": "2970880",
    "end": "2976319"
  },
  {
    "text": "something to play with there and say similarly for for latency for latency we can control both the injection rate and",
    "start": "2976319",
    "end": "2982640"
  },
  {
    "text": "the length of the latency right so anything from a few seconds to a minute",
    "start": "2982640",
    "end": "2987680"
  },
  {
    "text": "so that was injecting faults with simi",
    "start": "2987680",
    "end": "2993520"
  },
  {
    "text": "and we use then unleash to control that so it might look something like this here we have some of",
    "start": "2993680",
    "end": "3000160"
  },
  {
    "text": "these toggles here we've chosen uh what's not a terrible rate i guess we should specify",
    "start": "3000160",
    "end": "3005280"
  },
  {
    "text": "the percentage there i think terrible is 90 percent um [Music]",
    "start": "3005280",
    "end": "3010559"
  },
  {
    "text": "okay so at a very high level um this api the task of this api is quite",
    "start": "3010559",
    "end": "3016480"
  },
  {
    "text": "simple because okay it's the linear channels um that's some sort of metadata about sort",
    "start": "3016480",
    "end": "3022720"
  },
  {
    "text": "of the names and uh the streaming url for each of our channels",
    "start": "3022720",
    "end": "3028240"
  },
  {
    "text": "that changes quite rarely so we have uh the specification for that in a blob",
    "start": "3028240",
    "end": "3033359"
  },
  {
    "text": "and that blob can be updated sort of out of bands by another process right because changes can happen sometimes",
    "start": "3033359",
    "end": "3039599"
  },
  {
    "text": "channels do change names uh when counties change names somewhere our local channels are going to change and",
    "start": "3039599",
    "end": "3045040"
  },
  {
    "text": "then we sort of want to reflect these updates um",
    "start": "3045040",
    "end": "3050960"
  },
  {
    "text": "so our original design when we started working on this was something like this and this is what i like to think of is",
    "start": "3050960",
    "end": "3056400"
  },
  {
    "text": "sort of like a straightforward best effort attempt right so you put um",
    "start": "3056400",
    "end": "3062720"
  },
  {
    "text": "basically what the api is going to do is going to make an http call to the blob and when it gets a response it's going",
    "start": "3062720",
    "end": "3068079"
  },
  {
    "text": "to put it in the cache and we cache it for i think five minutes or something like that not",
    "start": "3068079",
    "end": "3073200"
  },
  {
    "text": "very long but still long enough to basically handle most traffic",
    "start": "3073200",
    "end": "3079280"
  },
  {
    "text": "but of course there's something a little bit subtle going on because okay what's going to happen when the cash expires",
    "start": "3079280",
    "end": "3085520"
  },
  {
    "text": "right so we have a bunch of requests coming in uh the cash item just expired",
    "start": "3085520",
    "end": "3091839"
  },
  {
    "text": "that means that we're going to have to go fetch that uh blob that's going to take a little while maybe take like 50",
    "start": "3091839",
    "end": "3098640"
  },
  {
    "text": "milliseconds or something like that in that time a lot of uh requests are going to get a",
    "start": "3098640",
    "end": "3104000"
  },
  {
    "text": "cash miss and all of those are going to fetch that blob right um it doesn't really matter that much i",
    "start": "3104000",
    "end": "3111200"
  },
  {
    "text": "mean the blob can probably handle the extra traffic but it's it's interesting to know that that's what's going to",
    "start": "3111200",
    "end": "3116640"
  },
  {
    "text": "happen maybe you get a couple of hundred cash misses and a couple hundred simultaneous http requests",
    "start": "3116640",
    "end": "3123680"
  },
  {
    "text": "and then what's going to happen all of those are going to put that into the cache and the last one is going to win and then we catch it for five minutes and",
    "start": "3123680",
    "end": "3130079"
  },
  {
    "text": "then the process repeats um okay so then we ran this experiment",
    "start": "3130079",
    "end": "3135839"
  },
  {
    "text": "and it was a harsh experiment so basically what we did was said we're",
    "start": "3135839",
    "end": "3141200"
  },
  {
    "text": "gonna inject fail uh failures for always uh we're gonna have latency always and",
    "start": "3141200",
    "end": "3147680"
  },
  {
    "text": "that latency is gonna last for a minute which is sort of a brutal test to put",
    "start": "3147680",
    "end": "3152720"
  },
  {
    "text": "the api through so it what happened was this so we had this sort of like um",
    "start": "3152720",
    "end": "3158880"
  },
  {
    "text": "background load and then at this point we let the chaos monkeys lose so now every call is going",
    "start": "3158880",
    "end": "3165440"
  },
  {
    "text": "to take 60 seconds and then fail and you might wonder okay why did the traffic drop so much so this is k-6 generating",
    "start": "3165440",
    "end": "3172079"
  },
  {
    "text": "this traffic uh basically it means that um all the clients have to wait 60 seconds before trying again so that",
    "start": "3172079",
    "end": "3178640"
  },
  {
    "text": "takes us from 1 000 to about 15 or 20 requests right because a",
    "start": "3178640",
    "end": "3183839"
  },
  {
    "text": "thousand divided by 60. makes it drop at this point everything is horrible",
    "start": "3183839",
    "end": "3189839"
  },
  {
    "text": "actually it's worth noting that this happens i i misplaced that it happens five",
    "start": "3189839",
    "end": "3195440"
  },
  {
    "text": "minutes before right because for five minutes we had the cash protecting us but then we had problems",
    "start": "3195440",
    "end": "3202480"
  },
  {
    "text": "and then we decided to increase the load from k6 what happens then well more problems",
    "start": "3202480",
    "end": "3207680"
  },
  {
    "text": "produced everything is even worse and we increase the load even some more",
    "start": "3207680",
    "end": "3214160"
  },
  {
    "text": "but then something interesting happens we we decided to okay let's see let's",
    "start": "3214160",
    "end": "3219200"
  },
  {
    "text": "make 10 percent of the requests succeed and that point actually the cash saves us right because",
    "start": "3219200",
    "end": "3225280"
  },
  {
    "text": "one of those um successful calls we're gonna put something in the cash and then everything everyone is gonna get served",
    "start": "3225280",
    "end": "3232880"
  },
  {
    "text": "that result so that's good but still it's not it's not great",
    "start": "3232880",
    "end": "3238960"
  },
  {
    "text": "so how can we improve this design so there are various ways you can improve",
    "start": "3238960",
    "end": "3244079"
  },
  {
    "text": "this so you have sort of a naive caching approach what we ended up with was running a hosted service as sort of like",
    "start": "3244079",
    "end": "3251520"
  },
  {
    "text": "a regular job inside of our asp.net core application",
    "start": "3251520",
    "end": "3256800"
  },
  {
    "text": "this is going to now trigger every five minutes and go fetch that blob",
    "start": "3256800",
    "end": "3262079"
  },
  {
    "text": "and update just a regular object reference for the data the api just checks that",
    "start": "3262079",
    "end": "3268880"
  },
  {
    "text": "and that's all it does so basically no client is now on that sort of hot",
    "start": "3268880",
    "end": "3275040"
  },
  {
    "text": "path that involves fetching this blob now uh",
    "start": "3275040",
    "end": "3281440"
  },
  {
    "text": "yes you might wonder then what's going to happen if i restart the service",
    "start": "3281520",
    "end": "3287520"
  },
  {
    "text": "and this thing is broken right because then it means that server is never going to be able to read the",
    "start": "3287520",
    "end": "3292880"
  },
  {
    "text": "blob so for that we actually hard coded the data for our primary channels inside the",
    "start": "3292880",
    "end": "3299040"
  },
  {
    "text": "api as well so we have something to work on even if the blob is for some reason completely unavailable we will be able",
    "start": "3299040",
    "end": "3306480"
  },
  {
    "text": "to restart or redeploy our application even if that's the case",
    "start": "3306480",
    "end": "3313680"
  },
  {
    "text": "so this is an experiment i ran on the service a few days ago",
    "start": "3313680",
    "end": "3319119"
  },
  {
    "text": "trying to reproduce uh the same scenario approximately so at this point i turned on the chaos monkeys",
    "start": "3319119",
    "end": "3325760"
  },
  {
    "text": "as you can see not much happened right so at this point um all the calls to fetch or update this",
    "start": "3325760",
    "end": "3334880"
  },
  {
    "text": "the result from this blob are going to fail but it doesn't matter to any of the requests but in this interval i cranked up the",
    "start": "3334880",
    "end": "3342240"
  },
  {
    "text": "volume over k6 that means we're producing successful requests at a larger rate but nothing much else",
    "start": "3342240",
    "end": "3348480"
  },
  {
    "text": "happens and then sort of the case monkeys just give up i turn it off and it means that the",
    "start": "3348480",
    "end": "3354880"
  },
  {
    "text": "experiment now has validated that this is actually this is actually working as intended so the idea is to make these",
    "start": "3354880",
    "end": "3361839"
  },
  {
    "text": "injected folds completely irrelevant to the calls or to processing the requests",
    "start": "3361839",
    "end": "3368799"
  },
  {
    "text": "so the only consequence really is that any changes to the blob of course will not be visible in the service that's the",
    "start": "3368799",
    "end": "3375440"
  },
  {
    "text": "only that's the only impact it has so is this now a robust design",
    "start": "3375440",
    "end": "3382240"
  },
  {
    "text": "that's a trick question isn't it because robustness isn't a boolean right that's what we talked about but it is very",
    "start": "3383280",
    "end": "3389440"
  },
  {
    "text": "robust against sort of problems with downloading that blob it's not",
    "start": "3389440",
    "end": "3395119"
  },
  {
    "text": "completely robust against azure going down at least not two data centers of azure going down at the same time",
    "start": "3395119",
    "end": "3400960"
  },
  {
    "text": "um should it be robust against azure going down",
    "start": "3400960",
    "end": "3406160"
  },
  {
    "text": "it depends right depends on are we meeting our slos even though we can't factor in that azure can actually go",
    "start": "3406160",
    "end": "3412480"
  },
  {
    "text": "down that's going to depend now on how well azure performs isn't it",
    "start": "3412480",
    "end": "3420240"
  },
  {
    "text": "okay so this case uh study is a simple scenario other we started with it because it was kind of simple um to",
    "start": "3420240",
    "end": "3427440"
  },
  {
    "text": "verify it was not that hard to find a good solution other scenarios might be much harder and in particular if you're",
    "start": "3427440",
    "end": "3433839"
  },
  {
    "text": "dealing with rights it's probably going to be much harder and the trade-offs are going to have to make",
    "start": "3433839",
    "end": "3439200"
  },
  {
    "text": "are going to be much more painful right and you might have to run",
    "start": "3439200",
    "end": "3444960"
  },
  {
    "text": "more different kinds of experiments right and perhaps a varied set of experiments to verify that you have okay",
    "start": "3444960",
    "end": "3451599"
  },
  {
    "text": "we're happy with this solution now the result is only going to be as good as the experiments because",
    "start": "3451599",
    "end": "3457280"
  },
  {
    "text": "my experience has been even very simple resiliency mechanisms they never work on the first attempt right you're going to",
    "start": "3457280",
    "end": "3463520"
  },
  {
    "text": "put something in place you think it's going to work and it's going to look good and then you can find oh it doesn't really address the problem right",
    "start": "3463520",
    "end": "3470000"
  },
  {
    "text": "something is it looks good in the code but it doesn't actually work so you have to verify that",
    "start": "3470000",
    "end": "3475440"
  },
  {
    "text": "um there's uh kind of a fun thing um",
    "start": "3475440",
    "end": "3480480"
  },
  {
    "text": "there's one of the product owners that asked one of our testers a crucial question is is this going to work on",
    "start": "3480480",
    "end": "3486480"
  },
  {
    "text": "saturday right and his response was i haven't been able to make it fail",
    "start": "3486480",
    "end": "3491599"
  },
  {
    "text": "right because he was running a lot of experiments trying to make it fail and they weren't successful and that means",
    "start": "3491599",
    "end": "3497520"
  },
  {
    "text": "that okay presumably it's going to work on saturday okay so to summarize then um",
    "start": "3497520",
    "end": "3504160"
  },
  {
    "text": "we want reliability engineering that requires some sort of feedback to guide our decisions uh the right mechanisms to",
    "start": "3504160",
    "end": "3510000"
  },
  {
    "text": "use are going to be context dependent is going to depend on the the problem you're trying to solve",
    "start": "3510000",
    "end": "3515760"
  },
  {
    "text": "is it good if you can exploit your concrete context to find good solutions if you have a lot of reads you're lucky",
    "start": "3515760",
    "end": "3522480"
  },
  {
    "text": "you should always validate whatever mechanisms you whatever mechanisms you put in place you need to run experiments",
    "start": "3524559",
    "end": "3530400"
  },
  {
    "text": "listen to the feedback and then finally i'm just going to say that earlier this week there's a",
    "start": "3530400",
    "end": "3536000"
  },
  {
    "text": "workshop by bionicle bertness and roger martinson that delves much more into sort of the",
    "start": "3536000",
    "end": "3542559"
  },
  {
    "text": "technical aspects of doing this and how you can use your tools to cover a wide",
    "start": "3542559",
    "end": "3547839"
  },
  {
    "text": "variety of scenarios of course it's a little bit late to sign up for that workshop now hopefully they're going to",
    "start": "3547839",
    "end": "3554079"
  },
  {
    "text": "run it again i recommend checking it out in the meantime you can check out bionic repo which",
    "start": "3554079",
    "end": "3561520"
  },
  {
    "text": "has some of the same which has sort of a setup with some of the same things that we've been talking about about introducing faults running",
    "start": "3561520",
    "end": "3569280"
  },
  {
    "text": "k6 using simi using poly to implement resiliency features",
    "start": "3569280",
    "end": "3576240"
  },
  {
    "text": "and so on and so forth so i recommend checking that out and with that i think i'm done",
    "start": "3576240",
    "end": "3583119"
  },
  {
    "text": "thank you",
    "start": "3583119",
    "end": "3586359"
  },
  {
    "text": "you",
    "start": "3599839",
    "end": "3601920"
  }
]