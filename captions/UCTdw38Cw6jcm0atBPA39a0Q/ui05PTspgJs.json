[
  {
    "text": "okay I think we're right on time I hope we can deal with music on",
    "start": "3679",
    "end": "10679"
  },
  {
    "text": "the background too so um I hope you like it uh good morning and welcome my name",
    "start": "10679",
    "end": "16600"
  },
  {
    "text": "is Arena I'm from Romania and I'm a software architect at particular software we're doing a very cool tool",
    "start": "16600",
    "end": "22600"
  },
  {
    "text": "named and service B that deals with messaging uh I also blog from time to time and recently I've been doing things",
    "start": "22600",
    "end": "30560"
  },
  {
    "text": "around um grpc uh and API I'm very passionate",
    "start": "30560",
    "end": "35879"
  },
  {
    "text": "about apis and in the API section there's also grpc so uh I have to make a",
    "start": "35879",
    "end": "42800"
  },
  {
    "text": "confession at the first time in the morning uh that I love monoliths and as",
    "start": "42800",
    "end": "48399"
  },
  {
    "text": "you think you already noticed uh history tends to repeat itself now the",
    "start": "48399",
    "end": "54640"
  },
  {
    "text": "mainstream things around software architecture is called modular monoliths we all were like hyped about",
    "start": "54640",
    "end": "62039"
  },
  {
    "text": "uh microservices Nano Services afterwards and now we're bringing the monolith back so basically we take our",
    "start": "62039",
    "end": "69159"
  },
  {
    "text": "microservices and we're trying to stitch them back together but in a more",
    "start": "69159",
    "end": "75040"
  },
  {
    "text": "granular way so the deal with monoliths is that the life is easy for developers",
    "start": "75040",
    "end": "80799"
  },
  {
    "text": "but not so easy for the business owners in terms of their hard to",
    "start": "80799",
    "end": "86079"
  },
  {
    "text": "scale they can be skilled but at the higher cost than a microservice for",
    "start": "86079",
    "end": "92000"
  },
  {
    "text": "example um and it's a bad user experience for example if you have parts",
    "start": "92000",
    "end": "98159"
  },
  {
    "text": "of your system that are very used let's say you have an online shop and is Black",
    "start": "98159",
    "end": "103320"
  },
  {
    "text": "Friday if you have a monolit you would have to scale the whole chunk if you",
    "start": "103320",
    "end": "109000"
  },
  {
    "text": "have microservices you would have to scale only those parts that are needed maybe not the loging login module but",
    "start": "109000",
    "end": "116560"
  },
  {
    "text": "only the ordering management section Okay so that's where I come from but I",
    "start": "116560",
    "end": "122039"
  },
  {
    "text": "really loved working with monoliths because back in the days when I started and the monoliths were the the thing um",
    "start": "122039",
    "end": "130640"
  },
  {
    "text": "the machines weren't that uh that nice so when we built an NA we could have got",
    "start": "130640",
    "end": "135879"
  },
  {
    "text": "the coffee and we relaxed for a bit until the build was finished and so",
    "start": "135879",
    "end": "140920"
  },
  {
    "text": "on pretty much all the architecture look like this um I come from a net space so",
    "start": "140920",
    "end": "147560"
  },
  {
    "text": "I always did back end in front end for stack development and I remember a time",
    "start": "147560",
    "end": "152800"
  },
  {
    "text": "when web forms was a thing then MVC uh and we had front end that was uh",
    "start": "152800",
    "end": "158640"
  },
  {
    "text": "rendered from the server side okay so architecture pretty much look like this",
    "start": "158640",
    "end": "164239"
  },
  {
    "text": "and then we realized that it's better just to have front-end apps written in whatever JS and backends that have a",
    "start": "164239",
    "end": "172640"
  },
  {
    "text": "database or several datab bases after that we realized that the future is distributed and now our architecture",
    "start": "172640",
    "end": "181040"
  },
  {
    "text": "is more backend for front ends okay so we have several apis that have their own",
    "start": "181040",
    "end": "186840"
  },
  {
    "text": "databases that maybe communicate with other back ends so we don't know exactly",
    "start": "186840",
    "end": "192280"
  },
  {
    "text": "what's behind the scenes so in bigger sof our systems we might end having",
    "start": "192280",
    "end": "198080"
  },
  {
    "text": "different technologies that need to get data from one another and when you first",
    "start": "198080",
    "end": "203400"
  },
  {
    "text": "start to have microservices um you're doing this rest",
    "start": "203400",
    "end": "210959"
  },
  {
    "text": "apis and I'm going to ask you who here developed the rest API",
    "start": "210959",
    "end": "216360"
  },
  {
    "text": "ever okay most of us right who here ever respected all the six guidelines that",
    "start": "216360",
    "end": "222959"
  },
  {
    "text": "Roy Fielding introduced uh hands up I'm going to put",
    "start": "222959",
    "end": "228400"
  },
  {
    "text": "my hands down never so actually what we're doing is serve Jason over HTTP",
    "start": "228400",
    "end": "234959"
  },
  {
    "text": "leveraging only those constraints that Roy Fielding talked about that we",
    "start": "234959",
    "end": "240079"
  },
  {
    "text": "thought they're convenient to us right so rest is like a concept that described",
    "start": "240079",
    "end": "246959"
  },
  {
    "text": "an API that responds with Json or XML or um by streams but pretty much uh",
    "start": "246959",
    "end": "255239"
  },
  {
    "text": "that's it we do not have that section that makes the response a aite state",
    "start": "255239",
    "end": "260320"
  },
  {
    "text": "machine maybe we don't use different media types to serve different representations of",
    "start": "260320",
    "end": "265960"
  },
  {
    "text": "resources so what's wrong with rest we all do that we all Implement API in in",
    "start": "265960",
    "end": "273320"
  },
  {
    "text": "form or another whether we're calling them microservices but we all have endpoints that serve data to some front",
    "start": "273320",
    "end": "279479"
  },
  {
    "text": "ends or some other backend apps so um is nothing wrong with rest itself as we",
    "start": "279479",
    "end": "286080"
  },
  {
    "text": "chose to implement it but there are other Technologies out there and remote",
    "start": "286080",
    "end": "291199"
  },
  {
    "text": "procedure calls are uh one of them so what is an RPC as a general concept RPC",
    "start": "291199",
    "end": "299479"
  },
  {
    "text": "uh um is here in the code basically an RPC concept will make the system behave",
    "start": "299479",
    "end": "307479"
  },
  {
    "text": "as is a distributed system behave as is a monolith the look and feel for us as",
    "start": "307479",
    "end": "312759"
  },
  {
    "text": "developers is like everything is self-contained as it were in monoliths so if we look here uh there's nothing",
    "start": "312759",
    "end": "319680"
  },
  {
    "text": "very fancy we create an order by passing in a request and we try to process the",
    "start": "319680",
    "end": "324919"
  },
  {
    "text": "order and if the order is successful we arrange the shipping for it",
    "start": "324919",
    "end": "330600"
  },
  {
    "text": "clean understandable uh how many Network calls are behind the",
    "start": "330600",
    "end": "336440"
  },
  {
    "text": "scenes approximate three okay if you really",
    "start": "336440",
    "end": "341759"
  },
  {
    "text": "think about that but if you're looking for the from the developer perspective like from coding uh it's like pure",
    "start": "341759",
    "end": "348680"
  },
  {
    "text": "calling methods you're not calling endpoints to get data you're not making requests but you're calling different",
    "start": "348680",
    "end": "355520"
  },
  {
    "text": "methods so this was the RPC idea well will make the system that is distributed",
    "start": "355520",
    "end": "361400"
  },
  {
    "text": "behave like is a monolith and this concept has been around since the 70s or so so long time so as you already said",
    "start": "361400",
    "end": "370680"
  },
  {
    "text": "is a network involved whenever we're calling a different um different method",
    "start": "370680",
    "end": "375720"
  },
  {
    "text": "so it has this Callum methal looking feel and it's prown to errors because",
    "start": "375720",
    "end": "381199"
  },
  {
    "text": "well the latency is never zero although we code does it is",
    "start": "381199",
    "end": "387280"
  },
  {
    "text": "zero so network communication is transparent in these kind of things but we're here to talk about grpc not RPC as",
    "start": "387280",
    "end": "394520"
  },
  {
    "text": "a concept right so people thought that what if we could make that distributed",
    "start": "394520",
    "end": "399599"
  },
  {
    "text": "system behave like a monolith because life is easier for us when we code we code faster so grpc started in 2001 um",
    "start": "399599",
    "end": "409680"
  },
  {
    "text": "then it uh it has been open source in 20055 and then fast forwarding a few",
    "start": "409680",
    "end": "416280"
  },
  {
    "text": "years uh we got it in net around 2009 19 and I have to tell you that the",
    "start": "416280",
    "end": "422440"
  },
  {
    "text": "tooling was not that good to be just politically correct and not use other terms the tooling basically wasn't there",
    "start": "422440",
    "end": "429639"
  },
  {
    "text": "in 2019 and if you wanted to work with grpc well you had to improvise or to",
    "start": "429639",
    "end": "435800"
  },
  {
    "text": "accept that uh the technology is not yet stable we got it in net then but other",
    "start": "435800",
    "end": "442199"
  },
  {
    "text": "uh Technologies like uh go had it before and no G has the same so grpc is",
    "start": "442199",
    "end": "448759"
  },
  {
    "text": "contract based we will have to define a contract uh that exposes types and",
    "start": "448759",
    "end": "453879"
  },
  {
    "text": "operations in a language uh that is uh neither C nor Java nor nothing it's",
    "start": "453879",
    "end": "460479"
  },
  {
    "text": "called protocol buffers so when we do grpc in.net we will have no more code references so we won't have the right",
    "start": "460479",
    "end": "467720"
  },
  {
    "text": "click at code reference reference client library or a library inside our solution or so um the only thing that it will be",
    "start": "467720",
    "end": "475680"
  },
  {
    "text": "common betweenin our projects is this file that we will create that defined the the operations that we exposed by",
    "start": "475680",
    "end": "483039"
  },
  {
    "text": "default it uses http2 which it makes it inherently faster and it has an",
    "start": "483039",
    "end": "488680"
  },
  {
    "text": "efficient protuff serialization which gives a smaller payload and from this um",
    "start": "488680",
    "end": "494599"
  },
  {
    "text": "more performance it is available in many languages which will allow us to",
    "start": "494599",
    "end": "499879"
  },
  {
    "text": "communicate for example with a node GS app that has access to our protocol buffers file that defines operations and",
    "start": "499879",
    "end": "507120"
  },
  {
    "text": "it does code generation out of the box as I will show you so uh who here ever",
    "start": "507120",
    "end": "512760"
  },
  {
    "text": "work with soap and seeing a whistle page okay awesome pretty much all of you uh I",
    "start": "512760",
    "end": "519560"
  },
  {
    "text": "can say and maybe it's not correct but this Proto file pretty much to me looks like that wisle file by looking at it",
    "start": "519560",
    "end": "527080"
  },
  {
    "text": "you'll see what operations are exposed so if we look at a traditional request",
    "start": "527080",
    "end": "533200"
  },
  {
    "text": "in http2 in a random API we have a client that makes the request to a",
    "start": "533200",
    "end": "538360"
  },
  {
    "text": "server with specific things in url in header and so on now in between we have",
    "start": "538360",
    "end": "544920"
  },
  {
    "text": "this protocol buffers file that we write and in order to get something from the",
    "start": "544920",
    "end": "550560"
  },
  {
    "text": "server that has hosted the grpc service we would have to use a channel uh I'm",
    "start": "550560",
    "end": "558120"
  },
  {
    "text": "going to pause a bit over this channel concept because we have to look at protocol level http2 is this uh this box",
    "start": "558120",
    "end": "566839"
  },
  {
    "text": "and inside it we can open a virtual pipe that flows data back and forth from the",
    "start": "566839",
    "end": "572480"
  },
  {
    "text": "server and the client so inside a single HTTP connection we will have several",
    "start": "572480",
    "end": "578519"
  },
  {
    "text": "grpc requests if needed uh and of course several grpc responses so this pipe is",
    "start": "578519",
    "end": "584880"
  },
  {
    "text": "opened over single TCP connection unlike traditional HTTP requests that opens a",
    "start": "584880",
    "end": "591760"
  },
  {
    "text": "new connection for response for new request for a new request this will keep the connection open and we'll travel",
    "start": "591760",
    "end": "598000"
  },
  {
    "text": "that data back and forth so um short reminder what an HTTP",
    "start": "598000",
    "end": "603600"
  },
  {
    "text": "request contains so we have headers where we can add uh accept the mime",
    "start": "603600",
    "end": "608920"
  },
  {
    "text": "types that client wants and understand and a lot of things that are specific to our business then we have the request",
    "start": "608920",
    "end": "615480"
  },
  {
    "text": "body that can also be empty and we have an HTTP method that tells the the server",
    "start": "615480",
    "end": "621680"
  },
  {
    "text": "what we want to say is like we're sending data we're getting we're updating and so on if we look at grpc we",
    "start": "621680",
    "end": "629839"
  },
  {
    "text": "would have several bits that travel inside that uh request body through a",
    "start": "629839",
    "end": "634959"
  },
  {
    "text": "channel so we can have inside the body sever grpc requests so From grpc",
    "start": "634959",
    "end": "640959"
  },
  {
    "text": "perspective we're looking at this specific small bits that traveled back and forth so this grpc request if we",
    "start": "640959",
    "end": "649440"
  },
  {
    "text": "look at it it's split into two sections we have meta data and headers specific",
    "start": "649440",
    "end": "655000"
  },
  {
    "text": "to the small bit and the actual method U message the thing that we're sending to the server to get data or to send data",
    "start": "655000",
    "end": "663680"
  },
  {
    "text": "okay now we have grpc requests that have these metadata or request headers but we",
    "start": "663680",
    "end": "669560"
  },
  {
    "text": "also have the ones that sit at the protocol ones so it's the same thing it's still http2 we'll still have",
    "start": "669560",
    "end": "675519"
  },
  {
    "text": "headers and on the response uh part we will still have what we used to have",
    "start": "675519",
    "end": "681519"
  },
  {
    "text": "those are not going anywhere but we still get some other things specific to grpc so an HTTP response traditionally",
    "start": "681519",
    "end": "689720"
  },
  {
    "text": "has Heather's body and status code that tells us what the deal is with the our",
    "start": "689720",
    "end": "694839"
  },
  {
    "text": "initial request well when we add grpc on top of it we would get responses grpc",
    "start": "694839",
    "end": "702839"
  },
  {
    "text": "responses and these responses can be small bits traveling in response to those small bits initially okay so what",
    "start": "702839",
    "end": "710560"
  },
  {
    "text": "happens here is that with the GPC request response we have data that we",
    "start": "710560",
    "end": "716680"
  },
  {
    "text": "expect as response and at the end of all uh grpc responses",
    "start": "716680",
    "end": "723120"
  },
  {
    "text": "passing we would get something that mimics um response headers is a key",
    "start": "723120",
    "end": "730240"
  },
  {
    "text": "value pair that gets sent only uh at the end it's called trailers key value pair",
    "start": "730240",
    "end": "735800"
  },
  {
    "text": "of strings that we can add and you'll see a lot of uh a lot of code too so um",
    "start": "735800",
    "end": "742440"
  },
  {
    "text": "when all the responses have finished to be sent we get the status code",
    "start": "742440",
    "end": "747639"
  },
  {
    "text": "traditionally it's 200 okay 44 or whatever usually is 200 okay because",
    "start": "747639",
    "end": "753279"
  },
  {
    "text": "each grpc response will have its own status code that is specific to grpc",
    "start": "753279",
    "end": "759199"
  },
  {
    "text": "it's like if you want it's like adding an extra layer under the HTTP protocol",
    "start": "759199",
    "end": "766120"
  },
  {
    "text": "that is grpc okay okay so um now with this out of our way let's look at the",
    "start": "766120",
    "end": "772639"
  },
  {
    "text": "Proto file that's the language that specifies what things we have in um",
    "start": "772639",
    "end": "779600"
  },
  {
    "text": "exposed to our service so first we have to specify which is the syntax that we",
    "start": "779600",
    "end": "784839"
  },
  {
    "text": "use usually is protocol buffers and a version protocol buffers 3 is the the",
    "start": "784839",
    "end": "790240"
  },
  {
    "text": "current one and then we specify that for C we want it to be generated as",
    "start": "790240",
    "end": "795920"
  },
  {
    "text": "namespace my first grpc so the code that will be generated by the protocol buffers compiler would",
    "start": "795920",
    "end": "802880"
  },
  {
    "text": "have this C namespace if we want to uh generate this code for Java we would",
    "start": "802880",
    "end": "809120"
  },
  {
    "text": "would have Java uncore namespace and with a package name okay so this is how we specify um language independent um",
    "start": "809120",
    "end": "817600"
  },
  {
    "text": "things then we specify which services and which operations we have in our case",
    "start": "817600",
    "end": "823560"
  },
  {
    "text": "we have the service definition that is called fibo from Fibonacci and then we have compute Fibonacci an input and a",
    "start": "823560",
    "end": "831000"
  },
  {
    "text": "return output and the method is of type RPC so basically when we want to use",
    "start": "831000",
    "end": "836560"
  },
  {
    "text": "these operations we have to specify them here and as soon as we start to",
    "start": "836560",
    "end": "841600"
  },
  {
    "text": "distribute this file all those consumers will look in this file and will see what",
    "start": "841600",
    "end": "846680"
  },
  {
    "text": "is available here's the similarity with that whistle page that we used to have in soap you look there you had",
    "start": "846680",
    "end": "852440"
  },
  {
    "text": "operations you had uh parameters defined and so on now inside here you'll see",
    "start": "852440",
    "end": "858040"
  },
  {
    "text": "some messages the keyword message um and the name and then some properties",
    "start": "858040",
    "end": "865160"
  },
  {
    "text": "defined the idea behind these messages is that once we comp compile the file we",
    "start": "865160",
    "end": "870519"
  },
  {
    "text": "will get C classes if we compile it for C so after we compile this protocol",
    "start": "870519",
    "end": "877160"
  },
  {
    "text": "buffers file we would get a requested number class that we will be able to to",
    "start": "877160",
    "end": "882199"
  },
  {
    "text": "use inside our code the same happens with Fibonacci result we will have a C",
    "start": "882199",
    "end": "887480"
  },
  {
    "text": "class named Fibonacci result with a property called result uh one thing that I want to note",
    "start": "887480",
    "end": "893440"
  },
  {
    "text": "here is that we have in32 number in32 result equal one",
    "start": "893440",
    "end": "899680"
  },
  {
    "text": "well that is not an assignment okay that's the order in the bite string because we're talking bytes so when we",
    "start": "899680",
    "end": "905920"
  },
  {
    "text": "add more Fields those will be two three or we can skip some numbers if we want to deprecate fields and this is how it",
    "start": "905920",
    "end": "911959"
  },
  {
    "text": "works okay not an assignment just an ordering the power of grpc also resides",
    "start": "911959",
    "end": "919160"
  },
  {
    "text": "in fact that it has four modes or some people call them types of uh",
    "start": "919160",
    "end": "924480"
  },
  {
    "text": "transporting data over those small bits grpc requests the first one is grpc UN",
    "start": "924480",
    "end": "931480"
  },
  {
    "text": "which is one to one correspondence to our request response we would have the",
    "start": "931480",
    "end": "936720"
  },
  {
    "text": "client that opens up a channel and sends a grpc request the server will see that",
    "start": "936720",
    "end": "942639"
  },
  {
    "text": "request and it will respond with a grpc response how we write such a method is simply by uh annotating RPC give it the",
    "start": "942639",
    "end": "950639"
  },
  {
    "text": "name give it the input and so on the second bit is server streaming where the",
    "start": "950639",
    "end": "955880"
  },
  {
    "text": "client sends grpc request but it might get back several chunks several grpc",
    "start": "955880",
    "end": "962639"
  },
  {
    "text": "responses in return that happens and I want to emphasize this that have happens",
    "start": "962639",
    "end": "967839"
  },
  {
    "text": "over a single TCP connection every bit every grpc response is inside one single",
    "start": "967839",
    "end": "973959"
  },
  {
    "text": "TCP connection at the protocol level okay how we write such a thing is by",
    "start": "973959",
    "end": "979079"
  },
  {
    "text": "adding the stream keyword to the part that it's supposed to be many of so we",
    "start": "979079",
    "end": "984519"
  },
  {
    "text": "get a requested number type in and we get many Fibonacci results back back because that's the",
    "start": "984519",
    "end": "991000"
  },
  {
    "text": "stream the third one is the opposite where the client send several chunks of",
    "start": "991000",
    "end": "996519"
  },
  {
    "text": "data several grpc requests and it will get back only one thing several ins only",
    "start": "996519",
    "end": "1003600"
  },
  {
    "text": "one out how do we write such a thing by adding the stream keyword to the part",
    "start": "1003600",
    "end": "1009360"
  },
  {
    "text": "that it's supposed to be many so we'll have many inputs and one output so it's many to",
    "start": "1009360",
    "end": "1015600"
  },
  {
    "text": "one the last one is combining the previous to where the client send",
    "start": "1015600",
    "end": "1020839"
  },
  {
    "text": "several grpc requests and it will get back several grpc responses and after",
    "start": "1020839",
    "end": "1027280"
  },
  {
    "text": "all the responses have been sent it will get the trailers back those key value pairs how do we write such a thing just",
    "start": "1027280",
    "end": "1034558"
  },
  {
    "text": "by adding the stream keyword to the both uh sides okay so now let's see some code",
    "start": "1034559",
    "end": "1041199"
  },
  {
    "text": "before we talk something else how do we create such a project I'm",
    "start": "1041199",
    "end": "1047918"
  },
  {
    "text": "going to just open Visual Studio it's a template if you never worked uh with",
    "start": "1047919",
    "end": "1053400"
  },
  {
    "text": "urpc you just click create new project and then you find there asut core grpc",
    "start": "1053400",
    "end": "1059840"
  },
  {
    "text": "and you'd find the project the template that is already there you select it next",
    "start": "1059840",
    "end": "1065760"
  },
  {
    "text": "next give it a name long time support because this is what we're currently using and you will see that a project",
    "start": "1065760",
    "end": "1074120"
  },
  {
    "text": "that is very funky uh it's created it has has a few",
    "start": "1074120",
    "end": "1079280"
  },
  {
    "text": "things that we already know and I hope Visual Studio doesn't",
    "start": "1079280",
    "end": "1084440"
  },
  {
    "text": "misbehave and gives me the code here so you'll see that we still have app setting. Json program CS but unlike our",
    "start": "1084440",
    "end": "1092559"
  },
  {
    "text": "traditional um endpoints uh that we create we have no controllers so the controllers is not a",
    "start": "1092559",
    "end": "1100240"
  },
  {
    "text": "concept in grpc what we do have is a folder called protos that's supposed to",
    "start": "1100240",
    "end": "1106679"
  },
  {
    "text": "keep all those files that we write in that specific syntax and the services folder that contain the business logic",
    "start": "1106679",
    "end": "1114200"
  },
  {
    "text": "that back that that contract so let's examine those a bit grid.",
    "start": "1114200",
    "end": "1121440"
  },
  {
    "text": "Proto uh it's exactly similar to what I showed you so specify the syntax specify",
    "start": "1121440",
    "end": "1128200"
  },
  {
    "text": "the name space and then you start specifying what you expose uh say hello",
    "start": "1128200",
    "end": "1133720"
  },
  {
    "text": "gets a hello request returns a hello reply and so on uh the idea is that you",
    "start": "1133720",
    "end": "1138840"
  },
  {
    "text": "cannot have here methods that have no parameters you have to have something",
    "start": "1138840",
    "end": "1144240"
  },
  {
    "text": "even though that something uh might be a message that has a name but no properties this is how it's built so we",
    "start": "1144240",
    "end": "1151720"
  },
  {
    "text": "have to respect that uh to accommodate this and prevent us from rewriting and Reinventing the will Google um Expos",
    "start": "1151720",
    "end": "1159720"
  },
  {
    "text": "something that is called Google well-known types that gives that type empty that is transformed to void is in",
    "start": "1159720",
    "end": "1168400"
  },
  {
    "text": "um in net so once we have this file um on build you'll notice that some code is",
    "start": "1168400",
    "end": "1175640"
  },
  {
    "text": "generated for us and that code if you want to explore it lives under object",
    "start": "1175640",
    "end": "1181240"
  },
  {
    "text": "debug version. net protos some here",
    "start": "1181240",
    "end": "1186400"
  },
  {
    "text": "hidden so you see that is grid Cs and grid gr grpc uh C that's the code",
    "start": "1186400",
    "end": "1192799"
  },
  {
    "text": "generated for us is not rocket science you could use that and do that by hand",
    "start": "1192799",
    "end": "1197840"
  },
  {
    "text": "by running the CLI for the protocol buffers compiler and You' get a similar um similar thing so visual studio",
    "start": "1197840",
    "end": "1204960"
  },
  {
    "text": "basically wraps up the the CLI for protocol buffers so if we open this",
    "start": "1204960",
    "end": "1211159"
  },
  {
    "text": "you'll see funky code that has a super nice wning do not edit because well",
    "start": "1211159",
    "end": "1218159"
  },
  {
    "text": "things might have H might happen and then you'll notice here that there is a static partial class called grd",
    "start": "1218159",
    "end": "1224520"
  },
  {
    "text": "Reflections some funky code here that you don't want to see in depth uh but what what it's important for us is that",
    "start": "1224520",
    "end": "1231919"
  },
  {
    "text": "it generates our types you'll see that is a public seal partial class hello",
    "start": "1231919",
    "end": "1237240"
  },
  {
    "text": "request and if we look down here somewhere we'll also see the other one",
    "start": "1237240",
    "end": "1243320"
  },
  {
    "text": "okay so now would be able to use those types in our code to provide business",
    "start": "1243320",
    "end": "1248640"
  },
  {
    "text": "logic so I'm going to hide this and inside the services I'm going to open",
    "start": "1248640",
    "end": "1254840"
  },
  {
    "text": "greater service I hope this is visible to the backr",
    "start": "1254840",
    "end": "1260600"
  },
  {
    "text": "so we see that we have the gritter service this is the name that you give the template has so it can be anything",
    "start": "1260919",
    "end": "1267640"
  },
  {
    "text": "it will have a Constructor so you can inject anything from your ioc container if you want loggers repositories",
    "start": "1267640",
    "end": "1274400"
  },
  {
    "text": "database context whatever it's a simple class that you can write uh but the deal",
    "start": "1274400",
    "end": "1280760"
  },
  {
    "text": "with this is that it extends a base class this is gritter gritter base that",
    "start": "1280760",
    "end": "1286400"
  },
  {
    "text": "is autogenerated on compile time so how do we provide business logic to what we",
    "start": "1286400",
    "end": "1293320"
  },
  {
    "text": "have there to this class named say hello that has this type and returns this type",
    "start": "1293320",
    "end": "1299679"
  },
  {
    "text": "it's by simply I'm going to just copy this by writing public override and",
    "start": "1299679",
    "end": "1306120"
  },
  {
    "text": "you're going to be prompted what are your options and one of the only options that we get is this say hello request",
    "start": "1306120",
    "end": "1313480"
  },
  {
    "text": "that is defined in the protocol buffers file so we have to provide business logic for it so I'm going to undo this a",
    "start": "1313480",
    "end": "1321600"
  },
  {
    "text": "bit just to to show you that this say hello has the type that we specified but",
    "start": "1321600",
    "end": "1328039"
  },
  {
    "text": "it also gets an additional um parameter that is there for us to access",
    "start": "1328039",
    "end": "1334000"
  },
  {
    "text": "informations at the protocol level it's similar to what we used uh in web API or",
    "start": "1334000",
    "end": "1340880"
  },
  {
    "text": "MVC HTTP context we have access to the HTTP context from here too we can get",
    "start": "1340880",
    "end": "1348159"
  },
  {
    "text": "things like for example um uh how is it called",
    "start": "1348159",
    "end": "1354919"
  },
  {
    "text": "context context Dot and we can get things like uh the deadline of the",
    "start": "1354919",
    "end": "1360960"
  },
  {
    "text": "current request uh method host some request headers that sit at the um the",
    "start": "1360960",
    "end": "1366480"
  },
  {
    "text": "protocol level uh user State there's also HTTP context if we do this get HTTP",
    "start": "1366480",
    "end": "1374279"
  },
  {
    "text": "context it will get uh what we already know and from there we can access",
    "start": "1374279",
    "end": "1379600"
  },
  {
    "text": "request headers HTTP the users things about the",
    "start": "1379600",
    "end": "1384760"
  },
  {
    "text": "connections anything uh session informations and we can get the user",
    "start": "1384760",
    "end": "1390679"
  },
  {
    "text": "claims we can identify a lot of things around the the user so and anything we already know from web API it's still",
    "start": "1390679",
    "end": "1396799"
  },
  {
    "text": "here we just add some more things okay uh some other thing that we have to look",
    "start": "1396799",
    "end": "1402799"
  },
  {
    "text": "at is this it's simply a middleware called at grpc that we have to use in",
    "start": "1402799",
    "end": "1408640"
  },
  {
    "text": "any project that we would create and then we have to tell it which is the grpc service that gives an",
    "start": "1408640",
    "end": "1415480"
  },
  {
    "text": "implementation for some things now um this is the the basic so basically this",
    "start": "1415480",
    "end": "1421440"
  },
  {
    "text": "is everything that we could look at in the random template one thing that I also want to",
    "start": "1421440",
    "end": "1428159"
  },
  {
    "text": "show you is that if we edit a project file we'll notice here",
    "start": "1428159",
    "end": "1434279"
  },
  {
    "text": "something it's an item group called um whatever it has has a node named Proto",
    "start": "1434279",
    "end": "1439799"
  },
  {
    "text": "buff that has the path to that file that we created or we got with the template",
    "start": "1439799",
    "end": "1446279"
  },
  {
    "text": "and also this has a node that tells this is a Ser this is acting as a server for",
    "start": "1446279",
    "end": "1453120"
  },
  {
    "text": "a client we would had the similar thing but instead of server will be client here so this is",
    "start": "1453120",
    "end": "1459760"
  },
  {
    "text": "helping okay with this out of our way I'm going to run",
    "start": "1459760",
    "end": "1465000"
  },
  {
    "text": "this and apparently Postman died",
    "start": "1465000",
    "end": "1471760"
  },
  {
    "text": "overnight supposed to be opened so the easiest way of uh testing a grpc service",
    "start": "1473440",
    "end": "1478760"
  },
  {
    "text": "is to use some tool now postman has everything implemented and it's easier for us to to look at it so you can click",
    "start": "1478760",
    "end": "1486600"
  },
  {
    "text": "new and you would select here grpc request and from there you'll notice",
    "start": "1486600",
    "end": "1491840"
  },
  {
    "text": "that is a similar experience to http calls uh you would have to enter the URL",
    "start": "1491840",
    "end": "1497480"
  },
  {
    "text": "and then you would have to select a method but there is a catch um in order",
    "start": "1497480",
    "end": "1503480"
  },
  {
    "text": "to find what methods are exposed in that that grpc uh service you would have to",
    "start": "1503480",
    "end": "1510240"
  },
  {
    "text": "point it to the grpc uh protocol file so since I don't know where that is saved",
    "start": "1510240",
    "end": "1516840"
  },
  {
    "text": "I'm going to right click here open containing folder and I'm going to shamelessly copy the",
    "start": "1516840",
    "end": "1523080"
  },
  {
    "text": "path and I'm going to click here import the Proto file point to it",
    "start": "1523080",
    "end": "1530320"
  },
  {
    "text": "open open and I'm going to select it okay I",
    "start": "1531320",
    "end": "1537200"
  },
  {
    "text": "click open and you'll see that it kind of loads the method and in here it now",
    "start": "1537200",
    "end": "1542880"
  },
  {
    "text": "discovers one method that uh we could can call we call it uh and we say invoke",
    "start": "1542880",
    "end": "1549760"
  },
  {
    "text": "and you'll notice that now we don't get status code AS 404 stuff like that we",
    "start": "1549760",
    "end": "1554840"
  },
  {
    "text": "get one Z through 15 because those are still stus Cod specific to grpc requests",
    "start": "1554840",
    "end": "1561399"
  },
  {
    "text": "so this is cancelled let's see uh this is one disabled TLS let's see fingers",
    "start": "1561399",
    "end": "1567399"
  },
  {
    "text": "crossed yeah so now it's Zer okay it's not 200 okay it's Zer okay which is okay",
    "start": "1567399",
    "end": "1573679"
  },
  {
    "text": "in in terms of grpc you'll see an um a message name a message tuab and you can",
    "start": "1573679",
    "end": "1580799"
  },
  {
    "text": "say use example message and it will generate based on that protocol buffer file uh like a example request name",
    "start": "1580799",
    "end": "1590600"
  },
  {
    "text": "Copenhagen I should get that back so click invoke hello Copenhagen yeah so",
    "start": "1590600",
    "end": "1596640"
  },
  {
    "text": "it's it's an experience that is similar to what we are used to uh in web API but",
    "start": "1596640",
    "end": "1601720"
  },
  {
    "text": "this experience is now two years ago we didn't get that so um it's way better",
    "start": "1601720",
    "end": "1607080"
  },
  {
    "text": "than it used to be okay let's see what happens here uh not",
    "start": "1607080",
    "end": "1612960"
  },
  {
    "text": "too many things but again I'm show you some other things okay I have a wider",
    "start": "1612960",
    "end": "1618840"
  },
  {
    "text": "demo to show you you'll notice here that I have you'll also have access to the",
    "start": "1618840",
    "end": "1623919"
  },
  {
    "text": "source code if you are to run it by yourself so uh don't worry about it on the server bit we have this grid Proto",
    "start": "1623919",
    "end": "1630760"
  },
  {
    "text": "where I imple I implemented uh I implemented I defined four those four",
    "start": "1630760",
    "end": "1637200"
  },
  {
    "text": "types of methods this is the unor server streaming client streaming and bir",
    "start": "1637200",
    "end": "1642440"
  },
  {
    "text": "directional so I provided a an implementation for all of this just to show you how it it looks like and I also",
    "start": "1642440",
    "end": "1650679"
  },
  {
    "text": "Define two types a request just to mimic the request from HTTP and a response",
    "start": "1650679",
    "end": "1656840"
  },
  {
    "text": "just to call it like that um from HTTP so server has to be running if you want",
    "start": "1656840",
    "end": "1663600"
  },
  {
    "text": "to call that it's like in web API the temporal coupling is still there so you",
    "start": "1663600",
    "end": "1668880"
  },
  {
    "text": "have to have systems up in order to make them uh talk to each other and if we want to give implementation for this you",
    "start": "1668880",
    "end": "1676039"
  },
  {
    "text": "will simply look in your service hide",
    "start": "1676039",
    "end": "1681559"
  },
  {
    "text": "yourself okay so you'll see here say hello uh has an implementation very very simple it gets that to type in and then",
    "start": "1681559",
    "end": "1689840"
  },
  {
    "text": "we return something uh as a response hello back with whatever I initially",
    "start": "1689840",
    "end": "1695640"
  },
  {
    "text": "sent and I also access the context to get the the server um IP and",
    "start": "1695640",
    "end": "1703360"
  },
  {
    "text": "protocol okay what we have here uh the second one server stream the same",
    "start": "1703360",
    "end": "1708600"
  },
  {
    "text": "request but I do a for Loop that goes to this value and W writes to the response",
    "start": "1708600",
    "end": "1714399"
  },
  {
    "text": "stream Asing a new type of message so we would have uh several grpc responses in",
    "start": "1714399",
    "end": "1721240"
  },
  {
    "text": "return to only one um request we will test those soon enough client streaming",
    "start": "1721240",
    "end": "1727799"
  },
  {
    "text": "now it has an async stream of type request so it's many in and it has a",
    "start": "1727799",
    "end": "1734840"
  },
  {
    "text": "similar thing so it simply looks in the request and as long as it has things to read",
    "start": "1734840",
    "end": "1740679"
  },
  {
    "text": "from it will write those to the console so it is the easiest logic that I could",
    "start": "1740679",
    "end": "1746240"
  },
  {
    "text": "find just to mimic that a lot of data travels back and forth so many um one",
    "start": "1746240",
    "end": "1751640"
  },
  {
    "text": "response back at the end the B directional one it has a request in and",
    "start": "1751640",
    "end": "1759240"
  },
  {
    "text": "a server stream of responses back so many ins many outs this is what is",
    "start": "1759240",
    "end": "1764679"
  },
  {
    "text": "generated the U the code here is it's similar so while we have things to",
    "start": "1764679",
    "end": "1771320"
  },
  {
    "text": "read from in the request stream we will uh read them and write them back in the",
    "start": "1771320",
    "end": "1776519"
  },
  {
    "text": "response stream so we get them we write them back okay so let's run these I have",
    "start": "1776519",
    "end": "1783320"
  },
  {
    "text": "some console apps here I will have a server instance that",
    "start": "1783320",
    "end": "1788440"
  },
  {
    "text": "runs and listens for me to do requests and you'll see that is",
    "start": "1788440",
    "end": "1795080"
  },
  {
    "text": "listening on Port 5000 uh waits for me to do stuff the first",
    "start": "1795080",
    "end": "1800799"
  },
  {
    "text": "thing that I'm going to try is the UN one to to show you how it looks and",
    "start": "1800799",
    "end": "1806640"
  },
  {
    "text": "since we talked about the server and the server implementation let's look at the",
    "start": "1806640",
    "end": "1812720"
  },
  {
    "text": "clients the client is a simple console app that has some packages",
    "start": "1812720",
    "end": "1820518"
  },
  {
    "text": "installed in here um grpc net client is one of them and grpc net client Factory",
    "start": "1820840",
    "end": "1828399"
  },
  {
    "text": "so um if we look in program things are not very uh very",
    "start": "1828399",
    "end": "1834440"
  },
  {
    "text": "clean here but it's uh easy to understand so we create a channel we specify where is the server living so at",
    "start": "1834440",
    "end": "1842919"
  },
  {
    "text": "listening at this port and then we create a client it's similar to what we use when we call Web apis we have an",
    "start": "1842919",
    "end": "1849799"
  },
  {
    "text": "HTTP client that we create we instantiate or we use an HTTP Factory for it now we obtain the greater client",
    "start": "1849799",
    "end": "1857279"
  },
  {
    "text": "that was generated for us so I did no funky thing that was there generated for me just because we had access to that",
    "start": "1857279",
    "end": "1863360"
  },
  {
    "text": "protocol buffer file and then we simply instantiate a new request type and then",
    "start": "1863360",
    "end": "1869840"
  },
  {
    "text": "we simply call the client pass in that request and that's it we wait for a",
    "start": "1869840",
    "end": "1874880"
  },
  {
    "text": "response and then we write we write the response uh in the console yeah so create the channel tell it where the",
    "start": "1874880",
    "end": "1882039"
  },
  {
    "text": "server lives obtain the client and then do a regular a um",
    "start": "1882039",
    "end": "1889080"
  },
  {
    "text": "request remember that that I told you that we have no more code references so",
    "start": "1889080",
    "end": "1895039"
  },
  {
    "text": "now from the client's perspective if I want to call the server I would have to",
    "start": "1895039",
    "end": "1900760"
  },
  {
    "text": "point to it some way or to use the HTTP client but now look what I did if we",
    "start": "1900760",
    "end": "1907240"
  },
  {
    "text": "look in packages Frameworks analyzers there is no not a thing that points to",
    "start": "1907240",
    "end": "1912919"
  },
  {
    "text": "my server implementation that is here up there the only thing that is in in common is this grid",
    "start": "1912919",
    "end": "1919480"
  },
  {
    "text": "Proto which uh has the exact same things as our server",
    "start": "1919480",
    "end": "1925639"
  },
  {
    "text": "one in here and it has the exact same thing because it is the same thing okay",
    "start": "1925639",
    "end": "1931679"
  },
  {
    "text": "how do we obtain that is by simply uh clicking dependencies and we have sorry",
    "start": "1931679",
    "end": "1938360"
  },
  {
    "text": "they changed the um the look and feel of this uh not",
    "start": "1938360",
    "end": "1944679"
  },
  {
    "text": "build dependencies where are you so you'll get the if you're using ryer",
    "start": "1944679",
    "end": "1950039"
  },
  {
    "text": "for example you'd have to edit the project file and to include this item",
    "start": "1950039",
    "end": "1956039"
  },
  {
    "text": "group manually um you'll have to point where the protocol buffer file lives so in our",
    "start": "1956039",
    "end": "1962679"
  },
  {
    "text": "case lives under the server solution and I'm pointing to that and it has this small bit here that gives us the this",
    "start": "1962679",
    "end": "1971200"
  },
  {
    "text": "funny looking folder uh field that has a small Arrow so this is not an actual",
    "start": "1971200",
    "end": "1977000"
  },
  {
    "text": "folder it's just points to that that is on the server um level uh where are you",
    "start": "1977000",
    "end": "1986440"
  },
  {
    "text": "dependencies add they put it under a hidden menu so",
    "start": "1986440",
    "end": "1991799"
  },
  {
    "text": "with ADD connected service it used to be top level connected service and from there you'll get uh this bit service",
    "start": "1991799",
    "end": "1999480"
  },
  {
    "text": "references and if you click plus it will prompt you to select what you want to add as a u as a service reference you",
    "start": "1999480",
    "end": "2007159"
  },
  {
    "text": "can go back to the old WCF if you're missing it and um you can select grpc",
    "start": "2007159",
    "end": "2013799"
  },
  {
    "text": "and here you click next you browse and find the file that lives under the",
    "start": "2013799",
    "end": "2018880"
  },
  {
    "text": "server project protos click open and then you specify what what type of class",
    "start": "2018880",
    "end": "2025360"
  },
  {
    "text": "you want to generate so you can be a client you can also be a server or you",
    "start": "2025360",
    "end": "2030519"
  },
  {
    "text": "want messages only so only those types that we specified with messages keyword so would say that we're clients we click",
    "start": "2030519",
    "end": "2038360"
  },
  {
    "text": "finish and this behaves very nicely and installs all the packages that we need",
    "start": "2038360",
    "end": "2043760"
  },
  {
    "text": "uh for us without us oh I have to install that and that and that so it does it automatically we click close And",
    "start": "2043760",
    "end": "2050358"
  },
  {
    "text": "then we would get this uh funny uh looking folder reference in here so you",
    "start": "2050359",
    "end": "2056280"
  },
  {
    "text": "see what this uses so now when we go back to our console server is still listening and",
    "start": "2056280",
    "end": "2064878"
  },
  {
    "text": "inside the UN bit I'm going to do net",
    "start": "2064879",
    "end": "2069720"
  },
  {
    "text": "run and say hello NC and we get hello back with hello NC value from Local Host",
    "start": "2074000",
    "end": "2081599"
  },
  {
    "text": "5000 okay let's see on This Server bit what happened so we got a request finished",
    "start": "2081599",
    "end": "2090118"
  },
  {
    "text": "that was made on http2 it was a post type request because everything grpc is",
    "start": "2090119",
    "end": "2096800"
  },
  {
    "text": "post we cannot have put get or anything in between is post it's sending data and",
    "start": "2096800",
    "end": "2103720"
  },
  {
    "text": "it pointed out to this specific uh method is Local Host blah blah blah",
    "start": "2103720",
    "end": "2109000"
  },
  {
    "text": "greeter greeter say hello that's the name of the actual method that we're calling back we got 200 okay status code",
    "start": "2109000",
    "end": "2117040"
  },
  {
    "text": "at the HTTP level so on top of it and it's of type application grpc that's the",
    "start": "2117040",
    "end": "2123560"
  },
  {
    "text": "MIP type that travels back and forth so we did an http post and on the calling",
    "start": "2123560",
    "end": "2130119"
  },
  {
    "text": "party we simply get um the response back so one to one is super easy the next bit",
    "start": "2130119",
    "end": "2139119"
  },
  {
    "text": "on client streaming let's say it's similar I point to the same protocol",
    "start": "2139119",
    "end": "2145920"
  },
  {
    "text": "file and by looking in the the program we will see that we create the channel",
    "start": "2145920",
    "end": "2151560"
  },
  {
    "text": "pointing to the server uh location we create a client that we obtained because",
    "start": "2151560",
    "end": "2156680"
  },
  {
    "text": "it was generated from for us and then we Loop and write aing in the request",
    "start": "2156680",
    "end": "2163000"
  },
  {
    "text": "stream for a specific amount of time so we create as many request jpcs passing",
    "start": "2163000",
    "end": "2169520"
  },
  {
    "text": "the index in there as a string so we'll look through it and we we simply uh call",
    "start": "2169520",
    "end": "2174680"
  },
  {
    "text": "it so let's see how that looks client streaming I'm going to clean this up",
    "start": "2174680",
    "end": "2180319"
  },
  {
    "text": "going to maximize a bit make sure the server is",
    "start": "2180319",
    "end": "2186200"
  },
  {
    "text": "listening so net run client",
    "start": "2186200",
    "end": "2192160"
  },
  {
    "text": "streaming you see a lot of things moving on the server side so it gets a lot of things it gets request with the content",
    "start": "2192160",
    "end": "2199599"
  },
  {
    "text": "value of the I that we send in a loop many many things",
    "start": "2199599",
    "end": "2205480"
  },
  {
    "text": "in and what happened here and it said I got 90 this value as being the last",
    "start": "2205480",
    "end": "2213079"
  },
  {
    "text": "index value in that Loop so it's one response",
    "start": "2213079",
    "end": "2218280"
  },
  {
    "text": "to the client side from the server the server uh streaming it works",
    "start": "2218280",
    "end": "2223599"
  },
  {
    "text": "pretty much in Reverse it sends server streaming program in here we do a",
    "start": "2223599",
    "end": "2230240"
  },
  {
    "text": "similar thing I'm going to try to zoom in a bit we obtain a channel we pass it",
    "start": "2230240",
    "end": "2236599"
  },
  {
    "text": "in to the client and then we simply call um the server with the server stream",
    "start": "2236599",
    "end": "2242400"
  },
  {
    "text": "method passing in a new request without anything and then we will await for",
    "start": "2242400",
    "end": "2248119"
  },
  {
    "text": "whatever the server is sending as long as the server has something to uh to send so the question is how do we know",
    "start": "2248119",
    "end": "2254319"
  },
  {
    "text": "that the server finished sending JPC responses well it",
    "start": "2254319",
    "end": "2259680"
  },
  {
    "text": "sends those trailers at the end and this is how http2 works it sends at the end",
    "start": "2259680",
    "end": "2265040"
  },
  {
    "text": "those trailers and this is how the client know okay you're done I can move on so I'll do the same on the server",
    "start": "2265040",
    "end": "2274400"
  },
  {
    "text": "streaming in here so from the right hand side we were supposed to uh send one",
    "start": "2274400",
    "end": "2282160"
  },
  {
    "text": "thing but we get many things back do net run we wait a bit see a lot of Hells",
    "start": "2282160",
    "end": "2290000"
  },
  {
    "text": "coming back in here and also it writes back that it",
    "start": "2290000",
    "end": "2295800"
  },
  {
    "text": "finds some trailers value that I also added just to show you how the trailers work when all the responses are sent",
    "start": "2295800",
    "end": "2302200"
  },
  {
    "text": "this trailers come to to finish the job on the server side you'll note is",
    "start": "2302200",
    "end": "2307720"
  },
  {
    "text": "that http2 post every single time 200 okay application grpc but we call the",
    "start": "2307720",
    "end": "2313480"
  },
  {
    "text": "server stream bit similar thing happens in the bir directional one server still",
    "start": "2313480",
    "end": "2321680"
  },
  {
    "text": "listens but this time I minimize the the loops so we are sending 10 eyes and we",
    "start": "2321680",
    "end": "2328040"
  },
  {
    "text": "receive 10 eyes in the exact same order that we received them easy easy peasy",
    "start": "2328040",
    "end": "2333200"
  },
  {
    "text": "let's say okay uh this is all about the Basics but grpc is not only about that",
    "start": "2333200",
    "end": "2340880"
  },
  {
    "text": "grpc is supposed to do a lot of things very well uh already in the package so",
    "start": "2340880",
    "end": "2346839"
  },
  {
    "text": "it's by default we have some internal grpc that happen and we need to be aware",
    "start": "2346839",
    "end": "2352000"
  },
  {
    "text": "of so status codes as I did a preview",
    "start": "2352000",
    "end": "2357319"
  },
  {
    "text": "are not the same we still have HTTP ones but we also get some other ones 15 of",
    "start": "2357319",
    "end": "2363560"
  },
  {
    "text": "them which is an inum that depicts the status code another thing everything",
    "start": "2363560",
    "end": "2369119"
  },
  {
    "text": "grpc related that is bad that you can use in terms in order to validate let's",
    "start": "2369119",
    "end": "2374200"
  },
  {
    "text": "say a grpc request that comes fields and so on how can you do the validation by",
    "start": "2374200",
    "end": "2380319"
  },
  {
    "text": "throwing exceptions what kind of exceptions RPC ones there's only one",
    "start": "2380319",
    "end": "2385480"
  },
  {
    "text": "type of exception that has whatever you add in it with the status codes that you",
    "start": "2385480",
    "end": "2390760"
  },
  {
    "text": "add that shows that something is bad happening in uh in the grpc uh initial",
    "start": "2390760",
    "end": "2396319"
  },
  {
    "text": "request what you can add interceptors which are grpc Level these interceptors",
    "start": "2396319",
    "end": "2402319"
  },
  {
    "text": "are similar to our middle Wares but they run right when you want",
    "start": "2402319",
    "end": "2407480"
  },
  {
    "text": "them per grpc for example if you want to log something right before a grpc request is made you can do that if you",
    "start": "2407480",
    "end": "2415400"
  },
  {
    "text": "want to add to log something after the grpc request you can add that so you have four entry points uh for each grpc",
    "start": "2415400",
    "end": "2423000"
  },
  {
    "text": "request respectively uh response so an Interceptor will allow us",
    "start": "2423000",
    "end": "2428599"
  },
  {
    "text": "to interact with incoming or outgoing uh requests can offer us a way to enrich",
    "start": "2428599",
    "end": "2433920"
  },
  {
    "text": "the calls like to add things and headers and so on request headers protocol ones will stay there",
    "start": "2433920",
    "end": "2441359"
  },
  {
    "text": "but we'll get some other ones key value pairs in the requests key value pairs in the response and response trailer",
    "start": "2441359",
    "end": "2449359"
  },
  {
    "text": "also so let's have a look we'll look here in the client",
    "start": "2449359",
    "end": "2457160"
  },
  {
    "text": "just a second okay told you that anything is um",
    "start": "2457359",
    "end": "2466480"
  },
  {
    "text": "RPC exception well a way to see what happened is to Simply filter using the",
    "start": "2466480",
    "end": "2472599"
  },
  {
    "text": "the pattern matching status code the enum and if I click here I'm going to",
    "start": "2472599",
    "end": "2478599"
  },
  {
    "text": "show you that we have aborted already access cancelled yeah data loss and some others",
    "start": "2478599",
    "end": "2486440"
  },
  {
    "text": "these are the this is the enum that I told you about out of range",
    "start": "2486440",
    "end": "2492280"
  },
  {
    "text": "unauthenticated unavailable and so on I'm going to undo this I'm going to try to redo the cancel cancel okay um let's",
    "start": "2492280",
    "end": "2501839"
  },
  {
    "text": "modify something when we do the request we can pass in some things for",
    "start": "2501839",
    "end": "2509319"
  },
  {
    "text": "example on the server side a client streaming sorry in here servers",
    "start": "2509319",
    "end": "2517280"
  },
  {
    "text": "streaming server streaming context showed you already the context uh we can",
    "start": "2517280",
    "end": "2522560"
  },
  {
    "text": "add headers and this is how you can add headers we have context request headers",
    "start": "2522560",
    "end": "2528040"
  },
  {
    "text": "we access those and the similar way we add the trailers we do context response",
    "start": "2528040",
    "end": "2533960"
  },
  {
    "text": "trailers and we add this key that is usable both on the request and on the response named metadata entry which are",
    "start": "2533960",
    "end": "2541920"
  },
  {
    "text": "key value pairs you just add them in there and pass it with the with the response",
    "start": "2541920",
    "end": "2549119"
  },
  {
    "text": "okay let's see here on the uh where are",
    "start": "2549920",
    "end": "2555040"
  },
  {
    "text": "you server streaming okay in here so um one of the",
    "start": "2555040",
    "end": "2561119"
  },
  {
    "text": "things that you could do with grpc is to pass that a deadline saying that I'm doing this request but if I do not get",
    "start": "2561119",
    "end": "2567480"
  },
  {
    "text": "an answer back in this amount of time kill it abort it okay so you can pass",
    "start": "2567480",
    "end": "2572680"
  },
  {
    "text": "this deadline and I'm going to say that I'm going this is UN commentable and",
    "start": "2572680",
    "end": "2579240"
  },
  {
    "text": "this I have to comment okay so now I'm going to do a server streaming uh pass in a request",
    "start": "2579240",
    "end": "2586520"
  },
  {
    "text": "but I'm going to say hey in one millisecond that's your deadline and the server when it receives that if it's not",
    "start": "2586520",
    "end": "2593720"
  },
  {
    "text": "capable of responding in that time it will know that it doesn't even have to bother to create a response because it's",
    "start": "2593720",
    "end": "2599800"
  },
  {
    "text": "aborted so this is server streaming this listens this goes to",
    "start": "2599800",
    "end": "2605640"
  },
  {
    "text": "server streaming and I'm going to do it again uh let's clean it I just modified it so it will bu",
    "start": "2605640",
    "end": "2613760"
  },
  {
    "text": "rebuild it and You' get now that your greetings",
    "start": "2613760",
    "end": "2621319"
  },
  {
    "text": "timed out just because we added that um deadline here of 1",
    "start": "2621319",
    "end": "2628440"
  },
  {
    "text": "millisecond so you catch this exception when you run the project so console your",
    "start": "2628440",
    "end": "2634640"
  },
  {
    "text": "getting time timeout uh because deadline exceeded and you have ways of tweaking",
    "start": "2634640",
    "end": "2639760"
  },
  {
    "text": "what happened um inside here okay this is one thing another thing that um you",
    "start": "2639760",
    "end": "2647040"
  },
  {
    "text": "could do with grpc is to tweak things in regards to uh maximum message size that",
    "start": "2647040",
    "end": "2654640"
  },
  {
    "text": "should be for grpc uh response compression level you can specify algorithms uh you can uh specify maximum",
    "start": "2654640",
    "end": "2662319"
  },
  {
    "text": "send message maximum receive message so you don't have to uh allow gig by it's",
    "start": "2662319",
    "end": "2667880"
  },
  {
    "text": "traveling if you have a lot of data that is that's big it's not fit for grpc grpc",
    "start": "2667880",
    "end": "2675760"
  },
  {
    "text": "should be small enough to be uh easy to to serialize to buy the raise and so on",
    "start": "2675760",
    "end": "2680839"
  },
  {
    "text": "so if you have huge junks maybe you should look to to other Technologies out there not necessarily grpc when we talk",
    "start": "2680839",
    "end": "2688960"
  },
  {
    "text": "about security um basically anything that is supported inside your apis it's",
    "start": "2688960",
    "end": "2695119"
  },
  {
    "text": "supported here because it's still has http2 so more than that we can have two",
    "start": "2695119",
    "end": "2702200"
  },
  {
    "text": "types of um security related information traveling with the requests we can pass",
    "start": "2702200",
    "end": "2707359"
  },
  {
    "text": "it at the channel level which means it's a higher level or individual per grpc",
    "start": "2707359",
    "end": "2713520"
  },
  {
    "text": "request well you can add both if you want or you can add only one of them but you have two places where you can put",
    "start": "2713520",
    "end": "2720040"
  },
  {
    "text": "them what is supported um aure ad anything but uh care Barrow nlm uh on",
    "start": "2720040",
    "end": "2728200"
  },
  {
    "text": "Windows because http2 doesn't know how to talk with windows so if you have Windows authentication grpc won't be a",
    "start": "2728200",
    "end": "2735839"
  },
  {
    "text": "good fit for you okay but anything can travel uh the explanation to this is",
    "start": "2735839",
    "end": "2741040"
  },
  {
    "text": "that anything that can travel it as an authentication detail in the request in the regular HTTP request can be here",
    "start": "2741040",
    "end": "2748400"
  },
  {
    "text": "too okay so um some other things that grpc should do awesome out of the box",
    "start": "2748400",
    "end": "2755960"
  },
  {
    "text": "one of them is client ins side load balancing which means that we can",
    "start": "2755960",
    "end": "2762200"
  },
  {
    "text": "specify some resolvers in which uh our server instances can respond so we can",
    "start": "2762200",
    "end": "2769440"
  },
  {
    "text": "specify resolvers by DNS or if we know the IPS we can specify a static resolver",
    "start": "2769440",
    "end": "2775280"
  },
  {
    "text": "Factory so let's look at these we have the server instance running I'm",
    "start": "2775280",
    "end": "2782760"
  },
  {
    "text": "going to start another instance that will listen on a different port 5,000 and2 and now I'm going to close",
    "start": "2782760",
    "end": "2791079"
  },
  {
    "text": "them out of these things I have another",
    "start": "2791079",
    "end": "2796119"
  },
  {
    "text": "project that does a request and you'll notice here that we",
    "start": "2796119",
    "end": "2801240"
  },
  {
    "text": "got get Local Host 5,000 and if I stop it and run it",
    "start": "2801240",
    "end": "2806319"
  },
  {
    "text": "again we get it we get the response from a different server the second instance",
    "start": "2806319",
    "end": "2812720"
  },
  {
    "text": "that uh that I started this is done out of the box without installing uh without us installing additional tools uh it has",
    "start": "2812720",
    "end": "2820680"
  },
  {
    "text": "a policy that we can configure in here so it's another",
    "start": "2820680",
    "end": "2826119"
  },
  {
    "text": "project extra grpc in which we had client side load",
    "start": "2826119",
    "end": "2831240"
  },
  {
    "text": "balancing so we specify a resolver factory we specify the addresses where",
    "start": "2831240",
    "end": "2836760"
  },
  {
    "text": "we know our silver will live uh well I I hardcoded this but in in production",
    "start": "2836760",
    "end": "2843760"
  },
  {
    "text": "environment you should like read this from somewhere that will give you the flexibility of adding extra um",
    "start": "2843760",
    "end": "2849920"
  },
  {
    "text": "additional instances for example if you're running POS in kubernetes th those will be uh automatically",
    "start": "2849920",
    "end": "2856079"
  },
  {
    "text": "discovered uh we configured because we're in a console context we have to configure this uh service collection bit",
    "start": "2856079",
    "end": "2863680"
  },
  {
    "text": "we pass in the resolvable factory um as a single ton and then we do our usual",
    "start": "2863680",
    "end": "2869200"
  },
  {
    "text": "thing for example we create the channel we're passing in a name and then we can",
    "start": "2869200",
    "end": "2874720"
  },
  {
    "text": "pass grpc Channel options in here we can also uh specify credentials like point",
    "start": "2874720",
    "end": "2881079"
  },
  {
    "text": "to uh certificates or different things um and in the service configs we can",
    "start": "2881079",
    "end": "2886599"
  },
  {
    "text": "specify the load balancing algorithm that we want to use then we wrap everything together and we're able to do",
    "start": "2886599",
    "end": "2893319"
  },
  {
    "text": "the call this Plumbing is uh let's say very tedious because I'm in a console",
    "start": "2893319",
    "end": "2899680"
  },
  {
    "text": "but when you call a grpc from a web app or some other context you won't have to do all these things because you will",
    "start": "2899680",
    "end": "2905400"
  },
  {
    "text": "have everything in program CS wired up okay we build the service and then we",
    "start": "2905400",
    "end": "2910520"
  },
  {
    "text": "can easily call our um by passing in the Channel with all the gazillion options",
    "start": "2910520",
    "end": "2916200"
  },
  {
    "text": "we get the response back okay so this is all that you can do in order to do",
    "start": "2916200",
    "end": "2922079"
  },
  {
    "text": "client side load balancing so R run Robin or pick first but pick first it",
    "start": "2922079",
    "end": "2928119"
  },
  {
    "text": "doesn't make any sense now because it will always pick the first server instance that is available so as soon as",
    "start": "2928119",
    "end": "2936079"
  },
  {
    "text": "we keep playing around with this we might get different server versions so",
    "start": "2936079",
    "end": "2942760"
  },
  {
    "text": "um do net run I shouldn't rebuild this so we",
    "start": "2942760",
    "end": "2948400"
  },
  {
    "text": "randomly get one or the other or stuff like that client side load balancing a",
    "start": "2948400",
    "end": "2954119"
  },
  {
    "text": "very cool thing another thing that uh this should do uh automatically without using uh",
    "start": "2954119",
    "end": "2961839"
  },
  {
    "text": "additional packages it's built in it's transed fold handling we specify how it",
    "start": "2961839",
    "end": "2968480"
  },
  {
    "text": "should retry and what kind of status codes it should retry and it does it out",
    "start": "2968480",
    "end": "2974240"
  },
  {
    "text": "of the box so I'm going to comment this out uh",
    "start": "2974240",
    "end": "2980280"
  },
  {
    "text": "this because I don't want you to see me Mis type things so uh you can configure retry",
    "start": "2980280",
    "end": "2988079"
  },
  {
    "text": "policies uh and I added here uh the hedging policy too because if you want",
    "start": "2988079",
    "end": "2993359"
  },
  {
    "text": "to try it at home you just have to uncomment it so in terms of transient fault handling you",
    "start": "2993359",
    "end": "3000000"
  },
  {
    "text": "can have two types of policies retries and hedging policies the difference",
    "start": "3000000",
    "end": "3006520"
  },
  {
    "text": "between these two is how the retries are made hedging it does a burst of requests",
    "start": "3006520",
    "end": "3013760"
  },
  {
    "text": "how you specify them at once and in case one of the requests comes back with a",
    "start": "3013760",
    "end": "3019240"
  },
  {
    "text": "successful response it will cancel all the other ones retry instead does one by",
    "start": "3019240",
    "end": "3026319"
  },
  {
    "text": "one does a request checks the status then if that's not okay does another",
    "start": "3026319",
    "end": "3032160"
  },
  {
    "text": "requests okay so this is the difference between hedging that comes from Finance they borrow the ter from there uh and",
    "start": "3032160",
    "end": "3039200"
  },
  {
    "text": "the retry policies that uh you all might be familiar with in terms of what you can configure we can have maximum",
    "start": "3039200",
    "end": "3046040"
  },
  {
    "text": "attempts which is the number of attempts that we can have uh by for this an",
    "start": "3046040",
    "end": "3051599"
  },
  {
    "text": "initial back off maximum back off back off multiplier and here here is the",
    "start": "3051599",
    "end": "3057079"
  },
  {
    "text": "power we can say which are the retriable status codes uh we're thinking grpc",
    "start": "3057079",
    "end": "3063599"
  },
  {
    "text": "right so if status code for grpc is unavailable or the status code internal",
    "start": "3063599",
    "end": "3068839"
  },
  {
    "text": "I want only those to be retried anything besides this I don't care okay so as",
    "start": "3068839",
    "end": "3075400"
  },
  {
    "text": "soon as you pass in the retry policy uh let's see if this is what options",
    "start": "3075400",
    "end": "3083960"
  },
  {
    "text": "options options Channel withd retry Channel withd retry",
    "start": "3083960",
    "end": "3089119"
  },
  {
    "text": "passing in the options okay everything is wired correctly I also have to do some other",
    "start": "3089119",
    "end": "3095359"
  },
  {
    "text": "thing uh some here somewhere here I try to mimic that something bad happens and",
    "start": "3095359",
    "end": "3102400"
  },
  {
    "text": "I'm doing this by looking at the request headers it's a funny thing that I did",
    "start": "3102400",
    "end": "3107920"
  },
  {
    "text": "but I'm going to explain it to you so I'm looking in the request headers and I'm trying to search for a key that is",
    "start": "3107920",
    "end": "3114799"
  },
  {
    "text": "called grpc previous RPC attempts this is the header that is added by the",
    "start": "3114799",
    "end": "3119960"
  },
  {
    "text": "platform to identify if the current request is a retried one or is the fresh",
    "start": "3119960",
    "end": "3125760"
  },
  {
    "text": "initial one so what I do if this key is not there when I first do the request",
    "start": "3125760",
    "end": "3132880"
  },
  {
    "text": "I'm going to throw an RPC exception with this status code of internal and I'm going to add a random message not here",
    "start": "3132880",
    "end": "3139359"
  },
  {
    "text": "sorry try again but that's only the first time okay so I'm going to stop the",
    "start": "3139359",
    "end": "3145400"
  },
  {
    "text": "server instance uh say hello is the unary",
    "start": "3145400",
    "end": "3151079"
  },
  {
    "text": "one console I'm going to stop this I'm going to stop this too I'm going to call it do not",
    "start": "3151400",
    "end": "3161000"
  },
  {
    "text": "run build we'll wait a bit the music is perfect for build results",
    "start": "3161920",
    "end": "3170000"
  },
  {
    "text": "it's and extra grpc here is again so net run",
    "start": "3171599",
    "end": "3178400"
  },
  {
    "text": "maybe I should have added a breakpoint",
    "start": "3178400",
    "end": "3183640"
  },
  {
    "text": "h I think I should add the breakpoint uh hang on something I'm",
    "start": "3183640",
    "end": "3190760"
  },
  {
    "text": "missing say hello is this and I'm doing the where are you",
    "start": "3190760",
    "end": "3197079"
  },
  {
    "text": "what are you calling say hello okay um I'm going to do the",
    "start": "3197079",
    "end": "3203160"
  },
  {
    "text": "request here where are you",
    "start": "3203160",
    "end": "3208440"
  },
  {
    "text": "why are not telling me the another",
    "start": "3209559",
    "end": "3215839"
  },
  {
    "text": "run okay found it finally H so you'll",
    "start": "3215839",
    "end": "3221079"
  },
  {
    "text": "notice here somewhere uh fail so we get a fail",
    "start": "3221079",
    "end": "3226240"
  },
  {
    "text": "server blah blah blah Arrow thrown by something with the internal status code",
    "start": "3226240",
    "end": "3232079"
  },
  {
    "text": "detail not here try again and then it continues and then it gets back back with a successful status code okay so",
    "start": "3232079",
    "end": "3240559"
  },
  {
    "text": "it's transparent for us it's it logs the uh the request it writes it there but if",
    "start": "3240559",
    "end": "3246760"
  },
  {
    "text": "you look in the information bit you'll notice that there is a fail involved it's a grpc call exception the first",
    "start": "3246760",
    "end": "3252520"
  },
  {
    "text": "time uh the things have called so I'm going to restart this net",
    "start": "3252520",
    "end": "3258280"
  },
  {
    "text": "run listens and then I'm going to rerun this",
    "start": "3258280",
    "end": "3263640"
  },
  {
    "text": "again to see what's going on so the first time the things happened blah blah",
    "start": "3263640",
    "end": "3269559"
  },
  {
    "text": "blah not here try again it continues but on the calling",
    "start": "3269559",
    "end": "3274880"
  },
  {
    "text": "party from my perspective nothing happened because the retry is done uh automatically without me knowing and if",
    "start": "3274880",
    "end": "3281400"
  },
  {
    "text": "we want to look at that specific um the specific code we should add a breakpoint",
    "start": "3281400",
    "end": "3287119"
  },
  {
    "text": "or if you want to try it yourself add a breakpoint um in the server side and see how that retry attempts uh key gets um",
    "start": "3287119",
    "end": "3294359"
  },
  {
    "text": "gets incremented okay some other things grpc transcoding",
    "start": "3294359",
    "end": "3299680"
  },
  {
    "text": "and this is the last bit that I'm going to um uh show you well some people say",
    "start": "3299680",
    "end": "3305680"
  },
  {
    "text": "hey I'm not going to use grpc just because um maybe in the future",
    "start": "3305680",
    "end": "3311760"
  },
  {
    "text": "I want to use this as a from the browser and the browsers don't know how to talk",
    "start": "3311760",
    "end": "3317200"
  },
  {
    "text": "grpc because you cannot have end to end uh a discussion in JPC from the browser",
    "start": "3317200",
    "end": "3323400"
  },
  {
    "text": "you'd have to have a tool that you either manage yourself that does the transcoding Json to bite",
    "start": "3323400",
    "end": "3329520"
  },
  {
    "text": "array grpc server so what they did was to invent the package named grpc",
    "start": "3329520",
    "end": "3337559"
  },
  {
    "text": "transcoding uh that you have to install I'm going to try to zoom in a bit so",
    "start": "3337559",
    "end": "3342680"
  },
  {
    "text": "it's called G uh grpc Json transcoding uh that allows you to to",
    "start": "3342680",
    "end": "3348119"
  },
  {
    "text": "talk grpc also I show you here the reflection bit uh that allows you to",
    "start": "3348119",
    "end": "3354119"
  },
  {
    "text": "discover what you have on a server side like without importing manually the the Proto file so uh the funny part is here",
    "start": "3354119",
    "end": "3363720"
  },
  {
    "text": "if you want to add transcoding you'd have to do some checks and changes so",
    "start": "3363720",
    "end": "3369160"
  },
  {
    "text": "remember the protocol file where say hello and stuff well now those get um",
    "start": "3369160",
    "end": "3374280"
  },
  {
    "text": "enriched by this bit option Google API HTTP uh you say I want to act as a get",
    "start": "3374280",
    "end": "3382200"
  },
  {
    "text": "request under this specific path for this specific uh request type so now",
    "start": "3382200",
    "end": "3388520"
  },
  {
    "text": "when you run the project uh run the project I say right",
    "start": "3388520",
    "end": "3393559"
  },
  {
    "text": "click debug start new instance we're going to get a browser",
    "start": "3393559",
    "end": "3399119"
  },
  {
    "text": "instance hopefully Chrome will open",
    "start": "3399119",
    "end": "3406520"
  },
  {
    "text": "today h I'm going to do this",
    "start": "3407000",
    "end": "3412599"
  },
  {
    "text": "maybe then he's going to cry because why not not only one instance where are you",
    "start": "3413400",
    "end": "3419079"
  },
  {
    "text": "Chrome you said you start oh now you're here okay so if I",
    "start": "3419079",
    "end": "3426559"
  },
  {
    "text": "take this in the browser and I paste the Endo that I",
    "start": "3426559",
    "end": "3433680"
  },
  {
    "text": "added it's a V1 just to like rest API uh",
    "start": "3433680",
    "end": "3439039"
  },
  {
    "text": "name and then I have a a parameter that gets bounded uh from here so I add",
    "start": "3439039",
    "end": "3444520"
  },
  {
    "text": "whatever random name I get it back but what happens is the my request here",
    "start": "3444520",
    "end": "3450359"
  },
  {
    "text": "is actually Jason if we look on the network tab see request method is a get now we",
    "start": "3450359",
    "end": "3458680"
  },
  {
    "text": "get back our uh status method status HTTP verbs uh content type is",
    "start": "3458680",
    "end": "3464119"
  },
  {
    "text": "application Json and it's translated back when we do the the",
    "start": "3464119",
    "end": "3469160"
  },
  {
    "text": "request to see the response so you can also have this flexibility now to say",
    "start": "3469160",
    "end": "3474720"
  },
  {
    "text": "okay cool this is your RPC is meant to be used by my Downstream apis but if in the future I want to expose it in the",
    "start": "3474720",
    "end": "3481000"
  },
  {
    "text": "browser to be consumed by someone else I can also do that by uh specifying you",
    "start": "3481000",
    "end": "3486319"
  },
  {
    "text": "can do post you can do get put uh and so on it's a spec that is implemented okay so I have to be mindful",
    "start": "3486319",
    "end": "3494319"
  },
  {
    "text": "of the time um what would be the benefits of using jrpc well if you look in terms of",
    "start": "3494319",
    "end": "3501440"
  },
  {
    "text": "performance versus size uh good serialization uh smaller",
    "start": "3501440",
    "end": "3506760"
  },
  {
    "text": "payload faster transfer over the network I did some test and I got in some cases",
    "start": "3506760",
    "end": "3512160"
  },
  {
    "text": "some 80% smaller payload uh compared to the same Json payload it allows us to",
    "start": "3512160",
    "end": "3519440"
  },
  {
    "text": "have polyglot environments which we kind of wish we have but we never have I",
    "start": "3519440",
    "end": "3527480"
  },
  {
    "text": "don't know but most of the project that I've seen have net all the way where they're trying to transition other",
    "start": "3527480",
    "end": "3533119"
  },
  {
    "text": "Technologies to net API so this polyot thing is just a a thing that we it's",
    "start": "3533119",
    "end": "3539960"
  },
  {
    "text": "cool to have but we do not need it uh because of the payload we have a low Network usage and it's super nice for",
    "start": "3539960",
    "end": "3546920"
  },
  {
    "text": "Point too communication so if we know where the server is and we should know it's pointto Point okay one to one so",
    "start": "3546920",
    "end": "3555760"
  },
  {
    "text": "it's faster supports different streaming types that might serve different purposes for different businesses and it",
    "start": "3555760",
    "end": "3561960"
  },
  {
    "text": "can be configured to run with HTTP 3 as downside is that it's you still have",
    "start": "3561960",
    "end": "3567760"
  },
  {
    "text": "that temporal coupling unlike messaging where that is not there anymore and you",
    "start": "3567760",
    "end": "3573400"
  },
  {
    "text": "might forget that there is um Network involved you'll need a better testing",
    "start": "3573400",
    "end": "3579200"
  },
  {
    "text": "you'll need to focus more on cicd and how you distribute those protocol buffer files because otherwise you'll end up",
    "start": "3579200",
    "end": "3585319"
  },
  {
    "text": "with copies that are prone to errors and prone to changing uh and you have this single point of through that is the",
    "start": "3585319",
    "end": "3591319"
  },
  {
    "text": "protocol buffer file that you have to distribute and maybe version if uh in some",
    "start": "3591319",
    "end": "3597079"
  },
  {
    "text": "cases so um distributed systems are all about tradeoffs there is no Silver",
    "start": "3597079",
    "end": "3603920"
  },
  {
    "text": "Bullet uh and we should know our tools because some are fit for some specific scenarios some are fit from for others",
    "start": "3603920",
    "end": "3611359"
  },
  {
    "text": "so if you want to look at some other things you can look at these HTP 23 and",
    "start": "3611359",
    "end": "3617720"
  },
  {
    "text": "grpc web and also thanks for listening and you have the source quote here it",
    "start": "3617720",
    "end": "3623559"
  },
  {
    "text": "will get you to the um the repository that I have and that you can try it out",
    "start": "3623559",
    "end": "3628960"
  },
  {
    "text": "so thank you enjoy the rest of your conference",
    "start": "3628960",
    "end": "3633720"
  }
]