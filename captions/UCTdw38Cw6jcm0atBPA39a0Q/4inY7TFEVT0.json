[
  {
    "start": "0",
    "end": "185000"
  },
  {
    "text": "thank you everyone for joining me here today my name is Jeffrey Huntley this is myself in the speaker lounge two days",
    "start": "9630",
    "end": "16289"
  },
  {
    "text": "ago when I got Bob did my peers saying you have to write a talk and present today so bear with me",
    "start": "16289",
    "end": "22500"
  },
  {
    "text": "I'd like to introduce you and to something I've been working on for the last couple years and that is a project",
    "start": "22500",
    "end": "29060"
  },
  {
    "text": "reactive UI reactive UI is a set of extension methods on the reactive",
    "start": "29060",
    "end": "34949"
  },
  {
    "text": "extensions and we cover nine different",
    "start": "34949",
    "end": "40650"
  },
  {
    "text": "platforms primarily net but we cover all the mobile platforms even even",
    "start": "40650",
    "end": "48780"
  },
  {
    "text": "televisions so Samsung Tizen televisions there's a pull request open right now we're adding support for the platform so",
    "start": "48780",
    "end": "55469"
  },
  {
    "text": "you can do reactive programming with that we also have a universal Windows",
    "start": "55469",
    "end": "60750"
  },
  {
    "text": "platform you WP windows forms a lot of people still using window forms I have",
    "start": "60750",
    "end": "66030"
  },
  {
    "text": "one person who says reactive UI is the only thing that makes him like programming in Windows forms so I still",
    "start": "66030",
    "end": "72570"
  },
  {
    "text": "support it for him now reactive UI inspired the creation of",
    "start": "72570",
    "end": "80670"
  },
  {
    "text": "reactive cocoa and reactors swift reactive coca was written by a github",
    "start": "80670",
    "end": "86700"
  },
  {
    "text": "employee and reactive UI I did not write reactive UI was written by Paul Betts",
    "start": "86700",
    "end": "91740"
  },
  {
    "text": "also a github employee so ever much coffee and beer they ported the concepts",
    "start": "91740",
    "end": "99210"
  },
  {
    "text": "behind reactive UI across and it's close to 14,000 stars on github and it",
    "start": "99210",
    "end": "107280"
  },
  {
    "text": "literally changed the way an iOS developer writes applications so it's",
    "start": "107280",
    "end": "116100"
  },
  {
    "text": "not just me there's a team behind the reactive UI it was created by Paul Paul",
    "start": "116100",
    "end": "121740"
  },
  {
    "text": "created whilst at github and a couple years ago he departed the project he",
    "start": "121740",
    "end": "128070"
  },
  {
    "text": "actually crossed over into the JavaScript ecosystem and he joined us to become the lead engineer of slack and",
    "start": "128070",
    "end": "133739"
  },
  {
    "text": "wrote the desktop application that you use on Mac and Windows and",
    "start": "133739",
    "end": "140720"
  },
  {
    "text": "that is using electron we also have Kent who's here in Australia in Adelaide",
    "start": "140720",
    "end": "147290"
  },
  {
    "text": "unfortunately couldn't be here today and we have Brendan foster someone very very",
    "start": "147290",
    "end": "154030"
  },
  {
    "text": "near to me special the project has grown to maintain us it's the beginning of the",
    "start": "154030",
    "end": "159800"
  },
  {
    "text": "year and we're growing if you're looking to get started an open source we'd love to have you on board we have an",
    "start": "159800",
    "end": "165890"
  },
  {
    "text": "ambitious roadmap so some exciting news last week is reactive you I joined the",
    "start": "165890",
    "end": "174170"
  },
  {
    "text": "dotnet foundation and this is going to allow us to do some very very interesting things",
    "start": "174170",
    "end": "179510"
  },
  {
    "text": "I can't wait to like share these with you so this this journey myself into",
    "start": "179510",
    "end": "188150"
  },
  {
    "text": "open source started three years ago when this guy Brandon you'll find him",
    "start": "188150",
    "end": "194990"
  },
  {
    "text": "downstairs at the github stand he wrote a blog post he said I'm setting aside",
    "start": "194990",
    "end": "201200"
  },
  {
    "text": "some time each week for mentoring developers that's the kindest thing you ever said I couldn't believe someone",
    "start": "201200",
    "end": "207260"
  },
  {
    "text": "working at github was going to set aside some time for pair programming and in",
    "start": "207260",
    "end": "212900"
  },
  {
    "text": "what he wrote was I've been fortunate to have many great mentors in my program career just about site is off sometimes",
    "start": "212900",
    "end": "220010"
  },
  {
    "text": "there's software sometimes is not but someone being there so we set aside at that time so I dinged him on skype and",
    "start": "220010",
    "end": "226930"
  },
  {
    "text": "this took unbelievable amount of courage I was enterprise developer I felt like I",
    "start": "226930",
    "end": "232220"
  },
  {
    "text": "was at my ceiling I was stuck like I knew I had to get out of that job and I",
    "start": "232220",
    "end": "237799"
  },
  {
    "text": "just didn't know what I needed to learn to get out of that or how to find the joy in software development again and I",
    "start": "237799",
    "end": "244820"
  },
  {
    "text": "dinged up in Skype it took huge amount of courage and finally someone was",
    "start": "244820",
    "end": "251450"
  },
  {
    "text": "challenging me I I was in over my head and he was there pulled me or pulled me",
    "start": "251450",
    "end": "257150"
  },
  {
    "text": "up I was learning so fast the pace was intense",
    "start": "257150",
    "end": "262180"
  },
  {
    "text": "Brendan plugged me into something that changed my direction software engineer and that's reactive programming and I'd",
    "start": "262210",
    "end": "269900"
  },
  {
    "text": "like to do the same for you a couple weeks ago I started a lot of live coding and programming on",
    "start": "269900",
    "end": "277309"
  },
  {
    "text": "YouTube and it's you see over there the light in the background that's um a",
    "start": "277309",
    "end": "284809"
  },
  {
    "text": "Philip shoe globe and when I'm on erred automated turns red this is kind of cool so Aaron my wife that is here she",
    "start": "284809",
    "end": "292579"
  },
  {
    "text": "doesn't accidentally run into the room when I'm broadcasting and I'm teaching everything I know about reactive",
    "start": "292579",
    "end": "299089"
  },
  {
    "text": "programming but not just reactive programming maintaining a large open source project that's used used at",
    "start": "299089",
    "end": "305529"
  },
  {
    "text": "github a slack elasticsearch and a bunch of Huff has it everything from",
    "start": "305529",
    "end": "313129"
  },
  {
    "text": "continuous integration how to take a dotnet what net standard is how to cross",
    "start": "313129",
    "end": "319249"
  },
  {
    "text": "compile with a new vs 20:17 project I'm there teaching it I'm sitting so sometime like Brendan did and I hope you",
    "start": "319249",
    "end": "326269"
  },
  {
    "text": "take me up in the offer if you go there it'll redirect to youtube and you can follow so nine years ago artists me and",
    "start": "326269",
    "end": "336499"
  },
  {
    "text": "a bunch of four people they they embedded something the reactive",
    "start": "336499",
    "end": "342979"
  },
  {
    "text": "extensions and what Brendan showed me was this video on duality and reality is",
    "start": "342979",
    "end": "348799"
  },
  {
    "text": "in mathematics something of a complete opposite and but who has huge done three",
    "start": "348799",
    "end": "354409"
  },
  {
    "text": "talks and I highly suggest going back and looking at these talks they invented",
    "start": "354409",
    "end": "361610"
  },
  {
    "text": "the reactive extensions and what they do on this whiteboard is they pull apart",
    "start": "361610",
    "end": "366909"
  },
  {
    "text": "it's so mentally stimulating they pull apart reactive programming and show a",
    "start": "366909",
    "end": "373099"
  },
  {
    "text": "collection a list of lists of objects where you would normally pull you",
    "start": "373099",
    "end": "378589"
  },
  {
    "text": "normally pull from the collection one by one and they show how they reverse it they actually reverse and in turn it",
    "start": "378589",
    "end": "384559"
  },
  {
    "text": "from a pool operation to a push operation there's two videos at it's mind-blowing",
    "start": "384559",
    "end": "391419"
  },
  {
    "text": "and that was the birth of the reactive extensions at the time there was a",
    "start": "391419",
    "end": "397369"
  },
  {
    "start": "392000",
    "end": "534000"
  },
  {
    "text": "project called Volta and it volt we within Volta they had some very innovative stuff going on but they",
    "start": "397369",
    "end": "404509"
  },
  {
    "text": "discovered something and they extracted that summing and it became the reactive extensions and this this",
    "start": "404509",
    "end": "410690"
  },
  {
    "text": "was this was in 2009 so there's many shapes of data you have",
    "start": "410690",
    "end": "417880"
  },
  {
    "text": "what single values and multiple values you also have the notion of time you have synchronous and asynchronous for a",
    "start": "417880",
    "end": "427130"
  },
  {
    "text": "single value as a single value as synchronous it's just an object so you knew up a class for multiple values at",
    "start": "427130",
    "end": "434570"
  },
  {
    "text": "synchronous you have an iron numerable so a list of T so it's iterative all you do a getenumerator likewise and just",
    "start": "434570",
    "end": "444530"
  },
  {
    "text": "coming in recently in the last couple years we now have a sink and a weight so",
    "start": "444530",
    "end": "449690"
  },
  {
    "text": "this is when you have a single value that's asynchronous and this is the most common use of asynchronous programming",
    "start": "449690",
    "end": "458240"
  },
  {
    "text": "in dotnet now but there is another one and then Brendon introduced me to it",
    "start": "458240",
    "end": "463640"
  },
  {
    "text": "through that video and that's I observable observables so we reservable x' they're asynchronous",
    "start": "463640",
    "end": "471320"
  },
  {
    "text": "and they return multiple times and this presentation I will show implementations",
    "start": "471320",
    "end": "476390"
  },
  {
    "text": "of observable that in desktop applications and mobile applications and",
    "start": "476390",
    "end": "481820"
  },
  {
    "text": "it would make you really think that this is really useful really really useful so",
    "start": "481820",
    "end": "489140"
  },
  {
    "text": "if you sick of investing time and energy and learning how frameworks work and",
    "start": "489140",
    "end": "494360"
  },
  {
    "text": "you're looking for some direction instead of investing time in learning",
    "start": "494360",
    "end": "499790"
  },
  {
    "text": "angular one and then having to throw that knowledge out learn something Universal and reactive programming is",
    "start": "499790",
    "end": "506030"
  },
  {
    "text": "universal in the sense that on mobile",
    "start": "506030",
    "end": "511450"
  },
  {
    "text": "reactor program is used extensively in the Android ecosystem on the desk on the",
    "start": "511450",
    "end": "518780"
  },
  {
    "text": "backend it's used in stream processing on the front end on the front end you",
    "start": "518780",
    "end": "525410"
  },
  {
    "text": "now need to need to know it as part of rxjs very very popular over there so if you",
    "start": "525410",
    "end": "531980"
  },
  {
    "text": "learn reactive programming what happens is you just apply the concepts that",
    "start": "531980",
    "end": "537710"
  },
  {
    "text": "you've learned in to a different implementation so it was created in dotnet in in 2009",
    "start": "537710",
    "end": "544970"
  },
  {
    "text": "and it is implementations in pretty much every conceivable language known and",
    "start": "544970",
    "end": "550990"
  },
  {
    "text": "rxjs has become incredibly popular last couple years so an example of example of",
    "start": "550990",
    "end": "559490"
  },
  {
    "text": "investing knowledge into reactive programming investing knowledge into a framework is developers learned angular",
    "start": "559490",
    "end": "567050"
  },
  {
    "text": "1 and all the sudden angular 2 came out and had to throw away all their knowledge because they invest a time to",
    "start": "567050",
    "end": "572600"
  },
  {
    "text": "learn those api's of a reactive programming so Wester time to learn those api's and interesting enough the",
    "start": "572600",
    "end": "580220"
  },
  {
    "text": "change that happened was angular's embraced reactive programming you now",
    "start": "580220",
    "end": "585230"
  },
  {
    "text": "need to know reactive chrome to be an angular developer so only reactive",
    "start": "585230",
    "end": "592130"
  },
  {
    "text": "programming allows you to express the idea in a single place and this is something that's really really really",
    "start": "592130",
    "end": "597710"
  },
  {
    "text": "really cool but it also scares people away at first because it's just so terse",
    "start": "597710",
    "end": "603050"
  },
  {
    "text": "like it's just it's all combined together you declare your intent of what",
    "start": "603050",
    "end": "608450"
  },
  {
    "text": "you want on a single place on a single line instead of having lots of event",
    "start": "608450",
    "end": "613700"
  },
  {
    "text": "handlers in your application you're scrolling up and down to figure out what you're going to do it's all declared in",
    "start": "613700",
    "end": "619880"
  },
  {
    "text": "a single line so it's actually easier to debug because you're not scrolling through your application and different",
    "start": "619880",
    "end": "626000"
  },
  {
    "text": "locations but it can look scary at first reactive programming can look very very",
    "start": "626000",
    "end": "632840"
  },
  {
    "text": "scary at first and the best way to look at it is actually Microsoft Excel",
    "start": "632840",
    "end": "638350"
  },
  {
    "text": "reactive programming is Microsoft Excel instead of telling the computer what its",
    "start": "638350",
    "end": "643820"
  },
  {
    "text": "job is instead of telling the computer take a and B and then put it in to see what you're doing is you say C should",
    "start": "643820",
    "end": "652370"
  },
  {
    "text": "update anytime A or B update and that's the main thing about reactive program is just thinking around",
    "start": "652370",
    "end": "658790"
  },
  {
    "text": "how you describe to the computer what the end outcome you want to occur so",
    "start": "658790",
    "end": "664810"
  },
  {
    "text": "reactive programming has inspired two much-loved JavaScript frameworks one is",
    "start": "665050",
    "end": "671600"
  },
  {
    "text": "Elm and the other is cycle Jo and these are the equivalents of",
    "start": "671600",
    "end": "678279"
  },
  {
    "text": "reactive UI in the web space so here's",
    "start": "678279",
    "end": "685189"
  },
  {
    "text": "an example like a concrete example of a problem you have when you don't use reactive programming you have a view",
    "start": "685189",
    "end": "691310"
  },
  {
    "text": "model you have a is busy property and that's a display is a loading indicator",
    "start": "691310",
    "end": "697279"
  },
  {
    "text": "a loading indicator when it's enabled you have a load command and when that",
    "start": "697279",
    "end": "706009"
  },
  {
    "text": "load command is executing it just turns that indicator on and off and this is",
    "start": "706009",
    "end": "711680"
  },
  {
    "text": "really common I bet you would find it in your code base today you just turn on and off and it's really really simple",
    "start": "711680",
    "end": "717519"
  },
  {
    "text": "until new requirement comes through and you're all of a sudden you've got a race condition in your code and this is just",
    "start": "717519",
    "end": "726709"
  },
  {
    "text": "a simplistic loading and saving but it can get really really complicated this branching of turning this on and off in",
    "start": "726709",
    "end": "734180"
  },
  {
    "text": "your code it's really hard to debug and handling this complexity is scattered all over the place but we're reactive",
    "start": "734180",
    "end": "739759"
  },
  {
    "text": "programming that's all defined on two or three lines just like microcytic cell so",
    "start": "739759",
    "end": "746540"
  },
  {
    "text": "here's an example from a code review I did last night and it's a mobile",
    "start": "746540",
    "end": "753079"
  },
  {
    "text": "application written in xamarin and it's a loading loading and saving scenario",
    "start": "753079",
    "end": "758180"
  },
  {
    "text": "and the question is what happens if both of these are executing what would happen",
    "start": "758180",
    "end": "764209"
  },
  {
    "text": "to the navigation in this mobile application and that would have to be a",
    "start": "764209",
    "end": "769519"
  },
  {
    "text": "crazy fast typer for this is a problem that's a review comment you have to be a crazy fast tapper and it's like okay",
    "start": "769519",
    "end": "776209"
  },
  {
    "text": "well let this pass it's true you have to be a crazy fast tapper for this to result in a user defect but if you",
    "start": "776209",
    "end": "783519"
  },
  {
    "text": "defined when if you defined when that is",
    "start": "783519",
    "end": "789559"
  },
  {
    "text": "busy should be on and off like an Excel expression or Excel macro you wouldn't be in this place in the first place",
    "start": "789559",
    "end": "795709"
  },
  {
    "text": "anyway so I'd like to introduce you to win any when any is I built him within",
    "start": "795709",
    "end": "803929"
  },
  {
    "start": "798000",
    "end": "920000"
  },
  {
    "text": "the reactive UI it's uses observables and it's a bunch of extension",
    "start": "803929",
    "end": "809570"
  },
  {
    "text": "methods now Paul converted when any over to typescript it is now available like",
    "start": "809570",
    "end": "815900"
  },
  {
    "text": "if you afterwards come to me I'll show you where but he ported supporting a lot",
    "start": "815900",
    "end": "821300"
  },
  {
    "text": "of the concepts behind reactive UI to typescript it's kind of cool so when any",
    "start": "821300",
    "end": "829190"
  },
  {
    "text": "is when any allows you to say when the",
    "start": "829190",
    "end": "839870"
  },
  {
    "text": "when a dinosaur has scales or has horns or has spikes or has a club what I'm",
    "start": "839870",
    "end": "847250"
  },
  {
    "text": "saying is when any one of those checkboxes changes I'm subscribing and",
    "start": "847250",
    "end": "852260"
  },
  {
    "text": "listening to the events that occur it's like the Excel expression they sell macro then I go to decide what I do when",
    "start": "852260",
    "end": "859190"
  },
  {
    "text": "that happens so I'll show you the code behind this",
    "start": "859190",
    "end": "864340"
  },
  {
    "text": "this is when any so it's very very much like a Excel macros Excel expression I'm",
    "start": "878490",
    "end": "885600"
  },
  {
    "text": "saying when C changes but so when a lb changes see should something should",
    "start": "885600",
    "end": "891209"
  },
  {
    "text": "happen with C so here I'm listening to the the weight of the dinosaur does it",
    "start": "891209",
    "end": "896790"
  },
  {
    "text": "have a club it have a horn and then I compared it to the dinosaur on the right and it just assert determines who wins",
    "start": "896790",
    "end": "903510"
  },
  {
    "text": "like rock-paper-scissors so it allows you to subscribe to change",
    "start": "903510",
    "end": "910290"
  },
  {
    "text": "notifications that are occurring or sequences the next primitive that's",
    "start": "910290",
    "end": "923279"
  },
  {
    "start": "920000",
    "end": "1124000"
  },
  {
    "text": "provided in reactive UI is reactive command when you're building applications typically you use I command",
    "start": "923279",
    "end": "930600"
  },
  {
    "text": "and I command is something you bind to a button but my command is missing some",
    "start": "930600",
    "end": "939029"
  },
  {
    "text": "things and what reactive command does it provides a bunch of observables you can",
    "start": "939029",
    "end": "945180"
  },
  {
    "text": "subscribe to to compose an outcome first up we have can execute and can execute",
    "start": "945180",
    "end": "951750"
  },
  {
    "text": "it's really cool is we can pass the can execute into the I command and we can",
    "start": "951750",
    "end": "956760"
  },
  {
    "text": "make the I command or the button automatically disabled if that ever",
    "start": "956760",
    "end": "962160"
  },
  {
    "text": "becomes true likewise we have is executing exact same",
    "start": "962160",
    "end": "967620"
  },
  {
    "text": "scenario there we can automatically disable or enable the button based on",
    "start": "967620",
    "end": "973260"
  },
  {
    "text": "subscribing to these results and what's",
    "start": "973260",
    "end": "978660"
  },
  {
    "text": "extremely cool about this using induce",
    "start": "978660",
    "end": "984140"
  },
  {
    "text": "it allows you to compose situations like this building on the knowledge of when any you can go when any the username and",
    "start": "984140",
    "end": "993089"
  },
  {
    "text": "password is not null or string or empty",
    "start": "993089",
    "end": "998510"
  },
  {
    "text": "the login button will activate automatically and that's using when any",
    "start": "998510",
    "end": "1004579"
  },
  {
    "text": "so I do when any the username password is not blank that sends an observable",
    "start": "1004579",
    "end": "1010070"
  },
  {
    "text": "that are subscribed to saying it's true which means can execute is true the button automatically changes to enabled",
    "start": "1010070",
    "end": "1019460"
  },
  {
    "text": "and can be enabled and it's perfectly efficient I don't have to go but an enable button disable it just subscribes",
    "start": "1019460",
    "end": "1025699"
  },
  {
    "text": "to it just like Excel it just works and which means you're doing less screen",
    "start": "1025699",
    "end": "1031100"
  },
  {
    "text": "redraw so it's more performant",
    "start": "1031100",
    "end": "1034449"
  },
  {
    "text": "so here's the example I use the name blank password blank button",
    "start": "1041660",
    "end": "1048680"
  },
  {
    "text": "automatically updates so when any username password button enable and",
    "start": "1048680",
    "end": "1055190"
  },
  {
    "text": "likewise I take the is executing observable from the login button and",
    "start": "1055190",
    "end": "1061730"
  },
  {
    "text": "that's connected to the can execute off the cancel button so right now I can",
    "start": "1061730",
    "end": "1068660"
  },
  {
    "text": "cancel the cancel button automatically enables and disables when the login",
    "start": "1068660",
    "end": "1074300"
  },
  {
    "text": "button changes the state of login button changes super cool",
    "start": "1074300",
    "end": "1080590"
  },
  {
    "text": "on line 25 is an example of when any when the username or password is not",
    "start": "1085360",
    "end": "1092649"
  },
  {
    "text": "null I pass it into I pass it into the login and it allows the login to be",
    "start": "1092649",
    "end": "1098200"
  },
  {
    "text": "enabled so these are these same concepts even though this is dotnet this is reactive programming this is what you",
    "start": "1098200",
    "end": "1104200"
  },
  {
    "text": "can do reactive UI is a set of extension methods that allows you to do this so you can compose an outcome and luckily",
    "start": "1104200",
    "end": "1111999"
  },
  {
    "text": "due to xamarin this means it runs on mobile on all mobile ecosystems the next",
    "start": "1111999",
    "end": "1125799"
  },
  {
    "start": "1124000",
    "end": "1261000"
  },
  {
    "text": "one I'd like to show you with an application of reactive programming is from a library called a kovash a kovash",
    "start": "1125799",
    "end": "1132399"
  },
  {
    "text": "is a library used extensively in the dotnet ecosystem it's a key value store",
    "start": "1132399",
    "end": "1138039"
  },
  {
    "text": "as a cache and a lot of people use a kovash kind of the wrong way oh it's the",
    "start": "1138039",
    "end": "1143919"
  },
  {
    "text": "right way but it's the only using 10% of its capacity so if you imagine that you",
    "start": "1143919",
    "end": "1149529"
  },
  {
    "text": "have an application for Twitter for example you'd normally have a loading",
    "start": "1149529",
    "end": "1154720"
  },
  {
    "text": "indicator and you do a network request and then you just play a list of tweets people normally use a kovash and",
    "start": "1154720",
    "end": "1161739"
  },
  {
    "text": "implement it like they implement it to do show the indicator on do a network request which blocks use the interaction",
    "start": "1161739",
    "end": "1169450"
  },
  {
    "text": "and then display the results because they're using it as a future a single",
    "start": "1169450",
    "end": "1174519"
  },
  {
    "text": "value a kabosh is built on as herbals it allows multiple values over time why",
    "start": "1174519",
    "end": "1182710"
  },
  {
    "text": "this is cool is it allows you if the user loads up the Twitter application it",
    "start": "1182710",
    "end": "1191559"
  },
  {
    "text": "does a request if the if the if the cache result is in the cache it returned",
    "start": "1191559",
    "end": "1198759"
  },
  {
    "text": "immediately there's no need for a loading indicator what you're doing is displaying the displaying the tweets",
    "start": "1198759",
    "end": "1204399"
  },
  {
    "text": "straight away to the user there is no loading indicator needed this is one of the properties of multiple values over",
    "start": "1204399",
    "end": "1210549"
  },
  {
    "text": "time what it allows you to do and then what you do in the background while the user is scrolling for their tweets cuz",
    "start": "1210549",
    "end": "1215830"
  },
  {
    "text": "you know and they might have been some background services updating the cache and they might have 2,000 tweets or in",
    "start": "1215830",
    "end": "1221590"
  },
  {
    "text": "there that unread you can actually use this to say go fetch the latest version",
    "start": "1221590",
    "end": "1228220"
  },
  {
    "text": "from my from my endpoint and then from there when that data comes back you just",
    "start": "1228220",
    "end": "1233350"
  },
  {
    "text": "compose the result you create a set and you append on the top the user doesn't even notice what's happened but a whole",
    "start": "1233350",
    "end": "1239500"
  },
  {
    "text": "bunch of magics happen and you no longer blocking user input and this is some of the properties of what as ervil's allow",
    "start": "1239500",
    "end": "1245500"
  },
  {
    "text": "you to do I get really annoyed when I see loading indicators it's not needed you don't need to do it display the old",
    "start": "1245500",
    "end": "1252160"
  },
  {
    "text": "data the user was using and then insightly in the background retrieve and refresh it should be the",
    "start": "1252160",
    "end": "1258400"
  },
  {
    "text": "loading operation should be passive to the user the next thing I'd like to show",
    "start": "1258400",
    "end": "1263740"
  },
  {
    "start": "1261000",
    "end": "1690000"
  },
  {
    "text": "you is a servable from a bad pattern so who uses event handlers same thing",
    "start": "1263740",
    "end": "1271090"
  },
  {
    "text": "applies for if your JavaScript you working with the Dom you subscribe to the Dom in the Dom events so Zobel from",
    "start": "1271090",
    "end": "1276700"
  },
  {
    "text": "event pattern converts event handles or events into observables really really",
    "start": "1276700",
    "end": "1282940"
  },
  {
    "text": "cool because you can compose outcomes with this so within a reactive UI we",
    "start": "1282940",
    "end": "1290830"
  },
  {
    "text": "have a we have a we have a project cord",
    "start": "1290830",
    "end": "1296020"
  },
  {
    "text": "a vent builder and what a vent builder does is it generates all of the reservable properties for that",
    "start": "1296020",
    "end": "1302380"
  },
  {
    "text": "particular platform and you can use it to compose an outcome so I'd like to show you an example of subscribing to",
    "start": "1302380",
    "end": "1309880"
  },
  {
    "text": "events in a WPF application that does a cheat code that's very popular in computer games",
    "start": "1309880",
    "end": "1316830"
  },
  {
    "text": "all right so I'm going to go up up down down left right left right a B",
    "start": "1340160",
    "end": "1348940"
  },
  {
    "text": "at the sequence it's works it's great and the actually implementation of this",
    "start": "1358710",
    "end": "1365610"
  },
  {
    "text": "is like promise it's all defined in a",
    "start": "1365610",
    "end": "1371610"
  },
  {
    "text": "single place it's not scattered up and down you're not listening to a bunch of event handlers you can you can now map",
    "start": "1371610",
    "end": "1379590"
  },
  {
    "text": "the world they could be keyboard sequences they can be mouse clicks they can be data coming down from a REST API",
    "start": "1379590",
    "end": "1385590"
  },
  {
    "text": "could be GPS coordinates or locations they're all compatible they're all events that can be converted into",
    "start": "1385590",
    "end": "1392160"
  },
  {
    "text": "observables when you have an observable where you can use when any to derive an outcome cool so what we do here is on",
    "start": "1392160",
    "end": "1400470"
  },
  {
    "text": "the main window for WPF I have an events extension and anytime there's a key up",
    "start": "1400470",
    "end": "1406770"
  },
  {
    "text": "event I'm selecting the key and then I put it into a window of the last 10 keys",
    "start": "1406770",
    "end": "1412110"
  },
  {
    "text": "and then I compared it to the sequence for the sheet code and if it matches",
    "start": "1412110",
    "end": "1419780"
  },
  {
    "text": "it's the sequence if it's dot it's not",
    "start": "1419780",
    "end": "1424610"
  },
  {
    "text": "so this was contributed by Brad many",
    "start": "1426740",
    "end": "1432420"
  },
  {
    "text": "years ago I was one of his first contributions to the reactive UI project and I learned this only a couple days",
    "start": "1432420",
    "end": "1438900"
  },
  {
    "text": "ago I didn't know was him I thought Paul wrote it but Thank You Brad and in that",
    "start": "1438900",
    "end": "1444570"
  },
  {
    "text": "it actually the inspiration behind this came from F sharp which is cool so",
    "start": "1444570",
    "end": "1450260"
  },
  {
    "text": "another thing that's cool we've reactive programming is schedulers is time a lot",
    "start": "1450590",
    "end": "1458190"
  },
  {
    "text": "of people don't handle time correctly in their mobile application or even desktop applications time is a gigantic bag of",
    "start": "1458190",
    "end": "1466020"
  },
  {
    "text": "mutable sadness it's really hard to test most people in dotnet due date time now",
    "start": "1466020",
    "end": "1474620"
  },
  {
    "text": "right and soon as you do date/time dot now or thread dot sleep ten seconds you you're tightly coupled to the computer's",
    "start": "1474620",
    "end": "1481650"
  },
  {
    "text": "clock and it makes testing really really hard so in reactive extensions this is",
    "start": "1481650",
    "end": "1489090"
  },
  {
    "text": "thing called schedulers and schedulers it's like a virtual clock so now imagine that you",
    "start": "1489090",
    "end": "1497220"
  },
  {
    "text": "sitting down for an interview and this is the programming challenge they've given you I got this couple years back",
    "start": "1497220",
    "end": "1503970"
  },
  {
    "text": "it was interesting the lights will change every five minutes",
    "start": "1503970",
    "end": "1510440"
  },
  {
    "text": "simple enough their traffic lights provide the output for the light changes",
    "start": "1510440",
    "end": "1516000"
  },
  {
    "text": "that happen between 9:00 a.m. and 9:30 okay that's simple enough you must",
    "start": "1516000",
    "end": "1523380"
  },
  {
    "text": "provide all unit tests for this program and challenge and what they are",
    "start": "1523380",
    "end": "1528780"
  },
  {
    "text": "specifically looking for here is how fast a unit tests run how fast the unit",
    "start": "1528780",
    "end": "1536490"
  },
  {
    "text": "tests run for the traffic intersection if I tightly coupled to date timed up now and did it in an imperative form",
    "start": "1536490",
    "end": "1542390"
  },
  {
    "text": "these unit tests could take a very long time to run they would take 30 minutes to run but the implementation using",
    "start": "1542390",
    "end": "1549150"
  },
  {
    "text": "reactive programming was simple it takes execute the test of the test executes in",
    "start": "1549150",
    "end": "1555030"
  },
  {
    "text": "less than 10 milliseconds because time is virtual so here's an implementation",
    "start": "1555030",
    "end": "1561320"
  },
  {
    "text": "you start with a traffic light controller and you pass in a scheduler",
    "start": "1564260",
    "end": "1570960"
  },
  {
    "text": "at the top is a bunch of extension methods provided to generate you a",
    "start": "1570960",
    "end": "1576080"
  },
  {
    "text": "mocked scheduler in reactive extensions and you assert that a fault state should",
    "start": "1576080",
    "end": "1581880"
  },
  {
    "text": "be read read for safety that's like the right thing to do because if something went wrong and it was like red green",
    "start": "1581880",
    "end": "1587130"
  },
  {
    "text": "that's really bad or green green that's really bad and then you take the",
    "start": "1587130",
    "end": "1592620"
  },
  {
    "text": "scheduler and you can tell it to advance time you can not only forward time you",
    "start": "1592620",
    "end": "1598740"
  },
  {
    "text": "can actually rewind time with reactive extensions you become like a complete Time Lord there's a talk at ignite by",
    "start": "1598740",
    "end": "1606270"
  },
  {
    "text": "Joe a labarie of lint pad who talks about becoming a Time Lord with this thing it's on the reactive UI website",
    "start": "1606270",
    "end": "1612780"
  },
  {
    "text": "it's worth a look so at first we advance",
    "start": "1612780",
    "end": "1618480"
  },
  {
    "text": "by one second and we've gone from red red to red green in the state machine and then we advance it by 200",
    "start": "1618480",
    "end": "1624980"
  },
  {
    "text": "and 70 seconds so instead of this test taking 270 seconds it's now just taking",
    "start": "1624980",
    "end": "1631160"
  },
  {
    "text": "10 milliseconds awesome so RAM is another example",
    "start": "1631160",
    "end": "1639520"
  },
  {
    "text": "and it's over dinosaur we have a loading indicator and whilst this command is executing it's like a progress indicator",
    "start": "1659330",
    "end": "1667380"
  },
  {
    "text": "and typically if you're doing any form of testing for a loading indicator you",
    "start": "1667380",
    "end": "1672720"
  },
  {
    "text": "really can't you got to wait wait real-time especially of UI testing you can mock in a virtual scheduler and",
    "start": "1672720",
    "end": "1681149"
  },
  {
    "text": "improve you can improve the performance of this and it's just easy to work with because time is testable so a common",
    "start": "1681149",
    "end": "1692070"
  },
  {
    "start": "1690000",
    "end": "1785000"
  },
  {
    "text": "function that people do in their application is undo you see this in Gmail when you compose an email it's",
    "start": "1692070",
    "end": "1698850"
  },
  {
    "text": "like be sure you want to send that email and it gives you an undo give you an",
    "start": "1698850",
    "end": "1704070"
  },
  {
    "text": "undo operation so this is how you do undo with reactive programming",
    "start": "1704070",
    "end": "1710898"
  },
  {
    "text": "so we have a list of dinosaurs here the",
    "start": "1721280",
    "end": "1727230"
  },
  {
    "text": "delete command is automatically enabled because I've selected something and that's based off a reactive command and",
    "start": "1727230",
    "end": "1732870"
  },
  {
    "text": "can execute and we've win an E and now if I delete a dinosaur what happens is",
    "start": "1732870",
    "end": "1739230"
  },
  {
    "text": "it pops up something that's in building to reactive you iack order interaction and these interactions are completely",
    "start": "1739230",
    "end": "1748170"
  },
  {
    "text": "testable because you can fast forward time you can pop an interaction and then",
    "start": "1748170",
    "end": "1754290"
  },
  {
    "text": "fast forward the clock and assert that this was displayed for five seconds then dismissed as a unit test not as an",
    "start": "1754290",
    "end": "1762570"
  },
  {
    "text": "integration and end test which is like cool so if I delete this dot if I delete",
    "start": "1762570",
    "end": "1768570"
  },
  {
    "text": "the top dinosaur I got four seconds click undo click undo go straight",
    "start": "1768570",
    "end": "1773730"
  },
  {
    "text": "straight to the top cool really easy to implement and it's all based off the",
    "start": "1773730",
    "end": "1779490"
  },
  {
    "text": "concepts from before now resilience is",
    "start": "1779490",
    "end": "1788640"
  },
  {
    "start": "1785000",
    "end": "1976000"
  },
  {
    "text": "something interesting there's this really good library the.net ecosystem called fo D I so a very very good",
    "start": "1788640",
    "end": "1795980"
  },
  {
    "text": "library the dotnet ecosystem called Polly and Polly allows you to construct",
    "start": "1795980",
    "end": "1802110"
  },
  {
    "text": "what you should do if there's a failure but is the third party it is a third party library it's not something that's",
    "start": "1802110",
    "end": "1808050"
  },
  {
    "text": "built into the design of the constructor that you're Pro doing in so it doesn't really fit quite naturally with a",
    "start": "1808050",
    "end": "1816780"
  },
  {
    "text": "reactive extension there's a whole bunch of operators and one of the operators is retry you can retry an operation by just",
    "start": "1816780",
    "end": "1824610"
  },
  {
    "text": "using the word dot retry really really cool so baked in by default so Paul",
    "start": "1824610",
    "end": "1838770"
  },
  {
    "text": "batts recently said them reactive extensions and when debug there's",
    "start": "1838770",
    "end": "1846150"
  },
  {
    "text": "probably three things that keep paying off in his job for the last ten years and they have a reputation of being hard",
    "start": "1846150",
    "end": "1853590"
  },
  {
    "text": "to learn it's true but software engineering is hard it is learning and the thing about",
    "start": "1853590",
    "end": "1861990"
  },
  {
    "text": "reactive programming it's the knowledge of universal you learn it here I can now cross over and become angular developer",
    "start": "1861990",
    "end": "1868440"
  },
  {
    "text": "quite easily in comparison I just got to learn to express myself as a JavaScript developer instead of a.net developer and",
    "start": "1868440",
    "end": "1875190"
  },
  {
    "text": "I typically can't say that about much technologies so it's just it's just cool",
    "start": "1875190",
    "end": "1880309"
  },
  {
    "text": "but I kind of debate with them that it's like hard to learn it is but I don't",
    "start": "1880309",
    "end": "1886740"
  },
  {
    "text": "think it's been taught right so this example shown you today is coming out of",
    "start": "1886740",
    "end": "1891990"
  },
  {
    "text": "a book written by Kent Kent is one of the other maintainer x' as of last night",
    "start": "1891990",
    "end": "1897510"
  },
  {
    "text": "he's opened up for pre-orders for the book and let's show it shows you how to build a reactive application using",
    "start": "1897510",
    "end": "1905580"
  },
  {
    "text": "reactive UI or just observables and the the the demos I've been showing you is",
    "start": "1905580",
    "end": "1910950"
  },
  {
    "text": "coming from his book that's exactly what it is and the community's been asking for something like this for a very long",
    "start": "1910950",
    "end": "1916440"
  },
  {
    "text": "time so that's available now at reactive UI net such book in addition the if you",
    "start": "1916440",
    "end": "1925530"
  },
  {
    "text": "ever use the if you've ever used github for get up for Windows or in Visual",
    "start": "1925530",
    "end": "1931890"
  },
  {
    "text": "Studio you've seen this extension for using visual 0 using github in Visual",
    "start": "1931890",
    "end": "1937200"
  },
  {
    "text": "Studio that extension is actually written in reactive UI and the full source code of that visual studio",
    "start": "1937200",
    "end": "1943320"
  },
  {
    "text": "plug-in which is in the visual studio store installer is there so you even wanted like a reference implementation",
    "start": "1943320",
    "end": "1949920"
  },
  {
    "text": "of how to unit test house over balls what does like how do I do",
    "start": "1949920",
    "end": "1956730"
  },
  {
    "text": "oh tap authentication or like - if a in a reactive manner every feature you see",
    "start": "1956730",
    "end": "1963540"
  },
  {
    "text": "there is right there in that source code very very easy and that helps a lot of people live with the transition is",
    "start": "1963540",
    "end": "1969570"
  },
  {
    "text": "seeing a fully fledged enterprise application that's supporting production source codes there in addition we",
    "start": "1969570",
    "end": "1976980"
  },
  {
    "start": "1976000",
    "end": "2241000"
  },
  {
    "text": "started collecting a lot of these videos this video and this progress presentation today will be there",
    "start": "1976980",
    "end": "1982110"
  },
  {
    "text": "eventually likewise we've been starting to run virtual meetups",
    "start": "1982110",
    "end": "1987640"
  },
  {
    "text": "so we gain people all around the world and we're learning reactive programming together then one of the best ways of",
    "start": "1987640",
    "end": "1994210"
  },
  {
    "text": "learning reactor program is just having someone there to teach you it's it's just having someone to ask that question",
    "start": "1994210",
    "end": "2000000"
  },
  {
    "text": "to what if because you have to start thinking in a different manner so I have",
    "start": "2000000",
    "end": "2006809"
  },
  {
    "text": "people who have joined in from Brazil a remote place in France Rio - been in",
    "start": "2006809",
    "end": "2014450"
  },
  {
    "text": "Congo it's amazing virtual meetups are going to start",
    "start": "2014450",
    "end": "2020220"
  },
  {
    "text": "become more and more of a thing because for advanced technologies because there",
    "start": "2020220",
    "end": "2026010"
  },
  {
    "text": "still isn't enough critical mass in thinking to hold a local meetup but there are people all around the world",
    "start": "2026010",
    "end": "2031080"
  },
  {
    "text": "who want to learn these techniques so we run these meetups online and the format's working the all means project",
    "start": "2031080",
    "end": "2039450"
  },
  {
    "text": "is also doing this as well really cool really cool and kind of enter into the",
    "start": "2039450",
    "end": "2047790"
  },
  {
    "text": "future of T of Education to make reactive programming easier is I think",
    "start": "2047790",
    "end": "2055679"
  },
  {
    "text": "we need to get reactive UI into the web browser not to write applications but",
    "start": "2055679",
    "end": "2061679"
  },
  {
    "text": "just for education I want someone to be able to use reactive UI with actually",
    "start": "2061679",
    "end": "2068368"
  },
  {
    "text": "without having to download a solution where how to compile something without having to load up link pad just click a",
    "start": "2068369",
    "end": "2073800"
  },
  {
    "text": "link and you're running dotnet in your web browser so Miguel last week said I",
    "start": "2073800",
    "end": "2079260"
  },
  {
    "text": "love web assembly so I nagged him a little bit and said xamarin workbooks needs to run in the",
    "start": "2079260",
    "end": "2085080"
  },
  {
    "text": "web browser and he goes that guy has an ax man with a plan so it's not official product",
    "start": "2085080",
    "end": "2091080"
  },
  {
    "text": "announcement but they're thinking about it then a couple days ago this happened",
    "start": "2091080",
    "end": "2097430"
  },
  {
    "text": "dotnet is now running in the web browser there was a presentation here two days ago on blazer no blazer is not mono",
    "start": "2097430",
    "end": "2106770"
  },
  {
    "text": "it's a it's a small implementation you can't run everything that you expect in",
    "start": "2106770",
    "end": "2112109"
  },
  {
    "text": "dotnet mono is now running in your browser which is like the next logical",
    "start": "2112109",
    "end": "2118109"
  },
  {
    "text": "step so I run a newsletter weakly xamarin calm if you want to keep",
    "start": "2118109",
    "end": "2123570"
  },
  {
    "text": "up to date we've liked how this is progressing these advancements sign up there it's just like it like a",
    "start": "2123570",
    "end": "2129450"
  },
  {
    "text": "newsletter to you from me okay because the classic way of teaching reactive",
    "start": "2129450",
    "end": "2137790"
  },
  {
    "text": "programming is using marble diagrams and all the innovative ways of teaching",
    "start": "2137790",
    "end": "2143510"
  },
  {
    "text": "reactive programming is all in JavaScript now the problem with JavaScript if your net developer is well",
    "start": "2143510",
    "end": "2151530"
  },
  {
    "text": "that's cool you tell you tell me what that is but I can't really see the implementation I can't really understand",
    "start": "2151530",
    "end": "2156600"
  },
  {
    "text": "that and if this continues to advance in this direction we will soon be able to",
    "start": "2156600",
    "end": "2169040"
  },
  {
    "text": "have soon be a toehold training educational resources to teach reactive",
    "start": "2169040",
    "end": "2175080"
  },
  {
    "text": "programming but on the left hand side instead of rxjs and interesting enough that is observable from event handler that's the",
    "start": "2175080",
    "end": "2182040"
  },
  {
    "text": "JavaScript implementation in rxjs will soon be able to teach reactive programming in dotnet in the web browser",
    "start": "2182040",
    "end": "2188850"
  },
  {
    "text": "without the user having to do anything and that's going to unlock a lot of",
    "start": "2188850",
    "end": "2194130"
  },
  {
    "text": "things as far as developer experience and making it more accessible so here we have a we have a text box any to win any",
    "start": "2194130",
    "end": "2202850"
  },
  {
    "text": "value in that text box changes I'm going to draw a marble and that marble",
    "start": "2202850",
    "end": "2207990"
  },
  {
    "text": "represents the keystroke that I press and that's not working so when you a",
    "start": "2207990",
    "end": "2216470"
  },
  {
    "text": "marble diagram represents a sequence of changes over time so what was meant to",
    "start": "2216470",
    "end": "2221790"
  },
  {
    "text": "happen here in the animation is when I press a key when I press a letter the letter is shown and it just goes back if",
    "start": "2221790",
    "end": "2228780"
  },
  {
    "text": "I press the next character the marble shown it just goes back it's a way of modeling the world it's very very",
    "start": "2228780",
    "end": "2235920"
  },
  {
    "text": "powerful teaching implement so",
    "start": "2235920",
    "end": "2243910"
  },
  {
    "start": "2241000",
    "end": "2409000"
  },
  {
    "text": "there's a huge community behind reactor program we all kind of hang out together like the rxjs community in the reactive",
    "start": "2243910",
    "end": "2252040"
  },
  {
    "text": "UI community we're in one we're in the same slack instance we see we sit there",
    "start": "2252040",
    "end": "2257770"
  },
  {
    "text": "in one channel they sit there in the other channel and if you're looking to",
    "start": "2257770",
    "end": "2263290"
  },
  {
    "text": "get started and open source you want to learn reactor programming I invite you to come join us",
    "start": "2263290",
    "end": "2269490"
  },
  {
    "text": "come join us there's so many ways to help out and open source and if you help",
    "start": "2269490",
    "end": "2276490"
  },
  {
    "text": "out we'll pay it forward on that on the off chance that you also will pay it forward to the next person because the",
    "start": "2276490",
    "end": "2282400"
  },
  {
    "text": "best way to learn it is together and some of the best ways to contribute open source are non code related there was a",
    "start": "2282400",
    "end": "2289720"
  },
  {
    "text": "recent survey by a github that says documentation is highly valued but often",
    "start": "2289720",
    "end": "2296260"
  },
  {
    "text": "overlooked often often overlooked and last last month have been working on",
    "start": "2296260",
    "end": "2303490"
  },
  {
    "text": "building out the reactive UI documentation and in particular is that there's a contributing guide now there's",
    "start": "2303490",
    "end": "2310720"
  },
  {
    "text": "even a there's even a guide for grammar voice and tone because reactive UI is",
    "start": "2310720",
    "end": "2317830"
  },
  {
    "text": "standard generate revenue and we're looking at maybe we can hire someone as a tech writer overseas with a limited",
    "start": "2317830",
    "end": "2324490"
  },
  {
    "text": "budget that we have but first they need to have some guides for contributing so I've been mashing out this documentation",
    "start": "2324490",
    "end": "2330850"
  },
  {
    "text": "but not really following those guidelines and people are sending in",
    "start": "2330850",
    "end": "2336010"
  },
  {
    "text": "pull requests and being my editors it's great it's I can't even explain it it's",
    "start": "2336010",
    "end": "2343420"
  },
  {
    "text": "like the best thing in the world you want you want to make it maintainer happy fix the spelling mistake it's easy to review easy to approve you've made a",
    "start": "2343420",
    "end": "2351130"
  },
  {
    "text": "contribution it's better you've helped me we love it helped write documentation",
    "start": "2351130",
    "end": "2357040"
  },
  {
    "text": "spelling mistakes grab our you name it even if you gets tiny it's everything it's the best thing to fix",
    "start": "2357040",
    "end": "2363900"
  },
  {
    "text": "so I'm thank you for joining me here today mentioned before I'm broadcasting",
    "start": "2363900",
    "end": "2370870"
  },
  {
    "text": "on YouTube sharing my knowledge unlike Brendon who was able to offer one",
    "start": "2370870",
    "end": "2376330"
  },
  {
    "text": "direct one-on-one some of the things I've got planned in the roadmap I need to need to be scalable",
    "start": "2376330",
    "end": "2381700"
  },
  {
    "text": "I've always as a maintainer I'll burn out so anytime you ask me a question I'm",
    "start": "2381700",
    "end": "2387160"
  },
  {
    "text": "going to create a video or broadcast live like the answer for it because other people also going to ask those",
    "start": "2387160",
    "end": "2393400"
  },
  {
    "text": "questions so I'll direct them to that resource so with that in play thank you",
    "start": "2393400",
    "end": "2399220"
  },
  {
    "text": "very much [Applause]",
    "start": "2399220",
    "end": "2407538"
  }
]