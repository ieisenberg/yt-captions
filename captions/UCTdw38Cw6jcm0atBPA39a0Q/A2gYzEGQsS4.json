[
  {
    "text": "so we're here to talk about property based testing can can you can the people on",
    "start": "4000",
    "end": "10400"
  },
  {
    "text": "the back can you read what is written here and read this yes fine thank you",
    "start": "10400",
    "end": "18640"
  },
  {
    "text": "so what is a property who here does test today who who here raise your hand if today you do",
    "start": "19600",
    "end": "27119"
  },
  {
    "text": "tests in your code okay to everyone else this will be a little bit awkward in the",
    "start": "27119",
    "end": "33399"
  },
  {
    "text": "beginning but do stay uh what is a property what is the go what what is a",
    "start": "33399",
    "end": "40879"
  },
  {
    "text": "property someone h a predicate a PR oh that's the first",
    "start": "40879",
    "end": "48039"
  },
  {
    "text": "time I have this answer a",
    "start": "48039",
    "end": "53359"
  },
  {
    "text": "predicate from do be typos the there's something in the the the there is",
    "start": "53359",
    "end": "60680"
  },
  {
    "text": "for the purpose of this talk I'll use the very false definition",
    "start": "60680",
    "end": "67159"
  },
  {
    "text": "that a property is something that is always",
    "start": "67159",
    "end": "75119"
  },
  {
    "text": "true this is a lie but let's go with the that that lie for now",
    "start": "75119",
    "end": "80680"
  },
  {
    "text": "okay uh when I when I say this people us to ask okay so what is an invariant",
    "start": "80680",
    "end": "91078"
  },
  {
    "text": "and what is a",
    "start": "91799",
    "end": "96640"
  },
  {
    "text": "toy well it's something that is always true right it all depends on context a",
    "start": "96920",
    "end": "103520"
  },
  {
    "text": "thology is always always true there is no context to it you you you descend",
    "start": "103520",
    "end": "112240"
  },
  {
    "text": "towards downwards that that's a topology that's always true if if you were not",
    "start": "112240",
    "end": "117799"
  },
  {
    "text": "going downwards you were not descending that's by fet so this seems useless now",
    "start": "117799",
    "end": "123240"
  },
  {
    "text": "but I'll go back to this later in the presentation uh",
    "start": "123240",
    "end": "129319"
  },
  {
    "text": "so the whole idea of property based testing is testing things you think are",
    "start": "129319",
    "end": "135319"
  },
  {
    "text": "always true into your code okay so it's kind of a",
    "start": "135319",
    "end": "141440"
  },
  {
    "text": "bet property based testing is kind of a bet it's like",
    "start": "141440",
    "end": "148120"
  },
  {
    "text": "Insurance you bet that your apartment",
    "start": "148480",
    "end": "153680"
  },
  {
    "text": "will be on fire this month and the insurance company bets",
    "start": "153680",
    "end": "161440"
  },
  {
    "text": "that it want and you're happy to lose that bet okay property based testing is",
    "start": "161440",
    "end": "168319"
  },
  {
    "text": "exactly that okay the whole idea behind it is",
    "start": "168319",
    "end": "174280"
  },
  {
    "text": "that you you try to push something it try to describe in the form of away we",
    "start": "174280",
    "end": "180239"
  },
  {
    "text": "will see this together a little bit further in code you try to you you try to describe something",
    "start": "180239",
    "end": "187879"
  },
  {
    "text": "that you think is always true in your code and the framework tries to find a",
    "start": "187879",
    "end": "193560"
  },
  {
    "text": "counter example tries to proves you false",
    "start": "193560",
    "end": "199319"
  },
  {
    "text": "okay so hi everyone I'm Romeo you can find me on Twitter at MAF",
    "start": "199319",
    "end": "207879"
  },
  {
    "text": "and I also happen to organize little conference in Paris that you should come to I'm this dude here this douchebag",
    "start": "207879",
    "end": "214599"
  },
  {
    "text": "here that you can find on Twitter",
    "start": "214599",
    "end": "218799"
  },
  {
    "text": "so most of you have ever done T who have ever done a cata here you know what AATA",
    "start": "221319",
    "end": "226599"
  },
  {
    "text": "is okay to everyone else AATA is a small a really small uh",
    "start": "226599",
    "end": "233959"
  },
  {
    "text": "exercise that you do and do and redo again so as for it to become kind of a",
    "start": "233959",
    "end": "240640"
  },
  {
    "text": "base movement towards a larger movement you get build up it when you do this",
    "start": "240640",
    "end": "246319"
  },
  {
    "text": "small thing so there is a a cutter here I will not go into the solution just the test for it is the bowling cutter which",
    "start": "246319",
    "end": "253920"
  },
  {
    "text": "I'm using this presentation who here has ever done the bowling cutter okay who",
    "start": "253920",
    "end": "259239"
  },
  {
    "text": "here has ever played bowling most of you that's good that",
    "start": "259239",
    "end": "264919"
  },
  {
    "text": "that will be quicker so if I were to do the bowling the bowling cut is just just",
    "start": "264919",
    "end": "270759"
  },
  {
    "text": "calculating the score of a a single person playing bowling for a whole uh a whole plane of",
    "start": "270759",
    "end": "278600"
  },
  {
    "text": "bowling and if I were to go towards this using tdd everybody see what this DD tdd",
    "start": "278600",
    "end": "285440"
  },
  {
    "text": "test driven development okay uh I will start with a test so my first naive test",
    "start": "285440",
    "end": "290639"
  },
  {
    "text": "would be wow a fluke I played bowling and I had no points at all and the score",
    "start": "290639",
    "end": "296680"
  },
  {
    "text": "is zero which incidentally is C I already have in real",
    "start": "296680",
    "end": "302759"
  },
  {
    "text": "life so you do the zero and if you do in tdg",
    "start": "302759",
    "end": "308000"
  },
  {
    "text": "what you will do at this point is your solution will just be return zero right",
    "start": "308000",
    "end": "313360"
  },
  {
    "text": "and you try to iterate over that and you go to okay I have some",
    "start": "313360",
    "end": "319000"
  },
  {
    "text": "points and the whole point of playing balling is that you have like 10 frames",
    "start": "319000",
    "end": "324199"
  },
  {
    "text": "in a in a bowling play and each each frame you try to throw your balls and",
    "start": "324199",
    "end": "330440"
  },
  {
    "text": "you have like at maximum two balls in a frame and each time you try to go make",
    "start": "330440",
    "end": "337400"
  },
  {
    "text": "go down 10 pins all right you know score is the number of pin score for a frame is the number of pins you went down so",
    "start": "337400",
    "end": "344960"
  },
  {
    "text": "here we have a frame I have two pins and another frame I have one pin and another frame I have one pin and the score is",
    "start": "344960",
    "end": "351880"
  },
  {
    "text": "the sum of all that and you have special case if all",
    "start": "351880",
    "end": "356960"
  },
  {
    "text": "the pins go down I'll have a there three and seven all 10 pins went down so my",
    "start": "356960",
    "end": "364039"
  },
  {
    "text": "score is the next ball to this Frame so 371 and again for the next frame one and",
    "start": "364039",
    "end": "371440"
  },
  {
    "text": "zero okay and I have a strike when all the balls went down while the pins went down",
    "start": "371440",
    "end": "377639"
  },
  {
    "text": "for a single ball so the frame is finished because I can I have no pins",
    "start": "377639",
    "end": "383000"
  },
  {
    "text": "left to go down and the next two balls go into my",
    "start": "383000",
    "end": "388560"
  },
  {
    "text": "score and you have the perfect game where you did only per only perfect throws and",
    "start": "388560",
    "end": "396840"
  },
  {
    "text": "everything always was a strike which incidentally is a score I never had in real",
    "start": "396840",
    "end": "402560"
  },
  {
    "text": "life so thing is you who would have that test",
    "start": "402560",
    "end": "408880"
  },
  {
    "text": "coverage so raise your hand if your test today resemble",
    "start": "408880",
    "end": "414960"
  },
  {
    "text": "this you Liars I I I I know you're lying I know",
    "start": "414960",
    "end": "420599"
  },
  {
    "text": "you're lying your test today resemble this right be honest with you your test",
    "start": "420599",
    "end": "427120"
  },
  {
    "text": "today are way way nearer this than they are to this",
    "start": "427120",
    "end": "435000"
  },
  {
    "text": "okay we will go back to this test later for for the moment here uh let's go just",
    "start": "435360",
    "end": "442240"
  },
  {
    "text": "remain in this paradise land here where we are really primitivist and know our",
    "start": "442240",
    "end": "447520"
  },
  {
    "text": "test can be very simple and I'll go back to this a little bit later in the presentation okay but I want you to be",
    "start": "447520",
    "end": "454319"
  },
  {
    "text": "able to do PBT with real tests so this is the end goal all",
    "start": "454319",
    "end": "460879"
  },
  {
    "text": "right so is remarkable here is that we have",
    "start": "461639",
    "end": "467479"
  },
  {
    "text": "this whole situation of my test is just input and outputs",
    "start": "467479",
    "end": "474080"
  },
  {
    "text": "this input give this output this input give this output this input give this output we only doing this from this",
    "start": "474080",
    "end": "480159"
  },
  {
    "text": "point on in this kind of test here and and this is the same thing input",
    "start": "480159",
    "end": "487840"
  },
  {
    "text": "output input output uh who here has ever done paramet",
    "start": "487840",
    "end": "496400"
  },
  {
    "text": "testing you know okay for the everyone else this is paramed",
    "start": "496400",
    "end": "504000"
  },
  {
    "text": "testing I just took those tests here and say hey those",
    "start": "504000",
    "end": "509759"
  },
  {
    "text": "tests here are the same really you just think test in the nominal case and actually those those two tests",
    "start": "509759",
    "end": "517880"
  },
  {
    "text": "here are the same and those two tests three tests here are the same so I kind of have only three tests really and I",
    "start": "517880",
    "end": "524600"
  },
  {
    "text": "did not want all them to be sparsely oh all the name sucks that's that that's",
    "start": "524600",
    "end": "531320"
  },
  {
    "text": "that that is a reason behind it I only did all full names for my tests in the this whole presentation and we will go",
    "start": "531320",
    "end": "538079"
  },
  {
    "text": "why later and thing",
    "start": "538079",
    "end": "543360"
  },
  {
    "text": "is I started to put them together I say I can pass these inputs here as",
    "start": "547720",
    "end": "553839"
  },
  {
    "text": "parameters to a test but when I do this I could I",
    "start": "553839",
    "end": "559720"
  },
  {
    "text": "could just pass as parameters my my throwing my ball thrown",
    "start": "559720",
    "end": "567320"
  },
  {
    "text": "and my score right but if I do that then easily I could put",
    "start": "567320",
    "end": "573399"
  },
  {
    "text": "all my tests in a single test and then is not very useful",
    "start": "573399",
    "end": "578920"
  },
  {
    "text": "anymore I just would just compress all the test together and they lose meaning I am losing something when I do that",
    "start": "578920",
    "end": "586120"
  },
  {
    "text": "it's just putting everything together in a single test so what I usually do when I do",
    "start": "586120",
    "end": "592519"
  },
  {
    "text": "param testing is that I only pass one thing in parameters either one of the",
    "start": "592519",
    "end": "597720"
  },
  {
    "text": "inputs I mean I I I leave I leave at least one thing fixed either one of the",
    "start": "597720",
    "end": "602880"
  },
  {
    "text": "inputs or the output is fixed in this case I I parameterized the inputs but",
    "start": "602880",
    "end": "610040"
  },
  {
    "text": "left the outputs in the test itself so when I do this what I have to write",
    "start": "610040",
    "end": "617360"
  },
  {
    "text": "here is a behavior I went from input output to input",
    "start": "617360",
    "end": "624839"
  },
  {
    "text": "Behavior and the nature itself of the test just changed",
    "start": "624839",
    "end": "631079"
  },
  {
    "text": "okay the nature just changed this test is not the same anymore because in this test here just pretend you never played",
    "start": "631079",
    "end": "639639"
  },
  {
    "text": "balling how much time would you take to infer the rules of balling just by",
    "start": "639639",
    "end": "644880"
  },
  {
    "text": "reading those tests it will take time it would take",
    "start": "644880",
    "end": "651839"
  },
  {
    "text": "time because you would have to read this and try to understand what does it mean",
    "start": "651839",
    "end": "657639"
  },
  {
    "text": "that what does this example mean and why I wrote very bad test names because",
    "start": "657639",
    "end": "663079"
  },
  {
    "text": "usually when I say this people say oh you just have to have better test names right but the thing is you cannot",
    "start": "663079",
    "end": "673200"
  },
  {
    "text": "rely on your names all the time there is a subjectivity to those",
    "start": "673200",
    "end": "678680"
  },
  {
    "text": "names and your good name is the a bad name to someone else that's why I I put you in the situation where the name was",
    "start": "678680",
    "end": "684959"
  },
  {
    "text": "bad already okay names are good I'm not saying you should not name things don't",
    "start": "684959",
    "end": "690279"
  },
  {
    "text": "take as a key as a take away from this presentation that you should not name things in the best way you can you",
    "start": "690279",
    "end": "696560"
  },
  {
    "text": "should you totally should but you cannot rely completely on",
    "start": "696560",
    "end": "702040"
  },
  {
    "text": "names and uh as soon as you accept",
    "start": "702040",
    "end": "706560"
  },
  {
    "text": "that then this is archaeology and you're doing that archaeology all the time if",
    "start": "707360",
    "end": "712839"
  },
  {
    "text": "you do code for a living you doing their archaeology all the time who here really",
    "start": "712839",
    "end": "717959"
  },
  {
    "text": "thinks you know all the business rule of your code right not a single hand up that",
    "start": "717959",
    "end": "726760"
  },
  {
    "text": "that's always the case nobody is crazy enough to think that and so at some",
    "start": "726760",
    "end": "733279"
  },
  {
    "text": "point it's not a matter of if it's when at some point you will do archaeology",
    "start": "733279",
    "end": "739120"
  },
  {
    "text": "you will try to find your business rule by reading your tests if you have",
    "start": "739120",
    "end": "745399"
  },
  {
    "text": "tests and and it will Begin by looking oh what those inputs have in common what",
    "start": "745399",
    "end": "752120"
  },
  {
    "text": "they have different what does this mean and here I I tried to help I could have",
    "start": "752120",
    "end": "758360"
  },
  {
    "text": "put four right in my test I I I tried to put the sum to show people there was",
    "start": "758360",
    "end": "763959"
  },
  {
    "text": "something going on right so people still have to read this and",
    "start": "763959",
    "end": "771160"
  },
  {
    "text": "try to understand what What's Happening Here I went from input to Output from in",
    "start": "771160",
    "end": "777920"
  },
  {
    "text": "to inputs to be behaviors what is happening here is that in this",
    "start": "777920",
    "end": "784560"
  },
  {
    "text": "line I described the business",
    "start": "784560",
    "end": "789040"
  },
  {
    "text": "rule you don't have to infer anymore what is the business rule is just",
    "start": "789680",
    "end": "795600"
  },
  {
    "text": "describe it in the test itself and that's neat that's very",
    "start": "795600",
    "end": "802760"
  },
  {
    "text": "neat the this still have problems do do you see problems with this test",
    "start": "802760",
    "end": "807959"
  },
  {
    "text": "here there there's several problems do you see",
    "start": "807959",
    "end": "813040"
  },
  {
    "text": "any sorry okay it's not",
    "start": "813040",
    "end": "820440"
  },
  {
    "text": "exact why no it's only for the nominals right",
    "start": "820440",
    "end": "828600"
  },
  {
    "text": "it's just one of the logical branches is not to try to put everything there right",
    "start": "828600",
    "end": "833920"
  },
  {
    "text": "and readability yeah yeah I mean it's not very different from before",
    "start": "833920",
    "end": "839880"
  },
  {
    "text": "but readability still sucks right because I still have this problem the problem of finding what do these have in",
    "start": "839880",
    "end": "847000"
  },
  {
    "text": "common right this is true a problem",
    "start": "847000",
    "end": "852519"
  },
  {
    "text": "and and well this score is between for a nominal strike for for something as N",
    "start": "852519",
    "end": "858880"
  },
  {
    "text": "Strike not a spare is between zero and 90 not three around he this the perfect",
    "start": "858880",
    "end": "864959"
  },
  {
    "text": "strike and also I had to have this problem before but 10",
    "start": "864959",
    "end": "871880"
  },
  {
    "text": "is the maximum number of pens not 12 and the problem was there",
    "start": "871880",
    "end": "878040"
  },
  {
    "text": "before was just just not very V visible and and",
    "start": "878040",
    "end": "884880"
  },
  {
    "text": "also it sucks writing this I I'm I'm lazy I'm very lazy as person goes and I",
    "start": "884880",
    "end": "891040"
  },
  {
    "text": "I don't like writing this uh those are the kinds of problems",
    "start": "891040",
    "end": "897240"
  },
  {
    "text": "I have with with this approach so we can give another approach which is I go from",
    "start": "897240",
    "end": "906759"
  },
  {
    "text": "here to this now assuming you never have never seen",
    "start": "908279",
    "end": "914560"
  },
  {
    "text": "property based test this is a property based test assuming you have never seen a property based test part of you right",
    "start": "914560",
    "end": "919800"
  },
  {
    "text": "now is just think is just unfamiliar with it don't don't confound",
    "start": "919800",
    "end": "925360"
  },
  {
    "text": "unfamiliarity with this suck okay uh that that that's a very human thing",
    "start": "925360",
    "end": "932279"
  },
  {
    "text": "to do I mean you can search confirmation biases and something like that but uh",
    "start": "932279",
    "end": "938279"
  },
  {
    "text": "don't don't don't confound the the two of them give give it open your mind a little okay there are several unfamiliar",
    "start": "938279",
    "end": "944800"
  },
  {
    "text": "terms here for you and this I this is the point where I explain I'm doing all",
    "start": "944800",
    "end": "949880"
  },
  {
    "text": "this in Java 6 not because I like Java 6 I'm not that",
    "start": "949880",
    "end": "956120"
  },
  {
    "text": "mist I is because I want usually when people talk about property based tests",
    "start": "956120",
    "end": "962480"
  },
  {
    "text": "they they tell themselves oh this is just for FP people right so I'm trying to",
    "start": "962480",
    "end": "969959"
  },
  {
    "text": "prove a point here no this is for everyone no matter what language you're doing today you can do this today in",
    "start": "969959",
    "end": "977519"
  },
  {
    "text": "your legacy codebase I my my goal here for you to start doing this",
    "start": "977519",
    "end": "982639"
  },
  {
    "text": "Monday okay and so I'm doing this with Java six to show that even language that",
    "start": "982639",
    "end": "989519"
  },
  {
    "text": "suck you can still do this and",
    "start": "989519",
    "end": "995560"
  },
  {
    "text": "uh I have done this in bash it's possible with every language",
    "start": "995639",
    "end": "1001920"
  },
  {
    "text": "ever okay I I I try not to put the bash into",
    "start": "1001920",
    "end": "1007160"
  },
  {
    "text": "the presentation because it becomes crazy after that uh uh the second thing I want you to",
    "start": "1007160",
    "end": "1014279"
  },
  {
    "text": "believe today to show you today is that people when they usually see tutoial about property based testing they stop",
    "start": "1014279",
    "end": "1022560"
  },
  {
    "text": "at mathematical properties I mean usually you have that those examples or",
    "start": "1022560",
    "end": "1027600"
  },
  {
    "text": "examples I hate those examples where they try to put property based stats around the",
    "start": "1027600",
    "end": "1032760"
  },
  {
    "text": "sum the addition operation and tells you okay you can test for associativity and",
    "start": "1032760",
    "end": "1039918"
  },
  {
    "text": "commutativity and and awesome and usually people at this point stop",
    "start": "1039919",
    "end": "1045600"
  },
  {
    "text": "reading the tutorial and say well I don't do this in real life well fair",
    "start": "1045600",
    "end": "1052799"
  },
  {
    "text": "enough I think you should I I mean testing for associativity is awesome and you should try to strive for it in",
    "start": "1052799",
    "end": "1059520"
  },
  {
    "text": "everything you do but fair enough you don't do this today in real life what I want you to understand today and we will",
    "start": "1059520",
    "end": "1066080"
  },
  {
    "text": "not go on those mathematical uh properties as much as I love them we will not go into them today what I want",
    "start": "1066080",
    "end": "1072679"
  },
  {
    "text": "to show you today is that your business domain is filled with properties and you",
    "start": "1072679",
    "end": "1077799"
  },
  {
    "text": "should at least test those okay that's the go",
    "start": "1077799",
    "end": "1084159"
  },
  {
    "text": "here and here what I'm say when I say me let's put random inputs that obey these",
    "start": "1084159",
    "end": "1092480"
  },
  {
    "text": "assumptions those keywords here is pure gunit X unit I mean no matter what",
    "start": "1092480",
    "end": "1097840"
  },
  {
    "text": "you're doing with unit testings today you have them you have some form of assertion of some form of assumption",
    "start": "1097840",
    "end": "1104640"
  },
  {
    "text": "this is not particular to property based testing they just exist and this one is",
    "start": "1104640",
    "end": "1109760"
  },
  {
    "text": "very R used but exist on your framework today if you do xunit n unit Etc you",
    "start": "1109760",
    "end": "1115480"
  },
  {
    "text": "have that you already have that uh an assumption when it's false",
    "start": "1115480",
    "end": "1121280"
  },
  {
    "text": "the test does not fail it is ignored an assertion when it false the test fails",
    "start": "1121280",
    "end": "1128720"
  },
  {
    "text": "okay so what I doing here is I'm doing Pro like paramed testing but I generate",
    "start": "1128720",
    "end": "1136039"
  },
  {
    "text": "the parameters uh randomly and I give assumptions about them as",
    "start": "1136039",
    "end": "1143480"
  },
  {
    "text": "soon as I have the spr recites if they are true then I should have those those invariant and post",
    "start": "1143480",
    "end": "1151720"
  },
  {
    "text": "requirements have you heard about contract programming okay IO and other things",
    "start": "1151720",
    "end": "1158400"
  },
  {
    "text": "like this uh it the idea is a is is very",
    "start": "1158400",
    "end": "1164240"
  },
  {
    "text": "similar you try to describe a little bit of formal reasoning saying well when",
    "start": "1164240",
    "end": "1169320"
  },
  {
    "text": "this is true in the beginning this should be true in the end but in",
    "start": "1169320",
    "end": "1174919"
  },
  {
    "text": "concrete programming you're doing this with your code here you're doing this with your tests and even if the and",
    "start": "1174919",
    "end": "1182840"
  },
  {
    "text": "never showing the code for the Bing is actually alha code you don't care even",
    "start": "1182840",
    "end": "1188400"
  },
  {
    "text": "if the code never took this in consideration you can still do property based testing",
    "start": "1188400",
    "end": "1195360"
  },
  {
    "text": "okay so what I say here here and this is an awful property and the whole goal here",
    "start": "1195360",
    "end": "1201480"
  },
  {
    "text": "is to do best better than today not to do the best thing ever this is an awful property it shows a weakness that we",
    "start": "1201480",
    "end": "1209559"
  },
  {
    "text": "have a serious weakness that we have we are very primitivist into in in our",
    "start": "1209559",
    "end": "1217200"
  },
  {
    "text": "solution to this problem and because we are very primitivist it's very hard to",
    "start": "1217200",
    "end": "1223840"
  },
  {
    "text": "describe uh all the cases where the where we are not a strike or SP",
    "start": "1223840",
    "end": "1229919"
  },
  {
    "text": "I mean it's very easy to describe it but you would end up putting a little",
    "start": "1229919",
    "end": "1237159"
  },
  {
    "text": "bit of the solution into the test and you should never do that that's also the problem here with",
    "start": "1237159",
    "end": "1243679"
  },
  {
    "text": "when you are not in the nominal case when you try to test spares and",
    "start": "1243679",
    "end": "1250600"
  },
  {
    "text": "Strikes you cannot really put the rule of a spare of strike into the test",
    "start": "1250640",
    "end": "1256000"
  },
  {
    "text": "without putting the code of the solution soltion to the test itself you have our",
    "start": "1256000",
    "end": "1261280"
  },
  {
    "text": "AA weak property you cannot just do this beautiful thing like we did here and",
    "start": "1261280",
    "end": "1266679"
  },
  {
    "text": "compress all the example based testing together to do a property based",
    "start": "1266679",
    "end": "1271840"
  },
  {
    "text": "test it's not always possible that's the only drawback of property based testing",
    "start": "1271840",
    "end": "1277279"
  },
  {
    "text": "I can think of you cannot use it everywhere to do every test you have to",
    "start": "1277279",
    "end": "1282840"
  },
  {
    "text": "compose it with other kinds of testing and weaker kinds of testing what why why should I never put",
    "start": "1282840",
    "end": "1290120"
  },
  {
    "text": "the solution into the test",
    "start": "1290120",
    "end": "1293919"
  },
  {
    "text": "itself yes because now I have a topology I'm testing that the program have the",
    "start": "1296880",
    "end": "1303480"
  },
  {
    "text": "same behavior as itself well friends the program will have the same behavior as",
    "start": "1303480",
    "end": "1310080"
  },
  {
    "text": "itself you can trust that you don't need to test that one",
    "start": "1310080",
    "end": "1315559"
  },
  {
    "text": "so uh you don't want to put the solution code into the test test should never",
    "start": "1315559",
    "end": "1322919"
  },
  {
    "text": "roam in the domain of solutions it should only roam in domain of real of",
    "start": "1322919",
    "end": "1330360"
  },
  {
    "text": "problems code can roam in the domain of solutions and problems I don't care about that but test should remain in the",
    "start": "1330360",
    "end": "1336960"
  },
  {
    "text": "domain of problems you're describing a problem a behavior you're not describing",
    "start": "1336960",
    "end": "1342080"
  },
  {
    "text": "how to do it because as soon as you start describing how to do it if finished you",
    "start": "1342080",
    "end": "1349360"
  },
  {
    "text": "topological is always true and to avoid",
    "start": "1349360",
    "end": "1355760"
  },
  {
    "text": "that we'd end up creating those tests that okay just describes a behavior here",
    "start": "1355760",
    "end": "1363039"
  },
  {
    "text": "and what I start seeing here is a pattern every time I try to do my test I",
    "start": "1363039",
    "end": "1368200"
  },
  {
    "text": "say oh I I want things between this and this size and this size and I want to",
    "start": "1368200",
    "end": "1373360"
  },
  {
    "text": "have at at this number of balls thrown",
    "start": "1373360",
    "end": "1379279"
  },
  {
    "text": "and it appears on all my tests what what I seen here is that",
    "start": "1379279",
    "end": "1385159"
  },
  {
    "text": "property based testing showing me that I have a value type that is not",
    "start": "1385159",
    "end": "1392279"
  },
  {
    "text": "created that's that's the goal that's the denunciation every test help you",
    "start": "1393400",
    "end": "1399360"
  },
  {
    "text": "reason that's the goal of testing helping you reason about code and to test history reason",
    "start": "1399360",
    "end": "1410360"
  },
  {
    "text": "when I when I try to convince people to do tdj I not hoping that TD will be a",
    "start": "1410360",
    "end": "1418679"
  },
  {
    "text": "miracle and we give them the be the best code ever or will give them a good design by itself or if a sound designed",
    "start": "1418679",
    "end": "1425760"
  },
  {
    "text": "by itself it won't but just by doing normal test just",
    "start": "1425760",
    "end": "1431919"
  },
  {
    "text": "by doing this test here ju if the person does this just",
    "start": "1431919",
    "end": "1437480"
  },
  {
    "text": "this there are Huges amounts of problems with code that will",
    "start": "1437480",
    "end": "1445039"
  },
  {
    "text": "become harder to do we become a uh the lazier path would be not to do them and",
    "start": "1445039",
    "end": "1451400"
  },
  {
    "text": "so people will stop doing them have you ever red code that is has a single class",
    "start": "1451400",
    "end": "1458360"
  },
  {
    "text": "that should be 50 classes I have had that if that person",
    "start": "1458360",
    "end": "1465919"
  },
  {
    "text": "did C it would be so boring to do this that the person would end up",
    "start": "1465919",
    "end": "1471360"
  },
  {
    "text": "creating several classes maybe it will not be perfect maybe it will still be very bad code M",
    "start": "1471360",
    "end": "1478919"
  },
  {
    "text": "but it won't be that bad that that extreme is not will not be done anymore",
    "start": "1478919",
    "end": "1485440"
  },
  {
    "text": "because it would be the harder thing to do you change the economies of what is",
    "start": "1485440",
    "end": "1490760"
  },
  {
    "text": "hard to do and what is easy to do when you do that so",
    "start": "1490760",
    "end": "1498720"
  },
  {
    "text": "when you do property based tests primitivism itself becomes harder",
    "start": "1498720",
    "end": "1506360"
  },
  {
    "text": "to do becomes more expensive because you end up having to repeat all the constraints of all your",
    "start": "1506360",
    "end": "1514520"
  },
  {
    "text": "value types all around your tests and the pattern keeps emerging and you keep",
    "start": "1514520",
    "end": "1520960"
  },
  {
    "text": "seeing I have a problem with my design it will not solve all the problems of primitivism ever but several of them",
    "start": "1520960",
    "end": "1528799"
  },
  {
    "text": "will become more expensive and that's a good",
    "start": "1528799",
    "end": "1534120"
  },
  {
    "text": "thing that's influences design and and I I I always have people saying oh yeah",
    "start": "1534679",
    "end": "1540760"
  },
  {
    "text": "but I don't want to change my design just for my tests but the thing",
    "start": "1540760",
    "end": "1546120"
  },
  {
    "text": "is the goal of design is to making code",
    "start": "1546120",
    "end": "1552240"
  },
  {
    "text": "reasonable and the goal of test is to reason about code so the duality of test",
    "start": "1552240",
    "end": "1558640"
  },
  {
    "text": "and design is always there something that make a code more",
    "start": "1558640",
    "end": "1564559"
  },
  {
    "text": "easier to test is something that make the code easier to reason even if that reason afterwards is just",
    "start": "1564559",
    "end": "1571360"
  },
  {
    "text": "reading okay",
    "start": "1571360",
    "end": "1577480"
  },
  {
    "text": "so what you end up saying is okay that's fine and I and all but my code is not",
    "start": "1578960",
    "end": "1585480"
  },
  {
    "text": "like this Romeo you say in the beginning yourself this is not my test those are not my",
    "start": "1585480",
    "end": "1592480"
  },
  {
    "text": "tests my tests are like this",
    "start": "1592480",
    "end": "1597919"
  },
  {
    "text": "now I assume everyone of you have has understood just by reading it it should",
    "start": "1597919",
    "end": "1603000"
  },
  {
    "text": "be obvious to everyone the single line that has any importance in this test is this one",
    "start": "1603000",
    "end": "1608919"
  },
  {
    "text": "right right I mean it's obvious all the other lines are there I",
    "start": "1608919",
    "end": "1615679"
  },
  {
    "text": "I just needed to create I needed to test is I just single buling and testing I needed to call test that the",
    "start": "1615679",
    "end": "1621760"
  },
  {
    "text": "prescription I I gave is Lal right so I create a letal prescription for a",
    "start": "1621760",
    "end": "1627200"
  },
  {
    "text": "patient okay and to tality I just create a dose",
    "start": "1627200",
    "end": "1633520"
  },
  {
    "text": "a very high dosage and everything else all the other",
    "start": "1633520",
    "end": "1639320"
  },
  {
    "text": "inputs are there just because to create that prescription well there are several mandatory fields and I had to put",
    "start": "1639320",
    "end": "1645880"
  },
  {
    "text": "something on those fields right does that sound familiar",
    "start": "1645880",
    "end": "1652440"
  },
  {
    "text": "okay thing is some of you may say oh no R but I can",
    "start": "1652440",
    "end": "1659480"
  },
  {
    "text": "do this more I can do a prettier version of this right I can have fixtures I can do at least a builder",
    "start": "1659480",
    "end": "1666360"
  },
  {
    "text": "pattern right it could be less ugly than",
    "start": "1666360",
    "end": "1672240"
  },
  {
    "text": "this I I agree I agree completely you could do this less ugly",
    "start": "1672240",
    "end": "1679120"
  },
  {
    "text": "but it would not make the problem go away I'm not trying to dis on beauty I'm not saying Beauty sucks not really don't",
    "start": "1679120",
    "end": "1686559"
  },
  {
    "text": "take that as a takeaway too be Beauty in code is awesome Beauty in code likeing",
    "start": "1686559",
    "end": "1694440"
  },
  {
    "text": "flowers is there to ensure the ways of",
    "start": "1694440",
    "end": "1700000"
  },
  {
    "text": "reproduction uh the the V is awesome and all do do every",
    "start": "1700679",
    "end": "1709200"
  },
  {
    "text": "code that you touch try strive to do it as pretty as you",
    "start": "1709200",
    "end": "1714440"
  },
  {
    "text": "can uh but it will not make the underlying problem go away it's not it's",
    "start": "1714440",
    "end": "1720960"
  },
  {
    "text": "good but it's not enough and I want enough not only",
    "start": "1720960",
    "end": "1728519"
  },
  {
    "text": "good so so the thing",
    "start": "1728519",
    "end": "1736159"
  },
  {
    "text": "is what I'm saying when I creating this test is I don't care about most of these",
    "start": "1736159",
    "end": "1742360"
  },
  {
    "text": "values well let's take a bet on that if you really don't care about",
    "start": "1742360",
    "end": "1749519"
  },
  {
    "text": "those values then they could be random",
    "start": "1749519",
    "end": "1754159"
  },
  {
    "text": "right or else you do care about them somehow is it either one other other",
    "start": "1755399",
    "end": "1762399"
  },
  {
    "text": "there is no third option either you don't really don't care about them and they could be random or somehow is not",
    "start": "1762399",
    "end": "1770279"
  },
  {
    "text": "really I don't care about this value there's something about it right so if I",
    "start": "1770279",
    "end": "1777600"
  },
  {
    "text": "translate that to property based testing either I have no assumption",
    "start": "1777600",
    "end": "1783360"
  },
  {
    "text": "about this value or I have an assumption about this value fair fair",
    "start": "1783360",
    "end": "1792320"
  },
  {
    "text": "fair so there is a problem about this I cannot really make",
    "start": "1792360",
    "end": "1798559"
  },
  {
    "text": "I mean you you feeling there is a problem here",
    "start": "1798559",
    "end": "1804440"
  },
  {
    "text": "here I just say give me lists of integers well the framework has a",
    "start": "1804440",
    "end": "1810640"
  },
  {
    "text": "generator to Generate random integers so I don't need to to worry about that but we are doing Java 6 here right",
    "start": "1810640",
    "end": "1819799"
  },
  {
    "text": "and in Java 6 when I did",
    "start": "1819799",
    "end": "1825039"
  },
  {
    "text": "this I create several objects myself this my codebase objects there is no",
    "start": "1825120",
    "end": "1830399"
  },
  {
    "text": "random generator for those objects into my Frameworks the Frameworks don't even know those objects so who here does f",
    "start": "1830399",
    "end": "1838720"
  },
  {
    "text": "shop or Hesco in production I hate you I I don't really hate you I just",
    "start": "1838720",
    "end": "1845600"
  },
  {
    "text": "Envy you but to everyone",
    "start": "1845600",
    "end": "1851360"
  },
  {
    "text": "else those three persons here are not that part is not for them but to everyone else to all has of Main kind",
    "start": "1851360",
    "end": "1858919"
  },
  {
    "text": "you kind of need a way to generate those objects",
    "start": "1858919",
    "end": "1864000"
  },
  {
    "text": "right Yourself by hand fear not I have you",
    "start": "1864000",
    "end": "1871440"
  },
  {
    "text": "covered",
    "start": "1871440",
    "end": "1874440"
  },
  {
    "text": "so so uh let's let's have this test this test here in",
    "start": "1879679",
    "end": "1885480"
  },
  {
    "text": "Java this is an a like almost everything in this code base I created here is just",
    "start": "1885480",
    "end": "1890639"
  },
  {
    "text": "alha code over Alpha code over Alpha code this is an alha alha Javas six code",
    "start": "1890639",
    "end": "1896600"
  },
  {
    "text": "to test GPS coordinates right there are several problems with this code can you",
    "start": "1896600",
    "end": "1904039"
  },
  {
    "text": "can you find me one okay I I'll give you one as a",
    "start": "1904039",
    "end": "1910679"
  },
  {
    "text": "gift it takes any big decimal as GPS coordinates and in real life you cannot",
    "start": "1910679",
    "end": "1918279"
  },
  {
    "text": "really have that uh your GPS coordinates is minus 90",
    "start": "1918279",
    "end": "1924279"
  },
  {
    "text": "to Plus 90 minus 1008 to plus 1008 that's all you can do uh because if you",
    "start": "1924279",
    "end": "1932440"
  },
  {
    "text": "go further you just modulating again Earth you cannot just imagine a new land",
    "start": "1932440",
    "end": "1941440"
  },
  {
    "text": "elsewhere so uh if if I were to test this I end up",
    "start": "1941799",
    "end": "1950960"
  },
  {
    "text": "having to create like I said before right you end up discovering all your invariance of your of your values they",
    "start": "1950960",
    "end": "1959320"
  },
  {
    "text": "end up appearing in your generation part because you don't want for the generator",
    "start": "1959320",
    "end": "1965760"
  },
  {
    "text": "to give the invalid value so you end up putting this else everywhere and it",
    "start": "1965760",
    "end": "1973000"
  },
  {
    "text": "sucks what I would really like to have it is not to generate ltitude longitudes",
    "start": "1973360",
    "end": "1979039"
  },
  {
    "text": "in this and then give create a coordinate that Iain test what I want is",
    "start": "1979039",
    "end": "1985639"
  },
  {
    "text": "for the framework to give me those prop those coordinates just generate me random valid coordinates right",
    "start": "1985639",
    "end": "1993320"
  },
  {
    "text": "so the first thing to do would be to correct my object and then people would",
    "start": "1993320",
    "end": "1998760"
  },
  {
    "text": "say now R you lost me I cannot really correct all my objects and pay all my techn depth to start doing my test today",
    "start": "1998760",
    "end": "2005799"
  },
  {
    "text": "and my goal here is for you to do this Monday right so let's go",
    "start": "2005799",
    "end": "2011880"
  },
  {
    "text": "Alo you just use every every language has a framework for property based",
    "start": "2014480",
    "end": "2019840"
  },
  {
    "text": "testing just search on the internet your language and quick check and it will have a framework for your language it",
    "start": "2019840",
    "end": "2027039"
  },
  {
    "text": "has even for bash your language will be covered okay so in your",
    "start": "2027039",
    "end": "2033440"
  },
  {
    "text": "language you just have a way to creating generating your value object value and",
    "start": "2033440",
    "end": "2040080"
  },
  {
    "text": "it's just a new with randoms on it it's not a very complicated thing as",
    "start": "2040080",
    "end": "2047399"
  },
  {
    "text": "a matter of fact can can use that generator right as",
    "start": "2047399",
    "end": "2054878"
  },
  {
    "text": "a matter of fact if your test resembles this you",
    "start": "2054879",
    "end": "2060679"
  },
  {
    "text": "already have the code of the generator you just copy and paste this into the generator class and you pass r randoms",
    "start": "2060679",
    "end": "2068079"
  },
  {
    "text": "to every one of those that's it okay you can do that today it's not",
    "start": "2068079",
    "end": "2076000"
  },
  {
    "text": "as expensive operation or you can use f sh or Hesco",
    "start": "2076000",
    "end": "2081240"
  },
  {
    "text": "but okay",
    "start": "2081240",
    "end": "2085000"
  },
  {
    "text": "anyway and what I have here is",
    "start": "2086599",
    "end": "2092800"
  },
  {
    "text": "this this becomes this I make it on purpose I mean",
    "start": "2093079",
    "end": "2099320"
  },
  {
    "text": "I really don't need to do all the all the huge violation of the matter here I",
    "start": "2099320",
    "end": "2105760"
  },
  {
    "text": "really didn't on",
    "start": "2105760",
    "end": "2108480"
  },
  {
    "text": "purpose there are two lines that are important for me here this should be hike means this is little okay that's my",
    "start": "2111000",
    "end": "2121520"
  },
  {
    "text": "whole test so what I said here is well generate me prescriptions and as long as",
    "start": "2121520",
    "end": "2127400"
  },
  {
    "text": "the as long as the dosage new prescription is high I should have this problem this",
    "start": "2127400",
    "end": "2132839"
  },
  {
    "text": "is blatantly false I am wrong when I do those tests because I",
    "start": "2132839",
    "end": "2138760"
  },
  {
    "text": "have a low dosage and I tell you take this 40,000 times in a day I will still",
    "start": "2138760",
    "end": "2143960"
  },
  {
    "text": "kill you right but I had a bad assumption about the test itself and my test",
    "start": "2143960",
    "end": "2150480"
  },
  {
    "text": "wearing the bad assumption and you are doing this today you don't understand fully all",
    "start": "2150480",
    "end": "2156520"
  },
  {
    "text": "your business rules everywhere that's impossible nobody does in your whole Enterprise nobody has",
    "start": "2156520",
    "end": "2165359"
  },
  {
    "text": "the whole science of all your business rules in your head so at some point you",
    "start": "2165359",
    "end": "2170800"
  },
  {
    "text": "will have that kind of bug the bug that is not in the code that is just in your head the bug about misunderstanding the",
    "start": "2170800",
    "end": "2178440"
  },
  {
    "text": "business roues themselves this will happen Okay Okay so",
    "start": "2178440",
    "end": "2188280"
  },
  {
    "text": "when I execute this test strangely it is",
    "start": "2188280",
    "end": "2195200"
  },
  {
    "text": "green yay when is I could this",
    "start": "2195960",
    "end": "2202560"
  },
  {
    "text": "test sadly it will go",
    "start": "2202560",
    "end": "2209280"
  },
  {
    "text": "red that's said so it could go green that that's",
    "start": "2209280",
    "end": "2215960"
  },
  {
    "text": "the first point people usually do help property based testing because they say hey that's random right you asking me to",
    "start": "2215960",
    "end": "2223040"
  },
  {
    "text": "test with random input you are a crazy man I I I don't want it I want I I want",
    "start": "2223040",
    "end": "2230000"
  },
  {
    "text": "things to be static and have always the same behavior right Fair I'll try to",
    "start": "2230000",
    "end": "2236200"
  },
  {
    "text": "convince you that it's better to test with random but there's a fair fear to",
    "start": "2236200",
    "end": "2241560"
  },
  {
    "text": "have about this this approach this test if I execute it enough I could come to a",
    "start": "2241560",
    "end": "2247560"
  },
  {
    "text": "situation where the random inputs were all valid inputs and the test went green okay and test the first real",
    "start": "2247560",
    "end": "2255560"
  },
  {
    "text": "takeaway I have for you today in property based testing when a",
    "start": "2255560",
    "end": "2260960"
  },
  {
    "text": "test go green it doesn't mean you're good it just means I did not have you",
    "start": "2260960",
    "end": "2266720"
  },
  {
    "text": "today but I may have you tomorrow your patient is male and yes it is I'll get",
    "start": "2266720",
    "end": "2274400"
  },
  {
    "text": "to that I will get to that but thank",
    "start": "2274400",
    "end": "2281760"
  },
  {
    "text": "you uh all the test is saying is I will not when it's green is I do not have you",
    "start": "2281760",
    "end": "2288240"
  },
  {
    "text": "today but I will have you tomorrow at at some later date what I'm defending to",
    "start": "2288240",
    "end": "2293319"
  },
  {
    "text": "you today is that it's not only property based test that I like that every test",
    "start": "2293319",
    "end": "2298640"
  },
  {
    "text": "is like that even this this test here when he go goes red",
    "start": "2298640",
    "end": "2305760"
  },
  {
    "text": "what he say is haha gotcha and when this goes green what he say is",
    "start": "2305760",
    "end": "2310920"
  },
  {
    "text": "I did not manage to have you today but I can have you somewhat day that's all any",
    "start": "2310920",
    "end": "2316160"
  },
  {
    "text": "test say ever it's just that this test here always tries the same",
    "start": "2316160",
    "end": "2322839"
  },
  {
    "text": "thing that's all that's the only difference okay so this here is crazy",
    "start": "2322839",
    "end": "2334240"
  },
  {
    "text": "whereas whereas this here is pretty sane it it tries to have different",
    "start": "2335520",
    "end": "2343359"
  },
  {
    "text": "inputs that still respect your assumptions and see if they pass",
    "start": "2343359",
    "end": "2351000"
  },
  {
    "text": "okay so like my friend here said I have a male patient that is pregnant well I",
    "start": "2351000",
    "end": "2359040"
  },
  {
    "text": "mean I respect her transsexuality so that's possible that's not my problem here okay my problem here is",
    "start": "2359040",
    "end": "2367599"
  },
  {
    "text": "this should not be possible that this number of weeks of a",
    "start": "2367599",
    "end": "2374440"
  },
  {
    "text": "weeks since of last menstruation this should never be possible this is a strange man this is",
    "start": "2374440",
    "end": "2381839"
  },
  {
    "text": "very strange and and also this test fails because I I will",
    "start": "2381839",
    "end": "2389920"
  },
  {
    "text": "not enter into the production code but as soon as I do the archaeology behind",
    "start": "2389920",
    "end": "2395240"
  },
  {
    "text": "this this test fails because that rule is false for every pregnant",
    "start": "2395240",
    "end": "2401880"
  },
  {
    "text": "person okay even if that was not the",
    "start": "2401880",
    "end": "2407000"
  },
  {
    "text": "case the rule will be false because my assumption was wrong in the be to begin",
    "start": "2407000",
    "end": "2412640"
  },
  {
    "text": "with I only took care of dosage when the number of dosage per day is also",
    "start": "2412640",
    "end": "2417720"
  },
  {
    "text": "important okay so when you have a a",
    "start": "2417720",
    "end": "2423079"
  },
  {
    "text": "red test in property based testing all you have is a counter example you have have to you still have to find why it is",
    "start": "2423079",
    "end": "2429560"
  },
  {
    "text": "a counter example okay you still have to find you still have to to to seek it this so you have to slice it down to",
    "start": "2429560",
    "end": "2438520"
  },
  {
    "text": "little assumptions and not try to put everything into a same test which also",
    "start": "2438520",
    "end": "2443920"
  },
  {
    "text": "helps you not to have your solution the test",
    "start": "2443920",
    "end": "2449079"
  },
  {
    "text": "itself uh but there is a very important word here shrinking can you can you read",
    "start": "2449079",
    "end": "2455800"
  },
  {
    "text": "it can everyone shrinking well most if you have a a choice between two",
    "start": "2455800",
    "end": "2462680"
  },
  {
    "text": "property based testing Frameworks for your language and one of the them do do shrinking and the other doesn't pick the",
    "start": "2462680",
    "end": "2469240"
  },
  {
    "text": "one that does shrinking okay what is shrinking is that as soon as the",
    "start": "2469240",
    "end": "2475400"
  },
  {
    "text": "framework finds a counter example it tries to to find a a smaller",
    "start": "2475400",
    "end": "2482520"
  },
  {
    "text": "one it it takes this C say okay if I cut half of it and less the other half does",
    "start": "2482520",
    "end": "2487760"
  },
  {
    "text": "is it still red and tries to find a smaller one that is still red and that's",
    "start": "2487760",
    "end": "2493520"
  },
  {
    "text": "very useful the first time I ever did property based testing was in integration tests you can do it at all level of",
    "start": "2493520",
    "end": "2500720"
  },
  {
    "text": "testing unitary integration n to end etc etc etc and was integration test and I",
    "start": "2500720",
    "end": "2505880"
  },
  {
    "text": "was actually calling a rest frame rest API with my prop based test framework",
    "start": "2505880",
    "end": "2513280"
  },
  {
    "text": "and it just exploded everything with an input and the iut has several Chinese",
    "start": "2513280",
    "end": "2519079"
  },
  {
    "text": "and Japanese words in it and I say aha that's a sh code problem right it",
    "start": "2519079",
    "end": "2527880"
  },
  {
    "text": "wasn't that that was noise when when I did shrinking I have a very small string",
    "start": "2527880",
    "end": "2535160"
  },
  {
    "text": "that still failed my tests and the real underlying problem is was when I have",
    "start": "2535160",
    "end": "2540319"
  },
  {
    "text": "characters with that were not printable it would explode everything okay that's the thing when it",
    "start": "2540319",
    "end": "2547440"
  },
  {
    "text": "finds a counter example it finds a random one so if it does shrink in it tries to find the smallest counter",
    "start": "2547440",
    "end": "2553160"
  },
  {
    "text": "example it can to help you help you help yourself okay",
    "start": "2553160",
    "end": "2560119"
  },
  {
    "text": "okay",
    "start": "2560119",
    "end": "2563119"
  },
  {
    "text": "so thing is what I sh you here is two users I",
    "start": "2565920",
    "end": "2572800"
  },
  {
    "text": "have for property based testing I have four main users myself for property based testing when I do code and I use",
    "start": "2572800",
    "end": "2579520"
  },
  {
    "text": "use those a lot and I I try to convince you that you should use",
    "start": "2579520",
    "end": "2585440"
  },
  {
    "text": "them my first one is this one is the one I show in the",
    "start": "2585440",
    "end": "2591079"
  },
  {
    "text": "beginning I compress test together I try to compress them together",
    "start": "2591079",
    "end": "2597400"
  },
  {
    "text": "in order to end with a test that explains a business rule maybe the rule explains is not real",
    "start": "2597400",
    "end": "2605319"
  },
  {
    "text": "a real domain rule maybe it's very technical I don't care I just trying to compress test together that's one",
    "start": "2605319",
    "end": "2611520"
  },
  {
    "text": "approach one of my four approaches to doing PB PBT okay just compressing test together",
    "start": "2611520",
    "end": "2618119"
  },
  {
    "text": "the test I can compress together I do compress together that's a first my second approach to the",
    "start": "2618119",
    "end": "2626040"
  },
  {
    "text": "PBT is to take uh a domain uh Rule and",
    "start": "2626040",
    "end": "2632400"
  },
  {
    "text": "you have several domain rules just the example I gave you have a",
    "start": "2632400",
    "end": "2638040"
  },
  {
    "text": "uh a lethality truth put is a is a a",
    "start": "2638040",
    "end": "2644200"
  },
  {
    "text": "real problem a real domain problem and you have real domain problems every time you disc discuss with a domain expert",
    "start": "2644200",
    "end": "2649440"
  },
  {
    "text": "and your domain expert tells you I'm sure this is the behavior I have I have",
    "start": "2649440",
    "end": "2654559"
  },
  {
    "text": "this rule here it is the behavior I have you have something you can test with property based testing actually who here",
    "start": "2654559",
    "end": "2660839"
  },
  {
    "text": "has ever done BGG Behavior driven Dev development a few of you so when you try",
    "start": "2660839",
    "end": "2666359"
  },
  {
    "text": "to do it you try to push your domain expert to do uh to do examples and",
    "start": "2666359",
    "end": "2673160"
  },
  {
    "text": "that's very good I'm not saying you should do that you should do this because those examples have a discussion",
    "start": "2673160",
    "end": "2679000"
  },
  {
    "text": "that made the domain expert discover things that was not a discussion beforehand",
    "start": "2679000",
    "end": "2684720"
  },
  {
    "text": "but no domain expert ever really wants to give those examples right away right",
    "start": "2684720",
    "end": "2691160"
  },
  {
    "text": "because it's boring what they really want to give you is a business rule what I here want to give is a in a",
    "start": "2691160",
    "end": "2699559"
  },
  {
    "text": "human view of the the behavior that the application should have you cannot fold them for having",
    "start": "2699559",
    "end": "2706359"
  },
  {
    "text": "that that need but you push them to give you examples but but you can test the",
    "start": "2706359",
    "end": "2711440"
  },
  {
    "text": "business rules themselves using property based testing and you should now if you start by that and when",
    "start": "2711440",
    "end": "2718640"
  },
  {
    "text": "I have a business rule given by the by domain expert I start by that I write a propi based test for the rule I have a",
    "start": "2718640",
    "end": "2725040"
  },
  {
    "text": "test that will be read a long time that's fine I just do my normal TG",
    "start": "2725040",
    "end": "2730400"
  },
  {
    "text": "inside it up to the point is green and then I see which are the tests that I keep and",
    "start": "2730400",
    "end": "2736079"
  },
  {
    "text": "which are the tests that I don't you should never be afraid to do do",
    "start": "2736079",
    "end": "2742240"
  },
  {
    "text": "uh scratches to do drafts with your code code is a perfectly valid way of doing",
    "start": "2742240",
    "end": "2750800"
  },
  {
    "text": "drafts people don't do that enough you should not ask yourself to write code directly in the perfect way you can use",
    "start": "2750800",
    "end": "2759119"
  },
  {
    "text": "code to help your own understanding and it should do more of",
    "start": "2759119",
    "end": "2765160"
  },
  {
    "text": "that it it's like asking people to write a book and not not never do a draft that's awful right it's the same is true",
    "start": "2765160",
    "end": "2773200"
  },
  {
    "text": "for code so my first usage is compressing test together my second",
    "start": "2773200",
    "end": "2778280"
  },
  {
    "text": "usage is I have a business rule I put a test to it a property based test to it and then I try to live my life normally",
    "start": "2778280",
    "end": "2784880"
  },
  {
    "text": "inside it do a double Loop okay my third usage of it is to ask",
    "start": "2784880",
    "end": "2792079"
  },
  {
    "text": "questions to my codebase but thing is like I said",
    "start": "2792079",
    "end": "2798119"
  },
  {
    "text": "earlier your you do not know all your business rules and your domain expert don't know",
    "start": "2798119",
    "end": "2805839"
  },
  {
    "text": "all their business rules too you think they should but they don't and if you have a old code base I",
    "start": "2805839",
    "end": "2814119"
  },
  {
    "text": "just ask this question who here has a code base that is is older in the job than either you or your domain",
    "start": "2814119",
    "end": "2823720"
  },
  {
    "text": "expert right some of you if you have an old code base you have people have",
    "start": "2823720",
    "end": "2829760"
  },
  {
    "text": "programmed the solution to problems that were never really stated in the code",
    "start": "2829760",
    "end": "2835200"
  },
  {
    "text": "base and there are several edge cases in the code that nobody else remembers now",
    "start": "2835200",
    "end": "2843760"
  },
  {
    "text": "today maybe there are bugs Maybe there are just real life usages that are",
    "start": "2843760",
    "end": "2849640"
  },
  {
    "text": "forgotten in the whole forgotten in time because everyone or everyone there is",
    "start": "2849640",
    "end": "2855319"
  },
  {
    "text": "more recent than the code itself well with property based testing you can ask questions to the code well I bet you",
    "start": "2855319",
    "end": "2862400"
  },
  {
    "text": "have this Behavior I the code says no I don't and that's a just and then you can",
    "start": "2862400",
    "end": "2869119"
  },
  {
    "text": "add to that discussion the code itself for example this this case I gave here",
    "start": "2869119",
    "end": "2875079"
  },
  {
    "text": "of the uh pregnant people was a real life case I had in a",
    "start": "2875079",
    "end": "2880400"
  },
  {
    "text": "client and the nobody had a Ru in mind",
    "start": "2880400",
    "end": "2886240"
  },
  {
    "text": "at all that pregnancy changed the levels of lity nobody had that in the beginning we",
    "start": "2886240",
    "end": "2894200"
  },
  {
    "text": "were really afraid there was an alab bug understand",
    "start": "2894200",
    "end": "2900559"
  },
  {
    "text": "it so that's a third usage asking Quest about the code asking asking your code",
    "start": "2900559",
    "end": "2906480"
  },
  {
    "text": "base questions my fourth and last usage of",
    "start": "2906480",
    "end": "2912079"
  },
  {
    "text": "property based testing is to do uh characterization",
    "start": "2912079",
    "end": "2918319"
  },
  {
    "text": "testing I I want to understand what one class does so I try to put out",
    "start": "2918319",
    "end": "2924960"
  },
  {
    "text": "hypothesis about that class about the behavior of that class that I know I may be true or false and I use those little",
    "start": "2924960",
    "end": "2931960"
  },
  {
    "text": "by L to to to try to draw what is the behavior of this Legacy code base the",
    "start": "2931960",
    "end": "2938480"
  },
  {
    "text": "Legacy class that I don't know or understand before I started really reading",
    "start": "2938480",
    "end": "2944200"
  },
  {
    "text": "it and with those four together you have a tapestry a each",
    "start": "2944200",
    "end": "2950720"
  },
  {
    "text": "tapest of property based testing USAG that really benefits you from doing starting doing that today and you",
    "start": "2950720",
    "end": "2958200"
  },
  {
    "text": "should a question that I usually have at this point is well",
    "start": "2958200",
    "end": "2964440"
  },
  {
    "text": "R that's fine and all but my my tests are really",
    "start": "2964440",
    "end": "2969480"
  },
  {
    "text": "slow I mean each time I execute a property based test it tries about a 100",
    "start": "2969480",
    "end": "2975400"
  },
  {
    "text": "times 100 random inputs my test take like 30 minutes to execute if every",
    "start": "2975400",
    "end": "2981839"
  },
  {
    "text": "every one of those were executed 100 times it would be awfully slow right and the real answer is the",
    "start": "2981839",
    "end": "2990440"
  },
  {
    "text": "answer that doesn't help you at all your test sucks and you should change your tests but it doesn't help you because",
    "start": "2990440",
    "end": "2997319"
  },
  {
    "text": "you don't want to pay the test depth right now every the whole test depth of the application right now right so if",
    "start": "2997319",
    "end": "3004000"
  },
  {
    "text": "you don't I let's meet halfway okay do a PBT and you can",
    "start": "3004000",
    "end": "3011599"
  },
  {
    "text": "configure it in every framework how many tries it does worst case scenario if the",
    "start": "3011599",
    "end": "3017440"
  },
  {
    "text": "test take an half an hour to execute put it to one it would take the exact same time",
    "start": "3017440",
    "end": "3023680"
  },
  {
    "text": "that today but between two different executions of test cases between two",
    "start": "3023680",
    "end": "3030440"
  },
  {
    "text": "different days for maybe they will try different things and it will still end up winning",
    "start": "3030440",
    "end": "3037839"
  },
  {
    "text": "something see my point and that's pretty much everything",
    "start": "3037839",
    "end": "3043640"
  },
  {
    "text": "that I want to discuss you today do you have any questions",
    "start": "3043640",
    "end": "3048720"
  },
  {
    "text": "yes this is basically like a SM fixure whiches harder to get a red",
    "start": "3050440",
    "end": "3057520"
  },
  {
    "text": "it's not really [Laughter]",
    "start": "3057520",
    "end": "3063319"
  },
  {
    "text": "fixed thatf test and write that yeah yeah and that that that that joins a",
    "start": "3065200",
    "end": "3071520"
  },
  {
    "text": "question I usually have to which is what does it his question is when I I have",
    "start": "3071520",
    "end": "3076720"
  },
  {
    "text": "the right light do do I create a test for it and yes the answer yes you should create a test for it maybe we erase it",
    "start": "3076720",
    "end": "3082640"
  },
  {
    "text": "somehow afterwards I not religions against erasing tests I that's a lot but",
    "start": "3082640",
    "end": "3088920"
  },
  {
    "text": "uh some people will say no you keep forever well that's your choice each to teach their their own but a question I",
    "start": "3088920",
    "end": "3095599"
  },
  {
    "text": "usually have is well what is I I have I use continuous integration right so or",
    "start": "3095599",
    "end": "3101480"
  },
  {
    "text": "continuous delivery each time I push a new version my test that executed the",
    "start": "3101480",
    "end": "3107200"
  },
  {
    "text": "version goes into production or into another scope there's a new version that is done with my two or something like",
    "start": "3107200",
    "end": "3113400"
  },
  {
    "text": "this what if is it random if what if I'm building when I do it my machine is",
    "start": "3113400",
    "end": "3119839"
  },
  {
    "text": "green and it when it goes into the pipeline towards building a new version it becomes red what do I do",
    "start": "3119839",
    "end": "3128200"
  },
  {
    "text": "then right and my usual answer to that is what would you do if it you did not",
    "start": "3128200",
    "end": "3136160"
  },
  {
    "text": "do PBT you know it would be green and while it is building the new version someone from kyway comes and say hey I",
    "start": "3136160",
    "end": "3141920"
  },
  {
    "text": "have found a bug well you can do only two things things at that point either you stop",
    "start": "3141920",
    "end": "3149119"
  },
  {
    "text": "everything and say we have to correct this or you say well let's put this into",
    "start": "3149119",
    "end": "3154760"
  },
  {
    "text": "our backlog and delivered and it's the same thing for PBT right you either say",
    "start": "3154760",
    "end": "3162960"
  },
  {
    "text": "okay let's correct this or you put this in your backlog and you deliver is one or the",
    "start": "3162960",
    "end": "3168400"
  },
  {
    "text": "other any other",
    "start": "3168400",
    "end": "3171920"
  },
  {
    "text": "questions how should we hand all the stuff that is",
    "start": "3173880",
    "end": "3179200"
  },
  {
    "text": "well okay",
    "start": "3179200",
    "end": "3185839"
  },
  {
    "text": "very know what rules are yes of course it's very hard to know what domain R are",
    "start": "3185839",
    "end": "3191720"
  },
  {
    "text": "but T might is someone else give you gives you the your domain rules but that's why I have these four approaches",
    "start": "3191720",
    "end": "3198839"
  },
  {
    "text": "that's one of the four knowing the domain rule you can always try to at least compress the test together and",
    "start": "3198839",
    "end": "3204440"
  },
  {
    "text": "something we go out and try to recognize what it is I was",
    "start": "3204440",
    "end": "3209520"
  },
  {
    "text": "thinking let's say you have this know test sorry you have this drug test",
    "start": "3209520",
    "end": "3219440"
  },
  {
    "text": "that says is it or not yeah",
    "start": "3219440",
    "end": "3224400"
  },
  {
    "text": "but yes maybe",
    "start": "3224480",
    "end": "3231200"
  },
  {
    "text": "yes maybe stuff we haven't really well we haven't really mapped it right but",
    "start": "3231839",
    "end": "3237200"
  },
  {
    "text": "you have the same level of blindness to it that you have today show you more so today you",
    "start": "3237200",
    "end": "3244319"
  },
  {
    "text": "just you don't test oh yeah that's a problem right yeah if",
    "start": "3244319",
    "end": "3253559"
  },
  {
    "text": "you if you really don't don't want to test them with in P property based testing then you have uh a clear",
    "start": "3253760",
    "end": "3261079"
  },
  {
    "text": "separation there where things go into assumptions right I assume I don't have",
    "start": "3261079",
    "end": "3266200"
  },
  {
    "text": "this",
    "start": "3266200",
    "end": "3268359"
  },
  {
    "text": "oh yeah that's a very good question do you have any tools to create the fixtures automatically from the cont",
    "start": "3276960",
    "end": "3282680"
  },
  {
    "text": "examples I get it all depends on the language itself okay what one of the",
    "start": "3282680",
    "end": "3287760"
  },
  {
    "text": "things I love about closure and and lisp really is that the error message I get from my property based test is already",
    "start": "3287760",
    "end": "3294280"
  },
  {
    "text": "my test so I I just copy and paste it and yay uh unfortunately you don't do lisp",
    "start": "3294280",
    "end": "3302440"
  },
  {
    "text": "right who here does lisp oh I love you guys",
    "start": "3302440",
    "end": "3307839"
  },
  {
    "text": "so and uh for everyone else really is",
    "start": "3307839",
    "end": "3312920"
  },
  {
    "text": "really language dependent I don't have that for all languages at all so for some people for a lot a lot of people it",
    "start": "3312920",
    "end": "3320640"
  },
  {
    "text": "remains that boring part of okay I transformed this picture into a test case right",
    "start": "3320640",
    "end": "3327000"
  },
  {
    "text": "all some some uh a very small number of language hasco or things like this do",
    "start": "3327000",
    "end": "3333640"
  },
  {
    "text": "memorization so they they enhance the probability of have the if something",
    "start": "3333640",
    "end": "3339280"
  },
  {
    "text": "went red you have a higher probability of having it again the next time you execute",
    "start": "3339280",
    "end": "3344839"
  },
  {
    "text": "just just SP you the the butter",
    "start": "3344839",
    "end": "3349280"
  },
  {
    "text": "off what is I found it easier to do in real life is uh",
    "start": "3350359",
    "end": "3357680"
  },
  {
    "text": "isra try to just transform it by hand in a language like Java or",
    "start": "3357680",
    "end": "3362920"
  },
  {
    "text": "C and but sometimes I have quick wins that is just I can when I see the",
    "start": "3362920",
    "end": "3368680"
  },
  {
    "text": "problem I can play with my assumptions to enhance the the chances I have to have this cont example with another test",
    "start": "3368680",
    "end": "3375760"
  },
  {
    "text": "itself all right do I have any other questions oh thank you people",
    "start": "3376319",
    "end": "3384839"
  },
  {
    "text": "[Applause]",
    "start": "3384960",
    "end": "3389199"
  }
]