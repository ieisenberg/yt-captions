[
  {
    "text": "okay let's get started welcome everyone thank you for being here at one of the last talks of this amazing conference",
    "start": "2460",
    "end": "9059"
  },
  {
    "text": "third day so you're the resilient people right so much information and you're still here to learn more I admire that",
    "start": "9059",
    "end": "16139"
  },
  {
    "text": "so my name is Lila Buria I work for a company called particular software where we build in-service bus and a platform",
    "start": "16139",
    "end": "22619"
  },
  {
    "text": "around that that is supposed to help you in building uh distributed systems specifically message based ones so",
    "start": "22619",
    "end": "29640"
  },
  {
    "text": "before I worked there I was already out in the field building message based systems myself and one of the things",
    "start": "29640",
    "end": "34800"
  },
  {
    "text": "that stood out to me is how hard it becomes to sort of debug these systems with messages flow around the system and",
    "start": "34800",
    "end": "42120"
  },
  {
    "text": "all of that and so this session is a bit inspired by all of that pain I have seen teams go through when they adopt",
    "start": "42120",
    "end": "48539"
  },
  {
    "text": "messaging including myself right so with that being said I'd like to start off",
    "start": "48539",
    "end": "54360"
  },
  {
    "text": "today's session with a story so one step at a time there was a retail business that decided to build a sort of",
    "start": "54360",
    "end": "59940"
  },
  {
    "text": "online shop for their offering and they started small but you know they were pretty successful so as this business",
    "start": "59940",
    "end": "67439"
  },
  {
    "text": "business venture grew they quickly understood that in order to keep up with all of the changing requirements and all",
    "start": "67439",
    "end": "73500"
  },
  {
    "text": "of that increasing complexity that they had to start decoupling the system into sort of separate components that could",
    "start": "73500",
    "end": "79020"
  },
  {
    "text": "evolve a bit more independently and even by different themes so slowly but surely",
    "start": "79020",
    "end": "84240"
  },
  {
    "text": "that sort of evolved into what we nowadays call a distributed system with multiple components interacting with",
    "start": "84240",
    "end": "89640"
  },
  {
    "text": "each other and before you knew it we had three teams in the house team lorem ipsum and dollar",
    "start": "89640",
    "end": "95640"
  },
  {
    "text": "or the way I would say it dollar with my Spanish Roots so for those of you who don't know dollar means pain because",
    "start": "95640",
    "end": "102780"
  },
  {
    "text": "there's always sort of one team that takes a hit and is doing like the really really difficult job right so as a way",
    "start": "102780",
    "end": "109740"
  },
  {
    "text": "to sort of communicate between these components that are now part of the distributed system they chose to use",
    "start": "109740",
    "end": "114780"
  },
  {
    "text": "messaging so let's take a look at one of the sort of most crucial business processes that",
    "start": "114780",
    "end": "120060"
  },
  {
    "text": "is a part of this system placing an order and we sort of know how this works but let's go over it anyway so we want",
    "start": "120060",
    "end": "126299"
  },
  {
    "text": "to sort the order and some database we also want to make sure that we charge the credit card so we can actually make some money",
    "start": "126299",
    "end": "132120"
  },
  {
    "text": "and then we want to package the order ship it and then also make sure that we include an invoice for the customer so",
    "start": "132120",
    "end": "137819"
  },
  {
    "text": "they have some proof of their purchase and then we also might may want to adjust the stock based on you know that",
    "start": "137819",
    "end": "143580"
  },
  {
    "text": "purchase that was just completed and also figure out whether we want to maybe order some more stock to see you",
    "start": "143580",
    "end": "149580"
  },
  {
    "text": "know is this product now almost depleted and do we need to back order it for example and then finally we also want to verify",
    "start": "149580",
    "end": "156239"
  },
  {
    "text": "the customer status to see oh was this their first ordered and maybe they get a discount code because that's how we can",
    "start": "156239",
    "end": "161580"
  },
  {
    "text": "pull them back in or maybe if they it was their 100th order then they're now a",
    "start": "161580",
    "end": "166620"
  },
  {
    "text": "gold customer or something like that so if we think in terms of these responsibilities in in terms of the sort",
    "start": "166620",
    "end": "173340"
  },
  {
    "text": "of teams that we're managing them we have Team lorem sort of responsible for the order fulfillment part we have Team",
    "start": "173340",
    "end": "179400"
  },
  {
    "text": "Epsom responsible for everything regarding the stock and team dollar responsible for everything regarding",
    "start": "179400",
    "end": "186360"
  },
  {
    "text": "customer care hence the name right so if we think in terms of the messages",
    "start": "186360",
    "end": "191760"
  },
  {
    "text": "that are flowing through the system to sort of support this business process that we could come up with something",
    "start": "191760",
    "end": "198000"
  },
  {
    "text": "like this so we have a sales component a payment component and a stock component and they all have sort of their own",
    "start": "198000",
    "end": "203700"
  },
  {
    "text": "commands and events that sort of support this business process from beginning to end",
    "start": "203700",
    "end": "209640"
  },
  {
    "text": "but looking at the system this way doesn't really tell us anything because it hides the entire complexity about how",
    "start": "209640",
    "end": "216060"
  },
  {
    "text": "are these components sort of interacting with each other and who's sending a message to who or maybe which components",
    "start": "216060",
    "end": "222420"
  },
  {
    "text": "are reacting to which event and how's that evolving so in order to get a better understanding of that we always",
    "start": "222420",
    "end": "227940"
  },
  {
    "text": "need to sort of draw the system in terms of interactions which gives us a completely different picture right everything starts in sales make sure",
    "start": "227940",
    "end": "235200"
  },
  {
    "text": "that you know payments gets that payment done and from there on we'll publish an order placed event that is then sort of",
    "start": "235200",
    "end": "241799"
  },
  {
    "text": "subscribed to by multiple other components in the system and they just do whatever is relevant to that specific",
    "start": "241799",
    "end": "249720"
  },
  {
    "text": "component that they're in right the publish subscribe pattern and one of the advantages of doing things this way is",
    "start": "249720",
    "end": "256019"
  },
  {
    "text": "that we end up with sort of autonomous components that are just reacting to sort of events that are occurring in the",
    "start": "256019",
    "end": "262620"
  },
  {
    "text": "system and then doing whatever action makes sense within that business component",
    "start": "262620",
    "end": "268080"
  },
  {
    "text": "so the that leads us to those autonomous components and that brings as many advantages one of them is that it sort",
    "start": "268080",
    "end": "275460"
  },
  {
    "text": "of allows our teams to operate in a sort of autonomous manner what does that mean well it means that they can evolve that",
    "start": "275460",
    "end": "283020"
  },
  {
    "text": "component you know following their own planning and their own requirements but it also means that they can choose",
    "start": "283020",
    "end": "288240"
  },
  {
    "text": "whatever programming languages Frameworks and tools that best suit their needs right that could be different",
    "start": "288240",
    "end": "294120"
  },
  {
    "text": "it also means that each of those components can operate in isolation so given that we're also using messaging in",
    "start": "294120",
    "end": "300419"
  },
  {
    "text": "the system it means that if one component is down normally the rest of the system should be able to continue operating without too much friction",
    "start": "300419",
    "end": "307740"
  },
  {
    "text": "and as long as the interactions between these components are based on a set contract which in our case is messaging",
    "start": "307740",
    "end": "315180"
  },
  {
    "text": "right they should be able to evolve independently as well now the thing is that anything that can",
    "start": "315180",
    "end": "321900"
  },
  {
    "text": "evolve independently can also fail independently so let's take a look at one of the",
    "start": "321900",
    "end": "327840"
  },
  {
    "text": "exceptions that our team ipsum ran into so it's showing a pretty simple stack Trace we're trying to process and update",
    "start": "327840",
    "end": "334380"
  },
  {
    "text": "product stock message and we're running into an exception because we cannot find the product that is specified in that",
    "start": "334380",
    "end": "340199"
  },
  {
    "text": "message input so when the engineers on team Epsom look",
    "start": "340199",
    "end": "345479"
  },
  {
    "text": "at this they immediately start racing through a bunch of questions right so they think about what happened you know",
    "start": "345479",
    "end": "351660"
  },
  {
    "text": "where did it happen in which context did it happen and why usually we'll look at the exception message maybe see if",
    "start": "351660",
    "end": "357900"
  },
  {
    "text": "there's any inner exceptions look at the stack Trace so sort of try to understand what happened here and normally",
    "start": "357900",
    "end": "364860"
  },
  {
    "text": "debugging is then the next step right because that's how we sort of build up like a step-by-step context of how data",
    "start": "364860",
    "end": "371639"
  },
  {
    "text": "is flowing through the system what are we changing what are we passing on so that we can sort of understand what is",
    "start": "371639",
    "end": "377280"
  },
  {
    "text": "the root cause of this failure now the thing is that if you're running in a message-based system you're going",
    "start": "377280",
    "end": "383880"
  },
  {
    "text": "to have to ask yourself a bunch more questions to be able to understand what's going on first of all you need to understand",
    "start": "383880",
    "end": "390240"
  },
  {
    "text": "which specific action started the specific chain of messages that we are seeing at this point you also need to",
    "start": "390240",
    "end": "397380"
  },
  {
    "text": "have a thorough understanding of which components are basically involved in that sort of business transaction that",
    "start": "397380",
    "end": "403860"
  },
  {
    "text": "we are executing here we also need to understand which specific sequence of measure of messages that are being sent",
    "start": "403860",
    "end": "409319"
  },
  {
    "text": "because that might also be different and finally in which specific order they are",
    "start": "409319",
    "end": "414600"
  },
  {
    "text": "being executed and how that may have an impact on the sort of behavior that we're perceiving in the system",
    "start": "414600",
    "end": "421500"
  },
  {
    "text": "so let me take a moment and step into the shoes of the engineer that's assigned this issue the stack Trace that",
    "start": "421500",
    "end": "427979"
  },
  {
    "text": "we just looked at and you know you can decide for yourself if I'm speaking from experience okay",
    "start": "427979",
    "end": "434280"
  },
  {
    "text": "so I look at the exception message and I'm like you know product not found okay you know look simple enough let me just",
    "start": "434280",
    "end": "440819"
  },
  {
    "text": "quickly debug this so I look at that failing message drag",
    "start": "440819",
    "end": "445860"
  },
  {
    "text": "it back from the area code to the input queue start that component and boom immediately I run into the exception so",
    "start": "445860",
    "end": "451860"
  },
  {
    "text": "I start looking at the state that I have available the exception message all of that and then I think okay let me just",
    "start": "451860",
    "end": "458160"
  },
  {
    "text": "take a look at the call stack to see how I got here the thing is that I scroll down only to",
    "start": "458160",
    "end": "464280"
  },
  {
    "text": "understand that I'm ingesting a message off for queue so that's not giving me much Insight I don't know how I got here",
    "start": "464280",
    "end": "470759"
  },
  {
    "text": "well that's no problem I'll just start the initiating component that started this entire business transaction and",
    "start": "470759",
    "end": "476699"
  },
  {
    "text": "I'll just take it from there and then I'll be able to you know step into the next method f10f11 debug through it",
    "start": "476699",
    "end": "483000"
  },
  {
    "text": "but that's not going to work either because at some point we are either sending a command or publishing an event",
    "start": "483000",
    "end": "488340"
  },
  {
    "text": "and that's being handled by another component in the system okay you know what I'll just start the entire",
    "start": "488340",
    "end": "496080"
  },
  {
    "text": "solution with all of the components in it and then I should be able to just debug through everything",
    "start": "496080",
    "end": "501780"
  },
  {
    "text": "but that's not going to work either because we decided to split everything up into separate Solutions oh yeah and",
    "start": "501780",
    "end": "506940"
  },
  {
    "text": "separate file stories too whose idea was that okay",
    "start": "506940",
    "end": "513419"
  },
  {
    "text": "I know let me just start up eight different instances a visual studio writer whatever your favorite IDE is",
    "start": "513419",
    "end": "520440"
  },
  {
    "text": "I'll connect the necessary processes together and then I should be able to debug through everything right",
    "start": "520440",
    "end": "527640"
  },
  {
    "text": "should work and I'm a very stubborn person so I'm going at this for a while because I need to make sure that I have all the right infrastructures set up and",
    "start": "527640",
    "end": "535019"
  },
  {
    "text": "all of that but I got there like a few hours fighting with this and I'm debugging through everything I have",
    "start": "535019",
    "end": "542360"
  },
  {
    "text": "157 break points set all over the place but okay I'm looking through things and",
    "start": "542360",
    "end": "548640"
  },
  {
    "text": "I'm like really really close to finding the problem like you have that gut feeling you're like I almost got it just",
    "start": "548640",
    "end": "554399"
  },
  {
    "text": "just leave me alone for five more minutes and I think to myself okay",
    "start": "554399",
    "end": "559980"
  },
  {
    "text": "this breakpoint F10 F10 I should be able to hit a five to the next break so hit a",
    "start": "559980",
    "end": "565860"
  },
  {
    "text": "five everything pauses for a second and I hit another break point and I'm like",
    "start": "565860",
    "end": "571040"
  },
  {
    "text": "dang it I forgot another break point at that point I have Mediterranean rules",
    "start": "571040",
    "end": "577740"
  },
  {
    "text": "I'm already cursing at least three different languages I need a break it's like okay step outside do some breathing",
    "start": "577740",
    "end": "584100"
  },
  {
    "text": "exercises maybe have some comment here or something and I think to myself Lila",
    "start": "584100",
    "end": "589500"
  },
  {
    "text": "get it together like seriously just debugging this how can I do this oh I know let me add some logging so I",
    "start": "589500",
    "end": "598260"
  },
  {
    "text": "go back in fresh energy start adding some log statements all over the place and I'm looking at that information",
    "start": "598260",
    "end": "603839"
  },
  {
    "text": "that's being emitted still debugging through the whole system and I going through things and I see",
    "start": "603839",
    "end": "610080"
  },
  {
    "text": "order 256. and I'm like wait a second wasn't I just",
    "start": "610080",
    "end": "615360"
  },
  {
    "text": "debugging order 325 is this message even mine",
    "start": "615360",
    "end": "620940"
  },
  {
    "text": "so I look at my colleagues and I'm like is there anyone creating orders on the testing environment because I am debugging something right now so don't",
    "start": "620940",
    "end": "627660"
  },
  {
    "text": "touch anything now at that point my colleagues look at me in disbelief they're like what are",
    "start": "627660",
    "end": "634560"
  },
  {
    "text": "you doing are you debugging the whole system you know I'm gonna try I'm trying to fix",
    "start": "634560",
    "end": "641100"
  },
  {
    "text": "this issue and they say well do you think anyone at Amazon runs into a failure and thinks to",
    "start": "641100",
    "end": "647160"
  },
  {
    "text": "themselves oh let me just fire up the amazon and I'll debug through this but you know if you put it like that I",
    "start": "647160",
    "end": "653880"
  },
  {
    "text": "guess not but then the question is what do we then do instead right",
    "start": "653880",
    "end": "659279"
  },
  {
    "text": "well we test and if I'm stating the obvious to you right now awesome because testing is important independent of any",
    "start": "659279",
    "end": "665940"
  },
  {
    "text": "architectural style that we are using in the system but if we're running in a message based system where components",
    "start": "665940",
    "end": "671940"
  },
  {
    "text": "are interacting with each other all the time then it's really crucial to have a sort of strong testing strategy to",
    "start": "671940",
    "end": "678600"
  },
  {
    "text": "support that as well so any testing strategies are sort of outside the scope of this talk but I do",
    "start": "678600",
    "end": "684480"
  },
  {
    "text": "want to give you sort of a few things to remember especially in the context of testing message based systems",
    "start": "684480",
    "end": "691140"
  },
  {
    "text": "and I have rethinking the rule of three what does that mean well I've used for",
    "start": "691140",
    "end": "696360"
  },
  {
    "text": "years AAA syntax who's ever used that before okay cool but there's given when then",
    "start": "696360",
    "end": "701820"
  },
  {
    "text": "who's used that before right but it's all sort of the same thing right you're preparing some input you executed this scenario and then",
    "start": "701820",
    "end": "708600"
  },
  {
    "text": "you're going to verify what basically what the system has done and whether that sort of matches your expectations",
    "start": "708600",
    "end": "714959"
  },
  {
    "text": "so if you think about that in terms of message of messaging when you sort of prepare that test input we want to",
    "start": "714959",
    "end": "721140"
  },
  {
    "text": "prepare a message and as part of executing that sort of action we're gonna invoke the message Handler that's going",
    "start": "721140",
    "end": "728339"
  },
  {
    "text": "to be responsible for basically processing that message but it's a verification phase where",
    "start": "728339",
    "end": "733440"
  },
  {
    "text": "things get a little bit more interesting because not only do we want to verify any desired outcome in terms of data",
    "start": "733440",
    "end": "739560"
  },
  {
    "text": "modifications API calls or whatnot but we also want to verify any of the",
    "start": "739560",
    "end": "745500"
  },
  {
    "text": "outgoing messages that were sent or published as part of basically processing that specific message why is",
    "start": "745500",
    "end": "752279"
  },
  {
    "text": "that so important because that's how we're doing the handoff to the next component in the system the next",
    "start": "752279",
    "end": "758100"
  },
  {
    "text": "component whoever is you know receiving that message or subscribed to that event is going to be banking decisions based",
    "start": "758100",
    "end": "764760"
  },
  {
    "text": "on that information that they are receiving there so it's really important to check that including whatever content",
    "start": "764760",
    "end": "771000"
  },
  {
    "text": "that is in those messages that's all good but you know as always the devil is in the details right and",
    "start": "771000",
    "end": "778200"
  },
  {
    "text": "with the details I mean the order so one common mistakes that we tend to make a lot when we write code is that we",
    "start": "778200",
    "end": "785639"
  },
  {
    "text": "tend to make a lot of assumptions about the state that the system finds itself in and the thing is that if those",
    "start": "785639",
    "end": "792000"
  },
  {
    "text": "assumptions don't hold up in a production environment then your handlers might start failing all over",
    "start": "792000",
    "end": "797760"
  },
  {
    "text": "the place now that's a little abstract so let's take a look at an example I have this",
    "start": "797760",
    "end": "802800"
  },
  {
    "text": "sort of naive stock update implementation here so this is the sort of update product stock Handler and what",
    "start": "802800",
    "end": "809339"
  },
  {
    "text": "we are doing is I'm looking at you know what the message payload tells me increase stock decrease stock and I'm",
    "start": "809339",
    "end": "814680"
  },
  {
    "text": "just executing that but we also added a guard class because",
    "start": "814680",
    "end": "820200"
  },
  {
    "text": "you know you cannot have a negative stock I mean who has minus 10 Place PlayStations in stock that doesn't make",
    "start": "820200",
    "end": "826560"
  },
  {
    "text": "any sense the thing is that that's an assumption right there because is it really true",
    "start": "826560",
    "end": "832800"
  },
  {
    "text": "that the stock can never ever be negative let's walk through this for a second and",
    "start": "832800",
    "end": "837839"
  },
  {
    "text": "sort of zoom in into how this domain is set up currently so the way it works now we have that place order coming in in",
    "start": "837839",
    "end": "845700"
  },
  {
    "text": "sales we make sure it's paid and then that becomes a sort of trigger to update the stock",
    "start": "845700",
    "end": "851339"
  },
  {
    "text": "but imagine that you know we're it's release day right for whatever",
    "start": "851339",
    "end": "856560"
  },
  {
    "text": "PlayStation or whatever thing you like I'm not really a gamer so I don't care as much but",
    "start": "856560",
    "end": "862620"
  },
  {
    "text": "um and there's so many sales coming in at the same time and you know someone is",
    "start": "862620",
    "end": "867720"
  },
  {
    "text": "receiving a massive truck of PlayStations on the other side goes in puts that into system that's an",
    "start": "867720",
    "end": "874139"
  },
  {
    "text": "increased stock message right at the same time we're selling a massive amount of PlayStation resulting in those",
    "start": "874139",
    "end": "880980"
  },
  {
    "text": "decreased stocks now there's all in the same queue right but that increased stock message somewhere at the bottom in",
    "start": "880980",
    "end": "887399"
  },
  {
    "text": "the meantime we are selling it so we have all of the stock available system doesn't reflect it yet so it's",
    "start": "887399",
    "end": "893940"
  },
  {
    "text": "situations like these that could trigger that sort of guard Clause to make the system explode at that point",
    "start": "893940",
    "end": "900240"
  },
  {
    "text": "so you could say well you know we'll just reserve the stock immediately when you complete the sale right and although",
    "start": "900240",
    "end": "906360"
  },
  {
    "text": "you might be able to sort of alleviate the problem a little bit you're not going to get rid of it entirely it might",
    "start": "906360",
    "end": "911880"
  },
  {
    "text": "still happen especially if you're running in sort of high throughput scenarios and you might think to yourself well",
    "start": "911880",
    "end": "917699"
  },
  {
    "text": "okay you know we'll just reserve the stock whenever you put something in your shopping basket",
    "start": "917699",
    "end": "923579"
  },
  {
    "text": "that's possible I've actually seen web shops doing this but there's also a risk to that right because I like to shop",
    "start": "923579",
    "end": "930120"
  },
  {
    "text": "around on Plenty of web shops put a lot of stuff in my shopping basket does that",
    "start": "930120",
    "end": "935220"
  },
  {
    "text": "mean I buy all of it no I don't think my husband would appreciate that right so that's also a",
    "start": "935220",
    "end": "941339"
  },
  {
    "text": "risk so how do we solve this type of problem then instead well the thing is that we need to let go",
    "start": "941339",
    "end": "947639"
  },
  {
    "text": "of this assumption that the stock cannot be negative and then we can start looking at what type of scenarios that",
    "start": "947639",
    "end": "952680"
  },
  {
    "text": "opens up so in this scenario we could say you know whenever our order is placed what",
    "start": "952680",
    "end": "958019"
  },
  {
    "text": "we're going to do is basically send a message to the stock endpoint and say hey do you have this stock available if",
    "start": "958019",
    "end": "964440"
  },
  {
    "text": "stock says yep I have everything cool then everything is good in the world",
    "start": "964440",
    "end": "969480"
  },
  {
    "text": "right and then we can just move on and basically complete the sale if there's insufficient stock then we could for",
    "start": "969480",
    "end": "976380"
  },
  {
    "text": "example do something like okay we're going to send a delayed message two days in the future and",
    "start": "976380",
    "end": "983279"
  },
  {
    "text": "basically go verify whether this sale was now completely shipped and if not we're going to refund that order",
    "start": "983279",
    "end": "989519"
  },
  {
    "text": "and this is actually a real life scenario because a while ago while a while ago a few years ago at this point",
    "start": "989519",
    "end": "994800"
  },
  {
    "text": "where we were like in the middle of covet I was sort of shopping around for like a big home office screen 49 inch",
    "start": "994800",
    "end": "1002240"
  },
  {
    "text": "because reasons and I was trying to find someone and they were depleted everywhere so I was",
    "start": "1002240",
    "end": "1008839"
  },
  {
    "text": "just hoping to find one in stock found one shop in the Netherlands I'm from Belgium and it said next day delivery so",
    "start": "1008839",
    "end": "1015680"
  },
  {
    "text": "I was like okay let me just quickly order this and only and I was happy and then two",
    "start": "1015680",
    "end": "1021380"
  },
  {
    "text": "hours later I get an email in my inbox saying sorry it's out of stock but you",
    "start": "1021380",
    "end": "1026480"
  },
  {
    "text": "know we're going to back order this for you and if it doesn't arrive to your house within two three business days",
    "start": "1026480",
    "end": "1032120"
  },
  {
    "text": "then we'll just refund your money right if you're looking at this example and thinking but I have five other",
    "start": "1032120",
    "end": "1038839"
  },
  {
    "text": "possible solutions sure you do I'm sure I believe you and there's probably even better Solutions but what I'm trying to",
    "start": "1038839",
    "end": "1045980"
  },
  {
    "text": "sort of make you think about is to start thinking about the assumptions that you have hidden in your code base",
    "start": "1045980",
    "end": "1052520"
  },
  {
    "text": "think how what if this doesn't hold up in a production environment what what effect is that going to have on the",
    "start": "1052520",
    "end": "1058640"
  },
  {
    "text": "system and could I basically be modeling things in a different manner so that we",
    "start": "1058640",
    "end": "1063679"
  },
  {
    "text": "could just not run into this problem at all and just handle it differently so this is where we want to talk to our",
    "start": "1063679",
    "end": "1070039"
  },
  {
    "text": "business experts right because if you would go with this specific scenario to a business Expert and say well we can't",
    "start": "1070039",
    "end": "1076280"
  },
  {
    "text": "sell any stock that we don't have they'll tell you of course we can just sell everything we'll try to back order",
    "start": "1076280",
    "end": "1082039"
  },
  {
    "text": "or give them a voucher and then we already have the money and they'll just have to spend it with us right that's",
    "start": "1082039",
    "end": "1087380"
  },
  {
    "text": "how businesses work so okay let's recap this first part",
    "start": "1087380",
    "end": "1093799"
  },
  {
    "text": "do you run into a failure do you want to add more tests you're missing at least one but probably more test scenarios",
    "start": "1093799",
    "end": "1100460"
  },
  {
    "text": "when whenever you run into a failure right also assert any outgoing messages that are being sent or published as part",
    "start": "1100460",
    "end": "1108020"
  },
  {
    "text": "of processing a specific incoming message and then also be very aware of the assumptions that you're making in the",
    "start": "1108020",
    "end": "1114200"
  },
  {
    "text": "system and one of the tools that I like to sort of use when I talk to business experts because remember that even these",
    "start": "1114200",
    "end": "1120440"
  },
  {
    "text": "people have been sort of working with you on a system for maybe years and they also get stuck in their own assumptions",
    "start": "1120440",
    "end": "1127340"
  },
  {
    "text": "so sometimes it's helpful to say what if there was no computer system at all what if you were just running this as a sort",
    "start": "1127340",
    "end": "1133580"
  },
  {
    "text": "of physical environment just a shop and running this with the books what would you do and that can sort of so sometimes",
    "start": "1133580",
    "end": "1139700"
  },
  {
    "text": "give you like a completely different perspective as well and finally expect out of order messages",
    "start": "1139700",
    "end": "1145460"
  },
  {
    "text": "to happen they will happen like don't put your hand in the sand it could be concurrency retries it could be",
    "start": "1145460",
    "end": "1151179"
  },
  {
    "text": "infrastructure reliability whatever it is we can always assume that things are going to happen exactly in the specific",
    "start": "1151179",
    "end": "1158240"
  },
  {
    "text": "order that we expect them to so okay our team's Lauren ipsum and",
    "start": "1158240",
    "end": "1163280"
  },
  {
    "text": "donor they took this really seriously and they came up with a very consistent testing strategy you know continuous",
    "start": "1163280",
    "end": "1169460"
  },
  {
    "text": "integration everything looks green they're like okay let's go to production we're good to go so they do that and",
    "start": "1169460",
    "end": "1175640"
  },
  {
    "text": "they've been running actually quite successfully in production for a while but then there's this guy Murphy that",
    "start": "1175640",
    "end": "1180919"
  },
  {
    "text": "comes knocking down their door and a failure occurs in production well what do we do then",
    "start": "1180919",
    "end": "1186919"
  },
  {
    "text": "failure we add more tests thank you just said it right so",
    "start": "1186919",
    "end": "1192500"
  },
  {
    "text": "whatever you run into a failure you add more tests but the thing is what if you look at that message payload",
    "start": "1192500",
    "end": "1198740"
  },
  {
    "text": "and you think to yourself this doesn't make any sense this data is bogus like of course this fails like how",
    "start": "1198740",
    "end": "1205400"
  },
  {
    "text": "did I get this information to begin with so let's go back to our previous example of that call stack right so we run into",
    "start": "1205400",
    "end": "1212120"
  },
  {
    "text": "an invalid operation exception because that product does not exist so the product ID basically doesn't make",
    "start": "1212120",
    "end": "1219620"
  },
  {
    "text": "any sense now in order to understand where we got that from we need to understand where does this information",
    "start": "1219620",
    "end": "1225080"
  },
  {
    "text": "come from it basically came Upstream right so we go up and we realize oh it's due to that order packaged event being",
    "start": "1225080",
    "end": "1231860"
  },
  {
    "text": "published that we sent that update stock message to begin with but that's not that was just sort of",
    "start": "1231860",
    "end": "1237559"
  },
  {
    "text": "reaching over those ordered lines and taking the information that was in there so we need to go up further and see oh",
    "start": "1237559",
    "end": "1243320"
  },
  {
    "text": "it was when the order placed event was published that those product IDs were",
    "start": "1243320",
    "end": "1248480"
  },
  {
    "text": "incorrectly mapped now the thing is how do we solve such",
    "start": "1248480",
    "end": "1254000"
  },
  {
    "text": "problems in a distributed system well we basically need to big picture we can't",
    "start": "1254000",
    "end": "1259940"
  },
  {
    "text": "really look at a sort of single component to be able to catch these larger problems because clearly this is",
    "start": "1259940",
    "end": "1266720"
  },
  {
    "text": "a simple example but imagine you know that happening like 10 messages upstream",
    "start": "1266720",
    "end": "1272480"
  },
  {
    "text": "and then it becomes a lot more complex so we need to be able to sort of follow the business transaction through all of",
    "start": "1272480",
    "end": "1279020"
  },
  {
    "text": "those participating components right that could be rest apis it could be other components it could be messages",
    "start": "1279020",
    "end": "1285320"
  },
  {
    "text": "flowing through a message broker you know anything you're getting from the database and so forth and we also want",
    "start": "1285320",
    "end": "1290900"
  },
  {
    "text": "to include context for sort of each of those individual steps that take part in that business transaction as well",
    "start": "1290900",
    "end": "1297980"
  },
  {
    "text": "and that's exactly what distributed tracing is for so distributed tracing is getting like a",
    "start": "1297980",
    "end": "1303320"
  },
  {
    "text": "lot of attention lately probably due to the rise of microservices but it's actually not that new it's sort of",
    "start": "1303320",
    "end": "1309860"
  },
  {
    "text": "emerged in the late 2000s when a lot of the things that we were talking about was service oriented architecture still",
    "start": "1309860",
    "end": "1316400"
  },
  {
    "text": "right now the thing is it that is that it doesn't really matter which type of",
    "start": "1316400",
    "end": "1321980"
  },
  {
    "text": "architectural style that you are using in your system because once you start decoupling the system and you have",
    "start": "1321980",
    "end": "1327740"
  },
  {
    "text": "multiple components that are interacting with each other you sort of need to be able to understand how those components",
    "start": "1327740",
    "end": "1334039"
  },
  {
    "text": "are interacting with each other what data is being passed along in which order and so forth to be able to understand these types of problems",
    "start": "1334039",
    "end": "1341600"
  },
  {
    "text": "so okay our teams are like you know distributed tracing we need to do this",
    "start": "1341600",
    "end": "1347240"
  },
  {
    "text": "and if you remember our teams operate autonomously right they could choose whatever tools Frameworks and whatever",
    "start": "1347240",
    "end": "1353600"
  },
  {
    "text": "it was that best suits their own needs so they start looking at what's available out there for distributed",
    "start": "1353600",
    "end": "1358940"
  },
  {
    "text": "tracing and they see wow there's actually a bunch of Frameworks and tools available for us to choose from",
    "start": "1358940",
    "end": "1364700"
  },
  {
    "text": "so what happens is that you have team lorem that says let's use Jaeger and then you have Team Epsom that says well",
    "start": "1364700",
    "end": "1371720"
  },
  {
    "text": "you know we're already using Azure monitor application insights so we might as well go with that one",
    "start": "1371720",
    "end": "1377419"
  },
  {
    "text": "and it's really problems like these that made them Clash because what's",
    "start": "1377419",
    "end": "1382640"
  },
  {
    "text": "happening is that although each of those teams are basically collecting very",
    "start": "1382640",
    "end": "1387799"
  },
  {
    "text": "useful instrumentation from their systems the problem is is that stored in a vendor-specific format",
    "start": "1387799",
    "end": "1394340"
  },
  {
    "text": "and it's problems like these that's that sort of lead to a sort of higher need for standardizations what do we then do",
    "start": "1394340",
    "end": "1400460"
  },
  {
    "text": "as an industry create multiple standards right so we have the cloud native Computing",
    "start": "1400460",
    "end": "1406640"
  },
  {
    "text": "foundation with their open tracing specification for distributed traces and",
    "start": "1406640",
    "end": "1411919"
  },
  {
    "text": "around the same time frame Google open source their open senses specification which is a sort of standard for tracing",
    "start": "1411919",
    "end": "1418280"
  },
  {
    "text": "and metrics and then as an industry we're good at this right we always just keep creating",
    "start": "1418280",
    "end": "1423919"
  },
  {
    "text": "another standard until we have 15. but this time these teams got together and",
    "start": "1423919",
    "end": "1429140"
  },
  {
    "text": "said come on let's get it together for once right and try to sort of merge them together and that's how open Telemetry",
    "start": "1429140",
    "end": "1436400"
  },
  {
    "text": "came to be so they basically looked at each individual the sort of individual",
    "start": "1436400",
    "end": "1441500"
  },
  {
    "text": "strength of each specification merge them together provided an upgrade path for the previous users and took that",
    "start": "1441500",
    "end": "1448760"
  },
  {
    "text": "into account when working on open telemetry so what is open Telemetry exactly it's",
    "start": "1448760",
    "end": "1454760"
  },
  {
    "text": "basically a sort of Open Source observability framework composed of a set of tools apis and sdks and the sort",
    "start": "1454760",
    "end": "1462200"
  },
  {
    "text": "of goal of this project is that we can basically standardize how teams",
    "start": "1462200",
    "end": "1468159"
  },
  {
    "text": "instruments analyze and Export Telemetry information from their applications",
    "start": "1468159",
    "end": "1474200"
  },
  {
    "text": "it's also available across platform cross runtime I think at this point it's 11 programming languages or something",
    "start": "1474200",
    "end": "1480320"
  },
  {
    "text": "like that so even if you're using multiple Stacks you're probably covered",
    "start": "1480320",
    "end": "1485659"
  },
  {
    "text": "and and the thing is I'm seeing observability framework who's heard of that word before observability",
    "start": "1485659",
    "end": "1493100"
  },
  {
    "text": "okay that's actually quite a lot but it's quite a new terms I'm going to take some time to explain it anyway right",
    "start": "1493100",
    "end": "1498980"
  },
  {
    "text": "because for software to be observable right we need to understand the inner workings of a system which means that we",
    "start": "1498980",
    "end": "1506840"
  },
  {
    "text": "need to understand any expected state that the system may arrive to but also any unexpected state right the unknown",
    "start": "1506840",
    "end": "1513799"
  },
  {
    "text": "unknowns and you need to be able to do that without changing any code deploying new",
    "start": "1513799",
    "end": "1519559"
  },
  {
    "text": "versions adding lock statements stuff like that that's that's not what observability is",
    "start": "1519559",
    "end": "1525559"
  },
  {
    "text": "the idea is that we're going to collect information inside the application then go store that outside of the application",
    "start": "1525559",
    "end": "1532460"
  },
  {
    "text": "and then we can use specialized tools to sort of query and analyze that information in order to get actionable",
    "start": "1532460",
    "end": "1539539"
  },
  {
    "text": "insights to go and improve our application so no going into your database and",
    "start": "1539539",
    "end": "1545419"
  },
  {
    "text": "querying things that's not really what observability is right and open Telemetry supports multiple ways of",
    "start": "1545419",
    "end": "1552260"
  },
  {
    "text": "increasing the observability of a system it supports it supports three so-called observability signals traces logs and",
    "start": "1552260",
    "end": "1559400"
  },
  {
    "text": "metrics and each of these are sort of individual components that provide some insight into what is happening inside",
    "start": "1559400",
    "end": "1566000"
  },
  {
    "text": "the application as well but I sort of like to look at these as metrics or your",
    "start": "1566000",
    "end": "1571279"
  },
  {
    "text": "sort of known unknowns because if you're capturing a metric then it's probably something that you expect might go wrong",
    "start": "1571279",
    "end": "1577820"
  },
  {
    "text": "at some point but you're probably going to have to rely on your traces and your logs whenever an unknown unknown is going to",
    "start": "1577820",
    "end": "1585020"
  },
  {
    "text": "occur in a production environment so let's start with traces what is a trace exactly well a trace is going to",
    "start": "1585020",
    "end": "1592760"
  },
  {
    "text": "track the progression of a request across multiple components of your system and I like to think of this as a",
    "start": "1592760",
    "end": "1599360"
  },
  {
    "text": "sort of business transaction that's occurring in the system is basically you could represent this as sort of tree of spans and a span is",
    "start": "1599360",
    "end": "1606919"
  },
  {
    "text": "basically a single unit of work that is occurring as part of that distributed Trace could be getting a message off of",
    "start": "1606919",
    "end": "1613039"
  },
  {
    "text": "a broker could be querying for some data it could be just a sort of expensive calculation that is happening in the",
    "start": "1613039",
    "end": "1619100"
  },
  {
    "text": "system and each of those spans and also carries a context so think of that as sort of",
    "start": "1619100",
    "end": "1624559"
  },
  {
    "text": "key value pairs that give you a little bit more insight into what is happening in that specific unit of work what data",
    "start": "1624559",
    "end": "1630919"
  },
  {
    "text": "is being passed along what are we making decisions based upon that's a little bit abstract so let's",
    "start": "1630919",
    "end": "1637159"
  },
  {
    "text": "take a look at a visual representation so as you can see um the right the right that's basically",
    "start": "1637159",
    "end": "1645380"
  },
  {
    "text": "the same Trace ID for for all of those spans so each individual colored block",
    "start": "1645380",
    "end": "1650600"
  },
  {
    "text": "is a span that is participating in that larger distributed trace and as you can",
    "start": "1650600",
    "end": "1656179"
  },
  {
    "text": "see they're also being emitted by different components right so they're coming from different processes",
    "start": "1656179",
    "end": "1661460"
  },
  {
    "text": "different Services altogether and if you sort of take a step back and",
    "start": "1661460",
    "end": "1666620"
  },
  {
    "text": "look at that you might think well that looks kind of familiar because it's basically a distributed call stack that",
    "start": "1666620",
    "end": "1673520"
  },
  {
    "text": "we've built and it gets even better because what we can do is we can sort of zoom in into an",
    "start": "1673520",
    "end": "1679039"
  },
  {
    "text": "individual span right that represents an individual unit of work that took part in that larger trace and we can take a",
    "start": "1679039",
    "end": "1685760"
  },
  {
    "text": "look at the sort of context that that carried right so we can see here the",
    "start": "1685760",
    "end": "1691039"
  },
  {
    "text": "message ID which destination that was being sent to and then some information about the order as well we can also see",
    "start": "1691039",
    "end": "1696440"
  },
  {
    "text": "some events that were emitted as part of that unit of work and that gives us a lot more insight into what was happening",
    "start": "1696440",
    "end": "1705039"
  },
  {
    "text": "so to bring it back to the previous example that I was completely unable to the bug then what we would do is we",
    "start": "1705039",
    "end": "1711980"
  },
  {
    "text": "would go into our observability backend and I'll talk a little bit about that later and we would try to find field",
    "start": "1711980",
    "end": "1718460"
  },
  {
    "text": "spans and then the update product stock spans would come up",
    "start": "1718460",
    "end": "1723500"
  },
  {
    "text": "and we would say okay those don't tell us anything but at that point we can sort of navigate up the tree to try to",
    "start": "1723500",
    "end": "1729260"
  },
  {
    "text": "understand where we can see some context that looks of and that would then lead us to that order place event where we",
    "start": "1729260",
    "end": "1735440"
  },
  {
    "text": "can basically see that the IDS were incorrectly mapped",
    "start": "1735440",
    "end": "1740440"
  },
  {
    "text": "now the question is how does this tray sort of work how does that get connected across so many boundaries right because",
    "start": "1740480",
    "end": "1747200"
  },
  {
    "text": "we're crossing the network we're crossing security boundaries how does that work well for that Trace to sort of be",
    "start": "1747200",
    "end": "1753440"
  },
  {
    "text": "connected therefore distributed we need some kind of a propagation mechanism and",
    "start": "1753440",
    "end": "1758600"
  },
  {
    "text": "that usually happens through a standardized protocol and one of the protocols that's recognized by the open Telemetry project",
    "start": "1758600",
    "end": "1765220"
  },
  {
    "text": "is a w3c trace context for HTTP headers rolls off the tongue I don't know why",
    "start": "1765220",
    "end": "1772460"
  },
  {
    "text": "they make it so incredibly long what it really does adds a transparent",
    "start": "1772460",
    "end": "1778100"
  },
  {
    "text": "header to every outgoing request looks a little bit like this sort of concatenation of multiple IDs but",
    "start": "1778100",
    "end": "1783620"
  },
  {
    "text": "looking at the hyphens they do have some meaning so the first part is basically the version of the protocol in this case",
    "start": "1783620",
    "end": "1788960"
  },
  {
    "text": "Zero the second part is a trace ID that is going to be assigned when basically",
    "start": "1788960",
    "end": "1794240"
  },
  {
    "text": "the distributed Trace start and at that point it's going to be copied by each subsequent span that participates in",
    "start": "1794240",
    "end": "1801260"
  },
  {
    "text": "that distributed Trace so that next section is a span ID that's going to be unique for every span and",
    "start": "1801260",
    "end": "1808460"
  },
  {
    "text": "finally we have some Trace Flags to indicate sampling decisions and things like that",
    "start": "1808460",
    "end": "1814220"
  },
  {
    "text": "so if you're in the.net space hence almost anyone",
    "start": "1814220",
    "end": "1819980"
  },
  {
    "text": "then you want to get started with this and Microsoft has made it easy for you why because they built it into.net it's",
    "start": "1819980",
    "end": "1826279"
  },
  {
    "text": "available from.net 5 and onwards in the activity API or if you're still running",
    "start": "1826279",
    "end": "1832520"
  },
  {
    "text": "on previous versions of.net or godforbits.net framework there's still plenty of very successful.net framework",
    "start": "1832520",
    "end": "1839840"
  },
  {
    "text": "applications running in production so absolutely no shaving that then you can just pull in the system Diagnostics",
    "start": "1839840",
    "end": "1846200"
  },
  {
    "text": "diagnostic Source nougat package to get basically access to the same capabilities",
    "start": "1846200",
    "end": "1851539"
  },
  {
    "text": "and it's pretty easy to sort of set up tracing because the only thing you need to do is select the sources from which",
    "start": "1851539",
    "end": "1857480"
  },
  {
    "text": "you want to collect instrumentation and then set up a sort of exporter to then send that Telemetry to an observability",
    "start": "1857480",
    "end": "1863899"
  },
  {
    "text": "backend and you hardly really need to change any code for that so let me show you a",
    "start": "1863899",
    "end": "1869600"
  },
  {
    "text": "snippet if you're using the.net generic host could look as simple as this so I'm",
    "start": "1869600",
    "end": "1874820"
  },
  {
    "text": "basically pulling in the open Telemetry extensions hosting package that makes that ad open Telemetry method available",
    "start": "1874820",
    "end": "1882200"
  },
  {
    "text": "and then at that point I once I gave a sort of very recognizable name to my",
    "start": "1882200",
    "end": "1888140"
  },
  {
    "text": "service because remember that that data is going to be stored outside of the application so you want to be able to",
    "start": "1888140",
    "end": "1893659"
  },
  {
    "text": "understand which specific component emitted that information so make sure that that's not bogus right and then you",
    "start": "1893659",
    "end": "1901520"
  },
  {
    "text": "want to collect you basically set up the sources from which you want to collect tracing information in this example and",
    "start": "1901520",
    "end": "1908360"
  },
  {
    "text": "then you set up you could set up exporters like this this is the sort of easiest way to do this what it means",
    "start": "1908360",
    "end": "1914600"
  },
  {
    "text": "that each individual service that is set up this way will basically collect the information",
    "start": "1914600",
    "end": "1920120"
  },
  {
    "text": "and immediately send it to the exporter there are way more advanced scenarios to set this up with the open Telemetry",
    "start": "1920120",
    "end": "1925940"
  },
  {
    "text": "collector but that's for another session I hope to be back right so if you're looking at the sort of",
    "start": "1925940",
    "end": "1932600"
  },
  {
    "text": "exporters that you could use or more accurately the observability backends there are multiple choices available",
    "start": "1932600",
    "end": "1939500"
  },
  {
    "text": "right the beauty of a standard is that it doesn't really matter which specific observability backend that you are using",
    "start": "1939500",
    "end": "1946399"
  },
  {
    "text": "right because that data is going to be stored in they see in the same format so whatever works for you whatever needs",
    "start": "1946399",
    "end": "1953120"
  },
  {
    "text": "you have within your team within your system look at the right tooling and just go with that",
    "start": "1953120",
    "end": "1959659"
  },
  {
    "text": "but before you start adding any application specific tracing we need to",
    "start": "1959659",
    "end": "1964760"
  },
  {
    "text": "start looking at what's out there because the community really has us covered with this there's been a lot of",
    "start": "1964760",
    "end": "1969860"
  },
  {
    "text": "support for the open Telemetry project it's actually the second most popular or highest philosophy project after",
    "start": "1969860",
    "end": "1975799"
  },
  {
    "text": "kubernetes so it's pretty crazy and if you look at you know what type of uh you know a sort of Frameworks you",
    "start": "1975799",
    "end": "1983360"
  },
  {
    "text": "might be using in your application you'll find that there's already open Telemetry support for many of those and",
    "start": "1983360",
    "end": "1989720"
  },
  {
    "text": "if you sort of look at this and if you think about the sort of challenges of debugging distributed systems it's",
    "start": "1989720",
    "end": "1995600"
  },
  {
    "text": "usually that we have blind spot wherever inter-service communication occurs but if you just look at all the packages",
    "start": "1995600",
    "end": "2002140"
  },
  {
    "text": "that we have here we're already covered right we have HTTP client asp.net core",
    "start": "2002140",
    "end": "2008019"
  },
  {
    "text": "grpc we we have any messaging libraries that already have support for instrumentation that would give us sort",
    "start": "2008019",
    "end": "2014679"
  },
  {
    "text": "of that insight and then we can go and and enrich that information",
    "start": "2014679",
    "end": "2019720"
  },
  {
    "text": "now if you go and you start reading the documentation the open Telemetry specification documentation you look at",
    "start": "2019720",
    "end": "2026320"
  },
  {
    "text": "some.net documentation you're going to get confused really quickly because they",
    "start": "2026320",
    "end": "2031480"
  },
  {
    "text": "basically are using different type of language now why is that because Microsoft already had a sort of tracing",
    "start": "2031480",
    "end": "2039519"
  },
  {
    "text": "API available the activity API and instead of sort of creating a completely new API what they did is basically",
    "start": "2039519",
    "end": "2046419"
  },
  {
    "text": "implement the open Telemetry specification inside the activity API so there's a few things that you need to be",
    "start": "2046419",
    "end": "2052960"
  },
  {
    "text": "aware of probably because they didn't want to rewrite half of their own applications right but if you see the",
    "start": "2052960",
    "end": "2059560"
  },
  {
    "text": "mention of a tracer in open Telemetry that's an activitysource in.net a span is represented by an activity span",
    "start": "2059560",
    "end": "2066280"
  },
  {
    "text": "context activity context and finally the span attributes are tags on the activity",
    "start": "2066280",
    "end": "2072878"
  },
  {
    "text": "in.net if you're running in a sort of multi-stack type of system and you",
    "start": "2072879",
    "end": "2078580"
  },
  {
    "text": "really want to keep the language the same then there's also a shim available that you can use but that requires",
    "start": "2078580",
    "end": "2083800"
  },
  {
    "text": "adding in another package okay so before we actually look at the",
    "start": "2083800",
    "end": "2090460"
  },
  {
    "text": "code on how you sort of add tracing to your application I want to take some time and and sort of think through what",
    "start": "2090460",
    "end": "2098560"
  },
  {
    "text": "is the type of information that you should be adding tracing for to begin with right and one of the examples that I",
    "start": "2098560",
    "end": "2104740"
  },
  {
    "text": "like to use is how many times we close issues because we can't reproduce them",
    "start": "2104740",
    "end": "2111339"
  },
  {
    "text": "who's ever closed an issue because you can't reproduce them I want to see every hand because",
    "start": "2111339",
    "end": "2116680"
  },
  {
    "text": "otherwise you're not being honest or you fell asleep",
    "start": "2116680",
    "end": "2121900"
  },
  {
    "text": "we even have banners for it right it works on my machine I have one on my laptop",
    "start": "2121900",
    "end": "2128020"
  },
  {
    "text": "but imagine if you could easily connect a specific user action to a trace and",
    "start": "2128020",
    "end": "2134079"
  },
  {
    "text": "say oh that was John Friday 3 P.M and find the trace then we could actually go back and look",
    "start": "2134079",
    "end": "2140800"
  },
  {
    "text": "at the friction that that user experienced because I promise you they were not imagining it right the thing is",
    "start": "2140800",
    "end": "2146140"
  },
  {
    "text": "that when users use a system they're not paying attention to each individual action that they're executing and sort",
    "start": "2146140",
    "end": "2152200"
  },
  {
    "text": "of looking at that order so when something happens they're like what did I do they'll just raise an issue with",
    "start": "2152200",
    "end": "2157660"
  },
  {
    "text": "the information that they remember right but if we can just easily connect that we can get the entire scope of",
    "start": "2157660",
    "end": "2164020"
  },
  {
    "text": "information to understand what occurred another question ask yourself is how",
    "start": "2164020",
    "end": "2170020"
  },
  {
    "text": "easily can you sort of group similar traces together things that stand out in",
    "start": "2170020",
    "end": "2175180"
  },
  {
    "text": "latency in specific attributes that they carry so that you could sort of",
    "start": "2175180",
    "end": "2180280"
  },
  {
    "text": "understand what things stand out there maybe in performance as well",
    "start": "2180280",
    "end": "2186000"
  },
  {
    "text": "okay you identify the most load generating operations in your system do they happen in a specific part of",
    "start": "2186040",
    "end": "2192400"
  },
  {
    "text": "your user base or do they happen maybe at a specific time in the day are they",
    "start": "2192400",
    "end": "2198099"
  },
  {
    "text": "specific to a geographical location and do you need to maybe scale out parts of",
    "start": "2198099",
    "end": "2203440"
  },
  {
    "text": "your infrastructure can you identify which users are stressing out your system what are they",
    "start": "2203440",
    "end": "2210640"
  },
  {
    "text": "doing and in which order are they doing things why do they get to sort of create that friction in the system as opposed",
    "start": "2210640",
    "end": "2217240"
  },
  {
    "text": "to other users and finally how easily can you find suspicious events throughout the systems",
    "start": "2217240",
    "end": "2224380"
  },
  {
    "text": "right is there someone doing something funky or another completely utter example let's say that you wrote a book",
    "start": "2224380",
    "end": "2230260"
  },
  {
    "text": "you're like okay may I cool but I'll fix it deploy it and then someone from the",
    "start": "2230260",
    "end": "2235780"
  },
  {
    "text": "business walks up to you and says hey Leila good that you fixed the bug can you tell me how many customers were",
    "start": "2235780",
    "end": "2241960"
  },
  {
    "text": "affected by this uh I don't know observability could also help you sort",
    "start": "2241960",
    "end": "2249099"
  },
  {
    "text": "of answer those types of questions as well so I look at these sort of questions as seeds to plant in your",
    "start": "2249099",
    "end": "2255280"
  },
  {
    "text": "brain and I think what I would recommend is that you come up with your own set of questions and document them on what you",
    "start": "2255280",
    "end": "2262599"
  },
  {
    "text": "expect to get out of the Telemetry that you are collecting from your application so that we can also do this in a sort of",
    "start": "2262599",
    "end": "2268660"
  },
  {
    "text": "consistent Manner and get the same quality of instrumentation across an entire system multiple teams multiple",
    "start": "2268660",
    "end": "2274359"
  },
  {
    "text": "people working on it as well okay now we can finally look at some code so",
    "start": "2274359",
    "end": "2280240"
  },
  {
    "text": "if you want to start creating some application specific traces in.net you're going to need an activity Source",
    "start": "2280240",
    "end": "2285700"
  },
  {
    "text": "now that needs to be uniquely named representing the component that's submitting the Telemetry and you could",
    "start": "2285700",
    "end": "2292540"
  },
  {
    "text": "ask yourself whether you want to use sub-components or use some kind of configuration now think about the amount",
    "start": "2292540",
    "end": "2301359"
  },
  {
    "text": "of traces that you're emitting right if there are any traces that you want to be able to opt out from so you want list",
    "start": "2301359",
    "end": "2308260"
  },
  {
    "text": "sort of spans to be collected as part of that distributed Trace then what you would do is create an additional",
    "start": "2308260",
    "end": "2314920"
  },
  {
    "text": "activity source and you could maybe end up with stock.core and stock.calculation",
    "start": "2314920",
    "end": "2321240"
  },
  {
    "text": "whoever wants a Telemetry from both can just add source stock.star and you get",
    "start": "2321240",
    "end": "2327460"
  },
  {
    "text": "the both if on the other hand you're looking at no I want all of the spans but I want to",
    "start": "2327460",
    "end": "2333820"
  },
  {
    "text": "be able to to sort of opt out from specific attributes for example that are being collected then you're more looking",
    "start": "2333820",
    "end": "2340839"
  },
  {
    "text": "at configuration I'll give you an example if you add for example at SQL client instrumentation then you have a",
    "start": "2340839",
    "end": "2348640"
  },
  {
    "text": "configuration method available to say I want to capture the database statements or I don't right so that's an example of",
    "start": "2348640",
    "end": "2355119"
  },
  {
    "text": "configuration and then basically you can create this once as a static and share it inside",
    "start": "2355119",
    "end": "2361420"
  },
  {
    "text": "your components totally fine now open Telemetry also works based on a",
    "start": "2361420",
    "end": "2366640"
  },
  {
    "text": "sort of opt-in model so it's not because you're creating all of these traces and that instrumentation that it's also",
    "start": "2366640",
    "end": "2373119"
  },
  {
    "text": "actually being collected you still need to opt in how do we do that by adding The Source right we say adsource stock",
    "start": "2373119",
    "end": "2379839"
  },
  {
    "text": "in this specific example and it's really important that those string literals are also going to match",
    "start": "2379839",
    "end": "2386260"
  },
  {
    "text": "when it comes to the sort of code that we want to instrument and add some insight to what I'm doing here is I'm",
    "start": "2386260",
    "end": "2392560"
  },
  {
    "text": "using that activity source that I instantiated earlier and I'm creating an",
    "start": "2392560",
    "end": "2397599"
  },
  {
    "text": "activity based on that Source now that gives me a nullable activity it's basically a performance optimization",
    "start": "2397599",
    "end": "2404140"
  },
  {
    "text": "because like I said earlier the the sort of the way that this API is implemented is an opt-in model which means that if",
    "start": "2404140",
    "end": "2411099"
  },
  {
    "text": "nobody is listening I'm getting a null reference so be careful and make sure to add that question mark",
    "start": "2411099",
    "end": "2417520"
  },
  {
    "text": "I'm making use of the using statement not only because I want to dispose of everything correctly but also because",
    "start": "2417520",
    "end": "2422980"
  },
  {
    "text": "this will call stop activity for me so I don't need to remember to do that and",
    "start": "2422980",
    "end": "2428260"
  },
  {
    "text": "stop the span exactly where you want it to be stopped and then you can add some tags in this",
    "start": "2428260",
    "end": "2435520"
  },
  {
    "text": "case or attributes in the open Telemetry spec naming and that would be like if",
    "start": "2435520",
    "end": "2440619"
  },
  {
    "text": "you look at a piece of code right ask yourself if I would be debugging this what would be of interest to me like",
    "start": "2440619",
    "end": "2445960"
  },
  {
    "text": "what are the parameters that stand out that could be impacting the decisions that are being made within this piece of",
    "start": "2445960",
    "end": "2451780"
  },
  {
    "text": "code and that's something that you want to consider adding in there you can also add some events by the way",
    "start": "2451780",
    "end": "2458680"
  },
  {
    "text": "this is a terrible example would give me an opportunity to talk about that because if you were actually",
    "start": "2458680",
    "end": "2463859"
  },
  {
    "text": "recalculating this the stock you'd create a dedicated span so you can also",
    "start": "2463859",
    "end": "2469119"
  },
  {
    "text": "see how long does that take and all of that right but you could have whatever sort of logging type of comment you",
    "start": "2469119",
    "end": "2476260"
  },
  {
    "text": "would add to events and then I'm also catching any exception that might occur why because I want to",
    "start": "2476260",
    "end": "2483160"
  },
  {
    "text": "set specific tags on that span or activity to sort of signal to the",
    "start": "2483160",
    "end": "2488500"
  },
  {
    "text": "observability back end that this went wrong this is also the perfect place to sort of capture additional tags in case",
    "start": "2488500",
    "end": "2496000"
  },
  {
    "text": "you want some extra Insight that you don't want to capture when everything goes right but you only want to capture",
    "start": "2496000",
    "end": "2501160"
  },
  {
    "text": "that when things go wrong okay don't forget to rethrow now I also want to sort of quickly",
    "start": "2501160",
    "end": "2508060"
  },
  {
    "text": "Circle back to that version right there because I skipped it earlier not because I don't care but",
    "start": "2508060",
    "end": "2514480"
  },
  {
    "text": "because I thought it deserved its own slide now why is that important because as our code evolves so does the",
    "start": "2514480",
    "end": "2521740"
  },
  {
    "text": "instrumentation that it emits right so it's important to make those versioning changes explicit in your observability",
    "start": "2521740",
    "end": "2528820"
  },
  {
    "text": "backend because that will also be visible when you are querying that information remember that that",
    "start": "2528820",
    "end": "2535180"
  },
  {
    "text": "information is stored outside of the application right and it might be really interesting when sort of trying to",
    "start": "2535180",
    "end": "2541839"
  },
  {
    "text": "understand specific things that you're observing in that data to understand which version of that component that",
    "start": "2541839",
    "end": "2548200"
  },
  {
    "text": "information came from it's okay our teams are doing this they're like you know",
    "start": "2548200",
    "end": "2554140"
  },
  {
    "text": "this is really really helpful and they start looking at this code and they Wonder like",
    "start": "2554140",
    "end": "2560740"
  },
  {
    "text": "this looks a lot like logging so then the question Rises of should we stop vlogging all together and just",
    "start": "2560740",
    "end": "2567460"
  },
  {
    "text": "focus on distributed tracing instead and this is sort of a complicated question",
    "start": "2567460",
    "end": "2572859"
  },
  {
    "text": "it's like the typical it depends answer right because if you compare locks to",
    "start": "2572859",
    "end": "2578079"
  },
  {
    "text": "traces tracing really has a sort of richest data model as opposed to logs because you can add attributes you can",
    "start": "2578079",
    "end": "2585520"
  },
  {
    "text": "sort of connect those across multiple components which is usually a very big pain if you want to do that sort of log",
    "start": "2585520",
    "end": "2592240"
  },
  {
    "text": "correlation across multiple components but on the other hand the open Telemetry project is also working really hard on",
    "start": "2592240",
    "end": "2598960"
  },
  {
    "text": "making that sort of cross component log correlation a lot more a lot more",
    "start": "2598960",
    "end": "2605560"
  },
  {
    "text": "yeah a lot better I guess so yeah what I would say is if you are free to choose",
    "start": "2605560",
    "end": "2611740"
  },
  {
    "text": "and if it fits within the team that you're working with then yes prefer those distributed traces especially in a",
    "start": "2611740",
    "end": "2617740"
  },
  {
    "text": "distributed environment right but the thing is that we have been logging for",
    "start": "2617740",
    "end": "2622839"
  },
  {
    "text": "years in our applications right and there's no need to go back to your manager and say okay I watched the stock",
    "start": "2622839",
    "end": "2629440"
  },
  {
    "text": "at NDC Oslo can you please give me two months because I need to replace all of our logs with traces no",
    "start": "2629440",
    "end": "2636520"
  },
  {
    "text": "don't do that right you can sort of gradually sort of go and start using traces where it makes sense and then",
    "start": "2636520",
    "end": "2643839"
  },
  {
    "text": "what is really really important is that we sort of connect the traces and the logs that we already have in our system",
    "start": "2643839",
    "end": "2650020"
  },
  {
    "text": "connect those together through sort of cross signal correlation and again if you're running into sort of",
    "start": "2650020",
    "end": "2656680"
  },
  {
    "text": "Microsoft stack super easy if you're using the Microsoft extensions logging framework because we can basically add",
    "start": "2656680",
    "end": "2664660"
  },
  {
    "text": "open Telemetry and what this this what this is going to do is apply the open Telemetry sort of logging format to any",
    "start": "2664660",
    "end": "2671859"
  },
  {
    "text": "log statement that is going to be emitted from your application and then I'm also setting up some exporter so",
    "start": "2671859",
    "end": "2677859"
  },
  {
    "text": "that I can collect that information again in one of those observability backends",
    "start": "2677859",
    "end": "2683380"
  },
  {
    "text": "now what is the result of doing something like this it looks a little bit like this and the",
    "start": "2683380",
    "end": "2690099"
  },
  {
    "text": "most important part in my opinion is that it adds that Trace ID and that span",
    "start": "2690099",
    "end": "2695319"
  },
  {
    "text": "ID to every log statement that is being emitted that means that it doesn't matter what you're looking at if you're",
    "start": "2695319",
    "end": "2700720"
  },
  {
    "text": "looking at your logs you have the active span ID in the trace ID available you",
    "start": "2700720",
    "end": "2706119"
  },
  {
    "text": "can go into whatever observability backend that you're using for your traces and go query for that and the",
    "start": "2706119",
    "end": "2711220"
  },
  {
    "text": "other way around as well if you're looking at the traces you can find all of the correlated locks as well and that",
    "start": "2711220",
    "end": "2716680"
  },
  {
    "text": "makes it really powerful to have that sort of cross signal observability in your system",
    "start": "2716680",
    "end": "2723480"
  },
  {
    "text": "so what about metrics because I've talked about traces and I've talked about logs but I haven't really talked",
    "start": "2724180",
    "end": "2729880"
  },
  {
    "text": "about metrics a lot well it's sort of a sort of signal on its own right I do want to drop a few sort of pointers but",
    "start": "2729880",
    "end": "2736960"
  },
  {
    "text": "basically their scalar values accumulated over time to sort of represent a specific state of the system",
    "start": "2736960",
    "end": "2743079"
  },
  {
    "text": "it could be message throughput right and messaging is something that we really like to look at",
    "start": "2743079",
    "end": "2749140"
  },
  {
    "text": "but it could also be the failure rate right which then makes a very good base for alert so if we have more than I",
    "start": "2749140",
    "end": "2755800"
  },
  {
    "text": "don't know 10 failures in a span of a few minutes then I want someone to be woken up major Duty alerts everywhere",
    "start": "2755800",
    "end": "2762400"
  },
  {
    "text": "could be something that you want to do or emails or whatever it is right so it's really good to sort of do",
    "start": "2762400",
    "end": "2768640"
  },
  {
    "text": "proactive monitoring now the thing is with metrics is that you're only going to monitor things that you can already",
    "start": "2768640",
    "end": "2774160"
  },
  {
    "text": "expect to go wrong and it's really an indication of a problem but it doesn't",
    "start": "2774160",
    "end": "2780220"
  },
  {
    "text": "give you a lot of insight into what's going on now there are things that we can do to sort of improve that and that",
    "start": "2780220",
    "end": "2788020"
  },
  {
    "text": "is by doing metric correlation so that we would capture what is called in open Telemetry metric exemplars so basically",
    "start": "2788020",
    "end": "2796180"
  },
  {
    "text": "add some information to the metric that we are collecting so that we would then be able to connect that to the traces",
    "start": "2796180",
    "end": "2803020"
  },
  {
    "text": "and the logs that were emitted in that sort of fed into that metric looking a little bit out of whack",
    "start": "2803020",
    "end": "2810400"
  },
  {
    "text": "okay so I've told you all of these glorious things about open Telemetry and",
    "start": "2810400",
    "end": "2815800"
  },
  {
    "text": "observability and you might be thinking what's the catch and I mean there's multiple ones",
    "start": "2815800",
    "end": "2824200"
  },
  {
    "text": "because first of all there's going to be some memory overhead in your applications now",
    "start": "2824200",
    "end": "2830560"
  },
  {
    "text": "you need to be running at a massive scale if this is what you care about right in any sort of regular application",
    "start": "2830560",
    "end": "2837520"
  },
  {
    "text": "this is not something that you're probably going to have to be concerned about because these app these apis were",
    "start": "2837520",
    "end": "2843339"
  },
  {
    "text": "basically also created with performance optimization in mind but if you're running at a massive scale",
    "start": "2843339",
    "end": "2849460"
  },
  {
    "text": "there's going to be some memory overhead there's also going to be some added latency and some additional bandwidth",
    "start": "2849460",
    "end": "2855400"
  },
  {
    "text": "that you're using right because that some information is being propagated across services so you're adding some",
    "start": "2855400",
    "end": "2860619"
  },
  {
    "text": "headers here and there and then you're also using additional bandwidth to send that information to the observability",
    "start": "2860619",
    "end": "2866560"
  },
  {
    "text": "backend as well there's also going to be a storage cost because we have to store that data",
    "start": "2866560",
    "end": "2872440"
  },
  {
    "text": "somewhere and usually that's not free and we're also introducing new tools",
    "start": "2872440",
    "end": "2877900"
  },
  {
    "text": "some of those might require a license we also have to educate our team not",
    "start": "2877900",
    "end": "2883060"
  },
  {
    "text": "only to start you know creating traces and logs and metrics inside the application that's one end but also then",
    "start": "2883060",
    "end": "2890440"
  },
  {
    "text": "using those tools those uh to sort of query those observability backends and",
    "start": "2890440",
    "end": "2896500"
  },
  {
    "text": "look at the information that we have available to sort of extract actionable insights that can help us go and improve",
    "start": "2896500",
    "end": "2903400"
  },
  {
    "text": "our applications and then finally there's maintenance",
    "start": "2903400",
    "end": "2908560"
  },
  {
    "text": "because any type of code that we add to our systems is going to evolve whether that's production code or testing code",
    "start": "2908560",
    "end": "2915220"
  },
  {
    "text": "or in this case instrumentation code right every letter of code is an added cost and it's going to have to be",
    "start": "2915220",
    "end": "2921579"
  },
  {
    "text": "maintained by teams that are also changing over time and it's a thing to",
    "start": "2921579",
    "end": "2927579"
  },
  {
    "text": "consider as you can see like I started cheap and then it became more expensive",
    "start": "2927579",
    "end": "2932619"
  },
  {
    "text": "now that doesn't mean that you shouldn't be adding observability to a system right I",
    "start": "2932619",
    "end": "2938319"
  },
  {
    "text": "just spent an hour telling you that you should but I just want to make you aware that with whatever decision we make with",
    "start": "2938319",
    "end": "2944619"
  },
  {
    "text": "that whatever architectural style whatever tools you introduce there's always a trade-off that you are making",
    "start": "2944619",
    "end": "2949900"
  },
  {
    "text": "so it's important to be aware of those as well okay so if you decide to do this and",
    "start": "2949900",
    "end": "2956800"
  },
  {
    "text": "you're creating additional observability in the system you get additional benefits because what I've been talking about for almost a",
    "start": "2956800",
    "end": "2963339"
  },
  {
    "text": "full hour at this point is really failure investigation right so how are we able to sort of understand the root",
    "start": "2963339",
    "end": "2969700"
  },
  {
    "text": "cause of problems in a larger systems where components are communicating with each other over messages or whatever",
    "start": "2969700",
    "end": "2975880"
  },
  {
    "text": "other communication pattern that you might be using but there are plenty of other benefits that you could get first",
    "start": "2975880",
    "end": "2981880"
  },
  {
    "text": "of all observability could be a driver to basically understand where your system is slow where you see higher",
    "start": "2981880",
    "end": "2989260"
  },
  {
    "text": "latency how many times does someone walk up to you and say the system is slow and",
    "start": "2989260",
    "end": "2995380"
  },
  {
    "text": "you're like okay what is slow where is it slow what were",
    "start": "2995380",
    "end": "3001020"
  },
  {
    "text": "you doing right but if we have added observability in the system it would be easier for us",
    "start": "3001020",
    "end": "3007020"
  },
  {
    "text": "to sort of go query and understand where that latency is when does it happen",
    "start": "3007020",
    "end": "3012420"
  },
  {
    "text": "because usually if we're running in a development in a testing environment everything is speed of light all the",
    "start": "3012420",
    "end": "3017760"
  },
  {
    "text": "time and then a production environment things change and it's like okay what's going on",
    "start": "3017760",
    "end": "3024540"
  },
  {
    "text": "it also gives you sort of the ability to perform post-mortems yeah really dark word but think of a sort of Black Friday",
    "start": "3024540",
    "end": "3031740"
  },
  {
    "text": "Cyber Monday right everything went kind of okay system didn't completely come crashing down thank God",
    "start": "3031740",
    "end": "3038520"
  },
  {
    "text": "but we also want to go back and reflect and say okay how did this go can we",
    "start": "3038520",
    "end": "3043619"
  },
  {
    "text": "further improve this for next time right maybe if we're running in the cloud we are basically we have configurations",
    "start": "3043619",
    "end": "3049980"
  },
  {
    "text": "that allow us to Auto scale our services so was that configuration good did we",
    "start": "3049980",
    "end": "3055020"
  },
  {
    "text": "scale up uh quickly enough or maybe even more importantly that we scale back down",
    "start": "3055020",
    "end": "3060599"
  },
  {
    "text": "quickly enough so that we don't have those massive bills right so this can also give you that insight",
    "start": "3060599",
    "end": "3067079"
  },
  {
    "text": "another sort of possible benefit is feature flagging let's say that you have a very large system and you're adding a",
    "start": "3067079",
    "end": "3074099"
  },
  {
    "text": "feature to that system and you don't want to go and release it to the entire user base first of all you want to",
    "start": "3074099",
    "end": "3080220"
  },
  {
    "text": "release it some sort of segment of that user base and then start to see is this even being used and when it's",
    "start": "3080220",
    "end": "3087059"
  },
  {
    "text": "used do any exceptions pop up are there any issues with that does it have a sort",
    "start": "3087059",
    "end": "3092220"
  },
  {
    "text": "of performance or latency impact on the rest of the system so that we can sort of understand how that's doing before we",
    "start": "3092220",
    "end": "3098640"
  },
  {
    "text": "go and release it to the entire user base finally we also have chaos engineering",
    "start": "3098640",
    "end": "3105540"
  },
  {
    "text": "right who's heard of chaos engineering before okay plenty of hands well we now",
    "start": "3105540",
    "end": "3111000"
  },
  {
    "text": "have sort of services available like Azure chaos Studio chaos monkey and those sort of allow us",
    "start": "3111000",
    "end": "3117480"
  },
  {
    "text": "to sort of unleash Chaos on the system push it to its limits and see where it starts breaking first that's a sort of",
    "start": "3117480",
    "end": "3124619"
  },
  {
    "text": "really good strategy to increase the resilience of a system and and see how",
    "start": "3124619",
    "end": "3130140"
  },
  {
    "text": "it could better sort of support our production environments but if you use a service like that",
    "start": "3130140",
    "end": "3136559"
  },
  {
    "text": "and you see a bunch of errors and you have zero observability in your system then how are you going to figure out",
    "start": "3136559",
    "end": "3144300"
  },
  {
    "text": "what went wrong and what needs to be improved in order to not be in that same situation when those when that chaos is",
    "start": "3144300",
    "end": "3151380"
  },
  {
    "text": "caused by your users in a production environment because without observability you're going to be looking for lots of needles",
    "start": "3151380",
    "end": "3157680"
  },
  {
    "text": "in many many many many many many Haystacks right",
    "start": "3157680",
    "end": "3162839"
  },
  {
    "text": "so okay we've sort of reached the end of the session so we can slowly recap I",
    "start": "3162839",
    "end": "3169260"
  },
  {
    "text": "especially specifically when thinking about failure investigation solving issues in a sort of production",
    "start": "3169260",
    "end": "3174599"
  },
  {
    "text": "environment I like to think of observability as a way to replace the",
    "start": "3174599",
    "end": "3180359"
  },
  {
    "text": "call stack that we gave up when we sort of transitioned from a sort of Monolithic architecture to a more",
    "start": "3180359",
    "end": "3187079"
  },
  {
    "text": "distributed architecture where there are multiple components interacting with each other does that mean that you're never going",
    "start": "3187079",
    "end": "3193740"
  },
  {
    "text": "to have to debug again nope but hopefully it will not be as",
    "start": "3193740",
    "end": "3199440"
  },
  {
    "text": "painful as what I sort of portrayed in the beginning of this session right so we'll add more tests we'll be able to do",
    "start": "3199440",
    "end": "3206040"
  },
  {
    "text": "that zoom out zoom in based on our distributor tracing understand where things are going wrong at tests there",
    "start": "3206040",
    "end": "3213180"
  },
  {
    "text": "and maybe that will require some debugging here and there so it will be localized and hopefully pain free",
    "start": "3213180",
    "end": "3219839"
  },
  {
    "text": "if you're ready to get started like I said there's no need to go back to your manager and say I need three months now",
    "start": "3219839",
    "end": "3225420"
  },
  {
    "text": "no we can just start by investigating the instrumentation libraries that are",
    "start": "3225420",
    "end": "3230880"
  },
  {
    "text": "available out there for the Frameworks that you're already using in your application because you will see that",
    "start": "3230880",
    "end": "3236160"
  },
  {
    "text": "those already provide a lot of visibility into what's happening with the system even those spans that are",
    "start": "3236160",
    "end": "3242880"
  },
  {
    "text": "being emitted can be accessed through activity.current and you can then go and add some additional tags to those",
    "start": "3242880",
    "end": "3249900"
  },
  {
    "text": "activities to sort of further enrich them even without adding any application specific expense",
    "start": "3249900",
    "end": "3257040"
  },
  {
    "text": "and then connect all of that information to your logs right one of the in my",
    "start": "3257040",
    "end": "3262440"
  },
  {
    "text": "opinion at least one of the sort of advantages of the open Telemetry project is their focus on Signal correlation",
    "start": "3262440",
    "end": "3268800"
  },
  {
    "text": "cross-signal correlation so we have metrics logs and traces but being able to connect all of that information",
    "start": "3268800",
    "end": "3275220"
  },
  {
    "text": "together is really going to give us the maximum amount of value of that",
    "start": "3275220",
    "end": "3280440"
  },
  {
    "text": "observability in our system and then slowly enhance and enrich from",
    "start": "3280440",
    "end": "3285540"
  },
  {
    "text": "there right take it slowly gradual improvements until you get to the point that is sufficiently observable for your",
    "start": "3285540",
    "end": "3292680"
  },
  {
    "text": "system to be running successfully in production okay uh that was it if you have any",
    "start": "3292680",
    "end": "3299460"
  },
  {
    "text": "questions I'm happy to hear them feel free to scan the QR code it will take you to one of my GitHub repos",
    "start": "3299460",
    "end": "3304940"
  },
  {
    "text": "repositories I have additional resources there available for you also a sample",
    "start": "3304940",
    "end": "3310260"
  },
  {
    "text": "that you can run based on in service bus if you have any questions feel free to come and ask me and you can also find me",
    "start": "3310260",
    "end": "3317099"
  },
  {
    "text": "for the rest of the day at that particular software Booth as well thank you for listening",
    "start": "3317099",
    "end": "3323059"
  },
  {
    "text": "thank you",
    "start": "3324319",
    "end": "3327440"
  }
]