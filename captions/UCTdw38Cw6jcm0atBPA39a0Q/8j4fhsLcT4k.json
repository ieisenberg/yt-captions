[
  {
    "text": "presume it is um yeah something about a 420 joke",
    "start": "4720",
    "end": "9920"
  },
  {
    "text": "obligatory um cool thank you for coming and not going to see the guy that designed C next door I feel blessed by",
    "start": "9920",
    "end": "17560"
  },
  {
    "text": "your presence um so today I want to talk to you about intentional code and it's a",
    "start": "17560",
    "end": "25119"
  },
  {
    "text": "funny and dear topic to my heart because I know we all often are in the",
    "start": "25119",
    "end": "30640"
  },
  {
    "text": "place where we feel like everything kind of sucks and this isn't a repeat of my my keynote session which was a different",
    "start": "30640",
    "end": "36719"
  },
  {
    "text": "kind of everything sucking but we've all had this experience where you're maintaining some kind of application and",
    "start": "36719",
    "end": "42800"
  },
  {
    "text": "you're you try to work out what it does it's not yours you've been put on a project and you're peeling away layers",
    "start": "42800",
    "end": "48640"
  },
  {
    "text": "of abstraction and layers of libraries and dependencies and package managers and build tools and you just you're the",
    "start": "48640",
    "end": "54120"
  },
  {
    "text": "voice in your head is just screaming why the is this like this like surely",
    "start": "54120",
    "end": "60519"
  },
  {
    "text": "surely it should not be this difficult to do this trivial change that I'm trying to make to some",
    "start": "60519",
    "end": "66799"
  },
  {
    "text": "software um and I was a consultant for 10 years so about everything I touched",
    "start": "66799",
    "end": "73159"
  },
  {
    "text": "was a why is this like this moment um so my name is David and I",
    "start": "73159",
    "end": "78479"
  },
  {
    "text": "spend way too much time thinking about software design it's kind of my toxic character trait um so I I work at a",
    "start": "78479",
    "end": "87000"
  },
  {
    "text": "company called New Day in London obligatory yes hiring probably not in Australia sorry so not very relevant to",
    "start": "87000",
    "end": "93240"
  },
  {
    "text": "this room um but I'm really here to talk to you about why design is important and",
    "start": "93240",
    "end": "98720"
  },
  {
    "text": "why everything matters so I'm a programmer in the sense that you will Prime my keyboard out of my cold dead",
    "start": "98720",
    "end": "105360"
  },
  {
    "text": "hands they will probably bury me trying to commit the last thing I have to GitHub um regardless of the job title",
    "start": "105360",
    "end": "112560"
  },
  {
    "text": "they stick on top of it to be honest that said there's not going to be an awful lot of code in this talk we're going to talk around the theory around",
    "start": "112560",
    "end": "118560"
  },
  {
    "text": "the code um because what I really want us to think about is design as a concept",
    "start": "118560",
    "end": "123840"
  },
  {
    "text": "as much as programming so I did a bit of a small viral tweet you know those those midsize",
    "start": "123840",
    "end": "130200"
  },
  {
    "text": "tweets that go down well recently that seem to resonate with some people because I was trying to fix up this",
    "start": "130200",
    "end": "135879"
  },
  {
    "text": "objectively awful codebase I was trying to help a team and I opened it and immediately my heckles were raised upon",
    "start": "135879",
    "end": "141920"
  },
  {
    "text": "seeing this this thing here and I did what I always do whenever I see something that makes me sad and I just",
    "start": "141920",
    "end": "147640"
  },
  {
    "text": "opened Twitter and I rage tweeted into the void I I distinctly remember thinking",
    "start": "147640",
    "end": "153239"
  },
  {
    "text": "this is like a really damning indictment on the state of a lot of modern application design and you know Twitter",
    "start": "153239",
    "end": "160319"
  },
  {
    "text": "mostly agreed with me but the thing that really jumped out at me from this application design as a as a layout was",
    "start": "160319",
    "end": "167000"
  },
  {
    "text": "how thoughtless it all was like totally totally thoughtless because the truth is",
    "start": "167000",
    "end": "173800"
  },
  {
    "text": "organizing um code by architectural feature is like way up there on the",
    "start": "173800",
    "end": "179080"
  },
  {
    "text": "crimes you can Comm commit to your own code bases um precisely because there is no answer to the question why is it like",
    "start": "179080",
    "end": "185319"
  },
  {
    "text": "this that that there is none at all um so hopefully throughout the session we're going to cover what the ways that",
    "start": "185319",
    "end": "191480"
  },
  {
    "text": "you can answer the question why are things like this because organizing your code by architectural concept is about",
    "start": "191480",
    "end": "198159"
  },
  {
    "text": "as meaningful as taking a classic car collection smashing all the cars apart and organizing it by wheels and",
    "start": "198159",
    "end": "205519"
  },
  {
    "text": "windshields and boots and seats right it it doesn't look like anything it's not",
    "start": "205519",
    "end": "210680"
  },
  {
    "text": "even a car at that point so lots and lots of talk about",
    "start": "210680",
    "end": "216360"
  },
  {
    "text": "design in software and the form of code always ends up getting dragged back to",
    "start": "216360",
    "end": "221400"
  },
  {
    "text": "the work done in the 90s mostly about design patterns so this isn't a talk about design patterns either um but I",
    "start": "221400",
    "end": "228280"
  },
  {
    "text": "want to pay them a little bit of lip service and due respect before we get going because it's really probably quite",
    "start": "228280",
    "end": "234280"
  },
  {
    "text": "easy to misinterpret what I'm about to say as some kind of tiate against design patterns or like a rally and cry against",
    "start": "234280",
    "end": "240720"
  },
  {
    "text": "standards but it's really not that so design patterns often misused um",
    "start": "240720",
    "end": "245959"
  },
  {
    "text": "originated in the word in the works of a guy called Christopher Alexander so he was like an actual real life architect",
    "start": "245959",
    "end": "252439"
  },
  {
    "text": "like one of the the real ones um and he wrote this wonderfully titled book called notes on the synthesis of form",
    "start": "252439",
    "end": "259040"
  },
  {
    "text": "it's like my progressive metal album I think um so it was read by a lot of um computer science researchers in the 70s",
    "start": "259040",
    "end": "265600"
  },
  {
    "text": "and 80s resulting in works by people like Kent Beck and Ward Cunningham in the late 80s and early 90s around",
    "start": "265600",
    "end": "271600"
  },
  {
    "text": "pattern languages so the gang of four book here is the the most famous example of the",
    "start": "271600",
    "end": "277759"
  },
  {
    "text": "patterns books so that came out in 1994 which is probably the foundational text for most people and what it did was it",
    "start": "277759",
    "end": "284919"
  },
  {
    "text": "attempted to lay out a series of structural creational and behavioral patterns observed in common software of",
    "start": "284919",
    "end": "292520"
  },
  {
    "text": "the time so there are a bunch of books that followed so people like Kemp Beck wrote Small Talk uh best practice and",
    "start": "292520",
    "end": "299360"
  },
  {
    "text": "pattern Martin Fowler wrote patterns of Enterprise architecture which a lot of people have read and ultimately all of",
    "start": "299360",
    "end": "305680"
  },
  {
    "text": "these books existed uh with the good intention of exactly one thing which was",
    "start": "305680",
    "end": "311039"
  },
  {
    "text": "to provide concrete guidance and a description to Common solutions to",
    "start": "311039",
    "end": "316080"
  },
  {
    "text": "problems that they had seen recurring and that's what design patterns really are right they're not",
    "start": "316080",
    "end": "321840"
  },
  {
    "text": "they're not goals it's not a thing you're meant to Aspire to they're giving names to model answers to common",
    "start": "321840",
    "end": "328479"
  },
  {
    "text": "questions and when you give Concepts names you Empower them it means you can talk about them we develop a shared",
    "start": "328479",
    "end": "334000"
  },
  {
    "text": "language and that's like a a really really good thing so I have nothing but respect for this kind of foundational",
    "start": "334000",
    "end": "339120"
  },
  {
    "text": "work around design patterns that help describe like a whole category of common things in our industry but this isn't",
    "start": "339120",
    "end": "345560"
  },
  {
    "text": "about design patterns because what patterns do is they try and make categories of problems look the",
    "start": "345560",
    "end": "350680"
  },
  {
    "text": "same this is a talk about design when everything else is different about all the other bits that don't",
    "start": "350680",
    "end": "357400"
  },
  {
    "text": "fit so I suppose I just kind of El that most talk about software design is devolved into talk of patterns because",
    "start": "357400",
    "end": "363800"
  },
  {
    "text": "they're kind of the least interesting bit you know if design patterns are all about the parts of the system that are",
    "start": "363800",
    "end": "368880"
  },
  {
    "text": "familiar with the acceptance that you know as we push programming languages further and further on actually many of",
    "start": "368880",
    "end": "375400"
  },
  {
    "text": "these patterns become obsolete over time it feels like we kind of forgot to talk about everything that wasn't predictable",
    "start": "375400",
    "end": "381479"
  },
  {
    "text": "or common as we got obsessed with kind of these broad structural things and I think real design really starts where",
    "start": "381479",
    "end": "388599"
  },
  {
    "text": "patterns end so on the other end of the spectrum we have large scale architectural",
    "start": "388599",
    "end": "394759"
  },
  {
    "text": "conversations around design so you see things like enter and hexagonal architectures and 12 Factor apps and all",
    "start": "394759",
    "end": "401039"
  },
  {
    "text": "the big organizational patterns kind of come into play and they often try and offer prescriptive rules around the form",
    "start": "401039",
    "end": "408199"
  },
  {
    "text": "of an application but I think there's probably more axes to design than just functional",
    "start": "408199",
    "end": "413720"
  },
  {
    "text": "patterns and large scale kind of application architectures and I think the most interesting aspects of design",
    "start": "413720",
    "end": "420000"
  },
  {
    "text": "happen in the momentto moment interactions of a programmer with the system so back in the depths of time I",
    "start": "420000",
    "end": "427960"
  },
  {
    "text": "was an art student I know what I look like it's fine I get it um but I I literally uh I studied literature and",
    "start": "427960",
    "end": "435199"
  },
  {
    "text": "design and Fine Art I used to paint in the 90s in high school and I specialized",
    "start": "435199",
    "end": "441479"
  },
  {
    "text": "in literature and politics and I just always wanted to be a programmer so I've got these two very very",
    "start": "441479",
    "end": "448000"
  },
  {
    "text": "conflicting parts of my background and for the first half of my career I really struggled to reconcile the aesthetic",
    "start": "448000",
    "end": "454879"
  },
  {
    "text": "sensibilities of design with you know the the the the books of the time I",
    "start": "454879",
    "end": "462199"
  },
  {
    "text": "suppose you know I started programming in the mid90s and all of the noteworthy Works around what good design looked",
    "start": "462199",
    "end": "468400"
  },
  {
    "text": "like were these foundational design pattern books and they were basically saying hey",
    "start": "468400",
    "end": "473879"
  },
  {
    "text": "this is what quality is this is the good answer so I did a computer science",
    "start": "473879",
    "end": "479120"
  },
  {
    "text": "degree like many people after that point and during the first year like most compai students yeah you I happened to",
    "start": "479120",
    "end": "485840"
  },
  {
    "text": "cross the works of Donald n you know the the guy that wrote the book that no one actually read the big door stop one that",
    "start": "485840",
    "end": "491039"
  },
  {
    "text": "isn't finished um and you know Donald nth very very famous computer scientist literally",
    "start": "491039",
    "end": "496720"
  },
  {
    "text": "wrote a book called literate programming in 1984 literally the year I was born so no",
    "start": "496720",
    "end": "503039"
  },
  {
    "text": "new ideas and what he' done actually nth had tried to get Traction in the space with",
    "start": "503039",
    "end": "509319"
  },
  {
    "text": "the idea that software should be written by combining the idea of a documentation language with a programming language and",
    "start": "509319",
    "end": "517000"
  },
  {
    "text": "the combination of the two would produce comprehensible code that was maintainable by teams and this is you",
    "start": "517000",
    "end": "522839"
  },
  {
    "text": "know kind of consistent with the rest of Donald n's output this is a man that took 10 years out from writing a book to",
    "start": "522839",
    "end": "529240"
  },
  {
    "text": "write a text editor to write the book in so not not very surprised the these big on the Big",
    "start": "529240",
    "end": "534959"
  },
  {
    "text": "Ideas um and if you think about it the programming languages of the 70s when nth was formulating these ideas around",
    "start": "534959",
    "end": "541959"
  },
  {
    "text": "literate programming were a far lower level of abstraction than the common languages used by most people today they",
    "start": "541959",
    "end": "548680"
  },
  {
    "text": "were much more machine oriented than programmer oriented and actually he was",
    "start": "548680",
    "end": "555000"
  },
  {
    "text": "right and the over the 30 or 40 or 50 years since then actually we've trended",
    "start": "555000",
    "end": "560760"
  },
  {
    "text": "towards much more literate languages that look more like human writing and the the truth is this there",
    "start": "560760",
    "end": "567760"
  },
  {
    "text": "was this core idea that really resonated with me which was software really is the same as literature it's not just like",
    "start": "567760",
    "end": "575040"
  },
  {
    "text": "literature um so it was a bit of a revelation to tiny baby programmer David who finally had found the way to marry",
    "start": "575040",
    "end": "581160"
  },
  {
    "text": "these two ideas together in his head and it kind of changed the way I started writing code because I I came to this",
    "start": "581160",
    "end": "588079"
  },
  {
    "text": "conclusion that software only becomes good just like literature if you focus on writing it well and actually if we",
    "start": "588079",
    "end": "597279"
  },
  {
    "text": "design with that in mind we can change the aspects and qualities of the code bases that we're looking",
    "start": "597279",
    "end": "603480"
  },
  {
    "text": "for so over the years I've come back to this really really precise definition of what I believe software actually is it's",
    "start": "603480",
    "end": "611040"
  },
  {
    "text": "a a constrained form of communication between programmer and programmer describing Concepts and problems that",
    "start": "611040",
    "end": "618120"
  },
  {
    "text": "almost accidentally happens to be executable by computer like it's almost a happy accident that computers can run",
    "start": "618120",
    "end": "623800"
  },
  {
    "text": "the stuff that we write it's a it's an exercise in putting language around a problem space and then what you you",
    "start": "623800",
    "end": "629480"
  },
  {
    "text": "think about it the more it starts making sense you spend a much larger portion of your time reading code and comprehending",
    "start": "629480",
    "end": "635800"
  },
  {
    "text": "code than you do writing it that's always been true um your code exists in a context it has subtext it has",
    "start": "635800",
    "end": "642600"
  },
  {
    "text": "authorial intent sometimes bugs exist which are kind of almost like an unreliable",
    "start": "642600",
    "end": "648079"
  },
  {
    "text": "narrator I suppose if I'm really going to stretch the analogy but your code definitely has Rhythm and form and flow",
    "start": "648079",
    "end": "655079"
  },
  {
    "text": "just like any other writing and most importantly your code has a a reason for being it has intent there's a a",
    "start": "655079",
    "end": "663519"
  },
  {
    "text": "purpose and then there's this you know everyone always gets upset when I put this on and the YouTube comments really",
    "start": "663519",
    "end": "669320"
  },
  {
    "text": "really hate it um just burned your copies of like clean code and other",
    "start": "669320",
    "end": "674639"
  },
  {
    "text": "poorly aged books talking about all this stuff um it gets us out of having to",
    "start": "674639",
    "end": "681160"
  },
  {
    "text": "deal with problematic people which is useful um but also you know clean code",
    "start": "681160",
    "end": "687040"
  },
  {
    "text": "was kind of a book that existed in a cont text in time where maybe there wasn't many good conversations about",
    "start": "687040",
    "end": "694040"
  },
  {
    "text": "what quality looks like in software but the truth is it's an extremely dogmatic book and the presence in our industry",
    "start": "694040",
    "end": "701120"
  },
  {
    "text": "has reduced discussions around quality and to discussions about naming variables and like that's boring right",
    "start": "701120",
    "end": "707880"
  },
  {
    "text": "it's kind of muted conversations around architectural style in the same way that dogmatic adherence to things like solid",
    "start": "707880",
    "end": "713920"
  },
  {
    "text": "has you know it Shadow is long and it's kind of a thoughtless Dogma at this point it's useless to us",
    "start": "713920",
    "end": "721240"
  },
  {
    "text": "so everyone always gets really really upset and like oh you can't hate on the book that I love I don't know man like I I liked",
    "start": "721600",
    "end": "729880"
  },
  {
    "text": "that book too at one point and it was fine but I grew up and sometimes the things that you need to get yourself from A to B is not the same thing you",
    "start": "729880",
    "end": "736000"
  },
  {
    "text": "need to get from B to C um you know I think there was a point in my career where I thought rules",
    "start": "736000",
    "end": "741880"
  },
  {
    "text": "around basic hygiene were enough but over the last five 10 years maybe I've",
    "start": "741880",
    "end": "747720"
  },
  {
    "text": "come to value intentionality in my code above any kind of idea of syntatic",
    "start": "747720",
    "end": "753720"
  },
  {
    "text": "cleanliness and when when people say what do you mean when you say intentionality I mean that literally every character you type matters",
    "start": "753720",
    "end": "761000"
  },
  {
    "text": "everything you type every key press matters and I would really really like people to approach the work as if",
    "start": "761000",
    "end": "767120"
  },
  {
    "text": "everything that they were typing was important the Whit space matters the rhythm of your code and the form matters",
    "start": "767120",
    "end": "773160"
  },
  {
    "text": "naming matters function matters all of these things are there to Telegraph intent and code written with",
    "start": "773160",
    "end": "780480"
  },
  {
    "text": "thoughtfulness and intentionality are really kind of what matter to me so when you think of your software as",
    "start": "780480",
    "end": "788720"
  },
  {
    "text": "literature it lets you value different ways of communicating in code so we can communicate things like at the macro",
    "start": "788720",
    "end": "795480"
  },
  {
    "text": "scale with organizational patterns and application architectures you know take for example MVC the classic example MVC",
    "start": "795480",
    "end": "801920"
  },
  {
    "text": "is an organizational pattern mostly and it dictates how you split up your code and most of the common implementations",
    "start": "801920",
    "end": "808519"
  },
  {
    "text": "of the pattern it kind of tells you literally how to organize your application now I have a bit of a",
    "start": "808519",
    "end": "814360"
  },
  {
    "text": "LoveHate relationship with MVC and and that's precisely because MVC has some",
    "start": "814360",
    "end": "819600"
  },
  {
    "text": "positive qualities in that you you can look at an MVC app and basically see that it's a website and it has some",
    "start": "819600",
    "end": "826199"
  },
  {
    "text": "negative qualities you only see a website when you look at an MVC app you don't see what it does the things that",
    "start": "826199",
    "end": "832600"
  },
  {
    "text": "it does are not obvious you see the pattern rather than the implementation or the detail so it's a good example of",
    "start": "832600",
    "end": "838839"
  },
  {
    "text": "an organizational pattern that tells you how an app works without actually telling you why why it exists at",
    "start": "838839",
    "end": "845759"
  },
  {
    "text": "all and actually I find the micro scale a lot more interesting where the way that you um you form code on a function",
    "start": "845759",
    "end": "853160"
  },
  {
    "text": "to function module to module way telegraphs intent so we use form and",
    "start": "853160",
    "end": "858240"
  },
  {
    "text": "flow specifically to increase cohesion in our code base that that's the tool we",
    "start": "858240",
    "end": "863759"
  },
  {
    "text": "have so by way of example um when I say use form and Flow",
    "start": "863759",
    "end": "869639"
  },
  {
    "text": "to increase cohesion I want to share two screenshots and this was something from another",
    "start": "869639",
    "end": "874720"
  },
  {
    "text": "thing I tweeted from the exact same code base that made me mad you know the process right you're peeling it back bit",
    "start": "874720",
    "end": "879920"
  },
  {
    "text": "by bit and every everything you open you get more Angry until you find the thing that really really takes you over the",
    "start": "879920",
    "end": "885600"
  },
  {
    "text": "edge and here's a a benign ugly function right this is not interesting at all",
    "start": "885600",
    "end": "892160"
  },
  {
    "text": "just some HTTP stuff but it's really difficult to read and it's really",
    "start": "892160",
    "end": "897720"
  },
  {
    "text": "difficult to read because there is no use of flow or form here at all and actually it forces your brain to",
    "start": "897720",
    "end": "903800"
  },
  {
    "text": "comprehend each line in total isolation you basically turning your brain into a big head computer that's trying to keep",
    "start": "903800",
    "end": "909160"
  },
  {
    "text": "the state as you read it through so we use paragraphs in text to",
    "start": "909160",
    "end": "916360"
  },
  {
    "text": "guide the reader right we group related Concepts before we move on to something else code is just the same exactly the",
    "start": "916360",
    "end": "923440"
  },
  {
    "text": "same um lines mean something if you use them everywhere or nowhere you're removing an entire category of",
    "start": "923440",
    "end": "930040"
  },
  {
    "text": "expression from your code um now this is a really incredibly small scale example",
    "start": "930040",
    "end": "935680"
  },
  {
    "text": "just to prove the point and it does a kind of an injustice to the effect of code with good form but code with good",
    "start": "935680",
    "end": "941959"
  },
  {
    "text": "form is like poetry with rhythm it directs the reader it telegraphs how you're meant to read the code it shows",
    "start": "941959",
    "end": "949920"
  },
  {
    "text": "what's related it's I suppose it's aesthetic sensibility reflects how the form of control in the software is",
    "start": "949920",
    "end": "956680"
  },
  {
    "text": "designed to be interpreted right that's interesting to me and all we did was deleted some empty lines right there's",
    "start": "956680",
    "end": "963120"
  },
  {
    "text": "there's nothing that actually changed about the code sample the flow and the form of your code is something you use",
    "start": "963120",
    "end": "968360"
  },
  {
    "text": "to communicate intent its design now the more I started thinking",
    "start": "968360",
    "end": "975680"
  },
  {
    "text": "about software through this kind of lens of literature through this lens of intent it became more apparent to me",
    "start": "975680",
    "end": "980759"
  },
  {
    "text": "that what I was really reaching and reacting to was the inherent complexity we see in a lot of software that we",
    "start": "980759",
    "end": "986279"
  },
  {
    "text": "build today you know we got very very big tool tool chains that are very very complicated most of the time and I was",
    "start": "986279",
    "end": "992079"
  },
  {
    "text": "kind of craving this clear communication of well-written pros of meaningful thoughtful code and I thought this was",
    "start": "992079",
    "end": "999519"
  },
  {
    "text": "really a bigger design problem actually so I've been working I've been working on a sentence recently I know I know my",
    "start": "999519",
    "end": "1007279"
  },
  {
    "text": "job now is that I work on sentences it's ridiculous um so I've been trying to",
    "start": "1007279",
    "end": "1013079"
  },
  {
    "text": "summarize how I feel about modern software design and this intersection of complexity and it's this that I you know",
    "start": "1013079",
    "end": "1019519"
  },
  {
    "text": "I always believe now my my litness test is the complexity of your application should be at most as complex as the",
    "start": "1019519",
    "end": "1026558"
  },
  {
    "text": "problem spaces inhabits and no greater and it's my Universal kind of assessment",
    "start": "1026559",
    "end": "1032678"
  },
  {
    "text": "criteria for like is this thing the right size is this the right",
    "start": "1032679",
    "end": "1037918"
  },
  {
    "text": "design and macro and Micro Design are the tools that we have to meet that goal right to take a complicated thing and",
    "start": "1037919",
    "end": "1043918"
  },
  {
    "text": "make it simple and you know like so many systems just plain fail that test at the",
    "start": "1043919",
    "end": "1049000"
  },
  {
    "text": "start they lose themselves under infrastructure and build systems and deployment and modules and reuse and G",
    "start": "1049000",
    "end": "1057320"
  },
  {
    "text": "just like all of these Grand ideas that people have about how they're going to grow their software that never come to be right and and actually they they stop",
    "start": "1057320",
    "end": "1065320"
  },
  {
    "text": "focusing on the form the software should take now instead and it buries systems",
    "start": "1065320",
    "end": "1070720"
  },
  {
    "text": "you know it makes working in these kinds of systems like swimming through treal I say like I've tried um it's like we",
    "start": "1070720",
    "end": "1077000"
  },
  {
    "text": "forgot how to build small beautiful things that solve problems discreetly while trying to build like",
    "start": "1077000",
    "end": "1083440"
  },
  {
    "text": "the next hash billionaire web3 who  knows right like everything",
    "start": "1083440",
    "end": "1090320"
  },
  {
    "text": "everyone was focused on big not small so the interesting thing about",
    "start": "1090320",
    "end": "1095960"
  },
  {
    "text": "thinking of software as design is that even the use of the word design is a little bit contentious so it means a lot",
    "start": "1095960",
    "end": "1103360"
  },
  {
    "text": "of things and it's really easy to mistake for other things so designs exist to solve problems and to",
    "start": "1103360",
    "end": "1109120"
  },
  {
    "text": "communicate intent using their form and function in a context but designs are also temporal in",
    "start": "1109120",
    "end": "1115840"
  },
  {
    "text": "nature they exist in a context of time as much as anything and a lot of design doesn't make sense when you take it out",
    "start": "1115840",
    "end": "1121720"
  },
  {
    "text": "of time so there are really great examples of products with great I hate saying this about this slide period",
    "start": "1121720",
    "end": "1127919"
  },
  {
    "text": "design that makes me feel really really old um that are nonsense now when remov from the context that they're in so",
    "start": "1127919",
    "end": "1134919"
  },
  {
    "text": "there's this really interesting observation these two iconic designs here um they weren't actually the last of",
    "start": "1134919",
    "end": "1140840"
  },
  {
    "text": "their lines at all so they evolved and changed over time so and that's because",
    "start": "1140840",
    "end": "1146240"
  },
  {
    "text": "design is iterative you know phones didn't cease to exist Walkins didn't vanish they were iterated out into touch",
    "start": "1146240",
    "end": "1153200"
  },
  {
    "text": "phones and mobile phones and dism and iPods and the irony of course is these two completely distinct different things",
    "start": "1153200",
    "end": "1160480"
  },
  {
    "text": "converged right because we discovered what the real problem was underneath which was basically transmit you know",
    "start": "1160480",
    "end": "1167320"
  },
  {
    "text": "they they were solving the the transmit mitting audio problem really and in fact",
    "start": "1167320",
    "end": "1172799"
  },
  {
    "text": "the really nice thing about thinking about this evolutionary incremental form of design is that if you look at the",
    "start": "1172799",
    "end": "1178280"
  },
  {
    "text": "processes that we come up with in software development things like tdd that can be casted as as a design",
    "start": "1178280",
    "end": "1183960"
  },
  {
    "text": "discipline they feature that same rapid iteration incremental process to test",
    "start": "1183960",
    "end": "1189960"
  },
  {
    "text": "and rapidly evolve a design into a good form and you know one of the things I'm",
    "start": "1189960",
    "end": "1195000"
  },
  {
    "text": "always totally certain of is all the people that criticize tdd have never actually used it for that incremental",
    "start": "1195000",
    "end": "1200960"
  },
  {
    "text": "and iterative process they kind of write it as one and done and all they were really doing was writing a test it's not",
    "start": "1200960",
    "end": "1207039"
  },
  {
    "text": "the same thing this also kind of highlights this other magic quality of design as a",
    "start": "1207039",
    "end": "1213120"
  },
  {
    "text": "discipline which it is is that it's just as much about form as it is about function there are kind of entire",
    "start": "1213120",
    "end": "1219960"
  },
  {
    "text": "categories of problems that unless you are much smarter person than I am you can't fit in your head until you see it",
    "start": "1219960",
    "end": "1227559"
  },
  {
    "text": "visual reasoning is a really really powerful tool and actually these design processes and iteration let you see the",
    "start": "1227559",
    "end": "1234080"
  },
  {
    "text": "thing and and kind of feel it out work out whether it feels right as much as anything and I think you know a lot of",
    "start": "1234080",
    "end": "1240440"
  },
  {
    "text": "people kind of feel like programming isn't an aesthetic or a visual",
    "start": "1240440",
    "end": "1245480"
  },
  {
    "text": "occupation but we we look at things all day every day and actually I think it plays into the way that you interact",
    "start": "1245480",
    "end": "1250640"
  },
  {
    "text": "with your software more than you realize um so I don't think it's",
    "start": "1250640",
    "end": "1256520"
  },
  {
    "text": "categorically impossible to you know know do great design without tdd or without some kind of iterative process",
    "start": "1256520",
    "end": "1263880"
  },
  {
    "text": "but I do believe it's a lot harder and you probably need something to replace that iteration with if you're going to",
    "start": "1263880",
    "end": "1269039"
  },
  {
    "text": "have success there so I kind of took this framing device and looking at software design as design really it's",
    "start": "1269039",
    "end": "1276400"
  },
  {
    "text": "probably worth us thinking about the context that the systems that we build today differ from when we were",
    "start": "1276400",
    "end": "1282919"
  },
  {
    "text": "originally working on design patterns and pattern languages to to see what good looks like you know it's kind of",
    "start": "1282919",
    "end": "1289240"
  },
  {
    "text": "Worth US re-evaluating organizational patterns for instance for a modern software context where we are not",
    "start": "1289240",
    "end": "1295360"
  },
  {
    "text": "building modern desktop systems mostly sorry if you probably still are um you know programming languages have made",
    "start": "1295360",
    "end": "1302360"
  },
  {
    "text": "categories of problems Obsolete and they have and you know I guess the thing that",
    "start": "1302360",
    "end": "1309640"
  },
  {
    "text": "a lot of the clean architecture folks will probably dislike about this is that",
    "start": "1309640",
    "end": "1315400"
  },
  {
    "text": "most of the things you think of as best practice are mostly just overblown structural design patterns right they're",
    "start": "1315400",
    "end": "1321480"
  },
  {
    "text": "just code organization and they kind of look as silly as a lot of the comedy organized",
    "start": "1321480",
    "end": "1328159"
  },
  {
    "text": "by architectural um concept patterns that we opened up with right it's just describing where you put stuff and I see",
    "start": "1328159",
    "end": "1334960"
  },
  {
    "text": "a lot of system designs these days that have been fragmented into microservices we all know it's about 80%",
    "start": "1334960",
    "end": "1341520"
  },
  {
    "text": "distributed monoliths but we're just going to go with it and then all of these individual moving parts of those systems have been like absolutely",
    "start": "1341520",
    "end": "1348520"
  },
  {
    "text": "decimated by best practice because large structural designs have been placed upon",
    "start": "1348520",
    "end": "1354919"
  },
  {
    "text": "very very small moving parts and what happens is you zoom out and the overall picture looks fine you know you're using",
    "start": "1354919",
    "end": "1360799"
  },
  {
    "text": "all the modern conveniences all the greatest build tools all the greatest patterns but when you zoom in it looks",
    "start": "1360799",
    "end": "1366919"
  },
  {
    "text": "kind of faintly ridiculous and I was actually I was having a conversation before I came here and that maybe by",
    "start": "1366919",
    "end": "1372919"
  },
  {
    "text": "calling some of these things kind of architectural Styles they sound like a",
    "start": "1372919",
    "end": "1378080"
  },
  {
    "text": "big that's meant to Encompass a system rather than a some language to describe",
    "start": "1378080",
    "end": "1383840"
  },
  {
    "text": "a characteristic of the system that we can use to share ideas with and I think maybe a shift in language there might",
    "start": "1383840",
    "end": "1390120"
  },
  {
    "text": "help as well let me show another example now you don't have to be able to read this so don't try just observe the lots",
    "start": "1390120",
    "end": "1397720"
  },
  {
    "text": "and lots of boxes right loads of boxes see that's how you know it architecture um so this is a class",
    "start": "1397720",
    "end": "1404400"
  },
  {
    "text": "diagram that I generated from A system that I was building that was following some very very prescriptive like",
    "start": "1404400",
    "end": "1411279"
  },
  {
    "text": "architectural like clean segregated pattern but all I see there is",
    "start": "1411279",
    "end": "1417080"
  },
  {
    "text": "thoughtlessness right and and you can make a bad job of anything right and and this was a bad job made of a good idea",
    "start": "1417080",
    "end": "1424120"
  },
  {
    "text": "so this system which we were in the process of recomposing back into one single logical application was divided",
    "start": "1424120",
    "end": "1430840"
  },
  {
    "text": "into this huge number of modules which were further subdivided by architectural feature so each part of the application",
    "start": "1430840",
    "end": "1437960"
  },
  {
    "text": "is his own web application depending on a subsequent core logic Library each one",
    "start": "1437960",
    "end": "1443799"
  },
  {
    "text": "which all depended coupled together on a series of common assemblies that it's shared with and then the total cognitive",
    "start": "1443799",
    "end": "1451200"
  },
  {
    "text": "load of you being able to change anything in any of those applications involved you knowing the whole of that",
    "start": "1451200",
    "end": "1457000"
  },
  {
    "text": "system and some people would describe this as nice and well intentioned it's a neat",
    "start": "1457000",
    "end": "1462840"
  },
  {
    "text": "diagram but the the irony here is that whole thing was maintained by a single",
    "start": "1462840",
    "end": "1468440"
  },
  {
    "text": "team of four people and all of those applications were deployed to the same logical server and mapped together into",
    "start": "1468440",
    "end": "1475640"
  },
  {
    "text": "what looked like one application bit of a canary in the coal mine",
    "start": "1475640",
    "end": "1481000"
  },
  {
    "text": "there so the iron is for all the macro design that people have put in place the",
    "start": "1481000",
    "end": "1486039"
  },
  {
    "text": "quality of the code was this garbage it was just tons and tons and tons of copy pasta garbage across everywhere like",
    "start": "1486039",
    "end": "1493399"
  },
  {
    "text": "people have been so bothered by what the architecture looked like that they forgot to make the soft we any good and",
    "start": "1493399",
    "end": "1500279"
  },
  {
    "text": "it was a just a case of focusing on the wrong thing and it was horrible and I see this everywhere right absolutely",
    "start": "1500279",
    "end": "1507240"
  },
  {
    "text": "everywhere so how did we spot and fix this well we did a first round of trimming the complexity we collapsed all",
    "start": "1507240",
    "end": "1513919"
  },
  {
    "text": "the family families of modules together so every web app that had an assembly with business logic shrunk together into",
    "start": "1513919",
    "end": "1519279"
  },
  {
    "text": "one thing we then rather than um releasing all of those web applications we just",
    "start": "1519279",
    "end": "1525840"
  },
  {
    "text": "kind of folded them all into the same application and uh of course those web Applications had and I think actually on",
    "start": "1525840",
    "end": "1533960"
  },
  {
    "text": "the uh the next slide there's some numbers um yeah we started out with 64 modules 19 build pipelines times three",
    "start": "1533960",
    "end": "1542760"
  },
  {
    "text": "environments and it was taking about 50 minutes to deploy into um an MVC",
    "start": "1542760",
    "end": "1549480"
  },
  {
    "text": "app in in one one repository that all deployed together in one",
    "start": "1549480",
    "end": "1555760"
  },
  {
    "text": "pipeline in 3 minutes and the code didn't change we didn't we didn't change",
    "start": "1555760",
    "end": "1561080"
  },
  {
    "text": "anything other than we just took away all of the repetitive garbage that was",
    "start": "1561080",
    "end": "1566279"
  },
  {
    "text": "burying the software and I think this is what the the real the real end game is",
    "start": "1566279",
    "end": "1571399"
  },
  {
    "text": "when when you think about structural design kind of running wild in your systems and lots and lots of non-c Conta",
    "start": "1571399",
    "end": "1578320"
  },
  {
    "text": "sensitive design as you end up with weird stuff like this happening and you know the team that were running it were good good people they weren't the people",
    "start": "1578320",
    "end": "1585679"
  },
  {
    "text": "that made the original decisions but they didn't feel empowered to change it until we kind of said hey this is this",
    "start": "1585679",
    "end": "1590960"
  },
  {
    "text": "is wild and you're you're struggling and you're you're you're sinking here um and",
    "start": "1590960",
    "end": "1596440"
  },
  {
    "text": "I left them with one piece of advice really which is just you know build smaller things know build smaller things all of",
    "start": "1596440",
    "end": "1602840"
  },
  {
    "text": "these things were obviously one system so we just made them one system so there are obviously certain",
    "start": "1602840",
    "end": "1611120"
  },
  {
    "text": "problem spaces where there are known good structural design patterns you know that again no absolutes right like there",
    "start": "1611120",
    "end": "1617960"
  },
  {
    "text": "are good good answers to some common questions the most obvious kind of glaring example is in RPC style systems",
    "start": "1617960",
    "end": "1624679"
  },
  {
    "text": "over like you know HTTP apis they often map quite well to command query patterns",
    "start": "1624679",
    "end": "1630399"
  },
  {
    "text": "of processing where the logic is all self-contained but in those system where",
    "start": "1630399",
    "end": "1635480"
  },
  {
    "text": "systems where you're using known good patterns actually it makes the the momentto moment programming in their",
    "start": "1635480",
    "end": "1641600"
  },
  {
    "text": "implementation is even more important because actually it's you know it's important to not be code blind and think",
    "start": "1641600",
    "end": "1648559"
  },
  {
    "text": "everything is the same it's I guess I suppose what I'm reaching for here is it's not really what just what you say",
    "start": "1648559",
    "end": "1654080"
  },
  {
    "text": "it's also how you say it right and it matters because when the design looks uniform you risk skim reading and as",
    "start": "1654080",
    "end": "1660960"
  },
  {
    "text": "soon as you start skim reading you're not actually understanding what your codebase is doing it's",
    "start": "1660960",
    "end": "1667000"
  },
  {
    "text": "dangerous so the interesting problem with good known reference designs is it's easy to learn a pattern and then",
    "start": "1667000",
    "end": "1674519"
  },
  {
    "text": "decide everything in software needs to look like it right you get your mental model and you realize you can cast it",
    "start": "1674519",
    "end": "1680240"
  },
  {
    "text": "onto everything and the reason I say that is like this is me I have done this so many times in my career and I'm",
    "start": "1680240",
    "end": "1686679"
  },
  {
    "text": "hopefully not going to do it again but you never know you know I learned about MVC and I thought everything had to be a",
    "start": "1686679",
    "end": "1692279"
  },
  {
    "text": "controller right just what it was and then I first learned about aspect-oriented programming and all I could see was chains of interceptors",
    "start": "1692279",
    "end": "1699080"
  },
  {
    "text": "everywhere and pipelines everywhere um I I I internalized as like a a mid-level",
    "start": "1699080",
    "end": "1704480"
  },
  {
    "text": "Dev that oh controllers only ever HTTP stuff so so then I thought everything was an application service interesting",
    "start": "1704480",
    "end": "1712360"
  },
  {
    "text": "um when microservice design first got popular I thought everything had to be completely decomposed I made all these mistakes and",
    "start": "1712360",
    "end": "1719519"
  },
  {
    "text": "the truth is it depends right system design is just a series of trade-offs and it takes time to learn actually that",
    "start": "1719519",
    "end": "1725960"
  },
  {
    "text": "uniformity is the opposite of expressiveness if you're trying to say something everything sounding the same",
    "start": "1725960",
    "end": "1732279"
  },
  {
    "text": "is actually bad really um you know it's important that",
    "start": "1732279",
    "end": "1737559"
  },
  {
    "text": "when you the different parts of your software do something different their form reflects their function and they",
    "start": "1737559",
    "end": "1743320"
  },
  {
    "text": "don't look the same as everything else in your code base because that visual variation is a is a tell it's something",
    "start": "1743320",
    "end": "1748799"
  },
  {
    "text": "you're giving to the reader and I guess this is all a bit of a war with complexity right it's all",
    "start": "1748799",
    "end": "1755600"
  },
  {
    "text": "tools that we're trying to use to make things feel a bit less scary and feel like there's a good answer and I guess I I feel like",
    "start": "1755600",
    "end": "1762279"
  },
  {
    "text": "intentionality is almost the opposite of complexity you know that we should stop doing things just because we should stop",
    "start": "1762279",
    "end": "1768200"
  },
  {
    "text": "cargo culting design decisions we should stop looking for that easy single answer that everything is a",
    "start": "1768200",
    "end": "1774399"
  },
  {
    "text": "BL if you don't understand why you're doing something stop doing it easy it's",
    "start": "1774399",
    "end": "1779919"
  },
  {
    "text": "a change everyone can make just stop doing things you don't understand seems really easy actually um but especially",
    "start": "1779919",
    "end": "1785640"
  },
  {
    "text": "if you can't justify extra complexity don't add the extra bit of thing right",
    "start": "1785640",
    "end": "1792960"
  },
  {
    "text": "unfortunately I think because of so much of software design being so context sensitive there are many times where",
    "start": "1792960",
    "end": "1798080"
  },
  {
    "text": "where blindly applying patterns makes software more difficult to reason about and increases cognitive load and you",
    "start": "1798080",
    "end": "1806000"
  },
  {
    "text": "know we're really trying to stop that so let talk about complexity and cognitive",
    "start": "1806000",
    "end": "1812159"
  },
  {
    "text": "load because I think different people have wildly different definitions of what they think complexity really is so",
    "start": "1812159",
    "end": "1818760"
  },
  {
    "text": "I'm often a little bit shocked by the kinds of things that people do not recognize as complexity so there's a a great quote",
    "start": "1818760",
    "end": "1825919"
  },
  {
    "text": "here on the screen and this is from a book called the a philosophy of software design by John kout there's some books",
    "start": "1825919",
    "end": "1832840"
  },
  {
    "text": "and references at the end don't worry um and I think it really gets to the heart of why complexity is a problem in",
    "start": "1832840",
    "end": "1838840"
  },
  {
    "text": "software you know complexity is anything related to the structure of a software system that makes it hard to understand",
    "start": "1838840",
    "end": "1844960"
  },
  {
    "text": "and modify the system that's what it is and the the chapter of the book that",
    "start": "1844960",
    "end": "1850399"
  },
  {
    "text": "this quote is contained in um basically offers the the the thesis that",
    "start": "1850399",
    "end": "1855960"
  },
  {
    "text": "complexity is never caused by a single catastrophic error it's just like the",
    "start": "1855960",
    "end": "1861480"
  },
  {
    "text": "tiny paper cuts that get you over time and the momentto moment poor decision making and they accumulate from the",
    "start": "1861480",
    "end": "1867880"
  },
  {
    "text": "collection of dependencies obscurities and idiosyncrasies of the work itself so",
    "start": "1867880",
    "end": "1873480"
  },
  {
    "text": "user hat descri describes complexity as the thing that leads to what he calls change amplification High cognitive load",
    "start": "1873480",
    "end": "1880320"
  },
  {
    "text": "and unknown unknowns subsequently leading to an explosion of work and effort and the",
    "start": "1880320",
    "end": "1886240"
  },
  {
    "text": "number of modifications that it takes then subsequently Implement Fe features and software so building on that",
    "start": "1886240",
    "end": "1892279"
  },
  {
    "text": "definition I kind of think that intentional thoughtful design is like a salve for this creeping wave of",
    "start": "1892279",
    "end": "1899679"
  },
  {
    "text": "complexity so there's there's a particularly distressing realization that hits you when you get to this line",
    "start": "1899679",
    "end": "1904760"
  },
  {
    "text": "of thinking which is that design patterns are precisely as popular as they are because it gives people a way",
    "start": "1904760",
    "end": "1911240"
  },
  {
    "text": "to reach for something that is a known good answer and they feel good it's like",
    "start": "1911240",
    "end": "1917000"
  },
  {
    "text": "a you know someone's giving you the cliff notes that says when someone says this just say this and you're good everything's cool don't worry about it",
    "start": "1917000",
    "end": "1923919"
  },
  {
    "text": "once you've seen enough code bases and enough languages you kind of realize that most of the arbitrary stylistic qualities of code that people focus on",
    "start": "1923919",
    "end": "1931159"
  },
  {
    "text": "you know everyone now laughs at the tabs versus spaces thing but basically a lot of all these other discussions are just",
    "start": "1931159",
    "end": "1937080"
  },
  {
    "text": "as silly uh they're just irrelevant actually and instead there are actually a couple of non-negotiable qualities",
    "start": "1937080",
    "end": "1944200"
  },
  {
    "text": "that you look for in a good code base that are far less Reg m mented in like a JavaScript style guide you know for for",
    "start": "1944200",
    "end": "1951840"
  },
  {
    "text": "me good code is code that's easy for someone with minimal domain context to read code that focuses on developer",
    "start": "1951840",
    "end": "1958799"
  },
  {
    "text": "experience debug ability and usability code where the intent what you're doing",
    "start": "1958799",
    "end": "1965000"
  },
  {
    "text": "takes up more visual space in the source file than all of the language Guff and orchestration and",
    "start": "1965000",
    "end": "1972559"
  },
  {
    "text": "syntax and all that kind of stuff where what you're doing is the thing that you see when you open the page page and the",
    "start": "1972559",
    "end": "1979360"
  },
  {
    "text": "truth is regardless of language or style or intent all programmers interact with codebases the same way right you open it",
    "start": "1979360",
    "end": "1986000"
  },
  {
    "text": "up and you glance at it to see if you can see what it does and then you read intently to try and understand how it does",
    "start": "1986000",
    "end": "1991600"
  },
  {
    "text": "it good code makes that easy and you know at a meta level all",
    "start": "1991600",
    "end": "1998440"
  },
  {
    "text": "code is constructed from abstractions and encapsulation like two very very common words and this has always been true and",
    "start": "1998440",
    "end": "2005720"
  },
  {
    "text": "the the programming languages and run times Frameworks where in which we write higher level code go through like this",
    "start": "2005720",
    "end": "2011919"
  },
  {
    "text": "horrible enormous amount of compilation and translation interpretation in order to be executed programming makes",
    "start": "2011919",
    "end": "2019320"
  },
  {
    "text": "programming languages themselves are just common abstractions over operating system apis which are abstractions over",
    "start": "2019320",
    "end": "2025799"
  },
  {
    "text": "assembly languages of microarchitectures which are abstractions over physical Hardware like was were built on top of",
    "start": "2025799",
    "end": "2031559"
  },
  {
    "text": "this massive stack of stuff and actually that Trend continues into the functions that you write and the types you define",
    "start": "2031559",
    "end": "2038039"
  },
  {
    "text": "and the classes and files that make up your application and the good news is for the most part we don't have to worry",
    "start": "2038039",
    "end": "2043080"
  },
  {
    "text": "about any of that right like we're blissfully blissfully unaware of it and I always like this this single example",
    "start": "2043080",
    "end": "2048638"
  },
  {
    "text": "that you never really worry about file open like file open is almost a perfect",
    "start": "2048639",
    "end": "2054358"
  },
  {
    "text": "API but actually if you really think about the the complexity of the system",
    "start": "2054359",
    "end": "2059440"
  },
  {
    "text": "that exists underneath it it's massive um the truth is when you implement your own systems that sadly",
    "start": "2059440",
    "end": "2066440"
  },
  {
    "text": "that same depth of implementation is never true or is often",
    "start": "2066440",
    "end": "2072240"
  },
  {
    "text": "untrue and I'm going to borrow a little bit more terminology from muster House's book when we think about this example of",
    "start": "2072240",
    "end": "2077839"
  },
  {
    "text": "file open so if you think of a module in a piece of software this could be when I say module I mean a package or a class",
    "start": "2077839",
    "end": "2085440"
  },
  {
    "text": "depends on your programming language really the interface that it exposes represents the complexity that that",
    "start": "2085440",
    "end": "2091280"
  },
  {
    "text": "module imposes on the rest of your application so the broader the interface",
    "start": "2091280",
    "end": "2096960"
  },
  {
    "text": "the more methods and functions and parameters the more complexity your application is",
    "start": "2096960",
    "end": "2102480"
  },
  {
    "text": "exposed to the smaller and simpler the interface the less complexity it forces",
    "start": "2102480",
    "end": "2108160"
  },
  {
    "text": "onto your application and the reason behind that is there's literally more more stuff that could be happening when",
    "start": "2108160",
    "end": "2113599"
  },
  {
    "text": "you interact with that module and by that description file open",
    "start": "2113599",
    "end": "2118640"
  },
  {
    "text": "is a beautiful deep module because the number the the the surface area is very",
    "start": "2118640",
    "end": "2124680"
  },
  {
    "text": "very narrow file names paths bite streams or text on the way out",
    "start": "2124680",
    "end": "2131119"
  },
  {
    "text": "every language it basically looks like that but what it does is it abstracts",
    "start": "2131119",
    "end": "2136480"
  },
  {
    "text": "over file systems and spinning Diss and operating system apis and ssds and God",
    "start": "2136480",
    "end": "2143320"
  },
  {
    "text": "knows what else right very very deep contains lots of functionality but very very narrow at the top very very tight",
    "start": "2143320",
    "end": "2151440"
  },
  {
    "text": "API if we understand that to be true and that contains complexity so deep modules",
    "start": "2151440",
    "end": "2156839"
  },
  {
    "text": "good the the inverse is then also true that anything with lots of parameters",
    "start": "2156839",
    "end": "2162119"
  },
  {
    "text": "lots of functions lots of potential actually you know might not be",
    "start": "2162119",
    "end": "2168359"
  },
  {
    "text": "offering much benefit to the calling code above might be making things worse and it doesn't help because then",
    "start": "2168359",
    "end": "2174800"
  },
  {
    "text": "when you're interacting with that code you have to comprehend all of those possible options and it makes your software more",
    "start": "2174800",
    "end": "2181680"
  },
  {
    "text": "complicated and as much a factor of avoiding the wrong abstractions like that is finding the right ones so might",
    "start": "2181680",
    "end": "2187760"
  },
  {
    "text": "seem like really painfully obvious advice but abstractions and generally any other module of code that you um you",
    "start": "2187760",
    "end": "2193599"
  },
  {
    "text": "find should contain a problem space entirely and I think this is a really you say that as a sentence and everyone",
    "start": "2193599",
    "end": "2199960"
  },
  {
    "text": "nods along but then you think about the number of things you've written with pass through interfaces and functions",
    "start": "2199960",
    "end": "2206560"
  },
  {
    "text": "that have no behavior and it becomes like really really apparent that even though we kind of believe this to be true we do lots",
    "start": "2206560",
    "end": "2212720"
  },
  {
    "text": "and lots of things that counteract that you know pass through interfaces for exist for for for example add nothing",
    "start": "2212720",
    "end": "2219200"
  },
  {
    "text": "and all they actually do is they take the complexity of the thing they're passing through to and pass on that entire complexity to the consuming code",
    "start": "2219200",
    "end": "2226440"
  },
  {
    "text": "so they're by definition bad design it's a thoughtless abstraction it's poor",
    "start": "2226440",
    "end": "2232480"
  },
  {
    "text": "encapsulation um and every time a decision like that is made it decreases the reason that a module exists it",
    "start": "2232480",
    "end": "2238720"
  },
  {
    "text": "decreases a reason that that piece of software exists so by definition we now have kind of a metric to understand why",
    "start": "2238720",
    "end": "2245960"
  },
  {
    "text": "that is bad design why anything that adds boilerplate code is bad design because what we're doing is we're",
    "start": "2245960",
    "end": "2251560"
  },
  {
    "text": "passing on the complexity of lower order modules up into our user code that we have to deal with every",
    "start": "2251560",
    "end": "2258440"
  },
  {
    "text": "day so you get to a certain point where you realize that all this talk about design kind of dissolves into discussion",
    "start": "2258440",
    "end": "2264160"
  },
  {
    "text": "of like dogma and absolutism because and I said this yesterday in the in the keynote there's",
    "start": "2264160",
    "end": "2270440"
  },
  {
    "text": "an absolute truth here that any design when stretched to its logical absolute extreme just becomes nonsense right it",
    "start": "2270440",
    "end": "2277640"
  },
  {
    "text": "doesn't matter what it is you can make any good pattern sound stupid if you put it in the wrong place so designing",
    "start": "2277640",
    "end": "2283400"
  },
  {
    "text": "software with intention software that survives is kind of an exercise and compromise always and of trade-offs you",
    "start": "2283400",
    "end": "2290119"
  },
  {
    "text": "know it's why anyone with experience in designing systems always kind of gives you the it depends and and it does",
    "start": "2290119",
    "end": "2296640"
  },
  {
    "text": "depend and it's better if we talk about what it depends on um in fact a lot of the poor",
    "start": "2296640",
    "end": "2301800"
  },
  {
    "text": "tradeoffs that I I see in software involve people actively not understanding the sources of complexity",
    "start": "2301800",
    "end": "2307520"
  },
  {
    "text": "in their system not understanding the the depths of the modules they're building or the the interfaces they're",
    "start": "2307520",
    "end": "2313400"
  },
  {
    "text": "imposing on the software you know there's a really good example here of like you know taking on extra",
    "start": "2313400",
    "end": "2318640"
  },
  {
    "text": "dependencies like packages right you you're effectively then on the hook for the the surface area of that API in your",
    "start": "2318640",
    "end": "2325359"
  },
  {
    "text": "system because subsequent changes could use extra functionality there and Things",
    "start": "2325359",
    "end": "2330720"
  },
  {
    "text": "become more complex you know there's a lot to be said about maintaining like 30 to 100 lines of code that you wrun wrote",
    "start": "2330720",
    "end": "2338160"
  },
  {
    "text": "rather than taking a dependency on like a 42,000 line dependency right you know",
    "start": "2338160",
    "end": "2343400"
  },
  {
    "text": "what it does you may have the cost to change it but you don't have to deal with managing the rest of that",
    "start": "2343400",
    "end": "2349040"
  },
  {
    "text": "complexity and it's interesting because it's kind of an unhealthy bed fellow with this notion that you should never write code that you don't have to right",
    "start": "2349040",
    "end": "2356520"
  },
  {
    "text": "and actually so a real practical example um I recently lost an entire weekend of",
    "start": "2356520",
    "end": "2362000"
  },
  {
    "text": "my life researching what the state-of-the-art and static site generators to like take some markdown",
    "start": "2362000",
    "end": "2368000"
  },
  {
    "text": "files and put them on the Internet was and I got to the end of two days of trying every web framework Under the Sun",
    "start": "2368000",
    "end": "2374119"
  },
  {
    "text": "and I I wrote a 200 line program and I just shipped that instead because I knew I didn't need any of the features and I",
    "start": "2374119",
    "end": "2381160"
  },
  {
    "text": "figured like if I if I adopted framework of the day I'd then be hooked to its",
    "start": "2381160",
    "end": "2386359"
  },
  {
    "text": "maintenance line and all the changes and all the breakages and the security patches there's a lot to be said about",
    "start": "2386359",
    "end": "2392359"
  },
  {
    "text": "just owning your own sometimes um and it was precisely just because I want the cognitive",
    "start": "2392359",
    "end": "2399319"
  },
  {
    "text": "load um all your designs should really be expressed with that kind of trade-off right what I was really doing the process I went through was I said what",
    "start": "2399319",
    "end": "2405960"
  },
  {
    "text": "features am I looking for mark down into HTML I can write that with one library",
    "start": "2405960",
    "end": "2414040"
  },
  {
    "text": "that calls one function and never think about it again cool sold I understood why and in fact you",
    "start": "2414040",
    "end": "2421760"
  },
  {
    "text": "know once you start considering your design as this series of continual tradeoffs what you realizes that instead",
    "start": "2421760",
    "end": "2428119"
  },
  {
    "text": "of rules around system design what you end up with is kind of tests of your design I don't mean coded tests I mean",
    "start": "2428119",
    "end": "2435160"
  },
  {
    "text": "just tests we use to evaluate the qualities of the systems that we build so I want to take you through a few tests that I tend to use whenever people",
    "start": "2435160",
    "end": "2441640"
  },
  {
    "text": "bring me designs whenever people and my teams talk to me could this be done with less moving",
    "start": "2441640",
    "end": "2447839"
  },
  {
    "text": "parts right and this is this is always hard for people because they often think well you know microservices more moving",
    "start": "2447839",
    "end": "2454280"
  },
  {
    "text": "Parts better because resilient and scalability but every moving part you add is",
    "start": "2454280",
    "end": "2459920"
  },
  {
    "text": "actually a repository three Bill pipelines some security scans some static analysis like there's just that",
    "start": "2459920",
    "end": "2466440"
  },
  {
    "text": "extra total cost of ownership in every part that you put into the system so if I can do something with less I will and",
    "start": "2466440",
    "end": "2474079"
  },
  {
    "text": "by that same token I won't just arbitrarily pull out any single capabilities and extract them to Common",
    "start": "2474079",
    "end": "2480400"
  },
  {
    "text": "dependencies just because until someone really really needs that thing not going to do it breakup systems into individual",
    "start": "2480400",
    "end": "2488119"
  },
  {
    "text": "components only when they need to ship scale or deploy",
    "start": "2488119",
    "end": "2493520"
  },
  {
    "text": "independently is this operable in a production environment now software that's hard to observe deploy and manage",
    "start": "2493599",
    "end": "2500599"
  },
  {
    "text": "slows the pace of change and the only thing I can promise you forever in a day is your software will change so you",
    "start": "2500599",
    "end": "2506240"
  },
  {
    "text": "should always optimize for the thing that I know with certainty will happen um software that's difficult to change",
    "start": "2506240",
    "end": "2511720"
  },
  {
    "text": "is basically Dead on Arrival and that's the same point in a",
    "start": "2511720",
    "end": "2518160"
  },
  {
    "text": "different slide so what I'm really advocating for here when I plead for intentionality is",
    "start": "2518160",
    "end": "2525640"
  },
  {
    "text": "for you to write your code with kind of care and purpose you know I want you to think about the design of your software",
    "start": "2525640",
    "end": "2531800"
  },
  {
    "text": "I want you to think about the reader I want you to think about the form and the flow of your application and what they",
    "start": "2531800",
    "end": "2537160"
  },
  {
    "text": "tell the person that's reading it next I want you to use all the forms of expression available to you in a",
    "start": "2537160",
    "end": "2542480"
  },
  {
    "text": "codebase to communicate meaning and intent one of my almost Hills that I will die on at the moment is people keep",
    "start": "2542480",
    "end": "2548359"
  },
  {
    "text": "on um misinterpreting this and saying well you know you can just use LS for all of this and autof formatting fixes",
    "start": "2548359",
    "end": "2554400"
  },
  {
    "text": "this all and I kind of have this fundamental belief that autof formatting is taking a piece of um the",
    "start": "2554400",
    "end": "2562720"
  },
  {
    "text": "processing sorry piece of the programming process where you can express something to the reader and",
    "start": "2562720",
    "end": "2568960"
  },
  {
    "text": "giving it to a machine with no context and hoping it does a better job than you will which seems absolutely inan to me",
    "start": "2568960",
    "end": "2575800"
  },
  {
    "text": "completely asinine um I think you know it's important to remember that different problem spaces",
    "start": "2575800",
    "end": "2581640"
  },
  {
    "text": "and different solutions require different aesthetic viewpoints and we should embrace that there shouldn't be",
    "start": "2581640",
    "end": "2586720"
  },
  {
    "text": "one language style right it should be context sensitive lest we Dam ourselves",
    "start": "2586720",
    "end": "2591960"
  },
  {
    "text": "to everything either being a jumble of components full of HTTP calls it's one of the big meta designs or an MBC app",
    "start": "2591960",
    "end": "2600400"
  },
  {
    "text": "the two the two true designs right um it doesn't have to be that way and when we use form and design to tell graph intent",
    "start": "2600400",
    "end": "2608040"
  },
  {
    "text": "your work becomes better because your care shows it shows that you've thought about it and I love that about things so",
    "start": "2608040",
    "end": "2614200"
  },
  {
    "text": "I was on this podcast a couple of years back where I was asked what advice I would give myself at the start of my",
    "start": "2614200",
    "end": "2619920"
  },
  {
    "text": "career and the answer is really really clear to me now um I take more time more",
    "start": "2619920",
    "end": "2625440"
  },
  {
    "text": "time with everything and I think all of the best designs that I have ever committed all of the things that I've",
    "start": "2625440",
    "end": "2631680"
  },
  {
    "text": "given to people where people have sent me messages afterwards and been like oh that's really really cool I'd finished",
    "start": "2631680",
    "end": "2636880"
  },
  {
    "text": "the thing and I'd sit in an evening and i' pour myself a drink and i' put some music on i' just read it and I'd Mill it",
    "start": "2636880",
    "end": "2643640"
  },
  {
    "text": "over and I'd ask myself why why did you make that choice why did you call it",
    "start": "2643640",
    "end": "2648880"
  },
  {
    "text": "that thing you know it's almost like a code review with yourself with your both harshest critic and kindest friend right",
    "start": "2648880",
    "end": "2655400"
  },
  {
    "text": "and if I couldn't articulate to myself why I've made the decisions I've made and picked the names I picked and structured things in the way if I",
    "start": "2655400",
    "end": "2661680"
  },
  {
    "text": "couldn't say what that was telegraphing I would change it sometimes I back it out sometimes I commit to it it was okay",
    "start": "2661680",
    "end": "2669559"
  },
  {
    "text": "but that extra bit of care that like 20% of extra time to really sit with the",
    "start": "2669559",
    "end": "2674760"
  },
  {
    "text": "work was was what made all that software good software um so that's what I would",
    "start": "2674760",
    "end": "2679800"
  },
  {
    "text": "do that's what I would tell myself take more time so I want to leave you with a few reading recommendations partially",
    "start": "2679800",
    "end": "2686640"
  },
  {
    "text": "because there aren't really a lot of books on this topic like it's not really the way people think about software design so a philosophy of software",
    "start": "2686640",
    "end": "2693079"
  },
  {
    "text": "design by John user how is excellent please please please read it your code as a crime scene just had a V2 revision",
    "start": "2693079",
    "end": "2700319"
  },
  {
    "text": "came out yesterday I believe so it's about 10 years old um by Adam torill",
    "start": "2700319",
    "end": "2705920"
  },
  {
    "text": "very very good Mark Seaman just put out code that fits in your head which is a lot about the momentto moment aesthetic",
    "start": "2705920",
    "end": "2711920"
  },
  {
    "text": "choices how we express things in code also Kemp Beck just put out a new book called tidy first which is a really",
    "start": "2711920",
    "end": "2718359"
  },
  {
    "text": "really concise read it's like a three-hour read absolutely brilliant if you want to go through like some",
    "start": "2718359",
    "end": "2723640"
  },
  {
    "text": "examples of how you can change the aesthetic viewpoints of your code um they obviously contain way more",
    "start": "2723640",
    "end": "2729520"
  },
  {
    "text": "exhaustive examples than they can fit in a presentation but I really would recommend them and support all the",
    "start": "2729520",
    "end": "2735880"
  },
  {
    "text": "authors in our community obviously um so yes this is the talk  it it",
    "start": "2735880",
    "end": "2741520"
  },
  {
    "text": "depends um that that that would have been put on the agenda if they'd let me",
    "start": "2741520",
    "end": "2747839"
  },
  {
    "text": "um so yes I like talk about this stuff um I hope maybe this has been some food for thought as how you can change the",
    "start": "2747839",
    "end": "2753760"
  },
  {
    "text": "way you work thank you for coming any questions I saw you all go to clap and then I interrupted",
    "start": "2753760",
    "end": "2759880"
  },
  {
    "text": "you there we go thank [Applause]",
    "start": "2759880",
    "end": "2769680"
  },
  {
    "text": "you I see silence I love it",
    "start": "2769680",
    "end": "2775079"
  },
  {
    "text": "please is anything improving or getting worse over the years in the this space",
    "start": "2775079",
    "end": "2782559"
  },
  {
    "text": "there's a lot of thought about it I think these days but I think on balance things are improving but I",
    "start": "2782559",
    "end": "2790559"
  },
  {
    "text": "think it's been a particularly precocious 15 years for it in that I think um I've had a number of",
    "start": "2790559",
    "end": "2796559"
  },
  {
    "text": "conversations about this while I've been out here this week actually I think there's a there's a truth that a lot of",
    "start": "2796559",
    "end": "2801640"
  },
  {
    "text": "backend development stabilized quite well with rational tool chains um it then suffered from like a middle era of",
    "start": "2801640",
    "end": "2808240"
  },
  {
    "text": "big fat bloated overdesign as we stumbled towards answers I think some Universal truths",
    "start": "2808240",
    "end": "2814800"
  },
  {
    "text": "have started to become apparent that have taken some the bite out of that I then kind of think front end",
    "start": "2814800",
    "end": "2821280"
  },
  {
    "text": "turned up 15 years later and went you know what we're going to do that exact same 10e Arc right and I think actually",
    "start": "2821280",
    "end": "2828079"
  },
  {
    "text": "you know and and it's cool and it's because we pushed all the complexity into the front end right so front end people then had to contend with the same",
    "start": "2828079",
    "end": "2834599"
  },
  {
    "text": "problems that we've been contending with ourselves and they learned the same lessons with slightly different aesthetic viewpoints and I feel like",
    "start": "2834599",
    "end": "2841200"
  },
  {
    "text": "we're kind of all coalescing onto a similar kind of problem space and you kind of see it you look at tools like a",
    "start": "2841200",
    "end": "2847319"
  },
  {
    "text": "I think front- end tool chains are a really good example of where this has been going because they started very",
    "start": "2847319",
    "end": "2853359"
  },
  {
    "text": "duct taped together for years and years and years and in the last two or three years a lot of things are kind of coalescing into smaller two or three",
    "start": "2853359",
    "end": "2860400"
  },
  {
    "text": "tools and that's it kind of tool chains which I think reflect where backend development has been and when you see",
    "start": "2860400",
    "end": "2866960"
  },
  {
    "text": "kind of modern languages like I don't know we pick rust as a random example A lot of the things that used to be glued",
    "start": "2866960",
    "end": "2872359"
  },
  {
    "text": "onto the side of all of this are now kind of core to the language and the compiler tool that comes with it so I",
    "start": "2872359",
    "end": "2877800"
  },
  {
    "text": "think that's better um I think microservices got misinterpreted for a very very long time microservices are",
    "start": "2877800",
    "end": "2883960"
  },
  {
    "text": "awesome by the way legitimately awesome um but what most people built was weird codependent spaghetti Nano services and",
    "start": "2883960",
    "end": "2891839"
  },
  {
    "text": "now people are going oh monoliths are good why well because we made a big pile of over there it's like",
    "start": "2891839",
    "end": "2897520"
  },
  {
    "text": "cool but you made a big pile of in the monolith before you did that as well so it's not like this is any different",
    "start": "2897520",
    "end": "2903359"
  },
  {
    "text": "um I think the truth is as we get better at talking about these things we'll see the line go up and I think that's",
    "start": "2903359",
    "end": "2908839"
  },
  {
    "text": "probably good and every time we do that iteration we learn a little bit more and we get better at explaining it and we",
    "start": "2908839",
    "end": "2914000"
  },
  {
    "text": "get better at understanding it so I'm",
    "start": "2914000",
    "end": "2917800"
  },
  {
    "text": "hopeful hello yeah um I had a a question so if you walk into a a code base that",
    "start": "2919559",
    "end": "2925359"
  },
  {
    "text": "is suffering from being very complex but you're tasked with something else implementing new features whatever it is how do you leverage your age to uh",
    "start": "2925359",
    "end": "2932200"
  },
  {
    "text": "reduce the complexity with your um duty to work on the work you were tested with",
    "start": "2932200",
    "end": "2937359"
  },
  {
    "text": "so one of the hardest core skills of a programmer is this someone gives you a",
    "start": "2937359",
    "end": "2943079"
  },
  {
    "text": "ticket to do and you open up something and there's a load of in there right and everything in your gut says",
    "start": "2943079",
    "end": "2949240"
  },
  {
    "text": "this has to change but you know you got to do the work if it's going to take less than two hours just do it just do",
    "start": "2949240",
    "end": "2956079"
  },
  {
    "text": "it please just do it because if you don't do it someone will be mad later and that's exactly the same thing I say",
    "start": "2956079",
    "end": "2961200"
  },
  {
    "text": "to like all my teams if it's going to take you kind of less than morning to fix something I don't I don't want you to tell me about it ahead of time I",
    "start": "2961200",
    "end": "2967400"
  },
  {
    "text": "don't want a ticket I don't want to have a conversation just fix it I trust you you're professionals um I would never go",
    "start": "2967400",
    "end": "2973880"
  },
  {
    "text": "to a doctor and say hey buddy we're going to do open heart surgery don't worry about washing all that stuff up",
    "start": "2973880",
    "end": "2979119"
  },
  {
    "text": "but just you know get me in and out straight in there so I think there's kind of a a professional responsibility",
    "start": "2979119",
    "end": "2984640"
  },
  {
    "text": "to take care but equally once you hit a certain inflection point a professional responsibility to write it up and say",
    "start": "2984640",
    "end": "2990559"
  },
  {
    "text": "okay we've got an actual problem here that we need to solve let's talk about it as a group and I think finding that",
    "start": "2990559",
    "end": "2995839"
  },
  {
    "text": "balance depends from organization to organization and from Team to team but I tend to feel that healthy teams chip",
    "start": "2995839",
    "end": "3002359"
  },
  {
    "text": "away you know it's the same thing people have been saying for years with the Boy Scout rule right leave the campsite better than when you arrived but it just",
    "start": "3002359",
    "end": "3008799"
  },
  {
    "text": "takes that discipline to know when not to ask for permission can't tell",
    "start": "3008799",
    "end": "3015640"
  },
  {
    "text": "you um I love this it um made me a question about 10 years of my career",
    "start": "3015640",
    "end": "3021160"
  },
  {
    "text": "though Sor um that's all right not the first time that's happened um this a lot",
    "start": "3021160",
    "end": "3027040"
  },
  {
    "text": "of the like self-reflection about how much complexity you're introducing and stuff kind of relies I think on having",
    "start": "3027040",
    "end": "3034160"
  },
  {
    "text": "the experience to know whether you're just following the patterns that your team has done on and yeah what advice",
    "start": "3034160",
    "end": "3041079"
  },
  {
    "text": "would you give for like Junior devs who maybe don't have that experience so it's",
    "start": "3041079",
    "end": "3046559"
  },
  {
    "text": "really interesting and I was having another conversation a couple days ago to someone else's talk about how um it's",
    "start": "3046559",
    "end": "3053680"
  },
  {
    "text": "very very difficult when you don't have experience to understand understand tradeoffs because you're not really sure",
    "start": "3053680",
    "end": "3059640"
  },
  {
    "text": "what you are trading off now my my mental model is this every program has",
    "start": "3059640",
    "end": "3065359"
  },
  {
    "text": "context it has scope right there's the number of variables there stuff you got to think about to make a change as you",
    "start": "3065359",
    "end": "3070880"
  },
  {
    "text": "start to clean things up anything that reduces the amount of scope you have to hold in your head to produce a",
    "start": "3070880",
    "end": "3077440"
  },
  {
    "text": "modification is good anything where you take that entire context and shift it somewhere else is bad because actually",
    "start": "3077440",
    "end": "3085440"
  },
  {
    "text": "you you've not reduced anything you're picking up all the context and like it's the reason why a lot of uh refactorings",
    "start": "3085440",
    "end": "3090920"
  },
  {
    "text": "where people and actually one of my core criticisms of clean code is there's a lots of examples of refactorings in",
    "start": "3090920",
    "end": "3096240"
  },
  {
    "text": "there where it's extract method extract method extract method and all those methods require the exact same amount of",
    "start": "3096240",
    "end": "3102160"
  },
  {
    "text": "context as the parent method to rational to to reason about and actually what that does is as you're reading that top",
    "start": "3102160",
    "end": "3108079"
  },
  {
    "text": "level function you look at it and you're like well anything could be happening in there because I'm passing all of this stuff over there and that's actually",
    "start": "3108079",
    "end": "3114880"
  },
  {
    "text": "worse for cognitive load rather than better because then actually you've got what you see and then a potential Avenue",
    "start": "3114880",
    "end": "3121480"
  },
  {
    "text": "of risks so my my one like the one bit of advice in the middle is like be mindful of the amount of context you are",
    "start": "3121480",
    "end": "3127599"
  },
  {
    "text": "passing around because the bigger the context is the riskier operations can",
    "start": "3127599",
    "end": "3133838"
  },
  {
    "text": "become good workout sorry to make you run m",
    "start": "3141319",
    "end": "3147599"
  },
  {
    "text": "um so it's interesting like all those organizational patterns that you talk",
    "start": "3147599",
    "end": "3153920"
  },
  {
    "text": "about there's a certain I guess irony in that a lot of the reason that we apply those is to was you know with the goal",
    "start": "3153920",
    "end": "3161480"
  },
  {
    "text": "or intent of making things you know more accessible more predictable right um making it you know easier to reason",
    "start": "3161480",
    "end": "3168680"
  },
  {
    "text": "about making it easier to uh maintain so a lot of the stuff that you talked about",
    "start": "3168680",
    "end": "3174160"
  },
  {
    "text": "here um you know I get it conceptionally conceptually but you know the devil can",
    "start": "3174160",
    "end": "3180240"
  },
  {
    "text": "be in the detail right so when you go to apply this you know how do you actually translate that like do you have like you",
    "start": "3180240",
    "end": "3187200"
  },
  {
    "text": "know like a like a a check checklist of like look for this look for this look for this I think it's easier to to learn",
    "start": "3187200",
    "end": "3193240"
  },
  {
    "text": "through examples yeah agree so I guess I'm just wondering do you have like you",
    "start": "3193240",
    "end": "3198640"
  },
  {
    "text": "know a couple of GitHub I do have some examples that aren't in here what I would really really recommend if you're looking for that pick up the Kemp bet",
    "start": "3198640",
    "end": "3205520"
  },
  {
    "text": "book tidy first right and because it is literally just a catalog of examples I",
    "start": "3205520",
    "end": "3210760"
  },
  {
    "text": "think the really interesting thing that he does in that book that's different from maybe pre like because ultimately",
    "start": "3210760",
    "end": "3217319"
  },
  {
    "text": "it's a refactoring book right but the opening section I thought was quite Illuminating he basically said we",
    "start": "3217319",
    "end": "3224480"
  },
  {
    "text": "up the word refactoring right because refactoring can mean rewriting changing",
    "start": "3224480",
    "end": "3230559"
  },
  {
    "text": "the like it's meant to mean changing the form but not the function right very very obvious but 20 years of",
    "start": "3230559",
    "end": "3237000"
  },
  {
    "text": "misunderstanding that means that like it's become meaningless it's like saying integration test doesn't mean anything",
    "start": "3237000",
    "end": "3242200"
  },
  {
    "text": "anymore right meaningless terms so he's using the word tidy which I thought was",
    "start": "3242200",
    "end": "3247960"
  },
  {
    "text": "quite cute but also it it then becomes an a dictionary of tidying up examples",
    "start": "3247960",
    "end": "3253760"
  },
  {
    "text": "of like here's something ugly clean it up in this way hey there's a couple of patterns like merging things together to",
    "start": "3253760",
    "end": "3259520"
  },
  {
    "text": "then tidy them and separate them out so pick up that book it's amazing would recommend heartly",
    "start": "3259520",
    "end": "3267280"
  },
  {
    "text": "any more for anym please sorry uh thank you David was",
    "start": "3268359",
    "end": "3275040"
  },
  {
    "text": "really great talk start with uh but uh as software devs we all have pure intents right no one's here to destroy",
    "start": "3275040",
    "end": "3282000"
  },
  {
    "text": "the code coding well and my question is when you have a code base and you have conflicting priorities I think that's",
    "start": "3282000",
    "end": "3288040"
  },
  {
    "text": "probably a challenge every one of us faces day-to-day you have a timeline staring it down at you and then you have",
    "start": "3288040",
    "end": "3294240"
  },
  {
    "text": "a code base which is spaghetti basically so how where do you draw the line of",
    "start": "3294240",
    "end": "3299480"
  },
  {
    "text": "when do I clean up and when do I when do I wait later yeah and that's finally enough that's the other half of that",
    "start": "3299480",
    "end": "3305640"
  },
  {
    "text": "book is is about when and and when is just as big a question as any um I think",
    "start": "3305640",
    "end": "3312160"
  },
  {
    "text": "my personal line is anything I can do with tool assisted refactoring in less",
    "start": "3312160",
    "end": "3317960"
  },
  {
    "text": "than a second I just do there's no excuse right like it's it's kind of known safe um anything that's more stru",
    "start": "3317960",
    "end": "3326280"
  },
  {
    "text": "Ral and foundational you should think about and schedule and and and prepare for because actually it could be more",
    "start": "3326280",
    "end": "3332280"
  },
  {
    "text": "dangerous and more disruptive um a lot of this stuff and again with the it depends theme depends on the size of the",
    "start": "3332280",
    "end": "3338680"
  },
  {
    "text": "code base you know if you got a code base that's up to like 2,000 lines of code 5,000 lines of code the time is now",
    "start": "3338680",
    "end": "3345680"
  },
  {
    "text": "always just just do it right you can you can meaningfully sit there for a week and read every line of it and fix every",
    "start": "3345680",
    "end": "3351039"
  },
  {
    "text": "line of it just do it when you're in the hundreds of thousands of lines of codee and you know big old maybe legendary old",
    "start": "3351039",
    "end": "3357839"
  },
  {
    "text": "systems that are big and running be careful cut bits out of cut complexity",
    "start": "3357839",
    "end": "3363079"
  },
  {
    "text": "out of the middle of the system work on the peace and isolation put it back in um it's a bit of a tradeoff and and and",
    "start": "3363079",
    "end": "3369520"
  },
  {
    "text": "the truth is you're the best person to know what you think is scary and what",
    "start": "3369520",
    "end": "3374799"
  },
  {
    "text": "you think isn't I would give the same advice I give to all my teams is be brave you have Source control just",
    "start": "3374799",
    "end": "3381319"
  },
  {
    "text": "revert it if you it up don't worry about it just code",
    "start": "3381319",
    "end": "3387480"
  },
  {
    "text": "[Music] so you have a legacy system and then you",
    "start": "3391420",
    "end": "3398280"
  },
  {
    "text": "get offered you can either use one of the Enterprise solutions that you can replace that system with the Enterprise",
    "start": "3398280",
    "end": "3404799"
  },
  {
    "text": "solution yeah or you can write it in a cloud native environment y the business",
    "start": "3404799",
    "end": "3411000"
  },
  {
    "text": "wants to go the Enterprise solution because it's quicker it's already",
    "start": "3411000",
    "end": "3417240"
  },
  {
    "text": "engage in part of the business but um as an engineer you want to go Cloud native",
    "start": "3417240",
    "end": "3423680"
  },
  {
    "text": "because you have more controll and all this yeah what do you recommend what would I recommend um well I think I",
    "start": "3423680",
    "end": "3432119"
  },
  {
    "text": "always caution people against rewriting systems I think rewriting systems is fundamentally a dangerous and",
    "start": "3432119",
    "end": "3437920"
  },
  {
    "text": "narcissistic act most of the time um it's just you saying oh this isn't my mental model fine um I've always",
    "start": "3437920",
    "end": "3447160"
  },
  {
    "text": "suggested that systems should be evolved into the systems you want them to be so I would take that enterprise system and",
    "start": "3447160",
    "end": "3453640"
  },
  {
    "text": "look at how you could increment out parts of it to be Cloud native maybe you",
    "start": "3453640",
    "end": "3458880"
  },
  {
    "text": "know and again this is a contextless example maybe you could deploy the enterprise system twice once to the",
    "start": "3458880",
    "end": "3464240"
  },
  {
    "text": "cloud and the portion of it that you want to trigger in the cloud is the only bit that that is invoked you still have",
    "start": "3464240",
    "end": "3470240"
  },
  {
    "text": "one unit of code you're still maturing the same system but you're subtly migrating it between places in a way",
    "start": "3470240",
    "end": "3475920"
  },
  {
    "text": "that's compatible in both senses um I would always recommend backwards compatibility because that stops you",
    "start": "3475920",
    "end": "3482400"
  },
  {
    "text": "from making mistakes well doesn't stop you from making mistakes but it stops you buying the farm when you do you",
    "start": "3482400",
    "end": "3490440"
  },
  {
    "text": "know awesome thank you so much everyone I hope this was interesting I know it's a bit",
    "start": "3492880",
    "end": "3499440"
  },
  {
    "text": "cerebral thank you",
    "start": "3499440",
    "end": "3503599"
  }
]