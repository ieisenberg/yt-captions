[
  {
    "start": "0",
    "end": "53000"
  },
  {
    "text": "okay let's make a start so you thanks for coming on everyone and welcome to the first while the conference data for",
    "start": "4980",
    "end": "10750"
  },
  {
    "text": "NDC Security 2019 is anyone here for the workshops over the last couple of days Oh quite a few okay that's cool so most",
    "start": "10750",
    "end": "19750"
  },
  {
    "text": "of the people teaching the workshops are struggling to talk this morning so we're gonna see how we how we get on it's been a lot of talking so today",
    "start": "19750",
    "end": "26380"
  },
  {
    "text": "we're gonna talk about protecting encryption keys using Azure key vault so we're gonna talk a little bit first",
    "start": "26380",
    "end": "32290"
  },
  {
    "text": "about the threat of data breaches but I think any of that will be a surprise to anyone sitting in this room but a very",
    "start": "32290",
    "end": "37480"
  },
  {
    "text": "quick high-level cryptographic overview and then we're gonna talk a bit about different key management options then",
    "start": "37480",
    "end": "43570"
  },
  {
    "text": "I'm going to introduce a Jackie volts and then work through some different patterns and practices fusing as your key volts and I've got lots of code",
    "start": "43570",
    "end": "48969"
  },
  {
    "text": "demos and it's get hub repoed where you can take the code from as well so the",
    "start": "48969",
    "end": "54670"
  },
  {
    "start": "53000",
    "end": "236000"
  },
  {
    "text": "fret of data breaches so I mean as we can all appreciate there's been people working in software development and security that data breaches are getting",
    "start": "54670",
    "end": "61930"
  },
  {
    "text": "worse not better so this particular screenshot is a website called breach level index I like to show it to give",
    "start": "61930",
    "end": "68350"
  },
  {
    "text": "some quite so good stark stats on the screen so we can see here that since 2013 there's been thirteen billion four",
    "start": "68350",
    "end": "76570"
  },
  {
    "text": "hundred and forty three million one hundred forty nine thousand six hundred and twenty three records stolen or",
    "start": "76570",
    "end": "81610"
  },
  {
    "text": "breached as a hard number to say that doesn't really surprise me at all you",
    "start": "81610",
    "end": "87340"
  },
  {
    "text": "know the problems getting worse I expect it to get even worse over time the bit that surprises me and concerns me is a bit at the bottom well we'll just",
    "start": "87340",
    "end": "93460"
  },
  {
    "text": "underneath that says only four percent of those breaches were considered secure breaches where the data is actually",
    "start": "93460",
    "end": "98710"
  },
  {
    "text": "encrypted and you can't read it once it's been leaked so that numbers quite low and that's the",
    "start": "98710",
    "end": "104020"
  },
  {
    "text": "number we want to try and get higher using good cryptographic techniques in our code and systems and good key",
    "start": "104020",
    "end": "109180"
  },
  {
    "text": "management which is what we're gonna focus on today if you go to breach level index com they've got lots of different",
    "start": "109180",
    "end": "115390"
  },
  {
    "text": "stats from different companies that have had data breaches and they're some quite big numbers there and some fairly big",
    "start": "115390",
    "end": "120640"
  },
  {
    "text": "names like JP Morgan the US Bank Equifax which is a credit reference agency",
    "start": "120640",
    "end": "126100"
  },
  {
    "text": "MySpace I didn't think anyone still used myspace but maybe that's just me and friend finder network in eBay so they've",
    "start": "126100",
    "end": "133450"
  },
  {
    "text": "all been subjected to quite large data breaches also as well if you to Troy's website and fiber impound he's",
    "start": "133450",
    "end": "140680"
  },
  {
    "text": "got some staggering statistics on there if some data breaches have happened so I",
    "start": "140680",
    "end": "146260"
  },
  {
    "text": "guess everyone's probably heard of or at least signed up to his breach notification service it's quite good I",
    "start": "146260",
    "end": "152230"
  },
  {
    "text": "was in his big collection breach last week which is a bit bit annoying so late",
    "start": "152230",
    "end": "159310"
  },
  {
    "text": "speeches have some quiet sort of bad effects on companies so if it happens to your company it's gonna damage your",
    "start": "159310",
    "end": "165489"
  },
  {
    "text": "reputation which is quite bad and it's very difficult to recover from and that can lead to a loss of sales so it's going to affect the bottom line when the",
    "start": "165489",
    "end": "172840"
  },
  {
    "text": "bottom line gets affected that's when people will start losing their jobs because it company needs to you know tighten their tighten their belt",
    "start": "172840",
    "end": "179879"
  },
  {
    "text": "customers could switch to a competitor again that's very difficult to recover from because once someone has gone to",
    "start": "179879",
    "end": "185019"
  },
  {
    "text": "the effort to switch to another product or company getting in to switch bank will be nearly impossible or very difficult we can also get legal action",
    "start": "185019",
    "end": "192519"
  },
  {
    "text": "from customers or other companies as well for not being careful with their data as well as compliance costs as well",
    "start": "192519",
    "end": "199599"
  },
  {
    "text": "so if you're in a regulated environment like financial services health care or insurance or any military or government",
    "start": "199599",
    "end": "205720"
  },
  {
    "text": "departments then the compliance costs and fines can be quite staggering and really damage your company you know",
    "start": "205720",
    "end": "214209"
  },
  {
    "text": "there's also effects on natural people that have their data stolen as well so there's a loss of personal data which",
    "start": "214209",
    "end": "220000"
  },
  {
    "text": "can result in ID theft can lead to impersonation loss of financial data and loss of actual money as well if we use",
    "start": "220000",
    "end": "226510"
  },
  {
    "text": "compromised cards and also sort of transactional histories can be leaked from different companies which can be",
    "start": "226510",
    "end": "232629"
  },
  {
    "text": "quite embarrassing dependent on what sites you signed up to but the key message is that data breaches are",
    "start": "232629",
    "end": "237669"
  },
  {
    "start": "236000",
    "end": "510000"
  },
  {
    "text": "inevitable they're not going to stop in it's not a case of if they're gonna happen it's when they're gonna happen so we shouldn't assume that you know just",
    "start": "237669",
    "end": "244720"
  },
  {
    "text": "cuz you've got great fancy firewalls that we're immune from data breaches because a data breach can happen from within so ID your company bounds or it",
    "start": "244720",
    "end": "251739"
  },
  {
    "text": "needs is a you know an upset or pissed off operations manager we've production level access to a sequel database to",
    "start": "251739",
    "end": "258099"
  },
  {
    "text": "start select starring data out into a spreadsheet there's been multiple cases where that's happened before",
    "start": "258099",
    "end": "264110"
  },
  {
    "text": "so we're not just focusing on perimeter security so we're not you know obviously having things like firewalls intrusion",
    "start": "264110",
    "end": "269389"
  },
  {
    "text": "detection systems are good and we should carry on doing that we shouldn't just try and rely on these to protect our company's borders so we want to sort",
    "start": "269389",
    "end": "277789"
  },
  {
    "text": "rely on encryption at Beaufort rest and in transit now most modern database systems have at",
    "start": "277789",
    "end": "283129"
  },
  {
    "text": "rest encryption when they're stored on the file system which is fantastic we should have that turned on if it's not",
    "start": "283129",
    "end": "288379"
  },
  {
    "text": "turned on already but as I said it doesn't stop anyone from going in with database access and just selecting data",
    "start": "288379",
    "end": "294680"
  },
  {
    "text": "out of a database into a spreadsheet it doesn't protect you from that so what we're looking at is more sort of row",
    "start": "294680",
    "end": "300530"
  },
  {
    "text": "level encryption that you can apply they can either do that yourself as a developer if you want to have control over that process or some databases have",
    "start": "300530",
    "end": "307969"
  },
  {
    "text": "provisions for doing that as well but generally we want to be encrypting important data like personal information",
    "start": "307969",
    "end": "314990"
  },
  {
    "text": "anything that relates back to a person credit card dates or just anything that's deemed sensitive to your company",
    "start": "314990",
    "end": "321129"
  },
  {
    "text": "this is even more important now we have things like gdpr that came into effect last year because if you're holding",
    "start": "321129",
    "end": "329509"
  },
  {
    "text": "personal information for European citizen they actually own their data not the company and so they have the right",
    "start": "329509",
    "end": "334849"
  },
  {
    "text": "to have it amended they right to have it deleted and having their data breached",
    "start": "334849",
    "end": "339889"
  },
  {
    "text": "or stolen by a criminal is just going to land your company in a lot of trouble so",
    "start": "339889",
    "end": "346729"
  },
  {
    "text": "what I'm doing very very quick cryptographic over you so this talk isn't actually about cryptography",
    "start": "346729",
    "end": "351860"
  },
  {
    "text": "algorithms themselves so I've got other talk soft on friend EC which you can search for on that but I want to very",
    "start": "351860",
    "end": "357860"
  },
  {
    "text": "quick overview so cryptography is broadly splitting to split into four categories so we've got confidentiality",
    "start": "357860",
    "end": "364879"
  },
  {
    "text": "which is what we all commonly refer to as encryption you know making something secret someone can't read it we have",
    "start": "364879",
    "end": "370969"
  },
  {
    "text": "integrity which is things like hashing so things like char 256 hash in and",
    "start": "370969",
    "end": "376990"
  },
  {
    "text": "that's how we can ensure that if we send some data to someone they can calculate an equivalent hash on their side compare",
    "start": "376990",
    "end": "383599"
  },
  {
    "text": "it to a hash tip sent to them then they know that their data hasn't been tampered with or mess with in transit",
    "start": "383599",
    "end": "388990"
  },
  {
    "text": "I've got authentication so things are hash message authentication codes which are very similar to normal hashes but",
    "start": "388990",
    "end": "395089"
  },
  {
    "text": "you also pass in a key as well to the hash so that means that our recipients on the other end of receiving a message if I",
    "start": "395089",
    "end": "401680"
  },
  {
    "text": "want to generate the same hash they have to have the encryption key of course getting that key between two different",
    "start": "401680",
    "end": "408190"
  },
  {
    "text": "people is quite difficult that's kind of one of the things we're going to look at and focus on today now finally we have non-repudiation and",
    "start": "408190",
    "end": "415300"
  },
  {
    "text": "which is what were you digital signatures for so I've been able to prove that you are the originator of a",
    "start": "415300",
    "end": "420820"
  },
  {
    "text": "source of data it's a bit like signing a contract you can't then go and refute that you sign the contract or",
    "start": "420820",
    "end": "426430"
  },
  {
    "text": "centerpiece of date so okay so when it",
    "start": "426430",
    "end": "433330"
  },
  {
    "text": "comes to encryption Germany we have two different areas we've got symmetric and asymmetric encryption so symmetric",
    "start": "433330",
    "end": "440259"
  },
  {
    "text": "encryption things like AES DES and Triple DES and with symmetric encryption we use the same key to both encrypt and",
    "start": "440259",
    "end": "446139"
  },
  {
    "text": "decrypt that's why it's symmetric asymmetric encryption we use algorithms like RSA or elliptic curve and those are",
    "start": "446139",
    "end": "453550"
  },
  {
    "text": "based on public and private key and combinations so you generates a key pair",
    "start": "453550",
    "end": "458830"
  },
  {
    "text": "you keep your private key secret to yourself no one else can know it but the public key you can send to anyone to",
    "start": "458830",
    "end": "464889"
  },
  {
    "text": "someone so encryption data and send it to you they request your public key and clip the data with RSA for example send",
    "start": "464889",
    "end": "471220"
  },
  {
    "text": "it to you then you use your private key to decrypt that data so one of the",
    "start": "471220",
    "end": "476440"
  },
  {
    "text": "things we can be focusing on today is about how we can protect those private keys so symmetric algorithm generally",
    "start": "476440",
    "end": "482500"
  },
  {
    "text": "very fast and efficient and but sharing those keys is difficult and RSA as an",
    "start": "482500",
    "end": "488770"
  },
  {
    "text": "algorithm ghost is quite slow it's based on module arithmetic which is quite slow for computers to do but we do get this",
    "start": "488770",
    "end": "494590"
  },
  {
    "text": "split key and system which is quite handy if you're trying to use either",
    "start": "494590",
    "end": "500889"
  },
  {
    "text": "these in Nets than you typically use classes like AES crypto service-provider and RSA crypto service provider okay so",
    "start": "500889",
    "end": "510940"
  },
  {
    "start": "510000",
    "end": "660000"
  },
  {
    "text": "what different techniques can be used to manage keys so we'll start off with the worst which is just flat files on a file",
    "start": "510940",
    "end": "517659"
  },
  {
    "text": "system I'll put it on there because companies still do this off work for two very large multinational corporations",
    "start": "517659",
    "end": "523060"
  },
  {
    "text": "where when I've started digging into the deployment process for a piece of software you're going to a server on D",
    "start": "523060",
    "end": "528880"
  },
  {
    "text": "Drive has a folder called keys and there's two X files in their public and private key so that's very bad people can easily access",
    "start": "528880",
    "end": "536650"
  },
  {
    "text": "that and copy the keys and you don't anyone to get hold of your keys so we",
    "start": "536650",
    "end": "541960"
  },
  {
    "text": "also have things that certificate certificate have been around for a very long time they're very well known they're kind of a trusted way of storing",
    "start": "541960",
    "end": "547330"
  },
  {
    "text": "keys they allow you to identify who the certificates been issued to and from allows you to verify public keys we put",
    "start": "547330",
    "end": "554950"
  },
  {
    "text": "them directly onto servers in Turkey stores on the servers and they know they're robust and proven they've been",
    "start": "554950",
    "end": "560529"
  },
  {
    "text": "around for a long time generally they have minimal involvement from the end users so once I've been installed onto a",
    "start": "560529",
    "end": "566860"
  },
  {
    "text": "system continue to revoke and renew the certificate it's you know a fairly simple process we don't need any",
    "start": "566860",
    "end": "573279"
  },
  {
    "text": "additional hardware they're easy to manage and they're supported by just about every single system that's out",
    "start": "573279",
    "end": "578470"
  },
  {
    "text": "there but we can go better and that's to use something called a hardware security module as anyone never use an appliance",
    "start": "578470",
    "end": "586000"
  },
  {
    "text": "like this or has a company that has them so basically they're like a single new rackmount modules that you put into your",
    "start": "586000",
    "end": "591850"
  },
  {
    "text": "data center typically you need two of them because you want to replicate data between different sites each one can",
    "start": "591850",
    "end": "597370"
  },
  {
    "text": "goes down and they're tamper proof so if you try and break into the box either",
    "start": "597370",
    "end": "603160"
  },
  {
    "text": "physically or virtually then they're designed to shut down and arrays themselves they'll have temperature sensors in them so you can detect",
    "start": "603160",
    "end": "609520"
  },
  {
    "text": "temperature variance if you try to remove the lid and all of the chip to be covered in like a wire mesh and resin as",
    "start": "609520",
    "end": "616300"
  },
  {
    "text": "well as you can't directly access the chip so they're very good robust home systems you can also store certificates",
    "start": "616300",
    "end": "622330"
  },
  {
    "text": "with their private keys on them as well so generally but the problem is is traditionally they've been cost",
    "start": "622330",
    "end": "627550"
  },
  {
    "text": "prohibitive so some of these devices can cost you know 50 to 100 year hundreds to",
    "start": "627550",
    "end": "633730"
  },
  {
    "text": "buy which means I've only really been used by us or large pharmaceutical companies or banks or you know companies",
    "start": "633730",
    "end": "639880"
  },
  {
    "text": "with a lot of money so they've been kind of out of reach of a lot smaller companies but we have a Shiki volt cost",
    "start": "639880",
    "end": "646780"
  },
  {
    "text": "is no longer an issue which is fantastic so Microsoft has gone to the trouble of buying all of that hardware and putting",
    "start": "646780",
    "end": "651880"
  },
  {
    "text": "it in their data centers then they convince it to us for very different cost and some of the techniques we'll",
    "start": "651880",
    "end": "657910"
  },
  {
    "text": "look at today will help us get that cost down to virtually zero okay Sookie Volta is a system this this",
    "start": "657910",
    "end": "666230"
  },
  {
    "text": "is off the Microsoft website it safeguards cryptographic keys and other secrets used by cloud apps and services",
    "start": "666230",
    "end": "671330"
  },
  {
    "text": "and what they've done is they've brought lots of these devices it's the Fallas or",
    "start": "671330",
    "end": "676730"
  },
  {
    "text": "fails not quite sure how you pronounce it it's called the end shield connect so this is the hardware module they've",
    "start": "676730",
    "end": "682250"
  },
  {
    "text": "purchased I don't know how many they have but they probably got thousands of the things in different regional data centers they are",
    "start": "682250",
    "end": "691280"
  },
  {
    "text": "expensive so I went onto their websites try and find out the price and you have to get in touch with a sales rep so I",
    "start": "691280",
    "end": "696350"
  },
  {
    "text": "didn't bother carrying on at that point because I didn't want the the phone call",
    "start": "696350",
    "end": "701770"
  },
  {
    "text": "but the key vault works in two modes you've got software and hardware mode now depending on which mode you're using",
    "start": "701770",
    "end": "707510"
  },
  {
    "text": "the key volt in all of your keys will be stored directly in the hardware so you get hardware protection across both",
    "start": "707510",
    "end": "712970"
  },
  {
    "text": "modes if you configure it to set up in software mode then the encryption in the",
    "start": "712970",
    "end": "718550"
  },
  {
    "text": "encryption operations are performed on complete VMs in Asia but if you use",
    "start": "718550",
    "end": "723680"
  },
  {
    "text": "hardware modes and everything is performed in the hardware security module so general good practice is you",
    "start": "723680",
    "end": "728840"
  },
  {
    "text": "might use the software version in your dev and test environments for testing with and you might put the hardware",
    "start": "728840",
    "end": "734660"
  },
  {
    "text": "version or the hardware configuration of it in your production environment this is some extra cost associated to be",
    "start": "734660",
    "end": "739850"
  },
  {
    "text": "using that one so we look at some general examples of costs so for non key",
    "start": "739850",
    "end": "745550"
  },
  {
    "text": "based operations so if you want to store secrets in a key vault which I'll talk a",
    "start": "745550",
    "end": "750590"
  },
  {
    "text": "bit more about a little bit later but to do that it's going to cost you about three cents per ten thousand operations",
    "start": "750590",
    "end": "756650"
  },
  {
    "text": "across both of the standard and premium an excuse that you can set up",
    "start": "756650",
    "end": "762160"
  },
  {
    "text": "certificate operations will cost you about $3 Pro request and then 3 cents",
    "start": "762160",
    "end": "767180"
  },
  {
    "text": "per every 10,000 operations that you do against a vault so the costs aren't that high if you're doing key based",
    "start": "767180",
    "end": "773600"
  },
  {
    "text": "operations so if you're using 2048 bit RSA keys you're looking at 3 cents per",
    "start": "773600",
    "end": "779660"
  },
  {
    "text": "10,000 operations across both of skiers or if using the highest strength",
    "start": "779660",
    "end": "785080"
  },
  {
    "text": "3072 or 4096 bit Keys it's going to cost you 15 cents per 10,000 operations so",
    "start": "785080",
    "end": "791780"
  },
  {
    "text": "you have a choice over what what size key one to use and there is a imprecation if we're doing Hardware HSM",
    "start": "791780",
    "end": "801660"
  },
  {
    "text": "key operations so we doing everything directly in the hardware there is some extra costs so you're going to be",
    "start": "801660",
    "end": "808350"
  },
  {
    "text": "charged $1 per key and 3 cents per 10,000 operations or game for the stronger Keys it's going to start off at",
    "start": "808350",
    "end": "815369"
  },
  {
    "text": "five dollars per key and and there's a tiered pricing structure underneath that",
    "start": "815369",
    "end": "820519"
  },
  {
    "text": "but once you use the key volt and you create a key once the key goes into the vault or gets generating the vault it",
    "start": "820519",
    "end": "826529"
  },
  {
    "text": "never comes out together so you can never access the raw keys though there",
    "start": "826529",
    "end": "831809"
  },
  {
    "text": "is the ability on the portal to go in and do a backup of your keys but Microsoft will use one of their master keys to encrypt them for you so even",
    "start": "831809",
    "end": "838919"
  },
  {
    "text": "though you can get the keys out technically they'll be encrypted so you can't use them so if you need to do a backup you still have that ability but",
    "start": "838919",
    "end": "845609"
  },
  {
    "text": "it's a secure backup as you have everything in Asia the instructions",
    "start": "845609",
    "end": "851189"
  },
  {
    "text": "change constantly on how to set things up so I'll talk through the rough",
    "start": "851189",
    "end": "856470"
  },
  {
    "text": "process now but that is basically the place to go to get the latest documentation for how to set one of",
    "start": "856470",
    "end": "861959"
  },
  {
    "text": "these up because a few steps you have to go through but when in doubt always go back to the Microsoft documentation",
    "start": "861959",
    "end": "868049"
  },
  {
    "text": "because they they keep that generally up to date but the way you do it typically",
    "start": "868049",
    "end": "873119"
  },
  {
    "text": "is we've PowerShell and then you would create a resource group if you haven't got one set up already you create the",
    "start": "873119",
    "end": "879959"
  },
  {
    "text": "key volts specifying the resource group the region or if you want hardware or software configuration then that gives",
    "start": "879959",
    "end": "886859"
  },
  {
    "text": "you the ability to create keys read and write secrets and upload certificates so once you've created one of these it's",
    "start": "886859",
    "end": "893129"
  },
  {
    "text": "gonna look something like that in the National portal but as developers we",
    "start": "893129",
    "end": "899909"
  },
  {
    "text": "want to be able to program against the key volts I'm guessing it cases everyone is a developer are they yes so we want",
    "start": "899909",
    "end": "906779"
  },
  {
    "text": "to be one of us from code so to do that we first have to register an application in Azure ad it sounds worse than it is",
    "start": "906779",
    "end": "914399"
  },
  {
    "text": "but really what we're doing is we're registering an application that we want",
    "start": "914399",
    "end": "919589"
  },
  {
    "text": "to create and that gives us an app ID and a shared secret which is what we have to present to the client library",
    "start": "919589",
    "end": "924989"
  },
  {
    "text": "let's talk to key volts",
    "start": "924989",
    "end": "928220"
  },
  {
    "text": "so I mentioned secrets before let me going to do a sort of a more of a demo around secrets in a bit but the keys",
    "start": "930979",
    "end": "937469"
  },
  {
    "text": "that you store in the key votes are RSA keys and what we're going to use for doing RSA encryption but secrets are",
    "start": "937469",
    "end": "943319"
  },
  {
    "text": "blobs of text up to 25k in size that you can push into the key volts I have it securely stored so you don't manage the",
    "start": "943319",
    "end": "950249"
  },
  {
    "text": "keys for a secret Microsoft does that for you but if you want to put things like database connection strings or",
    "start": "950249",
    "end": "956639"
  },
  {
    "text": "database passwords API keys for foe party systems sort of things you think one's put any config files secrets are a",
    "start": "956639",
    "end": "962939"
  },
  {
    "text": "great place to store them it's kind of like a key value pair store but you might have with no sequel database",
    "start": "962939",
    "end": "968629"
  },
  {
    "text": "except it's stored on a hardware security module so I've got some code",
    "start": "968629",
    "end": "975419"
  },
  {
    "start": "973000",
    "end": "1006000"
  },
  {
    "text": "but I'm going to be going through in this demo and if you want to get hold of the code and have a play around with it",
    "start": "975419",
    "end": "980459"
  },
  {
    "text": "it's available at that address there I've leased under MIT so you can do what you want with it and if it breaks it's",
    "start": "980459",
    "end": "986069"
  },
  {
    "text": "not my fault that's the that's the caveat out the way and but when you want",
    "start": "986069",
    "end": "991559"
  },
  {
    "text": "to set up a project to use key vault is fairly simple so you need to install the Microsoft Azure dot key vault NuGet",
    "start": "991559",
    "end": "998669"
  },
  {
    "text": "package and that's got no standard compliance that's gonna work across dotnet core and dotnet framework so",
    "start": "998669",
    "end": "1007309"
  },
  {
    "start": "1006000",
    "end": "1187000"
  },
  {
    "text": "let's quickly go to a code that moment or just do a quick hello world just to make sure everything's working okay so",
    "start": "1007309",
    "end": "1015319"
  },
  {
    "text": "in the sample code to download I've got a folder here called simple encrypt and decrypt and I've got some code in here",
    "start": "1015319",
    "end": "1021649"
  },
  {
    "text": "don't don't worry about the file called fake key vault that's my insurance policy in case the Wi-Fi and goes down",
    "start": "1021649",
    "end": "1028249"
  },
  {
    "text": "so I've written a little abstraction which pretends to be the key vault just",
    "start": "1028249",
    "end": "1033619"
  },
  {
    "text": "so I can get through the demos if the Wi-Fi goes and I've had to do that on stage before when Wi-Fi is dropped and I've had to switch just to get to the",
    "start": "1033619",
    "end": "1039288"
  },
  {
    "text": "end of the demo but we should be okay this morning so we've got an interface",
    "start": "1039289",
    "end": "1045470"
  },
  {
    "text": "here where I've extracted some of the methods for the key vault so we can create keys we can delete keys we can",
    "start": "1045470",
    "end": "1051950"
  },
  {
    "text": "encrypt and decrypt using those keys we can save and retrieve secrets and in",
    "start": "1051950",
    "end": "1058070"
  },
  {
    "text": "this further demo we can do digital sign as well I've got some helper code here I",
    "start": "1058070",
    "end": "1064660"
  },
  {
    "text": "see you're not gonna do this in real life but just for the demo I've set an app up an application ID up for this",
    "start": "1064660",
    "end": "1071120"
  },
  {
    "text": "conference and I'll just put the app ID and client secrets in there that's the address of my key volt then I've just",
    "start": "1071120",
    "end": "1078860"
  },
  {
    "text": "got some code which just cools down to the client library so the codes fairly simple so if we look at what's actually",
    "start": "1078860",
    "end": "1086360"
  },
  {
    "text": "happening here so I want to create a key I'm calling it Stephen wants his key I",
    "start": "1086360",
    "end": "1091540"
  },
  {
    "text": "call crate key async that will return a key ID so the key ID is just you're all",
    "start": "1091540",
    "end": "1097220"
  },
  {
    "text": "right to the key it's not the actual key itself then to encrypt I just passing my",
    "start": "1097220",
    "end": "1103340"
  },
  {
    "text": "key ID I pass in some dates that one to encrypt so in this case it's a string hello world have to convert it to a byte",
    "start": "1103340",
    "end": "1110030"
  },
  {
    "text": "array first because all these things just work on byte arrays I can then encrypt and decrypt and then I convert",
    "start": "1110030",
    "end": "1116570"
  },
  {
    "text": "the values back so I can read them so just quickly go through this make sure it works",
    "start": "1116570",
    "end": "1123039"
  },
  {
    "text": "okay so it's come back with a URI for Mikey that's just what we're going to",
    "start": "1131299",
    "end": "1136470"
  },
  {
    "text": "use to refer to our key we want to encrypt got our string and then run the",
    "start": "1136470",
    "end": "1145139"
  },
  {
    "text": "encryption process which gives me a byte array back with all of our encrypted data in it I can then decrypt it then",
    "start": "1145139",
    "end": "1154049"
  },
  {
    "text": "what I can do is I can just convert both of those to text so that's our encrypted",
    "start": "1154049",
    "end": "1159139"
  },
  {
    "text": "data it's encrypted with our essay on the hsm and it then comes back to us",
    "start": "1159139",
    "end": "1164940"
  },
  {
    "text": "encrypted form and then once i've decrypted it we get our string hello world back and then just for a good",
    "start": "1164940",
    "end": "1174299"
  },
  {
    "text": "housekeeping I'm just going to delete my key at the end of the demo there so to do basic encryption with RSA place all",
    "start": "1174299",
    "end": "1181740"
  },
  {
    "text": "you need to do is when it's a very straightforward to set up which is good",
    "start": "1181740",
    "end": "1186980"
  },
  {
    "start": "1187000",
    "end": "1433000"
  },
  {
    "text": "so now we've got the key vault working I want to sort of go through a few sort of patterns and practices just saw some",
    "start": "1188809",
    "end": "1195029"
  },
  {
    "text": "general ideas around using them these are things I found when I've been working with companies that have been useful to us so the first one is around",
    "start": "1195029",
    "end": "1205169"
  },
  {
    "text": "multiple environments so when you're configuring these two using your products or your projects coughing you",
    "start": "1205169",
    "end": "1212460"
  },
  {
    "text": "don't want to do is have a shared key vault that you use across all of your environments because your keys need to",
    "start": "1212460",
    "end": "1218490"
  },
  {
    "text": "be you know kept secret you're not going to on any other testing environments been able to decrypt",
    "start": "1218490",
    "end": "1224549"
  },
  {
    "text": "production data now know some companies out there still generate test data by",
    "start": "1224549",
    "end": "1231360"
  },
  {
    "text": "literally taking a cut of production and cocking it into testing environments before doing that that's not really gonna work to you in this case because",
    "start": "1231360",
    "end": "1237750"
  },
  {
    "text": "you don't want to be able to decrypt production data so really what you want to is e for something like this where",
    "start": "1237750",
    "end": "1244049"
  },
  {
    "text": "you have a separate key vault you can share across your testing environments we've completely separate keys I'd say",
    "start": "1244049",
    "end": "1249419"
  },
  {
    "text": "with your test days you just need to be mindful that you'll need to create some dummy data and encrypt it using that key",
    "start": "1249419",
    "end": "1255720"
  },
  {
    "text": "vault or if you script your environments then you might want to just go to a configuration like this where for every",
    "start": "1255720",
    "end": "1261029"
  },
  {
    "text": "environment the spin-up you can just create a new key vault and the app ID with AD but the key message",
    "start": "1261029",
    "end": "1268510"
  },
  {
    "text": "is never share your keys from production on your environment okay so",
    "start": "1268510",
    "end": "1274990"
  },
  {
    "text": "configuration is secrets when we've touched on this briefly already but secrets are max 25k proper text they're",
    "start": "1274990",
    "end": "1282640"
  },
  {
    "text": "stored in software but they're encrypted with the key on the hsm so Microsoft sort maintains a key value store behind",
    "start": "1282640",
    "end": "1288340"
  },
  {
    "text": "the scenes for you but they are encrypted using a set of master keys from Microsoft which were assigned to",
    "start": "1288340",
    "end": "1294850"
  },
  {
    "text": "you which are stored inside the HSM typically you're going to put connection strings in here API keys so I had to go",
    "start": "1294850",
    "end": "1303399"
  },
  {
    "text": "with a company to integrate with a credit reference agency not so long ago so all of the API keys to access that",
    "start": "1303399",
    "end": "1309130"
  },
  {
    "text": "system were stored away in the key vault for the different environments Ready's cache connection strings what",
    "start": "1309130",
    "end": "1315250"
  },
  {
    "text": "does anything that's confidential that you don't want a customer or anyone else that kind of a developer to be able to",
    "start": "1315250",
    "end": "1321399"
  },
  {
    "text": "see secrets can be versioned in the vault so if you write a secret with the",
    "start": "1321399",
    "end": "1326559"
  },
  {
    "text": "same name twice then it just creates a new version so you didn't have the ability to request previous versions of",
    "start": "1326559",
    "end": "1332730"
  },
  {
    "text": "Secrets if you so wish or you can just overwrite the existing version that's there it's up to you let me just show",
    "start": "1332730",
    "end": "1340510"
  },
  {
    "text": "you quickly how that works so I've got a",
    "start": "1340510",
    "end": "1345700"
  },
  {
    "text": "project called secrets all of the sample code is the same okay it's very easy to",
    "start": "1345700",
    "end": "1352000"
  },
  {
    "text": "do staggeringly easy to do so we just I'm gonna call my secrets Steven wants his secret and then we call set secrets",
    "start": "1352000",
    "end": "1360039"
  },
  {
    "text": "async passing the secret name so that's what owner story has and then I pass in",
    "start": "1360039",
    "end": "1365380"
  },
  {
    "text": "a secret here so mary had a little lamb' in this case must restored it we can",
    "start": "1365380",
    "end": "1370960"
  },
  {
    "text": "then go in and get that secret by a name and it will return the string for us so",
    "start": "1370960",
    "end": "1378100"
  },
  {
    "text": "just check that works okay",
    "start": "1378100",
    "end": "1381570"
  },
  {
    "text": "so if that's the ERI which is the name that's returned so if you want to store",
    "start": "1391400",
    "end": "1396740"
  },
  {
    "text": "your URI you can but in this case we're because we're giving it a secret name we",
    "start": "1396740",
    "end": "1402350"
  },
  {
    "text": "can then go and request that secret by name so here I'm retrieving it from the key vault and you can see it's come back",
    "start": "1402350",
    "end": "1410510"
  },
  {
    "text": "so it's done hop over to Asia it's encrypted and stored it in the key volts then I've requested a copy back there's",
    "start": "1410510",
    "end": "1417020"
  },
  {
    "text": "just a few lines of code which is great it's kind of a common theme with a lot",
    "start": "1417020",
    "end": "1423530"
  },
  {
    "text": "of the security stuff in dotnet some people sometimes find it a bit intimidating but actually when you dig into it some of this stuff actually",
    "start": "1423530",
    "end": "1428630"
  },
  {
    "text": "really easy to use which is nice so this",
    "start": "1428630",
    "end": "1436040"
  },
  {
    "start": "1433000",
    "end": "1744000"
  },
  {
    "text": "one gets a little bit more fun of me this one gets a little bit more involved and that's a local key wrapping so",
    "start": "1436040",
    "end": "1444500"
  },
  {
    "text": "encrypt encrypting data on the HSM is expensive not just well it's a small cost associated with it every ten",
    "start": "1444500",
    "end": "1450290"
  },
  {
    "text": "thousand operations but it's also latency in the network hop that you do over to Asia so if you're running a",
    "start": "1450290",
    "end": "1456980"
  },
  {
    "text": "higher bandwidth system or higher transactional system and you need to encrypt lots of data constantly for a request then having that latency can be",
    "start": "1456980",
    "end": "1464510"
  },
  {
    "text": "quite slow not necessarily what you want so we want to use a more of a hybrid solution so what this means is we're",
    "start": "1464510",
    "end": "1472580"
  },
  {
    "text": "gonna generate a local AES encryption key with ain't gonna encrypts that key",
    "start": "1472580",
    "end": "1478010"
  },
  {
    "text": "using the key volts and what that means is we can store that encrypted data that encrypted key in a database if we want",
    "start": "1478010",
    "end": "1484610"
  },
  {
    "text": "to so that we can use it and do local encryption decryption quite quickly but",
    "start": "1484610",
    "end": "1490160"
  },
  {
    "text": "because it's encrypted with RSA using the key volt if anyone should get hold of that key they need to be able to decrypt it with the key volt so the key",
    "start": "1490160",
    "end": "1497150"
  },
  {
    "text": "as it is from the database wouldn't be used to anyone so going to show you a a",
    "start": "1497150",
    "end": "1503530"
  },
  {
    "text": "bit of code of that work and before I take you through a use case where I used",
    "start": "1503530",
    "end": "1510070"
  },
  {
    "text": "so in this project here which is on the github repo I've got help a method",
    "start": "1510390",
    "end": "1517030"
  },
  {
    "text": "called AES encryption this just does a simple local encrypt and decrypt using",
    "start": "1517030",
    "end": "1522550"
  },
  {
    "text": "AES crypto service provider so you pass some data in to encrypt as a byte array",
    "start": "1522550",
    "end": "1528640"
  },
  {
    "text": "but give it a key and we give it an initialization vector which is where you need to pass in and to help the",
    "start": "1528640",
    "end": "1534550"
  },
  {
    "text": "encryption process on the first block the initialization vector is not secret but you do need to store it so recover",
    "start": "1534550",
    "end": "1541000"
  },
  {
    "text": "your data so it's just a helper methods that we've got there I've also got a",
    "start": "1541000",
    "end": "1546490"
  },
  {
    "text": "class here which will just generate a random number for me that uses our ng",
    "start": "1546490",
    "end": "1551530"
  },
  {
    "text": "crypto service provider which is sort of a better way of generating random numbers in net you don't want to use",
    "start": "1551530",
    "end": "1557110"
  },
  {
    "text": "system dot random because it's not random at all but this one here if I want to generate an AES key that's 32",
    "start": "1557110",
    "end": "1563440"
  },
  {
    "text": "bytes long or 256 bits and I just pass 32 into this method it's that shapes the",
    "start": "1563440",
    "end": "1569350"
  },
  {
    "text": "class creates a byte array of the correct size fills it with random data and then passes it back so that's how",
    "start": "1569350",
    "end": "1575080"
  },
  {
    "text": "we're going to create our local key so in the example here so we start off by",
    "start": "1575080",
    "end": "1582180"
  },
  {
    "text": "creating our key on the key volt each of these examples creates and deletes their keys at the end just to get them",
    "start": "1582180",
    "end": "1588220"
  },
  {
    "text": "self-contained so I'm going to create a new key and then going to generate an AES key which",
    "start": "1588220",
    "end": "1595120"
  },
  {
    "text": "are called local key and then I'm going to encrypt it using the key volt so if",
    "start": "1595120",
    "end": "1600250"
  },
  {
    "text": "we imagine at that point in your application you've gone and stored that in the database for later and then we come back and we want to do an",
    "start": "1600250",
    "end": "1606670"
  },
  {
    "text": "encryption and decryption operation so we do at that point is we decrypt that",
    "start": "1606670",
    "end": "1612250"
  },
  {
    "text": "key using the key volt so we need to recover the key first before we can use it we generate our initialization vector",
    "start": "1612250",
    "end": "1619180"
  },
  {
    "text": "and then I can use AES to encrypt and decrypt some data so I'm encrypting a string called mega top-secret stuff now",
    "start": "1619180",
    "end": "1625780"
  },
  {
    "text": "that's all happening locally there's no interaction with the key volts at that point and then I come in and delete the",
    "start": "1625780",
    "end": "1631600"
  },
  {
    "text": "key that should step through that make sure it works so again I'm creating monkey",
    "start": "1631600",
    "end": "1642940"
  },
  {
    "text": "you can see that there's that latency and when it's creating the key part of that's due to the bad Wi-Fi here but",
    "start": "1642940",
    "end": "1648040"
  },
  {
    "text": "there is a latency we're doing that I generate my photo to by its AAS key and",
    "start": "1648040",
    "end": "1654460"
  },
  {
    "text": "then I encrypt it so what we have in this byte array here is now an encrypted key that we can go and base64 encode and",
    "start": "1654460",
    "end": "1662380"
  },
  {
    "text": "store in a database if we wish so now we want to do something with that key so before we can use it we first have to",
    "start": "1662380",
    "end": "1668260"
  },
  {
    "text": "decrypt it so I'm going over to the key volt to decrypt the key which means we",
    "start": "1668260",
    "end": "1673660"
  },
  {
    "text": "have our recovered key in this variable here a generation initialization vector",
    "start": "1673660",
    "end": "1678700"
  },
  {
    "text": "and then go and encrypt my day to decrypt it as I wish I can just convert",
    "start": "1678700",
    "end": "1684880"
  },
  {
    "text": "some that text to string so that's our encrypted text stored in here and that's",
    "start": "1684880",
    "end": "1689980"
  },
  {
    "text": "the text when we've decrypted it now this is just one encryption operation that I'm doing but if you think about a",
    "start": "1689980",
    "end": "1695919"
  },
  {
    "text": "typical session in an application you might have someone come in to an API call and then there could be you know 10",
    "start": "1695919",
    "end": "1701679"
  },
  {
    "text": "20 30 40 decryption operations happening depending on what your systems doing so",
    "start": "1701679",
    "end": "1707440"
  },
  {
    "text": "in this instance we've only gone to the key vault once to recover the key which we're just storing for that session and",
    "start": "1707440",
    "end": "1712630"
  },
  {
    "text": "then we're doing as many encryption operations as we want without having to hop over to the key vault so that's good",
    "start": "1712630",
    "end": "1718870"
  },
  {
    "text": "because that means we're not using any of those 10,000 operations where we incur a cost we're just using one operation to recover the key so using",
    "start": "1718870",
    "end": "1725650"
  },
  {
    "text": "this technique it helps you significantly get your cost down so if you're running a very high transactional system like Amazon for example you can",
    "start": "1725650",
    "end": "1732910"
  },
  {
    "text": "imagine how those costs would creep up quite quickly",
    "start": "1732910",
    "end": "1737010"
  },
  {
    "text": "it's an example where I use this not so long ago the company I was working for that produces online claim assessment",
    "start": "1745340",
    "end": "1752160"
  },
  {
    "text": "and claim settlement systems so software is a service platform and the insurance",
    "start": "1752160",
    "end": "1757740"
  },
  {
    "text": "companies have a portal that I can log onto which is branded via their own branding and then their customers the",
    "start": "1757740",
    "end": "1764850"
  },
  {
    "text": "claimants also have their own portal they can log on to help settle their claim so Dee Audrey was we was trying to settle claims in days instead of weeks",
    "start": "1764850",
    "end": "1771990"
  },
  {
    "text": "that they sometimes took but as a software as a service system it's all hosted in Azure multiple companies all",
    "start": "1771990",
    "end": "1779130"
  },
  {
    "text": "sharing the same platform the same sets of databases and then we had a multi tenant system which vendor you know if",
    "start": "1779130",
    "end": "1786090"
  },
  {
    "text": "one insurance company logged in it's all in their branding if another insurance company logged in it'll out one of their",
    "start": "1786090",
    "end": "1791550"
  },
  {
    "text": "systems so when we on boarded an insurance company we had issue each",
    "start": "1791550",
    "end": "1798600"
  },
  {
    "text": "insurer their own master key in Azure key volts then using that key we would",
    "start": "1798600",
    "end": "1805170"
  },
  {
    "text": "encrypt local and AES keys which meant that for that insurance companies have",
    "start": "1805170",
    "end": "1811800"
  },
  {
    "text": "we've got tens one at the top there which might be not by using your names it might be a particular insurance",
    "start": "1811800",
    "end": "1817410"
  },
  {
    "text": "company we have a key ID for them and then we also store their encrypted a session key so if someone logs in for",
    "start": "1817410",
    "end": "1825570"
  },
  {
    "text": "that insurance company we know what their tenant is we can retrieve their key ID then we have access to their encrypted session key then what we do is",
    "start": "1825570",
    "end": "1833220"
  },
  {
    "text": "for each insurance company we would encrypt any personal information for their claimant so names address phone numbers date of birth gender any you",
    "start": "1833220",
    "end": "1840390"
  },
  {
    "text": "know those sorts of fields but this man is because each insurance company had their own key vault key and encrypted",
    "start": "1840390",
    "end": "1847860"
  },
  {
    "text": "session keys come back even though he's using one database with partition in their data by using encryption so if",
    "start": "1847860",
    "end": "1854220"
  },
  {
    "text": "anyone was to come and steal the data from your sequel server or cosmos which is what we was using the data would be",
    "start": "1854220",
    "end": "1860400"
  },
  {
    "text": "useless thinks it will be encrypted or the personal information would be encrypted so you can't tie it back to a person so it doesn't really have any",
    "start": "1860400",
    "end": "1865830"
  },
  {
    "text": "intrinsic value to anyone if for some reason somehow get the unfortunate situation where someone managed to say",
    "start": "1865830",
    "end": "1872190"
  },
  {
    "text": "get the encrypted session key for turn on one unless they can get access into your systems inside your company to",
    "start": "1872190",
    "end": "1878790"
  },
  {
    "text": "try and access your production keyboards they're not reverse decrypt that data they dare to somehow then you can have",
    "start": "1878790",
    "end": "1884910"
  },
  {
    "text": "the the encrypted data for turn on one and none of the others this is quite",
    "start": "1884910",
    "end": "1890310"
  },
  {
    "text": "useful technique this meant we could do local encryption a lot faster with AES",
    "start": "1890310",
    "end": "1895890"
  },
  {
    "text": "which is great we decrypt the key just once per session on the HSM and that",
    "start": "1895890",
    "end": "1902340"
  },
  {
    "text": "just helps you reduce Network hops and latency but it also makes it easy to rotate keys as well so a lot of the",
    "start": "1902340",
    "end": "1908970"
  },
  {
    "text": "insurance companies we worked we've had a security policy which they made us",
    "start": "1908970",
    "end": "1914520"
  },
  {
    "text": "enforce which when they had to change their master keys every 30 days which",
    "start": "1914520",
    "end": "1919650"
  },
  {
    "text": "was fine in this instance so what we'd have to do is we just create a new key in the key volts but decrypt the session",
    "start": "1919650",
    "end": "1926490"
  },
  {
    "text": "key with their old key encrypted with the new key and then just store the new encrypted session key we didn't have to",
    "start": "1926490",
    "end": "1932330"
  },
  {
    "text": "reinvesting data in the system because it was still using the original session key so the only thing we have to encrypt",
    "start": "1932330",
    "end": "1938580"
  },
  {
    "text": "again was the session key so made our key rotation policy very simple to implement",
    "start": "1938580",
    "end": "1945380"
  },
  {
    "start": "1945000",
    "end": "2012000"
  },
  {
    "text": "so another pattern then is key version which we just touched on so changing the keys over time is important it's kinda",
    "start": "1946940",
    "end": "1954120"
  },
  {
    "text": "like the digital equivalent of changing your arcs so this is the process we just",
    "start": "1954120",
    "end": "1959430"
  },
  {
    "text": "talked through then so we have key one in the key vault which encrypts our session key but then if we change to a",
    "start": "1959430",
    "end": "1967560"
  },
  {
    "text": "new key we only need to encrypt that session key I'm not the actual data itself but you can use the idea of",
    "start": "1967560",
    "end": "1974670"
  },
  {
    "text": "incremental keys as well so one company or website we wrote a PCI DSS card total",
    "start": "1974670",
    "end": "1980010"
  },
  {
    "text": "volts it's a secure vault where we store payment card details we had a policy in",
    "start": "1980010",
    "end": "1985020"
  },
  {
    "text": "there that for every 1000 cards that was entered into the system it generates a new encryption key so the first bunch of",
    "start": "1985020",
    "end": "1992250"
  },
  {
    "text": "cards have come in there'll be using key 1.0 and it will automatically generate a new key which meant that the next",
    "start": "1992250",
    "end": "1998640"
  },
  {
    "text": "thousand cards would use key version 1.1 for example which meant if ever any of",
    "start": "1998640",
    "end": "2004280"
  },
  {
    "text": "those keys ever got compromised it limits your exposure to a number of cards that could be decrypted",
    "start": "2004280",
    "end": "2011800"
  },
  {
    "start": "2012000",
    "end": "2350000"
  },
  {
    "text": "okay so the next pattern I want to quickly look at is around password protection so your passwords are great",
    "start": "2013100",
    "end": "2023570"
  },
  {
    "text": "aren't greats rather but they're here to stay it's one of the easiest ways this uses so authenticate on the system",
    "start": "2023570",
    "end": "2031640"
  },
  {
    "text": "naturally we don't want to be doing plaintext passwords hopefully none of that goes on anymore you know some old systems out there to",
    "start": "2031640",
    "end": "2037440"
  },
  {
    "text": "still do this but they're bad the next best thing is hashing passwords like a",
    "start": "2037440",
    "end": "2043560"
  },
  {
    "text": "sha-256 hash which is okay but still not great because they're susceptible to",
    "start": "2043560",
    "end": "2048570"
  },
  {
    "text": "brute-force attacks or rainbow table attacks dictionary attacks myth tools",
    "start": "2048570",
    "end": "2054000"
  },
  {
    "text": "our hash cap that can do you know tens of billions of password hashes a second it makes hashing passwords quite",
    "start": "2054000",
    "end": "2060898"
  },
  {
    "text": "vulnerable an example of ways you say like showing business sponsors just to",
    "start": "2060899",
    "end": "2067320"
  },
  {
    "text": "scare them about their password policies is this tool here called crack station net which allows you to paste in a",
    "start": "2067320",
    "end": "2074280"
  },
  {
    "text": "password into a capture and it will go and crack that password for you against a massive database of our hash passwords",
    "start": "2074280",
    "end": "2081770"
  },
  {
    "text": "that's quite a fun little tool to scare business sponsors with the next best",
    "start": "2081770",
    "end": "2087510"
  },
  {
    "text": "solution is a salted hash of a password this is where you generate some entropy that you append on to the password",
    "start": "2087510",
    "end": "2093030"
  },
  {
    "text": "before you hash it you know that could be like a first two by random number so",
    "start": "2093030",
    "end": "2099180"
  },
  {
    "text": "this is much better you know a password that's hash with a salt these days you",
    "start": "2099180",
    "end": "2104400"
  },
  {
    "text": "know it's probably going to be very hard to impossible to crack at the moment but if I - 10 years time who knows what GPU",
    "start": "2104400",
    "end": "2110880"
  },
  {
    "text": "processing performance is going to be like so you don't know how long those passwords gonna be safe for because",
    "start": "2110880",
    "end": "2116670"
  },
  {
    "text": "Moore's law is still is still increasing so the next best technique and the one",
    "start": "2116670",
    "end": "2122760"
  },
  {
    "text": "that we favor is to use something like a password based key derivation function or something like bcrypt",
    "start": "2122760",
    "end": "2127980"
  },
  {
    "text": "which is an alternative the way this works is it's kind of similar to a hammer to assaulted hash so you generate",
    "start": "2127980",
    "end": "2133740"
  },
  {
    "text": "a salt you pass in your password you want a hash but you also give it a number of iterations parameter what this means",
    "start": "2133740",
    "end": "2140850"
  },
  {
    "text": "it's gonna repeatedly hash that password depends on ham need turned on what the numbers you pass in",
    "start": "2140850",
    "end": "2146500"
  },
  {
    "text": "there and the purpose of this is to our rhythmically slow down the hashing process so instead have been able to",
    "start": "2146500",
    "end": "2153340"
  },
  {
    "text": "test billions of passwords a second you could maybe test 100 or 10 depending on what value you pass him in dotnet and",
    "start": "2153340",
    "end": "2162070"
  },
  {
    "text": "dotnet call this is quite simple to do there's a class called RFC 289 8 derive bytes it's a nice piece",
    "start": "2162070",
    "end": "2168550"
  },
  {
    "text": "of API naming them if you're familiar and a fan of RFC specs and then of",
    "start": "2168550",
    "end": "2174640"
  },
  {
    "text": "course that makes complete sense but for most people it's just a weird name really it's just a hashing function and",
    "start": "2174640",
    "end": "2180610"
  },
  {
    "text": "under the covers is using sha-1 to do the hashing so we pass in a byte array",
    "start": "2180610",
    "end": "2187450"
  },
  {
    "text": "which is our password we're passing a byte array which is our salt we're passing the iteration value and we then",
    "start": "2187450",
    "end": "2193180"
  },
  {
    "text": "request but it does the hashing process we say get by its twenty because sha-1 produces a 20 by it hash and then that's",
    "start": "2193180",
    "end": "2201430"
  },
  {
    "text": "our hash password which we can then go and store so the number of iterations",
    "start": "2201430",
    "end": "2207970"
  },
  {
    "text": "has a direct effect on the amount of time it's going to take to hash a password so my workshop over the last",
    "start": "2207970",
    "end": "2214630"
  },
  {
    "text": "couple of days was experimenting with some different timings see how long they take but the higher the number the",
    "start": "2214630",
    "end": "2220240"
  },
  {
    "text": "longer is generally going to take so this then becomes an application design",
    "start": "2220240",
    "end": "2225400"
  },
  {
    "text": "decision that you need to have with your business sponsors so what's an acceptable amount of time for a user to",
    "start": "2225400",
    "end": "2230410"
  },
  {
    "text": "wait when they log on does anyone ever use the website when you log on it feels like you're waiting two or three seconds for anything to happen if you do notice",
    "start": "2230410",
    "end": "2238840"
  },
  {
    "text": "that minute they're probably using something like this behind the scenes to hash the passwords and they've obviously determined that three seconds is an okay",
    "start": "2238840",
    "end": "2245470"
  },
  {
    "text": "delay to wait so you think we're all good you know pick possible based key",
    "start": "2245470",
    "end": "2250900"
  },
  {
    "text": "derivation functions are a good recognised way of storing passwords but actually we can use two key hold just to give us a little bit of extra protection",
    "start": "2250900",
    "end": "2256930"
  },
  {
    "text": "should we need it and so you know this could be flat admin passwords for",
    "start": "2256930",
    "end": "2262030"
  },
  {
    "text": "example now the salt in a number of iterations value they're not secret values they're not keys are not meant to",
    "start": "2262030",
    "end": "2268540"
  },
  {
    "text": "be kept secret necessarily but why make it easy for someone who's trying to steal your data from your company why",
    "start": "2268540",
    "end": "2274840"
  },
  {
    "text": "not use local key wrapping just to encrypt the salt we then need to store in a database and",
    "start": "2274840",
    "end": "2279880"
  },
  {
    "text": "you know why I let them know what the number of iterations value is they need to know that number to then go and",
    "start": "2279880",
    "end": "2285819"
  },
  {
    "text": "decode the password so you could just store it as a secret in the key volt if you wanted to now as I said you know",
    "start": "2285819",
    "end": "2292299"
  },
  {
    "text": "they're not the secrecy or the the power of password-based key derivation functions isn't based on the secrecy of",
    "start": "2292299",
    "end": "2298630"
  },
  {
    "text": "the salt or the number of iterations but if you've got this tool available to you yeah we can just make it that little bit",
    "start": "2298630",
    "end": "2303910"
  },
  {
    "text": "harder systems I've worked on where we might have used this we weren't necessarily have used it for general",
    "start": "2303910",
    "end": "2309849"
  },
  {
    "text": "customers but for super users or admins on the systems we would add in this extra door no protection to accounts of",
    "start": "2309849",
    "end": "2316359"
  },
  {
    "text": "reduce or damage so what this gives us",
    "start": "2316359",
    "end": "2321880"
  },
  {
    "text": "in it means that an attacker can't even start trying to crack that password until they've decrypted the salt from",
    "start": "2321880",
    "end": "2329440"
  },
  {
    "text": "the key volt which they might be able to access and that they've retrieved the number of iterations parameter as a",
    "start": "2329440",
    "end": "2336099"
  },
  {
    "text": "secret because even if you recover the salt for some reason you still need to know what the number of iterations is to",
    "start": "2336099",
    "end": "2342549"
  },
  {
    "text": "be able to calculate the same hash so we just painted that a bit harder",
    "start": "2342549",
    "end": "2347700"
  },
  {
    "start": "2350000",
    "end": "2543000"
  },
  {
    "text": "so accord am i doing that",
    "start": "2352200",
    "end": "2357088"
  },
  {
    "text": "so in the password protection folder we have an example of this so I've got the",
    "start": "2357430",
    "end": "2364270"
  },
  {
    "text": "code for creating the hash password it's just the standard dotnet home call and",
    "start": "2364270",
    "end": "2374530"
  },
  {
    "text": "again I've got the random number generator that we used previously so",
    "start": "2374530",
    "end": "2383080"
  },
  {
    "text": "what I'm going to do in this example then so I've got a key name that I'm going to create so Stephen wants his key",
    "start": "2383080",
    "end": "2388180"
  },
  {
    "text": "again I'm gonna store my secret under the main pbkdf2 iterations you can call",
    "start": "2388180",
    "end": "2395530"
  },
  {
    "text": "it what you want so we create our key in the key volt we create our salt I'm creating a 32 by",
    "start": "2395530",
    "end": "2402130"
  },
  {
    "text": "salt in this instance I encrypt the salt with the key volt and I then store a",
    "start": "2402130",
    "end": "2409660"
  },
  {
    "text": "number of iterations in this case I'm just doing 20,000 when I install that in the keyhole so let's assume now that you",
    "start": "2409660",
    "end": "2418750"
  },
  {
    "text": "know users logging onto the system and we need to verify their password so first of all we need to decrypt that",
    "start": "2418750",
    "end": "2424540"
  },
  {
    "text": "salt using that key on the key volt we then need to return the number of",
    "start": "2424540",
    "end": "2430090"
  },
  {
    "text": "iterations parameter so that's gonna pull that 20,000 value back from the key volt then we've got the user's password",
    "start": "2430090",
    "end": "2436510"
  },
  {
    "text": "that I typed in so that is the most secure password in the world according to Troy not really and then we use our",
    "start": "2436510",
    "end": "2445230"
  },
  {
    "text": "password hashing function to pass the password in with the decrypted salt and the number of iterations let me get a",
    "start": "2445230",
    "end": "2452020"
  },
  {
    "text": "password back out or password hash back out the end so that's just debug that's",
    "start": "2452020",
    "end": "2460530"
  },
  {
    "text": "so we generate anarchy creating assault such as first two bytes",
    "start": "2464210",
    "end": "2471489"
  },
  {
    "text": "of random data we encrypt assaults with the key bolt so this is now encrypted",
    "start": "2471489",
    "end": "2477609"
  },
  {
    "text": "you could base 64 encode it and store it in your database we set the number of",
    "start": "2477609",
    "end": "2484779"
  },
  {
    "text": "iterations parameter or passaglia we store the number of iterations parameter in in the key vault as a secret and now",
    "start": "2484779",
    "end": "2493569"
  },
  {
    "text": "let's imagine we've come back in a different session we now want to verify the password so we decrypt the salt we",
    "start": "2493569",
    "end": "2498939"
  },
  {
    "text": "return the number of iterations you can see you return now have our password and",
    "start": "2498939",
    "end": "2504789"
  },
  {
    "text": "then we can Demick in hash it",
    "start": "2504789",
    "end": "2509549"
  },
  {
    "text": "so that's our that's our password hash it's been hashed with that salt and the number of iterations which we first",
    "start": "2512740",
    "end": "2518530"
  },
  {
    "text": "protected with the key vote so as I said you may not want to do this for every",
    "start": "2518530",
    "end": "2523930"
  },
  {
    "text": "single user or you might do it's up to you but you you have got that latency of requesting while decrypting the salt and",
    "start": "2523930",
    "end": "2530349"
  },
  {
    "text": "retrieving the secret so you say you might decide to only use this first specific users that's kind of up to the",
    "start": "2530349",
    "end": "2538510"
  },
  {
    "text": "system that you're developing",
    "start": "2538510",
    "end": "2541500"
  },
  {
    "start": "2543000",
    "end": "2877000"
  },
  {
    "text": "okay so the final thing that we can do with the key volts which is quite useful",
    "start": "2545040",
    "end": "2550800"
  },
  {
    "text": "to us as developers is to create digital signatures so digital signatures satisfy",
    "start": "2550800",
    "end": "2557400"
  },
  {
    "text": "the non-repudiation pillar of cryptography which means that if we digitally sign something and send it to",
    "start": "2557400",
    "end": "2563910"
  },
  {
    "text": "someone the signing process actually uses your own private key to sign the data whereas",
    "start": "2563910",
    "end": "2569730"
  },
  {
    "text": "we've RSA you encrypt if your recipients public key and then they use their private key to decrypt digital things is",
    "start": "2569730",
    "end": "2576150"
  },
  {
    "text": "if you ever way around so you as the sender would use your private key to create the signature then a recipient",
    "start": "2576150",
    "end": "2582270"
  },
  {
    "text": "would use your public key to verify that signature and what that gives them is the kind of the warm fuzzy feeling that",
    "start": "2582270",
    "end": "2590970"
  },
  {
    "text": "they they know that that piece of data was come from you and not someone else it's a way of guaranteeing these come from someone so definition into a",
    "start": "2590970",
    "end": "2599280"
  },
  {
    "text": "digital signature is a mathematical technique used to validate the authenticity and integrity of a message",
    "start": "2599280",
    "end": "2604710"
  },
  {
    "text": "software or digital document so there's",
    "start": "2604710",
    "end": "2610380"
  },
  {
    "text": "kind of three operations we need here so we need the key generation which we already got the key bolt which is good we need a signing method and we need a",
    "start": "2610380",
    "end": "2617940"
  },
  {
    "text": "way of verifying the signature so they're the two operations we need typically with a digital signature you",
    "start": "2617940",
    "end": "2624660"
  },
  {
    "text": "don't create the signature on the actual data itself so if it was a PDF for example you is creating a signature for you don't do it directly on that",
    "start": "2624660",
    "end": "2630720"
  },
  {
    "text": "document you create a hash of that document first and then you sign the",
    "start": "2630720",
    "end": "2635850"
  },
  {
    "text": "hash of that document the reason for that is we've RSA there's a limitation on the amount of data you can encrypt in",
    "start": "2635850",
    "end": "2642930"
  },
  {
    "text": "one go based on the key size that's one of the limitations of RSA and digital",
    "start": "2642930",
    "end": "2648300"
  },
  {
    "text": "signatures so to get around that you create a hash of the document first and then you sign the hash",
    "start": "2648300",
    "end": "2654890"
  },
  {
    "text": "so if imagine here we got Bob up here he's using his private key to create our",
    "start": "2655030",
    "end": "2660530"
  },
  {
    "text": "digital signature he sends it over the internet or the big intergalactic spider's web on there sends it to Alice",
    "start": "2660530",
    "end": "2666440"
  },
  {
    "text": "she effectively uses Bob's public key to verify the signature and that will",
    "start": "2666440",
    "end": "2672050"
  },
  {
    "text": "return true or false placement that signature is correct for the hash of that document if we was doing this",
    "start": "2672050",
    "end": "2679400"
  },
  {
    "text": "without the key volt these are the two classes that you'd use in dotnet to help you so RSA pkcs1 signature formatter and",
    "start": "2679400",
    "end": "2686740"
  },
  {
    "text": "RSA pkcs1 signature D formatter gained a lovely piece of API class",
    "start": "2686740",
    "end": "2692780"
  },
  {
    "text": "naming from Microsoft because we're using a magic key vault we don't",
    "start": "2692780",
    "end": "2698330"
  },
  {
    "text": "actually need to use those classes we can just use the key vault itself and as",
    "start": "2698330",
    "end": "2706820"
  },
  {
    "text": "before I've got a demo for that",
    "start": "2706820",
    "end": "2710050"
  },
  {
    "text": "so in the digital signature folder here it's got a simple helper method for",
    "start": "2713980",
    "end": "2720579"
  },
  {
    "text": "creating a sha-256 hash so again I'm",
    "start": "2720579",
    "end": "2726970"
  },
  {
    "text": "creating a key on the key volt because each of these applications is self-contained I have a document which I",
    "start": "2726970",
    "end": "2733359"
  },
  {
    "text": "want to sign it could be a file that you've loaded up it needs to be loaded up as a byte array so first of all I",
    "start": "2733359",
    "end": "2742329"
  },
  {
    "text": "create a char 256 hash of that documents which I call the document digest I then",
    "start": "2742329",
    "end": "2748750"
  },
  {
    "text": "called key volt or volt sign give it the key ID which links to the key pair on",
    "start": "2748750",
    "end": "2755230"
  },
  {
    "text": "the key volt and I give it that hash and then I'll get a signature back here then",
    "start": "2755230",
    "end": "2761560"
  },
  {
    "text": "if I want to verify that that so so say we've stored that signature somewhere if we later on to verify it we call verify",
    "start": "2761560",
    "end": "2769170"
  },
  {
    "text": "again passing the key ID we passing the hash of the document and that signature and it will return true or false",
    "start": "2769170",
    "end": "2775810"
  },
  {
    "text": "if they are valid",
    "start": "2775810",
    "end": "2778680"
  },
  {
    "text": "okay so Christ our key create a document create the hash of the",
    "start": "2785839",
    "end": "2792009"
  },
  {
    "text": "documents write the signature now if I",
    "start": "2792009",
    "end": "2798489"
  },
  {
    "text": "verify it now we expect it to return true because we've literally just created the signature so that returns",
    "start": "2798489",
    "end": "2804519"
  },
  {
    "text": "true so that's good now if I rerun it",
    "start": "2804519",
    "end": "2813029"
  },
  {
    "text": "so we created the signature but let's go in and say mess with the document digest",
    "start": "2824990",
    "end": "2830940"
  },
  {
    "text": "so we're gonna imagine we've sent some data to someone they've recalculated the hash and against you know compared to",
    "start": "2830940",
    "end": "2840150"
  },
  {
    "text": "the hash that we've sent them but this time let's just put a different value in",
    "start": "2840150",
    "end": "2846900"
  },
  {
    "text": "there this time and they create the hash of the day so that we just sent them we're gonna pass that in with the",
    "start": "2846900",
    "end": "2853320"
  },
  {
    "text": "signature and it should return false this time because that hash doesn't match the signature or doesn't",
    "start": "2853320",
    "end": "2858600"
  },
  {
    "text": "correspond with that signature so that returns false so that's called up to the key volt and that's done that all with",
    "start": "2858600",
    "end": "2865170"
  },
  {
    "text": "inside the key volt itself which is quite handy",
    "start": "2865170",
    "end": "2870590"
  },
  {
    "start": "2877000",
    "end": "3361000"
  },
  {
    "text": "okay so those are the main introductory points I wanted to talk about this",
    "start": "2880630",
    "end": "2885710"
  },
  {
    "text": "morning about key volt which brings us up to just about the right time so as a summary so theta breaches are inevitable",
    "start": "2885710",
    "end": "2893960"
  },
  {
    "text": "they're going to keep on happening and they've always going to get worse but really what we want to focus on as developers is that number they're the",
    "start": "2893960",
    "end": "2900470"
  },
  {
    "text": "four percent of beta breaches of a class or secure breaches really we want that number to be higher so if our data is",
    "start": "2900470",
    "end": "2906680"
  },
  {
    "text": "stolen from our beta sensors or from Azure we want to be confident though people can't recover and if he encrypted",
    "start": "2906680",
    "end": "2912590"
  },
  {
    "text": "information that's in there so we want that ASIS to be useless as I said",
    "start": "2912590",
    "end": "2919160"
  },
  {
    "text": "they're inevitable it's a case of not if is when we get data breached so no company is immune from it as we've",
    "start": "2919160",
    "end": "2925160"
  },
  {
    "text": "seen from a lot of the high profile breaches that have happened over the last few years but to help us with this",
    "start": "2925160",
    "end": "2932360"
  },
  {
    "text": "in the encryption process we need to manage our keys so for this obviously we've looked to a Jacke volts which is a",
    "start": "2932360",
    "end": "2937880"
  },
  {
    "text": "nice abstraction the Microsoft provided across a series of HSM hardware now if",
    "start": "2937880",
    "end": "2944450"
  },
  {
    "text": "you're using another cloud vendor and they have a similar style of key volts the principles we've looked at today",
    "start": "2944450",
    "end": "2950690"
  },
  {
    "text": "gonna be pretty much the same across all of them so if you end up using whatever Amazon's equivalences or Google clouds",
    "start": "2950690",
    "end": "2957470"
  },
  {
    "text": "equivalents principles are gonna be roughly the same and kind of the techniques and the same just off see the API will be a bit different for",
    "start": "2957470",
    "end": "2965810"
  },
  {
    "text": "Microsoft space there's on the dn shield connect hardware again a very expensive",
    "start": "2965810",
    "end": "2970960"
  },
  {
    "text": "high-end device which used to be bought by banks and very large companies but",
    "start": "2970960",
    "end": "2977600"
  },
  {
    "text": "now Microsoft has provided that for us for a nice small fee coating against it",
    "start": "2977600",
    "end": "2984260"
  },
  {
    "text": "is easy at what setting one up is phased straight forward it's a few PowerShell commands and then a little bit of",
    "start": "2984260",
    "end": "2990140"
  },
  {
    "text": "configuration in Azure ad again that's the best place to go for the obsolete instructions because they do keep",
    "start": "2990140",
    "end": "2996200"
  },
  {
    "text": "changing things the azure ad user interface is roughly changing as well",
    "start": "2996200",
    "end": "3002920"
  },
  {
    "text": "which is annoying so I've just written a book on how to do all this and now the user interface is gonna be different when the book comes out only slightly",
    "start": "3002920",
    "end": "3009580"
  },
  {
    "text": "different but annoying them the less so we've looked at six broad patterns to",
    "start": "3009580",
    "end": "3017200"
  },
  {
    "text": "help get us started so we wants to talk about environments we should use different key volts for different environments if we can never",
    "start": "3017200",
    "end": "3024250"
  },
  {
    "text": "use your or share your production key volts with your testing environments because that's just why would you do",
    "start": "3024250",
    "end": "3030160"
  },
  {
    "text": "that and storing secrets is really useful",
    "start": "3030160",
    "end": "3035620"
  },
  {
    "text": "because it allows us to store confidential configuration items for our systems so API keys password connection",
    "start": "3035620",
    "end": "3041050"
  },
  {
    "text": "strings and the like we looked at local key wrapping which means we can reduce",
    "start": "3041050",
    "end": "3046480"
  },
  {
    "text": "the cost overhead of using the key volt both in terms of latency and cost as",
    "start": "3046480",
    "end": "3051580"
  },
  {
    "text": "well so if we just use local key wrapping really needs to decrypt a key say once per session and then we can do",
    "start": "3051580",
    "end": "3058450"
  },
  {
    "text": "local encryption as often as we want where I incur in that speed penalty and the cost penalty as well even though",
    "start": "3058450",
    "end": "3065860"
  },
  {
    "text": "there any charging roughly 3 cents per 10,000 operations they can soon add up if it's a high high volume system",
    "start": "3065860",
    "end": "3073170"
  },
  {
    "text": "they've got to mention you up ones key versioning is important and saying you",
    "start": "3074520",
    "end": "3080950"
  },
  {
    "text": "really want to be doing but again using the local key wrapping technique if you",
    "start": "3080950",
    "end": "3086590"
  },
  {
    "text": "are versioning keys and even you need to change your key over time if you use the",
    "start": "3086590",
    "end": "3091780"
  },
  {
    "text": "key wrapping technique then you only need to re-encrypt the local key that you're storing not all of your data so that makes it much",
    "start": "3091780",
    "end": "3098530"
  },
  {
    "text": "easier to do key rotations and less dangerous password protection as well",
    "start": "3098530",
    "end": "3104230"
  },
  {
    "text": "it's saying that we can use to help us if we if we wish ideally we using a password-based key derivation function",
    "start": "3104230",
    "end": "3109840"
  },
  {
    "text": "for doing our password hashing but to do that we need to store the salt and the",
    "start": "3109840",
    "end": "3116620"
  },
  {
    "text": "number of iterations somewhere because you need to have both of those values to recalculate the same password hash now",
    "start": "3116620",
    "end": "3122200"
  },
  {
    "text": "as I said the salt and the number of iterations aren't designed to be secret the strength of the past web-based key",
    "start": "3122200",
    "end": "3127900"
  },
  {
    "text": "derivation function isn't dependent on the secrecy of the salt but you know why",
    "start": "3127900",
    "end": "3133570"
  },
  {
    "text": "make it hard if we've got this system where we can encrypt the sole to and store the number of iterations value",
    "start": "3133570",
    "end": "3139450"
  },
  {
    "text": "away somewhere then there might be saying that you could choose to use it so it's a pattern that I've seen use quite a few times",
    "start": "3139450",
    "end": "3145710"
  },
  {
    "text": "and companies then finally we've got the ability to create and verify digital",
    "start": "3145710",
    "end": "3150960"
  },
  {
    "text": "signatures as you saw that's a very simple code demo to do that so all of",
    "start": "3150960",
    "end": "3157230"
  },
  {
    "text": "the code the requirement stays on github about address there feel free to do what you want with it and just remember to",
    "start": "3157230",
    "end": "3164280"
  },
  {
    "text": "ignore the fake key volt class that's in there that's just my get-out-of-jail-free card if the Wi-Fi dies in doing a demo I've had to use it",
    "start": "3164280",
    "end": "3172020"
  },
  {
    "text": "more times than I like well got some",
    "start": "3172020",
    "end": "3177270"
  },
  {
    "text": "course is on Pluralsight around security and cryptography that you might find useful if she lost a subscriber so",
    "start": "3177270",
    "end": "3182460"
  },
  {
    "text": "practical cryptography and dotnet it talks about all the dotnet crypto",
    "start": "3182460",
    "end": "3187890"
  },
  {
    "text": "primitives how to use them and then how to combine them together to create hybrid encryption scenarios the code on",
    "start": "3187890",
    "end": "3195690"
  },
  {
    "text": "there that comes with the course is Britain's work with the.net framework but all of the code works just the same",
    "start": "3195690",
    "end": "3201900"
  },
  {
    "text": "on.net core you just see the project types were a bit different but that all works across dotnet core and dotnet",
    "start": "3201900",
    "end": "3208560"
  },
  {
    "text": "framework I've got a play-by-play core so I recorded with last Clint's which talks about some of the things that we",
    "start": "3208560",
    "end": "3214260"
  },
  {
    "text": "discussed today we've has your key volts",
    "start": "3214260",
    "end": "3218510"
  },
  {
    "text": "also saying that might be useful to security professionals is my course blockchain principles and practices it",
    "start": "3219920",
    "end": "3225960"
  },
  {
    "text": "it's more like a computer science level class it kind of deep dives into how block chains are built how the",
    "start": "3225960",
    "end": "3233040"
  },
  {
    "text": "algorithms work or different types of data structures and then through the course I build up a fully working blockchain in c-sharp just so that",
    "start": "3233040",
    "end": "3241020"
  },
  {
    "text": "people can understand the principles of what's going on so in your CEO turns around and says I want to blockchain if",
    "start": "3241020",
    "end": "3246300"
  },
  {
    "text": "you've seen this you have a good understanding of the underlying principles and I've got this book coming",
    "start": "3246300",
    "end": "3251970"
  },
  {
    "text": "out in April or there abouts from a Press Ganey talks about a lot of thee",
    "start": "3251970",
    "end": "3259619"
  },
  {
    "text": "and dotnet cryptography primitives how to use them all together in hybrid scenarios and how to configure a new ski",
    "start": "3259619",
    "end": "3266760"
  },
  {
    "text": "vault and use all the techniques today along with the hybrid encryption examples and earlier in the book so it's",
    "start": "3266760",
    "end": "3273089"
  },
  {
    "text": "kind of like a big long tutorial that takes your food to go into some quite clever and creative graphic protocols so",
    "start": "3273089",
    "end": "3278910"
  },
  {
    "text": "that's coming out in April if any of you are into running side businesses or have",
    "start": "3278910",
    "end": "3285450"
  },
  {
    "text": "little pet projects I also co-host a podcast called the site hospital success podcast it's not a technical podcast or",
    "start": "3285450",
    "end": "3291539"
  },
  {
    "text": "a security podcast it's just about running small businesses on the side and some of the challenges that can have and",
    "start": "3291539",
    "end": "3298500"
  },
  {
    "text": "me and my co-host talked about you know some of the issues we've faced with running businesses so might be use with",
    "start": "3298500",
    "end": "3303839"
  },
  {
    "text": "someone and apart from that I am pretty",
    "start": "3303839",
    "end": "3309329"
  },
  {
    "text": "much done so thank you very much for coming along I've lost my mouse cursor no where is it",
    "start": "3309329",
    "end": "3314960"
  },
  {
    "text": "I've got some short guides on Amazon as well but then I think you support anyone",
    "start": "3314960",
    "end": "3321750"
  },
  {
    "text": "but thank you and I hope you have a good NDC security thank you very much",
    "start": "3321750",
    "end": "3330319"
  },
  {
    "text": "so sherry has asked me to remind everyone's if you can vote using the cards as you go out to red green and",
    "start": "3330319",
    "end": "3336359"
  },
  {
    "text": "blue cards I'm a teacher pop into a box only the green cards were coughing the red and yellow cards are faulty so thank",
    "start": "3336359",
    "end": "3345359"
  },
  {
    "text": "you",
    "start": "3345359",
    "end": "3347480"
  }
]