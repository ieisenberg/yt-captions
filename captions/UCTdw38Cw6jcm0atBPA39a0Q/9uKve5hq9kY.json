[
  {
    "text": "well welcome everybody thank you for tuning my talk on a bicep and removing",
    "start": "5420",
    "end": "10980"
  },
  {
    "text": "that pain in the arm before I get started though can I get a quick shell of hands even from those just walking in",
    "start": "10980",
    "end": "16740"
  },
  {
    "text": "who's familiar or been using arm templates to deploy to Azure currently",
    "start": "16740",
    "end": "22619"
  },
  {
    "text": "most people are familiar good okay so",
    "start": "22619",
    "end": "28500"
  },
  {
    "text": "uh bites or arm templates themselves they're pretty uh pretty prevalent obviously a core component of deploying",
    "start": "28500",
    "end": "34380"
  },
  {
    "text": "to Azure they're quite effective obviously but they are",
    "start": "34380",
    "end": "39680"
  },
  {
    "text": "complex or can be complex particularly when you're going talking like nested templates and things like that there is",
    "start": "39680",
    "end": "45540"
  },
  {
    "text": "a bit of a cognitive load associated with them and they're not too modular",
    "start": "45540",
    "end": "50840"
  },
  {
    "text": "shall we say so if you want to break up a template yes you can do link templates not so easy",
    "start": "50840",
    "end": "56399"
  },
  {
    "text": "at the end of this talk I hope that you'll never have to use um templates again nor will you want to ever use Arm",
    "start": "56399",
    "end": "62760"
  },
  {
    "text": "templates again That's My Hope anyway my name is Paul gravich I'm a principal consultant at Telstra purple I've been",
    "start": "62760",
    "end": "69960"
  },
  {
    "text": "in the industry for a little over uh 30 years probably been using arm templates for maybe the last uh maybe seven or so",
    "start": "69960",
    "end": "76500"
  },
  {
    "text": "and bicep itself since about version 0.4 so I'm not actually I'm not sure how",
    "start": "76500",
    "end": "83580"
  },
  {
    "text": "long that is maybe a year or two um but as a consultant we we're going to",
    "start": "83580",
    "end": "89220"
  },
  {
    "text": "customers and there's usually it can be anything it can be they're using arm templates they could be using terraform",
    "start": "89220",
    "end": "94680"
  },
  {
    "text": "palumi any mix of the the those but predominantly it's it's arm templates a",
    "start": "94680",
    "end": "100020"
  },
  {
    "text": "lot of customers like to use the the cloud native stuff and it was a little while ago that I went into a customer that I'm still in with at the moment and",
    "start": "100020",
    "end": "106740"
  },
  {
    "text": "everything was armed templates uh and in this particular instance they were using a Azure API management",
    "start": "106740",
    "end": "114000"
  },
  {
    "text": "um template was kind of huge um and we started introducing uh bicep templates at a very early stage and we",
    "start": "114000",
    "end": "119880"
  },
  {
    "text": "haven't looked back since and I hope again I hope that that is what you will get away from this and you won't look back",
    "start": "119880",
    "end": "126000"
  },
  {
    "text": "so we're going to fly through it there's going to be three parts we're going to run through the basics just so everybody's familiar with it and again",
    "start": "126000",
    "end": "131700"
  },
  {
    "text": "I'm going to go through it fairly quickly just so I don't expect you to remember everything but because there's",
    "start": "131700",
    "end": "137340"
  },
  {
    "text": "so much to cram in I again I am going to fly through it and this will be available afterwards anyway so part one",
    "start": "137340",
    "end": "142739"
  },
  {
    "text": "of the basics part two we're going to go through some usage implementation and fun stuff and then part three is going",
    "start": "142739",
    "end": "147840"
  },
  {
    "text": "to be some what I think is some real time saving tips and and wrapping it up",
    "start": "147840",
    "end": "153780"
  },
  {
    "text": "so what it isn't though again is a tutorial there's simply too much for me to cover and I kind of have squeezed in",
    "start": "153780",
    "end": "158879"
  },
  {
    "text": "a lot anyway hence that there's going to be a bit of speed to it but it isn't going to be a tutorial I will cover a",
    "start": "158879",
    "end": "164280"
  },
  {
    "text": "lot but not everything there's things that are going to be missed out at the end of it you'll know how to create a bicep template and run with it but",
    "start": "164280",
    "end": "171120"
  },
  {
    "text": "there's still going to be a lot more that I will miss out on so firstly what is it it is what's",
    "start": "171120",
    "end": "177959"
  },
  {
    "text": "called a domain specific language which is just a new language they've invented that sits on top of arm it doesn't",
    "start": "177959",
    "end": "183959"
  },
  {
    "text": "replace them it's just it produces arm templates you don't actually lose",
    "start": "183959",
    "end": "189120"
  },
  {
    "text": "anything by going to bicep it's not an alternative to arm it is in fact an",
    "start": "189120",
    "end": "194159"
  },
  {
    "text": "augment to arm it's significantly simple and we'll see that a bit later on and",
    "start": "194159",
    "end": "200580"
  },
  {
    "text": "the tooling around it there's a lot of effort that's been put into it as well and again we'll see that in more detail",
    "start": "200580",
    "end": "207180"
  },
  {
    "text": "but basically a bicep template compiles down to an arm template and that gets",
    "start": "207180",
    "end": "212879"
  },
  {
    "text": "deployed to azure and it's as simple as that there is no um and in fact you can go backwards as",
    "start": "212879",
    "end": "219300"
  },
  {
    "text": "well you can go from arm template to to bicep template as well and we'll see that soon but essentially it's just",
    "start": "219300",
    "end": "224459"
  },
  {
    "text": "think of it if you're a C sharp Dev it compiles down to Intermediate Language similar for bicep uh down to arm",
    "start": "224459",
    "end": "230040"
  },
  {
    "text": "templates why bother though",
    "start": "230040",
    "end": "236060"
  },
  {
    "text": "I'm going to demonstrate that to you there was uh there has been some ongoing",
    "start": "237840",
    "end": "242940"
  },
  {
    "text": "talk about arm templates being quite quite complex and this was kind of the precursor to that in the team at",
    "start": "242940",
    "end": "249480"
  },
  {
    "text": "Microsoft wants to make things much easier for their customers they want customers to be successful when deploying to Azure and bicep is one of",
    "start": "249480",
    "end": "257160"
  },
  {
    "text": "the ways of doing that they did interview a whole bunch of uh customers MVPs around what might be the",
    "start": "257160",
    "end": "264900"
  },
  {
    "text": "best approach they talked about doing programmatic approaches declarative approaches again inventing this kind of",
    "start": "264900",
    "end": "271620"
  },
  {
    "text": "new language this domain specific language on top of it and that was really uh the popular choice they decided to go with that",
    "start": "271620",
    "end": "278100"
  },
  {
    "text": "it does have uh what's called sort of day Zero support for all Azure resources so if something new is in Azure",
    "start": "278100",
    "end": "285000"
  },
  {
    "text": "typically you can deploy it with an arm template it's exactly the same for bicep as well and that's by by Design if",
    "start": "285000",
    "end": "291780"
  },
  {
    "text": "you're familiar with terraform at all there's usually a bit of a lag when something new is introduced and they have to update a provider for terraform",
    "start": "291780",
    "end": "298199"
  },
  {
    "text": "to to support that properly that's not the case with bicep as soon as something's released in in Azure bicep",
    "start": "298199",
    "end": "304020"
  },
  {
    "text": "supports it as well because arm supports it and that's a key concept that we'll continue to work through",
    "start": "304020",
    "end": "310759"
  },
  {
    "text": "but why bother even creating it in the first place why not just invest more time in terraform or palumi or all the",
    "start": "310919",
    "end": "316440"
  },
  {
    "text": "stuff that's out there um they are when I say they Microsoft they are investing in terraform in",
    "start": "316440",
    "end": "322500"
  },
  {
    "text": "particular they do believe that that is a viable option Microsoft actually don't care as long as you're deploying to Azure you know the execs are in a",
    "start": "322500",
    "end": "328680"
  },
  {
    "text": "win-win situation um so terraform they still support in fact I think it was just recently they",
    "start": "328680",
    "end": "333840"
  },
  {
    "text": "uh Microsoft again released something called terrify which allows you to import resources into a terraform script",
    "start": "333840",
    "end": "341580"
  },
  {
    "text": "so if you don't have a terraform script you can import it from from Azure and it'll create it all for you and that was",
    "start": "341580",
    "end": "346740"
  },
  {
    "text": "that was by Microsoft so they are heavily investing in terraform as well they'd love you to use it but if not and",
    "start": "346740",
    "end": "352020"
  },
  {
    "text": "you're using arm templates biceps a fantastic alternative as well and because again arm templates can be quite",
    "start": "352020",
    "end": "358500"
  },
  {
    "text": "complex biceps are great way not only gets started but to continue to make your templating more productive easy to",
    "start": "358500",
    "end": "365039"
  },
  {
    "text": "understand and reliable what do they just improve arm templates at the outset well",
    "start": "365039",
    "end": "371100"
  },
  {
    "text": "they just they work very very well they're extremely flexible but that flexibility comes with complexity and so",
    "start": "371100",
    "end": "377580"
  },
  {
    "text": "this just making arm templates is better their answer to that is bicep",
    "start": "377580",
    "end": "383060"
  },
  {
    "text": "yes it's not at version 1.0 and that's uh historically been a concern for anybody adopting Microsoft Technology it",
    "start": "383280",
    "end": "391380"
  },
  {
    "text": "was deemed production ready as it version 0.3 and the reason that is is that",
    "start": "391380",
    "end": "397560"
  },
  {
    "text": "because it's been designed fairly flexibly in terms of the way you define resources if it doesn't support",
    "start": "397560",
    "end": "403139"
  },
  {
    "text": "something the team has made it such that you can still Define a resource that",
    "start": "403139",
    "end": "408539"
  },
  {
    "text": "doesn't conform to its known resources and it will output an armed template for you it won't stop you doing it it'll",
    "start": "408539",
    "end": "414240"
  },
  {
    "text": "still compile down to to arm but in terms of the support from the most popular resources at version 0.3 it was",
    "start": "414240",
    "end": "421380"
  },
  {
    "text": "quite good now it's at version 0.7 and it's significantly better or almost everything is supported there's still",
    "start": "421380",
    "end": "426780"
  },
  {
    "text": "some outliers there and they're still working on that but it doesn't stop you from doing anything at all you can still",
    "start": "426780",
    "end": "433080"
  },
  {
    "text": "deploy anything you want you're not losing anything by bicep while using bicep it'll it'll still create and",
    "start": "433080",
    "end": "438300"
  },
  {
    "text": "deploy arm templates for you it's still fully supported by micro Microsoft support plans",
    "start": "438300",
    "end": "444240"
  },
  {
    "text": "um so there's that and as well if you go to a lot of the Microsoft documentation you'll you'll see two options one for um",
    "start": "444240",
    "end": "449460"
  },
  {
    "text": "templates and Json and bicep templates side by side as well",
    "start": "449460",
    "end": "454940"
  },
  {
    "text": "um and again it's 100 parody with what can be achieved with arm templates and you'll hear me reiterate that because",
    "start": "455520",
    "end": "461699"
  },
  {
    "text": "it's true you don't actually lose anything there is no you're going to miss out on features or anything like that with bicep you're going to get it",
    "start": "461699",
    "end": "468000"
  },
  {
    "text": "all anyway uh just quickly uh it's just a tooling that you install locally it's pretty",
    "start": "468000",
    "end": "473639"
  },
  {
    "text": "easy um you download the package install it and Away you go there is some Powershell",
    "start": "473639",
    "end": "479819"
  },
  {
    "text": "commandlets that you can install with it too and they give you very powerful specific ways of running things and",
    "start": "479819",
    "end": "486419"
  },
  {
    "text": "running the options against bicep however um do you can also use it with the Azure",
    "start": "486419",
    "end": "493259"
  },
  {
    "text": "CLI so it's integrated with the Azure CLI if you do AZ bicep something and you",
    "start": "493259",
    "end": "498780"
  },
  {
    "text": "haven't installed bicep yet the Azure CLI will install it for you in a location predetermined",
    "start": "498780",
    "end": "504840"
  },
  {
    "text": "and then you can do AZ bicep command option just the same way you just do",
    "start": "504840",
    "end": "509879"
  },
  {
    "text": "bicep command option if you'd install it as a local tool",
    "start": "509879",
    "end": "515120"
  },
  {
    "text": "and that's my personal preference is to run it with uh within Azure CLI and that's how I'll be running all the demos",
    "start": "516360",
    "end": "522060"
  },
  {
    "text": "from this point on uh because I do like I use Azure CLI a lot I think it's very succinct when",
    "start": "522060",
    "end": "528000"
  },
  {
    "text": "deploying resources to Azure coupled with the bicep support I don't have to kind of exit out of azure CLI and as",
    "start": "528000",
    "end": "535140"
  },
  {
    "text": "we'll we'll see it also you can it'll tell you when it's out of date and upgrade it for you uh as well so it's",
    "start": "535140",
    "end": "540480"
  },
  {
    "text": "really handy there is a bicep extension for vs code which we'll also look at a bit later on",
    "start": "540480",
    "end": "546420"
  },
  {
    "text": "couple so installing with an Azure CLI installing a bicep code extension that's the way that I I prefer to work and I",
    "start": "546420",
    "end": "552240"
  },
  {
    "text": "think it's uh it's a really good way of working but and we'll see a bit more of that",
    "start": "552240",
    "end": "558300"
  },
  {
    "text": "that soon in terms of the template itself you can see a very basic template uh up there we've got the resource",
    "start": "558300",
    "end": "564540"
  },
  {
    "text": "keyword up front we've got a symbolic name which is something that you've referenced later on in the template should you need to and then we've got",
    "start": "564540",
    "end": "571200"
  },
  {
    "text": "the resource type which might be Microsoft dot compute virtual machines at API version and we've got some",
    "start": "571200",
    "end": "577980"
  },
  {
    "text": "properties which look very json-like but they're not really Json at the moment a",
    "start": "577980",
    "end": "583140"
  },
  {
    "text": "couple of the key things to call out here is that it's single apostrophes not double and there's no commas so yes it's",
    "start": "583140",
    "end": "589800"
  },
  {
    "text": "close to Jason but the team trigger you don't really need Commerce they're implied here so you don't have to do",
    "start": "589800",
    "end": "595560"
  },
  {
    "text": "that in bicep and as we'll see when we go about putting arm templates it kind of puts them in there for you",
    "start": "595560",
    "end": "601260"
  },
  {
    "text": "foreign your first bicep template here is just a storage account so I've got resource the",
    "start": "601260",
    "end": "607200"
  },
  {
    "text": "symbolic name then that symbolic name can be anything it could be you know my STG and we can see that the resource",
    "start": "607200",
    "end": "613380"
  },
  {
    "text": "type we've got microsoft.storage storage Accounts at the API version now equals",
    "start": "613380",
    "end": "619080"
  },
  {
    "text": "open the little brackets there name location kind skew very json-like but",
    "start": "619080",
    "end": "624360"
  },
  {
    "text": "again no no commas in there and single quotes pretty pretty basic stuff and fairly easy to see at this time you can",
    "start": "624360",
    "end": "631560"
  },
  {
    "text": "also see some comments in there as well so it fully supports all the regular type of commenting schemes",
    "start": "631560",
    "end": "638480"
  },
  {
    "text": "and just to show you how that sort of expands out and hopefully you can see that okay",
    "start": "638480",
    "end": "644040"
  },
  {
    "text": "um but the art they've got the bicep template on the left the arm template on the right",
    "start": "644040",
    "end": "649079"
  },
  {
    "text": "um and in fact because they're so bad to see I'm just going to jump straight in to the demo and show you what that looks",
    "start": "649079",
    "end": "657000"
  },
  {
    "text": "like so so there's that first template that you",
    "start": "657000",
    "end": "664380"
  },
  {
    "text": "saw there now what I'm going to do and hopefully you can see that okay",
    "start": "664380",
    "end": "670399"
  },
  {
    "text": "uh go to demo one so I'm going to say AZ bicep so I'm",
    "start": "671040",
    "end": "676800"
  },
  {
    "text": "going to use it within Azure CLI and call call our bicep and I've got a",
    "start": "676800",
    "end": "682920"
  },
  {
    "text": "as you can see here a main bicep file so go back here and I'm going to say",
    "start": "682920",
    "end": "688920"
  },
  {
    "text": "bicep build f Main and hit enter",
    "start": "688920",
    "end": "695519"
  },
  {
    "text": "if you have a look over here it should produce a file soon you can see the main Json pop up there",
    "start": "695519",
    "end": "702420"
  },
  {
    "text": "and this is the bus uh the arm template that It produced and you can see it's got the type there API version uh name",
    "start": "702420",
    "end": "710459"
  },
  {
    "text": "location kind it's it's sped out a regular Json blob it's got a bit of metadata there uh that bicep has",
    "start": "710459",
    "end": "717180"
  },
  {
    "text": "produced but it's just produced a regular arm template nothing too spectacular",
    "start": "717180",
    "end": "722279"
  },
  {
    "text": "obviously he's put all the commas in like it needs to do for proper Json um but going back here this is how it's",
    "start": "722279",
    "end": "728760"
  },
  {
    "text": "picked apart the type and the API version",
    "start": "728760",
    "end": "734040"
  },
  {
    "text": "and worked it in as separate Fields down here now what I've also got is a little",
    "start": "734040",
    "end": "740279"
  },
  {
    "text": "script here that's going to do the same thing",
    "start": "740279",
    "end": "743540"
  },
  {
    "text": "cleanup but then it's going to rename the arm template to main.2 Json and then",
    "start": "745920",
    "end": "751320"
  },
  {
    "text": "it's going to decompile the arm template back into a bicep file so that we can",
    "start": "751320",
    "end": "756600"
  },
  {
    "text": "have a look at it but call it a different name if that makes sense so it's going to create copy that main Json",
    "start": "756600",
    "end": "763139"
  },
  {
    "text": "to main2.json and then decompile main two Json so that we got mean to bicep",
    "start": "763139",
    "end": "768899"
  },
  {
    "text": "and we can have a look at it so running that little bad boy",
    "start": "768899",
    "end": "774620"
  },
  {
    "text": "and we should see that pop up here soon there you go before I",
    "start": "774839",
    "end": "781079"
  },
  {
    "text": "go to that you can see here as well that you're getting some linting errors uh",
    "start": "781079",
    "end": "786720"
  },
  {
    "text": "there uh I won't go into the details of the error but as it's doing the compile it's",
    "start": "786720",
    "end": "792120"
  },
  {
    "text": "warning you of things that you probably need to take into account we'll see that a bit more later on if you get all these",
    "start": "792120",
    "end": "797279"
  },
  {
    "text": "linting errors as part of the build and compile process that are quite valuable",
    "start": "797279",
    "end": "802680"
  },
  {
    "text": "uh it does say here that decompilation is the best effort process so while you can decompile arm into bicep and most of",
    "start": "802680",
    "end": "809519"
  },
  {
    "text": "the time it works pretty well there are times um where it may not work so well so it's kind of a a bit of a suck it and see",
    "start": "809519",
    "end": "815639"
  },
  {
    "text": "sometimes but having a look at main2.set this is the one that it",
    "start": "815639",
    "end": "822000"
  },
  {
    "text": "decompiled into so you can see it looks pretty same to this one here minus the the comments",
    "start": "822000",
    "end": "829320"
  },
  {
    "text": "the main point here is we've gone from bicep produced an arm template and decompiled that back into a bicep",
    "start": "829320",
    "end": "835320"
  },
  {
    "text": "template and it works pretty well",
    "start": "835320",
    "end": "839180"
  },
  {
    "text": "foreign",
    "start": "840839",
    "end": "843079"
  },
  {
    "text": "that was a quick demo with that in mind though one of the early quick tips that I will provide if you're using a cicd",
    "start": "847019",
    "end": "853680"
  },
  {
    "text": "system to deploy resources in in Azure um if you're you know you go off to a",
    "start": "853680",
    "end": "860160"
  },
  {
    "text": "branch you create a pull request pull that in as part of the quality Gates on that it is a good idea to do a bicep",
    "start": "860160",
    "end": "865800"
  },
  {
    "text": "build against your bicep file so it'll compile it down to an arm template if you've fat fingered something or you've",
    "start": "865800",
    "end": "872100"
  },
  {
    "text": "made a mistake it'll complain throw an error fail that bicep build process and so you can get pretty early feedback on",
    "start": "872100",
    "end": "878519"
  },
  {
    "text": "whether you've created a valid bicep template and subsequently an arm template so it's a nice thing to keep in",
    "start": "878519",
    "end": "884040"
  },
  {
    "text": "your your quality gates for your crcd process all right on to some of the the more",
    "start": "884040",
    "end": "890459"
  },
  {
    "text": "interesting stuff uh just quickly we'll go through the data types or let me call this up",
    "start": "890459",
    "end": "897620"
  },
  {
    "text": "I'm not going to spend a lot of time on this hopefully is that the font large enough for everybody there",
    "start": "900360",
    "end": "905639"
  },
  {
    "text": "sweet so um here we've got some parameters one of",
    "start": "905639",
    "end": "910740"
  },
  {
    "text": "an environment of type string it's default of type Dev its default value of Dev I should say",
    "start": "910740",
    "end": "916740"
  },
  {
    "text": "we've got a parameter that's some number of type integer uh default value of one",
    "start": "916740",
    "end": "921779"
  },
  {
    "text": "two three we've got another parameter of type and array and you can see it's surrounded by the",
    "start": "921779",
    "end": "928320"
  },
  {
    "text": "square brackets this and that are the elements you notice that it's separated um each element is on a new line there's",
    "start": "928320",
    "end": "933600"
  },
  {
    "text": "no commas in there that's the way you have to do a raise similarly here we've got VAR my array equals that one two",
    "start": "933600",
    "end": "941100"
  },
  {
    "text": "three a few more of the data types Boolean just true integer one string",
    "start": "941100",
    "end": "948899"
  },
  {
    "text": "obviously we've got an object here so that's a standard Json object again",
    "start": "948899",
    "end": "954360"
  },
  {
    "text": "you're not doing it uh kind of the standard Json way where you've got you know the key",
    "start": "954360",
    "end": "960839"
  },
  {
    "text": "and the value that's not the way you do it it'll be key",
    "start": "960839",
    "end": "966839"
  },
  {
    "text": "and value with the single quotes like that and that'll be expanded out into a proper Json object",
    "start": "966839",
    "end": "974399"
  },
  {
    "text": "so they're pretty much the data types that you've got to work with there are two more that are supported in",
    "start": "974399",
    "end": "979920"
  },
  {
    "text": "arm and they are secure object and secure string they're not declared explicitly as that they are done that",
    "start": "979920",
    "end": "987899"
  },
  {
    "text": "way in bicep using these decorators and you can see here of type object we're putting the secure decorator there and",
    "start": "987899",
    "end": "995220"
  },
  {
    "text": "for string we've got the secure decorator there now if I quickly",
    "start": "995220",
    "end": "1001399"
  },
  {
    "text": "go out of this",
    "start": "1001399",
    "end": "1004600"
  },
  {
    "text": "oop ah so I do AC bicep build what was it",
    "start": "1007639",
    "end": "1014060"
  },
  {
    "text": "called vars and we'll see what the arm template",
    "start": "1014060",
    "end": "1020420"
  },
  {
    "text": "representation representation of that is again you can see the linting errors there we've created a bunch of variables but we're not using them anywhere so",
    "start": "1020420",
    "end": "1026600"
  },
  {
    "text": "they're kind of useless um okay for the demo probably not good for your templates",
    "start": "1026600",
    "end": "1031640"
  },
  {
    "text": "if we have a look at the output arm template you can see we've got the environment of type string its default",
    "start": "1031640",
    "end": "1037640"
  },
  {
    "text": "value some number int default value some array etc etc and of course we've got",
    "start": "1037640",
    "end": "1044780"
  },
  {
    "text": "secure object and secure string here as well and the arrays to follow so",
    "start": "1044780",
    "end": "1050000"
  },
  {
    "text": "standard stuff you'd expect in an arm template it's just that this is a little",
    "start": "1050000",
    "end": "1055160"
  },
  {
    "text": "nicer to look at it's a little bit programmatic in in nature but it's still much easier to read at least in my",
    "start": "1055160",
    "end": "1060559"
  },
  {
    "text": "opinion anyway moving fairly quickly through that",
    "start": "1060559",
    "end": "1066940"
  },
  {
    "text": "ah operator so we'll look at some of the uh some of the operators involved with bicep again there's not gonna I'm not",
    "start": "1067160",
    "end": "1073100"
  },
  {
    "text": "going to cover all of them um they will see it will seem fairly self-explanatory but we'll just cover a few",
    "start": "1073100",
    "end": "1082539"
  },
  {
    "text": "so in terms of The Operators looking at the operators here we've got a few in string parameters that we've got some",
    "start": "1083000",
    "end": "1090200"
  },
  {
    "text": "object with some properties there now we're starting uh we're defining this capacity in gigabyte of 200",
    "start": "1090200",
    "end": "1096740"
  },
  {
    "text": "we've got another variable here and we're saying capacity in gigabyte times 1024 times 1024 times 1024 I could have",
    "start": "1096740",
    "end": "1103460"
  },
  {
    "text": "done it a different way but you'll see what I the reason I did that in in a moment but still that's pretty easy to",
    "start": "1103460",
    "end": "1108740"
  },
  {
    "text": "understand you can see what's going on there I'm using a coalesce operator here to",
    "start": "1108740",
    "end": "1114200"
  },
  {
    "text": "say all right if some object property one is null then give it a value of one two three else keep just use the",
    "start": "1114200",
    "end": "1120260"
  },
  {
    "text": "property one object because it's not it is going to have a value of one two three",
    "start": "1120260",
    "end": "1125419"
  },
  {
    "text": "is prod environment is equal to prod so if the environment is equal to PRD is",
    "start": "1125419",
    "end": "1131720"
  },
  {
    "text": "prod is going to be true else it will be false then we can say here using a ternary",
    "start": "1131720",
    "end": "1137000"
  },
  {
    "text": "operate and say all right if it is in production then the VM series is going to be the standard D4 V3 else it might",
    "start": "1137000",
    "end": "1144620"
  },
  {
    "text": "be standard B2 Ms so with that one we're just doing simple stuff to save",
    "start": "1144620",
    "end": "1150080"
  },
  {
    "text": "production potentially if we in a production environment let's use a higher scale VM series else let's use a",
    "start": "1150080",
    "end": "1156559"
  },
  {
    "text": "burstable VM for non-production and we'll see that in use a bit later on as well and while I'm here you can see I'm",
    "start": "1156559",
    "end": "1164120"
  },
  {
    "text": "adding a few outputs there as well standard stuff in arm",
    "start": "1164120",
    "end": "1169160"
  },
  {
    "text": "templates it's just a bit easy to read in biceps so this is going to be the output the SQL capacity figure it's of",
    "start": "1169160",
    "end": "1175760"
  },
  {
    "text": "type int and that's going to be its value similarly with his production it's a type bull",
    "start": "1175760",
    "end": "1181340"
  },
  {
    "text": "it's going to take that value and etc for the rest of them what I might try and do",
    "start": "1181340",
    "end": "1187940"
  },
  {
    "text": "um let's see if this will work oh no I don't know what I can do [Music] um",
    "start": "1187940",
    "end": "1194440"
  },
  {
    "text": "my prayers again I'll do a bicep build and operators",
    "start": "1195679",
    "end": "1203720"
  },
  {
    "text": "and we'll wait for that follow the pop-up here there it is",
    "start": "1204140",
    "end": "1209480"
  },
  {
    "text": "so in this arm template you can see we've got the regular metadata some variables there the object and then you",
    "start": "1209480",
    "end": "1217039"
  },
  {
    "text": "can see the calculations that it's doing here in arm still readable but the SQL capacity value we've got multiply and",
    "start": "1217039",
    "end": "1223640"
  },
  {
    "text": "multiply multiply of variables 124 1024 coalesce up is prod again you can all",
    "start": "1223640",
    "end": "1231020"
  },
  {
    "text": "read you can still read it generally but it's still quite messy it's not exactly as readable as something like this which",
    "start": "1231020",
    "end": "1239539"
  },
  {
    "text": "looks very um very much more like a simple programming language so keeping on that",
    "start": "1239539",
    "end": "1245480"
  },
  {
    "text": "consistent and easy theme so in order to generate higher quality templates you want something that's simple to use and",
    "start": "1245480",
    "end": "1251240"
  },
  {
    "text": "Implement even if it does come back down to something like this where you know you've got kind of these",
    "start": "1251240",
    "end": "1258380"
  },
  {
    "text": "nested statements which isn't exactly easy to to write by hand that's certainly doable but you know you don't really want to if you don't have to",
    "start": "1258380",
    "end": "1267160"
  },
  {
    "text": "now getting a little bit more production like",
    "start": "1267280",
    "end": "1272500"
  },
  {
    "text": "we're going to get to a real template soon I'll show you",
    "start": "1273080",
    "end": "1277179"
  },
  {
    "text": "okay",
    "start": "1281179",
    "end": "1283779"
  },
  {
    "text": "um so um there we go okay so this is something uh and what",
    "start": "1286220",
    "end": "1292700"
  },
  {
    "text": "might be what you might see more in a typical template at the top there we've got a parameter of type of location of",
    "start": "1292700",
    "end": "1298580"
  },
  {
    "text": "type string its default value is using the resource Group function and its location",
    "start": "1298580",
    "end": "1305840"
  },
  {
    "text": "if I delete that and drop down you can see there's a whole bunch of other properties off the resource Group",
    "start": "1305840",
    "end": "1311480"
  },
  {
    "text": "function there is a resource Group function in arm templates obviously but we're using that as a default value",
    "start": "1311480",
    "end": "1318500"
  },
  {
    "text": "there for help environment parameter of type string we're giving it an allowed set of values",
    "start": "1318500",
    "end": "1325520"
  },
  {
    "text": "using that array there so Dev uat or Pride minim Max lengths as well",
    "start": "1325520",
    "end": "1332480"
  },
  {
    "text": "moving down a little we're creating a unique part of a string so we're using a unique string function",
    "start": "1332480",
    "end": "1338840"
  },
  {
    "text": "and we're using the resource Group ID as the seed so it'll give you a unique",
    "start": "1338840",
    "end": "1344720"
  },
  {
    "text": "value using that Resource Group ID which means if it's in the same Resource Group you'll get the roughly the same unique",
    "start": "1344720",
    "end": "1350120"
  },
  {
    "text": "value next down however is we're using string interpolation to say all right prepended",
    "start": "1350120",
    "end": "1356659"
  },
  {
    "text": "with my STG then insert the environment variable and also that unique path",
    "start": "1356659",
    "end": "1363620"
  },
  {
    "text": "so kind of very programmatic looking there you've got the dollar sign open squiggly brackets and it'll just append",
    "start": "1363620",
    "end": "1369919"
  },
  {
    "text": "that string for you and then you can go and use that in the creation of your resource",
    "start": "1369919",
    "end": "1376220"
  },
  {
    "text": "and output the storage account name just for convenience",
    "start": "1376220",
    "end": "1381500"
  },
  {
    "text": "now what I'll do before I show you the next bit is go here",
    "start": "1381500",
    "end": "1388600"
  },
  {
    "text": "basic so I'm going to do AZ deployment",
    "start": "1388960",
    "end": "1394220"
  },
  {
    "text": "group create G NDC demo so I've got a resource group",
    "start": "1394220",
    "end": "1401659"
  },
  {
    "text": "called NDC demo as well and I'm going to deploy the file",
    "start": "1401659",
    "end": "1408620"
  },
  {
    "text": "Main and what I'm going to do is just do a w",
    "start": "1408620",
    "end": "1414679"
  },
  {
    "text": "which is a what if deployment so I'm not actually going to do the deployment I'm going to do it's going to tell us what",
    "start": "1414679",
    "end": "1419900"
  },
  {
    "text": "it would do if it did deploy and the reason I'm doing that is just to show you some of the output so I'll let that",
    "start": "1419900",
    "end": "1425480"
  },
  {
    "text": "go and with any luck that won't bomb terribly oh and you can see here that as part of",
    "start": "1425480",
    "end": "1431900"
  },
  {
    "text": "this it's asking me to enter some of the allowed environment variables so I'll put in one for Dev",
    "start": "1431900",
    "end": "1438799"
  },
  {
    "text": "and that's starting away we'll come back to that in a second what you see here um is we're creating a",
    "start": "1438799",
    "end": "1446480"
  },
  {
    "text": "new storage account but if we wanted to um reference an existing resource",
    "start": "1446480",
    "end": "1454460"
  },
  {
    "text": "we could do that by still using the resource keyword the symbolic name there and the resource",
    "start": "1454460",
    "end": "1460760"
  },
  {
    "text": "type but just using existing these keyword just prior",
    "start": "1460760",
    "end": "1466640"
  },
  {
    "text": "to the little squiggly bracket and so that'll be the name of the existing storage account that we want to",
    "start": "1466640",
    "end": "1472700"
  },
  {
    "text": "get if we want to and that in the same Resource Group by the way that this is being deployed to if we want to",
    "start": "1472700",
    "end": "1479860"
  },
  {
    "text": "reference something in a different Resource Group same deal we just go resource use the existing keyword after",
    "start": "1479860",
    "end": "1486799"
  },
  {
    "text": "the type give it the name we want to reference but also the other resource",
    "start": "1486799",
    "end": "1491840"
  },
  {
    "text": "Group that it's in and if you're following along in the same pattern and we want to do it in a",
    "start": "1491840",
    "end": "1496940"
  },
  {
    "text": "different subscription we provide the subscription ID and the other resource Group as well as the name",
    "start": "1496940",
    "end": "1503960"
  },
  {
    "text": "again main point being we've got existing there",
    "start": "1503960",
    "end": "1509059"
  },
  {
    "text": "okay so that's how you reference existing resources should you want to uh do that at Sam at",
    "start": "1509059",
    "end": "1514580"
  },
  {
    "text": "some point um and because we've got a symbolic name here I could actually go here and say all right",
    "start": "1514580",
    "end": "1520580"
  },
  {
    "text": "Dot and it will give me some properties of this storage account that I could also output if I wanted to so nice bit",
    "start": "1520580",
    "end": "1526940"
  },
  {
    "text": "of intellisense there from that existing thing but I just wanted to point out that the symbolic name is like a like an",
    "start": "1526940",
    "end": "1534200"
  },
  {
    "text": "object that you can do or the the intellisense often it's got all knowledge of that object within bicep itself",
    "start": "1534200",
    "end": "1540500"
  },
  {
    "text": "going back to oh man there is not me where are we here we go so the result of",
    "start": "1540500",
    "end": "1546860"
  },
  {
    "text": "the what if deployment if you recall we did some string interpolation on the name of the storage account so one of",
    "start": "1546860",
    "end": "1553760"
  },
  {
    "text": "the things I wanted to call oh where'd you go thank you",
    "start": "1553760",
    "end": "1558519"
  },
  {
    "text": "just there name of the storage account here you can see we've got my STG which is",
    "start": "1558919",
    "end": "1565220"
  },
  {
    "text": "what we had prefixed with it Dev was the environment and then there's the unique part that we've done with it",
    "start": "1565220",
    "end": "1573740"
  },
  {
    "text": "so I just want to show you that as part of the um part of the the functions available you will call back here this",
    "start": "1573740",
    "end": "1580340"
  },
  {
    "text": "was the string interpolation uh that we do finally",
    "start": "1580340",
    "end": "1585919"
  },
  {
    "text": "um and just quickly again I've got a template here and I'll take you through the template quickly it's a",
    "start": "1585919",
    "end": "1591200"
  },
  {
    "text": "um not too long but we're creating a storage account we're creating an app service",
    "start": "1591200",
    "end": "1598400"
  },
  {
    "text": "and then down here we've got a function app as part of the function app we're referencing the storage account",
    "start": "1598400",
    "end": "1604880"
  },
  {
    "text": "name as well as we're referencing the app service ID as part of the server Farm",
    "start": "1604880",
    "end": "1613220"
  },
  {
    "text": "nothing too spectacular but let's compile that down to one just to see what it would give us",
    "start": "1613220",
    "end": "1620240"
  },
  {
    "text": "okay depends on so easy bicep build",
    "start": "1620240",
    "end": "1626480"
  },
  {
    "text": "depends on and we should see another file pop up",
    "start": "1626480",
    "end": "1633080"
  },
  {
    "text": "there there it is depends on example Jason and there's a bit more to this template",
    "start": "1633080",
    "end": "1638960"
  },
  {
    "text": "as you can see so we're going um we're still maintaining readability in",
    "start": "1638960",
    "end": "1644240"
  },
  {
    "text": "bicep but the arm output is a bit more but what I wanted to highlight here is",
    "start": "1644240",
    "end": "1649340"
  },
  {
    "text": "that in your arm template you usually need to manually put in the depends on Clause so in this case the function out",
    "start": "1649340",
    "end": "1656480"
  },
  {
    "text": "will depend on the storage account and the app service plan you'd need to manually put that in",
    "start": "1656480",
    "end": "1661720"
  },
  {
    "text": "in an arm template bicep because it knows that you've registered uh sorry that",
    "start": "1661720",
    "end": "1668299"
  },
  {
    "text": "you've referenced the app service and the storage account it automatically",
    "start": "1668299",
    "end": "1673580"
  },
  {
    "text": "knows that to put that depends on in for you if I wanted to say look I think you're pretty dumb bicep I'm going to oh",
    "start": "1673580",
    "end": "1680720"
  },
  {
    "text": "not there I'm going to put the depends on anyway because I think it needs it",
    "start": "1680720",
    "end": "1688059"
  },
  {
    "text": "and I'm going to reference the app service you can see it gives me a little squiggly it says remove unnecessary",
    "start": "1688279",
    "end": "1695600"
  },
  {
    "text": "depends on Entry so it's trying to help you to clean up your bicep template for you",
    "start": "1695600",
    "end": "1700820"
  },
  {
    "text": "and that's one of the reasons it doesn't want commas and stuff like that doesn't want to have to type in unnecessary stuff keep it as simple as possible it",
    "start": "1700820",
    "end": "1707900"
  },
  {
    "text": "doesn't need you don't need to put on the depends on biceps smart enough to work that out for you",
    "start": "1707900",
    "end": "1713740"
  },
  {
    "text": "I hate using a trackpad geez it's terrible uh so that was a demo in terms",
    "start": "1718580",
    "end": "1723799"
  },
  {
    "text": "of the functions um there are all the functions that bicep supports currently obviously I",
    "start": "1723799",
    "end": "1729020"
  },
  {
    "text": "can't go through them all there's way too many there I have showed you a few like the unique",
    "start": "1729020",
    "end": "1736419"
  },
  {
    "text": "string and the resource resource function Resource Group function but again there's heaps there",
    "start": "1736419",
    "end": "1744260"
  },
  {
    "text": "is uh it's a little bit more so it does it",
    "start": "1744260",
    "end": "1752059"
  },
  {
    "text": "does equate to it yes is the short answer but there's a few more in bicep that is really just syntactic sugar over",
    "start": "1752059",
    "end": "1758179"
  },
  {
    "text": "a few things so there's a little bit more in there",
    "start": "1758179",
    "end": "1762039"
  },
  {
    "text": "okay this is where I think um the bicep really shines in terms of providing a",
    "start": "1763700",
    "end": "1769039"
  },
  {
    "text": "significant advantage over arm templates and that's in the in the form of modules so that um those few files that we've",
    "start": "1769039",
    "end": "1776299"
  },
  {
    "text": "seen we've got resource resource resource each one of those kinds of files is a module in bicep that you can reference",
    "start": "1776299",
    "end": "1783260"
  },
  {
    "text": "from other files and we can see here the way that you reference that is simply using the module keyword",
    "start": "1783260",
    "end": "1789320"
  },
  {
    "text": "which you can see there app service and then you reference an app service dot bicep file the other files that I named",
    "start": "1789320",
    "end": "1796279"
  },
  {
    "text": "them might have been depends on or vars or whatever you can reference them as modules as well depending on the",
    "start": "1796279",
    "end": "1801860"
  },
  {
    "text": "parameters that they have so what you need to pass in the outputs that the file has is what will come back within",
    "start": "1801860",
    "end": "1807980"
  },
  {
    "text": "the symbolic name of that module that you've defined and you can see I'm providing some",
    "start": "1807980",
    "end": "1813740"
  },
  {
    "text": "parameters there is import the name of the deployment and the output I'm referencing the app",
    "start": "1813740",
    "end": "1819380"
  },
  {
    "text": "service symbolic name outputs and the app service name we'll go into that in a bit more detail in a second",
    "start": "1819380",
    "end": "1825919"
  },
  {
    "text": "in fact let's just do it now let's close all this down",
    "start": "1825919",
    "end": "1832120"
  },
  {
    "text": "so if I was uh if I was Aaron I don't know if you're in the last thing I would have done all that through uh hotkeys",
    "start": "1833179",
    "end": "1840140"
  },
  {
    "text": "but I'm not that good so going here",
    "start": "1840140",
    "end": "1845960"
  },
  {
    "text": "I have a main dot bicep I've got some parameters there location which defaults",
    "start": "1845960",
    "end": "1851779"
  },
  {
    "text": "to Australia East I've got an admin password which is a secure string admin",
    "start": "1851779",
    "end": "1856820"
  },
  {
    "text": "username I've got a description decorator on that and some allowed values for parameters which is not",
    "start": "1856820",
    "end": "1862520"
  },
  {
    "text": "really important thing what I do have here is a module the app service module referencing the app service bicep file",
    "start": "1862520",
    "end": "1869360"
  },
  {
    "text": "which is over here I've got another module uh which is the storage module",
    "start": "1869360",
    "end": "1875120"
  },
  {
    "text": "referencing the storage.bicep file and there's a little bit of a precursor",
    "start": "1875120",
    "end": "1880760"
  },
  {
    "text": "to conditional deployment I've also got a VM module referencing the vm.bicep file",
    "start": "1880760",
    "end": "1886580"
  },
  {
    "text": "but what it's going to do is only deploy that if it's",
    "start": "1886580",
    "end": "1891740"
  },
  {
    "text": "um if it's if is prod equals to true and up here we're saying if the environment",
    "start": "1891740",
    "end": "1896779"
  },
  {
    "text": "is prod then is prod is true so only going to deploy that module if that's the case",
    "start": "1896779",
    "end": "1902360"
  },
  {
    "text": "but the important being is I'm calling in three files here we've got the app service bicep file",
    "start": "1902360",
    "end": "1909020"
  },
  {
    "text": "um which is a few parameters there uh and two I think there's two resources so app service plan and app service with",
    "start": "1909020",
    "end": "1915020"
  },
  {
    "text": "some outputs we've got the storage uh file there again that was the same as what you've",
    "start": "1915020",
    "end": "1920600"
  },
  {
    "text": "been seeing so far and our VM which is a little bit longer um simply because it's a virtual machine uh it needs some IP",
    "start": "1920600",
    "end": "1927320"
  },
  {
    "text": "addresses and v-nets and and so forth and so you can see that there",
    "start": "1927320",
    "end": "1932419"
  },
  {
    "text": "but this guy's dragging in all those files to make a larger deployment so if",
    "start": "1932419",
    "end": "1938000"
  },
  {
    "text": "we're separated out we've got like main bicep app service storage VM so we've",
    "start": "1938000",
    "end": "1943580"
  },
  {
    "text": "got quite a few files there now what I'm going to do is coming back here",
    "start": "1943580",
    "end": "1950299"
  },
  {
    "text": "let's go out of that [Music] modules easy bicep build just so you can",
    "start": "1950299",
    "end": "1958100"
  },
  {
    "text": "see what's going on behind the scenes me and we'll build that up",
    "start": "1958100",
    "end": "1963440"
  },
  {
    "text": "and you should see a main.json pop up there there we go so what it's given us is one big Json",
    "start": "1963440",
    "end": "1971059"
  },
  {
    "text": "file and the way it's called in all those elements that we saw in separate files if we scroll down a bit and it's",
    "start": "1971059",
    "end": "1978860"
  },
  {
    "text": "going to look pretty messy so I'm not going to go into big detail but is through our nested templates so we've",
    "start": "1978860",
    "end": "1985279"
  },
  {
    "text": "got a deployment here we've got some parameters and a template",
    "start": "1985279",
    "end": "1990679"
  },
  {
    "text": "that's nested within that file and it's got that was for the server",
    "start": "1990679",
    "end": "1997279"
  },
  {
    "text": "Farm we keep going down here we've got another deployment",
    "start": "1997279",
    "end": "2002559"
  },
  {
    "text": "it is another listed template and you can see we're going down a bit further",
    "start": "2002559",
    "end": "2008080"
  },
  {
    "text": "now we've got another deployment with another nested template that would be for the VM and you can see that the you",
    "start": "2008080",
    "end": "2014620"
  },
  {
    "text": "know it's going on and on and on and on and on don't go into the details too much however",
    "start": "2014620",
    "end": "2021100"
  },
  {
    "text": "um that to me is a big mess well not a big mess I mean we've",
    "start": "2021100",
    "end": "2027640"
  },
  {
    "text": "probably all dealt with um templates that are probably that size maybe but in terms of maintainability",
    "start": "2027640",
    "end": "2034539"
  },
  {
    "text": "this thing is significantly easy to understand we've got a pretty small file referencing three other files each of",
    "start": "2034539",
    "end": "2042039"
  },
  {
    "text": "those other files has specific resources to its scope let's say so one's a",
    "start": "2042039",
    "end": "2047919"
  },
  {
    "text": "storage account an app server Etc and so cognitively you don't have to take into account this big arm template and",
    "start": "2047919",
    "end": "2054820"
  },
  {
    "text": "understand everything's going on and worry about these nested templates blah blah blah blah blah blah you just have",
    "start": "2054820",
    "end": "2059919"
  },
  {
    "text": "to worry about Echo I have to do something to the storage account it's in the storage account file it's only yay big it's pretty easy to modify",
    "start": "2059919",
    "end": "2066460"
  },
  {
    "text": "as opposed to having to search through that nested template if that makes sense",
    "start": "2066460",
    "end": "2072460"
  },
  {
    "text": "does everybody understand that so far any questions on that so far",
    "start": "2072460",
    "end": "2077158"
  },
  {
    "text": "yep",
    "start": "2077740",
    "end": "2080280"
  },
  {
    "text": "uh yeah so for each module that you want conditionally done yes yep",
    "start": "2086859",
    "end": "2093119"
  },
  {
    "text": "yes that is absolutely correct if um if you're a reference to symbolic name dot ID later on but you're only",
    "start": "2095139",
    "end": "2101200"
  },
  {
    "text": "doing Dev it would throw an error doing deployment so it's not necessarily a good practice it is a way of doing",
    "start": "2101200",
    "end": "2106420"
  },
  {
    "text": "things and we'll look at other ways of doing conditional deployments too",
    "start": "2106420",
    "end": "2111700"
  },
  {
    "text": "but that is uh that is a very good point so you know if that's if we're doing this and it's not in production and we go to",
    "start": "2111700",
    "end": "2118420"
  },
  {
    "text": "uh try and do something like uh uh VM dot outputs",
    "start": "2118420",
    "end": "2127359"
  },
  {
    "text": "types uh you know hostname oh and get rid of the other cuff",
    "start": "2127359",
    "end": "2132640"
  },
  {
    "text": "then yeah that would cause a problem if it wasn't in production",
    "start": "2132640",
    "end": "2137160"
  },
  {
    "text": "okay so and this this for me um is one of the significant benefits of",
    "start": "2137859",
    "end": "2143920"
  },
  {
    "text": "bicep we can start to expand out our modular structure of templates without",
    "start": "2143920",
    "end": "2149920"
  },
  {
    "text": "necessarily having to worry about the complexity of linked templates you can sort of do the same with things like",
    "start": "2149920",
    "end": "2156160"
  },
  {
    "text": "template specs where you deploy a template an arm template and link to a local template",
    "start": "2156160",
    "end": "2163420"
  },
  {
    "text": "and it deploys it to Azure and the tooling sort of Aggregates it all for you and places in Azure but you're still",
    "start": "2163420",
    "end": "2169240"
  },
  {
    "text": "getting this this big arm template aggregated mess and you're not getting the modularity of bicep",
    "start": "2169240",
    "end": "2175000"
  },
  {
    "text": "so as possible and I'm just not very very nice at all um you know you have been seeing me sort",
    "start": "2175000",
    "end": "2181300"
  },
  {
    "text": "of uh use a main dot bicep and then there's other files that reference that that's usually a pattern that's followed",
    "start": "2181300",
    "end": "2187660"
  },
  {
    "text": "by oh not followed but recommended by the team most of the things or examples you'll see will have main.bicep as the",
    "start": "2187660",
    "end": "2194079"
  },
  {
    "text": "kind of the root file and everything branches off from that so you can see a simple solution structure which just might be multiple files underneath or it",
    "start": "2194079",
    "end": "2201280"
  },
  {
    "text": "could be separated by directories underneath as well with files within those directories that my you know they",
    "start": "2201280",
    "end": "2207339"
  },
  {
    "text": "might be 10 files per directory based on what you need to deploy but you can see it's an actually easier way of",
    "start": "2207339",
    "end": "2212500"
  },
  {
    "text": "separating things out that you just don't get with arm templates we talked about the conditional",
    "start": "2212500",
    "end": "2217960"
  },
  {
    "text": "deployment with modules I won't harp on that too much longer but a few more conditions and this is a little bit hard",
    "start": "2217960",
    "end": "2223119"
  },
  {
    "text": "to read so I'm going to go straight to the source file for this one",
    "start": "2223119",
    "end": "2230440"
  },
  {
    "text": "let's close all that down close all",
    "start": "2230440",
    "end": "2235560"
  },
  {
    "text": "so if we have a look at the conditions here so what uh what we've got here is we're going to deploy a a database",
    "start": "2238839",
    "end": "2245500"
  },
  {
    "text": "so what I'm doing don't worry about the parameters at the top they're not too important for now I'm creating a",
    "start": "2245500",
    "end": "2250720"
  },
  {
    "text": "variable database skew in there is one Dev object that has name tier family",
    "start": "2250720",
    "end": "2256480"
  },
  {
    "text": "incapacity say four calls for Dev we've got a uat object that's got a name tier",
    "start": "2256480",
    "end": "2262240"
  },
  {
    "text": "and a capacity of 12 cores for uat and prod has a capacity of 24.",
    "start": "2262240",
    "end": "2269200"
  },
  {
    "text": "similarly for database skewed properties we've got the collation Max size is small for Dev Max size is a bit bigger",
    "start": "2269200",
    "end": "2276400"
  },
  {
    "text": "for UHC Max size is even bigger for production as well as its Zone redundant",
    "start": "2276400",
    "end": "2281560"
  },
  {
    "text": "for production Okay so we've got two variables each with objects inside the",
    "start": "2281560",
    "end": "2287680"
  },
  {
    "text": "reference reference represent different properties of the skew and the skew properties object",
    "start": "2287680",
    "end": "2293980"
  },
  {
    "text": "so when we're creating the resource for the SQL database for skew we can",
    "start": "2293980",
    "end": "2299200"
  },
  {
    "text": "reference database skew and the environment and database queue properties any",
    "start": "2299200",
    "end": "2305380"
  },
  {
    "text": "environment so the actual um properties of that resource will be",
    "start": "2305380",
    "end": "2310480"
  },
  {
    "text": "different depending on the environment that's passed in the actual creation of that resource or at least this part of",
    "start": "2310480",
    "end": "2316480"
  },
  {
    "text": "the script is pretty pretty simple okay there's no real cognitive load with that",
    "start": "2316480",
    "end": "2321839"
  },
  {
    "text": "and we can see that the properties of each are actually all grouped together so it makes a little bit easier to read",
    "start": "2321839",
    "end": "2328660"
  },
  {
    "text": "if I was to go back down here and say instead of um access that that way I can hit a DOT",
    "start": "2328660",
    "end": "2335020"
  },
  {
    "text": "and you see you've got Dev uat Dev produ so I could actually hard code it to to Dev all the time but because this",
    "start": "2335020",
    "end": "2342760"
  },
  {
    "text": "environment just go back is something that we've specified as a",
    "start": "2342760",
    "end": "2348040"
  },
  {
    "text": "parameter up here and in the allowed values we've got Dev uat and prod and this is going to work just fine",
    "start": "2348040",
    "end": "2355060"
  },
  {
    "text": "and the reason this is sort of okay is that again we're grouping these things together so that we don't have to bounce all over",
    "start": "2355060",
    "end": "2362140"
  },
  {
    "text": "a template to find out where things are set but still this is still a bit messy",
    "start": "2362140",
    "end": "2367300"
  },
  {
    "text": "right we're making a template quite long because we've got a nice big variables in there defining the properties we",
    "start": "2367300",
    "end": "2372760"
  },
  {
    "text": "could go a little bit better than that so what I'm doing here",
    "start": "2372760",
    "end": "2378220"
  },
  {
    "text": "if I go over here I'm using a load text content function that's loading in this Json file DB skew",
    "start": "2378220",
    "end": "2386140"
  },
  {
    "text": "from a different directory SKU settings and once I load in the text content I'm",
    "start": "2386140",
    "end": "2391180"
  },
  {
    "text": "going to convert it to Json and assign it to DB skus similarly for DBQ properties I'm loading",
    "start": "2391180",
    "end": "2396940"
  },
  {
    "text": "in this Json file and converting it to Json so that's just loading in text content then convert it",
    "start": "2396940",
    "end": "2402700"
  },
  {
    "text": "to Json and then I reference it in here in the same way that I did above if I have a look at the files themselves",
    "start": "2402700",
    "end": "2409300"
  },
  {
    "text": "these are actually just standard Json so there's they're not bicep files they're just standard Json files",
    "start": "2409300",
    "end": "2414880"
  },
  {
    "text": "replete with commas and double apostrophes and everything like that same deal as we had before Dev uat and",
    "start": "2414880",
    "end": "2421119"
  },
  {
    "text": "pride we've got different capacities for for Pride DB skew properties again another Json file pretty simple to",
    "start": "2421119",
    "end": "2427780"
  },
  {
    "text": "understand but more importantly this bicep file is extremely short now we've got some",
    "start": "2427780",
    "end": "2433839"
  },
  {
    "text": "parameters we've got the creation of the SQL Server we load in those separate properties and",
    "start": "2433839",
    "end": "2439420"
  },
  {
    "text": "then we reference them down here if I and the benefit of using the Json",
    "start": "2439420",
    "end": "2445020"
  },
  {
    "text": "function within bicep is you get the drop down support for it as well or we're referencing by using the the",
    "start": "2445020",
    "end": "2452020"
  },
  {
    "text": "square bracket accessor now it says Dev product and uat here",
    "start": "2452020",
    "end": "2457119"
  },
  {
    "text": "just so you can see I'm not lying if I go into DB skus and I say I don't know",
    "start": "2457119",
    "end": "2464079"
  },
  {
    "text": "NDC and I save that and hopefully we go back to conditions two",
    "start": "2464079",
    "end": "2470440"
  },
  {
    "text": "go back to skus drop down you can see it's got NDC there",
    "start": "2470440",
    "end": "2476680"
  },
  {
    "text": "so it's actually picking up it's giving you intellisense from a file loaded from the file system just through the bicep",
    "start": "2476680",
    "end": "2482920"
  },
  {
    "text": "subsystem the interesting thing there is that that's not uh you don't really see that",
    "start": "2482920",
    "end": "2488740"
  },
  {
    "text": "equivalent uh in arm that's this is a really nice way in my opinion anyway of separating out those kinds of specific",
    "start": "2488740",
    "end": "2494859"
  },
  {
    "text": "properties the main template is just concentrated on deploying stuff and",
    "start": "2494859",
    "end": "2500260"
  },
  {
    "text": "you've got the properties themselves separated out into a file that's really easy to understand you can see how we're",
    "start": "2500260",
    "end": "2506020"
  },
  {
    "text": "getting more modular now and starting to split things out um just to show you again so that we're",
    "start": "2506020",
    "end": "2512740"
  },
  {
    "text": "not um let's put that back to Dev how does that look as an arm template though a",
    "start": "2512740",
    "end": "2518440"
  },
  {
    "text": "farm doesn't really support that so let's do just that",
    "start": "2518440",
    "end": "2524520"
  },
  {
    "text": "way down seven easy bicep Bill F what",
    "start": "2525040",
    "end": "2531160"
  },
  {
    "text": "was it called conditions too",
    "start": "2531160",
    "end": "2535559"
  },
  {
    "text": "conditions too we'll let that compile away",
    "start": "2537640",
    "end": "2542980"
  },
  {
    "text": "should see a conditions too Jason and there we have it I said let's load that up",
    "start": "2542980",
    "end": "2548740"
  },
  {
    "text": "okay what we can see here is what bicep is",
    "start": "2548740",
    "end": "2554260"
  },
  {
    "text": "output is two variables that embed the Json content in there and clearly this",
    "start": "2554260",
    "end": "2561579"
  },
  {
    "text": "is not something you'd want to do by hand it's pretty pretty ugly but",
    "start": "2561579",
    "end": "2567460"
  },
  {
    "text": "it's embedded them as variables and you can see down here it's using its own",
    "start": "2567460",
    "end": "2572800"
  },
  {
    "text": "Json function to reference the variable and create those dbsq properties to be used later on down here",
    "start": "2572800",
    "end": "2581560"
  },
  {
    "text": "so bicep has been smart enough to coerce um to do its bidding and be able to make",
    "start": "2581560",
    "end": "2588160"
  },
  {
    "text": "things more mobular not something you typically do when riding an armed team play because it's pretty ugly to do but",
    "start": "2588160",
    "end": "2593500"
  },
  {
    "text": "bicep makes this really really nice to use and that for me is like the um you know go away arm templates I",
    "start": "2593500",
    "end": "2600940"
  },
  {
    "text": "don't want to use you anymore this stuff's really really nice in my opinion",
    "start": "2600940",
    "end": "2606060"
  },
  {
    "text": "any questions on that so far [Music] do you think that looks okay do you",
    "start": "2606579",
    "end": "2612460"
  },
  {
    "text": "think that is actually better than arm templates I would think so yeah good I'm convincing you nice",
    "start": "2612460",
    "end": "2620099"
  },
  {
    "text": "okay the next I don't think I've got anything on the slide cells to show uh yes we have a astonished cat so that's",
    "start": "2620740",
    "end": "2628180"
  },
  {
    "text": "important okay bicep uh Loops how much time have",
    "start": "2628180",
    "end": "2634540"
  },
  {
    "text": "we got all right we've got about 15 minutes so",
    "start": "2634540",
    "end": "2640140"
  },
  {
    "text": "I'll be very quick with this",
    "start": "2640900",
    "end": "2644160"
  },
  {
    "text": "so in terms of loops uh as you know uh arm template support a",
    "start": "2648880",
    "end": "2654760"
  },
  {
    "text": "looping construct there's a copy but what we can do uh in bicep",
    "start": "2654760",
    "end": "2660099"
  },
  {
    "text": "um is here you can see a loop it's encased in square brackets we're just saying for I in the range function",
    "start": "2660099",
    "end": "2669400"
  },
  {
    "text": "and give me some string interpolation so we're going to create a few elements what that will do is obviously Loop",
    "start": "2669400",
    "end": "2676660"
  },
  {
    "text": "you'll get I is the index value and that'll give us an array looking something like that stuff zero stuff one",
    "start": "2676660",
    "end": "2683560"
  },
  {
    "text": "stuff two because it's just doing some string interpolation of the index",
    "start": "2683560",
    "end": "2688599"
  },
  {
    "text": "utilizing the range function that's all very well and good but if we wanted to do things like create multiple",
    "start": "2688599",
    "end": "2695380"
  },
  {
    "text": "public IPS we can do that too so we've got resource",
    "start": "2695380",
    "end": "2700900"
  },
  {
    "text": "the symbolic name and the type and API version then we've got equals",
    "start": "2700900",
    "end": "2707260"
  },
  {
    "text": "open square bracket for index in range one to three and a little",
    "start": "2707260",
    "end": "2712440"
  },
  {
    "text": "colon there and then we're referencing my public IPS",
    "start": "2712440",
    "end": "2718780"
  },
  {
    "text": "the name utilizing the index in string interpolation there and we're closing the square bracket there so that's",
    "start": "2718780",
    "end": "2725020"
  },
  {
    "text": "essentially just looping over this resource creation three times simple stuff",
    "start": "2725020",
    "end": "2731940"
  },
  {
    "text": "okay and again just putting that in front in front of the or in between the equals",
    "start": "2732760",
    "end": "2739839"
  },
  {
    "text": "and the little squiggly bracket much like we did with the existing keyword",
    "start": "2739839",
    "end": "2744480"
  },
  {
    "text": "however that's just using indexes if we wanted to get a little bit more crazy um we can again do we've got a array of",
    "start": "2745420",
    "end": "2753460"
  },
  {
    "text": "objects here so we've got web app list it's got two objects each object has an app name and an app tag",
    "start": "2753460",
    "end": "2760660"
  },
  {
    "text": "so here we can say again resource symbolic name the type",
    "start": "2760660",
    "end": "2766180"
  },
  {
    "text": "open square bracket for item and index in web app list so it's going to take an",
    "start": "2766180",
    "end": "2772180"
  },
  {
    "text": "item out of the array and it's also going to use the index as well",
    "start": "2772180",
    "end": "2778300"
  },
  {
    "text": "down here we're going to say all right for name use the item app name which will come from this one and this one so",
    "start": "2778300",
    "end": "2784000"
  },
  {
    "text": "we're going to create two resources in this instance and in the tags we're going to use item",
    "start": "2784000",
    "end": "2790240"
  },
  {
    "text": "app tag which might be admin module and public facing and then the component number we're going to do some clever",
    "start": "2790240",
    "end": "2796420"
  },
  {
    "text": "string interpolation using the index which would be one and two or sorry zero",
    "start": "2796420",
    "end": "2801700"
  },
  {
    "text": "one well one and two because we're doing a plus one and the length of web app list which is going to be 2.",
    "start": "2801700",
    "end": "2809619"
  },
  {
    "text": "okay so we're using um a looting construct to get the both the",
    "start": "2809619",
    "end": "2815140"
  },
  {
    "text": "item and the index and create two resources on top of that and then we can do any of the usual",
    "start": "2815140",
    "end": "2821440"
  },
  {
    "text": "functions string interpolation whatever references you need to do within the resource creation itself so this",
    "start": "2821440",
    "end": "2827859"
  },
  {
    "text": "syntax here is I think reasonable certainly better than the copy syntax",
    "start": "2827859",
    "end": "2833859"
  },
  {
    "text": "that you'd use in arm templates if you're familiar with that um but it's easy enough to do these",
    "start": "2833859",
    "end": "2839800"
  },
  {
    "text": "looping constructs again let's just compiles straight down to one which I can I'm happy to show you but in the interest of time we'll sort of scoot",
    "start": "2839800",
    "end": "2845740"
  },
  {
    "text": "along fairly quickly so they were the the I guess the basics",
    "start": "2845740",
    "end": "2854380"
  },
  {
    "text": "of creating or something a bit more advanced in the basics of creating uh resources using uh bicep the modularity",
    "start": "2854380",
    "end": "2860560"
  },
  {
    "text": "in particular I think is just fantastic in it but we're still pretty lazy we want to do a little we want bicep to do",
    "start": "2860560",
    "end": "2866319"
  },
  {
    "text": "a little bit more for us so let's go back here",
    "start": "2866319",
    "end": "2872160"
  },
  {
    "text": "where uh yep thank you um Let's do let's have a look at",
    "start": "2872319",
    "end": "2877920"
  },
  {
    "text": "main.bicep here um before I take you through this file",
    "start": "2877920",
    "end": "2883480"
  },
  {
    "text": "itself let's go straight to the bottom let's do res Dash and if I want to",
    "start": "2883480",
    "end": "2890440"
  },
  {
    "text": "create an AKs cluster I hit enter and it gives me all the properties I need to do to create an AKs cluster",
    "start": "2890440",
    "end": "2898079"
  },
  {
    "text": "yes nice hey that's super good I reckon and similarly",
    "start": "2898079",
    "end": "2903400"
  },
  {
    "text": "like um you know for a VM it's a res Dash virtual or VM Windows",
    "start": "2903400",
    "end": "2911079"
  },
  {
    "text": "um or whatever list it will be in Windows it's pretty uh it's pretty pretty gnarly there's a fair bit there",
    "start": "2911079",
    "end": "2916660"
  },
  {
    "text": "but you get to do all that without any typing that stuff is um is gold in my opinion yes",
    "start": "2916660",
    "end": "2924000"
  },
  {
    "text": "I believe so you will have to",
    "start": "2924819",
    "end": "2929940"
  },
  {
    "text": "update your bicep extension like to keep up to date with the latest but it should",
    "start": "2929940",
    "end": "2935560"
  },
  {
    "text": "do yes while we're here on this big uh gnarly template I'm sort of jumping ahead a",
    "start": "2935560",
    "end": "2942579"
  },
  {
    "text": "little but one of the other cool things that it can do is open a visualizer for you that one's a little bit small so",
    "start": "2942579",
    "end": "2949780"
  },
  {
    "text": "let's go over to here and right click and open bicep",
    "start": "2949780",
    "end": "2954940"
  },
  {
    "text": "visualizer and these are all the items within the template for you so that gives you a nice visualization of the",
    "start": "2954940",
    "end": "2961240"
  },
  {
    "text": "template if I double click on that that'll take it should take me straight to that property there",
    "start": "2961240",
    "end": "2967420"
  },
  {
    "text": "now let's open it up the visualize it to the side let's close that one there",
    "start": "2967420",
    "end": "2973180"
  },
  {
    "text": "okay it's a little bit small but bear with me let's go down here and create that AKs cluster and you'll",
    "start": "2973180",
    "end": "2981040"
  },
  {
    "text": "see it adds it in there we'll go off and create I don't know anything",
    "start": "2981040",
    "end": "2987300"
  },
  {
    "text": "that one Gateway you can see it's starting to add it in here and as you create links between the resources this",
    "start": "2987940",
    "end": "2993819"
  },
  {
    "text": "graph will update for you as well giving you a nice visual representation of as you're writing your template which",
    "start": "2993819",
    "end": "3000599"
  },
  {
    "text": "again I think is extremely valuable from a particularly for complex templates as things start to blow out",
    "start": "3000599",
    "end": "3007140"
  },
  {
    "text": "and remember this is all this this can be in multiple files as well it doesn't have to be a single file",
    "start": "3007140",
    "end": "3013940"
  },
  {
    "text": "so it covered that ah yes so Scopes uh at the um",
    "start": "3016800",
    "end": "3022079"
  },
  {
    "text": "right now we've been targeting a resource Group scope so we're deploying to a particular resource by default",
    "start": "3022079",
    "end": "3028319"
  },
  {
    "text": "every bicep file will Target a resource Group but we can Target other Scopes and",
    "start": "3028319",
    "end": "3034020"
  },
  {
    "text": "by Scopes I mean starting at the very top you've got your tenant in fact if I go down here yep we've got your tenant",
    "start": "3034020",
    "end": "3040680"
  },
  {
    "text": "then you could have one or more management groups within one Management",
    "start": "3040680",
    "end": "3045900"
  },
  {
    "text": "Group you could have multiple subscriptions within a subscription you can have multiple resource groups by",
    "start": "3045900",
    "end": "3052380"
  },
  {
    "text": "default bicep targets that very bottom level there but we can we can Target",
    "start": "3052380",
    "end": "3057420"
  },
  {
    "text": "other scopes uh come back to me over here",
    "start": "3057420",
    "end": "3063420"
  },
  {
    "text": "oh stop it so if we're looking for example let's",
    "start": "3063420",
    "end": "3070079"
  },
  {
    "text": "close this guy down this template here is effectively the same as this template here the only",
    "start": "3070079",
    "end": "3076380"
  },
  {
    "text": "difference being at the very top we've got Target scope equals Resource Group I can go over here delete that",
    "start": "3076380",
    "end": "3084780"
  },
  {
    "text": "and you can see the drop down options we've got Management Group Resource Group subscription tenant if I change it to something like a",
    "start": "3084780",
    "end": "3091319"
  },
  {
    "text": "Management Group it's going to probably complain yeah because we can't deploy a lot of this at a at a Management Group level",
    "start": "3091319",
    "end": "3097380"
  },
  {
    "text": "so it's telling us yeah you've chosen different scope but your this is really not going to work so it's giving you this feedback immediately but the point",
    "start": "3097380",
    "end": "3104940"
  },
  {
    "text": "being that you can change your scope should you should you need to that's at the the file level but let's",
    "start": "3104940",
    "end": "3112020"
  },
  {
    "text": "say we go over here other things that you can do is",
    "start": "3112020",
    "end": "3118680"
  },
  {
    "text": "where are you and uh yep we've got there",
    "start": "3118980",
    "end": "3125500"
  },
  {
    "text": "[Music] um where did I go I mean that's good",
    "start": "3125500",
    "end": "3131839"
  },
  {
    "text": "ah yes okay um so we've got a Target scope up here a",
    "start": "3132839",
    "end": "3139020"
  },
  {
    "text": "subscription level um we've got a resource Group then we're going to create",
    "start": "3139020",
    "end": "3144359"
  },
  {
    "text": "um it's in it's called group one and it's at the deployment location pretty standard stuff",
    "start": "3144359",
    "end": "3151020"
  },
  {
    "text": "um and similarly for another Resource Group so we're creating two resource groups but let's say we've got a storage",
    "start": "3151020",
    "end": "3157619"
  },
  {
    "text": "account that we want to deploy to a different scope in this case Resource Group number one so we're using the",
    "start": "3157619",
    "end": "3163859"
  },
  {
    "text": "scope keyword there and for this website we're actually deploying it to a different Resource",
    "start": "3163859",
    "end": "3169980"
  },
  {
    "text": "Group which we already created so we're creating at a subscription level two resource groups and then we're deploying",
    "start": "3169980",
    "end": "3175319"
  },
  {
    "text": "a resource to each of those resource groups which you couldn't do by default normally because you're targeting one Resource Group this scope keyword allows",
    "start": "3175319",
    "end": "3182700"
  },
  {
    "text": "you to expand out provided you've been very explicit about setting your target scope at the top",
    "start": "3182700",
    "end": "3188819"
  },
  {
    "text": "okay but it's still the point being here is um it's actually pretty easy target scope is equal subscription pretty",
    "start": "3188819",
    "end": "3195420"
  },
  {
    "text": "simple scope keywords down here um again pretty easy pretty easy to get around",
    "start": "3195420",
    "end": "3202220"
  },
  {
    "text": "uh where are you going back",
    "start": "3204720",
    "end": "3209119"
  },
  {
    "text": "I talked about Scopes there we did the visualization ah bicep play again probably the last",
    "start": "3210119",
    "end": "3216180"
  },
  {
    "text": "thing I want to show you very quickly um boom uh and I'll give you the links will be",
    "start": "3216180",
    "end": "3222599"
  },
  {
    "text": "on this a slide deck which I'll shoot around but this is an online tool that you can use",
    "start": "3222599",
    "end": "3227819"
  },
  {
    "text": "uh you can go and click on the right up here and choose a template yes the UI is a bit crappy",
    "start": "3227819",
    "end": "3233819"
  },
  {
    "text": "and what it does is it gives you arm template on the right bicep template on the left if you want to clear all that",
    "start": "3233819",
    "end": "3240300"
  },
  {
    "text": "out and save x equals one you can see it's creating the arm template on the",
    "start": "3240300",
    "end": "3246720"
  },
  {
    "text": "right on the Fly for you if you want to play around with that kind of stuff",
    "start": "3246720",
    "end": "3251299"
  },
  {
    "text": "there so a little bit of that is biceps fault because you probably wouldn't put in that manually but you can yes as you",
    "start": "3257220",
    "end": "3262440"
  },
  {
    "text": "added more things are going to expand out considerably and looking at some of the sample templates you get a Hello",
    "start": "3262440",
    "end": "3267900"
  },
  {
    "text": "World for example um yeah a few lines there a lot more lines there",
    "start": "3267900",
    "end": "3273660"
  },
  {
    "text": "which again highlights the Simplicity of bicep thank you amen all right just as we're wrapping up",
    "start": "3273660",
    "end": "3281099"
  },
  {
    "text": "though so that's a bicep playground in terms of what's coming for the future I've mentioned that we're on version 0.7",
    "start": "3281099",
    "end": "3288059"
  },
  {
    "text": "um at this link there's the uh the road map for the bicep team which gives you the breakdown of the things that they're",
    "start": "3288059",
    "end": "3294119"
  },
  {
    "text": "working on from well version 0.7 has just been released it was released I think just last week but you've got",
    "start": "3294119",
    "end": "3299460"
  },
  {
    "text": "version 0.8.9 up to version 1.0 so you can see exactly what they're working on and you can contribute either issues to",
    "start": "3299460",
    "end": "3305760"
  },
  {
    "text": "that bugs or contribute to the code base as well so this is where you can see what's coming that's a good place to look at if",
    "start": "3305760",
    "end": "3312300"
  },
  {
    "text": "you're interested so in terms of what we've seen so far um",
    "start": "3312300",
    "end": "3317760"
  },
  {
    "text": "I hope I've demonstrated very clearly to you because I think I have that bicep is way simpler than arm templates",
    "start": "3317760",
    "end": "3323520"
  },
  {
    "text": "significantly so the important point though is that is 100 arm compatible you're not losing",
    "start": "3323520",
    "end": "3329460"
  },
  {
    "text": "anything by going to bicep there's it's a risk-free venture you know you just go there it'll be simpler and easier job",
    "start": "3329460",
    "end": "3335880"
  },
  {
    "text": "done for me that's that's a no-brainer you've seen some of the Tooling in vs code that is excellent the visual studio",
    "start": "3335880",
    "end": "3343559"
  },
  {
    "text": "tooling like if you're familiar if you use that it's not really there vs code's really the tool to use",
    "start": "3343559",
    "end": "3349040"
  },
  {
    "text": "and the composability and reusability that you saw as we started to make use of modules the loading of Json files and",
    "start": "3349040",
    "end": "3355859"
  },
  {
    "text": "how that how bicep pretty much punches arm in the face and tells it to do what it wants to do is really really good it",
    "start": "3355859",
    "end": "3362640"
  },
  {
    "text": "makes things significantly easier as you would in your code starting to split up modules in kind of a single",
    "start": "3362640",
    "end": "3368040"
  },
  {
    "text": "responsibility pattern bicep allows you to achieve that much easier and therefore you're making",
    "start": "3368040",
    "end": "3374460"
  },
  {
    "text": "um easier things to understand less cognitive load for your deployments and more reliable and quality deployments",
    "start": "3374460",
    "end": "3382400"
  },
  {
    "text": "so with all that in mind my challenge to all of you is if you're using arm templates today",
    "start": "3382980",
    "end": "3389040"
  },
  {
    "text": "go and grab bicep install it whether it be in Azure CLI or just locally decompile it and just start breaking it",
    "start": "3389040",
    "end": "3396240"
  },
  {
    "text": "apart see what it looks like have a bit of a play you'll find for the most part it'll decompile just fine and it'll be",
    "start": "3396240",
    "end": "3402359"
  },
  {
    "text": "very obvious so you can split it up into files and then just start referencing via modules you might have to add a few extra",
    "start": "3402359",
    "end": "3408720"
  },
  {
    "text": "outputs so you can reference some of the properties if that's what you need to do pass between modules but for the most",
    "start": "3408720",
    "end": "3414240"
  },
  {
    "text": "part it'll be pretty easy if you're new to deployments don't waste your time with them just go to bicep",
    "start": "3414240",
    "end": "3419460"
  },
  {
    "text": "it's so much easier and you'll get the benefits of arm anyway so hopefully that",
    "start": "3419460",
    "end": "3426119"
  },
  {
    "text": "um has convinced you to use bicep I'm using it all the time and I haven't looked back I would encourage you to do",
    "start": "3426119",
    "end": "3432660"
  },
  {
    "text": "so but thank you very much and if there's any questions shoot them at me",
    "start": "3432660",
    "end": "3437700"
  },
  {
    "text": "thank you yes",
    "start": "3437700",
    "end": "3441540"
  },
  {
    "text": "uh yeah it's a good question I probably just approach it where they might be logically related first but if that's",
    "start": "3451859",
    "end": "3458099"
  },
  {
    "text": "proving too large then start to slice it down even further I guess you know that's a bit subjective as to what's too",
    "start": "3458099",
    "end": "3465000"
  },
  {
    "text": "much of a cognitive load for you but if you're starting to spend a minute scrolling down a page you're probably thinking oh maybe I need to split that",
    "start": "3465000",
    "end": "3470940"
  },
  {
    "text": "out that's kind of how I'd approach a bit of an ambiguous answer but yeah do a little don't try and do too much",
    "start": "3470940",
    "end": "3476520"
  },
  {
    "text": "straight at the outset because you can take it too granular and then it doesn't make any sense you might want to well",
    "start": "3476520",
    "end": "3482160"
  },
  {
    "text": "you might want to do that and then group it by directory for example and say these are the resources for X yeah",
    "start": "3482160",
    "end": "3489119"
  },
  {
    "text": "any other questions yes",
    "start": "3489119",
    "end": "3494540"
  },
  {
    "text": "it is it deploys exactly the same way as arms so it's item potent so it depends",
    "start": "3503880",
    "end": "3510480"
  },
  {
    "text": "on the type of deployment that you do if you do incremental and the resources already exist it sort of won't touch",
    "start": "3510480",
    "end": "3516119"
  },
  {
    "text": "them it'll change them if you change the properties but if you do a full deployment it'll still do the same but",
    "start": "3516119",
    "end": "3521579"
  },
  {
    "text": "if it detects that um resources that are in the resource Group but not in the template it'll",
    "start": "3521579",
    "end": "3527040"
  },
  {
    "text": "remove those resources which is standard behavior for both for arm deployments anyway so the point being it it will not",
    "start": "3527040",
    "end": "3535040"
  },
  {
    "text": "recreate more resources if you do multiple deployments of the same template exactly the same way arm works",
    "start": "3535040",
    "end": "3542359"
  },
  {
    "text": "only only if you specify a complete deployment which is which is not the default the default deployment is",
    "start": "3546799",
    "end": "3553260"
  },
  {
    "text": "incremental so it will leave those resources there unless you specify an extra parameter that says do a a full or",
    "start": "3553260",
    "end": "3559920"
  },
  {
    "text": "complete deployment one of those two yeah so our four will will do a",
    "start": "3559920",
    "end": "3566400"
  },
  {
    "text": "deployment such that it needs to exactly match the template if there's stuff in there that isn't in the template get it",
    "start": "3566400",
    "end": "3573059"
  },
  {
    "text": "out of that Resource Group and just do exactly as the template says the default is incremental which will just deploy",
    "start": "3573059",
    "end": "3578880"
  },
  {
    "text": "the stuff that's in the template but ignore anything else if it does exist if that makes sense yeah",
    "start": "3578880",
    "end": "3584700"
  },
  {
    "text": "yes",
    "start": "3584700",
    "end": "3587240"
  },
  {
    "text": "0.7 for example do they generate different arm templates",
    "start": "3600980",
    "end": "3608579"
  },
  {
    "text": "um not really because when when it doesn't understand something it'll have a look",
    "start": "3608579",
    "end": "3614160"
  },
  {
    "text": "at the Json Pro what looks like Json properties in bicep and still output the relevant arm templates anyway that's how",
    "start": "3614160",
    "end": "3621240"
  },
  {
    "text": "it's maintained compatibility yeah think that that's just more important",
    "start": "3621240",
    "end": "3626339"
  },
  {
    "text": "when you want to keep the place upon your Source control do you keep the device applied and the source control or",
    "start": "3626339",
    "end": "3632460"
  },
  {
    "text": "the Army template that is keep the bicep file yeah that's all you that's all You'll Ever Need it's pretty flexible",
    "start": "3632460",
    "end": "3640260"
  },
  {
    "text": "um so that's why it was ready to go production like at version 0.4 because you could write it allowed you the",
    "start": "3640260",
    "end": "3645720"
  },
  {
    "text": "flexibility to write some stuff that was unsupported but would still be smart enough to say look here's the general structure I like output as an arm",
    "start": "3645720",
    "end": "3652140"
  },
  {
    "text": "template and Life's good sometimes when you're using it with things like a Powershell you'll need to do that anyway",
    "start": "3652140",
    "end": "3657839"
  },
  {
    "text": "so generate the arm template and do the deployment and I think",
    "start": "3657839",
    "end": "3663660"
  },
  {
    "text": "uh bicep currently doesn't support deployment from a remote URL like arm does you have to compile it to an arm",
    "start": "3663660",
    "end": "3670799"
  },
  {
    "text": "template put it a remote URL like a GitHub repository and then you can do the",
    "start": "3670799",
    "end": "3676740"
  },
  {
    "text": "deployment having said that you can um send a bicep file to what's called a",
    "start": "3676740",
    "end": "3682380"
  },
  {
    "text": "bicep registry It's actually an Azure container registry and manage your bicep files that way so that you can do our",
    "start": "3682380",
    "end": "3688380"
  },
  {
    "text": "back over your your bicep files for deployment in your subscriptions but that's a long answer to say",
    "start": "3688380",
    "end": "3694980"
  },
  {
    "text": "um don't I guess don't bother with version 0.4 just go to version 0.7 they'll all be forward compatible and",
    "start": "3694980",
    "end": "3700980"
  },
  {
    "text": "the stuff that it outputs is just 100 um compatible so you're not you're not really losing anything regardless of",
    "start": "3700980",
    "end": "3706319"
  },
  {
    "text": "version any other questions yes",
    "start": "3706319",
    "end": "3712380"
  },
  {
    "text": "uh no it just operates off the standard parameter file that that arm templates use yeah",
    "start": "3713760",
    "end": "3721020"
  },
  {
    "text": "any other questions alrighty well thank you very much for attending uh everyone I know it's a bit",
    "start": "3721020",
    "end": "3726960"
  },
  {
    "text": "late in the day I really appreciate your attendance uh if there's any doubts at all green tickets in the Box good to go",
    "start": "3726960",
    "end": "3732780"
  },
  {
    "text": "thank you everyone [Applause]",
    "start": "3732780",
    "end": "3738959"
  }
]