[
  {
    "text": "hopefully cool so hello everyone",
    "start": "4520",
    "end": "11219"
  },
  {
    "text": "um it's great to be here in NC first time NC for me first time also as well so",
    "start": "11219",
    "end": "17279"
  },
  {
    "text": "it's amazing to be here uh I'm as you probably know uh we're here to",
    "start": "17279",
    "end": "22800"
  },
  {
    "text": "discuss about some uh web performance apis for both monitoring and improving the performance of your app and this is",
    "start": "22800",
    "end": "30240"
  },
  {
    "text": "me uh you can find me on the web as white combinator um I'm now an engineer at madalia doing",
    "start": "30240",
    "end": "37380"
  },
  {
    "text": "front-end stuff and I also I'm a mentor at tech labs by the way uh who's here",
    "start": "37380",
    "end": "43680"
  },
  {
    "text": "doing front-end working with front-end or cool yeah just one yeah quite a few",
    "start": "43680",
    "end": "48960"
  },
  {
    "text": "as I expected uh so before we start I do have a couple disclaimers so the first",
    "start": "48960",
    "end": "55079"
  },
  {
    "text": "one is that uh whenever something sounds like a lot of content or really deep uh",
    "start": "55079",
    "end": "60360"
  },
  {
    "text": "check this Emoji it means we can have further discussions after the session the second thing is I know that 60",
    "start": "60360",
    "end": "66780"
  },
  {
    "text": "Minutes is a lot of time so it might get boring sometimes but I'll try my best",
    "start": "66780",
    "end": "71939"
  },
  {
    "text": "not to using memes and demos",
    "start": "71939",
    "end": "77159"
  },
  {
    "text": "and the last thing is that I have to give it a forzino because the idea for this title of this talk is from his",
    "start": "77159",
    "end": "84060"
  },
  {
    "text": "session from back 2016 uh where he was going through some new stuff in HTML so",
    "start": "84060",
    "end": "90479"
  },
  {
    "text": "yeah so a bit of uh why the why is behind at the session so I'd like to go from this",
    "start": "90479",
    "end": "98520"
  },
  {
    "text": "into okay let's first discuss what we already know so we already know for",
    "start": "98520",
    "end": "105060"
  },
  {
    "text": "example that we have HTTP 2 uh it brings like multiplexing and uh the push API",
    "start": "105060",
    "end": "110880"
  },
  {
    "text": "and a lot of other interesting stuff uh we know we should compress JavaScript most of the time which is it but we also",
    "start": "110880",
    "end": "117659"
  },
  {
    "text": "have Alternatives like broadly and people keep building more interesting ways to do that",
    "start": "117659",
    "end": "123259"
  },
  {
    "text": "we also know that image cdns are a good idea there are even some research just",
    "start": "123259",
    "end": "129000"
  },
  {
    "text": "mostly by Google uh where they show that you can reduce from 40 to 80 percent the amount of your",
    "start": "129000",
    "end": "136260"
  },
  {
    "text": "in the size of your images if you serve them via CDN plus it saves you a lot of",
    "start": "136260",
    "end": "141360"
  },
  {
    "text": "work for example transforming images and manipulating that uh we also know we should try to",
    "start": "141360",
    "end": "147900"
  },
  {
    "text": "optimize uh the third party scripts in our app so for example first we can",
    "start": "147900",
    "end": "153480"
  },
  {
    "text": "defer loading them but we can also replace we know that we can for example replace low Dash with like smaller lips",
    "start": "153480",
    "end": "160800"
  },
  {
    "text": "a little moment.js with date FNS or other smaller Alternatives we can also",
    "start": "160800",
    "end": "165959"
  },
  {
    "text": "update some of the libraries so react is one example of library that each major",
    "start": "165959",
    "end": "171300"
  },
  {
    "text": "the bottle size gets smaller and smaller uh there is the prpl pattern out there",
    "start": "171300",
    "end": "177480"
  },
  {
    "text": "that is uh you probably heard Google speaking a lot about that and if we have",
    "start": "177480",
    "end": "183420"
  },
  {
    "text": "some I don't know really have work happening on the main thread we can offload that to workers uh that's one",
    "start": "183420",
    "end": "190860"
  },
  {
    "text": "thing we can also do uh we know about bundle splitting probably so if we have a huge bundle",
    "start": "190860",
    "end": "197700"
  },
  {
    "text": "that's going to take a lot to download and to be parsed by the VM in the browser we can split that into smaller",
    "start": "197700",
    "end": "203640"
  },
  {
    "text": "chunks and then we get to something like that and if we do bundle split we can also",
    "start": "203640",
    "end": "210720"
  },
  {
    "text": "have Dynamic Imports and basically uh for example save users from downloading",
    "start": "210720",
    "end": "216120"
  },
  {
    "text": "uh things in the browser that they might not end using end up using",
    "start": "216120",
    "end": "221459"
  },
  {
    "text": "um we also last but not least we have list list virtualization which is",
    "start": "221459",
    "end": "226620"
  },
  {
    "text": "something really interesting when we have like lots of content to render in the browser so if we do that we are for",
    "start": "226620",
    "end": "234000"
  },
  {
    "text": "example sparing from doing a lot of things in the Dawn and we render only what's visible",
    "start": "234000",
    "end": "239760"
  },
  {
    "text": "so but yeah we're doing these like at least most of them right",
    "start": "239760",
    "end": "246720"
  },
  {
    "text": "uh yet um about uh four years ago I had a similar",
    "start": "246720",
    "end": "253439"
  },
  {
    "text": "session where I spoke about some of these items and it was in 2018",
    "start": "253439",
    "end": "258600"
  },
  {
    "text": "so it's some of the things like people were already doing back then but I constantly see myself uh facing some",
    "start": "258600",
    "end": "266400"
  },
  {
    "text": "realities of the industry we work on and to show you that I have this map it's",
    "start": "266400",
    "end": "272580"
  },
  {
    "text": "basically some statistic data of people accessing our app across the globe and",
    "start": "272580",
    "end": "279240"
  },
  {
    "text": "in some parts of the world like U.S and Europe uh we have good numbers but we have some parts of the world where we",
    "start": "279240",
    "end": "285900"
  },
  {
    "text": "have like red or and then the good one so it was like you I constantly face oh that's kind of",
    "start": "285900",
    "end": "292979"
  },
  {
    "text": "problem happening and this brings me back to this so that is the problem of",
    "start": "292979",
    "end": "298259"
  },
  {
    "text": "fixing web performance because we see a lot of things that this sounds simple so you just go like okay draw the legs uh",
    "start": "298259",
    "end": "304560"
  },
  {
    "text": "Drive I think it's simple like drawing horse but then you just add these tiny steps and yeah I'm trying to be fun so",
    "start": "304560",
    "end": "313500"
  },
  {
    "text": "that is uh the key the the goals for the stock so that was the first part the why",
    "start": "313500",
    "end": "319259"
  },
  {
    "text": "I'm here I want to talk with you a lot about measuring uh about measuring using the platform we have about optimizing",
    "start": "319259",
    "end": "326280"
  },
  {
    "text": "using the platform uh then I'm gonna reflect about why we are all here and",
    "start": "326280",
    "end": "331800"
  },
  {
    "text": "then some closing thoughts so the first part is over kudos so uh for the next part I would like to",
    "start": "331800",
    "end": "339180"
  },
  {
    "text": "start with a bit of a reflection so if I said this web app is fast what does it",
    "start": "339180",
    "end": "344340"
  },
  {
    "text": "means to be fast and I'd like to propose an exercise so if you guys had to",
    "start": "344340",
    "end": "349380"
  },
  {
    "text": "summarize a performance web performance or being fast in one metric what would",
    "start": "349380",
    "end": "354720"
  },
  {
    "text": "be your pick for example like load time responsiveness what else uh I really",
    "start": "354720",
    "end": "360300"
  },
  {
    "text": "want to hear for you so if you could uh I'll leave that uh for first five",
    "start": "360300",
    "end": "366600"
  },
  {
    "text": "seconds and I want to collect the opinions of you about that uh",
    "start": "366600",
    "end": "374099"
  },
  {
    "text": "yeah it's it's crazy because 45 seconds and like a lot of time but when you have",
    "start": "376560",
    "end": "382020"
  },
  {
    "text": "the silence it's like a weird silence but yeah I want to hear some I'd send",
    "start": "382020",
    "end": "387240"
  },
  {
    "text": "you that I'm gonna be giving out stickers or if you're the first one to answer I got discount codes or I can pay",
    "start": "387240",
    "end": "393780"
  },
  {
    "text": "a point but yeah um another 10 seconds and we're good to",
    "start": "393780",
    "end": "400139"
  },
  {
    "text": "go or maybe we could we go to go now I think most of people can so",
    "start": "400139",
    "end": "406259"
  },
  {
    "text": "for this um for the next step I have this one demo uh basically What's Happening Here is I have this input",
    "start": "406259",
    "end": "412860"
  },
  {
    "text": "field and I'm typing things and you can see that as I'm typing on the right it takes a lot of time for the numbers to",
    "start": "412860",
    "end": "419340"
  },
  {
    "text": "show up on the left and there's a point that I gotta stop typing so otherwise my",
    "start": "419340",
    "end": "425220"
  },
  {
    "text": "Chrome is going to crash and then I have to wait for a given delay and then I'm gonna see the numbers",
    "start": "425220",
    "end": "431460"
  },
  {
    "text": "and then I have to wait again to see more numbers and that's like really poor experience and you could think okay this",
    "start": "431460",
    "end": "438300"
  },
  {
    "text": "is like a virtual example you are kind of on purpose blocking the main thread but examples of that happen a lot out",
    "start": "438300",
    "end": "445259"
  },
  {
    "text": "there and that's why we have behaviors that are for example this one that is called rage clicking so it's when we as",
    "start": "445259",
    "end": "451080"
  },
  {
    "text": "users we want to get so much one thing and it's like taking some time so we start clicking more and more",
    "start": "451080",
    "end": "456380"
  },
  {
    "text": "and it happened so much that we even have metrics uh to to properly address",
    "start": "456380",
    "end": "462180"
  },
  {
    "text": "that so we have for example first input delay or time to interactive and others",
    "start": "462180",
    "end": "468060"
  },
  {
    "text": "and that's the thing a lot of loading metrics they don't capture uh the real",
    "start": "468060",
    "end": "474000"
  },
  {
    "text": "user experience we talk about a lot about loading but that's only one part of the thing and we need to think in",
    "start": "474000",
    "end": "481080"
  },
  {
    "text": "terms of uh which metrics actually get what matters uh so yeah we hear a lot of",
    "start": "481080",
    "end": "487080"
  },
  {
    "text": "people bragging on Twitter on conferences and Etc like okay my app is",
    "start": "487080",
    "end": "492419"
  },
  {
    "text": "loading in this amount of time and uh yeah this is a fine side but the thing is load metrics are not a single number",
    "start": "492419",
    "end": "500879"
  },
  {
    "text": "um and back to the question uh I really hope this is gonna work yeah",
    "start": "500879",
    "end": "507000"
  },
  {
    "text": "live stuff is always so yeah those were your answers so we have a lot of load",
    "start": "507000",
    "end": "513120"
  },
  {
    "text": "time response yeah the ones I mentioned we also have interactive uh load yeah we",
    "start": "513120",
    "end": "520020"
  },
  {
    "text": "have load a lot of things if I were to list some metrics uh for that we should",
    "start": "520020",
    "end": "525480"
  },
  {
    "text": "measure I would start first uh with perceived load speed for example that is how quickly the app can load and render",
    "start": "525480",
    "end": "533160"
  },
  {
    "text": "all of the content oops Miss click uh there is another thing that also has to do with load that is load responsiveness",
    "start": "533160",
    "end": "540060"
  },
  {
    "text": "so okay everything loaded but how much it is necessary for the JavaScript on",
    "start": "540060",
    "end": "545100"
  },
  {
    "text": "that page to to run and the page can become interactive we have then re runtime responsiveness that was for",
    "start": "545100",
    "end": "551820"
  },
  {
    "text": "example the issue in the first example so everything was loaded but still there are some complex operation happening in",
    "start": "551820",
    "end": "558000"
  },
  {
    "text": "there uh and we also have smoothness so it's like about the animations and the",
    "start": "558000",
    "end": "563040"
  },
  {
    "text": "transitions in the app are they are they flowing as they should and actually we even have more metrics we can for",
    "start": "563040",
    "end": "569100"
  },
  {
    "text": "example measure how much of unexpected layout shifts are happening on the page in a way that the users like I didn't",
    "start": "569100",
    "end": "575519"
  },
  {
    "text": "expect that to happen that's not good and we have a lot of tools in the lab",
    "start": "575519",
    "end": "581459"
  },
  {
    "text": "that we can use to measure that kind of thing Lighthouse is one of them but we",
    "start": "581459",
    "end": "586560"
  },
  {
    "text": "have like a huge Suite of options these days but the thing is the only way to truly know how",
    "start": "586560",
    "end": "594120"
  },
  {
    "text": "our app or site or whatever is performing for the users is to measure that as they are using that and I have",
    "start": "594120",
    "end": "601800"
  },
  {
    "text": "one example from history uh has anyone had ever heard about this guy",
    "start": "601800",
    "end": "607320"
  },
  {
    "text": "great yeah otherwise it wouldn't work so basically uh this guy ran the first",
    "start": "607320",
    "end": "613560"
  },
  {
    "text": "experiment uh with real users that I know in history back in couple centuries ago and basically he gathered 200 monks",
    "start": "613560",
    "end": "621180"
  },
  {
    "text": "all together and Ireland then and he ran a current like an electric shot through",
    "start": "621180",
    "end": "628680"
  },
  {
    "text": "them and basically with that he was measuring the latency of the electricity and he happened to discover osmosis back",
    "start": "628680",
    "end": "637140"
  },
  {
    "text": "then majorly latency like that and nowadays uh browsers they do gives us",
    "start": "637140",
    "end": "643140"
  },
  {
    "text": "like a lot of apis native in the platform that we can use to measure and",
    "start": "643140",
    "end": "648180"
  },
  {
    "text": "to make our stuff faster so we can go from this to stuff I didn't know because",
    "start": "648180",
    "end": "654540"
  },
  {
    "text": "I cannot say what you know or not so that's the whole point of the talk stuff I didn't know and measuring with let's",
    "start": "654540",
    "end": "660959"
  },
  {
    "text": "start with measuring with the platform to make it easier I get it I gathered",
    "start": "660959",
    "end": "666300"
  },
  {
    "text": "four different groups for that so uh we have the group that is General stuff and",
    "start": "666300",
    "end": "672000"
  },
  {
    "text": "those are gonna be like apis that are the basis for the other apis we'll see then we have timing apis there's",
    "start": "672000",
    "end": "679200"
  },
  {
    "text": "basically a about figuring out how much something is taken and then we have profiling and sensors",
    "start": "679200",
    "end": "685620"
  },
  {
    "text": "so starting with General stuff um we have done height rest API that's",
    "start": "685620",
    "end": "692399"
  },
  {
    "text": "basically the metrics for not the metrics basically the basis for everything we're gonna see and the",
    "start": "692399",
    "end": "698399"
  },
  {
    "text": "performance of server layout and stability and Page visibility page visibility uh let's start with that",
    "start": "698399",
    "end": "705120"
  },
  {
    "text": "because that's one of the most simple ones so basically uh this is the full code to use this API we can either",
    "start": "705120",
    "end": "710880"
  },
  {
    "text": "access the current state of a browser tab or we can register an event listener and that's really handy because there",
    "start": "710880",
    "end": "718140"
  },
  {
    "text": "are a lot of scenarios where you can use that we can cancel Network requests for example if the browser tab goes idle we",
    "start": "718140",
    "end": "725700"
  },
  {
    "text": "can suspend like not only sockets but any kind of communication going on and",
    "start": "725700",
    "end": "730980"
  },
  {
    "text": "we can pause interactive stuff like videos or Caruso's or any kind of have animation we might be doing",
    "start": "730980",
    "end": "737600"
  },
  {
    "text": "and there's even more stuff we can do so we can start fetching for example things in the background let's say we have we",
    "start": "737600",
    "end": "744959"
  },
  {
    "text": "did code splitting and we have like parts of the bundle that are not necessary at this moment we can start",
    "start": "744959",
    "end": "750300"
  },
  {
    "text": "fetching them when the browser tab is idle and then once the users back we can they're gonna have the full thing uh we",
    "start": "750300",
    "end": "757200"
  },
  {
    "text": "can use that monitor for example if they're slow scrolling or navigating from one specific part of the app and",
    "start": "757200",
    "end": "764459"
  },
  {
    "text": "okay uh apparently users are leaving when they get to this so it's another kind of metric and you can fraud all",
    "start": "764459",
    "end": "771180"
  },
  {
    "text": "things like set timeout or any other things that you have scheduled over time uh the other one is performance Observer",
    "start": "771180",
    "end": "778700"
  },
  {
    "text": "and this we're gonna see it a lot throughout the whole session so it's basically a way that you can subscribe",
    "start": "778700",
    "end": "784980"
  },
  {
    "text": "to any almost any kind of performance related event and basically you register",
    "start": "784980",
    "end": "790680"
  },
  {
    "text": "callbacks that are going to be fired when the browser is Idle so that's good because it doesn't prevent it from doing",
    "start": "790680",
    "end": "796620"
  },
  {
    "text": "any kind of work uh the API is it's going to be almost the same so you instantiate this performance Observer",
    "start": "796620",
    "end": "803579"
  },
  {
    "text": "object and you have this type so basically we'll have different types of entries that we can start listening to",
    "start": "803579",
    "end": "811380"
  },
  {
    "text": "and before we see a lot of things uh let's just talk about layout and",
    "start": "811380",
    "end": "816600"
  },
  {
    "text": "stability that is one of the uses we have so many website I don't know if",
    "start": "816600",
    "end": "821639"
  },
  {
    "text": "that happened to you but I've has happened a lot to me so in our websites we have elements shifting because",
    "start": "821639",
    "end": "828060"
  },
  {
    "text": "something loaded so we have parts of the app we start loading something maybe a request or something that is async and",
    "start": "828060",
    "end": "835440"
  },
  {
    "text": "then once it's done then boo something shifts in the user and that's not good for from the ux perspective so we can",
    "start": "835440",
    "end": "843480"
  },
  {
    "text": "use the performance sub server to spot these events so we listen for layout",
    "start": "843480",
    "end": "848940"
  },
  {
    "text": "shift events and it's going to give us something like this that is basically a lot of metadata about the Dead one event",
    "start": "848940",
    "end": "856500"
  },
  {
    "text": "including for example if it was triggered by some some input field and the thing is we can use that with",
    "start": "856500",
    "end": "864540"
  },
  {
    "text": "some tools like this uh this is the film strip wheel uh and we can use that one",
    "start": "864540",
    "end": "870899"
  },
  {
    "text": "API with that and we can spot layout and stability so this one example is in my personal web page when I was fetching my",
    "start": "870899",
    "end": "877620"
  },
  {
    "text": "avatar from somewhere else so I had this blank space with nothing and then the",
    "start": "877620",
    "end": "882660"
  },
  {
    "text": "text and then after a couple of seconds you would see this Avatar in the blank space so that's considered bad for",
    "start": "882660",
    "end": "888720"
  },
  {
    "text": "example and honestly we spot that kind of thing we can do something to address it like for example add some skeleton",
    "start": "888720",
    "end": "896699"
  },
  {
    "text": "Library like react Crunch and loader so we should we are probably very",
    "start": "896699",
    "end": "901980"
  },
  {
    "text": "familiarized with these uh from maybe Facebook Instagram or actually this kind",
    "start": "901980",
    "end": "907260"
  },
  {
    "text": "of resource is coming like everywhere these days so yeah that was the first part",
    "start": "907260",
    "end": "913639"
  },
  {
    "text": "uh the timing apis I split them in two parts",
    "start": "913639",
    "end": "919100"
  },
  {
    "text": "so yeah to make it easier and not to bore you out so the first part is are",
    "start": "919320",
    "end": "924660"
  },
  {
    "text": "these three user timing element timing and event timing so user timing is the",
    "start": "924660",
    "end": "930180"
  },
  {
    "text": "most generic one uh basically we create marks uh first and before and after",
    "start": "930180",
    "end": "936660"
  },
  {
    "text": "making some operation and then we do this measure thing that is basically basically calculating Deltas on top of",
    "start": "936660",
    "end": "942600"
  },
  {
    "text": "our records and then we observe for measure and the first thing is that this",
    "start": "942600",
    "end": "948240"
  },
  {
    "text": "plays really well with the dev developer tools we got in the browser so for example uh you can see uh the",
    "start": "948240",
    "end": "954120"
  },
  {
    "text": "highlighted the two events that we marked using this API and we can use that with a lot of custom metrics that",
    "start": "954120",
    "end": "960600"
  },
  {
    "text": "we can create like for example to check whether the Styles or the scripts on that page finish blocking or whether the",
    "start": "960600",
    "end": "968040"
  },
  {
    "text": "funds were loaded and of course we have libraries for doing that nowadays but under the hood libraries are probably",
    "start": "968040",
    "end": "974399"
  },
  {
    "text": "doing that and to check whether some element like a hero image or some",
    "start": "974399",
    "end": "980100"
  },
  {
    "text": "important part of the experience was displayed displayed and this this plays",
    "start": "980100",
    "end": "985320"
  },
  {
    "text": "really well with other tools so for example you can this is a speed curve there is an observability tool for",
    "start": "985320",
    "end": "991380"
  },
  {
    "text": "front-end so you can register user timing entries and you can for example watch how how they evolve over time like",
    "start": "991380",
    "end": "999480"
  },
  {
    "text": "for the good for the bad the other thing is element timing so",
    "start": "999480",
    "end": "1005240"
  },
  {
    "text": "as the name suggests it's about measuring render time of stuff and the good thing is that this one is the",
    "start": "1005240",
    "end": "1011839"
  },
  {
    "text": "basics for the basis for largest content for paint there is one metric that we hear a lot in Lighthouse For example and",
    "start": "1011839",
    "end": "1018980"
  },
  {
    "text": "the API is quite simple actually it's just this HML attribute that you can add in some of the elements unfortunately",
    "start": "1018980",
    "end": "1025819"
  },
  {
    "text": "you cannot add it in all the elements it works with images text blocks and like a",
    "start": "1025819",
    "end": "1031280"
  },
  {
    "text": "small subset of HTML stuff and this is the kind of response you get from the",
    "start": "1031280",
    "end": "1036500"
  },
  {
    "text": "API so again you have a lot of metadata about how rendering for that one element happened and",
    "start": "1036500",
    "end": "1043699"
  },
  {
    "text": "again this plays really well with other measuring tools like speed curve that is",
    "start": "1043699",
    "end": "1049640"
  },
  {
    "text": "you can track it over time and track the key parts of the app for example how they are",
    "start": "1049640",
    "end": "1055660"
  },
  {
    "text": "evolving over time and not only speed curve you can use like other tools and",
    "start": "1055660",
    "end": "1061580"
  },
  {
    "text": "you get like similar results and last but not least we have event",
    "start": "1061580",
    "end": "1066919"
  },
  {
    "text": "timing so even timing uh I love the names so it's about the time for",
    "start": "1066919",
    "end": "1072860"
  },
  {
    "text": "processing something and it's the time it's the basis for first input delay so it is the basis for the issue that we",
    "start": "1072860",
    "end": "1079760"
  },
  {
    "text": "had in that one first example and again we use that with the",
    "start": "1079760",
    "end": "1084980"
  },
  {
    "text": "performance of server and we listen for first input and here we can for example",
    "start": "1084980",
    "end": "1090440"
  },
  {
    "text": "calculate the first input delay using some values that the API gives us and",
    "start": "1090440",
    "end": "1095900"
  },
  {
    "text": "you we can use that to measure the latency of different kinds of things for example we can measure the latency from",
    "start": "1095900",
    "end": "1102320"
  },
  {
    "text": "the moment we click on something until for example let's say we have a table and we have some uh some huge operation",
    "start": "1102320",
    "end": "1109100"
  },
  {
    "text": "going on when we want to reorder maybe we want to filter so we want to measure how this is hap how long it's taking so",
    "start": "1109100",
    "end": "1115520"
  },
  {
    "text": "that's one example or if we have a slider that is basically a way to filter data on a huge uh dashboard so that",
    "start": "1115520",
    "end": "1123320"
  },
  {
    "text": "these are scenarios that we can use to measure that um this is my favorite part profiling uh",
    "start": "1123320",
    "end": "1130580"
  },
  {
    "text": "for profiling we have long tasks which happens probably to be the most popular one and we have user agent specific",
    "start": "1130580",
    "end": "1137840"
  },
  {
    "text": "memory and JS self-profiling apis uh the long tasks one as the name suggests it",
    "start": "1137840",
    "end": "1144860"
  },
  {
    "text": "is for spotting things that are taking too long like our input in that one example and it has this hard value of 50",
    "start": "1144860",
    "end": "1152600"
  },
  {
    "text": "milliseconds and it's not like a magic number like the ones we use in CSS is more like because it's based on this",
    "start": "1152600",
    "end": "1158900"
  },
  {
    "text": "user-centric model called Rail and it's also useful to detect when the main",
    "start": "1158900",
    "end": "1164240"
  },
  {
    "text": "thread is blocked because that means you don't have your UI is not responsive and",
    "start": "1164240",
    "end": "1169700"
  },
  {
    "text": "it's so important that it's the basis for both time to interactive and total blocking time",
    "start": "1169700",
    "end": "1174880"
  },
  {
    "text": "and uh by the way these are the long tasks we can spot them in Dev tools as",
    "start": "1174880",
    "end": "1180799"
  },
  {
    "text": "well so the same things with spot and Dev tools with this API you can spot them when they're running in our user's",
    "start": "1180799",
    "end": "1186500"
  },
  {
    "text": "machine and this is what it looks like for example when the main thread is blocked so not only the input Fields but",
    "start": "1186500",
    "end": "1195020"
  },
  {
    "text": "also uh any kind of input or any links anything we have once we block the main",
    "start": "1195020",
    "end": "1201140"
  },
  {
    "text": "thread with the long task It all becomes unresponsive to use that API Again The Observer and",
    "start": "1201140",
    "end": "1207860"
  },
  {
    "text": "then you watch for this one specific event and then as a result it's gonna give you like metadata about the event",
    "start": "1207860",
    "end": "1214059"
  },
  {
    "text": "for example not only the duration but also what triggered that one long task",
    "start": "1214059",
    "end": "1220460"
  },
  {
    "text": "um following that we have the self-profiling API so basically you instantiate a new profiler so this one",
    "start": "1220460",
    "end": "1227179"
  },
  {
    "text": "is not using performance Observer and then you start doing like whatever that you think is my this heavy stuff and",
    "start": "1227179",
    "end": "1234500"
  },
  {
    "text": "then you can for example track in a service or somewhere else the stack Trace you'll get for that and",
    "start": "1234500",
    "end": "1241880"
  },
  {
    "text": "it's really handy for profiling operations that you know there are there are there are going to be like heavy",
    "start": "1241880",
    "end": "1248480"
  },
  {
    "text": "stuff on the main thread or it's also handing for example when you include some third-party script and you think it",
    "start": "1248480",
    "end": "1254480"
  },
  {
    "text": "might be causing some performance issue and these things are more common that we think you can also use that for example",
    "start": "1254480",
    "end": "1260480"
  },
  {
    "text": "debug that and you can combine that with other metrics that we saw or that we're",
    "start": "1260480",
    "end": "1266539"
  },
  {
    "text": "gonna see last but not least we have the user agent specific memory so it's a",
    "start": "1266539",
    "end": "1272660"
  },
  {
    "text": "long name and uh in the past we had the similar API that",
    "start": "1272660",
    "end": "1277940"
  },
  {
    "text": "was the JavaScript Heap API that basically we would check the the memory Heap uh in the browser but this one is",
    "start": "1277940",
    "end": "1285440"
  },
  {
    "text": "an improved version it's more it's they're not doing the same thing but it's the best way to to manage your",
    "start": "1285440",
    "end": "1290840"
  },
  {
    "text": "memory right now and it works based on waiting for garbage collection to happen and if doesn't happen it's gonna Force",
    "start": "1290840",
    "end": "1297919"
  },
  {
    "text": "after 20 seconds and that's really helpful because memory leaks they are",
    "start": "1297919",
    "end": "1303320"
  },
  {
    "text": "really really easy to happen in the browser even though we don't think so for example when we forget to register",
    "start": "1303320",
    "end": "1310700"
  },
  {
    "text": "some to unregister some uh event listener or when we don't close a worker",
    "start": "1310700",
    "end": "1316700"
  },
  {
    "text": "or when we have like sparse arrays so or when we accumulate a lot of objects in",
    "start": "1316700",
    "end": "1322340"
  },
  {
    "text": "arrays and there is this session um it by Google Chrome it's it's it's",
    "start": "1322340",
    "end": "1327380"
  },
  {
    "text": "really interesting it's only about spotting uh garbage collection problems but uh if I were to mention one example",
    "start": "1327380",
    "end": "1334820"
  },
  {
    "text": "would be the is so can you see where's the issue here",
    "start": "1334820",
    "end": "1341139"
  },
  {
    "text": "or even better is B gonna be garbage collected",
    "start": "1341960",
    "end": "1348340"
  },
  {
    "text": "yes no yeah because that's the thing in browser garbage collection happens not",
    "start": "1352000",
    "end": "1358400"
  },
  {
    "text": "because of use but whether it's accessible or not and B is accessible if",
    "start": "1358400",
    "end": "1363860"
  },
  {
    "text": "we do for example object.b so because of that uh we are like we have this memory",
    "start": "1363860",
    "end": "1369679"
  },
  {
    "text": "leak so sometimes uh memory leaks are tricking the browser and with this API",
    "start": "1369679",
    "end": "1376220"
  },
  {
    "text": "we can measure it like that and it's especially helpful again just like",
    "start": "1376220",
    "end": "1382940"
  },
  {
    "text": "the profiling one when you have apps that handle a lot of data in the browser so from my experience uh I can remember",
    "start": "1382940",
    "end": "1389780"
  },
  {
    "text": "two scenarios one of them was for example when we had a map that would plot a hundred thousand uh data points",
    "start": "1389780",
    "end": "1396140"
  },
  {
    "text": "uh in this one map box map so this was perfect for spotting issues uh and",
    "start": "1396140",
    "end": "1403100"
  },
  {
    "text": "that's also helpful when you you're introducing new feature or you want to a B test something to figure out where",
    "start": "1403100",
    "end": "1408620"
  },
  {
    "text": "whether you are introducing or not technical dab when it comes to memory and when we see all these free apis",
    "start": "1408620",
    "end": "1415100"
  },
  {
    "text": "together like the kind of residues that they gave us we can kind of see the potential we have for for better",
    "start": "1415100",
    "end": "1421460"
  },
  {
    "text": "understanding what's happening in our app uh",
    "start": "1421460",
    "end": "1426559"
  },
  {
    "text": "the second part of timing so now that we took it back from timing we can talk about it again so on the second half of",
    "start": "1426559",
    "end": "1433220"
  },
  {
    "text": "timing we have resource navigation and server timing uh for resource timing as",
    "start": "1433220",
    "end": "1439220"
  },
  {
    "text": "the name suggests it's better this is the full resource cycle in the browser uh and the resource timing apis allows",
    "start": "1439220",
    "end": "1447020"
  },
  {
    "text": "us to visualize that for example uh checking it whether something was",
    "start": "1447020",
    "end": "1452539"
  },
  {
    "text": "fulfilled via cash or not so if we have some part of the app that we expected to be cached in the browser so that it",
    "start": "1452539",
    "end": "1458900"
  },
  {
    "text": "doesn't have to be fetched again we can use this API to monitor whether this is happening or not and the amount of",
    "start": "1458900",
    "end": "1466220"
  },
  {
    "text": "information we can get from this API is really huge I don't expect you to read all that I just wanted to show that it's",
    "start": "1466220",
    "end": "1472640"
  },
  {
    "text": "it's really a lot of information and uh with navigation timing we can also",
    "start": "1472640",
    "end": "1479840"
  },
  {
    "text": "for example uh inspect uh the time to first bite that again is probably some",
    "start": "1479840",
    "end": "1486140"
  },
  {
    "text": "Metric we've heard from uh light house or some other laboratory too like that",
    "start": "1486140",
    "end": "1491320"
  },
  {
    "text": "and we can do a lot of combinations possible like we can check whether our",
    "start": "1491320",
    "end": "1498260"
  },
  {
    "text": "service workers are working as we want them to whether they're probably caching",
    "start": "1498260",
    "end": "1503780"
  },
  {
    "text": "or we can only we can check some parts of the response time from from our stuff",
    "start": "1503780",
    "end": "1509780"
  },
  {
    "text": "and the last one is server timing and uh as the name suggests this one is meant",
    "start": "1509780",
    "end": "1516080"
  },
  {
    "text": "mostly to be used in the server so it's based on HTTP headers that you send in this format so you have one metric you",
    "start": "1516080",
    "end": "1523640"
  },
  {
    "text": "add the duration for this one metric and one description for that and it's really",
    "start": "1523640",
    "end": "1528679"
  },
  {
    "text": "handy to measure anything that's happening on the server in a way that can be seen on the browser I'm gonna add",
    "start": "1528679",
    "end": "1535820"
  },
  {
    "text": "a screenshot in a minute so let's say anything that might be taken some time in the server like uh authenticating",
    "start": "1535820",
    "end": "1541940"
  },
  {
    "text": "some requests or go running things from a templates engine or calling other",
    "start": "1541940",
    "end": "1548360"
  },
  {
    "text": "services like an email service or something like that so let's say for example we want to tell the browser how",
    "start": "1548360",
    "end": "1555620"
  },
  {
    "text": "much it's taking for the database and the templating processing so we would send these headers and in the browser",
    "start": "1555620",
    "end": "1563120"
  },
  {
    "text": "once the frontender opens developer tools they would see this like I know it's kind of short but it it shows in",
    "start": "1563120",
    "end": "1570380"
  },
  {
    "text": "developer tools how much the exact values we sent so I like to see this metric as one way that you can use to uh",
    "start": "1570380",
    "end": "1578720"
  },
  {
    "text": "that backenders can help frontenders help them because when you're inspecting",
    "start": "1578720",
    "end": "1584720"
  },
  {
    "text": "something on the front end you can okay this is the issue and you can directly approach the back end okay what's taking",
    "start": "1584720",
    "end": "1590659"
  },
  {
    "text": "too long is this part of the thing in the back end so they can straightly address that and you have a lot of tools",
    "start": "1590659",
    "end": "1597320"
  },
  {
    "text": "out there to make its move forward to adopt these apis so most of them comes",
    "start": "1597320",
    "end": "1602419"
  },
  {
    "text": "as middlewares so we have middlewares for node.js servers like Express but we have also middlewares for Java servers",
    "start": "1602419",
    "end": "1609740"
  },
  {
    "text": "or PHP servers Etc last one session sensors uh this is",
    "start": "1609740",
    "end": "1615559"
  },
  {
    "text": "these are probably one of the most popular ones and it's really short we have battery and network information so",
    "start": "1615559",
    "end": "1622640"
  },
  {
    "text": "battery status again really simple API from a space we can check information about the current status of the battery",
    "start": "1622640",
    "end": "1629419"
  },
  {
    "text": "but also how long it's going to take for it to for example to run out of battery or you can check whether it's charging",
    "start": "1629419",
    "end": "1635960"
  },
  {
    "text": "or not or discharging and you can register event listeners and this way",
    "start": "1635960",
    "end": "1641600"
  },
  {
    "text": "you can adapt the experience when the user has got no not a lot of battery for example then you cannot run something",
    "start": "1641600",
    "end": "1648020"
  },
  {
    "text": "that's going to take a lot of CPU on a low end device",
    "start": "1648020",
    "end": "1653240"
  },
  {
    "text": "uh on a similar way we have Network information so again we can check the current status and we can register an",
    "start": "1653240",
    "end": "1660020"
  },
  {
    "text": "event listener and this is the kind of information we have so it's going to tell first whether it's like two three",
    "start": "1660020",
    "end": "1666980"
  },
  {
    "text": "or four G connection or even if it's a slow 2G connection it also has this round trip time that it's really helpful",
    "start": "1666980",
    "end": "1673880"
  },
  {
    "text": "uh an estimation of how long it's taking for downloads and last but not least whether on a mobile phone for example",
    "start": "1673880",
    "end": "1680480"
  },
  {
    "text": "the save data mode is activated so that's really helpful because if you're you're an iPhone and you activate data",
    "start": "1680480",
    "end": "1687200"
  },
  {
    "text": "saver and you have a web app you can from the web app identify that and for example uh not download things and we",
    "start": "1687200",
    "end": "1696679"
  },
  {
    "text": "have tons of possible use cases for that uh so you can switch one of my favorite",
    "start": "1696679",
    "end": "1702380"
  },
  {
    "text": "one is switching between high and low uh definition for Content you're serving",
    "start": "1702380",
    "end": "1708380"
  },
  {
    "text": "for so for example if the user is on 4G you can show a video but if it's 2g or",
    "start": "1708380",
    "end": "1715039"
  },
  {
    "text": "3G you can show only the fun but Neo and then if they click you play the video and it's also helpful when you want to",
    "start": "1715039",
    "end": "1722419"
  },
  {
    "text": "decide whether to preload some resources or not so if you want to download a bundle that the user might need in the",
    "start": "1722419",
    "end": "1729380"
  },
  {
    "text": "future that might be a good thing but if they don't have a lot of data that might be a bad thing so using this API it kind",
    "start": "1729380",
    "end": "1736220"
  },
  {
    "text": "of helps you making that one decision and a lot of other decisions you can defer Things based on that and you can",
    "start": "1736220",
    "end": "1743360"
  },
  {
    "text": "even adapt to situations when they are offline and you can even Force offline mode so for example I've seen in video",
    "start": "1743360",
    "end": "1749779"
  },
  {
    "text": "call apps when the network is so bad that they won't allow you to call at all",
    "start": "1749779",
    "end": "1754880"
  },
  {
    "text": "because they're gonna they cannot kind of assume that it's going to be like for experience",
    "start": "1754880",
    "end": "1760460"
  },
  {
    "text": "um and again you can warn users that that's another really common thing so if they're gonna download something it's",
    "start": "1760460",
    "end": "1765500"
  },
  {
    "text": "like oh you you're doing that over your data you're sure you want to proceed and",
    "start": "1765500",
    "end": "1770539"
  },
  {
    "text": "that kind of thing and last but not least metrics so you can for example gather data about the network of your",
    "start": "1770539",
    "end": "1775700"
  },
  {
    "text": "users uh this is one example with react so we're basically based on the",
    "start": "1775700",
    "end": "1781399"
  },
  {
    "text": "connection type we are checking whether we want to render a video or a high-end like a high resolution image or a low",
    "start": "1781399",
    "end": "1789200"
  },
  {
    "text": "resolution image and this concept isn't new we have posts from back training 18 about the idea of",
    "start": "1789200",
    "end": "1796279"
  },
  {
    "text": "connection aware components and we even have libraries uh for example this one",
    "start": "1796279",
    "end": "1802039"
  },
  {
    "text": "that they gave us a lot of hooks using network information and battery status",
    "start": "1802039",
    "end": "1807380"
  },
  {
    "text": "to allow us to to do things in react and this is one example like Twitter does",
    "start": "1807380",
    "end": "1814220"
  },
  {
    "text": "that so if the user has enabled the data saver mode uh they're gonna render only",
    "start": "1814220",
    "end": "1820039"
  },
  {
    "text": "this low resolution preview and then if the user clicks the image then they're gonna see the full image and then you're",
    "start": "1820039",
    "end": "1826460"
  },
  {
    "text": "gonna download that woof yeah",
    "start": "1826460",
    "end": "1833380"
  },
  {
    "text": "now we can talk about improving with the platform halfway guys",
    "start": "1833899",
    "end": "1840760"
  },
  {
    "text": "so the first thing we have are resource hints so basically uh resource hints are work",
    "start": "1841039",
    "end": "1849500"
  },
  {
    "text": "on the assumption that if we can predict some kind of behavior or some action",
    "start": "1849500",
    "end": "1855020"
  },
  {
    "text": "from the user then we can optimize based on that and they are really simple we're",
    "start": "1855020",
    "end": "1860600"
  },
  {
    "text": "gonna see that most of them are just HML attributes that we use but they are effective if done the right way and",
    "start": "1860600",
    "end": "1867020"
  },
  {
    "text": "based on metrics so they look like this uh hopefully you can read so you have like",
    "start": "1867020",
    "end": "1874039"
  },
  {
    "text": "free connect preload of DNS prefetch prefetch and pre-render and you use",
    "start": "1874039",
    "end": "1880279"
  },
  {
    "text": "these attributes and links or sometimes with script tags or sometimes with images and the first one in this list is",
    "start": "1880279",
    "end": "1888260"
  },
  {
    "text": "preconnect so this one is really I would say it's probably the least popular of",
    "start": "1888260",
    "end": "1894559"
  },
  {
    "text": "these ones but it does have a lot so basically uh it tells the browser to start setting up connections uh with the",
    "start": "1894559",
    "end": "1901760"
  },
  {
    "text": "server so this includes for example TLS negotiations and handshakes in TCP and",
    "start": "1901760",
    "end": "1908899"
  },
  {
    "text": "depending on depending on your contact States helps you reduce a lot of round",
    "start": "1908899",
    "end": "1914120"
  },
  {
    "text": "trip latency so it looks like this if we trace this timeline where we have first",
    "start": "1914120",
    "end": "1919940"
  },
  {
    "text": "our HTML loading and then our CSS loading let's say we use custom fonts let's say we have two different fonts in",
    "start": "1919940",
    "end": "1926480"
  },
  {
    "text": "our uh in our web app so after that we can start loading the",
    "start": "1926480",
    "end": "1931700"
  },
  {
    "text": "font the first front and then the second front and only after that we're gonna see the rendered on the browser",
    "start": "1931700",
    "end": "1938299"
  },
  {
    "text": "if we pre-connect we can move this bar to the very beginning because we can",
    "start": "1938299",
    "end": "1943760"
  },
  {
    "text": "kind of tell okay go ahead and start connecting to Google fonts or whatever it is where we have our phones the",
    "start": "1943760",
    "end": "1951140"
  },
  {
    "text": "second thing is DNS prefetch so as the name suggests it's about domains so it",
    "start": "1951140",
    "end": "1957080"
  },
  {
    "text": "kind of warns the browser about what domains it needs to look up for and again it reduces the overall load time",
    "start": "1957080",
    "end": "1964360"
  },
  {
    "text": "and this one is really handy when you have resources outside of your domain so",
    "start": "1964360",
    "end": "1970039"
  },
  {
    "text": "on a CDN or on something like Google fonts as I mentioned or some other some",
    "start": "1970039",
    "end": "1975440"
  },
  {
    "text": "other domain pre-fetching is about doing stuff in the",
    "start": "1975440",
    "end": "1981679"
  },
  {
    "text": "browser idle time so it starts fetching what you need for a page in the background but it doesn't get to",
    "start": "1981679",
    "end": "1988100"
  },
  {
    "text": "rendered but the thing is It's tricky because uh it's about on it's it's about",
    "start": "1988100",
    "end": "1995120"
  },
  {
    "text": "working with predictions so we got to be really sure that we are fetching stuff for a route of our app that the users",
    "start": "1995120",
    "end": "2001480"
  },
  {
    "text": "are actually going to visit because otherwise we're just spending their connections",
    "start": "2001480",
    "end": "2006779"
  },
  {
    "text": "and pre-render is just the same but one step up one step further so we not only",
    "start": "2006779",
    "end": "2014500"
  },
  {
    "text": "prefetch stuff but we even render in the background so you can be providing a really smooth",
    "start": "2014500",
    "end": "2021640"
  },
  {
    "text": "experience where the person goes to uh you to a part to route of your app and",
    "start": "2021640",
    "end": "2026860"
  },
  {
    "text": "everything is already prepared but at the same time you have like an even higher gamble because you're not only spending network but you're spending",
    "start": "2026860",
    "end": "2033580"
  },
  {
    "text": "their processor the other thing are priority hints",
    "start": "2033580",
    "end": "2039820"
  },
  {
    "text": "um so basically uh they allow you to either increase or lower the priority for some",
    "start": "2039820",
    "end": "2047320"
  },
  {
    "text": "scenario it can be for example the largest if you have something that is supposed to be your largest content for",
    "start": "2047320",
    "end": "2052839"
  },
  {
    "text": "paint uh maybe an image a hero some key section of the app you can increase priority for that and you can for",
    "start": "2052839",
    "end": "2059980"
  },
  {
    "text": "example use that to decrease priority for things that are not visible to the user in the first moment or as we call",
    "start": "2059980",
    "end": "2065618"
  },
  {
    "text": "above the fold and we can use that for example to reprioritize the scripts as well so this is how we use uh priority",
    "start": "2065619",
    "end": "2074320"
  },
  {
    "text": "hints as an HTML attribute so we have fresh priority and this can be either",
    "start": "2074320",
    "end": "2079720"
  },
  {
    "text": "high or low and again with images or so in this one",
    "start": "2079720",
    "end": "2085898"
  },
  {
    "text": "example uh we are first we are setting a high priority for the header or it could",
    "start": "2085899",
    "end": "2091179"
  },
  {
    "text": "be for the logo anything that's key to your experience and in the cruiser example we are setting a lower priority",
    "start": "2091179",
    "end": "2098140"
  },
  {
    "text": "for things there are there are only the next images so we don't need them right now and we can also use that with",
    "start": "2098140",
    "end": "2103660"
  },
  {
    "text": "scripts so whether we have some Library being uh added uh we can play with the",
    "start": "2103660",
    "end": "2109660"
  },
  {
    "text": "priorities and we can also do that with the fetch API so",
    "start": "2109660",
    "end": "2114940"
  },
  {
    "text": "this is like an extra configuration we can pass so basically we set priority",
    "start": "2114940",
    "end": "2120460"
  },
  {
    "text": "either low or high so that's that's really helpful for for example scheduling uh things and by the way",
    "start": "2120460",
    "end": "2127839"
  },
  {
    "text": "we'll speak about scheduling in a minute um we also have responsive images so",
    "start": "2127839",
    "end": "2135160"
  },
  {
    "text": "basically um this is from Google this data yeah",
    "start": "2135160",
    "end": "2140380"
  },
  {
    "text": "images in the desktop and the tablet they can be like two to four times uh",
    "start": "2140380",
    "end": "2145540"
  },
  {
    "text": "larger than the mobile ones so if we only have this one set of images what's going to happen is either the person on",
    "start": "2145540",
    "end": "2152260"
  },
  {
    "text": "the desktop they're gonna have like uh not so good resolution or the person not the tablet or any other mobile phone or",
    "start": "2152260",
    "end": "2159099"
  },
  {
    "text": "any other mobile device they're going to be downloading extra stuff that don't probably don't need so",
    "start": "2159099",
    "end": "2164440"
  },
  {
    "text": "with this one extra HTML attribute that's called Source set we can avoid",
    "start": "2164440",
    "end": "2170200"
  },
  {
    "text": "that so it basically looks like this and it doesn't replace the source attribute",
    "start": "2170200",
    "end": "2175960"
  },
  {
    "text": "as an extra thing and basically you can set for example different versions of",
    "start": "2175960",
    "end": "2181359"
  },
  {
    "text": "the same image based on some Ratio or some width Ratio or some device pixel",
    "start": "2181359",
    "end": "2188079"
  },
  {
    "text": "ratio there was this um the next two things are native stuff",
    "start": "2188079",
    "end": "2194500"
  },
  {
    "text": "that we are used to have for our own Solutions the first one is native laser loading so we have plenty of libraries",
    "start": "2194500",
    "end": "2201880"
  },
  {
    "text": "out there for doing laser loading uh but now we have this in the browser as well",
    "start": "2201880",
    "end": "2207220"
  },
  {
    "text": "so it looks like this again an attribute that you can say loading equals to lazy",
    "start": "2207220",
    "end": "2212619"
  },
  {
    "text": "and for now you can use that with images and iframes and basically it works like",
    "start": "2212619",
    "end": "2219160"
  },
  {
    "text": "this so if you have something that is off uh the screen uh if you don't use",
    "start": "2219160",
    "end": "2225099"
  },
  {
    "text": "that you would be probably downloading that uh if you use that then you'll see",
    "start": "2225099",
    "end": "2230320"
  },
  {
    "text": "that uh these contents for example images are only going to be downloaded in the network tab as you scroll and as",
    "start": "2230320",
    "end": "2236920"
  },
  {
    "text": "they become available in the viewport and there are even some studies uh as",
    "start": "2236920",
    "end": "2243220"
  },
  {
    "text": "always by Google uh on the results of that in some different companies and",
    "start": "2243220",
    "end": "2248800"
  },
  {
    "text": "they figure out that lazy loading iframes had really really good results so it helped reducing the first content",
    "start": "2248800",
    "end": "2255579"
  },
  {
    "text": "for paint and it also helped reducing the first input delay",
    "start": "2255579",
    "end": "2260980"
  },
  {
    "text": "um and I had some good results as well in my previous company where we started laser loading iframes where this API was",
    "start": "2260980",
    "end": "2268660"
  },
  {
    "text": "available and the last but not least in this session and I know I said this before",
    "start": "2268660",
    "end": "2274780"
  },
  {
    "text": "but this one is really my favorite one is the native scheduler so if we think",
    "start": "2274780",
    "end": "2280119"
  },
  {
    "text": "about scheduling in the browser right now we have some Primitives so we have",
    "start": "2280119",
    "end": "2285160"
  },
  {
    "text": "set timeout we have set interval we have both request animation frame and request idle callback and if we have workers we",
    "start": "2285160",
    "end": "2293079"
  },
  {
    "text": "also have post message which acts as a scheduling mechanism but the thing is",
    "start": "2293079",
    "end": "2298359"
  },
  {
    "text": "scheduling in the browser is tricky because we have to use the same scheduler so react has a scheduler some",
    "start": "2298359",
    "end": "2306220"
  },
  {
    "text": "apps might have scheduler for example Google Maps they have their own scheduler and having more than one",
    "start": "2306220",
    "end": "2312400"
  },
  {
    "text": "scheduler uh lead probably leads to Resource fighting amongst these",
    "start": "2312400",
    "end": "2318460"
  },
  {
    "text": "different schedulers and this happens because we don't have proper scheduling Primitives and last but not least we",
    "start": "2318460",
    "end": "2323859"
  },
  {
    "text": "still have to think about the browser work we still have to think about rendering garbage collection",
    "start": "2323859",
    "end": "2329260"
  },
  {
    "text": "Etc so this is kind of a realization in the front-end word these days that we",
    "start": "2329260",
    "end": "2335020"
  },
  {
    "text": "need better scheduling Primitives and people are are aware of that that's why",
    "start": "2335020",
    "end": "2340660"
  },
  {
    "text": "we have this API that's on the way and basically this native scheduler is",
    "start": "2340660",
    "end": "2347020"
  },
  {
    "text": "supposed to be a more robust solution that is directly integrated into",
    "start": "2347020",
    "end": "2352240"
  },
  {
    "text": "different Loop and most of the things are promised based and it allows you to",
    "start": "2352240",
    "end": "2357400"
  },
  {
    "text": "control and schedule things in a more flexible but at the same time United Way so that you don't have each framework or",
    "start": "2357400",
    "end": "2364300"
  },
  {
    "text": "each app sometimes implementing their own scheduling Solutions around the very few Primitives we get and the good thing",
    "start": "2364300",
    "end": "2370960"
  },
  {
    "text": "is though so this is really really well aligned with the work that the react core team has been doing they are even",
    "start": "2370960",
    "end": "2376720"
  },
  {
    "text": "part of the discussions and not only react but polymer teams some teams at Google and Chrome and the whole web",
    "start": "2376720",
    "end": "2383680"
  },
  {
    "text": "standards Community they're all working together on that there's a really good talk by the way uh about this whole",
    "start": "2383680",
    "end": "2390280"
  },
  {
    "text": "topic and doing both on and off Main thread loading this one apis it this new",
    "start": "2390280",
    "end": "2397960"
  },
  {
    "text": "API is kind of an umbrella of apis so the my favorite ones are these four post",
    "start": "2397960",
    "end": "2404740"
  },
  {
    "text": "tasks you'd wait and is input pending let's explore some of them so post task",
    "start": "2404740",
    "end": "2412960"
  },
  {
    "text": "as the name suggests it allows you to schedule something to be executed and",
    "start": "2412960",
    "end": "2418060"
  },
  {
    "text": "it's it's promise based but it's really configurable so you can",
    "start": "2418060",
    "end": "2424420"
  },
  {
    "text": "for example Define different priorities it can be user blocking or it can be something that that doesn't have like",
    "start": "2424420",
    "end": "2431260"
  },
  {
    "text": "really good not high priority we can also Define delays for some tasks WE",
    "start": "2431260",
    "end": "2436900"
  },
  {
    "text": "Post and it gets really really nice when we start for example working with task",
    "start": "2436900",
    "end": "2443859"
  },
  {
    "text": "controllers because then we have signals and we can check the status of signals",
    "start": "2443859",
    "end": "2450460"
  },
  {
    "text": "and we can also use them to change the priority of something from background tasks to blocking or vice versa and we",
    "start": "2450460",
    "end": "2457720"
  },
  {
    "text": "can have even abort some signal so that's that's really great scheduling that nowadays we would only get if we",
    "start": "2457720",
    "end": "2464380"
  },
  {
    "text": "use the library or something like the react scheduler and Airbnb for example",
    "start": "2464380",
    "end": "2469599"
  },
  {
    "text": "they are already using some parts of the apis the ones that are usable for improving their experience",
    "start": "2469599",
    "end": "2476320"
  },
  {
    "text": "the second one is is input panning so um it's part of the Navigator uh that's",
    "start": "2476320",
    "end": "2482980"
  },
  {
    "text": "scheduling and you can basically use that to stop doing something if you have",
    "start": "2482980",
    "end": "2488200"
  },
  {
    "text": "to handle input so it's it's it would be like a fit for the",
    "start": "2488200",
    "end": "2494500"
  },
  {
    "text": "problem we had in the beginning and the nice thing is that you can even filter what kind of inputs we want to we we",
    "start": "2494500",
    "end": "2501760"
  },
  {
    "text": "want to listen to so we can for example just say okay I'm interested in mouse or in key down Advanced and this one was uh",
    "start": "2501760",
    "end": "2509859"
  },
  {
    "text": "is a work mostly of Facebook and again they're using and this is like another signal that it's really really",
    "start": "2509859",
    "end": "2516700"
  },
  {
    "text": "aligned with the react seam and the last one for this API is the used",
    "start": "2516700",
    "end": "2522940"
  },
  {
    "text": "one and the most of this API is probably the most abstract at this point out of this",
    "start": "2522940",
    "end": "2529660"
  },
  {
    "text": "umbrella and most of the examples are just like it's a promise based thing that you that basically allows you to",
    "start": "2529660",
    "end": "2536440"
  },
  {
    "text": "yield execution back to the browser and we can combine that of course with as",
    "start": "2536440",
    "end": "2541900"
  },
  {
    "text": "input painting for example to resume doing something if there is no input pending uh but I think that um this",
    "start": "2541900",
    "end": "2549820"
  },
  {
    "text": "library is called main thread scheduling it's kind of it's not a polyfill but it's basically heavily inspired by this",
    "start": "2549820",
    "end": "2556599"
  },
  {
    "text": "pack uh and if we check this Library documentation we have like better examples for example this one where we",
    "start": "2556599",
    "end": "2564339"
  },
  {
    "text": "are going through a lot of files and all the lines in this a lot of lots of files to perform some search operation and if",
    "start": "2564339",
    "end": "2572500"
  },
  {
    "text": "we get the yielding thing in the in our mind we can go back to the example we had before uh of the input problem and",
    "start": "2572500",
    "end": "2581380"
  },
  {
    "text": "Etc and we can think how could we improve that so this is the source code for for that one problem and this",
    "start": "2581380",
    "end": "2589420"
  },
  {
    "text": "resource for operation I'm I'm kind of mimicking something that's really heavy it could be for example uh some data",
    "start": "2589420",
    "end": "2598000"
  },
  {
    "text": "filtering or something like that we could turn that code a bit and for",
    "start": "2598000",
    "end": "2603940"
  },
  {
    "text": "example promote it to generator and inside this generator we yield execution",
    "start": "2603940",
    "end": "2609400"
  },
  {
    "text": "back to the browser so if we see that these are going to be the results so as",
    "start": "2609400",
    "end": "2615520"
  },
  {
    "text": "you can see this API is compatible with suspense uh if you're familiar with 3x suspense and you can see that at no",
    "start": "2615520",
    "end": "2622000"
  },
  {
    "text": "moment I cannot input like it's really smooth and of course I'm gonna see sometimes that it's performing some CPU",
    "start": "2622000",
    "end": "2628420"
  },
  {
    "text": "bound operation but the UI is the UI is just moved all the time and this is the full code for that one I",
    "start": "2628420",
    "end": "2636400"
  },
  {
    "text": "I don't expect you to read out I just wanted more to show that it fits in 40 lines so that's the whole that's the key",
    "start": "2636400",
    "end": "2643000"
  },
  {
    "text": "thing of yielding back to the browser and I was like this when I figured out",
    "start": "2643000",
    "end": "2649300"
  },
  {
    "text": "about these things but there's much more",
    "start": "2649300",
    "end": "2656920"
  },
  {
    "text": "so there are things we can do like with CSS for example we have font display",
    "start": "2656920",
    "end": "2661960"
  },
  {
    "text": "swap to avoid fonts having to wait until they're rendered uh we have will change",
    "start": "2661960",
    "end": "2667540"
  },
  {
    "text": "to optimize animations and transitions uh we can import something once it's",
    "start": "2667540",
    "end": "2674260"
  },
  {
    "text": "visible like a component using intersection Observer we have also sent",
    "start": "2674260",
    "end": "2680140"
  },
  {
    "text": "Beacon for which is another scheduling Primitives uh we can combine canvas and",
    "start": "2680140",
    "end": "2686440"
  },
  {
    "text": "workers with off screen using off-screen canvas so that's a really good way of offloading have canvas stuff outside of",
    "start": "2686440",
    "end": "2693579"
  },
  {
    "text": "the main thread and there are things on the server as well so we have this thing called hsts",
    "start": "2693579",
    "end": "2699960"
  },
  {
    "text": "and basically it allows you to skip the round trip latency that you would have",
    "start": "2699960",
    "end": "2705099"
  },
  {
    "text": "from going to http to https every time you know every time the user types HTTP",
    "start": "2705099",
    "end": "2710859"
  },
  {
    "text": "and you want to send them to the https thing so there's one example and you can avoid even more extra round trips with",
    "start": "2710859",
    "end": "2718180"
  },
  {
    "text": "the quick protocol part of the HTTP free umbrella but uh",
    "start": "2718180",
    "end": "2724240"
  },
  {
    "text": "even though a lot of these things are interesting and Etc I love this session by kites that's called you're not",
    "start": "2724240",
    "end": "2729520"
  },
  {
    "text": "Facebook so it's most of us are not building schedulers or performance",
    "start": "2729520",
    "end": "2735040"
  },
  {
    "text": "monitoring tools on a daily basis so yeah uh you can use observability",
    "start": "2735040",
    "end": "2740440"
  },
  {
    "text": "services like caliber or speech curve or others we have libraries like core web",
    "start": "2740440",
    "end": "2747040"
  },
  {
    "text": "vitals by Google that for example it comes out of the box and create rack Tab and some other applications and even",
    "start": "2747040",
    "end": "2753460"
  },
  {
    "text": "some platforms like virtual they have their own analytics Solutions so yes I",
    "start": "2753460",
    "end": "2758619"
  },
  {
    "text": "would say that most of the times observability services that have sdks built on top of the apis we saw they're",
    "start": "2758619",
    "end": "2765640"
  },
  {
    "text": "gonna serve your our purposes but we can enhance them with libraries like web",
    "start": "2765640",
    "end": "2772300"
  },
  {
    "text": "vitals or we can create our own abstractions on top of these uh and the",
    "start": "2772300",
    "end": "2778180"
  },
  {
    "text": "framework specific abstraction like custom react hooks and this is kind of related to the next",
    "start": "2778180",
    "end": "2784300"
  },
  {
    "text": "bar that is move fast and break nothing so",
    "start": "2784300",
    "end": "2789819"
  },
  {
    "text": "yeah you got the reference um so for example some of these apis",
    "start": "2789819",
    "end": "2795579"
  },
  {
    "text": "we're gonna see that uh they're available in only a subset of browsers so they're not available in Firefox and",
    "start": "2795579",
    "end": "2802839"
  },
  {
    "text": "Safari for example some of them some of them are available everywhere and you",
    "start": "2802839",
    "end": "2808300"
  },
  {
    "text": "might be wondering okay how can I use them if I have users from different browsers",
    "start": "2808300",
    "end": "2814119"
  },
  {
    "text": "um I'm I don't think it's a yes or no question but one solution I came up with",
    "start": "2814119",
    "end": "2819640"
  },
  {
    "text": "and I needed to uh was this Library it's it's like Alpha so don't use it but just",
    "start": "2819640",
    "end": "2825460"
  },
  {
    "text": "get the abstraction and it's basically a library for doing pattern matching in react and basically",
    "start": "2825460",
    "end": "2832180"
  },
  {
    "text": "um let's say we have this app it's supposed to render videos from previews ndcoslo uh editions and this is the full",
    "start": "2832180",
    "end": "2841300"
  },
  {
    "text": "code for the app uh we have suspense wrapping that and uh you will see the",
    "start": "2841300",
    "end": "2847060"
  },
  {
    "text": "kit I'm using this with components and the match components this is the key part and why suspense",
    "start": "2847060",
    "end": "2853599"
  },
  {
    "text": "because I'm lazing loading these component so I'm lazing loading video and the preview components I'm using the",
    "start": "2853599",
    "end": "2860680"
  },
  {
    "text": "library from Google I showed like that is use Network status and then I have these three components with switch and",
    "start": "2860680",
    "end": "2866920"
  },
  {
    "text": "otherwise and I'm pattern matching on top of the network info so",
    "start": "2866920",
    "end": "2872680"
  },
  {
    "text": "the other important part is the suspense bar because this is the key for having the con uh the conditional Imports and",
    "start": "2872680",
    "end": "2880420"
  },
  {
    "text": "then we I use with against the different possible cases so it can be 2G it can be",
    "start": "2880420",
    "end": "2885880"
  },
  {
    "text": "not supported the API might be not supported in the browser like Safari or it can be 3G 4G Etc so for example",
    "start": "2885880",
    "end": "2893460"
  },
  {
    "text": "Safari users where this API is not available they would see that so they",
    "start": "2893460",
    "end": "2898660"
  },
  {
    "text": "they would see that the API is not available and because it's not available I'm not taking the risk I'm rendering the video",
    "start": "2898660",
    "end": "2904500"
  },
  {
    "text": "but if you are in Chrome and this is the example uh yes if you are in Chrome and",
    "start": "2904500",
    "end": "2912339"
  },
  {
    "text": "you have like a good Network in the API you're gonna see this so it's a 4G connection I could detect it and I'm",
    "start": "2912339",
    "end": "2918339"
  },
  {
    "text": "rendering the video but if you are in Chrome and here I'm gonna simulate like low end mobile with",
    "start": "2918339",
    "end": "2926680"
  },
  {
    "text": "like bad internet connection what you're gonna see is just reveal of the video",
    "start": "2926680",
    "end": "2931740"
  },
  {
    "text": "and um the other interesting thing is in these scenarios where I have you will",
    "start": "2931740",
    "end": "2937839"
  },
  {
    "text": "see that in each scenario I'm downloading only the model so here I'm downloading only the preview and here",
    "start": "2937839",
    "end": "2943359"
  },
  {
    "text": "I'm downloading only the video so no extra chunk of code is downloaded that's",
    "start": "2943359",
    "end": "2948460"
  },
  {
    "text": "not necessary so going back to why we're here uh",
    "start": "2948460",
    "end": "2955359"
  },
  {
    "text": "basically we build all these tools uh to run in browsers and it's quite common",
    "start": "2955359",
    "end": "2961780"
  },
  {
    "text": "that we not usually care a lot about which browsers are visiting our app I",
    "start": "2961780",
    "end": "2967599"
  },
  {
    "text": "myself sometimes forget you to do this exercise but whenever I do it's always",
    "start": "2967599",
    "end": "2972760"
  },
  {
    "text": "interesting so for example this is uh some monitoring data from the last three months about which apps which browsers",
    "start": "2972760",
    "end": "2979599"
  },
  {
    "text": "we're using so of course we're gonna see Chrome we're going to see Safari Edge and all of these mainstream browsers",
    "start": "2979599",
    "end": "2984640"
  },
  {
    "text": "there's gonna be Explorer in there as well but the cool thing is when you start exploring more especially if you",
    "start": "2984640",
    "end": "2991420"
  },
  {
    "text": "have like a lot of visitors so you get to see things like this and",
    "start": "2991420",
    "end": "2998140"
  },
  {
    "text": "the more you scroll the the darker it gets so you're gonna see for example",
    "start": "2998140",
    "end": "3003599"
  },
  {
    "text": "blackberries you're gonna see Nokia and you're gonna see even PlayStations accessing the app",
    "start": "3003599",
    "end": "3010440"
  },
  {
    "text": "so yeah we have a lot of browsers out there and you know what else uh what are",
    "start": "3010440",
    "end": "3015540"
  },
  {
    "text": "browsers these so in that browsers like LinkedIn Instagram Facebook they are all",
    "start": "3015540",
    "end": "3021480"
  },
  {
    "text": "browsers and uh not only their browsers but sometimes they have like huge chairs depending on the market you're targeting",
    "start": "3021480",
    "end": "3029339"
  },
  {
    "text": "and these browsers they run on different devices and different connections and",
    "start": "3029339",
    "end": "3035040"
  },
  {
    "text": "for me that was one kind of reality check when I saw that research that basically is uh the first input delay",
    "start": "3035040",
    "end": "3042240"
  },
  {
    "text": "was seven times worse on for mobile users so",
    "start": "3042240",
    "end": "3047640"
  },
  {
    "text": "it's easy to visualize when you see a charge so check out how much more yellow",
    "start": "3047640",
    "end": "3053579"
  },
  {
    "text": "and red zones we have for mobile users and not only that but it's usually easy",
    "start": "3053579",
    "end": "3059880"
  },
  {
    "text": "that we forget about uh bandwidth of our users so we still have some parts of the",
    "start": "3059880",
    "end": "3065579"
  },
  {
    "text": "globe that are where the vast majority are either true or 3G connections and we",
    "start": "3065579",
    "end": "3072900"
  },
  {
    "text": "can see that reflected for example across uh the kinds of connections accessing Twitter and the kinds of",
    "start": "3072900",
    "end": "3079140"
  },
  {
    "text": "connection accessing jumia this is like one of the big e-commerce in Nigeria and",
    "start": "3079140",
    "end": "3084240"
  },
  {
    "text": "not only that but the global 4G picture is like that so having 4G doesn't mean a",
    "start": "3084240",
    "end": "3091800"
  },
  {
    "text": "constant connection speed so this is how much it can vary from a country to",
    "start": "3091800",
    "end": "3096900"
  },
  {
    "text": "another all LTE and these connections devices and browsers they are used by people and",
    "start": "3096900",
    "end": "3104220"
  },
  {
    "text": "research shows that uh basically how long it takes to load the app or performance in general for people is the",
    "start": "3104220",
    "end": "3110940"
  },
  {
    "text": "top one priority even more than for example whether it's easy to use or if they could ex if they could perform the",
    "start": "3110940",
    "end": "3117599"
  },
  {
    "text": "activity they meant to and I love like some researchers in this area because they're really funny so the",
    "start": "3117599",
    "end": "3125339"
  },
  {
    "text": "first one is from back into any in 2009 when they figure out that 40 percent of",
    "start": "3125339",
    "end": "3131819"
  },
  {
    "text": "people in the UK they become physically violent towards their computers years later they did a similar thing in",
    "start": "3131819",
    "end": "3139200"
  },
  {
    "text": "the U.S and was again 33 percent of Americans they had either yelled or screamed or even physically assaulted",
    "start": "3139200",
    "end": "3147300"
  },
  {
    "text": "the computers and then in the same year uh there's this another really",
    "start": "3147300",
    "end": "3152640"
  },
  {
    "text": "interesting research that is basically showing how this impacted the conversion",
    "start": "3152640",
    "end": "3157920"
  },
  {
    "text": "rate uh or the engagement in the app just because of frustration and fast",
    "start": "3157920",
    "end": "3164700"
  },
  {
    "text": "forward time I love this one because it's basically",
    "start": "3164700",
    "end": "3170280"
  },
  {
    "text": "um how much the delay in a web page so they basically mimicked a delay they",
    "start": "3170280",
    "end": "3175500"
  },
  {
    "text": "virtually delayed the thing and they had ECG devices attached to the people and",
    "start": "3175500",
    "end": "3181380"
  },
  {
    "text": "basically this is the effect of that in their heart rates and then people from math from like doctors to figure out",
    "start": "3181380",
    "end": "3187920"
  },
  {
    "text": "that this is kind of like a watching a horror movie alone and of course this reflects in the",
    "start": "3187920",
    "end": "3196140"
  },
  {
    "text": "behavior in the browser so yeah more than half of the people are gonna happen on your app or your site if it takes",
    "start": "3196140",
    "end": "3203339"
  },
  {
    "text": "more than three seconds to load and it's crazy to think that even uh it changes",
    "start": "3203339",
    "end": "3208800"
  },
  {
    "text": "from one part of the globe to another so people from different parts of the world they're gonna have like a different",
    "start": "3208800",
    "end": "3215160"
  },
  {
    "text": "threshold or a different limit of frustration and there are studies around that that show for example that being",
    "start": "3215160",
    "end": "3223079"
  },
  {
    "text": "met with an app in the US is different than in Germany that is different in Australia in Canada so this is this is",
    "start": "3223079",
    "end": "3230579"
  },
  {
    "text": "how important it is to to actually think about how our users are feeling because",
    "start": "3230579",
    "end": "3236280"
  },
  {
    "text": "this directly impacts business and it's crazy to think that um like we know",
    "start": "3236280",
    "end": "3243420"
  },
  {
    "text": "that long tasks they do affect the time to interactive for example but it's crazy to see how much this this changes",
    "start": "3243420",
    "end": "3250619"
  },
  {
    "text": "your conversion rate and it's crazy to see how much it's also worse in in the",
    "start": "3250619",
    "end": "3256140"
  },
  {
    "text": "mobile so in Mobile they take up to 12 times longer like long tests 12 times",
    "start": "3256140",
    "end": "3261480"
  },
  {
    "text": "longer and uh actually half of the load time could be spent",
    "start": "3261480",
    "end": "3267240"
  },
  {
    "text": "just running long tasks and it's it sounds durable when you say like that",
    "start": "3267240",
    "end": "3272460"
  },
  {
    "text": "but when you visualize the conversion rate on a charge decreasing because of",
    "start": "3272460",
    "end": "3277619"
  },
  {
    "text": "that then it's even worse so back to why we're here basically uh",
    "start": "3277619",
    "end": "3284040"
  },
  {
    "text": "people use way more different browsers than we tend to think uh of course",
    "start": "3284040",
    "end": "3289440"
  },
  {
    "text": "depending on your audience and 5G and 4G is not the same across the globe and uh",
    "start": "3289440",
    "end": "3295740"
  },
  {
    "text": "sometimes it's really limiting and yeah being having 4G and uh being in",
    "start": "3295740",
    "end": "3302880"
  },
  {
    "text": "or 5G and uh how fast it is changes from one part to another of the globe and",
    "start": "3302880",
    "end": "3309240"
  },
  {
    "text": "yeah anything that slows down or prevents them the users from accomplishing yeah this is enough",
    "start": "3309240",
    "end": "3314640"
  },
  {
    "text": "prevents them from accomplishing this goal is going to cause frustration and people are gonna quit apps or sites",
    "start": "3314640",
    "end": "3320640"
  },
  {
    "text": "because of frustration so um some closing notes",
    "start": "3320640",
    "end": "3327980"
  },
  {
    "text": "on top of that the first one is always try to associate like a business",
    "start": "3331800",
    "end": "3339119"
  },
  {
    "text": "metrics and performance metrics because we see more and more especially on",
    "start": "3339119",
    "end": "3346140"
  },
  {
    "text": "social networks or some solutions or some libraries they gaming metrics uh",
    "start": "3346140",
    "end": "3352140"
  },
  {
    "text": "just for the sake that's showing their fast but if you do correlate business metrics there's no way to game these",
    "start": "3352140",
    "end": "3358319"
  },
  {
    "text": "metrics because that's actual behave from the users that's like your conversion rate that's the actual impact",
    "start": "3358319",
    "end": "3364020"
  },
  {
    "text": "and it's usually a bad idea to assume that people are going to have like uh not",
    "start": "3364020",
    "end": "3370260"
  },
  {
    "text": "only fast connections but also fast devices it's it's crazy to see the amount of low end devices people have",
    "start": "3370260",
    "end": "3377520"
  },
  {
    "text": "and that's why it's important to test on real networks and um real phones real",
    "start": "3377520",
    "end": "3384059"
  },
  {
    "text": "devices and to collect field metrics uh I know a lot of these apis are exciting",
    "start": "3384059",
    "end": "3391920"
  },
  {
    "text": "and we could start using them like tomorrow but it's also important to avoid observer effect so it's like when",
    "start": "3391920",
    "end": "3398280"
  },
  {
    "text": "you're for example watching some really beautiful animal and use carrot because you're watching",
    "start": "3398280",
    "end": "3404160"
  },
  {
    "text": "it so try some some of these apis they might be heavy or they might impact the",
    "start": "3404160",
    "end": "3409260"
  },
  {
    "text": "performance of your app so it's important that you don't change the performance of your app because you're trying to track the performance of your",
    "start": "3409260",
    "end": "3415619"
  },
  {
    "text": "app uh it's also important that you get rid of the noise in the Matrix print is",
    "start": "3415619",
    "end": "3421200"
  },
  {
    "text": "mostly and in huge scale apps we're gonna have like Bots and we're gonna have like lots of things that are",
    "start": "3421200",
    "end": "3427800"
  },
  {
    "text": "generating numbers and that might be confusing to our reports and to understand the full picture of our app",
    "start": "3427800",
    "end": "3434579"
  },
  {
    "text": "uh there is no Silver Bullet none of the solutions uh they I presented for",
    "start": "3434579",
    "end": "3439680"
  },
  {
    "text": "example are gonna work in 100 of scenarios and none of the metrics I presented are going to be are going to",
    "start": "3439680",
    "end": "3445440"
  },
  {
    "text": "be relevant in 100 of the scenarios so it's important that you identify the core metrics for your business for your",
    "start": "3445440",
    "end": "3451680"
  },
  {
    "text": "app and I know it's a cliche but yeah uh one of the things uh I like is this code",
    "start": "3451680",
    "end": "3457740"
  },
  {
    "text": "by Idris Deming So In God We Trust others must bring data so yeah just just stress data uh don't trust me",
    "start": "3457740",
    "end": "3464460"
  },
  {
    "text": "eight years ago I was saying that Anglo would be the future for example and nowadays I talk about react uh",
    "start": "3464460",
    "end": "3471540"
  },
  {
    "text": "it's not a direct conclusion but it's a closing thought though we're hiring in Medallion uh in a lot of parts of the",
    "start": "3471540",
    "end": "3477780"
  },
  {
    "text": "globe so if you want to do interesting stuff if you want to work in performance squads reach out uh these slides for",
    "start": "3477780",
    "end": "3484140"
  },
  {
    "text": "this one session are going to be available uh in my speaker Deck Profile so yeah you can scan it all the links",
    "start": "3484140",
    "end": "3492540"
  },
  {
    "text": "are going to be there uh if you like that kind of topic as well um",
    "start": "3492540",
    "end": "3498599"
  },
  {
    "text": "I have other sessions about performance and about internals of web apis and internals of react mostly if you want",
    "start": "3498599",
    "end": "3505440"
  },
  {
    "text": "more information about Medallion or if you want to see other sessions this one sessions everything this is the go-to",
    "start": "3505440",
    "end": "3511380"
  },
  {
    "text": "link um as I announced I do have stickers so",
    "start": "3511380",
    "end": "3516780"
  },
  {
    "text": "if you're that kind of person like me uh you can just reach out let's have a chat",
    "start": "3516780",
    "end": "3524339"
  },
  {
    "text": "about performance or whatever and then get some stickers and that's all I had I I don't think we",
    "start": "3524339",
    "end": "3531900"
  },
  {
    "text": "have times for questions if we do you can have questions if we don't I'm gonna be around let's chat thank you",
    "start": "3531900",
    "end": "3538180"
  },
  {
    "text": "[Applause]",
    "start": "3538180",
    "end": "3544660"
  }
]