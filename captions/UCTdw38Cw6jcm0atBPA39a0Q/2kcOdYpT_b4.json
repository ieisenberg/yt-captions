[
  {
    "text": "okay hello everybody it is uh time it's for uh 4 40 here in the uk",
    "start": "1040",
    "end": "7600"
  },
  {
    "text": "it's uh 5 40 uh in oslo certainly can't be in oslo today it's a",
    "start": "7600",
    "end": "13040"
  },
  {
    "text": "real shame i always look forward to ndc oslo every year and i've been going for many years my name is martin beebe i'm a principal",
    "start": "13040",
    "end": "19119"
  },
  {
    "text": "developer advocate at aws and today i'm going to be talking to you about building a real-time",
    "start": "19119",
    "end": "24720"
  },
  {
    "text": "service application in blazer using aws um if you want to contact me i'm at",
    "start": "24720",
    "end": "31359"
  },
  {
    "text": "the biebs on twitter you can see me uh quarter of the way down that screen there at the biebs",
    "start": "31359",
    "end": "37600"
  },
  {
    "text": "and if you've got any questions or anything which come to mind after this or if you're watching the video replay of this then please",
    "start": "37600",
    "end": "44079"
  },
  {
    "text": "just um tweet me at that address and give me any questions that you have and i'll get um",
    "start": "44079",
    "end": "49520"
  },
  {
    "text": "i'll get back to you also if you have any uh requirements for you know a free trial of aws or you want",
    "start": "49520",
    "end": "55680"
  },
  {
    "text": "some credits for aws um i can give you a 50 trial for aws just uh tweet me or dm me at the beebs and i",
    "start": "55680",
    "end": "63359"
  },
  {
    "text": "will set you up with that so without any further ado let's talk a little bit about building real-time service applications",
    "start": "63359",
    "end": "70479"
  },
  {
    "text": "in blazer using aws so we're going to be showing you uh what",
    "start": "70479",
    "end": "76720"
  },
  {
    "text": "i'm talking about in terms of what a real application real-time application is um because there's lots of different",
    "start": "76720",
    "end": "82320"
  },
  {
    "text": "definitions for it so i just want to level set what i'm talking about um i'm going to show you how you could build those sorts",
    "start": "82320",
    "end": "87520"
  },
  {
    "text": "of things with signalr and then i'm going to be showing you how you could build those sorts of things using",
    "start": "87520",
    "end": "92880"
  },
  {
    "text": "serverless technology and in particular we'll be using the lambda service from",
    "start": "92880",
    "end": "97920"
  },
  {
    "text": "aws using c-sharp and then finally i'm going to",
    "start": "97920",
    "end": "103040"
  },
  {
    "text": "show you how you sort of combine them all to build a serverless and blazer application",
    "start": "103040",
    "end": "108159"
  },
  {
    "text": "and one of the advantages of doing that and the whole reason for doing that is is basically the costs involved so to",
    "start": "108159",
    "end": "115600"
  },
  {
    "text": "build the uh the signal our application and to have it working at a certain scale is going to cost me uh",
    "start": "115600",
    "end": "121119"
  },
  {
    "text": "probably hundreds of pounds uh a month hundreds of euros a month to run whereas the serverless application will",
    "start": "121119",
    "end": "127600"
  },
  {
    "text": "only cost me well it cost me very very little but more importantly i actually only pay for",
    "start": "127600",
    "end": "132640"
  },
  {
    "text": "the times that's being invoked and being used so if someone actually makes a request in my on my application and i'm actually paying per",
    "start": "132640",
    "end": "139360"
  },
  {
    "text": "request rather than paying um paying sort of the infrastructure which is just sitting there so",
    "start": "139360",
    "end": "145520"
  },
  {
    "text": "there's the reason i'm moving this to a serverless rather than just being a standard uh real-time application is is to try",
    "start": "145520",
    "end": "152000"
  },
  {
    "text": "and save money fundamentally um so when i talk about real-time applications there's lots of different",
    "start": "152000",
    "end": "157599"
  },
  {
    "text": "types of applications that that are real-time and um the the common example would be",
    "start": "157599",
    "end": "162640"
  },
  {
    "text": "something like um a chat application so something like whatsapp when you're texting uh and you're sending a text message to somebody",
    "start": "162640",
    "end": "169120"
  },
  {
    "text": "um that message is obviously being delivered in real time so that they're able to converse and be able to chat",
    "start": "169120",
    "end": "174879"
  },
  {
    "text": "but also things that aren't so obvious are also being done in real time as well so things like notifications and",
    "start": "174879",
    "end": "181920"
  },
  {
    "text": "things like little read notifications like the double tick in whatsapp which shows you that someone's read your",
    "start": "181920",
    "end": "187599"
  },
  {
    "text": "message that's a real-time notification which is happening some event is happening in the real world and you're being",
    "start": "187599",
    "end": "194080"
  },
  {
    "text": "alerted to that event happening and taking place with the double tick and also when",
    "start": "194080",
    "end": "199440"
  },
  {
    "text": "someone's typing a message in whatsapp there's a really irritating uh sort of signal sent to the other user to say",
    "start": "199440",
    "end": "206080"
  },
  {
    "text": "that person's typing so you they can be expecting that sort of stuff so you'll see in lots of different styles",
    "start": "206080",
    "end": "211680"
  },
  {
    "text": "of application from um you know a news website when a breaking news story hits",
    "start": "211680",
    "end": "217200"
  },
  {
    "text": "um we're maybe sending that uh we're pushing that data out to the users",
    "start": "217200",
    "end": "223440"
  },
  {
    "text": "in their browser so it pops up as a little pop-up now to do that we need some way of pushing",
    "start": "223440",
    "end": "229280"
  },
  {
    "text": "data from the server to the actual client user and that's what a real-time application is really it's an application that not",
    "start": "229280",
    "end": "236239"
  },
  {
    "text": "only can you can browse and you can look at information but it can receive events coming in from the",
    "start": "236239",
    "end": "242239"
  },
  {
    "text": "real world so if a breaking news story breaks then that can alert your application and then the ui",
    "start": "242239",
    "end": "249760"
  },
  {
    "text": "can respond by popping up some information that is a breaking news story um multiplayer games so if you've ever",
    "start": "249760",
    "end": "256720"
  },
  {
    "text": "used massive multiplayer online games and other characters their health their",
    "start": "256720",
    "end": "261759"
  },
  {
    "text": "position in the game all of that stuff is being relayed to you in real time probably using",
    "start": "261759",
    "end": "266960"
  },
  {
    "text": "some of the or similar real-time technology like the ones we're going to be showing you today um document collaboration i",
    "start": "266960",
    "end": "274240"
  },
  {
    "text": "uh use things like quip or google docs when you're editing a document and",
    "start": "274240",
    "end": "279680"
  },
  {
    "text": "someone else is participating with that editing they're doing that in real time and they're using real-time web technologies",
    "start": "279680",
    "end": "286080"
  },
  {
    "text": "and um we'll we'll sort of take a look at a couple of those so here's an example on on booking.com",
    "start": "286080",
    "end": "294080"
  },
  {
    "text": "i haven't actually had to book a hotel in an author a long time so this is uh but you know if you go to something like",
    "start": "294080",
    "end": "300080"
  },
  {
    "text": "booking.com and you're looking at a particular hotel you'll know that a certain point in your journey they pop up a little message",
    "start": "300080",
    "end": "306560"
  },
  {
    "text": "like this and it says just booked in london 52 product properties like this uh hilton in london and um there's a number",
    "start": "306560",
    "end": "313680"
  },
  {
    "text": "of ways they could implement this right they could implement this on a timer so uh you know after 15 seconds of browsing",
    "start": "313680",
    "end": "319440"
  },
  {
    "text": "a property they could just put up this this this ui but what i'd like to think is that they're doing this",
    "start": "319440",
    "end": "325039"
  },
  {
    "text": "in real time that um someone actually physically really booked uh this",
    "start": "325039",
    "end": "330160"
  },
  {
    "text": "particular hotel and that they're showing you that in the in the ui now i don't know if that's exactly what they are doing in",
    "start": "330160",
    "end": "335600"
  },
  {
    "text": "this scenario but it's an example of a real-time interaction and it's trying to drive the the user to go and book this hotel",
    "start": "335600",
    "end": "342240"
  },
  {
    "text": "because they're getting this impression that it's being booked all the time maybe they're gonna not able to get a room and so forth but something's",
    "start": "342240",
    "end": "348160"
  },
  {
    "text": "happened somewhere else and the server sent an event down to the browser to say that someone's just booked",
    "start": "348160",
    "end": "355280"
  },
  {
    "text": "that particular property and then the ui is responded accordingly we use a document collaboration system",
    "start": "355280",
    "end": "361120"
  },
  {
    "text": "at aws called quip i think it's by salesforce and it's a bit like google docs i guess",
    "start": "361120",
    "end": "368479"
  },
  {
    "text": "um and one of the cool things that i really like about this application is that you can view um",
    "start": "368720",
    "end": "374960"
  },
  {
    "text": "who's viewing the document and this is really useful if you send out a if you send out a document",
    "start": "374960",
    "end": "380240"
  },
  {
    "text": "we have this thing in aws where we send out the document and we read the document during the meeting",
    "start": "380240",
    "end": "385440"
  },
  {
    "text": "it's a it's a peculiarity of the way that amazon works so we'll all send a document out at the start of the meeting",
    "start": "385440",
    "end": "390720"
  },
  {
    "text": "and then we read it for like 10 minutes and then we get on with the rest of the meeting no everyone's on the same page and",
    "start": "390720",
    "end": "396720"
  },
  {
    "text": "everyone's definitely read the document before we start discussing it now one of the cool things is about the",
    "start": "396720",
    "end": "402319"
  },
  {
    "text": "viewing thing is that you can actually see that other people are connected to the document and they're viewing it they're reading it um so",
    "start": "402319",
    "end": "410319"
  },
  {
    "text": "you know that you know they've received the link for the document you can see that they're you know if there's six people in the meeting you can see that",
    "start": "410319",
    "end": "415599"
  },
  {
    "text": "six people are viewing the document they've all managed to get access to the document that sort of thing um",
    "start": "415599",
    "end": "421039"
  },
  {
    "text": "also it has things like there's a chat functionality in quit and it even has that really annoying ui",
    "start": "421039",
    "end": "426479"
  },
  {
    "text": "about typing where you know someone as they're typing it shows you oh ron swanson's typing",
    "start": "426479",
    "end": "431599"
  },
  {
    "text": "and you can sort of uh yeah it's indicated in real time they're doing that now if you think about what's happening",
    "start": "431599",
    "end": "437360"
  },
  {
    "text": "when that user is pressing keys on their keyboard in that particular message box that's",
    "start": "437360",
    "end": "443039"
  },
  {
    "text": "sending a signal to a server somewhere then that server is then relaying it to everybody which is viewing that document",
    "start": "443039",
    "end": "449039"
  },
  {
    "text": "but someone particular is is is typing so these are this is an example of a",
    "start": "449039",
    "end": "454400"
  },
  {
    "text": "real-time event something happening in the real world being relayed to multiple people in real time to give a better experience",
    "start": "454400",
    "end": "462319"
  },
  {
    "text": "for that user but this is a particularly annoying ui because what i always find is someone starts",
    "start": "462319",
    "end": "467599"
  },
  {
    "text": "typing and you go oh what are they typing so you're waiting you're waiting and then they delete the message and then you oh god",
    "start": "467599",
    "end": "473599"
  },
  {
    "text": "right so it's it there's certain anti-patterns perhaps to real-time applications but um it's it's a useful piece of user",
    "start": "473599",
    "end": "481520"
  },
  {
    "text": "interface which is developing so the vast majority of applications today are going to be",
    "start": "481520",
    "end": "487520"
  },
  {
    "text": "using websockets to achieve this real-time application now that that's whether they're a browser-based",
    "start": "487520",
    "end": "493680"
  },
  {
    "text": "application or whether they are a mobile phone application or even an iot application",
    "start": "493680",
    "end": "498720"
  },
  {
    "text": "they'll probably be using something like web sockets or in fact they'll be using web sockets to um to communicate now websockets",
    "start": "498720",
    "end": "507199"
  },
  {
    "text": "is a it's a protocol which allows us to send messages not only to a server",
    "start": "507199",
    "end": "513760"
  },
  {
    "text": "but receive them back from a server and that's really something which http isn't capable",
    "start": "513760",
    "end": "518959"
  },
  {
    "text": "of you can send a hdb message to a to a server and make a request and it gives you a",
    "start": "518959",
    "end": "524320"
  },
  {
    "text": "response but the server then can't at a later stage send you something else",
    "start": "524320",
    "end": "529760"
  },
  {
    "text": "you know it's a one-time thing and the request always comes from the user making a request of the page or the web",
    "start": "529760",
    "end": "535920"
  },
  {
    "text": "server the server can't ever make a request back to the user well websocket solves that problem by",
    "start": "535920",
    "end": "541360"
  },
  {
    "text": "basically creating or instantiating a pipe between the server and the application",
    "start": "541360",
    "end": "547440"
  },
  {
    "text": "by which communications can travel back and forth and the good thing about websockets is",
    "start": "547440",
    "end": "552959"
  },
  {
    "text": "once you've got the pipe set up there's no serious overheads in terms of the data which is being transmitted",
    "start": "552959",
    "end": "559600"
  },
  {
    "text": "so with a http request every time you make a http request um you know you have to send over the",
    "start": "559600",
    "end": "565760"
  },
  {
    "text": "cookies you have to send over the headers you have to you know there's lots of stuff other than just the request which",
    "start": "565760",
    "end": "571920"
  },
  {
    "text": "goes through but with a websocket connection um you can just send literally the data once",
    "start": "571920",
    "end": "576959"
  },
  {
    "text": "it's started and negotiated and set up then data can freely transfer between",
    "start": "576959",
    "end": "584480"
  },
  {
    "text": "the app and the server or more importantly from the server directly to the app now a websocket negotiation happens",
    "start": "584480",
    "end": "590800"
  },
  {
    "text": "something like this you make a http request to the server and um it's a specifically request um",
    "start": "590800",
    "end": "597120"
  },
  {
    "text": "crafted http request it's called negotiation handshake and it says basically to the server do",
    "start": "597120",
    "end": "602560"
  },
  {
    "text": "you support websockets and the web server reply replies look it's 2020.",
    "start": "602560",
    "end": "608320"
  },
  {
    "text": "of course i do that wasn't always the case years ago um you know there's absolutely servers and",
    "start": "608320",
    "end": "613839"
  },
  {
    "text": "application frameworks which did not support um websockets but in almost all",
    "start": "613839",
    "end": "619760"
  },
  {
    "text": "scenarios nowadays you'll find that mostly the clients and mostly the servers will basically support",
    "start": "619760",
    "end": "625120"
  },
  {
    "text": "websockets and because they both both sides of this equation support websockets",
    "start": "625120",
    "end": "630320"
  },
  {
    "text": "on both sides have to be able to support web sockets to enable it they will be able to create a new pipe",
    "start": "630320",
    "end": "635680"
  },
  {
    "text": "which they can communicate between each other so um when i got into uh real-time",
    "start": "635680",
    "end": "642720"
  },
  {
    "text": "applications or building real-time applications it was sort of around 2008 2009 time and i was using a",
    "start": "642720",
    "end": "649279"
  },
  {
    "text": "framework or i got into a framework called signalr now signalr is an incredible",
    "start": "649279",
    "end": "654959"
  },
  {
    "text": "framework for building these sorts of real-time applications and it means that you don't really need very much",
    "start": "654959",
    "end": "660320"
  },
  {
    "text": "understanding of how websockets work um you can program in c sharp and uh and um",
    "start": "660320",
    "end": "667360"
  },
  {
    "text": "it's got a really nice sort of developer abstraction over the top of it and you know it makes it very simple to",
    "start": "667360",
    "end": "674000"
  },
  {
    "text": "write sort of applications it's an open source um framework um you can still use it today you can use it in.net for",
    "start": "674000",
    "end": "679839"
  },
  {
    "text": "the full framework net or you can use it in uh net core as well um it's um",
    "start": "679839",
    "end": "686800"
  },
  {
    "text": "it is uh open source as i say and it supports a number of different transports so i've talked about web",
    "start": "686800",
    "end": "692240"
  },
  {
    "text": "sockets there are other transports that i'm not going to go into but there are other ways of doing real-time communication and signalr is",
    "start": "692240",
    "end": "698320"
  },
  {
    "text": "really nice in that it it wraps them all up for you and basically chooses whichever is the best",
    "start": "698320",
    "end": "703680"
  },
  {
    "text": "option at the time depending on what the server supports what the application supports and various other things",
    "start": "703680",
    "end": "709519"
  },
  {
    "text": "it's not it's not talking about signalr but it's just an important thing to sort of explain what i'm trying to",
    "start": "709519",
    "end": "714720"
  },
  {
    "text": "build here because when i built my signalr application and i moved to aws which is about a year and",
    "start": "714720",
    "end": "720320"
  },
  {
    "text": "a half ago i decided to see how i could deploy a similar application on aws",
    "start": "720320",
    "end": "726240"
  },
  {
    "text": "now the simplest service at aws i'd say to publish a net application is a",
    "start": "726240",
    "end": "733440"
  },
  {
    "text": "service called amazon elastic beanstalk and what that does is if you're on visual studio let's say",
    "start": "733440",
    "end": "740079"
  },
  {
    "text": "you can build a dotnetapplication.net4 core and you build it and if you have",
    "start": "740079",
    "end": "747839"
  },
  {
    "text": "the aws sdk installed you can right-click the project and you can say deploy to elastic bean",
    "start": "747839",
    "end": "755200"
  },
  {
    "text": "store and what it will do is it will wrap up your code build your code put it into a zip file effectively",
    "start": "755200",
    "end": "761360"
  },
  {
    "text": "and in the background it posts that to aws and then aws takes that code and it puts it on some infrastructure",
    "start": "761360",
    "end": "768000"
  },
  {
    "text": "now the infrastructure that you set up you can say i want one server or i can want 10 servers i want it to auto scale",
    "start": "768000",
    "end": "775279"
  },
  {
    "text": "between 1 and 10 servers i want a load balancer in front of it you make all those decisions when you're doing the deployment",
    "start": "775279",
    "end": "781360"
  },
  {
    "text": "and then it will basically put the web application on however many servers that you want",
    "start": "781360",
    "end": "786720"
  },
  {
    "text": "so i took my signalr application i stick it on i build it using elastic beanstalk",
    "start": "786720",
    "end": "792959"
  },
  {
    "text": "because it's easy i use the visual studio way of doing it but you could easily you can easily do it from command line as well",
    "start": "792959",
    "end": "798639"
  },
  {
    "text": "but i say okay publish it to beanstalk and what it does it creates a load",
    "start": "798639",
    "end": "803680"
  },
  {
    "text": "balancer for me and it creates um two instances so i've got two instances",
    "start": "803680",
    "end": "808959"
  },
  {
    "text": "sorry two web servers in aws we call those instances two instances each running my",
    "start": "808959",
    "end": "815440"
  },
  {
    "text": "application and a load balancer which load balances between the two now um",
    "start": "815440",
    "end": "822079"
  },
  {
    "text": "the only thing that i had to change really to get this working was to say well the load balancer that",
    "start": "822079",
    "end": "827920"
  },
  {
    "text": "needs to be sticky sessions and because the way signalr works once the web connection is set up a websocket",
    "start": "827920",
    "end": "834240"
  },
  {
    "text": "connection is set up you want the person going back to the same web server so i set up sticky sessions on the load",
    "start": "834240",
    "end": "840079"
  },
  {
    "text": "balancer and pretty much my application works so just to show you",
    "start": "840079",
    "end": "845760"
  },
  {
    "text": "what that application looks like if we go if you have a mobile phone and you have",
    "start": "845760",
    "end": "853199"
  },
  {
    "text": "a camera or if you just want to punch in the url signalr.beeps.net",
    "start": "853199",
    "end": "860000"
  },
  {
    "text": "and uh but i'm going to just scan it with my camera this qr code and it will take me to the url",
    "start": "860000",
    "end": "865839"
  },
  {
    "text": "and i should then receive like a little thing which says please wait",
    "start": "865839",
    "end": "871279"
  },
  {
    "text": "so it's like a little gray screen so once a couple of you people have uh have gone to that site then what",
    "start": "871279",
    "end": "878320"
  },
  {
    "text": "i will be able to do is i should be able to go uh and click through to the next thing",
    "start": "878320",
    "end": "884160"
  },
  {
    "text": "and what will happen is my phone will have been updated with um uh a question it says what drink",
    "start": "884160",
    "end": "892880"
  },
  {
    "text": "coffee or beer and i see a few of you have already started to vote and five of you saying",
    "start": "892880",
    "end": "897920"
  },
  {
    "text": "coffee six saying beer i'm gonna vote for coffee i don't drink six and six so today at ndc we've got",
    "start": "897920",
    "end": "904959"
  },
  {
    "text": "like six seven oh actually coffee's coffee's taking the lead there's there's uh there's people voting for uh coffee and",
    "start": "904959",
    "end": "912560"
  },
  {
    "text": "beer using the application and you'll see that as you press the button on the application it sends a signal",
    "start": "912560",
    "end": "918000"
  },
  {
    "text": "that's received by the application it updates the the counter on one of the sites right now if i go over",
    "start": "918000",
    "end": "924880"
  },
  {
    "text": "to tabs versus spaces",
    "start": "924880",
    "end": "928160"
  },
  {
    "text": "interesting never mind um i don't know quite what went wrong there but you can vote versus tabs versus",
    "start": "933440",
    "end": "938959"
  },
  {
    "text": "spaces and we can see oh before it crashed out i don't know why i was doing that but",
    "start": "938959",
    "end": "945600"
  },
  {
    "text": "never mind um we're roughly generally going to say that tabs tabs are winning for some reason i'm going to take it off",
    "start": "947519",
    "end": "953040"
  },
  {
    "text": "that screen for some reason because it's not quite working how i expect it to uh luckily the the signalr demo is not actually what i was going to",
    "start": "953040",
    "end": "958959"
  },
  {
    "text": "show today so that's uh that's good um but uh",
    "start": "958959",
    "end": "964639"
  },
  {
    "text": "roughly what's happening there the the idea is we've got our load balancer we've got our two instances",
    "start": "964639",
    "end": "970240"
  },
  {
    "text": "and it's balancing between the two um applications working as you connect to",
    "start": "970240",
    "end": "975440"
  },
  {
    "text": "it you're connecting to one of those two instances and all should be kind of well with that",
    "start": "975440",
    "end": "981759"
  },
  {
    "text": "but there is a slight problem um if uh",
    "start": "981759",
    "end": "986879"
  },
  {
    "text": "because we have two instances and we have messages going back and forth and websockets when i vote the voting doesn't always",
    "start": "987120",
    "end": "993839"
  },
  {
    "text": "happen on uh the message doesn't always get sent to both machines you see when i say i i'm voting or",
    "start": "993839",
    "end": "1000320"
  },
  {
    "text": "incrementing a number to say i want to vote for coffee that that message only gets sent to the server that i'm connected to it doesn't",
    "start": "1000320",
    "end": "1006720"
  },
  {
    "text": "get distributed to the other servers and so this is a common problem in real-time applications",
    "start": "1006720",
    "end": "1012000"
  },
  {
    "text": "if you've got a backup you've got a a number of servers which are in a in a application then they actually",
    "start": "1012000",
    "end": "1018880"
  },
  {
    "text": "need to talk to each other as well to be able to pass the messages back and forth so that you've got um",
    "start": "1018880",
    "end": "1024079"
  },
  {
    "text": "the correct messages going to so the application's functioning correctly is a sort of unit rather than as",
    "start": "1024079",
    "end": "1029918"
  },
  {
    "text": "individual applications uh separated now the way that we solve this in something like signalr and in many sort of",
    "start": "1029919",
    "end": "1036319"
  },
  {
    "text": "common uh scenarios is we use a thing called a backplane and a backplane is basically some kind",
    "start": "1036319",
    "end": "1041839"
  },
  {
    "text": "of mechanism which stands behind the application which we can communicate uh so the",
    "start": "1041839",
    "end": "1047600"
  },
  {
    "text": "servers can cross communicate and pass the messages back and forth so that everyone's got the correct messages",
    "start": "1047600",
    "end": "1052960"
  },
  {
    "text": "um in the real-time applications and now um to do that on aws",
    "start": "1052960",
    "end": "1059679"
  },
  {
    "text": "okay now i would have to go and set up a backplane and signalr the preferred back pain for signalr is",
    "start": "1059679",
    "end": "1065360"
  },
  {
    "text": "something called redis we have a service at aws called amazon elasticash for redis",
    "start": "1065360",
    "end": "1071679"
  },
  {
    "text": "which is basically a managed redis service so i can stand up a manage redis service and it's",
    "start": "1071679",
    "end": "1079600"
  },
  {
    "text": "set up as my backplane once i've basically created that that thing i go into my net core application and",
    "start": "1079600",
    "end": "1086880"
  },
  {
    "text": "all i have to do is actually add this one line of code or a couple of lines of code which says on my",
    "start": "1086880",
    "end": "1093120"
  },
  {
    "text": "our installation dot add stack exchange redis and then i pass the connection string to my redis",
    "start": "1093120",
    "end": "1098400"
  },
  {
    "text": "cluster and then i set up a channel prefix which basically means um the communications for this",
    "start": "1098400",
    "end": "1105039"
  },
  {
    "text": "particular my application is going to communicate on this particular channel called myapp and then basically that's really all you",
    "start": "1105039",
    "end": "1113360"
  },
  {
    "text": "have to do to set up the backplane in signalr singular takes a lot of the complication out of something like this and but there is a challenge with this",
    "start": "1113360",
    "end": "1120000"
  },
  {
    "text": "now okay i wanted to build a simple real-time application and all of a sudden i've got a load balancer i've got two",
    "start": "1120000",
    "end": "1127280"
  },
  {
    "text": "machines i've maybe got 10 machines um and then i've got have a back back",
    "start": "1127280",
    "end": "1132960"
  },
  {
    "text": "a back plane which is a cluster of machines running redis and all of a sudden this is starting to get quite expensive so to do a demo",
    "start": "1132960",
    "end": "1140559"
  },
  {
    "text": "like i did before where i had one or two machines it's not very expensive to run something like that but when you're",
    "start": "1140559",
    "end": "1146880"
  },
  {
    "text": "actually scaling this if you wanted to build facebook messenger uh on this infrastructure or some kind of chat application where",
    "start": "1146880",
    "end": "1153679"
  },
  {
    "text": "you're expecting hundreds or thousands of people to be communicating at one time or you're building a real-time news",
    "start": "1153679",
    "end": "1159440"
  },
  {
    "text": "application which is doing updates in the browser of real-time events happening",
    "start": "1159440",
    "end": "1164799"
  },
  {
    "text": "then you're going to have to scale this infrastructure pretty pretty hard and it's going to be expensive and it's going to be",
    "start": "1164799",
    "end": "1170799"
  },
  {
    "text": "complicated so i was kind of wondering well is there",
    "start": "1170799",
    "end": "1176000"
  },
  {
    "text": "an easier way and a few years ago aws released a thing called the api gateway",
    "start": "1176000",
    "end": "1182160"
  },
  {
    "text": "api gateway web sockets and this is what i'm going to be integrating today into a blazer application so api gateway",
    "start": "1182160",
    "end": "1189200"
  },
  {
    "text": "and web sockets is basically a api gateway is almost like a thing which just stands up in the cloud",
    "start": "1189200",
    "end": "1194720"
  },
  {
    "text": "and you can um send messages to it and it will route those messages to other systems",
    "start": "1194720",
    "end": "1201600"
  },
  {
    "text": "so um you can think of it as as like a gateway for your api i don't know why i said",
    "start": "1201600",
    "end": "1208159"
  },
  {
    "text": "that you can think of it as like something you put in front of your application to provide an api or unified",
    "start": "1208159",
    "end": "1213520"
  },
  {
    "text": "endpoint to your application um your application doesn't have to be one single application it could be",
    "start": "1213520",
    "end": "1218960"
  },
  {
    "text": "multiple applications but you're unifying them through this api gateway so that's what api gateway was commonly",
    "start": "1218960",
    "end": "1224640"
  },
  {
    "text": "used for but then they added this support for web sockets and what that means is that you can basically um",
    "start": "1224640",
    "end": "1230880"
  },
  {
    "text": "not only can you manage you do use it as like for an api you can also deal with web sockets",
    "start": "1230880",
    "end": "1238159"
  },
  {
    "text": "communication and what they're promising is basically we'll manage all of the websocket communication",
    "start": "1238159",
    "end": "1244400"
  },
  {
    "text": "stuff for you and you just implement your application as you would normally and we will",
    "start": "1244400",
    "end": "1250880"
  },
  {
    "text": "maintain all the connections for the clients and we'll we'll set up a system where you can post",
    "start": "1250880",
    "end": "1255919"
  },
  {
    "text": "to all of your connected clients but it's much more straightforward than having to deal with web sockets natively",
    "start": "1255919",
    "end": "1262880"
  },
  {
    "text": "so let's uh explain a little bit more about what this means",
    "start": "1262880",
    "end": "1267360"
  },
  {
    "text": "so we have um application or things like mobile applications chat",
    "start": "1268799",
    "end": "1273919"
  },
  {
    "text": "applications dashboards iot devices web browsers which connect to our api gateway",
    "start": "1273919",
    "end": "1281919"
  },
  {
    "text": "and so they connect to a websocket endpoint and a websocket url and then in the back end we have our",
    "start": "1281919",
    "end": "1288559"
  },
  {
    "text": "infrastructure now i'm going to be building using serverless infrastructure so i'm going to be using lambda functions in",
    "start": "1288559",
    "end": "1293679"
  },
  {
    "text": "the background but these could be containers they could be an existing api um whatever really um api gateway can",
    "start": "1293679",
    "end": "1301520"
  },
  {
    "text": "forward onto any kind of other system but i'm going to set up a websocket system and then i'm going to forward it",
    "start": "1301520",
    "end": "1307120"
  },
  {
    "text": "to some lambda functions so what happens is the mobile",
    "start": "1307120",
    "end": "1312799"
  },
  {
    "text": "application is just going to use this this standard websocket client that it has in in its sdk",
    "start": "1312799",
    "end": "1318480"
  },
  {
    "text": "and it's going to connect to a websocket endpoint that um the amazon api gateway is going to",
    "start": "1318480",
    "end": "1324240"
  },
  {
    "text": "provide so that's going to be like wss colon slash so instead of https or http",
    "start": "1324240",
    "end": "1330559"
  },
  {
    "text": "it's going to say wwss which is basically a websocket secure a secure websocket you'll",
    "start": "1330559",
    "end": "1336640"
  },
  {
    "text": "sometimes see a ws colon slash that's just a web socket but a uh a websocket colon slash a secure",
    "start": "1336640",
    "end": "1344080"
  },
  {
    "text": "websocket then it's going to have a unique id execute.api",
    "start": "1344080",
    "end": "1349200"
  },
  {
    "text": "then the region that this is running in so if i was using using it in in eu west1 it would say eu west1 there",
    "start": "1349200",
    "end": "1356240"
  },
  {
    "text": "dot amazon.com forward slash and then the name of the stage that you're using um you can create in the apis different",
    "start": "1356240",
    "end": "1362320"
  },
  {
    "text": "stages whether they be prod dev or test or something like that um i often will just use the stage name",
    "start": "1362320",
    "end": "1368400"
  },
  {
    "text": "prod because i like pushing everything to production and uh what happens is these um these devices",
    "start": "1368400",
    "end": "1375360"
  },
  {
    "text": "connect the api gateway and they just set up a a websocket connection between the two",
    "start": "1375360",
    "end": "1381679"
  },
  {
    "text": "but api gateway when it receives a message over the websocket it just invokes",
    "start": "1381679",
    "end": "1388240"
  },
  {
    "text": "whatever's on the back end like a restful communication it doesn't do over websockets it just invokes it",
    "start": "1388240",
    "end": "1395039"
  },
  {
    "text": "um it invokes it and it passes over to the invocation a connection id and the idea is that because you're",
    "start": "1395039",
    "end": "1401280"
  },
  {
    "text": "being invoked and you've got a connection id if you want to speak back to that connection you have this id that you",
    "start": "1401280",
    "end": "1406559"
  },
  {
    "text": "could call at a later date so you have this duplex communication setup but it's important to remember that the",
    "start": "1406559",
    "end": "1412559"
  },
  {
    "text": "lambda functions themselves have no idea that they're involved in a real-time application they are just",
    "start": "1412559",
    "end": "1418480"
  },
  {
    "text": "dumb lambda functions and they're receiving an invocation with a connection id and if they want to",
    "start": "1418480",
    "end": "1424799"
  },
  {
    "text": "they can respond to that connection id what i actually do when when someone connects to this system",
    "start": "1424799",
    "end": "1431279"
  },
  {
    "text": "they pass over their connection id i put it into a database um in this instance we're using dynamodb",
    "start": "1431279",
    "end": "1437520"
  },
  {
    "text": "and basically anyone which connects to my websocket i put their id into a database",
    "start": "1437520",
    "end": "1444799"
  },
  {
    "text": "and then we have a way of taking those ids out of the database and calling them and basically sending a",
    "start": "1444799",
    "end": "1451039"
  },
  {
    "text": "message to everyone so we're able to send messages to everyone which is currently connected to our system",
    "start": "1451039",
    "end": "1456480"
  },
  {
    "text": "basically if i loop over the database and all the connection ids and i use this particular url with this",
    "start": "1456480",
    "end": "1462000"
  },
  {
    "text": "connection id crafted on it i can post messages to the individuals now i'm actually not posting messages to the individual",
    "start": "1462000",
    "end": "1468159"
  },
  {
    "text": "people what i'm doing is i'm posting a message back to the amazon api gateway and then that's then forwarding it on to",
    "start": "1468159",
    "end": "1474400"
  },
  {
    "text": "the correct connection so from an endpoint user point of view they've got this real-time communication",
    "start": "1474400",
    "end": "1479840"
  },
  {
    "text": "happening but the reality is it's all the magic's all happening in the api gateway it's",
    "start": "1479840",
    "end": "1484880"
  },
  {
    "text": "the one which is instead is maintaining the connections it's the one which is understanding or creating",
    "start": "1484880",
    "end": "1490000"
  },
  {
    "text": "connection ids and matching them back up and passaging messages messages back and forth",
    "start": "1490000",
    "end": "1496799"
  },
  {
    "text": "so we have um this thing called the websocket url and as a message is being sent to the",
    "start": "1496799",
    "end": "1502720"
  },
  {
    "text": "api gateway invokes um the uh it invokes the lambda function",
    "start": "1502720",
    "end": "1507760"
  },
  {
    "text": "and we store some of that in dynamodb let's say now we want to do the opposite",
    "start": "1507760",
    "end": "1514720"
  },
  {
    "text": "way we want the server to be able to message the client now i mentioned before um i can have a",
    "start": "1514720",
    "end": "1520159"
  },
  {
    "text": "lambda function which basically goes into all of my dynamodb database it gets a list of all of the",
    "start": "1520159",
    "end": "1525520"
  },
  {
    "text": "connection ids and then it posts something to each of those connections the way it posts",
    "start": "1525520",
    "end": "1530880"
  },
  {
    "text": "them is that just use a connection url it's called a connection url it's got a random number the region",
    "start": "1530880",
    "end": "1538080"
  },
  {
    "text": "number and then here at the end a really important bit which is the connection id",
    "start": "1538080",
    "end": "1543360"
  },
  {
    "text": "and if you do a post to that connection id then you can send a message to it and it will get rooted by",
    "start": "1543360",
    "end": "1549200"
  },
  {
    "text": "api gateway back to the person which which invoked it right now the connection url has a couple of",
    "start": "1549200",
    "end": "1555200"
  },
  {
    "text": "methods on it we can post to it which is send a message to that particular user we could do a get on it which basically",
    "start": "1555200",
    "end": "1560960"
  },
  {
    "text": "gives us the the status of that current user or we can delete it which removes that user from our system",
    "start": "1560960",
    "end": "1568320"
  },
  {
    "text": "um or basically to disconnect that's their their socket url um their websocket",
    "start": "1568320",
    "end": "1574240"
  },
  {
    "text": "so if we wanted to create one of these apis we go into aws console and we create a",
    "start": "1574240",
    "end": "1581200"
  },
  {
    "text": "a websocket api we give the api a name",
    "start": "1581200",
    "end": "1586799"
  },
  {
    "text": "my fancy ndc api we give it a thing called a root",
    "start": "1587360",
    "end": "1592559"
  },
  {
    "text": "selection expression this is basically what the api gateway is going to use to route the messages",
    "start": "1592559",
    "end": "1599039"
  },
  {
    "text": "coming in to different lambda functions and then once i have that",
    "start": "1599039",
    "end": "1608240"
  },
  {
    "text": "created we go once i have that api created you'll see that there's a couple of",
    "start": "1610840",
    "end": "1617360"
  },
  {
    "text": "routes already set up so what we can do is we can say we're",
    "start": "1617360",
    "end": "1623440"
  },
  {
    "text": "going to connect this particular route to a lambda function and we're going to just i've got some lambda functions",
    "start": "1623440",
    "end": "1629360"
  },
  {
    "text": "already set up one called onconnect",
    "start": "1629360",
    "end": "1634400"
  },
  {
    "text": "i'm going to set up the disconnect one as well there's a lambda function which happens or is called when any",
    "start": "1637120",
    "end": "1642240"
  },
  {
    "text": "anyone called disconnect to this service and we're going to create a new route",
    "start": "1642240",
    "end": "1648559"
  },
  {
    "text": "called send message",
    "start": "1648559",
    "end": "1655840"
  },
  {
    "text": "and we're going to put that into the lambda function called seven message so i've got three functions lambda functions and uh one",
    "start": "1658240",
    "end": "1665520"
  },
  {
    "text": "api gateway deploy that api",
    "start": "1665520",
    "end": "1671600"
  },
  {
    "text": "give your stage a name you can have as many stages as you like i'll call one called prod",
    "start": "1672240",
    "end": "1677760"
  },
  {
    "text": "it's my production api",
    "start": "1678240",
    "end": "1683840"
  },
  {
    "text": "and deploy that and then you'll see we have this websocket url and we have a",
    "start": "1689039",
    "end": "1696000"
  },
  {
    "text": "connection url so a url for that particular connection so the websocket url is what we would",
    "start": "1696000",
    "end": "1702240"
  },
  {
    "text": "use inside of our application to instantiate or create a websocket communication to our application and the connection url is if we have a",
    "start": "1702240",
    "end": "1709520"
  },
  {
    "text": "connection id or a number of connection id we can we can basically post to those connection ids and send messages",
    "start": "1709520",
    "end": "1714720"
  },
  {
    "text": "to the different people connected to our service so my application what it does is it",
    "start": "1714720",
    "end": "1722159"
  },
  {
    "text": "crafts this particular um this sort of payload and this is what the message it passes",
    "start": "1722159",
    "end": "1728399"
  },
  {
    "text": "through the um the websocket and when i pass this message you'll see that it's got this",
    "start": "1728399",
    "end": "1734559"
  },
  {
    "text": "this this one property called message send message now message is what it's actually going to be rooted on so it's like the root",
    "start": "1734559",
    "end": "1740640"
  },
  {
    "text": "key so if i pass this it's going to be my api gateway is going to receive it",
    "start": "1740640",
    "end": "1745919"
  },
  {
    "text": "as a web socket request and it's going to say okay send message let me go and route that to",
    "start": "1745919",
    "end": "1751200"
  },
  {
    "text": "the send message lambda function it doesn't have to be a lambda function i could have routed it to an api endpoint which is backed by an",
    "start": "1751200",
    "end": "1758399"
  },
  {
    "text": "iis web server i could you know it doesn't have to be a lambda function but i'm going to post it to allow this lambda function and that's",
    "start": "1758399",
    "end": "1764240"
  },
  {
    "text": "the connections that i've made and the data that i'm going to pass over is just saying hello ndc",
    "start": "1764240",
    "end": "1769360"
  },
  {
    "text": "now this this doesn't have to just be such a simple package it could be it could have multiple things in here it doesn't even actually",
    "start": "1769360",
    "end": "1774960"
  },
  {
    "text": "need to be json but it's that helps with the scenario we're doing so i'm going to just say i want a",
    "start": "1774960",
    "end": "1780080"
  },
  {
    "text": "message with send message and if i posted this to that particular websocket url then",
    "start": "1780080",
    "end": "1786320"
  },
  {
    "text": "i would have posted a message um and it would get rooted to my lambda function called send function",
    "start": "1786320",
    "end": "1793120"
  },
  {
    "text": "this is the way that my sort of architecture looks in this scenario we have uh the amazon api gateway the",
    "start": "1793120",
    "end": "1800000"
  },
  {
    "text": "client application now the client application can be really done it can just be a http uh html sorry page",
    "start": "1800000",
    "end": "1808240"
  },
  {
    "text": "uh you know a very straightforward inexpensive um static",
    "start": "1808240",
    "end": "1816399"
  },
  {
    "text": "uh website and that's just gonna create a a websocket and then that will connect",
    "start": "1816399",
    "end": "1823039"
  },
  {
    "text": "it up to api gateway and then as i send messages to it it's going to route those messages to the correct lambda functions",
    "start": "1823039",
    "end": "1828799"
  },
  {
    "text": "now when i instantiate a connection the first thing that's going to happen when i instantiate a a websocket",
    "start": "1828799",
    "end": "1834960"
  },
  {
    "text": "communication by default the thing that gets passed is on connect so what happens is it will go to the on",
    "start": "1834960",
    "end": "1841679"
  },
  {
    "text": "connect lambda function now my on connect lambda function what it does is it takes the connection id",
    "start": "1841679",
    "end": "1847279"
  },
  {
    "text": "which is passed to it and it stores it in dynamodb i also have a lambda on disconnect function",
    "start": "1847279",
    "end": "1854240"
  },
  {
    "text": "and so whenever someone disconnects from the websocket it will automatically send a message to that which basically says hey this is an id",
    "start": "1854240",
    "end": "1860960"
  },
  {
    "text": "which is no longer connected to the service and what that function does is it goes into the database and it removes",
    "start": "1860960",
    "end": "1866799"
  },
  {
    "text": "that connection id the point being my dynamodb should have a list of connection ids at any given point",
    "start": "1866799",
    "end": "1873360"
  },
  {
    "text": "of everyone connected to my application now i'm using dynamodb as a storage but this could be",
    "start": "1873360",
    "end": "1879039"
  },
  {
    "text": "any kind of cache really what send message is doing then as well",
    "start": "1879039",
    "end": "1884480"
  },
  {
    "text": "is once someone's someone makes a message and crafts it in that particular way so that uses the",
    "start": "1884480",
    "end": "1889519"
  },
  {
    "text": "send message functionality it will go to the dynamodb it will download all of the current connected",
    "start": "1889519",
    "end": "1895840"
  },
  {
    "text": "clients it will send the message to each of those connected clients and so everyone receives the message",
    "start": "1895840",
    "end": "1904000"
  },
  {
    "text": "so this is um i won't go too much into the code because um i have it uh on github and i can share it later it'll be easier probably",
    "start": "1904000",
    "end": "1910399"
  },
  {
    "text": "to look at there but basically this is the uh send massive message function now the send message function what it's",
    "start": "1910399",
    "end": "1916880"
  },
  {
    "text": "doing and it's got some logging in and so forth here but we're taking this um property the",
    "start": "1916880",
    "end": "1922960"
  },
  {
    "text": "data property which is the message and we're putting it into a stream and then we're asking for uh this is a",
    "start": "1922960",
    "end": "1931360"
  },
  {
    "text": "uh the way that we go and get all of the items inside of dynamodb dynamodb by the way is a nosql database",
    "start": "1931360",
    "end": "1937840"
  },
  {
    "text": "very performant quite well suited for this kind of task and it basically does a scan and says give me back um",
    "start": "1937840",
    "end": "1944080"
  },
  {
    "text": "all of the all of the connection ids and once i've got those connection ids",
    "start": "1944080",
    "end": "1951200"
  },
  {
    "text": "what i can do is i can loop through them so for each item in those connection ids",
    "start": "1951200",
    "end": "1956480"
  },
  {
    "text": "and for each of those what i'm ultimately doing is i'm posting the message to the connection so",
    "start": "1956480",
    "end": "1963600"
  },
  {
    "text": "i use this little helper function to actually create the url for me and create the um the connection urls for me but",
    "start": "1963600",
    "end": "1970240"
  },
  {
    "text": "ultimately i'm basically looping through if there's 500 people connected to my service i'll look for those 500 people",
    "start": "1970240",
    "end": "1975360"
  },
  {
    "text": "and i'll send them all a message via a post effectively um so let's just show you what that",
    "start": "1975360",
    "end": "1983200"
  },
  {
    "text": "ends up looking like so if i go to a website called",
    "start": "1983200",
    "end": "1988840"
  },
  {
    "text": "chat.thebeebs.net you'll see it it's pre-pitted with a url or it's already got a url in there",
    "start": "1988840",
    "end": "1997039"
  },
  {
    "text": "and i can connect to that url",
    "start": "1997039",
    "end": "2004880"
  },
  {
    "text": "it should be able to connect yeah and if you go to chat.thieves.net as well you can join in uh with this fun too uh let me go and",
    "start": "2004880",
    "end": "2012799"
  },
  {
    "text": "set up another browser connects up and if i type in hello there",
    "start": "2012799",
    "end": "2022159"
  },
  {
    "text": "that's odd oh yeah i've received a message with hello which is what i sent and someone else has sent a message for",
    "start": "2024399",
    "end": "2030399"
  },
  {
    "text": "it as well and then on the other side you can see so i can say window one",
    "start": "2030399",
    "end": "2036080"
  },
  {
    "text": "send message and over here window one and i can say window two over here",
    "start": "2036080",
    "end": "2044080"
  },
  {
    "text": "and someone said hey there as well so people are connecting to this application uh and and it's basically a very very",
    "start": "2044080",
    "end": "2051760"
  },
  {
    "text": "straightforward and simple application it's using that connectivity back in the background now uh",
    "start": "2051760",
    "end": "2057200"
  },
  {
    "text": "i think let me have if you go to my github um you have the biebs",
    "start": "2057200",
    "end": "2066240"
  },
  {
    "text": "sorry i can't remember the name of the repository um is it this one",
    "start": "2066480",
    "end": "2071679"
  },
  {
    "text": "yeah so the actual code which is running on the screen there is just a simple html page",
    "start": "2071679",
    "end": "2077118"
  },
  {
    "text": "it's super straightforward it's built in did i build this in view i can't remember um",
    "start": "2077119",
    "end": "2084960"
  },
  {
    "text": "if i look at the javascript you'll see that i have a",
    "start": "2087599",
    "end": "2093919"
  },
  {
    "text": "a a connect function a disconnect function the same message function",
    "start": "2093919",
    "end": "2099680"
  },
  {
    "text": "and it's just basically crafting these uh send messages just crafting a thing",
    "start": "2099680",
    "end": "2104800"
  },
  {
    "text": "saying send message and then passing some data across onconnect is just setting up a websocket",
    "start": "2104800",
    "end": "2111200"
  },
  {
    "text": "connection and yeah i'm using view there to kind of update the scenario in the screen so",
    "start": "2111200",
    "end": "2116400"
  },
  {
    "text": "that's the code to kind of enable that but it's all in javascript and uh i'm talking about something else",
    "start": "2116400",
    "end": "2122000"
  },
  {
    "text": "today we're talking about blazer so how would you go ahead and kind of do something in similar but",
    "start": "2122000",
    "end": "2128079"
  },
  {
    "text": "let's do it in in blazer now in blazer we've got um two different ways",
    "start": "2128079",
    "end": "2133440"
  },
  {
    "text": "of running web uh running blazer um we've got a thing called blazer web assembly",
    "start": "2133440",
    "end": "2140240"
  },
  {
    "text": "and we've got a thing called blazer server now i'm not going to be talking at all",
    "start": "2140240",
    "end": "2145839"
  },
  {
    "text": "about blazer server today i'm going to be talking about blazer web assembly and the reason is because",
    "start": "2145839",
    "end": "2150880"
  },
  {
    "text": "blazer web assembly is better suited for what i'm trying to do here what i want is to create basically a a",
    "start": "2150880",
    "end": "2157839"
  },
  {
    "text": "vue.js style web application or a react style web application but i don't want to use javascript i",
    "start": "2157839",
    "end": "2164160"
  },
  {
    "text": "want to use as much uh net as possible so i'm going to be using laser web assembly and what allows me to",
    "start": "2164160",
    "end": "2169200"
  },
  {
    "text": "do is create like uis um using web technologies but all of the logic isn't written in",
    "start": "2169200",
    "end": "2176240"
  },
  {
    "text": "javascript it's all written in dot net and behind the scenes what blaze is doing is it's using web assembly to run",
    "start": "2176240",
    "end": "2182480"
  },
  {
    "text": "your uh your c-sharp application um one assembly is a is a new feature of browsers and it's",
    "start": "2182480",
    "end": "2189920"
  },
  {
    "text": "it's it's kind of this weird way of being able to uh execute things or run things which it",
    "start": "2189920",
    "end": "2196320"
  },
  {
    "text": "previously wasn't able to do and some clever people have decided that we could actually run other programming languages inside browsers now",
    "start": "2196320",
    "end": "2202800"
  },
  {
    "text": "and blazer is basically beta webassembly is that it's it's a really clever little",
    "start": "2202800",
    "end": "2208800"
  },
  {
    "text": "framework for building web applications but using c sharp now this doesn't mean",
    "start": "2208800",
    "end": "2215359"
  },
  {
    "text": "that we're going to be using any kinds of plugins this is not silverlight um it's just using native web technologies",
    "start": "2215359",
    "end": "2222079"
  },
  {
    "text": "um it will only obviously work in browsers that support webassembly but nowadays that is almost every every",
    "start": "2222079",
    "end": "2227839"
  },
  {
    "text": "major browser um but it wouldn't obviously work in if you're still supporting ie9 this won't",
    "start": "2227839",
    "end": "2233280"
  },
  {
    "text": "work um but the blazer servers are similar thing and basically you can take the same",
    "start": "2233280",
    "end": "2238800"
  },
  {
    "text": "application but this would work in something which is a much older browser but it requires the server to be doing a",
    "start": "2238800",
    "end": "2245440"
  },
  {
    "text": "lot of the processing and actually uses web sockets in the background to achieve the the",
    "start": "2245440",
    "end": "2250880"
  },
  {
    "text": "blaze blazer server hosting model but we're not going to talk about blazer",
    "start": "2250880",
    "end": "2256000"
  },
  {
    "text": "server it's interesting but um i've already i've already pretty much run out of time for that so we're just",
    "start": "2256000",
    "end": "2261200"
  },
  {
    "text": "going to talk about blazer webassembly and what i was kind of looking at is well how do i port that first application i built",
    "start": "2261200",
    "end": "2267280"
  },
  {
    "text": "into something like blazer now um i haven't quite got the style the same and it's just",
    "start": "2267280",
    "end": "2273200"
  },
  {
    "text": "purely technically how i would go about and do it and um this is a a road that i started",
    "start": "2273200",
    "end": "2279280"
  },
  {
    "text": "down about uh nine months ago and i've gradually kind of like revisit the application as",
    "start": "2279280",
    "end": "2284320"
  },
  {
    "text": "blazers matured and added new features to it and and got it to a point where",
    "start": "2284320",
    "end": "2289839"
  },
  {
    "text": "i think it kind of does everything that the it does everything that this the the vue.js application does it just",
    "start": "2289839",
    "end": "2295520"
  },
  {
    "text": "doesn't quite look as pretty that's another job that i need to do um so to start with blazer we just go to",
    "start": "2295520",
    "end": "2301200"
  },
  {
    "text": "um the blazer site there's a little getting started application documentation if we click on that it's",
    "start": "2301200",
    "end": "2307680"
  },
  {
    "text": "going to tell you to install.net three-point whatever it is nowadays and then um once you've done that with",
    "start": "2307680",
    "end": "2315040"
  },
  {
    "text": "the net command line you can say dot net new blazer wasm um that's blazer web assembly",
    "start": "2315040",
    "end": "2322400"
  },
  {
    "text": "and then we give it an output like a name for our project which is blazer front end in this instance",
    "start": "2322400",
    "end": "2327839"
  },
  {
    "text": "and then i cd into that folder and then you can just say dot net run and it will build your application",
    "start": "2327839",
    "end": "2333760"
  },
  {
    "text": "and it's got a very sort of basic application where you can click a ticker and it will",
    "start": "2333760",
    "end": "2340320"
  },
  {
    "text": "update a number and increment a number the cool thing is everything in that browser all of the logic isn't done in",
    "start": "2340320",
    "end": "2346240"
  },
  {
    "text": "javascript it's all done in dot net",
    "start": "2346240",
    "end": "2350400"
  },
  {
    "text": "so in my application i've basically tried to use that base application as much as possible and i've",
    "start": "2352880",
    "end": "2359200"
  },
  {
    "text": "made a few modifications to it so one i've added a uh a question",
    "start": "2359200",
    "end": "2365200"
  },
  {
    "text": "dot json with with sample data so my questions at the moment are just hard-coded into the application",
    "start": "2365200",
    "end": "2370880"
  },
  {
    "text": "obviously i won't do that in the real application and i've got like a question id 0 and a question id one",
    "start": "2370880",
    "end": "2377119"
  },
  {
    "text": "and it's got tabs or spaces and coffee and bm and so this is roughly the data that i in my my real",
    "start": "2377119",
    "end": "2382480"
  },
  {
    "text": "application i actually store in a database but i'm going to be just storing it locally here",
    "start": "2382480",
    "end": "2388320"
  },
  {
    "text": "and i have a couple of pages that i've added i've got the index page a page called",
    "start": "2388320",
    "end": "2395440"
  },
  {
    "text": "questions and a page called vote again it's similar to my application um i have like uh a voting screen",
    "start": "2395440",
    "end": "2403359"
  },
  {
    "text": "so if you went and voted a moment ago using the application that was a voting screen that you said please wait and then you",
    "start": "2403359",
    "end": "2409599"
  },
  {
    "text": "choose one of the two options and so forth that's the voting screen and the questions screen is the screen that i present to you",
    "start": "2409599",
    "end": "2415359"
  },
  {
    "text": "which shows you the qr code and then shows you as you move the slides or you move the",
    "start": "2415359",
    "end": "2421119"
  },
  {
    "text": "questions and so those are the two kind of like",
    "start": "2421119",
    "end": "2426400"
  },
  {
    "text": "screens in our system effectively so i've added those as razor pages",
    "start": "2426400",
    "end": "2431440"
  },
  {
    "text": "now the first thing i do in the questions.razer view is we have this event which says",
    "start": "2431440",
    "end": "2438000"
  },
  {
    "text": "protected override async task on initialized async so there's this kind of um workflow in a",
    "start": "2438000",
    "end": "2447359"
  },
  {
    "text": "a life cycle i suppose in a blazer application and the first thing",
    "start": "2447359",
    "end": "2452720"
  },
  {
    "text": "when someone navigates to the questions page it's going to invoke this um uninitialized async task now",
    "start": "2452720",
    "end": "2461200"
  },
  {
    "text": "i have just very lazily placed the first thing that it does is it loads whatever was in my",
    "start": "2461200",
    "end": "2467240"
  },
  {
    "text": "questions.json locally that's a local local file but it could obviously just pull this from",
    "start": "2467240",
    "end": "2473440"
  },
  {
    "text": "you know a database or another api and it loads into an object called",
    "start": "2473440",
    "end": "2478800"
  },
  {
    "text": "questions now questions is basically a list of my this type",
    "start": "2478800",
    "end": "2484720"
  },
  {
    "text": "of questions so i end up with a list of questions now if you've ever used single page",
    "start": "2484720",
    "end": "2490640"
  },
  {
    "text": "applications before you'll know that the whole point of them really is that you can create a state",
    "start": "2490640",
    "end": "2496560"
  },
  {
    "text": "so i can have an application state and my ui automatically updates and reflects",
    "start": "2496560",
    "end": "2501599"
  },
  {
    "text": "that so i don't actually have to bind manually bind my objects to my state",
    "start": "2501599",
    "end": "2507680"
  },
  {
    "text": "so now i've got a list of questions i can basically create a ui which loops through those questions so",
    "start": "2507680",
    "end": "2514400"
  },
  {
    "text": "here in my razer view is the view which which displays those questions so i've got a uh if the questions are",
    "start": "2514400",
    "end": "2521680"
  },
  {
    "text": "null so there's nothing in the questions then show a screen which just says",
    "start": "2521680",
    "end": "2526880"
  },
  {
    "text": "loading else print a table and the table's got title answer one answer two enter one count",
    "start": "2526880",
    "end": "2533760"
  },
  {
    "text": "enter two count now in the real application i use um some fancy graph more fancy graphics to",
    "start": "2533760",
    "end": "2540319"
  },
  {
    "text": "display the images to have that little graph in the middle but for this purposes of this i'm just",
    "start": "2540319",
    "end": "2546240"
  },
  {
    "text": "going to just print it out to a table so you can see what's going on",
    "start": "2546240",
    "end": "2551838"
  },
  {
    "text": "and so at the top there we've got the sort of the uh the questions the thing that i'm",
    "start": "2552240",
    "end": "2557760"
  },
  {
    "text": "injecting there you'll see at the top is the http client this is how we do dependency injection in blazer",
    "start": "2557760",
    "end": "2563599"
  },
  {
    "text": "um we can also import nuget packages if we want nuget packages in the top there we could",
    "start": "2563599",
    "end": "2569760"
  },
  {
    "text": "if we wanted to use uh newtonsoft json or something like that then you can just import that like you would in a c-sharp file it's got a",
    "start": "2569760",
    "end": "2575839"
  },
  {
    "text": "little slightly different syntax but it's ultimately what you're doing or live third-party libraries you can import them",
    "start": "2575839",
    "end": "2582480"
  },
  {
    "text": "and then you can use them inside of your application and so i'm saying okay show me the loading screen if the",
    "start": "2582480",
    "end": "2588000"
  },
  {
    "text": "questions is null but then show me the table and that table has some logic in it which says",
    "start": "2588000",
    "end": "2593599"
  },
  {
    "text": "for each question in question so it's looping through all of the questions that i have in this instance i've got two and it's",
    "start": "2593599",
    "end": "2599520"
  },
  {
    "text": "saying if i equals current count on line 27 then show that question",
    "start": "2599520",
    "end": "2605440"
  },
  {
    "text": "so i've got a really like a really ugly way of basically saying um look through all the questions and",
    "start": "2605440",
    "end": "2611520"
  },
  {
    "text": "only show the one that it's currently set to and i've just got a variable called current count which is basically an",
    "start": "2611520",
    "end": "2618560"
  },
  {
    "text": "integer which is just going to be either it's going to be zero or one in this application and if a zero will show the",
    "start": "2618560",
    "end": "2623599"
  },
  {
    "text": "first question if it's one it will show the second question and if i had ten questions it obviously would increment and only show that",
    "start": "2623599",
    "end": "2629599"
  },
  {
    "text": "particular uh question and then at the bottom i have these buttons uh and it says on click that",
    "start": "2629599",
    "end": "2637599"
  },
  {
    "text": "button then execute a c handler called previous question or one called next question so you'll",
    "start": "2637599",
    "end": "2644880"
  },
  {
    "text": "see these are http html buttons and they've got these two values in them",
    "start": "2644880",
    "end": "2651839"
  },
  {
    "text": "but they're just buttons and this is sort of like a decoration that you can put on blazer objects to say invoke some c sharp and then the",
    "start": "2651839",
    "end": "2659200"
  },
  {
    "text": "actual handlers well they just look like c sharp pandas we've got a next question and a previous question now",
    "start": "2659200",
    "end": "2666880"
  },
  {
    "text": "i said before the logic is really driven by what the current count value is because as i change the current count",
    "start": "2666880",
    "end": "2672720"
  },
  {
    "text": "value that view is going to alter you can imagine every time that you alter the",
    "start": "2672720",
    "end": "2678319"
  },
  {
    "text": "the application state it will update the ui automatically so all i actually have to do is alter the",
    "start": "2678319",
    "end": "2684960"
  },
  {
    "text": "current count variable to be the zero or one and it will effectively switching the questions the",
    "start": "2684960",
    "end": "2690960"
  },
  {
    "text": "view will look like the questions got switched so i just have a next question and a previous question it's got some logic basically to say",
    "start": "2690960",
    "end": "2696800"
  },
  {
    "text": "when i click next question and increment the current count by one but don't go any higher than i have",
    "start": "2696800",
    "end": "2702839"
  },
  {
    "text": "questions and then previous questions do you exactly",
    "start": "2702839",
    "end": "2708240"
  },
  {
    "text": "take one off the current count but um don't go lower than the one",
    "start": "2708720",
    "end": "2714480"
  },
  {
    "text": "so i now can have with these two buttons i can navigate all of the questions in my application at the moment there's just two",
    "start": "2714480",
    "end": "2722318"
  },
  {
    "text": "so that's kind of the the view that i have so what this looks like is if i go to",
    "start": "2723760",
    "end": "2728960"
  },
  {
    "text": "questions now i've got my question tabs or spaces and ants account and if i click",
    "start": "2728960",
    "end": "2734640"
  },
  {
    "text": "next or previous it just basically cycles through what's cool about this is i'm not updating the ui at all i'm just",
    "start": "2734640",
    "end": "2741119"
  },
  {
    "text": "updating my application state and the ui's reflecting those changes",
    "start": "2741119",
    "end": "2747838"
  },
  {
    "text": "so the voting screen is really similar",
    "start": "2750079",
    "end": "2754880"
  },
  {
    "text": "but all i want to do is basically add some buttons so they can vote right so i've got a very similar sort of",
    "start": "2755200",
    "end": "2761280"
  },
  {
    "text": "setup but you'll see on line 37 here um i've got a uh a button which says",
    "start": "2761280",
    "end": "2767920"
  },
  {
    "text": "vote answer one or vote answer two and uh it shows the um question information",
    "start": "2767920",
    "end": "2775520"
  },
  {
    "text": "about the question you'll see that when i loop through the question object i can access any of the properties of question by just using this syntax at question",
    "start": "2775520",
    "end": "2782079"
  },
  {
    "text": "dot answer one this is razer syntax if you're not familiar with it if you've never used asp.net pages before",
    "start": "2782079",
    "end": "2788240"
  },
  {
    "text": "um but i can basically create these uh i put the title and then i've got in the",
    "start": "2788240",
    "end": "2794800"
  },
  {
    "text": "second column i've got answer one and the second column i've got answer two as buttons and i do actually have on this version",
    "start": "2794800",
    "end": "2802160"
  },
  {
    "text": "of the application i built i had like previous index buttons but i don't actually use them in the real application because i don't want users",
    "start": "2802160",
    "end": "2808319"
  },
  {
    "text": "to be able to switch questions i want that to happen when the slide is",
    "start": "2808319",
    "end": "2813440"
  },
  {
    "text": "changed by the presenter so now um this is the vote screen it's exactly",
    "start": "2813440",
    "end": "2819119"
  },
  {
    "text": "the same but i just have effectively buttons there and uh what i need to do then is just",
    "start": "2819119",
    "end": "2824480"
  },
  {
    "text": "basically um wire those buttons up so they can vote",
    "start": "2824480",
    "end": "2830880"
  },
  {
    "text": "now this is the very first way that i had to do it um there's i want to use web sockets in my",
    "start": "2830880",
    "end": "2838000"
  },
  {
    "text": "application now um to get at a websocket i need to",
    "start": "2838000",
    "end": "2843599"
  },
  {
    "text": "um the browser to effectively the browse the underlying browser to connect up to my websocket url",
    "start": "2843599",
    "end": "2849599"
  },
  {
    "text": "now at the time when i first started building this there was no way of doing that in c-sharp there is now so",
    "start": "2849599",
    "end": "2855760"
  },
  {
    "text": "i can set up a websocket a websocket connection and in c-sharp",
    "start": "2855760",
    "end": "2861200"
  },
  {
    "text": "i can basically deal with the websocket all in c sharp but this is showing you a",
    "start": "2861200",
    "end": "2866559"
  },
  {
    "text": "mechanism that i had to develop which is basically called interoperability with javascript",
    "start": "2866559",
    "end": "2872720"
  },
  {
    "text": "so the version i'm going to show you now contains a lot of javascript and it kind of defeats the point of blazer because i want to stay in c sharp",
    "start": "2872720",
    "end": "2879280"
  },
  {
    "text": "all of the bit that i just built the ui all of that's in c sharp but this bit is going to be in some javascript and i'm not going to go too",
    "start": "2879280",
    "end": "2885920"
  },
  {
    "text": "deeply into the javascript because i'm actually going to be able to remove all of this which is quite cool um but what i've",
    "start": "2885920",
    "end": "2890960"
  },
  {
    "text": "basically said is when the application's initialized it's going to invoke some javascript",
    "start": "2890960",
    "end": "2897760"
  },
  {
    "text": "which is actually hidden and it's sitting in the in the index html page and",
    "start": "2897760",
    "end": "2904559"
  },
  {
    "text": "basically connect over to this uh websocket url and when you when you do that",
    "start": "2904559",
    "end": "2911760"
  },
  {
    "text": "set up a reference.net reference back to this application",
    "start": "2911760",
    "end": "2917040"
  },
  {
    "text": "and uh it's still got the same thing when it's connected it's true and then it says um when r is connected",
    "start": "2917040",
    "end": "2924400"
  },
  {
    "text": "then um so basically it will get a response back from the javascript and then r",
    "start": "2924400",
    "end": "2931599"
  },
  {
    "text": "should be either true or false and then if it's true then it will be connected so this websock is connected then i load the sample questions in",
    "start": "2931599",
    "end": "2938160"
  },
  {
    "text": "again on the html page i had this piece of",
    "start": "2938160",
    "end": "2943599"
  },
  {
    "text": "javascript that i'm interopering with and it looks really similar to um",
    "start": "2943599",
    "end": "2949839"
  },
  {
    "text": "uh well it's kind of painful because i've got a",
    "start": "2949839",
    "end": "2954960"
  },
  {
    "text": "connection method a disconnect method and a vocal method and basically the way that i'm doing this is",
    "start": "2954960",
    "end": "2961119"
  },
  {
    "text": "i'm invoking this from c sharp then c sharps creating the websocket then invoking back the dotnet method",
    "start": "2961119",
    "end": "2966960"
  },
  {
    "text": "when a message comes in and you'll see this dot net object reference invoke method on vote",
    "start": "2966960",
    "end": "2972800"
  },
  {
    "text": "is then invoking a c-sharp method called on-vote and when someone votes it does it it",
    "start": "2972800",
    "end": "2980079"
  },
  {
    "text": "passes this information across now this this this worked and i created a new method in my application on my api",
    "start": "2980079",
    "end": "2986880"
  },
  {
    "text": "called vote and basically now you can send this particular your this data over and say i want to vote",
    "start": "2986880",
    "end": "2993040"
  },
  {
    "text": "question id one answer one and i was able to get into a scenario",
    "start": "2993040",
    "end": "2998880"
  },
  {
    "text": "where i've created a new serverless function called vote on the server it looks like this you can see it later",
    "start": "2998880",
    "end": "3005280"
  },
  {
    "text": "if you want um the important thing is i had to do this javascript interrupt just to be able to use a websocket now",
    "start": "3005280",
    "end": "3012800"
  },
  {
    "text": "javascript interrupt is really interesting in blazer because there will be times when you're building web applications that the",
    "start": "3012800",
    "end": "3018960"
  },
  {
    "text": "thing that you want to build just doesn't exist in c sharp and you have to invoke or work with um with uh",
    "start": "3018960",
    "end": "3025599"
  },
  {
    "text": "javascript so you probably will find yourself having to dip into invoking javascript methods from c",
    "start": "3025599",
    "end": "3031839"
  },
  {
    "text": "sharp in in your time when you're developing laser applications but it's cool that we won't have to do",
    "start": "3031839",
    "end": "3037200"
  },
  {
    "text": "this we don't have to do this anymore so um let's just see",
    "start": "3037200",
    "end": "3044000"
  },
  {
    "text": "what that looks like now so i've got my application it's connecting up to this websocket and when i click on answer one it sends",
    "start": "3044000",
    "end": "3052400"
  },
  {
    "text": "a message you can see on the over here you can see that there is a a message that's being sent over via a",
    "start": "3052400",
    "end": "3058240"
  },
  {
    "text": "websocket um and so the person using the vote screen can now",
    "start": "3058240",
    "end": "3063920"
  },
  {
    "text": "vote using that and so it's being sent to the lambda function called vote and then that votes being broadcast to all the connected clients",
    "start": "3063920",
    "end": "3070240"
  },
  {
    "text": "the only client that's actually listening to it though is the question screen which is receiving all of the different votes and showing them on the screen as",
    "start": "3070240",
    "end": "3076559"
  },
  {
    "text": "they happen so now if i if i basically show that so",
    "start": "3076559",
    "end": "3082079"
  },
  {
    "text": "i've got on the left hand side here the uh i've got the left hand side i've got the question",
    "start": "3082079",
    "end": "3087280"
  },
  {
    "text": "screen on the right hand side i've got the vote screen and you'll see as i'm voting on the right-hand side it's sending a",
    "start": "3087280",
    "end": "3094000"
  },
  {
    "text": "message over to the question screen and we'll be able to see like how people are voting",
    "start": "3094000",
    "end": "3099119"
  },
  {
    "text": "now this is just tables and it looks a little bit ugly but this is exactly the same logic as i had in my vue.js",
    "start": "3099119",
    "end": "3105119"
  },
  {
    "text": "application that we used earlier and you'll see as someone's as they're",
    "start": "3105119",
    "end": "3110480"
  },
  {
    "text": "tapping and so forth then it's um updating both sides so that's the real-time communication stuff is kind of now working",
    "start": "3110480",
    "end": "3117119"
  },
  {
    "text": "but how do we kind of remove the javascript well i actually showed this talk in ndc",
    "start": "3117119",
    "end": "3124319"
  },
  {
    "text": "london and i was when i came to like looking at blazer i was a bit disappointed about",
    "start": "3124319",
    "end": "3130079"
  },
  {
    "text": "how quickly i had to jump into javascript to do something which was quite relatively straightforward you see when",
    "start": "3130079",
    "end": "3136079"
  },
  {
    "text": "i do that fetch questions um beforehand and we we go and make a request",
    "start": "3136079",
    "end": "3141520"
  },
  {
    "text": "to get uh to get questions we're actually underlying using the network stack of",
    "start": "3141520",
    "end": "3147200"
  },
  {
    "text": "the browser to go and get those questions it's making a request and it's getting rooted",
    "start": "3147200",
    "end": "3152720"
  },
  {
    "text": "uh now in in c sharp we're actually using the http client but what they've done in",
    "start": "3152720",
    "end": "3158800"
  },
  {
    "text": "the blaze the blazer team they've kind of intercepted http client and wired it up to the browser so that you",
    "start": "3158800",
    "end": "3164880"
  },
  {
    "text": "can just use http client and all of your but your network requests are actually getting passed",
    "start": "3164880",
    "end": "3170079"
  },
  {
    "text": "through to the browser so it's using the networking stack of the browser so that was really cool for http",
    "start": "3170079",
    "end": "3175200"
  },
  {
    "text": "requests but web sockets didn't work like that we had to use this kind of invoking javascript to create web sockets",
    "start": "3175200",
    "end": "3181280"
  },
  {
    "text": "but now they've basically wired done a similar thing so they've basically intercepted",
    "start": "3181280",
    "end": "3187280"
  },
  {
    "text": "the networking of websockets as well so you can just create a websocket as you would do ordinarily if you were",
    "start": "3187280",
    "end": "3193359"
  },
  {
    "text": "building a c-sharp console application and you want to add websockets to it",
    "start": "3193359",
    "end": "3198880"
  },
  {
    "text": "or a xamarin application and you want to add web sockets to it well now you can do that in a blazer application as well",
    "start": "3198880",
    "end": "3204559"
  },
  {
    "text": "and basically the networking aspect of it is kind of wired back up to the browser so you're really using the browser to do",
    "start": "3204559",
    "end": "3210079"
  },
  {
    "text": "the network requests but it looks and feels like you're using c sharp um",
    "start": "3210079",
    "end": "3215599"
  },
  {
    "text": "and and that's doing it from the free sharp c sharp so to show you that i'm going to take you to obviously a more finished application that i have",
    "start": "3215599",
    "end": "3223359"
  },
  {
    "text": "so this is the razer question questions.razer view and you will see",
    "start": "3223359",
    "end": "3231920"
  },
  {
    "text": "that instead of invoking javascript what i've got is on the on initialize screen now i say",
    "start": "3231920",
    "end": "3240480"
  },
  {
    "text": "await websocket dot connect async and obviously i do have at the top here um i have system",
    "start": "3240480",
    "end": "3248520"
  },
  {
    "text": "system.net websockets i'm using that uh library and i've got a few other",
    "start": "3248520",
    "end": "3254559"
  },
  {
    "text": "things as well that i'm using as well uh newtonsoft.json system.threading and various other",
    "start": "3254559",
    "end": "3260319"
  },
  {
    "text": "external things i'm also using the http client which i'm having injected this websocket's not being injected i'm",
    "start": "3260319",
    "end": "3267200"
  },
  {
    "text": "just using the the instantiation i'm creating an instantiation in the page itself so i'm not using dependency injection",
    "start": "3267200",
    "end": "3274079"
  },
  {
    "text": "and i'm saying websocket.connect async and",
    "start": "3274079",
    "end": "3280000"
  },
  {
    "text": "i'm passing in a token because you can dispose you can basically cancel the the thing using the token and then",
    "start": "3280000",
    "end": "3287200"
  },
  {
    "text": "i'm delegating it to receive loop and what that means is that whenever this websocket receives a message",
    "start": "3287200",
    "end": "3293760"
  },
  {
    "text": "it's going to call receive loop so that's now my web this thing this",
    "start": "3293760",
    "end": "3298880"
  },
  {
    "text": "websocket is actually now a live websocket in my csharp application and i can i can reference that",
    "start": "3298880",
    "end": "3307599"
  },
  {
    "text": "do i use it at all in that page no i don't um i do on this one",
    "start": "3307599",
    "end": "3314079"
  },
  {
    "text": "i've got an echo that i don't and one of my pages basically i can use it",
    "start": "3314079",
    "end": "3319760"
  },
  {
    "text": "in my view i can say websocket.state and if it's open then i can show certain things and if it's closed i can show",
    "start": "3319760",
    "end": "3325280"
  },
  {
    "text": "other things as well so you can actually it's just a c-sharp object then which you can use in your application but it's intelligent enough",
    "start": "3325280",
    "end": "3331280"
  },
  {
    "text": "to know what it actually underlying is the network communication for a real web socket so we're going",
    "start": "3331280",
    "end": "3336400"
  },
  {
    "text": "back to the questions.razer if i go to this receive loop question",
    "start": "3336400",
    "end": "3342799"
  },
  {
    "text": "where are we receive loop",
    "start": "3342799",
    "end": "3349359"
  },
  {
    "text": "let's show you on the vote screen actually so i set up the new websocket i call",
    "start": "3349359",
    "end": "3355440"
  },
  {
    "text": "receive loop as a delegate basically when a message gets posted to receive loop on the vote screen",
    "start": "3355440",
    "end": "3362079"
  },
  {
    "text": "what happens is when the presenter changes the question the current questions in view when they say well i want it to be question one or",
    "start": "3362079",
    "end": "3367920"
  },
  {
    "text": "question two that sends a signal up to the system the system then broadcasts that message to all of the",
    "start": "3367920",
    "end": "3373839"
  },
  {
    "text": "connected clients and that message ultimately comes back into this receive loop",
    "start": "3373839",
    "end": "3379280"
  },
  {
    "text": "and what i do is i go okay i'm going to take the the websocket.receive async",
    "start": "3379280",
    "end": "3385359"
  },
  {
    "text": "information and i'm going to receive it as text now it's actually json so i'm going to cast it as json as",
    "start": "3385359",
    "end": "3392000"
  },
  {
    "text": "a json object i'm going to look for the message um part of it and if it's change question then i'm",
    "start": "3392000",
    "end": "3399280"
  },
  {
    "text": "basically going to change the question which is currently displayed on the screen and change question all that does is",
    "start": "3399280",
    "end": "3406640"
  },
  {
    "text": "uh i'll just scroll to it uh change question over here basically changes voted to false um",
    "start": "3406640",
    "end": "3413760"
  },
  {
    "text": "changes current count to the current question and then cause this thing called state has changed status change is an",
    "start": "3413760",
    "end": "3419280"
  },
  {
    "text": "interesting one you only you don't have to call that all the time when you make modifications to your objects",
    "start": "3419280",
    "end": "3424319"
  },
  {
    "text": "they will be reflected in the ui automatically but because this is using web sockets which might be coming back",
    "start": "3424319",
    "end": "3429680"
  },
  {
    "text": "on a different i think it's coming back on a different thread or it's not always on the ui occasionally",
    "start": "3429680",
    "end": "3434799"
  },
  {
    "text": "you might have to call status change to just tell your application that it needs to update the ui um i'm not",
    "start": "3434799",
    "end": "3441520"
  },
  {
    "text": "really sure about the the built-in stuff about that and why you always have to call it but i found",
    "start": "3441520",
    "end": "3447760"
  },
  {
    "text": "that i had to call status change to actually update the page and so what this means now is let's go",
    "start": "3447760",
    "end": "3453839"
  },
  {
    "text": "and just look at one of the browsers if i go over to the laser front end and",
    "start": "3453839",
    "end": "3461839"
  },
  {
    "text": "i'll take that one over there and just pop that on that side",
    "start": "3462319",
    "end": "3469119"
  },
  {
    "text": "there we go and then if i just take one over here",
    "start": "3470160",
    "end": "3475838"
  },
  {
    "text": "oh god why is it doing that",
    "start": "3483040",
    "end": "3488640"
  },
  {
    "text": "there we go sorry about this uh so i've got uh let's put the vote question on one side",
    "start": "3488640",
    "end": "3495280"
  },
  {
    "text": "and the questions on one and so hopefully",
    "start": "3495280",
    "end": "3500160"
  },
  {
    "text": "he's connected okay yes that is working as i change the",
    "start": "3501119",
    "end": "3507839"
  },
  {
    "text": "screen on questions you can see anyone which is connected to the vote screen the the title is changing as i'm",
    "start": "3507839",
    "end": "3514160"
  },
  {
    "text": "changing the question so i went to tabs and spaces but everyone connected is getting the new question",
    "start": "3514160",
    "end": "3519280"
  },
  {
    "text": "if you see and then i can answer and so forth and all of that stuff happens over um over signal r",
    "start": "3519280",
    "end": "3527040"
  },
  {
    "text": "so my actual application i've just got a couple of minutes to talk about this it's basically broken into a uh",
    "start": "3527040",
    "end": "3534640"
  },
  {
    "text": "a couple of sort of folders i have um my blazer front end which is my my front",
    "start": "3534720",
    "end": "3540960"
  },
  {
    "text": "end application which does the websocket communications and allows the voting and then i have a number of projects for",
    "start": "3540960",
    "end": "3546400"
  },
  {
    "text": "each of my lambda functions so i have an onconnect function an on disconnect function a send message function",
    "start": "3546400",
    "end": "3552480"
  },
  {
    "text": "and a slide function and the way that i actually deploy this application if i want to deploy it",
    "start": "3552480",
    "end": "3559599"
  },
  {
    "text": "is there's a folder a file sorry inside um",
    "start": "3559599",
    "end": "3565920"
  },
  {
    "text": "the back end if i want to deploy the lambda functions and here is uh",
    "start": "3566160",
    "end": "3573200"
  },
  {
    "text": "something called a serverless application model you don't need to worry about what it is",
    "start": "3573200",
    "end": "3578559"
  },
  {
    "text": "in rider and in visual studio i can do this thing where i just basically right click on one of these",
    "start": "3578559",
    "end": "3584480"
  },
  {
    "text": "templates and say deploy serverless application and then the application i can deploy to",
    "start": "3584480",
    "end": "3590640"
  },
  {
    "text": "um to aws so i just say i want to update this and deploy it click on deploy and what it'll do is",
    "start": "3590640",
    "end": "3597040"
  },
  {
    "text": "it'll build my application and it will then deploy it out to aws lambda and um then i'm able to sort of use this",
    "start": "3597040",
    "end": "3604240"
  },
  {
    "text": "and publish it uh to live the advantage i'd say over using this over um the the setup that i",
    "start": "3604240",
    "end": "3613119"
  },
  {
    "text": "had before is that this only ever costs me money if um someone invit like actually goes",
    "start": "3613119",
    "end": "3621280"
  },
  {
    "text": "to my website and uses it um otherwise i don't pay for anything the the way that the costing works with",
    "start": "3621280",
    "end": "3626480"
  },
  {
    "text": "lambda is that you only pay pay per per request that's being um being served",
    "start": "3626480",
    "end": "3631760"
  },
  {
    "text": "you don't pay for the infrastructure which it runs on so that's kind of that's kind of it if",
    "start": "3631760",
    "end": "3637760"
  },
  {
    "text": "you want the code it's on my github i'm at the biebs on github i'm at the beams on twitter as well and",
    "start": "3637760",
    "end": "3644240"
  },
  {
    "text": "uh i'll be developing this application and hopefully get to the same point that they look identical",
    "start": "3644240",
    "end": "3650000"
  },
  {
    "text": "and they operate identically and if you want to help me then by all means you can jump on that github",
    "start": "3650000",
    "end": "3655839"
  },
  {
    "text": "and start working out with me as well thank you very much indeed",
    "start": "3655839",
    "end": "3661119"
  }
]