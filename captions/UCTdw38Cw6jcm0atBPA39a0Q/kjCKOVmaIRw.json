[
  {
    "text": "uh welcome thanks for joining me uh so today I'm going to talk a bit about Linux",
    "start": "5600",
    "end": "11679"
  },
  {
    "text": "namespaces um mainly because I find them really fun so I'm uh Martin I work for Cisco",
    "start": "11679",
    "end": "19720"
  },
  {
    "text": "here in Norway uh been there for quite a few years now um all I do is very",
    "start": "19720",
    "end": "25279"
  },
  {
    "text": "learning baced and uh that's why I do do stuff",
    "start": "25279",
    "end": "31960"
  },
  {
    "text": "like very specific Linux stuff like namespaces [Music] um before we begin with anything just a",
    "start": "31960",
    "end": "43360"
  },
  {
    "text": "warning never run any of the code from these slides so the code I have on these slides needs to fit on one slide which",
    "start": "43360",
    "end": "51239"
  },
  {
    "text": "means there are no error checking there's a lot of crap code uh so if you try and run this and something",
    "start": "51239",
    "end": "57920"
  },
  {
    "text": "happens you won't know and you will think everything working fine please check",
    "start": "57920",
    "end": "63800"
  },
  {
    "text": "errors uh it's my not my fault if you do that's on you",
    "start": "64000",
    "end": "70720"
  },
  {
    "text": "anyway let's talk about Nam spaces and that was a bit in the",
    "start": "70720",
    "end": "77439"
  },
  {
    "text": "way move it to the side uh yeah so what is a nam space and it's not like one of",
    "start": "77439",
    "end": "84799"
  },
  {
    "text": "the ones on the left here which you're might be familiar with from languages like C++ and",
    "start": "84799",
    "end": "90840"
  },
  {
    "text": "probably C and stuff I don't know C but it might have name spaces uh it's",
    "start": "90840",
    "end": "96079"
  },
  {
    "text": "something that wraps a global kernel resource kind of depends on what you",
    "start": "96079",
    "end": "102680"
  },
  {
    "text": "call a resource uh but Linux has a lot of different name spaces which can work by",
    "start": "102680",
    "end": "109960"
  },
  {
    "text": "themselves or together uh and they are heavily used in for instance sandboxes or in",
    "start": "109960",
    "end": "116920"
  },
  {
    "text": "containerization so Docker is a heavy user of Nam spaces some Nam spaces are pretty",
    "start": "116920",
    "end": "124479"
  },
  {
    "text": "specific to The Container use case",
    "start": "124479",
    "end": "129640"
  },
  {
    "text": "um they are created in one of two ways either by using the Clone system call",
    "start": "129640",
    "end": "136120"
  },
  {
    "text": "with some Flags or the unshare system call so in these slides we'll always use",
    "start": "136120",
    "end": "141959"
  },
  {
    "text": "unshare because clone is a pain uh and the main idea is to just",
    "start": "141959",
    "end": "147599"
  },
  {
    "text": "create them and see how they work anyway so I'm not gonna take you through the pain of using",
    "start": "147599",
    "end": "154519"
  },
  {
    "text": "clone but we'll start with what I think is an essential namespace the oh first",
    "start": "154519",
    "end": "160840"
  },
  {
    "text": "off what what name spaces do we have and these are just a",
    "start": "160840",
    "end": "165879"
  },
  {
    "text": "quick quick list of them uh I'll try to get through all of them not in this",
    "start": "165879",
    "end": "173159"
  },
  {
    "text": "order uh some of them I will go quite quickly through because I find them less",
    "start": "173159",
    "end": "179239"
  },
  {
    "text": "interesting or they're very specific or something like that but uh I'll try to spend some more time on",
    "start": "179239",
    "end": "185720"
  },
  {
    "text": "the ones I find interesting at least and we'll start with the username",
    "start": "185720",
    "end": "192599"
  },
  {
    "text": "space so the user namespace isolates users and groups and",
    "start": "192599",
    "end": "200959"
  },
  {
    "text": "manages permissions in a way uh basically it manages permissions",
    "start": "200959",
    "end": "206000"
  },
  {
    "text": "in other Nam spaces so often you group name name spaces in username space and",
    "start": "206000",
    "end": "211760"
  },
  {
    "text": "non- username space and one thing to note here is that",
    "start": "211760",
    "end": "219319"
  },
  {
    "text": "when you boot up a Linux system you're already using namespaces everything is",
    "start": "219319",
    "end": "225280"
  },
  {
    "text": "in an initial namespace there is no way to run Linux today without being in a",
    "start": "225280",
    "end": "233400"
  },
  {
    "text": "namespace so with the username space you create it by using the clone",
    "start": "233840",
    "end": "240120"
  },
  {
    "text": "new user and the reason I start with it is because normally normally I can't",
    "start": "240120",
    "end": "247120"
  },
  {
    "text": "speak anymore normally you need uh capsus admin privileges which is",
    "start": "247120",
    "end": "252280"
  },
  {
    "text": "basically root to create a nam space except if you're in a username",
    "start": "252280",
    "end": "258600"
  },
  {
    "text": "space because every non username space is governed by username space so every",
    "start": "258600",
    "end": "265000"
  },
  {
    "text": "other namespace is kind of owned by username space and the Privileges are",
    "start": "265000",
    "end": "270240"
  },
  {
    "text": "defined if in in the owning username",
    "start": "270240",
    "end": "275638"
  },
  {
    "text": "space so when you mess around with username spaces you get a hierarchy of some sort so in this example ns0 is the",
    "start": "278199",
    "end": "286560"
  },
  {
    "text": "initial username space that that you create and in this example you user 1,000 and group",
    "start": "286560",
    "end": "293400"
  },
  {
    "text": "1,000 then you create other name spaces where you suddenly get other user users",
    "start": "293400",
    "end": "299080"
  },
  {
    "text": "in group and this file format here is actually the file format used to do the",
    "start": "299080",
    "end": "306240"
  },
  {
    "text": "mapping of users from a namespace to the initial namespace so what this mean the first",
    "start": "306240",
    "end": "312440"
  },
  {
    "text": "line is the or the first part here is the user uh mapping and that says that",
    "start": "312440",
    "end": "319120"
  },
  {
    "text": "user 100 inside of the new namespace should map to user 688 outside of it and",
    "start": "319120",
    "end": "327479"
  },
  {
    "text": "you do that for 500 IDs so if you do the",
    "start": "327479",
    "end": "332919"
  },
  {
    "text": "maths and if I haven't done it wrong then uid 1000 in the initial name space here should map to uid",
    "start": "332919",
    "end": "339960"
  },
  {
    "text": "412 inside the new namespace and inside a usern name space",
    "start": "339960",
    "end": "345639"
  },
  {
    "text": "you can create new username spaces where you are some sort of",
    "start": "345639",
    "end": "351599"
  },
  {
    "text": "root but is important to note that this doesn't give you extra file permissions",
    "start": "352080",
    "end": "357600"
  },
  {
    "text": "for instance even though you are root and root in theory can do everything you",
    "start": "357600",
    "end": "362840"
  },
  {
    "text": "still can't open up files that your mapped root rotter mapped user can't",
    "start": "362840",
    "end": "370440"
  },
  {
    "text": "open so even though you are uid zero the permission checks for file system access",
    "start": "370440",
    "end": "376240"
  },
  {
    "text": "for instance is done by the initial namespace and often times like in ns2",
    "start": "376240",
    "end": "383319"
  },
  {
    "text": "here where we map user zero to group uh user zero inside the namespace to user",
    "start": "383319",
    "end": "389520"
  },
  {
    "text": "1,000 outside of it and we only map one user every file and directory and",
    "start": "389520",
    "end": "396319"
  },
  {
    "text": "everything on the system that is not owned by uid 1000 is owned by",
    "start": "396319",
    "end": "402840"
  },
  {
    "text": "nobody because we don't know what that user is inside of the",
    "start": "402840",
    "end": "408080"
  },
  {
    "text": "namespace I'll show you how to actually write these files and what these files are",
    "start": "408080",
    "end": "414680"
  },
  {
    "text": "uh so to create a username space all you have to do is add clone new user to your",
    "start": "418400",
    "end": "426720"
  },
  {
    "text": "call to unshare after this after this",
    "start": "426720",
    "end": "431840"
  },
  {
    "text": "line you are you have created a new username space and you have entered",
    "start": "431840",
    "end": "438039"
  },
  {
    "text": "it but currently you don't have any user because you haven't mapped",
    "start": "438440",
    "end": "443520"
  },
  {
    "text": "anything so that's the next step is to map the user and groups like we did before",
    "start": "443520",
    "end": "450240"
  },
  {
    "text": "and th that's these two files proc self uid map and proc self G",
    "start": "450240",
    "end": "457080"
  },
  {
    "text": "map those are the files you have to write to to set up the",
    "start": "457080",
    "end": "462800"
  },
  {
    "text": "mappings and what I do here is I before I enter the namespace I fetch my effective user and group and I MA map my",
    "start": "462800",
    "end": "471039"
  },
  {
    "text": "effective user and group to U ID and group ID",
    "start": "471039",
    "end": "476479"
  },
  {
    "text": "zero uh so after these files have been written I should",
    "start": "478080",
    "end": "484159"
  },
  {
    "text": "be user zero and group zero so before this I will be nobody because I don't",
    "start": "484159",
    "end": "490120"
  },
  {
    "text": "have a mapping and after this I would expect to be Z Zer turns",
    "start": "490120",
    "end": "496840"
  },
  {
    "text": "out I'm not in most cases because there are some rules governing these two",
    "start": "496840",
    "end": "503879"
  },
  {
    "text": "files so in uh unprivileged namespace in unprivileged username space like this is",
    "start": "503879",
    "end": "510599"
  },
  {
    "text": "I'm not running this as root I don't have any permissions in the parent Nam space I'm only allowed to write a single",
    "start": "510599",
    "end": "517518"
  },
  {
    "text": "line to these files that line can only map a single",
    "start": "517519",
    "end": "522599"
  },
  {
    "text": "user and that user has to be the user that is writing to this file so I'm only",
    "start": "522599",
    "end": "529080"
  },
  {
    "text": "allowed to map myself basically if I don't have caps set u ID if I have set u",
    "start": "529080",
    "end": "535320"
  },
  {
    "text": "ID I can do anything which is why for instance do D is running as root because then it can",
    "start": "535320",
    "end": "541040"
  },
  {
    "text": "write whatever it wants to into these files but the problem here is that this",
    "start": "541040",
    "end": "548279"
  },
  {
    "text": "call to write fails and as I'm not checking error codes then I don't know that they fail",
    "start": "548279",
    "end": "554760"
  },
  {
    "text": "but it does fail the reason is I'm unprivileged so I'm not allowed to add",
    "start": "554760",
    "end": "560800"
  },
  {
    "text": "myself to new groups not allowed to change groups uh and so be before I create a",
    "start": "560800",
    "end": "568279"
  },
  {
    "text": "mapping I have to write deny to this proc self set groups file which stops me from changing groups",
    "start": "568279",
    "end": "576320"
  },
  {
    "text": "and does a lot of stuff uh and when I write this then the",
    "start": "576320",
    "end": "583000"
  },
  {
    "text": "mapping mapping right succeeds and if I checked error codes I",
    "start": "583000",
    "end": "590279"
  },
  {
    "text": "would know that that's what happening so to show you how it",
    "start": "590279",
    "end": "597839"
  },
  {
    "text": "works uh I have this script so this one is basically the code",
    "start": "598120",
    "end": "605079"
  },
  {
    "text": "that I showed you so I start up I print out who I am so I'm User 1,00 Group 100",
    "start": "605079",
    "end": "612240"
  },
  {
    "text": "and the the only capability I have is Cap wake alarm it's not even even my",
    "start": "612240",
    "end": "618279"
  },
  {
    "text": "effective set it's my inherited Set uh so I create",
    "start": "618279",
    "end": "623680"
  },
  {
    "text": "a new username space using the unshare call and now you",
    "start": "623680",
    "end": "629160"
  },
  {
    "text": "see I am well user in group 65k which on this system is",
    "start": "629160",
    "end": "634360"
  },
  {
    "text": "nobody and I have all permissions that is because I own this",
    "start": "634360",
    "end": "639839"
  },
  {
    "text": "namespace this username space and I have all capabilities in this namespace and for",
    "start": "639839",
    "end": "646680"
  },
  {
    "text": "all the Nam spaces that this namespace governs and I can change groups and",
    "start": "646680",
    "end": "652680"
  },
  {
    "text": "users if I want to which is the next thing I do I write to these files and I then get user 10 in group 42",
    "start": "652680",
    "end": "660720"
  },
  {
    "text": "because in this particular case that's what I write and I still have all permissions and of course depending on",
    "start": "660720",
    "end": "667360"
  },
  {
    "text": "how you use it you should drop the Privileges that you don't need and all that stuff but",
    "start": "667360",
    "end": "672720"
  },
  {
    "text": "uh I'm not doing that here so the username space is required",
    "start": "672720",
    "end": "679120"
  },
  {
    "text": "so that you can manage other Nam spaces or you need permissions in the in the",
    "start": "679120",
    "end": "684480"
  },
  {
    "text": "username space to manage the other name spaces",
    "start": "684480",
    "end": "690959"
  },
  {
    "text": "so next up is the Mount name space and this is uh pretty",
    "start": "692200",
    "end": "699959"
  },
  {
    "text": "flexible so what it does it gives you a new list of Mount points so in the",
    "start": "699959",
    "end": "707519"
  },
  {
    "text": "original namespace you have a list of Mount points which is everything that is been mounted in this",
    "start": "707519",
    "end": "713639"
  },
  {
    "text": "namespace and what it does when you create a new Mount name space is you copy that list of man points but that",
    "start": "713639",
    "end": "721440"
  },
  {
    "text": "list is now yours so you can mess around with it so you could use this to completely",
    "start": "721440",
    "end": "728680"
  },
  {
    "text": "rewrite the file system uh you created by instead or in",
    "start": "728680",
    "end": "737360"
  },
  {
    "text": "addition to the Clone new user you add clone new NS and you might think that that's a",
    "start": "737360",
    "end": "743120"
  },
  {
    "text": "Weare name that's because it's clone new namespace because this is the first namespace that was created",
    "start": "743120",
    "end": "749560"
  },
  {
    "text": "and when it was created nobody thought they would ever make a new one so",
    "start": "749560",
    "end": "755079"
  },
  {
    "text": "sticks um yeah but you can also propagate changes that you do in your namespace to your previous namespace or",
    "start": "755079",
    "end": "763760"
  },
  {
    "text": "vice versa so you have some propagation methods you can say that it is that the",
    "start": "763760",
    "end": "770959"
  },
  {
    "text": "mount points are shared that they're private that they're slave or unbindable so shared means that they are",
    "start": "770959",
    "end": "778040"
  },
  {
    "text": "mirroring each other so one change in either your previous or your new namespace will propagate to the",
    "start": "778040",
    "end": "785839"
  },
  {
    "text": "other private means that they won't so they are completely isolated sets you can do whatever you want in one of them",
    "start": "785839",
    "end": "792120"
  },
  {
    "text": "or when I say whatever you want you can do whatever you want with the list of Mount points if you have the same",
    "start": "792120",
    "end": "798519"
  },
  {
    "text": "mountpoint mounted in the two Nam spaces and you write files that is visible because you",
    "start": "798519",
    "end": "804480"
  },
  {
    "text": "haven't changed you haven't changed the contents of the mount point so if you have the same Mount Point everything you",
    "start": "804480",
    "end": "810560"
  },
  {
    "text": "do inside of it will propagate or it won't even propagate it will be the same but you can do whatever you want",
    "start": "810560",
    "end": "817560"
  },
  {
    "text": "with the list of Mount points Ms slave will say that you",
    "start": "817560",
    "end": "825320"
  },
  {
    "text": "are in the new namespace that you just created all changes from the previous",
    "start": "825320",
    "end": "830800"
  },
  {
    "text": "namespace will propagate to you but all changes you do will be",
    "start": "830800",
    "end": "836800"
  },
  {
    "text": "private or then you can do unb which says that this Mount Point cannot be",
    "start": "836800",
    "end": "842000"
  },
  {
    "text": "bind mounted anywhere else so that's stuck to where it is right",
    "start": "842000",
    "end": "847639"
  },
  {
    "text": "now and this is not something that you need to do on the whole system or not none of the system you do this on a per",
    "start": "847639",
    "end": "854920"
  },
  {
    "text": "Mount basis if you want to uh and when you create a new Mount",
    "start": "854920",
    "end": "862360"
  },
  {
    "text": "name space you should set your preferred uh",
    "start": "862360",
    "end": "867399"
  },
  {
    "text": "propagation because that might be unexpected depending on what your system",
    "start": "867399",
    "end": "872920"
  },
  {
    "text": "is at one point we had uh cisv as the unit system and with CV it was Private",
    "start": "872920",
    "end": "881120"
  },
  {
    "text": "the default was private but then system D came along and they changed that to",
    "start": "881120",
    "end": "888240"
  },
  {
    "text": "shared and if you don't really know exactly what you're running on then you should definitely set it explicitly",
    "start": "888399",
    "end": "894800"
  },
  {
    "text": "because it might be different depending on what computer you're running on",
    "start": "894800",
    "end": "900680"
  },
  {
    "text": "so strategy for making our own or our own root file system which is one of the",
    "start": "903399",
    "end": "909000"
  },
  {
    "text": "more fun things you can do here and that's basically what Docker does it creates a new root file system for you",
    "start": "909000",
    "end": "914959"
  },
  {
    "text": "which looks like auntu or Debian or whatever you want it to look",
    "start": "914959",
    "end": "921440"
  },
  {
    "text": "like so first step create a new Mount name space second make all the mounts private",
    "start": "921920",
    "end": "929839"
  },
  {
    "text": "because I don't want anything to be propagating then I want to build up a",
    "start": "929839",
    "end": "936000"
  },
  {
    "text": "new root ofest structure and then I want to swap to",
    "start": "936000",
    "end": "942279"
  },
  {
    "text": "that and thereby get rid of the old one so creating a new",
    "start": "942440",
    "end": "949560"
  },
  {
    "text": "Mount namespace clone new NS so we created and entered a new Mount",
    "start": "949560",
    "end": "957639"
  },
  {
    "text": "name space in addition to the username space and by doing it like this this new",
    "start": "957639",
    "end": "963279"
  },
  {
    "text": "username space will govern the new Mount Nam space you are guaranteed that if you",
    "start": "963279",
    "end": "969279"
  },
  {
    "text": "in unshare or clone add more flags for Nam spaces where one of them is the",
    "start": "969279",
    "end": "976639"
  },
  {
    "text": "user the user name space will be created first and govern all the other name spaces that you create that's a",
    "start": "976639",
    "end": "982600"
  },
  {
    "text": "guarantee you get from the kernel and this new Mountain name space",
    "start": "982600",
    "end": "988360"
  },
  {
    "text": "is exactly the same as the old one so next thing I do is I make",
    "start": "988360",
    "end": "995959"
  },
  {
    "text": "everything private so I go to the root of my current file",
    "start": "995959",
    "end": "1001079"
  },
  {
    "text": "system I set theand points private and I do that recursively so now I'm no longer sharing",
    "start": "1001079",
    "end": "1009199"
  },
  {
    "text": "I'm not no longer propagating changes between the two name namespaces so now I'm actually isolated and can do",
    "start": "1009199",
    "end": "1014759"
  },
  {
    "text": "whatever I want with my list of Mount points",
    "start": "1014759",
    "end": "1020480"
  },
  {
    "text": "and then I start creating stuff so what I like to do in this case is to mount a",
    "start": "1021040",
    "end": "1026438"
  },
  {
    "text": "temp FS on SL temp I use SL temp because I know it's",
    "start": "1026439",
    "end": "1031558"
  },
  {
    "text": "there and it's probably not needed for this application so I can mess around with",
    "start": "1031559",
    "end": "1037240"
  },
  {
    "text": "it and as I know this change is not propagated so I'm not messing up anyone else by mounting a new temp ofs over",
    "start": "1037240",
    "end": "1046319"
  },
  {
    "text": "temp then I create some directories I buy Mount some stuff it's not really",
    "start": "1047400",
    "end": "1053919"
  },
  {
    "text": "important what I buy and mount in this case uh because I'm just creating a new root file system and what that will",
    "start": "1053919",
    "end": "1059799"
  },
  {
    "text": "contain kind of depends on your use case uh but since this is a Mount point",
    "start": "1059799",
    "end": "1067679"
  },
  {
    "text": "that only exists in my namespace I can write files I can make",
    "start": "1067679",
    "end": "1075360"
  },
  {
    "text": "directories I can make big structures of everything and no one else will see",
    "start": "1075360",
    "end": "1081279"
  },
  {
    "text": "them so when I created my root ofs the next thing is I need to swap my",
    "start": "1081559",
    "end": "1087760"
  },
  {
    "text": "new root of s to be my root of s and there's two choices here this is",
    "start": "1087760",
    "end": "1096919"
  },
  {
    "text": "one and that is using the pivot root uh system",
    "start": "1096919",
    "end": "1102039"
  },
  {
    "text": "call the way that works is it takes the new what is supposed to be the new root",
    "start": "1102039",
    "end": "1107200"
  },
  {
    "text": "file system and it also takes a directory which is where it should where it's supposed to",
    "start": "1107200",
    "end": "1112679"
  },
  {
    "text": "put the old root file system because pivot root will keep",
    "start": "1112679",
    "end": "1118840"
  },
  {
    "text": "that after running pivot root I CD to my new root file system because if not I'm",
    "start": "1119720",
    "end": "1126159"
  },
  {
    "text": "still wherever I was before that which means I could be leaking information that way so you should always CD to",
    "start": "1126159",
    "end": "1132799"
  },
  {
    "text": "somewhere inside of your new root file system and then I unmount the old rout",
    "start": "1132799",
    "end": "1137880"
  },
  {
    "text": "and delete it because I don't actually want that pointer back because if I had it I could do pivot route to get back",
    "start": "1137880",
    "end": "1143679"
  },
  {
    "text": "out again which would break my isolation uh the other way of doing this",
    "start": "1143679",
    "end": "1150320"
  },
  {
    "text": "this is to use uh CH root uh the problem with that is that",
    "start": "1150320",
    "end": "1156360"
  },
  {
    "text": "it's limiting for instance making new username spaces I want to keep that",
    "start": "1156360",
    "end": "1161760"
  },
  {
    "text": "option open so I use pivot root which you have to implement yourself because it's not exposed to GC",
    "start": "1161760",
    "end": "1169640"
  },
  {
    "text": "so you have to uh you have to call that yourself using the CIS call GC",
    "start": "1169640",
    "end": "1176840"
  },
  {
    "text": "function but it's a small enough task and it keeps all options open so in",
    "start": "1176840",
    "end": "1184080"
  },
  {
    "text": "Docker you could actually have sub Dockers like inside of a Docker image you could have Docker running other",
    "start": "1184080",
    "end": "1190679"
  },
  {
    "text": "Docker images and that's because P allows",
    "start": "1190679",
    "end": "1196120"
  },
  {
    "text": "that uh another use case of this uh which I",
    "start": "1197240",
    "end": "1202600"
  },
  {
    "text": "actually implemented in our unit test framework at work is you can use this",
    "start": "1202600",
    "end": "1208440"
  },
  {
    "text": "and give your give your unit test its own view of the file",
    "start": "1208440",
    "end": "1215240"
  },
  {
    "text": "system which means you can actually mess around with the file system inside of your test and see that it behaves as",
    "start": "1215240",
    "end": "1223200"
  },
  {
    "text": "expected without anyone else seeing that which I find pretty cool",
    "start": "1223200",
    "end": "1230158"
  },
  {
    "text": "okay another quite essential Nam space is the pit name",
    "start": "1241000",
    "end": "1247280"
  },
  {
    "text": "space so the pit name space is there to isolate well process",
    "start": "1247280",
    "end": "1254200"
  },
  {
    "text": "ID numbers and isolate processes so the ID behind it is",
    "start": "1254200",
    "end": "1260600"
  },
  {
    "text": "that it hides that you're running on a system with other",
    "start": "1260600",
    "end": "1266600"
  },
  {
    "text": "processes so in a Docker image for instance they use this so that you don't",
    "start": "1266600",
    "end": "1271640"
  },
  {
    "text": "see that there are other processes running of course there's lots of other processes running on a system running",
    "start": "1271640",
    "end": "1278799"
  },
  {
    "text": "Docker but the docker image itself won't see them because of the pin name space",
    "start": "1278799",
    "end": "1284960"
  },
  {
    "text": "it kind of starts counting process ID numbers again so the first process inside of this pit name space will be",
    "start": "1284960",
    "end": "1292679"
  },
  {
    "text": "one which is important because the P1 in",
    "start": "1292679",
    "end": "1297880"
  },
  {
    "text": "Linux is special it has a task it is the init",
    "start": "1297880",
    "end": "1302919"
  },
  {
    "text": "system and despite its name the init systems most important task is not to",
    "start": "1302919",
    "end": "1308600"
  },
  {
    "text": "initialize new processes it is to kill them or to kill orphan",
    "start": "1308600",
    "end": "1315400"
  },
  {
    "text": "processes so if you have more than one process inside of a pit name space the",
    "start": "1315400",
    "end": "1321159"
  },
  {
    "text": "first process has the job of the init system which is why Docker recommends",
    "start": "1321159",
    "end": "1327120"
  },
  {
    "text": "you to only have one process inside of a Docker image because if not pit one needs to be in a",
    "start": "1327120",
    "end": "1334278"
  },
  {
    "text": "system this is this uh Nam space is also pretty different because the F when you",
    "start": "1335120",
    "end": "1342520"
  },
  {
    "text": "create it when you do unshare clone newed you're only creating the new name",
    "start": "1342520",
    "end": "1347799"
  },
  {
    "text": "space and it's empty you're not entering the new name space if you use clone you will enter",
    "start": "1347799",
    "end": "1356400"
  },
  {
    "text": "it uh the reason for that is that a lot of processes don't really like getting",
    "start": "1356400",
    "end": "1361480"
  },
  {
    "text": "their pit changed mid-run and GBC for instance are is",
    "start": "1361480",
    "end": "1367039"
  },
  {
    "text": "cashing your pit so if you did this and",
    "start": "1367039",
    "end": "1372559"
  },
  {
    "text": "you were put right in then GBC had to change and the Linux kernel wouldn't break user space as they try to",
    "start": "1372559",
    "end": "1379919"
  },
  {
    "text": "avoid so the first trial process of the process calling unshare clone ID will be",
    "start": "1379919",
    "end": "1387120"
  },
  {
    "text": "the first process in the new",
    "start": "1387120",
    "end": "1391080"
  },
  {
    "text": "namespace and kind of similar to the username space uh there's a mapping from your uh from the process ID counts",
    "start": "1394840",
    "end": "1403000"
  },
  {
    "text": "inside of your namespace to what it is outside so in your parent pit name",
    "start": "1403000",
    "end": "1408520"
  },
  {
    "text": "space you see the actual or your view of the PID counting so for instance here in",
    "start": "1408520",
    "end": "1416400"
  },
  {
    "text": "ns0 we have p ,024 and if you follow the pointers down",
    "start": "1416400",
    "end": "1422360"
  },
  {
    "text": "here you see that PID 2024 in namespace zero is p ID 2 in namespace 2 and it's",
    "start": "1422360",
    "end": "1431760"
  },
  {
    "text": "pid1 in namespace 3 but in nam the process itself is",
    "start": "1431760",
    "end": "1438520"
  },
  {
    "text": "running in namespace 3 and it has no idea that its actual pit",
    "start": "1438520",
    "end": "1444919"
  },
  {
    "text": "is24 it thinks it's one and pro and P id1 in namespace 2 thinks it's",
    "start": "1444919",
    "end": "1452960"
  },
  {
    "text": "two so they only see their own view of the process",
    "start": "1452960",
    "end": "1459360"
  },
  {
    "text": "IDs Now to create uh new pit name space kind of do the same as we already done a",
    "start": "1462640",
    "end": "1470480"
  },
  {
    "text": "few times now you add clone new PID to your list of uh Nam spaces in",
    "start": "1470480",
    "end": "1479480"
  },
  {
    "text": "unshare and after this you have created a new user Mount and pit name space and",
    "start": "1481200",
    "end": "1487559"
  },
  {
    "text": "you've entered the user and mount name space but not the pit name",
    "start": "1487559",
    "end": "1492760"
  },
  {
    "text": "space because after doing this you need to create a child process for instance",
    "start": "1493279",
    "end": "1498320"
  },
  {
    "text": "by using fork and that puts the new child into",
    "start": "1498320",
    "end": "1503679"
  },
  {
    "text": "that namespace uh and in the parent you would",
    "start": "1503679",
    "end": "1508760"
  },
  {
    "text": "then typically just wait for the child process to die which is what we do at",
    "start": "1508760",
    "end": "1514559"
  },
  {
    "text": "the end here weight pit just waits for for that pit to",
    "start": "1514559",
    "end": "1521200"
  },
  {
    "text": "exit so this new P this new processor",
    "start": "1524559",
    "end": "1529640"
  },
  {
    "text": "will be PID one now one effect of doing this",
    "start": "1529640",
    "end": "1535720"
  },
  {
    "text": "together with the mount name space is that now I can mount a new proc name a new proc",
    "start": "1535720",
    "end": "1541640"
  },
  {
    "text": "FS because the proc FS is owned by the pit name space so if I don't create a",
    "start": "1541640",
    "end": "1548840"
  },
  {
    "text": "new pit name space I don't own the procfs I can't mount it CU it's not",
    "start": "1548840",
    "end": "1555200"
  },
  {
    "text": "governed by the username space that I I created and if I were to keep the old",
    "start": "1555200",
    "end": "1562640"
  },
  {
    "text": "proc then it would show all the processes actually running on the system",
    "start": "1562640",
    "end": "1567799"
  },
  {
    "text": "so that would be an information leakage let's see I also forgot I did",
    "start": "1567799",
    "end": "1575360"
  },
  {
    "text": "not show you the mount uh part but that can be done quite",
    "start": "1575360",
    "end": "1581919"
  },
  {
    "text": "quickly so this is all the folders that's in my root root of my file system",
    "start": "1581919",
    "end": "1589360"
  },
  {
    "text": "when I boot up and I create a new root fs and I",
    "start": "1589360",
    "end": "1596440"
  },
  {
    "text": "basically remove everything except user and Bin and not sure what I actually put in",
    "start": "1596440",
    "end": "1601640"
  },
  {
    "text": "this uh but after pressing enter I've",
    "start": "1601640",
    "end": "1606919"
  },
  {
    "text": "completely Rewritten my file system uh but for the",
    "start": "1606919",
    "end": "1615240"
  },
  {
    "text": "pns so I see I have some PID",
    "start": "1615559",
    "end": "1621398"
  },
  {
    "text": "12943 I create an and Fork off so I have",
    "start": "1622279",
    "end": "1628399"
  },
  {
    "text": "now a child process which gets PID one suddenly and if I list the newly mounted",
    "start": "1628399",
    "end": "1637760"
  },
  {
    "text": "procs the interesting part here is the end I only have one numeric folder in/",
    "start": "1637760",
    "end": "1644559"
  },
  {
    "text": "proc which is my one proc if I do that in my initial name",
    "start": "1644559",
    "end": "1653760"
  },
  {
    "text": "space I see quite a few more because this is a running system it",
    "start": "1656960",
    "end": "1662000"
  },
  {
    "text": "has lots of lots of software running but inside of my inside of my",
    "start": "1662000",
    "end": "1668000"
  },
  {
    "text": "pit name space I don't see",
    "start": "1668000",
    "end": "1671399"
  },
  {
    "text": "these",
    "start": "1676519",
    "end": "1679519"
  },
  {
    "text": "so this makes it or at least is a big step in making it look like you're",
    "start": "1682480",
    "end": "1689240"
  },
  {
    "text": "running solo on the system that there's no other processes running um and that there's basically",
    "start": "1689240",
    "end": "1696000"
  },
  {
    "text": "nothing to compromise on this system because this is the only application",
    "start": "1696000",
    "end": "1701320"
  },
  {
    "text": "running so next up we'll talk about the time name",
    "start": "1704559",
    "end": "1709440"
  },
  {
    "text": "space um what the time name space allows you to do is to control the boot and the",
    "start": "1710240",
    "end": "1716279"
  },
  {
    "text": "monotonic time or the boot and monotonic clock you create it by using clone new",
    "start": "1716279",
    "end": "1724720"
  },
  {
    "text": "time and along with the pit name space this is a special Nam space in that",
    "start": "1724720",
    "end": "1731600"
  },
  {
    "text": "unshare doesn't allow you to doesn't put you in it but also this is the only",
    "start": "1731600",
    "end": "1736960"
  },
  {
    "text": "namespace that you have to create using unshare clone will not create this new namespace for",
    "start": "1736960",
    "end": "1745440"
  },
  {
    "text": "you the reason for that is that you are controlling the monotonic and boot",
    "start": "1745440",
    "end": "1751679"
  },
  {
    "text": "clock meaning you the way you do it is you write an offset into some files that file can only be written to",
    "start": "1751679",
    "end": "1760760"
  },
  {
    "text": "as long as there is no processes inside of the namespace because Boot and mon onic",
    "start": "1760760",
    "end": "1767840"
  },
  {
    "text": "clocks are supposed to go in One Direction they are supposed to monotonically",
    "start": "1767840",
    "end": "1773799"
  },
  {
    "text": "increase so if you start runtime messing around with those clocks then the process might get into",
    "start": "1773799",
    "end": "1781519"
  },
  {
    "text": "funny issues especially if it actually expects the time to be monotonically",
    "start": "1781519",
    "end": "1788960"
  },
  {
    "text": "increasing so it unshare will create a namespace empty and there's no way to",
    "start": "1788960",
    "end": "1796000"
  },
  {
    "text": "create it and put something in it automatically you have to explicitly put something in it either by using Fork",
    "start": "1796000",
    "end": "1803000"
  },
  {
    "text": "like with the pit name space every child of this process will be put into the",
    "start": "1803000",
    "end": "1808519"
  },
  {
    "text": "namespace or you can explicitly move yourself after creating it but you need",
    "start": "1808519",
    "end": "1813960"
  },
  {
    "text": "time to actually write the time offsets before anything enters it when anything enters namespace the namespace is",
    "start": "1813960",
    "end": "1822440"
  },
  {
    "text": "locked but why does this exist because this a is extremely narrow you're only",
    "start": "1824519",
    "end": "1830880"
  },
  {
    "text": "messing with the boot time and the monotonic time like there's you're not changing the system",
    "start": "1830880",
    "end": "1836760"
  },
  {
    "text": "time and it's very very specific the re the use",
    "start": "1836760",
    "end": "1842799"
  },
  {
    "text": "case that this was created for is for container migration I haven't found any",
    "start": "1842799",
    "end": "1848720"
  },
  {
    "text": "other use cases for it they might exist but what you do when you migrate a",
    "start": "1848720",
    "end": "1855639"
  },
  {
    "text": "container is you freeze it in place you move it and then you start it up again",
    "start": "1855639",
    "end": "1860760"
  },
  {
    "text": "at the same point that it was so you kind of want the clocks to behave as they should so you want the timers to be",
    "start": "1860760",
    "end": "1868279"
  },
  {
    "text": "increasing still and hopefully start around the same time that they did that they were",
    "start": "1868279",
    "end": "1875000"
  },
  {
    "text": "previously so that's the use case for it um so you create it by using clone",
    "start": "1875000",
    "end": "1882399"
  },
  {
    "text": "new time and then you have to set the time used this file now this pit is your own",
    "start": "1882399",
    "end": "1890399"
  },
  {
    "text": "pit so proc self time and S offsets and this is the format of it you",
    "start": "1890399",
    "end": "1896320"
  },
  {
    "text": "have to write this fi this file one line at a time with open and close so open write one line close it",
    "start": "1896320",
    "end": "1905159"
  },
  {
    "text": "open right one line close it and this seems inefficient but proc is not a real file",
    "start": "1905159",
    "end": "1911279"
  },
  {
    "text": "system so you're not actually writing to disk you're just telling the kernel stuff",
    "start": "1911279",
    "end": "1918639"
  },
  {
    "text": "so you the first argument the first part of the line you write is what clock you're",
    "start": "1918639",
    "end": "1924559"
  },
  {
    "text": "changing the offset in seconds and the offset in",
    "start": "1924559",
    "end": "1929360"
  },
  {
    "text": "NCS so you can write it like this so my right here opens and wres and",
    "start": "1931679",
    "end": "1938519"
  },
  {
    "text": "closes and you write boot time whatever Offset you want in second and in N",
    "start": "1938519",
    "end": "1944760"
  },
  {
    "text": "seconds and the same for the monotonic time this offset might be negative because",
    "start": "1944760",
    "end": "1950919"
  },
  {
    "text": "you can before anything has entered it move the time backwards but you cannot move it past",
    "start": "1950919",
    "end": "1958240"
  },
  {
    "text": "zero you can't have a negative time there are rules for what you can actually write as offsets here you also",
    "start": "1958240",
    "end": "1964760"
  },
  {
    "text": "can't move it past the size of is it N64 or something or you in 64",
    "start": "1964760",
    "end": "1971760"
  },
  {
    "text": "I'm not really sure but you can't move it past some point either you can't have too large an offset but you can have",
    "start": "1971760",
    "end": "1977679"
  },
  {
    "text": "pretty large offsets um and after this you can put something",
    "start": "1977679",
    "end": "1984880"
  },
  {
    "text": "into the namespace and it will get whatever time you set it plus whatever time has elapsed since you said it of",
    "start": "1984880",
    "end": "1992960"
  },
  {
    "text": "course uh when you want to enter the namespace you can either Fork like we did with PID or you can use set an S",
    "start": "1992960",
    "end": "2000840"
  },
  {
    "text": "with this file proc self NS time for",
    "start": "2000840",
    "end": "2005960"
  },
  {
    "text": "children that will put your current running process into this",
    "start": "2005960",
    "end": "2012600"
  },
  {
    "text": "namespace and of course I assume that when you actually make this make this uh",
    "start": "2013159",
    "end": "2019519"
  },
  {
    "text": "Nam space and you explicitly do set and S to this Sim link you are you do know",
    "start": "2019519",
    "end": "2026440"
  },
  {
    "text": "what you're doing and your process won't collapse because time has changed if not you're doing it wrong and",
    "start": "2026440",
    "end": "2032600"
  },
  {
    "text": "should Fork the way to do that is you open a file handle to this proc self NS time",
    "start": "2032600",
    "end": "2040159"
  },
  {
    "text": "for children which is Sim link to the namespace and then you run sets with",
    "start": "2040159",
    "end": "2048079"
  },
  {
    "text": "whatever uh with whatever namespace you want to join to this file",
    "start": "2048079",
    "end": "2053280"
  },
  {
    "text": "descriptor so after this line you are in the new namespace with the new",
    "start": "2053280",
    "end": "2060720"
  },
  {
    "text": "time let's quickly show that cuz that's a small and simple demo and",
    "start": "2061560",
    "end": "2068879"
  },
  {
    "text": "um oh where am I oh",
    "start": "2069000",
    "end": "2075398"
  },
  {
    "text": " so when you start up when I start up now this is my current",
    "start": "2083359",
    "end": "2089040"
  },
  {
    "text": "clocks and I can now I created the new time namespace uh but in the in the",
    "start": "2089040",
    "end": "2095760"
  },
  {
    "text": "process that created it nothing has changed because I haven't done anything I haven't entered",
    "start": "2095760",
    "end": "2101599"
  },
  {
    "text": "it but when I write to the file and Fork of a child it suddenly not so long ago",
    "start": "2103200",
    "end": "2111440"
  },
  {
    "text": "since it booted and the monotonic clock has increased quite a",
    "start": "2111440",
    "end": "2116480"
  },
  {
    "text": "lot and then I can use the NS enter to join with the parent process as",
    "start": "2116480",
    "end": "2123079"
  },
  {
    "text": "well like I said this has a very specific use case uh as as",
    "start": "2125160",
    "end": "2133520"
  },
  {
    "text": "this so UTS namespace the UT UTS namespace isolates your host name and",
    "start": "2133520",
    "end": "2141200"
  },
  {
    "text": "domain name basically you have your own separate host name and your own separate",
    "start": "2141200",
    "end": "2146560"
  },
  {
    "text": "domain name that you can set freely you create it and join it by",
    "start": "2146560",
    "end": "2152280"
  },
  {
    "text": "clone new UTS",
    "start": "2152280",
    "end": "2158800"
  },
  {
    "text": "which together with the username space gives you permission to set a host name and set a domain",
    "start": "2159599",
    "end": "2166319"
  },
  {
    "text": "name but this is of course the domain name and host name for this namespace not for the rest of the",
    "start": "2166319",
    "end": "2174720"
  },
  {
    "text": "system so in Docker you could set your own host name and your own domain name",
    "start": "2174720",
    "end": "2179880"
  },
  {
    "text": "and you can do routing and stuff like that based on whatever you set inside of Docker and that's what",
    "start": "2179880",
    "end": "2187280"
  },
  {
    "text": "this is what it's using so you add clone new UTS to",
    "start": "2187280",
    "end": "2195359"
  },
  {
    "text": "unshare and at that point even though you're running as non-root and don't really have permissions you can suddenly",
    "start": "2195359",
    "end": "2201560"
  },
  {
    "text": "set your host name you can set your domain name you can mess around with that and no one else will will see",
    "start": "2201560",
    "end": "2209720"
  },
  {
    "text": "that again a quite specific and particular uh name space",
    "start": "2209720",
    "end": "2218680"
  },
  {
    "text": "something that might be more interesting is the IPC name space or from my point of view you might think the domain name",
    "start": "2221400",
    "end": "2228599"
  },
  {
    "text": "thing is uh is more interesting but I think this is cooler",
    "start": "2228599",
    "end": "2234160"
  },
  {
    "text": "so the IPC Nam space isolates in kernal IPC",
    "start": "2234160",
    "end": "2239359"
  },
  {
    "text": "mechanisms which are two of uh the posix message cues and system",
    "start": "2239359",
    "end": "2247400"
  },
  {
    "text": "V IPC mechanism if you're using other IPC",
    "start": "2247400",
    "end": "2252839"
  },
  {
    "text": "mechanisms if you're using debus if you're using grpc whatever to do IPC",
    "start": "2252839",
    "end": "2259359"
  },
  {
    "text": "that's not affected at all this is only isolating posix message",
    "start": "2259359",
    "end": "2264920"
  },
  {
    "text": "cues and suvia IPC and it sets up a whole new well",
    "start": "2264920",
    "end": "2272079"
  },
  {
    "text": "basically new stacks for this a new view uh and they can't communicate across the",
    "start": "2272079",
    "end": "2280440"
  },
  {
    "text": "namespaces so you create it and enter it with clone new",
    "start": "2281599",
    "end": "2288680"
  },
  {
    "text": "IPC just like we've done before and this also enters the new IPC name",
    "start": "2290560",
    "end": "2296920"
  },
  {
    "text": "space and then you can mess around with in this case posic message cues as you want to this one is a lot easier to",
    "start": "2296920",
    "end": "2305520"
  },
  {
    "text": "show so I have a",
    "start": "2305520",
    "end": "2310560"
  },
  {
    "text": "server ah it needs a",
    "start": "2310560",
    "end": "2314240"
  },
  {
    "text": "name and I have a client that I can send messages from the",
    "start": "2316160",
    "end": "2321480"
  },
  {
    "text": "client to the server and it prints uh hello NC Security because that's what",
    "start": "2321480",
    "end": "2326680"
  },
  {
    "text": "the client is sending and then well and then it aborts because I messed up something but that's not that",
    "start": "2326680",
    "end": "2333000"
  },
  {
    "text": "interesting or that important so what I instead do now is I",
    "start": "2333000",
    "end": "2341119"
  },
  {
    "text": "say unshare uh-- user-- ic-- map current",
    "start": "2341119",
    "end": "2350519"
  },
  {
    "text": "user so now I'm in a new user and IPC",
    "start": "2357400",
    "end": "2363240"
  },
  {
    "text": "namespace so if I run the same server with the same",
    "start": "2363240",
    "end": "2369280"
  },
  {
    "text": "stuff and I run the same client they do not talk to each other because they're not",
    "start": "2369280",
    "end": "2376920"
  },
  {
    "text": "separate but if I then enter the same uh",
    "start": "2376920",
    "end": "2384960"
  },
  {
    "text": "namespace uh what's the PID 39559 so now just enter the same user",
    "start": "2387599",
    "end": "2393960"
  },
  {
    "text": "and IPC namespace as the server",
    "start": "2393960",
    "end": "2399160"
  },
  {
    "text": "process and I can run the client and suddenly they can talk",
    "start": "2399160",
    "end": "2404800"
  },
  {
    "text": "again so they are isolated so for instance for Docker if you want to have more processes inside of a container",
    "start": "2404800",
    "end": "2412599"
  },
  {
    "text": "then they can talk to each other using message cues or CV IPC and nobody else",
    "start": "2412599",
    "end": "2420000"
  },
  {
    "text": "will see it or the whole system can do that and whatever you're put whatever",
    "start": "2420000",
    "end": "2425400"
  },
  {
    "text": "untrusted code you're running in your Docker cannot see",
    "start": "2425400",
    "end": "2431240"
  },
  {
    "text": "it",
    "start": "2434680",
    "end": "2437680"
  },
  {
    "text": "okay next is the cgroup namespace control group namespace who ha is",
    "start": "2443640",
    "end": "2449480"
  },
  {
    "text": "familiar with CG groups yeah a few people Okay",
    "start": "2449480",
    "end": "2454520"
  },
  {
    "text": "cool so the cgroup namespace isolates your view of",
    "start": "2454520",
    "end": "2462240"
  },
  {
    "text": "cgroups so what we saw when we did uh the pit name space was that you're",
    "start": "2462240",
    "end": "2467760"
  },
  {
    "text": "trying to remove yourself from the system and you're trying to avoid leaking the information that there are",
    "start": "2467760",
    "end": "2473800"
  },
  {
    "text": "other processes on the system uh and one thing that without",
    "start": "2473800",
    "end": "2482079"
  },
  {
    "text": "this would leak is your cgroup view if you're mounting your uh cgroup file",
    "start": "2482079",
    "end": "2487560"
  },
  {
    "text": "system then that would leak that there are other processes on the",
    "start": "2487560",
    "end": "2492838"
  },
  {
    "text": "system so you create it and enter it with the Clone new C",
    "start": "2493319",
    "end": "2500119"
  },
  {
    "text": "group and then you can remount the cgroup and you will get a new view of",
    "start": "2500960",
    "end": "2508240"
  },
  {
    "text": "the C group basically it will move the root of your cgroup file system to your",
    "start": "2508240",
    "end": "2515760"
  },
  {
    "text": "like the par the your processes uh C group this is going to be easier when I",
    "start": "2515760",
    "end": "2521520"
  },
  {
    "text": "show you but the way you do it is you basically add clone new C group and then",
    "start": "2521520",
    "end": "2528720"
  },
  {
    "text": "you can mount C Mount the new C group and it will look differently",
    "start": "2528720",
    "end": "2534200"
  },
  {
    "text": "so let's uh have a look at",
    "start": "2534200",
    "end": "2540240"
  },
  {
    "text": "it so first I'm just going to run through this without doing any anything else uh so this is my initial view I",
    "start": "2542839",
    "end": "2551240"
  },
  {
    "text": "have a mount point which is sfc group and I have in this cgroup user SL user",
    "start": "2551240",
    "end": "2557200"
  },
  {
    "text": "slice user thousand slice session two scope so if I enter the cgroup Nam",
    "start": "2557200",
    "end": "2563680"
  },
  {
    "text": "space or no at this point I only entered the mount name Mount and pit Nam space",
    "start": "2563680",
    "end": "2570880"
  },
  {
    "text": "and you suddenly see that oh I'm listing out some some Peds so this one this this is",
    "start": "2570880",
    "end": "2577720"
  },
  {
    "text": "my pit CU this is a child of a pit name",
    "start": "2577720",
    "end": "2583000"
  },
  {
    "text": "space and this is listing at all the pids in my C group and you see there's a lot of zeros here those are unknown pids",
    "start": "2583000",
    "end": "2590280"
  },
  {
    "text": "to me pids that hasn't been mapped in my C group or in my pit name",
    "start": "2590280",
    "end": "2596920"
  },
  {
    "text": "space so right off the bat I see that oh there are there's stuff there there is",
    "start": "2596920",
    "end": "2603000"
  },
  {
    "text": "something that might be interesting in this file system or in this",
    "start": "2603000",
    "end": "2609599"
  },
  {
    "text": "process so if I just create a new Mountain name space create a new C group name pit name space and keep a cgroup",
    "start": "2609880",
    "end": "2618720"
  },
  {
    "text": "file system then I'm leaking the fact that there are other processes",
    "start": "2618720",
    "end": "2623960"
  },
  {
    "text": "here okay so let's do that again",
    "start": "2623960",
    "end": "2629400"
  },
  {
    "text": "and do it a bit differently so I make uh",
    "start": "2630440",
    "end": "2637359"
  },
  {
    "text": "uh make a new C",
    "start": "2637359",
    "end": "2641078"
  },
  {
    "text": "group and then I do it like this because that's",
    "start": "2644480",
    "end": "2652880"
  },
  {
    "text": "easier there we are that's easy to see then I can Echo",
    "start": "2663760",
    "end": "2671720"
  },
  {
    "text": "14365 which is the pit of the process I created into this this",
    "start": "2671720",
    "end": "2681520"
  },
  {
    "text": "FS",
    "start": "2682200",
    "end": "2685200"
  },
  {
    "text": "ah that looks better into the fousy",
    "start": "2687760",
    "end": "2694440"
  },
  {
    "text": "group and if you're not familiar with C group c groups is like proc a pseudo file system when you create a directory",
    "start": "2694440",
    "end": "2701920"
  },
  {
    "text": "there it creates a lot of files for you uh it's not actually reading and writing",
    "start": "2701920",
    "end": "2707079"
  },
  {
    "text": "files it's telling the kernel where stuff is so now I put the process on the",
    "start": "2707079",
    "end": "2714920"
  },
  {
    "text": "top here into its own cgroup and I see okay the current C",
    "start": "2714920",
    "end": "2721720"
  },
  {
    "text": "group now is full and I'm paid one there there only exists PID one but",
    "start": "2721720",
    "end": "2728079"
  },
  {
    "text": "I also see that I'm in a c group called Fu which means there's a parent C Group",
    "start": "2728079",
    "end": "2734040"
  },
  {
    "text": "which is the root C group I don't want I don't want my process to know that so I create a new",
    "start": "2734040",
    "end": "2742960"
  },
  {
    "text": "cgroup namespace but I haven't mounted the cgroup file system again so this is",
    "start": "2742960",
    "end": "2750559"
  },
  {
    "text": "running the using the old cgroup file system in a cgroup namespace and I see",
    "start": "2750559",
    "end": "2756839"
  },
  {
    "text": "and a pit Nam space and I see all of these Heroes which are unknown pits which I don't want to",
    "start": "2756839",
    "end": "2763960"
  },
  {
    "text": "know so if I remount",
    "start": "2763960",
    "end": "2767800"
  },
  {
    "text": "it now I've created a new root file system I uh but you see my current C",
    "start": "2771400",
    "end": "2776839"
  },
  {
    "text": "group has changed from SL Fu to slash meaning my root cgroup is now slash",
    "start": "2776839",
    "end": "2783599"
  },
  {
    "text": "because the cgroup namespace gives uh says that the the root C group should be",
    "start": "2783599",
    "end": "2791200"
  },
  {
    "text": "your C group or the lowest one in your chain and now I entered a new Mount name",
    "start": "2791200",
    "end": "2798640"
  },
  {
    "text": "space where I rewrote the file system and now I can remount my cgroup name space I mount",
    "start": "2798640",
    "end": "2806119"
  },
  {
    "text": "it somewhere else for reasons unknown to anyone and my current cgroup is Slash",
    "start": "2806119",
    "end": "2811640"
  },
  {
    "text": "and when I read the processes in this cgroup file system only I",
    "start": "2811640",
    "end": "2818920"
  },
  {
    "text": "exist so this is removing the possibility for uh for me to know that there are other",
    "start": "2819640",
    "end": "2826920"
  },
  {
    "text": "processes on the system and also I can now manage my own cgroup",
    "start": "2826920",
    "end": "2833599"
  },
  {
    "text": "hierarchy so this is now my cgroup hierarchy and I can do whatever I want with it because I own",
    "start": "2833599",
    "end": "2841480"
  },
  {
    "text": "it",
    "start": "2844720",
    "end": "2847720"
  },
  {
    "text": "okay see how we are on time okay",
    "start": "2850920",
    "end": "2855480"
  },
  {
    "text": "cool so the last Nam space we're talk we'll talk about is the network Nam",
    "start": "2857559",
    "end": "2864558"
  },
  {
    "text": "space so this creates a separate Network",
    "start": "2867200",
    "end": "2872960"
  },
  {
    "text": "stack uh you create an ENT using clone new net and when you created it there is a",
    "start": "2872960",
    "end": "2880359"
  },
  {
    "text": "single device or a single interface in that network name space and that's the loop act device or rather it's a loop",
    "start": "2880359",
    "end": "2888680"
  },
  {
    "text": "act device it's your Loop act device every network namespace has their own Loop act device and their own set of",
    "start": "2888680",
    "end": "2896040"
  },
  {
    "text": "interfaces network interfaces so a network interface can exist in only one network",
    "start": "2896040",
    "end": "2904640"
  },
  {
    "text": "namespace but it can be moved between them as long as you have permissions in",
    "start": "2904640",
    "end": "2910319"
  },
  {
    "text": "both so you can move your physical network interface",
    "start": "2910319",
    "end": "2916000"
  },
  {
    "text": "into a network namespace if you want to and that means it's available only in",
    "start": "2916000",
    "end": "2921480"
  },
  {
    "text": "that Network namespace and unavailable outside of",
    "start": "2921480",
    "end": "2926040"
  },
  {
    "text": "it uh you can also create virtual network interfaces and Link them or and",
    "start": "2926839",
    "end": "2933040"
  },
  {
    "text": "make links between the network uh namespaces so that you can get a limited",
    "start": "2933040",
    "end": "2939079"
  },
  {
    "text": "limited access to network or full network access but your own separate Loop act device or if you just created",
    "start": "2939079",
    "end": "2946599"
  },
  {
    "text": "you're just cut off from the network",
    "start": "2946599",
    "end": "2951359"
  },
  {
    "text": "completely when I say it creates a new networking stack it creates its own set of interfaces it own set of IP addresses",
    "start": "2953040",
    "end": "2961000"
  },
  {
    "text": "routing tables IP tables firewalls all of that is",
    "start": "2961000",
    "end": "2967520"
  },
  {
    "text": "separate and when you destroy a network namespace all the virtual interfaces",
    "start": "2968839",
    "end": "2974319"
  },
  {
    "text": "that you created that is linked to this network npace is destroyed and all the physical ones that",
    "start": "2974319",
    "end": "2980799"
  },
  {
    "text": "you moved into this network namespace is moved to the initial Network",
    "start": "2980799",
    "end": "2985839"
  },
  {
    "text": "namespace so you can have physical devices like eth0 and VLAN in and you",
    "start": "2988000",
    "end": "2995000"
  },
  {
    "text": "can move it between these uh or you can make virtual ones and Link them together and use IP tables",
    "start": "2995000",
    "end": "3002040"
  },
  {
    "text": "to gain some access but not that much access and all that and you can have and",
    "start": "3002040",
    "end": "3007680"
  },
  {
    "text": "you have different Loop act devices so if you have something in one network Nam space listening to a port on the loop",
    "start": "3007680",
    "end": "3015079"
  },
  {
    "text": "act device and you create a new network namespace that won't get access to that",
    "start": "3015079",
    "end": "3021838"
  },
  {
    "text": "port so like I said clone unet creates a new",
    "start": "3024440",
    "end": "3029920"
  },
  {
    "text": "network name space uh where you have nothing but that's not really that interesting",
    "start": "3029920",
    "end": "3037640"
  },
  {
    "text": "so who am I here okay I'm root I don't yeah I want to be root actually",
    "start": "3037640",
    "end": "3045000"
  },
  {
    "text": "so if I do this in my initial Network namespace I have well three network",
    "start": "3045559",
    "end": "3052319"
  },
  {
    "text": "interfaces my Loop act device my V van device my uh 5G Network and uh",
    "start": "3052319",
    "end": "3060200"
  },
  {
    "text": "VLAN this is what I have on this device if I create a new network name",
    "start": "3060200",
    "end": "3066640"
  },
  {
    "text": "space I suddenly only have a loop act device and this Loop act device is different from the previous",
    "start": "3066640",
    "end": "3073760"
  },
  {
    "text": "one but this is kind of useless because now I just remove this process from the network which is which might not be what",
    "start": "3074880",
    "end": "3081720"
  },
  {
    "text": "I want but it might also be what I want but you",
    "start": "3081720",
    "end": "3087319"
  },
  {
    "text": "can do stuff to actually get access to it so",
    "start": "3087319",
    "end": "3092839"
  },
  {
    "text": "14872 so IP nness attached creates a Sim link to this network namespace so I can",
    "start": "3093160",
    "end": "3101000"
  },
  {
    "text": "access it using the name ns1 which is my choice of",
    "start": "3101000",
    "end": "3106200"
  },
  {
    "text": "name then I can add um virtual ethernet",
    "start": "3106200",
    "end": "3111839"
  },
  {
    "text": "link so I create uh virtual EET pier where I one is named vth and one is",
    "start": "3111839",
    "end": "3119880"
  },
  {
    "text": "called V1 and I can see that they are now they",
    "start": "3119880",
    "end": "3127240"
  },
  {
    "text": "now exist on my device V and V1 and they are",
    "start": "3127240",
    "end": "3132558"
  },
  {
    "text": "linked and I can move one of",
    "start": "3133960",
    "end": "3138160"
  },
  {
    "text": "them into a network name space so now moved V",
    "start": "3139559",
    "end": "3146040"
  },
  {
    "text": "E1 into that network name space and I'll show you the result of",
    "start": "3146040",
    "end": "3151319"
  },
  {
    "text": "that afterwards and of course nothing because these are just dead network interfaces",
    "start": "3151319",
    "end": "3158040"
  },
  {
    "text": "they are down they have no IP so let's fix that uh so I give it",
    "start": "3158040",
    "end": "3165760"
  },
  {
    "text": "a link local uh IP and I can do the that the same for",
    "start": "3165760",
    "end": "3173200"
  },
  {
    "text": "the network name space",
    "start": "3173200",
    "end": "3177240"
  },
  {
    "text": "so in ns1 I set the IP address to 1.2 and then",
    "start": "3185440",
    "end": "3191079"
  },
  {
    "text": "I uh set the links",
    "start": "3191079",
    "end": "3198079"
  },
  {
    "text": "up uh exit NS one IP Link set",
    "start": "3198079",
    "end": "3203799"
  },
  {
    "text": "vg1 up so with",
    "start": "3203799",
    "end": "3210119"
  },
  {
    "text": "this netus XX I can run any command I want to inside of this network name",
    "start": "3210119",
    "end": "3216079"
  },
  {
    "text": "space so let's try and ping what I set",
    "start": "3216079",
    "end": "3221119"
  },
  {
    "text": "up so I set up two devices they are linked one of them the one in the",
    "start": "3222760",
    "end": "3228960"
  },
  {
    "text": "previous namespace I gave the IP 169 25411 and the one inside I gave 16 9",
    "start": "3228960",
    "end": "3237359"
  },
  {
    "text": "25412 and I can ping each other they can ping each other cuz they exist and I can also do",
    "start": "3237720",
    "end": "3244400"
  },
  {
    "text": "stuff like set up uh set up uh",
    "start": "3244400",
    "end": "3250318"
  },
  {
    "text": "Roots because this has its own root ah what did I do uh",
    "start": "3254880",
    "end": "3263040"
  },
  {
    "text": "all because the network n has its own routing",
    "start": "3264079",
    "end": "3269240"
  },
  {
    "text": "table and I can mess around with that so if I",
    "start": "3269240",
    "end": "3274599"
  },
  {
    "text": "Now list the default route I see that well the one I created is the top one",
    "start": "3274599",
    "end": "3281160"
  },
  {
    "text": "and since I linked them they it actually got a decent route to 16 the 169 254",
    "start": "3281160",
    "end": "3288040"
  },
  {
    "text": "subnet and then on the host I could use IP tables to Route data that comes in on",
    "start": "3288040",
    "end": "3294640"
  },
  {
    "text": "V stage out on the Internet or to whatever I want so at this point you can",
    "start": "3294640",
    "end": "3300280"
  },
  {
    "text": "do basically whatever and you can use this to completely limit what is accessible for this namespace and you",
    "start": "3300280",
    "end": "3308400"
  },
  {
    "text": "can forward ports from your host to inside of this",
    "start": "3308400",
    "end": "3314160"
  },
  {
    "text": "namespace which is what happens when you do forwarding ports in Docker for instance then that that's a IP tables",
    "start": "3314160",
    "end": "3323240"
  },
  {
    "text": "rule so to show that it's actually had an effect here when I list the",
    "start": "3323640",
    "end": "3328720"
  },
  {
    "text": "interfaces again I see I have a v V1 network",
    "start": "3328720",
    "end": "3334558"
  },
  {
    "text": "interface and I can also delete that",
    "start": "3335799",
    "end": "3343880"
  },
  {
    "text": "one and now you see I have no more virtual ethernet devices because V1 was",
    "start": "3344520",
    "end": "3351079"
  },
  {
    "text": "inside of the network namespace that I just deleted and so it's",
    "start": "3351079",
    "end": "3357160"
  },
  {
    "text": "gone okay that's uh all I had for you today any",
    "start": "3359400",
    "end": "3365839"
  },
  {
    "text": "questions yes we elaborate on why some",
    "start": "3365839",
    "end": "3371680"
  },
  {
    "text": "distributions like that Arch patch into their kernels to disable",
    "start": "3371680",
    "end": "3377359"
  },
  {
    "text": "and privileged US name yeah so the question is if I can",
    "start": "3377359",
    "end": "3382680"
  },
  {
    "text": "elaborate on why some dros uh have basically disabled the username",
    "start": "3382680",
    "end": "3389079"
  },
  {
    "text": "spaces univ unprivileged username",
    "start": "3389079",
    "end": "3393440"
  },
  {
    "text": "space I know there has been security issues with the username spaces",
    "start": "3394280",
    "end": "3399880"
  },
  {
    "text": "unprivileged username spaces where they suddenly get more more uh more",
    "start": "3399880",
    "end": "3405799"
  },
  {
    "text": "privileges in areas they shouldn't uh I'm not aware of any such",
    "start": "3405799",
    "end": "3412000"
  },
  {
    "text": "short comings at the moment but of course it's it's a it's a beast like the",
    "start": "3412000",
    "end": "3417039"
  },
  {
    "text": "username space is it sounds pretty simple CU you're like mapping users and you're owning Nam spaces but security",
    "start": "3417039",
    "end": "3425200"
  },
  {
    "text": "device inside of the kernel it's probably the most complicated because it governs Privileges and it has privileges",
    "start": "3425200",
    "end": "3432839"
  },
  {
    "text": "that only applies in certain scenarios so it's probably beast in the kernel",
    "start": "3432839",
    "end": "3437880"
  },
  {
    "text": "compared to compared to what we see uh so I don't really know why they",
    "start": "3437880",
    "end": "3443520"
  },
  {
    "text": "still have it disabled because it's very useful and uh I know that stuff like chromium",
    "start": "3443520",
    "end": "3450760"
  },
  {
    "text": "is using it heavily it's uh yeah it's uh I'm not really sure why they still",
    "start": "3450760",
    "end": "3458200"
  },
  {
    "text": "they still have it disabled I would like to see it enabled because it's very useful it's enabled by default but for",
    "start": "3458200",
    "end": "3464160"
  },
  {
    "text": "example on Arch you may want to install security hardened kernel where it will be the same",
    "start": "3464160",
    "end": "3470319"
  },
  {
    "text": "okay yeah so the comment here was it it is on by default but if you add a",
    "start": "3470319",
    "end": "3476039"
  },
  {
    "text": "security hardened kernel that turns it off um yeah and it's I would guess",
    "start": "3476039",
    "end": "3483240"
  },
  {
    "text": "without knowing that it's because they're afraid of unknown issues that's",
    "start": "3483240",
    "end": "3488559"
  },
  {
    "text": "still inside of it but yeah I know there has been a lot of people are skeptical of the unprivileged username spaces",
    "start": "3488559",
    "end": "3495520"
  },
  {
    "text": "because it has had issues in the past and it's probably had quite a lot lot of issues because",
    "start": "3495520",
    "end": "3501559"
  },
  {
    "text": "it's it's complex and it's very s sensitive security",
    "start": "3501559",
    "end": "3506799"
  },
  {
    "text": "wise yeah other",
    "start": "3506799",
    "end": "3510720"
  },
  {
    "text": "questions okay then yeah in the",
    "start": "3512839",
    "end": "3517839"
  },
  {
    "text": "back so yeah so Docker is a big big like Docker uses all of these because it",
    "start": "3521280",
    "end": "3527319"
  },
  {
    "text": "needs to and some of them like I said are also very specific to well containers not Dockers but very specific",
    "start": "3527319",
    "end": "3534039"
  },
  {
    "text": "to to that use case but this is also used a lot by by",
    "start": "3534039",
    "end": "3539920"
  },
  {
    "text": "sandboxes so sandboxes on the chromium sandbox use uh the user and PID and network",
    "start": "3539920",
    "end": "3547880"
  },
  {
    "text": "namespace at least um they don't use the mount name space because they remove themselves",
    "start": "3547880",
    "end": "3553480"
  },
  {
    "text": "completely from the file system but sandbox Technologies it's very convenient",
    "start": "3553480",
    "end": "3559240"
  },
  {
    "text": "for uh also like using this to get rid of get rid of or or don't have access to",
    "start": "3559240",
    "end": "3567280"
  },
  {
    "text": "the host IPC mechanisms for instance um but I've all like I mentioned briefly",
    "start": "3567280",
    "end": "3573200"
  },
  {
    "text": "I've also added support for at least some of that in our unit testing framework because it sometimes it's very",
    "start": "3573200",
    "end": "3578680"
  },
  {
    "text": "convenient to be able to test to test uh like how how do you",
    "start": "3578680",
    "end": "3584839"
  },
  {
    "text": "behave on the file system and also you could use this to to",
    "start": "3584839",
    "end": "3590599"
  },
  {
    "text": "create errors for the file system right St stuff like that which is very",
    "start": "3590599",
    "end": "3596520"
  },
  {
    "text": "convenient with the mount name space and kind of have to have to do um",
    "start": "3596520",
    "end": "3603359"
  },
  {
    "text": "overloading of Library parts or overloading of the GBC functions if you want to do that without name",
    "start": "3603359",
    "end": "3611880"
  },
  {
    "text": "spaces but of again it makes it very Linux specific if you do that so it's",
    "start": "3612799",
    "end": "3619798"
  },
  {
    "text": "a as that's true especially if you want to do the comment was that network",
    "start": "3620079",
    "end": "3626839"
  },
  {
    "text": "namespace is also very convenient for for testing and the patch I added to our unit testing framework also does that uh",
    "start": "3626839",
    "end": "3634680"
  },
  {
    "text": "I haven't I don't think we have anything that actually uses the fact that it's a that's it in a network near space but to",
    "start": "3634680",
    "end": "3640960"
  },
  {
    "text": "get your own Loop act device and being able to do stuff on that or or create",
    "start": "3640960",
    "end": "3646440"
  },
  {
    "text": "your own uh network interfaces yeah you can make whatever you",
    "start": "3646440",
    "end": "3651839"
  },
  {
    "text": "want uh but yeah",
    "start": "3651839",
    "end": "3656520"
  },
  {
    "text": "yes yeah so the question was do you recommend using this for novice users or do you need a better grasp of it",
    "start": "3673280",
    "end": "3679599"
  },
  {
    "text": "basically to actually use it to put some to use this for security critical stuff",
    "start": "3679599",
    "end": "3685680"
  },
  {
    "text": "in your production environment or on a production like in production code you should have a good Gras grasp",
    "start": "3685680",
    "end": "3693400"
  },
  {
    "text": "of what's going on and what pitfalls might come uh I would be very skeptical if we",
    "start": "3693400",
    "end": "3700280"
  },
  {
    "text": "had a new hire starting making patches using namespaces or well any of the security features in",
    "start": "3700280",
    "end": "3706880"
  },
  {
    "text": "Linux uh because there are pitfalls there are stuff you don't know about",
    "start": "3706880",
    "end": "3711960"
  },
  {
    "text": "probably and you should have a good grow with but for like playing with it",
    "start": "3711960",
    "end": "3717599"
  },
  {
    "text": "testing it out uh trying it out with like unit testing and stuff like that",
    "start": "3717599",
    "end": "3723039"
  },
  {
    "text": "that's I that's how I started learning with it uh and that's pretty convenient",
    "start": "3723039",
    "end": "3729760"
  },
  {
    "text": "and also like doing talks and having to write shitty code to learn stuff about it that's that's a great way of of",
    "start": "3729760",
    "end": "3736279"
  },
  {
    "text": "learning it but yeah production code like have",
    "start": "3736279",
    "end": "3742880"
  },
  {
    "text": "trying to use this to protect security sensitive stuff uh without",
    "start": "3742880",
    "end": "3749440"
  },
  {
    "text": "having played around with it and stumble upon issues I would be very skeptical",
    "start": "3749440",
    "end": "3754839"
  },
  {
    "text": "skeptical about other",
    "start": "3754839",
    "end": "3761680"
  },
  {
    "text": "questions okay thank you enjoy the [Applause]",
    "start": "3762720",
    "end": "3769079"
  },
  {
    "text": "conference",
    "start": "3769079",
    "end": "3772079"
  }
]