[
  {
    "text": "my name is sunny scrogin uh I am privileged to be here today to talk to you about uh Phoenix uh it's a project",
    "start": "8080",
    "end": "14799"
  },
  {
    "text": "that I've been involved in over the last almost three years now um and it seems",
    "start": "14799",
    "end": "21080"
  },
  {
    "text": "to be growing in popularity um many companies are starting to adopt it within their uh workplaces and people",
    "start": "21080",
    "end": "28199"
  },
  {
    "text": "are really enjoying it uh giving some great feedback so um again thank you for being here um you can catch me on GitHub",
    "start": "28199",
    "end": "34920"
  },
  {
    "text": "at scrog Sun and on Twitter and various places as well just",
    "start": "34920",
    "end": "42120"
  },
  {
    "text": "bit apparently I have beard problems with the microphone all right so uh before we go",
    "start": "42680",
    "end": "50000"
  },
  {
    "text": "too far we want to make sure that everyone's kind of understands what we're going to be talking about today um",
    "start": "50000",
    "end": "56199"
  },
  {
    "text": "so Phoenix itself is a web framework um it is developed with the Elixir",
    "start": "56199",
    "end": "61879"
  },
  {
    "text": "programming language um and elixir is a programming language that runs on the",
    "start": "61879",
    "end": "67479"
  },
  {
    "text": "earling ecosystem so earling is both a programming language but it's also a",
    "start": "67479",
    "end": "72960"
  },
  {
    "text": "runtime so it has a a virtual machine that uh is really really amazing it's",
    "start": "72960",
    "end": "78240"
  },
  {
    "text": "been around for about 30 years uh and there's been a lot of great things uh",
    "start": "78240",
    "end": "83320"
  },
  {
    "text": "that have been written with it so most of the world's mobile traffic is actually uh going through llang",
    "start": "83320",
    "end": "91920"
  },
  {
    "text": "so Phoenix um if you haven't seen we have uh our GitHub is at Phoenix",
    "start": "92079",
    "end": "99320"
  },
  {
    "text": "framework and so essentially Phoenix is a web services framework um you can use",
    "start": "99320",
    "end": "105000"
  },
  {
    "text": "it for building modern web applications um you can also go with kind of",
    "start": "105000",
    "end": "110840"
  },
  {
    "text": "standardized uh traditional uh Json apis and and things like that it's very very",
    "start": "110840",
    "end": "116240"
  },
  {
    "text": "easy to to get up and running with that kind of stuff um but it also has some more advanced uh features for building",
    "start": "116240",
    "end": "122320"
  },
  {
    "text": "distributed messaging systems um and I think that that's where kind of the modern web is taking us so one thing",
    "start": "122320",
    "end": "130520"
  },
  {
    "text": "that is really important to understand is that Phoenix is not your application so I know that sometimes when you're",
    "start": "130520",
    "end": "136319"
  },
  {
    "text": "building web applications and you're using a framework you tend to build your",
    "start": "136319",
    "end": "142000"
  },
  {
    "text": "entire system within the the reference of that framework itself um and I won't",
    "start": "142000",
    "end": "147519"
  },
  {
    "text": "name any names but there are many of them out there um it simply just provides the building blocks for you to",
    "start": "147519",
    "end": "154560"
  },
  {
    "text": "build an application uh that has uh interfaces to your actual business logic",
    "start": "154560",
    "end": "161840"
  },
  {
    "text": "um and so within this talk I'm not going to actually show too much about how to",
    "start": "161840",
    "end": "167480"
  },
  {
    "text": "you know talk to databases and in uh specifically like building out modeling and stuff like that um but we'll show",
    "start": "167480",
    "end": "173440"
  },
  {
    "text": "how to wire Phoenix up to uh your functions that deal with the database and and different business logic",
    "start": "173440",
    "end": "181000"
  },
  {
    "text": "so um moving along here it's very familiar to anyone who has used kind of",
    "start": "181000",
    "end": "187599"
  },
  {
    "text": "an NBC framework um asp.net MBC um Ruby on Rails d jango's uh python",
    "start": "187599",
    "end": "195799"
  },
  {
    "text": "uh framework um and as I mentioned we have this kind of real-time messaging layer",
    "start": "195799",
    "end": "202720"
  },
  {
    "text": "um called channels um and this is really kind of the exciting part um to me the",
    "start": "202720",
    "end": "207959"
  },
  {
    "text": "the web is kind of boring for for the most part until until now when we're actually dealing with uh persisted",
    "start": "207959",
    "end": "215400"
  },
  {
    "text": "connections and having to build servers that are actually online and holding a",
    "start": "215400",
    "end": "221239"
  },
  {
    "text": "connection uh all the time so that obviously also creates some challenges with deployments and things like that to",
    "start": "221239",
    "end": "227480"
  },
  {
    "text": "where you can't just take down the server necessarily uh and spin one right up in its place because you'll drop",
    "start": "227480",
    "end": "233400"
  },
  {
    "text": "connections so you have to kind of think about how you want to build your system uh for deploying now because Elixir is a",
    "start": "233400",
    "end": "242439"
  },
  {
    "text": "functional programming language um with immutable data it's really really simple",
    "start": "242439",
    "end": "247879"
  },
  {
    "text": "to test your services um you can just simply uh construct some",
    "start": "247879",
    "end": "254480"
  },
  {
    "text": "data pipe it through some functions and you have uh simple functions that you can test so um and one of the other",
    "start": "254480",
    "end": "262199"
  },
  {
    "text": "things that people are really loving about Phoenix is the fact that because it runs with Elixir and llang it's very",
    "start": "262199",
    "end": "269039"
  },
  {
    "text": "fast and efficient ient um and one of the reasons why people pick web",
    "start": "269039",
    "end": "274280"
  },
  {
    "text": "Frameworks a lot is because they may give you some productivity gains um Ruby",
    "start": "274280",
    "end": "280000"
  },
  {
    "text": "un rails for instance is a really popular framework and people are really productive in it they get up and running",
    "start": "280000",
    "end": "285680"
  },
  {
    "text": "and they can build uh entire applications very very quickly and scaffold out things uh for prototypes",
    "start": "285680",
    "end": "292240"
  },
  {
    "text": "and things like that and Phoenix also really allows you to do that as well but",
    "start": "292240",
    "end": "298039"
  },
  {
    "text": "you don't have to compromise on productivity uh and performance so Phoenix is not really",
    "start": "298039",
    "end": "305880"
  },
  {
    "text": "alone it's there's uh it's it's a kind of multi-layer system it takes uh",
    "start": "305880",
    "end": "311639"
  },
  {
    "text": "advantage of a few different libraries to uh provide all of its functionality",
    "start": "311639",
    "end": "316720"
  },
  {
    "text": "and one of the main ones is uh called plug and plug is a simple uh kind of",
    "start": "316720",
    "end": "323120"
  },
  {
    "text": "abstraction for dealing with different web servers so right now the most popular web server in erlang is called",
    "start": "323120",
    "end": "330880"
  },
  {
    "text": "Cowboy uh and this is the one that works with plug out of the box um it's a",
    "start": "330880",
    "end": "336160"
  },
  {
    "text": "fantastic uh web server it's really small codebase um it's extremely fast um",
    "start": "336160",
    "end": "342400"
  },
  {
    "text": "and it allows you to have incredibly High concurrency um where for each",
    "start": "342400",
    "end": "348840"
  },
  {
    "text": "request that comes in it spawns an earling process to deal with that uh particular request and at the end it",
    "start": "348840",
    "end": "355240"
  },
  {
    "text": "dies and then the supervisor will replace a new process in its place and and it's really",
    "start": "355240",
    "end": "360759"
  },
  {
    "text": "amazing um another tool is Ecto and Ecto is a library that uh was built to kind",
    "start": "360759",
    "end": "368319"
  },
  {
    "text": "of give you the ability to write nice queries for uh your data and getting it",
    "start": "368319",
    "end": "373599"
  },
  {
    "text": "in and out of the database um and we won't have enough time really to kind of delve into that but uh it definitely",
    "start": "373599",
    "end": "381599"
  },
  {
    "text": "deserves its own uh separate talk for sure all right so I want to take a",
    "start": "381599",
    "end": "386680"
  },
  {
    "text": "moment to really kind of Explain how uh plug really is uh kind of the center",
    "start": "386680",
    "end": "393919"
  },
  {
    "text": "it plays the main stage really in in Phoenix applications so um this is",
    "start": "393919",
    "end": "400199"
  },
  {
    "text": "essentially a library that gives you a specification for building composable",
    "start": "400199",
    "end": "406280"
  },
  {
    "text": "functions uh that allow you to uh basically build a pipeline for your",
    "start": "406280",
    "end": "413759"
  },
  {
    "text": "requests and response so you you get a a request that comes in and you essentially have a dat structure that",
    "start": "413759",
    "end": "420199"
  },
  {
    "text": "allows you to uh build a response very very easily um and so plugs are generally reusable modules or functions",
    "start": "420199",
    "end": "427960"
  },
  {
    "text": "um you can package them up in a in an Elixir package um put it on the the hex",
    "start": "427960",
    "end": "433319"
  },
  {
    "text": "website which is for um our publishing package packages and then other people can pull those in and reuse them um and",
    "start": "433319",
    "end": "442319"
  },
  {
    "text": "so the plug specification starts with this plug.on data structure um and this",
    "start": "442319",
    "end": "450120"
  },
  {
    "text": "is essentially it's a what's called a struct in Elixir um very familiar with",
    "start": "450120",
    "end": "456520"
  },
  {
    "text": "uh in in other languages that have structs it's ENT essentially it's in Elixir it's a map uh it's a special kind",
    "start": "456520",
    "end": "463440"
  },
  {
    "text": "of map it just has a uh a key in it called underscore uncore struct underscore underscore and it uh",
    "start": "463440",
    "end": "470120"
  },
  {
    "text": "specifies which module that it belongs to um and this module",
    "start": "470120",
    "end": "475319"
  },
  {
    "text": "plug.on essentially has a bunch of functions for dealing with um this Con structure so you might want",
    "start": "475319",
    "end": "483240"
  },
  {
    "text": "to set a a response header um you might want to set the body um various things",
    "start": "483240",
    "end": "489440"
  },
  {
    "text": "like that um you may need to uh get something out of the session and uh be",
    "start": "489440",
    "end": "494800"
  },
  {
    "text": "able to read read uh a value up from the session go to the database grab some stuff and then you can actually assign",
    "start": "494800",
    "end": "501360"
  },
  {
    "text": "variables and things to this connection this is what it looks like it might be pretty small for all the way in",
    "start": "501360",
    "end": "507840"
  },
  {
    "text": "the back but it's a pretty large uh larger data structure um but essentially a lot of uh web Frameworks",
    "start": "507840",
    "end": "516599"
  },
  {
    "text": "and web tools generally have like a separate request and response objects uh",
    "start": "516599",
    "end": "521640"
  },
  {
    "text": "for dealing with things and with with plug it's really really simplified into",
    "start": "521640",
    "end": "527080"
  },
  {
    "text": "just one single data structure and this one data structure is simply piped through the entire stack of your",
    "start": "527080",
    "end": "533560"
  },
  {
    "text": "application um and so it makes it really really simple uh in terms of the API and",
    "start": "533560",
    "end": "538959"
  },
  {
    "text": "also uh your functions don't have uh you know multiple arguments and things like that",
    "start": "538959",
    "end": "545680"
  },
  {
    "text": "so so the plug specification continuing uh there's two kinds of plugs that you",
    "start": "545680",
    "end": "550880"
  },
  {
    "text": "can create um one is just a simple function and the other is a module plug um and so function plugs uh are any",
    "start": "550880",
    "end": "559399"
  },
  {
    "text": "function that takes and receives a connection as the first argument and a",
    "start": "559399",
    "end": "564560"
  },
  {
    "text": "set of options uh which can be any term uh can be any any Elixir term um and it",
    "start": "564560",
    "end": "571800"
  },
  {
    "text": "just needs to return the connection so the um if you're if you're not familiar",
    "start": "571800",
    "end": "577040"
  },
  {
    "text": "this uh syntax down here is a like a spec um and this is just showing the",
    "start": "577040",
    "end": "583240"
  },
  {
    "text": "options inside or the arguments inside the par uh parenthesis so it takes the plug.on type um and the plug options and",
    "start": "583240",
    "end": "591880"
  },
  {
    "text": "then it returns a plug con type and this here is an example of a simple Json",
    "start": "591880",
    "end": "600120"
  },
  {
    "text": "header plug um so it just takes the connection here uh and it pipes it through this put response content type",
    "start": "600120",
    "end": "607680"
  },
  {
    "text": "and we're just saying application Json and that's going to set the uh one of",
    "start": "607680",
    "end": "612760"
  },
  {
    "text": "the response uh or it's going to set the content type header on the response headers uh to application",
    "start": "612760",
    "end": "619600"
  },
  {
    "text": "Json the other thing is module plugs so sometimes you might have additional",
    "start": "619600",
    "end": "625079"
  },
  {
    "text": "functionality that you need um to uh build a plug properly and so module",
    "start": "625079",
    "end": "632399"
  },
  {
    "text": "plugs allow you to do that very nicely um you just need to uh Define an init",
    "start": "632399",
    "end": "637639"
  },
  {
    "text": "one uh function and this is what takes the initial arguments or for options for",
    "start": "637639",
    "end": "643240"
  },
  {
    "text": "setting up the the plug um and then all you need to do is return the options now",
    "start": "643240",
    "end": "649040"
  },
  {
    "text": "whether or not you um you know actually modify or transform those options is up",
    "start": "649040",
    "end": "654360"
  },
  {
    "text": "to your your plug uh but uh you can just essentially return what's passed into it",
    "start": "654360",
    "end": "660120"
  },
  {
    "text": "as well it doesn't matter um and then call two is what's actually called uh",
    "start": "660120",
    "end": "665240"
  },
  {
    "text": "when calling the uh the function itself it receives the connection and then the",
    "start": "665240",
    "end": "671000"
  },
  {
    "text": "options that was returned from a nit one and here is an example of adjacent",
    "start": "671000",
    "end": "678120"
  },
  {
    "text": "header plug uh built as a module very very similar all that's",
    "start": "678120",
    "end": "683639"
  },
  {
    "text": "changed is that we've wrapped it in a module and added the uh AIT",
    "start": "683639",
    "end": "690079"
  },
  {
    "text": "so Ecto uh as as I said before it's just a",
    "start": "690560",
    "end": "696040"
  },
  {
    "text": "a domain specific language for writing queries and interacting with the databases it has a lot of really uh",
    "start": "696040",
    "end": "702800"
  },
  {
    "text": "interesting stuff uh in it that's very different from other data access tools um and uh there's been a recent book",
    "start": "702800",
    "end": "710040"
  },
  {
    "text": "that's been written about it uh it's at 2.0 um if you go onto the uh plaform",
    "start": "710040",
    "end": "716560"
  },
  {
    "text": "Tech blog which is the company that's responsible for Elixir um they're also",
    "start": "716560",
    "end": "722200"
  },
  {
    "text": "writing Ecto as well so let's talk about how you get started with Phoenix now um",
    "start": "722200",
    "end": "728839"
  },
  {
    "text": "essentially what we uh have here is uh we have what's called a mix archive and",
    "start": "728839",
    "end": "734880"
  },
  {
    "text": "you can install this archive on your machine and what it provides you is a",
    "start": "734880",
    "end": "740199"
  },
  {
    "text": "nice little mix phoenix. new uh task and you can just pass it the name of your",
    "start": "740199",
    "end": "746199"
  },
  {
    "text": "application and it will go ahead and generate uh just a kind of a scaffolding",
    "start": "746199",
    "end": "751399"
  },
  {
    "text": "a skeleton uh of the project um so there's lots and lots of different files in here but most of them you can see",
    "start": "751399",
    "end": "757639"
  },
  {
    "text": "there's like test files for testing things um it it does all of the the",
    "start": "757639",
    "end": "762680"
  },
  {
    "text": "router and and the endpoint and all that kind of stuff um once you do that it'll ask you",
    "start": "762680",
    "end": "768320"
  },
  {
    "text": "hey do you want to fetch install the dependencies you say Yes um it'll go ahead and fetch uh the dependencies",
    "start": "768320",
    "end": "774839"
  },
  {
    "text": "you'll notice here that it's running npm install um this is an optional feature um you can flag it off if you don't want",
    "start": "774839",
    "end": "781199"
  },
  {
    "text": "it but uh many times when you're building web applications you also need tooling for compiling JavaScript and uh",
    "start": "781199",
    "end": "788880"
  },
  {
    "text": "you know CSS and things like that if you're using SAS or uh various tools like that um again that's an optional uh",
    "start": "788880",
    "end": "795920"
  },
  {
    "text": "thing that you can turn it off if you're just building an API for instance um and then just gives us some nice friendly",
    "start": "795920",
    "end": "802000"
  },
  {
    "text": "message here to you know CD into the app directory run mix Ecto doc create that",
    "start": "802000",
    "end": "807399"
  },
  {
    "text": "comes from the Ecto Library just bootstraps the database um and we run",
    "start": "807399",
    "end": "813440"
  },
  {
    "text": "mix phoenix. server to start the server um if you go to Local Host 4000",
    "start": "813440",
    "end": "819360"
  },
  {
    "text": "you see uh just a simple welcome page and with that let's get into some",
    "start": "819360",
    "end": "829639"
  },
  {
    "text": "code so uh what I'm going to do here is uh kind of start building out uh just a",
    "start": "831639",
    "end": "838519"
  },
  {
    "text": "simple user registration um and show you kind of the the building blocks that you're going to",
    "start": "838519",
    "end": "844120"
  },
  {
    "text": "be using when writing a phoenix uh based web application um so to start off um",
    "start": "844120",
    "end": "850040"
  },
  {
    "text": "just to show you here this is in the lib directory we have all elixir applications usually have a main kind of",
    "start": "850040",
    "end": "857360"
  },
  {
    "text": "module uh it's usually the name of the application you're building in this case we have NDC um and it is a uh is an",
    "start": "857360",
    "end": "865240"
  },
  {
    "text": "application itself so what that does is in Elixir uh when this uh start function is called um it's",
    "start": "865240",
    "end": "872440"
  },
  {
    "text": "actually going to start what's called a supervisor um so a supervisor is a",
    "start": "872440",
    "end": "878720"
  },
  {
    "text": "special process in erlang that monitors and supervises other processes um and so",
    "start": "878720",
    "end": "885959"
  },
  {
    "text": "if one dies it will actually spawn another one in its place um so you have",
    "start": "885959",
    "end": "891759"
  },
  {
    "text": "this really amazing uh fault tolerant way of building applications and you can build trees of Supervisors that",
    "start": "891759",
    "end": "898320"
  },
  {
    "text": "supervise other supervisors as in the case here so the children of this supervisor we have two of them we have",
    "start": "898320",
    "end": "906160"
  },
  {
    "text": "uh the Ecto repo or the I'm sorry the NDC repo in this case this is our uh",
    "start": "906160",
    "end": "911759"
  },
  {
    "text": "repo um and uh the repo is the thing",
    "start": "911759",
    "end": "917160"
  },
  {
    "text": "that actually talks to the database so it's in charge of setting up a connection pool um being able to check",
    "start": "917160",
    "end": "924240"
  },
  {
    "text": "in and out uh connections and actually does the inserting of data and things",
    "start": "924240",
    "end": "929519"
  },
  {
    "text": "like that um the next thing is the endpoint so the endpoint is something uh",
    "start": "929519",
    "end": "935759"
  },
  {
    "text": "from Phoenix it's the actual module that's responsible for uh starting and",
    "start": "935759",
    "end": "942160"
  },
  {
    "text": "managing the web server so uh it's the thing that is the first in line for",
    "start": "942160",
    "end": "948399"
  },
  {
    "text": "receiving the con structure um it is actually a plug itself so um there's",
    "start": "948399",
    "end": "955600"
  },
  {
    "text": "three main plugs in Phoenix One Is The End Point um one is the the router that",
    "start": "955600",
    "end": "961680"
  },
  {
    "text": "we'll see in a minute and then the others are the controllers um and so this uh particular uh endpoint is uh",
    "start": "961680",
    "end": "970560"
  },
  {
    "text": "pretty interesting all it really is doing uh in code here um is setting up a",
    "start": "970560",
    "end": "977120"
  },
  {
    "text": "bunch of different plugs as a pipeline so all of these plugs that are in this file will be hit in on every single",
    "start": "977120",
    "end": "984240"
  },
  {
    "text": "request so we have uh a plug here for setting up static assets for you know",
    "start": "984240",
    "end": "990240"
  },
  {
    "text": "JavaScript and all that kind of stuff um for in development mode we have u a",
    "start": "990240",
    "end": "995360"
  },
  {
    "text": "section here for code reloading uh so whenever you save a file",
    "start": "995360",
    "end": "1000759"
  },
  {
    "text": "it will automatically recompile that file so that it's uh reloaded in inside the VM um we have things for logging",
    "start": "1000759",
    "end": "1008720"
  },
  {
    "text": "parsing the body uh and query par or like query strings and forms and stuff like that um we also have of course",
    "start": "1008720",
    "end": "1017000"
  },
  {
    "text": "sessions so setting up cookie store um and then the last thing here is we plug",
    "start": "1017000",
    "end": "1022279"
  },
  {
    "text": "the router so and the router um as you probably could imagine by the by the",
    "start": "1022279",
    "end": "1028079"
  },
  {
    "text": "naming it routes things so um this is the basic router um that comes uh kind",
    "start": "1028079",
    "end": "1035120"
  },
  {
    "text": "of preconfigured when you generate an application um we have down here we have",
    "start": "1035120",
    "end": "1040240"
  },
  {
    "text": "the scope uh the scope is uh starts out with just a scope to the root um and we",
    "start": "1040240",
    "end": "1048720"
  },
  {
    "text": "have have one route in here and it's a get to the route so HTTP HTTP verbs um",
    "start": "1048720",
    "end": "1055360"
  },
  {
    "text": "that you use here with the um like get post put patch delete Etc um are all",
    "start": "1055360",
    "end": "1061799"
  },
  {
    "text": "available uh for building out routes um and you simply just specify the path",
    "start": "1061799",
    "end": "1069640"
  },
  {
    "text": "that you want to load it on and some kind of uh module that will act as the",
    "start": "1069640",
    "end": "1075640"
  },
  {
    "text": "Handler for requests that match that route um and also the this this other argument",
    "start": "1075640",
    "end": "1081960"
  },
  {
    "text": "here Index this is going to be the function inside that module that's going",
    "start": "1081960",
    "end": "1087559"
  },
  {
    "text": "to be responsible uh for for uh doing the action uh for that so and as we see",
    "start": "1087559",
    "end": "1095679"
  },
  {
    "text": "on here um this is the the the page uh",
    "start": "1095679",
    "end": "1102039"
  },
  {
    "text": "page controller index action so it's just rendering out this simple page all",
    "start": "1102039",
    "end": "1107159"
  },
  {
    "text": "right so um the first thing that we want to do in this case we're registering a user is we want to get um some sort of",
    "start": "1107159",
    "end": "1117520"
  },
  {
    "text": "way for them to hit the register path",
    "start": "1117520",
    "end": "1122799"
  },
  {
    "text": "I'm going to bump this up because it's pretty small and that didn't seem to bump up",
    "start": "1122799",
    "end": "1129600"
  },
  {
    "text": "the top part funny all right um so we can see by kind of error driven",
    "start": "1129600",
    "end": "1136679"
  },
  {
    "text": "development here um what we need to do next so it's saying hey there's no route",
    "start": "1136679",
    "end": "1141880"
  },
  {
    "text": "for uh get to/ register um and so all we need to do here is type",
    "start": "1141880",
    "end": "1150280"
  },
  {
    "text": "inregister we are going to create a registration controller and this one is going to go",
    "start": "1150280",
    "end": "1157080"
  },
  {
    "text": "to the to the new uh action um so this will be the the action",
    "start": "1157080",
    "end": "1163440"
  },
  {
    "text": "that's responsible for actually displaying a blank form so that people can uh",
    "start": "1163440",
    "end": "1169400"
  },
  {
    "text": "fill it in the next thing that we're going to need to do is we're going to need to have an action for um posting",
    "start": "1169400",
    "end": "1176440"
  },
  {
    "text": "our data posting our form uh and that will go to the same",
    "start": "1176440",
    "end": "1181919"
  },
  {
    "text": "module but with a create action okay so",
    "start": "1181919",
    "end": "1187240"
  },
  {
    "text": "if we refresh we'll see another error so this is now basically telling us that the",
    "start": "1187240",
    "end": "1193360"
  },
  {
    "text": "module uh is not available so simple enough we can go in and create that",
    "start": "1193360",
    "end": "1201120"
  },
  {
    "text": "module so registration this is like the hardest word to",
    "start": "1201120",
    "end": "1206480"
  },
  {
    "text": "spell um did I get that right yep okay all right so we create the registration",
    "start": "1206480",
    "end": "1212280"
  },
  {
    "text": "controller file and now we will create a module So Def module uh nc.",
    "start": "1212280",
    "end": "1220520"
  },
  {
    "text": "registration controller okay so with that we created",
    "start": "1220520",
    "end": "1227159"
  },
  {
    "text": "it but now we'll see will still have the same error and you can see here it's saying hey there's no AIT one function",
    "start": "1227159",
    "end": "1234679"
  },
  {
    "text": "uh it's it's undefined or it's private so if you remember from when I was talking about plugs uh a module plug",
    "start": "1234679",
    "end": "1241240"
  },
  {
    "text": "needs to have an init one and a call two well in the case for Phoenix um we",
    "start": "1241240",
    "end": "1246799"
  },
  {
    "text": "actually have what we do here is we have a special module in all uh Phoenix",
    "start": "1246799",
    "end": "1254760"
  },
  {
    "text": "generated projects uh called web and it's right here and this",
    "start": "1254760",
    "end": "1264559"
  },
  {
    "text": "uh whenever you use the the word use in uh in Elixir what it does is it actually",
    "start": "1265360",
    "end": "1272960"
  },
  {
    "text": "calls um a a special macro in that module uh so in the using module the",
    "start": "1272960",
    "end": "1279200"
  },
  {
    "text": "module that you're saying that you want to use we'll call this macro called Dunder using so um and in this case it's",
    "start": "1279200",
    "end": "1288559"
  },
  {
    "text": "it's a it's a macro that receives one argument and it's just an atom and it simply just uses apply three which takes",
    "start": "1288559",
    "end": "1296400"
  },
  {
    "text": "the the current module and applies the uh the atom as the function and then",
    "start": "1296400",
    "end": "1301840"
  },
  {
    "text": "with no arguments which is the empty list at the as the third argument there um so in this case when we're saying hey",
    "start": "1301840",
    "end": "1307919"
  },
  {
    "text": "we want to use this module and it's a controller this is the function that's going to be called um when we use quote",
    "start": "1307919",
    "end": "1316200"
  },
  {
    "text": "it's actually going to do uh this is done at compile time so it's not at runtime it's at compile time and this",
    "start": "1316200",
    "end": "1322919"
  },
  {
    "text": "actually injects the functionality that's within this quote block directly into the module um and as you can see",
    "start": "1322919",
    "end": "1328919"
  },
  {
    "text": "here it's doing an additional use uh it's using Phoenix controller and so that will then open up that use",
    "start": "1328919",
    "end": "1334760"
  },
  {
    "text": "statement and kind of uh recursively go through uh in injecting",
    "start": "1334760",
    "end": "1340279"
  },
  {
    "text": "functionality um all right",
    "start": "1340279",
    "end": "1345799"
  },
  {
    "text": "so uh so now we have our uh controller and we've got the use statement there so",
    "start": "1345799",
    "end": "1352440"
  },
  {
    "text": "now if we refresh here now it's telling us hey there's no new uh two",
    "start": "1352440",
    "end": "1357679"
  },
  {
    "text": "function so oops we'll set this up so it takes",
    "start": "1357679",
    "end": "1363520"
  },
  {
    "text": "the con the connection as the first argument um and then it takes some parameters as the second argument um but",
    "start": "1363520",
    "end": "1371520"
  },
  {
    "text": "we actually won't use those in this particular function so to get this uh to kind of uh work just to show you here",
    "start": "1371520",
    "end": "1382039"
  },
  {
    "text": "um we can just simply use a text function to render out um something to",
    "start": "1383279",
    "end": "1389159"
  },
  {
    "text": "the screen um but that's not too fun yet so",
    "start": "1389159",
    "end": "1394279"
  },
  {
    "text": "let's actually do something real so we can use uh the render function and we can specify a template",
    "start": "1394279",
    "end": "1401240"
  },
  {
    "text": "that we want to render here and this will be called new. HTML uh and",
    "start": "1401240",
    "end": "1409279"
  },
  {
    "text": "we get that we're going to have an error so we also have a module that you need",
    "start": "1409279",
    "end": "1415279"
  },
  {
    "text": "to specify which is it's a it's a view module um and this view module is responsible for a couple of things um so",
    "start": "1415279",
    "end": "1423080"
  },
  {
    "text": "if we go into views I'm just going to create this real quick and I will",
    "start": "1423080",
    "end": "1428120"
  },
  {
    "text": "explain here we go with that registration word again okay so the view itself is respond",
    "start": "1428720",
    "end": "1438400"
  },
  {
    "text": "responsible for uh rendering templates um it's also a place that you can use as",
    "start": "1438400",
    "end": "1445919"
  },
  {
    "text": "uh like view helper functions that uh are for presentation uh you know kind of",
    "start": "1445919",
    "end": "1452520"
  },
  {
    "text": "concerns so um and so as you will see with this all",
    "start": "1452520",
    "end": "1459919"
  },
  {
    "text": "we need to do is use NDC",
    "start": "1459919",
    "end": "1465240"
  },
  {
    "text": "web um and specify that it is a",
    "start": "1465240",
    "end": "1471080"
  },
  {
    "text": "view and now we have a different error so um what's really interesting about",
    "start": "1471080",
    "end": "1477240"
  },
  {
    "text": "this is that it's saying hey we could not render a new. HTML for this view",
    "start": "1477240",
    "end": "1483679"
  },
  {
    "text": "please define a matching clause for render 2 or Define a template at web",
    "start": "1483679",
    "end": "1488720"
  },
  {
    "text": "templates registration so the the interesting bit here is that we could",
    "start": "1488720",
    "end": "1493880"
  },
  {
    "text": "actually go in here and say render um new sorry new.",
    "start": "1493880",
    "end": "1503360"
  },
  {
    "text": "HTML and we could do",
    "start": "1503559",
    "end": "1509640"
  },
  {
    "text": "something like",
    "start": "1509640",
    "end": "1513000"
  },
  {
    "text": "this and now we have the string Hello World um and so now you can see also see",
    "start": "1515760",
    "end": "1521760"
  },
  {
    "text": "that it's actually wrapped in the layout as well so okay but that's not what we",
    "start": "1521760",
    "end": "1526880"
  },
  {
    "text": "want to do we actually want to get rid of this this um and actually you know what I'm going to keep that in there for",
    "start": "1526880",
    "end": "1531919"
  },
  {
    "text": "just one second because what's interesting that I want to show you",
    "start": "1531919",
    "end": "1537679"
  },
  {
    "text": "is uh how how the the temp template rendering stuff works so I'm going to",
    "start": "1537679",
    "end": "1543360"
  },
  {
    "text": "check out a",
    "start": "1543360",
    "end": "1547158"
  },
  {
    "text": "um previously uh done up template here so I don't have to type all this stuff out",
    "start": "1550000",
    "end": "1557720"
  },
  {
    "text": "okay um so I've got a template in here now for registration new. html. eex stands",
    "start": "1557720",
    "end": "1566799"
  },
  {
    "text": "for embedded Elixir um it allows us to interpolate Elixir code directly within",
    "start": "1566799",
    "end": "1572159"
  },
  {
    "text": "HTML um and so this is simply just a uh it's got some form helpers to help us create forms and all that kind of stuff",
    "start": "1572159",
    "end": "1579640"
  },
  {
    "text": "um so now if I if I reload it's it's actually still showing the original stuff and the reason is is because at",
    "start": "1579640",
    "end": "1586679"
  },
  {
    "text": "compile time it checks to see first if there is uh when when it's compiling the",
    "start": "1586679",
    "end": "1594399"
  },
  {
    "text": "view um it's it's actually seeing this render clause for new. HTML and it just",
    "start": "1594399",
    "end": "1601840"
  },
  {
    "text": "doesn't bother checking the file system to see if there's a template there so if we delete",
    "start": "1601840",
    "end": "1607440"
  },
  {
    "text": "that and we refresh now it's actually using the template so we have this uh",
    "start": "1607440",
    "end": "1613559"
  },
  {
    "text": "variable that's defined inside this um template called change set and so now",
    "start": "1613559",
    "end": "1619320"
  },
  {
    "text": "it's squawking at us that it's not set so we need to do that so we'll go into",
    "start": "1619320",
    "end": "1625520"
  },
  {
    "text": "our controller and we're going to do something here um that is already",
    "start": "1625520",
    "end": "1632880"
  },
  {
    "text": "defined previously in another module that I've done um beforehand so I have",
    "start": "1632880",
    "end": "1638840"
  },
  {
    "text": "this registration kind of context uh module that is going to be responsible",
    "start": "1638840",
    "end": "1644200"
  },
  {
    "text": "for actually taking form element or form uh attributes and actually saving user into the database um so we create this",
    "start": "1644200",
    "end": "1651600"
  },
  {
    "text": "change set thing that comes from Ecto and we are now going to send that",
    "start": "1651600",
    "end": "1658960"
  },
  {
    "text": "into the The View uh so now the form actually can",
    "start": "1659519",
    "end": "1667360"
  },
  {
    "text": "render um and so this essentially allows us to um have those form helpers and it",
    "start": "1667360",
    "end": "1673679"
  },
  {
    "text": "works with this change Set uh data structure um it kind of keep keeps track",
    "start": "1673679",
    "end": "1678760"
  },
  {
    "text": "of changes that we've made on on our on our model um and allows us to do",
    "start": "1678760",
    "end": "1684120"
  },
  {
    "text": "validations and all kinds of really cool stuff so if I submit the form right now it's going to uh fail because the create",
    "start": "1684120",
    "end": "1691320"
  },
  {
    "text": "action doesn't exist yet so easy enough we can just Define that real quick so",
    "start": "1691320",
    "end": "1697200"
  },
  {
    "text": "create it's going to take the con and this time it's going to take we are",
    "start": "1697200",
    "end": "1702679"
  },
  {
    "text": "going to use this so it's going to take a a map um",
    "start": "1702679",
    "end": "1709240"
  },
  {
    "text": "and registration and then it's going to be uh the params here will be another map",
    "start": "1709240",
    "end": "1716720"
  },
  {
    "text": "so it's kind of a nested map here so I also have",
    "start": "1716720",
    "end": "1723440"
  },
  {
    "text": "um here we have this registration uh module and we've got a function on it",
    "start": "1723440",
    "end": "1730519"
  },
  {
    "text": "called register user here we go just takes the pams from",
    "start": "1730519",
    "end": "1737279"
  },
  {
    "text": "the form and we're going to pattern match on this so this function will return either an",
    "start": "1737279",
    "end": "1745519"
  },
  {
    "text": "okay Tuple with our user or an error and a change set and this is kind of",
    "start": "1745519",
    "end": "1751760"
  },
  {
    "text": "idiomatic Elixir code here we we always use usually uh use pattern matching uh",
    "start": "1751760",
    "end": "1758120"
  },
  {
    "text": "on on everything as you can see here I pattern matching in the function head as well uh specifying that I want to match",
    "start": "1758120",
    "end": "1764480"
  },
  {
    "text": "on the data structure that's actually coming into my function um and so with",
    "start": "1764480",
    "end": "1770360"
  },
  {
    "text": "here in the in the uh success case we want to take the connection and we want to pipe it through a series of functions",
    "start": "1770360",
    "end": "1776799"
  },
  {
    "text": "so one of the things that we want to do is we want to put a flash message to let our user know that they've you know",
    "start": "1776799",
    "end": "1783519"
  },
  {
    "text": "signed in or that they've",
    "start": "1783519",
    "end": "1787039"
  },
  {
    "text": "registered okay and next we want to actually put something in the session",
    "start": "1792120",
    "end": "1799240"
  },
  {
    "text": "um that actually identifies the user so we're going to take the user uh ID and",
    "start": "1799240",
    "end": "1805559"
  },
  {
    "text": "we're going to stick it in a cookie uh under the key of current user",
    "start": "1805559",
    "end": "1810600"
  },
  {
    "text": "ID um and then lastly what we'll do is we'll just redirect um to the homepage and we have",
    "start": "1810600",
    "end": "1818600"
  },
  {
    "text": "these path helpers um that are quite handy so that you don't have to hardcode you know path",
    "start": "1818600",
    "end": "1825320"
  },
  {
    "text": "strings in your uh in your code um so we're just going to redirect to the page path we pass in the connection so that",
    "start": "1825320",
    "end": "1832159"
  },
  {
    "text": "it understands the routes and things that are available um we just specify the index um now in the case that we get an",
    "start": "1832159",
    "end": "1839240"
  },
  {
    "text": "error and a change set back um then we are essentially going to",
    "start": "1839240",
    "end": "1845480"
  },
  {
    "text": "do what we do in the new function or new action and just Ren rerender the form",
    "start": "1845480",
    "end": "1851640"
  },
  {
    "text": "again with the new change set as the variable that's uh published there all",
    "start": "1851640",
    "end": "1857799"
  },
  {
    "text": "right all right so let's go back and let's rerun to the form and I",
    "start": "1857799",
    "end": "1866039"
  },
  {
    "text": "will register",
    "start": "1866039",
    "end": "1868720"
  },
  {
    "text": "myself all right",
    "start": "1877200",
    "end": "1881518"
  },
  {
    "text": "nice thank you I always do that I picked the wrong name to",
    "start": "1889039",
    "end": "1896799"
  },
  {
    "text": "use all right let's try this",
    "start": "1896799",
    "end": "1900600"
  },
  {
    "text": "again boom okay we registered wonderful okay so the next thing we actually want",
    "start": "1905799",
    "end": "1913039"
  },
  {
    "text": "to prove that we actually did register and that we're signed in right so um we'll go ahead and change this welcome",
    "start": "1913039",
    "end": "1918679"
  },
  {
    "text": "to Phoenix to Welcome to the name of well myself in this case uh because I'm",
    "start": "1918679",
    "end": "1924080"
  },
  {
    "text": "signed in so uh what I'm going to do here is we're going to create uh in the",
    "start": "1924080",
    "end": "1929559"
  },
  {
    "text": "web directory just a simple plugs directory and I'm going to create an O",
    "start": "1929559",
    "end": "1937279"
  },
  {
    "text": "module and this o module is just going to be a",
    "start": "1937279",
    "end": "1942480"
  },
  {
    "text": "plug um so we will Define a module called n DC",
    "start": "1942480",
    "end": "1949720"
  },
  {
    "text": "off we are going to import plug.on uh this so we can have access",
    "start": "1950360",
    "end": "1956639"
  },
  {
    "text": "direct access to all the functions that are uh available in there so we will Define our nit uh one function it's",
    "start": "1956639",
    "end": "1962960"
  },
  {
    "text": "going to take some options that we actually don't care about um so we're just going to return those options",
    "start": "1962960",
    "end": "1968159"
  },
  {
    "text": "directly we have a call function which is going to receive the con and some options that we don't care",
    "start": "1968159",
    "end": "1975240"
  },
  {
    "text": "about and almost there there so we are going to get a user um we are going to",
    "start": "1975240",
    "end": "1982120"
  },
  {
    "text": "do that by calling a function called user from session um passing in the",
    "start": "1982120",
    "end": "1990000"
  },
  {
    "text": "connection and then we're just going to take the connection and we're going to pipe it through this function called",
    "start": "1990000",
    "end": "1996480"
  },
  {
    "text": "assigns or assign rather and we're going to assign current user to the",
    "start": "1996480",
    "end": "2004279"
  },
  {
    "text": "user um now if you remember uh we were using using at symbol variables in the",
    "start": "2004279",
    "end": "2010240"
  },
  {
    "text": "templates so that's where these assigns are are coming from so anything that's assigned so this current user as the",
    "start": "2010240",
    "end": "2017360"
  },
  {
    "text": "assign inside the template will become at current user um if that if you're",
    "start": "2017360",
    "end": "2022919"
  },
  {
    "text": "tracking there so um now we need to uh Define this user from session it's going",
    "start": "2022919",
    "end": "2029639"
  },
  {
    "text": "to take the connection and we are going to",
    "start": "2029639",
    "end": "2034799"
  },
  {
    "text": "case on get session so so this is a plug function um we are going to say hey give",
    "start": "2034799",
    "end": "2041639"
  },
  {
    "text": "me the current user ID out of the session and two things could happen if",
    "start": "2041639",
    "end": "2048878"
  },
  {
    "text": "someone's reached the site and they're not signed in this is going to return nil so uh if it's nil we're just going",
    "start": "2048879",
    "end": "2055040"
  },
  {
    "text": "to return nil because we can have that variable just available uh and if if we",
    "start": "2055040",
    "end": "2062079"
  },
  {
    "text": "do any kind of uh if checks on it or anything like that it'll return truthy or falsy value um so if we get a value",
    "start": "2062079",
    "end": "2069960"
  },
  {
    "text": "back it's going to be some type of integer um and so we can just say NDC",
    "start": "2069960",
    "end": "2075720"
  },
  {
    "text": "user. getet user uh from this uh",
    "start": "2075720",
    "end": "2081158"
  },
  {
    "text": "int okay now we need to actually plug this",
    "start": "2081159",
    "end": "2086638"
  },
  {
    "text": "in so where we're going to do that is in the pipeline uh for the browser we're going to just plug this in",
    "start": "2086639",
    "end": "2094079"
  },
  {
    "text": "um at the end here and an important thing is is that since we are using the",
    "start": "2094079",
    "end": "2099920"
  },
  {
    "text": "plug get uh get session we have to do that after we have already fetched the",
    "start": "2099920",
    "end": "2105880"
  },
  {
    "text": "session so um what's really cool about plug is it actually allows you to bypass",
    "start": "2105880",
    "end": "2112440"
  },
  {
    "text": "uh accessing fields that are potentially expensive so for instance reading the body reading cookies those things can be",
    "start": "2112440",
    "end": "2120280"
  },
  {
    "text": "uh quite expensive and for instance if you're using uh like an API for instance a Json API you're probably going to be",
    "start": "2120280",
    "end": "2125760"
  },
  {
    "text": "sending in a token and you're not going to be dealing with cookies so you can bypass reading those values and and uh",
    "start": "2125760",
    "end": "2131520"
  },
  {
    "text": "actually worrying about them completely which is nice all right so let's",
    "start": "2131520",
    "end": "2137839"
  },
  {
    "text": "see all right uh right so we need to actually modify the message now so we will go to the page",
    "start": "2137839",
    "end": "2145520"
  },
  {
    "text": "index and I'm going to just get rid of the marketing junk down there I'm going",
    "start": "2145520",
    "end": "2150960"
  },
  {
    "text": "to duplicate this and we will say",
    "start": "2150960",
    "end": "2157760"
  },
  {
    "text": "instead of Phoenix here uh we will say current current user.name",
    "start": "2157760",
    "end": "2165520"
  },
  {
    "text": "and here it'll be guest and we can just do some if logic",
    "start": "2165520",
    "end": "2173079"
  },
  {
    "text": "here so we'll say if current user",
    "start": "2173079",
    "end": "2179119"
  },
  {
    "text": "do uh else I need to get",
    "start": "2179119",
    "end": "2185200"
  },
  {
    "text": "my my my I used to have uh nice Vim plugins",
    "start": "2185200",
    "end": "2191560"
  },
  {
    "text": "for putting brackets around things nicely all right so there there we have",
    "start": "2191560",
    "end": "2198359"
  },
  {
    "text": "it so it's it's actually reading the value out of the out of the uh the cookie fetching the user from the database and presenting that to the to",
    "start": "2198359",
    "end": "2205200"
  },
  {
    "text": "the view itself so we are logged in and we are ready to look at the next uh",
    "start": "2205200",
    "end": "2213440"
  },
  {
    "text": "thing so I'm going to clean this",
    "start": "2215000",
    "end": "2220760"
  },
  {
    "text": "up oops FD and I am going",
    "start": "2220760",
    "end": "2228280"
  },
  {
    "text": "to actually I'm just going to check out this next Branch",
    "start": "2230800",
    "end": "2237079"
  },
  {
    "text": "here okay",
    "start": "2237079",
    "end": "2241079"
  },
  {
    "text": "cool all right so the next thing we're going to talk about is channels um so channels are essentially a way to Route",
    "start": "2248119",
    "end": "2256119"
  },
  {
    "text": "uh messages uh with event by events to different handlers uh throughout your application via this thing called topics",
    "start": "2256119",
    "end": "2264160"
  },
  {
    "text": "um so um by default Phoenix ships with support for web sockets and long polling",
    "start": "2264160",
    "end": "2271440"
  },
  {
    "text": "um if you need that uh if you're still you know serving browsers that are",
    "start": "2271440",
    "end": "2277680"
  },
  {
    "text": "ancient um uh but so with the channels basically Works uh around this websocket",
    "start": "2277680",
    "end": "2284440"
  },
  {
    "text": "uh connection persisted connection um and it has this Pub sub abstraction that allows uh different processes within the",
    "start": "2284440",
    "end": "2292040"
  },
  {
    "text": "earling VM to subscribe to topics and be notified when when things uh happen so",
    "start": "2292040",
    "end": "2298560"
  },
  {
    "text": "um they're very similar to controllers um except for the fact that they are",
    "start": "2298560",
    "end": "2303960"
  },
  {
    "text": "bidirectional so uh and instead of doing West response you get a connection and",
    "start": "2303960",
    "end": "2309839"
  },
  {
    "text": "you just maintain that connection via the socket um we also ship with a",
    "start": "2309839",
    "end": "2314920"
  },
  {
    "text": "phoenix. JS which is a JavaScript client for dealing with building uh browser stuff uh which we'll see in a moment um",
    "start": "2314920",
    "end": "2322640"
  },
  {
    "text": "so topics are pretty simple um you have a sub or a main topic like rooms and",
    "start": "2322640",
    "end": "2328079"
  },
  {
    "text": "then you can have a a subtopic and they're just uh split by colons here um and then Channel routing is",
    "start": "2328079",
    "end": "2335119"
  },
  {
    "text": "pretty simple um you have a a user socket module and you can just plug this in here we just say Channel rooms uh",
    "start": "2335119",
    "end": "2343640"
  },
  {
    "text": "colon star so this ASX is a wild card so it says Hey anything else after this is",
    "start": "2343640",
    "end": "2349200"
  },
  {
    "text": "going to be some subtopic and we can match on it and then finally we say hey we want to Route any of messages that",
    "start": "2349200",
    "end": "2355440"
  },
  {
    "text": "match this pattern go to the room channel so the client API is uh of",
    "start": "2355440",
    "end": "2362359"
  },
  {
    "text": "course uh in this case is going to be JavaScript and um there is a warning there",
    "start": "2362359",
    "end": "2367880"
  },
  {
    "text": "just in case um this is es6 Javascript makes it a little bit more friendly to",
    "start": "2367880",
    "end": "2373400"
  },
  {
    "text": "work with um essentially all you have to do is import uh the socket module from Phoenix uh from the package um we can",
    "start": "2373400",
    "end": "2381800"
  },
  {
    "text": "instantiate a new socket um giving it the path that we want to connect to and",
    "start": "2381800",
    "end": "2387319"
  },
  {
    "text": "passing in some kind of parameters like a a token that we can use to authenticate the user we connect on the",
    "start": "2387319",
    "end": "2394319"
  },
  {
    "text": "socket um we create a new channel saying we want to join the room Lobby Channel",
    "start": "2394319",
    "end": "2400480"
  },
  {
    "text": "um when we actually join the channel we can pattern match kind of uh on on the",
    "start": "2400480",
    "end": "2406359"
  },
  {
    "text": "values that are returned from the server so if we try to join a channel that",
    "start": "2406359",
    "end": "2412359"
  },
  {
    "text": "we're not allowed to because we don't have authorization um it'll return back an error and we can match on that and um",
    "start": "2412359",
    "end": "2420200"
  },
  {
    "text": "do something different so you can also set up uh different call backs for uh on",
    "start": "2420200",
    "end": "2425480"
  },
  {
    "text": "close on error and and Etc um you can push messages to the",
    "start": "2425480",
    "end": "2430640"
  },
  {
    "text": "server very easily just uh give it an event so channel. push give it an event",
    "start": "2430640",
    "end": "2436319"
  },
  {
    "text": "uh name as the first argument the second argument is an object that can be serialized into",
    "start": "2436319",
    "end": "2441960"
  },
  {
    "text": "Json um and finally we have uh message",
    "start": "2441960",
    "end": "2447000"
  },
  {
    "text": "handlers for or event handlers rather um so in the case here we get uh event of",
    "start": "2447000",
    "end": "2452520"
  },
  {
    "text": "new message we're going to get that message and then we can you know do something with the Dom or",
    "start": "2452520",
    "end": "2458079"
  },
  {
    "text": "whatever um all right so let's uh write some more",
    "start": "2458079",
    "end": "2463760"
  },
  {
    "text": "code so um I've only got like 20 minutes so let's see how much I can get",
    "start": "2463760",
    "end": "2470839"
  },
  {
    "text": "done okay",
    "start": "2470839",
    "end": "2474319"
  },
  {
    "text": "so basically what I've done is I've got uh a room and message model uh that we",
    "start": "2476319",
    "end": "2483839"
  },
  {
    "text": "can play with already pre-built um let me just restart start the server because I think uh needs to load all the new code",
    "start": "2483839",
    "end": "2492119"
  },
  {
    "text": "there we go cool okay so here I'm still signed in as",
    "start": "2492119",
    "end": "2499800"
  },
  {
    "text": "before um but I've got this thing here uh this link to this rooms and I've got",
    "start": "2499800",
    "end": "2505400"
  },
  {
    "text": "a list of rooms and I've got this Lobby here so um I've joined the lobby uh but",
    "start": "2505400",
    "end": "2512160"
  },
  {
    "text": "of course there's no UI that's kind of totally working here I can send messages",
    "start": "2512160",
    "end": "2517760"
  },
  {
    "text": "um and I'm not on the Wi-Fi so you can't see my my avatar unfortunately um but uh",
    "start": "2517760",
    "end": "2524319"
  },
  {
    "text": "so this is partially working um but there's a couple problems when I refresh uh I don't have that me that message",
    "start": "2524319",
    "end": "2530920"
  },
  {
    "text": "that I just wrote it's not there on the screen so um we need to fix that um and",
    "start": "2530920",
    "end": "2537480"
  },
  {
    "text": "we also don't seem to have our uh our roster list there so um let's go ahead",
    "start": "2537480",
    "end": "2542839"
  },
  {
    "text": "and see how we can fix that stuff up um so in our web directory we have a",
    "start": "2542839",
    "end": "2549000"
  },
  {
    "text": "channels directory and we have a room channel that I've created here so just",
    "start": "2549000",
    "end": "2555359"
  },
  {
    "text": "to go over this code real quick um it's a lot to kind of type and explain at the same time so I wanted to pre-populate",
    "start": "2555359",
    "end": "2562280"
  },
  {
    "text": "something that currently sort of kind of works and then we can fix some stuff up as uh as an exercise together so um when",
    "start": "2562280",
    "end": "2568839"
  },
  {
    "text": "you create a channel there's essentially two main functions that you're going to going to create one is join uh and join",
    "start": "2568839",
    "end": "2576359"
  },
  {
    "text": "takes the actual um the actual topic and",
    "start": "2576359",
    "end": "2581480"
  },
  {
    "text": "in this case you can see um we're actually doing some kind of binary concatenation operation which which",
    "start": "2581480",
    "end": "2587920"
  },
  {
    "text": "works in pattern matching uh in this case um only when it's actually on the",
    "start": "2587920",
    "end": "2593200"
  },
  {
    "text": "last bit of it it'll work um so we pattern match on this uh binary of",
    "start": "2593200",
    "end": "2599880"
  },
  {
    "text": "called Rooms colon and then we say that anything else after that is going to be the name of the of the room itself um",
    "start": "2599880",
    "end": "2607559"
  },
  {
    "text": "there's also a payload that can be passed in um but most of the time it's",
    "start": "2607559",
    "end": "2613400"
  },
  {
    "text": "just like an empty object so we can just ignore it for here um the socket is",
    "start": "2613400",
    "end": "2618800"
  },
  {
    "text": "going to be the actual um state of this channel process so uh",
    "start": "2618800",
    "end": "2628200"
  },
  {
    "text": "every time we want to update our state we need to essentially return some value",
    "start": "2628200",
    "end": "2634480"
  },
  {
    "text": "that has that updated State uh and this this is kind of the way that llang works where with processes it just recursing",
    "start": "2634480",
    "end": "2640960"
  },
  {
    "text": "over its own State and listening for messages so um so we have the basically",
    "start": "2640960",
    "end": "2648680"
  },
  {
    "text": "fetching the room from the room name and we use uh similar function as we did before with the with the plug.on but",
    "start": "2648680",
    "end": "2655720"
  },
  {
    "text": "this is phoenix. Socket um and so we say assign the socket um this room uh with",
    "start": "2655720",
    "end": "2662839"
  },
  {
    "text": "the value of the room itself uh and then for handling new me mesages uh this",
    "start": "2662839",
    "end": "2668119"
  },
  {
    "text": "handle in will uh work off of when you push a message from the browser to the",
    "start": "2668119",
    "end": "2675839"
  },
  {
    "text": "server so when you push it to the server it's going to hit the uh call back the handle in call back uh and it's going to",
    "start": "2675839",
    "end": "2682800"
  },
  {
    "text": "have some sort of U event type on here and we're saying uh newcore message and",
    "start": "2682800",
    "end": "2688599"
  },
  {
    "text": "we're going to pattern match the body out of it and we are going to be past our socket which is our state and here",
    "start": "2688599",
    "end": "2696400"
  },
  {
    "text": "we're just using the assigns uh key in there to get out the user and the room um and we go ahead and we insert",
    "start": "2696400",
    "end": "2705200"
  },
  {
    "text": "the message and when we get that back it's going to be a uh it's going to be an",
    "start": "2705200",
    "end": "2710680"
  },
  {
    "text": "Elixir struct it's going to be a a message struct and so since we want to simplify what we're actually sending",
    "start": "2710680",
    "end": "2716640"
  },
  {
    "text": "back to the browser um we just run it through this two map function that I've created down here which simply just",
    "start": "2716640",
    "end": "2723200"
  },
  {
    "text": "transforms uh the uh message itself and and like the user that's related to it",
    "start": "2723200",
    "end": "2730119"
  },
  {
    "text": "uh into a nice uh usable structure so uh",
    "start": "2730119",
    "end": "2735640"
  },
  {
    "text": "from there we actually use this uh broadcast function and we say broadcast",
    "start": "2735640",
    "end": "2740720"
  },
  {
    "text": "on the socket uh the new message event and the message itself and this is",
    "start": "2740720",
    "end": "2746800"
  },
  {
    "text": "actually any anyone who's also signed into the same channel anyone who's joined the same channel is going to get",
    "start": "2746800",
    "end": "2753359"
  },
  {
    "text": "the new message that's uh being sent from the user so um and then finally",
    "start": "2753359",
    "end": "2759400"
  },
  {
    "text": "down here we just say that hey we also want to reply back to to tell the client",
    "start": "2759400",
    "end": "2765119"
  },
  {
    "text": "that yep we got the message it was received all it's all good um and so uh",
    "start": "2765119",
    "end": "2770839"
  },
  {
    "text": "the client can know um you can build uh uis that kind of know that oh this",
    "start": "2770839",
    "end": "2778200"
  },
  {
    "text": "message should be sent but if in case we get an error back maybe we can remove it from the UI or whatnot so if you return",
    "start": "2778200",
    "end": "2784280"
  },
  {
    "text": "an error here okay so so let's get into solving these other problems um so the",
    "start": "2784280",
    "end": "2791200"
  },
  {
    "text": "first problem is is that when I refresh this page since I created a message I should see the history here so uh what",
    "start": "2791200",
    "end": "2797680"
  },
  {
    "text": "we need to do for that is in our join function we want to uh be",
    "start": "2797680",
    "end": "2803960"
  },
  {
    "text": "able to send a me send a message of all the history to the browser once we've",
    "start": "2803960",
    "end": "2810720"
  },
  {
    "text": "joined and in order to do that we need to actually do it after the fact after we've actually joined the channel",
    "start": "2810720",
    "end": "2817680"
  },
  {
    "text": "um and so the way to do that is we can actually send ourself a message and so",
    "start": "2817680",
    "end": "2823359"
  },
  {
    "text": "it can be any we can name it anything but we're just I'm just going to call it after",
    "start": "2823359",
    "end": "2828400"
  },
  {
    "text": "join and the way this works in llang and elixir obviously by",
    "start": "2828400",
    "end": "2833440"
  },
  {
    "text": "extension is there's a call back function called handle info um and handle info is going to",
    "start": "2833440",
    "end": "2839359"
  },
  {
    "text": "receive the message so this is after join and our uh our our current state",
    "start": "2839359",
    "end": "2847680"
  },
  {
    "text": "which again in in this module is is the phoenix. socket structure and so in here with handle",
    "start": "2847680",
    "end": "2854640"
  },
  {
    "text": "info we need to uh the response of this",
    "start": "2854640",
    "end": "2859680"
  },
  {
    "text": "or the return value uh needs to be no reply and socket um because we're we're",
    "start": "2859680",
    "end": "2866160"
  },
  {
    "text": "not actually replying to anything we're sending a message to oursel and so that's where it's going to to hit there",
    "start": "2866160",
    "end": "2872720"
  },
  {
    "text": "um okay so like the other one we're going to copy and paste that from there",
    "start": "2872720",
    "end": "2877920"
  },
  {
    "text": "because we need the user and the room and so what we need to do is we",
    "start": "2877920",
    "end": "2883440"
  },
  {
    "text": "need to get all of the history uh all the messages from the room um so we can",
    "start": "2883440",
    "end": "2889319"
  },
  {
    "text": "take the room and we can pipe it into uh room. with",
    "start": "2889319",
    "end": "2896559"
  },
  {
    "text": "messages and what that's going to return us is a room struct which has the",
    "start": "2896559",
    "end": "2902720"
  },
  {
    "text": "messages pre-loaded in there as an array or a list actually um and so what we can",
    "start": "2902720",
    "end": "2909640"
  },
  {
    "text": "do is we can use map. getet um as I mentioned before all structs and elixir",
    "start": "2909640",
    "end": "2915359"
  },
  {
    "text": "are just simply a map so we can use the map API on structs uh and so we can just",
    "start": "2915359",
    "end": "2921800"
  },
  {
    "text": "say hey we want to get the messages key and then with that we're going to get a",
    "start": "2921800",
    "end": "2927599"
  },
  {
    "text": "a list of messages back and so we can use the enum module and say en num. map",
    "start": "2927599",
    "end": "2934760"
  },
  {
    "text": "and we want to call all to map on it like that and this is the uh",
    "start": "2934760",
    "end": "2942920"
  },
  {
    "text": "kind of shorthand capture Syntax for describing a an anonymous function uh or",
    "start": "2942920",
    "end": "2948599"
  },
  {
    "text": "a or a function to call in this case and we're we're explicitly saying it is two",
    "start": "2948599",
    "end": "2953880"
  },
  {
    "text": "map with one argument so the aity of one um okay so we have our uh messages",
    "start": "2953880",
    "end": "2964880"
  },
  {
    "text": "and now we just need to push those down to the uh to the socket and we're using",
    "start": "2964880",
    "end": "2970880"
  },
  {
    "text": "push here instead of broadcast because the difference is is that broadcast sends it to everyone who's connected and",
    "start": "2970880",
    "end": "2976680"
  },
  {
    "text": "in this case we just want to send it to the user that just connected so uh we're",
    "start": "2976680",
    "end": "2981799"
  },
  {
    "text": "going to say message history and we need to encode this into",
    "start": "2981799",
    "end": "2989640"
  },
  {
    "text": "a structure that can actually be encoded into Json it can't just be um a it",
    "start": "2989640",
    "end": "2995880"
  },
  {
    "text": "doesn't take lists so we can say messages messages um and then it will essentially",
    "start": "2995880",
    "end": "3004119"
  },
  {
    "text": "work so if I refresh now we see our history being populated to the to the",
    "start": "3004119",
    "end": "3010280"
  },
  {
    "text": "browser uh which is great um but now we need to fix our roster so Phoenix",
    "start": "3010280",
    "end": "3017200"
  },
  {
    "text": "actually comes with um a really really uh interesting and cool thing called",
    "start": "3017200",
    "end": "3024079"
  },
  {
    "text": "presents um and it was it it it came out of uh a a history of receiving many many",
    "start": "3024079",
    "end": "3031839"
  },
  {
    "text": "questions about how to implement something like presence uh where you see a list of users that are currently",
    "start": "3031839",
    "end": "3038240"
  },
  {
    "text": "online um and uh it came out of many people asking questions about how to",
    "start": "3038240",
    "end": "3044559"
  },
  {
    "text": "solve this problem and at first it seemed pretty trivial um but after doing",
    "start": "3044559",
    "end": "3050119"
  },
  {
    "text": "some research uh and especially within Phoenix Phoenix uh and when you're",
    "start": "3050119",
    "end": "3055559"
  },
  {
    "text": "building Elixir and and earling applications specifically uh you're thinking about building distributed",
    "start": "3055559",
    "end": "3062680"
  },
  {
    "text": "systems you need to think about how your application is going to work when you",
    "start": "3062680",
    "end": "3067839"
  },
  {
    "text": "have more than one computer and more than one computer is actually connected to each other over the network so with",
    "start": "3067839",
    "end": "3075920"
  },
  {
    "text": "Phoenix you simply can spin up a cluster of machines have them all connect to",
    "start": "3075920",
    "end": "3081799"
  },
  {
    "text": "each other and anyone can connect via channels to any one of the of those",
    "start": "3081799",
    "end": "3087640"
  },
  {
    "text": "machines uh if you have a load balancer in front um then when one person sends a",
    "start": "3087640",
    "end": "3094280"
  },
  {
    "text": "message it automatically will publish that message across the entire cluster and everyone who is on a channel uh on",
    "start": "3094280",
    "end": "3101760"
  },
  {
    "text": "that same channel will now receive that message and so everything is completely uh location transparent it just works uh",
    "start": "3101760",
    "end": "3108680"
  },
  {
    "text": "because earling so we have earling to think for that um okay so we're going to",
    "start": "3108680",
    "end": "3115760"
  },
  {
    "text": "use uh presents real quick um I'm going to show you how this works so we are",
    "start": "3115760",
    "end": "3121040"
  },
  {
    "text": "going to push a new message down the socket um the event is going to be",
    "start": "3121040",
    "end": "3126640"
  },
  {
    "text": "called presence State and we're just going to use",
    "start": "3126640",
    "end": "3132880"
  },
  {
    "text": "presents. list on the socket and what this does is it says okay hey I want to I want to go to the presents server",
    "start": "3132880",
    "end": "3139720"
  },
  {
    "text": "that's running um and it's when I say server it's it's not like a separate",
    "start": "3139720",
    "end": "3144760"
  },
  {
    "text": "machine outside but uh in llang every process is essentially kind of like a",
    "start": "3144760",
    "end": "3150160"
  },
  {
    "text": "server or a service um so uh llang invented micro Services by the way um",
    "start": "3150160",
    "end": "3156440"
  },
  {
    "text": "they're called processes um so essentially what this does is it says hey give me a list of",
    "start": "3156440",
    "end": "3163160"
  },
  {
    "text": "all the processes that are um joined to this topic that belongs to the socket so",
    "start": "3163160",
    "end": "3170559"
  },
  {
    "text": "the the socket itself has a key called topic which matches in this case rooms",
    "start": "3170559",
    "end": "3176119"
  },
  {
    "text": "col Lobby um so it says hey give me all the the processes that are in there uh",
    "start": "3176119",
    "end": "3181200"
  },
  {
    "text": "and we can push down the state of all the people that are that are in there so",
    "start": "3181200",
    "end": "3186839"
  },
  {
    "text": "and this currently still won't work because we're not actually tracking our our prog our process so we can use pres.",
    "start": "3186839",
    "end": "3195720"
  },
  {
    "text": "track we pass in the socket um we can give it some kind of",
    "start": "3195720",
    "end": "3202119"
  },
  {
    "text": "key uh to key on which will just be the user ID and then we can pass in some",
    "start": "3202119",
    "end": "3208119"
  },
  {
    "text": "metadata that we want to track along with that so in this case I've created this function called um user meta and it",
    "start": "3208119",
    "end": "3215720"
  },
  {
    "text": "essentially just returns a map of the username and the Avatar image URL um",
    "start": "3215720",
    "end": "3221640"
  },
  {
    "text": "which unfortunately is not seeming to work because I don't have internet so if we",
    "start": "3221640",
    "end": "3228079"
  },
  {
    "text": "refresh now our roster is working um and if I open up a",
    "start": "3228079",
    "end": "3237000"
  },
  {
    "text": "incognito window I can go over here and I can",
    "start": "3237000",
    "end": "3243200"
  },
  {
    "text": "register as uh Brian",
    "start": "3243200",
    "end": "3248240"
  },
  {
    "text": "Hunter and I don't know his email address off the top of my head so I'll",
    "start": "3248240",
    "end": "3253680"
  },
  {
    "text": "just make one up all right so he's",
    "start": "3254000",
    "end": "3260720"
  },
  {
    "text": "registered and when I click this room here the lobby you can see immediately",
    "start": "3260720",
    "end": "3265839"
  },
  {
    "text": "both browsers ERS uh are now showing that they're connected um Brian can send me a",
    "start": "3265839",
    "end": "3274400"
  },
  {
    "text": "message um it's immediately over there and hey",
    "start": "3274400",
    "end": "3281960"
  },
  {
    "text": "Bri bam so that is channels in a nutshell um",
    "start": "3281960",
    "end": "3288119"
  },
  {
    "text": "there's a lot more to learn about it um there's a lot well actually there's not really a whole lot more to learn about",
    "start": "3288119",
    "end": "3294160"
  },
  {
    "text": "it um it's a really pretty simple feature it's a really small API um but there's a lot of interesting things you",
    "start": "3294160",
    "end": "3299839"
  },
  {
    "text": "could build with it um in fact the present uh stuff in in particular uh you",
    "start": "3299839",
    "end": "3306319"
  },
  {
    "text": "could you could Implement service Discovery very easily with it um and if anyone wants to talk more about that I",
    "start": "3306319",
    "end": "3313079"
  },
  {
    "text": "definitely would love to uh chat about it afterwards um so I've got about five",
    "start": "3313079",
    "end": "3318119"
  },
  {
    "text": "more minutes to wrap some stuff up and then I'll be up for some questions um but if you do want to learn a little bit",
    "start": "3318119",
    "end": "3323760"
  },
  {
    "text": "more about Phoenix channels and present specifically um I gave a talk last year",
    "start": "3323760",
    "end": "3329119"
  },
  {
    "text": "at uh NDC Oslo um on that subject uh explicitly so it's it was a longer talk",
    "start": "3329119",
    "end": "3335960"
  },
  {
    "text": "that uh really uncovered all of the details about presence and how it works and uh about uh the the details of U",
    "start": "3335960",
    "end": "3344280"
  },
  {
    "text": "distributed U systems as well um okay so just real quick I want to show you the",
    "start": "3344280",
    "end": "3350039"
  },
  {
    "text": "outside view um is pretty cool um",
    "start": "3350039",
    "end": "3355200"
  },
  {
    "text": "because you essentially you can with channels you can Implement a client in any",
    "start": "3355200",
    "end": "3361440"
  },
  {
    "text": "language you want um it could be another server for all it doesn't really matter",
    "start": "3361440",
    "end": "3366960"
  },
  {
    "text": "um you could have server to server communication over websockets or some other protocol that you want to do um",
    "start": "3366960",
    "end": "3372119"
  },
  {
    "text": "channels is actually the transport is uh you can build your own transport and it doesn't have to be over websockets but",
    "start": "3372119",
    "end": "3378280"
  },
  {
    "text": "it could be over just some uh straight TCP kind of thing as well um but the",
    "start": "3378280",
    "end": "3383359"
  },
  {
    "text": "cool thing is is that you can have any number of clients connecting um when you need to scale up you just add a server",
    "start": "3383359",
    "end": "3389119"
  },
  {
    "text": "boom um now you can have browsers connecting as well and everyone will",
    "start": "3389119",
    "end": "3394760"
  },
  {
    "text": "automatically get all the messages um from one node to the next um so it",
    "start": "3394760",
    "end": "3400039"
  },
  {
    "text": "doesn't matter um all of these are independent and isolated as well um uh",
    "start": "3400039",
    "end": "3405520"
  },
  {
    "text": "but the inside view is actually even more interesting um so we have the client on the left and the server on the",
    "start": "3405520",
    "end": "3411160"
  },
  {
    "text": "on the right hand side of the line um so when a from the JavaScript side you say",
    "start": "3411160",
    "end": "3416880"
  },
  {
    "text": "socket. connect it creates a process an earling process um these are not",
    "start": "3416880",
    "end": "3422839"
  },
  {
    "text": "operating system processes they're very lightweight uh green threads if you want to call it that um and they're very",
    "start": "3422839",
    "end": "3431119"
  },
  {
    "text": "inexpensive very lightweight hardly any memory um creates a process uh that's",
    "start": "3431119",
    "end": "3438319"
  },
  {
    "text": "basically the socket process and then when you want to um when you do that",
    "start": "3438319",
    "end": "3444079"
  },
  {
    "text": "it's going to register itself with the pub subsystem um and then when when you say channel.",
    "start": "3444079",
    "end": "3451200"
  },
  {
    "text": "jooin some Channel there um it's going to go through that socket and the socket",
    "start": "3451200",
    "end": "3456520"
  },
  {
    "text": "is going to spawn a channel process um and that channel process is then then",
    "start": "3456520",
    "end": "3462960"
  },
  {
    "text": "going to end up registering itself with the uh Pub Subs system saying hey this is the this is my PID my process ID and",
    "start": "3462960",
    "end": "3471200"
  },
  {
    "text": "this is the topic that I'm joining um in the pub subsystem keeps track of that um",
    "start": "3471200",
    "end": "3476640"
  },
  {
    "text": "if you join another one it does the same thing spawns a new channel process uh registers all that kind of stuff for",
    "start": "3476640",
    "end": "3483200"
  },
  {
    "text": "each one it does does this so each and in each individual channel for every",
    "start": "3483200",
    "end": "3488680"
  },
  {
    "text": "single user that's on the system is completely isolated they're all running concurrently and isolated so crash in",
    "start": "3488680",
    "end": "3496520"
  },
  {
    "text": "one process doesn't affect any of the others um and you have a very uh nice uh",
    "start": "3496520",
    "end": "3503839"
  },
  {
    "text": "robust system this way so so in the case that uh another process actually",
    "start": "3503839",
    "end": "3509760"
  },
  {
    "text": "broadcasts the message out so this green one over here um it just sends a message",
    "start": "3509760",
    "end": "3515079"
  },
  {
    "text": "it broadcasts it using the uh pubsub API uh that message goes to the pubsub system and it says oh hey uh these these",
    "start": "3515079",
    "end": "3523480"
  },
  {
    "text": "processes are subscribed to that topic so I'm going to send them a message and so it sends the message to the channel",
    "start": "3523480",
    "end": "3529839"
  },
  {
    "text": "goes through the code that is going to be executed for that event um the return values end up",
    "start": "3529839",
    "end": "3536960"
  },
  {
    "text": "getting sent down to the socket layer and then obviously sent down to the client um",
    "start": "3536960",
    "end": "3543440"
  },
  {
    "text": "there so that is about it um we actually have some really nice guides as well",
    "start": "3543440",
    "end": "3548640"
  },
  {
    "text": "that are written up there's a lot of kind of stuff that's changing within Phoenix right now um we're working on",
    "start": "3548640",
    "end": "3553720"
  },
  {
    "text": "1.3 and a lot of things are going to change um specifically around the data modeling stuff we used to actually ship",
    "start": "3553720",
    "end": "3560079"
  },
  {
    "text": "with um a lot of tools to help you generate data models and stuff and we're",
    "start": "3560079",
    "end": "3565119"
  },
  {
    "text": "actually going away with that because we don't want to tie ourselves too tightly uh with that that structure um but uh",
    "start": "3565119",
    "end": "3573599"
  },
  {
    "text": "you can check out the guides for more information and uh with that thank [Applause]",
    "start": "3573599",
    "end": "3581920"
  },
  {
    "text": "you and I think I have time for like one",
    "start": "3581920",
    "end": "3586558"
  },
  {
    "text": "question yes sir Phoenix am am I on the Phoenix core team",
    "start": "3588880",
    "end": "3594760"
  },
  {
    "text": "yes yes",
    "start": "3594760",
    "end": "3598039"
  },
  {
    "text": "that uh presence is a was uh a part of",
    "start": "3605599",
    "end": "3610880"
  },
  {
    "text": "1.2 so yeah it came out with Phoenix",
    "start": "3610880",
    "end": "3616318"
  },
  {
    "text": "1.2 all right awesome thank you",
    "start": "3618119",
    "end": "3623480"
  }
]