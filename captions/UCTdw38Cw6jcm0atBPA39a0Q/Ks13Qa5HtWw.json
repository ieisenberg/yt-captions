[
  {
    "text": "thank you for joining me on this session did you have a good time in ntc",
    "start": "3439",
    "end": "9120"
  },
  {
    "text": "it was a great week um the sunshine outside is beautiful so i think i'm the",
    "start": "9120",
    "end": "15759"
  },
  {
    "text": "only person that is preventing you from going outside right now so let's get started",
    "start": "15759",
    "end": "22960"
  },
  {
    "text": "in this session i'm going to talk about dapper which is a wonderful technology for",
    "start": "22960",
    "end": "28000"
  },
  {
    "text": "building distributed applications and i'm going to show you a lot of code",
    "start": "28000",
    "end": "33600"
  },
  {
    "text": "and we're going to see different building blocks that dapper has",
    "start": "33600",
    "end": "39120"
  },
  {
    "text": "and not all of them because of time constraints",
    "start": "39120",
    "end": "44480"
  },
  {
    "text": "however we're gonna have a great time analyzing the code that i have here for",
    "start": "44480",
    "end": "50559"
  },
  {
    "text": "this session so first let's talk about some of the challenges that we face when building",
    "start": "50559",
    "end": "56879"
  },
  {
    "text": "distributed applications the thing about distributed applications is that it's very hard to make them right",
    "start": "56879",
    "end": "64559"
  },
  {
    "text": "because you need to manage a lot of things there's a lot of moving parts",
    "start": "64559",
    "end": "69840"
  },
  {
    "text": "and it's quite difficult to uh to architect those kind of solutions",
    "start": "69840",
    "end": "77040"
  },
  {
    "text": "right so for instance we have a more complex architecture because you don't only have",
    "start": "77040",
    "end": "83119"
  },
  {
    "text": "like you know a monolith or maybe you have uh",
    "start": "83119",
    "end": "88799"
  },
  {
    "text": "an isolated application that you have to manage actually in distributed applications you have a lot of components and a lot of services that",
    "start": "88799",
    "end": "95520"
  },
  {
    "text": "are in different servers maybe clouds as well and of",
    "start": "95520",
    "end": "100960"
  },
  {
    "text": "course the operation is hard right and because of that we end up focusing",
    "start": "100960",
    "end": "108720"
  },
  {
    "text": "more on the infrastructure right we as developers end up managing those",
    "start": "108720",
    "end": "114880"
  },
  {
    "text": "servers we end up learning some management tools and those",
    "start": "114880",
    "end": "120799"
  },
  {
    "text": "things and of course the tools them themselves are not great right",
    "start": "120799",
    "end": "127439"
  },
  {
    "text": "and talking about the wrong times well there's uh a lot of runtimes that we can use to",
    "start": "127439",
    "end": "134319"
  },
  {
    "text": "build this kind of solutions however most of the time we can find that those",
    "start": "134319",
    "end": "139440"
  },
  {
    "text": "are limited in language support and some of them are limited in portability as",
    "start": "139440",
    "end": "145440"
  },
  {
    "text": "well so the upper is this portable event-driven runtime for building distributed applications across cloud",
    "start": "145440",
    "end": "152000"
  },
  {
    "text": "and edge and it's an open source project that is",
    "start": "152000",
    "end": "157120"
  },
  {
    "text": "stemmed from microsoft however nowadays it's part of the cloud",
    "start": "157120",
    "end": "162720"
  },
  {
    "text": "native cloud cloud native computing foundation and the official site is dapper dot io",
    "start": "162720",
    "end": "170000"
  },
  {
    "text": "actually that's the place where we can find the uh complete documentation in",
    "start": "170000",
    "end": "176080"
  },
  {
    "text": "the tools and uh all the things related to this technology right so",
    "start": "176080",
    "end": "182720"
  },
  {
    "text": "what means uh that dapper is part of the cloud native computing foundation it",
    "start": "182720",
    "end": "188480"
  },
  {
    "text": "means that it's not part of microsoft anymore the community is um",
    "start": "188480",
    "end": "194800"
  },
  {
    "text": "collaborating for creating a lot of building blocks and you know",
    "start": "194800",
    "end": "200560"
  },
  {
    "text": "creating more components for this uh uh for this platform okay so the upper what what in the world",
    "start": "200560",
    "end": "208400"
  },
  {
    "text": "is the upper doppler is a runtime okay and it's a set of building blocks",
    "start": "208400",
    "end": "214000"
  },
  {
    "text": "and it's a set of uh tools that we can use to build distributed applications okay",
    "start": "214000",
    "end": "222080"
  },
  {
    "text": "the thing about dapper is that it's like a buffet you can choose those components that you",
    "start": "222080",
    "end": "228319"
  },
  {
    "text": "can use in your own applications you don't have to use everything in dapper okay so in this",
    "start": "228319",
    "end": "235280"
  },
  {
    "text": "session i'm going to show you some of the building blocks but of course there are more and",
    "start": "235280",
    "end": "240799"
  },
  {
    "text": "maybe uh there are some other building blocks that are being built right now",
    "start": "240799",
    "end": "247439"
  },
  {
    "text": "and of course as an open source project is um built by the community and",
    "start": "247439",
    "end": "254799"
  },
  {
    "text": "it's platform agnostic this means that you can build doppler applications on your windows or",
    "start": "254799",
    "end": "261519"
  },
  {
    "text": "linux or mac os uh operating system and this is cool because uh of course",
    "start": "261519",
    "end": "268560"
  },
  {
    "text": "i'm going to show you a lot of dot-net code i'm going to use c-sharp and net 6",
    "start": "268560",
    "end": "275440"
  },
  {
    "text": "and actually i built an entire application with microservices to show you those",
    "start": "275440",
    "end": "282479"
  },
  {
    "text": "building blocks that i'm going to use in this session but let's talk about the entire building",
    "start": "282479",
    "end": "288960"
  },
  {
    "text": "blocks that we can find in dapper nowadays let's start with this service to service communication building block",
    "start": "288960",
    "end": "295680"
  },
  {
    "text": "so if you use this building block it'll allow you to",
    "start": "295680",
    "end": "301199"
  },
  {
    "text": "communicate between services the thing about that is that think about it you need to communicate",
    "start": "301199",
    "end": "307440"
  },
  {
    "text": "between service a and service b okay you have those two services",
    "start": "307440",
    "end": "312800"
  },
  {
    "text": "how can service say no where in the world is service b",
    "start": "312800",
    "end": "319520"
  },
  {
    "text": "okay it needs to know the address it needs to know the port",
    "start": "319520",
    "end": "325120"
  },
  {
    "text": "and what happens if service b has many replicas okay there are a lot of",
    "start": "325120",
    "end": "332320"
  },
  {
    "text": "service bs instances what happens then so you need something like hashicorp",
    "start": "332320",
    "end": "338400"
  },
  {
    "text": "console as a discovery platform service discovery platform to know",
    "start": "338400",
    "end": "344960"
  },
  {
    "text": "where in the world is that service that you want to communicate with okay so that's hard that's hard to solve",
    "start": "344960",
    "end": "353120"
  },
  {
    "text": "you can also use something like maybe a service mesh",
    "start": "353120",
    "end": "358319"
  },
  {
    "text": "okay service meshes have the service discoverability functionality",
    "start": "358319",
    "end": "365600"
  },
  {
    "text": "in their uh in their platforms okay so with dapper we can use the service to",
    "start": "365600",
    "end": "372800"
  },
  {
    "text": "service communication building block to solve that problem to solve that",
    "start": "372800",
    "end": "378160"
  },
  {
    "text": "challenge we can use it and doctor will know exactly where in the world is the",
    "start": "378160",
    "end": "384400"
  },
  {
    "text": "service that you want to communicate with okay another one is the state management",
    "start": "384400",
    "end": "390080"
  },
  {
    "text": "in distributed applications this this is very common and actually in any kind of application right where you need",
    "start": "390080",
    "end": "397520"
  },
  {
    "text": "to store something like a key value pair okay so with this building block it's very",
    "start": "397520",
    "end": "403680"
  },
  {
    "text": "easy to just invoke its functionality and it'll",
    "start": "403680",
    "end": "409199"
  },
  {
    "text": "store the data for you okay in the configure component i'm going to show",
    "start": "409199",
    "end": "415520"
  },
  {
    "text": "you uh that in a minute okay so the other one is pop soap this is a",
    "start": "415520",
    "end": "422080"
  },
  {
    "text": "very common uh design pattern that we use in distributed applications to communicate",
    "start": "422080",
    "end": "427960"
  },
  {
    "text": "asynchronously between services because it's not a great idea to communicate between service a and",
    "start": "427960",
    "end": "434639"
  },
  {
    "text": "service be in a direct manner right because you're gonna have a temporal coupling between those services",
    "start": "434639",
    "end": "442400"
  },
  {
    "text": "and for scalability uh it's not a great idea to do that okay so",
    "start": "442400",
    "end": "448800"
  },
  {
    "text": "most of the time we strive for communicating between services in a",
    "start": "448800",
    "end": "454880"
  },
  {
    "text": "asynchronous way and precisely this building block allows us to do that",
    "start": "454880",
    "end": "462000"
  },
  {
    "text": "there's another one uh the bindings building block which allows us to create something like",
    "start": "462000",
    "end": "470479"
  },
  {
    "text": "uh the azure functions bindings have you ever used azure functions you have some classes that react",
    "start": "470479",
    "end": "478479"
  },
  {
    "text": "uh uh about some of the um",
    "start": "478479",
    "end": "484560"
  },
  {
    "text": "events that happen in some platforms okay so this is very similar to those azure",
    "start": "484960",
    "end": "491520"
  },
  {
    "text": "functions bindings technologies and components that we can use in that",
    "start": "491520",
    "end": "497199"
  },
  {
    "text": "platform but this this allows you to create",
    "start": "497199",
    "end": "502319"
  },
  {
    "text": "applications that can react to incoming events and you can also communicate to external systems",
    "start": "502319",
    "end": "509840"
  },
  {
    "text": "maybe for interoperability or maybe because you need to execute some kind of weft hook",
    "start": "509840",
    "end": "516719"
  },
  {
    "text": "outside your application or something like that and this building block allows you to do that",
    "start": "516719",
    "end": "523839"
  },
  {
    "text": "there's also an actor's uh building block it seems like we have so many different",
    "start": "523839",
    "end": "531440"
  },
  {
    "text": "options nowadays for building applications with the actors model",
    "start": "531440",
    "end": "537440"
  },
  {
    "text": "and this is another one this comes from the service fabric team i don't know if you",
    "start": "537440",
    "end": "544080"
  },
  {
    "text": "have used service fabric but service fabric itself has an actual model",
    "start": "544080",
    "end": "550240"
  },
  {
    "text": "and the same team that built the service fabric actor model",
    "start": "550240",
    "end": "555279"
  },
  {
    "text": "built this building block of course there's another more",
    "start": "555279",
    "end": "560839"
  },
  {
    "text": "common uh actor model framework such as aka.net hacca.net right",
    "start": "560839",
    "end": "568480"
  },
  {
    "text": "and there's another one named orleans however dapper includes its own archer model",
    "start": "568480",
    "end": "575279"
  },
  {
    "text": "building block for building this kind of applications that allows you to create",
    "start": "575279",
    "end": "580320"
  },
  {
    "text": "isolated processes that are running in an isolated fashion",
    "start": "580320",
    "end": "586800"
  },
  {
    "text": "in a single threaded way and you can communicate between actors by using messages basically that's the",
    "start": "586800",
    "end": "594000"
  },
  {
    "text": "actual model and there's another one for observability observability and monitoring are",
    "start": "594000",
    "end": "601600"
  },
  {
    "text": "two of the tasks that we have to perform",
    "start": "601600",
    "end": "606880"
  },
  {
    "text": "on a distributed application um in order to to to make that make it right because",
    "start": "606880",
    "end": "613760"
  },
  {
    "text": "if you don't have observability if you don't know what's going on with your services or your applications you're",
    "start": "613760",
    "end": "620560"
  },
  {
    "text": "going to have a serious problem uh managing those components and",
    "start": "620560",
    "end": "626320"
  },
  {
    "text": "applications and actually dapper includes this building block",
    "start": "626320",
    "end": "631760"
  },
  {
    "text": "and finally the well actually there's another one uh secrets management",
    "start": "631760",
    "end": "638480"
  },
  {
    "text": "and configuration okay secrets management allows you to",
    "start": "638480",
    "end": "643519"
  },
  {
    "text": "communicate to a secrets platform such as azure keyboard or hashicorp volt",
    "start": "643519",
    "end": "651760"
  },
  {
    "text": "or what have you okay because you don't want to store your secrets on",
    "start": "651760",
    "end": "657920"
  },
  {
    "text": "your app settings.json file you know it's not a good idea right",
    "start": "657920",
    "end": "664959"
  },
  {
    "text": "and um this building block allows you to communicate to uh to a specialized secrets platform for",
    "start": "664959",
    "end": "673120"
  },
  {
    "text": "storing your secrets certificates um and um any kind of key that you need to",
    "start": "673120",
    "end": "680720"
  },
  {
    "text": "to to store in a in a secure way and finally the configuration building",
    "start": "680720",
    "end": "686399"
  },
  {
    "text": "block that allows you to store and manage configuration values for your own applications okay so this",
    "start": "686399",
    "end": "694000"
  },
  {
    "text": "is dapper and here we can see just one small example about those",
    "start": "694000",
    "end": "701440"
  },
  {
    "text": "building blocks you can think about building blocks such as abstract classes okay building blocks",
    "start": "701440",
    "end": "708800"
  },
  {
    "text": "are just like abstract classes and components are like concrete",
    "start": "708800",
    "end": "715120"
  },
  {
    "text": "implementations of those classes okay so if we for that matter have those building blocks there are",
    "start": "715120",
    "end": "722639"
  },
  {
    "text": "many concrete implementations of each building block for many different",
    "start": "722639",
    "end": "728079"
  },
  {
    "text": "vendors and platforms and technologies okay for instance if we can see here in the",
    "start": "728079",
    "end": "734079"
  },
  {
    "text": "screen we can see the state management let's say this example okay estate management if you use the abstraction",
    "start": "734079",
    "end": "742399"
  },
  {
    "text": "in other words if you use the state management building block",
    "start": "742399",
    "end": "747600"
  },
  {
    "text": "then you can use so many different concrete implementations of that building block",
    "start": "747600",
    "end": "754240"
  },
  {
    "text": "okay so that's why i said that building blocks are just like abstract classes",
    "start": "754240",
    "end": "760000"
  },
  {
    "text": "and components are like concrete implementations of that abstract class",
    "start": "760000",
    "end": "765120"
  },
  {
    "text": "so for example you can use azure cosmos eb you can use redis you can use firebase",
    "start": "765120",
    "end": "771839"
  },
  {
    "text": "cassandra or whatnot okay and this is just one small example",
    "start": "771839",
    "end": "778720"
  },
  {
    "text": "and let's talk about the high level architecture of dapper",
    "start": "778720",
    "end": "784399"
  },
  {
    "text": "so we have the building blocks and dapper uh through its runtime",
    "start": "784399",
    "end": "791680"
  },
  {
    "text": "will expose those building blocks functionalities and",
    "start": "791680",
    "end": "796959"
  },
  {
    "text": "um logic okay so as far as your",
    "start": "796959",
    "end": "802160"
  },
  {
    "text": "uh programming language supports creating requests",
    "start": "802160",
    "end": "807600"
  },
  {
    "text": "through http or grpc you're good to go okay so you can use any kind of platform in",
    "start": "807600",
    "end": "816079"
  },
  {
    "text": "any kind of programming language as soon as you are able to create those requests",
    "start": "816079",
    "end": "823199"
  },
  {
    "text": "and of course talking about applications uh there are many sdks",
    "start": "823199",
    "end": "830399"
  },
  {
    "text": "supported by the community and actually the code that i'm going to show you is the net sdk",
    "start": "830399",
    "end": "838320"
  },
  {
    "text": "for dapper and but as i said if your programming language supports uh creating those kind",
    "start": "838320",
    "end": "845360"
  },
  {
    "text": "of requests you're good to go okay and what about the infrastructure okay",
    "start": "845360",
    "end": "852000"
  },
  {
    "text": "so we can run dapper in any kind of cloud you can even run",
    "start": "852000",
    "end": "858320"
  },
  {
    "text": "dapper on premises why why do you want to run dapper in an",
    "start": "858320",
    "end": "865600"
  },
  {
    "text": "on-premises application for modernization purposes it's a very common scenario nowadays actually i'm",
    "start": "865600",
    "end": "872880"
  },
  {
    "text": "doing that in some of the projects that i'm i'm involved with",
    "start": "872880",
    "end": "878399"
  },
  {
    "text": "we're running dapper as an isolated sidecar on premises for modernizing that all",
    "start": "878399",
    "end": "886079"
  },
  {
    "text": "application that we have okay of course you can use azure you can use",
    "start": "886079",
    "end": "891920"
  },
  {
    "text": "google cloud platform or whatnot okay and i just mentioned",
    "start": "891920",
    "end": "898399"
  },
  {
    "text": "a side car the side car is a it's a design pattern",
    "start": "898399",
    "end": "904399"
  },
  {
    "text": "for distributed applications uh and it allows you to",
    "start": "904399",
    "end": "910399"
  },
  {
    "text": "include some functionalities that your main application and logic doesn't have",
    "start": "910399",
    "end": "916800"
  },
  {
    "text": "for instance you can think about the sidecar as the sidecar in the motorcycle in some old",
    "start": "916800",
    "end": "924320"
  },
  {
    "text": "motorcycles i i think it's a common uh artifact nowadays uh the side car but",
    "start": "924320",
    "end": "931920"
  },
  {
    "text": "you know you can see you can you can see a motorcycle with a side car nowadays in the streets however it's not that common",
    "start": "931920",
    "end": "940240"
  },
  {
    "text": "what does the sidecar does for the motorcycle it allows you it",
    "start": "940240",
    "end": "946240"
  },
  {
    "text": "allows the motorcycle to carry some extra weight maybe an extra person or pet or package",
    "start": "946240",
    "end": "955120"
  },
  {
    "text": "okay however the main logic the main functionality",
    "start": "955120",
    "end": "961360"
  },
  {
    "text": "is the motorcycle okay so that's the um that's how you can think about that",
    "start": "961360",
    "end": "968480"
  },
  {
    "text": "design pattern it's extending it's um",
    "start": "968480",
    "end": "975040"
  },
  {
    "text": "complementing the main logic of the application that's exactly what dapper",
    "start": "975040",
    "end": "980800"
  },
  {
    "text": "does for your application okay so as soon as you are able to",
    "start": "980800",
    "end": "987600"
  },
  {
    "text": "communicate to the sidecar by using http or grpc you will be able to extend the",
    "start": "987600",
    "end": "993519"
  },
  {
    "text": "logic of your applications okay that's what's happening in your solutions when you use dapper",
    "start": "993519",
    "end": "1001600"
  },
  {
    "text": "okay so of course you communicate to the dapper",
    "start": "1001600",
    "end": "1007440"
  },
  {
    "text": "sidecar by using maybe the sdk of your",
    "start": "1007440",
    "end": "1012720"
  },
  {
    "text": "programming language that you want to use and then the sidecar will be able to",
    "start": "1012720",
    "end": "1018240"
  },
  {
    "text": "expose those extra functionalities that your application",
    "start": "1018240",
    "end": "1025839"
  },
  {
    "text": "doesn't have okay cool so",
    "start": "1026480",
    "end": "1031839"
  },
  {
    "text": "let's talk now about the doppler anatomy you can run dapper in the cloud you can",
    "start": "1031839",
    "end": "1039360"
  },
  {
    "text": "run dapper in your own machine actually this is the this is the first uh",
    "start": "1039360",
    "end": "1047120"
  },
  {
    "text": "hosting option that we have self-hosted this option allows you to run the upper",
    "start": "1047600",
    "end": "1053360"
  },
  {
    "text": "side car as a as a process exactly that's what i'm going to do in this session okay",
    "start": "1053360",
    "end": "1059360"
  },
  {
    "text": "and you can also um execute doppler in a kubernetes cluster in this",
    "start": "1059360",
    "end": "1066799"
  },
  {
    "text": "case dapper executes as a container in the same pod",
    "start": "1066799",
    "end": "1072240"
  },
  {
    "text": "as your application okay so if you have",
    "start": "1072240",
    "end": "1077280"
  },
  {
    "text": "let's say pi pods in your cluster then you'll have",
    "start": "1077280",
    "end": "1083039"
  },
  {
    "text": "five uh extra dopper containers injected by the vapor runtime for you",
    "start": "1083039",
    "end": "1090160"
  },
  {
    "text": "in your cluster okay automatically and there's a third option",
    "start": "1090160",
    "end": "1096640"
  },
  {
    "text": "for serverless applications which is the use of azure container apps",
    "start": "1096640",
    "end": "1102640"
  },
  {
    "text": "which is a new service in azure it's an it's in a preview state right",
    "start": "1102640",
    "end": "1108720"
  },
  {
    "text": "now however this is a very cool technology because it will allow you to",
    "start": "1108720",
    "end": "1114559"
  },
  {
    "text": "provision and deploy your applications your microservices in a serverless way",
    "start": "1114559",
    "end": "1119760"
  },
  {
    "text": "i don't know if you used a service fabric mesh in the past",
    "start": "1119760",
    "end": "1125360"
  },
  {
    "text": "service fabric mesh was a wonderful wonderful technology and idea and i think this is the evolution of",
    "start": "1125360",
    "end": "1133039"
  },
  {
    "text": "service fabric mesh okay because you only you only declare",
    "start": "1133039",
    "end": "1140320"
  },
  {
    "text": "what you want in your application in a java file and azure container apps will take care of",
    "start": "1140320",
    "end": "1147039"
  },
  {
    "text": "the rest so i think that's pretty cool and okay so dapper is",
    "start": "1147039",
    "end": "1155520"
  },
  {
    "text": "this technology that consists consists of many different components and tools",
    "start": "1155520",
    "end": "1161919"
  },
  {
    "text": "the first one is the cli that i'm going to show you right now the cli will allow",
    "start": "1161919",
    "end": "1167679"
  },
  {
    "text": "you to manage the doppler application send it upper runtime we have the set of",
    "start": "1167679",
    "end": "1173039"
  },
  {
    "text": "apis that the upper runtime is exposing the runtime itself",
    "start": "1173039",
    "end": "1179200"
  },
  {
    "text": "the hosting options that i just mentioned such as serverless kubernetes",
    "start": "1179200",
    "end": "1185679"
  },
  {
    "text": "self-hosted the doppler sentry is a component that",
    "start": "1185679",
    "end": "1190880"
  },
  {
    "text": "allows you to communicate between services and it will take care of the encryption when communicating between",
    "start": "1190880",
    "end": "1198559"
  },
  {
    "text": "those two services the doppler placement component will take care of the",
    "start": "1198559",
    "end": "1206240"
  },
  {
    "text": "virtual actors that you might have if you're using the doppler actors building block",
    "start": "1206240",
    "end": "1213760"
  },
  {
    "text": "the injector will take care of injecting those containers in your pots when",
    "start": "1213760",
    "end": "1220559"
  },
  {
    "text": "running dapper in kubernetes and finally the operator will take care of updating",
    "start": "1220559",
    "end": "1226799"
  },
  {
    "text": "dapper okay so this is dapper as you can hear there are so many tools and options and",
    "start": "1226799",
    "end": "1232799"
  },
  {
    "text": "sdks and functionalities let's go to the code",
    "start": "1232799",
    "end": "1238400"
  },
  {
    "text": "let's get started with this scenario which is wisdom pet medicine",
    "start": "1238400",
    "end": "1244320"
  },
  {
    "text": "this is a fictitious company from linkedin learning okay",
    "start": "1244320",
    "end": "1250400"
  },
  {
    "text": "because i recorded a course about dapper for linkedin learning that's why i'm using this fictitious",
    "start": "1250400",
    "end": "1256320"
  },
  {
    "text": "company which is uh this pet grooming shop and pet hospital okay",
    "start": "1256320",
    "end": "1265120"
  },
  {
    "text": "so wisdom pet medicine is this company that",
    "start": "1265120",
    "end": "1270559"
  },
  {
    "text": "well you can take your pet and leave it in the clinic or hospital uh to",
    "start": "1270559",
    "end": "1277919"
  },
  {
    "text": "for some procedure or whatnot okay so that's the scenario that i'm going to",
    "start": "1277919",
    "end": "1284320"
  },
  {
    "text": "use wisdom pet medicine strives to blend the best in traditional and alternative",
    "start": "1284320",
    "end": "1290000"
  },
  {
    "text": "medicine in the diagnosis and treatment of companion animals okay so i created",
    "start": "1290000",
    "end": "1297360"
  },
  {
    "text": "this scenario that has five or six i don't remember exactly",
    "start": "1297360",
    "end": "1304480"
  },
  {
    "text": "microservices the main microservices are",
    "start": "1304480",
    "end": "1309520"
  },
  {
    "text": "pet rescue hospital and rescue query",
    "start": "1309520",
    "end": "1315440"
  },
  {
    "text": "so we're going to use dapper to implement this solution okay",
    "start": "1315440",
    "end": "1322799"
  },
  {
    "text": "uh another thing about this is that we're going to",
    "start": "1322799",
    "end": "1328240"
  },
  {
    "text": "implement the pub sub building block to communicate between the pet",
    "start": "1328240",
    "end": "1333679"
  },
  {
    "text": "microservice and the rescue and hospital microservices but as you can see in the",
    "start": "1333679",
    "end": "1339919"
  },
  {
    "text": "screen in the diagram i'm not going to communicate directly from pet to",
    "start": "1339919",
    "end": "1345760"
  },
  {
    "text": "hospital or pet and rescue i'm going to communicate to the side cars okay the side cars",
    "start": "1345760",
    "end": "1354960"
  },
  {
    "text": "have the logic and the functionality and all the magic",
    "start": "1354960",
    "end": "1360080"
  },
  {
    "text": "that dapper includes okay so that's where what i'm going to do and",
    "start": "1360080",
    "end": "1366480"
  },
  {
    "text": "then we're going to create a new micro service named pet aggregator in this",
    "start": "1366480",
    "end": "1371520"
  },
  {
    "text": "case we're going to use the service to service communication building block for communicating between",
    "start": "1371520",
    "end": "1379039"
  },
  {
    "text": "the pet aggregator rescue query pet and hospital",
    "start": "1379039",
    "end": "1384559"
  },
  {
    "text": "then we'll use the state management building block for storing the",
    "start": "1384559",
    "end": "1389760"
  },
  {
    "text": "last result of the of those queries okay we're going to implement input bindings",
    "start": "1389760",
    "end": "1396880"
  },
  {
    "text": "and output bindings for creating new pads by using azure",
    "start": "1396880",
    "end": "1403280"
  },
  {
    "text": "storage cues and the output binding will be used",
    "start": "1403280",
    "end": "1408480"
  },
  {
    "text": "to communicate to azure storage queues as well for",
    "start": "1408480",
    "end": "1414799"
  },
  {
    "text": "for interoperability purposes and finally we're going to use the",
    "start": "1414799",
    "end": "1421039"
  },
  {
    "text": "secrets management building block okay so let's get started",
    "start": "1421039",
    "end": "1426799"
  },
  {
    "text": "um here let me close this",
    "start": "1426799",
    "end": "1431840"
  },
  {
    "text": "so let me show you the entire application of course this is a public repository that you can you can download and you",
    "start": "1434559",
    "end": "1442080"
  },
  {
    "text": "can extend so i have those",
    "start": "1442080",
    "end": "1447120"
  },
  {
    "text": "different microservices running right now so",
    "start": "1447120",
    "end": "1452799"
  },
  {
    "text": "on the other hand i have the windows terminal because",
    "start": "1452799",
    "end": "1459840"
  },
  {
    "text": "i already installed dapper in this machine for uh to expedite this process of course",
    "start": "1460720",
    "end": "1467679"
  },
  {
    "text": "okay so if i open up this tab for instance and i say",
    "start": "1467679",
    "end": "1475679"
  },
  {
    "text": "dapper you can see that i have the doppler cli okay",
    "start": "1476880",
    "end": "1482960"
  },
  {
    "text": "how did i install the doppler cli well if you go to dapper.io",
    "start": "1482960",
    "end": "1488880"
  },
  {
    "text": "and then the get started button",
    "start": "1488880",
    "end": "1493679"
  },
  {
    "text": "right here then you will be able to find the script",
    "start": "1494080",
    "end": "1500960"
  },
  {
    "text": "to install dapper on your machine okay so i already done that",
    "start": "1500960",
    "end": "1506960"
  },
  {
    "text": "here in the windows option of course i i'm using windows 11 that's why",
    "start": "1506960",
    "end": "1513039"
  },
  {
    "text": "this is the command that i executed okay so when you execute",
    "start": "1513039",
    "end": "1519520"
  },
  {
    "text": "that you're gonna have the doppler cli that's the first step",
    "start": "1519520",
    "end": "1524720"
  },
  {
    "text": "to to uh to get started with dapper so this",
    "start": "1524720",
    "end": "1530640"
  },
  {
    "text": "is the upper cli okay as you can see there are many options that we can use",
    "start": "1530640",
    "end": "1537200"
  },
  {
    "text": "such as invoke such as list and there are many commands of course i'm not going to show",
    "start": "1537520",
    "end": "1544559"
  },
  {
    "text": "you any every single command available what i'm going to do now is to execute",
    "start": "1544559",
    "end": "1552480"
  },
  {
    "text": "this pad microservice so i'm going to execute the following",
    "start": "1552480",
    "end": "1558799"
  },
  {
    "text": "command dapper okay and then i'm going to execute the wrong",
    "start": "1558799",
    "end": "1564720"
  },
  {
    "text": "command why because this is the way that you're telling dapper hey",
    "start": "1564720",
    "end": "1570400"
  },
  {
    "text": "dapper please execute the following command and",
    "start": "1570400",
    "end": "1576000"
  },
  {
    "text": "create an instance of the sidecar okay and make sure",
    "start": "1576000",
    "end": "1581279"
  },
  {
    "text": "that my application and the sidecar can communicate between",
    "start": "1581279",
    "end": "1586640"
  },
  {
    "text": "each other so that's what i'm going to do now so let's say",
    "start": "1586640",
    "end": "1592240"
  },
  {
    "text": "this application will be the pet microservice and then i have to tell the",
    "start": "1592240",
    "end": "1599200"
  },
  {
    "text": "upper heydapper uh the http port that i want you to use",
    "start": "1599200",
    "end": "1605919"
  },
  {
    "text": "is 50 000 or 60 000 or what have you okay so this is this is the port",
    "start": "1605919",
    "end": "1613200"
  },
  {
    "text": "for the http protocol that dapper is going to expose to the",
    "start": "1613200",
    "end": "1619120"
  },
  {
    "text": "rest of the world okay and i have to say okay",
    "start": "1619120",
    "end": "1625279"
  },
  {
    "text": "then you're going to use this other port that my application",
    "start": "1625279",
    "end": "1631679"
  },
  {
    "text": "is listening in okay so for instance i know that this",
    "start": "1631679",
    "end": "1637120"
  },
  {
    "text": "application will run on port 5000 make sense",
    "start": "1637120",
    "end": "1642880"
  },
  {
    "text": "so after you do that you separate with two dashes the",
    "start": "1642880",
    "end": "1648559"
  },
  {
    "text": "uh concrete command that dapper will run for you for instance uh dotnet run",
    "start": "1648559",
    "end": "1656559"
  },
  {
    "text": "and then urls and then the port that you want to use in this case",
    "start": "1656559",
    "end": "1663440"
  },
  {
    "text": "is 5 000 just like that okay so if i",
    "start": "1663440",
    "end": "1668960"
  },
  {
    "text": "execute this command dapper the doppler cli will",
    "start": "1668960",
    "end": "1674000"
  },
  {
    "text": "create an instance of the sidecar and then it will execute the command",
    "start": "1674000",
    "end": "1680000"
  },
  {
    "text": "that i passed after those two dashes okay so right now the",
    "start": "1680000",
    "end": "1686240"
  },
  {
    "text": "microservice is running unsurprisingly okay",
    "start": "1686240",
    "end": "1691279"
  },
  {
    "text": "however now my microservice can run and can",
    "start": "1691279",
    "end": "1696480"
  },
  {
    "text": "communicate to the sidecar why you may ask so",
    "start": "1696480",
    "end": "1702159"
  },
  {
    "text": "of course this is very easy to see a li there are so few commands that you can",
    "start": "1702159",
    "end": "1709440"
  },
  {
    "text": "use however here i want to show you the following code",
    "start": "1709440",
    "end": "1717600"
  },
  {
    "text": "so can you read that all of you that okay cool thank you",
    "start": "1720880",
    "end": "1727120"
  },
  {
    "text": "so i'm using the sdk4.net",
    "start": "1727120",
    "end": "1732240"
  },
  {
    "text": "okay i'm not going to use uh http client or ihttp factory for",
    "start": "1732240",
    "end": "1739919"
  },
  {
    "text": "creating requests manually for me it doesn't make sense to use",
    "start": "1739919",
    "end": "1746880"
  },
  {
    "text": "dapper in that way okay in a real world application maybe you're you want to use the sdk",
    "start": "1746880",
    "end": "1753440"
  },
  {
    "text": "okay because otherwise you're gonna have",
    "start": "1753440",
    "end": "1759120"
  },
  {
    "text": "you have to create those requests manually and um i'm not doing that here i included this",
    "start": "1759120",
    "end": "1767120"
  },
  {
    "text": "nuget package reference this is the reference",
    "start": "1767120",
    "end": "1772720"
  },
  {
    "text": "uh to the doppler sdk okay so this is the thing that i did and also",
    "start": "1772720",
    "end": "1780080"
  },
  {
    "text": "you have to configure dapper in your middleware",
    "start": "1780080",
    "end": "1785440"
  },
  {
    "text": "okay of course i'm using asp.net core as my platform for building microservices okay",
    "start": "1785440",
    "end": "1793520"
  },
  {
    "text": "so that's why you need to configure your middleware and this is the line of code that",
    "start": "1793520",
    "end": "1799440"
  },
  {
    "text": "allows you to do that line of code number 15 in this case okay",
    "start": "1799440",
    "end": "1804720"
  },
  {
    "text": "so that's why if i run uh this command",
    "start": "1804720",
    "end": "1811440"
  },
  {
    "text": "i will be able to communicate from my application to the sidecar okay",
    "start": "1811440",
    "end": "1818000"
  },
  {
    "text": "okay cool so let's get started by doing the following",
    "start": "1818000",
    "end": "1825279"
  },
  {
    "text": "those microservices have their own",
    "start": "1825279",
    "end": "1830320"
  },
  {
    "text": "databases okay so let me delete this and this",
    "start": "1830320",
    "end": "1835520"
  },
  {
    "text": "and this other two as well i already have those databases because i",
    "start": "1835520",
    "end": "1841520"
  },
  {
    "text": "was doing some tests however i'm going to run",
    "start": "1841520",
    "end": "1848159"
  },
  {
    "text": "all of those micro services and let them create the databases for me",
    "start": "1848159",
    "end": "1853919"
  },
  {
    "text": "and i already have this um script as you can see so you don't watch",
    "start": "1853919",
    "end": "1859600"
  },
  {
    "text": "me you don't you don't need to watch me typing all the time those commands okay so",
    "start": "1859600",
    "end": "1865200"
  },
  {
    "text": "run okay run and then run",
    "start": "1865200",
    "end": "1872880"
  },
  {
    "text": "so pad rescue hospital rescue query okay oh",
    "start": "1872880",
    "end": "1878640"
  },
  {
    "text": "wrong i'm not in the correct place or am i",
    "start": "1878640",
    "end": "1883760"
  },
  {
    "text": "it looks like i'm not in correct place so um",
    "start": "1883760",
    "end": "1889200"
  },
  {
    "text": "let's see the upper wrong",
    "start": "1889200",
    "end": "1894399"
  },
  {
    "text": "anyways rescue query is not needed right now that's why i don't have this script so i'm running pet",
    "start": "1894399",
    "end": "1901600"
  },
  {
    "text": "rescue and hospital okay what i'm doing now is this",
    "start": "1901600",
    "end": "1907600"
  },
  {
    "text": "let me go back here i'm doing this okay",
    "start": "1907600",
    "end": "1913360"
  },
  {
    "text": "so i already created an instance of the sidecar for",
    "start": "1913360",
    "end": "1918640"
  },
  {
    "text": "each micro service that's why i have those scripts right so you don't have to watch me typing all",
    "start": "1918640",
    "end": "1925120"
  },
  {
    "text": "the time and what happens what what's the message broker that's the first question that",
    "start": "1925120",
    "end": "1932000"
  },
  {
    "text": "comes to my mind right now what's going on here because okay let's see the code if we can find",
    "start": "1932000",
    "end": "1938960"
  },
  {
    "text": "anything here so in the",
    "start": "1938960",
    "end": "1944240"
  },
  {
    "text": "pad application service class i have number 38",
    "start": "1944240",
    "end": "1950000"
  },
  {
    "text": "as you can see the upper client publish event",
    "start": "1950000",
    "end": "1955919"
  },
  {
    "text": "this is the way that you use the sdk you use those methods that",
    "start": "1955919",
    "end": "1962960"
  },
  {
    "text": "are common between all of those building blocks okay",
    "start": "1962960",
    "end": "1968640"
  },
  {
    "text": "so for instance i know i will use redis right now and i'm going to show you why",
    "start": "1968640",
    "end": "1974720"
  },
  {
    "text": "okay however you don't have to worry about redis in this application that's the magic and",
    "start": "1974720",
    "end": "1982240"
  },
  {
    "text": "beauty of dapper because you're only programming against a common interface",
    "start": "1982240",
    "end": "1988480"
  },
  {
    "text": "okay so that's why i just say okay doppler client dot publish event async",
    "start": "1988480",
    "end": "1996159"
  },
  {
    "text": "and this is going to use the configure component",
    "start": "1996159",
    "end": "2001440"
  },
  {
    "text": "that dapper detective okay so why let me go back here to the windows",
    "start": "2001440",
    "end": "2008399"
  },
  {
    "text": "terminal and i'm going to show you some uh important thing",
    "start": "2008399",
    "end": "2015440"
  },
  {
    "text": "after you installed upper you will have",
    "start": "2015440",
    "end": "2020799"
  },
  {
    "text": "some containers running on your machine okay",
    "start": "2020799",
    "end": "2029519"
  },
  {
    "text": "you don't need docker however if you have docker dapper will use docker okay",
    "start": "2029519",
    "end": "2036720"
  },
  {
    "text": "so when i installed dapper some of those docker images were",
    "start": "2036720",
    "end": "2042960"
  },
  {
    "text": "downloaded for me and now they're running as containers",
    "start": "2042960",
    "end": "2048079"
  },
  {
    "text": "okay so dopper will use those containers automatically why",
    "start": "2048079",
    "end": "2055919"
  },
  {
    "text": "okay so next topic that i want to show you right now after you installed upper you will have",
    "start": "2055919",
    "end": "2064480"
  },
  {
    "text": "this dot dapper folder uh dapper folder in your home directory",
    "start": "2064480",
    "end": "2072839"
  },
  {
    "text": "okay and here you're going to find the default components that dapper",
    "start": "2072839",
    "end": "2080240"
  },
  {
    "text": "uses so if i go here to the components folder i will find those two files pops up and",
    "start": "2080240",
    "end": "2089919"
  },
  {
    "text": "state store so those two files are the configuration",
    "start": "2089919",
    "end": "2095919"
  },
  {
    "text": "for the pops up building block and the estate",
    "start": "2095919",
    "end": "2101119"
  },
  {
    "text": "management building block okay so if i show you the pops up.yaml file you can",
    "start": "2101119",
    "end": "2107599"
  },
  {
    "text": "see that this will use redis which is localhost",
    "start": "2107599",
    "end": "2113359"
  },
  {
    "text": "63 79 that's precisely red is running on my docker container okay",
    "start": "2113359",
    "end": "2119920"
  },
  {
    "text": "that's the default behavior of dapper okay so in other words",
    "start": "2119920",
    "end": "2126160"
  },
  {
    "text": "when i send a message redis will take care of those messages",
    "start": "2126160",
    "end": "2132400"
  },
  {
    "text": "for me okay so this is running i'm going to show you right now",
    "start": "2132400",
    "end": "2140480"
  },
  {
    "text": "this swagger webpage that comes from the pet api",
    "start": "2140480",
    "end": "2146000"
  },
  {
    "text": "so of course those micro services are running and now i have the databases",
    "start": "2146000",
    "end": "2152480"
  },
  {
    "text": "created for me okay however i don't have any kind of data",
    "start": "2152480",
    "end": "2157599"
  },
  {
    "text": "and that's expected okay so for instance i don't have any kind of",
    "start": "2157599",
    "end": "2162640"
  },
  {
    "text": "pets right now okay so if i go back here and i click on try",
    "start": "2162640",
    "end": "2169359"
  },
  {
    "text": "out and then the name of the pet and then the brief",
    "start": "2169359",
    "end": "2175920"
  },
  {
    "text": "say my dog is a beagle a tree color beagle",
    "start": "2176960",
    "end": "2184240"
  },
  {
    "text": "10 years old and dog okay",
    "start": "2184240",
    "end": "2189599"
  },
  {
    "text": "if i execute this well unsurprisingly this will return 200",
    "start": "2189599",
    "end": "2195359"
  },
  {
    "text": "and i can go back here to show you that i have the doc record right here okay so",
    "start": "2195359",
    "end": "2202240"
  },
  {
    "text": "nothing fancy this is just any framework core running and now i want to show you",
    "start": "2202240",
    "end": "2209200"
  },
  {
    "text": "what happens with this because i want to communicate",
    "start": "2209200",
    "end": "2214400"
  },
  {
    "text": "to the hospital micro service and rescue micro service to the hospital micro service",
    "start": "2214400",
    "end": "2220800"
  },
  {
    "text": "when there's a pet that you need to transfer to the hospital okay",
    "start": "2220800",
    "end": "2226560"
  },
  {
    "text": "and i'm going to communicate to the rescue microservice when i want to flag",
    "start": "2226560",
    "end": "2232880"
  },
  {
    "text": "a pet for adoption okay let's say that the company rescued this little dog or",
    "start": "2232880",
    "end": "2238960"
  },
  {
    "text": "this little puppy in the street so they're going to create the pet",
    "start": "2238960",
    "end": "2244400"
  },
  {
    "text": "record in the pet microservice and then they're going to flag that pet for adoption okay",
    "start": "2244400",
    "end": "2251040"
  },
  {
    "text": "so if i go back here let's flag the pad for adoption and then",
    "start": "2251040",
    "end": "2256720"
  },
  {
    "text": "try it out and then execute",
    "start": "2256720",
    "end": "2261760"
  },
  {
    "text": "okay so again unsurprisingly this will run and now i",
    "start": "2261760",
    "end": "2269520"
  },
  {
    "text": "have the data of that dog here in the rescued",
    "start": "2269520",
    "end": "2275760"
  },
  {
    "text": "animals metadata okay why because when you're using microservices",
    "start": "2275760",
    "end": "2282320"
  },
  {
    "text": "it's okay to repeat data okay you have to strive for",
    "start": "2282320",
    "end": "2289040"
  },
  {
    "text": "isolation and autonomy of those microservices so if you don't if you have a single",
    "start": "2289040",
    "end": "2295359"
  },
  {
    "text": "database for all your micro services then maybe you will have a",
    "start": "2295359",
    "end": "2301520"
  },
  {
    "text": "a tough time managing that okay so that's why those micro services have",
    "start": "2301520",
    "end": "2306880"
  },
  {
    "text": "uh their own database okay and we can talk about uh eventual",
    "start": "2306880",
    "end": "2312640"
  },
  {
    "text": "consistency and we can talk about why this is happening but that's a that's the topic related to the micro",
    "start": "2312640",
    "end": "2319280"
  },
  {
    "text": "service uh topic uh and and and principles",
    "start": "2319280",
    "end": "2324320"
  },
  {
    "text": "and i'm not going to do that in this session okay okay cool so what happened",
    "start": "2324320",
    "end": "2330960"
  },
  {
    "text": "well the rescue microservice was able to receive the",
    "start": "2330960",
    "end": "2336720"
  },
  {
    "text": "message because if we see here the",
    "start": "2336720",
    "end": "2342400"
  },
  {
    "text": "let's say adopter application microservices blah blah blah this is not it this is the",
    "start": "2342400",
    "end": "2348640"
  },
  {
    "text": "other uh this one",
    "start": "2348640",
    "end": "2354000"
  },
  {
    "text": "let me find it uh no this is not it let me show you",
    "start": "2354000",
    "end": "2361359"
  },
  {
    "text": "right here okay line 50 i'm sorry 25 okay",
    "start": "2361359",
    "end": "2368240"
  },
  {
    "text": "so this is the way again i'm using the sdk okay this is the way that you",
    "start": "2368240",
    "end": "2373520"
  },
  {
    "text": "decorate your methods when you want those methods to be",
    "start": "2373520",
    "end": "2379520"
  },
  {
    "text": "the publishers of those events that are happening by using the",
    "start": "2379520",
    "end": "2385920"
  },
  {
    "text": "pop-stop building block just one line of code okay 25",
    "start": "2385920",
    "end": "2391200"
  },
  {
    "text": "i'm just telling hey i'm subscribed to the pops up component",
    "start": "2391200",
    "end": "2398480"
  },
  {
    "text": "okay and i want to listen to messages",
    "start": "2398480",
    "end": "2403839"
  },
  {
    "text": "in the pet flat for adoption topic okay that's what's happening here with a",
    "start": "2403839",
    "end": "2408880"
  },
  {
    "text": "single line of code okay so again if i go back here i want to",
    "start": "2408880",
    "end": "2415119"
  },
  {
    "text": "show you this oh",
    "start": "2415119",
    "end": "2420960"
  },
  {
    "text": "sorry this okay this is the name",
    "start": "2420960",
    "end": "2427200"
  },
  {
    "text": "that i'm technically using in my code to identify",
    "start": "2427200",
    "end": "2433520"
  },
  {
    "text": "which component i want to use in the code okay so that's why in my string it says pop",
    "start": "2433520",
    "end": "2440800"
  },
  {
    "text": "soft the name could be batman or spiderman okay it doesn't matter",
    "start": "2440800",
    "end": "2446240"
  },
  {
    "text": "what matters is that you use the technical name that you are using in your concrete components okay",
    "start": "2446240",
    "end": "2453760"
  },
  {
    "text": "so another interesting thing here is that if i execute redis commander",
    "start": "2453760",
    "end": "2460960"
  },
  {
    "text": "and i navigate to this place you can see that i have those topics",
    "start": "2460960",
    "end": "2466480"
  },
  {
    "text": "already created for me okay so that's another thing that dapper does",
    "start": "2466480",
    "end": "2472880"
  },
  {
    "text": "for me i didn't create those topics okay pet flak for adoption and pet transfer to",
    "start": "2472880",
    "end": "2479200"
  },
  {
    "text": "hospital were created for me okay those so that's interesting",
    "start": "2479200",
    "end": "2484560"
  },
  {
    "text": "cool so let me go back here",
    "start": "2484560",
    "end": "2490160"
  },
  {
    "text": "because i want to in addition to",
    "start": "2490160",
    "end": "2496319"
  },
  {
    "text": "flagging the pet for adoption i want to transfer the pet",
    "start": "2496319",
    "end": "2502319"
  },
  {
    "text": "to the hospital okay so try it out",
    "start": "2502319",
    "end": "2507760"
  },
  {
    "text": "execute and again i won't show you the code because it's the same i'm using",
    "start": "2507760",
    "end": "2513760"
  },
  {
    "text": "publisher band and i'm i'm using the topic attribute okay so again i want to show you the data",
    "start": "2513760",
    "end": "2523040"
  },
  {
    "text": "because in this fictitious company this is important that's why i'm going to show you the patient's",
    "start": "2523040",
    "end": "2529680"
  },
  {
    "text": "metadata okay yeah so i have johnny the beagle dog record right here okay cool so now",
    "start": "2529680",
    "end": "2538800"
  },
  {
    "text": "let's move on what happens when you wanna communicate",
    "start": "2538800",
    "end": "2544880"
  },
  {
    "text": "between services that's the first building block that i described actually the service to",
    "start": "2544880",
    "end": "2551200"
  },
  {
    "text": "service communication building block so let me change",
    "start": "2551200",
    "end": "2556240"
  },
  {
    "text": "branches and before i do that let me show you a",
    "start": "2556240",
    "end": "2563200"
  },
  {
    "text": "couple of other commands that i'm going to use in this session the upper list",
    "start": "2563200",
    "end": "2570000"
  },
  {
    "text": "will show all the different applications or services that are",
    "start": "2570000",
    "end": "2575359"
  },
  {
    "text": "running by dapper okay so that's a nice way to see",
    "start": "2575359",
    "end": "2580640"
  },
  {
    "text": "all your different applications that are running in that particular machine okay another one is dapper dashboard",
    "start": "2580640",
    "end": "2589920"
  },
  {
    "text": "okay so adapter dashboard will run the doppler dashboard",
    "start": "2589920",
    "end": "2595160"
  },
  {
    "text": "surprisingly in this 8080 port and here you can",
    "start": "2595160",
    "end": "2601200"
  },
  {
    "text": "uh visually see those running applications okay it's",
    "start": "2601200",
    "end": "2606240"
  },
  {
    "text": "just like the doppler list command however you have this nice web page and you can see more information about those",
    "start": "2606240",
    "end": "2614079"
  },
  {
    "text": "applications and you can stop those applications and actually you",
    "start": "2614079",
    "end": "2619680"
  },
  {
    "text": "can go here and watch those different components",
    "start": "2619680",
    "end": "2625920"
  },
  {
    "text": "that were loaded and detected by dapper okay so that's a nice way to understand",
    "start": "2625920",
    "end": "2633440"
  },
  {
    "text": "what's going on in the application okay so in this case i'm using the pub sub and state store",
    "start": "2633440",
    "end": "2639839"
  },
  {
    "text": "components okay so now i'm going to switch gears",
    "start": "2639839",
    "end": "2645200"
  },
  {
    "text": "here let me uh",
    "start": "2645200",
    "end": "2649680"
  },
  {
    "text": "let's do this repose and then",
    "start": "2650800",
    "end": "2657359"
  },
  {
    "text": "stop all i'm executing dapper stop",
    "start": "2657359",
    "end": "2664240"
  },
  {
    "text": "so i don't have to ctrl c each tab okay",
    "start": "2664240",
    "end": "2669839"
  },
  {
    "text": "and now let's do this get branch",
    "start": "2669839",
    "end": "2675839"
  },
  {
    "text": "okay so get checkout zero two service to service communication",
    "start": "2675839",
    "end": "2683280"
  },
  {
    "text": "and now let's run the application again so",
    "start": "2683280",
    "end": "2688960"
  },
  {
    "text": "here in visual studio no okay",
    "start": "2688960",
    "end": "2695920"
  },
  {
    "text": "now i have this other pet aggregator microservice okay",
    "start": "2696000",
    "end": "2702319"
  },
  {
    "text": "just like in the diagram so the pet aggregator microservice will",
    "start": "2702319",
    "end": "2707760"
  },
  {
    "text": "communicate to those other three microservices okay",
    "start": "2707760",
    "end": "2712880"
  },
  {
    "text": "how okay the first thing remember you have to use",
    "start": "2712880",
    "end": "2717920"
  },
  {
    "text": "the doppler sdk then you have to configure",
    "start": "2717920",
    "end": "2723920"
  },
  {
    "text": "the middleware and then you use the methods in this case i have this pad aggregator",
    "start": "2723920",
    "end": "2731280"
  },
  {
    "text": "controller class and as you can see now i'm running invoke method async",
    "start": "2731280",
    "end": "2739520"
  },
  {
    "text": "so in this case it's uh it's a generic method which is pretty cool because this this year this",
    "start": "2739520",
    "end": "2746800"
  },
  {
    "text": "realization will execute by me automatically okay",
    "start": "2746800",
    "end": "2753040"
  },
  {
    "text": "and you have to specify the http method that you want to execute",
    "start": "2753040",
    "end": "2759599"
  },
  {
    "text": "and the name of the application and then the name of the endpoint okay",
    "start": "2759599",
    "end": "2766640"
  },
  {
    "text": "so for instance the pet microservice has a pred query",
    "start": "2766640",
    "end": "2771760"
  },
  {
    "text": "endpoint and rescue query as well and the hospital micro service as well so let me",
    "start": "2771760",
    "end": "2777920"
  },
  {
    "text": "go back here and now run [Music]",
    "start": "2777920",
    "end": "2784439"
  },
  {
    "text": "paid api this must be running so dapper on up here",
    "start": "2786880",
    "end": "2794240"
  },
  {
    "text": "up id pad it looks like this is enough and",
    "start": "2794240",
    "end": "2801280"
  },
  {
    "text": "i don't have the scripts right now i don't know why anyways let me do this super fast okay",
    "start": "2801520",
    "end": "2809359"
  },
  {
    "text": "uh anyways dapper",
    "start": "2809359",
    "end": "2814880"
  },
  {
    "text": "the upper run and the application name will be rescue",
    "start": "2814880",
    "end": "2820160"
  },
  {
    "text": "and the http bupper http port",
    "start": "2820160",
    "end": "2825440"
  },
  {
    "text": "will be thousand one and the up port will be",
    "start": "2825440",
    "end": "2833760"
  },
  {
    "text": "uh this one dot net run urls and then",
    "start": "2833760",
    "end": "2841680"
  },
  {
    "text": "something like this i don't want to type",
    "start": "2841680",
    "end": "2847520"
  },
  {
    "text": "uh everything again",
    "start": "2847520",
    "end": "2852880"
  },
  {
    "text": "so something uh is wrong with this branch okay so bear with me guys please",
    "start": "2852880",
    "end": "2860240"
  },
  {
    "text": "okay so app id hospital and this will be fifty thousand two",
    "start": "2860559",
    "end": "2869040"
  },
  {
    "text": "and this other port and finally i have to tell that neutron to run this",
    "start": "2869040",
    "end": "2876800"
  },
  {
    "text": "other microservice in this port okay so something's wrong here",
    "start": "2876800",
    "end": "2883359"
  },
  {
    "text": "uh failed to bind to others",
    "start": "2883359",
    "end": "2887838"
  },
  {
    "text": "what's going on so",
    "start": "2892240",
    "end": "2897680"
  },
  {
    "text": "it looks like something is missing here",
    "start": "2898800",
    "end": "2904240"
  },
  {
    "text": "so it looks like there's an application that is running",
    "start": "2904480",
    "end": "2909760"
  },
  {
    "text": "that i can't see you now",
    "start": "2909760",
    "end": "2914119"
  },
  {
    "text": "the upper run rescue the upper http port ip port",
    "start": "2915119",
    "end": "2921359"
  },
  {
    "text": "so it looks fine to me i find it upper http port what's going",
    "start": "2921359",
    "end": "2926559"
  },
  {
    "text": "on here should i um",
    "start": "2926559",
    "end": "2933280"
  },
  {
    "text": "it's running where here now actually this is running just the azure function",
    "start": "2936960",
    "end": "2942480"
  },
  {
    "text": "not the entire application yeah i have this instance because",
    "start": "2942480",
    "end": "2947920"
  },
  {
    "text": "the hospital microservice was created by using the event sourcing pattern",
    "start": "2947920",
    "end": "2953680"
  },
  {
    "text": "and the azure function is projecting the data that comes from azure cosmos db where the",
    "start": "2953680",
    "end": "2959839"
  },
  {
    "text": "hospital microservices is storing the events and that's why that's the reason why you",
    "start": "2959839",
    "end": "2966800"
  },
  {
    "text": "have to to to read the code it's a pretty great implementation about the",
    "start": "2966800",
    "end": "2972720"
  },
  {
    "text": "event sourcing pattern however something's going on here",
    "start": "2972720",
    "end": "2978160"
  },
  {
    "text": "let me try another thing okay [Music] so i'm going to",
    "start": "2978160",
    "end": "2984480"
  },
  {
    "text": "stop all of those different dot net processes",
    "start": "2984480",
    "end": "2991200"
  },
  {
    "text": "uh i was playing with this in the hotel uh one hour ago so maybe i changed",
    "start": "2991599",
    "end": "2998800"
  },
  {
    "text": "something or i'm not sure okay so no.net processes okay",
    "start": "2998800",
    "end": "3006400"
  },
  {
    "text": "so again this should be running this should be running again",
    "start": "3006400",
    "end": "3013838"
  },
  {
    "text": "come on no it's not working uh",
    "start": "3014400",
    "end": "3020000"
  },
  {
    "text": "i don't have any other application running",
    "start": "3020000",
    "end": "3025720"
  },
  {
    "text": "what's that",
    "start": "3026400",
    "end": "3028880"
  },
  {
    "text": "yeah yeah maybe i yeah i can try to do that uh however i don't think i will have",
    "start": "3032880",
    "end": "3039280"
  },
  {
    "text": "the time i'm sorry about that",
    "start": "3039280",
    "end": "3044800"
  },
  {
    "text": "hold on so this is",
    "start": "3047200",
    "end": "3051359"
  },
  {
    "text": "uh let me check out the pops up",
    "start": "3052839",
    "end": "3059280"
  },
  {
    "text": "branch and notepad run",
    "start": "3059280",
    "end": "3064400"
  },
  {
    "text": "apa rescue a port everything's running okay",
    "start": "3066800",
    "end": "3073680"
  },
  {
    "text": "ah check out check out check out",
    "start": "3077200",
    "end": "3082760"
  },
  {
    "text": "okay check out zero two",
    "start": "3085200",
    "end": "3090559"
  },
  {
    "text": "uh i'm suspicious about my terminal",
    "start": "3091119",
    "end": "3096359"
  },
  {
    "text": "yeah it's running so my my syntax was incorrect or something",
    "start": "3109119",
    "end": "3118319"
  },
  {
    "text": "the colon oh",
    "start": "3123680",
    "end": "3126720"
  },
  {
    "text": "oh thank you",
    "start": "3129200",
    "end": "3134480"
  },
  {
    "text": "oh my god you have an eagle eyes it was so small and you detect that",
    "start": "3134720",
    "end": "3139760"
  },
  {
    "text": "thank you very much yeah of course i didn't see that i thank",
    "start": "3139760",
    "end": "3147280"
  },
  {
    "text": "you very much and something's going on with the hospital micro service they have the",
    "start": "3147280",
    "end": "3153599"
  },
  {
    "text": "upper hct poor [Music]",
    "start": "3153599",
    "end": "3157969"
  },
  {
    "text": "before the port dot net wrong urls",
    "start": "3162319",
    "end": "3169440"
  },
  {
    "text": "you ah",
    "start": "3169440",
    "end": "3174960"
  },
  {
    "text": "oh sorry plus colon plus colon oh my god",
    "start": "3174960",
    "end": "3182559"
  },
  {
    "text": "thank you very much for telling me that i wasn't paying attention to that",
    "start": "3185200",
    "end": "3190559"
  },
  {
    "text": "and just because i didn't have my scripts on my script files because that's precisely what i wanted to avoid",
    "start": "3190559",
    "end": "3197680"
  },
  {
    "text": "you know to type everything because there are so many different moving parts here and okay let me try again",
    "start": "3197680",
    "end": "3205040"
  },
  {
    "text": "hospital yeah i know but i'm control control c",
    "start": "3205040",
    "end": "3211119"
  },
  {
    "text": "this um i'm trying to to stop this let me try with this other one",
    "start": "3211119",
    "end": "3216160"
  },
  {
    "text": "raw skill query rescue query okay",
    "start": "3216160",
    "end": "3221359"
  },
  {
    "text": "god do i have the script here",
    "start": "3221359",
    "end": "3230000"
  },
  {
    "text": "let me go to the windows clipboard okay",
    "start": "3232319",
    "end": "3238400"
  },
  {
    "text": "oh god okay dapper on rescue query",
    "start": "3239119",
    "end": "3248040"
  },
  {
    "text": "uh three uh dotted run three",
    "start": "3250640",
    "end": "3258240"
  },
  {
    "text": "this will run plus colin",
    "start": "3258240",
    "end": "3266400"
  },
  {
    "text": "yes anyways thank you very much uh for telling me that",
    "start": "3266400",
    "end": "3274000"
  },
  {
    "text": "and lastly the pet aggregator",
    "start": "3274480",
    "end": "3281680"
  },
  {
    "text": "i'm going to use this port 55000",
    "start": "3284079",
    "end": "3290920"
  },
  {
    "text": "anyways let me go back here and try to understand if we can uh execute the",
    "start": "3296000",
    "end": "3302480"
  },
  {
    "text": "query the pet aggregator microservice pet is running rescue is",
    "start": "3302480",
    "end": "3307520"
  },
  {
    "text": "running hospital is running and rescue query is running okay and also pet aggregator okay cool",
    "start": "3307520",
    "end": "3314720"
  },
  {
    "text": "so if i go back here to the swagger page and then i navigate to the",
    "start": "3314720",
    "end": "3320640"
  },
  {
    "text": "let's say swagger page of the pen aggregator microservice then i will",
    "start": "3320640",
    "end": "3327119"
  },
  {
    "text": "be able to execute this however dapper is",
    "start": "3327119",
    "end": "3333280"
  },
  {
    "text": "i'm sorry not this is not working pet query when i buy the pet so it's missing the",
    "start": "3333280",
    "end": "3339599"
  },
  {
    "text": "correct app id uh anyways moving on let me show you a",
    "start": "3339599",
    "end": "3344960"
  },
  {
    "text": "couple of building blocks and before we finalize this session",
    "start": "3344960",
    "end": "3351040"
  },
  {
    "text": "uh so that works my script is wrong my typing is completely uh incorrect because i missed",
    "start": "3351040",
    "end": "3358559"
  },
  {
    "text": "those scripts okay so let's talk about the bindings again let me uh go back here",
    "start": "3358559",
    "end": "3366480"
  },
  {
    "text": "and i'm going to stop all the different applications okay",
    "start": "3366480",
    "end": "3371839"
  },
  {
    "text": "stop all okay because i want to change branches",
    "start": "3371839",
    "end": "3378640"
  },
  {
    "text": "to the state branch",
    "start": "3378640",
    "end": "3385440"
  },
  {
    "text": "and here i want to show you the implementation of how",
    "start": "3385440",
    "end": "3391520"
  },
  {
    "text": "you can use the state management building block for storing the state okay so for instance here in the pet",
    "start": "3391520",
    "end": "3398640"
  },
  {
    "text": "aggregator microservice there is a small change here because the query itself now it's here in the query",
    "start": "3398640",
    "end": "3406960"
  },
  {
    "text": "paths method and here i'm using the getstate entry async",
    "start": "3406960",
    "end": "3414559"
  },
  {
    "text": "method that comes from the sdk so i'm storing the state for 30 seconds",
    "start": "3414559",
    "end": "3422079"
  },
  {
    "text": "that's what i'm doing here i'm retrieving the data from those microservices that the service",
    "start": "3422079",
    "end": "3427920"
  },
  {
    "text": "communication building block is not allowing me to do that because i have some mistakes in my script okay",
    "start": "3427920",
    "end": "3434880"
  },
  {
    "text": "however when i receive the the the results i store those",
    "start": "3434880",
    "end": "3440799"
  },
  {
    "text": "uh different records and the data by 30 seconds okay for 30 seconds",
    "start": "3440799",
    "end": "3447440"
  },
  {
    "text": "after that after 30 seconds have passed i execute again the curry",
    "start": "3447440",
    "end": "3455119"
  },
  {
    "text": "pets uh method so it's just a small logic here for showing the",
    "start": "3455119",
    "end": "3462400"
  },
  {
    "text": "state management and let's try this",
    "start": "3462400",
    "end": "3467359"
  },
  {
    "text": "i hope i have here yeah i have the script precisely the one that i was missing ron",
    "start": "3467680",
    "end": "3475119"
  },
  {
    "text": "ron can you see that it was easier",
    "start": "3475119",
    "end": "3480400"
  },
  {
    "text": "run run and run okay",
    "start": "3480720",
    "end": "3488000"
  },
  {
    "text": "so it looks like all of those are running again and if i",
    "start": "3488000",
    "end": "3495119"
  },
  {
    "text": "go back to the browser and i refresh this i will be able to get",
    "start": "3495119",
    "end": "3502400"
  },
  {
    "text": "try it out execute uh pet query pet query pet query something",
    "start": "3502400",
    "end": "3509119"
  },
  {
    "text": "is wrong with my ped query is is pet query running",
    "start": "3509119",
    "end": "3514960"
  },
  {
    "text": "reason no no no that's what's happening here oh",
    "start": "3514960",
    "end": "3520720"
  },
  {
    "text": "yeah something is wrong about my own code and um with this application and",
    "start": "3522880",
    "end": "3528799"
  },
  {
    "text": "the script that i'm running however i wanted to show you the the code and finally i want to show you the bindings",
    "start": "3528799",
    "end": "3536000"
  },
  {
    "text": "code and so you can take a look at this the first binding is in the paid api",
    "start": "3536000",
    "end": "3543280"
  },
  {
    "text": "microservice because here when you create them",
    "start": "3543280",
    "end": "3548480"
  },
  {
    "text": "you can create a new pad by using those bindings okay so if i go here",
    "start": "3548480",
    "end": "3555119"
  },
  {
    "text": "let me show you pet controller where is it",
    "start": "3555119",
    "end": "3561599"
  },
  {
    "text": "the name of this here pet input binding this is the way that you configure",
    "start": "3562720",
    "end": "3569680"
  },
  {
    "text": "an input binding with dapper you just say hey i want to use this name of the",
    "start": "3569680",
    "end": "3576000"
  },
  {
    "text": "component why if i go here",
    "start": "3576000",
    "end": "3581599"
  },
  {
    "text": "again and i show you the components folder",
    "start": "3581599",
    "end": "3588559"
  },
  {
    "text": "here's the component for this particular binding okay so you can see this name here",
    "start": "3589680",
    "end": "3599559"
  },
  {
    "text": "head input binding that's the name that i have for that binding and that's",
    "start": "3600319",
    "end": "3605760"
  },
  {
    "text": "precisely what i'm using in the code and that's for the input and now for the",
    "start": "3605760",
    "end": "3611680"
  },
  {
    "text": "output let's go here to the",
    "start": "3611680",
    "end": "3617520"
  },
  {
    "text": "where is it uh integration controllers integrations integration events controller",
    "start": "3617520",
    "end": "3624559"
  },
  {
    "text": "here uh uh uh pay transfer to hospital",
    "start": "3624559",
    "end": "3633920"
  },
  {
    "text": "pedagogy where is it so i want to transfer the pad",
    "start": "3637799",
    "end": "3645359"
  },
  {
    "text": "again",
    "start": "3647359",
    "end": "3650359"
  },
  {
    "text": "oh my god is this in this place",
    "start": "3656880",
    "end": "3665040"
  },
  {
    "text": "i just can't find this so let me show you the name of the input",
    "start": "3669280",
    "end": "3674880"
  },
  {
    "text": "binding pad output binding let me",
    "start": "3674880",
    "end": "3681520"
  },
  {
    "text": "search for this and it's right here hospital application",
    "start": "3681520",
    "end": "3687200"
  },
  {
    "text": "service and this is the way how you communicate to an output binding very",
    "start": "3687200",
    "end": "3693280"
  },
  {
    "text": "easy stuff you have to say the name of the output binding and the name of the command that you want to",
    "start": "3693280",
    "end": "3699119"
  },
  {
    "text": "execute and then the payload and this is communicating to",
    "start": "3699119",
    "end": "3705200"
  },
  {
    "text": "usher storage queues so let me try",
    "start": "3705200",
    "end": "3710559"
  },
  {
    "text": "one more time ron c",
    "start": "3710559",
    "end": "3717520"
  },
  {
    "text": "is this because i'm not running the components",
    "start": "3718480",
    "end": "3723039"
  },
  {
    "text": "yeah some some scripts are missing run c",
    "start": "3724880",
    "end": "3730799"
  },
  {
    "text": "okay this is running",
    "start": "3736640",
    "end": "3740279"
  },
  {
    "text": "let me go back here to the azure portal and in the queues",
    "start": "3742400",
    "end": "3748799"
  },
  {
    "text": "at queue i want to create a new message so for instance",
    "start": "3748799",
    "end": "3754400"
  },
  {
    "text": "um i want to create a pad by using an external system that's what i'm trying to do here",
    "start": "3754400",
    "end": "3762319"
  },
  {
    "text": "so if i go here and copy this and then",
    "start": "3762319",
    "end": "3767599"
  },
  {
    "text": "go here okay and then i have to change the id",
    "start": "3767599",
    "end": "3773680"
  },
  {
    "text": "because otherwise i'm going to have some problems with the primary key",
    "start": "3773680",
    "end": "3778720"
  },
  {
    "text": "let's say author breathe pitbull",
    "start": "3778720",
    "end": "3783920"
  },
  {
    "text": "let's say again beagle because i don't remember and i don't trust how i'm typing right now maybe people have two",
    "start": "3783920",
    "end": "3790559"
  },
  {
    "text": "teeth or two elves i don't remember yeah and that's uh validated okay",
    "start": "3790559",
    "end": "3797440"
  },
  {
    "text": "because it's using domain driven design and there are some restrictions that are",
    "start": "3797440",
    "end": "3803520"
  },
  {
    "text": "being validated okay species dog okay so um",
    "start": "3803520",
    "end": "3810319"
  },
  {
    "text": "what's going on here okay so okay",
    "start": "3810319",
    "end": "3815359"
  },
  {
    "text": "and we should have the pet",
    "start": "3817359",
    "end": "3822960"
  },
  {
    "text": "oh",
    "start": "3822960",
    "end": "3825838"
  },
  {
    "text": "is this running",
    "start": "3833359",
    "end": "3836680"
  },
  {
    "text": "breed is not valid that's interesting and i told you that right i don't i don't trust my typing",
    "start": "3847280",
    "end": "3854960"
  },
  {
    "text": "breed beagle",
    "start": "3854960",
    "end": "3858240"
  },
  {
    "text": "other be",
    "start": "3862000",
    "end": "3865960"
  },
  {
    "text": "oh oh my god it's so tough to type and watch the",
    "start": "3868480",
    "end": "3874880"
  },
  {
    "text": "screen at the same time yeah yeah that's right",
    "start": "3874880",
    "end": "3882480"
  },
  {
    "text": "i yeah there is wow",
    "start": "3885599",
    "end": "3890960"
  },
  {
    "text": "anyways the code is there the code is working what's not working are my fingers okay",
    "start": "3892839",
    "end": "3900000"
  },
  {
    "text": "uh i'm going to put this repo um in my public",
    "start": "3900000",
    "end": "3906720"
  },
  {
    "text": "github account and there was this secrets management uh scenario missing",
    "start": "3906720",
    "end": "3911920"
  },
  {
    "text": "however this is very long that's why i'm not going to show you that and of course the the session is",
    "start": "3911920",
    "end": "3917839"
  },
  {
    "text": "over and thank you very much for bearing with me guys",
    "start": "3917839",
    "end": "3923038"
  },
  {
    "text": "dapper is excellent you said the wisdom pad medicine scenario works",
    "start": "3923119",
    "end": "3928400"
  },
  {
    "text": "perfectly you have to have a lot of different moving parts okay and that's normal because this is a",
    "start": "3928400",
    "end": "3935119"
  },
  {
    "text": "micro service application and it's not an e-commerce application when you where you have the order and product and",
    "start": "3935119",
    "end": "3942160"
  },
  {
    "text": "that's that's a a very popular scenario however you can use",
    "start": "3942160",
    "end": "3947440"
  },
  {
    "text": "microservices in any kind of vertical in any kind of market okay that's why i",
    "start": "3947440",
    "end": "3952480"
  },
  {
    "text": "created this uh and thank you very much for coming enjoy the rest of the weekend and see",
    "start": "3952480",
    "end": "3958079"
  },
  {
    "text": "you next time okay",
    "start": "3958079",
    "end": "3961880"
  },
  {
    "text": "you",
    "start": "3972319",
    "end": "3974400"
  }
]