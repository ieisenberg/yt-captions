[
  {
    "text": "thanks everyone for coming this is a session on go if if some of you know go",
    "start": "5710",
    "end": "14690"
  },
  {
    "text": "ready it might be a bit boring it's a base in my journey over the last year in",
    "start": "14690",
    "end": "19760"
  },
  {
    "text": "looking at go and the issues issues and joy I had over that year so my name is",
    "start": "19760",
    "end": "29239"
  },
  {
    "text": "Paul bar I'm a technical evangelist at Microsoft during during my day job I",
    "start": "29239",
    "end": "36290"
  },
  {
    "text": "work closely with the azure engineering team and with global partners and we",
    "start": "36290",
    "end": "41480"
  },
  {
    "text": "focus on asia solutions this project on the other hand is one of my personal projects so it doesn't really have",
    "start": "41480",
    "end": "47870"
  },
  {
    "text": "anything to do with my day job but it's cool nonetheless you can you can get",
    "start": "47870",
    "end": "53090"
  },
  {
    "text": "hold of me on twitter at p bar there's my handle probably the easiest way to get hold of me that's that's always on",
    "start": "53090",
    "end": "61840"
  },
  {
    "text": "so go is a statically typed language",
    "start": "62050",
    "end": "68390"
  },
  {
    "text": "that feels very much like a dynamic language the thing that attracted me to",
    "start": "68390",
    "end": "74030"
  },
  {
    "text": "it was it felt a lot like the scripting languages that I've used in the past but it's very very powerful in that it",
    "start": "74030",
    "end": "79759"
  },
  {
    "text": "statically typed it has a huge collection of core libraries it also has",
    "start": "79759",
    "end": "86149"
  },
  {
    "text": "a huge collection of the party libraries and I utilized some of those the one",
    "start": "86149",
    "end": "91729"
  },
  {
    "text": "feature though that really sold me was I was looking for a language that could",
    "start": "91729",
    "end": "99499"
  },
  {
    "text": "get me a binary across linux windows and mac and go certainly fit the bull how",
    "start": "99499",
    "end": "107389"
  },
  {
    "text": "many of you have heard of go i'm assuming all of you know used go ah good",
    "start": "107389",
    "end": "115490"
  },
  {
    "text": "yeah well i'll give you a gentle introduction and hopefully provide some",
    "start": "115490",
    "end": "121429"
  },
  {
    "text": "interesting anecdotes along the way so what are we going to cover so the open source project that i'll be covering is",
    "start": "121429",
    "end": "128929"
  },
  {
    "text": "a project called script CS version manager script CS is it's a way of",
    "start": "128929",
    "end": "135560"
  },
  {
    "text": "running C sharp as a scripting language and when I was working with this I was",
    "start": "135560",
    "end": "141379"
  },
  {
    "text": "trying to run multiple versions on my machine and anyway at that point to install them was to uninstall the",
    "start": "141379",
    "end": "146420"
  },
  {
    "text": "previous version and installed a new version so i sat down with Glenn block",
    "start": "146420",
    "end": "151819"
  },
  {
    "text": "who created scripts yes and we decided to start on a version manager for",
    "start": "151819",
    "end": "156980"
  },
  {
    "text": "scripts yes so I'm going to cover off sort of what what it is and why I started looking at go as opposed to the",
    "start": "156980",
    "end": "163609"
  },
  {
    "text": "technologies that I wrote it in originally and that's that's what the considerations are going to be I",
    "start": "163609",
    "end": "168769"
  },
  {
    "text": "considered a number of options but I finally landed up and go and I and I'll explain why for those of you who've",
    "start": "168769",
    "end": "176930"
  },
  {
    "text": "worked with go you know it's a bit opinionated like a lot of other languages sometimes they can bite you so",
    "start": "176930",
    "end": "184700"
  },
  {
    "text": "I'll walk through how you should organize your project if you're doing something non trivial hello world works",
    "start": "184700",
    "end": "190280"
  },
  {
    "text": "perfectly once you move beyond that some things start to bite you if you don't understand them package management is",
    "start": "190280",
    "end": "198709"
  },
  {
    "text": "also a hot topic if you come from a world like node or C sharp with new",
    "start": "198709",
    "end": "206049"
  },
  {
    "text": "get-go might be an interesting place for you which which languages typically are",
    "start": "206049",
    "end": "211970"
  },
  {
    "text": "you guys using node or C sharp C sharp okay and then i'll also look briefly at",
    "start": "211970",
    "end": "219769"
  },
  {
    "text": "some of the language aspects that i really enjoyed and also some of the tooling that i've been using to to help",
    "start": "219769",
    "end": "225889"
  },
  {
    "text": "me with go so let's dive into the script ES version manager first of all we need",
    "start": "225889",
    "end": "232040"
  },
  {
    "text": "to start with what script es as I sort of alluded to it a bit earlier it's a",
    "start": "232040",
    "end": "237319"
  },
  {
    "text": "way of writing C sharp you don't even need to write a package or a namespace",
    "start": "237319",
    "end": "242569"
  },
  {
    "text": "you can literally write code fragments of C sharp and will execute like a script under the hood it uses rosalyn to",
    "start": "242569",
    "end": "249709"
  },
  {
    "text": "actually generate to omit the DLLs into memory and then we'll execute like a script on the mac and linux side we were",
    "start": "249709",
    "end": "259820"
  },
  {
    "text": "using mono to do the same thing",
    "start": "259820",
    "end": "263349"
  },
  {
    "text": "now svm or script CS version manager I did a plural cycles on script CS and",
    "start": "265360",
    "end": "274180"
  },
  {
    "text": "while while I was busy doing the course there were new versions of scripts es coming out all the time and as I said",
    "start": "274180",
    "end": "280370"
  },
  {
    "text": "earlier this often led to me having to uninstall and reinstall and sometimes I",
    "start": "280370",
    "end": "285889"
  },
  {
    "text": "want two different versions I'm the machine because each of them had different side effects and I wanted to demonstrate that there was no way to do",
    "start": "285889",
    "end": "291919"
  },
  {
    "text": "it easily so i started the version manager this allows you to not only",
    "start": "291919",
    "end": "298160"
  },
  {
    "text": "install multiple versions on your machine of scripts es you can also link to a a dev build that you're running so",
    "start": "298160",
    "end": "306020"
  },
  {
    "text": "you could check out the script CS code compile a new version fix the bug and actually linked it and run it as a version on your machine so let's have a",
    "start": "306020",
    "end": "314690"
  },
  {
    "text": "quick look at Scripps es el SVM so I've",
    "start": "314690",
    "end": "319970"
  },
  {
    "text": "got powers over here and if I just do an SVM list that's going to tell me that",
    "start": "319970",
    "end": "325880"
  },
  {
    "text": "I've got two versions of scripts es installed on my machine and the little asterisk next to zero 16 1 means that's",
    "start": "325880",
    "end": "332539"
  },
  {
    "text": "the act of one I can also can also then",
    "start": "332539",
    "end": "342500"
  },
  {
    "text": "check all the versions that are available for me to install so these this actually reaches out an API and and",
    "start": "342500",
    "end": "348020"
  },
  {
    "text": "does a list and gets the available versions actually need to remove some of those they bit old and then if I do",
    "start": "348020",
    "end": "353840"
  },
  {
    "text": "scripts es- version you'll see this is actually now running scripts yes and",
    "start": "353840",
    "end": "359030"
  },
  {
    "text": "that's actually 0 16 1 which is the one I showed you so now just this is showing",
    "start": "359030",
    "end": "366440"
  },
  {
    "text": "it running on Windows so now to show you running on on linux and make sure just",
    "start": "366440",
    "end": "372590"
  },
  {
    "text": "going to fire up a docker container so",
    "start": "372590",
    "end": "378530"
  },
  {
    "text": "this is running I'm running doc and native on my machine so it's effectively going to spin up in a bun to image so",
    "start": "378530",
    "end": "388220"
  },
  {
    "text": "again I can just do an SVM list you can see that's now running and I can do",
    "start": "388220",
    "end": "396669"
  },
  {
    "text": "and again now that's so that's running on Linux so you can see it works exactly the same across both platforms now how",
    "start": "398680",
    "end": "408680"
  },
  {
    "text": "this actually works just come over to the github repo can everyone see the",
    "start": "408680",
    "end": "414920"
  },
  {
    "text": "writing it's a big enough everyone good okay so as as I mentioned earlier to get",
    "start": "414920",
    "end": "424490"
  },
  {
    "text": "this cross-platform capability initially what I did I wanted as minimal impact on",
    "start": "424490",
    "end": "430490"
  },
  {
    "text": "the the person installing it as possible so I've got this concept of a binary",
    "start": "430490",
    "end": "436160"
  },
  {
    "text": "which is the SVM binary and then the shims are a shim that gets called that",
    "start": "436160",
    "end": "441950"
  },
  {
    "text": "rap scripts yes so when you execute scripts yes it can check some logic to figure out which version of scripts yes",
    "start": "441950",
    "end": "447770"
  },
  {
    "text": "it should actually run so when I was writing each of these the windows versions are all written in PowerShell",
    "start": "447770",
    "end": "454430"
  },
  {
    "text": "and the Linux versions are written in bash and then because on Windows you've",
    "start": "454430",
    "end": "462230"
  },
  {
    "text": "got to console type environments you've got the command prompt so there's a CMD",
    "start": "462230",
    "end": "468230"
  },
  {
    "text": "which is actually just a bootstrapper to run the PowerShell and then partial you could run from a PowerShell command but",
    "start": "468230",
    "end": "475390"
  },
  {
    "text": "the I came up against an issue where if",
    "start": "475390",
    "end": "481630"
  },
  {
    "text": "if you have a if you have a script so if I'd named the partial script SVM and I",
    "start": "481630",
    "end": "488570"
  },
  {
    "text": "was in a partial console I couldn't hook into a bootstrapper so I needed to actually call it something else and make",
    "start": "488570",
    "end": "494900"
  },
  {
    "text": "sure that even from PowerShell the command that CMD file was being run it's actually bootstrapping so in the windows",
    "start": "494900",
    "end": "500990"
  },
  {
    "text": "case it's a little different so I'm not going to go too much into detail here I just want to give you a brief overview",
    "start": "500990",
    "end": "506770"
  },
  {
    "text": "but the the bash I don't have ever written this much bash in my life but it",
    "start": "506770",
    "end": "512810"
  },
  {
    "text": "actually became a large programming language well a large program written in bash and then the partial one was also",
    "start": "512810",
    "end": "524210"
  },
  {
    "text": "getting quite complicated as I mentioned earlier most of my power shell looks very much like C sharp because i",
    "start": "524210",
    "end": "530649"
  },
  {
    "text": "instantiate all the C sharp objects and to get the capabilities now some of the issues that I came up against her on on",
    "start": "530649",
    "end": "537519"
  },
  {
    "text": "the Mac I think bash at that point was bashed three and on Linux was bashful",
    "start": "537519",
    "end": "543940"
  },
  {
    "text": "and bash three didn't have associative arrays so some of the programming constructs started getting a bit",
    "start": "543940",
    "end": "549490"
  },
  {
    "text": "complicated in bash and also some of the sorting that I was capable of doing like",
    "start": "549490",
    "end": "554829"
  },
  {
    "text": "in PowerShell because you can create objects and sort on properties some of",
    "start": "554829",
    "end": "560500"
  },
  {
    "text": "the capabilities and the PowerShell svm were lot more they were lot better than",
    "start": "560500",
    "end": "566560"
  },
  {
    "text": "on the bash version what I could actually do and this started to show up",
    "start": "566560",
    "end": "571839"
  },
  {
    "text": "in the issues i'll just show you all the",
    "start": "571839",
    "end": "577120"
  },
  {
    "text": "bugs they came through so a lot of these",
    "start": "577120",
    "end": "583240"
  },
  {
    "text": "was it works like this in Mac but doesn't work like this in windows and work sucks and windows but it doesn't",
    "start": "583240",
    "end": "588490"
  },
  {
    "text": "work like this a mac and at that point it became really difficult maintaining",
    "start": "588490",
    "end": "593980"
  },
  {
    "text": "two separate code base is almost an analogous to in the mobile space where",
    "start": "593980",
    "end": "600040"
  },
  {
    "text": "you running and Android and iOS separate code bases for the same app so I started",
    "start": "600040",
    "end": "611290"
  },
  {
    "text": "to look around what potentially could I leverage to move beyond this and have one code base where I could actually",
    "start": "611290",
    "end": "617260"
  },
  {
    "text": "write both these things so my first consideration was no Jason NPM here",
    "start": "617260",
    "end": "622870"
  },
  {
    "text": "we've got a cross-platform language cross-platform runtime and mpm gives me",
    "start": "622870",
    "end": "629560"
  },
  {
    "text": "the package management which is awesome the azure CLI the cross-platform",
    "start": "629560",
    "end": "635490"
  },
  {
    "text": "interface has also written a node which is why I started here this was very very",
    "start": "635490",
    "end": "640930"
  },
  {
    "text": "attractive but then I started thinking I think dotnet core was starting to make noise at that point was still very early",
    "start": "640930",
    "end": "647290"
  },
  {
    "text": "days but I thought maybe this is worth looking at so started looking at dotnet",
    "start": "647290",
    "end": "652420"
  },
  {
    "text": "call it also had nougat so the package management was catered for but it was",
    "start": "652420",
    "end": "659110"
  },
  {
    "text": "early days and I say I then started to look at all the",
    "start": "659110",
    "end": "665439"
  },
  {
    "text": "artifacts that were come along for the ride so you wouldn't just get a single binary you would get all these assemblies and multiple folders and",
    "start": "665439",
    "end": "671980"
  },
  {
    "text": "would be this proliferation of assets between this and node that started",
    "start": "671980",
    "end": "678220"
  },
  {
    "text": "driving me to look to another solution so this is why I ended up and go and go",
    "start": "678220",
    "end": "685259"
  },
  {
    "text": "was originally written in Google was created in 2007 so it's almost 10 years",
    "start": "685259",
    "end": "691720"
  },
  {
    "text": "old was created as a very lightweight statically typed language but it feels",
    "start": "691720",
    "end": "697509"
  },
  {
    "text": "like dynamic language and it generates a single binary with all the statically",
    "start": "697509",
    "end": "702790"
  },
  {
    "text": "linked libraries pulled in so you may have multiple libraries but it spits out",
    "start": "702790",
    "end": "708519"
  },
  {
    "text": "a single binary and that binary you can target at different platforms so you can target at different architectures x86x64",
    "start": "708519",
    "end": "718829"
  },
  {
    "text": "powerpc a whole whole bunch of them and in different operating systems so how do",
    "start": "718829",
    "end": "725679"
  },
  {
    "text": "you get started with go let me just pop over to the go lang website so it's",
    "start": "725679",
    "end": "734860"
  },
  {
    "text": "really easy go to golang org got some very nice tutorials you can just run in",
    "start": "734860",
    "end": "740559"
  },
  {
    "text": "the browser if you go to the documentation down here there's a learn",
    "start": "740559",
    "end": "747579"
  },
  {
    "text": "page there tons of books to get you started and and to get you on your journey so if you just getting going",
    "start": "747579",
    "end": "754059"
  },
  {
    "text": "definitely have a look here the other great thing as I mentioned is that the",
    "start": "754059",
    "end": "759730"
  },
  {
    "text": "core packages that come with go are impressive so this is a list of all of",
    "start": "759730",
    "end": "764949"
  },
  {
    "text": "them so there's actually a lot of them and it gives you a lot of capability",
    "start": "764949",
    "end": "772889"
  },
  {
    "text": "once you sorry I wanted to show you one more thing there",
    "start": "776390",
    "end": "782240"
  },
  {
    "text": "on the downloads page so like node you",
    "start": "788019",
    "end": "794800"
  },
  {
    "text": "can actually install go for each of the different platforms you've got windows mac and linux that installs on on each",
    "start": "794800",
    "end": "803170"
  },
  {
    "text": "of those oasis so once it installs on to your machine to actually find the",
    "start": "803170",
    "end": "810009"
  },
  {
    "text": "binaries your path is set up with each of these different paths in the",
    "start": "810009",
    "end": "815470"
  },
  {
    "text": "different oasis so on windows you have sigo bin and the actual go executable so",
    "start": "815470",
    "end": "821799"
  },
  {
    "text": "that's similar to the node executable or the dotnet exe and the new net call and",
    "start": "821799",
    "end": "827860"
  },
  {
    "text": "then in linux and mac you've got the burn folders go route is also very",
    "start": "827860",
    "end": "833829"
  },
  {
    "text": "important environment variable the sets up to the installation path of where",
    "start": "833829",
    "end": "839589"
  },
  {
    "text": "goes installed this is important because all of those packages is that the core",
    "start": "839589",
    "end": "845079"
  },
  {
    "text": "libraries that I showed you their source code is sitting in a source folder in this location so if you want to see how",
    "start": "845079",
    "end": "851829"
  },
  {
    "text": "each of those libraries is created all the source code comes along when you actually create it and those are used to",
    "start": "851829",
    "end": "857170"
  },
  {
    "text": "to generate your code this is probably the most important environment variable",
    "start": "857170",
    "end": "864850"
  },
  {
    "text": "and go it's called go path it is it defines the workspace and this is a",
    "start": "864850",
    "end": "871600"
  },
  {
    "text": "source of much of my frustration in my journey which I'll elaborate on shortly",
    "start": "871600",
    "end": "878350"
  },
  {
    "text": "so go path defines the workspace that all of the go tooling works around so in",
    "start": "878350",
    "end": "886509"
  },
  {
    "text": "your go path or your workspace there will be three folders that you need to define sources where you write your",
    "start": "886509",
    "end": "893199"
  },
  {
    "text": "source code packages are where intermediate libraries are compiled before they are statically linked and",
    "start": "893199",
    "end": "899589"
  },
  {
    "text": "then bin is where the final executable gets dumped so think of that like the",
    "start": "899589",
    "end": "905049"
  },
  {
    "text": "debug folder in in c-sharp or.net so as",
    "start": "905049",
    "end": "911019"
  },
  {
    "text": "an example I've got a source source code called hello duck goose that's the file",
    "start": "911019",
    "end": "916829"
  },
  {
    "text": "it's in a folder called say hello and it's in a namespace folder",
    "start": "916829",
    "end": "921930"
  },
  {
    "text": "called NGC Sydney demo2 and that the resulting binary will be say hello dot",
    "start": "921930",
    "end": "927420"
  },
  {
    "text": "exe it takes the namespace it takes the name of the the package similar as in",
    "start": "927420",
    "end": "933450"
  },
  {
    "text": "c-sharp so if we have a look at hello",
    "start": "933450",
    "end": "939060"
  },
  {
    "text": "this is what a go package looks like package main means this is going to be",
    "start": "939060",
    "end": "944730"
  },
  {
    "text": "the executable and then function main means this is the main entry point and importing if in T which is the format",
    "start": "944730",
    "end": "951930"
  },
  {
    "text": "library the core library and that's how you just print so it's a printf print to",
    "start": "951930",
    "end": "956940"
  },
  {
    "text": "print to the standard output so that's a really simple program that's generating a single binary and say we want to do",
    "start": "956940",
    "end": "963870"
  },
  {
    "text": "something more complicated we want to potentially reverse reverse the string we're going to build another library so",
    "start": "963870",
    "end": "973709"
  },
  {
    "text": "in this case we would still have our hello go but would have a library called string util it would be just reversed go",
    "start": "973709",
    "end": "981029"
  },
  {
    "text": "when this compiled it would create a package so this is the library binary",
    "start": "981029",
    "end": "987120"
  },
  {
    "text": "that gets statically linked and then it still generates the binary on the output",
    "start": "987120",
    "end": "992779"
  },
  {
    "text": "so if we have a look the hello doc go looks pretty similar we're just now",
    "start": "992779",
    "end": "998250"
  },
  {
    "text": "importing our string utility so that's the full path to to that location of the string you tool and then we're just",
    "start": "998250",
    "end": "1004850"
  },
  {
    "text": "going to do a reverse on them on the on the string don't pay too much attention",
    "start": "1004850",
    "end": "1011240"
  },
  {
    "text": "to the internals of this that's complicated ruined stuff in Ingo but this is just showing that if you don't",
    "start": "1011240",
    "end": "1017390"
  },
  {
    "text": "name your package main then it automatically becomes a library that that's all I wanted you to take away",
    "start": "1017390",
    "end": "1024050"
  },
  {
    "text": "from that this this is also a little bit confusing when you want to build or",
    "start": "1024050",
    "end": "1031250"
  },
  {
    "text": "create your executable you run a command called go install what this does is it",
    "start": "1031250",
    "end": "1038270"
  },
  {
    "text": "builds your packages and then installs the exe into the binary folder into their bin folder I think if you used to",
    "start": "1038270",
    "end": "1045980"
  },
  {
    "text": "always if you used to commands like dock near build or dotnet run or something",
    "start": "1045980",
    "end": "1051200"
  },
  {
    "text": "build it gets a bit complicated these these two environment variables",
    "start": "1051200",
    "end": "1057700"
  },
  {
    "text": "are also really important particularly if you're looking at the cross-platform stuff so go OS determines the operating",
    "start": "1057700",
    "end": "1064930"
  },
  {
    "text": "system that the binary will be compiled for so if i change the go s variable",
    "start": "1064930",
    "end": "1071070"
  },
  {
    "text": "environment variable i can actually spit out a binary for a different platform and the architecture go arch is exactly",
    "start": "1071070",
    "end": "1079030"
  },
  {
    "text": "the same so you can spit it out for AMD for Intel for powerpc and arm I think",
    "start": "1079030",
    "end": "1085420"
  },
  {
    "text": "there are there a number of them yeah so",
    "start": "1085420",
    "end": "1092410"
  },
  {
    "text": "those those are the main ones we're going to be looking at in this demo so let's have a look at a demo",
    "start": "1092410",
    "end": "1100380"
  },
  {
    "text": "you",
    "start": "1116250",
    "end": "1118310"
  },
  {
    "text": "okay so here i have created on my machine my go path variable is set to",
    "start": "1122870",
    "end": "1131669"
  },
  {
    "text": "see projects go workspace so this is now we're all of my go code is going to be written so i'm just going to show you",
    "start": "1131669",
    "end": "1144830"
  },
  {
    "text": "those two files again so I've got the hello file and I've got the reverse file",
    "start": "1144830",
    "end": "1150780"
  },
  {
    "text": "so now I'm actually going to compile this and run it and show you",
    "start": "1150780",
    "end": "1155960"
  },
  {
    "text": "we do go install you'll notice here that I don't need to go down the the source",
    "start": "1162190",
    "end": "1169070"
  },
  {
    "text": "folder I'm targeting the actual package",
    "start": "1169070",
    "end": "1179389"
  },
  {
    "text": "in in that source folder so that's to say hello it's going to generate a say hello binary for me now",
    "start": "1179389",
    "end": "1186099"
  },
  {
    "text": "you know",
    "start": "1196860",
    "end": "1200009"
  },
  {
    "text": "it should work",
    "start": "1210070",
    "end": "1213580"
  },
  {
    "text": "wrong slashes okay so essentially what this is done now is it's built the the",
    "start": "1219830",
    "end": "1225600"
  },
  {
    "text": "binary so in the binary folder I've got an exe and it's going to print it back",
    "start": "1225600",
    "end": "1231809"
  },
  {
    "text": "to front so now just to show you I'm still running on windows I'm going to",
    "start": "1231809",
    "end": "1239880"
  },
  {
    "text": "now set the go OS variable to linux now",
    "start": "1239880",
    "end": "1245730"
  },
  {
    "text": "I'm saying I want to spit out a linux binary run exactly the same command go",
    "start": "1245730",
    "end": "1251700"
  },
  {
    "text": "install what I should have now",
    "start": "1251700",
    "end": "1259970"
  },
  {
    "text": "I know",
    "start": "1269010",
    "end": "1272060"
  },
  {
    "text": "so now i have a linux binary and what i mean i should just push that top of the",
    "start": "1277200",
    "end": "1282460"
  },
  {
    "text": "screen for you what it's actually done is put it into a linux amd64 folder",
    "start": "1282460",
    "end": "1288010"
  },
  {
    "text": "which is the operating system and the the architecture so just to prove that",
    "start": "1288010",
    "end": "1293380"
  },
  {
    "text": "that is actually a linux binary",
    "start": "1293380",
    "end": "1297690"
  },
  {
    "text": "so this is ubuntu bash on Windows this is essentially a linux shell I'll run",
    "start": "1305960",
    "end": "1312110"
  },
  {
    "text": "that and it it's spat out exactly the same thing so now we have exactly the same code base and just by setting",
    "start": "1312110",
    "end": "1318200"
  },
  {
    "text": "environment variable we can actually target two different applications I mean two different two different os's and",
    "start": "1318200",
    "end": "1325760"
  },
  {
    "text": "architectures so that all seems really",
    "start": "1325760",
    "end": "1335809"
  },
  {
    "text": "easy I did mention that go path provides pain if we have a look at the source",
    "start": "1335809",
    "end": "1344090"
  },
  {
    "text": "folder you'll notice that not only is my the project that I've just shown you is",
    "start": "1344090",
    "end": "1350570"
  },
  {
    "text": "in there but a whole bunch of other projects isn't there if we go to the package folder its proliferated with",
    "start": "1350570",
    "end": "1358250"
  },
  {
    "text": "tons of my experiments if we go to the binary folder every single output of",
    "start": "1358250",
    "end": "1365840"
  },
  {
    "text": "every single project has been shoved into the one folder so this now creates a problem where you if you used to being",
    "start": "1365840",
    "end": "1373760"
  },
  {
    "text": "able to segment your your projects into in two separate locations it becomes",
    "start": "1373760",
    "end": "1379039"
  },
  {
    "text": "kind of tricky because everything is shared with them within the workspace that described the feeling that I had",
    "start": "1379039",
    "end": "1391279"
  },
  {
    "text": "the first time I experienced this I'm not happy so I started looking at",
    "start": "1391279",
    "end": "1396529"
  },
  {
    "text": "different approaches I wasn't the only person who had started and go who was moaning about this or looking for",
    "start": "1396529",
    "end": "1402320"
  },
  {
    "text": "alternatives the the solution i eventually settled on was called gb it's",
    "start": "1402320",
    "end": "1409700"
  },
  {
    "text": "actually written by Dave Cheney and he is actually from Sydney and he I think",
    "start": "1409700",
    "end": "1415340"
  },
  {
    "text": "he is a Co Co Co coordinator of the go user group in Sydney if you need to",
    "start": "1415340",
    "end": "1423890"
  },
  {
    "text": "learn go read his blog posts and start using these tools because they there are",
    "start": "1423890",
    "end": "1429110"
  },
  {
    "text": "actually amazing I'll just show you what get gb what gb is",
    "start": "1429110",
    "end": "1435850"
  },
  {
    "text": "so since you're a nice build tool for go so this now allows you to run your",
    "start": "1440730",
    "end": "1448150"
  },
  {
    "text": "entire project in folders just like you would with node with C sharp it's no",
    "start": "1448150",
    "end": "1453760"
  },
  {
    "text": "longer it no longer uses your workspace as a common place for all of your applications you can actually have your",
    "start": "1453760",
    "end": "1460240"
  },
  {
    "text": "your project and your application segmented in a folder so the easiest way",
    "start": "1460240",
    "end": "1471190"
  },
  {
    "text": "to install it is with go get go is the binary as I said that's installed in your bin folder we looked at go install",
    "start": "1471190",
    "end": "1478690"
  },
  {
    "text": "go get gets packages it can get them from github or any URL and we'll actually install them in the source",
    "start": "1478690",
    "end": "1485830"
  },
  {
    "text": "folder in your workspace so this this is where it starts getting complicated",
    "start": "1485830",
    "end": "1490990"
  },
  {
    "text": "because every single package you install was go get is being shoved into your workspace so it's conceptually similar",
    "start": "1490990",
    "end": "1498130"
  },
  {
    "text": "to node where you have a global space but you don't have a private space to",
    "start": "1498130",
    "end": "1503500"
  },
  {
    "text": "store the node modules anymore this is all in one place so what I've started doing is all the tooling or all the",
    "start": "1503500",
    "end": "1511510"
  },
  {
    "text": "project all the machine wide type of libraries I want to use I use go get and",
    "start": "1511510",
    "end": "1518290"
  },
  {
    "text": "that will go into the workspace but I've started using gb to actually segment all the project related libraries into a",
    "start": "1518290",
    "end": "1527050"
  },
  {
    "text": "separate folder so in gb projects do not live in go path it's actually all",
    "start": "1527050",
    "end": "1532960"
  },
  {
    "text": "segmented which actually keeps your code alike cleaner so the the top of the hierarchy is project with a net we've",
    "start": "1532960",
    "end": "1540340"
  },
  {
    "text": "got the familiar bin package source it maintains the same layer so do you",
    "start": "1540340",
    "end": "1545470"
  },
  {
    "text": "familiar with it what it adds though is something called vendor source is anyone",
    "start": "1545470",
    "end": "1551740"
  },
  {
    "text": "used Ruby before no there was a it was a",
    "start": "1551740",
    "end": "1557080"
  },
  {
    "text": "concept with the Ruby gems around ven during which at the time I didn't really",
    "start": "1557080",
    "end": "1562930"
  },
  {
    "text": "like because we were using real package management like new yet but what this",
    "start": "1562930",
    "end": "1568480"
  },
  {
    "text": "does is it actually takes it will take one of the packages that you get off github or wherever",
    "start": "1568480",
    "end": "1574119"
  },
  {
    "text": "and actually put it into this vendor source folder so we'll take a snapshot again this is not something I've liked",
    "start": "1574119",
    "end": "1580959"
  },
  {
    "text": "in the past because their package management sites that you can actually go get packages from you don't want to be committing packages and that's what",
    "start": "1580959",
    "end": "1587229"
  },
  {
    "text": "we always told don't commit your packages into your source control does anyone did anyone hear of the left pad",
    "start": "1587229",
    "end": "1594699"
  },
  {
    "text": "incident in the node world yeah so someone there there was a discrepancy",
    "start": "1594699",
    "end": "1600279"
  },
  {
    "text": "well there was a disagreement over a name in the MPN repository and one of",
    "start": "1600279",
    "end": "1608799"
  },
  {
    "text": "the packages got pulled and there were thousands of other packages that relied",
    "start": "1608799",
    "end": "1614289"
  },
  {
    "text": "on that and they all broke overnight so based on that I'm becoming more likely",
    "start": "1614289",
    "end": "1621999"
  },
  {
    "text": "to actually store external dependencies in here and that's essentially what this is doing so gb makes really easy it's",
    "start": "1621999",
    "end": "1631029"
  },
  {
    "text": "got familiar familiar language like build gb build bullet rebuild your",
    "start": "1631029",
    "end": "1636309"
  },
  {
    "text": "solution and put stuff in that project folder it's no longer pushed into the workspace let's have a quick look how",
    "start": "1636309",
    "end": "1643749"
  },
  {
    "text": "this works",
    "start": "1643749",
    "end": "1646199"
  },
  {
    "text": "so this is what my folder currently looks like it's the same example we've been running all along if i run gb build",
    "start": "1663360",
    "end": "1672290"
  },
  {
    "text": "build all that will build everything i can actually target individual packages and forestry compilation of individual",
    "start": "1672290",
    "end": "1679620"
  },
  {
    "text": "packages so it's actually quite a powerful tool going to build all and it actually shows me the packages that is",
    "start": "1679620",
    "end": "1685710"
  },
  {
    "text": "rebuilding so it's built the string you tour package and it's built the hello say hello binary for in their tree view",
    "start": "1685710",
    "end": "1694049"
  },
  {
    "text": "again you actually see just push it up a bit for you right at the top we've got a",
    "start": "1694049",
    "end": "1702330"
  },
  {
    "text": "binary again packages say hello and string you tools so those the intermediate binaries that are compiled",
    "start": "1702330",
    "end": "1709679"
  },
  {
    "text": "and will be aesthetically type pathetically linked and then they're the packages so now this is all outside of",
    "start": "1709679",
    "end": "1716100"
  },
  {
    "text": "the workspace and it's clean and i can actually wrap that whole thing up into a repo so it's nice and segmented which is",
    "start": "1716100",
    "end": "1723870"
  },
  {
    "text": "exactly what we're after and then just to prove that it still works still are",
    "start": "1723870",
    "end": "1731190"
  },
  {
    "text": "familiar backwards say hello",
    "start": "1731190",
    "end": "1734720"
  },
  {
    "text": "so now that you've now that we've figured out the workspace problem the",
    "start": "1739609",
    "end": "1744629"
  },
  {
    "text": "next thing in a cross-platform solution is typically certain functionality may",
    "start": "1744629",
    "end": "1752669"
  },
  {
    "text": "work on specific OSS and on other os's you want to target different functionality so this is where",
    "start": "1752669",
    "end": "1759209"
  },
  {
    "text": "conditional compilation comes in and you leverage this via build constraints so",
    "start": "1759209",
    "end": "1764549"
  },
  {
    "text": "it's as easy as at the top of your go file you put that command it's a comment",
    "start": "1764549",
    "end": "1770399"
  },
  {
    "text": "plus build and then we'll go through what you put after it there must be a space and empty line after that just",
    "start": "1770399",
    "end": "1776159"
  },
  {
    "text": "that the the build system knows that is a build constraint so if there's commas",
    "start": "1776159",
    "end": "1784559"
  },
  {
    "text": "between two words it's treated as an end and if there's a space its treated as an all so you can build up complex boolean",
    "start": "1784559",
    "end": "1791190"
  },
  {
    "text": "logic the top one says this file should only be built for 386 architectures of",
    "start": "1791190",
    "end": "1796979"
  },
  {
    "text": "Linux and any darwin which is mac OS and this bottom one here you can actually",
    "start": "1796979",
    "end": "1803009"
  },
  {
    "text": "have multiple lines top line is saying Linux or Darwin and it can only be amd64",
    "start": "1803009",
    "end": "1809089"
  },
  {
    "text": "their targets a specific architecture another very interesting way to do this",
    "start": "1809089",
    "end": "1816179"
  },
  {
    "text": "if that is not sufficient for you you can use file suffixes so if you use any",
    "start": "1816179",
    "end": "1822779"
  },
  {
    "text": "of these patterns on your file names if will actually target the build system as",
    "start": "1822779",
    "end": "1828419"
  },
  {
    "text": "well so this is actually an example of something that I'm having to do within within the version manager I need to do",
    "start": "1828419",
    "end": "1835769"
  },
  {
    "text": "some linking of the versions to specific folders now on linux and mac i can use",
    "start": "1835769",
    "end": "1842159"
  },
  {
    "text": "the ghost some link library that same library on windows uses the some link",
    "start": "1842159",
    "end": "1850519"
  },
  {
    "text": "functionality in windows which requires elevated privileges so what I what I",
    "start": "1850519",
    "end": "1855899"
  },
  {
    "text": "used to do in the PowerShell versions i use junctions with make link which",
    "start": "1855899",
    "end": "1862319"
  },
  {
    "text": "doesn't require elevator privileges so that's a better solution so what I do here is on windows I'm using exact or",
    "start": "1862319",
    "end": "1871049"
  },
  {
    "text": "command which affect we just i shell out to the the junction command to actually create a junction",
    "start": "1871049",
    "end": "1876450"
  },
  {
    "text": "not a symlink and on linux and mac i use the the standard go library so here i'm",
    "start": "1876450",
    "end": "1882780"
  },
  {
    "text": "using a combination of these two things in there simulant go file I've got build",
    "start": "1882780",
    "end": "1888210"
  },
  {
    "text": "tags to say for mac and linux compile this for their functionality and on here",
    "start": "1888210",
    "end": "1893730"
  },
  {
    "text": "i'm using the simulink underscore windows so this file will only be pulled into the Windows version of the binary",
    "start": "1893730",
    "end": "1899480"
  },
  {
    "text": "they run understand that yep an in",
    "start": "1899480",
    "end": "1904500"
  },
  {
    "text": "package management as I said this happened again to me because the package",
    "start": "1904500",
    "end": "1912210"
  },
  {
    "text": "management is a bit of a mess so go get as i said this command puts everything",
    "start": "1912210",
    "end": "1918179"
  },
  {
    "text": "into your workspace which is fine if you're looking for a global workspace like a node but if you're not everything",
    "start": "1918179",
    "end": "1925770"
  },
  {
    "text": "is messed up well everything is pushed into a single space so I started looking at package managers and I started",
    "start": "1925770",
    "end": "1931620"
  },
  {
    "text": "looking at forums a lot of people were complaining about the same the same thing the last time I looked there were",
    "start": "1931620",
    "end": "1938460"
  },
  {
    "text": "20 different package managers that people had attempted to start because there was no industry standard for for",
    "start": "1938460",
    "end": "1947429"
  },
  {
    "text": "go so lots of people were writing their own but then the problem you have is the library is you're looking for may not be",
    "start": "1947429",
    "end": "1953070"
  },
  {
    "text": "in the package manager that you want to use yeah there's one of the one of the",
    "start": "1953070",
    "end": "1963090"
  },
  {
    "text": "ones that you may see a lot is called go dep they're copies that copies",
    "start": "1963090",
    "end": "1968309"
  },
  {
    "text": "dependencies out of your workspace into your vended folder but they still in your workspace when i heard about this",
    "start": "1968309",
    "end": "1975240"
  },
  {
    "text": "week was glide which was also gaining momentum it looks really good but again it's quite tied to the the go path which",
    "start": "1975240",
    "end": "1983190"
  },
  {
    "text": "is I'm still not comfortable with that so since i was using gb already gb has a",
    "start": "1983190",
    "end": "1988980"
  },
  {
    "text": "fantastic thing called gb vendor so go build has a plug-in architecture and",
    "start": "1988980",
    "end": "1994740"
  },
  {
    "text": "they have a vendor management so it's the party library management utility you",
    "start": "1994740",
    "end": "2000020"
  },
  {
    "text": "can fetcher to update it listed deleted purge etre storage so it's really",
    "start": "2000020",
    "end": "2005990"
  },
  {
    "text": "look at the script seus version manager",
    "start": "2005990",
    "end": "2011110"
  },
  {
    "text": "so this is now my we were looking at the",
    "start": "2011110",
    "end": "2017900"
  },
  {
    "text": "one that was written in partial and bash we're now going to look at the one that is has started rewriting and going just",
    "start": "2017900",
    "end": "2025640"
  },
  {
    "text": "a little branch let me just get that checked out",
    "start": "2025640",
    "end": "2029710"
  },
  {
    "text": "so that's just the GV vendor command as you can see for the GB vendor list those",
    "start": "2042240",
    "end": "2049919"
  },
  {
    "text": "are all the packages that I'm using in in this version of svm as you can see",
    "start": "2049919",
    "end": "2059760"
  },
  {
    "text": "they're quite a few and those are the",
    "start": "2059760",
    "end": "2067408"
  },
  {
    "text": "actual packages with in gb list will",
    "start": "2067409",
    "end": "2072990"
  },
  {
    "text": "actually list the packages that are mine so the vendor list will list all the vendor packages and the list will list",
    "start": "2072990",
    "end": "2078628"
  },
  {
    "text": "all the packages that are mon just to show you what this actually looks like pull it up and code again",
    "start": "2078629",
    "end": "2086570"
  },
  {
    "text": "so we've got our code in here and the source the commander is with the",
    "start": "2097500",
    "end": "2103380"
  },
  {
    "text": "packages I'm using command the package I'm the libraries i'm using expect the",
    "start": "2103380",
    "end": "2109410"
  },
  {
    "text": "exe to be in command so that's why this structure has been in force that's not a go-go standard and then all my scripts",
    "start": "2109410",
    "end": "2115050"
  },
  {
    "text": "es libraries are inside there does all the functionality I'm writing and in the vendor folder those are all the third",
    "start": "2115050",
    "end": "2121650"
  },
  {
    "text": "party libraries I've pulled in the way it manages all of this is with a",
    "start": "2121650",
    "end": "2127560"
  },
  {
    "text": "manifest so it will actually show you all your dependencies show you the link in github that are pulled it from and",
    "start": "2127560",
    "end": "2133740"
  },
  {
    "text": "the actual revision and the branch so this is still not proper package management with versioning but it's",
    "start": "2133740",
    "end": "2140100"
  },
  {
    "text": "getting close where you can actually restore and rebuild and actually have a fixed point in time and it's separate",
    "start": "2140100",
    "end": "2145680"
  },
  {
    "text": "from all the other from all the other stuff in your workspace",
    "start": "2145680",
    "end": "2150590"
  },
  {
    "text": "if we go back here I'm just going to do a gb build all on the sum and thus go",
    "start": "2159859",
    "end": "2165599"
  },
  {
    "text": "project you can see it's rebuilding all the stuff get this to the top of the",
    "start": "2165599",
    "end": "2175230"
  },
  {
    "text": "screen if i run the svm thing it's",
    "start": "2175230",
    "end": "2182400"
  },
  {
    "text": "looking a little more tidy you can see we've got it there and then run a",
    "start": "2182400",
    "end": "2188910"
  },
  {
    "text": "command this is just showing that I've",
    "start": "2188910",
    "end": "2193980"
  },
  {
    "text": "just compiled the binary and again the environment variables work so if i set",
    "start": "2193980",
    "end": "2201960"
  },
  {
    "text": "it up to be linux Dorjee be bold again",
    "start": "2201960",
    "end": "2207828"
  },
  {
    "text": "and see that's actually created a svm not an SVM exe go back to you you've",
    "start": "2210890",
    "end": "2220559"
  },
  {
    "text": "been to the other one",
    "start": "2220559",
    "end": "2224420"
  },
  {
    "text": "here",
    "start": "2225960",
    "end": "2228960"
  },
  {
    "text": "this some so gb actually does a bit of naming it's no longer in a folder called",
    "start": "2237900",
    "end": "2243270"
  },
  {
    "text": "Linux AMD it actually renames the the binary just so it's clear all the binaries that is better which",
    "start": "2243270",
    "end": "2249120"
  },
  {
    "text": "architecture they they're related to as you can see it's exactly the same",
    "start": "2249120",
    "end": "2256369"
  },
  {
    "text": "so some really cool things around the language that i also found along the journey if you look at go code that most",
    "start": "2269700",
    "end": "2279270"
  },
  {
    "text": "well it is idiomatic everything has multiple return values so if you've come from a scripting background I come from",
    "start": "2279270",
    "end": "2287160"
  },
  {
    "text": "a long time ago from a pill background and their everything had multiple return values in c-sharp most thing is a single",
    "start": "2287160",
    "end": "2294510"
  },
  {
    "text": "return value you can emulate this with a struct or an object but ingo you will",
    "start": "2294510",
    "end": "2299670"
  },
  {
    "text": "always see multiple return values coming back so an example of this this is one of the functions I've written in svm is",
    "start": "2299670",
    "end": "2308280"
  },
  {
    "text": "to check if a path that I'm given as a directory and see here the OS library",
    "start": "2308280",
    "end": "2314700"
  },
  {
    "text": "status give me a file info object I'm getting the file info and the arrow back so if there's an error error won't be",
    "start": "2314700",
    "end": "2321300"
  },
  {
    "text": "null if there is an error it won't be known so we can do that check in return",
    "start": "2321300",
    "end": "2329420"
  },
  {
    "text": "there's another way of looking at this if you're not interested in the one of",
    "start": "2329420",
    "end": "2335550"
  },
  {
    "text": "the parameters you can use the thing called the blank identifier and that's the sense you just swallows swallows the",
    "start": "2335550",
    "end": "2341640"
  },
  {
    "text": "variable so you don't have to create a variable to contain it another",
    "start": "2341640",
    "end": "2348930"
  },
  {
    "text": "interesting concept is something called defer the defer keyword what this does",
    "start": "2348930",
    "end": "2354570"
  },
  {
    "text": "is behaves very similarly to finally in c-sharp as you can see here we've opened",
    "start": "2354570",
    "end": "2360960"
  },
  {
    "text": "a file and defers often used to close file handles closed network connections",
    "start": "2360960",
    "end": "2366320"
  },
  {
    "text": "so the thing I really like about this is that you put the defer right next to the",
    "start": "2366320",
    "end": "2371730"
  },
  {
    "text": "open so it's not in a finally block where you might forget about it you put it right here and when this is compiled",
    "start": "2371730",
    "end": "2378360"
  },
  {
    "text": "defer will always be called when this function exits so if it exits here or",
    "start": "2378360",
    "end": "2383550"
  },
  {
    "text": "here if there's an errand it exits this will always be called but the fact that it's close to the actual open means it",
    "start": "2383550",
    "end": "2389820"
  },
  {
    "text": "makes your code more readable and then you'll hear that go has no parameter no",
    "start": "2389820",
    "end": "2396330"
  },
  {
    "text": "exceptions as I said the guidance is to",
    "start": "2396330",
    "end": "2401640"
  },
  {
    "text": "provide multiple return Early's so most of the errors come back as part of that multiple return value",
    "start": "2401640",
    "end": "2407400"
  },
  {
    "text": "stream within packages you should only return errors you should never throw",
    "start": "2407400",
    "end": "2415319"
  },
  {
    "text": "there is a way to throw and that's what the panic keyword is panic really just means die there is a way to recover from",
    "start": "2415319",
    "end": "2424529"
  },
  {
    "text": "that using the defer keyword so if you panic it will essentially just exit the",
    "start": "2424529",
    "end": "2430769"
  },
  {
    "text": "the function walk up the stack and call the defers on any of the the functions",
    "start": "2430769",
    "end": "2438119"
  },
  {
    "text": "all the modules above it as I said the guidance is do not panic do not leak",
    "start": "2438119",
    "end": "2443880"
  },
  {
    "text": "panics across package boundaries you can you can use panics within your your",
    "start": "2443880",
    "end": "2449430"
  },
  {
    "text": "modules or your packages but the the guidance is a package should always return a value return an error just just",
    "start": "2449430",
    "end": "2456900"
  },
  {
    "text": "that everything is consistent this is an interesting use of defer here which can",
    "start": "2456900",
    "end": "2463049"
  },
  {
    "text": "actually behave like a catch from Java and from C sharp so this defer function",
    "start": "2463049",
    "end": "2469499"
  },
  {
    "text": "will always be called before this main exit so you can actually catch all your exceptions and then chillin you may have",
    "start": "2469499",
    "end": "2479009"
  },
  {
    "text": "noticed though i was using vs code so everyone everyone using vs code or",
    "start": "2479009",
    "end": "2484079"
  },
  {
    "text": "visual still there awesome it's a really really great like way to editor so",
    "start": "2484079",
    "end": "2490349"
  },
  {
    "text": "there's a vs code go plugin and it gives you everything you need gives you some tax highlighting all the tools you'll",
    "start": "2490349",
    "end": "2498150"
  },
  {
    "text": "very your mileage may vary because most of this assumes go path is set and the",
    "start": "2498150",
    "end": "2503849"
  },
  {
    "text": "workspace is there so most of it works for me I get syntax highlighting it and",
    "start": "2503849",
    "end": "2510900"
  },
  {
    "text": "a bit of functionality but a lot of these utilities may not work if you don't use go path or the the workspace",
    "start": "2510900",
    "end": "2519380"
  },
  {
    "text": "you can also configure it as there's a whole bunch of settings typically what I",
    "start": "2519380",
    "end": "2525599"
  },
  {
    "text": "do right on the bottom there I'll always put my project path into go path so go",
    "start": "2525599",
    "end": "2532859"
  },
  {
    "text": "path what I didn't mention right in the beginning is go path is not single it doesn't only need to take a",
    "start": "2532859",
    "end": "2538849"
  },
  {
    "text": "single a single path it can take multiple paths but that's not how you",
    "start": "2538849",
    "end": "2546559"
  },
  {
    "text": "mean to use it it's always mean to be a work space but for this this utility i put into vs code settings which means it",
    "start": "2546559",
    "end": "2553009"
  },
  {
    "text": "stays with this project it's not vs code wide and i actually add the project path",
    "start": "2553009",
    "end": "2558109"
  },
  {
    "text": "in the beginning of the go path just so that more things work within the",
    "start": "2558109",
    "end": "2563329"
  },
  {
    "text": "application i'm not sure if you notice",
    "start": "2563329",
    "end": "2569539"
  },
  {
    "text": "some of the fonts or i might show you again shortly Fira code is also a great",
    "start": "2569539",
    "end": "2578450"
  },
  {
    "text": "thing if you're using go or any other application that uses interesting fonts like not equals to greater than the",
    "start": "2578450",
    "end": "2587599"
  },
  {
    "text": "comments what what this font does it adds ligatures so it'll actually re-render the fonts underneath the s key",
    "start": "2587599",
    "end": "2594230"
  },
  {
    "text": "is still the same the ASCII codes but the rendering is different and you can",
    "start": "2594230",
    "end": "2599269"
  },
  {
    "text": "use us with Visual Studio code there's there's just a selection of what it can",
    "start": "2599269",
    "end": "2606019"
  },
  {
    "text": "actually give you it makes some of the content actually more readable and it's",
    "start": "2606019",
    "end": "2611569"
  },
  {
    "text": "as easy as that in Visual Studio code and your settings your user settings to add the font family fairy code and font",
    "start": "2611569",
    "end": "2618440"
  },
  {
    "text": "ligatures true and that will actually do that for you so just to wrap up some of",
    "start": "2618440",
    "end": "2626329"
  },
  {
    "text": "the important takeaways from this are go is incredibly incredibly powerful",
    "start": "2626329",
    "end": "2632539"
  },
  {
    "text": "language it generates static binary statically linked binary is a single binary you can target multiple platforms",
    "start": "2632539",
    "end": "2639410"
  },
  {
    "text": "multiple operating systems it's really easy to use but the the things that you",
    "start": "2639410",
    "end": "2645200"
  },
  {
    "text": "really need to watch out for is the workspace if you have a single project probably won't bite you as much but as",
    "start": "2645200",
    "end": "2652279"
  },
  {
    "text": "soon as you start having multiple projects the the pollution within their starts becoming a bit overwhelming thank",
    "start": "2652279",
    "end": "2660109"
  },
  {
    "text": "you any questions nope yeah do you want the",
    "start": "2660109",
    "end": "2675070"
  },
  {
    "text": "mic I'm new we saw go could you just",
    "start": "2675070",
    "end": "2680320"
  },
  {
    "text": "explain a couple of what was the the benefice to use go vs like dotnet or Java what's the occasion why so that I",
    "start": "2680320",
    "end": "2690160"
  },
  {
    "text": "mean did you have to look at your own use case for for me my primary driver",
    "start": "2690160",
    "end": "2696700"
  },
  {
    "text": "was to have a single binary so with with Java would have still had 'old well you",
    "start": "2696700",
    "end": "2703240"
  },
  {
    "text": "may have had jar files but I wasn't interested in writing and in Java with C sharp i would have had all the",
    "start": "2703240",
    "end": "2709480"
  },
  {
    "text": "additional packages all the nuget packages coming out actually did consider dotnet native at one point but",
    "start": "2709480",
    "end": "2717010"
  },
  {
    "text": "it wasn't quite right and it wasn't quite ready at that point i'd still don't know if it quite is when I looked",
    "start": "2717010",
    "end": "2725020"
  },
  {
    "text": "at it you could literally only compiler hello world and not much beyond that once it is ready i might actually",
    "start": "2725020",
    "end": "2730620"
  },
  {
    "text": "rewrite this again yeah does it does that answer your question yes mr. kids",
    "start": "2730620",
    "end": "2738340"
  },
  {
    "text": "by kids I yeah yeah exactly yeah",
    "start": "2738340",
    "end": "2742770"
  },
  {
    "text": "anyone else",
    "start": "2744640",
    "end": "2747750"
  },
  {
    "text": "well good cool thanks thanks everyone",
    "start": "2750890",
    "end": "2757369"
  }
]