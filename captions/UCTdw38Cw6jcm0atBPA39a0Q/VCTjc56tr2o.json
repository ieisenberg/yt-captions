[
  {
    "text": "all right let me check with the AV guys if I'm ready to go yeah okay good",
    "start": "4640",
    "end": "10719"
  },
  {
    "text": "morning everybody thank you so much for joining me here uh at this session um my",
    "start": "10719",
    "end": "16278"
  },
  {
    "text": "name is samp this is actually my first time here in Porto I'm really enjoying",
    "start": "16279",
    "end": "21519"
  },
  {
    "text": "it even though I got really soaked in the rain a couple of times um so the",
    "start": "21519",
    "end": "26720"
  },
  {
    "text": "next 60 minutes or so we're going to talk about Microsoft orans which is a",
    "start": "26720",
    "end": "32000"
  },
  {
    "text": "dist a framework for building distributed applications or at least help you uh make it easier to build the",
    "start": "32000",
    "end": "38239"
  },
  {
    "text": "super applications and with these types of technical sessions I always think",
    "start": "38239",
    "end": "43800"
  },
  {
    "text": "it's really helpful to have an example scenario in mind and my example scenario is going to be based around this thing",
    "start": "43800",
    "end": "49719"
  },
  {
    "text": "called the b in Dutch um so what this is this is an event that's being held in",
    "start": "49719",
    "end": "56680"
  },
  {
    "text": "the at the village where I live and it is basically a pop so what you do is you go visit",
    "start": "56680",
    "end": "62519"
  },
  {
    "text": "participating bars and restaurants and you drink beer at those venues and get a",
    "start": "62519",
    "end": "67640"
  },
  {
    "text": "little snack on the side um and they serve a special type of beer called bu beer so imagine my surprise arriving",
    "start": "67640",
    "end": "75759"
  },
  {
    "text": "here from the Netherlands going out into the departure Hall at the airport and seeing all of these signs of Super Bug",
    "start": "75759",
    "end": "83200"
  },
  {
    "text": "so this a very nice beer I've had a couple uh last Wednesday uh but it's not",
    "start": "83200",
    "end": "89200"
  },
  {
    "text": "the type of beer I'm talking about so this is a typical Locker although they have couple of variations I think they",
    "start": "89200",
    "end": "96040"
  },
  {
    "text": "have a red beer and a stout as well uh but the type of beer that's uh that we drink at these",
    "start": "96040",
    "end": "102159"
  },
  {
    "text": "events is uh a type of beer that originated in Germany and that started",
    "start": "102159",
    "end": "108520"
  },
  {
    "text": "in the 14th century in this Village called einbeck and they start brewing this beer",
    "start": "108520",
    "end": "114680"
  },
  {
    "text": "and it's a a kind of dark strong logger beer it's a little bit sweet and it's",
    "start": "114680",
    "end": "119920"
  },
  {
    "text": "usely has like a 7% maybe a bit more alcohol percentage um and then a couple of",
    "start": "119920",
    "end": "127320"
  },
  {
    "text": "centuries later in the 17th century the Bavarian Brewers in Munich they also started uh making this recipe but",
    "start": "127320",
    "end": "135319"
  },
  {
    "text": "because of their accent they started pronouncing it as INB instead of INB so",
    "start": "135319",
    "end": "141800"
  },
  {
    "text": "this is where the name bbear comes from and a bug meaning uh literally a billy",
    "start": "141800",
    "end": "147000"
  },
  {
    "text": "coat in English and that's also why you see a lot of these codes still in the logos on these type of beers so this is",
    "start": "147000",
    "end": "155040"
  },
  {
    "text": "a really fun event um that beer was a seasonal beer it was typically brewing in the Autumn and the spring to align",
    "start": "155040",
    "end": "162040"
  },
  {
    "text": "with some of the Christian religion uh holidays like Christmas and lent um so in my Village we have two of these",
    "start": "162040",
    "end": "168599"
  },
  {
    "text": "events one in the Autumn which is actually taking place this Saturday so I'm going there straight from the",
    "start": "168599",
    "end": "173640"
  },
  {
    "text": "airport uh we looking forward to that and we also have fun in in spring now I",
    "start": "173640",
    "end": "179239"
  },
  {
    "text": "thought how can we make this already create event even better well I'm a tech nerd maybe we can write an app for it so",
    "start": "179239",
    "end": "186360"
  },
  {
    "text": "this is what I have in mind so this is the B app or the PFF CW app if you want to be more General uh and I'm definitely",
    "start": "186360",
    "end": "193640"
  },
  {
    "text": "not an app designer but bear with me here so at the top we could have something like a map showing you all of",
    "start": "193640",
    "end": "200640"
  },
  {
    "text": "the events all of the restaurants and bars that you can visit and maybe on top of those locations we can um draw a",
    "start": "200640",
    "end": "208720"
  },
  {
    "text": "number to indicate how crowded it is at a specific place so you can decide where you want to go next and then below that",
    "start": "208720",
    "end": "216120"
  },
  {
    "text": "we can have this leaderboard or or ranked list of all the best beers in a venue so that will help you make some",
    "start": "216120",
    "end": "223080"
  },
  {
    "text": "tough decisions about what to order next because all of these restaurants will serve different types of beers now when",
    "start": "223080",
    "end": "229760"
  },
  {
    "text": "you click on a location in the map that will take you to this second more detailed page where we can see the venue name have this big button to check in or",
    "start": "229760",
    "end": "237079"
  },
  {
    "text": "check out and then below that you can see the uh basically the beer menu so what kind of beers do they serve there",
    "start": "237079",
    "end": "243439"
  },
  {
    "text": "along with some thumbs up and thumbs down icons to rate that beer now if I were to really build this",
    "start": "243439",
    "end": "251000"
  },
  {
    "text": "app and use it for the event in my hometown I could run the back end for",
    "start": "251000",
    "end": "257040"
  },
  {
    "text": "this application easily on my laptop right it's it's not a big event there are maybe a thousand people probably",
    "start": "257040",
    "end": "264199"
  },
  {
    "text": "even less than that so uh my this this MacBook it wouldn't break out a sweat running that back",
    "start": "264199",
    "end": "271080"
  },
  {
    "text": "but we can be a bit more ambitious here so let's say that instead of just running these tiny puny events we go for",
    "start": "271080",
    "end": "277720"
  },
  {
    "text": "world domination and we make this into a global multi-tenant SAS platform to",
    "start": "277720",
    "end": "283280"
  },
  {
    "text": "empower all persons all over the world to organize these pop events so now",
    "start": "283280",
    "end": "289000"
  },
  {
    "text": "things are changing because now at every one time uh there could be a lot of these events going on at the same time",
    "start": "289000",
    "end": "296160"
  },
  {
    "text": "and it will probably my laptop won't be enough anymore to all of those events so",
    "start": "296160",
    "end": "301280"
  },
  {
    "text": "we need to scale out so our little app is turning into a distributed system and",
    "start": "301280",
    "end": "307720"
  },
  {
    "text": "that is not necessarily good news because building distributed systems can be pretty hard there are a couple of",
    "start": "307720",
    "end": "312880"
  },
  {
    "text": "challenges that we'll have to deal with so I'll list a few on the slide so first",
    "start": "312880",
    "end": "318080"
  },
  {
    "text": "of all we need to scale this up but how are we going to scale that in an even way right we want an even uh load across",
    "start": "318080",
    "end": "324880"
  },
  {
    "text": "all of those notes we don't want to introduce single bottlenecks anywhere and then if one of those nodes fill how",
    "start": "324880",
    "end": "331600"
  },
  {
    "text": "are we going to deal with that how are we going to recover gracefully from that scenario and of course we have to look",
    "start": "331600",
    "end": "337440"
  },
  {
    "text": "at performance um so if you look at scaling out CPU intensive tasks that is",
    "start": "337440",
    "end": "343479"
  },
  {
    "text": "relatively easy you can just add more CPUs add more cores but what often happens in these kind of scenarios is",
    "start": "343479",
    "end": "349840"
  },
  {
    "text": "that the storage layer becomes the bottleneck so your database gets hit too hard so there are some ways to deal with",
    "start": "349840",
    "end": "357319"
  },
  {
    "text": "that U you could for instance introd produce reddits like distributed gas into your solution but now we have to",
    "start": "357319",
    "end": "363600"
  },
  {
    "text": "think about oh how are we going to deal with um stale caches and cach inv",
    "start": "363600",
    "end": "369199"
  },
  {
    "text": "validation stuff like that and then when we have updates on the database coming from different clients connected to",
    "start": "369199",
    "end": "375039"
  },
  {
    "text": "different servers how are we going to deal with that concurrency make sure that we have uh a correct concurrent",
    "start": "375039",
    "end": "380919"
  },
  {
    "text": "system there now fortunately uh probably this won't come as a surprise but or can",
    "start": "380919",
    "end": "386800"
  },
  {
    "text": "help us solve some of these problems so what's Orleans Orleans is a framework for building distributed applications it",
    "start": "386800",
    "end": "393840"
  },
  {
    "text": "originated within Microsoft research uh back in 2015 so it's been around for a",
    "start": "393840",
    "end": "399000"
  },
  {
    "text": "while it's been used in real world in pretty big uh Solutions uh most famously",
    "start": "399000",
    "end": "404479"
  },
  {
    "text": "it's been used in the Halo 4 and five video games um and more recently it was",
    "start": "404479",
    "end": "410599"
  },
  {
    "text": "uh being brought into the net team uh and they also bumped up the version number so orans was previously on",
    "start": "410599",
    "end": "416319"
  },
  {
    "text": "version number three but now with the um move to net there at seven to be aligned",
    "start": "416319",
    "end": "422120"
  },
  {
    "text": "with the net version numbers and the big idea here is that they try to abstract away many of the complexities of",
    "start": "422120",
    "end": "429000"
  },
  {
    "text": "distributed system so that we as net developers can simply focus on writing our business logic and we don't have to",
    "start": "429000",
    "end": "435400"
  },
  {
    "text": "worry about all the nitty-gritty details going on to face those scalability uh",
    "start": "435400",
    "end": "440599"
  },
  {
    "text": "issues and it does that using this uh model called the active model uh but it",
    "start": "440599",
    "end": "446759"
  },
  {
    "text": "has some Innovations on top of the original AC model which are really",
    "start": "446759",
    "end": "452319"
  },
  {
    "text": "interesting so before we dive into um those uh those Innovations let's take a",
    "start": "452319",
    "end": "458639"
  },
  {
    "text": "step back and look at what is the actor model so the actor model has been around for a while even longer than orans has",
    "start": "458639",
    "end": "464960"
  },
  {
    "text": "it was uh originally corned in 1973 it was proposed by call U as a",
    "start": "464960",
    "end": "471280"
  },
  {
    "text": "model of concurrence computation so that's a form of computing where a lot of things happen at the same time so",
    "start": "471280",
    "end": "476720"
  },
  {
    "text": "there's a lot of concurrency and inside the actor model the Primitive that you work with is the",
    "start": "476720",
    "end": "483360"
  },
  {
    "text": "actor and an actor you can kind of think of it as uh a distributed object so uh",
    "start": "483360",
    "end": "489479"
  },
  {
    "text": "it's similar to an object in that net but it isn't tied to a single surf it can live on any of the surface in your",
    "start": "489479",
    "end": "496319"
  },
  {
    "text": "distributed system so each actor well you start off by defining your actor",
    "start": "496319",
    "end": "501479"
  },
  {
    "text": "types right just like you define classes for objects so let's say that I want an",
    "start": "501479",
    "end": "506639"
  },
  {
    "text": "actor to represent a single participant in an event so I'm going to call that",
    "start": "506639",
    "end": "511919"
  },
  {
    "text": "actor a calller and then we can have instances of this calller type so let's say Jane",
    "start": "511919",
    "end": "518039"
  },
  {
    "text": "is participating in our event um then that actor has an identity or a key uh",
    "start": "518039",
    "end": "524680"
  },
  {
    "text": "which is Jane uh so that we can address it uh the actor can also have some",
    "start": "524680",
    "end": "529880"
  },
  {
    "text": "Behavior which is our business logic that we're going to write and it can optionally have some State some",
    "start": "529880",
    "end": "535720"
  },
  {
    "text": "persisted state so maybe we want to track where everybody is in this event and we can store the location inside",
    "start": "535720",
    "end": "542040"
  },
  {
    "text": "each actor that state by the way is completely private so the other actors",
    "start": "542040",
    "end": "547399"
  },
  {
    "text": "cannot access it directly just like you would have a private field inside an",
    "start": "547399",
    "end": "552480"
  },
  {
    "text": "object now we can have um some more instances of this actor type so we have",
    "start": "552480",
    "end": "557920"
  },
  {
    "text": "Bob Jan John and Alice and then we can also add a different types so let's add a drinking venue type to represent the",
    "start": "557920",
    "end": "565240"
  },
  {
    "text": "drinking venues where we want to go to so we have two here the pops up pop and the foar uh so now how are these actors",
    "start": "565240",
    "end": "571880"
  },
  {
    "text": "going to interact with each other well they do that using uh messaging so they can send messages to each other and now",
    "start": "571880",
    "end": "579560"
  },
  {
    "text": "something else uh that pops up is concurrency because let's say that John and Alice both want to make a call to",
    "start": "579560",
    "end": "587240"
  },
  {
    "text": "the drinking venue uh Fubar um those calls can come in at the same time and",
    "start": "587240",
    "end": "594279"
  },
  {
    "text": "normally you would have to deal with multi trading and create or use a locks or semaphor or stuff like that to make",
    "start": "594279",
    "end": "600839"
  },
  {
    "text": "sure your code is correct but the ACT model uh uses a different way to do that",
    "start": "600839",
    "end": "606760"
  },
  {
    "text": "it uses a a turn-based AIS model or a single threaded AIS model so what",
    "start": "606760",
    "end": "612120"
  },
  {
    "text": "happens is that let's say that Bob wants to check out and inside that",
    "start": "612120",
    "end": "618600"
  },
  {
    "text": "drinking venue actor we want to keep a counter because we want to know how many people are check",
    "start": "618600",
    "end": "624640"
  },
  {
    "text": "in so what the actor model will give you is with this turn based access model",
    "start": "624640",
    "end": "630120"
  },
  {
    "text": "one of these requests can go first so let's say uh Jane is lucky she can go",
    "start": "630120",
    "end": "635240"
  },
  {
    "text": "first and while Janee turn is happening so while the business logic is running",
    "start": "635240",
    "end": "640279"
  },
  {
    "text": "for the to handle that request the request coming in from Bob is simply blocked so it's waiting in a queue and",
    "start": "640279",
    "end": "647040"
  },
  {
    "text": "only after Jane's turn has been completed then Bob gets a chance to run",
    "start": "647040",
    "end": "652760"
  },
  {
    "text": "his request and that will um also go through so this makes it very easy to",
    "start": "652760",
    "end": "658360"
  },
  {
    "text": "write a business lot inside that actor because you don't have to worry about multiple threads running your code at",
    "start": "658360",
    "end": "664000"
  },
  {
    "text": "the same time that makes it really much easier to build correct concurrence",
    "start": "664000",
    "end": "669720"
  },
  {
    "text": "logic so that's very nice um there are a couple of act model implementations",
    "start": "669720",
    "end": "674760"
  },
  {
    "text": "throughout the years um there was um ah I can't remember the name does",
    "start": "674760",
    "end": "682600"
  },
  {
    "text": "anybody know the name of the first implementation that was still erlang",
    "start": "682600",
    "end": "688079"
  },
  {
    "text": "yeah erling thank you so much that was the the earliest implementation it's still in use today but it's mostly in",
    "start": "688079",
    "end": "694399"
  },
  {
    "text": "the Telecommunications uh sector anybody from the telecomunication sector is still using earling air today yeah well",
    "start": "694399",
    "end": "701440"
  },
  {
    "text": "maybe um there are a couple of other implementations on the yafa Scala side",
    "start": "701440",
    "end": "707120"
  },
  {
    "text": "we have AKA and there's also a very nice Port called aka. net for.net um and because aa. net and orans",
    "start": "707120",
    "end": "714399"
  },
  {
    "text": "both tet. net developers thought would be nice to look at some of the um",
    "start": "714399",
    "end": "719480"
  },
  {
    "text": "biggest differences between these two so aka. net is out would say a really pure",
    "start": "719480",
    "end": "725160"
  },
  {
    "text": "implementation of the actor model uh you have uh a lot of control of when you",
    "start": "725160",
    "end": "730560"
  },
  {
    "text": "create your actor when you destroy it where on which surf you want to run your actor stuff like that and within acad",
    "start": "730560",
    "end": "736519"
  },
  {
    "text": "NET Framework all the actors live inside this tree hierarchy which is called a superfici tree so at the top here you",
    "start": "736519",
    "end": "743360"
  },
  {
    "text": "have your root actor which is always there because hey the tree needs to have a root uh and below that we you have a",
    "start": "743360",
    "end": "748880"
  },
  {
    "text": "use actor and a system actor now below the system actor uh there are some",
    "start": "748880",
    "end": "754079"
  },
  {
    "text": "actors which are used by ala. net internally which we don't have to worry about but below the user actor you can",
    "start": "754079",
    "end": "759839"
  },
  {
    "text": "start adding your own actor types so what I've done here I've added an actor type to represent uh an event so we've",
    "start": "759839",
    "end": "765920"
  },
  {
    "text": "got event A and B and below that we have some drinking venues and some crawlers now let's say that we want to check in",
    "start": "765920",
    "end": "773399"
  },
  {
    "text": "again so Jane wants to check into the drinking venue now with aka. net what typically happens you use a tell",
    "start": "773399",
    "end": "780639"
  },
  {
    "text": "semantic so that is one-way messaging so Jane sends a message to the pops up pup",
    "start": "780639",
    "end": "787040"
  },
  {
    "text": "but is basically just fire and forget so what do we do if something goes wrong inside that puffs up pup",
    "start": "787040",
    "end": "794040"
  },
  {
    "text": "actor right because there's no way in a firing for cat um uh pattern to send",
    "start": "794040",
    "end": "800600"
  },
  {
    "text": "back an error to Jane so what usually happens in aa. net is they use this tree",
    "start": "800600",
    "end": "806560"
  },
  {
    "text": "to resolve those issues so if an error occurs in a child actor the framework will ask the parent actor so in this",
    "start": "806560",
    "end": "813560"
  },
  {
    "text": "case the uh event a actor hey a child just uh had an error so what should we",
    "start": "813560",
    "end": "819639"
  },
  {
    "text": "do with it should we ignore it or maybe restart it um or there are a couple of",
    "start": "819639",
    "end": "826440"
  },
  {
    "text": "strategies maybe just continue so event a can decide what should happen and if",
    "start": "826440",
    "end": "831600"
  },
  {
    "text": "EV event a doesn't know it can escalate all the way up the tree now if we compare that with or or",
    "start": "831600",
    "end": "839880"
  },
  {
    "text": "then first of all actors in Orleans aren't even called actors they are called cringe um and Orleans generally tries to",
    "start": "839880",
    "end": "848839"
  },
  {
    "text": "abstract away more of the details than aa. net so in Orleans you don't have to",
    "start": "848839",
    "end": "854600"
  },
  {
    "text": "explicitly create or destroy cranes you can just kind of assume every crane you",
    "start": "854600",
    "end": "860120"
  },
  {
    "text": "ever want to call is simply there somewhere so this is called the virtual actor model and what happens these",
    "start": "860120",
    "end": "867040"
  },
  {
    "text": "cranes will cod for a life cycle so the first time that you send a request to a crane you simply uh think of an ID and",
    "start": "867040",
    "end": "874000"
  },
  {
    "text": "you send a request to to a crane with it ID if it doesn't exist yet then Orleans",
    "start": "874000",
    "end": "880199"
  },
  {
    "text": "will create it for you that is called activating the crane and it will choose",
    "start": "880199",
    "end": "885240"
  },
  {
    "text": "a server to to do that on and it will um take care to balance the load across all of the",
    "start": "885240",
    "end": "890800"
  },
  {
    "text": "servers so once your crane is activated now it's ready to handle requests and it",
    "start": "890800",
    "end": "896839"
  },
  {
    "text": "will run its business logic but then after a while if there are no more outside requests coming in this crane",
    "start": "896839",
    "end": "904360"
  },
  {
    "text": "can be cleaned up to save some memory so it will be deactivated by the by the",
    "start": "904360",
    "end": "909759"
  },
  {
    "text": "runtime but any state that you've stored in uh while you were working in that",
    "start": "909759",
    "end": "915079"
  },
  {
    "text": "Crane That is safely persisted to disk so the next time this crane is activated that state will be reloaded from disk",
    "start": "915079",
    "end": "922480"
  },
  {
    "text": "and your cran will continue as if nothing has",
    "start": "922480",
    "end": "927560"
  },
  {
    "text": "happened so if you look at messaging in Orleans um that's that looks much more",
    "start": "927560",
    "end": "933480"
  },
  {
    "text": "like just a remote method implication so Orleans uses simply asyn weight methods um so if crawler Alis wants to check in",
    "start": "933480",
    "end": "941480"
  },
  {
    "text": "into a drinking venue she simply calls that method on the drinking venue and now error handling is also much easier",
    "start": "941480",
    "end": "948319"
  },
  {
    "text": "because if an error occurs then the drinking F can simply send an exception and that can be caught inside the",
    "start": "948319",
    "end": "954600"
  },
  {
    "text": "calling Crane and you can handle it directly right there and that even works across serers so these cranes can be on",
    "start": "954600",
    "end": "960839"
  },
  {
    "text": "totally different servers on different sides of the world and that all that information just serialized and",
    "start": "960839",
    "end": "966240"
  },
  {
    "text": "deserialized so you don't need to worry about it all right so um maybe just to recap",
    "start": "966240",
    "end": "975440"
  },
  {
    "text": "um akka.net I think is it's a more pure implementation it gives you much more control but that also comes with much",
    "start": "975440",
    "end": "982440"
  },
  {
    "text": "more responsibility right there are many more different things to manage whereas Orin doesn't give you as much control",
    "start": "982440",
    "end": "989120"
  },
  {
    "text": "but it's really it model it's just so familiar for theet developers it's really easy to get started",
    "start": "989120",
    "end": "995880"
  },
  {
    "text": "with so let's look at some code Let's uh see how we can implement this crawler crane so when you um create a new crane",
    "start": "995880",
    "end": "1004160"
  },
  {
    "text": "type you start by defining an interface so here's my icer crane interface you can see that I derive from I crane with",
    "start": "1004160",
    "end": "1010920"
  },
  {
    "text": "integer compound key so every crane type needs to have a key and there are a",
    "start": "1010920",
    "end": "1016000"
  },
  {
    "text": "couple of different data types you can use for that you can use a go an integer or a string or a combination of a g and",
    "start": "1016000",
    "end": "1021920"
  },
  {
    "text": "a string or integer with a string now in this case I want my quer crane to represent a single participant within",
    "start": "1021920",
    "end": "1028880"
  },
  {
    "text": "the scope of a single event so that means I have two parts to my key I have",
    "start": "1028880",
    "end": "1034720"
  },
  {
    "text": "the event ID which an integer and I have something that represents the user like a username or email address something",
    "start": "1034720",
    "end": "1041959"
  },
  {
    "text": "that's a string so I use a compound key of integer with a string and then also",
    "start": "1041959",
    "end": "1047640"
  },
  {
    "text": "in this interface Define which methods you can invoke on this crane so we have",
    "start": "1047640",
    "end": "1053720"
  },
  {
    "text": "a checkin async to check in and I pass in drinking venue where we want to check into and I also have a checkout async",
    "start": "1053720",
    "end": "1060799"
  },
  {
    "text": "method now notice these are async AWA because um we may be making Network",
    "start": "1060799",
    "end": "1066320"
  },
  {
    "text": "calls so these uh methods needs to be asynchronous now in this crane I also",
    "start": "1066320",
    "end": "1072360"
  },
  {
    "text": "want to store some State I want to remember where I checked in last so to store that state I'm just creating this",
    "start": "1072360",
    "end": "1079280"
  },
  {
    "text": "simple container class called qua crane State and in that container class I'm storing the reference to the drinking",
    "start": "1079280",
    "end": "1085120"
  },
  {
    "text": "venue where we are currently located okay moving on to the",
    "start": "1085120",
    "end": "1090159"
  },
  {
    "text": "implementation uh you can see my qu crane must derive from crane as the base class uh and then of course I also",
    "start": "1090159",
    "end": "1096919"
  },
  {
    "text": "Implement my interface so how are we going to store that state",
    "start": "1096919",
    "end": "1103280"
  },
  {
    "text": "well this is a really simple solution uh but it's not applicable to all situations right I could has created a",
    "start": "1103280",
    "end": "1109760"
  },
  {
    "text": "private field and now I can store some state but of course this won't survive any",
    "start": "1109760",
    "end": "1115240"
  },
  {
    "text": "deactivations because when my crane is deactivated The carbage Collector comes",
    "start": "1115240",
    "end": "1120440"
  },
  {
    "text": "along throws away my object and all my state is come but in some cases this may",
    "start": "1120440",
    "end": "1126720"
  },
  {
    "text": "uh be enough um I'll show you later a dashboard uh which is uh created uh to",
    "start": "1126720",
    "end": "1132919"
  },
  {
    "text": "have a look at your uh Orin cluster and that uses uh basically private state to",
    "start": "1132919",
    "end": "1138280"
  },
  {
    "text": "to just store the state while you're looking at it and once you refresh all that state is gun but it doesn't matter for the use case but in my case I really",
    "start": "1138280",
    "end": "1145440"
  },
  {
    "text": "want this state to be persisted on dis safely somewhere and one way to do that",
    "start": "1145440",
    "end": "1151880"
  },
  {
    "text": "is to use a built-in persistence mechanism that oin provides now to use",
    "start": "1151880",
    "end": "1157679"
  },
  {
    "text": "that mechanism you inject an instance of ey persistent State into your Constructor and you can see I use the uh",
    "start": "1157679",
    "end": "1164480"
  },
  {
    "text": "State or the container class as the um uhp type",
    "start": "1164480",
    "end": "1170200"
  },
  {
    "text": "parameter and then I have this state object and on the state object I have methods to read and write State very",
    "start": "1170200",
    "end": "1176799"
  },
  {
    "text": "simple now I've also decorated this with a persistent State attribute to give a name to this state and the reason why I",
    "start": "1176799",
    "end": "1182840"
  },
  {
    "text": "do that is I can inject multiple State parameters inside this Constructor and",
    "start": "1182840",
    "end": "1189039"
  },
  {
    "text": "then you need some way to distinguish between them you can also use that attribute to specify which kind of",
    "start": "1189039",
    "end": "1195720"
  },
  {
    "text": "underlying data store you want to use to actually store all the all the bits and bites um I'm not doing that here and",
    "start": "1195720",
    "end": "1202240"
  },
  {
    "text": "that means just use whatever is the default and you can set up the default in your uh startup code there are a",
    "start": "1202240",
    "end": "1208320"
  },
  {
    "text": "couple of options uh you can use uh anything that understands ado.net you can use aure storage uh you can use",
    "start": "1208320",
    "end": "1215480"
  },
  {
    "text": "custos DB or you can use Amazon uh Dynamo DB but it's also not very difficult to to add your own",
    "start": "1215480",
    "end": "1222600"
  },
  {
    "text": "plugin um and you don't even need to use this IP inance state if I want to uh",
    "start": "1222600",
    "end": "1230159"
  },
  {
    "text": "let's say I want to use Entity framework to store my state in a SQL Server I could simply uh inject a DB context here",
    "start": "1230159",
    "end": "1237360"
  },
  {
    "text": "in this Constructor and use that uh but I do think it is nice to use this",
    "start": "1237360",
    "end": "1242720"
  },
  {
    "text": "built-in persistence mechanism because it's very easy to switch between different stores and that makes it easy",
    "start": "1242720",
    "end": "1248320"
  },
  {
    "text": "to use a different data store in your uh development or test environment than you would do in",
    "start": "1248320",
    "end": "1255039"
  },
  {
    "text": "production okay so now we have a way to R and write data we can start implementing those methods so we have",
    "start": "1255039",
    "end": "1261280"
  },
  {
    "text": "our checkin async and this code is a little bit uh simplified compared to the real code but it's the the core",
    "start": "1261280",
    "end": "1268000"
  },
  {
    "text": "principles are here so if we want to check in uh we get pass in that ey drinking venue Crane and that's a",
    "start": "1268000",
    "end": "1275080"
  },
  {
    "text": "special type of object because it's a reference to the crane but it's not the",
    "start": "1275080",
    "end": "1280400"
  },
  {
    "text": "the crane itself because if you think about this the drinking venue Crane That We're referencing may not even exist yet",
    "start": "1280400",
    "end": "1288799"
  },
  {
    "text": "it may be deactivated or it may live on an entirely different server so this is just a proxy object that knows how to",
    "start": "1288799",
    "end": "1297000"
  },
  {
    "text": "find the actual drinking venue crate and what is really nice about these proxy",
    "start": "1297000",
    "end": "1302200"
  },
  {
    "text": "objects is that they are serializable so I can store them in my state it will be",
    "start": "1302200",
    "end": "1308120"
  },
  {
    "text": "serialized I can come back in a month I can deserialize it from State and I can still use that object to call the actual",
    "start": "1308120",
    "end": "1315679"
  },
  {
    "text": "crane so to check in I simply take that that proxy that reference I store it in",
    "start": "1315679",
    "end": "1320880"
  },
  {
    "text": "the state I call right State async and everything is safely persistent in the",
    "start": "1320880",
    "end": "1326640"
  },
  {
    "text": "database and then my checkout method is more of the same only this time we are simply clearing that current venue field",
    "start": "1326640",
    "end": "1333640"
  },
  {
    "text": "um right the state and I'm done all right so let's have a look at",
    "start": "1333640",
    "end": "1340520"
  },
  {
    "text": "uh the real code so I have a visual studio open here um there are three",
    "start": "1340520",
    "end": "1346919"
  },
  {
    "text": "projects in my solution I have a Blazer pop call which contains the front end I have Orleans pop call which is the back",
    "start": "1346919",
    "end": "1353720"
  },
  {
    "text": "end using Orleans and then I also have this simulator um that we're going to use to put some load on the",
    "start": "1353720",
    "end": "1360720"
  },
  {
    "text": "system now if we dive into Orin pop CW I can show you in the cspr file that",
    "start": "1360720",
    "end": "1368760"
  },
  {
    "text": "the only thing you need to get started with Orin is to add a reference to this Microsoft oen server uh package and I",
    "start": "1368760",
    "end": "1375039"
  },
  {
    "text": "also added a reference to oen dashboard which a third party package which uh I'll show you later on if time permit",
    "start": "1375039",
    "end": "1381480"
  },
  {
    "text": "it's very nice to get some insights into your cluster then I have this crane folder",
    "start": "1381480",
    "end": "1388919"
  },
  {
    "text": "and this contains all of my crane implementations so if we quickly look at this crawler crane you can see that",
    "start": "1388919",
    "end": "1395520"
  },
  {
    "text": "interface that I've just shown you on the slides it's a little bit more elaborate here we also have a method to",
    "start": "1395520",
    "end": "1401400"
  },
  {
    "text": "rate a beer and we also have a method to c a current status for a crawler so this",
    "start": "1401400",
    "end": "1407640"
  },
  {
    "text": "will simply return turn a dtl object uh which contains the",
    "start": "1407640",
    "end": "1412919"
  },
  {
    "text": "venue that I'm at and any beer ratings that I've done and the front end needs",
    "start": "1412919",
    "end": "1418799"
  },
  {
    "text": "this to show your to show your current status all right so let's look at the",
    "start": "1418799",
    "end": "1425480"
  },
  {
    "text": "programs yes and look at the startup code let me",
    "start": "1425480",
    "end": "1431799"
  },
  {
    "text": "uh one shortcut let me close this okay so in the startup code I'm calling",
    "start": "1431799",
    "end": "1437440"
  },
  {
    "text": "Builder The Host use orans to get orans up and running uh and here I can do some",
    "start": "1437440",
    "end": "1442559"
  },
  {
    "text": "more advanced configuration so I'm setting up a couple of things I'm adding that dashboard to uh to my cluster I",
    "start": "1442559",
    "end": "1448720"
  },
  {
    "text": "also set up uh Local Host clustering so what that does is when I start multiple",
    "start": "1448720",
    "end": "1454159"
  },
  {
    "text": "instances of the backend process on the single machine it will create a cluster out of those processes right so I can",
    "start": "1454159",
    "end": "1461320"
  },
  {
    "text": "simulate having a a real distributed system with multiple nodes on a single",
    "start": "1461320",
    "end": "1466799"
  },
  {
    "text": "laptop and then I o add a memory crane storage as the default storage so this",
    "start": "1466799",
    "end": "1472559"
  },
  {
    "text": "is for the persistence mechanism and the type that I'm configuring here is just local memory so that means whenever you",
    "start": "1472559",
    "end": "1479360"
  },
  {
    "text": "want to write State just store it in local memory so when I shut down my cluster everything will be gone so",
    "start": "1479360",
    "end": "1485399"
  },
  {
    "text": "that's not something you would use in production uh but it's really useful to use for demos and uh development testing",
    "start": "1485399",
    "end": "1492039"
  },
  {
    "text": "stuff like that then if we uh scroll down a bit uh I have some API calls uh for the for the",
    "start": "1492039",
    "end": "1499880"
  },
  {
    "text": "mobile app to call into and there are two in particular I want to show you there's one for",
    "start": "1499880",
    "end": "1505760"
  },
  {
    "text": "checking in here it is so this route uh takes an event ID where we're participating in",
    "start": "1505760",
    "end": "1513080"
  },
  {
    "text": "and then the venue idea where where we want to check into and if we do a post there um we also get a crawler ID from",
    "start": "1513080",
    "end": "1520320"
  },
  {
    "text": "the header now I didn't bother implementing any authorization or authentication in this sample so you",
    "start": "1520320",
    "end": "1526480"
  },
  {
    "text": "know this in the real world situation this could be like a token containing a user ID claim or something like that but",
    "start": "1526480",
    "end": "1532600"
  },
  {
    "text": "I'm just passing in a string right now and what's also interesting here in this Handler is that you can see this I crane",
    "start": "1532600",
    "end": "1538880"
  },
  {
    "text": "vectory uh so that's a class provided by Orin and you use that to get a reference",
    "start": "1538880",
    "end": "1543919"
  },
  {
    "text": "so to create those proxy objects to call into other cranes so to implement the checkin logic",
    "start": "1543919",
    "end": "1551320"
  },
  {
    "text": "I need to have two cranes right I need to have my quala crane and I need to have the drinking venue Crane and the",
    "start": "1551320",
    "end": "1557120"
  },
  {
    "text": "qua crane I can cat using the event ID and the craa ID and the venue crane I",
    "start": "1557120",
    "end": "1562919"
  },
  {
    "text": "can catch using the event ID and the venue ID and then once I have those references I can call qu cran check in",
    "start": "1562919",
    "end": "1569760"
  },
  {
    "text": "aing and pass in that drinking F crine where I want to check into now I also have some check set up",
    "start": "1569760",
    "end": "1577200"
  },
  {
    "text": "inside the cranes to check hey this venu you want to check into is it even part of this event ID because maybe somebody",
    "start": "1577200",
    "end": "1583720"
  },
  {
    "text": "is trying to hack my API uh so if that happens I throw back a venue not available exception and we can uh",
    "start": "1583720",
    "end": "1590440"
  },
  {
    "text": "respond with a B request otherwise everything is fine and we can",
    "start": "1590440",
    "end": "1596520"
  },
  {
    "text": "continue then we have this other um endpoint to get the data back",
    "start": "1596520",
    "end": "1601880"
  },
  {
    "text": "out so this uh returns that status object that I've just shown you uh very simple endpoint uh we just get a",
    "start": "1601880",
    "end": "1609320"
  },
  {
    "text": "reference to the crawler we ask for the status and we dump that uh back to the to the",
    "start": "1609320",
    "end": "1615320"
  },
  {
    "text": "client all right so let's see this running so I'm going to start the first instance",
    "start": "1615320",
    "end": "1622360"
  },
  {
    "text": "of this back end and as you can see this now runs on Port",
    "start": "1622360",
    "end": "1628720"
  },
  {
    "text": "501 so I'm going to spin up a second note uh but this",
    "start": "1628720",
    "end": "1635240"
  },
  {
    "text": "time I'm going to give it an instance ID of one and all that does is increment Board number by one because I can't have",
    "start": "1635240",
    "end": "1641960"
  },
  {
    "text": "two processes running on the same port number that doesn't work uh so this second one is running on",
    "start": "1641960",
    "end": "1647159"
  },
  {
    "text": "502 so let's call some endpoints I have some prepared HTTP",
    "start": "1647159",
    "end": "1654279"
  },
  {
    "text": "statements here now the first thing we need to do is we need to create an event because the system is completely empty",
    "start": "1654279",
    "end": "1660840"
  },
  {
    "text": "right now and I have a separate endpoint for that we can post to the events and points and I asked chat GPT to generate",
    "start": "1660840",
    "end": "1667960"
  },
  {
    "text": "some data for me so I have a lot of different beers here not all B beers though um and we have some venues so",
    "start": "1667960",
    "end": "1675000"
  },
  {
    "text": "these are the actual venues that I'm going to hopefully visit this today if my plane is not delayed um I have the",
    "start": "1675000",
    "end": "1681600"
  },
  {
    "text": "name of the venue I have the location of the venue and I have the type of beers that I serve there so we can uh post all",
    "start": "1681600",
    "end": "1688679"
  },
  {
    "text": "of this to that endpoint and we simply get back an okay but now we have an event registered in the in the demo",
    "start": "1688679",
    "end": "1696039"
  },
  {
    "text": "environment okay so let's start to call some of those endpoint we've just seen let's start by getting the status now",
    "start": "1696039",
    "end": "1703080"
  },
  {
    "text": "obviously we didn't check in yet we didn't rate any beer so this status is still empty",
    "start": "1703080",
    "end": "1708679"
  },
  {
    "text": "um but notice that I went to note number one right which was running on Port 501 to c",
    "start": "1708679",
    "end": "1715519"
  },
  {
    "text": "a status now let's go to the other note to server number two and check into a",
    "start": "1715519",
    "end": "1722399"
  },
  {
    "text": "venue so I'm going to check into heran which where we usually start I just get back and okay so obviously that worked",
    "start": "1722399",
    "end": "1730600"
  },
  {
    "text": "so now if you go back to server one again and request that status again it should be updated and of course this so",
    "start": "1730600",
    "end": "1737840"
  },
  {
    "text": "you can seees at Heron so this is a very simple demo but in fact it's pretty",
    "start": "1737840",
    "end": "1743080"
  },
  {
    "text": "powerful what's going on here behind the scenes because we are calling that single crane which lives on well maybe",
    "start": "1743080",
    "end": "1750240"
  },
  {
    "text": "it lives on uh server number one or on server number two I don't know but also I don't care because I can reach it from",
    "start": "1750240",
    "end": "1756880"
  },
  {
    "text": "both processes so it's really a distributed object in in that",
    "start": "1756880",
    "end": "1762600"
  },
  {
    "text": "sense so let me quickly shut this down do some clean up",
    "start": "1763039",
    "end": "1769320"
  },
  {
    "text": "here and then go back to the slide so what happened if you visualize this um cranes live in silos that's",
    "start": "1769320",
    "end": "1777200"
  },
  {
    "text": "another Orleans term so I just had two processes to silos when I created an event I created",
    "start": "1777200",
    "end": "1784919"
  },
  {
    "text": "a whole bunch of of of cranes um and they replaced",
    "start": "1784919",
    "end": "1790279"
  },
  {
    "text": "automatically in those two processes and then when I make request to let's say 51 but I want to access qua imink which is",
    "start": "1790279",
    "end": "1797480"
  },
  {
    "text": "on a different different server then Orin takes care of that for me by serializing the request sending it",
    "start": "1797480",
    "end": "1804000"
  },
  {
    "text": "to the correct server deserializing it now of course this does mean if we don't know where the cranes live then every",
    "start": "1804000",
    "end": "1811320"
  },
  {
    "text": "call to a crane is a potential Network call right and that will incur some latency in your application how much",
    "start": "1811320",
    "end": "1817880"
  },
  {
    "text": "latency is kind of dependent on your uh physical infrastructure uh but that is something to be aware about now there",
    "start": "1817880",
    "end": "1825000"
  },
  {
    "text": "are some hints you can give to Orleans on how to to place these actors or these",
    "start": "1825000",
    "end": "1830320"
  },
  {
    "text": "cranes so if there are a lot of events then we could instruct orans to try to",
    "start": "1830320",
    "end": "1835600"
  },
  {
    "text": "keep all of the cranes belonging to a single event on a single note and that would give us a bit better",
    "start": "1835600",
    "end": "1841880"
  },
  {
    "text": "performance but what's what is really nice here is that let's say The Silo 2 goes down something horrible happens um",
    "start": "1841880",
    "end": "1849440"
  },
  {
    "text": "now Orleans can step in and simply reactivate those cranes on a different",
    "start": "1849440",
    "end": "1854679"
  },
  {
    "text": "server right so we may see a little bit of hiccup in uh in response time but we",
    "start": "1854679",
    "end": "1861080"
  },
  {
    "text": "don't have to do anything ourselves to fix that or can simply rebalance uh",
    "start": "1861080",
    "end": "1866639"
  },
  {
    "text": "those uh cranes and of course when Silo 2 comes back online hopefully sometime in the future wiin can also move those",
    "start": "1866639",
    "end": "1873000"
  },
  {
    "text": "cranes back all right so let's um have a look",
    "start": "1873000",
    "end": "1878600"
  },
  {
    "text": "at the actual app now first off I do have a confession to make because I wouldn't know where to start building an",
    "start": "1878600",
    "end": "1885120"
  },
  {
    "text": "actual app so what I did instead was because I built a web application it",
    "start": "1885120",
    "end": "1890399"
  },
  {
    "text": "kind of looks like an app and I asked Chad GPT again to build me some sty seats in the style of a Craft brewery",
    "start": "1890399",
    "end": "1898120"
  },
  {
    "text": "now I'll let you decide if if it succeeded but it it kind of used a little bit brownish color so that's good",
    "start": "1898120",
    "end": "1905799"
  },
  {
    "text": "enough for me um so actually I have to restart one of these backend processes",
    "start": "1905799",
    "end": "1912399"
  },
  {
    "text": "because otherwise we don't have a back end and let me start my blazer server",
    "start": "1912399",
    "end": "1921480"
  },
  {
    "text": "app that's running on 501 now if you go there uh this is a",
    "start": "1921480",
    "end": "1927559"
  },
  {
    "text": "pretty boring pce because completely empty because I restarted my back end and I use inm storage so I lost all my",
    "start": "1927559",
    "end": "1935240"
  },
  {
    "text": "uh actor so let's very quickly go back read that event um yep was this one",
    "start": "1935240",
    "end": "1944279"
  },
  {
    "text": "refresh and here we are let me zoom out your just a little bit um so this is my",
    "start": "1944279",
    "end": "1950240"
  },
  {
    "text": "hometown this is Halo in the Netherlands and if we zoom out a bit you can see",
    "start": "1950240",
    "end": "1955559"
  },
  {
    "text": "it's it's about 40 kilm North of uh of Amsterdam so if you're in the neighbor",
    "start": "1955559",
    "end": "1961200"
  },
  {
    "text": "neighborhood this Saturday I do invite you to join the event um so these are",
    "start": "1961200",
    "end": "1967399"
  },
  {
    "text": "some of the participating restaurants and let's say we go to one we can see",
    "start": "1967399",
    "end": "1972519"
  },
  {
    "text": "our um overview of the venue so we have the name we have the check-in button so",
    "start": "1972519",
    "end": "1977639"
  },
  {
    "text": "let's let check in and we have the beer menu here so if I now go back to this",
    "start": "1977639",
    "end": "1982799"
  },
  {
    "text": "page you can see a little one here because we are checked in there and of course if we go to a different place",
    "start": "1982799",
    "end": "1988799"
  },
  {
    "text": "let's go to uh this place check in here um go back that one jumped to the to the",
    "start": "1988799",
    "end": "1995360"
  },
  {
    "text": "new place um here at the bottom we have the top beers list but we don't have any",
    "start": "1995360",
    "end": "2002240"
  },
  {
    "text": "ratings yet so it's still empty so let's change that let's go back in and well",
    "start": "2002240",
    "end": "2008799"
  },
  {
    "text": "this is actually the only Buck beer here so let's pick that one and go back and",
    "start": "2008799",
    "end": "2014399"
  },
  {
    "text": "now we still don't have any ratings um that's actually deliberate and I'll",
    "start": "2014399",
    "end": "2019960"
  },
  {
    "text": "explain to you a little bit later uh but I can refresh this list there's a hidden feature if I click on the title it does",
    "start": "2019960",
    "end": "2026559"
  },
  {
    "text": "a refresh and now we do have uh that rating uh so I'll explain later why that",
    "start": "2026559",
    "end": "2033200"
  },
  {
    "text": "is um let's dive into this whole feature of the of the rating beer uh logic so",
    "start": "2033200",
    "end": "2042320"
  },
  {
    "text": "let me go here so how does this work we have our",
    "start": "2042320",
    "end": "2048599"
  },
  {
    "text": "app we call into the API to write a beer then the API will find our quer Crane",
    "start": "2048599",
    "end": "2055599"
  },
  {
    "text": "and it will tell the crane hey I want to rate a beer and the crane will save that rating in its own state so we can use it",
    "start": "2055599",
    "end": "2062200"
  },
  {
    "text": "later on to display it but it will also do something else it will send the rating to a beer beer score crane now",
    "start": "2062200",
    "end": "2069440"
  },
  {
    "text": "the beer score crane represents a score of a single beer in the event right so each beer",
    "start": "2069440",
    "end": "2076480"
  },
  {
    "text": "type there's a single instance of the beer score Crane and it will collect all of the different ratings and it can uh",
    "start": "2076480",
    "end": "2083118"
  },
  {
    "text": "create a total rating for that beer and when it has a total rating it sends it",
    "start": "2083119",
    "end": "2089118"
  },
  {
    "text": "to a beer leaderboard crane so the beer leaderboards responsible for just keeping the list of the total um total",
    "start": "2089119",
    "end": "2097160"
  },
  {
    "text": "scores and ordering it in a way that we can ask it for the top 10 beers um but that's one crane in the",
    "start": "2097160",
    "end": "2105720"
  },
  {
    "text": "entire event that's that does that bookkeeping so if there are a lot of",
    "start": "2105720",
    "end": "2110920"
  },
  {
    "text": "ratings all flowing in to that single actor then we may overwhelm it with",
    "start": "2110920",
    "end": "2116079"
  },
  {
    "text": "requests and performance will suffer so what I did here instead is that beer score crane will not directly update the",
    "start": "2116079",
    "end": "2122560"
  },
  {
    "text": "beer leaderboard but it will only do so periodically with with a timer so that's a pattern that you can use in your own",
    "start": "2122560",
    "end": "2128720"
  },
  {
    "text": "Solutions where if um you know something doesn't need to be updated every",
    "start": "2128720",
    "end": "2133880"
  },
  {
    "text": "millisecond you can just uh use that pattern to lower the impact on the system",
    "start": "2133880",
    "end": "2139480"
  },
  {
    "text": "performance so then finally when we have that list available in the B leader board the app can simply go to that",
    "start": "2139480",
    "end": "2145440"
  },
  {
    "text": "Crane and ask for the list and display it in the in the UI so let's walk through that code uh",
    "start": "2145440",
    "end": "2153680"
  },
  {
    "text": "let me see let me clean up some windows here let's start with the",
    "start": "2153680",
    "end": "2161640"
  },
  {
    "text": "API so go back to",
    "start": "2161640",
    "end": "2166640"
  },
  {
    "text": "program and somewhere down here yeah here it is so to rate a beer we sent a a",
    "start": "2166720",
    "end": "2172560"
  },
  {
    "text": "put request to this URL which contains the event ID and the beer ID um it also",
    "start": "2172560",
    "end": "2178839"
  },
  {
    "text": "contains of course my crawler ID and it has a rating and that rating is a simple integer um one is thumbs up minus one is",
    "start": "2178839",
    "end": "2187000"
  },
  {
    "text": "thumbs down and zero is hey I rated something in the past but forget about it just clear it for me um so what we do",
    "start": "2187000",
    "end": "2194440"
  },
  {
    "text": "here um we get the quer crane and we tell it hey rate a beer and again",
    "start": "2194440",
    "end": "2199599"
  },
  {
    "text": "there's some validation built in so that we may get back a beer not failable exception and then we throw out a a bet",
    "start": "2199599",
    "end": "2206920"
  },
  {
    "text": "request so let's jump into this R beer method uh here it is so this takes the",
    "start": "2206920",
    "end": "2215680"
  },
  {
    "text": "beer ID and the rating ID now the first thing I want to do here is",
    "start": "2215680",
    "end": "2220720"
  },
  {
    "text": "to validate that this is a valid beer and for that I can use this beer selection crane so that's a is a crane",
    "start": "2220720",
    "end": "2229160"
  },
  {
    "text": "for which there's one instance for an entire event and it simply contains entire beer menu so I can ask it things",
    "start": "2229160",
    "end": "2235880"
  },
  {
    "text": "like hey is this beer available and if it's not I can throw that beer not",
    "start": "2235880",
    "end": "2241359"
  },
  {
    "text": "available exception so now we know that we're good we can store that rating for",
    "start": "2241359",
    "end": "2246400"
  },
  {
    "text": "this specific beer it inside the crane and we can write that to dis and then",
    "start": "2246400",
    "end": "2251480"
  },
  {
    "text": "the next thing I'm going to do is to tell that beer score crane about this new rating right so uh I can do that by",
    "start": "2251480",
    "end": "2259359"
  },
  {
    "text": "calling update rating and I give it the crawler ID so it knows where the rating came from as well as the rating",
    "start": "2259359",
    "end": "2267240"
  },
  {
    "text": "itself so moving on to that actor we have the update rating method here uh so",
    "start": "2267240",
    "end": "2274880"
  },
  {
    "text": "the first thing I do is I check hey did I already have a rating for this uh",
    "start": "2274880",
    "end": "2281000"
  },
  {
    "text": "qualer now if I do uh and the current rating is zero that means just forget",
    "start": "2281000",
    "end": "2287560"
  },
  {
    "text": "about the previous rating right so I I removed that from the from the state uh otherwise I'm going to check hey this",
    "start": "2287560",
    "end": "2294200"
  },
  {
    "text": "new rating is it any different than the one I already have because if it's the same we can just short circuit this",
    "start": "2294200",
    "end": "2300119"
  },
  {
    "text": "whole thing and uh return there's nothing here to change um if we're still here after those checks and I do have a",
    "start": "2300119",
    "end": "2308640"
  },
  {
    "text": "rating uh like thumbs up or thumbs down I store that in state and I write back the state and notice that in all this",
    "start": "2308640",
    "end": "2315040"
  },
  {
    "text": "codes right it's turn based as a single threat I don't need to worry about other threats coming in and uh Changing State",
    "start": "2315040",
    "end": "2321839"
  },
  {
    "text": "while I'm running this this actual code okay so now the beer score crane",
    "start": "2321839",
    "end": "2328440"
  },
  {
    "text": "has the updated um rating it can calculate the total score and",
    "start": "2328440",
    "end": "2334400"
  },
  {
    "text": "periodically I want to send that total score to would be a leaderboard so the way I do that is by",
    "start": "2334400",
    "end": "2341359"
  },
  {
    "text": "setting up a timer now there are these lifetime methods that you can use so an",
    "start": "2341359",
    "end": "2346480"
  },
  {
    "text": "activate async here is called every time your crane is activated and there are",
    "start": "2346480",
    "end": "2351720"
  },
  {
    "text": "also a Associated uh methods like on deactivate which you can use to do some",
    "start": "2351720",
    "end": "2357920"
  },
  {
    "text": "cleanup just before your crane is deactivated and in this unactivate I register a",
    "start": "2357920",
    "end": "2363800"
  },
  {
    "text": "timer so what I do here I pass in",
    "start": "2363800",
    "end": "2368839"
  },
  {
    "text": "um this graan object so I can reference it here as self because I learned",
    "start": "2368839",
    "end": "2374520"
  },
  {
    "text": "yesterday in Daniel Mar who was at J Daniel marbo session about um",
    "start": "2374520",
    "end": "2380000"
  },
  {
    "text": "performance in SDK nobody oh you you should replay it on uh you should watch",
    "start": "2380000",
    "end": "2385760"
  },
  {
    "text": "it on stream it was really good he was talking about closures and memory allocations and stuff like that and I um",
    "start": "2385760",
    "end": "2392599"
  },
  {
    "text": "in my previous version I was just doing this like report score eight in well I",
    "start": "2392599",
    "end": "2399040"
  },
  {
    "text": "can type in Live demos but you know what I mean uh but of course then you can a close because you're referencing",
    "start": "2399040",
    "end": "2405000"
  },
  {
    "text": "something outside of this lbda so it's better to pass in the object and then use it here and it will save your memory",
    "start": "2405000",
    "end": "2410520"
  },
  {
    "text": "allocations I'm now going to go through all my codes and update all of it with",
    "start": "2410520",
    "end": "2415920"
  },
  {
    "text": "his recommendations um so what this does is this time fires every three seconds",
    "start": "2415920",
    "end": "2421200"
  },
  {
    "text": "right so you can specify how long to wait to fire the first time and then how long to wait be before firing each",
    "start": "2421200",
    "end": "2426680"
  },
  {
    "text": "consecutive time and then when advice I'm going to resport report the score",
    "start": "2426680",
    "end": "2432079"
  },
  {
    "text": "now there are some considerations with timers because timers are internal to the crane and that has two implications",
    "start": "2432079",
    "end": "2440000"
  },
  {
    "text": "so first one is that timers don't adhere to the turn-based access model because",
    "start": "2440000",
    "end": "2446440"
  },
  {
    "text": "the call is coming from inside and that means it will not keep your crane alive",
    "start": "2446440",
    "end": "2452079"
  },
  {
    "text": "and activated so if the only thing happening inside your crane is the timer firing periodically but there are no",
    "start": "2452079",
    "end": "2458079"
  },
  {
    "text": "other requests coming in from the outside then eventually your crane will be deactivated and also your timer will",
    "start": "2458079",
    "end": "2464319"
  },
  {
    "text": "be stopped um second implication is that your codes may be interleaved with other",
    "start": "2464319",
    "end": "2471960"
  },
  {
    "text": "code executing from uh outside requests so there's still a single threat there",
    "start": "2471960",
    "end": "2478359"
  },
  {
    "text": "are no any uh there's there are never more than one thread running inside the crane but inter leaing may take place",
    "start": "2478359",
    "end": "2485240"
  },
  {
    "text": "right so the single thread may run some instructions for your timer call back and then run a couple of instructions",
    "start": "2485240",
    "end": "2490440"
  },
  {
    "text": "for another request and then your timer call back again so that's really something to be aware of when you are working with uh timers especially if",
    "start": "2490440",
    "end": "2497520"
  },
  {
    "text": "you're mutating State inside your timer callbacks now there is another mechanism",
    "start": "2497520",
    "end": "2503440"
  },
  {
    "text": "uh called reminders and reminders are external to the crane and that means",
    "start": "2503440",
    "end": "2508680"
  },
  {
    "text": "that they do use their turn-based access model so they will uh keep your crane alive uh so generally those",
    "start": "2508680",
    "end": "2515720"
  },
  {
    "text": "are bit more elegant to work with but they're also more heavy weight so you",
    "start": "2515720",
    "end": "2521040"
  },
  {
    "text": "wouldn't want to use uh reminders for any events that occur more than maybe a",
    "start": "2521040",
    "end": "2527040"
  },
  {
    "text": "couple of minutes uh these timers are really better suited for those high frequency events uh although you can",
    "start": "2527040",
    "end": "2534720"
  },
  {
    "text": "combine of course those uh different patterns right you can set up a timer and then maybe also set up a reminder in",
    "start": "2534720",
    "end": "2541800"
  },
  {
    "text": "the background to make sure that your crane stays Alive by firing a reminder to it every every couple of",
    "start": "2541800",
    "end": "2548359"
  },
  {
    "text": "minutes um all right so let's look at the report score what do we do here we",
    "start": "2548359",
    "end": "2553880"
  },
  {
    "text": "calculate the score um we do a double check hey is this score any different than the last score that I reported",
    "start": "2553880",
    "end": "2560520"
  },
  {
    "text": "because otherwise there's nothing news to tell um and then we get a reference to the leaderboard Crane and we tell the",
    "start": "2560520",
    "end": "2567119"
  },
  {
    "text": "leaderboard crane hey here's an updated score for this BR ID so let's jump to that final",
    "start": "2567119",
    "end": "2575319"
  },
  {
    "text": "crane uh update score so this is pretty simple uh crane here it's only like 40",
    "start": "2575319",
    "end": "2580680"
  },
  {
    "text": "lines of goat uh it has some state to store the scores with simply a dictionary of the beer ID and the score",
    "start": "2580680",
    "end": "2587920"
  },
  {
    "text": "and then we have these two methods so we have a method to C all the top beers where we do some uh link which also is",
    "start": "2587920",
    "end": "2594200"
  },
  {
    "text": "pretty bad for performers I learned yesterday um which takes the top 10 beers and then we have uh update score",
    "start": "2594200",
    "end": "2601880"
  },
  {
    "text": "to uh update the database and this is what's called in Orleans as the smart caching pattern when we basically use",
    "start": "2601880",
    "end": "2608359"
  },
  {
    "text": "the crane as a kind of a hot State because any query that we get for those",
    "start": "2608359",
    "end": "2614240"
  },
  {
    "text": "top 10 beers we don't need to go to the database we can serve the an straight from memory here right we only need to",
    "start": "2614240",
    "end": "2620720"
  },
  {
    "text": "go to the database whenever we want to make an update um we can even go further than",
    "start": "2620720",
    "end": "2626280"
  },
  {
    "text": "that if we want to uh lessen the load on the database even more we could say hey",
    "start": "2626280",
    "end": "2632359"
  },
  {
    "text": "uh whenever score is updated we are only going to write the actual data back to",
    "start": "2632359",
    "end": "2637480"
  },
  {
    "text": "the database every minute or something like that but of course you know it depends it highly depends on your",
    "start": "2637480",
    "end": "2643040"
  },
  {
    "text": "situation because if anything happens to that crane in the meantime you will lose those",
    "start": "2643040",
    "end": "2649880"
  },
  {
    "text": "changes all right so yeah I think that's all the code I wanted to show you so let",
    "start": "2650400",
    "end": "2657280"
  },
  {
    "text": "me um well let's go back for another feature and then I'll show",
    "start": "2657280",
    "end": "2663920"
  },
  {
    "text": "you uh the app working with some more data so let's look at the feature of",
    "start": "2663920",
    "end": "2669000"
  },
  {
    "text": "checking in and showing those numbers on the map so this is going to look pretty much",
    "start": "2669000",
    "end": "2676200"
  },
  {
    "text": "uh the same as the previous slide so again we have the app we do a call to",
    "start": "2676200",
    "end": "2681960"
  },
  {
    "text": "the API the AP will find our quala crane it will tell it hey I want to check in the quala crane can save the location",
    "start": "2681960",
    "end": "2689319"
  },
  {
    "text": "inside the crane State and then we add the qualer to the drinking venue so now",
    "start": "2689319",
    "end": "2694400"
  },
  {
    "text": "the drinking venue crane knows which quers are currently there and they can keep count uh of those",
    "start": "2694400",
    "end": "2701440"
  },
  {
    "text": "crawlers and then once in a while again using that same timer pattern that quer CR count quer count is being sent to an",
    "start": "2701440",
    "end": "2709599"
  },
  {
    "text": "event map actor our Crane and that event map is responsible for keeping well all",
    "start": "2709599",
    "end": "2715680"
  },
  {
    "text": "the data that I need to show that map in the in the front end um but there's an",
    "start": "2715680",
    "end": "2721960"
  },
  {
    "text": "additional uh feature request here so I want that map to up dat in real time",
    "start": "2721960",
    "end": "2728319"
  },
  {
    "text": "right I don't want the user to need to refresh all the time to see the numbers change so we need some way to push that",
    "start": "2728319",
    "end": "2736520"
  },
  {
    "text": "data from that crane to those clients and for that I'm going to use a",
    "start": "2736520",
    "end": "2741880"
  },
  {
    "text": "signal R signal R Hub so any people here already familiar with signal R Hub yeah",
    "start": "2741880",
    "end": "2748839"
  },
  {
    "text": "guess most of you so yeah this a messaging framework which you can use to send data from the server to Connected",
    "start": "2748839",
    "end": "2754960"
  },
  {
    "text": "clients it uses websockets and if web socks aren't available it can gracefully uh go down to things like long balling",
    "start": "2754960",
    "end": "2761240"
  },
  {
    "text": "stuff like that um so what will happen is we can create signal R hubs which are",
    "start": "2761240",
    "end": "2767160"
  },
  {
    "text": "basically the pipeline between the server and the client on all of the nodes and then the clients can connect",
    "start": "2767160",
    "end": "2772200"
  },
  {
    "text": "to those hubs and then can receive the data so that's pretty sweet and easy to",
    "start": "2772200",
    "end": "2778599"
  },
  {
    "text": "set up we can create a our own Hub by deriving from Hub and then we go to the",
    "start": "2778599",
    "end": "2785119"
  },
  {
    "text": "startup code we register an endpoint so that the clients have something to connect to and our Hub is ready to",
    "start": "2785119",
    "end": "2791720"
  },
  {
    "text": "go um but now we have this next problem because we have a crane which is or's",
    "start": "2791720",
    "end": "2798480"
  },
  {
    "text": "aware it's running on some on one of the nodes and it needs to be able to use",
    "start": "2798480",
    "end": "2804079"
  },
  {
    "text": "those signal R hubs which are on different notes and how does it even",
    "start": "2804079",
    "end": "2809480"
  },
  {
    "text": "know which signal R hubs are there now or can fortunately help us",
    "start": "2809480",
    "end": "2816400"
  },
  {
    "text": "with this by uh a very nice feature called observers and observers are basically the clue codes between your",
    "start": "2816400",
    "end": "2823599"
  },
  {
    "text": "cranes and your well regular net object so you can use it to send messages from",
    "start": "2823599",
    "end": "2829400"
  },
  {
    "text": "your orans cranes to ordinary net objects so the way this",
    "start": "2829400",
    "end": "2835280"
  },
  {
    "text": "works is that you uh first Define an interface to uh basically Define what",
    "start": "2835280",
    "end": "2841240"
  },
  {
    "text": "kind of message you want to send to the do net object and that uh interface must derived from Ian OB server so here I've",
    "start": "2841240",
    "end": "2848400"
  },
  {
    "text": "created a Zen venue attendance updated async uh method and of course that must be asynchronous again because we are",
    "start": "2848400",
    "end": "2855040"
  },
  {
    "text": "crossing server boundaries and my message will contain an event ID a venue ID and the updated attendance",
    "start": "2855040",
    "end": "2862400"
  },
  {
    "text": "number and then we can implement we can create an object that implements that interface or a class that implements it",
    "start": "2862400",
    "end": "2870400"
  },
  {
    "text": "um and in the Constructor I inject a ihub context for the signal rhub so I",
    "start": "2870400",
    "end": "2876480"
  },
  {
    "text": "can send send messages so whenever that send venue orend update Asing method is called I use that context to actually",
    "start": "2876480",
    "end": "2883800"
  },
  {
    "text": "send a message to all of the clients so that's nice but now I still",
    "start": "2883800",
    "end": "2892079"
  },
  {
    "text": "need a way to create those Observer objects and I still need a way to let",
    "start": "2892079",
    "end": "2898680"
  },
  {
    "text": "the event map cray know which Observer objects there are so to do that I've created an",
    "start": "2898680",
    "end": "2905520"
  },
  {
    "text": "observer service object which is running on each of the nodes and in that servers",
    "start": "2905520",
    "end": "2911559"
  },
  {
    "text": "I'm going to use the crane Factory to create The Observers now we've used the crane Factory before to create a proxy",
    "start": "2911559",
    "end": "2918480"
  },
  {
    "text": "object to a crane but you can also use it to create a proxy object to an observer so here I have the Hub context",
    "start": "2918480",
    "end": "2926400"
  },
  {
    "text": "I wrap my event map Observer object around it and I ask orans hey give me a",
    "start": "2926400",
    "end": "2931599"
  },
  {
    "text": "proxy object that I can pass around throughout all of my cluster uh but still be able to call that donet object",
    "start": "2931599",
    "end": "2940000"
  },
  {
    "text": "and once I have that I can give that proxy object that",
    "start": "2940000",
    "end": "2945319"
  },
  {
    "text": "reference to another crane called an observer list and now the event map can once in a",
    "start": "2945319",
    "end": "2952000"
  },
  {
    "text": "while ask or query that Observer list for the complete list of observers so I think I do that like",
    "start": "2952000",
    "end": "2958480"
  },
  {
    "text": "every minute or so in case there are any changes um and then whenever it's time",
    "start": "2958480",
    "end": "2963640"
  },
  {
    "text": "to push out an update to the clients um I can simply iterate over all of those",
    "start": "2963640",
    "end": "2969319"
  },
  {
    "text": "observers and call on venue attendance updated so a message will go to each of signal R hubs and then it will go out to",
    "start": "2969319",
    "end": "2976000"
  },
  {
    "text": "all of the clients so that's how that works and let me show you that in action um so let's",
    "start": "2976000",
    "end": "2983359"
  },
  {
    "text": "see my back this my front end still running my back end was still running um",
    "start": "2983359",
    "end": "2988400"
  },
  {
    "text": "so let's start the simulator to put some load on the system um so I can add a",
    "start": "2988400",
    "end": "2994000"
  },
  {
    "text": "Marx C count to spe spe ify how many simulated crawlers I want to have and",
    "start": "2994000",
    "end": "3000200"
  },
  {
    "text": "this simulator I also built using orans so I'm I have two types of cranes in there I have a simulated event where and",
    "start": "3000200",
    "end": "3008000"
  },
  {
    "text": "uh I have a simulated crawler type so the simulated event will just simply",
    "start": "3008000",
    "end": "3013359"
  },
  {
    "text": "spin UPS pretty slowly crawlers until this maximum and then each crawler will",
    "start": "3013359",
    "end": "3020000"
  },
  {
    "text": "pick out a Fen check in drink some beers do some ratings check out go to the next",
    "start": "3020000",
    "end": "3025640"
  },
  {
    "text": "venue so when I run this uh and go back and yep here you see those numbers",
    "start": "3025640",
    "end": "3033160"
  },
  {
    "text": "changing so this will slowly ramp up uh to a th000 crawlers and uh it's pretty",
    "start": "3033160",
    "end": "3040160"
  },
  {
    "text": "evenly distributed so they will we'll probably end up with around 200 in each",
    "start": "3040160",
    "end": "3045760"
  },
  {
    "text": "venue and then you will see some slight variations of people moving to different",
    "start": "3045760",
    "end": "3052160"
  },
  {
    "text": "venues all right so uh we can also refresh the top beers um and you can see",
    "start": "3052160",
    "end": "3057880"
  },
  {
    "text": "that my scoring algorithm isn't that random I tried my best but still a demo",
    "start": "3057880",
    "end": "3064079"
  },
  {
    "text": "so I thought it's fine all right so I do have some time to show you that",
    "start": "3064079",
    "end": "3072160"
  },
  {
    "text": "dashboard so if I go to uh I believe it's running on 880 yeah so here's that",
    "start": "3072160",
    "end": "3078280"
  },
  {
    "text": "uh third party dashboard this is really useful for debugging your applications",
    "start": "3078280",
    "end": "3083520"
  },
  {
    "text": "because it shows you stuff like hey methods with most exceptions and uh it's",
    "start": "3083520",
    "end": "3089400"
  },
  {
    "text": "methods with highest latency so this is really interesting to see how your uh Orin cluster is behaving um it is pretty",
    "start": "3089400",
    "end": "3097880"
  },
  {
    "text": "heavy though to run so don't run it continuously in production but use it on like a test environment to see how your",
    "start": "3097880",
    "end": "3104359"
  },
  {
    "text": "application is doing um we can look at a crane Activation so we ask for thousand",
    "start": "3104359",
    "end": "3112559"
  },
  {
    "text": "simulation right so we have a thousand quer cranes here you can see that we have 15 of those beer score cranes",
    "start": "3112559",
    "end": "3118920"
  },
  {
    "text": "because we have 15 types of beers and we have a couple of uh Singletons here like",
    "start": "3118920",
    "end": "3124160"
  },
  {
    "text": "the event map and beer selection you can also see this dashboard crane here",
    "start": "3124160",
    "end": "3129359"
  },
  {
    "text": "because this Orin dashboard itself is also built using Orleans of course it's Orleans all the way down uh and that",
    "start": "3129359",
    "end": "3136640"
  },
  {
    "text": "just Crees The Orleans apis uh pretty often to to be able to render all these",
    "start": "3136640",
    "end": "3143079"
  },
  {
    "text": "metrics so yeah that is really useful stuff all right so",
    "start": "3143079",
    "end": "3149280"
  },
  {
    "text": "let's go back to the slides to wrap this all up so um we've seen what Orin can do",
    "start": "3149280",
    "end": "3158640"
  },
  {
    "text": "but uh unfortunately building distributed system is still kind of hard uh orans and the active model in general",
    "start": "3158640",
    "end": "3165520"
  },
  {
    "text": "are definitely no silver bullets you still need to really think about how you are going to design your system uh but",
    "start": "3165520",
    "end": "3171319"
  },
  {
    "text": "it does make it easier especially if you're in a situation where you can model your problem domain as a lot of",
    "start": "3171319",
    "end": "3178079"
  },
  {
    "text": "small entities working together and if there's a lot of concurrency of those entities then Orleans can can really",
    "start": "3178079",
    "end": "3184480"
  },
  {
    "text": "help you with this um we are currently implementing a project for a metering company in the electricity sector where",
    "start": "3184480",
    "end": "3191280"
  },
  {
    "text": "we model basically every meter as a crane and then when data comes in we need to do validation and we can can",
    "start": "3191280",
    "end": "3198240"
  },
  {
    "text": "keep that um a lot of data like what was the the last value that we saw and what",
    "start": "3198240",
    "end": "3204559"
  },
  {
    "text": "are the highest and lowest numbers we can keep that in the hot State inside the crane so we can do those validations",
    "start": "3204559",
    "end": "3210160"
  },
  {
    "text": "very quickly so that's a nice example of of a real world scenario um of course",
    "start": "3210160",
    "end": "3215520"
  },
  {
    "text": "Orleans can really help us with a scalability because it will basically take care of placing all those cranes",
    "start": "3215520",
    "end": "3221359"
  },
  {
    "text": "for us and it can also help us to gracefully recover whenever one of our nodes crash and if you look at performance uh",
    "start": "3221359",
    "end": "3228920"
  },
  {
    "text": "we've seen that smart cach pattern where you work with those hot States but it's also really important that whenever we",
    "start": "3228920",
    "end": "3234680"
  },
  {
    "text": "do get updates they all go to through that single Crane and that's very nice",
    "start": "3234680",
    "end": "3239839"
  },
  {
    "text": "because it's very easy to build your business logic and to make sure it's still correct in a in a concurrent way",
    "start": "3239839",
    "end": "3246559"
  },
  {
    "text": "so overall uh I really like o also think it's pretty easy to get into once you uh",
    "start": "3246559",
    "end": "3252280"
  },
  {
    "text": "know a little bit of net because it's really designed to be familiar for the net uh these",
    "start": "3252280",
    "end": "3258119"
  },
  {
    "text": "developers so with that um thank you very much for coming to my session uh if you want to have a look at the source",
    "start": "3258119",
    "end": "3264680"
  },
  {
    "text": "code it's all up in my kit up repository um I also am the host get with buddy of",
    "start": "3264680",
    "end": "3271799"
  },
  {
    "text": "mine uh of Netflix which a um video channel on YouTube where we talk about",
    "start": "3271799",
    "end": "3277839"
  },
  {
    "text": "Microsoft morins stuff like that other related things so you might enjoy that as well uh so with that uh thank you so",
    "start": "3277839",
    "end": "3285640"
  },
  {
    "text": "much and I think we have a couple of minutes left if there are any",
    "start": "3285640",
    "end": "3291839"
  },
  {
    "text": "questions and if you can think of anything right now I'll be here for a couple of minutes minutes and you can find me all around uh the conference we",
    "start": "3292200",
    "end": "3299920"
  },
  {
    "text": "do have one question",
    "start": "3299920",
    "end": "3302920"
  },
  {
    "text": "yeah",
    "start": "3305000",
    "end": "3308000"
  },
  {
    "text": "yes yeah yeah so the question is how many hungry is all of this um the the overhead is pretty low so it kind of uh",
    "start": "3310079",
    "end": "3318720"
  },
  {
    "text": "depends on how much are you going to store inside your cranes right so if you",
    "start": "3318720",
    "end": "3324160"
  },
  {
    "text": "have if if you look at the documentation what the team says is you can basically have millions and millions of cranes as",
    "start": "3324160",
    "end": "3330720"
  },
  {
    "text": "long as only a subset of those cranes is active at the same time right because",
    "start": "3330720",
    "end": "3335960"
  },
  {
    "text": "all of your deactivated cranes they don't take up any Ram they only take up space somewhere in a database so it um",
    "start": "3335960",
    "end": "3343960"
  },
  {
    "text": "it is something to be aware of when you're designing uh systems like this because if you have a lot of cranes that",
    "start": "3343960",
    "end": "3350960"
  },
  {
    "text": "are all active at the same time you need to have the server memory to be able to to uh uh use that yeah if you look at my",
    "start": "3350960",
    "end": "3359359"
  },
  {
    "text": "example scenario um there can be like millions and millions of events that",
    "start": "3359359",
    "end": "3366280"
  },
  {
    "text": "happened in the past and are going to happen in the future but aren't active now and that's okay and maybe there are",
    "start": "3366280",
    "end": "3373359"
  },
  {
    "text": "like I don't know a couple of hundred events uh that are active right now and that are currently using cranes then",
    "start": "3373359",
    "end": "3379960"
  },
  {
    "text": "that will probably be fine uh from a memory perspective",
    "start": "3379960",
    "end": "3385200"
  },
  {
    "text": "yeah hi I have question about the data um",
    "start": "3385240",
    "end": "3392319"
  },
  {
    "text": "let's say consistency we saw that uh the crawler venue has been updated and you",
    "start": "3392319",
    "end": "3399359"
  },
  {
    "text": "uh you save the state of the crawler and then you send a message and the account was updated so",
    "start": "3399359",
    "end": "3406920"
  },
  {
    "text": "uh how um I don't know durable this messaging is and uh how do we achieve",
    "start": "3406920",
    "end": "3412760"
  },
  {
    "text": "the consistency of the state and the account yeah yeah yeah that that that's a very good question because there's no",
    "start": "3412760",
    "end": "3418599"
  },
  {
    "text": "transaction around that right so so what happens if you've saved something in your crane state but you also want to",
    "start": "3418599",
    "end": "3424960"
  },
  {
    "text": "send out a message or a call another a crane um so basically you're on your own",
    "start": "3424960",
    "end": "3431680"
  },
  {
    "text": "to solve that or doesn't really give you a buildin mechanism uh to do that um",
    "start": "3431680",
    "end": "3438640"
  },
  {
    "text": "what I mainly use is retries so um in in this case it isn't",
    "start": "3438640",
    "end": "3446400"
  },
  {
    "text": "really applicable to this demo because in this demo of course there's a user so if as a user I click checkin and it",
    "start": "3446400",
    "end": "3453000"
  },
  {
    "text": "fails or only half goes through and the user doesn't ever click re or check in",
    "start": "3453000",
    "end": "3458480"
  },
  {
    "text": "again then I'm screwed but in uh in the real world system that we're currently building we have a message queue in",
    "start": "3458480",
    "end": "3464200"
  },
  {
    "text": "between so that message get handled and you we just make sure that everything we do in the crane is it potent so we",
    "start": "3464200",
    "end": "3471319"
  },
  {
    "text": "expect the message to arrive at least once but probably multiple times so event Al we will proceed by uh we will",
    "start": "3471319",
    "end": "3478960"
  },
  {
    "text": "succeed in both saving the state and sending the uh message to the other cran and everything will be fine eventually",
    "start": "3478960",
    "end": "3486599"
  },
  {
    "text": "but it's something you have to take care of in your in your design yeah just just",
    "start": "3486599",
    "end": "3492880"
  },
  {
    "text": "just to understand the messaging between you mentioned that you are using some message broker so it is kind",
    "start": "3492880",
    "end": "3500200"
  },
  {
    "text": "of uh so you can set up to use some messaging for example when you send the",
    "start": "3500200",
    "end": "3505880"
  },
  {
    "text": "mess message it's some internal messaging communication or it uses message broker yeah so message it's not",
    "start": "3505880",
    "end": "3512359"
  },
  {
    "text": "using a message broker it's basically a a task that is uh you you can basically",
    "start": "3512359",
    "end": "3517640"
  },
  {
    "text": "compare to a remote method call that's just taking a long time if it's if it's cute um so let's say your cluster goes",
    "start": "3517640",
    "end": "3526720"
  },
  {
    "text": "down all of the messages that were in transit will be gone there there's no underlying uh persistent message CU so",
    "start": "3526720",
    "end": "3533960"
  },
  {
    "text": "the message broker I was talking about uh in previe answer is in front of the",
    "start": "3533960",
    "end": "3539000"
  },
  {
    "text": "Orin system so that if something happens in Orin I can replay it from that message kebe",
    "start": "3539000",
    "end": "3546280"
  },
  {
    "text": "yeah um I also have a question so if we have for example A system that is geographically distributed and for",
    "start": "3546280",
    "end": "3553119"
  },
  {
    "text": "example in a region a we have like uh 10 nodes on region B we have 10 nodes uh so",
    "start": "3553119",
    "end": "3558960"
  },
  {
    "text": "will it try to rebalance itself based on a latency and store object inside uh",
    "start": "3558960",
    "end": "3564520"
  },
  {
    "text": "region like a uh if for example initially an object was instantiated in a region b or is it",
    "start": "3564520",
    "end": "3571240"
  },
  {
    "text": "possible to configure um yeah so by default it will",
    "start": "3571240",
    "end": "3577520"
  },
  {
    "text": "try to rebalance and it will try to to to get to a even load right so it will",
    "start": "3577520",
    "end": "3583720"
  },
  {
    "text": "will look at the the the cranes and how much uh resources they use and try to distt on top of that if you have some",
    "start": "3583720",
    "end": "3591200"
  },
  {
    "text": "specific needs on how you want that balancing to occur you can configure that I I don't know all of the details",
    "start": "3591200",
    "end": "3597960"
  },
  {
    "text": "by heart but but there are options hints that you can give to Orleans on how to",
    "start": "3597960",
    "end": "3603160"
  },
  {
    "text": "uh how to configure that so you may want to have some cranes in region a some other cranes region b or maybe just make",
    "start": "3603160",
    "end": "3609599"
  },
  {
    "text": "sure that 50% of the crane tabes always in a and the other 15 is always in b um",
    "start": "3609599",
    "end": "3615720"
  },
  {
    "text": "what I was keeping in mind is for example uh we have an event that is happening in region E A for example and",
    "start": "3615720",
    "end": "3624000"
  },
  {
    "text": "there is no event in a far location in a region B so if the system will try to",
    "start": "3624000",
    "end": "3630119"
  },
  {
    "text": "distribute load automatically like in equal way then for example we have a",
    "start": "3630119",
    "end": "3635599"
  },
  {
    "text": "high load in a region a but we don't want object to be stored in a region B because it will be a very big latency",
    "start": "3635599",
    "end": "3642319"
  },
  {
    "text": "between those regions yeah yeah so so if you have if if your cluster consists of",
    "start": "3642319",
    "end": "3648280"
  },
  {
    "text": "servers where there's a lot of uh well l in between them you you want to give hint so keep it in A or B but then of",
    "start": "3648280",
    "end": "3655559"
  },
  {
    "text": "course if um if you lose an entire region it it can still reactivate all",
    "start": "3655559",
    "end": "3660760"
  },
  {
    "text": "those scens to the other region and then the question becomes okay but will that region be overloaded because all of the",
    "start": "3660760",
    "end": "3665960"
  },
  {
    "text": "people will not go to that region but that's really dependent on your specific situation yeah okay okay thank",
    "start": "3665960",
    "end": "3675000"
  },
  {
    "text": "you all right so thank you very much and uh enjoy the last couple of sessions",
    "start": "3677680",
    "end": "3682920"
  },
  {
    "text": "here at NDC and uh if you could all please remember to",
    "start": "3682920",
    "end": "3688640"
  },
  {
    "text": "evaluate the session with the cards thank you very",
    "start": "3688640",
    "end": "3692838"
  },
  {
    "text": "much oh okay yeah",
    "start": "3701480",
    "end": "3709480"
  },
  {
    "text": "yeah they give me me 30 days to mess around yeah yeah",
    "start": "3714839",
    "end": "3721760"
  },
  {
    "text": "yeah free to practice isimar",
    "start": "3721760",
    "end": "3726839"
  },
  {
    "text": "M yeah there yeah yeah yeah you you you",
    "start": "3726839",
    "end": "3731880"
  },
  {
    "text": "go to the a website and um um you do",
    "start": "3731880",
    "end": "3737640"
  },
  {
    "text": "need",
    "start": "3742359",
    "end": "3745359"
  }
]