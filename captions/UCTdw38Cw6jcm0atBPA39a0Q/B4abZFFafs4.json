[
  {
    "start": "0",
    "end": "134000"
  },
  {
    "text": "hi welcome",
    "start": "1860",
    "end": "4879"
  },
  {
    "text": "thank you that's the spirit okay um Welcome to our one hour of oauth",
    "start": "8000",
    "end": "17220"
  },
  {
    "text": "and um how many of you are doing all of like as developers like writing a client",
    "start": "17220",
    "end": "24359"
  },
  {
    "text": "application or writing uh token servers even maybe okay cool so um",
    "start": "24359",
    "end": "31140"
  },
  {
    "text": "one of the one of the most controversial decisions when they",
    "start": "31140",
    "end": "37860"
  },
  {
    "text": "um wrote oov 2.1 was about tokens and there",
    "start": "37860",
    "end": "44760"
  },
  {
    "text": "was always this one thing missing that got postponed postponed postponed and so",
    "start": "44760",
    "end": "50460"
  },
  {
    "text": "on which is called proof of possession yeah and it's finally here",
    "start": "50460",
    "end": "55559"
  },
  {
    "text": "but have you maybe by chance seen this TV show",
    "start": "55559",
    "end": "61079"
  },
  {
    "text": "the long way around no you should watch it it's great it's uh you and McGregor you know Obi-Wan",
    "start": "61079",
    "end": "67320"
  },
  {
    "text": "Kenobi um he uh he he and his friend they drive a bike from London to L.A but they're",
    "start": "67320",
    "end": "74820"
  },
  {
    "text": "going eastwards okay so they're going all around the world they basically took the longest",
    "start": "74820",
    "end": "80939"
  },
  {
    "text": "possible way that they could drive and when you look at the history of proof possession tokens that very much feels",
    "start": "80939",
    "end": "87299"
  },
  {
    "text": "exactly the same so it took a long way to finally get this uh in oauth and if",
    "start": "87299",
    "end": "94259"
  },
  {
    "text": "you don't know what proof possession means don't worry I will explain it um but it's finally here now not even in",
    "start": "94259",
    "end": "99840"
  },
  {
    "text": "one flavor even in two flavors and we'll talk about both cool so I'm Dominic um I've been",
    "start": "99840",
    "end": "107159"
  },
  {
    "text": "spending I think my whole life or career whatever um talking about oauth and of money",
    "start": "107159",
    "end": "113640"
  },
  {
    "text": "connect and implementing it a couple of times and we have a company and we have several open source projects and so on",
    "start": "113640",
    "end": "119640"
  },
  {
    "text": "and you can find the slides here on that um on that URL on speaker deck so you",
    "start": "119640",
    "end": "126060"
  },
  {
    "text": "don't need to take pictures all the time it's all in the slidex so you can have them directly now or whenever you want",
    "start": "126060",
    "end": "134459"
  },
  {
    "start": "134000",
    "end": "402000"
  },
  {
    "text": "okay um so you know oauth was released in I think",
    "start": "134459",
    "end": "142440"
  },
  {
    "text": "2012 yeah or of two I should say um and that's a long time ago and uh and",
    "start": "142440",
    "end": "148560"
  },
  {
    "text": "you know the the background of that thing was uh it just came out of the consumer space you know like the the",
    "start": "148560",
    "end": "154379"
  },
  {
    "text": "Google was one of the the big proponents like how can we authorize access to our Google Calendar and so on so oauth 2",
    "start": "154379",
    "end": "161040"
  },
  {
    "text": "just got a little bit more traction in the corporate world but it's of course way before uh web apis and all of these",
    "start": "161040",
    "end": "168780"
  },
  {
    "text": "Technologies were a big thing right so I've when they you know wrote oauth in",
    "start": "168780",
    "end": "176160"
  },
  {
    "text": "the first place they didn't anticipate where it will be used in 10 years time right and it turns out it's basically",
    "start": "176160",
    "end": "182580"
  },
  {
    "text": "used everywhere right I mean it's the standard every if you're doing API security you're gonna use oauth in some capacity yeah and um and it turned out",
    "start": "182580",
    "end": "190920"
  },
  {
    "text": "that um the way it was specified back then was secure enough for most Parts but there",
    "start": "190920",
    "end": "198060"
  },
  {
    "text": "were certain industries that looked for more Security in oauth and that is um you know the banking industry first and",
    "start": "198060",
    "end": "205379"
  },
  {
    "text": "foremost yeah so there's the far P standard far P stands for financial apis or they renamed it recently to financial",
    "start": "205379",
    "end": "211860"
  },
  {
    "text": "grade apis there's the healthcare sector yeah so I've did a lot of work with the",
    "start": "211860",
    "end": "216959"
  },
  {
    "text": "Norwegian Healthcare System um and there are other scenarios and um",
    "start": "216959",
    "end": "222180"
  },
  {
    "text": "they needed a little bit more security than just you know what was specified in",
    "start": "222180",
    "end": "228000"
  },
  {
    "text": "um in the in in the original spec and um proof possession tokens was one of the",
    "start": "228000",
    "end": "233760"
  },
  {
    "text": "really important ones that was uh very hard to implement let's put it this",
    "start": "233760",
    "end": "239159"
  },
  {
    "text": "way so as every good tech tech talk yeah we're gonna we're gonna have three points here",
    "start": "239159",
    "end": "245580"
  },
  {
    "text": "what is it what is it about why do we have it what's the problem and if it's a problem",
    "start": "245580",
    "end": "252360"
  },
  {
    "text": "how can we fix it okay so everybody who does oauth here who knows",
    "start": "252360",
    "end": "258900"
  },
  {
    "text": "oauth or even if they don't they know that this is kind of like the canonical diagram right how oauth works yeah you",
    "start": "258900",
    "end": "265560"
  },
  {
    "text": "have a client application that has a so-called token a bearer token and that sends it to the API and then you know",
    "start": "265560",
    "end": "273060"
  },
  {
    "text": "the API can validate the token and based on the validity of the token it can then return data yeah",
    "start": "273060",
    "end": "279720"
  },
  {
    "text": "now um very important here is the word Bearer yeah so what Bearer means is is",
    "start": "279720",
    "end": "285660"
  },
  {
    "text": "um an hour of Bearer token is like it's like cash right so if you're losing cash on the street and somebody finds it they",
    "start": "285660",
    "end": "292500"
  },
  {
    "text": "can just take it and buy nice things and that's exactly the same as with a o of Bearer tokens anybody who gets to get",
    "start": "292500",
    "end": "299160"
  },
  {
    "text": "your token can use it right um and that kind of assumes a perfect world",
    "start": "299160",
    "end": "306419"
  },
  {
    "text": "right it assumes that where you issue the token is perfect perfectly secure",
    "start": "306419",
    "end": "311639"
  },
  {
    "text": "where you store the token is perfectly secure where you receive the token is perfectly secure so you're never going",
    "start": "311639",
    "end": "317639"
  },
  {
    "text": "to leak the token you're not um you know that there's no eavesdropping there are no reverse proxies where people can read",
    "start": "317639",
    "end": "324000"
  },
  {
    "text": "your data in clear text or your tokens in clear text um so it basically assumes a perfect",
    "start": "324000",
    "end": "329280"
  },
  {
    "text": "world yeah and um while this is good enough for some",
    "start": "329280",
    "end": "335639"
  },
  {
    "text": "scenarios it is not good enough for others as I said for things like you",
    "start": "335639",
    "end": "340740"
  },
  {
    "text": "know when you do money transactions or you know in in Norway you have this API where you can notify that someone is has",
    "start": "340740",
    "end": "346500"
  },
  {
    "text": "died for example uh that you want to have high tight security on that API endpoint for example yeah it's uh it's very",
    "start": "346500",
    "end": "352740"
  },
  {
    "text": "sensitive yeah uh or you know your Azure portal right I mean the the token that",
    "start": "352740",
    "end": "357840"
  },
  {
    "text": "has access to all of your Cloud subscriptions that's pretty sensitive stuff right I mean you don't want to",
    "start": "357840",
    "end": "363000"
  },
  {
    "text": "assume perfect security especially when there are one million lines of JavaScript code involved yeah so",
    "start": "363000",
    "end": "369539"
  },
  {
    "text": "then what what we all wanted was a a more secure token type something that",
    "start": "369539",
    "end": "376979"
  },
  {
    "text": "can be somehow bound to the client that requested the token in the first place",
    "start": "376979",
    "end": "382080"
  },
  {
    "text": "and even if that client would lose that token on the street nobody could use it",
    "start": "382080",
    "end": "387120"
  },
  {
    "text": "right compare that a little bit to credit cards maybe where you have that the token itself and maybe a pin or you",
    "start": "387120",
    "end": "393960"
  },
  {
    "text": "know some sort of secret or you know something like this yeah um and that was and that is basically the",
    "start": "393960",
    "end": "400380"
  },
  {
    "text": "the problem space here so who who is old enough to remember this",
    "start": "400380",
    "end": "406699"
  },
  {
    "text": "right the Oasis that was basically the web web service technology that predates",
    "start": "406699",
    "end": "413220"
  },
  {
    "text": "oauth yeah and that was an Enterprise thing right I mean when you open the",
    "start": "413220",
    "end": "418620"
  },
  {
    "text": "spec I mean look at who wrote them I mean that's not the place for Yuma here yeah I mean we're talking about like",
    "start": "418620",
    "end": "424440"
  },
  {
    "text": "really serious Enterprise stuff yeah and um WS security had this proof of",
    "start": "424440",
    "end": "430620"
  },
  {
    "text": "possession feature right from the start and it never got ported over to oauth and everybody was asking why there seems",
    "start": "430620",
    "end": "436979"
  },
  {
    "text": "it seems like a step back from WS security to oauth and they were right in",
    "start": "436979",
    "end": "442319"
  },
  {
    "text": "in the sense of that this particular feature was never been implemented so let's have a look first before we",
    "start": "442319",
    "end": "448259"
  },
  {
    "text": "appreciate how the new stuff works how proof possession has worked back then",
    "start": "448259",
    "end": "454620"
  },
  {
    "start": "451000",
    "end": "597000"
  },
  {
    "text": "so you know imagine WS WCF or something like this right",
    "start": "454620",
    "end": "460979"
  },
  {
    "text": "um when you asked for a token for calling a service here what you did basically was generate a secret like you",
    "start": "460979",
    "end": "467639"
  },
  {
    "text": "know like a random number or a symmetry key or whatever it was yeah and then you send that secret to the Token service",
    "start": "467639",
    "end": "474560"
  },
  {
    "text": "and oh and a very important thing is you know in 2004 we did not assume TLS",
    "start": "474560",
    "end": "482099"
  },
  {
    "text": "right I mean back then most especially in the Enterprise stuff was running over plain text HTTP so you could not just",
    "start": "482099",
    "end": "489000"
  },
  {
    "text": "send sensitive data over the wire yeah things have changed a little bit here but basically to make sure that nobody",
    "start": "489000",
    "end": "495300"
  },
  {
    "text": "can read that secret on the wire you had to encrypt it with the public key of the token service",
    "start": "495300",
    "end": "501419"
  },
  {
    "text": "okay and then when the when the token service returned you back",
    "start": "501419",
    "end": "506580"
  },
  {
    "text": "the token basically what it did is it created a saml token yeah and then",
    "start": "506580",
    "end": "511680"
  },
  {
    "text": "encrypted that sample token for the ultimate recipient okay and then when you got that token",
    "start": "511680",
    "end": "518399"
  },
  {
    "text": "you forwarded it to the service and then you signed your as your token or your",
    "start": "518399",
    "end": "524099"
  },
  {
    "text": "XML buddy with the secret inside the saml token okay so in other words",
    "start": "524099",
    "end": "530820"
  },
  {
    "text": "um the secret itself when never in plain text Over The Wire yeah you basically had to encrypt it on the one end and you",
    "start": "530820",
    "end": "537600"
  },
  {
    "text": "had to sign something with that secret on the other end okay um that worked right but so why didn't",
    "start": "537600",
    "end": "543360"
  },
  {
    "text": "they just one on one um ported that over well because there is",
    "start": "543360",
    "end": "549839"
  },
  {
    "text": "big pain points here with key management right because what that means here is is that the client needs to know the public",
    "start": "549839",
    "end": "556560"
  },
  {
    "text": "key of the STS up front the STS needs to know the public key of the API up front",
    "start": "556560",
    "end": "562440"
  },
  {
    "text": "okay and now bring key rotation into that picture right you should rotate your keys very regularly right",
    "start": "562440",
    "end": "570060"
  },
  {
    "text": "it didn't work I mean who did WCF in the rooms are the people with WCF you",
    "start": "570060",
    "end": "575220"
  },
  {
    "text": "remember these long config files with xx509 thumbprints and all that stuff yeah that worked once and then someone",
    "start": "575220",
    "end": "582720"
  },
  {
    "text": "rotated the key and it all broke yeah so that was not what they wanted to do yeah",
    "start": "582720",
    "end": "588420"
  },
  {
    "text": "now yeah and then they found more stuff to",
    "start": "588420",
    "end": "593459"
  },
  {
    "text": "put on top to make it even more secure and harder I should say um so",
    "start": "593459",
    "end": "599519"
  },
  {
    "start": "597000",
    "end": "711000"
  },
  {
    "text": "when oauth 1.0 came along and that is a version of that not so many people have",
    "start": "599519",
    "end": "605220"
  },
  {
    "text": "used right it's a it was a bit of a niche thing uh Google as I said was one of the main sponsors they hired a guy",
    "start": "605220",
    "end": "611459"
  },
  {
    "text": "called Aaron Hammer who wrote the original oauth 1.0 spec and he was a",
    "start": "611459",
    "end": "616800"
  },
  {
    "text": "security guy and he said well um there's no way we want to send our tokens in Bearer format over the wire",
    "start": "616800",
    "end": "623279"
  },
  {
    "text": "it's it's too dangerous if they leak and again keep in mind that was the premise was we don't have TLS even or can't",
    "start": "623279",
    "end": "630720"
  },
  {
    "text": "can't assume till as necessarily right so over of 1.0 actually defaulted to",
    "start": "630720",
    "end": "638459"
  },
  {
    "text": "Signature bound tokens so they had they invented the thing where there was a signature attached to the token and you",
    "start": "638459",
    "end": "644940"
  },
  {
    "text": "had to sign the HTTP request and when you open the spec for that",
    "start": "644940",
    "end": "651980"
  },
  {
    "text": "you see that is uh where it says how that works so it goes on",
    "start": "653399",
    "end": "658920"
  },
  {
    "text": "and on and making the request and then you have to send all of these things and then you're normalizing all of these",
    "start": "658920",
    "end": "665459"
  },
  {
    "text": "things and you end up with something like this and then it goes on again and it looks like this now and then you have",
    "start": "665459",
    "end": "670980"
  },
  {
    "text": "to verify it and then on the other end of the wire you cannot assume that the query string parameters are sent in the",
    "start": "670980",
    "end": "676140"
  },
  {
    "text": "same order as they were sent because reverse proxies could have shuffled them around and so basically there is like a",
    "start": "676140",
    "end": "682920"
  },
  {
    "text": "15 odd pages in the document just that describes how to assign the token so",
    "start": "682920",
    "end": "689519"
  },
  {
    "text": "it's bound to the client that was pretty complicated yeah and again nobody really liked that",
    "start": "689519",
    "end": "695459"
  },
  {
    "text": "yeah so um even Aaron afterwards said like that was too hard yeah it it they did they would",
    "start": "695459",
    "end": "703200"
  },
  {
    "text": "have wished they found a a simpler solution to the problem ma'am but now when oauth became really popular right",
    "start": "703200",
    "end": "711300"
  },
  {
    "start": "711000",
    "end": "814000"
  },
  {
    "text": "um and they wanted to to revise the spec to a new version all of these um you",
    "start": "711300",
    "end": "717300"
  },
  {
    "text": "know enterprise-ish companies came onto the ietf meetings at like Microsoft and uh Oracle and and so on and they said",
    "start": "717300",
    "end": "725519"
  },
  {
    "text": "like yeah we we are moving to this web API stuff but of 1.0 is too hard yeah",
    "start": "725519",
    "end": "730980"
  },
  {
    "text": "it's and they were right I mean 1.0 with the absence of really good client",
    "start": "730980",
    "end": "736740"
  },
  {
    "text": "libraries it was basically way too hard to implement all of that signing for every single request that you're making",
    "start": "736740",
    "end": "743040"
  },
  {
    "text": "to an API so guess what was the solution to that get rid of it right",
    "start": "743040",
    "end": "750120"
  },
  {
    "text": "um let's find a simpler solution to the problem and that's where they came up with Bearer tokens basically tokens",
    "start": "750120",
    "end": "756480"
  },
  {
    "text": "which are not bound to the client yeah and um the same Aaron Hammer guy who was the",
    "start": "756480",
    "end": "763980"
  },
  {
    "text": "the original spec offer he didn't like the idea at all okay so he wrote a a bunch of blog posts saying that this is",
    "start": "763980",
    "end": "770940"
  },
  {
    "text": "a terrible idea the lack of signature support makes stuff less secure and he was right",
    "start": "770940",
    "end": "777180"
  },
  {
    "text": "okay but at this time you have to understand the ITF is also a little bit of a political thing there were more",
    "start": "777180",
    "end": "782820"
  },
  {
    "text": "people from the Enterprise in the room than him so they you know figured",
    "start": "782820",
    "end": "789540"
  },
  {
    "text": "let's let's start with Bearer and we're going to add the signature stuff later okay as I said Aaron was very very very",
    "start": "789540",
    "end": "797940"
  },
  {
    "text": "unhappy with that and he actually um he actually um removed the name from the overall",
    "start": "797940",
    "end": "805560"
  },
  {
    "text": "spec that he worked on for many many years it's like I don't want to be associated with this anymore it is insecure okay so he focused more his",
    "start": "805560",
    "end": "812760"
  },
  {
    "text": "life on creating funny pictures that for example um",
    "start": "812760",
    "end": "818160"
  },
  {
    "start": "814000",
    "end": "835000"
  },
  {
    "text": "or and if you want to know all of the details and his thought process he did a",
    "start": "818160",
    "end": "823500"
  },
  {
    "text": "really good talk at a conference years ago where he introduced a new hashtag that you should use whenever you talk",
    "start": "823500",
    "end": "828600"
  },
  {
    "text": "about oauth um and he left right he he was done with that basically",
    "start": "828600",
    "end": "836040"
  },
  {
    "start": "835000",
    "end": "889000"
  },
  {
    "text": "now the last passing passing uh gift that he",
    "start": "836040",
    "end": "841860"
  },
  {
    "text": "or you know demand he had was please um",
    "start": "841860",
    "end": "848220"
  },
  {
    "text": "um please make sure that you're gonna bring proof of profession or signature bound",
    "start": "848220",
    "end": "853860"
  },
  {
    "text": "tokens back okay so have you ever wondered why there are two specs RFC 6749 which is how to get the token and",
    "start": "853860",
    "end": "860760"
  },
  {
    "text": "out of six RFC 6750 how to use the token basically because the idea was let's",
    "start": "860760",
    "end": "867300"
  },
  {
    "text": "have a spec for Bearer tokens and then let's have a spec afterwards for Signature bound tokens and let's",
    "start": "867300",
    "end": "872459"
  },
  {
    "text": "separate them so that one spec can stay as it is how to get the token and then we have two flavors of that Bearer for",
    "start": "872459",
    "end": "879660"
  },
  {
    "text": "normal scenarios and proof possession for the ones that want the extra security",
    "start": "879660",
    "end": "885300"
  },
  {
    "text": "but guess what it never happened Okay so there were multiple attempts to",
    "start": "885300",
    "end": "892440"
  },
  {
    "start": "889000",
    "end": "970000"
  },
  {
    "text": "implement proof possession um for oauth and you can see he has a screenshot of a couple of specs that all",
    "start": "892440",
    "end": "899100"
  },
  {
    "text": "have expired in the meantime because they realized um it's a hard problem to solve right it's",
    "start": "899100",
    "end": "906660"
  },
  {
    "text": "uh it's not easy and one way or another you're gonna end up again in signing HTTP requests and that made it very",
    "start": "906660",
    "end": "914160"
  },
  {
    "text": "similar to what we had before that didn't that no one liked yeah so you",
    "start": "914160",
    "end": "919199"
  },
  {
    "text": "know they expired people were working on that but the interest wasn't big enough",
    "start": "919199",
    "end": "924839"
  },
  {
    "text": "basically to to you know do any extra or further work the only thing um which is",
    "start": "924839",
    "end": "931199"
  },
  {
    "text": "a very ietf effish thing to do is um they said okay if there would be proof",
    "start": "931199",
    "end": "936420"
  },
  {
    "text": "of possession we would know how to express it in a Json web token and that's the only spec that got published",
    "start": "936420",
    "end": "942540"
  },
  {
    "text": "but in absence of the actual technology this didn't make sense too much at the",
    "start": "942540",
    "end": "948420"
  },
  {
    "text": "time at least ma'am so they first try to solve the the signature binding of the",
    "start": "948420",
    "end": "955320"
  },
  {
    "text": "tokens to your hdp request at the application Level which is very similar to of 1.0 nobody liked that at",
    "start": "955320",
    "end": "963000"
  },
  {
    "text": "the same time there was some promising new developments in in HTTPS yeah and",
    "start": "963000",
    "end": "969360"
  },
  {
    "text": "there was a thing called token binding so the idea was that this is a TLS extension that where you can then bind",
    "start": "969360",
    "end": "977100"
  },
  {
    "start": "970000",
    "end": "1064000"
  },
  {
    "text": "the oauth token to the TLs channel that it's about that it's submitted to right",
    "start": "977100",
    "end": "982500"
  },
  {
    "text": "so if now somebody would be able to steal the token but would not have the same key last Channel then they couldn't",
    "start": "982500",
    "end": "988560"
  },
  {
    "text": "resend the token yeah and the beauty of that idea was that there was would not",
    "start": "988560",
    "end": "993720"
  },
  {
    "text": "be any custom coding necessary it would all be done at the network level right but this required a whole bunch of",
    "start": "993720",
    "end": "1001339"
  },
  {
    "text": "changes um and there were some concerns and",
    "start": "1001339",
    "end": "1006459"
  },
  {
    "text": "especially around now every single Network device between the client and",
    "start": "1006459",
    "end": "1011779"
  },
  {
    "text": "the server now has to support this new TLS extension how long will this take and ultimately",
    "start": "1011779",
    "end": "1018820"
  },
  {
    "text": "Google made the decision for all of us in that they said we are going to remove",
    "start": "1018820",
    "end": "1024199"
  },
  {
    "text": "it from chrome okay so it was a bit of a",
    "start": "1024199",
    "end": "1029780"
  },
  {
    "text": "useless situation now if you're trying to build something as a standard and the biggest browser in the world just refuse",
    "start": "1029780",
    "end": "1036500"
  },
  {
    "text": "to implement it Ma'am why they exactly did that they never told anyone",
    "start": "1036500",
    "end": "1042558"
  },
  {
    "text": "there are some rumors and conspiracy theories as well and so on um but long",
    "start": "1042559",
    "end": "1048020"
  },
  {
    "text": "story short they they removed it and from from one day to the other this thing was just dead in the water okay so",
    "start": "1048020",
    "end": "1054860"
  },
  {
    "text": "the the transport level thing didn't work the the application Level thing didn't work so we we we went back to",
    "start": "1054860",
    "end": "1061520"
  },
  {
    "text": "square one there was no solution for token binding um no",
    "start": "1061520",
    "end": "1066919"
  },
  {
    "start": "1064000",
    "end": "1158000"
  },
  {
    "text": "funny things happen um the industry jumps in okay so um that",
    "start": "1066919",
    "end": "1072260"
  },
  {
    "text": "was is there a day 2017-ish um the the banking industry expressed a",
    "start": "1072260",
    "end": "1079700"
  },
  {
    "text": "lot of interest in implementing overall for their apis there was this thing called psd2 the payment service",
    "start": "1079700",
    "end": "1085640"
  },
  {
    "text": "directive two which is a Europe in EU Initiative for banking for electronic",
    "start": "1085640",
    "end": "1091640"
  },
  {
    "text": "banking which utilized oauth and there was uh fapi the financial API",
    "start": "1091640",
    "end": "1097640"
  },
  {
    "text": "specification that utilized oauth as well and in both specs they said we only",
    "start": "1097640",
    "end": "1103460"
  },
  {
    "text": "allow proof possession tokens but this technology didn't exist",
    "start": "1103460",
    "end": "1108520"
  },
  {
    "text": "so there was this magic deadline I can't remember was it 2019 or something where",
    "start": "1108520",
    "end": "1113780"
  },
  {
    "text": "every Bank in the EU had to switch to this new Fabi uh standard and pretty",
    "start": "1113780",
    "end": "1119179"
  },
  {
    "text": "much all of them missed the deadline because well the technology wasn't there yeah um but the good thing was but with now",
    "start": "1119179",
    "end": "1125720"
  },
  {
    "text": "with the pressure of the bigger Industries like banking for example um there was again more interest in",
    "start": "1125720",
    "end": "1131600"
  },
  {
    "text": "trying to solve the problem now no one really knew",
    "start": "1131600",
    "end": "1137419"
  },
  {
    "text": "what the best way would be but we um as a stop Gap solution",
    "start": "1137419",
    "end": "1143500"
  },
  {
    "text": "the bank said why can't we use what we have today which is a mutual TLS right so why can't we leverage",
    "start": "1143500",
    "end": "1151220"
  },
  {
    "text": "um a technology that is at Banks widely deployed pki x509 Mutual TLS and use",
    "start": "1151220",
    "end": "1158360"
  },
  {
    "start": "1158000",
    "end": "1207000"
  },
  {
    "text": "that to bind access tokens to basically the",
    "start": "1158360",
    "end": "1163640"
  },
  {
    "text": "the certificate the client certificate that is used to open the TLs connection right and the beauty of that um idea was",
    "start": "1163640",
    "end": "1171559"
  },
  {
    "text": "that all of the technology was existent yeah if you already had pki and mtls",
    "start": "1171559",
    "end": "1178760"
  },
  {
    "text": "right so and that is exactly what this this bag is about it was released in 2020 yeah",
    "start": "1178760",
    "end": "1184820"
  },
  {
    "text": "um and it's basically um oauth 2.0 Mutual TLS certificate bound access",
    "start": "1184820",
    "end": "1191900"
  },
  {
    "text": "token so in other words you could only use the access token if you can prove that you own the corresponding",
    "start": "1191900",
    "end": "1197020"
  },
  {
    "text": "certificate that goes along with the TLs connection ma'am",
    "start": "1197020",
    "end": "1202220"
  },
  {
    "text": "um as I said this was mainly pushed by by the banking industry because they had",
    "start": "1202220",
    "end": "1207320"
  },
  {
    "start": "1207000",
    "end": "1237000"
  },
  {
    "text": "the existing knowledge so Mutual TLS is nothing you do every day",
    "start": "1207320",
    "end": "1213080"
  },
  {
    "text": "right it's a it's kind of a niche thing it's also a very complicated thing but uh luckily I found this a very good",
    "start": "1213080",
    "end": "1219160"
  },
  {
    "text": "explainer video on YouTube that shows you how it works",
    "start": "1219160",
    "end": "1225700"
  },
  {
    "text": "that's it okay it works",
    "start": "1229400",
    "end": "1234100"
  },
  {
    "text": "okay so now assuming we have this working technology How would how would that work in practice Yeah again the",
    "start": "1235340",
    "end": "1242179"
  },
  {
    "start": "1237000",
    "end": "1320000"
  },
  {
    "text": "idea is very similar um if the if the client application wants to get a token from the token server it will either generate an x509",
    "start": "1242179",
    "end": "1250460"
  },
  {
    "text": "certificate and private key on the fly or it has an existing one in the third store or maybe it's a smart card that's",
    "start": "1250460",
    "end": "1256700"
  },
  {
    "text": "put into the machine or things like that right and then it would use that uh x509",
    "start": "1256700",
    "end": "1261980"
  },
  {
    "text": "certificate to open and open an mtls connection to the Token server and send along that x509 third okay and then what",
    "start": "1261980",
    "end": "1268820"
  },
  {
    "text": "the token server would do is would issue the token and embed inside the access token the hash of the x509 certificate",
    "start": "1268820",
    "end": "1276860"
  },
  {
    "text": "so at this point now you have an access token that is bound to an x509",
    "start": "1276860",
    "end": "1282260"
  },
  {
    "text": "certificate where only you have the private key okay and then when you would um make the API call you would use the",
    "start": "1282260",
    "end": "1290120"
  },
  {
    "text": "same x509 Mutual TLS certificate to open the connection to the API send along the",
    "start": "1290120",
    "end": "1296000"
  },
  {
    "text": "access token and then the API would basically look at the access token find the hash look at the transport layer",
    "start": "1296000",
    "end": "1303020"
  },
  {
    "text": "find the third hash the third if both values match you have proven that you",
    "start": "1303020",
    "end": "1308059"
  },
  {
    "text": "know the secret okay and again an attacker that would steal the token would not have the private key to be",
    "start": "1308059",
    "end": "1314840"
  },
  {
    "text": "able to do the you know open the TLs Channel okay",
    "start": "1314840",
    "end": "1320659"
  },
  {
    "start": "1320000",
    "end": "1388000"
  },
  {
    "text": "so that's how that looks like it's an example you know Json web token and you",
    "start": "1320659",
    "end": "1326960"
  },
  {
    "text": "can see that there's a special claim now in the token called the CNF the confirmation claim and basically what",
    "start": "1326960",
    "end": "1333500"
  },
  {
    "text": "this says is that's how the sender can prove he knows the secret in this case it's via an x509 thumbprint in Char 256",
    "start": "1333500",
    "end": "1341240"
  },
  {
    "text": "format okay and um you know that that that is working",
    "start": "1341240",
    "end": "1348320"
  },
  {
    "text": "but it requires you to have mutual TLS in place and pki in place and you know",
    "start": "1348320",
    "end": "1354440"
  },
  {
    "text": "in all of the processes that you need around that and if you already have that in your company perfect but especially",
    "start": "1354440",
    "end": "1361700"
  },
  {
    "text": "for internet facing scenarios like like a mobile phone calling to some server",
    "start": "1361700",
    "end": "1367059"
  },
  {
    "text": "all of that complicated you know uh jump over the internet every reverse proxy",
    "start": "1367059",
    "end": "1372440"
  },
  {
    "text": "would need to forward the third in the right format and so on so it wasn't for everyone it was for banks definitely it",
    "start": "1372440",
    "end": "1379640"
  },
  {
    "text": "was for intranets that have that technology in place but it wasn't for everyone ma'am",
    "start": "1379640",
    "end": "1385400"
  },
  {
    "text": "it's a bit of a shame because it did work well it does work yeah um so if you're a DOT net developer that",
    "start": "1385400",
    "end": "1391460"
  },
  {
    "start": "1388000",
    "end": "1491000"
  },
  {
    "text": "is all you need to do to create an x509 certificate on the fly so it's not that hard work yeah I mean it's a bit of a",
    "start": "1391460",
    "end": "1396860"
  },
  {
    "text": "boilerplate code with some magic numbers and so on um that oid here means client certificate yeah",
    "start": "1396860",
    "end": "1403520"
  },
  {
    "text": "um and then you can just take this client certificate coming back bind it to your HTTP client and make the call",
    "start": "1403520",
    "end": "1409580"
  },
  {
    "text": "okay actually I can show you that we have that implemented for a long time",
    "start": "1409580",
    "end": "1416419"
  },
  {
    "text": "um so um let's just you know there's nothing really visual to see",
    "start": "1416419",
    "end": "1422659"
  },
  {
    "text": "here um but let's just um run a client using mtls and going to",
    "start": "1422659",
    "end": "1428720"
  },
  {
    "text": "an mtlers secured endpoint and as you can see from an end user perspective it all looks you know it's invisible yeah",
    "start": "1428720",
    "end": "1436880"
  },
  {
    "text": "but when I now look at the access token that came back from the token server",
    "start": "1436880",
    "end": "1443200"
  },
  {
    "text": "um okay you see that there is now",
    "start": "1444140",
    "end": "1450860"
  },
  {
    "text": "this special claim here the CNF claim and that is basically what binds the",
    "start": "1450860",
    "end": "1457039"
  },
  {
    "text": "access token to the client certificate yeah and then on the API side of course you",
    "start": "1457039",
    "end": "1463220"
  },
  {
    "text": "have to do some some other things yeah like in the API in startup you would",
    "start": "1463220",
    "end": "1468620"
  },
  {
    "text": "basically have a middleware here that runs after the initial token validation that then looks at the claim then looks",
    "start": "1468620",
    "end": "1475039"
  },
  {
    "text": "at the hash of the transport certificate Compares them and if they match you know",
    "start": "1475039",
    "end": "1480559"
  },
  {
    "text": "you have the right the right caller okay",
    "start": "1480559",
    "end": "1485679"
  },
  {
    "text": "cool um right so so to summarize that",
    "start": "1487760",
    "end": "1495140"
  },
  {
    "start": "1491000",
    "end": "1527000"
  },
  {
    "text": "um that that is widely available technology it solves the problem it's around now for three years the spec is",
    "start": "1495140",
    "end": "1501260"
  },
  {
    "text": "around for three years um but what we've seen with our customers at least is that uh it's hard",
    "start": "1501260",
    "end": "1508940"
  },
  {
    "text": "to implement if you don't have pre-existing infrastructure for that ma'am um you know it also wouldn't work in the",
    "start": "1508940",
    "end": "1515600"
  },
  {
    "text": "browser for example if that's what you are going for um so yeah there were some definitely",
    "start": "1515600",
    "end": "1521240"
  },
  {
    "text": "some um downsides okay",
    "start": "1521240",
    "end": "1527200"
  },
  {
    "start": "1527000",
    "end": "1589000"
  },
  {
    "text": "now fast forwarding to uh the very near future I guess",
    "start": "1527480",
    "end": "1533000"
  },
  {
    "text": "um is that okay we now have this empty less thing",
    "start": "1533000",
    "end": "1538039"
  },
  {
    "text": "um but for those who can't do mtls we need something better so so we are back",
    "start": "1538039",
    "end": "1544039"
  },
  {
    "text": "basically to the beginning where we started with can we do something at the application Level yeah and that's a new",
    "start": "1544039",
    "end": "1549860"
  },
  {
    "text": "spec which actually um just last week um is now in the hands of the RFC editor",
    "start": "1549860",
    "end": "1555559"
  },
  {
    "text": "whatever that really means but it means it's going to be published soon okay so",
    "start": "1555559",
    "end": "1561260"
  },
  {
    "text": "it's going to be a real RFC um a real standard there are companies who implement it already for example us",
    "start": "1561260",
    "end": "1568039"
  },
  {
    "text": "because we we believe and that is that the more general purpose",
    "start": "1568039",
    "end": "1573919"
  },
  {
    "text": "um solution to the problem and the whole idea is that let's do the same thing but now try it at the application Level but",
    "start": "1573919",
    "end": "1580220"
  },
  {
    "text": "not be as horrible as the old message bound signatures back then okay so how",
    "start": "1580220",
    "end": "1587059"
  },
  {
    "text": "does that work um you see they're always the same pictures it's amazing that for all my",
    "start": "1587059",
    "end": "1593419"
  },
  {
    "text": "career I basically get got away with just free icons in my slides um it's a client a token service and an",
    "start": "1593419",
    "end": "1599900"
  },
  {
    "text": "API um but yeah it is again it's a very similar idea but this time you're not",
    "start": "1599900",
    "end": "1605720"
  },
  {
    "text": "generating an x59 certificate you're generating just a key pair that could be an RSA key pair could be an elliptic",
    "start": "1605720",
    "end": "1612140"
  },
  {
    "text": "curves key pair yeah uh for for now these are the ones right and then um you use that to sign a so-called",
    "start": "1612140",
    "end": "1618980"
  },
  {
    "text": "proof token I'm going to show you what a proof token is in a second there and then you request the token from the",
    "start": "1618980",
    "end": "1624740"
  },
  {
    "text": "token server do whatever client authentication you do so that's unrelated to client authentication send",
    "start": "1624740",
    "end": "1632000"
  },
  {
    "text": "along the proof token and now the will validate the proof token and",
    "start": "1632000",
    "end": "1637039"
  },
  {
    "text": "respond with a an access token and the access token contains now the hash",
    "start": "1637039",
    "end": "1643340"
  },
  {
    "text": "of the proof token or or rather the key material that was signed used to sign",
    "start": "1643340",
    "end": "1648620"
  },
  {
    "text": "the proof token um how does that look like it's a bit abstract and then ultimately you're",
    "start": "1648620",
    "end": "1654860"
  },
  {
    "text": "going to call the API and send along another proof token using the same key material and I'll show you how that",
    "start": "1654860",
    "end": "1660320"
  },
  {
    "text": "works um but basically if you are if you're used to do oauth you know a token",
    "start": "1660320",
    "end": "1665360"
  },
  {
    "start": "1661000",
    "end": "1686000"
  },
  {
    "text": "request right you do a post to the Token endpoint you send along your body parameters like cran type and the",
    "start": "1665360",
    "end": "1672080"
  },
  {
    "text": "authorization code and redirect URL and client ID client you know all of these things but in addition you're adding",
    "start": "1672080",
    "end": "1679220"
  },
  {
    "text": "another header called depop and that that depop header is the so-called proof",
    "start": "1679220",
    "end": "1684500"
  },
  {
    "text": "token so what's what's the proof token basically a proof token is a Json lab",
    "start": "1684500",
    "end": "1690200"
  },
  {
    "start": "1686000",
    "end": "1794000"
  },
  {
    "text": "token um which has the public key",
    "start": "1690200",
    "end": "1696320"
  },
  {
    "text": "um embedded in the header and you're assigning that proof token with the corresponding private key which is your",
    "start": "1696320",
    "end": "1702740"
  },
  {
    "text": "secret okay and then you are basically and and what they wanted to avoid yeah",
    "start": "1702740",
    "end": "1708260"
  },
  {
    "text": "is that you're going okay full you know full uh full HTTP signals again so",
    "start": "1708260",
    "end": "1714799"
  },
  {
    "text": "basically you're assigning only parts of the HTTP request in particular you're",
    "start": "1714799",
    "end": "1719960"
  },
  {
    "text": "signing the HTA the HTTP method which is opposed in this example and the HTTP URL",
    "start": "1719960",
    "end": "1726080"
  },
  {
    "text": "which is the end point you are sending that proof token to um you could sign more if you want to",
    "start": "1726080",
    "end": "1733100"
  },
  {
    "text": "but that's the minimum requirements and then they're adding an issue ad claim which tells you how old the proof token",
    "start": "1733100",
    "end": "1739760"
  },
  {
    "text": "is proof token should be very short-lived um like like a minute maybe something",
    "start": "1739760",
    "end": "1745220"
  },
  {
    "text": "like this yeah and the jti claim is a unique token identifier okay so",
    "start": "1745220",
    "end": "1752720"
  },
  {
    "text": "basically um we are sacrificing some of the security by only um signing parts of the request but on",
    "start": "1752720",
    "end": "1760100"
  },
  {
    "text": "the other hand the recipient is is forced to maintain a replay cache okay",
    "start": "1760100",
    "end": "1766100"
  },
  {
    "text": "this replay cache is as long as you allow your tokens to be old one minute for example and you are caching the",
    "start": "1766100",
    "end": "1773120"
  },
  {
    "text": "replay thing based on the jti so in in theory or you know also in practice if",
    "start": "1773120",
    "end": "1778159"
  },
  {
    "text": "you implement it correctly you should never be able to to use a replayed token",
    "start": "1778159",
    "end": "1783200"
  },
  {
    "text": "because of the replay detection mechanism okay so yeah so that's basically what I just",
    "start": "1783200",
    "end": "1789380"
  },
  {
    "text": "said um and then the token responds from that",
    "start": "1789380",
    "end": "1795380"
  },
  {
    "start": "1794000",
    "end": "1826000"
  },
  {
    "text": "will be an access token again just like before but this time it has a different CNF value which says j k t which is my",
    "start": "1795380",
    "end": "1805640"
  },
  {
    "text": "favorite sentence of this slide deck it's the base64 URL encoding of the jwk shar256 thumbprint of the public key",
    "start": "1805640",
    "end": "1813140"
  },
  {
    "text": "okay so that's basically the unique identifier of that signature that",
    "start": "1813140",
    "end": "1820100"
  },
  {
    "text": "belongs to to your secret which is your private key yeah and then",
    "start": "1820100",
    "end": "1826700"
  },
  {
    "start": "1826000",
    "end": "1854000"
  },
  {
    "text": "when you're now making the resource access actually you are sending the normal",
    "start": "1826700",
    "end": "1833200"
  },
  {
    "text": "JWT access token on the authorization header just as usual but you see now",
    "start": "1833200",
    "end": "1838580"
  },
  {
    "text": "it's not Bearer anymore it's now depop okay so it's not a bearer token and then",
    "start": "1838580",
    "end": "1845779"
  },
  {
    "text": "you're sending an additional header the depop header which then contains the proof token for the API",
    "start": "1845779",
    "end": "1852500"
  },
  {
    "text": "so how does that look like well very similar it's um a Json web",
    "start": "1852500",
    "end": "1857899"
  },
  {
    "start": "1854000",
    "end": "1900000"
  },
  {
    "text": "token it is assigned by the same secret that you use to sign the proof token to",
    "start": "1857899",
    "end": "1863120"
  },
  {
    "text": "the Token service and it has a unique jti it has an issued",
    "start": "1863120",
    "end": "1869120"
  },
  {
    "text": "ad it has an HTML method a get in this case it has an HTTP URL the the end",
    "start": "1869120",
    "end": "1875179"
  },
  {
    "text": "point you are talking to and now very very important this here the ath is the signature sorry",
    "start": "1875179",
    "end": "1884000"
  },
  {
    "text": "the um the hash of the access token and that what binds that proof token to the",
    "start": "1884000",
    "end": "1890240"
  },
  {
    "text": "access token so you're having a two-way binding here you see um the access token has the hash of the",
    "start": "1890240",
    "end": "1896419"
  },
  {
    "text": "key of the proof token in in the confirmation claim and the proof token",
    "start": "1896419",
    "end": "1901760"
  },
  {
    "start": "1900000",
    "end": "1955000"
  },
  {
    "text": "has the hash of the access token so they are basically bound two ways",
    "start": "1901760",
    "end": "1906940"
  },
  {
    "text": "cryptographically together okay and that's why you can't separate them anymore",
    "start": "1906940",
    "end": "1912559"
  },
  {
    "text": "yeah so if an attack I would now um get this thing they couldn't just start randomly creating new ones because they",
    "start": "1912559",
    "end": "1919640"
  },
  {
    "text": "wouldn't know the secret to create new proof tokens right um and so on same same thing applies",
    "start": "1919640",
    "end": "1925520"
  },
  {
    "text": "here again um the recipient of the token is now forced to maintain a replay cache again same",
    "start": "1925520",
    "end": "1932899"
  },
  {
    "text": "idea you have the issued ad claim so you know how old the token is and it's up to your policy to say like I only accept",
    "start": "1932899",
    "end": "1938539"
  },
  {
    "text": "tokens which are old maximum 60 seconds for example right and the jti is used to",
    "start": "1938539",
    "end": "1944600"
  },
  {
    "text": "maintain the replay cache to make sure you're not seeing the same token twice",
    "start": "1944600",
    "end": "1949840"
  },
  {
    "text": "okay does it make sense actually I can show you a demo of Dad",
    "start": "1950659",
    "end": "1958100"
  },
  {
    "start": "1955000",
    "end": "2060000"
  },
  {
    "text": "um so we shipped I identify version 6.3 last week",
    "start": "1958100",
    "end": "1964279"
  },
  {
    "text": "um and then finally now has support for depop which is great",
    "start": "1964279",
    "end": "1970419"
  },
  {
    "text": "so let's see",
    "start": "1971840",
    "end": "1974620"
  },
  {
    "text": "so let's start the identical host so so maybe first of all since we have some time I can show you here's our",
    "start": "1977000",
    "end": "1983360"
  },
  {
    "text": "um clients and basically what you can now do",
    "start": "1983360",
    "end": "1989360"
  },
  {
    "text": "um on the client is either so so with",
    "start": "1989360",
    "end": "1994460"
  },
  {
    "text": "that new release whenever you send us a proof token we will respond with a confirmation claim or you can actually",
    "start": "1994460",
    "end": "2000360"
  },
  {
    "text": "say require depop and then this forces the client to use uh send the proof",
    "start": "2000360",
    "end": "2006820"
  },
  {
    "text": "token and if the client wouldn't send the proof token we wouldn't even accept the token request okay so that's new",
    "start": "2006820",
    "end": "2013860"
  },
  {
    "text": "um let's run this",
    "start": "2014740",
    "end": "2017700"
  },
  {
    "text": "okay and then we can run the web client",
    "start": "2020799",
    "end": "2026559"
  },
  {
    "text": "foreign and again you know from a visual point of view that's super boring the end user",
    "start": "2026559",
    "end": "2033100"
  },
  {
    "text": "will never see that they are more secure now but um again when we look at the access token here",
    "start": "2033100",
    "end": "2040500"
  },
  {
    "text": "you can see now that there is now the CNF claim in there and that is now The Binding of the",
    "start": "2047200",
    "end": "2053138"
  },
  {
    "text": "access token to the key to the secret okay simply put",
    "start": "2053139",
    "end": "2059460"
  },
  {
    "text": "so that is that is problem solved right kind of um",
    "start": "2060159",
    "end": "2065679"
  },
  {
    "text": "now just to make make that really clear yeah so um you have to do this on every single API",
    "start": "2065679",
    "end": "2072099"
  },
  {
    "text": "request so for every single API request you're doing you have to create this proof token right and have to attach it",
    "start": "2072099",
    "end": "2077679"
  },
  {
    "text": "to the to the outgoing request and and for every single API uh call the API has",
    "start": "2077679",
    "end": "2083138"
  },
  {
    "text": "to validate all of this right so we you know uh thanks to the extensibility of",
    "start": "2083139",
    "end": "2090520"
  },
  {
    "text": "of asp.net it was pretty easy well pretty",
    "start": "2090520",
    "end": "2096460"
  },
  {
    "text": "easy to wrap it up for the for the API developer basically all you have to do you see here here's your Json web Bearer",
    "start": "2096460",
    "end": "2103540"
  },
  {
    "text": "Json web token Bearer authentication Handler it's called token and all you have to do to enable that feature is you",
    "start": "2103540",
    "end": "2110200"
  },
  {
    "text": "can basically configure you can say like okay this Handler here should require depop tokens now",
    "start": "2110200",
    "end": "2116500"
  },
  {
    "text": "there's a lot of code involved but I I don't have to show that it's it's uh it's all on our website it's free it's",
    "start": "2116500",
    "end": "2122800"
  },
  {
    "text": "it's a sample basically a working sample I should say um and that's basically what you have to do",
    "start": "2122800",
    "end": "2129280"
  },
  {
    "text": "now the net effect of that is that now when you are",
    "start": "2129280",
    "end": "2135900"
  },
  {
    "text": "having some sort of you know security incident your your your your your",
    "start": "2135900",
    "end": "2141160"
  },
  {
    "text": "um leaking a token or maybe you have eavesdropping or whatever um that that the attacker will not be",
    "start": "2141160",
    "end": "2146740"
  },
  {
    "text": "able to to use those tokens without knowing the secret which is exactly the problem we try to solve and in my",
    "start": "2146740",
    "end": "2152200"
  },
  {
    "text": "opinion the absolute sweet spot for that technology is native mobile applications",
    "start": "2152200",
    "end": "2158680"
  },
  {
    "text": "right you have applications on your phone you are by definition in untrusted",
    "start": "2158680",
    "end": "2163720"
  },
  {
    "text": "networks right you are like in Starbucks or in the you know the free Wi-Fi at the airport and you want to do a banking",
    "start": "2163720",
    "end": "2170380"
  },
  {
    "text": "transaction you don't know what network infrastructure your phone's",
    "start": "2170380",
    "end": "2175420"
  },
  {
    "text": "going to pass how many reverse proxies are there how many admins can see your traffic and so on so for that it's",
    "start": "2175420",
    "end": "2181540"
  },
  {
    "text": "perfect right you um you can just add this additional layer of security on top and no one can replay your tokens or or",
    "start": "2181540",
    "end": "2189400"
  },
  {
    "text": "you know misuse them if you like yeah",
    "start": "2189400",
    "end": "2194099"
  },
  {
    "start": "2199000",
    "end": "2344000"
  },
  {
    "text": "so that's depop right um the nice thing about depop is you don't need any special Network",
    "start": "2199599",
    "end": "2205420"
  },
  {
    "text": "infrastructure for that it works over any network um and you know the the actual",
    "start": "2205420",
    "end": "2212579"
  },
  {
    "text": "cryptography that that is involved is is widely available it's Json web token it's uh RSA it's elliptic curves right",
    "start": "2212579",
    "end": "2220300"
  },
  {
    "text": "so it can be implemented with any technology basically even in the browser and then not that I would recommend it",
    "start": "2220300",
    "end": "2226839"
  },
  {
    "text": "but you know you know you could um what's the the downside of this is well",
    "start": "2226839",
    "end": "2233020"
  },
  {
    "text": "it it's brand new right so whereas mtls was an established technology which is",
    "start": "2233020",
    "end": "2238240"
  },
  {
    "text": "around for I don't know 10 20 years whatever um that is obviously brand new it's not",
    "start": "2238240",
    "end": "2243760"
  },
  {
    "text": "even an RFC yet right so it's uh it might it might be an RFC next week but it's not today",
    "start": "2243760",
    "end": "2249579"
  },
  {
    "text": "um and since it's running at the application layer you have to modify every bit and piece of your application",
    "start": "2249579",
    "end": "2256660"
  },
  {
    "text": "right the client needs to know about it the token server needs to know about it and the apis need to know about it and",
    "start": "2256660",
    "end": "2264599"
  },
  {
    "text": "in addition to only not knowing or knowing about it they also need to implement additional stuff for handling",
    "start": "2264599",
    "end": "2271119"
  },
  {
    "text": "those replay caches and and so on right so there's there's a it doesn't come for free I guess it's my main point here and",
    "start": "2271119",
    "end": "2279220"
  },
  {
    "text": "that's why it took so long um to implement this feature I guess because the trade-offs yeah",
    "start": "2279220",
    "end": "2287140"
  },
  {
    "text": "are different yeah so was Aaron Hammer right did the world did",
    "start": "2287140",
    "end": "2293440"
  },
  {
    "text": "the Sky Fall because we had we didn't have better tokens uh we we only had better tokens for a decade",
    "start": "2293440",
    "end": "2299200"
  },
  {
    "text": "it did not right so I I I'm also not trying to say every single one of you",
    "start": "2299200",
    "end": "2305680"
  },
  {
    "text": "should now start implementing depop okay so if your example is like a purely uh",
    "start": "2305680",
    "end": "2311859"
  },
  {
    "text": "I'm calling from a server to another server in my data center with a with an or of access token scenario yeah it",
    "start": "2311859",
    "end": "2319300"
  },
  {
    "text": "might not be that you need that feature right but if you are in healthcare maybe and you're doing the the Ping of death",
    "start": "2319300",
    "end": "2325060"
  },
  {
    "text": "yeah to your to your def notification API maybe you want that right um if you are in a in a in a in a client",
    "start": "2325060",
    "end": "2333520"
  },
  {
    "text": "that that manages your Cloud infrastructure maybe you want that extra feature if you're doing a bank transfer maybe you want that extra feature but um",
    "start": "2333520",
    "end": "2341320"
  },
  {
    "text": "you know it doesn't come for free I guess that's the that's the main the main takeaway",
    "start": "2341320",
    "end": "2346839"
  },
  {
    "start": "2344000",
    "end": "2835000"
  },
  {
    "text": "takeaway here so we have some time for questions are",
    "start": "2346839",
    "end": "2352599"
  },
  {
    "text": "there any questions about this",
    "start": "2352599",
    "end": "2355619"
  },
  {
    "text": "so so the question is is it advisable to implement this from scratch right",
    "start": "2370660",
    "end": "2377680"
  },
  {
    "text": "um the answer is yes and no I guess so on one hand you're right yeah",
    "start": "2377680",
    "end": "2385000"
  },
  {
    "text": "you should you should leave the security stuff to the Security Professionals I guess",
    "start": "2385000",
    "end": "2390220"
  },
  {
    "text": "um that is always true um but on the other hand they try to use only Technologies where you have",
    "start": "2390220",
    "end": "2396280"
  },
  {
    "text": "libraries today Json web token right like signing a Json app token with an RSA key is pretty much even maybe even",
    "start": "2396280",
    "end": "2405099"
  },
  {
    "text": "part of your of your framework right but that being said yes you're absolutely right yeah I mean that's why we",
    "start": "2405099",
    "end": "2411460"
  },
  {
    "text": "implemented it in our token server that's why we implemented in our client libraries and we are even giving you a",
    "start": "2411460",
    "end": "2418660"
  },
  {
    "text": "way that all the code that you need to make the Microsoft open the connect Handler use it correctly make the",
    "start": "2418660",
    "end": "2424359"
  },
  {
    "text": "Microsoft Json web token handle I use it correctly because yeah we found out",
    "start": "2424359",
    "end": "2430119"
  },
  {
    "text": "there is some code to write yeah so yeah it as I said it doesn't come for free",
    "start": "2430119",
    "end": "2436359"
  },
  {
    "text": "but I would expect that once this is really an RFC more and more libraries",
    "start": "2436359",
    "end": "2441700"
  },
  {
    "text": "will have that feature built in but for now maybe we are a bit of an early adopter at least in the.net space yeah",
    "start": "2441700",
    "end": "2450280"
  },
  {
    "text": "any other question I can't see you",
    "start": "2450280",
    "end": "2456420"
  },
  {
    "text": "yeah Shout",
    "start": "2457480",
    "end": "2460560"
  },
  {
    "text": "um there are I know that Microsoft has a",
    "start": "2467680",
    "end": "2473740"
  },
  {
    "text": "has like a like a like a pre-release uh pre-experimental implementation for it",
    "start": "2473740",
    "end": "2479680"
  },
  {
    "text": "for example um I definitely know that there are some more specialized token services in the",
    "start": "2479680",
    "end": "2485020"
  },
  {
    "text": "banking industry that already have it but like a key cloak or off zero or",
    "start": "2485020",
    "end": "2491200"
  },
  {
    "text": "Google doesn't have it right it's as I said um so you know my Golden Rule was",
    "start": "2491200",
    "end": "2497680"
  },
  {
    "text": "always never ever Implement an RFC before it's published yeah but we violated this rule this time because I",
    "start": "2497680",
    "end": "2504099"
  },
  {
    "text": "thought it's so important yeah and I hope I it does backfire yeah",
    "start": "2504099",
    "end": "2511359"
  },
  {
    "text": "any other question so",
    "start": "2512380",
    "end": "2518680"
  },
  {
    "text": "yeah",
    "start": "2518680",
    "end": "2521160"
  },
  {
    "text": "you're doing that already right I mean every chasing web so the question is what's the overhead of that",
    "start": "2524680",
    "end": "2530079"
  },
  {
    "text": "um I mean every API call you're already validating the signature right and now",
    "start": "2530079",
    "end": "2535540"
  },
  {
    "text": "you're validating two signatures it's a you know I don't think the overhead",
    "start": "2535540",
    "end": "2541359"
  },
  {
    "text": "question is the the real the really interesting one here the really the the really interesting one is do you need",
    "start": "2541359",
    "end": "2547720"
  },
  {
    "text": "the security properties of bound tokens as opposed to better tokens and if you need them that is",
    "start": "2547720",
    "end": "2554680"
  },
  {
    "text": "it's okay no",
    "start": "2554680",
    "end": "2558660"
  },
  {
    "text": "good ah question",
    "start": "2559960",
    "end": "2563280"
  },
  {
    "text": "oh so the question is do you need to generate a new access token for every request yeah no no you don't the access",
    "start": "2572740",
    "end": "2578680"
  },
  {
    "text": "tokens can still still have the same thing but you need to create a new proof token for every API call",
    "start": "2578680",
    "end": "2584680"
  },
  {
    "text": "so the access token can can still be like a one hour token whatever right but the proof token that is the thing that",
    "start": "2584680",
    "end": "2590980"
  },
  {
    "text": "you need to generate for every single API call no no",
    "start": "2590980",
    "end": "2598060"
  },
  {
    "text": "you only if you only call the STS at token request time just as before but you need to attach this additional",
    "start": "2598060",
    "end": "2604960"
  },
  {
    "text": "proof token for every API call and then it depends on how long lived your access tokens are how often you need to go back",
    "start": "2604960",
    "end": "2611200"
  },
  {
    "text": "to the Token server right but you know to be honest um many people in absence of",
    "start": "2611200",
    "end": "2616960"
  },
  {
    "text": "of proof possession made the access tokens super small super super super short-lived right and now with that",
    "start": "2616960",
    "end": "2624099"
  },
  {
    "text": "feature you could say okay now now we have that extra thing on top we could make the X tokens again longer lift because we have a better assurance that",
    "start": "2624099",
    "end": "2630579"
  },
  {
    "text": "they cannot misuse if they are being stolen so yeah it's a you know it's a trade-off I'm not saying that this makes",
    "start": "2630579",
    "end": "2636400"
  },
  {
    "text": "things easier it doesn't yeah but that's not uh that wasn't the intention yeah",
    "start": "2636400",
    "end": "2642880"
  },
  {
    "text": "yeah sessions",
    "start": "2642880",
    "end": "2649200"
  },
  {
    "text": "are not bound to clients then they can be stolen and stuff like that",
    "start": "2649200",
    "end": "2656759"
  },
  {
    "text": "mechanism mechanism and same thing called course in your house",
    "start": "2658240",
    "end": "2665160"
  },
  {
    "text": "so the question is um could that could that be applied to session cookies is that the question",
    "start": "2666040",
    "end": "2671500"
  },
  {
    "text": "kind of maybe I don't know [Music] um uh to be honest with you the token",
    "start": "2671500",
    "end": "2678280"
  },
  {
    "text": "binding feature I mentioned earlier that the one with the TLs extension that was designed also to bind the cookies to the",
    "start": "2678280",
    "end": "2685420"
  },
  {
    "text": "TLs channel in the first place yeah and that and that was the thing everybody was waiting for and that was the the big",
    "start": "2685420",
    "end": "2691480"
  },
  {
    "text": "bummer when Google said ah no we we won't do it yeah um you I mean you could probably do all",
    "start": "2691480",
    "end": "2698440"
  },
  {
    "text": "kinds of custom things but what we were waiting for is like will the browsers do it for us yeah and that didn't happen",
    "start": "2698440",
    "end": "2704800"
  },
  {
    "text": "ma'am",
    "start": "2704800",
    "end": "2707520"
  },
  {
    "text": "oh yeah right um so when you are so the question is how does this um relate to",
    "start": "2710200",
    "end": "2716140"
  },
  {
    "text": "refresh tokens I guess yeah um absolutely so when you are um refreshing a token you have to send",
    "start": "2716140",
    "end": "2722380"
  },
  {
    "text": "along again approved token to the Token server using the same key pair that you",
    "start": "2722380",
    "end": "2727660"
  },
  {
    "text": "use to get the original access token right and only if they match then the token server will give you back a new",
    "start": "2727660",
    "end": "2734800"
  },
  {
    "text": "token yeah so yeah it's the same mechanism as with the initial token request you need to send the proof token",
    "start": "2734800",
    "end": "2740619"
  },
  {
    "text": "along and you will get back the CNF claim in your access token yep",
    "start": "2740619",
    "end": "2747540"
  },
  {
    "text": "what BFFs are done now",
    "start": "2747760",
    "end": "2752859"
  },
  {
    "text": "oh no they are not um so the question is rpfs done now and",
    "start": "2752859",
    "end": "2758980"
  },
  {
    "text": "I guess you are rather asking are now tokens again safe to store in the browser right no",
    "start": "2758980",
    "end": "2766240"
  },
  {
    "text": "that's a completely unrelated problem yeah um because um",
    "start": "2766240",
    "end": "2772119"
  },
  {
    "text": "if the token is stored in the browser and you're getting a code injection attack the the attacker could just get",
    "start": "2772119",
    "end": "2778480"
  },
  {
    "text": "the take the token remote control your application to create new proof tokens and just send",
    "start": "2778480",
    "end": "2783700"
  },
  {
    "text": "them along right um that wouldn't solve anything because as",
    "start": "2783700",
    "end": "2788920"
  },
  {
    "text": "soon as you have a code injection attack the attacker can do whatever you can do in the application so no BFF promotes",
    "start": "2788920",
    "end": "2795040"
  },
  {
    "text": "the model of storing the tokens on the server and that is still very much my recommendation",
    "start": "2795040",
    "end": "2801480"
  },
  {
    "text": "okay anymore good um",
    "start": "2803859",
    "end": "2809200"
  },
  {
    "text": "that I hope that was interesting I mean it's it's not like one of these you know things you do every day but I think it's",
    "start": "2809200",
    "end": "2814720"
  },
  {
    "text": "very good to know that this exists now and it's a you know it's a standard and if you are working in the banking",
    "start": "2814720",
    "end": "2820240"
  },
  {
    "text": "industry or the healthcare industry or whatever in the gambling industry whatever you know where you need that extra thing so you now have two options",
    "start": "2820240",
    "end": "2827200"
  },
  {
    "text": "I guess um mtls and and the new debuffs back cool thank you",
    "start": "2827200",
    "end": "2833200"
  },
  {
    "text": "[Applause]",
    "start": "2833200",
    "end": "2837339"
  }
]