[
  {
    "text": "yes welcome it's uh yes I'll restart",
    "start": "12480",
    "end": "18520"
  },
  {
    "text": "this very cool to be here and nice to see so many people uh came here to listen to us talk",
    "start": "18520",
    "end": "26080"
  },
  {
    "text": "um first of all anyone know what this is",
    "start": "26080",
    "end": "31320"
  },
  {
    "text": "speak up it's uh the National Gallery in Oslo",
    "start": "31320",
    "end": "37840"
  },
  {
    "text": "uh the old one it's uh closed for refurbishing now I think so I don't",
    "start": "37840",
    "end": "43079"
  },
  {
    "text": "think you can actually enter it and not to be mixed up with the national museum in Oslo which you can actually go and",
    "start": "43079",
    "end": "49960"
  },
  {
    "text": "visit now which I recommend but again this is the National Gallery uh it's",
    "start": "49960",
    "end": "55280"
  },
  {
    "text": "been a host for many famous Norwegian uh pieces of Art",
    "start": "55280",
    "end": "61320"
  },
  {
    "text": "uh among others vampir and Madonna by Edward Mon and many others and special",
    "start": "61320",
    "end": "70040"
  },
  {
    "text": "thing about uh artworks is that there are uh things that have no real use",
    "start": "70040",
    "end": "76040"
  },
  {
    "text": "except for looking at right it's just things but they have or can have immense",
    "start": "76040",
    "end": "81479"
  },
  {
    "text": "value they're sold for hundreds of millions of croner um so you think that",
    "start": "81479",
    "end": "88360"
  },
  {
    "text": "a place like this should be very secure right since you have to secure these things it's like gold should be secure",
    "start": "88360",
    "end": "95640"
  },
  {
    "text": "as a bank so you think they probably have like these really thick walls right good locks should be hard to break",
    "start": "95640",
    "end": "103719"
  },
  {
    "text": "in uh anyone know who this",
    "start": "103719",
    "end": "109320"
  },
  {
    "text": "is yeah this is Paul anir he's uh or was a former Norwegian",
    "start": "109600",
    "end": "116000"
  },
  {
    "text": "football player uh played for uh War wara here in",
    "start": "116000",
    "end": "122240"
  },
  {
    "text": "Oslo in the '90s and he also Norway's most famous art",
    "start": "122240",
    "end": "129879"
  },
  {
    "text": "Thief uh he broke in and stole from the National Gallery in this",
    "start": "129879",
    "end": "138159"
  },
  {
    "text": "way um and he did it several times even not not from this place but but later on",
    "start": "138319",
    "end": "145560"
  },
  {
    "text": "um and I I I want to start with this since I think first of all this is a funny picture which I like but also it's",
    "start": "145560",
    "end": "152400"
  },
  {
    "text": "it's there to illustrate that there are really no secure systems right that does",
    "start": "152400",
    "end": "157640"
  },
  {
    "text": "not exist and you shouldn't think that the systems You're Building are secure never never say that so Paul he broke in",
    "start": "157640",
    "end": "164920"
  },
  {
    "text": "during the through the window uh took streak and left and was out in less than",
    "start": "164920",
    "end": "170640"
  },
  {
    "text": "90 seconds and then probably 20 minutes later there was this security guard came",
    "start": "170640",
    "end": "177159"
  },
  {
    "text": "to look in oh he told um yeah yeah",
    "start": "177159",
    "end": "183959"
  },
  {
    "text": "so let's say this is a system right we have a users we have servers we have",
    "start": "183959",
    "end": "189799"
  },
  {
    "text": "databases so this might be the like the National Gallery just a system and um",
    "start": "189799",
    "end": "196519"
  },
  {
    "text": "what people tend to do is create a parameter defense we try to make good locks we try to make sure that we build",
    "start": "196519",
    "end": "203920"
  },
  {
    "text": "the thicken enough wall that nobody comes in but people will always try and",
    "start": "203920",
    "end": "209319"
  },
  {
    "text": "ping will always be there with his ladder and try to get in and the thing",
    "start": "209319",
    "end": "214720"
  },
  {
    "text": "is we should expect them to get in and once they get in if we just build thick",
    "start": "214720",
    "end": "220920"
  },
  {
    "text": "walls well then PA can just go to all the rooms in the gallery and steal all the paintings and in the same way he could",
    "start": "220920",
    "end": "228239"
  },
  {
    "text": "he could steal all our data if we just have the parameter defense so uh there",
    "start": "228239",
    "end": "235239"
  },
  {
    "text": "is no thing uh such thing as a secure system uh so uh we need to secure all",
    "start": "235239",
    "end": "243319"
  },
  {
    "text": "the parts of our system uh we need to harden all the parts in itself uh of",
    "start": "243319",
    "end": "249760"
  },
  {
    "text": "course we should also have the firewalls and the parameter defense but uh that's",
    "start": "249760",
    "end": "255000"
  },
  {
    "text": "not enough these days so even this little part here which",
    "start": "255000",
    "end": "260479"
  },
  {
    "text": "might be a class in your code can be secured and when every part is secured",
    "start": "260479",
    "end": "266440"
  },
  {
    "text": "and Harden it's very very hard for the attackers so doing this is what we call uh secure",
    "start": "266440",
    "end": "275280"
  },
  {
    "text": "by Design domain driven security or cyber secure",
    "start": "275280",
    "end": "280720"
  },
  {
    "text": "digitalization yes and I think this mindset is is relatable to the real",
    "start": "283120",
    "end": "289199"
  },
  {
    "text": "world as well outside of software so we say in Omega point that we want to be",
    "start": "289199",
    "end": "294919"
  },
  {
    "text": "fire Engineers instead of firefighters so in the case where a fire breaks out",
    "start": "294919",
    "end": "300880"
  },
  {
    "text": "in one room that again you should assume that might happen you you can't always avoid that but then again the whole",
    "start": "300880",
    "end": "306960"
  },
  {
    "text": "building shouldn't shouldn't burn down that's the base",
    "start": "306960",
    "end": "312120"
  },
  {
    "text": "mindset uh before we really get started I just want to mention some uh some",
    "start": "312120",
    "end": "318240"
  },
  {
    "text": "people that the thoughts and ideas we will present and dig into today are not me and ivin",
    "start": "318240",
    "end": "324479"
  },
  {
    "text": "unfortunately uh so we build on others ideas so uh on the left for you is Nasim",
    "start": "324479",
    "end": "332000"
  },
  {
    "text": "Talib he's uh a lebanes American uh",
    "start": "332000",
    "end": "337240"
  },
  {
    "text": "philosopher and author and former headed fund manager uh he's written lots of",
    "start": "337240",
    "end": "342680"
  },
  {
    "text": "books about Randomness and risk-taking and how to how to how to embrace that uh",
    "start": "342680",
    "end": "348880"
  },
  {
    "text": "both in like when as a human and in finance in others uh and on the right you have our",
    "start": "348880",
    "end": "355960"
  },
  {
    "text": "two colleagues from Omega Point who wrote the book secur by Design Don Dean and Don",
    "start": "355960",
    "end": "361960"
  },
  {
    "text": "Baron and then they are mentioned uh and again this is me I'm an",
    "start": "361960",
    "end": "369639"
  },
  {
    "text": "KU uh I'm a partner and business area manager at Omega Point nor been working",
    "start": "369639",
    "end": "376120"
  },
  {
    "text": "as a system developer and architect uh for about 10 years now and the later",
    "start": "376120",
    "end": "382759"
  },
  {
    "text": "years more and more with leadership and competence",
    "start": "382759",
    "end": "387240"
  },
  {
    "text": "development yeah and I'm Ivan and I studied at Anu Robotics and",
    "start": "388120",
    "end": "395520"
  },
  {
    "text": "then transitioned into it and learn more and more about security so now I'm a",
    "start": "395520",
    "end": "401319"
  },
  {
    "text": "senior expert and head of cyber security at Omega Point N and I like I do systems development",
    "start": "401319",
    "end": "409759"
  },
  {
    "text": "application security uh mostly the defensive part of the application security uh I'm more",
    "start": "409759",
    "end": "417319"
  },
  {
    "text": "like the guy that Tanya mentioned the the guy that does the defensive stuff",
    "start": "417319",
    "end": "422520"
  },
  {
    "text": "not the penetration testing so but let's dig into this uh system so",
    "start": "422520",
    "end": "432720"
  },
  {
    "text": "we have our system and systems they will always exist for a reason and uh uh the",
    "start": "432720",
    "end": "440680"
  },
  {
    "text": "reasons of a system are often the stress factor so the users need to use the",
    "start": "440680",
    "end": "446440"
  },
  {
    "text": "system the users are stressing our system and we can't have a system deliver value without that",
    "start": "446440",
    "end": "453000"
  },
  {
    "text": "stress uh and there are uh very different types of stress for a software",
    "start": "453000",
    "end": "459759"
  },
  {
    "text": "system we have legal changes change in user Behavior loss of knowledge code",
    "start": "459759",
    "end": "466720"
  },
  {
    "text": "changes attacks lots of types of stress and systems will react very different",
    "start": "466720",
    "end": "473479"
  },
  {
    "text": "differently to this type of stress and we're going to try to find out a little bit about how different system",
    "start": "473479",
    "end": "480360"
  },
  {
    "text": "react to stress and to do that we have",
    "start": "480360",
    "end": "486720"
  },
  {
    "text": "this graph here and we're going to measure the performance of the system and this is just uh uh performance",
    "start": "486720",
    "end": "493639"
  },
  {
    "text": "doesn't necessarily means like uh the request takes uh 10 milliseconds it's",
    "start": "493639",
    "end": "499159"
  },
  {
    "text": "more about the overall performance how the systems performs the someo many things right which where performance in",
    "start": "499159",
    "end": "506039"
  },
  {
    "text": "times of response time is one but then again how it feels and how easy it is to change is also part of",
    "start": "506039",
    "end": "512399"
  },
  {
    "text": "performance and bugs and how it reacts to bugs so all in one and we have stress",
    "start": "512399",
    "end": "518320"
  },
  {
    "text": "on the x-axis and that's stress over time so we can say how does the system",
    "start": "518320",
    "end": "523719"
  },
  {
    "text": "perform when we apply stress factors and how does that react to stress over",
    "start": "523719",
    "end": "530800"
  },
  {
    "text": "time sorry someone hacked your clicker yeah",
    "start": "536720",
    "end": "542200"
  },
  {
    "text": "so F first type of system is uh a fragile system and fragile systems of",
    "start": "542200",
    "end": "549079"
  },
  {
    "text": "course handle stress uh badly uh and and it uh it's hard to",
    "start": "549079",
    "end": "556920"
  },
  {
    "text": "change the fragile systems uh they handle unexpected events badly and those",
    "start": "556920",
    "end": "562760"
  },
  {
    "text": "May might bring the fragile systems to a halt uh characteristics of fragile",
    "start": "562760",
    "end": "568920"
  },
  {
    "text": "systems are that they rarely changed since you you don't want to change them since you you're afraid of uh of it",
    "start": "568920",
    "end": "576079"
  },
  {
    "text": "breaking uh they're usually tightly coupled to other systems which make them",
    "start": "576079",
    "end": "581480"
  },
  {
    "text": "fragile and again hard to change so the graph for fragile looks something like",
    "start": "581480",
    "end": "586920"
  },
  {
    "text": "this it might work when you write the code and when when exactly when you create it but over time and with",
    "start": "586920",
    "end": "593680"
  },
  {
    "text": "increased stress of different types uh it uh it uh does it stops",
    "start": "593680",
    "end": "601640"
  },
  {
    "text": "working and we don't want these types of systems of course but we've all seen them and we're probably we all created",
    "start": "601640",
    "end": "608519"
  },
  {
    "text": "them um but then the question is what's the opposite",
    "start": "608519",
    "end": "614600"
  },
  {
    "text": "of fragile system now we read the title so you already know it but uh what you should",
    "start": "614600",
    "end": "621240"
  },
  {
    "text": "answer or what I want you to answer is robust which is what people usually say and the the term that's most used I",
    "start": "621240",
    "end": "627920"
  },
  {
    "text": "think uh robust or resilient so robust systems are again resilient to stress",
    "start": "627920",
    "end": "635600"
  },
  {
    "text": "stands well on its own and handles expected change and expected stress",
    "start": "635600",
    "end": "643360"
  },
  {
    "text": "well uh so the performal will stay the same over time and I emphasiz staying",
    "start": "643360",
    "end": "650800"
  },
  {
    "text": "the same and expected change since to me at least or in the to",
    "start": "650800",
    "end": "656279"
  },
  {
    "text": "me the term robust uh is exactly that it's stays the same like a brick wall right with like increased stress it it",
    "start": "656279",
    "end": "663560"
  },
  {
    "text": "it keeps going but it it doesn't it doesn't change uh so the line might be something",
    "start": "663560",
    "end": "669920"
  },
  {
    "text": "like this it stays the same but then at some point the brick wall breaks",
    "start": "669920",
    "end": "676079"
  },
  {
    "text": "right and then I ask is this are these two graphs uh opposite or the inverse of",
    "start": "676079",
    "end": "682680"
  },
  {
    "text": "each other I say no it doesn't look like it",
    "start": "682680",
    "end": "687920"
  },
  {
    "text": "at least um so what then is the actual opposite",
    "start": "687920",
    "end": "693399"
  },
  {
    "text": "of a fragile system again from the title you already know it that's what antifragile is and",
    "start": "693399",
    "end": "700760"
  },
  {
    "text": "an antifragile system it benefits from stress so with increased stress the antifragile system becomes",
    "start": "700760",
    "end": "708600"
  },
  {
    "text": "better and it might sound strange but I will explain more um again remember that",
    "start": "708600",
    "end": "716279"
  },
  {
    "text": "the systems we're talking about here are not like one ser or one application it's",
    "start": "716279",
    "end": "721360"
  },
  {
    "text": "the sum of parts so it's the systems we build are from the first illustration I",
    "start": "721360",
    "end": "727279"
  },
  {
    "text": "even showed it's it is servers and database and all that but it also is people users it's everything right and",
    "start": "727279",
    "end": "734959"
  },
  {
    "text": "that's what you want to make antifragile and so what examples from",
    "start": "734959",
    "end": "740040"
  },
  {
    "text": "our real life or the most the best example is probably our human body which is an antifragile system so we get sick",
    "start": "740040",
    "end": "747920"
  },
  {
    "text": "but then again we get stronger from being sick that's an antifragile reaction",
    "start": "747920",
    "end": "754000"
  },
  {
    "text": "um and it also works the opposite which I think is a very interesting thing so",
    "start": "754000",
    "end": "761040"
  },
  {
    "text": "many of you probably noticed that during the pandemic so we went like years without being sick at all or being like",
    "start": "761040",
    "end": "767480"
  },
  {
    "text": "in contact with stress and then when we get got back to our normal",
    "start": "767480",
    "end": "772920"
  },
  {
    "text": "lives we were out for years again right or at least I was uh and I think the",
    "start": "772920",
    "end": "778440"
  },
  {
    "text": "same is actually true for software systems so if you have a system that's never changed so it's it's just it's",
    "start": "778440",
    "end": "784959"
  },
  {
    "text": "working but you don't change it you don't apply stress to it I think the performance of that system most likely",
    "start": "784959",
    "end": "791320"
  },
  {
    "text": "will will go downwards so when you want like two years down the road you actually have to change it that will be",
    "start": "791320",
    "end": "797360"
  },
  {
    "text": "very painful um so the graph looks something",
    "start": "797360",
    "end": "802880"
  },
  {
    "text": "like this it actually goes upwards uh but if again if we zoom into",
    "start": "802880",
    "end": "808279"
  },
  {
    "text": "that graph it's it's not exactly like that it's probably more like it goes up and it goes down it's like a zigzag",
    "start": "808279",
    "end": "814639"
  },
  {
    "text": "pattern right and the important uh thing there is that uh uh the part where it",
    "start": "814639",
    "end": "819959"
  },
  {
    "text": "actually goes down when you take the hit that's small enough so that when you go go up again that's asymmetric so that's",
    "start": "819959",
    "end": "826680"
  },
  {
    "text": "why we call these small up and downs patterns which I have not in the drawing that's like asymmetric reactions so you",
    "start": "826680",
    "end": "833800"
  },
  {
    "text": "get sick but then you get stronger again so again then it's important that",
    "start": "833800",
    "end": "840079"
  },
  {
    "text": "we we don't go bankrupt when we get the the the kind of the the downward",
    "start": "840079",
    "end": "845320"
  },
  {
    "text": "slope okay so how can we build this type of antifragile software systems s yeah",
    "start": "845320",
    "end": "851399"
  },
  {
    "text": "well this type of stress factors might find bugs so um and when you take the",
    "start": "851399",
    "end": "857440"
  },
  {
    "text": "heat you fix the bug and then you get stronger right so let's say we have these are just bugs and we have triangle",
    "start": "857440",
    "end": "865240"
  },
  {
    "text": "bugs these are the normal bugs and we coin the term a security bug a bug",
    "start": "865240",
    "end": "871560"
  },
  {
    "text": "that's related to something dealing with security",
    "start": "871560",
    "end": "877800"
  },
  {
    "text": "and uh what we want to make is design patterns to cover these bugs right we",
    "start": "877800",
    "end": "883759"
  },
  {
    "text": "want to make code constructs that make sure that those bugs doesn't happen",
    "start": "883759",
    "end": "888959"
  },
  {
    "text": "because we don't want to learn all the stress factors in production right we",
    "start": "888959",
    "end": "895079"
  },
  {
    "text": "want to test our system we of course want to pent test our system but we can start much earlier and try to think",
    "start": "895079",
    "end": "902079"
  },
  {
    "text": "about stress and try to think about how we can deal with that and creating such",
    "start": "902079",
    "end": "907360"
  },
  {
    "text": "design patterns might cover bugs so let's say we have a design pattern here we are thinking about these bugs and we",
    "start": "907360",
    "end": "914279"
  },
  {
    "text": "are covering those but side effect of that might be that we covered these security bugs also so uh but what we",
    "start": "914279",
    "end": "921639"
  },
  {
    "text": "like to call a secure by design pattern is patterns that are trying to cover",
    "start": "921639",
    "end": "927839"
  },
  {
    "text": "security bugs but they might also cover um normal bugs so uh a secure by design",
    "start": "927839",
    "end": "934800"
  },
  {
    "text": "pattern is just a pattern that we try to apply to cover security issues and as",
    "start": "934800",
    "end": "940079"
  },
  {
    "text": "you will see many of these patterns are patterns you already use it's not like the secure by Design patterns are new",
    "start": "940079",
    "end": "947319"
  },
  {
    "text": "patterns or something special it's things you probably already do but that we will show that they actually are uh",
    "start": "947319",
    "end": "954279"
  },
  {
    "text": "working towards more secure systems yeah so of of course managers will always say",
    "start": "954279",
    "end": "961240"
  },
  {
    "text": "security is our top priority it's very popular to say but what do they really",
    "start": "961240",
    "end": "966839"
  },
  {
    "text": "mean by that because uh security doesn't earn your money it can just lose your",
    "start": "966839",
    "end": "971880"
  },
  {
    "text": "money and it's always excessive until it's not enough and then you take the",
    "start": "971880",
    "end": "976920"
  },
  {
    "text": "hit and managers always think about money at least most often so but as if",
    "start": "976920",
    "end": "984519"
  },
  {
    "text": "we TR try to think as developer what does it mean to prioritize",
    "start": "984519",
    "end": "990880"
  },
  {
    "text": "security yeah so one traditional approach or a naive",
    "start": "991319",
    "end": "996800"
  },
  {
    "text": "approach might be that okay now that security is the number one priority then all developers have to know all this",
    "start": "996800",
    "end": "1004000"
  },
  {
    "text": "security stuff right have to knowas you have to know all these types of vulnerabilities you have to keep",
    "start": "1004000",
    "end": "1010560"
  },
  {
    "text": "yourself updated on zero days or CSV and stuff like that and then your brain starts to melt",
    "start": "1010560",
    "end": "1018079"
  },
  {
    "text": "right since you you're still supposed to know all the syntax and all the programming languages and the patterns",
    "start": "1018079",
    "end": "1025038"
  },
  {
    "text": "and stuff like that and it becomes too much and uh this is the reason why many",
    "start": "1025039",
    "end": "1033079"
  },
  {
    "text": "developers at least the you used to think that security was kind of difficult and intimidating and you",
    "start": "1033079",
    "end": "1038640"
  },
  {
    "text": "didn't want to touch it and you want to instead like give it to the experts",
    "start": "1038640",
    "end": "1045160"
  },
  {
    "text": "um so a stupid simple example might be something like this so this is a class",
    "start": "1045160",
    "end": "1052440"
  },
  {
    "text": "uh just a user class could be anything and there's some string in there and then you could think that okay this",
    "start": "1052440",
    "end": "1059640"
  },
  {
    "text": "class might be used in some view model and then there might be some uh cross side scripting vulnerability possible",
    "start": "1059640",
    "end": "1065520"
  },
  {
    "text": "here right and then okay I'm a developer and now I have to think about these things",
    "start": "1065520",
    "end": "1071600"
  },
  {
    "text": "so what do I do then I have to create some method to actually validate for this right so I create this method",
    "start": "1071600",
    "end": "1080400"
  },
  {
    "text": "um then problem with this is that after a while you will have lots of these methods right you will just have chains",
    "start": "1080400",
    "end": "1086559"
  },
  {
    "text": "of different methods checking for specific security stuff and first of all you have to",
    "start": "1086559",
    "end": "1092640"
  },
  {
    "text": "remember to do it all the time and everyone have to remember to do it all the time and it clutters the code so uh",
    "start": "1092640",
    "end": "1099760"
  },
  {
    "text": "quickly you will not be able to see what what the class is actually supposed to do or what it actually represents you",
    "start": "1099760",
    "end": "1105840"
  },
  {
    "text": "will only see security stuff which might be you can show it to your manager I have cre this is here is here's lots of",
    "start": "1105840",
    "end": "1112679"
  },
  {
    "text": "security H but again hard to maintain so the secure by Design approach is instead",
    "start": "1112679",
    "end": "1119400"
  },
  {
    "text": "to turn this around so let's not think about the explicit security stuff but",
    "start": "1119400",
    "end": "1125320"
  },
  {
    "text": "instead make sure that the class uh only accept what it should be and it looks",
    "start": "1125320",
    "end": "1131159"
  },
  {
    "text": "how it should be so here okay we say that again this is a very simple example but the username should be of this",
    "start": "1131159",
    "end": "1136360"
  },
  {
    "text": "length and only contain these characters and then as a side effect it will",
    "start": "1136360",
    "end": "1142799"
  },
  {
    "text": "actually protect against the same things than if you just checked for the recurly brackets and disallowed that so we",
    "start": "1142799",
    "end": "1150280"
  },
  {
    "text": "advocate for this approach instead and this is much more natural to developers and it's much it creates much better",
    "start": "1150280",
    "end": "1156440"
  },
  {
    "text": "code as well and I think interesting thing about this as well is that um we as developers",
    "start": "1156440",
    "end": "1164760"
  },
  {
    "text": "we like to create beautiful code right you want it to look good so hands up if you think that same you sometimes you",
    "start": "1164760",
    "end": "1171320"
  },
  {
    "text": "say okay this doesn't look good it probably works but it's not beautiful right I at least that's how I am and I",
    "start": "1171320",
    "end": "1177919"
  },
  {
    "text": "might spend lots of time just how many and we discuss things like tabs versus spaces and stuff again which is or just",
    "start": "1177919",
    "end": "1183520"
  },
  {
    "text": "how many lines it should be between methods and thing with that that's very hard to sell so if you're a consultant",
    "start": "1183520",
    "end": "1190840"
  },
  {
    "text": "or even if you're not a consultant it's like you say to a manager I need one more week to finish this since I have to",
    "start": "1190840",
    "end": "1197720"
  },
  {
    "text": "make it look more beautiful right that's a hard cell uh but if you can say that",
    "start": "1197720",
    "end": "1202840"
  },
  {
    "text": "instead by doing that I will also make uh the code more secure then is yes then",
    "start": "1202840",
    "end": "1208000"
  },
  {
    "text": "that's good go do that um yeah so that you can",
    "start": "1208000",
    "end": "1213240"
  },
  {
    "text": "use uh so just take a bit further now I just take took the string out and",
    "start": "1213240",
    "end": "1218799"
  },
  {
    "text": "created a specific class for the username uh containing this",
    "start": "1218799",
    "end": "1224480"
  },
  {
    "text": "logic which then can be used something like this so now we don't have a string used name we have a username class for",
    "start": "1224480",
    "end": "1230360"
  },
  {
    "text": "the username so username here is a very simple example of uh what's called a",
    "start": "1230360",
    "end": "1236000"
  },
  {
    "text": "domain primitive which is the like the most barebone simply secure by design pattern we",
    "start": "1236000",
    "end": "1242159"
  },
  {
    "text": "have uh this is from domain driven design is nothing we came up with uh a domain primitive or a value",
    "start": "1242159",
    "end": "1249320"
  },
  {
    "text": "object from domain driven design uh is a object a mutable object that can only",
    "start": "1249320",
    "end": "1255120"
  },
  {
    "text": "exist when the value is correct so when you meet it or when you find some class",
    "start": "1255120",
    "end": "1260960"
  },
  {
    "text": "like this in the code you can Al always assume that it is correct you don't have to like reeval evaluate it and there are",
    "start": "1260960",
    "end": "1268080"
  },
  {
    "text": "like the smallest building blocks when we model reality and and we will give some more",
    "start": "1268080",
    "end": "1275000"
  },
  {
    "text": "uh real examples uh soon",
    "start": "1275000",
    "end": "1281279"
  },
  {
    "text": "um yeah again so this is this uh this is a value object then and",
    "start": "1282080",
    "end": "1289240"
  },
  {
    "text": "another thing about this is that it's it not only makes like the code you right",
    "start": "1289240",
    "end": "1294960"
  },
  {
    "text": "now uh probably more secure and it's better design it also makes it harder to",
    "start": "1294960",
    "end": "1300559"
  },
  {
    "text": "do mistakes later uh and I think when we write software like there should be a",
    "start": "1300559",
    "end": "1305840"
  },
  {
    "text": "quite large empathic Factor as well so you don't only write the code to work now and for you to be done with your",
    "start": "1305840",
    "end": "1311320"
  },
  {
    "text": "work you create it for others to change it down the road and by doing good",
    "start": "1311320",
    "end": "1316400"
  },
  {
    "text": "design depending on that what that is of course uh you will avoid Mistakes by others as well which I think is maybe even more",
    "start": "1316400",
    "end": "1325360"
  },
  {
    "text": "important and just to illustrate that um this is my drawing of a",
    "start": "1325640",
    "end": "1332200"
  },
  {
    "text": "system uh and the boxes down here are maybe like some type of sub components",
    "start": "1332200",
    "end": "1337880"
  },
  {
    "text": "it might be classes within within classes or whatever I don't know",
    "start": "1337880",
    "end": "1343240"
  },
  {
    "text": "and when a request comes in so through some web API maybe from a computer it",
    "start": "1343240",
    "end": "1348679"
  },
  {
    "text": "will enter and then you will ask okay but can't I just validate here that's what I normally do and don't bother with",
    "start": "1348679",
    "end": "1354080"
  },
  {
    "text": "this value objects and stuff like that uh and of course you can do that that's",
    "start": "1354080",
    "end": "1359640"
  },
  {
    "text": "fine but I will claim that I don't really care if the data is correct",
    "start": "1359640",
    "end": "1364799"
  },
  {
    "text": "appear pair inside the green circle that doesn't matter at all most of the time",
    "start": "1364799",
    "end": "1369960"
  },
  {
    "text": "since the data will pass through your system uh and you might not have created all these component most of the time you",
    "start": "1369960",
    "end": "1375880"
  },
  {
    "text": "you have not and then what really matters is that the data is correct down",
    "start": "1375880",
    "end": "1381760"
  },
  {
    "text": "here or when it's read up again is probably even more precise but that's what's matter",
    "start": "1381760",
    "end": "1388919"
  },
  {
    "text": "right and then of course do validation but if you as well apply value objects",
    "start": "1388919",
    "end": "1395320"
  },
  {
    "text": "or domain Primitives you will know that it will be correct all the way down of course if it's used so you can always uh",
    "start": "1395320",
    "end": "1404600"
  },
  {
    "text": "uh like uh cost out of it of course but then yeah this is at least better since",
    "start": "1404600",
    "end": "1411039"
  },
  {
    "text": "since here we know that it will be correct when it's saved and even when it's loaded back from the database so if",
    "start": "1411039",
    "end": "1416840"
  },
  {
    "text": "some somebody cluttered the data in the database it will fail when you instantiated instantiated from the",
    "start": "1416840",
    "end": "1423039"
  },
  {
    "text": "database as well which is good yeah and but uh usernames might be",
    "start": "1423039",
    "end": "1430200"
  },
  {
    "text": "not be the best real world example it's just a string of characters that we",
    "start": "1430200",
    "end": "1436320"
  },
  {
    "text": "using computer systems so let's try to imagine a more real world example for example what we call pood or postal code",
    "start": "1436320",
    "end": "1444320"
  },
  {
    "text": "in Norway uh what you most guys would call zip codes I guess",
    "start": "1444320",
    "end": "1450559"
  },
  {
    "text": "but uh those are four characters in Norway and they can contain leading",
    "start": "1450559",
    "end": "1456600"
  },
  {
    "text": "zeros and it should be just numbers and uh when I log into the bank I can get",
    "start": "1456600",
    "end": "1461679"
  },
  {
    "text": "this form where it's like is this your address can you confirm this and then",
    "start": "1461679",
    "end": "1467320"
  },
  {
    "text": "suddenly it happens I get like is your postal codee 356 no it isn't it's",
    "start": "1467320",
    "end": "1474200"
  },
  {
    "text": "0356 right so so this has actually happened to me the zero is gone and and",
    "start": "1474200",
    "end": "1480840"
  },
  {
    "text": "and why is that the Integrity of the data is broken right uh well uh let's see a simple",
    "start": "1480840",
    "end": "1488399"
  },
  {
    "text": "example on how that can happen can you see the problem here with a zip",
    "start": "1488399",
    "end": "1495279"
  },
  {
    "text": "code yeah it's an integer right and when we sum it up here the leading zero",
    "start": "1495799",
    "end": "1502320"
  },
  {
    "text": "disappears this is an very normal thing to happen but uh this code builds fine",
    "start": "1502320",
    "end": "1510159"
  },
  {
    "text": "but there's actually another error here another another bug can I see",
    "start": "1510159",
    "end": "1517440"
  },
  {
    "text": "it well can you see it yes I wrote this",
    "start": "1518840",
    "end": "1523960"
  },
  {
    "text": "example yeah so uh the parameter order is is uh wrong right the name is now my",
    "start": "1523960",
    "end": "1532120"
  },
  {
    "text": "address and the address is now my name so who has seen that bug where you're",
    "start": "1532120",
    "end": "1537159"
  },
  {
    "text": "like you have lots of strings in a method and it's been changed when refactored yeah yeah it it's so easy to",
    "start": "1537159",
    "end": "1543039"
  },
  {
    "text": "do in it at Le when you suddenly have more than three strings you have to like check really carefully and probably your",
    "start": "1543039",
    "end": "1550919"
  },
  {
    "text": "test run okay because you just inserted dummy string and everything's okay so",
    "start": "1550919",
    "end": "1556440"
  },
  {
    "text": "these are very normal bugs and uh but let's jump back to the postal code uh",
    "start": "1556440",
    "end": "1563640"
  },
  {
    "text": "what we claim here is that a postal code is integer right and to claim that we",
    "start": "1563640",
    "end": "1570320"
  },
  {
    "text": "think is kind of crazy because this is the definition of an integer is very mathematic and I'm",
    "start": "1570320",
    "end": "1577080"
  },
  {
    "text": "not going to go through it all but the thing is this is a definition of a number and saying that a sip code or",
    "start": "1577080",
    "end": "1582760"
  },
  {
    "text": "postal code is that that doesn't make sense to us uh",
    "start": "1582760",
    "end": "1588520"
  },
  {
    "text": "and this wouldn't keep the Integrity of the data correct so what can we do well",
    "start": "1588520",
    "end": "1596679"
  },
  {
    "text": "we can create these domain Primitives or value objects and make sure that the",
    "start": "1596679",
    "end": "1602080"
  },
  {
    "text": "logic within that class uh make sure",
    "start": "1602080",
    "end": "1607120"
  },
  {
    "text": "that this leading zero is okay it validates that it's just numbers for characters you can override it with a",
    "start": "1607120",
    "end": "1614559"
  },
  {
    "text": "two string method to make sure that the zero is kept correctly and you can encapsulate all that logic",
    "start": "1614559",
    "end": "1621600"
  },
  {
    "text": "into a real world building block which you might call postal code like here so",
    "start": "1621600",
    "end": "1628440"
  },
  {
    "text": "and when you Summit here uh somehow then you will get uh the",
    "start": "1628440",
    "end": "1633919"
  },
  {
    "text": "correct value and now also this won't build because now I have",
    "start": "1633919",
    "end": "1641080"
  },
  {
    "text": "two domain Primitives address and name and this one doesn't take an address in",
    "start": "1641080",
    "end": "1646480"
  },
  {
    "text": "the first part and even though name and address might have some of the same rules this gives very much value because",
    "start": "1646480",
    "end": "1653200"
  },
  {
    "text": "a name isn't address it's to very different things and now we have created these building blocks that also gives",
    "start": "1653200",
    "end": "1659919"
  },
  {
    "text": "our us stronger type",
    "start": "1659919",
    "end": "1663799"
  },
  {
    "text": "safety yes so and as I said postal code it changing it's an Integrity problem of",
    "start": "1667320",
    "end": "1674320"
  },
  {
    "text": "course which is a security problem but it's not that big of a deal maybe what's a",
    "start": "1674320",
    "end": "1681120"
  },
  {
    "text": "bigger deal is is money um which",
    "start": "1681120",
    "end": "1686840"
  },
  {
    "text": "is um where I most like always recommend",
    "start": "1686840",
    "end": "1691960"
  },
  {
    "text": "using domain Primitives without any without any doubt so problem is that if",
    "start": "1691960",
    "end": "1699640"
  },
  {
    "text": "you you're allowed to add uh CER and Euros in example that's a bigger problem than",
    "start": "1699640",
    "end": "1706279"
  },
  {
    "text": "Ivan's postal code changing right and it might be good or bad depending on",
    "start": "1706279",
    "end": "1711320"
  },
  {
    "text": "if you're the customer or the bank of course and which uh which uh currency",
    "start": "1711320",
    "end": "1716960"
  },
  {
    "text": "you actually want to use but it's still uh would be a much more critical bug so",
    "start": "1716960",
    "end": "1722640"
  },
  {
    "text": "you can use domain Primitives to model stuff like that as well so here is a more complex example where we have more",
    "start": "1722640",
    "end": "1728840"
  },
  {
    "text": "properties as well so instead of using a des small and uh maybe some some string",
    "start": "1728840",
    "end": "1734600"
  },
  {
    "text": "on the side you say that money is actually a currency and value the combination of those",
    "start": "1734600",
    "end": "1741600"
  },
  {
    "text": "two um and you can actually enforce it so it's not it's not possible to make",
    "start": "1741600",
    "end": "1747159"
  },
  {
    "text": "those kind of mistakes since you can also make or model operators so then you",
    "start": "1747159",
    "end": "1753039"
  },
  {
    "text": "can say okay you're not actually not allowed to to to sum to money or with",
    "start": "1753039",
    "end": "1758919"
  },
  {
    "text": "different currencies which is a very strong tool",
    "start": "1758919",
    "end": "1765200"
  },
  {
    "text": "um okay so this was examp exles of Integrity um and secure by designs one",
    "start": "1765200",
    "end": "1773240"
  },
  {
    "text": "secure by design pattern you can use for integrity uh we also want to focus a bit",
    "start": "1773240",
    "end": "1779120"
  },
  {
    "text": "on confidentiality and how you can model things there in a in a secure by Design",
    "start": "1779120",
    "end": "1786519"
  },
  {
    "text": "way yeah so uh in the description of this talk we promis that we would uh",
    "start": "1786519",
    "end": "1792919"
  },
  {
    "text": "show you how we can secure a API request pipeline so we'll uh just imagine an API",
    "start": "1792919",
    "end": "1799480"
  },
  {
    "text": "request here and let's just get a very simple API request there are things you",
    "start": "1799480",
    "end": "1804880"
  },
  {
    "text": "can do here to make it better with contracts that are returned out but this is the barebone simple example well we",
    "start": "1804880",
    "end": "1812760"
  },
  {
    "text": "have okay so we have some service that gets patient records right by ID and we",
    "start": "1812760",
    "end": "1820679"
  },
  {
    "text": "have an endpoint and we get an ID from the route and we return either if we",
    "start": "1820679",
    "end": "1826519"
  },
  {
    "text": "find a record in the database it's okay but if it's null then we it's not found right so we have an endpoint",
    "start": "1826519",
    "end": "1834159"
  },
  {
    "text": "with no security added at all so uh how do we secure this",
    "start": "1834159",
    "end": "1841679"
  },
  {
    "text": "well uh one way is to think of a uh step approach and first we want to validate",
    "start": "1841679",
    "end": "1850159"
  },
  {
    "text": "that the request is correct it's it's very easy to start with validating the data is correct or the authorization but",
    "start": "1850159",
    "end": "1856840"
  },
  {
    "text": "first we want to know is the HTTP request well formed is the headers well formed it's content type okay and this",
    "start": "1856840",
    "end": "1864840"
  },
  {
    "text": "is often done by the framework uh not always so keep this in mind uh but then we want to validate",
    "start": "1864840",
    "end": "1872919"
  },
  {
    "text": "that access token is correct if you use token based authentication which I hope",
    "start": "1872919",
    "end": "1878120"
  },
  {
    "text": "you do um and then we transform this token into a permission model you can do",
    "start": "1878120",
    "end": "1884240"
  },
  {
    "text": "that and that and in the system and then we validate that the",
    "start": "1884240",
    "end": "1889279"
  },
  {
    "text": "data in the actual request is correct like validating the body of the post",
    "start": "1889279",
    "end": "1895760"
  },
  {
    "text": "request maybe and then we valid the permission to",
    "start": "1895760",
    "end": "1901240"
  },
  {
    "text": "execute the operation or what we call functional level authorization and then",
    "start": "1901240",
    "end": "1906639"
  },
  {
    "text": "we do permission to query or change of data and that might be object level and",
    "start": "1906639",
    "end": "1912320"
  },
  {
    "text": "property level authorization uh so but a lot of the",
    "start": "1912320",
    "end": "1918000"
  },
  {
    "text": "these steps here I think people kind of tend to do correct and know what to do",
    "start": "1918000",
    "end": "1924240"
  },
  {
    "text": "they know that they need to validate the token they know that they need to do everything up until the end point but",
    "start": "1924240",
    "end": "1930039"
  },
  {
    "text": "where people tend to mess up is these two last steps and just to so that we've said it",
    "start": "1930039",
    "end": "1939240"
  },
  {
    "text": "uh or uh yeah so authentication of course is about who you are which we",
    "start": "1939240",
    "end": "1946039"
  },
  {
    "text": "will not focus on I think can give a separate talk about that and only that",
    "start": "1946039",
    "end": "1952159"
  },
  {
    "text": "um and authorization then is as I just said uh is about what you're allowed to",
    "start": "1952159",
    "end": "1958320"
  },
  {
    "text": "do so what you're allowed to access uh what you're allowed to read and what you're all to allowed to change and we",
    "start": "1958320",
    "end": "1964919"
  },
  {
    "text": "will we will focus on the latter and why do we want to focus on",
    "start": "1964919",
    "end": "1971600"
  },
  {
    "text": "that uh these are this is uhas top 10",
    "start": "1971600",
    "end": "1976720"
  },
  {
    "text": "and in the top five three of them are related to",
    "start": "1976720",
    "end": "1981919"
  },
  {
    "text": "authorization so if you as a developer again I had this list of security things",
    "start": "1981919",
    "end": "1987360"
  },
  {
    "text": "uh I recommended you to not learn uh if you should learn one thing or uh focus",
    "start": "1987360",
    "end": "1993000"
  },
  {
    "text": "on one thing then we think authorization is probably uh one you you should spend",
    "start": "1993000",
    "end": "1998639"
  },
  {
    "text": "time on at least yeah so so let let's get back to the different level and it's important",
    "start": "1998639",
    "end": "2004880"
  },
  {
    "text": "to know that authorization isn't just one thing it's it is different level with increasing specific and we start",
    "start": "2004880",
    "end": "2012679"
  },
  {
    "text": "with a functional and that's are you allowed to execute this kind of operation are allowed to get patient",
    "start": "2012679",
    "end": "2019279"
  },
  {
    "text": "records in general you might be a doctor so you're allowed right like R based uh",
    "start": "2019279",
    "end": "2025600"
  },
  {
    "text": "authorization and uh then are you allowed to read this specific record of",
    "start": "2025600",
    "end": "2032080"
  },
  {
    "text": "this patient right you might need to be the doctor of that patient to read the record and May maybe this person uh is",
    "start": "2032080",
    "end": "2040919"
  },
  {
    "text": "in witness witness protection or something and it has address that no one should really read well then that's",
    "start": "2040919",
    "end": "2047360"
  },
  {
    "text": "property level authorization we don't want to uh deliver out properties of",
    "start": "2047360",
    "end": "2053599"
  },
  {
    "text": "everything to everyone there might be different uh security issues with",
    "start": "2053599",
    "end": "2059118"
  },
  {
    "text": "delivering uh properties to different type of roles in our system so but how",
    "start": "2059119",
    "end": "2065638"
  },
  {
    "text": "do we we really start with securing this endpoint that I showed well uh we start",
    "start": "2065639",
    "end": "2071440"
  },
  {
    "text": "at functional level the least specific and for most of you guys I think the",
    "start": "2071440",
    "end": "2078679"
  },
  {
    "text": "normal way to start is with a policy based approach so this isnet code uh but it",
    "start": "2078679",
    "end": "2086560"
  },
  {
    "text": "really applies to any programming language there are ways to create policies for endpoints and in net we",
    "start": "2086560",
    "end": "2092320"
  },
  {
    "text": "just do authorize and then we have created a policy that says you have to have this scope or this kind of claim in",
    "start": "2092320",
    "end": "2099200"
  },
  {
    "text": "your uh jot token so uh that's okay but to me uh when this",
    "start": "2099200",
    "end": "2108839"
  },
  {
    "text": "service is called this looks very much like the parameter defense that we didn't want because once you're in here",
    "start": "2108839",
    "end": "2115800"
  },
  {
    "text": "you're really in you can do whatever you want there are no additional checks so",
    "start": "2115800",
    "end": "2121480"
  },
  {
    "text": "what happens if uh this another endpoint calls this service and it misses is",
    "start": "2121480",
    "end": "2128079"
  },
  {
    "text": "authorized attribute or service calls a service uh we don't check anything",
    "start": "2128079",
    "end": "2133440"
  },
  {
    "text": "here and that to us is a real problem because code bases get messy and it's",
    "start": "2133440",
    "end": "2140359"
  },
  {
    "text": "quite fragile right did you assume everybody will remember what you do right yeah and",
    "start": "2140359",
    "end": "2146599"
  },
  {
    "text": "there are a lot of developers and I can't assume I remember what I did you will remember the next year",
    "start": "2146599",
    "end": "2153839"
  },
  {
    "text": "so uh how can we fix this then we can uh",
    "start": "2153839",
    "end": "2159800"
  },
  {
    "text": "think of a multiple layer approach right we want to secure the service uh in our",
    "start": "2159800",
    "end": "2166079"
  },
  {
    "text": "application layer and this we can do here so let's say we do get the claim and we say that",
    "start": "2166079",
    "end": "2173880"
  },
  {
    "text": "uh the claim should be a record to read and we say no access to operation and we say forbidden you can't do this and this",
    "start": "2173880",
    "end": "2182319"
  },
  {
    "text": "looks good but to me this doesn't look too good doing HTTP comp context stuff",
    "start": "2182319",
    "end": "2189720"
  },
  {
    "text": "service it's not beautiful code right so and it's probably not that secure either",
    "start": "2189720",
    "end": "2195240"
  },
  {
    "text": "because who's going to remember how who someone's going to misspell this or uh",
    "start": "2195240",
    "end": "2200520"
  },
  {
    "text": "do something wrong with the claims right it's not very well modeled so what we",
    "start": "2200520",
    "end": "2208040"
  },
  {
    "text": "advocate for doing is creating abstractions for permissions so uh we",
    "start": "2208040",
    "end": "2213400"
  },
  {
    "text": "can make a permission service and we can say Can Read records and this is very reusable for every part of code you have",
    "start": "2213400",
    "end": "2220839"
  },
  {
    "text": "because you probably have an endpoint or a service method that's all also uh",
    "start": "2220839",
    "end": "2226160"
  },
  {
    "text": "returns a list of records and then you can just reuse that and you can test",
    "start": "2226160",
    "end": "2231400"
  },
  {
    "text": "this and you can test the service so how would would this service",
    "start": "2231400",
    "end": "2236640"
  },
  {
    "text": "look like uh so the interface might look like this this the user ID you can read",
    "start": "2236640",
    "end": "2243119"
  },
  {
    "text": "you can write records and maybe some other stuff uh and if we Implement that",
    "start": "2243119",
    "end": "2248839"
  },
  {
    "text": "we have to implement the properties and then we have to actually",
    "start": "2248839",
    "end": "2254599"
  },
  {
    "text": "set the properties let's say we do it like this we access the HTTP context and we get",
    "start": "2254599",
    "end": "2260800"
  },
  {
    "text": "the user ID from the claim the subject of the token this is who the user is",
    "start": "2260800",
    "end": "2267160"
  },
  {
    "text": "right or some other claim if there is any specific uh open ID connect uh stuff",
    "start": "2267160",
    "end": "2274400"
  },
  {
    "text": "but then we can check is this person in the scope then we that uh can read or can write and we can add this as scop",
    "start": "2274400",
    "end": "2282640"
  },
  {
    "text": "and in net a scope service means that it's instantiated once per request in an",
    "start": "2282640",
    "end": "2289560"
  },
  {
    "text": "API so we keep this as a context for the API request to make sure that uh it",
    "start": "2289560",
    "end": "2296240"
  },
  {
    "text": "stays the same throughout the request and we want a new check when a new request comes in and this is exactly what is defense",
    "start": "2296240",
    "end": "2305079"
  },
  {
    "text": "in depth and I wanted to Google Defence in depth because I wanted to know what",
    "start": "2305079",
    "end": "2312480"
  },
  {
    "text": "what did Google say Defence in depth is it and I think it says exactly what we have done they say defense is St is a",
    "start": "2312480",
    "end": "2318680"
  },
  {
    "text": "concept used in information security which multiple layers of security",
    "start": "2318680",
    "end": "2323720"
  },
  {
    "text": "controls are placed throughout an information technology system its intent is to provide redundancy in the event of",
    "start": "2323720",
    "end": "2330760"
  },
  {
    "text": "a security control fails or and so on so right we have created multiple layers we have created redundancy if we mess up in",
    "start": "2330760",
    "end": "2339119"
  },
  {
    "text": "the policy we have another layer that catches stuff or the other way",
    "start": "2339119",
    "end": "2345680"
  },
  {
    "text": "around so by doing this we're quite far in the functional level game we are we",
    "start": "2345680",
    "end": "2351440"
  },
  {
    "text": "are quite good at the functional level authorization and if you create this",
    "start": "2351440",
    "end": "2356920"
  },
  {
    "text": "pattern throughout the code this will be a very good secure by design",
    "start": "2356920",
    "end": "2362839"
  },
  {
    "text": "pattern but I also want to say talk about this one the bull broken object",
    "start": "2362839",
    "end": "2368119"
  },
  {
    "text": "level authorization or hopefully not broken though but this broken yeah this",
    "start": "2368119",
    "end": "2374920"
  },
  {
    "text": "is the most often broken this is top one ofas and why do we always get this wrong",
    "start": "2374920",
    "end": "2381800"
  },
  {
    "text": "because we we know what happens we are delivering objects that we shouldn't and this one can you see what happens",
    "start": "2381800",
    "end": "2389319"
  },
  {
    "text": "here related to that",
    "start": "2389319",
    "end": "2393400"
  },
  {
    "text": "Onish uh it's something with the idea maybe what you're allowed to access yeah yeah because right now we are good with",
    "start": "2398359",
    "end": "2405280"
  },
  {
    "text": "the functional level we are checking it in multiple layers but we will always return the record we we we're not",
    "start": "2405280",
    "end": "2411200"
  },
  {
    "text": "checking if anyone is actually allowed to see that specific record and this is",
    "start": "2411200",
    "end": "2416880"
  },
  {
    "text": "a typical indirect insecure direct object reference a very simple uh security",
    "start": "2416880",
    "end": "2425560"
  },
  {
    "text": "bug but so of often implemented so how can we fix this well",
    "start": "2425560",
    "end": "2433640"
  },
  {
    "text": "let's just look at the service let's just imagine we don't have the endpoint",
    "start": "2433640",
    "end": "2439319"
  },
  {
    "text": "we can Implement a can read record method uh in the permission service and",
    "start": "2439319",
    "end": "2444880"
  },
  {
    "text": "we can say okay maybe a patient can read all record uh user can read all records",
    "start": "2444880",
    "end": "2450680"
  },
  {
    "text": "then it's good or uh you have to be the doctor of the patient so you can Implement uh",
    "start": "2450680",
    "end": "2457800"
  },
  {
    "text": "complex logic here you can test it and you can reuse it and then we make sure that even",
    "start": "2457800",
    "end": "2465040"
  },
  {
    "text": "though you are allowed to read a record we also check if you are allowed to read this specific",
    "start": "2465040",
    "end": "2471800"
  },
  {
    "text": "record so this I think is quite interesting when do we really want to",
    "start": "2473480",
    "end": "2479000"
  },
  {
    "text": "check for object level authorization do we want to do it before or do we want to",
    "start": "2479000",
    "end": "2484440"
  },
  {
    "text": "do it after we fetch the data and I'm going to get some Cote examples",
    "start": "2484440",
    "end": "2490040"
  },
  {
    "text": "on how it would look before and how it would look after before we can have a method and we use the patient",
    "start": "2490040",
    "end": "2497240"
  },
  {
    "text": "ID and after we can this is the get records like a list we can Loop through",
    "start": "2497240",
    "end": "2503400"
  },
  {
    "text": "the list and check if all the records are uh okay and remove those that are",
    "start": "2503400",
    "end": "2508920"
  },
  {
    "text": "not what would you do so how after how many would do it",
    "start": "2508920",
    "end": "2515920"
  },
  {
    "text": "after only yeah so all others will do it before then yeah why would our rest doesn't do",
    "start": "2515920",
    "end": "2522280"
  },
  {
    "text": "it at all yeah why would you do it after then",
    "start": "2522280",
    "end": "2528800"
  },
  {
    "text": "yeah yeah exactly you can uh do some sneaky way but so let's see well we",
    "start": "2531720",
    "end": "2538359"
  },
  {
    "text": "always say fail uh fail fast is good right so this is good and this might be",
    "start": "2538359",
    "end": "2544520"
  },
  {
    "text": "okay uh especially if we don't hit need to hit the database right uh but uh what",
    "start": "2544520",
    "end": "2551520"
  },
  {
    "text": "happens in this one do we really have control over this method over time let's",
    "start": "2551520",
    "end": "2557800"
  },
  {
    "text": "think about this slide we have stress factors and stress factor is code changes and another developer might",
    "start": "2557800",
    "end": "2566119"
  },
  {
    "text": "change that method or something might happen to that and uh what happens then",
    "start": "2566119",
    "end": "2571559"
  },
  {
    "text": "if this suddenly returns something it shouldn't well this way we will turn the",
    "start": "2571559",
    "end": "2579079"
  },
  {
    "text": "records so what we would advocate for is that in most cases you could actually do",
    "start": "2579079",
    "end": "2585920"
  },
  {
    "text": "both in simple cases you can fail fast if you want performance uh and that's good but you",
    "start": "2585920",
    "end": "2592920"
  },
  {
    "text": "can also be absolutely sure after you fetch the record that it's",
    "start": "2592920",
    "end": "2600359"
  },
  {
    "text": "okay so if we do this we are quite good with the object level authorization not",
    "start": "2601880",
    "end": "2608599"
  },
  {
    "text": "a lot can happen to us then property level unfortunately we don't have time to go that much into in this talk but",
    "start": "2608599",
    "end": "2616000"
  },
  {
    "text": "the number one thing is create specific dto or contracts so that you don't get Mass",
    "start": "2616000",
    "end": "2622640"
  },
  {
    "text": "assignment and that kind of stuff but uh one other thing that I want",
    "start": "2622640",
    "end": "2628559"
  },
  {
    "text": "to talk about is respect the user context because I think this I've seen this a lot in COD well you get patient",
    "start": "2628559",
    "end": "2636280"
  },
  {
    "text": "records and we want to know who the doctor is so we send in the doctor ID but what we kind of Miss is that this ID",
    "start": "2636280",
    "end": "2644160"
  },
  {
    "text": "is very much controlled by the user so then it's very easy to impersonate the doctor right because the",
    "start": "2644160",
    "end": "2650640"
  },
  {
    "text": "doctor is the one calling the API and what happens then if we do",
    "start": "2650640",
    "end": "2656319"
  },
  {
    "text": "this then the doctor you can just be whoever you want and then it's easy to read whatever you want so if we look at",
    "start": "2656319",
    "end": "2665839"
  },
  {
    "text": "the permission service this line is very important we always want to get the user",
    "start": "2665839",
    "end": "2671839"
  },
  {
    "text": "idea from the context of the session from the cookie session from the token from wherever the session data",
    "start": "2671839",
    "end": "2681040"
  },
  {
    "text": "is okay good so what are the main takeways we want you to take from what",
    "start": "2686400",
    "end": "2693280"
  },
  {
    "text": "we've uh spoken about now um first most important is that good design leads to",
    "start": "2693280",
    "end": "2700880"
  },
  {
    "text": "secure systems we know for sure and try to actually think about",
    "start": "2700880",
    "end": "2706400"
  },
  {
    "text": "that and use it as a uh when you will try to advocate for good design or doing",
    "start": "2706400",
    "end": "2711960"
  },
  {
    "text": "design work remember that that's also secur to work most of the",
    "start": "2711960",
    "end": "2717319"
  },
  {
    "text": "time uh and again there's no secure systems so assume that you will be",
    "start": "2717319",
    "end": "2722400"
  },
  {
    "text": "breached as soon as you deploy it",
    "start": "2722400",
    "end": "2727400"
  },
  {
    "text": "and embrace in uncertainty so again you you don't know what will happen you don't know the changes that will come",
    "start": "2727800",
    "end": "2734280"
  },
  {
    "text": "there will be legal changes there will be other developers changing your code",
    "start": "2734280",
    "end": "2739800"
  },
  {
    "text": "try to think about that when you write it or again then build systems for",
    "start": "2739800",
    "end": "2745520"
  },
  {
    "text": "others to change not only to work now and to you to go over to the next",
    "start": "2745520",
    "end": "2752240"
  },
  {
    "text": "task uh yeah and I just want to bring up this slide again so in the beginning we",
    "start": "2752880",
    "end": "2758440"
  },
  {
    "text": "talked about antifragility and that we want to make antifragile systems not only robust systems and now I think we",
    "start": "2758440",
    "end": "2766040"
  },
  {
    "text": "we showed some techniques some secure by Design techniques that we at least think",
    "start": "2766040",
    "end": "2771160"
  },
  {
    "text": "will lead towards antifragile systems but there are lots of other things that",
    "start": "2771160",
    "end": "2777000"
  },
  {
    "text": "you all already do that are towards this",
    "start": "2777000",
    "end": "2782440"
  },
  {
    "text": "so uh test driven development is uh very antifragile pattern uh you you",
    "start": "2782440",
    "end": "2790640"
  },
  {
    "text": "want to do tests like a test on several levels and that is to apply stress right",
    "start": "2790640",
    "end": "2795880"
  },
  {
    "text": "but in a safe environment devops when devops was what",
    "start": "2795880",
    "end": "2802119"
  },
  {
    "text": "is it was in the beginning these are the three ways of devops what it it used to be and that's also towards anti fragile",
    "start": "2802119",
    "end": "2809559"
  },
  {
    "text": "you want to have like smaller feedback loops you want to deploy often to actually deploy or to to to get stress",
    "start": "2809559",
    "end": "2816920"
  },
  {
    "text": "on your system as early as possible and again if you remember this graph you want to deploy often to have",
    "start": "2816920",
    "end": "2824400"
  },
  {
    "text": "that I said that this top graph is actually not going just like that it's going like up and down and the shorter",
    "start": "2824400",
    "end": "2831559"
  },
  {
    "text": "like deployment time you have the the less will the like hit you take B and that's to be able to actually uh",
    "start": "2831559",
    "end": "2840559"
  },
  {
    "text": "benefit from from the stress you apply that's pretty much what devops is about in my opinion",
    "start": "2840559",
    "end": "2848160"
  },
  {
    "text": "then we did have this funny thing uh this is Netflix chaos monkey I don't",
    "start": "2848160",
    "end": "2855400"
  },
  {
    "text": "remember when but it's it's probably like 10 years ago now but uh that was uh very much this since that that",
    "start": "2855400",
    "end": "2862720"
  },
  {
    "text": "was like this um program that went around and shut off servers in Netflix",
    "start": "2862720",
    "end": "2868880"
  },
  {
    "text": "uh infrastructure exactly to apply stress and see okay what actually happens when this with when when hits the fan",
    "start": "2868880",
    "end": "2877440"
  },
  {
    "text": "and now you have some very cool tools I think in Asher it's called like Asher",
    "start": "2877440",
    "end": "2882960"
  },
  {
    "text": "chaos Studio AWS has the same as fault injection or something like that where",
    "start": "2882960",
    "end": "2888440"
  },
  {
    "text": "you can actually make experiments to apply like very real stress and like take down servers and uh and stuff like",
    "start": "2888440",
    "end": "2896079"
  },
  {
    "text": "that which is very interesting so you can check that out uh but again we do",
    "start": "2896079",
    "end": "2901800"
  },
  {
    "text": "lots of things already so I kind of want to challenge you all to go when you go",
    "start": "2901800",
    "end": "2907200"
  },
  {
    "text": "to work to actually see the things you do and try to think is this actually towards antifragile systems and I think",
    "start": "2907200",
    "end": "2913800"
  },
  {
    "text": "it you will see that it actually is or toward secure systems if you think like with this secure by Design",
    "start": "2913800",
    "end": "2921920"
  },
  {
    "text": "mindset yes so we just end on this slide and uh now we have 10 minutes left so we",
    "start": "2923400",
    "end": "2929640"
  },
  {
    "text": "can take questions as well yeah thanks thank you",
    "start": "2929640",
    "end": "2937318"
  },
  {
    "text": "and we will we can take questions now or we will be here and remember to evaluate on your way",
    "start": "2942760",
    "end": "2949119"
  },
  {
    "text": "out yeah yes about",
    "start": "2950480",
    "end": "2958240"
  },
  {
    "text": "yeah cost in what way you",
    "start": "2959839",
    "end": "2964920"
  },
  {
    "text": "mean system",
    "start": "2964920",
    "end": "2968720"
  },
  {
    "text": "is it well well I would say the thing I",
    "start": "2970000",
    "end": "2976000"
  },
  {
    "text": "said earlier like yeah uh like uh the question was",
    "start": "2976000",
    "end": "2981440"
  },
  {
    "text": "about the cost if you do a fragile system it's much cheaper than doing an an fragile system and it might be in the",
    "start": "2981440",
    "end": "2987520"
  },
  {
    "text": "development cost but uh if hits the fan and your system goes down and you",
    "start": "2987520",
    "end": "2994599"
  },
  {
    "text": "miss user interaction for like 3 days and you're a web shop then you might be have a problem",
    "start": "2994599",
    "end": "3001920"
  },
  {
    "text": "you can lose like millions of dollars just in days right so we we it's I think",
    "start": "3001920",
    "end": "3008359"
  },
  {
    "text": "it's a bit too naive to think that we will just cut down on security to get",
    "start": "3008359",
    "end": "3014680"
  },
  {
    "text": "there and it's not just about robustness and antifragile right this is security",
    "start": "3014680",
    "end": "3019880"
  },
  {
    "text": "this is integrity is very eily missed in the security business that the Integrity",
    "start": "3019880",
    "end": "3025440"
  },
  {
    "text": "of our system uh is just as important as the confidentiality but but but I think",
    "start": "3025440",
    "end": "3031040"
  },
  {
    "text": "so when you mention proof of concept so but then I just want to emphasize again that when I think about this I think",
    "start": "3031040",
    "end": "3037400"
  },
  {
    "text": "about so if if you're at a company I think the the main system you want to be antifragile is the like sum of all the",
    "start": "3037400",
    "end": "3044599"
  },
  {
    "text": "systems in the company not like one piece since of course when you make a proof of concept you can't spend time on",
    "start": "3044599",
    "end": "3050880"
  },
  {
    "text": "doing all that's just then you have simpler design right that might be fine since the the risk is so low",
    "start": "3050880",
    "end": "3059440"
  },
  {
    "text": "um that's makes sense also I would say doing some of this design approaches",
    "start": "3059440",
    "end": "3065359"
  },
  {
    "text": "that we did if you are able to do them from the beginning it's not much more",
    "start": "3065359",
    "end": "3070799"
  },
  {
    "text": "work I I can see that it's much work applying them uh after the fact but most of this pattern you can just start using",
    "start": "3070799",
    "end": "3077960"
  },
  {
    "text": "and then transition the new code into those and it's better to have a domain",
    "start": "3077960",
    "end": "3083920"
  },
  {
    "text": "primitive that you know is very much valid every word than checking it for null and doing regx expression in every",
    "start": "3083920",
    "end": "3089920"
  },
  {
    "text": "class everywhere and having to test every different kind of data but I think it's it's also it is",
    "start": "3089920",
    "end": "3097359"
  },
  {
    "text": "actually a discussion so we have that internally a lot of time especially with like this pattern so and domain",
    "start": "3097359",
    "end": "3103119"
  },
  {
    "text": "primitive is a good one and it's in in DDD Blue Book it this is mentioned a lot as well and they they say like focus on",
    "start": "3103119",
    "end": "3110200"
  },
  {
    "text": "core domain right so in your core domain and like your money domain there you should probably do everything right",
    "start": "3110200",
    "end": "3117079"
  },
  {
    "text": "but don't like the fringes and like for the MVPs and like the experiments you do",
    "start": "3117079",
    "end": "3122200"
  },
  {
    "text": "then probably not but then some at our company at least they advocate for like okay they will never use a string at",
    "start": "3122200",
    "end": "3128559"
  },
  {
    "text": "anything it will be like domain premises everywhere and you should do that like all the way and but then their argument",
    "start": "3128559",
    "end": "3134559"
  },
  {
    "text": "is that as Ivan said if you do it from the beginning it isn't really a big cost since most of these are very simple",
    "start": "3134559",
    "end": "3140640"
  },
  {
    "text": "classes but that that is up for discussion I yeah I agree anyone else",
    "start": "3140640",
    "end": "3148520"
  },
  {
    "text": "is uh yeah so it's about the functional level programming why it's problematic",
    "start": "3164920",
    "end": "3170920"
  },
  {
    "text": "to decorate class with a policy yeah well I wouldn't say that",
    "start": "3170920",
    "end": "3177359"
  },
  {
    "text": "it's problematic I say it's very good to do that but it's not enough to just do",
    "start": "3177359",
    "end": "3183040"
  },
  {
    "text": "that and I would always use policies to check for permissions but the thing is",
    "start": "3183040",
    "end": "3189119"
  },
  {
    "text": "that your API layer you might have an API layer and then you have something where a service bus comes in and then",
    "start": "3189119",
    "end": "3195359"
  },
  {
    "text": "you have an integration and there are lots of entrances to your system so the application layer which handles",
    "start": "3195359",
    "end": "3202040"
  },
  {
    "text": "everything should also be aware of the functional level of ation who is allowed",
    "start": "3202040",
    "end": "3207520"
  },
  {
    "text": "to do what so that you don't cre this create this big trust boundary you should create more zero thrust in your",
    "start": "3207520",
    "end": "3215680"
  },
  {
    "text": "system but yeah of course I would have both layers but but I think the service best example is good yeah since you",
    "start": "3215680",
    "end": "3222920"
  },
  {
    "text": "often will actually have like different apis different API interfaces like web",
    "start": "3222920",
    "end": "3228960"
  },
  {
    "text": "API is one and then service vers another they will often use the same like service classes and if you only have it",
    "start": "3228960",
    "end": "3235280"
  },
  {
    "text": "there then you suddenly have a ability through your service Bas or an inconsistency in how you check your",
    "start": "3235280",
    "end": "3243558"
  },
  {
    "text": "authorization people love the",
    "start": "3247640",
    "end": "3251400"
  },
  {
    "text": "graph okay so then we need to take perform what performance okay so the",
    "start": "3262960",
    "end": "3269200"
  },
  {
    "text": "question was concrete example of when the performance actually increases with the increased stress right so I don't",
    "start": "3269200",
    "end": "3276720"
  },
  {
    "text": "know if I have a like spot an example but we need to emphasize that the performance is again the sum of",
    "start": "3276720",
    "end": "3284240"
  },
  {
    "text": "everything so it's it can be like how fast you find find bugs uh like uh I",
    "start": "3284240",
    "end": "3291559"
  },
  {
    "text": "think maybe bugs is the best so and if you think about um test driven development I think that's a good",
    "start": "3291559",
    "end": "3298240"
  },
  {
    "text": "example so you will find bugs and if you write a test for Every bug you find which you should do right then you're",
    "start": "3298240",
    "end": "3304160"
  },
  {
    "text": "unsure that the bug will not come up again later I think that's one then the performance will be better since you",
    "start": "3304160",
    "end": "3309359"
  },
  {
    "text": "will have less and less bugs with more and more stress so in the beginning when you deploy your system day one you will",
    "start": "3309359",
    "end": "3315160"
  },
  {
    "text": "have lots of bugs and then when you increase stress more and more users will'll find more and more bugs and you",
    "start": "3315160",
    "end": "3321119"
  },
  {
    "text": "will get like less in when when you go over time that's just from my top of my",
    "start": "3321119",
    "end": "3326920"
  },
  {
    "text": "head yeah and the important thing here is that in one instance of time if you",
    "start": "3326920",
    "end": "3333400"
  },
  {
    "text": "apply more stress of course the system will probably perform worse but this is stress over time like we'll learn from",
    "start": "3333400",
    "end": "3340160"
  },
  {
    "text": "the stress that is applied",
    "start": "3340160",
    "end": "3346319"
  },
  {
    "text": "imag yes of course probably but yeah there will always yeah so you the thing",
    "start": "3346480",
    "end": "3354240"
  },
  {
    "text": "is you said it will level out over time but there will always be new exploits and new ways to think and new",
    "start": "3354240",
    "end": "3360960"
  },
  {
    "text": "vulnerabilities in the packages you have and so you will always have to maintain the system and",
    "start": "3360960",
    "end": "3366920"
  },
  {
    "text": "uh and it's the same as the pandemic if the user you have no usage for a year probably your system performs worse",
    "start": "3366920",
    "end": "3373599"
  },
  {
    "text": "after even if you don't see it in the inst of time so but again this this is like philosophy right it's like terms so",
    "start": "3373599",
    "end": "3381880"
  },
  {
    "text": "it's just it's nothing more than that unfortunately can I just com on that yes please I think that inad",
    "start": "3381880",
    "end": "3389119"
  },
  {
    "text": "performance",
    "start": "3389119",
    "end": "3392119"
  },
  {
    "text": "quity yeah maybe yeah",
    "start": "3394599",
    "end": "3402599"
  },
  {
    "text": "yeah no no of course not so yeah yeah so the the suggestion here is to call it",
    "start": "3404559",
    "end": "3411400"
  },
  {
    "text": "quality instead of performance which I think might be a good suggestion uh um",
    "start": "3411400",
    "end": "3417319"
  },
  {
    "text": "which make it more clear since performance is kind of overloaded",
    "start": "3417319",
    "end": "3422240"
  },
  {
    "text": "ter what again come",
    "start": "3424559",
    "end": "3428680"
  },
  {
    "text": "in yes yeah okay so then but then performance is better since okay the comment here was that uh quality works",
    "start": "3431200",
    "end": "3437599"
  },
  {
    "text": "if you ignore uh that you have to make money in way it's a business uh so then",
    "start": "3437599",
    "end": "3443720"
  },
  {
    "text": "maybe performance is better again yeah is so it's just words like we have to kind of",
    "start": "3443720",
    "end": "3450000"
  },
  {
    "text": "philosoph discuss on this yeah",
    "start": "3450000",
    "end": "3456240"
  },
  {
    "text": "okay anything else or I think we'll round off end it here and you have three minutes for uh extra break yeah and",
    "start": "3456240",
    "end": "3464720"
  },
  {
    "text": "please remember to evaluate on your way out and come talk to us throughout the conference we're here and are happy to",
    "start": "3464720",
    "end": "3472039"
  },
  {
    "text": "discuss anything from the presentation or anything else thank thank you",
    "start": "3472039",
    "end": "3479359"
  }
]