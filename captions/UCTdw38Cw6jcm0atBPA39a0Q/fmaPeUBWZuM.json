[
  {
    "text": "okay I see people have already beer so this is uh a bit unfair for me but",
    "start": "3280",
    "end": "10759"
  },
  {
    "text": "okay um yeah my name is Stefan fman I'm from Germany and um some of you may uh",
    "start": "10759",
    "end": "18279"
  },
  {
    "text": "know me from the internet and from one or both of my open source tools I created fake which is the a shop build",
    "start": "18279",
    "end": "26000"
  },
  {
    "text": "tool and pet that's the German name the tour pet um which is a dependency",
    "start": "26000",
    "end": "33000"
  },
  {
    "text": "manager forn net and um I have talk about um both tours tomorrow where I",
    "start": "33000",
    "end": "39840"
  },
  {
    "text": "give introduction and I hope I have a surprise for you tomorrow uh we will see",
    "start": "39840",
    "end": "46559"
  },
  {
    "text": "I hope you would join me a surprise uh but today is about",
    "start": "46559",
    "end": "54480"
  },
  {
    "text": "different topic and the topic is um how to create uh mobile apps or let's say uh",
    "start": "54480",
    "end": "61359"
  },
  {
    "text": "one way to create mobile apps and um I will talk a bit about Fable which we um",
    "start": "61359",
    "end": "68119"
  },
  {
    "text": "just had an excellent talk by aonso and um I will go bit deeper into Alish",
    "start": "68119",
    "end": "74759"
  },
  {
    "text": "Alonso showed already Amish um I will go deeper there and I will talk a bit about",
    "start": "74759",
    "end": "80520"
  },
  {
    "text": "react native and react and um yeah the idea is to um show you a bit how we made",
    "start": "80520",
    "end": "88799"
  },
  {
    "text": "this application um our company is in Germany and uh we",
    "start": "88799",
    "end": "95040"
  },
  {
    "text": "are creating um software for energy water on gas companies and so um we get",
    "start": "95040",
    "end": "102159"
  },
  {
    "text": "the metadata from the devices into our system and then we do calculation and",
    "start": "102159",
    "end": "107840"
  },
  {
    "text": "all the invoicing for some of the energy companies and since last year we also",
    "start": "107840",
    "end": "114399"
  },
  {
    "text": "have a a mobile app that can run on IOS and Android so react native app and the",
    "start": "114399",
    "end": "121840"
  },
  {
    "text": "idea is that you basically can give it if you're Energy company you can give it to your uh workers and workers can go",
    "start": "121840",
    "end": "129560"
  },
  {
    "text": "from house to house and read the meters and also um it allows you to um to",
    "start": "129560",
    "end": "136280"
  },
  {
    "text": "change meters no to get the data into not to change the meter itself but um to",
    "start": "136280",
    "end": "141959"
  },
  {
    "text": "get the data into you can read the old meter then you can select a new meter",
    "start": "141959",
    "end": "148519"
  },
  {
    "text": "and uh new device and then you uh read a new meter and you",
    "start": "148519",
    "end": "153760"
  },
  {
    "text": "get a uh signature from the customer so this is what the the app",
    "start": "153760",
    "end": "160680"
  },
  {
    "text": "does and one of the important points is that everything happens offline so the",
    "start": "160680",
    "end": "166239"
  },
  {
    "text": "workers are um going into the company in",
    "start": "166239",
    "end": "171680"
  },
  {
    "text": "the morning then they have a Wi-Fi for a couple of seconds the app is uh refreshing and then they go out and uh",
    "start": "171680",
    "end": "181840"
  },
  {
    "text": "oh thank",
    "start": "182400",
    "end": "185640"
  },
  {
    "text": "you thank you um so they they um get the",
    "start": "188360",
    "end": "193480"
  },
  {
    "text": "new information uh we uh or the request into the the app and then from this",
    "start": "193480",
    "end": "199640"
  },
  {
    "text": "point the app is offline because in most situation if you go to a customer and then you go down in the house then you",
    "start": "199640",
    "end": "206440"
  },
  {
    "text": "don't have internet so this is important Point okay so how can we build such an",
    "start": "206440",
    "end": "214200"
  },
  {
    "text": "app and um just to spoiler you I have the production code with me and in the",
    "start": "214200",
    "end": "220080"
  },
  {
    "text": "end I will show you the production code so that you believe me this this is uh the result so but um let's start at the",
    "start": "220080",
    "end": "229480"
  },
  {
    "text": "beginning and um what I try",
    "start": "229480",
    "end": "234680"
  },
  {
    "text": "to yeah to show in this talk is what I think is a mod modern mobile app",
    "start": "234680",
    "end": "240920"
  },
  {
    "text": "development and one of the most important points is UI and uxix ux um so",
    "start": "240920",
    "end": "246920"
  },
  {
    "text": "user experience we always want to have apps that look exactly like all the other apps in the App Stores so if you",
    "start": "246920",
    "end": "253720"
  },
  {
    "text": "create something that doesn't uh behave properly then people will hate you and",
    "start": "253720",
    "end": "261840"
  },
  {
    "text": "um so for us um we always had the the idea that um yeah look at other apps how",
    "start": "261840",
    "end": "270680"
  },
  {
    "text": "do they work and then just do the same thing but with our",
    "start": "270680",
    "end": "276160"
  },
  {
    "text": "domain and the second point is performance and this is um also important if you have like this donut",
    "start": "276160",
    "end": "283800"
  },
  {
    "text": "rotating all the time then people would hate you again and this is not not nice in this uh",
    "start": "283800",
    "end": "290240"
  },
  {
    "text": "video uh everything is a bit slow but this is",
    "start": "290240",
    "end": "296360"
  },
  {
    "text": "only because of the Android emulator I can tell you in the app itself it's super fast okay",
    "start": "296360",
    "end": "302600"
  },
  {
    "text": "so um the second point is tooling um if I",
    "start": "302600",
    "end": "310800"
  },
  {
    "text": "say modern then I don't want like to work in notepad um so everything that you know",
    "start": "310800",
    "end": "318240"
  },
  {
    "text": "from idees or modern editors um I want to have this as well intelligence",
    "start": "318240",
    "end": "324479"
  },
  {
    "text": "navigation features uh refactoring features some kind in um Cod highlight",
    "start": "324479",
    "end": "329880"
  },
  {
    "text": "in and stuff like this and since last year since we started with um doing JavaScript in some",
    "start": "329880",
    "end": "338000"
  },
  {
    "text": "sense I want to have hot loading so this is I'm coming from from U backend",
    "start": "338000",
    "end": "344360"
  },
  {
    "text": "Enterprise s so this um where you always compile and then you hope things work and then you need an",
    "start": "344360",
    "end": "352280"
  },
  {
    "text": "hour to start the app and then look what happens and um after seeing hot hot",
    "start": "352280",
    "end": "358520"
  },
  {
    "text": "loading and how this work works and how fast you can um see feedback of your",
    "start": "358520",
    "end": "363960"
  },
  {
    "text": "changes uh yeah I changed everything in in our uh development pipeline so this",
    "start": "363960",
    "end": "370120"
  },
  {
    "text": "is uh one thing that you want to have and if you're web developer then you",
    "start": "370120",
    "end": "375720"
  },
  {
    "text": "basically always had this but um yeah we we hadn't haven't so hot loading in this case is",
    "start": "375720",
    "end": "384560"
  },
  {
    "text": "um the same in react native so on the left side I have a visel studio code editor",
    "start": "384560",
    "end": "390400"
  },
  {
    "text": "I am changing a bit of code um hitting save and then on the right side it",
    "start": "390400",
    "end": "396319"
  },
  {
    "text": "refreshes and um so this is what I want to have and especially for UI",
    "start": "396319",
    "end": "403720"
  },
  {
    "text": "development um yeah it's it's super",
    "start": "403720",
    "end": "409319"
  },
  {
    "text": "productive and you can see um syntax highlighting and autocomplete and all",
    "start": "409319",
    "end": "415360"
  },
  {
    "text": "all that stuff is working",
    "start": "415360",
    "end": "419159"
  },
  {
    "text": "yeah and the last point for me this um is maintainability um so",
    "start": "420440",
    "end": "427240"
  },
  {
    "text": "um I guess the first two points can be um fulfilled with",
    "start": "427240",
    "end": "433319"
  },
  {
    "text": "JavaScript but if you have a bigger app then at least for me it's um becoming a",
    "start": "433319",
    "end": "440000"
  },
  {
    "text": "problem so I want maintainability and this is not only from from a language standpoint from but from a complete",
    "start": "440000",
    "end": "447759"
  },
  {
    "text": "system standpoint I want to have a system system including a language that guides me into the right direction into",
    "start": "447759",
    "end": "455520"
  },
  {
    "text": "the pit of success and so that I have low bug rate and um yeah High mental",
    "start": "455520",
    "end": "462160"
  },
  {
    "text": "ability and I want something that is easy to debug this is very important for me especially in a situation where I'm",
    "start": "462160",
    "end": "469360"
  },
  {
    "text": "not right next to the person that is holding the device so this is a",
    "start": "469360",
    "end": "475639"
  },
  {
    "text": "situation that is really hard for me to go in Visual Studio and hit a break",
    "start": "475639",
    "end": "480759"
  },
  {
    "text": "point but I want to debug such situations and I as I said it it's not",
    "start": "480759",
    "end": "486960"
  },
  {
    "text": "necessarily uh debuging in the sense of line by line step by step going to",
    "start": "486960",
    "end": "492639"
  },
  {
    "text": "through the app but to understand what is the problem that the customer is having right",
    "start": "492639",
    "end": "499759"
  },
  {
    "text": "now and this is a question that you can ask yourself is the stack that you are using giving this to you",
    "start": "503520",
    "end": "511240"
  },
  {
    "text": "and um I hope that in the end um you believe me that this stack uh allows you to do this so um now",
    "start": "511240",
    "end": "521560"
  },
  {
    "text": "let's start a bit um with a small sample and this is um the talk is about uh app",
    "start": "521560",
    "end": "531839"
  },
  {
    "text": "development um but um for the samples I'm using web like internet web and this",
    "start": "531839",
    "end": "539079"
  },
  {
    "text": "is only only because it's much easier to show and um because I don't have to use the",
    "start": "539079",
    "end": "545000"
  },
  {
    "text": "emulator and in the end I will show you how easy is to go over from web development to app development on mobile",
    "start": "545000",
    "end": "553600"
  },
  {
    "text": "devices so this is a small counter example um a web page with two buttons",
    "start": "553600",
    "end": "562240"
  },
  {
    "text": "uh diff with the counter and um if you hit one of the buttons then the counter goes up or down and as you can see we",
    "start": "562240",
    "end": "571279"
  },
  {
    "text": "have a global variable this one and uh we can update the variable mutate the",
    "start": "571279",
    "end": "580000"
  },
  {
    "text": "variable and um we have update function the update function is looking for the",
    "start": "580000",
    "end": "585560"
  },
  {
    "text": "counter div and then directly manipulating the Dom so this",
    "start": "585560",
    "end": "591320"
  },
  {
    "text": "is um a sample which is using two mutations one of the uh Global variable",
    "start": "591320",
    "end": "598720"
  },
  {
    "text": "and even first one of the Dom so this is",
    "start": "598720",
    "end": "603959"
  },
  {
    "text": "um yeah something that is okay for such a small sample but if you want to go uh",
    "start": "603959",
    "end": "610360"
  },
  {
    "text": "bigger want to build a real world app um then this can be a problem um and one of",
    "start": "610360",
    "end": "616399"
  },
  {
    "text": "the problems is that this is not um modular so if I want to let's say just",
    "start": "616399",
    "end": "623240"
  },
  {
    "text": "add another counter then I can take this code and uh",
    "start": "623240",
    "end": "630360"
  },
  {
    "text": "use it as a as a module um I can copy the code but then I",
    "start": "630360",
    "end": "635959"
  },
  {
    "text": "have the problem with the um like the naming of the diffs and the naming of the global variable so I have to be very",
    "start": "635959",
    "end": "644240"
  },
  {
    "text": "careful in this um like counter string that I have to write one",
    "start": "644240",
    "end": "650000"
  },
  {
    "text": "and this can be a real problem so what can we",
    "start": "650000",
    "end": "655720"
  },
  {
    "text": "do and um here I want to tell you a bit about the model",
    "start": "656880",
    "end": "662600"
  },
  {
    "text": "view update architecture some people say it's the M architecture because Elm is a",
    "start": "662600",
    "end": "669120"
  },
  {
    "text": "language that only allows you to do model view update so they just said it's",
    "start": "669120",
    "end": "674880"
  },
  {
    "text": "the M architecture but it's fine and the idea is that you have a Model A View and",
    "start": "674880",
    "end": "680959"
  },
  {
    "text": "update and the model is your data uh a view is a function that",
    "start": "680959",
    "end": "687399"
  },
  {
    "text": "renders the data the ACT your actual model current model for instance to HTML Elm is like",
    "start": "687399",
    "end": "697040"
  },
  {
    "text": "for website so the view function is taking the model and is rendering HTML then you have the user or um some",
    "start": "697040",
    "end": "706600"
  },
  {
    "text": "other component that is interacting with your website and the user can click on a",
    "start": "706600",
    "end": "713800"
  },
  {
    "text": "button and whenever he or she clicks on a button then we will emit",
    "start": "713800",
    "end": "719880"
  },
  {
    "text": "a message we will not mutate any Global variable or local variable or something",
    "start": "719880",
    "end": "725399"
  },
  {
    "text": "like this we will just send messages into the system and we will have a in the background we will have a",
    "start": "725399",
    "end": "733800"
  },
  {
    "text": "um message a message cue that is waiting for messages and whenever it gets a new",
    "start": "733800",
    "end": "739800"
  },
  {
    "text": "message then we'll take the current model and the message will run it",
    "start": "739800",
    "end": "745760"
  },
  {
    "text": "through update function so we have uh message and model and it will get a new",
    "start": "745760",
    "end": "751800"
  },
  {
    "text": "model and the new model will be displayed with the view function to the user so you have this cycle and there's",
    "start": "751800",
    "end": "760480"
  },
  {
    "text": "no way back it's always forward this is very good property uh and we will see uh",
    "start": "760480",
    "end": "767680"
  },
  {
    "text": "later why so let's see how this could look in",
    "start": "767680",
    "end": "774639"
  },
  {
    "text": "model view update um for this I have fop code but the code is very simple so if you don't",
    "start": "774639",
    "end": "780720"
  },
  {
    "text": "know F I bet you can read this um so I",
    "start": "780720",
    "end": "785959"
  },
  {
    "text": "want to make it modular so I use the modu keyword and I'm done yeah um so this um model counter has a",
    "start": "785959",
    "end": "798839"
  },
  {
    "text": "um I have a model inside this module and this is um just an integer so I'm had an",
    "start": "798839",
    "end": "806560"
  },
  {
    "text": "integer before and I have an integer now Then I then I have messages in this case",
    "start": "806560",
    "end": "812680"
  },
  {
    "text": "I want to allow to increment and to decrement the counter so I have these",
    "start": "812680",
    "end": "818560"
  },
  {
    "text": "two uh messages and to get started I get the initial model and this just",
    "start": "818560",
    "end": "827079"
  },
  {
    "text": "zero then I have the view view function The View function is um taking a",
    "start": "827480",
    "end": "835079"
  },
  {
    "text": "model and rendering the model",
    "start": "835079",
    "end": "840199"
  },
  {
    "text": "um as you can see this is not HTML this is something different so we",
    "start": "840199",
    "end": "845240"
  },
  {
    "text": "don't have the the angle brackets but we have square brackets and this is just",
    "start": "845240",
    "end": "850399"
  },
  {
    "text": "because um this these are just um normal f f",
    "start": "850399",
    "end": "856560"
  },
  {
    "text": "function CES and these functions will the Fab compiler will transpile",
    "start": "856560",
    "end": "864360"
  },
  {
    "text": "these functions to JavaScript code and the JavaScript code will be rea",
    "start": "864360",
    "end": "869920"
  },
  {
    "text": "code so this is um basically um it looks like HTML but with different uh brackets",
    "start": "869920",
    "end": "879320"
  },
  {
    "text": "but um then in the end it will be HTML and we have both buttons and the",
    "start": "879320",
    "end": "886560"
  },
  {
    "text": "diff and inside the div we are um just printing the model which is an",
    "start": "886560",
    "end": "893120"
  },
  {
    "text": "integer and now the important part is that we our uh our onclick function s um",
    "start": "893120",
    "end": "900480"
  },
  {
    "text": "don't mutate any state um we don't have a global variable",
    "start": "900480",
    "end": "907000"
  },
  {
    "text": "we just send we just dispatch a message so if we click on the decrement button",
    "start": "907000",
    "end": "912600"
  },
  {
    "text": "then we will dispatch a decrement message and if we click on the increment button then we will dispatch an",
    "start": "912600",
    "end": "918360"
  },
  {
    "text": "increment message so no mutation happening",
    "start": "918360",
    "end": "924639"
  },
  {
    "text": "here and the last part is the update function the update function is taking a",
    "start": "926560",
    "end": "931959"
  },
  {
    "text": "message and a model and it's returning a model and it's super easy to implement right now for this part if the message",
    "start": "931959",
    "end": "939639"
  },
  {
    "text": "is increment then I return a new model new integer which is just the old integer plus one and is the If the",
    "start": "939639",
    "end": "947759"
  },
  {
    "text": "message is a decrement then I take uh in return a new integer there that is the",
    "start": "947759",
    "end": "953880"
  },
  {
    "text": "old integer minus one so this is um super easy to do",
    "start": "953880",
    "end": "960000"
  },
  {
    "text": "also here no uh mutation",
    "start": "960000",
    "end": "964440"
  },
  {
    "text": "happening if I have these parts the model The View and the update function",
    "start": "965959",
    "end": "971279"
  },
  {
    "text": "then I can stick them together and this is where the Amish Library comes into",
    "start": "971279",
    "end": "977759"
  },
  {
    "text": "play it's the first time that we're actually using the Amish library and the Elish library has a",
    "start": "977759",
    "end": "984839"
  },
  {
    "text": "function program do Mak simple and this function is taking init function update",
    "start": "984839",
    "end": "992120"
  },
  {
    "text": "function and view function and it's creating a program for you so this is just gluing things",
    "start": "992120",
    "end": "999639"
  },
  {
    "text": "together then I can say I want console tracing we will see it in a minute and I",
    "start": "999639",
    "end": "1005360"
  },
  {
    "text": "want uh the react renderer hooked into this and then I can start it and this is",
    "start": "1005360",
    "end": "1012959"
  },
  {
    "text": "all you need to uh create a basic Elish Fable website",
    "start": "1012959",
    "end": "1020839"
  },
  {
    "text": "I will show you a demo iones already showed you this one",
    "start": "1022600",
    "end": "1028000"
  },
  {
    "text": "but that's not uh not a problem um I have listed what you have to do that's",
    "start": "1028000",
    "end": "1033918"
  },
  {
    "text": "basically the same stuff that you will find in the readme file but",
    "start": "1033919",
    "end": "1039120"
  },
  {
    "text": "um we can use the net CLI to create the",
    "start": "1039120",
    "end": "1044678"
  },
  {
    "text": "new template and then um we have to call Yan to all the mpm packages we will call",
    "start": "1044679",
    "end": "1052400"
  },
  {
    "text": "um net restore which is using packet in the background um a packet five feature",
    "start": "1052400",
    "end": "1061280"
  },
  {
    "text": "actually in the background um to restore all the net dependencies because we are",
    "start": "1061280",
    "end": "1066760"
  },
  {
    "text": "living in a complicated World here and then we can uh start a project with net",
    "start": "1066760",
    "end": "1074960"
  },
  {
    "text": "Fable npm1 start easiest command line",
    "start": "1074960",
    "end": "1080520"
  },
  {
    "text": "that you will find okay so if I take a look at this",
    "start": "1080520",
    "end": "1089520"
  },
  {
    "text": "app then this is what AO showed you we have the counter at the top and um I can",
    "start": "1089520",
    "end": "1096520"
  },
  {
    "text": "go here and can send messages up and down and in",
    "start": "1096520",
    "end": "1104760"
  },
  {
    "text": "the background you will see",
    "start": "1104760",
    "end": "1110760"
  },
  {
    "text": "that um if I click a button then we see in the console that um something",
    "start": "1114640",
    "end": "1122039"
  },
  {
    "text": "happened and this is we will um we have the console Trace activated",
    "start": "1122039",
    "end": "1127960"
  },
  {
    "text": "and therefore we see the actual the current model and the message that was dis patched so this is whenever the",
    "start": "1127960",
    "end": "1135600"
  },
  {
    "text": "update function is running then we will see the Curve model and the uh and the",
    "start": "1135600",
    "end": "1142400"
  },
  {
    "text": "message that is dispatched and this is what I mean with I want something that is easy to",
    "start": "1142400",
    "end": "1148760"
  },
  {
    "text": "debug because if someone or the app if the app sends me its current",
    "start": "1148760",
    "end": "1156200"
  },
  {
    "text": "state the app model and the message then I can debug it on my machine because all",
    "start": "1156200",
    "end": "1163360"
  },
  {
    "text": "I have to do to do is and and the um the app model is serializable you can see",
    "start": "1163360",
    "end": "1168520"
  },
  {
    "text": "this because the the um it's just an Json object so I I just need to get the",
    "start": "1168520",
    "end": "1175919"
  },
  {
    "text": "the current state of of the application down to my machine and the current message that was sent and then I can",
    "start": "1175919",
    "end": "1182760"
  },
  {
    "text": "replay it on my my own device my own uh",
    "start": "1182760",
    "end": "1189640"
  },
  {
    "text": "PC and this is super important and makes it very easy I can",
    "start": "1189640",
    "end": "1196039"
  },
  {
    "text": "even use it to write in unit test so basically I want to unit test the update function with this I just take the",
    "start": "1196039",
    "end": "1203039"
  },
  {
    "text": "serialized um model uh put it into a file and write a unit test around it so",
    "start": "1203039",
    "end": "1208919"
  },
  {
    "text": "that thebug uh will be fixed",
    "start": "1208919",
    "end": "1213960"
  },
  {
    "text": "Forever This Is The Place okay next",
    "start": "1217919",
    "end": "1225360"
  },
  {
    "text": "step now I want to take the counter and use it as a module so I want to show you",
    "start": "1227640",
    "end": "1235440"
  },
  {
    "text": "that this is really modular and um for this I want to create a sample so not",
    "start": "1235440",
    "end": "1241880"
  },
  {
    "text": "only one counter but many counters I want to allow to add counters and to",
    "start": "1241880",
    "end": "1247240"
  },
  {
    "text": "remove counters um in the app so what can I do um I have a new model and this",
    "start": "1247240",
    "end": "1255080"
  },
  {
    "text": "time the model is a a list of counters a list of counter models and uh the message is I have a",
    "start": "1255080",
    "end": "1262880"
  },
  {
    "text": "insert and a remove message this is when when I want to create a new counter or remove one and I have a",
    "start": "1262880",
    "end": "1269840"
  },
  {
    "text": "message um called modify and this modify message is basically uh a wrapper around",
    "start": "1269840",
    "end": "1278679"
  },
  {
    "text": "a counter message so as you can see the counter list message type refers to the counter message type",
    "start": "1278679",
    "end": "1287120"
  },
  {
    "text": "and the int so it's a comination of counter message and an integer and the integer is basically the position in in",
    "start": "1287120",
    "end": "1294080"
  },
  {
    "text": "the list so I can say like the the second counter sent this",
    "start": "1294080",
    "end": "1301360"
  },
  {
    "text": "message and I have a init function and in this case the init function um just",
    "start": "1301360",
    "end": "1306840"
  },
  {
    "text": "calls the init function of the counter so and I create exactly one counter in",
    "start": "1306840",
    "end": "1312320"
  },
  {
    "text": "the beginning I could have started with zero counters but I want to have one at",
    "start": "1312320",
    "end": "1317440"
  },
  {
    "text": "the beginning as you can see here the type model so the the model of",
    "start": "1317440",
    "end": "1323799"
  },
  {
    "text": "the counter list is referring to the model of the counter the messages the counter list",
    "start": "1323799",
    "end": "1331799"
  },
  {
    "text": "message is referring to the counter message the init function is referring",
    "start": "1331799",
    "end": "1337240"
  },
  {
    "text": "to the init function of the counter so from the counter list always down to the",
    "start": "1337240",
    "end": "1342799"
  },
  {
    "text": "sub model let's take a look at the view um the interesting part in the beginning is",
    "start": "1342799",
    "end": "1349200"
  },
  {
    "text": "the the last lines we're creating a div and the div has um two buttons as we saw",
    "start": "1349200",
    "end": "1356000"
  },
  {
    "text": "before one for adding one for removing counters and then for every counter and this is like uh from line line six for",
    "start": "1356000",
    "end": "1364200"
  },
  {
    "text": "every counter um we are calling the The View function",
    "start": "1364200",
    "end": "1370360"
  },
  {
    "text": "of the counter itself so we so for the counter list we're count we're calling",
    "start": "1370360",
    "end": "1376400"
  },
  {
    "text": "the view function of the counter but for every counter and we have to do something line 11 which looks bit ugly",
    "start": "1376400",
    "end": "1385000"
  },
  {
    "text": "but this is this is to rep the the current position um of the counter",
    "start": "1385000",
    "end": "1392320"
  },
  {
    "text": "message so that we know which counter was sending the information and um to be honest if you",
    "start": "1392320",
    "end": "1401400"
  },
  {
    "text": "if you use this model and uh you will have the thing like um line line 11 you will have it",
    "start": "1401400",
    "end": "1409000"
  },
  {
    "text": "everywhere but after the second time I tell you you will do it always right",
    "start": "1409000",
    "end": "1414840"
  },
  {
    "text": "it's super easy in the beginning it looks a bit ugly but um it's super easy and the compiler will tell you if you if",
    "start": "1414840",
    "end": "1422200"
  },
  {
    "text": "you're using a wrong whatever in this position it will just scream at you so",
    "start": "1422200",
    "end": "1427600"
  },
  {
    "text": "there's no way to get it wrong so this is one of the uh nice as aspects of the",
    "start": "1427600",
    "end": "1432799"
  },
  {
    "text": "language in this case it's guiding me into the right direction so I can do the",
    "start": "1432799",
    "end": "1438720"
  },
  {
    "text": "correct thing here okay and the update function in",
    "start": "1438720",
    "end": "1444200"
  },
  {
    "text": "this case uh yeah if I want to have a new counter then I'm calling the init",
    "start": "1444200",
    "end": "1449799"
  },
  {
    "text": "function on the counter and then this is um concatination of of a list with an",
    "start": "1449799",
    "end": "1456919"
  },
  {
    "text": "element so I put the element on the front of the list the already existing list if I want to remove a",
    "start": "1456919",
    "end": "1465159"
  },
  {
    "text": "element then I um use pattern matching on on my list if",
    "start": "1465159",
    "end": "1471679"
  },
  {
    "text": "the list if the list is already empty then I return the empty list and if the",
    "start": "1471679",
    "end": "1476760"
  },
  {
    "text": "list is not empty then I can remove one element line",
    "start": "1476760",
    "end": "1482440"
  },
  {
    "text": "13 and the last part is if I get a message from one of the counters then I",
    "start": "1482440",
    "end": "1488240"
  },
  {
    "text": "can know the position because I I was saving the position and I know the",
    "start": "1488240",
    "end": "1494559"
  },
  {
    "text": "counter message and then I can just um go through all the counters and call the",
    "start": "1494559",
    "end": "1501320"
  },
  {
    "text": "update function of the counter itself with the message this is line 18 line 17",
    "start": "1501320",
    "end": "1508399"
  },
  {
    "text": "is like finding the correct position in the list and line 18 is",
    "start": "1508399",
    "end": "1514440"
  },
  {
    "text": "um I will just send the message down to the counter itself",
    "start": "1514440",
    "end": "1522080"
  },
  {
    "text": "and then again I Chang my my app a bit I'm no longer calling uh make simple",
    "start": "1522159",
    "end": "1529640"
  },
  {
    "text": "with counter in it counter update in counter list view but with count uh counter view but with counter list",
    "start": "1529640",
    "end": "1536279"
  },
  {
    "text": "counter list update and counter list view so one LEL level",
    "start": "1536279",
    "end": "1541559"
  },
  {
    "text": "up um I want to show this again the important part is",
    "start": "1545919",
    "end": "1553640"
  },
  {
    "text": "here again the model is using the sub model",
    "start": "1553640",
    "end": "1558799"
  },
  {
    "text": "the message is using the sub message the init is using the uh sub model",
    "start": "1558799",
    "end": "1565159"
  },
  {
    "text": "init um the view is calling the sub model",
    "start": "1565159",
    "end": "1571559"
  },
  {
    "text": "view and the the update function is of course calling Lines line 18 the uh",
    "start": "1571559",
    "end": "1580200"
  },
  {
    "text": "update function of the of the counter itself so I have perfectly matched these",
    "start": "1580200",
    "end": "1586440"
  },
  {
    "text": "um three points um and now I have a counter list module",
    "start": "1586440",
    "end": "1591720"
  },
  {
    "text": "that exposes the model The View function and the update function and it can take the counter",
    "start": "1591720",
    "end": "1597919"
  },
  {
    "text": "list model and put it in something larger so this is perfectly modular it",
    "start": "1597919",
    "end": "1604120"
  },
  {
    "text": "really is okay I want to show",
    "start": "1604120",
    "end": "1611799"
  },
  {
    "text": "you always doing the wrong click so we have to count the list",
    "start": "1612159",
    "end": "1619640"
  },
  {
    "text": "sample adding removing sending individual me messages",
    "start": "1619640",
    "end": "1626919"
  },
  {
    "text": "and you can see in the JavaScript um that we have always the messages and we",
    "start": "1626919",
    "end": "1632760"
  },
  {
    "text": "have the model and uh we can debug this we can also use",
    "start": "1632760",
    "end": "1638919"
  },
  {
    "text": "the uh the Redux debugger to do time",
    "start": "1638919",
    "end": "1644559"
  },
  {
    "text": "traveling like I said if someone sends me the current APP State and a message",
    "start": "1644559",
    "end": "1651080"
  },
  {
    "text": "then I can replay it on my machine for debugging purposes and this is what redu",
    "start": "1651080",
    "end": "1657279"
  },
  {
    "text": "does it just allows you to to go back in",
    "start": "1657279",
    "end": "1662480"
  },
  {
    "text": "time so to um to do",
    "start": "1662480",
    "end": "1667919"
  },
  {
    "text": "something uh let's go like to do",
    "start": "1667919",
    "end": "1675240"
  },
  {
    "text": "this as you can see in the background the um I was going back in time so and I",
    "start": "1675240",
    "end": "1680360"
  },
  {
    "text": "can replay stuff I can see how the model changed between um like before the",
    "start": "1680360",
    "end": "1686039"
  },
  {
    "text": "update and after the update um so I can can do this um on my app and with the",
    "start": "1686039",
    "end": "1692399"
  },
  {
    "text": "Redux tools this is really nice",
    "start": "1692399",
    "end": "1697278"
  },
  {
    "text": "property okay so this is what I said modularity",
    "start": "1701440",
    "end": "1707399"
  },
  {
    "text": "model uses model view calls view update calls update function and this is what",
    "start": "1707399",
    "end": "1712840"
  },
  {
    "text": "what really um is all about this model view update uh",
    "start": "1712840",
    "end": "1720840"
  },
  {
    "text": "architecture this what I showed you and um so next point is um I want to",
    "start": "1721240",
    "end": "1730039"
  },
  {
    "text": "talk a bit about the rendering process so I I showed you the um like the F",
    "start": "1730039",
    "end": "1735320"
  },
  {
    "text": "functions div and then you can say uh uh put things into the diff and and so on",
    "start": "1735320",
    "end": "1741880"
  },
  {
    "text": "and it will create huge tree of of elements and then something has to",
    "start": "1741880",
    "end": "1749200"
  },
  {
    "text": "render this into HTML so you could um",
    "start": "1749200",
    "end": "1754440"
  },
  {
    "text": "yes write the library that will manipulate the Dom to render the stuff",
    "start": "1754440",
    "end": "1760440"
  },
  {
    "text": "and this is what Facebook do it did with react but um if you do it directly then",
    "start": "1760440",
    "end": "1768440"
  },
  {
    "text": "it will be super slow D manipulations are extremely slow so they created a",
    "start": "1768440",
    "end": "1775919"
  },
  {
    "text": "virtual Dom and the virtual Dom is just like another layer um of immutable um objects",
    "start": "1775919",
    "end": "1783840"
  },
  {
    "text": "between my already immutable model and the Dom and when whenever I create a",
    "start": "1783840",
    "end": "1791760"
  },
  {
    "text": "react view with my nice F functions um I created from scratch so this is",
    "start": "1791760",
    "end": "1799120"
  },
  {
    "text": "actually pretty fast no problem here um every time the app is displayed or",
    "start": "1799120",
    "end": "1806080"
  },
  {
    "text": "message comes in it will all be recomputed there are ways to optimize",
    "start": "1806080",
    "end": "1812159"
  },
  {
    "text": "this and we already have function in Elish that allows you to like shortcut",
    "start": "1812159",
    "end": "1817279"
  },
  {
    "text": "if the model didn't change then you don't have to reender um stuff like this but um for my app it wasn't needed",
    "start": "1817279",
    "end": "1824480"
  },
  {
    "text": "because it was already fast enough um um because uh react is doing something",
    "start": "1824480",
    "end": "1833559"
  },
  {
    "text": "interesting and it's not recreating the complete Dom it's just diffing um the",
    "start": "1833559",
    "end": "1839760"
  },
  {
    "text": "virtual Dom um so the current virtual Dom and the last virtu Dom um and the diff will",
    "start": "1839760",
    "end": "1846679"
  },
  {
    "text": "be applied as a real Dom change and this is super fast actually um there are",
    "start": "1846679",
    "end": "1852559"
  },
  {
    "text": "benchmarks that show that most in most situation this is faster like doing it",
    "start": "1852559",
    "end": "1857679"
  },
  {
    "text": "man so this because the the diffing is super easy and then um like not every you",
    "start": "1857679",
    "end": "1865600"
  },
  {
    "text": "don't have to diff the complete tree because it's immutable so if you find a node that is the same like not the not",
    "start": "1865600",
    "end": "1874639"
  },
  {
    "text": "uh the same object but um equal then you don't have to um look down in the tree",
    "start": "1874639",
    "end": "1881760"
  },
  {
    "text": "because it can't change and so this is super fast",
    "start": "1881760",
    "end": "1889000"
  },
  {
    "text": "okay and now the last point to get um get you over to react native and react",
    "start": "1889559",
    "end": "1894600"
  },
  {
    "text": "native is basically exactly the same idea but on mobile devices and for this",
    "start": "1894600",
    "end": "1900919"
  },
  {
    "text": "um we don't use HTML because we want to use the native components on the machine",
    "start": "1900919",
    "end": "1906399"
  },
  {
    "text": "on the on the device and so you um at the top you see like HTML a diff and",
    "start": "1906399",
    "end": "1915840"
  },
  {
    "text": "high and uh at the bottom you have um a control called View and this is",
    "start": "1915840",
    "end": "1924000"
  },
  {
    "text": "something that the uh the device is giving you there is one view on Android",
    "start": "1924000",
    "end": "1930760"
  },
  {
    "text": "and one view on iOS and react native will uh call the right one depending on",
    "start": "1930760",
    "end": "1937080"
  },
  {
    "text": "which machine you are um it's also having a bridge so um like on",
    "start": "1937080",
    "end": "1945320"
  },
  {
    "text": "Android you have two one is the native thread this is uh in",
    "start": "1945320",
    "end": "1952600"
  },
  {
    "text": "Java and one is the JavaScript thread that is like our Elish application",
    "start": "1952600",
    "end": "1958360"
  },
  {
    "text": "running and instructing the the JavaScript the Java thread so if you uh",
    "start": "1958360",
    "end": "1964600"
  },
  {
    "text": "cloning a react native project then you will always get like folders for Java folders for um Objective C for iOS so",
    "start": "1964600",
    "end": "1973840"
  },
  {
    "text": "this is um your your application will be compiled to Java",
    "start": "1973840",
    "end": "1979080"
  },
  {
    "text": "and it will run a note process and the note process will run your JavaScript inside your application to control the",
    "start": "1979080",
    "end": "1986000"
  },
  {
    "text": "native components but this is sounds like a lot of magic but",
    "start": "1986000",
    "end": "1993159"
  },
  {
    "text": "actually works pretty well and um it and it's super fast and I",
    "start": "1993159",
    "end": "2000000"
  },
  {
    "text": "couldn't believe it before but it's uh it's true and",
    "start": "2000000",
    "end": "2005840"
  },
  {
    "text": "um yeah this is how it works",
    "start": "2006080",
    "end": "2012120"
  },
  {
    "text": "so um I showed you the left side like the um how how does Amish work",
    "start": "2015919",
    "end": "2023559"
  },
  {
    "text": "how will regenerate a view um what is an update function what is a model and so",
    "start": "2023559",
    "end": "2028840"
  },
  {
    "text": "on and now I want to go to the right side and just go to our um reproduction",
    "start": "2028840",
    "end": "2035919"
  },
  {
    "text": "app and uh I hope my boss will not kill",
    "start": "2035919",
    "end": "2042960"
  },
  {
    "text": "me uh but I don't won't show show you uh domain code this is like uh only the",
    "start": "2042960",
    "end": "2049520"
  },
  {
    "text": "code for react native and Elish so this is I hope it's a safe",
    "start": "2049520",
    "end": "2055480"
  },
  {
    "text": "place so uh first point so this is the application that is um actually checked",
    "start": "2055480",
    "end": "2061440"
  },
  {
    "text": "out to this morning so this is real real code um I have lots and lots of fop",
    "start": "2061440",
    "end": "2069679"
  },
  {
    "text": "fights in here and this is Vis Studio code and um with ionite plugin and all",
    "start": "2069679",
    "end": "2074839"
  },
  {
    "text": "the nice features of ironate are working here and um",
    "start": "2074839",
    "end": "2081520"
  },
  {
    "text": "the the most important point is that the",
    "start": "2081520",
    "end": "2088000"
  },
  {
    "text": "mod view architecture you will find it in every file every file is structured",
    "start": "2088000",
    "end": "2093280"
  },
  {
    "text": "the same and um the whole app is in mod view update so there's no way out um so",
    "start": "2093280",
    "end": "2100440"
  },
  {
    "text": "if you if you open any file here you will always find a",
    "start": "2100440",
    "end": "2105760"
  },
  {
    "text": "model update function and",
    "start": "2105760",
    "end": "2110960"
  },
  {
    "text": "uh at the bottom you will find where does it start a view function",
    "start": "2110960",
    "end": "2119720"
  },
  {
    "text": "and the the difference to the counter and counter list is that these functions are huge in some situations um the",
    "start": "2119720",
    "end": "2128599"
  },
  {
    "text": "current file is for like the the complete scene of a meter change this is",
    "start": "2128599",
    "end": "2134440"
  },
  {
    "text": "where where we can read the old meter select a new meter um get the signature",
    "start": "2134440",
    "end": "2140839"
  },
  {
    "text": "and stuff basically the or orchestration of this like the reading the old meter",
    "start": "2140839",
    "end": "2146839"
  },
  {
    "text": "is a sub page so in model view update reading the new meter is a sub page in",
    "start": "2146839",
    "end": "2152520"
  },
  {
    "text": "model view update and a signature is a sub page in mod view update but this is orchestration of PL of these uh",
    "start": "2152520",
    "end": "2159880"
  },
  {
    "text": "components putting everything together also um we can take pictures of the",
    "start": "2159880",
    "end": "2166720"
  },
  {
    "text": "situation um and of the meters and so on so this is a lot of stuff happening here",
    "start": "2166720",
    "end": "2174400"
  },
  {
    "text": "that's why it's so big um you will always find a message type",
    "start": "2174400",
    "end": "2183400"
  },
  {
    "text": "in these files um and at the top you see like old meter message and signature",
    "start": "2183400",
    "end": "2190240"
  },
  {
    "text": "message and stuff like this this is to rep the messages of the sub",
    "start": "2190240",
    "end": "2195839"
  },
  {
    "text": "components we don't have like one counter as a subcomponent but many",
    "start": "2195839",
    "end": "2203119"
  },
  {
    "text": "different uh sub controls on on the page",
    "start": "2203119",
    "end": "2208920"
  },
  {
    "text": "um then you have stuff like refresh go back which is for um to handle events",
    "start": "2208920",
    "end": "2215319"
  },
  {
    "text": "when when navigation happens and um yeah I can can say stuff like",
    "start": "2215319",
    "end": "2222440"
  },
  {
    "text": "show pictures um then in new Scene goes goes up where the picture selection and",
    "start": "2222440",
    "end": "2229560"
  },
  {
    "text": "Camera stuff is happening so this is uh all the stuff that can happen on this",
    "start": "2229560",
    "end": "2235520"
  },
  {
    "text": "side in this component and then we always have like",
    "start": "2235520",
    "end": "2240720"
  },
  {
    "text": "um model type and the model type often has information um about the domain like",
    "start": "2240720",
    "end": "2248920"
  },
  {
    "text": "this is my real domain type line 54 and I have domain code that",
    "start": "2248920",
    "end": "2258079"
  },
  {
    "text": "can do stuff um with such a domain",
    "start": "2258079",
    "end": "2263920"
  },
  {
    "text": "model and then I have like um more properties for just for UI this is",
    "start": "2263920",
    "end": "2271000"
  },
  {
    "text": "nothing which is really domain uh logic but um I need to know um on which sub",
    "start": "2271000",
    "end": "2278400"
  },
  {
    "text": "page we are currently and I need to know if the stuff is editable or not uh this",
    "start": "2278400",
    "end": "2285280"
  },
  {
    "text": "is cached from the uh domain model but um just to to allow it easier in the",
    "start": "2285280",
    "end": "2291720"
  },
  {
    "text": "view to um to do stuff because the view itself The View function only gets this",
    "start": "2291720",
    "end": "2298599"
  },
  {
    "text": "model it's not allowed to like look up stuff some somewhere else yeah so I",
    "start": "2298599",
    "end": "2304640"
  },
  {
    "text": "everything that I want to display in the view has to go there it's important because",
    "start": "2304640",
    "end": "2312200"
  },
  {
    "text": "rendering uh depends on this uh information I cannot shortcut like the",
    "start": "2312200",
    "end": "2317599"
  },
  {
    "text": "The View function because um when I have to do like a lookup there's no State",
    "start": "2317599",
    "end": "2323960"
  },
  {
    "text": "going on anymore so all the stuff has to go there and then the update",
    "start": "2323960",
    "end": "2331880"
  },
  {
    "text": "function here I I already showed you that this is big",
    "start": "2331880",
    "end": "2338839"
  },
  {
    "text": "um but it's not complicated and",
    "start": "2338839",
    "end": "2345440"
  },
  {
    "text": "uh one important difference to the stuff that I showed on the slide is that in in",
    "start": "2345440",
    "end": "2351200"
  },
  {
    "text": "real samples you you often will find update function with slightly different",
    "start": "2351200",
    "end": "2357400"
  },
  {
    "text": "signature and here I get a message and a model and I'm returning a model and a",
    "start": "2357400",
    "end": "2364839"
  },
  {
    "text": "new command if I want so not only a new model but I can create new messages",
    "start": "2364839",
    "end": "2370800"
  },
  {
    "text": "basically I can do stuff after the update function so that's why we uh we",
    "start": "2370800",
    "end": "2377880"
  },
  {
    "text": "will create model and commands um sometimes we don't change the model and",
    "start": "2377880",
    "end": "2383200"
  },
  {
    "text": "just send new commands sometimes we will change the model and send no commands",
    "start": "2383200",
    "end": "2388400"
  },
  {
    "text": "and um sometimes we do both and um interesting here let's take",
    "start": "2388400",
    "end": "2395240"
  },
  {
    "text": "a look at this message save and go back this is if um if someone clicks the save",
    "start": "2395240",
    "end": "2404000"
  },
  {
    "text": "checkbox on the top um and then stuff has to happen um if we are not allowed",
    "start": "2404000",
    "end": "2411280"
  },
  {
    "text": "to edit the page [Music] um then we we return the same",
    "start": "2411280",
    "end": "2419680"
  },
  {
    "text": "model but we send a new message and the new message is the go back message so",
    "start": "2419680",
    "end": "2425119"
  },
  {
    "text": "every time someone leaves from this scene a go back message will be sent and",
    "start": "2425119",
    "end": "2431040"
  },
  {
    "text": "in this case um I cannot save but I just go back and in the other case when I'm",
    "start": "2431040",
    "end": "2437480"
  },
  {
    "text": "allowed to save then I'm still returning the same model and this one is",
    "start": "2437480",
    "end": "2443400"
  },
  {
    "text": "interesting here um I return a new command and this command is a",
    "start": "2443400",
    "end": "2449599"
  },
  {
    "text": "promise uh we on JavaScript so promises um are made and sometimes they",
    "start": "2449599",
    "end": "2456680"
  },
  {
    "text": "are kept and if the permise is",
    "start": "2456680",
    "end": "2463520"
  },
  {
    "text": "kept then we will send another message and this is go back and update caches",
    "start": "2463520",
    "end": "2469800"
  },
  {
    "text": "whatever it will do but if the com the promise succeeds and finishes and",
    "start": "2469800",
    "end": "2475000"
  },
  {
    "text": "succeeds then it will go to go back and update caches no it will not go there but it will send a message and if the",
    "start": "2475000",
    "end": "2483079"
  },
  {
    "text": "promise um runs into an exception then the exception will be catched and a",
    "start": "2483079",
    "end": "2490680"
  },
  {
    "text": "message will be sent that is error and exception interesting part here",
    "start": "2490680",
    "end": "2498640"
  },
  {
    "text": "is that I that I don't start the promise this is basically just sending a",
    "start": "2498880",
    "end": "2506680"
  },
  {
    "text": "command into the message pipeline dear message pipeline whenever you are ready please execute this",
    "start": "2506680",
    "end": "2514000"
  },
  {
    "text": "promise update request with the parameter please do this and then if the promise",
    "start": "2514000",
    "end": "2521839"
  },
  {
    "text": "succeeds send one message if the promise fails send another message there's no",
    "start": "2521839",
    "end": "2529040"
  },
  {
    "text": "ating that I do myself here in the whole app I don't write any aate or or stuff",
    "start": "2529040",
    "end": "2535800"
  },
  {
    "text": "like this this is all done by the message box and there's no try catch happening",
    "start": "2535800",
    "end": "2542240"
  },
  {
    "text": "it's just sending messages and all the stuff is done by the message box the same here at the",
    "start": "2542240",
    "end": "2548760"
  },
  {
    "text": "Top This is a ordinary function call there is a",
    "start": "2548760",
    "end": "2554400"
  },
  {
    "text": "function that's called set page and I can give it a page number and then some",
    "start": "2554400",
    "end": "2561079"
  },
  {
    "text": "UI stuff happens so it goes from like old meter sub page to new meter sub page",
    "start": "2561079",
    "end": "2568680"
  },
  {
    "text": "and this can succeed then page is selected or it can fail then we will",
    "start": "2568680",
    "end": "2575400"
  },
  {
    "text": "send the error message no try catch happening here I don't",
    "start": "2575400",
    "end": "2580680"
  },
  {
    "text": "write try catch anymore",
    "start": "2580680",
    "end": "2585640"
  },
  {
    "text": "okay another Point not all messages are handled in this sub page on on the same",
    "start": "2599000",
    "end": "2605520"
  },
  {
    "text": "level sometimes I have messages that are just signals for a level",
    "start": "2605520",
    "end": "2611559"
  },
  {
    "text": "up so um these messages um are handled on a different",
    "start": "2611559",
    "end": "2617720"
  },
  {
    "text": "level so they just return model and no command this is um like do nothing no op",
    "start": "2617720",
    "end": "2626640"
  },
  {
    "text": "but um I want to Signal something to the to the upper levels and I will always",
    "start": "2626640",
    "end": "2632400"
  },
  {
    "text": "find um this information in a on a different level",
    "start": "2632400",
    "end": "2639040"
  },
  {
    "text": "uh me see this one",
    "start": "2639400",
    "end": "2646480"
  },
  {
    "text": "no it's going oh something something doesn't",
    "start": "2650760",
    "end": "2658440"
  },
  {
    "text": "compile here",
    "start": "2658440",
    "end": "2664040"
  },
  {
    "text": "uh oh that's that's why",
    "start": "2664040",
    "end": "2669040"
  },
  {
    "text": "yes um this is the uh one level up this is the complete application and the update function of the complete",
    "start": "2673400",
    "end": "2679640"
  },
  {
    "text": "application um the application update function once and it detects pattern",
    "start": "2679640",
    "end": "2686160"
  },
  {
    "text": "matching detect ah this is a meter change message okay this is the right place to",
    "start": "2686160",
    "end": "2692040"
  },
  {
    "text": "go in in the uh update function now we're checking the sub model of the application",
    "start": "2692040",
    "end": "2697880"
  },
  {
    "text": "are we actually on a on a meter change sub page if we are on the on the sub",
    "start": "2697880",
    "end": "2704520"
  },
  {
    "text": "page that is corresponding to the message then we go uh to line uh 301 now",
    "start": "2704520",
    "end": "2712000"
  },
  {
    "text": "we can patter match up on the sub message and if the sub message is a go",
    "start": "2712000",
    "end": "2717040"
  },
  {
    "text": "back message like we had uh the other place then we send a new command and",
    "start": "2717040",
    "end": "2723119"
  },
  {
    "text": "this is navigate back and and the navigate back is now one level up so",
    "start": "2723119",
    "end": "2730000"
  },
  {
    "text": "this is an application wide message from the sub page I was",
    "start": "2730000",
    "end": "2735079"
  },
  {
    "text": "signaling I want to go back and on the application Level I intercept this",
    "start": "2735079",
    "end": "2742400"
  },
  {
    "text": "message and I'm signaling to the application go back and now something in the",
    "start": "2742400",
    "end": "2748839"
  },
  {
    "text": "application has to happen and you will find um a pattern match case for",
    "start": "2748839",
    "end": "2755319"
  },
  {
    "text": "this uh somewh here this is the case um application",
    "start": "2755319",
    "end": "2763319"
  },
  {
    "text": "wide something has to happen um and here you see what we do um and the",
    "start": "2763319",
    "end": "2770880"
  },
  {
    "text": "interesting interesting thing is that we uh we maintain a navigation stack in the",
    "start": "2770880",
    "end": "2777920"
  },
  {
    "text": "application whenever I go to a new sub page then I'm changing the application model to register this new page entry",
    "start": "2777920",
    "end": "2786559"
  },
  {
    "text": "because when I want to go back I want to go to the last page and to the last page and to the last page this is a stack",
    "start": "2786559",
    "end": "2792680"
  },
  {
    "text": "that I maintain in my app model and I can pattern match on the stack and just go back and if it's the",
    "start": "2792680",
    "end": "2800160"
  },
  {
    "text": "uh if the stack is empty then I exit from the app signal",
    "start": "2800160",
    "end": "2807920"
  },
  {
    "text": "exit app of message yeah and then I will find probably",
    "start": "2807920",
    "end": "2815200"
  },
  {
    "text": "uh something with is handling exit app messages and in this case um we just",
    "start": "2815200",
    "end": "2822640"
  },
  {
    "text": "call react native function to kill",
    "start": "2822640",
    "end": "2827920"
  },
  {
    "text": "it okay so this is",
    "start": "2827920",
    "end": "2833200"
  },
  {
    "text": "um this is a way to still maintain modularity because the the Su level is",
    "start": "2833559",
    "end": "2840119"
  },
  {
    "text": "not knowing about the application uh wide messages the first in my first approach",
    "start": "2840119",
    "end": "2848119"
  },
  {
    "text": "I was um having like a global message type and in all the sub models I was",
    "start": "2848119",
    "end": "2855359"
  },
  {
    "text": "referring to the global message type but this is breaking modularity it was at",
    "start": "2855359",
    "end": "2861040"
  },
  {
    "text": "the beginning easier but this breaking modularity and this one is is actually much better um in",
    "start": "2861040",
    "end": "2869400"
  },
  {
    "text": "practice okay another important Point compiler is your friend and we have a compiler because we are in an FOP world",
    "start": "2871359",
    "end": "2879400"
  },
  {
    "text": "so if you do something like this you forget to implement a",
    "start": "2879400",
    "end": "2885520"
  },
  {
    "text": "case",
    "start": "2885520",
    "end": "2888520"
  },
  {
    "text": "then then the compiler is giving you a warning and if you activate warning as",
    "start": "2890960",
    "end": "2896200"
  },
  {
    "text": "errors then it will actually uh not compile and in this case I forgot to",
    "start": "2896200",
    "end": "2901760"
  },
  {
    "text": "implement the the refresh message and therefore um it tells me please please",
    "start": "2901760",
    "end": "2907280"
  },
  {
    "text": "do this please implement this message so you can't forget cases and this is",
    "start": "2907280",
    "end": "2914000"
  },
  {
    "text": "important um next Point",
    "start": "2914000",
    "end": "2920920"
  },
  {
    "text": "um in the react sample so for web you always have the",
    "start": "2920920",
    "end": "2926160"
  },
  {
    "text": "uh you're always allowed to use CSS but for a react native we don't have",
    "start": "2926160",
    "end": "2932960"
  },
  {
    "text": "CSS so um if you want to have different",
    "start": "2932960",
    "end": "2938040"
  },
  {
    "text": "look and feel then it's bit more complicated and you have to do your own stuff um for us um we have like for the",
    "start": "2938040",
    "end": "2945079"
  },
  {
    "text": "energy customers we have the red uh seaming and for our water",
    "start": "2945079",
    "end": "2950720"
  },
  {
    "text": "companies we have blue seaming this is Corporate identity uh so this has to do uh we have",
    "start": "2950720",
    "end": "2957880"
  },
  {
    "text": "to do this here so every time um we will maintain the C ID the C",
    "start": "2957880",
    "end": "2964000"
  },
  {
    "text": "ID will be uh like uh dispatched into all levels of the application in the",
    "start": "2964000",
    "end": "2970359"
  },
  {
    "text": "view function so the C ID is like make it red or make it blue and then below at",
    "start": "2970359",
    "end": "2976240"
  },
  {
    "text": "the lowest level um we will pattern match on the seam ID and whatever color you just want to display like if you",
    "start": "2976240",
    "end": "2983880"
  },
  {
    "text": "want text box color then we pattern match on the on the CID and then in one",
    "start": "2983880",
    "end": "2989559"
  },
  {
    "text": "case we will give you blue and the other red or something like this so this is um",
    "start": "2989559",
    "end": "2995799"
  },
  {
    "text": "actually not not complicated and I I think it's even better at least if you",
    "start": "2995799",
    "end": "3002000"
  },
  {
    "text": "are not a designer designers have their own ideas but uh if you're like me then",
    "start": "3002000",
    "end": "3007720"
  },
  {
    "text": "this is actually good",
    "start": "3007720",
    "end": "3012640"
  },
  {
    "text": "uh then in this case you can see we have a control Android",
    "start": "3013280",
    "end": "3019040"
  },
  {
    "text": "toolbar this is suffixed with Android this means this control will only work",
    "start": "3019040",
    "end": "3025920"
  },
  {
    "text": "on Android device deves so there is no toolbar controll on",
    "start": "3025920",
    "end": "3032000"
  },
  {
    "text": "iOS so this would only work on on one platform and you have the opposite like",
    "start": "3032000",
    "end": "3037440"
  },
  {
    "text": "I don't know but controls that are only working on iOS and not on Android and um",
    "start": "3037440",
    "end": "3043559"
  },
  {
    "text": "actually the react native guys are implementing more and more um rappers",
    "start": "3043559",
    "end": "3048799"
  },
  {
    "text": "around this so that's you um these like suffixes uh go away with time but",
    "start": "3048799",
    "end": "3055079"
  },
  {
    "text": "sometimes you have situations like like this and then you have to like compiler um let your compiler uh",
    "start": "3055079",
    "end": "3062760"
  },
  {
    "text": "implement this for uh for Android and this for iOS so then you have to",
    "start": "3062760",
    "end": "3068799"
  },
  {
    "text": "like work around the",
    "start": "3068799",
    "end": "3072640"
  },
  {
    "text": "situations okay then not so that I don't scare you too much uh often the",
    "start": "3075359",
    "end": "3082040"
  },
  {
    "text": "situation is much simpler and you you have like a model with two properties",
    "start": "3082040",
    "end": "3087200"
  },
  {
    "text": "and update function that is basic basically doing nothing uh refresh",
    "start": "3087200",
    "end": "3092400"
  },
  {
    "text": "message that is um just there to refresh and uh a view function that is",
    "start": "3092400",
    "end": "3098680"
  },
  {
    "text": "basically um just displaying to um the two properties and styling the stuff so",
    "start": "3098680",
    "end": "3106440"
  },
  {
    "text": "this is um to display name and address and since we are using name and address",
    "start": "3106440",
    "end": "3111839"
  },
  {
    "text": "everywhere like in many many places it's good to have it extracted as a model",
    "start": "3111839",
    "end": "3118240"
  },
  {
    "text": "view update subcomponent so this is uh this huge pattern matching and huge View",
    "start": "3118240",
    "end": "3124680"
  },
  {
    "text": "and stuff like this is not always the case this is basically only for orchestration and um the sub views are",
    "start": "3124680",
    "end": "3131040"
  },
  {
    "text": "much nicer and",
    "start": "3131040",
    "end": "3134200"
  },
  {
    "text": "simpler um then if you want to add menu information like uh we saw it on the web",
    "start": "3137520",
    "end": "3143920"
  },
  {
    "text": "page on the left side and for the uh for the app we have a menu draw that is coming from the left um then this is",
    "start": "3143920",
    "end": "3152640"
  },
  {
    "text": "actually working exactly the same somewhere in the update you will have a model for the menu somewhere in the",
    "start": "3152640",
    "end": "3158920"
  },
  {
    "text": "update function you will dispatch the update to the menu update to like uh do",
    "start": "3158920",
    "end": "3164319"
  },
  {
    "text": "the right thing then you will intercept some of the messages on the application Level like",
    "start": "3164319",
    "end": "3170520"
  },
  {
    "text": "show history then you intercept this message from from the menu and um so",
    "start": "3170520",
    "end": "3176640"
  },
  {
    "text": "there's no difference here it's exactly the same and uh in the view it will look",
    "start": "3176640",
    "end": "3184599"
  },
  {
    "text": "exactly the same then um this is on the application side everything is bound together in one",
    "start": "3184599",
    "end": "3191799"
  },
  {
    "text": "huge model so we will always have",
    "start": "3191799",
    "end": "3197480"
  },
  {
    "text": "um like application wide messages and this is",
    "start": "3199960",
    "end": "3207240"
  },
  {
    "text": "the app model and this is everything that is in in your app one model tool",
    "start": "3207240",
    "end": "3214280"
  },
  {
    "text": "them all um we have the navigation stack we have a c ID uh we have a navigation",
    "start": "3214280",
    "end": "3221319"
  },
  {
    "text": "direction because we sometimes do different things if we count if like I'm going in and then I say go back then",
    "start": "3221319",
    "end": "3229040"
  },
  {
    "text": "sometimes it skips stuff so I want to know where I was coming from from inside",
    "start": "3229040",
    "end": "3235240"
  },
  {
    "text": "or outside and and then um yeah then the sub model property is",
    "start": "3235240",
    "end": "3241480"
  },
  {
    "text": "probably most important because this is the holding information for the sub pages that that I'm just right not doing",
    "start": "3241480",
    "end": "3248240"
  },
  {
    "text": "and if you give me like an object of the app model and a message then I can recreate or if you give me an object of",
    "start": "3248240",
    "end": "3255400"
  },
  {
    "text": "app model and I can recreate the App State at the disposition so this is all you have in there's no not at all no",
    "start": "3255400",
    "end": "3263319"
  },
  {
    "text": "Global State I just need one object of this no variables or stuff like",
    "start": "3263319",
    "end": "3271200"
  },
  {
    "text": "this okay okay then um on the up app level I",
    "start": "3271200",
    "end": "3278480"
  },
  {
    "text": "have another large um update function but it's not complicated I can",
    "start": "3278480",
    "end": "3285559"
  },
  {
    "text": "always like this is most complicated case that it can get like couple of",
    "start": "3285559",
    "end": "3291480"
  },
  {
    "text": "lines and it's always pattern matching on the message pattern matching on the model and then it just",
    "start": "3291480",
    "end": "3297960"
  },
  {
    "text": "um sending stuff down to the correct um sub model this is not",
    "start": "3297960",
    "end": "3304559"
  },
  {
    "text": "complicated um and if the sub model is sending messages back then it can intercept and do different stuff on it",
    "start": "3304559",
    "end": "3311760"
  },
  {
    "text": "it's it's to be honest it's pretty",
    "start": "3311760",
    "end": "3316720"
  },
  {
    "text": "boring it just it's always the",
    "start": "3318240",
    "end": "3323319"
  },
  {
    "text": "same okay so there's number",
    "start": "3324440",
    "end": "3329559"
  },
  {
    "text": "12 uh of course I have one big view function this is like the application",
    "start": "3329559",
    "end": "3335039"
  },
  {
    "text": "view function um it's getting app model and then depending on the subm model I'm",
    "start": "3335039",
    "end": "3342839"
  },
  {
    "text": "dispatching to the sub views this is boring and if I forget something",
    "start": "3342839",
    "end": "3353280"
  },
  {
    "text": "here then um I get the information so I can't get it wrong because then the",
    "start": "3353559",
    "end": "3360359"
  },
  {
    "text": "comp compiler complains to me and I have to implement this um basically whenever I add",
    "start": "3360359",
    "end": "3367720"
  },
  {
    "text": "something a new model then I'm just adding it in one place and then compiler goes crazy here here here here here are",
    "start": "3367720",
    "end": "3375880"
  },
  {
    "text": "the places to implement so this is um easy and the last line here is um adding",
    "start": "3375880",
    "end": "3381760"
  },
  {
    "text": "the wrapping the menu around the sub page so I can take the the view from the",
    "start": "3381760",
    "end": "3389240"
  },
  {
    "text": "from the sub page adding um a menu around it um and of course I have like the",
    "start": "3389240",
    "end": "3397039"
  },
  {
    "text": "application entry point um the amage function that is taking app in it app",
    "start": "3397039",
    "end": "3402160"
  },
  {
    "text": "update and app View and then this line uh here we have for like debugging",
    "start": "3402160",
    "end": "3409440"
  },
  {
    "text": "on my own machine I'm creating the console tracing um that I can then debug",
    "start": "3409440",
    "end": "3414920"
  },
  {
    "text": "in Visual Studio Chrome I can actually um so the the for on my local machine",
    "start": "3414920",
    "end": "3420680"
  },
  {
    "text": "the app is running on the Android emulator and I have Chrome and Chrome is",
    "start": "3420680",
    "end": "3426119"
  },
  {
    "text": "showing all the messages that are coming and the model changes and stuff like this and um with the latest and greatest",
    "start": "3426119",
    "end": "3433400"
  },
  {
    "text": "Fable you can also use the Redux tools to um look at the time traveling",
    "start": "3433400",
    "end": "3440200"
  },
  {
    "text": "stuff and this is the only difference to um uh to the web part this is like take",
    "start": "3440200",
    "end": "3447720"
  },
  {
    "text": "the react native render and not the react Rend and then um we can run the",
    "start": "3447720",
    "end": "3456160"
  },
  {
    "text": "program so this is all nice but I have another",
    "start": "3459720",
    "end": "3467520"
  },
  {
    "text": "point a shame shame shame and um I I'm poly honest here and",
    "start": "3468720",
    "end": "3476720"
  },
  {
    "text": "this is like um not everything is like um looking this nice because um when we",
    "start": "3476720",
    "end": "3482440"
  },
  {
    "text": "started with um with react native and fop there was like the Fable and the",
    "start": "3482440",
    "end": "3487520"
  },
  {
    "text": "react native which is Javascript but no bindings between this so um we had to",
    "start": "3487520",
    "end": "3493039"
  },
  {
    "text": "implement all the binding so that we get the react native apis into our uh into our app and for every control that we",
    "start": "3493039",
    "end": "3500720"
  },
  {
    "text": "want to use we had to create the bindings and so um like in the normal",
    "start": "3500720",
    "end": "3506520"
  },
  {
    "text": "workday I was just hacking um JavaScript",
    "start": "3506520",
    "end": "3511640"
  },
  {
    "text": "in in uh un type fashion and in the evening I was cleaning this up and",
    "start": "3511640",
    "end": "3518240"
  },
  {
    "text": "sending it to the uh F Fable react native Library which is open source and",
    "start": "3518240",
    "end": "3525280"
  },
  {
    "text": "then when this pull request and release cycle was done then I could use it in my",
    "start": "3525280",
    "end": "3531079"
  },
  {
    "text": "app so this is like the open source uh dog food cycle",
    "start": "3531079",
    "end": "3537280"
  },
  {
    "text": "create shitty code by day in the evening fix it bring it to um to open source",
    "start": "3537280",
    "end": "3544680"
  },
  {
    "text": "quality and then next day use that that stuff and uh this is like rest of it",
    "start": "3544680",
    "end": "3552119"
  },
  {
    "text": "where we not where we not finished with um with the cycle and we always like put",
    "start": "3552119",
    "end": "3557760"
  },
  {
    "text": "stuff there and then this for us Shame Shame Shame uh we want to put this into the open source world to then use the",
    "start": "3557760",
    "end": "3564359"
  },
  {
    "text": "kleo model so this is um it's actually one of the benefits of using F because",
    "start": "3564359",
    "end": "3571559"
  },
  {
    "text": "it allows you to U do a lot of f uh JavaScript inter up very easily but you",
    "start": "3571559",
    "end": "3577599"
  },
  {
    "text": "can also just emit Javas JavaScript with",
    "start": "3577599",
    "end": "3582640"
  },
  {
    "text": "um like write it in in a in a string and Emitt it and the stuff will basically go",
    "start": "3582640",
    "end": "3589240"
  },
  {
    "text": "to the right place into the your JavaScript and then sometime you have to clean it up and like add types and stuff",
    "start": "3589240",
    "end": "3596240"
  },
  {
    "text": "around this and this is very productive for for the current APP we",
    "start": "3596240",
    "end": "3601440"
  },
  {
    "text": "basically have nothing left only couple of helpers uh couple of helpers left for um",
    "start": "3601440",
    "end": "3610000"
  },
  {
    "text": "to to put it on the on the library and everything was like check we Native out",
    "start": "3610000",
    "end": "3615079"
  },
  {
    "text": "and then uh it just works but in the beginning This was um one of the real",
    "start": "3615079",
    "end": "3620760"
  },
  {
    "text": "benefits of using Fable and not like Elm where you always hope to live in a perfect world and can't easily break out",
    "start": "3620760",
    "end": "3628799"
  },
  {
    "text": "with Pap you can do the crazy ugly stuff as",
    "start": "3628799",
    "end": "3634319"
  },
  {
    "text": "well okay just wanted to tell you about",
    "start": "3634319",
    "end": "3640480"
  },
  {
    "text": "this okay um yeah so for me the the",
    "start": "3640480",
    "end": "3646160"
  },
  {
    "text": "really interesting um observation really was when when I uh looked at Alish that",
    "start": "3646160",
    "end": "3652520"
  },
  {
    "text": "this is leading to modular design and especially if you um I mean there there's always this um",
    "start": "3652520",
    "end": "3658960"
  },
  {
    "text": "people telling everyone if you want to do UI you have to do UOP because op was",
    "start": "3658960",
    "end": "3665240"
  },
  {
    "text": "invented for UI or UI was invented for op I don't know and and and then it will",
    "start": "3665240",
    "end": "3671039"
  },
  {
    "text": "work but um this shows that functional programming um can work as well and very",
    "start": "3671039",
    "end": "3678319"
  },
  {
    "text": "well well but only if you have something like reac diffing from the views because",
    "start": "3678319",
    "end": "3684839"
  },
  {
    "text": "otherwise it would be way too slow to regenerate the whole UI with every step",
    "start": "3684839",
    "end": "3690559"
  },
  {
    "text": "and but the diffing is what what makes it um really cool you will get very very",
    "start": "3690559",
    "end": "3696440"
  },
  {
    "text": "low bug rate when we Shi the first um version to production we had no bucks",
    "start": "3696440",
    "end": "3704359"
  },
  {
    "text": "zero um because it's way too easy this is just um just easy um we have fast",
    "start": "3704359",
    "end": "3712920"
  },
  {
    "text": "development cycle um bit of a problem is the Android emulator this is uh but this",
    "start": "3712920",
    "end": "3719440"
  },
  {
    "text": "is not like Elish fault this is like that the emulator is shitty um and you",
    "start": "3719440",
    "end": "3725920"
  },
  {
    "text": "will get really performant high performance UI okay uh with this I want to thank you",
    "start": "3725920",
    "end": "3732960"
  },
  {
    "text": "for coming and um check out these links we have the Fable compiler which is released today",
    "start": "3732960",
    "end": "3740200"
  },
  {
    "text": "yay uh Elish um then use ionite uh for",
    "start": "3740200",
    "end": "3745279"
  },
  {
    "text": "this um this stuff is not working in visel studio right now for some",
    "start": "3745279",
    "end": "3750880"
  },
  {
    "text": "reasons um check out react native if you don't",
    "start": "3750880",
    "end": "3755920"
  },
  {
    "text": "want to use FSH um you can use react native directly with JavaScript if you",
    "start": "3755920",
    "end": "3761000"
  },
  {
    "text": "want to um but um it's a good Library really really good and yeah the g chat",
    "start": "3761000",
    "end": "3769319"
  },
  {
    "text": "um they are really really helpful people on the g chat and they are so responsive",
    "start": "3769319",
    "end": "3775440"
  },
  {
    "text": "and so helpful um this is one of the reasons why we decided to go on this",
    "start": "3775440",
    "end": "3780760"
  },
  {
    "text": "deack is really this get chat go there make friends they are",
    "start": "3780760",
    "end": "3786119"
  },
  {
    "text": "awesome thank you",
    "start": "3786119",
    "end": "3790318"
  }
]