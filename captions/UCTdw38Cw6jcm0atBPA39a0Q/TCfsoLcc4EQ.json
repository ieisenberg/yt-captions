[
  {
    "start": "0",
    "end": "160000"
  },
  {
    "text": "so I think we're about time we ready to start all right the doors are sealed",
    "start": "380",
    "end": "6529"
  },
  {
    "text": "good morning everyone I am Ryan Nowak and I'm here all the way from Seattle Washington as part of the a",
    "start": "6529",
    "end": "13620"
  },
  {
    "text": "subpoena Corps team to talk to you all today and I for whatever reason a lot of",
    "start": "13620",
    "end": "19560"
  },
  {
    "text": "the other Microsoft people or asp net core people have been here talking about something new something that's gonna be released in 3.0 or something that's like",
    "start": "19560",
    "end": "26010"
  },
  {
    "text": "just released I'm doing something different because I'm a developer I'm not a p.m. I spend most of my time",
    "start": "26010",
    "end": "32340"
  },
  {
    "text": "writing code not traveling to conferences or giving presentations or writing slides it kind of just did my",
    "start": "32340",
    "end": "38430"
  },
  {
    "text": "best so I'm gonna be doing a little bit of a deep dive and i'm calling this lessons learned building asp net core so",
    "start": "38430",
    "end": "47219"
  },
  {
    "text": "a little bit about me I work on all of these things so there's kind of a common",
    "start": "47219",
    "end": "53460"
  },
  {
    "text": "thread here which is frameworks and stuff that users touch but I've kind of gone on this journey from MVC and",
    "start": "53460",
    "end": "59789"
  },
  {
    "text": "routing to razor razor compiler to Blazer to raise your components and there's a couple other things in there",
    "start": "59789",
    "end": "65640"
  },
  {
    "text": "too but what I really want to focus in on today is we're gonna be talking about the history and the story of asp net",
    "start": "65640",
    "end": "72960"
  },
  {
    "text": "core MVC over the period of dotnet core kind of dotnet core 1.0 going to 2.0",
    "start": "72960",
    "end": "81990"
  },
  {
    "text": "going to 2.1 and going to maybe a little bit of 2.2 and then a little bit into",
    "start": "81990",
    "end": "87479"
  },
  {
    "text": "the future I'm going to be talking about some of the new things that we've introduced during this time period some",
    "start": "87479",
    "end": "92610"
  },
  {
    "text": "of the changes in the way that the team has thought about things we're gonna look at some extensibility as well and",
    "start": "92610",
    "end": "97799"
  },
  {
    "text": "show you some powerful things that you can do along the way that you maybe didn't know about or you didn't have",
    "start": "97799",
    "end": "103079"
  },
  {
    "text": "access to in previous versions of the framework and then I'm gonna talk to spend a little bit talking about 3.0",
    "start": "103079",
    "end": "109710"
  },
  {
    "text": "some of the think changes that we're making to routing and how that story sort of grows up so before we get into",
    "start": "109710",
    "end": "115259"
  },
  {
    "text": "that can I see a show of hands who is using ASP net core has used asp net core",
    "start": "115259",
    "end": "120619"
  },
  {
    "text": "so there's a good number of people in the room who has used asp net MVC 5 but",
    "start": "120619",
    "end": "126840"
  },
  {
    "text": "not asp net core okay so there's a small there's a there's about a same",
    "start": "126840",
    "end": "132060"
  },
  {
    "text": "contingent set of people so hopefully if you're not already interested in asp net core you're not",
    "start": "132060",
    "end": "137770"
  },
  {
    "text": "already a little bit excited about it you're gonna see some things today that will hopefully make you a little bit excited about it we're gonna be talking",
    "start": "137770",
    "end": "144460"
  },
  {
    "text": "about some of the things that we've kind of done differently a little bit or things that we've added a lot of what",
    "start": "144460",
    "end": "149590"
  },
  {
    "text": "you're gonna see today is going to be about sort of fundamentals of controllers and pages and routing and",
    "start": "149590",
    "end": "154660"
  },
  {
    "text": "those things and a lot of it's going to seem new because it's additions from nbc5 wrong direction so let's get right",
    "start": "154660",
    "end": "162760"
  },
  {
    "start": "160000",
    "end": "450000"
  },
  {
    "text": "into it I'm going to show you some stuff and we're just gonna spend a little bit of time talking about it so I have got",
    "start": "162760",
    "end": "168910"
  },
  {
    "text": "an app here and I'm gonna go ahead and fire this up and inside this app I have got probably",
    "start": "168910",
    "end": "176350"
  },
  {
    "text": "the most boring repetitive demo that you've all seen a million times I have built a really dumb to do application",
    "start": "176350",
    "end": "182710"
  },
  {
    "text": "and we're gonna look at three different versions of that to do application I mean a demo two of them I'm not gonna",
    "start": "182710",
    "end": "188050"
  },
  {
    "text": "demo the API because demoing API is cut boring we're gonna look at three different versions of this to do application we're",
    "start": "188050",
    "end": "194440"
  },
  {
    "text": "gonna talk about some of the things that make them different so I am going to go to my - duze controller and what do I",
    "start": "194440",
    "end": "201280"
  },
  {
    "text": "need to do I need to give my talk I need to then get some sleep and then I need",
    "start": "201280",
    "end": "209890"
  },
  {
    "text": "to adjust back to my time zone so those are some of things that I need to do and this is a basic to-do app that you've",
    "start": "209890",
    "end": "216280"
  },
  {
    "text": "seen about a million times I've got a Razer pages version of this app as well I can put something in here and I could",
    "start": "216280",
    "end": "222070"
  },
  {
    "text": "submit it and it adds to lists pretty standard stuff pretty boring stuff let's take a deeper look at what this code is",
    "start": "222070",
    "end": "228280"
  },
  {
    "text": "like so I have got this - duze controller here and this is a traditional sort of asp net court",
    "start": "228280",
    "end": "234100"
  },
  {
    "text": "controller if you have been doing MVC 5 in the past this is going to seem really similar to you because it's pretty much",
    "start": "234100",
    "end": "240850"
  },
  {
    "text": "unchanged so one of the things that we did when we built asp net core and this is this was a decree of Scott Guthrie",
    "start": "240850",
    "end": "246519"
  },
  {
    "text": "you know all-powerful VP is that basically controllers and views with a few minor exceptions shall shall just",
    "start": "246519",
    "end": "254019"
  },
  {
    "text": "work like it needs to just work so for the large part you're actually like controller code from MVC 5 with a few",
    "start": "254019",
    "end": "261340"
  },
  {
    "text": "small caveats it's just the same I mean you're not going to find anything very different you",
    "start": "261340",
    "end": "267230"
  },
  {
    "text": "find some new api's and some new concepts but you're not gonna find that like very much has been taken out a few",
    "start": "267230",
    "end": "272390"
  },
  {
    "text": "things have been taken out that we didn't really want to bring forward and we felt like we had good reasons to do but in general it's gonna look the same",
    "start": "272390",
    "end": "279880"
  },
  {
    "text": "so what let's let's talk about some things that you've got here so this is the sort of classic version and we've",
    "start": "279880",
    "end": "285740"
  },
  {
    "text": "got right away we've got dependency injection in the constructor so one of the things that the framework gives you",
    "start": "285740",
    "end": "291800"
  },
  {
    "text": "is you get we new up your class anything that comes from dependency injection asp",
    "start": "291800",
    "end": "298910"
  },
  {
    "text": "net core has dependency injection built in at a base level so one of the most common things that you do is I'm in a",
    "start": "298910",
    "end": "304490"
  },
  {
    "text": "dependency inject my DB context okay not that surprising other kinds of things that you can do well we have routing we",
    "start": "304490",
    "end": "311720"
  },
  {
    "text": "route between these two methods and we still have the same similar kind of routing things to you're used to we have",
    "start": "311720",
    "end": "317270"
  },
  {
    "text": "the ability to disambiguate between methods that are gonna match the same URL based on HTTP verb which is what you",
    "start": "317270",
    "end": "323150"
  },
  {
    "text": "see here so another thing the framework does for you so we see all these action methods we wire them up to some route",
    "start": "323150",
    "end": "328820"
  },
  {
    "text": "table somewhere and then we pick the best one we call this action selection or routing we choose the one that's",
    "start": "328820",
    "end": "334190"
  },
  {
    "text": "going to match the request and then we execute that not too different from what you will have seen before and since we are doing a traditional MVC",
    "start": "334190",
    "end": "341480"
  },
  {
    "text": "controller the really common thing that you're going to do here is you are gonna",
    "start": "341480",
    "end": "347060"
  },
  {
    "text": "have a view you're gonna do some database access you're gonna have a view the view name is found by name it's by",
    "start": "347060",
    "end": "353180"
  },
  {
    "text": "convention and one of the most common things that you're going to do is you're going to create some kind of view model",
    "start": "353180",
    "end": "358340"
  },
  {
    "text": "if you're following best practices if you're hip to that some people might not like it you're going to create some kind of view model that you're gonna pass to",
    "start": "358340",
    "end": "364520"
  },
  {
    "text": "your view you're going to instantiate that and you're gonna pass your view so kind of like the things that we see going on here that are provided by the",
    "start": "364520",
    "end": "370490"
  },
  {
    "text": "framework is we've got activation we've got routing we've got model binding down",
    "start": "370490",
    "end": "376820"
  },
  {
    "text": "here and we've got handling of results or action results in this case so",
    "start": "376820",
    "end": "382130"
  },
  {
    "text": "something something else to point out all air handling are all sort of like validation error handling in an MVC",
    "start": "382130",
    "end": "387710"
  },
  {
    "text": "controller is explicit so like you are responsible for handling errors I don't",
    "start": "387710",
    "end": "392960"
  },
  {
    "text": "know if that's ever but obvious to you or if you've really thought about it in the past maybe you just scaffolded code or you copied from examples or",
    "start": "392960",
    "end": "399650"
  },
  {
    "text": "you maybe did learn this from documentation but air handling in MVC has always been explicit so if you want",
    "start": "399650",
    "end": "405229"
  },
  {
    "text": "to respond to the user and say hey you had a validation error on this page you",
    "start": "405229",
    "end": "410870"
  },
  {
    "text": "you have to do that it's your responsibility the other thing that I would say because this is a traditional",
    "start": "410870",
    "end": "415910"
  },
  {
    "text": "controller I don't have anything else here I just have these two actions and this is an example of the post redirect",
    "start": "415910",
    "end": "422960"
  },
  {
    "text": "get pattern which is a really common web pattern that's kind of just required for the web to work correctly you show a",
    "start": "422960",
    "end": "428270"
  },
  {
    "text": "form you do a post you if you choose to accept the post you redirect the user somewhere else so that they can't hit",
    "start": "428270",
    "end": "434389"
  },
  {
    "text": "reload and just refresh the same thing and submit it a million times we've all seen this before but you can have like any number of",
    "start": "434389",
    "end": "442070"
  },
  {
    "text": "other action methods that are unrelated to this post reader gret post redirect to get cycle that's comprised of these",
    "start": "442070",
    "end": "448610"
  },
  {
    "text": "two methods I just don't have them in my example so let's look at a razor page razor pages are something that were",
    "start": "448610",
    "end": "454910"
  },
  {
    "start": "450000",
    "end": "558000"
  },
  {
    "text": "introduced in a spinet core MVC 2.0 and you're gonna notice that there's a lot",
    "start": "454910",
    "end": "459979"
  },
  {
    "text": "here that's different even though it's kind of the same so we've got this on yet and this on post method and they",
    "start": "459979",
    "end": "466280"
  },
  {
    "text": "fill the same two roles of what you saw before so the on get is like I want to show the form the on post is like",
    "start": "466280",
    "end": "473419"
  },
  {
    "text": "alright the user sent me the data now I want to either accept it or not and then either redirect them or show the same",
    "start": "473419",
    "end": "479360"
  },
  {
    "text": "form again with the validation errors so we've taken this concept of the post redirect get pattern and we've made it",
    "start": "479360",
    "end": "486110"
  },
  {
    "text": "kind of baked in and to be honest this is what razor pages optimized for this was a conscious decision on my part and",
    "start": "486110",
    "end": "493070"
  },
  {
    "text": "on Damien's part to say pages are for these web for me kinda I realize I'm",
    "start": "493070",
    "end": "499580"
  },
  {
    "text": "will said web forms but they're for forms and input processing and data entry and crud and crud and those kind",
    "start": "499580",
    "end": "504889"
  },
  {
    "text": "of things where you want to show a form accept the data and then redirect somewhere else and the whole thing is oriented around this post get redirect",
    "start": "504889",
    "end": "511310"
  },
  {
    "text": "you can do other things you can have additional actions and things like that as part of a page but it's not really",
    "start": "511310",
    "end": "516709"
  },
  {
    "text": "the focus right with controllers controllers are super flexible and they let you kind of structure things how you want pages really optimize an orient for",
    "start": "516709",
    "end": "524450"
  },
  {
    "text": "this whole thing so to add to this like if this because this is a razor page if I had nothing to do in this on get",
    "start": "524450",
    "end": "531110"
  },
  {
    "text": "method I could just leave it out and it doesn't matter it would always just render the view if I didn't accept",
    "start": "531110",
    "end": "536990"
  },
  {
    "text": "post backs on this page I could just leave that out and it doesn't matter I don't need any of that stuff for it to",
    "start": "536990",
    "end": "542630"
  },
  {
    "text": "be a page so it kind of assumes that you're going to scale that way you're",
    "start": "542630",
    "end": "547670"
  },
  {
    "text": "doing web pages that have a page focused lifecycle and we're gonna add some initialization logic add some post logic",
    "start": "547670",
    "end": "554360"
  },
  {
    "text": "but we're still within that framework of post yet redirect proposed to rewrite get sorry another thing to note here",
    "start": "554360",
    "end": "561040"
  },
  {
    "start": "558000",
    "end": "593000"
  },
  {
    "text": "validation and dealing with the results of validation still explicit why is it explicit well because in a UI you need",
    "start": "561040",
    "end": "568880"
  },
  {
    "text": "to present that error information to the user so even though you might just do the boilerplate like initialize the page",
    "start": "568880",
    "end": "575900"
  },
  {
    "text": "and show it again kind of thing it's still we need to put a place in the code",
    "start": "575900",
    "end": "581000"
  },
  {
    "text": "where you can put your air-handling logic because you got to figure out how you're gonna get whatever information",
    "start": "581000",
    "end": "586820"
  },
  {
    "text": "that you want to present to the user when you show them that they failed or like they had a validation problem the",
    "start": "586820",
    "end": "593840"
  },
  {
    "start": "593000",
    "end": "666000"
  },
  {
    "text": "other thing about this that's kind of neat is we talked about things that the framework provides you there are some",
    "start": "593840",
    "end": "599030"
  },
  {
    "text": "things here that are common like activation in common or activation and routing are still here right we're still",
    "start": "599030",
    "end": "605270"
  },
  {
    "text": "going to create your page we still have dependency injection we still have routing but it's a little bit different we got slightly different rules and",
    "start": "605270",
    "end": "611420"
  },
  {
    "text": "conventions but it mostly accomplishes the same thing but the handling of results is totally different because",
    "start": "611420",
    "end": "617840"
  },
  {
    "text": "pages are optimized around the case where everything you do is going to result in the user going to some razor",
    "start": "617840",
    "end": "623330"
  },
  {
    "text": "View at some point so like this on get method for instance the action result is",
    "start": "623330",
    "end": "628760"
  },
  {
    "text": "totally implied you don't have to do anything to show the page in fact you have to do something if you don't want",
    "start": "628760",
    "end": "634370"
  },
  {
    "text": "to show the page so because we assume that the common case is that you're gonna want to keep users in this UI",
    "start": "634370",
    "end": "639410"
  },
  {
    "text": "that's what we optimize for and we make it sort of the default thing to do now let's do something else or let's look at",
    "start": "639410",
    "end": "645890"
  },
  {
    "text": "something else this is API controller API controller is something that we introduced in MVC 2.1",
    "start": "645890",
    "end": "651440"
  },
  {
    "text": "an API controller is kind of like you can think about your MVC controller that's like good at everything and your",
    "start": "651440",
    "end": "658400"
  },
  {
    "text": "page which is optimized for post redirect get views HTML API controllers",
    "start": "658400",
    "end": "663830"
  },
  {
    "text": "are optimized for something completely different so we still have activation we still have di and constructors",
    "start": "663830",
    "end": "669320"
  },
  {
    "start": "666000",
    "end": "744000"
  },
  {
    "text": "we still have routing it's really similar to what we do for traditional controllers but we're optimizing for",
    "start": "669320",
    "end": "675320"
  },
  {
    "text": "completely different things so one of the things that we're optimizing for is we're optimizing for open API our",
    "start": "675320",
    "end": "680630"
  },
  {
    "text": "swagger who's used open API or swagger so it looks like about a third to a half",
    "start": "680630",
    "end": "685850"
  },
  {
    "text": "so one of the big challenges with open API or swagger is well you got to have",
    "start": "685850",
    "end": "691580"
  },
  {
    "text": "all these features or all these behaviors documented of your API so if you think about like whizz doll or so",
    "start": "691580",
    "end": "697940"
  },
  {
    "text": "for some of these older technologies like that like imagine if you could write a REST API and then you could just",
    "start": "697940",
    "end": "703730"
  },
  {
    "text": "have like a document or like a spec like a contract file for what your API is supposed to do in theory that's",
    "start": "703730",
    "end": "708830"
  },
  {
    "text": "something that's great to do with rest because we're doing c-sharp and because we're strongly-typed we're putting some",
    "start": "708830",
    "end": "714980"
  },
  {
    "text": "of that information in the return type I'm not going to go incredibly deep on this topic there was some of it talked about in Damian's talks if you haven't",
    "start": "714980",
    "end": "721430"
  },
  {
    "text": "seen some of the things we're doing there lately I'm courage to go watch Damion Edwards talk on on t2 from",
    "start": "721430",
    "end": "727250"
  },
  {
    "text": "earlier in the week but know that that's part of the API controller story is we're optimizing for the assumption that",
    "start": "727250",
    "end": "733550"
  },
  {
    "text": "you are building an API you might care about the this open API thing how much",
    "start": "733550",
    "end": "738860"
  },
  {
    "text": "of a complete story and how close to a default good experience can we get you without you having to do work to do it",
    "start": "738860",
    "end": "744530"
  },
  {
    "start": "744000",
    "end": "811000"
  },
  {
    "text": "one of the other things that you're going to notice here speaking of return types or sort of results of things is",
    "start": "744530",
    "end": "750650"
  },
  {
    "text": "that you see that there's not any validation error handling here and the reason why that is is we've done it for",
    "start": "750650",
    "end": "757070"
  },
  {
    "text": "you so with API controller one of the things that you get for free and you can turn it off if you don't want it is you get",
    "start": "757070",
    "end": "763520"
  },
  {
    "text": "automatic handling of validation errors without having to do anything and the reason what are some of the reasons why",
    "start": "763520",
    "end": "769490"
  },
  {
    "text": "we do that well in contrast to like a website with a website you've got to gather a lot of information that you",
    "start": "769490",
    "end": "775430"
  },
  {
    "text": "want to present to the user if they've made a mistake or they entered something incorrectly with an API you probably",
    "start": "775430",
    "end": "780950"
  },
  {
    "text": "want to optimize something different you probably want to have all of your API endpoints behave consistently with",
    "start": "780950",
    "end": "787520"
  },
  {
    "text": "respect to errors and you probably don't really need to put much logic in there",
    "start": "787520",
    "end": "792860"
  },
  {
    "text": "you've already run validation you basically want to return to the customer or the user whoever called your API",
    "start": "792860",
    "end": "798920"
  },
  {
    "text": "somebody by some JSON blob that says these were the validation rules that failed or something like that so you've just done",
    "start": "798920",
    "end": "804319"
  },
  {
    "text": "it for you because it's it's sort of just clutter for api's you you don't really tend to need it too much so jump",
    "start": "804319",
    "end": "812540"
  },
  {
    "start": "811000",
    "end": "949000"
  },
  {
    "text": "back to my slides here and what we're really talking about is kind of the evolution of MVC or the evolution of",
    "start": "812540",
    "end": "818540"
  },
  {
    "text": "these programming models we sort of have the the progenitor which is original",
    "start": "818540",
    "end": "823759"
  },
  {
    "text": "controllers and original MVC which is like yeah I can do whatever you want but it doesn't really bias you in any way or",
    "start": "823759",
    "end": "829819"
  },
  {
    "text": "another and then you have these things like pages and API controllers that bias you towards certain scenarios so like",
    "start": "829819",
    "end": "836480"
  },
  {
    "text": "our traditional controller as we said like it eats everything does everything you can do whatever you want but it's",
    "start": "836480",
    "end": "841910"
  },
  {
    "text": "kind of verbose because you have to be really explicit about a bunch of things it's also not really changed because",
    "start": "841910",
    "end": "849019"
  },
  {
    "text": "it's kind of just classic you know it's it's an old it's an old Cadillac or something like that at this point that's",
    "start": "849019",
    "end": "855110"
  },
  {
    "text": "kind of just is what it is and it's gonna stay that way forever it's not really an area where we're looking to add more bells and whistles it's stable",
    "start": "855110",
    "end": "862220"
  },
  {
    "text": "it's well known it's not broken it's working pretty well razor pages jumping all the way over to",
    "start": "862220",
    "end": "867319"
  },
  {
    "text": "the right has got simplified routing and is optimized for a particular set of UI focused scenarios we assume that you are",
    "start": "867319",
    "end": "875029"
  },
  {
    "text": "doing the common things for views something that I didn't point out that I probably should have is in our",
    "start": "875029",
    "end": "881059"
  },
  {
    "text": "controller example we're constructing a view viewmodel object and passing that",
    "start": "881059",
    "end": "886069"
  },
  {
    "text": "into the view in a razor page the like page handler class is the view model",
    "start": "886069",
    "end": "891949"
  },
  {
    "text": "object you don't necessarily have to create a separate object if you want to we give you a place to pass state to the",
    "start": "891949",
    "end": "898459"
  },
  {
    "text": "view because we assume you're going to do it we rip that off from rails by the way which would not be the only thing we",
    "start": "898459",
    "end": "905480"
  },
  {
    "text": "ripped off from rails looking at API controller in contrast it's for REST API",
    "start": "905480",
    "end": "910790"
  },
  {
    "text": "is it's open for it's optimized for open API or whatever kinds of other things might come along in that space",
    "start": "910790",
    "end": "917480"
  },
  {
    "text": "it has opinions about precise parameter binding and other things like that we're gonna spend a little bit of more time",
    "start": "917480",
    "end": "923329"
  },
  {
    "text": "talking about that later because I'm gonna show you some things and it's got that automatic uniform error handling it",
    "start": "923329",
    "end": "929179"
  },
  {
    "text": "automatically does things for you because instead of tailoring each error experience towards who's the customer",
    "start": "929179",
    "end": "935130"
  },
  {
    "text": "who's trying to sign up for my email form it's well we want a document what format we return airs in from this API",
    "start": "935130",
    "end": "941700"
  },
  {
    "text": "so that our customers can make sense of them because our customer is a computer this all kind of makes sense I'm seeing",
    "start": "941700",
    "end": "947250"
  },
  {
    "text": "seeing some nods of agreement I also want to say I think of these three",
    "start": "947250",
    "end": "952290"
  },
  {
    "start": "949000",
    "end": "1039000"
  },
  {
    "text": "things that kind of lump pages into the same category and I've got my own definition I'm going to call it a",
    "start": "952290",
    "end": "957540"
  },
  {
    "text": "controller like because I'm being upfront about the fact that this is not the traditional definition of a",
    "start": "957540",
    "end": "962910"
  },
  {
    "text": "controller I'm instead talking about the structure of the code and how its",
    "start": "962910",
    "end": "967950"
  },
  {
    "text": "implemented rather than what role it fills in architecture so I would refer to a controller like as a handler that",
    "start": "967950",
    "end": "974520"
  },
  {
    "text": "instantiates an object calls a method communicating inputs through method arguments and outputs through method",
    "start": "974520",
    "end": "980310"
  },
  {
    "text": "return values so it's basically this pattern we activate we're out which",
    "start": "980310",
    "end": "986370"
  },
  {
    "text": "means we choose which method it's going to go to we bind parameters which means we're going to have some data to pass",
    "start": "986370",
    "end": "992010"
  },
  {
    "text": "into the controller like and then we interpret the result which in our case",
    "start": "992010",
    "end": "997110"
  },
  {
    "text": "is a command object or an action result I think that this is a useful definition because this just worked so well in",
    "start": "997110",
    "end": "1004160"
  },
  {
    "text": "c-sharp and other object-oriented languages so Ruby's got this pattern Java's got this pattern that's got this",
    "start": "1004160",
    "end": "1010070"
  },
  {
    "text": "pattern I'm sure a lot of other languages and platforms have this pattern because if you're doing object-oriented programming it just",
    "start": "1010070",
    "end": "1015950"
  },
  {
    "text": "works so well these are kind of the tools that you have available to you and when I think about designing features",
    "start": "1015950",
    "end": "1021080"
  },
  {
    "text": "are building new things into the framework I think about the design space in terms of those things those are the",
    "start": "1021080",
    "end": "1026930"
  },
  {
    "text": "some of the things that users can do in their code so if we can respond to what you put in your code or if we can",
    "start": "1026930",
    "end": "1032660"
  },
  {
    "text": "optimize what you have to put in your code it could be really beneficial to you it could make your life easier",
    "start": "1032660",
    "end": "1038569"
  },
  {
    "text": "it could make things less error-prone so let's step back and take a slightly bigger picture I haven't shown the start",
    "start": "1038570",
    "end": "1045170"
  },
  {
    "start": "1039000",
    "end": "1075000"
  },
  {
    "text": "up class of this application but if you've done any asp net core before this kind of thing should be pretty familiar to you everything that we have talked",
    "start": "1045170",
    "end": "1052280"
  },
  {
    "text": "about so far is in that ugly yellow blob so we've got all these other middleware",
    "start": "1052280",
    "end": "1057770"
  },
  {
    "text": "here we've got developer exception page we've got exception handler we've got some HTTP kinds of things we've got",
    "start": "1057770",
    "end": "1063740"
  },
  {
    "text": "static file serving we've got a gdpr thing and then we have use MVC use MVC is",
    "start": "1063740",
    "end": "1069809"
  },
  {
    "text": "actually what we call the used router middleware and it's what hooks routing up to the middleware pipeline so once",
    "start": "1069809",
    "end": "1075809"
  },
  {
    "text": "you get inside of middleware think of middleware as like this sequential pipeline it's a bunch of",
    "start": "1075809",
    "end": "1082289"
  },
  {
    "text": "handlers for handlers for handlers for handlers for handlers and request processing proceeds through this chain",
    "start": "1082289",
    "end": "1087509"
  },
  {
    "text": "until it gets to routing and routing is a branch routing makes a decision and",
    "start": "1087509",
    "end": "1092580"
  },
  {
    "text": "says we are going that way and we're going to home index or we are going that way and we're going to the to dues page",
    "start": "1092580",
    "end": "1097940"
  },
  {
    "text": "the action invoker is all the stuff that we've seen before which is like alright I got a run your code I got to run your",
    "start": "1097940",
    "end": "1104429"
  },
  {
    "text": "page I got to run your your API controller how MVC interacts with",
    "start": "1104429",
    "end": "1110700"
  },
  {
    "text": "routing is well we have to figure out what's in your app and we have to initialize a route table with all that",
    "start": "1110700",
    "end": "1117119"
  },
  {
    "text": "data so that routing can make the right decisions so would it be cool if we could check out what that's like and",
    "start": "1117119",
    "end": "1123359"
  },
  {
    "start": "1120000",
    "end": "1428000"
  },
  {
    "text": "spoiler spoiler alert we can check that out so I'm going to boot up this app",
    "start": "1123359",
    "end": "1128519"
  },
  {
    "text": "again and what I've done in here is I've created an action on a controller just doing a normal thing that's going to",
    "start": "1128519",
    "end": "1134309"
  },
  {
    "text": "grab some MVC framework data and I've just formatted it for a little bit of a nicer display so you can see in here",
    "start": "1134309",
    "end": "1142519"
  },
  {
    "text": "basically all of these actions that exist and I'm gonna look for I'm going to scroll past some stuff and I look for",
    "start": "1142519",
    "end": "1148889"
  },
  {
    "text": "that first controller that we talked about so here's our first controller that we talked about that plain old vanilla controller you can see we've got",
    "start": "1148889",
    "end": "1155669"
  },
  {
    "text": "the index action this one's the get one I can tell that because it has no parameters and it's got some filters",
    "start": "1155669",
    "end": "1161220"
  },
  {
    "text": "around it so what are filters you probably may have heard of filters before but the way I like to think about",
    "start": "1161220",
    "end": "1166830"
  },
  {
    "text": "filters and the way I want to introduce them to you is there just middleware for MVC so filters are like you've got that",
    "start": "1166830",
    "end": "1175139"
  },
  {
    "text": "middleware pipeline that we looked at before that's like okay I'm gonna run air handling and then I'm going to run authorization and then I'm going to run",
    "start": "1175139",
    "end": "1181019"
  },
  {
    "text": "files and then I'm going to run routing filters are just middleware for your actions and controllers and it's this",
    "start": "1181019",
    "end": "1187229"
  },
  {
    "text": "big complicated beast it's got a bunch of different stages and things like that but really what you need to know about is that there are middleware for your",
    "start": "1187229",
    "end": "1194460"
  },
  {
    "text": "controller and there are some filters here that are built-in by default I'm going to talk a little bit about more what these are in",
    "start": "1194460",
    "end": "1200280"
  },
  {
    "text": "woman here is our post action and I can tell that this is our post action",
    "start": "1200280",
    "end": "1205320"
  },
  {
    "text": "because it's got a single parameter down here and that's this to do model and it",
    "start": "1205320",
    "end": "1210570"
  },
  {
    "text": "says binding in foam model binding what binding info model binding means to me",
    "start": "1210570",
    "end": "1215700"
  },
  {
    "text": "it's terrible name and you can blame me for it cuz I created it but what model binding means to me in this context is",
    "start": "1215700",
    "end": "1221340"
  },
  {
    "text": "it means be as flexible as possible because when we think about how our UI applications work we don't really care",
    "start": "1221340",
    "end": "1228450"
  },
  {
    "text": "that much about being precise about like where the data came from did it come",
    "start": "1228450",
    "end": "1233580"
  },
  {
    "text": "from the query string did it come from the route data was it part of a form post like as long as it's gonna get you",
    "start": "1233580",
    "end": "1238860"
  },
  {
    "text": "there you're you're pretty much fine with it and that's alright because you might have multiple forms that pose to",
    "start": "1238860",
    "end": "1243900"
  },
  {
    "text": "the same endpoint or something like that you want a certain degree of flexibility when you're doing UI programming because",
    "start": "1243900",
    "end": "1249660"
  },
  {
    "text": "you don't necessarily care down at the bottom here we've got our to Do's page",
    "start": "1249660",
    "end": "1255590"
  },
  {
    "text": "and you'll notice that there is only a single action here it's not actually two",
    "start": "1255590",
    "end": "1260850"
  },
  {
    "text": "separate things it's one thing that makes a decision when it runs am i doing",
    "start": "1260850",
    "end": "1266370"
  },
  {
    "text": "a GAD or am i doing a post there's some somewhat complicated architectural reasons in there but basically the way",
    "start": "1266370",
    "end": "1272190"
  },
  {
    "text": "to think about it is because pages can be recompiled we have to sort of like",
    "start": "1272190",
    "end": "1277950"
  },
  {
    "text": "have the branching logic inside the page we don't know what the compiled type of",
    "start": "1277950",
    "end": "1284070"
  },
  {
    "text": "the page is going to look like and what methods it has and what filters it has and all those kinds of things we don't",
    "start": "1284070",
    "end": "1289950"
  },
  {
    "text": "know those things when we build the route table so I actually did some like workarounds to get this data because if",
    "start": "1289950",
    "end": "1295230"
  },
  {
    "text": "you looked at what's in the route table the what's called the action descriptor for a page actually doesn't have any of",
    "start": "1295230",
    "end": "1301290"
  },
  {
    "text": "this information it only is a thing that can be routed to and then later we create the actual thing because pages",
    "start": "1301290",
    "end": "1307530"
  },
  {
    "text": "can be recompiled and also we don't read them we don't compile all the pages on startup or we",
    "start": "1307530",
    "end": "1313380"
  },
  {
    "text": "don't have to it's not a requirement of the system it's actually a requirement the other way but this is mostly going",
    "start": "1313380",
    "end": "1319410"
  },
  {
    "text": "to be the same as our controller because it kind of does the same things let's look at our API controller",
    "start": "1319410",
    "end": "1327080"
  },
  {
    "text": "Wow so I'm looking at just the post action here I'm gonna skip the get one because it's less interesting than this",
    "start": "1327230",
    "end": "1333149"
  },
  {
    "text": "but you'll notice that there's like all kinds of filters here like it's filters going bananas the other thing that there",
    "start": "1333149",
    "end": "1339330"
  },
  {
    "text": "is is there's this body binding info body now what is that so binding info",
    "start": "1339330",
    "end": "1344610"
  },
  {
    "text": "body is a default parameter source convention that is part of the API",
    "start": "1344610",
    "end": "1350490"
  },
  {
    "text": "controller construct so rather than model binding which is like I want to be flexible I want to collect all the data",
    "start": "1350490",
    "end": "1356039"
  },
  {
    "text": "I want to shove it all in one pile and roll around in it this is going to be very precise and I'm saying that I",
    "start": "1356039",
    "end": "1361919"
  },
  {
    "text": "expect the body of this to do item to come from Jason that's going to get deserialized for the body now why would",
    "start": "1361919",
    "end": "1368309"
  },
  {
    "text": "you care about this well it's the opposite of a UI controller you actually want to define where your data is coming",
    "start": "1368309",
    "end": "1374639"
  },
  {
    "text": "from and what the requests that are past your API should look like because you want to give your customers who are",
    "start": "1374639",
    "end": "1380159"
  },
  {
    "text": "other computers or other services or other teams at your company or maybe even external people a consistent and",
    "start": "1380159",
    "end": "1386429"
  },
  {
    "text": "stable and well-documented contract so one of the things that comes with API Explorer is that the binding behavior is",
    "start": "1386429",
    "end": "1393299"
  },
  {
    "text": "by default are sort of optimized for the kinds of things that you might reasonably do rather than expecting you",
    "start": "1393299",
    "end": "1400320"
  },
  {
    "text": "to mark this up yourself so to look at that a little bit if I went to this API controller I could do something like",
    "start": "1400320",
    "end": "1407129"
  },
  {
    "text": "this and changes are not allowed when code is still running I'm very sorry visual studio I could do something like",
    "start": "1407129",
    "end": "1413669"
  },
  {
    "text": "this and I could be very explicit about where this is coming from but because it's an API API controller I don't have",
    "start": "1413669",
    "end": "1419190"
  },
  {
    "text": "to do that it's assumed because it's the most common thing that you probably wanted to do anyway so I'm just going to",
    "start": "1419190",
    "end": "1426059"
  },
  {
    "text": "revert that cool so hopefully that's a little bit of useful information the way",
    "start": "1426059",
    "end": "1432840"
  },
  {
    "start": "1428000",
    "end": "1697000"
  },
  {
    "text": "to think about it we've got all these sort of filters and all these different things that we collect we've got the",
    "start": "1432840",
    "end": "1438570"
  },
  {
    "text": "parameter info we've got the routing info we build this big table of actions at startup time and we throw that into",
    "start": "1438570",
    "end": "1445019"
  },
  {
    "text": "routing and that's kind of how stuff gets to your code and this is a diagram",
    "start": "1445019",
    "end": "1451590"
  },
  {
    "text": "of the invoker it's been simplified a little bit I talked about how filters are complicated this is how they're",
    "start": "1451590",
    "end": "1456809"
  },
  {
    "text": "complicated there are lots of different lots of different ways that they now I want to change gears a little bit",
    "start": "1456809",
    "end": "1462270"
  },
  {
    "text": "and I want to sort of distill what we just talked about and think about how I",
    "start": "1462270",
    "end": "1468930"
  },
  {
    "text": "think about moving frameworks forward how I think about our role in being your partner and helping you build things so",
    "start": "1468930",
    "end": "1476100"
  },
  {
    "text": "to me what makes a framework so different from a library is that like a library you call this method it does a",
    "start": "1476100",
    "end": "1483090"
  },
  {
    "text": "thing maybe it reads a JSON file maybe it writes something to disk maybe it resizes an image something like that it",
    "start": "1483090",
    "end": "1490200"
  },
  {
    "text": "does one task and you're generally as the application author you're in control of what's happening whereas like a",
    "start": "1490200",
    "end": "1496230"
  },
  {
    "text": "framework well does this right it's got",
    "start": "1496230",
    "end": "1501300"
  },
  {
    "text": "all these little points to wire up features it's got all these callbacks it's got pipelines it's got extensibility points and ultimately we",
    "start": "1501300",
    "end": "1508950"
  },
  {
    "text": "have this concept called inversion of control which you might have heard in the context of dependency injection but",
    "start": "1508950",
    "end": "1514290"
  },
  {
    "text": "that's just one meaning of it inversion of control just generally means like alright you wrote the application but",
    "start": "1514290",
    "end": "1521610"
  },
  {
    "text": "we're the ones calling your method right like it's not your code a hundred percent it's maybe your code about 60",
    "start": "1521610",
    "end": "1528360"
  },
  {
    "text": "percent or about forty percent and that's kind of the gist of inversion of control is you're gonna create something",
    "start": "1528360",
    "end": "1533700"
  },
  {
    "text": "we're gonna be the ones responsible for calling it or sort of plugging you in so what's risky about this or what's bad",
    "start": "1533700",
    "end": "1540270"
  },
  {
    "text": "about this is like well well what if we have a bug and I'll be honest with you we do we have bugs what if we have a bug",
    "start": "1540270",
    "end": "1547020"
  },
  {
    "text": "what if we don't call your code what if we don't pass the right methods or pass the right arguments what if we call",
    "start": "1547020",
    "end": "1552870"
  },
  {
    "text": "methods in a different sequence than we did before or like what if we didn't load your DLL what if we're not routing",
    "start": "1552870",
    "end": "1559140"
  },
  {
    "text": "to your controller what do you do if we have a bug like what's your workaround sadly a lot of the time there's not a",
    "start": "1559140",
    "end": "1566309"
  },
  {
    "text": "workaround or it's gonna be some awful arcane thing that you're gonna log an issue on github and I'm gonna respond",
    "start": "1566309",
    "end": "1572550"
  },
  {
    "text": "with 200 lines of code and I'm gonna say hey make a class call this paste it into your project wire it up to the solution",
    "start": "1572550",
    "end": "1578040"
  },
  {
    "text": "wire it up to your dependency injection and we'll patch this as soon as I can so",
    "start": "1578040",
    "end": "1583170"
  },
  {
    "text": "so those are some of the problems with having a bug in the framework some of the risks with having a bug in framework we also provide a lot of extensibility",
    "start": "1583170",
    "end": "1590429"
  },
  {
    "text": "and everywhere that we've got this rich extensibility is another sort of like risk for your",
    "start": "1590429",
    "end": "1595740"
  },
  {
    "text": "application if we don't do our job so like if we broke something that you depend on let's say you wrote a model",
    "start": "1595740",
    "end": "1601980"
  },
  {
    "text": "binder because you need to parse some data or you want to you want to automatically model bind a parameter from your database or something like",
    "start": "1601980",
    "end": "1607740"
  },
  {
    "text": "that which is super common thing people love to do like what if we break you what if what if asp net core to one",
    "start": "1607740",
    "end": "1614280"
  },
  {
    "text": "works great and asp net core to two does not work so great like how do you get past that we vote we've erected this",
    "start": "1614280",
    "end": "1620580"
  },
  {
    "text": "very like challenging barrier for you to get through the other thing here frameworks have opinions and opinions",
    "start": "1620580",
    "end": "1626580"
  },
  {
    "text": "change so like we're doing this open API thing now our automatic error responses",
    "start": "1626580",
    "end": "1632250"
  },
  {
    "text": "are something called problem details or RFC 90 807 like what if that's not the thing anymore in five years like is your",
    "start": "1632250",
    "end": "1639420"
  },
  {
    "text": "application still going to be around in five years so you probably do care about this stuff right because like if you if",
    "start": "1639420",
    "end": "1645540"
  },
  {
    "text": "you like that and you're still using it and we say but but nobody's using that anymore we want to get rid of it like",
    "start": "1645540",
    "end": "1650880"
  },
  {
    "text": "you still have to get some path right and even if your path involves you changing code and moving forward like",
    "start": "1650880",
    "end": "1656520"
  },
  {
    "text": "how can we make that path as seamless and as smooth as possible we also have with something like API Explorer at",
    "start": "1656520",
    "end": "1663000"
  },
  {
    "text": "least in my opinion because so much of your application is our code in our library and our behavior we have a",
    "start": "1663000",
    "end": "1669420"
  },
  {
    "text": "significant opportunity to add value to you because the the mix the mix is just",
    "start": "1669420",
    "end": "1674880"
  },
  {
    "text": "the mix is just a little bit bigger in our favor a little bit of time so we're like we can make your life a lot easier with libraries to kind of stay in their",
    "start": "1674880",
    "end": "1682140"
  },
  {
    "text": "box and do what they do but with a framework it's like it's like superpowers at least that's how I think about it and then and then lastly how",
    "start": "1682140",
    "end": "1688920"
  },
  {
    "text": "does a team come up with a strategy that preserves our ability to keep working on the framework keep making improvements",
    "start": "1688920",
    "end": "1695520"
  },
  {
    "text": "and keep making changes so I want to show you some real bugs that we have had",
    "start": "1695520",
    "end": "1701640"
  },
  {
    "start": "1697000",
    "end": "1891000"
  },
  {
    "text": "and some real problems that we have fixed and how these issues can be kind",
    "start": "1701640",
    "end": "1707160"
  },
  {
    "text": "of kind of vexing really like I think when you see hopefully when you see some",
    "start": "1707160",
    "end": "1713670"
  },
  {
    "text": "of these bugs you'll agree with me that it's not necessarily as straightforward for us as like well we'll just fix the",
    "start": "1713670",
    "end": "1719970"
  },
  {
    "text": "bug because there are some other concerns that come up when we start talking about functional bugs and",
    "start": "1719970",
    "end": "1725760"
  },
  {
    "text": "frameworks or change and behavior frameworks so I'm going to use that term a lot breaking change of",
    "start": "1725760",
    "end": "1731220"
  },
  {
    "text": "behavior so I think there's a good talk that John is doing John skeet is doing next that's going to be better than",
    "start": "1731220",
    "end": "1737190"
  },
  {
    "text": "anything that I can say about it but the world is broken down into changes and",
    "start": "1737190",
    "end": "1742710"
  },
  {
    "text": "breaking changes and all kinds of different changes and the way that I think about it is that every change can be a breaking change to somebody and",
    "start": "1742710",
    "end": "1749040"
  },
  {
    "text": "there's different kinds you can break source compatibility you can break binaries or you can break behavior and",
    "start": "1749040",
    "end": "1754470"
  },
  {
    "text": "I'm really going to focus on breaking changes in behavior because I think I've got some pretty good examples here so here is an example page that I wrote",
    "start": "1754470",
    "end": "1761310"
  },
  {
    "text": "with some really hacky fetch stuff and this is gonna do some asynchronous data posts to the server to do some things I",
    "start": "1761310",
    "end": "1768180"
  },
  {
    "text": "haven't shown you any of the code yet to know what it's doing yet I'm just going to describe it and you're gonna see",
    "start": "1768180",
    "end": "1773940"
  },
  {
    "text": "results down here in this kind of low contrast text box at the bottom this is about as good as my UI stills get if",
    "start": "1773940",
    "end": "1780870"
  },
  {
    "text": "you've seen the blazer stuff the Razr component stuff I maybe wrote some of those application parts it did not write",
    "start": "1780870",
    "end": "1787260"
  },
  {
    "text": "any of the UI Steve Sanderson did that so I am going to post to this controller and uh-oh I've got a problem I hit an",
    "start": "1787260",
    "end": "1794370"
  },
  {
    "text": "exception so I have written my own input formatter I don't know if anybody in the audience has ever written an input",
    "start": "1794370",
    "end": "1800550"
  },
  {
    "text": "formatter before but an input for matter is like the thing that DC realizes requests bodies so if you're reading",
    "start": "1800550",
    "end": "1806970"
  },
  {
    "text": "Jason you've got a JSON input format or if you're reading XML you probably have one of the two XML serialization format",
    "start": "1806970",
    "end": "1814680"
  },
  {
    "text": "errs reading that if you wanted to hook up UML to asp net core you would take a",
    "start": "1814680",
    "end": "1819840"
  },
  {
    "text": "yamo serialization library and then you would use an input formatter to plug it in so it's the place where we integrate",
    "start": "1819840",
    "end": "1825720"
  },
  {
    "text": "so cool so I have an exception who thinks they knows what this exception is",
    "start": "1825720",
    "end": "1830880"
  },
  {
    "text": "going to do is it going to is it going to crash the application is it going to",
    "start": "1830880",
    "end": "1836100"
  },
  {
    "text": "give me yellow screen of death is it going to give me back a 500 graceful think about it in your brain I'm not",
    "start": "1836100",
    "end": "1842220"
  },
  {
    "text": "gonna ask for participation but think about in your brain what this is going to do or what you'd like it to do if your formatter was throwing an exception",
    "start": "1842220",
    "end": "1847920"
  },
  {
    "text": "and and keep in mind this is an assembly load exception and that's on purpose so",
    "start": "1847920",
    "end": "1853260"
  },
  {
    "text": "I'm gonna continue and we get it we get a message here saying oh an error",
    "start": "1853260",
    "end": "1858630"
  },
  {
    "text": "occurred we're real sorry about that and I think I failed to reset my demo",
    "start": "1858630",
    "end": "1864059"
  },
  {
    "text": "but I'm not I'm gonna check that real quick because I might have made a mistake here but anyway I'm gonna keep explaining",
    "start": "1864059",
    "end": "1869730"
  },
  {
    "text": "while I keep looking we had a bug yes I did I forgot to reset my demo my bad",
    "start": "1869730",
    "end": "1875389"
  },
  {
    "text": "we had a bug in asp net core 1x and 2x and so on where if an input formatter",
    "start": "1875389",
    "end": "1883499"
  },
  {
    "text": "through an exception for any reason at all it would get swallowed by the framework and it would get turned into a",
    "start": "1883499",
    "end": "1889110"
  },
  {
    "text": "normal validation error so there's actually good reason for that but it was still bad so here we are again I throw",
    "start": "1889110",
    "end": "1896340"
  },
  {
    "start": "1891000",
    "end": "2268000"
  },
  {
    "text": "an exception in my formatter and I get this generic the input was not valid method so the problem is the",
    "start": "1896340",
    "end": "1904379"
  },
  {
    "text": "infrastructure that calls input for matters swallows all exceptions just eats them all and turns them into",
    "start": "1904379",
    "end": "1909659"
  },
  {
    "text": "validation errors and the reason why is that a lot of the built-in serializers",
    "start": "1909659",
    "end": "1915629"
  },
  {
    "text": "in dotnet XML serializer and XML data contract serializer throw an exception when data is invalid and they have no",
    "start": "1915629",
    "end": "1922110"
  },
  {
    "text": "other way to report that the data was invalid so if you posted invalid XML to the server you would really prefer for",
    "start": "1922110",
    "end": "1928799"
  },
  {
    "text": "that to come back as a 400 not a 500 we work with a lot of customers that have monitoring services and if you have a",
    "start": "1928799",
    "end": "1936090"
  },
  {
    "text": "monitoring service in production or you have an IT organization that uses a monitoring service to watch things or if",
    "start": "1936090",
    "end": "1941850"
  },
  {
    "text": "you get alerting from your monitoring service you know that you don't want 500s occurring in production because",
    "start": "1941850",
    "end": "1947309"
  },
  {
    "text": "even if they're sort of benign it makes it hard for you to catch real problems so we you start getting pinged by people",
    "start": "1947309",
    "end": "1954419"
  },
  {
    "text": "that are sort of like I'm seeing all these 500s and seeing all these crashes and it's like well reporting an error correctly and saying this is bad data",
    "start": "1954419",
    "end": "1961409"
  },
  {
    "text": "versus this is a crash like it's actually really important in these production kind of scenarios even though",
    "start": "1961409",
    "end": "1966720"
  },
  {
    "text": "it doesn't crash the app so we had a bug and if you were with us through asp net core 1.0 or through the DNX days and i'm",
    "start": "1966720",
    "end": "1974460"
  },
  {
    "text": "sure that there is at least one you know DNX og here he's laughing probably it it",
    "start": "1974460",
    "end": "1981360"
  },
  {
    "text": "could he's trying Ribit just remembering it I think the thing that he's remembering specifically",
    "start": "1981360",
    "end": "1986429"
  },
  {
    "text": "is that in asp net core 100 it could have been really hard for you to get the right set of assemblies and",
    "start": "1986429",
    "end": "1991980"
  },
  {
    "text": "your application like the right versions of assemblies in your application we've kind of clean that up but if you had",
    "start": "1991980",
    "end": "1998340"
  },
  {
    "text": "that kind of problem one of the places that you were very likely to blow up was reading the request body because it",
    "start": "1998340",
    "end": "2004880"
  },
  {
    "text": "could be the first time that a bunch of those assemblies are getting loaded to do like i/o so we got this like rash of",
    "start": "2004880",
    "end": "2011870"
  },
  {
    "text": "issues reported by people that were like well I'm getting this this invalid model",
    "start": "2011870",
    "end": "2019010"
  },
  {
    "text": "exception and I have no idea why and then I we tell them well this is",
    "start": "2019010",
    "end": "2024140"
  },
  {
    "text": "where you look to look at that data and they look at that data and they say oh but that error has an exception",
    "start": "2024140",
    "end": "2029179"
  },
  {
    "text": "associated with it and the exception is like invalid type load exception or something like that and it's like oh holy crap like that's really bad right",
    "start": "2029179",
    "end": "2036020"
  },
  {
    "text": "so we're silencing all these really bad application deployment and configuration problems and representing them as like a",
    "start": "2036020",
    "end": "2044179"
  },
  {
    "text": "validation failure which is really really bad right and the reason why is because we have to work with some",
    "start": "2044179",
    "end": "2050118"
  },
  {
    "text": "libraries that use that exception as their success path so this gets to customers before we realize we have a",
    "start": "2050119",
    "end": "2056090"
  },
  {
    "text": "problem so what do you do because like it is a breaking change of behavior to this interface right this is a somewhat",
    "start": "2056090",
    "end": "2063080"
  },
  {
    "text": "common somewhat high profile extensibility API and we have this behavior before where we just handle all",
    "start": "2063080",
    "end": "2069888"
  },
  {
    "text": "exceptions we just eat them and we turn them into model hairs I've got another cool bug here so I have got a controller",
    "start": "2069889",
    "end": "2076128"
  },
  {
    "text": "that is model binding and enum value and that enum value has got three values can",
    "start": "2076129",
    "end": "2081590"
  },
  {
    "text": "be dog cat or fish so I put in dog here it's gonna say everything's fine if I put in cat or fish here it's gonna say",
    "start": "2081590",
    "end": "2088490"
  },
  {
    "text": "that everything is fine cool if I put in something that's out of range like let me put in unicorn or unicron both good",
    "start": "2088490",
    "end": "2095530"
  },
  {
    "text": "but I know that I don't have a unicorn element of this enum and it's going to tell me that it's gonna say that's not",
    "start": "2095530",
    "end": "2101660"
  },
  {
    "text": "valid that's good that's what you'd expect that's what you'd want cool what if I put in 0 well 0 works because 0 is",
    "start": "2101660",
    "end": "2111380"
  },
  {
    "text": "a valid member of the Cena and some serializers Jason net does this in some cases some serializers will serialize",
    "start": "2111380",
    "end": "2118490"
  },
  {
    "text": "enum values as their integer equivalents that's totally valid right it's just a different way of representing the",
    "start": "2118490",
    "end": "2124640"
  },
  {
    "text": "same information okay fine so my values of this a number zero one",
    "start": "2124640",
    "end": "2129860"
  },
  {
    "text": "and two what if I put in a different number what that works it does work so",
    "start": "2129860",
    "end": "2139580"
  },
  {
    "text": "the reason why is because an integer or an enum this enum in particular is represented as an integer and dotnet is",
    "start": "2139580",
    "end": "2147440"
  },
  {
    "text": "very happy to convert some arbitrary integer into your enum even though it doesn't match one of the enum values",
    "start": "2147440",
    "end": "2153110"
  },
  {
    "text": "that you've defined because it is possible the language allows it it's a technically possible thing and so the",
    "start": "2153110",
    "end": "2159260"
  },
  {
    "text": "normal code paths that you go down for enum conversions don't enforce this they'll let you convert some random enum",
    "start": "2159260",
    "end": "2165440"
  },
  {
    "text": "value you can even make this like a negative number like it can just be any number that can be converted to an in 32",
    "start": "2165440",
    "end": "2172250"
  },
  {
    "text": "will work so like we did what dotnet does we expose that over the Internet",
    "start": "2172250",
    "end": "2177260"
  },
  {
    "text": "and then we found later it's like oh this is a bad default for the web right this is a bad default for our users",
    "start": "2177260",
    "end": "2183400"
  },
  {
    "text": "another thing that comes up here I want to validate some data we have an email signup list I have a required",
    "start": "2183400",
    "end": "2189980"
  },
  {
    "text": "validator on this thing so I submit my email address that is my email address you can email me if you want I submit I",
    "start": "2189980",
    "end": "2197120"
  },
  {
    "text": "submit my my email request to sign up for this mailing list and it validates it and everything is fine cool let's do",
    "start": "2197120",
    "end": "2204680"
  },
  {
    "text": "something else what if I submit an empty I have a required validator on here oops that works the reason why that works is",
    "start": "2204680",
    "end": "2213500"
  },
  {
    "text": "that you'll be blown you might be blown away by this I might blow some minds but MVC never had support for this Web API",
    "start": "2213500",
    "end": "2221600"
  },
  {
    "text": "didn't need it it was not a feature we had so like validation attributes on parameters directly which is what my",
    "start": "2221600",
    "end": "2228350"
  },
  {
    "text": "code is doing I have a string email address with a required attribute on it it's legal the code compiles the data",
    "start": "2228350",
    "end": "2236150"
  },
  {
    "text": "annotations attribute which is from the dotnet BC all data annotations library that's been around forever allows being",
    "start": "2236150",
    "end": "2241790"
  },
  {
    "text": "put on parameters but we just never had this behavior it was never present in MVC it was not present in MVC one it was",
    "start": "2241790",
    "end": "2248120"
  },
  {
    "text": "not present in MVC two and like if your mind is blown by that you probably are thinking like well surely you can fix",
    "start": "2248120",
    "end": "2253730"
  },
  {
    "text": "this like why wouldn't you want that everybody would want that it seems obvious that that should work and the",
    "start": "2253730",
    "end": "2259910"
  },
  {
    "text": "answer is well we we felt the same way we really wanted this to work as well so we added it so I'm not gonna I'm not",
    "start": "2259910",
    "end": "2269030"
  },
  {
    "start": "2268000",
    "end": "2395000"
  },
  {
    "text": "going to show the second half of this which is that we were able to fix the bugs just for time but basically we were",
    "start": "2269030",
    "end": "2276200"
  },
  {
    "text": "able to fix all these things and the way that we're able to fix all these things is that we were able to come up with a",
    "start": "2276200",
    "end": "2281420"
  },
  {
    "text": "strategy for how we want to manage this and how we want to manage change going forward so a couple of things that we",
    "start": "2281420",
    "end": "2287150"
  },
  {
    "text": "thought about just just saying like semver and like semver means we can make",
    "start": "2287150",
    "end": "2292369"
  },
  {
    "text": "breaking changes I think it's not good enough like you can picture like if you seen The Hunchback of Notre Dom and you could",
    "start": "2292369",
    "end": "2297740"
  },
  {
    "text": "picture like running into the church yelling like semver like that's not good enough like we can't just say to our",
    "start": "2297740",
    "end": "2304609"
  },
  {
    "text": "users like we will break everything we will change everything in 3.0 it's gonna have all these subtle little things in",
    "start": "2304609",
    "end": "2310130"
  },
  {
    "text": "it that's not quite enough that's a little bit too harsh we could say we're",
    "start": "2310130",
    "end": "2315349"
  },
  {
    "text": "gonna just fix these things we're gonna just fix these things right that's not great either because it only works for",
    "start": "2315349",
    "end": "2321890"
  },
  {
    "text": "really small issues we can't really just fix the parameter validation thing because it affects a bunch of",
    "start": "2321890",
    "end": "2327470"
  },
  {
    "text": "extensibility we can't really just fix the exception formatter thing because it's a breaking change so you get in the",
    "start": "2327470",
    "end": "2334400"
  },
  {
    "text": "situation as a team or as a product owner where it's like well we can't change this stuff because it's too risky it's too expensive it hurts our",
    "start": "2334400",
    "end": "2340730"
  },
  {
    "text": "customers too much because all of these problems require a code change and a redeployment from our customers so not",
    "start": "2340730",
    "end": "2347599"
  },
  {
    "text": "only do you have to deploy upgrade to the new version of asp.net core and you",
    "start": "2347599",
    "end": "2352910"
  },
  {
    "text": "have to like deploy it somewhere you got to test everything to find these problems including invalid data and",
    "start": "2352910",
    "end": "2358730"
  },
  {
    "text": "that's why they're so risky second thing we could add more options or settings we",
    "start": "2358730",
    "end": "2363800"
  },
  {
    "text": "could take all these different things and we gonna say we could make all of these things optional behaviors that you can choose if you think that enum thing",
    "start": "2363800",
    "end": "2370220"
  },
  {
    "text": "really makes sense to you you can leave it the old way if you like the new behavior you want it to be validated",
    "start": "2370220",
    "end": "2375440"
  },
  {
    "text": "because you're saying you you opt into that the big problem with that big problems with that again only works for",
    "start": "2375440",
    "end": "2380750"
  },
  {
    "text": "small stuff with a really minimal impact and - when we add options they have to be off by default because otherwise",
    "start": "2380750",
    "end": "2386480"
  },
  {
    "text": "you're back at breaking changes so at best you can give people that know have a problem with workaround which is",
    "start": "2386480",
    "end": "2392800"
  },
  {
    "text": "not a great you know it's kind of the minimum you could do so what we did instead is we did this thing called compatibility switches and you can think",
    "start": "2392800",
    "end": "2399610"
  },
  {
    "start": "2395000",
    "end": "2560000"
  },
  {
    "text": "of it like a hybrid of sort of all those options if you have looked at your templates or you have looked at your",
    "start": "2399610",
    "end": "2406150"
  },
  {
    "text": "application at some point in your life since 2.0 and you're doing asp net core you have probably seen something like",
    "start": "2406150",
    "end": "2412510"
  },
  {
    "text": "this compatibility version 2.0 and you can see that we've got 2.1 2.2 we've got",
    "start": "2412510",
    "end": "2418300"
  },
  {
    "text": "all these different compatibility versions and it's it's as simple as it sounds right so every time we fix the",
    "start": "2418300",
    "end": "2423430"
  },
  {
    "text": "bug or we make a small change like this we do that in some release that fix that",
    "start": "2423430",
    "end": "2429670"
  },
  {
    "text": "change in behavior gets a switch that's associated with the version of that release so for you as an application",
    "start": "2429670",
    "end": "2436540"
  },
  {
    "text": "author you take your app you upgrade from two oh two to one you replace the",
    "start": "2436540",
    "end": "2442300"
  },
  {
    "text": "binaries right you get the package references two to one you follow all the migration guidance the migration call it",
    "start": "2442300",
    "end": "2448210"
  },
  {
    "text": "guidance calls out the things that have changed that are associated with compatibility switches because we think you should know about them and you can",
    "start": "2448210",
    "end": "2455560"
  },
  {
    "text": "leave that compatibility version at 2.0 for a while if you want like you can run",
    "start": "2455560",
    "end": "2461260"
  },
  {
    "text": "the two one binaries with with the two O behaviors and that's basically what compatibility switches give you you get",
    "start": "2461260",
    "end": "2466870"
  },
  {
    "text": "to take these things at your own pace and you're not blocked from getting like new features necessarily or new stuff",
    "start": "2466870",
    "end": "2473200"
  },
  {
    "text": "that requires 2.1 or performance improvements or minor bug fixes or platform upgrades so it gives you like a",
    "start": "2473200",
    "end": "2479500"
  },
  {
    "text": "smoother cliff to upgrade and integrate all these things the other thing that we do here is that on these options objects",
    "start": "2479500",
    "end": "2486790"
  },
  {
    "text": "I have to get I'm gonna have to get used to typing on this pedestal so you guys are gonna have to bear with me we have",
    "start": "2486790",
    "end": "2493390"
  },
  {
    "text": "got options for all the things that we add compatibility switches so this is that exception input format or one so if",
    "start": "2493390",
    "end": "2499630"
  },
  {
    "text": "you want to upgrade everything but for some reason you're like locked on this one you can leave it alone you can revert to the old behavior and you can",
    "start": "2499630",
    "end": "2506020"
  },
  {
    "text": "micromanage these things if you want to I don't know many people who do but it's there in case you need it the other",
    "start": "2506020",
    "end": "2511660"
  },
  {
    "text": "thing about this is that we declare we sort of declare amnesty for ourselves on major versions so we still can we still",
    "start": "2511660",
    "end": "2518380"
  },
  {
    "text": "intend to get rid of old busted stuff we still intend to make MVC the best version of MVC moving forward",
    "start": "2518380",
    "end": "2524000"
  },
  {
    "text": "but we want to give you like a really nice roadmap to move forward with these things and a really nice way to take",
    "start": "2524000",
    "end": "2530030"
  },
  {
    "text": "these upgrades and chunks we also reserve the right to leave old behaviors behind if they make sense to leave",
    "start": "2530030",
    "end": "2535580"
  },
  {
    "text": "behind as options doing this compatibility switch thing is good from our point of view because it gives us a",
    "start": "2535580",
    "end": "2541340"
  },
  {
    "text": "chance to get feedback from people and then if a lot of users are like well I really need this thing then great we're",
    "start": "2541340",
    "end": "2547040"
  },
  {
    "text": "gonna leave that thing and you can think about you can think about which option is better for you we'll decide a default",
    "start": "2547040",
    "end": "2553460"
  },
  {
    "text": "but if you like the old behavior you can keep it in some cases so that's the compatibility switch that's kind of the",
    "start": "2553460",
    "end": "2558560"
  },
  {
    "text": "journey that we've been on now why don't we have them in other areas of the stack we don't have the other we don't have",
    "start": "2558560",
    "end": "2565450"
  },
  {
    "text": "compatibility switches yet in other areas of the stack like in the HTTP layer simply because it hasn't come up",
    "start": "2565450",
    "end": "2571520"
  },
  {
    "text": "we haven't felt like there are issues that are sort of worthy of it in those parts of the stack because they're not as framework II and the kinds of",
    "start": "2571520",
    "end": "2578570"
  },
  {
    "text": "problems and solutions you have if you're a user are not not as thorny to work through but I'm not saying never we",
    "start": "2578570",
    "end": "2585200"
  },
  {
    "text": "might do it if there are good scenarios for it now I want to show some more code so we're going to talk about filters in",
    "start": "2585200",
    "end": "2590930"
  },
  {
    "start": "2588000",
    "end": "2640000"
  },
  {
    "text": "a little bit more depth and filters are this like power feature of MVC now I",
    "start": "2590930",
    "end": "2597650"
  },
  {
    "text": "showed you that list of actions before and we saw all those filters that are on all those things in particular API controller had like a million filters on",
    "start": "2597650",
    "end": "2604880"
  },
  {
    "text": "it and we're gonna examine a couple ideas for filters a couple things sort of about their nature and hopefully",
    "start": "2604880",
    "end": "2610790"
  },
  {
    "text": "you'll learn some stuff or get inspired by this so you notice in this some bugs",
    "start": "2610790",
    "end": "2617990"
  },
  {
    "text": "thing if I revert if I'm now that I'm into two I'm just gonna run it again while I'm talking about this now that",
    "start": "2617990",
    "end": "2624470"
  },
  {
    "text": "I'm running into two if I hit this crashing JSON exception an input formatter case which I want to crash",
    "start": "2624470",
    "end": "2630560"
  },
  {
    "text": "because it's an assembly load it's a deployment failure I am gonna get a friendly Jason error so here's my",
    "start": "2630560",
    "end": "2638300"
  },
  {
    "text": "exception here's my exception again I get this friendly JSON message here well",
    "start": "2638300",
    "end": "2643460"
  },
  {
    "text": "this is coming from my code and this is coming from a filter that I wrote so if I come down here to this errors folder I",
    "start": "2643460",
    "end": "2650599"
  },
  {
    "text": "have got this JSON exception filter attribute and if I look at where that is applied and I realize that's kind of",
    "start": "2650599",
    "end": "2657260"
  },
  {
    "text": "small I have got this on the bad format or controller so what you can learn about this is that well it kind of does the",
    "start": "2657260",
    "end": "2664430"
  },
  {
    "text": "obvious thing I've got this attribute on the controller which means I've applied this behavior to all the actions on my",
    "start": "2664430",
    "end": "2670130"
  },
  {
    "text": "controller if I wanted to apply this behavior to say my whole app there's a way to do that too which we'll see in a",
    "start": "2670130",
    "end": "2675260"
  },
  {
    "text": "little bit but looking at this guy a little bit more I'm gonna handle",
    "start": "2675260",
    "end": "2681350"
  },
  {
    "text": "exceptions that come from these actions I'm going to respond with some message with some severity level and I'm gonna",
    "start": "2681350",
    "end": "2688520"
  },
  {
    "text": "put that an object result and give it a 500 which is basically saying like you're gonna write this to Jay as JSON or XML I want to do something with this",
    "start": "2688520",
    "end": "2696020"
  },
  {
    "text": "severity thing so I've got the default I've got the default sort of setting",
    "start": "2696020",
    "end": "2701900"
  },
  {
    "text": "here for severity set at nah relax it's okay like could I change this setting",
    "start": "2701900",
    "end": "2707510"
  },
  {
    "text": "well sure I could I could modify the code right but could I build a system such that this severity level can be",
    "start": "2707510",
    "end": "2715820"
  },
  {
    "text": "like toggled up and down for individual actions one thing that I could do is I",
    "start": "2715820",
    "end": "2721190"
  },
  {
    "text": "could make this like a parameter of this filter that's kind of obvious right but what if the severity is a part of like",
    "start": "2721190",
    "end": "2728330"
  },
  {
    "text": "multiple filters or like multiple systems need to interact with this severity I don't want a couple it to the",
    "start": "2728330",
    "end": "2734030"
  },
  {
    "text": "exception handler if I'm using that severity also for logging and different things like that I might need to use it",
    "start": "2734030",
    "end": "2739700"
  },
  {
    "text": "for multiple places so I want to build it in a way that's D couple how can I do that well this filter is an example of",
    "start": "2739700",
    "end": "2746840"
  },
  {
    "text": "something that I'd refer to as an active filter meaning that it implements an interface it does something so this on",
    "start": "2746840",
    "end": "2754460"
  },
  {
    "text": "exception method hooks up to the invoker and is part of a life cycle to kind of you know do stuff around your controller",
    "start": "2754460",
    "end": "2760730"
  },
  {
    "text": "or like meta program your controller but I can also have filters that are what I refer to as passive filters or as",
    "start": "2760730",
    "end": "2767000"
  },
  {
    "text": "metadata and as an example of that I have created this JSON severity X",
    "start": "2767000",
    "end": "2772520"
  },
  {
    "text": "attribute now the only thing that you really need to know about this the only thing that makes this special is this I",
    "start": "2772520",
    "end": "2778490"
  },
  {
    "text": "filter metadata and I exception severity so this I filter metadata is an NBC type",
    "start": "2778490",
    "end": "2784550"
  },
  {
    "text": "and it basically says to the framework when you see this on a controller or on a global or somewhere",
    "start": "2784550",
    "end": "2791010"
  },
  {
    "text": "I want you to retain that information so that I can get it later so if you've",
    "start": "2791010",
    "end": "2796770"
  },
  {
    "text": "ever find yourself like writing filters where you do reflection over your own code what attribute is applied to what",
    "start": "2796770",
    "end": "2802410"
  },
  {
    "text": "there's a better way to do that and I mean I'm going to show you that right now so if I come to the startup class of",
    "start": "2802410",
    "end": "2808109"
  },
  {
    "text": "this one thing that I can do is I can add this thing as a filter so a filter",
    "start": "2808109",
    "end": "2817560"
  },
  {
    "text": "is add and I'm making it a global filter say exception severity attribute and I'm",
    "start": "2817560",
    "end": "2825240"
  },
  {
    "text": "gonna say that the severity is going to be someone should look into that because somebody really should look into that",
    "start": "2825240",
    "end": "2830430"
  },
  {
    "text": "I'm gonna add this as a global filter which means that for any action in my application I should be able to look at",
    "start": "2830430",
    "end": "2837180"
  },
  {
    "text": "that I should be able to look at the set of filters or the set of data associated with actions and I should be able to see",
    "start": "2837180",
    "end": "2842730"
  },
  {
    "text": "this policy applied to it or this metadata applied to it and then the other change that I have to make is here inside my exception I have to get that",
    "start": "2842730",
    "end": "2850320"
  },
  {
    "text": "data so I can do something like this I can save our policy equals two contacts",
    "start": "2850320",
    "end": "2856500"
  },
  {
    "text": "dot find effective policy and I'm gonna put in the eye exception severity",
    "start": "2856500",
    "end": "2861780"
  },
  {
    "text": "interface so I'm basically going to look at the collection of metadata for the current action and I'm gonna see do we",
    "start": "2861780",
    "end": "2868710"
  },
  {
    "text": "have a policy apply to this action that sets the exception severity and then inside here I'm gonna use that because I",
    "start": "2868710",
    "end": "2875490"
  },
  {
    "text": "should probably use it and we might not have one so question mark dot and we're",
    "start": "2875490",
    "end": "2881730"
  },
  {
    "text": "going to use the severity and then fall back to this just just relax nobody cares about the severity of this thing",
    "start": "2881730",
    "end": "2887880"
  },
  {
    "text": "then it's probably not that important and then to sort of prove that this works I'm going to go to my bad my bad",
    "start": "2887880",
    "end": "2893970"
  },
  {
    "text": "controller here and I'm going to put a exception severity on my controller",
    "start": "2893970",
    "end": "2900230"
  },
  {
    "text": "we're on this action so I can put my exception severity here assumption",
    "start": "2900230",
    "end": "2908730"
  },
  {
    "text": "severity severity and we'll say that this is this is on fire this is really",
    "start": "2908730",
    "end": "2914460"
  },
  {
    "text": "important so if I run this again what's going to happen is I've got this sort of default of like everything is cool",
    "start": "2914460",
    "end": "2920820"
  },
  {
    "text": "applied to everything but then I've I've overridden that meta I've specified a more specific metadata",
    "start": "2920820",
    "end": "2926859"
  },
  {
    "text": "for just an action so if I run this now I get my exception like I expected and",
    "start": "2926859",
    "end": "2932680"
  },
  {
    "text": "then I get down here and it says that everything is on fire which is just what I wanted so filters already have this",
    "start": "2932680",
    "end": "2938380"
  },
  {
    "text": "kind of like scoping policy or this scoping behavior where like if you put",
    "start": "2938380",
    "end": "2943869"
  },
  {
    "text": "something on an action it's considered more specific than something on a controller which is more specific than something that's global they're all",
    "start": "2943869",
    "end": "2950020"
  },
  {
    "text": "kinds of ways to control the ordering of things and filters but you can do that to build these systems that do metadata",
    "start": "2950020",
    "end": "2955599"
  },
  {
    "text": "or kind of like build your own extensibility into things in a way that works the way that's copyist if you",
    "start": "2955599",
    "end": "2961150"
  },
  {
    "text": "think about how you'd want that to behave right an attribute on the method is more specific than an attribute on the class and so on so what else can we",
    "start": "2961150",
    "end": "2968380"
  },
  {
    "text": "do with this well if I wanted to let's say my application really takes off because people love this app and let's",
    "start": "2968380",
    "end": "2975609"
  },
  {
    "text": "say that I have got a bunch of places that I have this JSON exception filter sprinkled around that's kind of annoying",
    "start": "2975609",
    "end": "2981339"
  },
  {
    "text": "because what if I forget to leave it off then my error handling is incorrect what can I do about that well one thing that I could do about",
    "start": "2981339",
    "end": "2988569"
  },
  {
    "text": "that is I could come back to the startup and I could also make this a global filter so I'm gonna add that filter here",
    "start": "2988569",
    "end": "2995680"
  },
  {
    "text": "as well Chason exception filter",
    "start": "2995680",
    "end": "3002400"
  },
  {
    "text": "attribute and now this should be fired this should be wired up to all the actions so can anybody guess the problem",
    "start": "3002400",
    "end": "3008760"
  },
  {
    "text": "with this well the problem with this is I've applied it at the global level so if there's any actions that I don't want",
    "start": "3008760",
    "end": "3014430"
  },
  {
    "text": "Jason handling for or I don't want to treat errors as Jason like say an action that's supposed to be used from the UI",
    "start": "3014430",
    "end": "3020099"
  },
  {
    "text": "then it's going to give me the JSON error even though I didn't want it",
    "start": "3020099",
    "end": "3026670"
  },
  {
    "start": "3024000",
    "end": "3144000"
  },
  {
    "text": "because it's applied globally so could we do something smarter and the answer is you can you can do some of the kinds",
    "start": "3026670",
    "end": "3033089"
  },
  {
    "text": "of things that we do internally I want to introduce something now called application model I'm gonna move kind of quickly through this but if there's",
    "start": "3033089",
    "end": "3040530"
  },
  {
    "text": "anything that you take from this this is how features like API controller that are really powerful and smart are built",
    "start": "3040530",
    "end": "3045780"
  },
  {
    "text": "is for us through sort of a combination of filters and something called the application model so I'm gonna nuke this",
    "start": "3045780",
    "end": "3051990"
  },
  {
    "text": "because we already know the problem with that and I'm going to come back here say options dot convened",
    "start": "3051990",
    "end": "3057289"
  },
  {
    "text": "add and I've already written this new JSON exception filter convention and how",
    "start": "3057289",
    "end": "3065999"
  },
  {
    "text": "this is going to work is I define this convention and I've made it a controller",
    "start": "3065999",
    "end": "3071519"
  },
  {
    "text": "model Convention which means it's going to evaluate once per controller in the app and what I get here is I get this",
    "start": "3071519",
    "end": "3077640"
  },
  {
    "text": "thing called a controller model and this has got a bunch of different junk on it so it's got the list of actions and it's",
    "start": "3077640",
    "end": "3083670"
  },
  {
    "text": "got models for each action it's got the controller name the controller type it's got the collection of attributes so you",
    "start": "3083670",
    "end": "3089880"
  },
  {
    "text": "don't have to query them yourself if you don't want to it has got the set of filters it's got a property bag that you",
    "start": "3089880",
    "end": "3095549"
  },
  {
    "text": "can dump things in and it's got all the routing information as well so what I can do with this is I could apply my",
    "start": "3095549",
    "end": "3101940"
  },
  {
    "text": "Jason behavior to just my AP eyes and I could do that by saying something like this is API controller controller and I",
    "start": "3101940",
    "end": "3109799"
  },
  {
    "text": "kind of duplicated some logic from the framework here we should probably make this available but I'm basically saying if you've got the API controller",
    "start": "3109799",
    "end": "3116220"
  },
  {
    "text": "attribute or if it's applied at the assembly level then it's an API controller so if is API controller",
    "start": "3116220",
    "end": "3121579"
  },
  {
    "text": "control our filters add new Jason exception filter attribute and this has",
    "start": "3121579",
    "end": "3127829"
  },
  {
    "text": "done the same thing as we did before of I'm gonna apply this Jason air handling policy but it's just going to be limited",
    "start": "3127829",
    "end": "3134700"
  },
  {
    "text": "to your api's and it's kind of like out of sight out of mind right like if you're the if you're the person who",
    "start": "3134700",
    "end": "3139710"
  },
  {
    "text": "manages infrastructure for your team and a lot of other people sort of manage the code or work on different parts of the",
    "start": "3139710",
    "end": "3145319"
  },
  {
    "start": "3144000",
    "end": "3198000"
  },
  {
    "text": "application like it's a good way to kind of like make sure that policies like this are being applied uniformly and are",
    "start": "3145319",
    "end": "3151859"
  },
  {
    "text": "being like rolled out in ways that make sense for your team and kind of manage centrally so think about doing some of",
    "start": "3151859",
    "end": "3159329"
  },
  {
    "text": "these things if it appeals to you so when you look at like API controller API controller that attribute is effectively",
    "start": "3159329",
    "end": "3165059"
  },
  {
    "text": "just that code I showed you times like five where we say we have a bunch of conventions that say is this an API",
    "start": "3165059",
    "end": "3171539"
  },
  {
    "text": "controller if it is an API controller register a filter that filter does something like automatically respond",
    "start": "3171539",
    "end": "3177390"
  },
  {
    "text": "with your validation errors so there's kind of a difference there that gets drawn out pretty quickly between",
    "start": "3177390",
    "end": "3182579"
  },
  {
    "text": "something like Razer pages which has a lot of special behaviors but those behaviors are built into the framework",
    "start": "3182579",
    "end": "3188099"
  },
  {
    "text": "they're kind of baked versus something like API controller it's just a controller all those behaviors are layered on top all done",
    "start": "3188099",
    "end": "3195070"
  },
  {
    "text": "with conventions and filters very powerful stuff I'm gonna quickly move",
    "start": "3195070",
    "end": "3200080"
  },
  {
    "start": "3198000",
    "end": "3419000"
  },
  {
    "text": "through some more slides because I'm a little bit behind where I want it to be I want to show you a little bit more",
    "start": "3200080",
    "end": "3205210"
  },
  {
    "text": "stuff so let's talk about middleware and filters real quick middleware are this",
    "start": "3205210",
    "end": "3210730"
  },
  {
    "text": "pipeline right there this decorator pattern or this chain of command pick whichever description you like archana",
    "start": "3210730",
    "end": "3216010"
  },
  {
    "text": "responsibility you run logic you call max to run logic you call next it's got an async before/after pattern run code",
    "start": "3216010",
    "end": "3222640"
  },
  {
    "text": "before something run code after something filters essentially do the same thing but there are more different",
    "start": "3222640",
    "end": "3228040"
  },
  {
    "text": "ways to do it more stages more information about MVC in there if we could compare those they're both ordered",
    "start": "3228040",
    "end": "3234130"
  },
  {
    "text": "pipelines they're both terminal in the sense they both can be terminal meaning that they allow you to short-circuit right so do",
    "start": "3234130",
    "end": "3240490"
  },
  {
    "text": "you think about a security middleware it's gonna short-circuit you say you're not authorized go away they can mutate",
    "start": "3240490",
    "end": "3246460"
  },
  {
    "text": "the request in response to effect what happens after them or on the way out but",
    "start": "3246460",
    "end": "3252490"
  },
  {
    "text": "then they start to become different middleware all happened before routing and so they don't know anything about routing they don't know anything about",
    "start": "3252490",
    "end": "3258790"
  },
  {
    "text": "your actions they can't look at your filters they can't look at your metadata they can't do anything like that they are global filters can be scoped they",
    "start": "3258790",
    "end": "3266410"
  },
  {
    "text": "can be applied with conventions they can be applied statically at all different levels of granularity middleware since",
    "start": "3266410",
    "end": "3273130"
  },
  {
    "text": "they all appear in your startup code in a simple like kind of single order it's very easy to reason about the order that",
    "start": "3273130",
    "end": "3278859"
  },
  {
    "text": "they run in whereas filters like the ordering between them is kind of opaque right it's complicated there are many",
    "start": "3278859",
    "end": "3285340"
  },
  {
    "text": "phases and the tools that you have for ordering them are pretty poor middleware",
    "start": "3285340",
    "end": "3290470"
  },
  {
    "text": "supports many things that filters do we have many implementations that are",
    "start": "3290470",
    "end": "3295720"
  },
  {
    "text": "common between filters and middleware like cores like response caching but we",
    "start": "3295720",
    "end": "3303790"
  },
  {
    "text": "also have some things that are just implemented in filters like authorization there has never been an",
    "start": "3303790",
    "end": "3309070"
  },
  {
    "text": "authorization middleware in MVC if you want to secure a middleware and have it check that the user is logged in sorry",
    "start": "3309070",
    "end": "3315760"
  },
  {
    "text": "you're gonna have to write some code because we don't provide an authorization middleware so we've kind of siloed ourselves here by putting",
    "start": "3315760",
    "end": "3322810"
  },
  {
    "text": "bunch of things in both places in duplicating the code we put a bunch of things in MVC where they're tied to MVC",
    "start": "3322810",
    "end": "3328690"
  },
  {
    "text": "and that's really the only way to use them but there are more frameworks than MVC there are good they're good",
    "start": "3328690",
    "end": "3334090"
  },
  {
    "text": "community projects like Carter or like Nancy FX and there are other frameworks in Microsoft ship like signal R or like",
    "start": "3334090",
    "end": "3342220"
  },
  {
    "text": "soon to be Razer components right and we have the sort of challenge of like well if we build signal R we built something",
    "start": "3342220",
    "end": "3349030"
  },
  {
    "text": "like that what features do we have to duplicate now inside of this thing and provide different ways of getting at",
    "start": "3349030",
    "end": "3354840"
  },
  {
    "text": "because it's separate and we can't reuse what's in MVC so wouldn't it be cool if we had a way",
    "start": "3354840",
    "end": "3361510"
  },
  {
    "text": "to take the best of both of these things so now we're talking a little bit about 3.0 and if you've heard about end point",
    "start": "3361510",
    "end": "3366580"
  },
  {
    "text": "routing and you see me you know the preview to announcement blog post anything like that endpoints are a new",
    "start": "3366580",
    "end": "3372760"
  },
  {
    "text": "primitive that's part of the middleware pipeline and inside the middleware it's",
    "start": "3372760",
    "end": "3378400"
  },
  {
    "text": "it's like the middleware pipeline but it's got routing as well so you can",
    "start": "3378400",
    "end": "3383860"
  },
  {
    "text": "think of it as like if middleware had access to routing information if middleware had access to filters if",
    "start": "3383860",
    "end": "3388900"
  },
  {
    "text": "middleware could do all those things that they could do so in this model endpoints a new primitive and it's basically a middleware plus metadata",
    "start": "3388900",
    "end": "3395950"
  },
  {
    "text": "it's a middleware that you can ask things about what are your interests where did you come from what are you doing here what's your course policy you",
    "start": "3395950",
    "end": "3402550"
  },
  {
    "text": "know that kinds of kinds of small talk kinds of things in this mode you've got middleware acting as the active filters",
    "start": "3402550",
    "end": "3409420"
  },
  {
    "text": "so things that do stuff our middleware and the metadata themselves are the passive filters meaning that they just",
    "start": "3409420",
    "end": "3415600"
  },
  {
    "text": "apply data to things and we think that that combines the best of the two systems and a lot of this stuff is still",
    "start": "3415600",
    "end": "3420640"
  },
  {
    "start": "3419000",
    "end": "3600000"
  },
  {
    "text": "being developed and is still sort of being worked towards here and I am basically out of time so I'm going to kind of introduce this and I might show",
    "start": "3420640",
    "end": "3427090"
  },
  {
    "text": "one quick demo but I am basically going to be out of time here so let's take a",
    "start": "3427090",
    "end": "3433060"
  },
  {
    "text": "look at this future application that I've built and this is based on preview",
    "start": "3433060",
    "end": "3438370"
  },
  {
    "text": "too so I have got this use routing method and it's going to look kind of similar to what you might have today",
    "start": "3438370",
    "end": "3444370"
  },
  {
    "text": "where you've got MVC you've got some routes for MVC but you've also can have random lambdas you also can have a",
    "start": "3444370",
    "end": "3452310"
  },
  {
    "text": "random function here you also can have health checks and it's all just routing now wouldn't",
    "start": "3452310",
    "end": "3459130"
  },
  {
    "text": "it be cool if you could apply metadata to these things so what if I could say",
    "start": "3459130",
    "end": "3464650"
  },
  {
    "text": "on my health check I'm going to add my",
    "start": "3464650",
    "end": "3470609"
  },
  {
    "text": "Jason exception policy which is similar",
    "start": "3470670",
    "end": "3476470"
  },
  {
    "text": "to the thing that we just showed in last thing what if I could take that Jason exception handler behavior and I could",
    "start": "3476470",
    "end": "3482560"
  },
  {
    "text": "attach that to a health check what if I could take this thing that is going to",
    "start": "3482560",
    "end": "3488260"
  },
  {
    "text": "map all my routes and I could say I want that to require authorization which this",
    "start": "3488260",
    "end": "3493810"
  },
  {
    "text": "is basically the equivalent of like the authorize attribute from NBC what if I could start sprinkling this stuff all",
    "start": "3493810",
    "end": "3499930"
  },
  {
    "text": "around different things and what solves the problem about this or what problem solved here that that I like is",
    "start": "3499930",
    "end": "3506260"
  },
  {
    "text": "something like health checks doesn't know anything about authorization or JSON exception handling or any of these",
    "start": "3506260",
    "end": "3512500"
  },
  {
    "text": "other kind of cross-cutting features it just kind of come for free they're just kind of part of the middleware pipeline and then to kind of show I'm not going",
    "start": "3512500",
    "end": "3521020"
  },
  {
    "text": "to be able to tie it to show my whole demo unfortunately but I want to show one thing real quick which is I'm gonna",
    "start": "3521020",
    "end": "3526330"
  },
  {
    "text": "run this application and I'm going to show you basically some of the same information that we saw at the front and",
    "start": "3526330",
    "end": "3532540"
  },
  {
    "text": "I'm done that running because I can't get Visual Studio to do this for whatever reason so I'll figure that out later but I'm going to show you the same",
    "start": "3532540",
    "end": "3538900"
  },
  {
    "text": "kind of information that we had before when we had our list of actions and things like that I don't know why this",
    "start": "3538900",
    "end": "3545320"
  },
  {
    "text": "is taking so long they would also like me to remind you to please evaluate the",
    "start": "3545320",
    "end": "3551950"
  },
  {
    "text": "session on your way out thank you I don't know why this is taking so long",
    "start": "3551950",
    "end": "3558580"
  },
  {
    "text": "there it goes okay so let's grab this real quick the rest of my demo by the",
    "start": "3558580",
    "end": "3564160"
  },
  {
    "text": "way which I'm not going to be able to get to unfortunately was to code up that whole flow that you saw with the",
    "start": "3564160",
    "end": "3570700"
  },
  {
    "text": "exception handling Jason thing with middleware and with the same set of features with middleware and then be",
    "start": "3570700",
    "end": "3577089"
  },
  {
    "text": "able to also apply those kind of policies with the same level of granularity to both those lambdas and",
    "start": "3577089",
    "end": "3582339"
  },
  {
    "text": "health checks and your actions and all that stuff in one system all with middleware so you can see you've got your home",
    "start": "3582339",
    "end": "3589220"
  },
  {
    "text": "controller you've got your endpoints list and you've got all these other lambda things here also listed with",
    "start": "3589220",
    "end": "3594890"
  },
  {
    "text": "their own metadata so you can see I've got my adjacent exception metadata actually beat here in fact I've got two because I love it so we're starting to",
    "start": "3594890",
    "end": "3602750"
  },
  {
    "text": "have a lot of the same things that we have with MVC but it's sort of a middle layer kind of level and a more primitive",
    "start": "3602750",
    "end": "3608599"
  },
  {
    "text": "kind of level that like other frameworks and other very low level things can take advantage of so it's like kind of",
    "start": "3608599",
    "end": "3614720"
  },
  {
    "text": "sharing all the love of MVC out with the world so anyway I'm going to have to end there cuz I'm over time and I want to",
    "start": "3614720",
    "end": "3620779"
  },
  {
    "text": "let you guys have your break it's the end so thank you very much for listening and being good audience and please feel",
    "start": "3620779",
    "end": "3627559"
  },
  {
    "text": "free to reach out to me on Twitter or github if you have questions or things you want to talk about asp net asp net",
    "start": "3627559",
    "end": "3633079"
  },
  {
    "text": "core is always the best place to post issues or ask questions and if you enjoy the rest of the day",
    "start": "3633079",
    "end": "3638220"
  },
  {
    "text": "[Applause]",
    "start": "3638220",
    "end": "3645000"
  },
  {
    "text": "[Music]",
    "start": "3645000",
    "end": "3649380"
  }
]