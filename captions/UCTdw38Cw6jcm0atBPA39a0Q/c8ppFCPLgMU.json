[
  {
    "text": "thank you very much for attending as I'm sure some of you are aware Cuban at that",
    "start": "3430",
    "end": "9160"
  },
  {
    "text": "moment is gaining love excitement a lot of traction within the community and people are very keen to explore how we",
    "start": "9160",
    "end": "15100"
  },
  {
    "text": "can change the way we're deploying software and how we can improve and introduce more resilience and",
    "start": "15100",
    "end": "21759"
  },
  {
    "text": "reliability into our deployments and this is what I want to focus on today but in particular how do you do that",
    "start": "21759",
    "end": "27429"
  },
  {
    "text": "when you're deploying existing Windows applications and working within existing Windows applications and how does that",
    "start": "27429",
    "end": "33490"
  },
  {
    "text": "look like when we want to use cool new shiny technology like kubernetes but at the same time we'll also cover if you're",
    "start": "33490",
    "end": "39910"
  },
  {
    "text": "building garnett core and window dynacord linux how that works on our capabilities and fundamentally how can",
    "start": "39910",
    "end": "47560"
  },
  {
    "text": "we get the most out there what will it bring to our companies if we decide to adopt him bring it into our stack so my",
    "start": "47560",
    "end": "54040"
  },
  {
    "text": "name is Ben Hall I am I am based here in London and I'm the founder of a project",
    "start": "54040",
    "end": "59290"
  },
  {
    "text": "or company called cat coda cutter coda is an interactive learning platform for software developers so directly in your",
    "start": "59290",
    "end": "66520"
  },
  {
    "text": "browser you get given pre-configured environments with kubernetes clusters or openshift or in this case docker and",
    "start": "66520",
    "end": "73570"
  },
  {
    "text": "alongside that you get step-by-step instructions about how you can solve particular problems like how do you",
    "start": "73570",
    "end": "79270"
  },
  {
    "text": "deploy kubernetes or how do you deploy in configure applications running on top of it and it's all available for free so",
    "start": "79270",
    "end": "85000"
  },
  {
    "text": "after technology after you've heard all about the awesome technologies I want to explain you can go and try for free on",
    "start": "85000",
    "end": "91030"
  },
  {
    "text": "Captain coda without having to download or install anything so are they",
    "start": "91030",
    "end": "96159"
  },
  {
    "text": "introduced I want to start with an introduction and provide a fun event fundamental foundations into how do you",
    "start": "96159",
    "end": "102729"
  },
  {
    "text": "build these new Windows containers what makes them different to Linux and why am I excited about the",
    "start": "102729",
    "end": "108790"
  },
  {
    "text": "possibilities will then take those containers and will deploy them onto kubernetes we'll look at what kubernetes",
    "start": "108790",
    "end": "114640"
  },
  {
    "text": "brings to the party and why everyone again so excited about the possibilities",
    "start": "114640",
    "end": "119650"
  },
  {
    "text": "it's bringing and because we're dealing with production and we're dealing with infrastructure we'll look at actually",
    "start": "119650",
    "end": "125080"
  },
  {
    "text": "what does that look like in reality what the day-to-day operations that you can be concerned with and how do you many",
    "start": "125080",
    "end": "130269"
  },
  {
    "text": "things like monitoring and making sure that your applications are working when you're deploying into these cloud",
    "start": "130269",
    "end": "136220"
  },
  {
    "text": "based solutions so I'm sure that many of us have explored and play with darker",
    "start": "136220",
    "end": "141740"
  },
  {
    "text": "and so far but for those who are coming into the topic fresh containers allow us",
    "start": "141740",
    "end": "147080"
  },
  {
    "text": "to take complex software which can be off-the-shelf and configured by vendors or what we've built internally in our",
    "start": "147080",
    "end": "153350"
  },
  {
    "text": "own applications and packaged up and launched a process docker fundamentally is a process manager when you start that",
    "start": "153350",
    "end": "160610"
  },
  {
    "text": "container all if they're in if start in the Linux process or the windows process or Windows containers and making that",
    "start": "160610",
    "end": "166970"
  },
  {
    "text": "available exactly as if we installed the package and ran it directly the main benefit of that is how they keep it for",
    "start": "166970",
    "end": "173720"
  },
  {
    "text": "cure so they use certain features within the Linux kernel to make sure that the thumb boxed and separated out and",
    "start": "173720",
    "end": "179360"
  },
  {
    "text": "isolated from other things running on our machine and that means if something goes slightly corrupted or malicious or",
    "start": "179360",
    "end": "187880"
  },
  {
    "text": "they actually get accidentally get hacked into they can't interfere with the rest of the system they can't take",
    "start": "187880",
    "end": "193160"
  },
  {
    "text": "things down and they can't breach and intact as a part we it also means is",
    "start": "193160",
    "end": "199310"
  },
  {
    "text": "because we've got these containers they get packaged up at these docker images and leave docker images contain",
    "start": "199310",
    "end": "204560"
  },
  {
    "text": "everything with that process or that application needs in order to be able to start so in the case of difficult server",
    "start": "204560",
    "end": "213380"
  },
  {
    "text": "we've got the new version a sequel server where I have been recently ported over to Linux and as part of that you",
    "start": "213380",
    "end": "218810"
  },
  {
    "text": "will have to seek with server packages it will also have a base operating system and all in the files it needs so",
    "start": "218810",
    "end": "224120"
  },
  {
    "text": "example debian or boo to or sent off if you're interested in more of the Red Hat",
    "start": "224120",
    "end": "230030"
  },
  {
    "text": "side of the wheel community and it has a configuration by default setting and everything you need so now if you want",
    "start": "230030",
    "end": "237080"
  },
  {
    "text": "to launch vehicle server on Linux you would do da cavern this will launch a",
    "start": "237080",
    "end": "242600"
  },
  {
    "text": "container you've had some nice environment variables because it is still sequel server after all so we accept the end-user License Agreement",
    "start": "242600",
    "end": "249019"
  },
  {
    "text": "we've had nice secure passwords open up the port so we can access it in this",
    "start": "249019",
    "end": "254269"
  },
  {
    "text": "case the default port for sequel server is 1433 and then the name of the image and if it's not on our machine already",
    "start": "254269",
    "end": "261560"
  },
  {
    "text": "or go off and download it and winter has been downloaded it will launch process and now we have a full version of sequel",
    "start": "261560",
    "end": "268070"
  },
  {
    "text": "server winning and so this provides us a lot of benefit and a lot of bandages but it's not just",
    "start": "268070",
    "end": "273190"
  },
  {
    "text": "web processes and databases that are beneficial and helpful when we're dealing with containers we can also",
    "start": "273190",
    "end": "278980"
  },
  {
    "text": "verse win day to day development tools and we convened on for example the usual command line we can launch that directly",
    "start": "278980",
    "end": "285010"
  },
  {
    "text": "from either container and as a containerized process and so we don't",
    "start": "285010",
    "end": "290140"
  },
  {
    "text": "have to worry about how do you install it what positions the Python do you need and what's a different configuration and",
    "start": "290140",
    "end": "295780"
  },
  {
    "text": "what it interfere or greater are the things running on my system instead we've launched out the process we solve",
    "start": "295780",
    "end": "300850"
  },
  {
    "text": "the problem we need to solve we stop it and it can get completely with me from our machines without side effects or",
    "start": "300850",
    "end": "306700"
  },
  {
    "text": "without anything left behind and so this helps have move and change and experiment with different technologies",
    "start": "306700",
    "end": "311800"
  },
  {
    "text": "are a lot more effectively but for most of time the real benefit is when we want to deploy our own applications either",
    "start": "311800",
    "end": "318400"
  },
  {
    "text": "container and we want to deploy what we're building in a more streamlined",
    "start": "318400",
    "end": "323470"
  },
  {
    "text": "more standardized packaged up way and so instead of worrying about different versions of.net being installed in",
    "start": "323470",
    "end": "329860"
  },
  {
    "text": "development teams laptop to stage in a build agent to production by having everything packaged up at if duct image",
    "start": "329860",
    "end": "336040"
  },
  {
    "text": "we can streamline that and we can be confident that what we're building and testing against it's actually the same",
    "start": "336040",
    "end": "341800"
  },
  {
    "text": "exact version as what would be winning in production no matter where it's going whether it be bare metal cloud or hybrid",
    "start": "341800",
    "end": "348670"
  },
  {
    "text": "type solutions and so in this case I'm going to build a very simple hello world",
    "start": "348670",
    "end": "356230"
  },
  {
    "text": "application as an asp.net core it's going to be targeting Linux initially",
    "start": "356230",
    "end": "361870"
  },
  {
    "text": "and then we'll look at Windows and put the application quite simple it returns the machine name and so in this case",
    "start": "361870",
    "end": "367750"
  },
  {
    "text": "when you launch a container the machine name of which application thinks it's going on it's the name of the container",
    "start": "367750",
    "end": "373630"
  },
  {
    "text": "itself and so that when you're raising error messages if your application does happen to have an unfortunate event by",
    "start": "373630",
    "end": "380770"
  },
  {
    "text": "tracking the name of the machine helps you track down to the container which was actually winning it and I thought it's a helpful trick for debugging and",
    "start": "380770",
    "end": "387400"
  },
  {
    "text": "so in this case that's what I've been focusing on the second important part of a containerized application is the IP",
    "start": "387400",
    "end": "394210"
  },
  {
    "text": "address which and the application is listening on so by default certain applications will listen on 170 Ivy",
    "start": "394210",
    "end": "401950"
  },
  {
    "text": "Rhoda what and so that will only live in free quests coming in on the local loopback",
    "start": "401950",
    "end": "407080"
  },
  {
    "text": "network card and so this makes sure that things from the outside can't accidently access it which is very nice and very",
    "start": "407080",
    "end": "413380"
  },
  {
    "text": "secure very secure but when we're in a container obviously the network were not obviously",
    "start": "413380",
    "end": "419680"
  },
  {
    "text": "when we're in a container to the network interface for the container is not the local loopback of our host machine it's",
    "start": "419680",
    "end": "425620"
  },
  {
    "text": "a different network interface and so if it's only accepting requests from the local interface it's only accepting",
    "start": "425620",
    "end": "432460"
  },
  {
    "text": "requests from within the container because that everything is Fanbox know that everything is isolated and so what",
    "start": "432460",
    "end": "438099"
  },
  {
    "text": "we need to do is actually within our configuration be very explicit and say like actually please listen to all IP",
    "start": "438099",
    "end": "443860"
  },
  {
    "text": "addresses and requests from all available network cards and network interfaces and in this case started in",
    "start": "443860",
    "end": "450789"
  },
  {
    "text": "by binding to zero zero zero dot one and it allows us to receive network traffic from other containers and other parts of",
    "start": "450789",
    "end": "457599"
  },
  {
    "text": "the system a very common problem which I spent many hours debugging about why my",
    "start": "457599",
    "end": "463990"
  },
  {
    "text": "application isn't responding to over them and that's just because it wasn't under my IP address so two key things to",
    "start": "463990",
    "end": "469659"
  },
  {
    "text": "be aware of when you're looking at containerization for apps so now we want to start taking this application and",
    "start": "469659",
    "end": "475360"
  },
  {
    "text": "turn it into a docker image once we have this docker image which defines the",
    "start": "475360",
    "end": "480430"
  },
  {
    "text": "structure of the application we can start it and turn it into a container which is just a winning process based on",
    "start": "480430",
    "end": "487090"
  },
  {
    "text": "that image and so to do this we need a docker file a docker file is a list of",
    "start": "487090",
    "end": "492819"
  },
  {
    "text": "instructions which define what our application needs and how it's been built so in this case we're defining our",
    "start": "492819",
    "end": "498789"
  },
  {
    "text": "base dependencies we're saying we want dotnet we want 1.1.1 and we would like the estate sdk to link and so based on",
    "start": "498789",
    "end": "505930"
  },
  {
    "text": "the naming convention that Mike's often produce when they produce their base docker image that is the name which we",
    "start": "505930",
    "end": "513578"
  },
  {
    "text": "need to find and so if they've got done that I already installed everything configured and so we can use that and",
    "start": "513579",
    "end": "518890"
  },
  {
    "text": "then be confident that we have all of the talling we need in order to be able to successfully build and publish our",
    "start": "518890",
    "end": "525520"
  },
  {
    "text": "binarism dotnet and so in this case our net we have done that with store which",
    "start": "525520",
    "end": "531190"
  },
  {
    "text": "will pull over the package with him from NuGet and put them into our container we copy all of our sauce",
    "start": "531190",
    "end": "536320"
  },
  {
    "text": "load into the directory and then we can win dotnet publish and build our nice dealer to critical thing that the bottom",
    "start": "536320",
    "end": "544690"
  },
  {
    "text": "are from metadata about how the application is functioning and how the application is configured and so the",
    "start": "544690",
    "end": "550780"
  },
  {
    "text": "first thing we do is say what port the application is listening on and so when this image is being win in production",
    "start": "550780",
    "end": "557440"
  },
  {
    "text": "this metadata that exposed can be interrogated and it can be used so that people don't need to figure out how the",
    "start": "557440",
    "end": "564250"
  },
  {
    "text": "application is configured but it also help things like kubernetes understand the structure of your application it can",
    "start": "564250",
    "end": "570160"
  },
  {
    "text": "use them mint infer that and help it by automatically configuring different requirements and then finally at the",
    "start": "570160",
    "end": "576370"
  },
  {
    "text": "bottom we've got the default command I how do you launch this application and by having it baked into the image it",
    "start": "576370",
    "end": "582640"
  },
  {
    "text": "means that we can be image we can be less dependent on the actual underlying",
    "start": "582640",
    "end": "589330"
  },
  {
    "text": "technologies and instead we can focus on my image higher level abstraction I win",
    "start": "589330",
    "end": "594460"
  },
  {
    "text": "this container and then a container and the image has all of the information it needs to work out how to start the",
    "start": "594460",
    "end": "600160"
  },
  {
    "text": "process if we had to be document that on every single time we launch the container we'd have to be very aware about okay",
    "start": "600160",
    "end": "606250"
  },
  {
    "text": "what's the name of the deal ow what even technology is actually running inside of that container is it node if it done there if it golang by having",
    "start": "606250",
    "end": "613390"
  },
  {
    "text": "that all packaged in we just are confirmed with the abstraction of like here's my application hit my image",
    "start": "613390",
    "end": "618520"
  },
  {
    "text": "please launch that somewhere and so these are the techniques when you're building it and third when you have that",
    "start": "618520",
    "end": "625360"
  },
  {
    "text": "docker file defined they look and feel consistent between different applications you turn into an image by",
    "start": "625360",
    "end": "630850"
  },
  {
    "text": "doing docker build give it a nice friendly name so you can refer back to it later and docker will run through all",
    "start": "630850",
    "end": "636520"
  },
  {
    "text": "of the steps within your docker file which was then eventually get you to your nice built winning application",
    "start": "636520",
    "end": "643000"
  },
  {
    "text": "which is ideal and so now we have something which we can learn and something which we can deploy the one",
    "start": "643000",
    "end": "650710"
  },
  {
    "text": "issue is this at the moment is you may remember my docker file I defined the SDK as my base layer and so at the",
    "start": "650710",
    "end": "657010"
  },
  {
    "text": "moment when I go to win this in production I'm actually also winning all of the SDK tooling which went with it",
    "start": "657010",
    "end": "662890"
  },
  {
    "text": "and this has some potential security implications ie if anyone broke into my",
    "start": "662890",
    "end": "668440"
  },
  {
    "text": "web app don't be able to compile that on source code and then be add compile down our own applications or",
    "start": "668440",
    "end": "674290"
  },
  {
    "text": "utilize additional tooling which may be left behind like cokeman tour w get and",
    "start": "674290",
    "end": "679390"
  },
  {
    "text": "that's which i use though to exploit it and we don't want to make it too simple for attackers we wanted that at least",
    "start": "679390",
    "end": "685240"
  },
  {
    "text": "and make them work for their exploits and so we can simplify and we can reduce the size of our images and get them",
    "start": "685240",
    "end": "691600"
  },
  {
    "text": "ready for production and for Dockers introduce a new concept called multi stage builds and this is where we can",
    "start": "691600",
    "end": "697510"
  },
  {
    "text": "change and add a secondary stage to build a more optimized version of that docker image and so we have our first",
    "start": "697510",
    "end": "704529"
  },
  {
    "text": "stage which is what we had before which with using the SDK tooling to build DLL and then as a second stage what we can",
    "start": "704529",
    "end": "711670"
  },
  {
    "text": "do is define a different base image so in this case the runtime so it doesn't have all the compilers and didn't have",
    "start": "711670",
    "end": "717279"
  },
  {
    "text": "all of the additional to link we can copy our DLL which we built youth in the first stage the first set of images and",
    "start": "717279",
    "end": "724720"
  },
  {
    "text": "use an SDK and into our more optimized version of the container image and by",
    "start": "724720",
    "end": "729940"
  },
  {
    "text": "doing this we reduce the size we take it down for nine hundred Meg because they've got all that compiler an",
    "start": "729940",
    "end": "735459"
  },
  {
    "text": "additional tooling in and we made from thing much more secure and much more optimized which is only 250 Meg and we",
    "start": "735459",
    "end": "742329"
  },
  {
    "text": "can continue optimizing and building that and so it's a really nice way to get our images ready for production and",
    "start": "742329",
    "end": "748029"
  },
  {
    "text": "ready to deploy on to something like kubernetes so that's how it works in Linux so what about Windows and how did",
    "start": "748029",
    "end": "755740"
  },
  {
    "text": "Windows changed matters so as part of the Windows Server 2016 release there's",
    "start": "755740",
    "end": "761860"
  },
  {
    "text": "four key components which were introduced we have Windows Server core and Windows Nano these are operating",
    "start": "761860",
    "end": "769329"
  },
  {
    "text": "systems designed for winning inside of the container and so we can use this exactly what we did for linux where we",
    "start": "769329",
    "end": "775660"
  },
  {
    "text": "defined the SDK we can use these as our base foundation and then build upon and",
    "start": "775660",
    "end": "781060"
  },
  {
    "text": "deploy our applications and we also then have introduced two new container win x",
    "start": "781060",
    "end": "787329"
  },
  {
    "text": "windows containers and windows hyper-v containers windows containers are those similar to what we experienced on linux",
    "start": "787329",
    "end": "794680"
  },
  {
    "text": "today so today share the host kernel but when you start that process it will",
    "start": "794680",
    "end": "800290"
  },
  {
    "text": "start the windows process and allowing and it will still learn in a very sandbox secure way very similar to how",
    "start": "800290",
    "end": "807540"
  },
  {
    "text": "it wins on Linux but like on Linux it will utilize and share the kernel of the",
    "start": "807540",
    "end": "813090"
  },
  {
    "text": "host and so all of the machines all of the containers on the machine will all",
    "start": "813090",
    "end": "818460"
  },
  {
    "text": "talk to the same kernel and so if you did unfortunately have a kernel exploit",
    "start": "818460",
    "end": "823530"
  },
  {
    "text": "potentially it could interact and interfere with all at the different other containers this is where we know",
    "start": "823530",
    "end": "829440"
  },
  {
    "text": "the hyper-v containers adds an additional isolation mold for our applications and so when we launch in",
    "start": "829440",
    "end": "835650"
  },
  {
    "text": "this hyper-v isolation what happens if that windows will boot up a very similar small lightweight virtual machine and it",
    "start": "835650",
    "end": "843120"
  },
  {
    "text": "will win that container within the virtual machine and so we don't have a shared kernel issue it's an isolated",
    "start": "843120",
    "end": "849390"
  },
  {
    "text": "standalone kernel wrapped in a VM and so if anyone did manage to break out did only hit the VM and then it would have",
    "start": "849390",
    "end": "856080"
  },
  {
    "text": "to break out that but I've already been locked down and super secure and so it's an extra defense and an extra barrier",
    "start": "856080",
    "end": "861990"
  },
  {
    "text": "without any performance overhead and but when we launch these containers and",
    "start": "861990",
    "end": "868110"
  },
  {
    "text": "windows they look and feel very similar to Linux so we've got our server and operating system we've got Windows we've",
    "start": "868110",
    "end": "874410"
  },
  {
    "text": "got darker and we can burn things like sequel server or iOS from the windows",
    "start": "874410",
    "end": "879750"
  },
  {
    "text": "build from the windows packages directly at a container when we look at hyper-v",
    "start": "879750",
    "end": "885090"
  },
  {
    "text": "other third the difference is that the kernel is separate it's isolated based on this super small windows utility VM",
    "start": "885090",
    "end": "892260"
  },
  {
    "text": "and we can see where this is beneficial of things where you're potentially",
    "start": "892260",
    "end": "897690"
  },
  {
    "text": "running slightly more a third party or potentially malicious cold so shared hosting ie if you're sure you probably",
    "start": "897690",
    "end": "904860"
  },
  {
    "text": "don't want people to be using the same kernel just in case people are out to",
    "start": "904860",
    "end": "911490"
  },
  {
    "text": "purposely target and the other things and multi-tenancy so if you're willing to government departments",
    "start": "911490",
    "end": "918750"
  },
  {
    "text": "you probably don't want them to interfere and interactive to hear from different governments just for that added benefit and it's a particular",
    "start": "918750",
    "end": "925980"
  },
  {
    "text": "reasons but fundamentally windows containers are still secure safe reliable there are two new operating",
    "start": "925980",
    "end": "932670"
  },
  {
    "text": "systems hello we start with Windows server core when the server core is nearly window to",
    "start": "932670",
    "end": "938970"
  },
  {
    "text": "compatible and what I mean by that is it's got all of the same API if you would know and love from windows and so",
    "start": "938970",
    "end": "946350"
  },
  {
    "text": "the idea being that you can pick up your application it doesn't need to be changed it doesn't need to be real",
    "start": "946350",
    "end": "951360"
  },
  {
    "text": "rebuilt and it will almost run without any modifications and when I say",
    "start": "951360",
    "end": "957420"
  },
  {
    "text": "almost is there's some API which they couldn't quite port over there's some things they haven't moved like the fax",
    "start": "957420",
    "end": "962880"
  },
  {
    "text": "server which to be honest is probably acceptable but the idea is I albeit the",
    "start": "962880",
    "end": "968370"
  },
  {
    "text": "same experience and you can just literally take your VM turn it into a container image and then wind up and v",
    "start": "968370",
    "end": "975570"
  },
  {
    "text": "core Windows Nano is the really stripped-down really lightweight version",
    "start": "975570",
    "end": "981630"
  },
  {
    "text": "and so this has got to feel a few different iterations and a few different processes Windows Nano originally was",
    "start": "981630",
    "end": "987990"
  },
  {
    "text": "meant to be a lightweight virtual machine that you could boot up on hyper-v and it would be have a low",
    "start": "987990",
    "end": "993360"
  },
  {
    "text": "footprint and so you could pack it more effectively and get more value from your resources but that's contains recently",
    "start": "993360",
    "end": "999990"
  },
  {
    "text": "people weren't utilizing and as we moved into a containerized willed Windows Nano",
    "start": "999990",
    "end": "1005510"
  },
  {
    "text": "is now designed just for thoroughly winning inside of a container and it means that they could remove all of the",
    "start": "1005510",
    "end": "1010820"
  },
  {
    "text": "logic about how do you actually boot the VM in the first place and now we're not nano is approximately 50 mega in size",
    "start": "1010820",
    "end": "1017630"
  },
  {
    "text": "it's a really nice base footprint for packaging and I'm deploying our applications onto and so when we look at",
    "start": "1017630",
    "end": "1025670"
  },
  {
    "text": "where diff means and what it means for us server core is kind of like your",
    "start": "1025670",
    "end": "1030709"
  },
  {
    "text": "traditional operating system it's got all of the API they've got all of the legacy functionality there and the idea",
    "start": "1030709",
    "end": "1036829"
  },
  {
    "text": "is that you can lift and shift and everything will just work as it was very similar to if you start packaging up",
    "start": "1036829",
    "end": "1042410"
  },
  {
    "text": "applications as container done and booting Windows Nano is more aligned with something like alpine it focus on",
    "start": "1042410",
    "end": "1049130"
  },
  {
    "text": "being another container it focus on not having complete 32-bit compatibility but",
    "start": "1049130",
    "end": "1055730"
  },
  {
    "text": "you know from 90% of the applications that's probably fine and you can get a much more effective much more",
    "start": "1055730",
    "end": "1060920"
  },
  {
    "text": "cut-down version of the win time to build your applications on but you may have to do some tweaks and some",
    "start": "1060920",
    "end": "1066860"
  },
  {
    "text": "modifications or rebuild it to get the API of compatible we've done",
    "start": "1066860",
    "end": "1072840"
  },
  {
    "text": "and so now wouldn't we have this we have the ability to package up and build our",
    "start": "1072840",
    "end": "1082230"
  },
  {
    "text": "traditional dotnet windows-based applications as containers so what did",
    "start": "1082230",
    "end": "1088930"
  },
  {
    "text": "that look like in reality so let's take a way back into the great early days of",
    "start": "1088930",
    "end": "1094600"
  },
  {
    "text": "dotnet where the asp.net team were producing different examples and one of",
    "start": "1094600",
    "end": "1099760"
  },
  {
    "text": "the examples were the something called nerd inner nerd dinner in this case if hosted on complex until complex get",
    "start": "1099760",
    "end": "1106660"
  },
  {
    "text": "turned off and this particular build was released in May 25th 2010 so it's like",
    "start": "1106660",
    "end": "1114130"
  },
  {
    "text": "one of the earliest dotnet examples I could find and fortunately had been built and it's been packaged up in a zip",
    "start": "1114130",
    "end": "1120340"
  },
  {
    "text": "file or the binaries are there but like how can I now take that package up and",
    "start": "1120340",
    "end": "1125500"
  },
  {
    "text": "what other changes which would be required so we need to be able to deploy",
    "start": "1125500",
    "end": "1131080"
  },
  {
    "text": "and build our windows containers so now we've got Dakka Dakka works natively on",
    "start": "1131080",
    "end": "1136300"
  },
  {
    "text": "Windows using some awesome goal and functionality but the window functionality is piped into the core of",
    "start": "1136300",
    "end": "1143260"
  },
  {
    "text": "docker it's not a fork if they'll spin off if not something driven by Microsoft it is part of the main docker pipeline",
    "start": "1143260",
    "end": "1150100"
  },
  {
    "text": "it goes through all the time testing or theme CI integration points the idea",
    "start": "1150100",
    "end": "1155680"
  },
  {
    "text": "then is that we have whipped two binaries multiple binaries windows arm and linux and so we've",
    "start": "1155680",
    "end": "1163540"
  },
  {
    "text": "installed it and you can VIN it and you've got all your container images and just like what we do with Linux and what",
    "start": "1163540",
    "end": "1170470"
  },
  {
    "text": "we had with the doughnut SDK those various different bait images which have been built which we can use as our",
    "start": "1170470",
    "end": "1176950"
  },
  {
    "text": "foundations so this is the base images for Windows and you can see that all of the tags on the far side are all it of a",
    "start": "1176950",
    "end": "1184000"
  },
  {
    "text": "Windows build version numbers because when we have Windows we also have Windows updates but we can't just have",
    "start": "1184000",
    "end": "1190570"
  },
  {
    "text": "things randomly updating itself within a container could that breaks a hole repeatability and knowing with actually",
    "start": "1190570",
    "end": "1196750"
  },
  {
    "text": "running inside of production so instead we've tagged things with the windows build and so you know exact",
    "start": "1196750",
    "end": "1203190"
  },
  {
    "text": "what version of Windows we are winning and what version and security updates have been applied and so when we do that",
    "start": "1203190",
    "end": "1211650"
  },
  {
    "text": "we've got images when we try and win something like in this case windows of Cour it will get downloaded and when",
    "start": "1211650",
    "end": "1218570"
  },
  {
    "text": "something gets changed and a need security patches have been released we only have to put download and pull the",
    "start": "1218570",
    "end": "1224130"
  },
  {
    "text": "changes which have been applied as an additional layer and so we don't have to keep download any huge images every",
    "start": "1224130",
    "end": "1229800"
  },
  {
    "text": "single time instead we can keep things a lot more focused so just like we had before and just like the food the same",
    "start": "1229800",
    "end": "1235950"
  },
  {
    "text": "example we now need to build a Windows based image and so we have our docker file and now we have our base image so",
    "start": "1235950",
    "end": "1243420"
  },
  {
    "text": "in this case window server core and on top of that we can burn windows targeted commands in this case install feature",
    "start": "1243420",
    "end": "1249720"
  },
  {
    "text": "web server so I install iis and we use the same functionality the same fintax",
    "start": "1249720",
    "end": "1255930"
  },
  {
    "text": "the same approach but now we're building something which is targeting windows and using the windows functionality and a",
    "start": "1255930",
    "end": "1262230"
  },
  {
    "text": "windows kernel to bootstrap it fortunately for most of us lots of paste images some iOS is already available",
    "start": "1262230",
    "end": "1268560"
  },
  {
    "text": "lots of different versions available something windows have core some for Windows Nano and we can use and build",
    "start": "1268560",
    "end": "1274140"
  },
  {
    "text": "upon that in our application so now when we're trying to build and deploy this nerd in a simple application what we can",
    "start": "1274140",
    "end": "1280740"
  },
  {
    "text": "do is just use the official I is a made form Microsoft we give it the windows build which would interested in winning",
    "start": "1280740",
    "end": "1286650"
  },
  {
    "text": "and use that as our foundation so now we can be confident that iOS has been set up and configured as we need",
    "start": "1286650",
    "end": "1292850"
  },
  {
    "text": "same things we install the dependencies so dotnet frameworks and we can",
    "start": "1292850",
    "end": "1300300"
  },
  {
    "text": "configure I US and within our container and so we've removed a default website",
    "start": "1300300",
    "end": "1305430"
  },
  {
    "text": "we create a new one for our app we tell it what port to listen on and at the same time we give it that metadata and",
    "start": "1305430",
    "end": "1312540"
  },
  {
    "text": "finally copying our binaries and so fortunately everything had been pre-built by no dinner so all we need to",
    "start": "1312540",
    "end": "1318630"
  },
  {
    "text": "do is really configure the fintax and configure to configure the iOS",
    "start": "1318630",
    "end": "1323640"
  },
  {
    "text": "infrastructure as part of our deployment and that's what we're doing here and then the application will hopefully just",
    "start": "1323640",
    "end": "1329430"
  },
  {
    "text": "launch so what has we did before we do a docker build this will win through the steps",
    "start": "1329430",
    "end": "1335200"
  },
  {
    "text": "will configure IRAs so when I post a flan cheese it will launch iOS and configured state what we desire and then",
    "start": "1335200",
    "end": "1342760"
  },
  {
    "text": "when we're in it our applications will display and so by taking an application",
    "start": "1342760",
    "end": "1348460"
  },
  {
    "text": "which has existed without modifications because we've got that Windows have called base image and because I have",
    "start": "1348460",
    "end": "1355059"
  },
  {
    "text": "compatible to Windows we can just pick things up and put them into production and then win for at this point we can",
    "start": "1355059",
    "end": "1362620"
  },
  {
    "text": "look at optimizing and reducing the footprint with Windows Nano etc and kalenna into something much smaller but",
    "start": "1362620",
    "end": "1368590"
  },
  {
    "text": "at least if is our starting point to have something winning whether it be Linux or Windows based images so now we",
    "start": "1368590",
    "end": "1377019"
  },
  {
    "text": "are getting to the point of how do you actually win needs and what's required to win this in production if we're just",
    "start": "1377019",
    "end": "1382840"
  },
  {
    "text": "doing da cavern on a VM we'd have to login we'd have to connect when Emily",
    "start": "1382840",
    "end": "1388210"
  },
  {
    "text": "ran commands on a command line and it will eventually get to the point where it becomes unmanageable a mistake will",
    "start": "1388210",
    "end": "1393940"
  },
  {
    "text": "start to be introduced so what we wanted v ohms which are designed to manage",
    "start": "1393940",
    "end": "1400179"
  },
  {
    "text": "these containers for us and if things happen or automatically adjust and automatically react to the state of our",
    "start": "1400179",
    "end": "1407080"
  },
  {
    "text": "system and state of our infrastructure and for their many different approaches to orchestration and their swarm from",
    "start": "1407080",
    "end": "1413649"
  },
  {
    "text": "docker des openshift there's mezzo stat d cos there's Cloud",
    "start": "1413649",
    "end": "1418870"
  },
  {
    "text": "Foundry been the most popular one or the one which had gained traction from the community is kubernetes so the official",
    "start": "1418870",
    "end": "1425860"
  },
  {
    "text": "definition of kubernetes and what it is is an open-source system for automating",
    "start": "1425860",
    "end": "1431080"
  },
  {
    "text": "scaling the management of containerized applications ie the things which we have",
    "start": "1431080",
    "end": "1437440"
  },
  {
    "text": "just built and we need to now push into production and kubernetes was born from",
    "start": "1437440",
    "end": "1443169"
  },
  {
    "text": "inside of Google so Google learn all of their systems as containers they have",
    "start": "1443169",
    "end": "1449679"
  },
  {
    "text": "done for the last ten years and they have provided and pushed back a lot of the core infrastructure and a lot of the",
    "start": "1449679",
    "end": "1454870"
  },
  {
    "text": "core technologies into the land of kernel which keeps containers secure and other things work document building on",
    "start": "1454870",
    "end": "1460630"
  },
  {
    "text": "in third place and so they have a huge amount of experience and knowing how to operate container a systems and so they",
    "start": "1460630",
    "end": "1467559"
  },
  {
    "text": "have Borg which is Aaron version of how they do this they publish a white paper and at the same time they",
    "start": "1467559",
    "end": "1473230"
  },
  {
    "text": "also started work on kubernetes which takes their internal experience and makes it available to the wider audience",
    "start": "1473230",
    "end": "1479799"
  },
  {
    "text": "and companies who aren't just Google so this has been awesome and really captured experience and knowledge and",
    "start": "1479799",
    "end": "1487390"
  },
  {
    "text": "transferred another effective way not just through blog posts and technical talks and the premieres of Cuba nettie",
    "start": "1487390",
    "end": "1494169"
  },
  {
    "text": "is to take all of our containers no matter what types of containers they are or purpose I serving and be able to",
    "start": "1494169",
    "end": "1500409"
  },
  {
    "text": "organize and manage those in a nice simplistic consistent approach and to do",
    "start": "1500409",
    "end": "1506200"
  },
  {
    "text": "that we need those different functionalities and we need service different features which is provided by the base by the base structure and City",
    "start": "1506200",
    "end": "1514299"
  },
  {
    "text": "though a few things that I've pulled out which I think are critical when we think about how do we learn and manage things",
    "start": "1514299",
    "end": "1520570"
  },
  {
    "text": "in production so we've got aspects like role based access control so being able",
    "start": "1520570",
    "end": "1525909"
  },
  {
    "text": "to specify which teams and which people and individuals can manage which",
    "start": "1525909",
    "end": "1532419"
  },
  {
    "text": "components of our applications so who can deploy project a systems or who can",
    "start": "1532419",
    "end": "1539530"
  },
  {
    "text": "manage a view the state of that and making sure that per team a can't interfere and interact with team beat",
    "start": "1539530",
    "end": "1545650"
  },
  {
    "text": "workloads we also have things like self-healing so if something happens at",
    "start": "1545650",
    "end": "1550929"
  },
  {
    "text": "3 a.m. in the morning we don't want network operators and infrastructures I have to go in and",
    "start": "1550929",
    "end": "1556419"
  },
  {
    "text": "manually update a money fix whatever problem we want if it's better if our systems can start self-healing and self",
    "start": "1556419",
    "end": "1563230"
  },
  {
    "text": "fixing and correcting the problems so if we lose a server or we flew the",
    "start": "1563230",
    "end": "1568510"
  },
  {
    "text": "datacenter kubernetes will detect that and it will automatically reprovision whatever systems and whatever aspects of",
    "start": "1568510",
    "end": "1577200"
  },
  {
    "text": "our workload what was being deployed on to other parts of the cluster and so we don't lose capacity we don't lose",
    "start": "1577200",
    "end": "1583510"
  },
  {
    "text": "availability and kubernetes is always making sure that we that the capacity which we've defined is always available",
    "start": "1583510",
    "end": "1590049"
  },
  {
    "text": "and so we don't have to go in and manually intervene we have other things like being able to manage scaling and",
    "start": "1590049",
    "end": "1597340"
  },
  {
    "text": "rollout and rollbacks managing secrets in a secure way we're not randomly leaving passwords or",
    "start": "1597340",
    "end": "1604859"
  },
  {
    "text": "certificates just on a disco in an environment variable somewhere instead they can be backed by an actual secret",
    "start": "1604859",
    "end": "1613359"
  },
  {
    "text": "store and finally the one which I think is often overlooked if batch execution by default we think",
    "start": "1613359",
    "end": "1620259"
  },
  {
    "text": "of containers and we think of deployments are these long lived long venom processes like we want to deploy database or a web server or methods",
    "start": "1620259",
    "end": "1627190"
  },
  {
    "text": "queue but actually there are lots of different types of workloads which we have we have one of cron jobs which need",
    "start": "1627190",
    "end": "1633129"
  },
  {
    "text": "to win at 3m every morning to recycle something or win a type of report and we",
    "start": "1633129",
    "end": "1638349"
  },
  {
    "text": "also now assign and see more big data workloads so being able to go like we need to be able to process a thousand",
    "start": "1638349",
    "end": "1645219"
  },
  {
    "text": "different images classify them and then we turn results or blood results as part of a report",
    "start": "1645219",
    "end": "1650849"
  },
  {
    "text": "until kubernetes is designed for managing scheduling and managing scheduling an execution of workloads and",
    "start": "1650849",
    "end": "1657789"
  },
  {
    "text": "that happens whether it's long lived winning processes which may go down and have to be recycled or one of jobs which",
    "start": "1657789",
    "end": "1665080"
  },
  {
    "text": "win for 10 seconds and then disappear and I never win again so as part of",
    "start": "1665080",
    "end": "1674950"
  },
  {
    "text": "kubernetes what have actually been introduced and what been developed is a really advanced object model which",
    "start": "1674950",
    "end": "1681489"
  },
  {
    "text": "represents all of the different moving parts of an infrastructure and a production based system and so at the",
    "start": "1681489",
    "end": "1688570"
  },
  {
    "text": "heart of kubernetes are concepts called pods pods are fundamentally containers",
    "start": "1688570",
    "end": "1695109"
  },
  {
    "text": "which are winning our workloads and so they can be docker container there are different types but they are the",
    "start": "1695109",
    "end": "1701619"
  },
  {
    "text": "containers around these pods we have different services so we have things which are managing the schedules and how",
    "start": "1701619",
    "end": "1708429"
  },
  {
    "text": "these pods should be executed so for example a daemon set will automatically burn the part ie the",
    "start": "1708429",
    "end": "1714519"
  },
  {
    "text": "container on every single node within our cluster and so we free a services such as monitoring that must always were",
    "start": "1714519",
    "end": "1721629"
  },
  {
    "text": "non everything the hosts so we can collect ammeter metrics you would deploy at the daemon sir and then when",
    "start": "1721629",
    "end": "1726969"
  },
  {
    "text": "kubernetes identified and introduces and detect a new node being added it will",
    "start": "1726969",
    "end": "1732759"
  },
  {
    "text": "automatically go ahead and deploy the monitoring cold and make sure that it's winning and so we have deed guaranteed in place and so",
    "start": "1732759",
    "end": "1739929"
  },
  {
    "text": "that we don't have to go through a playbook of what needs to happen when we add a new node into a cluster we think",
    "start": "1739929",
    "end": "1746770"
  },
  {
    "text": "that things like stateful sets which are designed for winning databases and stateful applications and so as we scale",
    "start": "1746770",
    "end": "1753790"
  },
  {
    "text": "up our database certain things need to happen ie they need to point to different directories because if they all pointed",
    "start": "1753790",
    "end": "1760360"
  },
  {
    "text": "to the same directory they'll conflict and they'll fight and veil over wide data and so when we scale up and we",
    "start": "1760360",
    "end": "1767020"
  },
  {
    "text": "think about multi-tenancy and multi node systems we want to make sure that",
    "start": "1767020",
    "end": "1772630"
  },
  {
    "text": "they're scaling appropriately and then at the bottom underneath we have obviously our core foundation so we have",
    "start": "1772630",
    "end": "1780010"
  },
  {
    "text": "volumes so our container can store data and it can store in different ways it could just be a director and disk or it",
    "start": "1780010",
    "end": "1786910"
  },
  {
    "text": "could be 13 things like secrets or configuration and kubernetes has objects which make that easy and make them",
    "start": "1786910",
    "end": "1793120"
  },
  {
    "text": "manageable from our viewpoint so we can focus and configure the right objects",
    "start": "1793120",
    "end": "1798700"
  },
  {
    "text": "based on what problem we're trying to solve within our system and so when you",
    "start": "1798700",
    "end": "1804250"
  },
  {
    "text": "look at what gets learn we have these nodes within our system and then",
    "start": "1804250",
    "end": "1809650"
  },
  {
    "text": "everything which we want to deploy like all of our applications be that the nerd dinner app which we just built will be",
    "start": "1809650",
    "end": "1816220"
  },
  {
    "text": "deployed as these pods no Laura Vela IP addresses but within that pod we can add",
    "start": "1816220",
    "end": "1821530"
  },
  {
    "text": "configure it and we can tweak the actual implementation details of that so if it needs to be made up of multiple",
    "start": "1821530",
    "end": "1826809"
  },
  {
    "text": "different components and multiple different containers we can package them together as if they are all winning from",
    "start": "1826809",
    "end": "1832870"
  },
  {
    "text": "within the container thing interface and same container itself so they all share the same IP address they also have the",
    "start": "1832870",
    "end": "1839410"
  },
  {
    "text": "same volumes they all look and feel as if they're together but from a development experience we can break it",
    "start": "1839410",
    "end": "1845440"
  },
  {
    "text": "down into small isolated components when we want to scale these pods get scaled",
    "start": "1845440",
    "end": "1850510"
  },
  {
    "text": "together and so when we want to bring up a part of allocation application all of",
    "start": "1850510",
    "end": "1855910"
  },
  {
    "text": "the volumes and all of the containerized apps within that will get scaled up and added together",
    "start": "1855910",
    "end": "1862169"
  },
  {
    "text": "the second important part is not only to kubernetes need to manage started applications it needs to make them",
    "start": "1862420",
    "end": "1868000"
  },
  {
    "text": "available and so cumulative have got different approaches based on how to configure on how to manage networking",
    "start": "1868000",
    "end": "1874510"
  },
  {
    "text": "two three one three two most commonly commonly used are node port cliff IPAs",
    "start": "1874510",
    "end": "1880540"
  },
  {
    "text": "and low balances so a mobile node port is the ability to allocate a hard-coded",
    "start": "1880540",
    "end": "1886240"
  },
  {
    "text": "port across your entire cluster and for no matter what machine you are accessing or data get received on it will always",
    "start": "1886240",
    "end": "1894580"
  },
  {
    "text": "get routed to the correct pod which may be on a different part of the system and so you can always make systems available",
    "start": "1894580",
    "end": "1901390"
  },
  {
    "text": "as they get moved around cliff to IPS are an aggregation IP address which",
    "start": "1901390",
    "end": "1907590"
  },
  {
    "text": "manages low balancing across different components within our system and so this",
    "start": "1907590",
    "end": "1913210"
  },
  {
    "text": "gives us a single IP address which we can send traffic to and an innard covers that may get distributed to different",
    "start": "1913210",
    "end": "1919860"
  },
  {
    "text": "components and different systems and for with i/o reliability and scale it even",
    "start": "1919860",
    "end": "1925480"
  },
  {
    "text": "out our workloads across different machines and different nodes and then finally load balancers which our",
    "start": "1925480",
    "end": "1931360"
  },
  {
    "text": "concepts which will automatically configure a low balancer based on the cloud provider which you are utilizing",
    "start": "1931360",
    "end": "1938230"
  },
  {
    "text": "so if you deploy a kubernetes into Azure or ec2 and you requested load balancer",
    "start": "1938230",
    "end": "1944340"
  },
  {
    "text": "kubernetes will go off to a shore or EC to get and configure the load balancer",
    "start": "1944340",
    "end": "1949690"
  },
  {
    "text": "and the alb for example get allocated a public IP address and then made that available within a system and so when",
    "start": "1949690",
    "end": "1956770"
  },
  {
    "text": "traffic at f-- into that public IP address kubernetes will manage in how that gets to the underlying pod the",
    "start": "1956770",
    "end": "1963070"
  },
  {
    "text": "underlying workload that were interested in and we see from traffic and so I",
    "start": "1963070",
    "end": "1968230"
  },
  {
    "text": "powered some awesome slides from our friends over weave works to kind of help",
    "start": "1968230",
    "end": "1973810"
  },
  {
    "text": "illustrate this in a little bit more of a colourful way so traffic comes in a node poor didn't matter which node",
    "start": "1973810",
    "end": "1980200"
  },
  {
    "text": "within our kubernetes cluster traffic is received on it will come in and we'll know which part it was",
    "start": "1980200",
    "end": "1985810"
  },
  {
    "text": "responsible so it will forward the packets over the internal network to the most available pod within our system",
    "start": "1985810",
    "end": "1993250"
  },
  {
    "text": "which is available similar to Cliff IP addresses when we",
    "start": "1993250",
    "end": "1998259"
  },
  {
    "text": "are within our cluster and let's say our web application odd nerd dinner sample",
    "start": "1998259",
    "end": "2003750"
  },
  {
    "text": "app needs to talk to sequel server it will go off to the in the DNS server so",
    "start": "2003750",
    "end": "2009480"
  },
  {
    "text": "car-like where if equal server winning and it will return back Wow he's got three instances of sequel server winning",
    "start": "2009480",
    "end": "2015419"
  },
  {
    "text": "here is the one IP address let's represent all of those and it will send traffic to that and forward it on and",
    "start": "2015419",
    "end": "2022379"
  },
  {
    "text": "then the traffic will go to our our pod and then finally the balancers which other third it will automatically",
    "start": "2022379",
    "end": "2028740"
  },
  {
    "text": "configure the load balancer via based on the cloud and when traffic comes in from",
    "start": "2028740",
    "end": "2034289"
  },
  {
    "text": "that external load balancer it will help manage and introduce that into our cluster and all of this is managed and",
    "start": "2034289",
    "end": "2043139"
  },
  {
    "text": "configured via cold and for this is awesome beacon now we're no longer defining bath scripts we're no longer",
    "start": "2043139",
    "end": "2049290"
  },
  {
    "text": "creating these complex confusing playbooks to get our system into a state where we",
    "start": "2049290",
    "end": "2055589"
  },
  {
    "text": "desire instead we're defining how we want the objects to be configured and then they understand what's required in",
    "start": "2055589",
    "end": "2061980"
  },
  {
    "text": "order to make and deploy our applications based on what we've defined so in this case we're configuring a",
    "start": "2061980",
    "end": "2069980"
  },
  {
    "text": "deployment object we've given it from knife and a friendly name so that we can understand it and we're setting a label",
    "start": "2069980",
    "end": "2076740"
  },
  {
    "text": "so that we know how the parts of the system can connect and interact and build upon what's been available and",
    "start": "2076740",
    "end": "2083790"
  },
  {
    "text": "then finally the spec I either workload for this deployment object is containers",
    "start": "2083790",
    "end": "2090089"
  },
  {
    "text": "until we define which container we actually want to be running within our system and all parts of kubernetes is",
    "start": "2090089",
    "end": "2096690"
  },
  {
    "text": "configured via these llamo definitions and so in this case we've got our",
    "start": "2096690",
    "end": "2101700"
  },
  {
    "text": "service ie how do we want to make our friend and our nerd dinner application",
    "start": "2101700",
    "end": "2106920"
  },
  {
    "text": "available and so in this case we're using nerd dinner and we're defining what no no port should be and so",
    "start": "2106920",
    "end": "2113640"
  },
  {
    "text": "whenever traffic comes in on 30,000 80 it will always get routed to the void",
    "start": "2113640",
    "end": "2120510"
  },
  {
    "text": "available front end application and it knows that it's interesting and directly to front end because at the bottom we",
    "start": "2120510",
    "end": "2127020"
  },
  {
    "text": "defined our selector I to find what labels should be used and",
    "start": "2127020",
    "end": "2132280"
  },
  {
    "text": "identified and send traffic to automatically so this is for Windows",
    "start": "2132280",
    "end": "2137380"
  },
  {
    "text": "what about for so for Linux what about for Windows so we have exactly the same",
    "start": "2137380",
    "end": "2143080"
  },
  {
    "text": "structure we have the exactly the same configuration instead of defining our",
    "start": "2143080",
    "end": "2148630"
  },
  {
    "text": "Linux image which have been built we can find a Windows based image they look and feel identical and that is important the",
    "start": "2148630",
    "end": "2153940"
  },
  {
    "text": "only thing what we need to tell Kuban it is if we need to give it a hint about where we want this workload to be",
    "start": "2153940",
    "end": "2159490"
  },
  {
    "text": "winning and so in this case the workload needs to win on Windows based systems and so when we deploy this object and we",
    "start": "2159490",
    "end": "2166930"
  },
  {
    "text": "want Kuban it is to schedule this workload what we do is to find a node selector and we say please select nodes",
    "start": "2166930",
    "end": "2173230"
  },
  {
    "text": "which have to label operating system windows and so kubernetes will take that into consideration and it will only",
    "start": "2173230",
    "end": "2180070"
  },
  {
    "text": "schedule it on nodes with an a-lister which have the label windows and i said today have windows containers and they",
    "start": "2180070",
    "end": "2186970"
  },
  {
    "text": "can learn our workloads and so we can have our iOS application working but",
    "start": "2186970",
    "end": "2196780"
  },
  {
    "text": "before we get to that point we actually need a cuban it is cristo in the first place so how do you go about doing that",
    "start": "2196780",
    "end": "2201850"
  },
  {
    "text": "so there two key components to setting up and configuring kubernetes so this",
    "start": "2201850",
    "end": "2207250"
  },
  {
    "text": "one if you need a master and then you need nodes the master if we spawn slave for scheduling managing workloads making",
    "start": "2207250",
    "end": "2215200"
  },
  {
    "text": "sure that the state of our cluster and state of what being deployed is actually",
    "start": "2215200",
    "end": "2220240"
  },
  {
    "text": "how we want it to be and so if things go down it will be the master who will detect that and I'm reschedule and we",
    "start": "2220240",
    "end": "2227109"
  },
  {
    "text": "allocate our resources and if we want to deploy new components and new deployment",
    "start": "2227109",
    "end": "2233619"
  },
  {
    "text": "objects or update them we go to the master and we tell it please schedule this operation to happen and that will",
    "start": "2233619",
    "end": "2240490"
  },
  {
    "text": "manager all it I hope lifting all of the workload is doing our notes and so these nodes I have our container win time they",
    "start": "2240490",
    "end": "2248080"
  },
  {
    "text": "have all of our network and configurations and they're actually other things which do the heavy lifting and so at the present we have these two",
    "start": "2248080",
    "end": "2255609"
  },
  {
    "text": "types windows ok our master cannot only be Linux so we need to be able to win Linux",
    "start": "2255609",
    "end": "2262210"
  },
  {
    "text": "systems which would configure them will win the master but when it comes to where the executions happening and where",
    "start": "2262210",
    "end": "2268089"
  },
  {
    "text": "all of our workloads are being done this is now cross-platform and so we can win it based on Linux we have Windows we",
    "start": "2268089",
    "end": "2274900"
  },
  {
    "text": "have arm and as more different architectures get introduced more different architectures can be added and",
    "start": "2274900",
    "end": "2280720"
  },
  {
    "text": "so this is how we can now have a single kubernetes cluster which is capable of",
    "start": "2280720",
    "end": "2285760"
  },
  {
    "text": "winning different types of workloads based on the underlying architecture whether that be for Linux or whether",
    "start": "2285760",
    "end": "2292119"
  },
  {
    "text": "that be for Windows and so based on how it's all being configured they can also",
    "start": "2292119",
    "end": "2297970"
  },
  {
    "text": "communicate transparently in this hybrid approach and so we could have no dinner running on windows containers utilizing",
    "start": "2297970",
    "end": "2305740"
  },
  {
    "text": "four core which had never been modified talking to Windows Server Linux winning unlimited containers on a Linux host all",
    "start": "2305740",
    "end": "2313510"
  },
  {
    "text": "over the network all on different machines in our clutter and kubernetes will manage that workloads and how that",
    "start": "2313510",
    "end": "2319990"
  },
  {
    "text": "happens but windows had a little extra thing and it's leaves so windows they",
    "start": "2319990",
    "end": "2328359"
  },
  {
    "text": "recently introduced a concept of Linux containers on Windows and so what Microsoft and docker are building is the",
    "start": "2328359",
    "end": "2336839"
  },
  {
    "text": "possibility that not only can you win Windows containers on Linux but you can also natively burn Linux containers on",
    "start": "2336839",
    "end": "2344140"
  },
  {
    "text": "windows through the powers of hyper-v and virtualization and other magic",
    "start": "2344140",
    "end": "2349210"
  },
  {
    "text": "awesome things that Microsoft are currently building the experience which I stole from a screenshot from dr. Khan",
    "start": "2349210",
    "end": "2354970"
  },
  {
    "text": "is you can win your containers have we shown I just do doc of in nano server",
    "start": "2354970",
    "end": "2360580"
  },
  {
    "text": "and out over fire windows but you can then take a Linux container ie Alpine",
    "start": "2360580",
    "end": "2366130"
  },
  {
    "text": "and win in exactly the same way and that windows figure out what is that responsible for and so now when we look",
    "start": "2366130",
    "end": "2373089"
  },
  {
    "text": "at how do we manage out with kubernetes we know that you start to become a really nice choice for winning all types",
    "start": "2373089",
    "end": "2379210"
  },
  {
    "text": "of our workloads no matter whether that's Linux or Windows and so kubernetes can net we'll be able to",
    "start": "2379210",
    "end": "2385030"
  },
  {
    "text": "schedule containers of both types and both architectures on all of our machines and",
    "start": "2385030",
    "end": "2390369"
  },
  {
    "text": "so we can start utilizing and repurposing we know that a lot more of an effect of way so this makes a really good",
    "start": "2390369",
    "end": "2398170"
  },
  {
    "text": "platform and so in order to configure and build our Cuban Etta's cluster we need a way to do that and so one way",
    "start": "2398170",
    "end": "2405010"
  },
  {
    "text": "which I really like is coupe atom koopa dormant in it will initialize a master so on your Linux box you would",
    "start": "2405010",
    "end": "2411250"
  },
  {
    "text": "initialize the master that would go ahead and it will configure all of the components set of all of the",
    "start": "2411250",
    "end": "2416260"
  },
  {
    "text": "certificates that's required and give you a working master and so then on each node whether that be Windows or whether",
    "start": "2416260",
    "end": "2423460"
  },
  {
    "text": "that be Linux you go ahead and you join the cluster you give it a token for that only valid nodes can be added into the",
    "start": "2423460",
    "end": "2430750"
  },
  {
    "text": "Machine and then kubernetes will take that and start scheduling workloads onto",
    "start": "2430750",
    "end": "2435910"
  },
  {
    "text": "the two of them and so when we say like what nodes are in our cluster we see all the different types of architectures and",
    "start": "2435910",
    "end": "2441970"
  },
  {
    "text": "all the different types available be there windows or Linux and then communities can manage both of those and",
    "start": "2441970",
    "end": "2448060"
  },
  {
    "text": "this is the dream right this gives us a finger way of managing different types",
    "start": "2448060",
    "end": "2454810"
  },
  {
    "text": "of workouts the unfortunate bit is that Windows is still quite difficult to manage and still quite difficult to",
    "start": "2454810",
    "end": "2461050"
  },
  {
    "text": "configure fortunately all of the cloud providers also realize this and so we",
    "start": "2461050",
    "end": "2466420"
  },
  {
    "text": "have managed way of deploying and managing our kubernetes infrastructure so this is managed kubernetes service",
    "start": "2466420",
    "end": "2474460"
  },
  {
    "text": "offered by jour through the usual command line if they create me a cluster and it will go ahead and initialize you",
    "start": "2474460",
    "end": "2480640"
  },
  {
    "text": "a cluster you will then go ahead and say akf kubernetes service get me my",
    "start": "2480640",
    "end": "2487780"
  },
  {
    "text": "credentials so this will get the certificates and get all of the configuration acquired store it locally",
    "start": "2487780",
    "end": "2492820"
  },
  {
    "text": "and then you can start managing and going like winning commands like get nodes because if is your they are very",
    "start": "2492820",
    "end": "2500380"
  },
  {
    "text": "good at winning two hybrid workloads or both Windows and Linux machines and so this will support hybrid and cliffthea",
    "start": "2500380",
    "end": "2507070"
  },
  {
    "text": "shortly you can do things like what are the available versions of kubernetes and",
    "start": "2507070",
    "end": "2512820"
  },
  {
    "text": "because it's a managed service it takes care of all of the management of keeping",
    "start": "2512820",
    "end": "2517930"
  },
  {
    "text": "edges and so in this case well Clifford initialized with one seven one eight is",
    "start": "2517930",
    "end": "2523890"
  },
  {
    "text": "released in the magic of the ten seconds before you got initialize and what you can do is keep Annette sure",
    "start": "2523890",
    "end": "2532329"
  },
  {
    "text": "we'll manage that upgrade process and so you specify them we won the Calista to be upgraded to one to 8 and then",
    "start": "2532329",
    "end": "2539499"
  },
  {
    "text": "kubernetes and as all worked clever and collaborate and infrastructure and then slowly roll out slowly update all of",
    "start": "2539499",
    "end": "2546279"
  },
  {
    "text": "your agents or without leaving town time and all without losing availability and",
    "start": "2546279",
    "end": "2551470"
  },
  {
    "text": "capacity because what happens is it will go to upgrade one of the agents it will",
    "start": "2551470",
    "end": "2557109"
  },
  {
    "text": "sir stop the workloads we allocate them to other agents winning within the cluster waiting for them to come back up",
    "start": "2557109",
    "end": "2563230"
  },
  {
    "text": "make sure that no is a workload if winning on a machine or grade it make it the version which we desire and then",
    "start": "2563230",
    "end": "2570819"
  },
  {
    "text": "pull it back into low balancer and then move on to net agent so agile is a",
    "start": "2570819",
    "end": "2576009"
  },
  {
    "text": "really good solution for this but as many of the managed kubernetes services kubernetes the Google communities engine",
    "start": "2576009",
    "end": "2584950"
  },
  {
    "text": "to Google created kubernetes or and have a big influence so it makes sense that their cloud provider also has a service",
    "start": "2584950",
    "end": "2591220"
  },
  {
    "text": "and now Amazon have also joined the party and realized the importance of how do you earn a managed kubernetes service",
    "start": "2591220",
    "end": "2598440"
  },
  {
    "text": "all three trial providers are trying to solve the same pain point which is",
    "start": "2598440",
    "end": "2604109"
  },
  {
    "text": "letting you focus on your workloads and defining the workloads that need to",
    "start": "2604109",
    "end": "2609369"
  },
  {
    "text": "learn and not managing and understanding the details of how does communities operate at scale how do you make it",
    "start": "2609369",
    "end": "2615220"
  },
  {
    "text": "highly available how do you perform upgrades etc taking all that pain away",
    "start": "2615220",
    "end": "2620380"
  },
  {
    "text": "so you can focus on what your applications require and how it needs to be done there are alternatives and so if",
    "start": "2620380",
    "end": "2628059"
  },
  {
    "text": "you want a more on-premise solution but have it in a more managed south service",
    "start": "2628059",
    "end": "2633700"
  },
  {
    "text": "style of way their different distributions which build on top of kubernetes to help manage and make it",
    "start": "2633700",
    "end": "2639309"
  },
  {
    "text": "simpler the one popular one is open shift from Red Hat and for this is an",
    "start": "2639309",
    "end": "2644980"
  },
  {
    "text": "opinionated way of how kubernetes should work and so out the parks it's got things like user authentication",
    "start": "2644980",
    "end": "2651309"
  },
  {
    "text": "configured it's got all of your build pipelines and Jenkins integrated it's got registries it's got all of the",
    "start": "2651309",
    "end": "2657670"
  },
  {
    "text": "moving components and it's also got a very pretty beautiful dust ball and with some nice animations so that",
    "start": "2657670",
    "end": "2664250"
  },
  {
    "text": "when you need to scale up you click the hour up and they were automatically spin up pods and they will get a nice animation it's very important when",
    "start": "2664250",
    "end": "2670760"
  },
  {
    "text": "you're under intense low to have some nice effects going on but the purpose is",
    "start": "2670760",
    "end": "2676280"
  },
  {
    "text": "like remove the actual day-to-day operation pain of what it takes to win communities and so again you can focus",
    "start": "2676280",
    "end": "2682760"
  },
  {
    "text": "on your applications and take some of the opinions that's required away and so",
    "start": "2682760",
    "end": "2690320"
  },
  {
    "text": "when we have to manage it everything gets managed in the same way whether you're winning our managed cloud",
    "start": "2690320",
    "end": "2695540"
  },
  {
    "text": "service whether you win in the open shift or use on bare metal and built it",
    "start": "2695540",
    "end": "2701330"
  },
  {
    "text": "from scratch and so if you want to do things like make our donor app whether it be on Windows or Linux do the matter",
    "start": "2701330",
    "end": "2708350"
  },
  {
    "text": "anymore it's always a consistent experience and so if we want to make it available to the outside world we can",
    "start": "2708350",
    "end": "2714170"
  },
  {
    "text": "request a load balancer Kuban entities will figure out what cloud were in go off to the service get our public IP",
    "start": "2714170",
    "end": "2720410"
  },
  {
    "text": "address and then the external IP address will fit their polling and waiting until it's being assigned and then once bits",
    "start": "2720410",
    "end": "2727100"
  },
  {
    "text": "been assigned we can get the IP address from get service I lifted all the",
    "start": "2727100",
    "end": "2733850"
  },
  {
    "text": "services available and then traffic to and that will be managed and sent the",
    "start": "2733850",
    "end": "2739220"
  },
  {
    "text": "appropriate request to the services available in this case we only have one",
    "start": "2739220",
    "end": "2744610"
  },
  {
    "text": "replicas we only have one instance of our workloads happenings and so everything will time within and request",
    "start": "2744610",
    "end": "2750560"
  },
  {
    "text": "it will always go to that one available pot but kubernetes manages all of our",
    "start": "2750560",
    "end": "2755720"
  },
  {
    "text": "instructors who no manager is how we can scale up and how we can define an add more replicas so we can use scale we can",
    "start": "2755720",
    "end": "2762380"
  },
  {
    "text": "find fie black whip occurs and tell it what deployment we want to scale and so although that configuration will be",
    "start": "2762380",
    "end": "2767720"
  },
  {
    "text": "brought up based on our definition and so now we have our two additional pods",
    "start": "2767720",
    "end": "2775670"
  },
  {
    "text": "being configured and because of how cumulative is configured it will also",
    "start": "2775670",
    "end": "2781250"
  },
  {
    "text": "automatically automatically automatically automatically okay our load balancer and so when we've now",
    "start": "2781250",
    "end": "2787130"
  },
  {
    "text": "attend requests it will send it and round-robin it to all of our available",
    "start": "2787130",
    "end": "2792600"
  },
  {
    "text": "replicas are available pods within our cluster if one of them happens to crash unfortunately then kubernetes will",
    "start": "2792600",
    "end": "2799740"
  },
  {
    "text": "detect that automatically remove it from the load balancer and so in everything's bad traffic valid traffic to a down part",
    "start": "2799740",
    "end": "2806400"
  },
  {
    "text": "of the 50 and so we ensure much higher reliability and with higher availability because cumulative is automatically",
    "start": "2806400",
    "end": "2813060"
  },
  {
    "text": "configuring everything based on what our cluster is trying to achieve and at the fame of when we roll out updates to when",
    "start": "2813060",
    "end": "2820230"
  },
  {
    "text": "we want to deploy a new version kubernetes is there to support how that actually should operate so in this case",
    "start": "2820230",
    "end": "2827730"
  },
  {
    "text": "we fit in the image I the target what we're deploying to a new version and kubernetes will roll out progressively",
    "start": "2827730",
    "end": "2834180"
  },
  {
    "text": "and so instead of taking down all of the available instances all at once and so our application becomes unresponsive",
    "start": "2834180",
    "end": "2840380"
  },
  {
    "text": "instead it would do it one at a time and so by default with the round-robin",
    "start": "2840380",
    "end": "2845910"
  },
  {
    "text": "approach doing requests will slowly upgrade and they will start with one move on update it and then move it onto",
    "start": "2845910",
    "end": "2852810"
  },
  {
    "text": "the next one because doing things like Fett image field a little bit manual",
    "start": "2852810",
    "end": "2858720"
  },
  {
    "text": "again and that's probably not where we want to be what we can also do is just modify that object definition which we",
    "start": "2858720",
    "end": "2864630"
  },
  {
    "text": "created in Yammer and then we can do a reapply kubernetes will look and understand the differences between what",
    "start": "2864630",
    "end": "2870930"
  },
  {
    "text": "is the current state of our configuration compared to the desired",
    "start": "2870930",
    "end": "2876390"
  },
  {
    "text": "state which we just said apply and all change and update the differences on our state to reflect that so in this case it",
    "start": "2876390",
    "end": "2882630"
  },
  {
    "text": "would update the image and then it performed a rolling update our system and by having it as if yeah more",
    "start": "2882630",
    "end": "2888570"
  },
  {
    "text": "definition another yam file we can start building automation and so we can have things like our just finishing the",
    "start": "2888570",
    "end": "2895350"
  },
  {
    "text": "object definitions stored in force control and then when we do a purse then that will kick off our build and then",
    "start": "2895350",
    "end": "2902490"
  },
  {
    "text": "that will roll out and that will trigger filter so Alexis from weave is doing a talk on this concept tomorrow called get",
    "start": "2902490",
    "end": "2908340"
  },
  {
    "text": "ops about how you can combine something like kubernetes and get together to create your automation foundation and",
    "start": "2908340",
    "end": "2916110"
  },
  {
    "text": "automating pipeline so what about private web straight ie if we've got our",
    "start": "2916110",
    "end": "2921270"
  },
  {
    "text": "source code we don't want it to be hosted publicly and to everyone we want to make sure that loud to private and kept in and this is",
    "start": "2921270",
    "end": "2927250"
  },
  {
    "text": "where kubernetes have got powerful secrets management for storing things like passwords and secure sensitive",
    "start": "2927250",
    "end": "2934600"
  },
  {
    "text": "information and so in this case we'll just use an command line to define it but of ways to do that with object definitions but the idea being that our",
    "start": "2934600",
    "end": "2942040"
  },
  {
    "text": "infrastructure team and operations can configure it out in advance when it comes to the purposes of using those",
    "start": "2942040",
    "end": "2947680"
  },
  {
    "text": "secrets and using that information for deployment purposes we just need to define what key and what credentials to",
    "start": "2947680",
    "end": "2953860"
  },
  {
    "text": "use in order to be able to access that image and so now we don't have to have shared passwords or password management",
    "start": "2953860",
    "end": "2960760"
  },
  {
    "text": "solutions instead we just need to manage what credentials were targeting and what credentials we need to use in order to",
    "start": "2960760",
    "end": "2967870"
  },
  {
    "text": "have able to achieve it when it comes to storage we want to be able to store say stateful information until we can do",
    "start": "2967870",
    "end": "2976150"
  },
  {
    "text": "that by when we define in our claim with like when we define in our llamo",
    "start": "2976150",
    "end": "2983020"
  },
  {
    "text": "definitions were and our deployment approach we can define volumes and so in this case we define an arm over thankful",
    "start": "2983020",
    "end": "2989380"
  },
  {
    "text": "set but the idea being that every deployment within our solution has the",
    "start": "2989380",
    "end": "2995590"
  },
  {
    "text": "required volume attached to it and so in this case every single time with scale up and every single time we add a new",
    "start": "2995590",
    "end": "3001610"
  },
  {
    "text": "replica to an instance it will have a unique volume attached to it if we wanted these could be shared but in this",
    "start": "3001610",
    "end": "3008040"
  },
  {
    "text": "case and we have that control and our flexibility or being defined based on",
    "start": "3008040",
    "end": "3013230"
  },
  {
    "text": "this object definition structure but when we're running things like databases and storage there's actually more",
    "start": "3013230",
    "end": "3020130"
  },
  {
    "text": "concerns and have more human intervention required to perform fit in operations",
    "start": "3020130",
    "end": "3025380"
  },
  {
    "text": "ie if we're learning elastic thirds and one part of the cluster goes down we can't just bring it back in and if my",
    "start": "3025380",
    "end": "3032400"
  },
  {
    "text": "sequel master goes down we've started it necessary could have some adverse",
    "start": "3032400",
    "end": "3037410"
  },
  {
    "text": "effects and a certain human based operations that need to happen to bring",
    "start": "3037410",
    "end": "3042570"
  },
  {
    "text": "our system back up into an operational State and so this is where our concept of kubernetes operators have been",
    "start": "3042570",
    "end": "3048420"
  },
  {
    "text": "introduced and the aim is how can we take what normally would have been done",
    "start": "3048420",
    "end": "3053460"
  },
  {
    "text": "by system engineers and suckster teams when certain things",
    "start": "3053460",
    "end": "3059049"
  },
  {
    "text": "happen like all grades need to be performed or something's gone down and create a codified automated way of",
    "start": "3059049",
    "end": "3066759"
  },
  {
    "text": "managing it so in this case we've got XE d which is a distributed datastore and",
    "start": "3066759",
    "end": "3073109"
  },
  {
    "text": "in order for certain things to happen there's I'm different states so as an",
    "start": "3073109",
    "end": "3079690"
  },
  {
    "text": "event loop the operator is looking at the current state of the system and deciding what actions need to be",
    "start": "3079690",
    "end": "3084729"
  },
  {
    "text": "performed so in this case it's observed that there are too many nodes and they're winning as different versions",
    "start": "3084729",
    "end": "3089799"
  },
  {
    "text": "which is unfortunate what we want and what I decide configuration it is they should all be willing one not 3.1 and",
    "start": "3089799",
    "end": "3097269"
  },
  {
    "text": "there should actually be three nodes within our cluster to ensure that we are as a call and so the operator knows how",
    "start": "3097269",
    "end": "3104049"
  },
  {
    "text": "to get to that desired state because it knows how to configure and deploy our system and so need know that it needs to",
    "start": "3104049",
    "end": "3109509"
  },
  {
    "text": "restart and recover one member it knows how to do that recovery operation it also knows how to do an upgrade but more",
    "start": "3109509",
    "end": "3116079"
  },
  {
    "text": "importantly it knows because this is what human would do that actually to do an upgrade we should also probably take",
    "start": "3116079",
    "end": "3121869"
  },
  {
    "text": "a backup beforehand just in case anything does go wrong and it is automating codified within our solution",
    "start": "3121869",
    "end": "3128380"
  },
  {
    "text": "and so these operators define this knowledge and experience and so they get",
    "start": "3128380",
    "end": "3133839"
  },
  {
    "text": "deployed I have a llamo definition until face it there what's in the state of our closer as part of the cluster the most",
    "start": "3133839",
    "end": "3140829"
  },
  {
    "text": "important thing is that when it comes to people within our teams who want to be able to deploy my sequel or pull scares",
    "start": "3140829",
    "end": "3147910"
  },
  {
    "text": "or sequel server in a reliable consistent fashion they can use that object definition from",
    "start": "3147910",
    "end": "3154150"
  },
  {
    "text": "kubernetes they can take the extension point created by the operator in this case the xcd cluster and just have to",
    "start": "3154150",
    "end": "3160960"
  },
  {
    "text": "define the parameters which is unique for that team so in this case how many nodes do you need and what this is",
    "start": "3160960",
    "end": "3166900"
  },
  {
    "text": "version should be when it comes to scaling up we would increase the thighs weird reapply and redeploy the subject",
    "start": "3166900",
    "end": "3174009"
  },
  {
    "text": "definition to the kubernetes cluster and then the operator would step in and figure out how did it go farm where we",
    "start": "3174009",
    "end": "3179680"
  },
  {
    "text": "are today to where our desired state is all through this really nice consistent",
    "start": "3179680",
    "end": "3186839"
  },
  {
    "text": "experience from a development point so the final part which I want to cover",
    "start": "3186839",
    "end": "3194170"
  },
  {
    "text": "is like what should we monitor now so we've got all of our star netcode winning and kuba name T's is making that",
    "start": "3194170",
    "end": "3201040"
  },
  {
    "text": "consistent it doesn't matter whether it's Linux or Windows the only thing what we need to specify if what no do we actually want that",
    "start": "3201040",
    "end": "3207310"
  },
  {
    "text": "workload winning on and we do that via notes later kubernetes is managing how do we make services available how do we",
    "start": "3207310",
    "end": "3213730"
  },
  {
    "text": "deploy and scale apart different components no matter what type of architecture but from a developer and",
    "start": "3213730",
    "end": "3221290"
  },
  {
    "text": "infrastructure team how do we now monitor what the state of that is so we can start raising alerts and so",
    "start": "3221290",
    "end": "3226720"
  },
  {
    "text": "kubernetes again have got some really nice extension points to make that easy and so when we're defining our services",
    "start": "3226720",
    "end": "3232990"
  },
  {
    "text": "ie how our applications are available to other things within the system we can define additional information additional",
    "start": "3232990",
    "end": "3239640"
  },
  {
    "text": "metadata that other services can use and build upon so in this case annotations",
    "start": "3239640",
    "end": "3244930"
  },
  {
    "text": "and we can find an annotation that Prometheus a monitoring solution should go off to this service and collect all",
    "start": "3244930",
    "end": "3251590"
  },
  {
    "text": "of the metrics and so we added a tag saying that when you'll do in your scraping of course our cursor please",
    "start": "3251590",
    "end": "3257230"
  },
  {
    "text": "include this service in this application and so within our dashboard it would",
    "start": "3257230",
    "end": "3263950"
  },
  {
    "text": "automatically detect that as we deploy it and then it will automatically update the configuration and the covers and include it within its scraping and so",
    "start": "3263950",
    "end": "3271780"
  },
  {
    "text": "what Prometheus does is it goes off to all of the different endpoints whether they're part of your application which",
    "start": "3271780",
    "end": "3277750"
  },
  {
    "text": "you can customize and expose your own metrics or after shelf exporters which automatically publish data based on your",
    "start": "3277750",
    "end": "3284680"
  },
  {
    "text": "CPU usage or dispatch usage right your underline node information or dari",
    "start": "3284680",
    "end": "3290260"
  },
  {
    "text": "targeted things like might equal operations so what are the number of deadlocks within your system or the",
    "start": "3290260",
    "end": "3295870"
  },
  {
    "text": "number of transactions which are active which are very targeted to that particular problem Prometheus didn't care for me if you",
    "start": "3295870",
    "end": "3301480"
  },
  {
    "text": "just ease this key value endpoint and it will go off it will scrape them data and make it available",
    "start": "3301480",
    "end": "3308350"
  },
  {
    "text": "for querying and so we can then start building up our nice pretty graphs so in",
    "start": "3308350",
    "end": "3313720"
  },
  {
    "text": "this case CPU usage and CPU nodes but we can build",
    "start": "3313720",
    "end": "3318790"
  },
  {
    "text": "them - not prettier by interests rethink levana and so this will take the Prometheus data source our than input and then you",
    "start": "3318790",
    "end": "3325569"
  },
  {
    "text": "can build dashboards and neither can then be awesomely projected onto display monitors and when things happen they'll",
    "start": "3325569",
    "end": "3331390"
  },
  {
    "text": "be alerted what we also have in Gravano is the ability to wave alerts based on",
    "start": "3331390",
    "end": "3336910"
  },
  {
    "text": "the data collected and so if we things going slowly in the in expected ways we",
    "start": "3336910",
    "end": "3343089"
  },
  {
    "text": "can get go finer to raise personal to patient's or slack messages or emails or",
    "start": "3343089",
    "end": "3348219"
  },
  {
    "text": "page duties based on this data because we've got kubernetes underlying this when new things get deployed and",
    "start": "3348219",
    "end": "3355209"
  },
  {
    "text": "new things get added into our cluster that will automatically start being introduced into our monitoring solution",
    "start": "3355209",
    "end": "3360459"
  },
  {
    "text": "and so we don't have to manually intervene and many go and reconfigure something instead the state of the",
    "start": "3360459",
    "end": "3367719"
  },
  {
    "text": "cluster defining what that should be so what should we be doing and so I wear",
    "start": "3367719",
    "end": "3374559"
  },
  {
    "text": "this or heading and what is the future of infrastructure and containerization technologies so we have Linux we have",
    "start": "3374559",
    "end": "3382029"
  },
  {
    "text": "Windows there now consistent it didn't really matter where we're deploying our",
    "start": "3382029",
    "end": "3387519"
  },
  {
    "text": "infrastructure because kubernetes see they're the same thing we also have alt devices and arm and so there's a really",
    "start": "3387519",
    "end": "3393849"
  },
  {
    "text": "cool company called resin and Neve have the capability of having the docker approach to docker workflow but",
    "start": "3393849",
    "end": "3400569"
  },
  {
    "text": "targeting IOT devices so when we want to package up and deploy our applications onto it we can deploy it directly onto",
    "start": "3400569",
    "end": "3407920"
  },
  {
    "text": "our own device I'm sure you would have kind of thought on the agenda you've got Scott Hanselman and you had",
    "start": "3407920",
    "end": "3413589"
  },
  {
    "text": "Alex talk about winning kubernetes on arm it's exactly the same thing we've been talking about today for Windows and",
    "start": "3413589",
    "end": "3418959"
  },
  {
    "text": "Linux it's just another extension point and you just another selector that you make available and for those watching",
    "start": "3418959",
    "end": "3425619"
  },
  {
    "text": "online there's video of downside I'm sure we have sequel server on containers",
    "start": "3425619",
    "end": "3431170"
  },
  {
    "text": "so now when we're thinking about how do we deploy sequel server we don't have to",
    "start": "3431170",
    "end": "3436509"
  },
  {
    "text": "worry about going through the 20 different screens in order to bear to get it to run that's all been doing and",
    "start": "3436509",
    "end": "3442539"
  },
  {
    "text": "a default configuration that we can build upon and we can share that configuration between all of our teams and make it available but why can we do",
    "start": "3442539",
    "end": "3450940"
  },
  {
    "text": "that for development time experiences - like we've already got the is your command line running at the container",
    "start": "3450940",
    "end": "3456640"
  },
  {
    "text": "so we don't need to install there so how long is it until we have seen flies digital studio we're known as a container I'll add develop machine",
    "start": "3456640",
    "end": "3462400"
  },
  {
    "text": "machine silhouette we don't need to install it we won't have to download five gig installation to spend two hours",
    "start": "3462400",
    "end": "3468210"
  },
  {
    "text": "installing it in a hope that it hasn't corrupted anything else in our system instead it can be packaged up and I'd",
    "start": "3468210",
    "end": "3474210"
  },
  {
    "text": "entered using container technologies both on Linux now on Windows and we've",
    "start": "3474210",
    "end": "3481240"
  },
  {
    "text": "already started to see this trend the next version of the clips it's going to be web-based ie the future ID from the",
    "start": "3481240",
    "end": "3488619"
  },
  {
    "text": "team it's gonna be web-based and in order to deploy overnight you were in it out of containers container that",
    "start": "3488619",
    "end": "3493960"
  },
  {
    "text": "identified everything like it needs to do and knows how to install it how to get it configured and we can instantly",
    "start": "3493960",
    "end": "3499599"
  },
  {
    "text": "get something working and when we don't want anymore we just stop the container remove it from my system and it's gone",
    "start": "3499599",
    "end": "3505089"
  },
  {
    "text": "forget we know nothing left behind and this third kalina's to point where everything is been a container all of",
    "start": "3505089",
    "end": "3511390"
  },
  {
    "text": "our workloads both long running our big data our development teams are all packaged up of containers and because",
    "start": "3511390",
    "end": "3517750"
  },
  {
    "text": "we're building need consistent experiences they can be deployed anywhere and in with the case of Windows",
    "start": "3517750",
    "end": "3523450"
  },
  {
    "text": "they literally convert different types of workload for different architectures all on the same operating system which",
    "start": "3523450",
    "end": "3529900"
  },
  {
    "text": "is fantastic and something which we've going to make lives a lot simpler terms of managing infrastructure so to play",
    "start": "3529900",
    "end": "3537009"
  },
  {
    "text": "around with this we have cat coda so you can explore different approaches to",
    "start": "3537009",
    "end": "3542890"
  },
  {
    "text": "building containers managing kubernetes and all of the other underlying things like how do you expose services in terms",
    "start": "3542890",
    "end": "3548920"
  },
  {
    "text": "of the talks I mentioned Alexis tomorrow I'm just before lunch which I highly recommend and I think it's gonna be",
    "start": "3548920",
    "end": "3554980"
  },
  {
    "text": "awesome he's the founder of weave and also the chairman for the Technical Committee of",
    "start": "3554980",
    "end": "3560289"
  },
  {
    "text": "the cloud native foundation I people who look after the kubernetes vision so it",
    "start": "3560289",
    "end": "3565359"
  },
  {
    "text": "should be a really interesting discussion and also we have pub comp for those please go see Todd and track Jes",
    "start": "3565359",
    "end": "3572890"
  },
  {
    "text": "for more interest information it can be an awesome party so finally what have we",
    "start": "3572890",
    "end": "3578980"
  },
  {
    "text": "discussed so we looked at how can we build and manage them ruin containers like what does it take to build a",
    "start": "3578980",
    "end": "3584769"
  },
  {
    "text": "Windows container and how is that different from building a Linux based system that we may",
    "start": "3584769",
    "end": "3590180"
  },
  {
    "text": "have experience of we then explore kubernetes like what does kubernetes bring to the party and how did it look",
    "start": "3590180",
    "end": "3595970"
  },
  {
    "text": "and what other benefits like why having it Orchestrator managing our",
    "start": "3595970",
    "end": "3601400"
  },
  {
    "text": "infrastructure how did that look from operation viewpoint and what benefit to the bring by having that abstraction and",
    "start": "3601400",
    "end": "3607790"
  },
  {
    "text": "then finally a quick look towards the future like can we have all of our workloads seamlessly winning across",
    "start": "3607790",
    "end": "3614540"
  },
  {
    "text": "different systems all being managed by the single view control a single view point of our control plane and our",
    "start": "3614540",
    "end": "3621200"
  },
  {
    "text": "single source of truth which is keeping edges so I hope you found something valuable I hope you enjoyed it if you",
    "start": "3621200",
    "end": "3627110"
  },
  {
    "text": "want more information please feel free to or a tweet or email me and with that thank you very much I hope you enjoyed",
    "start": "3627110",
    "end": "3633380"
  },
  {
    "text": "the method of conference [Applause]",
    "start": "3633380",
    "end": "3637669"
  }
]