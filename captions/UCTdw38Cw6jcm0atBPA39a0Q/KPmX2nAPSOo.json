[
  {
    "start": "0",
    "end": "425000"
  },
  {
    "text": "so thank you for coming to this talk I know it's straight after lunch and everyone wants to sleep but I'm going to",
    "start": "3910",
    "end": "10780"
  },
  {
    "text": "try and assure you I assure you that security is interesting and will keep you awake and excited for the rest of",
    "start": "10780",
    "end": "16150"
  },
  {
    "text": "the day maybe so the biggest problem I've seen",
    "start": "16150",
    "end": "22750"
  },
  {
    "text": "when trying to do secure software development is that people don't want to",
    "start": "22750",
    "end": "27849"
  },
  {
    "text": "do it because it sounds interesting not so interesting or it's difficult and so it gets left to later on in the",
    "start": "27849",
    "end": "34060"
  },
  {
    "text": "process and as you begin to get towards deploying your software into production",
    "start": "34060",
    "end": "40059"
  },
  {
    "text": "that first release you go through your your release planning checklist you know you've had pull request reviews on",
    "start": "40059",
    "end": "45219"
  },
  {
    "text": "everything not the security side of things and you've done capacity planning and you're pretty sure everything will",
    "start": "45219",
    "end": "51460"
  },
  {
    "text": "work and then there's that little chat box at the waltons has security audit and you go through to the security guy",
    "start": "51460",
    "end": "58410"
  },
  {
    "text": "who looks something like this and he's very not happy with you and says no",
    "start": "58410",
    "end": "64180"
  },
  {
    "text": "you're not allowed to deploy to production you've done all of these things wrong you're vulnerable to sequel injection you've got buffer overflows",
    "start": "64180",
    "end": "69850"
  },
  {
    "text": "you're storing all your passwords in plain text yeah and that's not a great",
    "start": "69850",
    "end": "77080"
  },
  {
    "text": "thing and that like having to like delay deploying your software because someone says no you can't you've written it",
    "start": "77080",
    "end": "83140"
  },
  {
    "text": "wrong doesn't feel great and it tends to kind of reinforce the opinion that security is hard and annoying and it",
    "start": "83140",
    "end": "90310"
  },
  {
    "text": "just gets in the way oh wait which kind",
    "start": "90310",
    "end": "95590"
  },
  {
    "text": "of puts security up in the top right corner of this graph as the time of your project goes on the difficulty for",
    "start": "95590",
    "end": "101650"
  },
  {
    "text": "security stays up and up at the top and the amount of difficulty it causes but",
    "start": "101650",
    "end": "107290"
  },
  {
    "text": "what I want to do is bring security to the front of your project so you start doing it at the beginning now this will",
    "start": "107290",
    "end": "113200"
  },
  {
    "text": "not just move the circle to the left on this graph but hopefully down to the bottom as well we can bake security into",
    "start": "113200",
    "end": "120340"
  },
  {
    "text": "applications in a way where it will reduce the amount of work you have to do and will be a more pleasant way to",
    "start": "120340",
    "end": "126070"
  },
  {
    "text": "develop software because if something's hard to do people probably don't want to",
    "start": "126070",
    "end": "131680"
  },
  {
    "text": "do it but if you make the secure way of doing something easy than the non-secure way people that do",
    "start": "131680",
    "end": "138330"
  },
  {
    "text": "it just because it's easier and the fact that it's secure is a nice side benefit and then you don't get angry security",
    "start": "138330",
    "end": "143610"
  },
  {
    "text": "guys shouting you so those are quick show of hands so I know sorry audience",
    "start": "143610",
    "end": "149130"
  },
  {
    "text": "interaction how many of you are or stick hands up if you're software developers",
    "start": "149130",
    "end": "155540"
  },
  {
    "text": "okay so basically everyone and stick your hands up if you're a security developer or really really interested in",
    "start": "155540",
    "end": "162930"
  },
  {
    "text": "security oh okay that's more than I was expecting so sorry if I get anything",
    "start": "162930",
    "end": "168690"
  },
  {
    "text": "wrong as Ian said this morning we are just guys up on stage and unfortunately it is usually guys and this is just",
    "start": "168690",
    "end": "177330"
  },
  {
    "text": "something I find interesting and I want to make better because I like making other developers lives easier so I'm",
    "start": "177330",
    "end": "184680"
  },
  {
    "text": "going to talk about an application which I used to work on which needed a lot of security love adding to it so this",
    "start": "184680",
    "end": "191430"
  },
  {
    "text": "wasn't at the beginning of the project it was at the end but we tried to go back and retrofit security the",
    "start": "191430",
    "end": "199140"
  },
  {
    "text": "application itself was a single monolithic code base written in mostly in c-sharp there was a database in a",
    "start": "199140",
    "end": "205530"
  },
  {
    "text": "message view it was deployed to five or six servers and around 400 to 500",
    "start": "205530",
    "end": "211440"
  },
  {
    "text": "desktop computers multiple services multiple applications one code base one",
    "start": "211440",
    "end": "217860"
  },
  {
    "text": "shared configuration file with a connection string in it luckily the connection string was encrypted so it",
    "start": "217860",
    "end": "224730"
  },
  {
    "text": "wasn't just in plain text on everyone's hard drives but the encryption key was",
    "start": "224730",
    "end": "229920"
  },
  {
    "text": "in the shared library that all applications had sitting next to them so it wasn't so much as secure but obscure",
    "start": "229920",
    "end": "238250"
  },
  {
    "text": "and so that's not great because any one of those machines got any kind of bad",
    "start": "238250",
    "end": "243660"
  },
  {
    "text": "thing happened to it and these included laptops that consultants took home with them so this was quite possible for any",
    "start": "243660",
    "end": "251970"
  },
  {
    "text": "of this to get out into the wild so what we wanted to do is try and make each of the services have their own connection",
    "start": "251970",
    "end": "258209"
  },
  {
    "text": "string so that we could at least try and isolate certain parts of the system would mean we can also give different",
    "start": "258209",
    "end": "265020"
  },
  {
    "text": "permissions to different services and maybe give certain connection strings read-only access",
    "start": "265020",
    "end": "271160"
  },
  {
    "text": "so to do that we implemented this I've written this as a tamil configuration",
    "start": "271460",
    "end": "277020"
  },
  {
    "text": "file but this was done in octopus deploy we had a single connection string parameterised with username password",
    "start": "277020",
    "end": "284280"
  },
  {
    "text": "database and host and a default value defined for each one of these fields then each piece of software like in this",
    "start": "284280",
    "end": "292349"
  },
  {
    "text": "example the desktop one had an override for what it's username and password were and it's saying again as we got to the",
    "start": "292349",
    "end": "299370"
  },
  {
    "text": "worker service we then gave that its own username password so we were able to migrate towards having separate",
    "start": "299370",
    "end": "305250"
  },
  {
    "text": "connection strings for each application the downside is all the problems that we created in the process of doing this",
    "start": "305250",
    "end": "311810"
  },
  {
    "text": "because we had to copy and paste passwords between sequel management studio and our configuration files and",
    "start": "311810",
    "end": "319849"
  },
  {
    "text": "something used to like putting in a non printing space at the end of connection",
    "start": "319849",
    "end": "325380"
  },
  {
    "text": "string passwords and if you caught that that was fine but one of our connection",
    "start": "325380",
    "end": "332099"
  },
  {
    "text": "strings actually had the non printing space at the end of its password in the production database and then we have the",
    "start": "332099",
    "end": "340199"
  },
  {
    "text": "non printing space in our configuration file as well and this was fine until",
    "start": "340199",
    "end": "345630"
  },
  {
    "text": "someone notices it oh my goodness there's a non printing space at the end of this I'll fix that delete and now",
    "start": "345630",
    "end": "351389"
  },
  {
    "text": "suddenly the application can't kind of talk to its database and if you've got all this happening for each environment",
    "start": "351389",
    "end": "357330"
  },
  {
    "text": "and we had like a local environment a dev environment test at QA a staging in",
    "start": "357330",
    "end": "363000"
  },
  {
    "text": "a production because more environments is better it's not there's only one of",
    "start": "363000",
    "end": "369779"
  },
  {
    "text": "those environments that gets hit by these kind of problems that breaks things and that is obviously production",
    "start": "369779",
    "end": "375319"
  },
  {
    "text": "because people fix Devers they do it and they notice in QA but by the time of his production people have stopped noticing",
    "start": "375319",
    "end": "383000"
  },
  {
    "text": "so while this was an improvement in the fact that we had unique connectors drinks we were causing ourselves quite a",
    "start": "383000",
    "end": "388650"
  },
  {
    "text": "lot of work and having to remember to change the username and password for each environment we deployed in for each",
    "start": "388650",
    "end": "394500"
  },
  {
    "text": "application was quite error-prone now as this was an octopus we did have the",
    "start": "394500",
    "end": "400860"
  },
  {
    "text": "ability to put in a deployment step which would generate a username and password for the database on deployment",
    "start": "400860",
    "end": "407850"
  },
  {
    "text": "time and write that into the configuration file for us so that was an improvement but it still means the",
    "start": "407850",
    "end": "414240"
  },
  {
    "text": "connection string is in plain text or encrypted ish in plain text on the",
    "start": "414240",
    "end": "420290"
  },
  {
    "text": "machines that it was deployed to and we wanted to avoid that as well so he had a",
    "start": "420290",
    "end": "426690"
  },
  {
    "start": "425000",
    "end": "575000"
  },
  {
    "text": "few goals for our project we were decided that this really wasn't the best way to do it there must be a better way so we wrote down what we wanted to",
    "start": "426690",
    "end": "433530"
  },
  {
    "text": "achieve the first thing we wanted to achieve was unique credentials per",
    "start": "433530",
    "end": "438690"
  },
  {
    "text": "environment and per application and preferably per user but not straightaway",
    "start": "438690",
    "end": "444570"
  },
  {
    "text": "that was kind of a stretch goal we didn't want any manual steps or scripts",
    "start": "444570",
    "end": "450150"
  },
  {
    "text": "especially if manual step meant copy and paste we wanted everything to be",
    "start": "450150",
    "end": "456630"
  },
  {
    "text": "securely stored and preferably not on the machines being used and reside in memory but we didn't really want this",
    "start": "456630",
    "end": "462690"
  },
  {
    "text": "kind of information written to drive we'd quite like an audit log because then we can see who's using our",
    "start": "462690",
    "end": "469950"
  },
  {
    "text": "connection strings because at the moment we have no idea and being software",
    "start": "469950",
    "end": "475590"
  },
  {
    "text": "developers we didn't want to write any code now this is this is something that I I put a push to this because while I",
    "start": "475590",
    "end": "482070"
  },
  {
    "text": "like writing code the more code I write the more code I have to support which",
    "start": "482070",
    "end": "488550"
  },
  {
    "text": "means the less code I can write so writing code prevents me from writing code so I want to write as little as",
    "start": "488550",
    "end": "494640"
  },
  {
    "text": "possible because I don't like bugs and the more lines you have the more chance for bugs you've got so we decided to use",
    "start": "494640",
    "end": "505770"
  },
  {
    "text": "hash corpus volt product now has anyone here heard of volt again hands up Oh",
    "start": "505770",
    "end": "511340"
  },
  {
    "text": "quite a few and put your hands up again if you use it not so many right so for those who",
    "start": "511340",
    "end": "519930"
  },
  {
    "text": "don't know what vault is vault is a well how she cope is the company that makes things like terraform and console and",
    "start": "519930",
    "end": "526650"
  },
  {
    "text": "nomads and Packer and all of these kind of cloud tools that you probably use maybe one-off volt itself is secrets as",
    "start": "526650",
    "end": "535950"
  },
  {
    "text": "a service it supports multiple types of Secrets so not only static ones but it can do",
    "start": "535950",
    "end": "541060"
  },
  {
    "text": "dynamic secrets which is what we're going to be looking at today it's got multiple compliance",
    "start": "541060",
    "end": "547450"
  },
  {
    "text": "certificates so it can its supports it there FIPS 140 - 2 which is the federal",
    "start": "547450",
    "end": "555220"
  },
  {
    "text": "information processing standard I don't really know what that is but apparently if you need to be compliant with that",
    "start": "555220",
    "end": "560260"
  },
  {
    "text": "this is and it's highly configurable in how it stores its data so it can be",
    "start": "560260",
    "end": "566380"
  },
  {
    "text": "configured for high availability and you can store data and if it back end such as consort ceddy",
    "start": "566380",
    "end": "574560"
  },
  {
    "start": "575000",
    "end": "1047000"
  },
  {
    "text": "so as much as looking at things is fun I'm going to try and show you it with",
    "start": "575100",
    "end": "581380"
  },
  {
    "text": "some live coding what could possibly go wrong so I have a virtual machine running in the background which just has vault",
    "start": "581380",
    "end": "587560"
  },
  {
    "text": "installed on it and we're going to set this up to connect to a Postgres database and",
    "start": "587560",
    "end": "593380"
  },
  {
    "text": "generates a username and password for a particular application and then we're going to go through and improve it",
    "start": "593380",
    "end": "598870"
  },
  {
    "text": "slowly so the first thing I want to do is generate a database so everything",
    "start": "598870",
    "end": "608050"
  },
  {
    "text": "involved is configurable using REST API or the vault clients the vault client",
    "start": "608050",
    "end": "613839"
  },
  {
    "text": "itself is using the REST API so anything you can do with the client you can do yourself this makes it much more author",
    "start": "613839",
    "end": "619750"
  },
  {
    "text": "than that much more automatable than other products that i've looked at yeah this is the database",
    "start": "619750",
    "end": "628600"
  },
  {
    "text": "back-end is this big enough at the backbone I am going to check it's just doing a little bit",
    "start": "628600",
    "end": "636240"
  },
  {
    "text": "so I've enabled the database back-end and this database back-end can support",
    "start": "638030",
    "end": "643170"
  },
  {
    "text": "multiple kinds of databases in our case we're going to look at Postgres but it also supports my sequel ms SQL oracle",
    "start": "643170",
    "end": "651510"
  },
  {
    "text": "and then all of the cooler databases like influx and MongoDB and Cassandra",
    "start": "651510",
    "end": "657150"
  },
  {
    "text": "and that kind of thing so you can connect to anything interesting you want",
    "start": "657150",
    "end": "663050"
  },
  {
    "text": "now we'll get back to what this particular party is a bit later but the the basic overview is that everything",
    "start": "663650",
    "end": "670680"
  },
  {
    "text": "involved is path based so you'll notice that when we mounted the database of",
    "start": "670680",
    "end": "675810"
  },
  {
    "text": "connection here it's a database slash this means that I can write a policy against that database and saying anyone",
    "start": "675810",
    "end": "683280"
  },
  {
    "text": "is allowed to access anything under the creds path and they're allowed to read",
    "start": "683280",
    "end": "688830"
  },
  {
    "text": "from it but not allowed to write and this is what our applications will use later we now need to configure vault two",
    "start": "688830",
    "end": "699360"
  },
  {
    "text": "so that it can communicate with Postgres because it needs to generate usernames and passwords so we're using the",
    "start": "699360",
    "end": "706530"
  },
  {
    "text": "Postgres database plugin and we give this particular we give vault a username",
    "start": "706530",
    "end": "715290"
  },
  {
    "text": "and password to talk to Postgres now in my case i'm using the root account of my Postgres instance please don't do that",
    "start": "715290",
    "end": "721500"
  },
  {
    "text": "in production you should use a separate account so you can rotate those queues rotate those keys as well and we have a",
    "start": "721500",
    "end": "729330"
  },
  {
    "text": "connection string which has got merge fields in this is not 4 volts to connect",
    "start": "729330",
    "end": "734850"
  },
  {
    "text": "to what we'll use this to do its own connection but it'll also use this to connect and generate to use names and",
    "start": "734850",
    "end": "741120"
  },
  {
    "text": "passwords for our new accounts which we'll see in a minute I'm using service",
    "start": "741120",
    "end": "746460"
  },
  {
    "text": "discovery as well I have Postgres registered into console and because I'm a bad person that I've switched off as",
    "start": "746460",
    "end": "752370"
  },
  {
    "text": "herself because otherwise I have to deal with certificates and that's too much security for one to talk",
    "start": "752370",
    "end": "758890"
  },
  {
    "text": "and finally we generate two different roles for our database I've created a",
    "start": "758890",
    "end": "765850"
  },
  {
    "text": "reader role and a writer you could also do something like a migration role which would have more permissions so these two",
    "start": "765850",
    "end": "772960"
  },
  {
    "text": "are identical with the exception of their creation statements the reader is",
    "start": "772960",
    "end": "779290"
  },
  {
    "text": "again created using these with merge fields for the name in the password which Walt will fill out itself and then",
    "start": "779290",
    "end": "786160"
  },
  {
    "text": "we also grant select on all tables whereas with the writer role we also",
    "start": "786160",
    "end": "791620"
  },
  {
    "text": "grant insert update and delete if you've requested a read role you can only select data so let's see if I can",
    "start": "791620",
    "end": "800050"
  },
  {
    "text": "remember the syntax to make this work clear that so volt read database creds",
    "start": "800050",
    "end": "810270"
  },
  {
    "text": "let's have a writer okay so this made an",
    "start": "810270",
    "end": "815320"
  },
  {
    "text": "HTTP request in the background to volt which then communicated with Postgres to create a new role",
    "start": "815320",
    "end": "822430"
  },
  {
    "text": "everything is called role in this by the way it's brilliant Ike so I created a new user in the Postgres",
    "start": "822430",
    "end": "828730"
  },
  {
    "text": "database with this lovely user name and this is a password you'll see here there",
    "start": "828730",
    "end": "836170"
  },
  {
    "text": "so that we've got a lease duration so this particular set of credentials is only valid for 10 minutes but you can",
    "start": "836170",
    "end": "842920"
  },
  {
    "text": "renew it and based on that configuration we did earlier you're allowed to renew your credentials up to an hour which we",
    "start": "842920",
    "end": "852130"
  },
  {
    "text": "have a look at in here so if i refresh that you'll see we've gained this",
    "start": "852130",
    "end": "860649"
  },
  {
    "text": "here we so this user that's been created can connect as many times as it wants",
    "start": "860649",
    "end": "866800"
  },
  {
    "text": "and it's got a valid until date so you can only connect with this user until this data lapses at which point the",
    "start": "866800",
    "end": "874449"
  },
  {
    "text": "database will stop you from accessing but also vault will come along a little bit later and delete this user as well",
    "start": "874449",
    "end": "880410"
  },
  {
    "text": "unless you refresh your credentials now the Refresh of credentials is",
    "start": "880410",
    "end": "885670"
  },
  {
    "text": "important because we can now have credentials that are only valid for a very short amount of time and we'll get",
    "start": "885670",
    "end": "891850"
  },
  {
    "text": "to how to actually do refreshes and as other parts later so now that we've done",
    "start": "891850",
    "end": "900129"
  },
  {
    "text": "that we can actually run a c-sharp application so let's do this",
    "start": "900129",
    "end": "906569"
  },
  {
    "text": "yep good bigger there we go so let's",
    "start": "915790",
    "end": "922090"
  },
  {
    "text": "have a look at the program for",
    "start": "922090",
    "end": "925560"
  },
  {
    "text": "that one so let's do this in c-sharp we're",
    "start": "930010",
    "end": "935270"
  },
  {
    "text": "basically doing the same thing we did on the command line except we're using the volt connection library she is down here",
    "start": "935270",
    "end": "941800"
  },
  {
    "text": "so I'm fetching from the environment the address of the vault server I'm fetching",
    "start": "941800",
    "end": "947420"
  },
  {
    "text": "the root vault token so that I can authenticate and then using the client here we fetched HBase credentials called",
    "start": "947420",
    "end": "957800"
  },
  {
    "text": "reader so this time we're going to generate a reader can reader account rather than a writing one and this just",
    "start": "957800",
    "end": "963500"
  },
  {
    "text": "then uses that to select all of the roles after the database so we can see what they are and I've already built",
    "start": "963500",
    "end": "969740"
  },
  {
    "text": "this so we don't have to wait for that I hope it's",
    "start": "969740",
    "end": "976480"
  },
  {
    "text": "right did work so you can see here we've got the Postgres account which is our root user and then we have two accounts",
    "start": "983150",
    "end": "991250"
  },
  {
    "text": "created the first one is the writer which is one we created up here and we've got a reader as well which both",
    "start": "991250",
    "end": "999380"
  },
  {
    "text": "expire and the reader expires in about ten minutes well you might notice here that the",
    "start": "999380",
    "end": "1005800"
  },
  {
    "text": "authentication the user names have a lot of information in them so we've got what",
    "start": "1005800",
    "end": "1012580"
  },
  {
    "text": "account what vault account created the database account and what role it asked",
    "start": "1012580",
    "end": "1021400"
  },
  {
    "text": "for so we have the writer from the command line and the reader from the application we then have a random generated hash and then a timestamp when",
    "start": "1021400",
    "end": "1029290"
  },
  {
    "text": "it was actually generated so there's a lot of information you can see just in the users here the trouble with his is",
    "start": "1029290",
    "end": "1035740"
  },
  {
    "text": "is that these are both the root account for my vault instance and you really",
    "start": "1035740",
    "end": "1041050"
  },
  {
    "text": "really don't want to give you a root token out because then you might as well not have the vault instance so how do",
    "start": "1041050",
    "end": "1049480"
  },
  {
    "start": "1047000",
    "end": "1111000"
  },
  {
    "text": "you prove what application is talking about because if anyone can talk to it",
    "start": "1049480",
    "end": "1055870"
  },
  {
    "text": "and request things then you've not really gained any security you've made it slightly more steps but so",
    "start": "1055870",
    "end": "1061360"
  },
  {
    "text": "congratulations you've added latency to your pipeline so with bolt there as I",
    "start": "1061360",
    "end": "1068350"
  },
  {
    "text": "mentioned earlier it's very configurable there are many different ways you can authenticate with it developers on their local machines tend",
    "start": "1068350",
    "end": "1074440"
  },
  {
    "text": "to authenticate using github authentication applications in production environments you can use",
    "start": "1074440",
    "end": "1079750"
  },
  {
    "text": "things like as your Active Directory or AWS I am GCP I am it's good I am in GCP",
    "start": "1079750",
    "end": "1086110"
  },
  {
    "text": "I think whatever GTP's version you can also use things like TLS certificates",
    "start": "1086110",
    "end": "1093000"
  },
  {
    "text": "JSON web tokens radius I'm not sure what radiuses it's in capital letters so it",
    "start": "1093000",
    "end": "1099010"
  },
  {
    "text": "must be important and a bunch of other things like LDAP as well so it's very",
    "start": "1099010",
    "end": "1104290"
  },
  {
    "text": "configurable but because we're deploying individual applications we're going to use something called a pros",
    "start": "1104290",
    "end": "1112470"
  },
  {
    "start": "1111000",
    "end": "1144000"
  },
  {
    "text": "you can think of app roles as being like usernames and passwords but for",
    "start": "1113080",
    "end": "1119630"
  },
  {
    "text": "applications rather than people they're made of two parts a role ID and a secret",
    "start": "1119630",
    "end": "1124789"
  },
  {
    "text": "ID role ID is the username secret ID is the password the difference is multiple",
    "start": "1124789",
    "end": "1132620"
  },
  {
    "text": "applications can have the same role ID or rather multiple instances of the same",
    "start": "1132620",
    "end": "1138350"
  },
  {
    "text": "application use the same role ID and then they have their own secret which identifies them so we're going to look",
    "start": "1138350",
    "end": "1147200"
  },
  {
    "start": "1144000",
    "end": "1260000"
  },
  {
    "text": "at the the pipeline of how I set this up because they don't like manual things so I try to have everything in my",
    "start": "1147200",
    "end": "1152450"
  },
  {
    "text": "repositories this includes what access I want the application to have so we start",
    "start": "1152450",
    "end": "1159950"
  },
  {
    "text": "off from the left side without get repository in here I have a configuration file which just mentions",
    "start": "1159950",
    "end": "1166159"
  },
  {
    "text": "what policies I want to use so the one we created earlier was the Postgres connector but in this case this unnamed",
    "start": "1166159",
    "end": "1173450"
  },
  {
    "text": "application is also using a rabid mq connector when the CI server runs it",
    "start": "1173450",
    "end": "1181159"
  },
  {
    "text": "updates volts role definition with what policies it requires you do this usually",
    "start": "1181159",
    "end": "1186860"
  },
  {
    "text": "after report requesters be merged into master and you should use strong base development because it's the best",
    "start": "1186860",
    "end": "1192250"
  },
  {
    "text": "slightest idea you could do this without like having manual like outside the team",
    "start": "1192250",
    "end": "1199279"
  },
  {
    "text": "so if you have a security team maybe they create your roles for you and say write your application role is called",
    "start": "1199279",
    "end": "1204860"
  },
  {
    "text": "this and you now have to hope that those policies don't change because if someone",
    "start": "1204860",
    "end": "1211610"
  },
  {
    "text": "outside your repository has control of those policies you could do a deployment or not do a deployment and suddenly your",
    "start": "1211610",
    "end": "1218659"
  },
  {
    "text": "application stops working because someone's changed the the application role and said right it can no longer",
    "start": "1218659",
    "end": "1225080"
  },
  {
    "text": "connect to rabbitmq because they think me you're not connecting to it but you're really are relying on it and now your application doesn't work by keeping",
    "start": "1225080",
    "end": "1233029"
  },
  {
    "text": "all the information in the repository we have a single source of truth and by automating it we have all the audit logs",
    "start": "1233029",
    "end": "1238370"
  },
  {
    "text": "of when and where it changed so in this case we'd have the git commit history the build log and volts internal audits",
    "start": "1238370",
    "end": "1244860"
  },
  {
    "text": "when something changed if you have a security team that doesn't like this",
    "start": "1244860",
    "end": "1249870"
  },
  {
    "text": "make them pull requests or code owners for that area of code they can approve and deny things but it would mean that",
    "start": "1249870",
    "end": "1256290"
  },
  {
    "text": "you can still keep your source of truth in your repository the actual command",
    "start": "1256290",
    "end": "1262679"
  },
  {
    "start": "1260000",
    "end": "1288000"
  },
  {
    "text": "for updating I use something fairly generic so it just uses the repository name so here we have authentication app",
    "start": "1262679",
    "end": "1271290"
  },
  {
    "text": "role again another thing called role so this is the app role for application I've named it after the repository and",
    "start": "1271290",
    "end": "1278270"
  },
  {
    "text": "the token lasts 20 minutes with a maximum of one hour and then uses",
    "start": "1278270",
    "end": "1283620"
  },
  {
    "text": "whatever policies we named in the repository now that we've done that pit",
    "start": "1283620",
    "end": "1290450"
  },
  {
    "start": "1288000",
    "end": "1430000"
  },
  {
    "text": "when the build finishes it triggers a deployment with octopus so maybe we've generated a docker container or a new",
    "start": "1290450",
    "end": "1297510"
  },
  {
    "text": "get package or something that we're going to deploy somewhere with octopus octopus will now fetch the secret ID for",
    "start": "1297510",
    "end": "1304860"
  },
  {
    "text": "the application from vault it will write that into a configuration file and deploy the application onto this host on",
    "start": "1304860",
    "end": "1311400"
  },
  {
    "text": "the right the role ID comes from terraform or whatever software you're",
    "start": "1311400",
    "end": "1317669"
  },
  {
    "text": "using to manage your infrastructure be that chef for ansible or puppet it's",
    "start": "1317669",
    "end": "1323820"
  },
  {
    "text": "worth noting that these two applications terraform an octopus only have permission to do one thing terraform can",
    "start": "1323820",
    "end": "1330270"
  },
  {
    "text": "only fetch roll IDs octopus can only fetch secret IDs this is important as it",
    "start": "1330270",
    "end": "1335760"
  },
  {
    "text": "means that neither of these applications has enough information to impersonate your deployed application so only when",
    "start": "1335760",
    "end": "1342960"
  },
  {
    "text": "the application actually hits the server on the right does it have both pieces of information available to it you can even",
    "start": "1342960",
    "end": "1349679"
  },
  {
    "text": "go a step further and have octopus able to generate a secret access a token",
    "start": "1349679",
    "end": "1355530"
  },
  {
    "text": "rather than a secret access a tokens can be used exactly once to get to the",
    "start": "1355530",
    "end": "1360600"
  },
  {
    "text": "secret which means when your application first starts if it uses the token it's got and that doesn't work it means",
    "start": "1360600",
    "end": "1366210"
  },
  {
    "text": "someone's tampered with your pipeline i've not normally gone this far i tend",
    "start": "1366210",
    "end": "1371280"
  },
  {
    "text": "to trust certain parts of my infrastructure like I trust the developers to actually change their own",
    "start": "1371280",
    "end": "1376919"
  },
  {
    "text": "vault policies rather than not trusting them the trouble with this system is if",
    "start": "1376919",
    "end": "1383610"
  },
  {
    "text": "you've got a lot of applications you're going to have to put a lot of environment variables into your host and",
    "start": "1383610",
    "end": "1390890"
  },
  {
    "text": "terraform needs to know which roles it's trying to right environment variables to which means it needs to know every",
    "start": "1390890",
    "end": "1397620"
  },
  {
    "text": "application that's going to be deployed into your hosts which means your terraform configuration for your generic",
    "start": "1397620",
    "end": "1404309"
  },
  {
    "text": "host is now tied to what applications go on that host you could read all roles",
    "start": "1404309",
    "end": "1410220"
  },
  {
    "text": "out of voltar and just put all of the role IDs into the environment but we're",
    "start": "1410220",
    "end": "1415710"
  },
  {
    "text": "trying to lock the applications down to say this application only runs this host only has enough information to run the",
    "start": "1415710",
    "end": "1421380"
  },
  {
    "text": "applications it's supposed to be running so if you don't like doing that",
    "start": "1421380",
    "end": "1428480"
  },
  {
    "text": "there's meant to be another slide there is okay well demo that first thing I'll come back to that pie in a minute so",
    "start": "1428480",
    "end": "1436020"
  },
  {
    "start": "1430000",
    "end": "1643000"
  },
  {
    "text": "let's look at app IDs let's clear that",
    "start": "1436020",
    "end": "1441620"
  },
  {
    "text": "so again this is all configured off the command line so the first thing we do",
    "start": "1442130",
    "end": "1447210"
  },
  {
    "text": "again is we enable the app rollback end again there's many app authentication at backends but we're going to look at the",
    "start": "1447210",
    "end": "1452970"
  },
  {
    "text": "app role and in all of my genius naming",
    "start": "1452970",
    "end": "1457980"
  },
  {
    "text": "I've called this demo service because naming things is hard demo service is allowed to request the",
    "start": "1457980",
    "end": "1463620"
  },
  {
    "text": "token for 20 minutes up to an hour it's allowed to use the default policy which",
    "start": "1463620",
    "end": "1468630"
  },
  {
    "text": "doesn't have anything particularly interesting in and it's allowed to connect Postgres we then generate a roll",
    "start": "1468630",
    "end": "1477120"
  },
  {
    "text": "ID so when you create the roll this ID is generated internally and I'm now just fetching it onto the command line so I'm",
    "start": "1477120",
    "end": "1483570"
  },
  {
    "text": "now going to pretend to be terraform and I'm going to pretend to be octopus and to prevent be octopus I am going to",
    "start": "1483570",
    "end": "1490950"
  },
  {
    "text": "generate a secret ID for the demo service so every time I run this command I will get a new secret ID back so",
    "start": "1490950",
    "end": "1499440"
  },
  {
    "text": "that's now set up the application so we'll first pretend to be octopus I'm",
    "start": "1499440",
    "end": "1504450"
  },
  {
    "text": "gonna copy that now I'm going to change directory first",
    "start": "1504450",
    "end": "1510880"
  },
  {
    "text": "see this is the fun of life cutting up in parole VRA excellent so writing this",
    "start": "1510880",
    "end": "1522880"
  },
  {
    "text": "secret ID into the application configuration file is essentially what Optimus will be doing for us right now",
    "start": "1522880",
    "end": "1528100"
  },
  {
    "text": "and then we'll take actually let's we run the application like this first and",
    "start": "1528100",
    "end": "1533800"
  },
  {
    "text": "see what happens don't match Rolexes you know and we",
    "start": "1533800",
    "end": "1540280"
  },
  {
    "text": "should get an error yeah value cannot be null role ID so we need to provide the role ID that's here copy that and then",
    "start": "1540280",
    "end": "1548860"
  },
  {
    "text": "we can pretend to be terraformed by doing export fault role ID i hope i",
    "start": "1548860",
    "end": "1555970"
  },
  {
    "text": "remember the name of that parameter correctly so now when i run the application right you can see here it",
    "start": "1555970",
    "end": "1564160"
  },
  {
    "text": "connected again we have the default post quest role in the database and now we have our two separate users so we've got",
    "start": "1564160",
    "end": "1573550"
  },
  {
    "text": "the route one which we created off the command line earlier and now we have one that was generated by an EPROM",
    "start": "1573550",
    "end": "1578560"
  },
  {
    "text": "and the reader access that it required and again and expires in 10 minutes now",
    "start": "1578560",
    "end": "1583810"
  },
  {
    "text": "hopefully about twenty seconds elapsed yep then you can see that the previous",
    "start": "1583810",
    "end": "1589090"
  },
  {
    "text": "reader role has now disappeared and the",
    "start": "1589090",
    "end": "1594340"
  },
  {
    "text": "code to do that",
    "start": "1594340",
    "end": "1597120"
  },
  {
    "text": "he's basically identical in fact the main function is identical the only",
    "start": "1600800",
    "end": "1605840"
  },
  {
    "text": "difference that I had to make for this application is that I'm deserializing a",
    "start": "1605840",
    "end": "1611210"
  },
  {
    "text": "JSON file to get my secret ID and I'm reading the vault role ID out of the",
    "start": "1611210",
    "end": "1616700"
  },
  {
    "text": "environment rather than doing it with a manual JSON deserialization like this I'd recommend using something like the",
    "start": "1616700",
    "end": "1623000"
  },
  {
    "text": "Microsoft configuration library so you can have strong type configuration which is an entire separate topic I will bang",
    "start": "1623000",
    "end": "1629840"
  },
  {
    "text": "on about that for ages and even so I'm still trying to strong type it so we just changed the",
    "start": "1629840",
    "end": "1637010"
  },
  {
    "text": "authentication method to a proloff and then the rest of the application is the same but as I mentioned in the",
    "start": "1637010",
    "end": "1644750"
  },
  {
    "start": "1643000",
    "end": "1785000"
  },
  {
    "text": "presentation what if you're not what if you've got so many applications and you",
    "start": "1644750",
    "end": "1650059"
  },
  {
    "text": "can't write into the environment or you're not you don't have automatic control of your",
    "start": "1650059",
    "end": "1655550"
  },
  {
    "text": "infrastructure in the company where this original application was we definitely",
    "start": "1655550",
    "end": "1661760"
  },
  {
    "text": "didn't have particular control of our own destructor it was all manually created and everything was manually installed on it and I don't want to have",
    "start": "1661760",
    "end": "1668600"
  },
  {
    "text": "to keep manually pasting environment variables around because I get the same problems I had last time so there is a",
    "start": "1668600",
    "end": "1676400"
  },
  {
    "text": "trade-off you can make here it is slightly less secure and that's to have the developer generally take the role ID",
    "start": "1676400",
    "end": "1683090"
  },
  {
    "text": "when it's created and embed that into the source code of the application it still keeps the role ID and secret ID",
    "start": "1683090",
    "end": "1690350"
  },
  {
    "text": "reasonably separate until you hit the octopus face of your deployments so it",
    "start": "1690350",
    "end": "1695420"
  },
  {
    "text": "is slightly less secure but if you're not automatically managing your server",
    "start": "1695420",
    "end": "1701030"
  },
  {
    "text": "infrastructure this might be a better way of doing it it's again it's a trade-off you need to make so who here",
    "start": "1701030",
    "end": "1709340"
  },
  {
    "text": "uses kubernetes hands up again oh good only two or three of you",
    "start": "1709340",
    "end": "1714410"
  },
  {
    "text": "I don't like kubernetes this makes me very unusual I think so I'm actually",
    "start": "1714410",
    "end": "1720350"
  },
  {
    "text": "going to demo the next part using nomad because that's a better container scheduler does anyone use nomad no",
    "start": "1720350",
    "end": "1726320"
  },
  {
    "text": "there's no surprise you should do it's much better I'm not paid to say any of this by the way I just think it's better",
    "start": "1726320",
    "end": "1734050"
  },
  {
    "text": "I was a bit of an extreme reaction to dissing kubernetes so we can simplify a",
    "start": "1734050",
    "end": "1743410"
  },
  {
    "text": "pipeline of it if we use a container scheduler so again you could you can",
    "start": "1743410",
    "end": "1748750"
  },
  {
    "text": "imagine the kubernetes logo here if you'd rather it does work from now I've tried it but no matters it'll easier on",
    "start": "1748750",
    "end": "1754270"
  },
  {
    "text": "me so in the case of this we build our docker container and then deploy it to",
    "start": "1754270",
    "end": "1759760"
  },
  {
    "text": "Nomad and nomad itself has the Volt integration to fetch your role IDs and your secret IDs for application now this",
    "start": "1759760",
    "end": "1767710"
  },
  {
    "text": "does mean you have to trust no man to have integration to volt but it's a fairly high trust piece of software",
    "start": "1767710",
    "end": "1773710"
  },
  {
    "text": "anyway so if I'm fine with delegating that Trust to a vault at Nomad because",
    "start": "1773710",
    "end": "1780370"
  },
  {
    "text": "it means I don't have to worry about server infrastructure anymore now there's none of you've really used",
    "start": "1780370",
    "end": "1788260"
  },
  {
    "start": "1785000",
    "end": "1862000"
  },
  {
    "text": "it this is a very small snippet of a nomad configuration file it's not the prettiest to read I'm afraid here we",
    "start": "1788260",
    "end": "1796000"
  },
  {
    "text": "have the policies that we were mentioning earlier so push cross connector and then we have a template",
    "start": "1796000",
    "end": "1801820"
  },
  {
    "text": "file now this is written in the Linux app environment variable format so we",
    "start": "1801820",
    "end": "1808240"
  },
  {
    "text": "have a DB host with our console path in it and then we have this integration",
    "start": "1808240",
    "end": "1813400"
  },
  {
    "text": "here this is the same as the command we ran on the command line to generate the credentials so generate me a database",
    "start": "1813400",
    "end": "1820780"
  },
  {
    "text": "reader and we write it into this DB username and DB password field the two",
    "start": "1820780",
    "end": "1826540"
  },
  {
    "text": "jason parts because it strings it doesn't matter but it makes it escape all of the data correctly so if you have",
    "start": "1826540",
    "end": "1833200"
  },
  {
    "text": "any strange characters that are not safe to just stick on the command line such",
    "start": "1833200",
    "end": "1839200"
  },
  {
    "text": "as back slashes this will escape and boy we write it into a secret file called",
    "start": "1839200",
    "end": "1845320"
  },
  {
    "text": "file that M the name doesn't really matter and we mark it as an environment variable file this means it won't get",
    "start": "1845320",
    "end": "1851260"
  },
  {
    "text": "written to disk on the machine that actually runs the application but it will be loaded into their applications",
    "start": "1851260",
    "end": "1856540"
  },
  {
    "text": "environment variables this is probably not making a vast amount of sense yet so",
    "start": "1856540",
    "end": "1863080"
  },
  {
    "start": "1862000",
    "end": "2150000"
  },
  {
    "text": "I've got another demo because I like living dangerously with coding right let's see how this works let's",
    "start": "1863080",
    "end": "1871170"
  },
  {
    "text": "clear all of this out of the way again so this time we're going to run the Nomad file so let's do mo mad job run",
    "start": "1871170",
    "end": "1881190"
  },
  {
    "text": "apps external Nomad file good so while",
    "start": "1881190",
    "end": "1888340"
  },
  {
    "text": "that's spinning itself up let's actually have a look at the file so this is a",
    "start": "1888340",
    "end": "1896080"
  },
  {
    "text": "nomad configuration file there's not a huge amount to it that we need to worry about other than we're going to run the",
    "start": "1896080",
    "end": "1902740"
  },
  {
    "text": "dotnet 2 commands we're going to give it a path to our application the",
    "start": "1902740",
    "end": "1909370"
  },
  {
    "text": "application itself is going to come from this artifacts repository and it's just a zip file the application is hosted on",
    "start": "1909370",
    "end": "1917080"
  },
  {
    "text": "my local machine and the artifacts is just a docker container that is an HTTP",
    "start": "1917080",
    "end": "1922180"
  },
  {
    "text": "server we've got some resource limits and then we have the the vault policies",
    "start": "1922180",
    "end": "1927490"
  },
  {
    "text": "here so again we only want to connect to the database we have the DB host and",
    "start": "1927490",
    "end": "1932620"
  },
  {
    "text": "port coming out of console because I had console integration available so why not and then the username and password",
    "start": "1932620",
    "end": "1939370"
  },
  {
    "text": "generated off the command line the destination again is the environment and",
    "start": "1939370",
    "end": "1944860"
  },
  {
    "text": "here so with luck we have one job",
    "start": "1944860",
    "end": "1950140"
  },
  {
    "text": "running in Nome and",
    "start": "1950140",
    "end": "1953850"
  },
  {
    "text": "that's the task itself so this is the application that we launched and if we",
    "start": "1955620",
    "end": "1961960"
  },
  {
    "text": "look at the logs and zoom in a bit big",
    "start": "1961960",
    "end": "1967090"
  },
  {
    "text": "enough you can see here that the same thing has occurred when we've run this application each time we've connected to",
    "start": "1967090",
    "end": "1972760"
  },
  {
    "text": "the database we've generated a role and then we've connected to the database and read all of our files read all roles out",
    "start": "1972760",
    "end": "1979779"
  },
  {
    "text": "of the database now the really interesting part with this is when we",
    "start": "1979779",
    "end": "1985929"
  },
  {
    "text": "look at the source code for the application so we don't have a reference",
    "start": "1985929",
    "end": "1994240"
  },
  {
    "text": "to the vault client anymore the application doesn't need to know about it in fact the only thing we're doing is",
    "start": "1994240",
    "end": "1999909"
  },
  {
    "text": "taking all environment variables that are prefixed with DB underscore and populating an extra stringbuilder with",
    "start": "1999909",
    "end": "2006539"
  },
  {
    "text": "it and using that to build the connection string so my properties that I named in the file by prefixing them as",
    "start": "2006539",
    "end": "2012630"
  },
  {
    "text": "DB underscore username they match to the username property that's on this builder so if we look at the builder username",
    "start": "2012630",
    "end": "2023880"
  },
  {
    "text": "that name came from our environment variable that was filled out by nomads with the vault credentials which gets",
    "start": "2023880",
    "end": "2031649"
  },
  {
    "text": "filled out by this which means that our application code becomes much much",
    "start": "2031649",
    "end": "2038010"
  },
  {
    "text": "smaller because it doesn't have to deal with where the configuration came from anymore long as it's available in",
    "start": "2038010",
    "end": "2044700"
  },
  {
    "text": "environment variables now you could manually map this instead I said I've done this because it's as little code as",
    "start": "2044700",
    "end": "2050820"
  },
  {
    "text": "possible but if you wanted to be a bit more explicit we could replace all of this with something like let's do this",
    "start": "2050820",
    "end": "2058580"
  },
  {
    "text": "our builder it was new and PG sequel and extra",
    "start": "2058580",
    "end": "2067179"
  },
  {
    "text": "string called uh you name equals and",
    "start": "2067180",
    "end": "2072669"
  },
  {
    "text": "then I had my environment variable called and I get all D because I think",
    "start": "2072670",
    "end": "2082480"
  },
  {
    "text": "that's how I called it yeah so that",
    "start": "2082480",
    "end": "2088929"
  },
  {
    "text": "would be equivalent of these lines below except because I used automatic mapping I don't have to type all of this out and",
    "start": "2088930",
    "end": "2095889"
  },
  {
    "text": "I don't like typing and saying go to the",
    "start": "2095890",
    "end": "2100960"
  },
  {
    "text": "password obviously and the beauty of doing this through nomads is that I",
    "start": "2100960",
    "end": "2106270"
  },
  {
    "text": "don't have to think about how to refresh my tokens anymore because nomads and",
    "start": "2106270",
    "end": "2112290"
  },
  {
    "text": "kubernetes will use the vault integration and they know when that token is due to expire and as long as",
    "start": "2112290",
    "end": "2118930"
  },
  {
    "text": "it's refreshable it will generate a new token write it into your environment variables and then it can either restart",
    "start": "2118930",
    "end": "2125290"
  },
  {
    "text": "your application or send a custom signal to it so if you use handles sig int or something you can then respond to the",
    "start": "2125290",
    "end": "2131560"
  },
  {
    "text": "configuration file changing reread the variables and now you can stay connected in your application stays running which",
    "start": "2131560",
    "end": "2138520"
  },
  {
    "text": "is a fairly little amount of work on your part to get short-lived credentials",
    "start": "2138520",
    "end": "2144030"
  },
  {
    "text": "if it it's probably a good idea to go through why I want short-lived credentials and that's primarily because",
    "start": "2144030",
    "end": "2152380"
  },
  {
    "start": "2150000",
    "end": "2226000"
  },
  {
    "text": "if a server gets compromised the shorter time that my credentials are valid for the shorter time that an attacker has to",
    "start": "2152380",
    "end": "2159550"
  },
  {
    "text": "actually use them now obviously if you've got a really small window you do",
    "start": "2159550",
    "end": "2164950"
  },
  {
    "text": "paid the latency of having to fetch a new credentials each time you need them but you compare that against uptime a",
    "start": "2164950",
    "end": "2172540"
  },
  {
    "text": "volt now volt is highly available but if you've deployed a single node of it as long as your volt node is up enough for",
    "start": "2172540",
    "end": "2180280"
  },
  {
    "text": "your direction of your credentials that so they're always available and never expire you can generate very small",
    "start": "2180280",
    "end": "2186430"
  },
  {
    "text": "windows of time we're covered and we're credentials are usable and it limits",
    "start": "2186430",
    "end": "2192460"
  },
  {
    "text": "your attack service something chronic but as we've seen all of these reports of like data being exposed on the web",
    "start": "2192460",
    "end": "2197900"
  },
  {
    "text": "people haven't secured I think MongoDB s left open to the Internet imagine if",
    "start": "2197900",
    "end": "2202940"
  },
  {
    "text": "those credentials were only available for like two minutes or five minutes",
    "start": "2202940",
    "end": "2208060"
  },
  {
    "text": "hopefully not much data would be siphoned out some order to try the credentials they've expired they probably give up so the short of the",
    "start": "2208060",
    "end": "2215510"
  },
  {
    "text": "lifetime your credentials the better to a point you don't want me to expire instantly the auditing side of this as",
    "start": "2215510",
    "end": "2224930"
  },
  {
    "text": "well was one of our other goals our audits in vaults are like everything",
    "start": "2224930",
    "end": "2230270"
  },
  {
    "start": "2226000",
    "end": "2278000"
  },
  {
    "text": "else configured through the CLI in this case I'm using the file audit vault",
    "start": "2230270",
    "end": "2236030"
  },
  {
    "text": "supports three different ways of auditing your information that's a file",
    "start": "2236030",
    "end": "2242530"
  },
  {
    "text": "system so as long as you can read from a socket you can make a an audit back-end that",
    "start": "2242530",
    "end": "2249080"
  },
  {
    "text": "can receive information there is one thing to note with audio backends in a",
    "start": "2249080",
    "end": "2256100"
  },
  {
    "text": "production environment you should definitely use audits and you need to use at least two if you use one you're",
    "start": "2256100",
    "end": "2263150"
  },
  {
    "text": "asking for problems the reason for this is vault will when it receives a request",
    "start": "2263150",
    "end": "2268340"
  },
  {
    "text": "for a token or any kind of information it will write that request to the audit",
    "start": "2268340",
    "end": "2273590"
  },
  {
    "text": "log generate the token write the response to the audit log and then return the token",
    "start": "2273590",
    "end": "2280030"
  }
]