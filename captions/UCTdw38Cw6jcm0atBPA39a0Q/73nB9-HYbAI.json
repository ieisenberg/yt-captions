[
  {
    "text": "thank you well welcome back for some of you welcome for some of you this talk came",
    "start": "2149",
    "end": "10650"
  },
  {
    "text": "about because about two years ago made a proposal to present at a conference on this topic in 40 minutes and I realized",
    "start": "10650",
    "end": "21090"
  },
  {
    "text": "as I got closer to the topic to the time of the conference there was a rising sense of panic because no no it's been a",
    "start": "21090",
    "end": "27810"
  },
  {
    "text": "few hours talking about this topic as part of a course and then I asked can I",
    "start": "27810",
    "end": "33059"
  },
  {
    "text": "actually do this in 40 minutes and I began to fear it was not possible",
    "start": "33059",
    "end": "40200"
  },
  {
    "text": "two things save me one is a picture that I invented which I think really helps to bring things together the other was that",
    "start": "40200",
    "end": "46590"
  },
  {
    "text": "the conference was oversubscribed and people couldn't get into the rooms if they came in late so they were all",
    "start": "46590",
    "end": "52500"
  },
  {
    "text": "arriving early and I started my talking started my talk five minutes early I can",
    "start": "52500",
    "end": "57870"
  },
  {
    "text": "do it in 45 minutes so having you know you know possibly the squeeze into an",
    "start": "57870",
    "end": "63210"
  },
  {
    "text": "hour here and having already done some stuff in the previous session like this is this is relaxed okay",
    "start": "63210",
    "end": "71369"
  },
  {
    "text": "so I've got some slides in here that I represented in the previous presentation",
    "start": "71369",
    "end": "76439"
  },
  {
    "text": "I'm going to go through those this is the slides there because sometimes I do just this presentation as a standalone",
    "start": "76439",
    "end": "82290"
  },
  {
    "text": "presentation so there's a couple of pieces in there and they're there in the middle understand skip over oh I I am",
    "start": "82290",
    "end": "91590"
  },
  {
    "text": "still me okay same me that was here an hour ago I'm still the main pages maintainer I",
    "start": "91590",
    "end": "98009"
  },
  {
    "text": "still wrote a book I still teach courses there's some course books now as I said",
    "start": "98009",
    "end": "104549"
  },
  {
    "text": "I normally spend a lot of time on this so even though I have more time than usual and in a you know in a conference",
    "start": "104549",
    "end": "110100"
  },
  {
    "text": "context I still AM you know reasonably fast as a there's some details I'm going to leave out but I hope that you'll walk",
    "start": "110100",
    "end": "116490"
  },
  {
    "text": "away with a picture of what user name spaces why they are kind of magical okay",
    "start": "116490",
    "end": "124110"
  },
  {
    "text": "but first I need a little bit of background and this is the notion of capabilities on Linux now",
    "start": "124110",
    "end": "133250"
  },
  {
    "text": "traditionally on UNIX systems the privilege model is is is quite a simple one there's two categories of users",
    "start": "133629",
    "end": "140830"
  },
  {
    "text": "there's normal users who are subject to a lot of checks on what they are allowed",
    "start": "140830",
    "end": "146989"
  },
  {
    "text": "to do a lot of restrictions and the super user user ID zero who can bypass",
    "start": "146989",
    "end": "153370"
  },
  {
    "text": "many of these restrictions and then this sort of prove this sort of very coarse",
    "start": "153370",
    "end": "159260"
  },
  {
    "text": "privilege model is is is is it's problematic because I know long so I've",
    "start": "159260",
    "end": "166160"
  },
  {
    "text": "jumped I've jumped up a second jump to jump forward a second and of course the way traditionally to give an",
    "start": "166160",
    "end": "173239"
  },
  {
    "text": "unprivileged user the possibility to do something privileged is to allow them to",
    "start": "173239",
    "end": "179359"
  },
  {
    "text": "use a set UID root program create a set UID root program that does some privileged operation and then when the",
    "start": "179359",
    "end": "187640"
  },
  {
    "text": "user executes that program the resulting process has UID 0 and it has the powers",
    "start": "187640",
    "end": "195019"
  },
  {
    "text": "of super user and this is a useful technique it's a powerful technique but it's also a dangerous technique and the",
    "start": "195019",
    "end": "202790"
  },
  {
    "text": "problem is that problem Springs out of this coarse granularity of this privilege model because maybe we're",
    "start": "202790",
    "end": "210560"
  },
  {
    "text": "going to write a set UID program that hypothetically speaking let's the number",
    "start": "210560",
    "end": "216079"
  },
  {
    "text": "of user changed the system time now you know only super user can do that so we",
    "start": "216079",
    "end": "222410"
  },
  {
    "text": "create a sent UID root program that lets unprinted uses change the system time",
    "start": "222410",
    "end": "227620"
  },
  {
    "text": "but if that program could somehow be compromised by an attacker then that",
    "start": "227620",
    "end": "234560"
  },
  {
    "text": "program the compromised program could potentially do any kind of dangerous thing that super user could do on the",
    "start": "234560",
    "end": "242150"
  },
  {
    "text": "system and this is my set UID root program that are dangerous because if",
    "start": "242150",
    "end": "247250"
  },
  {
    "text": "they're compromised you have all the power of super user so when these",
    "start": "247250",
    "end": "253340"
  },
  {
    "text": "programs are compromised there's no limit to the damage that can be done you know if the attacker can can gain full",
    "start": "253340",
    "end": "260510"
  },
  {
    "text": "control of the program capabilities are",
    "start": "260510",
    "end": "265520"
  },
  {
    "text": "an attempt - to sort of solve this problem and the",
    "start": "265520",
    "end": "270539"
  },
  {
    "text": "idea of capabilities is let's divide the power of superuser into small pieces and",
    "start": "270539",
    "end": "277080"
  },
  {
    "text": "currently there are 38 of these small pieces you can see them described and the capabilities manual page for example",
    "start": "277080",
    "end": "285530"
  },
  {
    "text": "these are some of the capabilities cap DAC override this is a process for this",
    "start": "285530",
    "end": "291300"
  },
  {
    "text": "capability can bypass file machine checks read and write any file on the",
    "start": "291300",
    "end": "296430"
  },
  {
    "text": "system go through any directory caps this time that's the capabilities to",
    "start": "296430",
    "end": "302370"
  },
  {
    "text": "change the system time capsule sad Minh is a kind of sad capability because it",
    "start": "302370",
    "end": "307979"
  },
  {
    "text": "lets you do way too much but that's that's that's a rant for another day the",
    "start": "307979",
    "end": "314840"
  },
  {
    "text": "point is now you could instead of having",
    "start": "314840",
    "end": "320220"
  },
  {
    "text": "set UID root programs which are so powerful and very dangerous that they",
    "start": "320220",
    "end": "325289"
  },
  {
    "text": "compromised now you can have programs that have just one of these 38 capabilities attached and perhaps caps",
    "start": "325289",
    "end": "332759"
  },
  {
    "text": "this time for example to take out of the example I just gave and you attach that to the binary instead and then when a",
    "start": "332759",
    "end": "339659"
  },
  {
    "text": "user executes that binary the process gets just that capability and if the",
    "start": "339659",
    "end": "344880"
  },
  {
    "text": "program could somehow be compromised then the attacker can do less damage",
    "start": "344880",
    "end": "351659"
  },
  {
    "text": "hopefully because the program is a less powerful program than a set UID root",
    "start": "351659",
    "end": "357750"
  },
  {
    "text": "program so just so that the the what I",
    "start": "357750",
    "end": "366060"
  },
  {
    "text": "want you to take away from this is the idea you know that processes can have capabilities some subset of the power of",
    "start": "366060",
    "end": "371789"
  },
  {
    "text": "root capabilities can be attached to executable files and when when users",
    "start": "371789",
    "end": "378000"
  },
  {
    "text": "execute those files the resulting process has whatever capability was attached to the file and that having",
    "start": "378000",
    "end": "385530"
  },
  {
    "text": "these processes that have a subset of the power of super user in other words just one or two cables and having",
    "start": "385530",
    "end": "392159"
  },
  {
    "text": "binaries that have just one of the capabilities instead of being set UID route binaries this the idea is here we",
    "start": "392159",
    "end": "399839"
  },
  {
    "text": "can create a less dangerous world in a corner security sense okay so this is this is",
    "start": "399839",
    "end": "410810"
  },
  {
    "text": "one of the pieces I'm gonna really just skip I mentioned already this idea that namespaces provide isolation I just want",
    "start": "410810",
    "end": "417390"
  },
  {
    "text": "to say that we do have a bunch of different namespace types as what I said in the previous session there are seven",
    "start": "417390",
    "end": "422550"
  },
  {
    "text": "different namespace types at the moment soon there's going to be one or two more one of them is actually going the new",
    "start": "422550",
    "end": "428100"
  },
  {
    "text": "the next namespace that's likely to appear by the one way is time namespaces so you know processes that are in",
    "start": "428100",
    "end": "434970"
  },
  {
    "text": "different time namespace instances they see different time so we've got seven",
    "start": "434970",
    "end": "445020"
  },
  {
    "text": "different types of namespaces and the one that I haven't really talked about yet which is were now talking about now is user name spaces so skip skip skip",
    "start": "445020",
    "end": "452880"
  },
  {
    "text": "skip skip skip skip skip skip skip skip skip skip skip skip skip skip user name",
    "start": "452880",
    "end": "460320"
  },
  {
    "text": "spaces now what user name spaces do is",
    "start": "460320",
    "end": "468810"
  },
  {
    "text": "allow us to have UID oh sorry per namespace UID and GID Maps the idea here",
    "start": "468810",
    "end": "477060"
  },
  {
    "text": "is you know process that's inside user name space it has a certain user ID in a certain group ID and outside the user",
    "start": "477060",
    "end": "484260"
  },
  {
    "text": "name space it has a different user ID and a different group ID and the",
    "start": "484260",
    "end": "489750"
  },
  {
    "text": "interesting use case here is the process that since IDs namespace it has UID 0 it",
    "start": "489750",
    "end": "497070"
  },
  {
    "text": "is super user it has all the powers of super user but outside the namespace",
    "start": "497070",
    "end": "502740"
  },
  {
    "text": "it's it's some unpublished user ID it doesn't have any of the powers of super",
    "start": "502740",
    "end": "508710"
  },
  {
    "text": "user outside that user name space user",
    "start": "508710",
    "end": "514770"
  },
  {
    "text": "name spaces are like PID no spaces which I talked about a little bit in the last session they have a hierarchical",
    "start": "514770",
    "end": "521789"
  },
  {
    "text": "relationship we've got the notion that a you each user name space has a parent user name space which has a parent user",
    "start": "521789",
    "end": "527340"
  },
  {
    "text": "name space going back to the initial user name space",
    "start": "527340",
    "end": "532760"
  },
  {
    "text": "the way that this parental relationship gets established as when a news namespace is created",
    "start": "532760",
    "end": "538640"
  },
  {
    "text": "that's done by calling a clone or unshared system call the process that",
    "start": "538640",
    "end": "543890"
  },
  {
    "text": "creates the new user namespace the parent of that user namespace is the username space of the process that",
    "start": "543890",
    "end": "550400"
  },
  {
    "text": "called clone or unshare to create the news namespace that's that's how this this hierarchical raishin chip gets",
    "start": "550400",
    "end": "557810"
  },
  {
    "text": "built up and one of the reasons that this parental relationship matters is",
    "start": "557810",
    "end": "564860"
  },
  {
    "text": "because it determines that rules about how capabilities work and because we have a little bit more time than a",
    "start": "564860",
    "end": "571070"
  },
  {
    "text": "normally have I might even have time to talk about those rules we'll just see okay so there's just a an example",
    "start": "571070",
    "end": "577850"
  },
  {
    "text": "picture of a user name space hierarchy where some user name spaces are children",
    "start": "577850",
    "end": "590000"
  },
  {
    "text": "of other user name spaces now when a when a news namespace is created the",
    "start": "590000",
    "end": "597170"
  },
  {
    "text": "very first process inside that username space by definition the kernel just does",
    "start": "597170",
    "end": "602420"
  },
  {
    "text": "this automatically that new process has a full set of capabilities so we made",
    "start": "602420",
    "end": "607700"
  },
  {
    "text": "the clone system called the client system called created the child process in a new user name space and the currently says automatically that",
    "start": "607700",
    "end": "613610"
  },
  {
    "text": "process has all capabilities all the powers of super user but only inside the",
    "start": "613610",
    "end": "621530"
  },
  {
    "text": "user namespace and unpacking what that means is it's the whole point of why I'm here right now okay",
    "start": "621530",
    "end": "629180"
  },
  {
    "text": "so one of the things that we need to do with user namespaces when we create a news namespace if we we need to find UID",
    "start": "629180",
    "end": "636350"
  },
  {
    "text": "and GID Maps these maps are saying the",
    "start": "636350",
    "end": "641540"
  },
  {
    "text": "cradles inside the namespace what do they correspond to outside the namespace in the parent user namespace so one of",
    "start": "641540",
    "end": "648860"
  },
  {
    "text": "the very first things that you do after creating a new user namespace is you define what these mappings are going to",
    "start": "648860",
    "end": "655550"
  },
  {
    "text": "look like and the way that you do this is by writing suitable strings to two",
    "start": "655550",
    "end": "661430"
  },
  {
    "text": "files for the process that's inside the namespace in the proc kid UID map file in the proper GID map",
    "start": "661430",
    "end": "669589"
  },
  {
    "text": "file to begin with the content of these two files is empty but for the processes",
    "start": "669589",
    "end": "675020"
  },
  {
    "text": "inside the new user namespace you then write strings to these two files and that defines what the mappings are going",
    "start": "675020",
    "end": "682279"
  },
  {
    "text": "to look like a view IDs and group IDs so there's a whole lot of rules about doing",
    "start": "682279",
    "end": "688910"
  },
  {
    "text": "this because this is all very security sensitive stuff so you can't just do arbitrary things in terms of creating",
    "start": "688910",
    "end": "695570"
  },
  {
    "text": "these mappings there's a whole bunch of rules I can't I just don't have time to talk about the rules here but you can",
    "start": "695570",
    "end": "700940"
  },
  {
    "text": "read about them in the in the user namespaces manual page but essentially",
    "start": "700940",
    "end": "706580"
  },
  {
    "text": "what you're doing is writing to these files strings that look like this lines that look like this some ID inside the",
    "start": "706580",
    "end": "715040"
  },
  {
    "text": "namespace maps to a different ID outside of the namespace and then a range so for",
    "start": "715040",
    "end": "722240"
  },
  {
    "text": "example you might have a map that looks like this where it says zero inside the namespace maps to 1000 outside the",
    "start": "722240",
    "end": "730250"
  },
  {
    "text": "namespaces in the parent namespace for a range of one only one user ID is valid inside this namespace well you could",
    "start": "730250",
    "end": "737360"
  },
  {
    "text": "have said here ten and that will be saying 0 through to nine inside the namespace maps to 1000 through to one",
    "start": "737360",
    "end": "744860"
  },
  {
    "text": "thousand and nine outside the namespace okay this this namespace by though I",
    "start": "744860",
    "end": "753730"
  },
  {
    "text": "misspoke this this kind of mapping by the way we're just a single you ideas map and it's the UID 0 inside the",
    "start": "753730",
    "end": "760970"
  },
  {
    "text": "namespaces something outside the namespace is called the route mapping now using the unshare command which i",
    "start": "760970",
    "end": "768470"
  },
  {
    "text": "mentioned earlier on we can create a new user name space with the dash capital u option and if we say - R as well this is",
    "start": "768470",
    "end": "776000"
  },
  {
    "text": "all look automated is create for me route mappings for the UID map and the",
    "start": "776000",
    "end": "781250"
  },
  {
    "text": "GID map so we could do something like this",
    "start": "781250",
    "end": "786820"
  },
  {
    "text": "I'm very put off by the interlacing here can you see this down the back ok this yeah ok maybe it looks worse for me than",
    "start": "786820",
    "end": "796490"
  },
  {
    "text": "that that's for you actually so here for example I start off as an",
    "start": "796490",
    "end": "804780"
  },
  {
    "text": "unprivileged user UID 1000 GID 1000 and then I say create a new user name space",
    "start": "804780",
    "end": "812310"
  },
  {
    "text": "unshare - you with - are the root mappings I run a bash shell in that news",
    "start": "812310",
    "end": "817620"
  },
  {
    "text": "namespace and then I turn around and what unshare is done beside behind the scenes for me is write some strings to",
    "start": "817620",
    "end": "824430"
  },
  {
    "text": "the UID map and the GID map and then I can just check what those mappings that I'm sure is created for me what what",
    "start": "824430",
    "end": "832140"
  },
  {
    "text": "they look like so I can't proc dollar dollar UID map I see 0 maps to 1000 for one inside the night",
    "start": "832140",
    "end": "840120"
  },
  {
    "text": "for range of 1 and 0 for the GID map 0 inside the user name space maps to 1000",
    "start": "840120",
    "end": "847650"
  },
  {
    "text": "outside again for a range of 1 and if I",
    "start": "847650",
    "end": "855800"
  },
  {
    "text": "look so it's so I've changed the shell prompt here by the way just doing the Cape that you know this is a different",
    "start": "855800",
    "end": "861330"
  },
  {
    "text": "shell and you in a news namespace if I from that shell look at the credentials",
    "start": "861330",
    "end": "867900"
  },
  {
    "text": "of the shell process I see that has UID 0 and GID 0 and this",
    "start": "867900",
    "end": "873930"
  },
  {
    "text": "is one of the points about user namespaces that whenever you look at credentials in any context the",
    "start": "873930",
    "end": "878940"
  },
  {
    "text": "credentials are always mapped according was showing you according to whatever the UID map and the GID map that are",
    "start": "878940",
    "end": "885960"
  },
  {
    "text": "defined for your user name space define those user IDs should be so even though outside the in the outside world this",
    "start": "885960",
    "end": "892620"
  },
  {
    "text": "process has UID 1000 from our perspective inside these namespace",
    "start": "892620",
    "end": "897720"
  },
  {
    "text": "looks like we have UID 0 and when I look in the proc page status file to find out",
    "start": "897720",
    "end": "905430"
  },
  {
    "text": "about the processes credentials and",
    "start": "905430",
    "end": "912660"
  },
  {
    "text": "capabilities again I say UID 0 g ID 0 and for the effective capabilities i see",
    "start": "912660",
    "end": "921810"
  },
  {
    "text": "that this process has all capabilities there are 9 FS there that's nine nine",
    "start": "921810",
    "end": "927330"
  },
  {
    "text": "times four bits is 36 and three is two more bits that's 38 bits that are on",
    "start": "927330",
    "end": "932769"
  },
  {
    "text": "okay those 38 capabilities of course none of us is very good at interpreting",
    "start": "932769",
    "end": "940239"
  },
  {
    "text": "hex strings there is a program called get get peek apps that you can use to",
    "start": "940239",
    "end": "946149"
  },
  {
    "text": "actually display these capability sets in a human I like to call it a human",
    "start": "946149",
    "end": "952119"
  },
  {
    "text": "readable if not necessarily human comprehensible formats because the notation is not that easy to understand",
    "start": "952119",
    "end": "958689"
  },
  {
    "text": "but at least it's a bit more readable than hexadecimal okay now from our new",
    "start": "958689",
    "end": "968470"
  },
  {
    "text": "shell we check what the PID is it's a certain number and then from a shell in the initial username space I then turn",
    "start": "968470",
    "end": "976209"
  },
  {
    "text": "around and say well let's go look at the credentials of that process in proc Pig status and seen from the shell in the",
    "start": "976209",
    "end": "984189"
  },
  {
    "text": "initial username space the process looks like it has credentials you know UID 1000 PID 1000 okay because here from a",
    "start": "984189",
    "end": "993309"
  },
  {
    "text": "shell in the initial username space we see the credentials as they would appear in that username space okay now we might",
    "start": "993309",
    "end": "1005129"
  },
  {
    "text": "then say well hey in that news announcer and that unit in the in space we have all capabilities Wow perhaps I can start",
    "start": "1005129",
    "end": "1011879"
  },
  {
    "text": "doing interesting stuff perhaps I can change the host name for example so then I try to do that say",
    "start": "1011879",
    "end": "1018059"
  },
  {
    "text": "host name changed the host name of the system and I get straightaway an error message to change the host name requires",
    "start": "1018059",
    "end": "1028470"
  },
  {
    "text": "the cap source admin capability and this process has the caps as admin capability nevertheless it can't change the host",
    "start": "1028470",
    "end": "1035459"
  },
  {
    "text": "name and we'll see why soon okay the key",
    "start": "1035459",
    "end": "1043678"
  },
  {
    "text": "point is that the new shell there by the way is still in the initial UTS namespace now let's talk about user",
    "start": "1043679",
    "end": "1051809"
  },
  {
    "text": "namespaces and capabilities so the first process and the news namespace gets a",
    "start": "1051809",
    "end": "1057120"
  },
  {
    "text": "full set of capabilities but those capabilities can only be exercised on",
    "start": "1057120",
    "end": "1063440"
  },
  {
    "text": "objects that are governed by the new username space question",
    "start": "1063440",
    "end": "1068519"
  },
  {
    "text": "processor what does that mean we know some things already there's a bunch of",
    "start": "1068519",
    "end": "1074759"
  },
  {
    "text": "different namespace types currently seven each one of those namespace types governs some sort of global resource UTS",
    "start": "1074759",
    "end": "1082679"
  },
  {
    "text": "namespaces they govern host name and domain name mount namespaces they govern",
    "start": "1082679",
    "end": "1087899"
  },
  {
    "text": "the list of mount points Network namespaces govern a bunch of network related resources now what I want to add",
    "start": "1087899",
    "end": "1096750"
  },
  {
    "text": "to this mixed is mixes that each non-user namespace is owned by some",
    "start": "1096750",
    "end": "1104429"
  },
  {
    "text": "particular user namespace there's always an ownership relationship every non user",
    "start": "1104429",
    "end": "1110789"
  },
  {
    "text": "name space belongs to some particular user namespace and when we create a new",
    "start": "1110789",
    "end": "1117600"
  },
  {
    "text": "non user namespace same time we do that what happens is that the new non user",
    "start": "1117600",
    "end": "1123059"
  },
  {
    "text": "namespace automatically is owned by the user namespace in which the creating",
    "start": "1123059",
    "end": "1128429"
  },
  {
    "text": "process resides and that's how the ownership relationship gets established",
    "start": "1128429",
    "end": "1134990"
  },
  {
    "text": "now if a process operates on resources that are governed by some norm use",
    "start": "1135710",
    "end": "1141539"
  },
  {
    "text": "namespace what the kernel checks is what are the processes capabilities in the",
    "start": "1141539",
    "end": "1148139"
  },
  {
    "text": "user name space that owns the non user namespace that governs the resources",
    "start": "1148139",
    "end": "1156049"
  },
  {
    "text": "okay so that was very abstract let's try and make this more concrete by a picture",
    "start": "1156049",
    "end": "1162230"
  },
  {
    "text": "and the picture I'm going to show you is the picture that would result when we executed this command unshare - capital",
    "start": "1162230",
    "end": "1170399"
  },
  {
    "text": "you created username space with the route mappings just because that's simple - lower case you create a new UTS",
    "start": "1170399",
    "end": "1178019"
  },
  {
    "text": "namespace at the same time and run some program now here's what we get as a",
    "start": "1178019",
    "end": "1185850"
  },
  {
    "text": "result first of all this is the program in the that was run that was run here",
    "start": "1185850",
    "end": "1194299"
  },
  {
    "text": "okay now this program this process running this program",
    "start": "1194299",
    "end": "1200430"
  },
  {
    "text": "it's in a new user name space is the initial user name space that was created",
    "start": "1200430",
    "end": "1206490"
  },
  {
    "text": "when the system was booted up well we've just created the new user name space and because we created the new UTS namespace",
    "start": "1206490",
    "end": "1214200"
  },
  {
    "text": "at the same time there's a new UTS namespace here and because what's created at the same time as the user name space it's owned by the initial but",
    "start": "1214200",
    "end": "1224730"
  },
  {
    "text": "by the new user namespace okay now this process here it has effective user IDs zero inside",
    "start": "1224730",
    "end": "1231330"
  },
  {
    "text": "the namespace but outside the namespace as effective user ID 1000 something this is as unprivileged user ad 1000 it has a",
    "start": "1231330",
    "end": "1238110"
  },
  {
    "text": "full set of capabilities that's what this notation here means equals EP all capabilities ineffective and permitted",
    "start": "1238110",
    "end": "1245480"
  },
  {
    "text": "it's in a new user name space it's in a new UTS namespace but for example it is",
    "start": "1245480",
    "end": "1252150"
  },
  {
    "text": "still a member of the initial network namespace and the reason is that when we",
    "start": "1252150",
    "end": "1258120"
  },
  {
    "text": "created this process we created the new UTS namespace on the new user name space but we can create a new network",
    "start": "1258120",
    "end": "1264450"
  },
  {
    "text": "namespace so this new this new process is in the same network namespace as its",
    "start": "1264450",
    "end": "1270810"
  },
  {
    "text": "parent was and it's also in the same it's just it's also in the initial PID namespace the initial C group namespace",
    "start": "1270810",
    "end": "1277560"
  },
  {
    "text": "the initial mal namespace there's no IP seen in space and so on it just haven't didn't have room to show all those other namespaces and of course there's an",
    "start": "1277560",
    "end": "1285450"
  },
  {
    "text": "initial UTS namespace as well but this process is a member of the second UTS namespace now suppose this process is I",
    "start": "1285450",
    "end": "1296880"
  },
  {
    "text": "want to change the host name and change those name need to have the caps Asst admin capability so this process or the",
    "start": "1296880",
    "end": "1307790"
  },
  {
    "text": "the kernel first of all says you know if a process wants to change the host name host names are governed by the UTS",
    "start": "1307790",
    "end": "1316050"
  },
  {
    "text": "namespace so the colonel's first question is you know which UTS namespace does this process reside in and the",
    "start": "1316050",
    "end": "1322470"
  },
  {
    "text": "answer is this one and then the colonel says well which use the namespace owns",
    "start": "1322470",
    "end": "1327630"
  },
  {
    "text": "this username the UTS namespace and the answer is this one and then the colonel's question is",
    "start": "1327630",
    "end": "1333540"
  },
  {
    "text": "what Pro what capabilities does this process have in that year's namespace and the answer is it has all",
    "start": "1333540",
    "end": "1340230"
  },
  {
    "text": "capabilities and it's a member of the namespace so it has all capabilities in",
    "start": "1340230",
    "end": "1345540"
  },
  {
    "text": "that user namespace and therefore this process will be allowed to change the",
    "start": "1345540",
    "end": "1350670"
  },
  {
    "text": "host name on the other hand suppose this",
    "start": "1350670",
    "end": "1356250"
  },
  {
    "text": "process tried to bind a privileged Network port something less than 1024",
    "start": "1356250",
    "end": "1362840"
  },
  {
    "text": "this requires a certain cable it's called cap net bind service now the",
    "start": "1362840",
    "end": "1369840"
  },
  {
    "text": "kernel says we wanted to publish Network operation which network namespace does",
    "start": "1369840",
    "end": "1374970"
  },
  {
    "text": "this process reside it the answer is this one and then the kernels next",
    "start": "1374970",
    "end": "1380040"
  },
  {
    "text": "question is which user namespace owns that that network namespace and the",
    "start": "1380040",
    "end": "1386970"
  },
  {
    "text": "answer is the swamp then the kernels question is what capabilities does this process have in that user namespace and",
    "start": "1386970",
    "end": "1395130"
  },
  {
    "text": "the answer is it has all capabilities but it's not in that user namespace so it has no capabilities there and",
    "start": "1395130",
    "end": "1401670"
  },
  {
    "text": "therefore it can't bind the privilege network port I really like this picture",
    "start": "1401670",
    "end": "1414230"
  },
  {
    "text": "now there are some api's and I don't wanna try and go into details but there are some api's you can use to discover",
    "start": "1416550",
    "end": "1422260"
  },
  {
    "text": "this the hierarchical relationship between username spaces and the ownership relationship between non user",
    "start": "1422260",
    "end": "1429220"
  },
  {
    "text": "and user name spaces I'm not gonna try and go into this I will just mention at",
    "start": "1429220",
    "end": "1434380"
  },
  {
    "text": "the in the inside you'll see a pointer to a location of some code and do have a",
    "start": "1434380",
    "end": "1439660"
  },
  {
    "text": "go program that makes use of these api's to draw you a picture of the namespaces on your system but I've been using C for",
    "start": "1439660",
    "end": "1447520"
  },
  {
    "text": "30 years it still hurts dough is so easy okay so let's let's",
    "start": "1447520",
    "end": "1457060"
  },
  {
    "text": "let's just try some demonstrations with that program so I think I'll do that",
    "start": "1457060",
    "end": "1469720"
  },
  {
    "text": "down here so I'm going to do exactly what I just showed you which is to say",
    "start": "1469720",
    "end": "1477030"
  },
  {
    "text": "unshare - new - new user name space with root mappings creating UTS namespace at",
    "start": "1477030",
    "end": "1483820"
  },
  {
    "text": "the same time and then I'll just run a",
    "start": "1483820",
    "end": "1489850"
  },
  {
    "text": "bash shell now just to demonstrate some things here the shell up above is in the",
    "start": "1489850",
    "end": "1496420"
  },
  {
    "text": "initial instance of all the various namespaces and I can say read link /proc",
    "start": "1496420",
    "end": "1503340"
  },
  {
    "text": "proc slash dollar dollar / NS / user for",
    "start": "1503340",
    "end": "1511360"
  },
  {
    "text": "example I see a certain magic number there down here I can do a similar",
    "start": "1511360",
    "end": "1518680"
  },
  {
    "text": "command read link /proc / dollar dollar / NS / user I see a different number",
    "start": "1518680",
    "end": "1528880"
  },
  {
    "text": "this information is telling me these two processes are in different username spaces if I do the same thing for the",
    "start": "1528880",
    "end": "1535140"
  },
  {
    "text": "UTS symlink",
    "start": "1535140",
    "end": "1538710"
  },
  {
    "text": "again different numbers these two proces are in different UTS namespaces but if",
    "start": "1541150",
    "end": "1546560"
  },
  {
    "text": "for example I do the same thing for the network some link same number these two",
    "start": "1546560",
    "end": "1559250"
  },
  {
    "text": "prices are in the same network namespace are in the same C group namespace the same IP c namespace okay because when we",
    "start": "1559250",
    "end": "1565910"
  },
  {
    "text": "created that that shell in the bottom window all we said at that moment was create a new user name space and a new",
    "start": "1565910",
    "end": "1572660"
  },
  {
    "text": "UTS namespace and the new shell is still a member of all the other at the initial",
    "start": "1572660",
    "end": "1578270"
  },
  {
    "text": "instance of all the other namespaces so",
    "start": "1578270",
    "end": "1584440"
  },
  {
    "text": "just to to illustrate what things are",
    "start": "1584440",
    "end": "1590840"
  },
  {
    "text": "looking like on the system then and just to give you a display that kind of relates back to that picture I just",
    "start": "1590840",
    "end": "1596180"
  },
  {
    "text": "showed you here I've got a shell that the shell on the lower window there okay",
    "start": "1596180",
    "end": "1602210"
  },
  {
    "text": "PID one five nine four eight and up here I've got a another shell with a",
    "start": "1602210",
    "end": "1610040"
  },
  {
    "text": "different PID one five one six one what I'm going to do now is just make use of",
    "start": "1610040",
    "end": "1618020"
  },
  {
    "text": "that go program that I've just talked to you about and I will say sudo go run",
    "start": "1618020",
    "end": "1626950"
  },
  {
    "text": "namespaces off block go now potentially this program by default it will show me information about all the namespaces on",
    "start": "1626950",
    "end": "1633470"
  },
  {
    "text": "the system and all the processes on the system that's that's too much information but what I want to say is",
    "start": "1633470",
    "end": "1641030"
  },
  {
    "text": "let's see the information about the namespaces of PID one five one six one",
    "start": "1641030",
    "end": "1647420"
  },
  {
    "text": "and one five nine four eight and even",
    "start": "1647420",
    "end": "1653840"
  },
  {
    "text": "that's too much information for me because I don't want to see information about all the namespaces I want to restrict the set of namespaces just so I",
    "start": "1653840",
    "end": "1660680"
  },
  {
    "text": "don't get so much output so I'm going to say gee I wrote this program",
    "start": "1660680",
    "end": "1666640"
  },
  {
    "text": "[Laughter] I hope I got it right there",
    "start": "1666640",
    "end": "1673490"
  },
  {
    "text": "UTS comma knit",
    "start": "1674180",
    "end": "1678530"
  },
  {
    "text": "okay I didn't get it right it's this let's try that again",
    "start": "1684320",
    "end": "1689510"
  },
  {
    "text": "what have I done wrong",
    "start": "1689510",
    "end": "1692380"
  },
  {
    "text": "huh one moment maybe maybe it's just this",
    "start": "1701360",
    "end": "1711099"
  },
  {
    "text": "yeah there was it namespaces okay",
    "start": "1711099",
    "end": "1716299"
  },
  {
    "text": "now this picture then is is is is straight in the pointy remember we had two shells the shell down here with PID",
    "start": "1716299",
    "end": "1722090"
  },
  {
    "text": "one five nine four eight the other shell which had PID one five one six one and what we're seeing here is a picture of",
    "start": "1722090",
    "end": "1728419"
  },
  {
    "text": "the namespaces and their relationships at least for the username space the network name spaces and the UTS name",
    "start": "1728419",
    "end": "1735229"
  },
  {
    "text": "spaces and so we see here first of all there is a username space at the top that is the initial username space it's",
    "start": "1735229",
    "end": "1741979"
  },
  {
    "text": "owned by user ID zero there's an API that you can use to discover who owns a particular username space and the name",
    "start": "1741979",
    "end": "1749210"
  },
  {
    "text": "space has a certain magic inode number that's unique for this namespace there's",
    "start": "1749210",
    "end": "1755960"
  },
  {
    "text": "a child username space you can tell us char because the indentation that's mine that's mine current notation it's it was",
    "start": "1755960",
    "end": "1762589"
  },
  {
    "text": "created by user ID 1000 it's got a different of course I know it number and",
    "start": "1762589",
    "end": "1768879"
  },
  {
    "text": "owned by that new user namespace there's a UTS namespace you can tell its own",
    "start": "1768879",
    "end": "1774019"
  },
  {
    "text": "because indentation and of course there's an initial network namespace",
    "start": "1774019",
    "end": "1779149"
  },
  {
    "text": "it's owned by the install user name space an initial UTS namespace that's owned by the initial user namespace and",
    "start": "1779149",
    "end": "1787219"
  },
  {
    "text": "then let's look at the namespace memberships of the of the various",
    "start": "1787219",
    "end": "1792649"
  },
  {
    "text": "process and the way I discovered this by the way in my go program is I just went through and passed all the proc perd any",
    "start": "1792649",
    "end": "1798469"
  },
  {
    "text": "assim links on the system and matched up the numbers okay so there's a lot of",
    "start": "1798469",
    "end": "1803749"
  },
  {
    "text": "file system the pseudo file system activity that we know on behind the scenes so the process down here one five",
    "start": "1803749",
    "end": "1813139"
  },
  {
    "text": "nine four eight it's in the new it's in the new user namespace it's in the new UTS namespace but it's still a member of",
    "start": "1813139",
    "end": "1821570"
  },
  {
    "text": "the initial network namespace okay whereas the shell in the top window it's",
    "start": "1821570",
    "end": "1828019"
  },
  {
    "text": "a member of the initial instance of all of the various namespaces the initial network namespace the initial UTS namespace the initial user namespace",
    "start": "1828019",
    "end": "1837220"
  },
  {
    "text": "make sense oh I'm doing good for time",
    "start": "1837540",
    "end": "1846450"
  },
  {
    "text": "this is so relaxed okay so what sort of stuff excuse me what sort of stuff can",
    "start": "1846450",
    "end": "1858130"
  },
  {
    "text": "you do with username spaces I'll make sure that I'm on the downward slope now you can run your Linux",
    "start": "1858130",
    "end": "1865960"
  },
  {
    "text": "containers without root privileges so docker has modes for doing this Alex C",
    "start": "1865960",
    "end": "1871300"
  },
  {
    "text": "has modes for doing this nowadays some things that people used to do with set UID route helpers like",
    "start": "1871300",
    "end": "1878940"
  },
  {
    "text": "sandboxing the rendering process and browsers to set up the rendering environment for the for the for the",
    "start": "1878940",
    "end": "1886840"
  },
  {
    "text": "sorry the yeah the the sandbox environment for the rendering process used to be that browsers like chrome",
    "start": "1886840",
    "end": "1892060"
  },
  {
    "text": "would use a set UID root process to set up the sandbox which can set you ID root",
    "start": "1892060",
    "end": "1897220"
  },
  {
    "text": "program yeah dangerous let's avoid them nowadays you can do the necessary sandbox instead by using user name",
    "start": "1897220",
    "end": "1905080"
  },
  {
    "text": "spaces along with some other namespaces and so you review you've removed one",
    "start": "1905080",
    "end": "1910570"
  },
  {
    "text": "dangerous program from the system this",
    "start": "1910570",
    "end": "1916780"
  },
  {
    "text": "is interesting you can set up a user name space where the UID map looks like this 1000 1001 you know some unpublished",
    "start": "1916780",
    "end": "1924610"
  },
  {
    "text": "ID maps to the same ID in the parent namespace for range of one there is no",
    "start": "1924610",
    "end": "1929770"
  },
  {
    "text": "concept of super user inside this user namespace you can't have privileged",
    "start": "1929770",
    "end": "1935440"
  },
  {
    "text": "processes inside this namespace from a security perspective that's a nice guarantee to have you know that there",
    "start": "1935440",
    "end": "1942070"
  },
  {
    "text": "can't be dangerous processes in that space you can do what people used to do",
    "start": "1942070",
    "end": "1952660"
  },
  {
    "text": "with chroot for i setting process and file systems but using user name spaces",
    "start": "1952660",
    "end": "1959200"
  },
  {
    "text": "and mountain spaces you can do so much more in terms of completely rearranging the",
    "start": "1959200",
    "end": "1965020"
  },
  {
    "text": "file system set up that a group of processes sees thank root I don't know",
    "start": "1965020",
    "end": "1973270"
  },
  {
    "text": "who's who's heard a fake root just by the way if you use Debian you probably have heard of fake root fake roots a",
    "start": "1973270",
    "end": "1979330"
  },
  {
    "text": "package that's a shared library that is used in conjunction it's a pre-loaded shared library it's used in conjunction",
    "start": "1979330",
    "end": "1984940"
  },
  {
    "text": "with the Debian package creator program and the Debian package kradic program is going to create a package with some",
    "start": "1984940",
    "end": "1990730"
  },
  {
    "text": "metadata saying you know who should own these files when these files are installed on the target system and the",
    "start": "1990730",
    "end": "1996220"
  },
  {
    "text": "package creative program just says well I'm gonna put whatever a UID and GID I am being run with into the metadata so",
    "start": "1996220",
    "end": "2003690"
  },
  {
    "text": "it just calls get UID and or get a UID to find out what its what effective user",
    "start": "2003690",
    "end": "2008820"
  },
  {
    "text": "ID it's being run with so if you wanted to create a package where the files should be owned by UID 0 on the target",
    "start": "2008820",
    "end": "2015900"
  },
  {
    "text": "system one possibility would be that you [Music]",
    "start": "2015900",
    "end": "2021200"
  },
  {
    "text": "run excuse me that you would run the",
    "start": "2021200",
    "end": "2026850"
  },
  {
    "text": "package creation program a superuser yeah yes every time you something a super user this is always a little risk",
    "start": "2026850",
    "end": "2032850"
  },
  {
    "text": "of something will go wrong so thank root what it does is it it's a",
    "start": "2032850",
    "end": "2039750"
  },
  {
    "text": "pre-loaded shared library that provides wrappers around the get UID and get GID",
    "start": "2039750",
    "end": "2044820"
  },
  {
    "text": "system calls and all the raid system tools and the rap functions don't even call the system calls they just lie so",
    "start": "2044820",
    "end": "2051300"
  },
  {
    "text": "that when when the package Menace is you know get UID the hreflang just come access JIRA page page creation purchases",
    "start": "2051300",
    "end": "2059128"
  },
  {
    "text": "okay alright to zero in to the metadata now you know you instead of missing room with with a pre-loaded shared library",
    "start": "2059129",
    "end": "2065970"
  },
  {
    "text": "you make life even simpler you can ever I use a name space where there's a the root mapping no need for shared",
    "start": "2065970",
    "end": "2072510"
  },
  {
    "text": "libraries anymore ok then a couple of other tools ok one of the reasons or one of the reasons",
    "start": "2072510",
    "end": "2078929"
  },
  {
    "text": "that all these namespaces were suddenly invented was to do the container thing but people have come up with some really",
    "start": "2078929",
    "end": "2084780"
  },
  {
    "text": "interesting other uses as well and a couple of other cases that I find",
    "start": "2084780",
    "end": "2092540"
  },
  {
    "text": "really interesting a fire jail and flat-pack and I'm just curious by the way who's heard of fire jail not so many",
    "start": "2092540",
    "end": "2099560"
  },
  {
    "text": "people flat-pack usually a few more people okay so fire jail is a sort of",
    "start": "2099560",
    "end": "2107000"
  },
  {
    "text": "generalized sandboxing tool so that you can run some application in some sort of",
    "start": "2107000",
    "end": "2113570"
  },
  {
    "text": "sandbox where if it gets compromised or is malicious somehow it's limited in the",
    "start": "2113570",
    "end": "2119270"
  },
  {
    "text": "damage that it can do and the same boxing is done using namespaces also using C groups which I haven't talked",
    "start": "2119270",
    "end": "2126290"
  },
  {
    "text": "about the wall of course using another feature of the kernel called set comp which limits system calls that can be made I talked here last year about set",
    "start": "2126290",
    "end": "2133100"
  },
  {
    "text": "comp maybe you wanted to view are there I don't know and you can just set up a",
    "start": "2133100",
    "end": "2140000"
  },
  {
    "text": "set of sandboxing rules describing what kind of sandbox you want and put it into a so-called profile and then run your",
    "start": "2140000",
    "end": "2147920"
  },
  {
    "text": "application under the control of that profile using a fire jail and it's it's got some degree of sandboxing around it",
    "start": "2147920",
    "end": "2154040"
  },
  {
    "text": "so that if it gets compromised you know it can do less damage that would be interesting in itself but what makes",
    "start": "2154040",
    "end": "2160220"
  },
  {
    "text": "fire jail really interesting is it comes with a bunch of prepackaged profiles so you get when you install fire jail you",
    "start": "2160220",
    "end": "2167450"
  },
  {
    "text": "get a profile for Thunderbird a profile for Firefox a profile I don't know I think for LibreOffice a I don't know I",
    "start": "2167450",
    "end": "2173750"
  },
  {
    "text": "can check that one but a profiles prepackaged for a bunch of commonly used applications that you can use right out",
    "start": "2173750",
    "end": "2180260"
  },
  {
    "text": "of the box so then you can run all of your favorite applications inside a sandbox so they are more restricted in",
    "start": "2180260",
    "end": "2187490"
  },
  {
    "text": "what they can do in case they should somehow be compromised it's interesting",
    "start": "2187490",
    "end": "2192980"
  },
  {
    "text": "stuff flat pack is again it's it's using",
    "start": "2192980",
    "end": "2198260"
  },
  {
    "text": "namespaces that also set comp and and C groups and capabilities to solve the",
    "start": "2198260",
    "end": "2205160"
  },
  {
    "text": "package management problem in a different way the the idea here is or",
    "start": "2205160",
    "end": "2214910"
  },
  {
    "text": "rephrase this does anybody here use Debian Debian's Debian stable anyone",
    "start": "2214910",
    "end": "2222090"
  },
  {
    "text": "the great thing about Debian staple is it stable the terrible thing about Debian stable is it as stable what I",
    "start": "2222090",
    "end": "2228720"
  },
  {
    "text": "mean by this is and every distribution has this problem it's just somewhat more extreme with Debian which is you know",
    "start": "2228720",
    "end": "2235170"
  },
  {
    "text": "you you you you want the some cool new software project out there and you want",
    "start": "2235170",
    "end": "2240660"
  },
  {
    "text": "to use it but it hasn't been packaged for your distribution is this is most",
    "start": "2240660",
    "end": "2246300"
  },
  {
    "text": "extreme and Debian stable because the release cycles are so long but every distribution to some extend or other has",
    "start": "2246300",
    "end": "2252210"
  },
  {
    "text": "this problem and what do you do at that",
    "start": "2252210",
    "end": "2257520"
  },
  {
    "text": "point you want to use the cool new software there's no package for it for your system so maybe download the",
    "start": "2257520",
    "end": "2264180"
  },
  {
    "text": "tarball build and and you know just build from tar ball and install manually but maybe the application has some",
    "start": "2264180",
    "end": "2270840"
  },
  {
    "text": "dependencies on another package you need to manually set up those other packages to get the dependencies right",
    "start": "2270840",
    "end": "2276930"
  },
  {
    "text": "maybe you mess up along the way and you bust your package management database",
    "start": "2276930",
    "end": "2282360"
  },
  {
    "text": "and you feel sad for a day or two you know you can do it there's a little risk it's inconvenient and as a little risk",
    "start": "2282360",
    "end": "2287940"
  },
  {
    "text": "you might get wrong and you you create some unnecessary work for yourself let's",
    "start": "2287940",
    "end": "2292980"
  },
  {
    "text": "put things other way around you are the creator of the cool new package those",
    "start": "2292980",
    "end": "2299460"
  },
  {
    "text": "cool new software I should say and you want your downstream users to use it but those lazy downstream distribution",
    "start": "2299460",
    "end": "2306750"
  },
  {
    "text": "maintainer z' haven't packaged your software yet haven't they got something they have so much else to do why do they",
    "start": "2306750",
    "end": "2312660"
  },
  {
    "text": "do it so what do you do you could say to your users I'm sorry against a build from source man it's not so nice but you",
    "start": "2312660",
    "end": "2319740"
  },
  {
    "text": "know and that's possibility or you could go into the package maintenance business you could say oh okay I'll create a I'll",
    "start": "2319740",
    "end": "2326460"
  },
  {
    "text": "create a fedora package for fedora fedora or a xxx package for my software",
    "start": "2326460",
    "end": "2332600"
  },
  {
    "text": "no I better I better create a new bundle package as well some people are still using 32-bit systems I'll need a fedora",
    "start": "2332600",
    "end": "2339210"
  },
  {
    "text": "32-bit package oh and fedora change in a way that is incompatible for me with Fedora 23 only it's creative Fedora 23",
    "start": "2339210",
    "end": "2344970"
  },
  {
    "text": "package you can see this gets old really quickly you don't do it unless you've got a lot of resources of other words",
    "start": "2344970",
    "end": "2351060"
  },
  {
    "text": "you're a big company so not very nice flat pack",
    "start": "2351060",
    "end": "2357280"
  },
  {
    "text": "what flat pack does is as the upstream bill if you install flat pack on your system and then you create a flat pack",
    "start": "2357280",
    "end": "2363610"
  },
  {
    "text": "of your of your of your project of your",
    "start": "2363610",
    "end": "2368860"
  },
  {
    "text": "binary and I should have mentioned by the way flat pack is an implementation of an idea that was initially proposed",
    "start": "2368860",
    "end": "2373990"
  },
  {
    "text": "by Linnet / Turing the creator of system D and the idea is that the flat pack",
    "start": "2373990",
    "end": "2380020"
  },
  {
    "text": "that gets created it has the binary that the upstream developers created and all",
    "start": "2380020",
    "end": "2386320"
  },
  {
    "text": "of its dependencies all the shared libraries that needs flat pack just",
    "start": "2386320",
    "end": "2391690"
  },
  {
    "text": "assembles everything that's necessary and puts it into the flat pack package and then you could say that your",
    "start": "2391690",
    "end": "2397690"
  },
  {
    "text": "downstream users you want to use my software just just down and store that pack on your system download the flat",
    "start": "2397690",
    "end": "2403750"
  },
  {
    "text": "pack and then run the flat pack and just out of the box it works automatically on",
    "start": "2403750",
    "end": "2411910"
  },
  {
    "text": "in distribution because the flat pack contains all of the necessary dependencies of the binary and this is",
    "start": "2411910",
    "end": "2421180"
  },
  {
    "text": "all being done with namespaces SATCOM capabilities to provide not only the application packaging but also some",
    "start": "2421180",
    "end": "2426820"
  },
  {
    "text": "sandboxing along the way as well and sometimes people pop up at this point",
    "start": "2426820",
    "end": "2434800"
  },
  {
    "text": "and say well there but docker couldn't I just done this with docker no because",
    "start": "2434800",
    "end": "2440350"
  },
  {
    "text": "doing the GUI thing with docker it doesn't really work very well generally thing is with flat pack you can have a",
    "start": "2440350",
    "end": "2446380"
  },
  {
    "text": "GUI application you get a Firefox or LibreOffice in a flat pack and you you",
    "start": "2446380",
    "end": "2452590"
  },
  {
    "text": "you you run the flat pack on the target system and the GUI application just integrates seamlessly into the desktop",
    "start": "2452590",
    "end": "2458920"
  },
  {
    "text": "environment so this is there's a lot of magical things that are people are doing",
    "start": "2458920",
    "end": "2464620"
  },
  {
    "text": "with namespaces and some of these other technologies as well but that were originally invented for containers but are now being used in some really",
    "start": "2464620",
    "end": "2471240"
  },
  {
    "text": "interesting creative other ways ok in",
    "start": "2471240",
    "end": "2477070"
  },
  {
    "text": "terms of other information we want to find more about namespaces I wrote a series of articles on llw in a few years",
    "start": "2477070",
    "end": "2482140"
  },
  {
    "text": "ago but some manual pages I wrote oh and I mentioned in the previous",
    "start": "2482140",
    "end": "2487560"
  },
  {
    "text": "session as well this this this is this is a great great web page written by a",
    "start": "2487560",
    "end": "2496380"
  },
  {
    "text": "woman in California or about you know how to do how to do the container thing in C and you don't need much code to do",
    "start": "2496380",
    "end": "2502530"
  },
  {
    "text": "it the reason that contains systems are so complicated there's all the infrastructure that goes into the",
    "start": "2502530",
    "end": "2508710"
  },
  {
    "text": "orchestration I don't know I've got some",
    "start": "2508710",
    "end": "2515640"
  },
  {
    "text": "backup slides but I don't know whether oh yeah just one one thing you know I",
    "start": "2515640",
    "end": "2520650"
  },
  {
    "text": "think this is worth talking about as long as we hear when does a process have capabilities inside a namespace I taught",
    "start": "2520650",
    "end": "2527310"
  },
  {
    "text": "I showed you that picture already but there's a bit more to it than this what",
    "start": "2527310",
    "end": "2532950"
  },
  {
    "text": "are the rules that determine whether a process has capabilities in a particular user namespace so you'll see in the",
    "start": "2532950",
    "end": "2538650"
  },
  {
    "text": "manual pages you know you can do such-and-such such thing if you have capabilities in that user name space the",
    "start": "2538650",
    "end": "2545060"
  },
  {
    "text": "relevant user name space somehow and the question is what are the rules that determine whether a process has cape",
    "start": "2545060",
    "end": "2550950"
  },
  {
    "text": "lutes and name space so we know already user name spaces exist in a hierarchy",
    "start": "2550950",
    "end": "2556470"
  },
  {
    "text": "each user name space has a parent going back to the initial user name space which obviously has no parent the",
    "start": "2556470",
    "end": "2562680"
  },
  {
    "text": "parental relationship gets established when the user name space is created the parental relationship matters because",
    "start": "2562680",
    "end": "2569610"
  },
  {
    "text": "it's significant in imp as part of the answer to this question when does the process have capabilities in a user name",
    "start": "2569610",
    "end": "2575520"
  },
  {
    "text": "space there's a whole lot of factors that come into play does a process have",
    "start": "2575520",
    "end": "2581730"
  },
  {
    "text": "capability news announcements well the first thing is does the process even have the capability that's part of the answer to the question obviously it",
    "start": "2581730",
    "end": "2588540"
  },
  {
    "text": "depends on which Capon which user name space the process is a member of it depends on the processes effective user",
    "start": "2588540",
    "end": "2594870"
  },
  {
    "text": "ID depends on the effective user ID of the process that created the user names",
    "start": "2594870",
    "end": "2600780"
  },
  {
    "text": "the target user name space the one that we're asking about so we've got a process that perhaps is living in one user name space but it wants to do",
    "start": "2600780",
    "end": "2607800"
  },
  {
    "text": "something in another user name space that's the target user name space the question is who created that target user",
    "start": "2607800",
    "end": "2613740"
  },
  {
    "text": "name space and then at the the what else matters is the parental relationship between these two namespaces",
    "start": "2613740",
    "end": "2619770"
  },
  {
    "text": "now there is a program I got in the source code that on my website that encapsulates the rules that I'm about to",
    "start": "2619770",
    "end": "2626670"
  },
  {
    "text": "show you next basically it's you can give it two arguments a PID and a proc pettiness",
    "start": "2626670",
    "end": "2633630"
  },
  {
    "text": "user sim link and then will tell you it does that process have capabilities in that namespace okay so the rules go like",
    "start": "2633630",
    "end": "2641730"
  },
  {
    "text": "this a process has a capability or news namespace if it's a member of the user namespace and it has the capability",
    "start": "2641730",
    "end": "2647610"
  },
  {
    "text": "that's pretty much tautological this rule doesn't give the process any",
    "start": "2647610",
    "end": "2654270"
  },
  {
    "text": "capabilities in the parent namespace only in the namespace where it resides a process that has a capability in a user",
    "start": "2654270",
    "end": "2660690"
  },
  {
    "text": "name space automatically has that capability in all descendant user name",
    "start": "2660690",
    "end": "2665940"
  },
  {
    "text": "spaces as well so in other words if you're super user at one level in the user name space hierarchy your super",
    "start": "2665940",
    "end": "2671730"
  },
  {
    "text": "user every place lower down as well or to put things another way you know you can't as someone else hide from the",
    "start": "2671730",
    "end": "2678300"
  },
  {
    "text": "power of super user inside user name space by running away into some inferior user names best doesn't work because",
    "start": "2678300",
    "end": "2685230"
  },
  {
    "text": "super user at some level has a super user one use one level hierarchy has super user powers all the way down and",
    "start": "2685230",
    "end": "2694290"
  },
  {
    "text": "then one more rule and this this is an interesting one any process that's in a parent username",
    "start": "2694290",
    "end": "2702930"
  },
  {
    "text": "space that has a user ID that matches the user ID that was used to create a",
    "start": "2702930",
    "end": "2708810"
  },
  {
    "text": "child username space that process automatic as all capabilities in the",
    "start": "2708810",
    "end": "2714060"
  },
  {
    "text": "child username space so in other words you know as an unprivileged user I might have created the I'm pervious user ID",
    "start": "2714060",
    "end": "2719190"
  },
  {
    "text": "1000 I might have created the child username space there are some prices inside that user name space and maybe",
    "start": "2719190",
    "end": "2725820"
  },
  {
    "text": "I'm running a shell in the parent username space and I'm running this gel is user ID 1000 that shell has",
    "start": "2725820",
    "end": "2732770"
  },
  {
    "text": "capabilities over all of the processes that are in the child username space",
    "start": "2732770",
    "end": "2738660"
  },
  {
    "text": "because the shell has effective user ad 1000 which is the same as the effective",
    "start": "2738660",
    "end": "2743670"
  },
  {
    "text": "user ID that was used to create the child username space and that means the other there might be processes inside",
    "start": "2743670",
    "end": "2749820"
  },
  {
    "text": "that charges in a space with different credentials between actually but I could still send signals",
    "start": "2749820",
    "end": "2755669"
  },
  {
    "text": "to them I could still kill them for example because the the shell and the Pyrenean space has a user ID that",
    "start": "2755669",
    "end": "2764880"
  },
  {
    "text": "matches the user ID of the child username space that that probe that user 81,000 is God from outside the user",
    "start": "2764880",
    "end": "2774299"
  },
  {
    "text": "namespace okay I think that's enough but I'm three questions yes do you mean the",
    "start": "2774299",
    "end": "2790349"
  },
  {
    "text": "the example I showed on the shell session or what do you mean the picture",
    "start": "2790349",
    "end": "2795390"
  },
  {
    "text": "oh you got a good memory I'm impressed 545 this one yes that's",
    "start": "2795390",
    "end": "2818669"
  },
  {
    "text": "right so the host name would be visible to this process but if there were processes you know and that lives in",
    "start": "2818669",
    "end": "2824429"
  },
  {
    "text": "this UTS namespace that host name you know it's not visible to the processes that live in this UTS namespace and and",
    "start": "2824429",
    "end": "2831329"
  },
  {
    "text": "then this is this is the whole point that you know you you're creating a sort",
    "start": "2831329",
    "end": "2837150"
  },
  {
    "text": "of a new isolated world that's governed by a new user name space that owns some",
    "start": "2837150",
    "end": "2842429"
  },
  {
    "text": "non-news namespaces that govern some resources and you can mess around with those resources but you can't mess",
    "start": "2842429",
    "end": "2848640"
  },
  {
    "text": "around with the resources in the initial you name space instances and then this",
    "start": "2848640",
    "end": "2855719"
  },
  {
    "text": "is this is why you can be super user inside the news namespace but only you",
    "start": "2855719",
    "end": "2864179"
  },
  {
    "text": "only have super user powers on sort of the the resources that live in that new",
    "start": "2864179",
    "end": "2869909"
  },
  {
    "text": "isolated container that you've created",
    "start": "2869909",
    "end": "2874969"
  },
  {
    "text": "said a question",
    "start": "2875029",
    "end": "2878419"
  },
  {
    "text": "okay so that's that's that's a that's a good other question that I think I did have in a backup slave revive zip past",
    "start": "2882230",
    "end": "2888150"
  },
  {
    "text": "it already but I'll come back to it there are some resources on the system that aren't governed by namespaces",
    "start": "2888150",
    "end": "2894839"
  },
  {
    "text": "things like time it's not currently probably very soon they will be by governed by a new name space but",
    "start": "2894839",
    "end": "2900540"
  },
  {
    "text": "currently they're not and what that means is for these resort and another example is it's a loading kernel modules",
    "start": "2900540",
    "end": "2906770"
  },
  {
    "text": "okay you know the the the new process in the news namespace it gets the capability caps this module cannot load",
    "start": "2906770",
    "end": "2913950"
  },
  {
    "text": "kernel modules yeah we hope not well the thing is for these sort of resources",
    "start": "2913950",
    "end": "2919109"
  },
  {
    "text": "that aren't governed by namespaces what the kernel then asks is what capably",
    "start": "2919109",
    "end": "2924540"
  },
  {
    "text": "does that process have in the initial user namespace so game over you know you",
    "start": "2924540",
    "end": "2931799"
  },
  {
    "text": "can't do anything special you can't change the system time for example for",
    "start": "2931799",
    "end": "2939690"
  },
  {
    "text": "now for now but in the next few months that is very likely to change other",
    "start": "2939690",
    "end": "2948839"
  },
  {
    "text": "questions I've heard there's a good party to go to it was good last year let and they do",
    "start": "2948839",
    "end": "2957750"
  },
  {
    "text": "good good food good parties here oh there is a question we are I'm leaving",
    "start": "2957750",
    "end": "2966950"
  },
  {
    "text": "[Laughter]",
    "start": "2966950",
    "end": "2970670"
  },
  {
    "text": "yeah I think it well you know and what I said what I'm I'll back up sticking the",
    "start": "2972319",
    "end": "2977549"
  },
  {
    "text": "there was a sort of milestone release back in 2013 this was Linux 3.8 and what",
    "start": "2977549",
    "end": "2982770"
  },
  {
    "text": "happened then that milestone Reece was they finally said we think we've got to sort of some sort of stage of maturity",
    "start": "2982770",
    "end": "2988710"
  },
  {
    "text": "now where we're going to let now unprivileged users create user name spaces before that you could create user",
    "start": "2988710",
    "end": "2994319"
  },
  {
    "text": "name spaces but you had to have caps us admin cable you had to be super user but they the goal they were working towards",
    "start": "2994319",
    "end": "3001010"
  },
  {
    "text": "was allowing this to be possible for onion privileged users to do safely and",
    "start": "3001010",
    "end": "3006160"
  },
  {
    "text": "they reached they consider themselves to have reached that goal in 2013 and that point they said okay you don't need caps",
    "start": "3006160",
    "end": "3012750"
  },
  {
    "text": "anymore to create a user name space and preceding that that been about six years",
    "start": "3012750",
    "end": "3017760"
  },
  {
    "text": "of work part of it was because it was young complicated but the other part is people were super nervous like you know",
    "start": "3017760",
    "end": "3024660"
  },
  {
    "text": "we're talking about giving a process Super User powers and you know we want",
    "start": "3024660",
    "end": "3029850"
  },
  {
    "text": "to be really sure that those Super User powers couldn't somehow be leaking out",
    "start": "3029850",
    "end": "3034920"
  },
  {
    "text": "and letting letting the process do something I'm privileged in another username space where it shouldn't be",
    "start": "3034920",
    "end": "3040800"
  },
  {
    "text": "possible in particular in the initial user name space you know that'll be really bad it turns out there have been",
    "start": "3040800",
    "end": "3046380"
  },
  {
    "text": "a few vulnerabilities like that that have been discovered after the fact because there were some obscure corner",
    "start": "3046380",
    "end": "3051870"
  },
  {
    "text": "cases that people didn't think you know as yeah software has bugs who knew and",
    "start": "3051870",
    "end": "3057330"
  },
  {
    "text": "those bugs have been found and fixed and I haven't heard there's been a few of them I haven't heard of so many in the",
    "start": "3057330",
    "end": "3062970"
  },
  {
    "text": "last few years so maybe just maybe that all those bugs have been shaken out now",
    "start": "3062970",
    "end": "3068000"
  },
  {
    "text": "yeah I don't know if I answered your question or not do I think it's",
    "start": "3068000",
    "end": "3087540"
  },
  {
    "text": "inevitable they could have figured out they could do what I'm sorry I don't",
    "start": "3087540",
    "end": "3092270"
  },
  {
    "text": "everything's gonna be none earlier with efficient resources and it's not like the whole concept of virtualization at",
    "start": "3100970",
    "end": "3108270"
  },
  {
    "text": "some level there's quite an old concept you know famously that I forget the details there was virtualization going",
    "start": "3108270",
    "end": "3114210"
  },
  {
    "text": "on when some subsystems with with system/360 in the 1960s you know not not",
    "start": "3114210",
    "end": "3120780"
  },
  {
    "text": "this kind of virtualization but you know virtualization kind of techniques being used and Solaris for instance",
    "start": "3120780",
    "end": "3128190"
  },
  {
    "text": "independently had something called zones which is a rather similar concept so I",
    "start": "3128190",
    "end": "3136220"
  },
  {
    "text": "don't to begin with we had hypervisors then",
    "start": "3136220",
    "end": "3143599"
  },
  {
    "text": "someone did the isolation of mountain namespaces and then people suddenly rose come we start doing all the sort of",
    "start": "3143599",
    "end": "3150140"
  },
  {
    "text": "virtualization that we were doing with hypervisors but in the context of a single kernel and then now where we have",
    "start": "3150140",
    "end": "3155239"
  },
  {
    "text": "to isolate to do that and then they could clear okay and network resources will be useful you IPC resources will be",
    "start": "3155239",
    "end": "3161509"
  },
  {
    "text": "useful a bunch of other things you the hostname be useful and then they started",
    "start": "3161509",
    "end": "3168559"
  },
  {
    "text": "work on these pieces independently and the fact that they worked on them independently actually and that you know sometimes people ask me you know why is",
    "start": "3168559",
    "end": "3175940"
  },
  {
    "text": "it so complicated why isn't it just an API button that I can press it says give me a new container that would be make",
    "start": "3175940",
    "end": "3183650"
  },
  {
    "text": "life simple in some ways but the it would have made life more difficult in other ways like by implementing the",
    "start": "3183650",
    "end": "3190190"
  },
  {
    "text": "different pieces separately it means that the implementation could be done piecewise so it made the implementation",
    "start": "3190190",
    "end": "3196430"
  },
  {
    "text": "effort easier but now the fact they were all implemented as separate pieces that",
    "start": "3196430",
    "end": "3202160"
  },
  {
    "text": "can be used independently means they can be used together independently in different ways so we can do the",
    "start": "3202160",
    "end": "3208219"
  },
  {
    "text": "flat-pack thing with a fire jail thing so it's actually I think an extremely",
    "start": "3208219",
    "end": "3213349"
  },
  {
    "text": "good thing that there wasn't just an API button that says give me a container that wouldn't have been nearly so interesting as it's the world we now",
    "start": "3213349",
    "end": "3221059"
  },
  {
    "text": "have but you know could it have been done earlier I don't know it's it's a",
    "start": "3221059",
    "end": "3226819"
  },
  {
    "text": "question about the past I'm not much better at the past the neighbors at the future",
    "start": "3226819",
    "end": "3232028"
  },
  {
    "text": "enjoy your evening thank you [Applause]",
    "start": "3237340",
    "end": "3246790"
  }
]