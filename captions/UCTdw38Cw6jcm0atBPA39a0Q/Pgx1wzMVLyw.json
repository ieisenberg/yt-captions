[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "all right thank you so much okay well welcome thank you so much for coming to",
    "start": "30",
    "end": "5279"
  },
  {
    "text": "my session I know that this is the session right after lunch so some of you are digesting the food coma and also I",
    "start": "5279",
    "end": "13170"
  },
  {
    "text": "have about 50 slides and about 55 minutes to get through them so this is going to be fun and fast and I ask that",
    "start": "13170",
    "end": "19890"
  },
  {
    "text": "you save questions until the very end I am super happy to talk with all of you after this is done but I do want to get",
    "start": "19890",
    "end": "24990"
  },
  {
    "text": "through all the content so a quick introduction my name is Katie Shimizu I am a software engineer level 2 so",
    "start": "24990",
    "end": "31439"
  },
  {
    "text": "mid-level on the Azure functions team at Microsoft I am actually a native to",
    "start": "31439",
    "end": "37530"
  },
  {
    "text": "Minnesota I grew up here mostly around the Dinah and south Minneapolis areas and then about two years ago I got a",
    "start": "37530",
    "end": "45750"
  },
  {
    "text": "surprise job opportunity and moved out to Seattle to work on a product that I",
    "start": "45750",
    "end": "50940"
  },
  {
    "text": "had been using as a customer for some time prior to that and now I'm on the azure functions team so how many of you",
    "start": "50940",
    "end": "60210"
  },
  {
    "start": "60000",
    "end": "198000"
  },
  {
    "text": "are familiar with serverless okay this is good you are in the right talk how",
    "start": "60210",
    "end": "66060"
  },
  {
    "text": "many of you have used serverless as a toy or just kind of tried it out also",
    "start": "66060",
    "end": "72180"
  },
  {
    "text": "good like the show of hands how many of you have used it in production okay that's more than I was expecting that's",
    "start": "72180",
    "end": "78240"
  },
  {
    "text": "good that's good that's very good all right so I can kind of zip through these first couple of slides but I will go",
    "start": "78240",
    "end": "83460"
  },
  {
    "text": "over them quickly just for you know folks in the audience who didn't raise their hands the whole idea of serverless is not that there are no servers",
    "start": "83460",
    "end": "90390"
  },
  {
    "text": "anywhere but that you the customer think about servers less see this is how we salvage a term that some people really",
    "start": "90390",
    "end": "96570"
  },
  {
    "text": "really don't like the it's up to the cloud provider to manage your servers to",
    "start": "96570",
    "end": "102630"
  },
  {
    "text": "manage your OS and your firmware upgrades to manage your up time to manage your scaling and the serverless",
    "start": "102630",
    "end": "109590"
  },
  {
    "text": "programming model is event-driven so based on some event you have some sort of little piece of code that runs",
    "start": "109590",
    "end": "114960"
  },
  {
    "text": "very quickly does something and either has some side effects or dumps transform data out to some other data sink and the",
    "start": "114960",
    "end": "123299"
  },
  {
    "text": "the real value prop of service here is one that you as a business do not need",
    "start": "123299",
    "end": "129929"
  },
  {
    "text": "to spend time maintaining servers may containing all of this infrastructure you can get up and running and coding",
    "start": "129929",
    "end": "137680"
  },
  {
    "text": "your business logic and paying attention to the stuff that matters very quickly how many of you were in Lynne line gets",
    "start": "137680",
    "end": "144500"
  },
  {
    "text": "talk yesterday okay not that many well Lynne brought up the",
    "start": "144500",
    "end": "149690"
  },
  {
    "text": "example of a cloud guru which does a lot of training and cloud training resources",
    "start": "149690",
    "end": "156470"
  },
  {
    "text": "online and they were actually coated over a month using about I think it took about five hundred dollars and one",
    "start": "156470",
    "end": "163970"
  },
  {
    "text": "engineer from Microsoft who was home helping his brother so this is kind of an example of how quickly things can get",
    "start": "163970",
    "end": "170030"
  },
  {
    "text": "up and running when you are using serverless and we kind of go into this in this slide so you can focus on your",
    "start": "170030",
    "end": "178220"
  },
  {
    "text": "business problems you've got shorter time to market and you can be very flexible because you're only billed for",
    "start": "178220",
    "end": "184459"
  },
  {
    "text": "you know what you use so there's the possibility of reduced cost of compute",
    "start": "184459",
    "end": "189709"
  },
  {
    "text": "instead of provisioning one server and then keeping it up regardless of what kind of traffic is hitting it this all",
    "start": "189709",
    "end": "195230"
  },
  {
    "text": "sounds pretty good right okay so one of the main service offerings on the Azure",
    "start": "195230",
    "end": "201320"
  },
  {
    "start": "198000",
    "end": "266000"
  },
  {
    "text": "platform is Azure functions this is what we think of as like little glue functions and it is basically what you",
    "start": "201320",
    "end": "209480"
  },
  {
    "text": "would expect it is a event-driven model you have some code that runs off of some trigger",
    "start": "209480",
    "end": "214880"
  },
  {
    "text": "binding maybe pulls in some stuff through an input binding from say a blob or a storage queue and then it outputs",
    "start": "214880",
    "end": "223040"
  },
  {
    "text": "whatever its transformed it into somewhere else this is kind of what it looks like you've got a trigger that you",
    "start": "223040",
    "end": "230269"
  },
  {
    "text": "set up this is c-sharp in Visual Studio so we've got these attribute decorators that can define your your triggers and",
    "start": "230269",
    "end": "238730"
  },
  {
    "text": "your bindings right there in your code and there's an output binding so here we",
    "start": "238730",
    "end": "244190"
  },
  {
    "text": "are taking information from one cue when it comes in and writing that information",
    "start": "244190",
    "end": "250069"
  },
  {
    "text": "doing something to it obviously first and then writing that information out to another cue in the function json is what",
    "start": "250069",
    "end": "258680"
  },
  {
    "text": "we create when we compile this down this is kind of the definition of the bindings that are runtime",
    "start": "258680",
    "end": "265560"
  },
  {
    "text": "so that's a little bit of code and you're going okay this sounds great but I noticed you're leaving a number of",
    "start": "265560",
    "end": "271349"
  },
  {
    "start": "266000",
    "end": "351000"
  },
  {
    "text": "things out like let's say I need to run in a V net let's say I need automated",
    "start": "271349",
    "end": "276810"
  },
  {
    "text": "testing or to run on premises custom hardware custom dependencies real-time monitoring Auto a development sub-second",
    "start": "276810",
    "end": "282479"
  },
  {
    "text": "latency Network isolation state management you know there's a lot of things here that you as an enterprise",
    "start": "282479",
    "end": "288120"
  },
  {
    "text": "customer looking at an enterprise solution either for developing a new one or transitioning an existing solution to",
    "start": "288120",
    "end": "294780"
  },
  {
    "text": "a server list model to take advantage of its benefits or wondering well you haven't talked about that but the fact",
    "start": "294780",
    "end": "301949"
  },
  {
    "text": "is is that service is maturing as a as a discipline and a model and all of the",
    "start": "301949",
    "end": "307050"
  },
  {
    "text": "cloud providers I'm going to focus on Microsoft because that is what I know have come up with various solutions for",
    "start": "307050",
    "end": "314159"
  },
  {
    "text": "these questions and these problems and I am going to do basically a breadth-first",
    "start": "314159",
    "end": "320759"
  },
  {
    "text": "kind of search over pretty much what asher has to offer a lot of these are",
    "start": "320759",
    "end": "328500"
  },
  {
    "text": "going to be very new they were actually announced just a day or two ago at build if any of you caught the keynotes or the",
    "start": "328500",
    "end": "335669"
  },
  {
    "text": "sessions there each one of these could be a talk in and of themselves and indeed actually they are and if you go",
    "start": "335669",
    "end": "342539"
  },
  {
    "text": "on the build website you can see a number of the recorded sessions and streams so let's get started all right",
    "start": "342539",
    "end": "352349"
  },
  {
    "start": "351000",
    "end": "497000"
  },
  {
    "text": "let's talk about hosting options so one of the things about functions that differentiates it from say Google cloud",
    "start": "352349",
    "end": "358830"
  },
  {
    "text": "functions or AWS lambda is that it is fully open source we actually open",
    "start": "358830",
    "end": "364050"
  },
  {
    "text": "sourced our scale controller as well that's the internal logic on the azure app service platform that determines how",
    "start": "364050",
    "end": "370949"
  },
  {
    "text": "many function instances to scale out to but the host runtime itself has always been open source and that means that you",
    "start": "370949",
    "end": "377039"
  },
  {
    "text": "don't necessarily have to have it on Azure itself you can run it well",
    "start": "377039",
    "end": "382259"
  },
  {
    "text": "obviously you can run it locally and we have a great local development experience you can do local debugging you can do local testing it's set up so",
    "start": "382259",
    "end": "388889"
  },
  {
    "text": "that it's it integrates nicely with automated testing scenarios you can also run it on Azure we have a couple of",
    "start": "388889",
    "end": "397259"
  },
  {
    "text": "different hosting plans there is the classic consumption model which is kind of what I've been",
    "start": "397259",
    "end": "402730"
  },
  {
    "text": "describing as the you know the dream of Surrealists I only pay for what I consume and nothing else has a couple of",
    "start": "402730",
    "end": "410710"
  },
  {
    "text": "pitfalls and we've come up with some mitigations as I'll cover there is the app service model which is your",
    "start": "410710",
    "end": "418180"
  },
  {
    "text": "dedicated hosting plan sometimes people want to run functions but they know that they're going to have a consistently",
    "start": "418180",
    "end": "424510"
  },
  {
    "text": "high workload or they're going to have some very consistent traffic you know say something that maybe follows",
    "start": "424510",
    "end": "429910"
  },
  {
    "text": "business hours very closely for a particular time zone and in that case",
    "start": "429910",
    "end": "435160"
  },
  {
    "text": "the auto scale rules of app service and the always-on capabilities can be a good",
    "start": "435160",
    "end": "441580"
  },
  {
    "text": "fit it's not pure serverless but we're finding that kind of a hybrid model can often meet some of the the demands that",
    "start": "441580",
    "end": "450640"
  },
  {
    "text": "Enterprise Solutions have it's also possible to put functions in a container",
    "start": "450640",
    "end": "456520"
  },
  {
    "text": "and put that container wherever you want that can go on Prem that can go on cloud and this is often a good solution if you",
    "start": "456520",
    "end": "463780"
  },
  {
    "text": "have custom hardware or custom dependencies that we don't directly support you have more control and a",
    "start": "463780",
    "end": "469600"
  },
  {
    "text": "containerized solution because it is literally I mean you can compile the",
    "start": "469600",
    "end": "475090"
  },
  {
    "text": "binaries you can upload it somewhere run it against your app directory and go you",
    "start": "475090",
    "end": "481060"
  },
  {
    "text": "can take it to other cloud providers you can also take it to other places on",
    "start": "481060",
    "end": "486190"
  },
  {
    "text": "Azure like aks or service fabric we intended this to be very very portable and if you're running Azure stack we",
    "start": "486190",
    "end": "494020"
  },
  {
    "text": "work there too great so as I was talking about there is a bit of a gap in the",
    "start": "494020",
    "end": "502300"
  },
  {
    "start": "497000",
    "end": "653000"
  },
  {
    "text": "consumption plan and how many of you have okay there's a term for it how many",
    "start": "502300",
    "end": "508210"
  },
  {
    "text": "of you have encountered cold start how many of you like it okay so yeah",
    "start": "508210",
    "end": "516520"
  },
  {
    "text": "cold start is an issue and that's because you know if you are scaling down to nothing when you and your app doesn't",
    "start": "516520",
    "end": "523419"
  },
  {
    "text": "get any requests there's nothing in your queue there's no HTTP requests coming in for a while",
    "start": "523419",
    "end": "528490"
  },
  {
    "text": "you do have to spend a little time to provision a new instance of your app when a new",
    "start": "528490",
    "end": "534700"
  },
  {
    "text": "request comes in and that can lead to a bit of startup latency now in some scenarios this is perfectly acceptable",
    "start": "534700",
    "end": "541510"
  },
  {
    "text": "but in others say if you really want a fast rate of return on your HTTP API no",
    "start": "541510",
    "end": "548800"
  },
  {
    "text": "matter what this isn't just gonna fly so over the past year we have been working on a new hosting offering that is",
    "start": "548800",
    "end": "557230"
  },
  {
    "text": "currently in public preview and we call it the premium plan so what the premium",
    "start": "557230",
    "end": "562630"
  },
  {
    "text": "plan does is it allows you to have that almost limitless auto-scale of the",
    "start": "562630",
    "end": "567760"
  },
  {
    "text": "consumption plan but with the reliability of the of what we call the",
    "start": "567760",
    "end": "573370"
  },
  {
    "text": "dedicated plan the app service plan and it's also allowed us and we do this basically by on the back end we kind of",
    "start": "573370",
    "end": "580870"
  },
  {
    "text": "hybridize the two and we kind of have a blend of app service and consumption that they work together but there are",
    "start": "580870",
    "end": "588040"
  },
  {
    "text": "some added benefits to this as well one thing is that in the consumption plan",
    "start": "588040",
    "end": "593470"
  },
  {
    "text": "sometimes you want to run inside a V net sometimes you need that network isolation not possible on consumption",
    "start": "593470",
    "end": "599980"
  },
  {
    "text": "but it is possible on the premium plan we've also extended the run duration so",
    "start": "599980",
    "end": "605110"
  },
  {
    "text": "under the consumption plan the limit is set to five minutes as a default you can",
    "start": "605110",
    "end": "610360"
  },
  {
    "text": "set it up to ten in your configuration settings but sometimes you have some pretty you know sometimes we noticed",
    "start": "610360",
    "end": "616720"
  },
  {
    "text": "that functions are not always just quick little toy functions sometimes they're doing some very complex or long-running",
    "start": "616720",
    "end": "623320"
  },
  {
    "text": "stuff and you need your function to run for a bit longer so the run duration has been upped to 25",
    "start": "623320",
    "end": "628660"
  },
  {
    "text": "minutes if you are on a full app service plan I will note there is no run duration your functions could run until",
    "start": "628660",
    "end": "635320"
  },
  {
    "text": "the heat death of the universe or until Microsoft goes out of business which will hopefully be about the same time she says we hope for job security and",
    "start": "635320",
    "end": "643240"
  },
  {
    "text": "it's all so predictable billing so there's a maximum plan size you will never scale above that but you may very",
    "start": "643240",
    "end": "650560"
  },
  {
    "text": "well be below based on your traffic so this kind of gives the concept of",
    "start": "650560",
    "end": "655830"
  },
  {
    "start": "653000",
    "end": "802000"
  },
  {
    "text": "premium functions and how it works this is basically the the ideal of serverless",
    "start": "655830",
    "end": "661390"
  },
  {
    "text": "namely that as my load increases my consumption instances increase to match that load and I'm",
    "start": "661390",
    "end": "668220"
  },
  {
    "text": "covered the reality is a little more like this and so I get some load coming",
    "start": "668220",
    "end": "675060"
  },
  {
    "text": "in my scale controller says oh hey I've got some load I need to flip with",
    "start": "675060",
    "end": "680550"
  },
  {
    "text": "another instance but there's that little bit of lag and in that little bit of lag you are going to get that cold start latency and so what you'll see as your",
    "start": "680550",
    "end": "687840"
  },
  {
    "text": "app scales is you'll see these little jumps like this and eventually it'll catch up and you'll go down to a nice",
    "start": "687840",
    "end": "693870"
  },
  {
    "text": "latency again but that's not very great for those requests that came in during this period of stabilization so what",
    "start": "693870",
    "end": "701160"
  },
  {
    "text": "premium does is it allows you to basically provision a certain number of reserved instances these are instances",
    "start": "701160",
    "end": "708300"
  },
  {
    "text": "that are always available they're always warm and ready to catch new requests and",
    "start": "708300",
    "end": "713370"
  },
  {
    "text": "indications that are coming in and as soon as an indication comes in like you",
    "start": "713370",
    "end": "718530"
  },
  {
    "text": "can see is my laser pointer working no batteries too low okay but as soon as a request comes in and that reserved",
    "start": "718530",
    "end": "724950"
  },
  {
    "text": "instance is handling it the premium plan controllers are going to scale out another reserved instance",
    "start": "724950",
    "end": "731280"
  },
  {
    "text": "so you've always got a little bit of a buffer up to your max planned size and there's always something covering you",
    "start": "731280",
    "end": "738860"
  },
  {
    "text": "now if you were running this on App Service a dedicated app service plan and",
    "start": "738860",
    "end": "744300"
  },
  {
    "text": "you knew you were gonna have this kind of load you would have to basically say",
    "start": "744300",
    "end": "749880"
  },
  {
    "text": "all right I'm gonna need something to handle the max load especially if this is a very bursty workload if this is",
    "start": "749880",
    "end": "755280"
  },
  {
    "text": "something where you can't predict when that max is going to come in and so you would be paying for six instances all",
    "start": "755280",
    "end": "760800"
  },
  {
    "text": "the time and I'm not going to do the calculus involved in you know the difference between six instances",
    "start": "760800",
    "end": "765960"
  },
  {
    "text": "constantly and that curve of the premium instances but your cost savings are",
    "start": "765960",
    "end": "771870"
  },
  {
    "text": "realized there so there is less compute time being used less cost and one other",
    "start": "771870",
    "end": "777360"
  },
  {
    "text": "thing I'll note is that compared to the consumption plan consumption plan runs",
    "start": "777360",
    "end": "782640"
  },
  {
    "text": "on fairly lightweight VMs but the premium plan runs on some very",
    "start": "782640",
    "end": "789089"
  },
  {
    "text": "heavy-duty hardware these are what we call DV 2 Series VMs and they go up all the way to I believe",
    "start": "789089",
    "end": "797390"
  },
  {
    "text": "four cores and they're they're pretty beefy so I have a demo of this in action",
    "start": "797390",
    "end": "804730"
  },
  {
    "start": "802000",
    "end": "1020000"
  },
  {
    "text": "I'm gonna shift over here so let's take a look over here I have two apps set up",
    "start": "804730",
    "end": "813760"
  },
  {
    "text": "one is my one is an app that just has a simple hello world HTTP trigger on a on",
    "start": "813760",
    "end": "824510"
  },
  {
    "text": "a consumption plan very simple basic offering the other one is that same app",
    "start": "824510",
    "end": "830360"
  },
  {
    "text": "but it's been deployed to a premium plan and I'm going to use loader IO to generate some load here and let's watch",
    "start": "830360",
    "end": "837800"
  },
  {
    "text": "what happens to this graph in terms of number of clients that are doing the requests and then the average time on",
    "start": "837800",
    "end": "844010"
  },
  {
    "text": "the request this is my last run I haven't run this in about 20 minutes so the thing has slowed back down it's been",
    "start": "844010",
    "end": "851390"
  },
  {
    "text": "deep provisioned and we're down to zero instances again alright so this is a",
    "start": "851390",
    "end": "859240"
  },
  {
    "text": "banner ad not what I need this is the consumption test we're gonna start",
    "start": "859240",
    "end": "866000"
  },
  {
    "text": "hitting this and as this runs you can see that we are up to about 3000 okay",
    "start": "866000",
    "end": "873740"
  },
  {
    "text": "five thousand milliseconds average time and we're starting to go down now we're starting to scale on the we're starting",
    "start": "873740",
    "end": "880160"
  },
  {
    "text": "to scale out two more instances and we're starting to see this average latency decrease over time but again",
    "start": "880160",
    "end": "886210"
  },
  {
    "text": "this area right here not great right and",
    "start": "886210",
    "end": "891530"
  },
  {
    "text": "if you're not so concerned with latency that may be fine the consumption plan is a great offering in those situations and",
    "start": "891530",
    "end": "898790"
  },
  {
    "text": "with I think like a hum like a million executions free every month it's it's",
    "start": "898790",
    "end": "905540"
  },
  {
    "text": "pretty it's practically free to run if you've seen if you were at Troy hunts",
    "start": "905540",
    "end": "910550"
  },
  {
    "text": "keynote and you saw him and talked about his site have I been poned that runs on",
    "start": "910550",
    "end": "915950"
  },
  {
    "text": "Azure functions and he's done a couple I think he's done a couple of blog posts he's definitely posted on Twitter about",
    "start": "915950",
    "end": "922360"
  },
  {
    "text": "the amount of compute he uses and his Azure functions bill ending up",
    "start": "922360",
    "end": "927370"
  },
  {
    "text": "be something like seven dollars a month it was pretty pretty low okay so our",
    "start": "927370",
    "end": "933760"
  },
  {
    "text": "test is finished and we can see there's this initial high peak and then we come down to a relatively low latency as we",
    "start": "933760",
    "end": "941230"
  },
  {
    "text": "get a hang of things still let's take a look at premium so with premium again",
    "start": "941230",
    "end": "950800"
  },
  {
    "text": "with the banner ad but less this time all right premium you can see this graph is much",
    "start": "950800",
    "end": "956650"
  },
  {
    "text": "lower to scale so we're peaking at about 80 milliseconds of latency so sub-second",
    "start": "956650",
    "end": "962290"
  },
  {
    "text": "latency here and you can see our let's see we've got about 1300 clients active you can see",
    "start": "962290",
    "end": "970630"
  },
  {
    "text": "there's another peak here so this is not the best this is something that we're",
    "start": "970630",
    "end": "975670"
  },
  {
    "text": "working through as we move this from preview to GA but you can see that we're",
    "start": "975670",
    "end": "981460"
  },
  {
    "text": "starting to flatline around 11 milliseconds of latency same app different plan over here we're around 90",
    "start": "981460",
    "end": "992260"
  },
  {
    "text": "seconds 90 milliseconds of latency and our peak was somewhere around 4 seconds",
    "start": "992260",
    "end": "998350"
  },
  {
    "text": "and we had about sixteen hundred clients active at that time so that's just a",
    "start": "998350",
    "end": "1004170"
  },
  {
    "text": "quick demo that's meant to kind of show you the power of the premium plan in action okay let's move back here",
    "start": "1004170",
    "end": "1014630"
  },
  {
    "start": "1020000",
    "end": "1462000"
  },
  {
    "text": "okay cool all right so one other thing that we have done thank you come back",
    "start": "1021220",
    "end": "1028329"
  },
  {
    "text": "come back come back okay cool the other thing that I was talking about",
    "start": "1028329",
    "end": "1034900"
  },
  {
    "text": "with premium is namely that it allows you to do virtual networking so we do",
    "start": "1034900",
    "end": "1039909"
  },
  {
    "text": "get a number of requests from customers who say I want to run functions in a V net I want to run functions but I cannot",
    "start": "1039909",
    "end": "1046538"
  },
  {
    "text": "run in a public cloud and there's a couple of different offerings for this so consumption plan pretty much your",
    "start": "1046539",
    "end": "1053350"
  },
  {
    "text": "public all bets are off premium plan we do allow you to do v-neck connectivity we have V net",
    "start": "1053350",
    "end": "1058750"
  },
  {
    "text": "integration and private site access the app service plan can get even more",
    "start": "1058750",
    "end": "1064450"
  },
  {
    "text": "restricted but again you have that greater cost but we still have no",
    "start": "1064450",
    "end": "1070059"
  },
  {
    "text": "outbound IP restrictions and then there is this last one which I haven't talked about yet which is an app service environment and that is basically a",
    "start": "1070059",
    "end": "1076780"
  },
  {
    "text": "fully isolated what we call a stamp but a fully isolated environment for you",
    "start": "1076780",
    "end": "1083679"
  },
  {
    "text": "within a sure and that can get very pricey so in terms of price points we",
    "start": "1083679",
    "end": "1091450"
  },
  {
    "text": "kind of go up like this and as we do the network isolation also goes up so it",
    "start": "1091450",
    "end": "1096610"
  },
  {
    "text": "depends on what you need for your particular solution this is kind of an",
    "start": "1096610",
    "end": "1102309"
  },
  {
    "text": "example of how premium works with the V net integration to create sort of this",
    "start": "1102309",
    "end": "1107620"
  },
  {
    "text": "yeah this is how premium works with V net integration excuse me so a couple of",
    "start": "1107620",
    "end": "1113890"
  },
  {
    "text": "things you can see here you need to watch out for your dependencies it does allow you to secure outbound calls to",
    "start": "1113890",
    "end": "1120580"
  },
  {
    "text": "resources in a V net app service environment this is the one I was",
    "start": "1120580",
    "end": "1126490"
  },
  {
    "text": "talking about the very very isolated very hermetically sealed yeah this is if",
    "start": "1126490",
    "end": "1135460"
  },
  {
    "text": "you need a this is for basically large enterprises if you need something very",
    "start": "1135460",
    "end": "1140669"
  },
  {
    "text": "very private right like I want my own cloud but I don't want to maintain the infrastructure for my own cloud okay",
    "start": "1140669",
    "end": "1149850"
  },
  {
    "text": "there's another option that I talked about and that's namely if I want to run on Prem or elsewhere a lot of people are",
    "start": "1149850",
    "end": "1156149"
  },
  {
    "text": "looking to kubernetes and we have found that this is really useful if you want",
    "start": "1156149",
    "end": "1163889"
  },
  {
    "text": "to say run your functions app in one environment or shift it to another or",
    "start": "1163889",
    "end": "1169739"
  },
  {
    "text": "you don't necessarily know where it's going to land how many of you have worked with kubernetes before how many",
    "start": "1169739",
    "end": "1175200"
  },
  {
    "text": "of you are familiar ok a couple of folks I am not particularly an expert in this",
    "start": "1175200",
    "end": "1181049"
  },
  {
    "text": "area but I can talk a little bit about what we have done with containers and",
    "start": "1181049",
    "end": "1187349"
  },
  {
    "text": "scaling so another thing we've come on did you die there we go all right so one",
    "start": "1187349",
    "end": "1194580"
  },
  {
    "text": "of the things about kubernetes containers is that when you need another instance to handle load this is done on",
    "start": "1194580",
    "end": "1200999"
  },
  {
    "text": "a reactive basis so you're looking at the CPU and the memory usage within a",
    "start": "1200999",
    "end": "1206519"
  },
  {
    "text": "container to determine when you need to scale out to another instance of that container spin another one up and that",
    "start": "1206519",
    "end": "1213539"
  },
  {
    "text": "can lead to you know some lag time it's not as proactive as a functions model so",
    "start": "1213539",
    "end": "1220879"
  },
  {
    "text": "functions has come up with the kubernetes based event-driven auto",
    "start": "1220879",
    "end": "1225899"
  },
  {
    "text": "scaling which is as its name suggests it monitors event queues coming in so it",
    "start": "1225899",
    "end": "1232799"
  },
  {
    "text": "looks at things like the length of your queue it looks at your Kafka stream",
    "start": "1232799",
    "end": "1237929"
  },
  {
    "text": "depth it looks at these things before it ever hits your CPU or memory and impacts",
    "start": "1237929",
    "end": "1245039"
  },
  {
    "text": "that and does the scaling on its own this has been fully open source it's available today and it's also introduced",
    "start": "1245039",
    "end": "1253649"
  },
  {
    "text": "a number of new kubernetes triggers so for example we have Kafka Adric use as",
    "start": "1253649",
    "end": "1260909"
  },
  {
    "text": "your service bus RabbitMQ HTTP queues as your event grid and cloud events we've also have more coming like Azure event",
    "start": "1260909",
    "end": "1268019"
  },
  {
    "text": "hubs storage cosmo DB and durable functions which I will talk about in a minute another advantage of kada is that",
    "start": "1268019",
    "end": "1275539"
  },
  {
    "text": "it does not have to proxy those events through an HTTP or",
    "start": "1275539",
    "end": "1280840"
  },
  {
    "text": "HTTP it's a direct from the event into your container it runs alongside virtual",
    "start": "1280840",
    "end": "1288100"
  },
  {
    "text": "couplet and yeah sorry IKS virtual nodes and we do have a webinar about this",
    "start": "1288100",
    "end": "1295210"
  },
  {
    "text": "coming up later in May if you're interested in more information about this and this is just sort of a overview",
    "start": "1295210",
    "end": "1303580"
  },
  {
    "text": "of how k2 works so you have an external trigger event source that gets translated through the metrics adapter",
    "start": "1303580",
    "end": "1309669"
  },
  {
    "text": "into something that the kubernetes pod autoscaler understands and then it'll",
    "start": "1309669",
    "end": "1315970"
  },
  {
    "text": "scale out to various different function pods is the very very simple version of how this works okay so when to consider",
    "start": "1315970",
    "end": "1326860"
  },
  {
    "text": "kata when you want to run functions on premises when you want to run it on edge devices if you are already a",
    "start": "1326860",
    "end": "1332760"
  },
  {
    "text": "containerized kubernetes shop if the rest of your solution works in that way this will mesh nicely with that if",
    "start": "1332760",
    "end": "1341080"
  },
  {
    "text": "you're not sold on Azure if you're worried about vendor lock-in we don't want you to be or if you need more",
    "start": "1341080",
    "end": "1347799"
  },
  {
    "text": "control than the other functions hosting options will offer you remember I said that we see this one being asked for a",
    "start": "1347799",
    "end": "1354760"
  },
  {
    "text": "lot from people who say well I have these custom dependencies that I need to access I have I have this custom",
    "start": "1354760",
    "end": "1362649"
  },
  {
    "text": "hardware that I need to run on the plans on Azure themselves run within the app",
    "start": "1362649",
    "end": "1368289"
  },
  {
    "text": "service sandbox and that has certain limitations for security purposes but if",
    "start": "1368289",
    "end": "1374020"
  },
  {
    "text": "you need something that goes beyond those this may be the solution for you all right so that's a lot about hosting",
    "start": "1374020",
    "end": "1380190"
  },
  {
    "text": "I'm going to talk a little bit about app insights and this is not the best of",
    "start": "1380190",
    "end": "1385750"
  },
  {
    "text": "slides but what I do want to say is that so app insights is sort of the",
    "start": "1385750",
    "end": "1391559"
  },
  {
    "text": "recommended experience for using Azure functions on Azure and we have done",
    "start": "1391559",
    "end": "1397630"
  },
  {
    "text": "significant work over the last year to make the telemetry that we send to app",
    "start": "1397630",
    "end": "1403600"
  },
  {
    "text": "insights a lot richer and one of the things that this is resulted in is integration with app map and app map",
    "start": "1403600",
    "end": "1411059"
  },
  {
    "text": "shows you basically how your function chain works so you can identify if you",
    "start": "1411059",
    "end": "1416410"
  },
  {
    "text": "have a chain of functions if you have a whole network of functions performing",
    "start": "1416410",
    "end": "1421450"
  },
  {
    "text": "you know an operation in steps you can see where your latencies are you can see where a request failed and you can break",
    "start": "1421450",
    "end": "1428050"
  },
  {
    "text": "it down piece by piece and pinpoint where things are happening in a nice graphical user interface this",
    "start": "1428050",
    "end": "1433540"
  },
  {
    "text": "information is also available if you're going through the application insights query language which is actually exactly",
    "start": "1433540",
    "end": "1439810"
  },
  {
    "text": "like what we use internally for investigating issues and live sites and",
    "start": "1439810",
    "end": "1446470"
  },
  {
    "text": "so on it's capable of very fast queries across very large datasets but this is",
    "start": "1446470",
    "end": "1451690"
  },
  {
    "text": "obviously a much easier way and much more user-friendly presentable way of figuring out where there are problems in",
    "start": "1451690",
    "end": "1458440"
  },
  {
    "text": "your application all right I do want to talk a little bit about security so one",
    "start": "1458440",
    "end": "1467230"
  },
  {
    "start": "1462000",
    "end": "1547000"
  },
  {
    "text": "of the things about functions is you know where am I going to keep my credentials right I want to keep my credentials secure somewhere I don't",
    "start": "1467230",
    "end": "1472960"
  },
  {
    "text": "want to just be storing them god forbid in my application code or in maybe even",
    "start": "1472960",
    "end": "1479710"
  },
  {
    "text": "in a config file that I may accidentally check into github and then you know the github ransom ransomware thing that has",
    "start": "1479710",
    "end": "1487240"
  },
  {
    "text": "been hitting the last week may shut down your old repo and ask for about 0.75",
    "start": "1487240",
    "end": "1492280"
  },
  {
    "text": "Bitcoin to get it back I see some nodding heads so somebody's read that news story right so this is not great we",
    "start": "1492280",
    "end": "1501820"
  },
  {
    "text": "want to do something different and there's a couple of different ways to do this we have within as your managed",
    "start": "1501820",
    "end": "1508240"
  },
  {
    "text": "service identity and something new called key vault and again over the past",
    "start": "1508240",
    "end": "1514180"
  },
  {
    "text": "year we've been doing a bunch of work to integrate functions better with that so",
    "start": "1514180",
    "end": "1520390"
  },
  {
    "text": "that you can actually reference directly from from your function into a key vault",
    "start": "1520390",
    "end": "1526810"
  },
  {
    "text": "reference keep your secrets stored in key vault but pull it into your function at runtime as needed and that comes with",
    "start": "1526810",
    "end": "1532660"
  },
  {
    "text": "the added benefits of key Balt namely that you can do you can do credential",
    "start": "1532660",
    "end": "1537820"
  },
  {
    "text": "cycling and it is encrypted so again",
    "start": "1537820",
    "end": "1543070"
  },
  {
    "text": "this is not totally my area we're getting to that but these solutions are available all right I know I'm going",
    "start": "1543070",
    "end": "1549970"
  },
  {
    "start": "1547000",
    "end": "1680000"
  },
  {
    "text": "kind of fast so DevOps something we haven't talked about yet how do I test",
    "start": "1549970",
    "end": "1555370"
  },
  {
    "text": "how do I deploy how am I going to basically get this thing into the cloud",
    "start": "1555370",
    "end": "1560380"
  },
  {
    "text": "handle versioning and make changes this is kind of what we talked about as the outer loop I think this is a Microsoft",
    "start": "1560380",
    "end": "1567700"
  },
  {
    "text": "specific term someone correct me if I am wrong common industry no okay",
    "start": "1567700",
    "end": "1573520"
  },
  {
    "text": "it's our jargon but the outer loop is basically everything other than code run debug it's everything that they didn't",
    "start": "1573520",
    "end": "1579850"
  },
  {
    "text": "really talk about that much during if you had a if you did a comps I undergrad degree this is this is that stuff so",
    "start": "1579850",
    "end": "1587590"
  },
  {
    "text": "source control build and test deploy how am I going to run this in prod and how am I going to monitor it so I've already",
    "start": "1587590",
    "end": "1593740"
  },
  {
    "text": "gone over the monitoring piece a bit but what I want to bring up is as your DevOps if you're familiar with a jervie",
    "start": "1593740",
    "end": "1600490"
  },
  {
    "text": "STS or sorry just V STS as your DevOps is the new rebranding and as your",
    "start": "1600490",
    "end": "1606460"
  },
  {
    "text": "pipelines is the dev deploy experience within that we have a pretty good story",
    "start": "1606460",
    "end": "1612520"
  },
  {
    "text": "already around dotnet deployment but the",
    "start": "1612520",
    "end": "1617740"
  },
  {
    "text": "one of the things about functions is you don't just write in dotnet you can write in Python you can write in Java you can write in JavaScript and I know we're",
    "start": "1617740",
    "end": "1624670"
  },
  {
    "text": "working on other workers oh yes you can also write in PowerShell now because that's an announcement we did a couple",
    "start": "1624670",
    "end": "1629860"
  },
  {
    "text": "of weeks ago which is great for cloud automation scenarios but how am I going to get it out there so we've actually",
    "start": "1629860",
    "end": "1636730"
  },
  {
    "text": "created a bunch of new pipeline templates that you can use to that are",
    "start": "1636730",
    "end": "1643540"
  },
  {
    "text": "specifically for Azure functions to get your function into the cloud to hook this up to your github repo or Lord does",
    "start": "1643540",
    "end": "1652060"
  },
  {
    "text": "anyone use SourceForge anymore anyway your github repo or your other your other source control solutions and we've",
    "start": "1652060",
    "end": "1660220"
  },
  {
    "text": "also within the azure CLI created a command to stand up a DevOps pipeline and connect that directly to your",
    "start": "1660220",
    "end": "1668980"
  },
  {
    "text": "function app and get that up and running so very quick very fast we take care of all the pieces for you there are fewer",
    "start": "1668980",
    "end": "1675130"
  },
  {
    "text": "places for things to go wrong okay",
    "start": "1675130",
    "end": "1680190"
  },
  {
    "start": "1680000",
    "end": "2503000"
  },
  {
    "text": "all right workflows and state so I will fully admit to full disclosure of bias this is the area that I work in and so",
    "start": "1680400",
    "end": "1687780"
  },
  {
    "text": "it's the one that I'm like most excited about and I may go into a little bit of detail here so the idea of functions is",
    "start": "1687780",
    "end": "1696780"
  },
  {
    "text": "that they should be quick they should be small they should be fast they should be stateless and this works",
    "start": "1696780",
    "end": "1703440"
  },
  {
    "text": "great if I'm say resizing a blob image but what if I need to do something a little bit more complex what if I need",
    "start": "1703440",
    "end": "1711630"
  },
  {
    "text": "to say take the result of one function and put it into another function and",
    "start": "1711630",
    "end": "1717750"
  },
  {
    "text": "then put that result into another function it is possible with with what I",
    "start": "1717750",
    "end": "1723870"
  },
  {
    "text": "what I refer to as vanilla functions I can put a queue in between two functions write the output to the queue use that",
    "start": "1723870",
    "end": "1730530"
  },
  {
    "text": "queue as a trigger and keep going the only problem is that now I end up with a bajillion queues or well n minus one but",
    "start": "1730530",
    "end": "1737429"
  },
  {
    "text": "still it can get quite large and I don't really have any place that declares that",
    "start": "1737429",
    "end": "1742679"
  },
  {
    "text": "structure that says this feeds into this feeds into this you get to a point of well in my experience you get to a point",
    "start": "1742679",
    "end": "1749370"
  },
  {
    "text": "of tribal knowledge where either you have a giant Visio diagram that shows",
    "start": "1749370",
    "end": "1755150"
  },
  {
    "text": "how your system fits together is rapidly outdated and really only one person really knows how it works and you really",
    "start": "1755150",
    "end": "1761640"
  },
  {
    "text": "don't want them to leave or you just don't know and you have to spend a lot of time tracing through to find out at",
    "start": "1761640",
    "end": "1768179"
  },
  {
    "text": "map can help you with that but it's still kind of a pain plus you're paying for all those additional resources",
    "start": "1768179",
    "end": "1774620"
  },
  {
    "text": "here's another one parallelism so let's say I get a batch in like I can from say an event hub",
    "start": "1774620",
    "end": "1781980"
  },
  {
    "text": "trigger in functions and I want to go and I want to process all of those events individually well I can do that I",
    "start": "1781980",
    "end": "1789210"
  },
  {
    "text": "can write to a bunch of Q outputs but how am I going to aggregate that data back together right I have to monitor",
    "start": "1789210",
    "end": "1795750"
  },
  {
    "text": "for when all of those functions are complete I have to pull that all back together and I have to I have to do that",
    "start": "1795750",
    "end": "1801090"
  },
  {
    "text": "somehow and you can do it but it is painful it is messy and it is not really",
    "start": "1801090",
    "end": "1806730"
  },
  {
    "text": "a good time what about if I want to aggregate several events let's say I want to",
    "start": "1806730",
    "end": "1813680"
  },
  {
    "text": "something that will listen for events an update state and take action based on",
    "start": "1813680",
    "end": "1819860"
  },
  {
    "text": "the kind of data that it's coming in that's coming in that can also be very difficult because again each function",
    "start": "1819860",
    "end": "1825920"
  },
  {
    "text": "invocation is stateless it has no concept of any other indications that are happening around it what if I want",
    "start": "1825920",
    "end": "1833780"
  },
  {
    "text": "to do some long-running process monitoring well you might say well Katie just use a timer function it's like a",
    "start": "1833780",
    "end": "1839090"
  },
  {
    "text": "cron job and go that way what if I want these processes though to be",
    "start": "1839090",
    "end": "1844700"
  },
  {
    "text": "configurable what if I want them to work for particular things what if I want to say hey I want to monitor I don't know",
    "start": "1844700",
    "end": "1851650"
  },
  {
    "text": "the weather in Bellevue to tell me if it's raining because I don't want to go outside when it's raining in which case",
    "start": "1851650",
    "end": "1857930"
  },
  {
    "text": "I really shouldn't have moved to Seattle or what if I want to spin up a bunch of",
    "start": "1857930",
    "end": "1863510"
  },
  {
    "text": "identical monitoring processes in say a connected device scenario but for",
    "start": "1863510",
    "end": "1868640"
  },
  {
    "text": "different device IDs well with your trigger function you could go and you",
    "start": "1868640",
    "end": "1874250"
  },
  {
    "text": "could create as many timer triggered functions as you have devices and that",
    "start": "1874250",
    "end": "1880640"
  },
  {
    "text": "rapidly gets very large and you are copying over code multiple times and",
    "start": "1880640",
    "end": "1885830"
  },
  {
    "text": "it's just kind of redundant and icky what if I want to say like change the",
    "start": "1885830",
    "end": "1892490"
  },
  {
    "text": "latency of my monitoring cycle you know if everything's great cool check back in",
    "start": "1892490",
    "end": "1899060"
  },
  {
    "text": "an hour if everything's not so great all right I want to watch this very closely for the next 10 minutes to make sure that my state is resolved these are all",
    "start": "1899060",
    "end": "1905930"
  },
  {
    "text": "hypothetical examples but they could happen what about if I have a",
    "start": "1905930",
    "end": "1911240"
  },
  {
    "text": "long-running process so we talked about how a we've upped the we've upped the",
    "start": "1911240",
    "end": "1918140"
  },
  {
    "text": "maximum execution time of functions to 25 minutes from 10 minutes default 5",
    "start": "1918140",
    "end": "1924110"
  },
  {
    "text": "minutes in a standard consumption plan well in some cases I have a lot of work",
    "start": "1924110",
    "end": "1931040"
  },
  {
    "text": "I have to do on the back end but I want my client whoever called this function to have a response right away so that it",
    "start": "1931040",
    "end": "1938570"
  },
  {
    "text": "doesn't just have an open connection hanging and it has no idea whether things succeeded or not there's a",
    "start": "1938570",
    "end": "1944030"
  },
  {
    "text": "pattern for this it's an HTTP - OH - response pattern where I return a",
    "start": "1944030",
    "end": "1950120"
  },
  {
    "text": "response that points to an endpoint they can monitor for the final result I can",
    "start": "1950120",
    "end": "1955440"
  },
  {
    "text": "set that up in regular functions but again it's kind of boilerplate code that is standardized and there's really it's",
    "start": "1955440",
    "end": "1962370"
  },
  {
    "text": "not it doesn't really add business value and then finally what if I need to involve humans in my workflow what if I",
    "start": "1962370",
    "end": "1968850"
  },
  {
    "text": "need to bring in events what if I have say a if I want to do like a to factor",
    "start": "1968850",
    "end": "1974909"
  },
  {
    "text": "off situation or if I want to start off a workflow that brings in you know that",
    "start": "1974909",
    "end": "1980730"
  },
  {
    "text": "requires a manager approval or a couple of managers approval right this again is",
    "start": "1980730",
    "end": "1986010"
  },
  {
    "text": "something that I could set up in regular functions but is difficult you're like okay Katie you've you've made your point",
    "start": "1986010",
    "end": "1992279"
  },
  {
    "text": "this is all hard we know it's not hard it's just a pain how are you going to",
    "start": "1992279",
    "end": "1998700"
  },
  {
    "text": "solve it right okay next slide so durable functions is an advanced",
    "start": "1998700",
    "end": "2003769"
  },
  {
    "text": "extension of azor functions it's actually the area that I work on specifically and what this does is it",
    "start": "2003769",
    "end": "2009860"
  },
  {
    "text": "introduces state it allows you to run stateful long-running workflows within",
    "start": "2009860",
    "end": "2016070"
  },
  {
    "text": "functions taking advantage of the of the server list consumption thing and the",
    "start": "2016070",
    "end": "2022490"
  },
  {
    "text": "way it does this is that you have we've kind of created a couple of different",
    "start": "2022490",
    "end": "2027590"
  },
  {
    "text": "classes of functions so there is your client which is stateless which you can",
    "start": "2027590",
    "end": "2033620"
  },
  {
    "text": "use to start off any of these orchestrated workflows that can hook up",
    "start": "2033620",
    "end": "2040220"
  },
  {
    "text": "to any trigger that function supports so",
    "start": "2040220",
    "end": "2045639"
  },
  {
    "text": "excuse me I can start on an HTTP trigger I can start on a cue trigger I can start",
    "start": "2045639",
    "end": "2051800"
  },
  {
    "text": "on event grid anything that works with all of them but what that can do is it can start up the orchestrator function",
    "start": "2051800",
    "end": "2058128"
  },
  {
    "text": "and this is the stateful piece in the",
    "start": "2058129",
    "end": "2063408"
  },
  {
    "text": "same way that a Orchestrator like in a sari a conductor in an orchestra",
    "start": "2063409",
    "end": "2070220"
  },
  {
    "text": "conducts various musicians to play various parts an Orchestrator function",
    "start": "2070220",
    "end": "2075908"
  },
  {
    "text": "conducts various activities and instructs them to do various things the orchestrator allows you to define a",
    "start": "2075909",
    "end": "2081590"
  },
  {
    "text": "workflow in code define async work and then go to sleep all that async work is",
    "start": "2081590",
    "end": "2087740"
  },
  {
    "text": "being done so you're not billed for the time that your async work is running you are billed for the async the function",
    "start": "2087740",
    "end": "2094250"
  },
  {
    "text": "doing the async work but you're Orchestrator itself has shut down and is waiting no point in keeping it up the",
    "start": "2094250",
    "end": "2100400"
  },
  {
    "text": "activities are what actually run a lot of the work the orchestrator is intended to be pretty lightweight just kind of a",
    "start": "2100400",
    "end": "2106520"
  },
  {
    "text": "scaffolding of logic that allows you to layout here is that path not in Visio",
    "start": "2106520",
    "end": "2111730"
  },
  {
    "text": "and we've also at Build announced an early early alpha preview of an actor",
    "start": "2111730",
    "end": "2118970"
  },
  {
    "text": "like model for entities so how many of you are familiar with like actor based",
    "start": "2118970",
    "end": "2124070"
  },
  {
    "text": "programming models okay a couple of folks yeah basic idea is you know you have an actor",
    "start": "2124070",
    "end": "2130730"
  },
  {
    "text": "it can receive messages that alter its state and communicate with other actors in the same way very very basic overview",
    "start": "2130730",
    "end": "2137510"
  },
  {
    "text": "but this is something that we've had requests for from the beginning endurable functions we found that the",
    "start": "2137510",
    "end": "2143510"
  },
  {
    "text": "underlying framework we were using at first did not really support this well but over the past year we've worked with",
    "start": "2143510",
    "end": "2149150"
  },
  {
    "text": "Microsoft Research to pretty pretty dramatically restructure that underlying",
    "start": "2149150",
    "end": "2155150"
  },
  {
    "text": "framework and allow this to take place all right so what does durable functions",
    "start": "2155150",
    "end": "2160820"
  },
  {
    "text": "look like this is an example of a durable functions Orchestrator specifically the first chaining example",
    "start": "2160820",
    "end": "2168380"
  },
  {
    "text": "that I showed you in that six grid couple slides ago so one of the things",
    "start": "2168380",
    "end": "2173570"
  },
  {
    "text": "about this that I want to point out is that we're using a lot of very familiar non distributed c-sharp coding coding",
    "start": "2173570",
    "end": "2180320"
  },
  {
    "text": "conventions like we're using try-catch blocks so in this case if I have an exception that happens in one of my",
    "start": "2180320",
    "end": "2188560"
  },
  {
    "text": "functions that I'm calling f1 f2 or f3 and I don't handle it within that function that's going to get marshaled",
    "start": "2188560",
    "end": "2194480"
  },
  {
    "text": "back into this Orchestrator where I can handle it just like if I had called out to say a different class library and an",
    "start": "2194480",
    "end": "2201200"
  },
  {
    "text": "on distributed non distributed solution another one that I want to point out is",
    "start": "2201200",
    "end": "2207350"
  },
  {
    "text": "that we are using the async/await notation for calling this acing",
    "start": "2207350",
    "end": "2213270"
  },
  {
    "text": "work and at each await call we're going to kind of checkpoint go to sleep and then wake back up again and let me check",
    "start": "2213270",
    "end": "2220920"
  },
  {
    "text": "here 1221 p.m. okay so we're doing good on time alright so pointing out here this is the",
    "start": "2220920",
    "end": "2227130"
  },
  {
    "text": "orchestrator function binding right here these are the activity functions that I'm calling and this is kind of going",
    "start": "2227130",
    "end": "2233760"
  },
  {
    "text": "into the patterns in a little bit more depth here's function chaining you can see here's the asynchronous HTTP API that's",
    "start": "2233760",
    "end": "2243000"
  },
  {
    "text": "the delay that's the quick response and then the delayed endpoint that I'm going to monitor for and work so what's",
    "start": "2243000",
    "end": "2249210"
  },
  {
    "text": "happening here is I'm taking in data from an HTTP trigger binding I'm using",
    "start": "2249210",
    "end": "2255270"
  },
  {
    "text": "that event data to start a new Orchestrator and then down here this",
    "start": "2255270",
    "end": "2260550"
  },
  {
    "text": "last line returns starter create check status response is returning a JSON",
    "start": "2260550",
    "end": "2266160"
  },
  {
    "text": "payload that is that contains various management endpoints so that's for",
    "start": "2266160",
    "end": "2271200"
  },
  {
    "text": "monitoring status that's for monitoring that's for terminating it if you need to for sending an event to it for what's",
    "start": "2271200",
    "end": "2279390"
  },
  {
    "text": "the other one for rewinding it in case if a part of it has failed and you need to go back to your last good state",
    "start": "2279390",
    "end": "2285840"
  },
  {
    "text": "that's a preview feature still working on it there we go",
    "start": "2285840",
    "end": "2293790"
  },
  {
    "text": "this is the monitor pattern I was talking about so this allows you to do a sort of a richer status monitoring",
    "start": "2293790",
    "end": "2300630"
  },
  {
    "text": "experience allows you to take action based on what you get back from that monitoring and you can notice that this",
    "start": "2300630",
    "end": "2307380"
  },
  {
    "text": "is pretty concise code and it looks a lot like what you would see in an on",
    "start": "2307380",
    "end": "2312660"
  },
  {
    "text": "distributed an on distributed solution which is one of the parts that we really like about it let's see here",
    "start": "2312660",
    "end": "2319200"
  },
  {
    "text": "human interaction got tiny I don't know how that happened but I do realize that I have missed oh alright that's not",
    "start": "2319200",
    "end": "2329790"
  },
  {
    "text": "great alright so but human interaction is another one this is a so the way that",
    "start": "2329790",
    "end": "2337020"
  },
  {
    "text": "we do this is by using event sourcing we write a list of the events as they",
    "start": "2337020",
    "end": "2344310"
  },
  {
    "text": "happen and we replay them to rebuild this is a brief animation that kind of shows you what happens an Orchestrator",
    "start": "2344310",
    "end": "2350110"
  },
  {
    "text": "function will wake up it will run through its code when it hits a request for some async work it will check the",
    "start": "2350110",
    "end": "2356140"
  },
  {
    "text": "history table to see if that work is already given completed it really has no knowledge where it stands in in the",
    "start": "2356140",
    "end": "2363640"
  },
  {
    "text": "execution cycle because this is done via replays but it's not done it'll schedule",
    "start": "2363640",
    "end": "2369070"
  },
  {
    "text": "the activity function activity function will wake up Orchestrator function shuts down in the meantime activity function",
    "start": "2369070",
    "end": "2374380"
  },
  {
    "text": "does the work that will trigger the orchestrator function to wake up again and one point I want to make is that the",
    "start": "2374380",
    "end": "2380980"
  },
  {
    "text": "orchestrator will start executing from the very beginning all over again and again it's like it's waking up anew it",
    "start": "2380980",
    "end": "2388330"
  },
  {
    "text": "has no idea so it will go and it will look against the history table again see if it is executed if it has great it'll",
    "start": "2388330",
    "end": "2395470"
  },
  {
    "text": "continue past that point and this is a very very very similar simple simple",
    "start": "2395470",
    "end": "2401740"
  },
  {
    "text": "execution so we would normally have more steps but at that point it's going to create output and end so that's all",
    "start": "2401740",
    "end": "2410320"
  },
  {
    "text": "great but one of the things that we've announced it build is the new pattern namely of event aggregation so here we",
    "start": "2410320",
    "end": "2416380"
  },
  {
    "text": "have entities that again they have a particular state this is stored kind of more at the application level more than",
    "start": "2416380",
    "end": "2422950"
  },
  {
    "text": "in the entity itself and you can write operations against them to do various",
    "start": "2422950",
    "end": "2430480"
  },
  {
    "text": "things this is an example of a simple counter where I'm sending add subtract",
    "start": "2430480",
    "end": "2435580"
  },
  {
    "text": "and reset operations to change the state of it as it goes and on each time it's",
    "start": "2435580",
    "end": "2441790"
  },
  {
    "text": "going to restart with a new state which I can then query from some outside source to use elsewhere so this opens up",
    "start": "2441790",
    "end": "2448090"
  },
  {
    "text": "a number of new patterns this is a couple of things going over entity functions and basically the way they",
    "start": "2448090",
    "end": "2455620"
  },
  {
    "text": "work they're a little different from an actor scenario in that they will be",
    "start": "2455620",
    "end": "2461050"
  },
  {
    "text": "automatically created they're focused more on durability than latency namely",
    "start": "2461050",
    "end": "2467980"
  },
  {
    "text": "if the if your VM gets recycled if your instance shuts down or is deep",
    "start": "2467980",
    "end": "2474370"
  },
  {
    "text": "provisioned if you're running on the consumed plan you can like with other durable functions start back up and have that",
    "start": "2474370",
    "end": "2481190"
  },
  {
    "text": "state available you're not going to lose anything by by your machine kind of just",
    "start": "2481190",
    "end": "2487340"
  },
  {
    "text": "going alright they can be non-deterministic which is a limitation",
    "start": "2487340",
    "end": "2493550"
  },
  {
    "text": "of orchestrators this is a this is a whole talk in and of itself so I'm kind",
    "start": "2493550",
    "end": "2498620"
  },
  {
    "text": "of going a bit quickly through this but if you have more questions ask me later and then all right so that that opens up",
    "start": "2498620",
    "end": "2507680"
  },
  {
    "start": "2503000",
    "end": "2597000"
  },
  {
    "text": "a lot of a lot of interesting scenarios that we've seen folks using one example of using durable functions is fuji film",
    "start": "2507680",
    "end": "2514010"
  },
  {
    "text": "in japan they have a large it's almost a flicker like photo indexing service and",
    "start": "2514010",
    "end": "2521750"
  },
  {
    "text": "they also cover the japan is really really big on baseball really big I used",
    "start": "2521750",
    "end": "2529490"
  },
  {
    "text": "to watch my dad and he would watch them and I could not tell if he was angry or happy or not he'd just be going oh yes",
    "start": "2529490",
    "end": "2535460"
  },
  {
    "text": "go okay like okay yeah anyway but so",
    "start": "2535460",
    "end": "2541760"
  },
  {
    "text": "they're there and they're taking thousands and thousands of photos of these players during games and then you know you want to get these out and",
    "start": "2541760",
    "end": "2548060"
  },
  {
    "text": "useful in media very quickly so they have built a data ingestion pipeline basically as it takes these photos and",
    "start": "2548060",
    "end": "2554630"
  },
  {
    "text": "using machine learning tags them of who's in this one who's in this one right this player that player based on",
    "start": "2554630",
    "end": "2560690"
  },
  {
    "text": "uniform numbers and however else the algorithm does it and they're doing this with durable functions to process",
    "start": "2560690",
    "end": "2566810"
  },
  {
    "text": "thousands and thousands of photos with I think like a two-minute latency it's pretty darn low we have a case study",
    "start": "2566810",
    "end": "2572300"
  },
  {
    "text": "about it under what is it we have a case study about it in our case study section",
    "start": "2572300",
    "end": "2577760"
  },
  {
    "text": "which I can get you the URL of layer anyway so that's kind of a very brief",
    "start": "2577760",
    "end": "2582940"
  },
  {
    "text": "whirlwind tour through a number of the things that we do to support various",
    "start": "2582940",
    "end": "2588500"
  },
  {
    "text": "enterprise scenarios and concerns in serverless kind of building out the serverless model making it sturdier more",
    "start": "2588500",
    "end": "2595190"
  },
  {
    "text": "robust if you want to learn more we also have a server list community library",
    "start": "2595190",
    "end": "2601640"
  },
  {
    "start": "2597000",
    "end": "2645000"
  },
  {
    "text": "because the often I've gotten feedback before that the examples in the docs are",
    "start": "2601640",
    "end": "2607460"
  },
  {
    "text": "very simple they're like hell and then there's these case studies of full-blown you know full-on enterprise",
    "start": "2607460",
    "end": "2613740"
  },
  {
    "text": "solutions but where is the middle to kind of help you go from A to B and the serverless community library is a great",
    "start": "2613740",
    "end": "2619590"
  },
  {
    "text": "place for this this is community driven it has a number of samples and examples built using Azure service components to",
    "start": "2619590",
    "end": "2628380"
  },
  {
    "text": "do kind of mid-level type mid-level type solutions so something more complex than",
    "start": "2628380",
    "end": "2635670"
  },
  {
    "text": "what we can fit in the docs but something that's not so large that it just overwhelms you when you take a look",
    "start": "2635670",
    "end": "2641760"
  },
  {
    "text": "at it if you're unfamiliar with serverless you can check that out there this is kind of just a quick rundown of",
    "start": "2641760",
    "end": "2648000"
  },
  {
    "start": "2645000",
    "end": "2863000"
  },
  {
    "text": "all of the stuff that we talked about at build the AKMs link at the bottom has our blog post so these are the big",
    "start": "2648000",
    "end": "2655470"
  },
  {
    "text": "highlights of the last six months if you're interested you can check those out there and then I highly recommend if",
    "start": "2655470",
    "end": "2663900"
  },
  {
    "text": "you've been you know interested in any of the topics I talked about today you check out some of these sessions from",
    "start": "2663900",
    "end": "2670290"
  },
  {
    "text": "build that are available online these are where my colleagues kind of go into these topics in much greater detail and",
    "start": "2670290",
    "end": "2676740"
  },
  {
    "text": "because they own the feature areas much greater expertise I'll also note that because we're open source you can find",
    "start": "2676740",
    "end": "2682980"
  },
  {
    "text": "us on github it's a sure slash as your - functions is our main repo and that leads to about the 18 other repos that",
    "start": "2682980",
    "end": "2691080"
  },
  {
    "text": "we have split our stuff out across where oh we're available on Stack Overflow we're active on Twitter and we monitor",
    "start": "2691080",
    "end": "2697530"
  },
  {
    "text": "our user voice accounts so if you have any questions about onboarding - serverless or how you could use functions or even like so I kind of",
    "start": "2697530",
    "end": "2705000"
  },
  {
    "text": "built this in functions but II did I really build it right we would love to sit down and talk with you that's actually one of my one of the things",
    "start": "2705000",
    "end": "2712200"
  },
  {
    "text": "that I really like is acting as a conduit for you guys to the product group because it can be immensely",
    "start": "2712200",
    "end": "2717660"
  },
  {
    "text": "helpful it helped me a ton when I was a customer of functions to be able to talk to the product group and just get that",
    "start": "2717660",
    "end": "2724170"
  },
  {
    "text": "feedback from the people who built the stuff so I'm getting the five-minute signal from the back so it looks like",
    "start": "2724170",
    "end": "2729270"
  },
  {
    "text": "I'm in about time thank you so much for coming oh ten minute signal okay well I",
    "start": "2729270",
    "end": "2734400"
  },
  {
    "text": "guess we have a little time for questions in that case so if anybody has any follow-up questions I'd be happy to",
    "start": "2734400",
    "end": "2741120"
  },
  {
    "text": "take a couple at the moment right there",
    "start": "2741120",
    "end": "2745078"
  },
  {
    "text": "I don't believe it's yet available in the government cloud there's usually a lag between when it rolls out in Azure",
    "start": "2747789",
    "end": "2755200"
  },
  {
    "text": "public cloud to the government cloud but it's also you know in preview right now so I would watch in the upcoming months",
    "start": "2755200",
    "end": "2762369"
  },
  {
    "text": "for that I'm afraid I don't have one off the top of my head yeah yes there are",
    "start": "2762369",
    "end": "2774009"
  },
  {
    "text": "actually so c-sharp Script is one of the languages that we offer it was actually",
    "start": "2774009",
    "end": "2779079"
  },
  {
    "text": "the first one that you could write functions in and the thing about c-sharp Script is that we compile it down to",
    "start": "2779079",
    "end": "2786869"
  },
  {
    "text": "down to IL at runtime so you're hitting that performance bottleneck right there",
    "start": "2786869",
    "end": "2793059"
  },
  {
    "text": "we highly recommend over the if you're developing functions in the portal",
    "start": "2793059",
    "end": "2798999"
  },
  {
    "text": "that's great for getting little toy apps up and running and kind of testing the waters but we highly recommend using the",
    "start": "2798999",
    "end": "2805059"
  },
  {
    "text": "visual studio or the Visual Studio code experiences instead Visual Studio has",
    "start": "2805059",
    "end": "2811239"
  },
  {
    "text": "this rich set of like I said it has autocomplete it has yeah it has what is",
    "start": "2811239",
    "end": "2817660"
  },
  {
    "text": "it intellisense that's the word has intellisense it has the attribute based bindings and I know we've had some talk",
    "start": "2817660",
    "end": "2824650"
  },
  {
    "text": "I don't think there's been any resources allocated to it yeah but one of the things we want to look at is what is it",
    "start": "2824650",
    "end": "2831309"
  },
  {
    "text": "Rozlyn based detectors to tell you hey maybe this isn't such a good idea hey you forgot this hey this might not work",
    "start": "2831309",
    "end": "2838049"
  },
  {
    "text": "based on our experience and common pitfalls and gotchas cool okay right",
    "start": "2838049",
    "end": "2849880"
  },
  {
    "text": "well if you have any questions I will make my slides available I encourage you to reach out to me and thank you very",
    "start": "2849880",
    "end": "2856749"
  },
  {
    "text": "much for coming [Applause]",
    "start": "2856749",
    "end": "2865229"
  }
]