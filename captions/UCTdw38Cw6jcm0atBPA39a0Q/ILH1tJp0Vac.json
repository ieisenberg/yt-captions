[
  {
    "text": "cool so hello everyone welcome to day two of NDC how's it going so far we're about",
    "start": "4140",
    "end": "11400"
  },
  {
    "text": "the halfway mark everyone enjoying it it's good to be back in person right",
    "start": "11400",
    "end": "16440"
  },
  {
    "text": "um this is my first time speaking at NDC it's also my first time out of the country since so out of New Zealand",
    "start": "16440",
    "end": "23460"
  },
  {
    "text": "sorry um since January 2020 so I've got like a double excited thing going on I'm like",
    "start": "23460",
    "end": "29519"
  },
  {
    "text": "the dog like putting his head out the car window so I'm very excited to be joining you all today my name is will",
    "start": "29519",
    "end": "36300"
  },
  {
    "text": "the leader I'm a customer engineer working in the fast track for Azure team at Microsoft and part of my role is",
    "start": "36300",
    "end": "44100"
  },
  {
    "text": "working alongside Engineers to help them build robust applications in Azure my",
    "start": "44100",
    "end": "50100"
  },
  {
    "text": "focus is really on app development and modernization so I work with Engineers to provide them with architectural",
    "start": "50100",
    "end": "56579"
  },
  {
    "text": "guidance Deep dive sessions on serverless and container Technologies",
    "start": "56579",
    "end": "62100"
  },
  {
    "text": "helping them Implement build pipelines develop their devops purposes and so much more uh and today we're going to be",
    "start": "62100",
    "end": "69540"
  },
  {
    "text": "talking about developing and deploying containers and microservices with Azure",
    "start": "69540",
    "end": "75540"
  },
  {
    "text": "container apps so just to go through kind of the agenda of what I'm going to talk about today we'll start by going",
    "start": "75540",
    "end": "81540"
  },
  {
    "text": "over a very high level overview of what Azure container apps is and what type of",
    "start": "81540",
    "end": "86640"
  },
  {
    "text": "applications we can build of them then we'll dive a little bit deeper into the features of container apps and I'll",
    "start": "86640",
    "end": "92820"
  },
  {
    "text": "talk about how we can actually use those features to develop and build our applications for container apps and then",
    "start": "92820",
    "end": "99119"
  },
  {
    "text": "I've got a couple of demos where I'll show you different ways where we can get started with container apps so basically",
    "start": "99119",
    "end": "104240"
  },
  {
    "text": "provisioning container apps and then I'll start evolving those Demos in to show you how that works with CI CD how",
    "start": "104240",
    "end": "111420"
  },
  {
    "text": "we can actually build out container images and deploy them to container apps many in GitHub actions but the",
    "start": "111420",
    "end": "116759"
  },
  {
    "text": "principles that I'll show you are applicable to other platforms as well such as Azure devops and gitlab",
    "start": "116759",
    "end": "123780"
  },
  {
    "text": "so let's dive in so let's start with a very high level of what Azure container",
    "start": "123780",
    "end": "129959"
  },
  {
    "text": "apps actually is so who here just a question to kind of",
    "start": "129959",
    "end": "135360"
  },
  {
    "text": "start off here uh who here kind of works day to day with kubernetes doesn't have to be Azure kubernetes service can be",
    "start": "135360",
    "end": "141720"
  },
  {
    "text": "eks gcp even on-prem okay so a couple of you",
    "start": "141720",
    "end": "146760"
  },
  {
    "text": "kubernetes is hard we constantly see lots of Engineers and",
    "start": "146760",
    "end": "151980"
  },
  {
    "text": "customers come to us saying look we're looking to modernize our applications we've got this massive monolith and we",
    "start": "151980",
    "end": "158940"
  },
  {
    "text": "want to break it up into several different microservices and we've heard about this thing called kubernetes and we like the sound of it and it's like",
    "start": "158940",
    "end": "164879"
  },
  {
    "text": "okay sounds sounds good how much experience do you have with kubernetes none and it's like ah okay all right the",
    "start": "164879",
    "end": "174780"
  },
  {
    "text": "because kubernetes can be complex particularly to those who are new to kubernetes this is a blocker for lots of",
    "start": "174780",
    "end": "182280"
  },
  {
    "text": "Engineers to be able to adopt containers and microservices architecture",
    "start": "182280",
    "end": "187500"
  },
  {
    "text": "and what Azure container apps tries to tries to do is essentially",
    "start": "187500",
    "end": "193019"
  },
  {
    "text": "allow developers to focus on their applications rather than worry about the underlining container orchestrator",
    "start": "193019",
    "end": "199379"
  },
  {
    "text": "infrastructure it's built on top of azure kubernetes service and it also comes with built-in",
    "start": "199379",
    "end": "207300"
  },
  {
    "text": "support for cada so kubernetes event Driven Auto scaling Envoy and it has",
    "start": "207300",
    "end": "212819"
  },
  {
    "text": "Integrations with Dapper and essentially provides you with opinionated services",
    "start": "212819",
    "end": "218760"
  },
  {
    "text": "so you can not worry about what you're going to plug into kind of your microservices architecture but you can",
    "start": "218760",
    "end": "224580"
  },
  {
    "text": "just focus on your application development",
    "start": "224580",
    "end": "228680"
  },
  {
    "text": "come on slides there we go awesome so like I said",
    "start": "231060",
    "end": "238319"
  },
  {
    "text": "container apps is built on top of Open Source technology so it runs on kubernetes Azure kubernetes service",
    "start": "238319",
    "end": "244140"
  },
  {
    "text": "um Ikeda Dapper and Envoy and since it's built on top of these Technologies it allows you to kind of take advantage of",
    "start": "244140",
    "end": "250680"
  },
  {
    "text": "what those of the capabilities of those platforms so you have built-in service",
    "start": "250680",
    "end": "256139"
  },
  {
    "text": "Discovery for your microservices you have fully managed support for hdp HTTP",
    "start": "256139",
    "end": "261780"
  },
  {
    "text": "to Ingress Etc and this gives us the advantage to be able to perform the",
    "start": "261780",
    "end": "267540"
  },
  {
    "text": "common application of life cycle tasks such as upgrading applications splitting traffic between different versions in a",
    "start": "267540",
    "end": "274680"
  },
  {
    "text": "much more simpler way than if we had to manage the orchestrator infrastructure",
    "start": "274680",
    "end": "279780"
  },
  {
    "text": "ourselves and because you're not burdened by it",
    "start": "279780",
    "end": "285419"
  },
  {
    "text": "um you could spend more time building the services that you want to build for your customers and with container apps",
    "start": "285419",
    "end": "290520"
  },
  {
    "text": "we can build microservices we can deploy apis onto it event processing workers",
    "start": "290520",
    "end": "296340"
  },
  {
    "text": "background jobs all using containers using any programming language that we want or any framework that we like to",
    "start": "296340",
    "end": "303720"
  },
  {
    "text": "just another question how many of you have used Azure functions in the past before we using it now okay most of you",
    "start": "303720",
    "end": "310680"
  },
  {
    "text": "are that's cool so that kind of the difference between Azure functions and container apps um container apps",
    "start": "310680",
    "end": "317280"
  },
  {
    "text": "provides us with a little bit more developer flexibility there's no enforcement of a programming",
    "start": "317280",
    "end": "322680"
  },
  {
    "text": "model so when you're developing your functions there is a kind of a program model that is enforced onto you and",
    "start": "322680",
    "end": "329820"
  },
  {
    "text": "there's also like a limited amount of languages that you can use within Azure functions if you're using languages like",
    "start": "329820",
    "end": "336720"
  },
  {
    "text": "go or rust there are custom handlers but there's better support for languages",
    "start": "336720",
    "end": "342419"
  },
  {
    "text": "like C sharp python Java Etc whereas container apps you haven't got",
    "start": "342419",
    "end": "348360"
  },
  {
    "text": "those limitations so if you can containerize your application you can deploy it to Azure container apps with",
    "start": "348360",
    "end": "355199"
  },
  {
    "text": "the caveat of they have to be Linux based container images there's no",
    "start": "355199",
    "end": "360840"
  },
  {
    "text": "support for Windows content how many of you are using Windows containers don't be shy a couple of you okay",
    "start": "360840",
    "end": "367400"
  },
  {
    "text": "I don't know when or if they'll ever be support for Windows containers on Azure",
    "start": "367400",
    "end": "373380"
  },
  {
    "text": "container apps so sorry about that um but yeah there's uh if you can",
    "start": "373380",
    "end": "380039"
  },
  {
    "text": "containerize and deploy to Linux you're good to go on Azure container apps um and then thanks to kind of",
    "start": "380039",
    "end": "386639"
  },
  {
    "text": "integration with uh Dapper which is the distributed application runtime not the orm Dapper",
    "start": "386639",
    "end": "392280"
  },
  {
    "text": "um you can simplify common tasks that you would in any microservices architecture such as pubsav service",
    "start": "392280",
    "end": "397620"
  },
  {
    "text": "invocation and event processing container apps provides like a Paz way",
    "start": "397620",
    "end": "402960"
  },
  {
    "text": "of being able to deploy your Dapper applications where in the past you were kind of limited if you were developing",
    "start": "402960",
    "end": "408660"
  },
  {
    "text": "applications using the Dapper framework you were limited to something like Azure kubernetes service",
    "start": "408660",
    "end": "415400"
  },
  {
    "text": "excellence and then container apps also provides",
    "start": "420720",
    "end": "425819"
  },
  {
    "text": "kind of robust ability to scale on a variety of different things so under the hood it uses cada so it uses CAD event",
    "start": "425819",
    "end": "433680"
  },
  {
    "text": "scale triggers or CPU and memory or HTTP triggers to kind of Auto scale and you",
    "start": "433680",
    "end": "440580"
  },
  {
    "text": "can run your containers and scale in response to say HTTP traffic or any kind of cada supported scale trigger that",
    "start": "440580",
    "end": "447960"
  },
  {
    "text": "that platform of that sorry open source project provides",
    "start": "447960",
    "end": "453919"
  },
  {
    "text": "so that's kind of like a very high level overview of what container apps is let's start to kind of explore what we can",
    "start": "454380",
    "end": "460560"
  },
  {
    "text": "actually build with container apps so really kind of the first class kind of",
    "start": "460560",
    "end": "466139"
  },
  {
    "text": "like citizen on container apps is really microservices architecture the idea is that the platform is there to kind of",
    "start": "466139",
    "end": "472139"
  },
  {
    "text": "support developers who are building microservices but don't want to use kubernetes to kind of have a platform",
    "start": "472139",
    "end": "478020"
  },
  {
    "text": "that they can easily deploy their containers to there's also you can also build public",
    "start": "478020",
    "end": "484380"
  },
  {
    "text": "apis and web apps on Azure container apps as I'll show you in a demo so you can actually enable HTTP Ingress onto",
    "start": "484380",
    "end": "491280"
  },
  {
    "text": "your container apps and make them publicly available and we can actually Scale based on how many HTTP requests",
    "start": "491280",
    "end": "497460"
  },
  {
    "text": "are coming into our container container apps as well we can also build event-driven",
    "start": "497460",
    "end": "503160"
  },
  {
    "text": "processing um workloads inside container apps so say if you've got a container app that's listening to messages coming",
    "start": "503160",
    "end": "509460"
  },
  {
    "text": "from a queue we can scale our container apps based on how many messages are incoming into um into our queue and we",
    "start": "509460",
    "end": "516599"
  },
  {
    "text": "can also do some background processing um what we can provision background processing workloads as well on some",
    "start": "516599",
    "end": "522719"
  },
  {
    "text": "container apps the amount of times I've seen customers and Engineers try to",
    "start": "522719",
    "end": "528000"
  },
  {
    "text": "force Azure functions to do these kind of long-running background processing tasks it can get quite painful and quite",
    "start": "528000",
    "end": "535980"
  },
  {
    "text": "um quite a bit of a nightmare to to manage because that's not what it's designed for it's designed for particularly like",
    "start": "535980",
    "end": "542880"
  },
  {
    "text": "normal functions there's durable functions like yeah um but for kind of like normal functions",
    "start": "542880",
    "end": "548339"
  },
  {
    "text": "that's more designed for kind of like quick reacting to Quick events um so it's not designed for that so",
    "start": "548339",
    "end": "554580"
  },
  {
    "text": "container apps it's more suitable for for those kind of background processing tasks",
    "start": "554580",
    "end": "561260"
  },
  {
    "text": "now before we dive a little bit deeper into Azure container apps I do want to make the comparison with AKs because the",
    "start": "564240",
    "end": "572040"
  },
  {
    "text": "purpose for of me standing here today I'm not here to tell you okay there's no need for Azure kubernetes service or any",
    "start": "572040",
    "end": "578160"
  },
  {
    "text": "kubernetes deployment ever go back to your workplaces and destroy your classes that's not the goal here",
    "start": "578160",
    "end": "584220"
  },
  {
    "text": "the main focus of the main trade-off between something like Azure kubernetes service and Azure container apps is",
    "start": "584220",
    "end": "592019"
  },
  {
    "text": "really the the trade-off between flexibility and productivity if you need to be more selective about",
    "start": "592019",
    "end": "600000"
  },
  {
    "text": "what your how you're extending your cluster and what kind of add-ons you're putting on into your kubernetes",
    "start": "600000",
    "end": "605399"
  },
  {
    "text": "environment Azure kubernetes services are great great choice for you um",
    "start": "605399",
    "end": "611100"
  },
  {
    "text": "if you don't really want to worry about managing the infrastructure of your container orchestrator and you don't",
    "start": "611100",
    "end": "618180"
  },
  {
    "text": "want to deal with the complexity Azure container apps is a good option for you bear in mind that with Azure container",
    "start": "618180",
    "end": "625320"
  },
  {
    "text": "apps if you're running Cube control commands against your kubernetes clusters that's not going to be",
    "start": "625320",
    "end": "631019"
  },
  {
    "text": "supported um with you for you in Azure container apps",
    "start": "631019",
    "end": "637019"
  },
  {
    "text": "cool so let's dive a little bit deeper into some of the main concepts of azure",
    "start": "637019",
    "end": "642300"
  },
  {
    "text": "container apps so we start off with a container apps environment",
    "start": "642300",
    "end": "648060"
  },
  {
    "text": "individual container apps are deployed to a single container apps environment now for those of you coming from",
    "start": "648060",
    "end": "654180"
  },
  {
    "text": "kubernetes you can really think of this as like a namespace and this acts as like a secure boundary",
    "start": "654180",
    "end": "659579"
  },
  {
    "text": "around groups of your container apps container apps in the same environment",
    "start": "659579",
    "end": "665100"
  },
  {
    "text": "are deployed to the same virtual Network and they write logs to the same log work",
    "start": "665100",
    "end": "670740"
  },
  {
    "text": "log analytics workspace when you provision a container app environment a v-net acts as the boundary",
    "start": "670740",
    "end": "678300"
  },
  {
    "text": "and you kind of have two options if you just want to deploy an environment a",
    "start": "678300",
    "end": "683459"
  },
  {
    "text": "v-net is automatically created for you but that belongs or that lives sorry in our tenant so you don't have any",
    "start": "683459",
    "end": "689339"
  },
  {
    "text": "visibility of that v-net we take care of that and we look after it for you on",
    "start": "689339",
    "end": "694380"
  },
  {
    "text": "your behalf however if you have an existing v-net or if you want to create a custom v-net",
    "start": "694380",
    "end": "699720"
  },
  {
    "text": "that you like to deploy your content apps environment to um you can do that and that's created in",
    "start": "699720",
    "end": "705600"
  },
  {
    "text": "your subscription your environment and then you can take care of that now inside our environments are the",
    "start": "705600",
    "end": "712320"
  },
  {
    "text": "container apps themselves and simply put this is just kind of like a single independent microservice that includes",
    "start": "712320",
    "end": "718560"
  },
  {
    "text": "our desired State configuration for our container app and in there are the actual containers",
    "start": "718560",
    "end": "725339"
  },
  {
    "text": "so container apps manages the details of kubernetes and container orchestration",
    "start": "725339",
    "end": "730680"
  },
  {
    "text": "for you and containers can like I said earlier uh use any runtime any programming",
    "start": "730680",
    "end": "736800"
  },
  {
    "text": "language and any development stack of your choice there's support for Linux based container images",
    "start": "736800",
    "end": "742579"
  },
  {
    "text": "you can pull containers from any public or private container registry so if",
    "start": "742579",
    "end": "747660"
  },
  {
    "text": "you're using a private container registry such as um Azure container registry you can build and um",
    "start": "747660",
    "end": "754260"
  },
  {
    "text": "a problem and store your images in container registry and then configure your container apps to pull images from",
    "start": "754260",
    "end": "760680"
  },
  {
    "text": "your container registry into your container app the caveat here with container apps is",
    "start": "760680",
    "end": "766200"
  },
  {
    "text": "it can't run privileged containers or any processes that require root access that's a limitation of azure container",
    "start": "766200",
    "end": "773760"
  },
  {
    "text": "apps today you can't do that there's no required base container image and if your container crashes underneath",
    "start": "773760",
    "end": "781800"
  },
  {
    "text": "the hood the container will container app will automatically restart for you",
    "start": "781800",
    "end": "787740"
  },
  {
    "text": "now one pattern that you can use with your containers you can Define multiple containers within the same container app",
    "start": "787740",
    "end": "794940"
  },
  {
    "text": "and this means they'll be co-located and scaled together this the purpose of this is not to run multiple microservices",
    "start": "794940",
    "end": "802800"
  },
  {
    "text": "within a single container app this is more suited for kind of those sidecar scenarios where the sidecar containers",
    "start": "802800",
    "end": "809579"
  },
  {
    "text": "are running alongside your core workload container",
    "start": "809579",
    "end": "815180"
  },
  {
    "text": "and then we have this idea of revisions so this is where we start to get into okay how do we actually deploy different",
    "start": "818700",
    "end": "825000"
  },
  {
    "text": "versions of our container app and how do we manage traffic between different versions of our container app a revision",
    "start": "825000",
    "end": "832260"
  },
  {
    "text": "is an amusable snapshot of our container app now in container apps we kind of have",
    "start": "832260",
    "end": "837779"
  },
  {
    "text": "two modes of how we can actually manage revisions we can have a single revision mode which is the default or multiple",
    "start": "837779",
    "end": "843839"
  },
  {
    "text": "revision mode and I'll explain the difference between those um those in a second",
    "start": "843839",
    "end": "849540"
  },
  {
    "text": "so take the following like example so when we first provision our container app revision is automatically created",
    "start": "849540",
    "end": "856079"
  },
  {
    "text": "for us and as we make changes to the container apps template configuration and these",
    "start": "856079",
    "end": "862980"
  },
  {
    "text": "can include changes by like the environment variables that we use how much CPU and memory",
    "start": "862980",
    "end": "868680"
  },
  {
    "text": "um we're allocating to those containers the container image itself or image we're actually using for our container",
    "start": "868680",
    "end": "874740"
  },
  {
    "text": "app new revisions will be automatically created now revisions are immutable but if we",
    "start": "874740",
    "end": "882480"
  },
  {
    "text": "make changes on a global configuration scale it's going to apply to all of our",
    "start": "882480",
    "end": "888120"
  },
  {
    "text": "revisions so for example if I'm using secrets in my container apps and I'm changing the values of those Secrets all",
    "start": "888120",
    "end": "894779"
  },
  {
    "text": "of the revisions within my container app are going to be affected by that secret change so say for example you've got a",
    "start": "894779",
    "end": "901199"
  },
  {
    "text": "secret that's got a connection string to a database if a previous version of your app was using an older secret pointing to a",
    "start": "901199",
    "end": "907740"
  },
  {
    "text": "different database and you change that your older revision is going to point to your new connection string through your",
    "start": "907740",
    "end": "913440"
  },
  {
    "text": "database so it's just something to keep in mind the power behind revisions is this is",
    "start": "913440",
    "end": "919860"
  },
  {
    "text": "really um useful when you enable Ingress or to make your container apps accessible via",
    "start": "919860",
    "end": "926279"
  },
  {
    "text": "http and in the demo that I'll show in a little bit later revisions we often use revisions for",
    "start": "926279",
    "end": "933720"
  },
  {
    "text": "direct traffic between one revision and another and this opens up some really powerful deployment scenarios such as a",
    "start": "933720",
    "end": "940500"
  },
  {
    "text": "b testing and blue green deployments so just to kind of like summarize the",
    "start": "940500",
    "end": "946560"
  },
  {
    "text": "differences between revision scope and application scope changes revision scope changes are changes that we make to the",
    "start": "946560",
    "end": "953220"
  },
  {
    "text": "template of our container app so this is a revisions the soft exchanges we can actually apply a suffix to our revision",
    "start": "953220",
    "end": "959160"
  },
  {
    "text": "to make it easily identifiable changes we make to our container and image",
    "start": "959160",
    "end": "965639"
  },
  {
    "text": "changes and also the scale rule so if we're changing uh how we're scaling our container apps that's a revision scope",
    "start": "965639",
    "end": "971880"
  },
  {
    "text": "change and then for our application scope changes this is uh our changes to the configuration of the container app",
    "start": "971880",
    "end": "978420"
  },
  {
    "text": "itself so changing secret values changing the revision mode as well so it's not like you're stuck just um",
    "start": "978420",
    "end": "984839"
  },
  {
    "text": "between it's not a hard choice between single and multiple you can chop and change as you need to",
    "start": "984839",
    "end": "991260"
  },
  {
    "text": "um how you're controlling Ingress if you're using Dapper the settings you're changing that's going to apply to all of",
    "start": "991260",
    "end": "996959"
  },
  {
    "text": "your different revisions now as the name Will might suggest two",
    "start": "996959",
    "end": "1004639"
  },
  {
    "text": "types of revision modes so a single revision is when only one revision of your container app is active at any time",
    "start": "1004639",
    "end": "1011540"
  },
  {
    "text": "so as you're changing and updating your your container images",
    "start": "1011540",
    "end": "1016579"
  },
  {
    "text": "um the latest version that you deploy will be the only version available um to your container app",
    "start": "1016579",
    "end": "1022339"
  },
  {
    "text": "whereas multiple revisions is where you can actually run multiple revisions of your app simultaneously we can use",
    "start": "1022339",
    "end": "1029600"
  },
  {
    "text": "revision labels to kind of direct traffic between different versions and all of your your revisions will remain",
    "start": "1029600",
    "end": "1036260"
  },
  {
    "text": "active until you go and deactivate them now there's a hard limit",
    "start": "1036260",
    "end": "1041600"
  },
  {
    "text": "of 100 100 revisions available to each container app because you've got to distribute a hundred percent of the",
    "start": "1041600",
    "end": "1047240"
  },
  {
    "text": "traffic if you have a use case where you want to keep 100 revisions active and",
    "start": "1047240",
    "end": "1052460"
  },
  {
    "text": "direct one percent traffic to each one of them I'd love to hear hear about that",
    "start": "1052460",
    "end": "1057919"
  },
  {
    "text": "um but that's just kind of like a hard limit of how many revisions yeah you can have",
    "start": "1057919",
    "end": "1063580"
  },
  {
    "text": "to talk about replicas uh the unit of scale in Azure container is called a replica",
    "start": "1063860",
    "end": "1070039"
  },
  {
    "text": "um and this is just essentially how many replicas are going to be available to a particular revision of your container",
    "start": "1070039",
    "end": "1076400"
  },
  {
    "text": "app now one thing to note that when you're running in multiple revision node depending on how you configure",
    "start": "1076400",
    "end": "1083660"
  },
  {
    "text": "um your replicas and your scale each revision is going to have its own scale rules so for example revision one of my",
    "start": "1083660",
    "end": "1090440"
  },
  {
    "text": "app could have 10 instances of that revision running while if I change the",
    "start": "1090440",
    "end": "1095840"
  },
  {
    "text": "scale well it's okay to say okay I don't really want 10 instances of this application to run and in version two I",
    "start": "1095840",
    "end": "1102559"
  },
  {
    "text": "Define the upper limit to five that's going to have its own scale criteria so if you're running in multiple revisions and you're directing",
    "start": "1102559",
    "end": "1108919"
  },
  {
    "text": "traffic to different revisions just bear in mind that the scale rule will apply to that particular revision",
    "start": "1108919",
    "end": "1116980"
  },
  {
    "text": "let's go into networking I'm not going to go too deep into networking I'm just going to just kind of like take it at a",
    "start": "1117559",
    "end": "1124160"
  },
  {
    "text": "high level overview um and just kind of explain the differences between like internal external",
    "start": "1124160",
    "end": "1130820"
  },
  {
    "text": "environments so container apps running this container app environment which is supported by the uh by a v-net",
    "start": "1130820",
    "end": "1138420"
  },
  {
    "text": "[Music] um like I said earlier when if you",
    "start": "1138420",
    "end": "1143900"
  },
  {
    "text": "um don't want to use a pre-existing v-net we manage that v-net for you but you",
    "start": "1143900",
    "end": "1149240"
  },
  {
    "text": "don't have the ability to access that v-net and with container apps we can have two types of environments we can",
    "start": "1149240",
    "end": "1155120"
  },
  {
    "text": "have internal environments or external an external environment it's just essentially saying okay container apps",
    "start": "1155120",
    "end": "1161539"
  },
  {
    "text": "provisioned within this environment are available for public requests and the environments themselves are deployed",
    "start": "1161539",
    "end": "1167360"
  },
  {
    "text": "with a virtual IP on a public external IP address internal environments have no public",
    "start": "1167360",
    "end": "1173360"
  },
  {
    "text": "endpoint they're deployed with a virtual IP mapped to an internal IP address and",
    "start": "1173360",
    "end": "1178460"
  },
  {
    "text": "the internal endpoint is just the Azure internal load balancer and IP addresses are issued from Custom v-net's list of",
    "start": "1178460",
    "end": "1184940"
  },
  {
    "text": "private IPS now with container apps we actually",
    "start": "1184940",
    "end": "1190520"
  },
  {
    "text": "allow you to expose your container apps to the public web by enabling Ingress when you enable Ingress you don't",
    "start": "1190520",
    "end": "1197240"
  },
  {
    "text": "actually have to go and create a load balancer a public IP address or any other Azure resources to enable incoming",
    "start": "1197240",
    "end": "1204200"
  },
  {
    "text": "HTTP requests and when you enable Inc Ingress your container app will have support for",
    "start": "1204200",
    "end": "1211400"
  },
  {
    "text": "TLS termination HTTP and HTTP 2. it always uses endpoints always use TLS 1.2",
    "start": "1211400",
    "end": "1218299"
  },
  {
    "text": "and the endpoints always expose Port 80 for HTTP and 443",
    "start": "1218299",
    "end": "1223960"
  },
  {
    "text": "for https now your Ingress IP and fully qualified",
    "start": "1223960",
    "end": "1230299"
  },
  {
    "text": "domain name can either be visible publicly on the public internet or internally with inside the vnet and with",
    "start": "1230299",
    "end": "1237620"
  },
  {
    "text": "Ingress enabled your application is assigned a fully qualified name name",
    "start": "1237620",
    "end": "1243559"
  },
  {
    "text": "and your container apps environment has a single IP address for applications with external Ingress visibility and a",
    "start": "1243559",
    "end": "1250039"
  },
  {
    "text": "single internal IP address um for like internal Ingress visibility",
    "start": "1250039",
    "end": "1255080"
  },
  {
    "text": "so all applications within a container app environment with external visibility they share a single public IP address",
    "start": "1255080",
    "end": "1262280"
  },
  {
    "text": "similarly all applications in an internal container apps with internal Ingress visibility share a single",
    "start": "1262280",
    "end": "1270020"
  },
  {
    "text": "internal IP address and our traffic is actually routed to individual applications based on the",
    "start": "1270020",
    "end": "1276140"
  },
  {
    "text": "full acquired qualified domain name in The Host header now when it comes to bringing your own",
    "start": "1276140",
    "end": "1282380"
  },
  {
    "text": "virtual Network there's a couple of things to keep in mind here if you want to restrict your container app",
    "start": "1282380",
    "end": "1289760"
  },
  {
    "text": "um you want to restrict all access from outside to your container app you should look at creating an internal environment",
    "start": "1289760",
    "end": "1296000"
  },
  {
    "text": "when you provide your own virtual virtual Network you need to provide a",
    "start": "1296000",
    "end": "1301580"
  },
  {
    "text": "subnet that's simply dedicated to The Container apps environments that you're going to deploy",
    "start": "1301580",
    "end": "1307460"
  },
  {
    "text": "uh Network addresses are assigned from the subnet range that you define as the",
    "start": "1307460",
    "end": "1312620"
  },
  {
    "text": "environment is created that's used by your container apps environment and then once the environment is created that sub",
    "start": "1312620",
    "end": "1319539"
  },
  {
    "text": "subnet range is immutable and each revision of our container app",
    "start": "1319539",
    "end": "1324740"
  },
  {
    "text": "will be assigned an IP address from that subnet cool that was a very high level of how",
    "start": "1324740",
    "end": "1330860"
  },
  {
    "text": "networking Works in container apps so if you do have questions just feel free to ask in the end at the end",
    "start": "1330860",
    "end": "1338299"
  },
  {
    "text": "cool let's talk about logging and observability so container apps provides uh several built-in observability",
    "start": "1338299",
    "end": "1345380"
  },
  {
    "text": "features that kind of gives us the ability to have an over holistic overview of our container apps Health",
    "start": "1345380",
    "end": "1350780"
  },
  {
    "text": "throughout our development life cycle which helps us Monitor and diagnose the state of our applications",
    "start": "1350780",
    "end": "1356600"
  },
  {
    "text": "now there are different ways of monitoring it depending on what stage you are at in your if your Dev test",
    "start": "1356600",
    "end": "1361820"
  },
  {
    "text": "phase so we can access our logs in real time through log streaming and also we",
    "start": "1361820",
    "end": "1367220"
  },
  {
    "text": "can actually connect to our containers console during the dev and test phase",
    "start": "1367220",
    "end": "1372320"
  },
  {
    "text": "once we deploy our container apps into our production environments we can actually use this integration with Azure",
    "start": "1372320",
    "end": "1378679"
  },
  {
    "text": "Monitor and log analytics to analyze metrics receive alerts for critical conditions and View application logs",
    "start": "1378679",
    "end": "1385340"
  },
  {
    "text": "using log Analytics so yeah streaming logs are just essentially a view",
    "start": "1385340",
    "end": "1392179"
  },
  {
    "text": "of a stream of your containers standard out and standard error messages you can access this either through the portal or",
    "start": "1392179",
    "end": "1398360"
  },
  {
    "text": "or through Azure CLI and then for the console connect we can connect directly to the containers",
    "start": "1398360",
    "end": "1404720"
  },
  {
    "text": "console and this is really useful for troubleshooting situations again this is accessible through the portal or the",
    "start": "1404720",
    "end": "1411020"
  },
  {
    "text": "Azure CLI now container apps today is integrated",
    "start": "1411020",
    "end": "1416299"
  },
  {
    "text": "with Azure monitor log analytics so when we provision our container apps environment we also include a log",
    "start": "1416299",
    "end": "1422720"
  },
  {
    "text": "analytics workspace that will provide us with a common workspace to store system and application logs that are generated",
    "start": "1422720",
    "end": "1429860"
  },
  {
    "text": "from our container apps and from the container apps that are running inside that environment now we can query these logs using kql in",
    "start": "1429860",
    "end": "1440500"
  },
  {
    "text": "log analytics or via the Azure CLI uh and there are two types of logs that",
    "start": "1440500",
    "end": "1446659"
  },
  {
    "text": "we can um look at from container apps so we can read console logs and these are essentially logs that are omitted by our",
    "start": "1446659",
    "end": "1453080"
  },
  {
    "text": "application or system logs which are just metrics um sorry which yeah which are just logs emitted by the container",
    "start": "1453080",
    "end": "1459020"
  },
  {
    "text": "app service themselves and I'll show you how you can query um those two in in log analytics in the",
    "start": "1459020",
    "end": "1465679"
  },
  {
    "text": "demo we can also um collect metric data so Azure monitor",
    "start": "1465679",
    "end": "1471140"
  },
  {
    "text": "will collect metric data from our container apps at regular intervals to kind of help us understand how our",
    "start": "1471140",
    "end": "1476960"
  },
  {
    "text": "applications are performing how healthy they are Etc these include metrics on CPU usage",
    "start": "1476960",
    "end": "1483860"
  },
  {
    "text": "working memory how many requests are coming in how many replicas are active Etc and what's really powerful here from",
    "start": "1483860",
    "end": "1490700"
  },
  {
    "text": "these um from these metrics we can actually use and set up alerts from an",
    "start": "1490700",
    "end": "1495860"
  },
  {
    "text": "Azure monitor to test against certain thresholds and I'll show you how that works in the demo",
    "start": "1495860",
    "end": "1503659"
  },
  {
    "text": "just to kind of talk about scaling um so underneath the hood",
    "start": "1503659",
    "end": "1509000"
  },
  {
    "text": "Azure container app uses um the cada Auto scaler So kubernetes",
    "start": "1509000",
    "end": "1514280"
  },
  {
    "text": "kubernetes based event Driven Auto scaling and there are different",
    "start": "1514280",
    "end": "1519740"
  },
  {
    "text": "um kind of scaling rules that we can apply to our container apps so we can do",
    "start": "1519740",
    "end": "1525020"
  },
  {
    "text": "it on HTTP requests there are support for various different event driven",
    "start": "1525020",
    "end": "1530419"
  },
  {
    "text": "driven triggers that we can use to kind of scale our container apps on and we",
    "start": "1530419",
    "end": "1535640"
  },
  {
    "text": "can also scale on CPU and memory the important thing to note here is that for",
    "start": "1535640",
    "end": "1541760"
  },
  {
    "text": "HTTP and event driven scaling there's support for scale to zero so if nothing's happening to your container",
    "start": "1541760",
    "end": "1547820"
  },
  {
    "text": "app you can scale right down to zero so you're not charged for it for the container app to run however if you're",
    "start": "1547820",
    "end": "1554179"
  },
  {
    "text": "scaling on CPU and memory you need to have what at least one replica active um all the time so that's just something",
    "start": "1554179",
    "end": "1561679"
  },
  {
    "text": "to keep in mind cool so that's enough slides we're going",
    "start": "1561679",
    "end": "1567559"
  },
  {
    "text": "to jump into a bit of a demo now so if I",
    "start": "1567559",
    "end": "1573799"
  },
  {
    "text": "change the way that I just duplicate",
    "start": "1573799",
    "end": "1580039"
  },
  {
    "text": "that is duplicated well cool so I'm going to start off we'll start off real basic I'm going to show",
    "start": "1580039",
    "end": "1585980"
  },
  {
    "text": "you how we can provision container apps using a template and I'll show you a bicep example and a terraform example",
    "start": "1585980",
    "end": "1593080"
  },
  {
    "text": "because there are slight differences in support capabilities for both just out",
    "start": "1593080",
    "end": "1598580"
  },
  {
    "text": "of Interest Who here's using bicep or arm templates couple of you cool and terraform you're",
    "start": "1598580",
    "end": "1605299"
  },
  {
    "text": "all my terrible Muses here ah more terrible that's cool okay we'll we'll start with bicep",
    "start": "1605299",
    "end": "1611480"
  },
  {
    "text": "so what I've got here not this one this one",
    "start": "1611480",
    "end": "1616880"
  },
  {
    "text": "so here is kind of like my bicep template so I'm just gonna get rid of the terminal so we can get some more",
    "start": "1616880",
    "end": "1623179"
  },
  {
    "text": "real estate and at the back is that good or do you want me to zoom in a little bit",
    "start": "1623179",
    "end": "1628340"
  },
  {
    "text": "one more that better awesome fantastic",
    "start": "1628340",
    "end": "1633860"
  },
  {
    "text": "cool so with bicep it's real easy it's kind of like scaffold your container apps environment so here I've got my log",
    "start": "1633860",
    "end": "1640580"
  },
  {
    "text": "analytics workspace that I'm going to be sending all the logs that are emitted from my container apps um in my",
    "start": "1640580",
    "end": "1647000"
  },
  {
    "text": "container apps environment it's going to be sent to this log analytics workspace",
    "start": "1647000",
    "end": "1652039"
  },
  {
    "text": "I've got an app insights workspace here because it's important to point out there's no direct integration currently",
    "start": "1652039",
    "end": "1658580"
  },
  {
    "text": "with container apps and application insights however within your applications you can basically use the",
    "start": "1658580",
    "end": "1665000"
  },
  {
    "text": "instrumentation key or better yet the connection string just to note that instrumentation keys for application",
    "start": "1665000",
    "end": "1670880"
  },
  {
    "text": "insights is going to be retired in 2024 so make sure you're using the connection string",
    "start": "1670880",
    "end": "1677440"
  },
  {
    "text": "um if you provide your container out with the connection string you can still send logs that are coming from your",
    "start": "1677600",
    "end": "1683120"
  },
  {
    "text": "applications into application insights and then you can integrate that with log Analytics",
    "start": "1683120",
    "end": "1690500"
  },
  {
    "text": "here I've got my environment so here I've given it a name I've got my location and I'm configuring the um",
    "start": "1690500",
    "end": "1698500"
  },
  {
    "text": "configuring my logs to be sent to log analytics currently at the moment",
    "start": "1698500",
    "end": "1703779"
  },
  {
    "text": "there's only support for log Analytics future Integrations I'm not sure when or",
    "start": "1703779",
    "end": "1710360"
  },
  {
    "text": "if so I can't really comment on that but here what we're doing um we're just configuring",
    "start": "1710360",
    "end": "1716360"
  },
  {
    "text": "um our container apps environment to send logs to our log analytics workspace using the customer ID and also the",
    "start": "1716360",
    "end": "1723200"
  },
  {
    "text": "primary shared key so it's fairly straightforward to kind of set up if I was to integrate this or deploy",
    "start": "1723200",
    "end": "1731059"
  },
  {
    "text": "this sorry into a v-net I'd also um configure it without the environment",
    "start": "1731059",
    "end": "1736940"
  },
  {
    "text": "level as well and with um with v-net support as well you can",
    "start": "1736940",
    "end": "1743120"
  },
  {
    "text": "actually make your container apps environments its own redundant as well it's actually a requirement so if you're using availability zones for your",
    "start": "1743120",
    "end": "1749779"
  },
  {
    "text": "architecture well done um but you have to provide your own v-net to do that with Azure container",
    "start": "1749779",
    "end": "1756020"
  },
  {
    "text": "apps and then here I've just got a really basic container app that's going to be",
    "start": "1756020",
    "end": "1761179"
  },
  {
    "text": "deployed to that container apps environment so here I'm just saying so the managed environment ID I'm just",
    "start": "1761179",
    "end": "1768140"
  },
  {
    "text": "saying okay this container app is going to be deployed into this this environment",
    "start": "1768140",
    "end": "1773659"
  },
  {
    "text": "I'm setting my revisions um to multiple so this container app can have multiple revisions active at any",
    "start": "1773659",
    "end": "1780320"
  },
  {
    "text": "time I'm enabling Ingress I'm just using HTTP for Target point of 80.",
    "start": "1780320",
    "end": "1787640"
  },
  {
    "text": "um and then for my container so I'm defining the image I'm providing a name and I've got some environment variables",
    "start": "1787640",
    "end": "1794000"
  },
  {
    "text": "here that this container app excuse me is gonna um it can can use within it within its",
    "start": "1794000",
    "end": "1801080"
  },
  {
    "text": "application and then I'm also defining some scale rules I won't do any scaling within this demo but this is",
    "start": "1801080",
    "end": "1807980"
  },
  {
    "text": "um we can actually Define minimum and maximum replicas at the hard limit",
    "start": "1807980",
    "end": "1813080"
  },
  {
    "text": "for Max replicas at the moment is 30. um",
    "start": "1813080",
    "end": "1818480"
  },
  {
    "text": "that will grow over time when and if again can't comment sorry",
    "start": "1818480",
    "end": "1823960"
  },
  {
    "text": "and there's also support for managed identities as well so today if you're developing Azure functions and you're",
    "start": "1823960",
    "end": "1829940"
  },
  {
    "text": "using role assignments to Grant your functions access to a database or a message queue you can do the same within",
    "start": "1829940",
    "end": "1835820"
  },
  {
    "text": "Azure container apps as well so there's support for that which is really good and it prevents us from using Secrets",
    "start": "1835820",
    "end": "1841820"
  },
  {
    "text": "within our application as well which is something I enjoy I'm a big proponent of",
    "start": "1841820",
    "end": "1848000"
  },
  {
    "text": "so if I'm just going to run that visualizer you can see there very basic",
    "start": "1848000",
    "end": "1853100"
  },
  {
    "text": "there's my environment there's my container app my app insights workspace and my log",
    "start": "1853100",
    "end": "1858799"
  },
  {
    "text": "analytics workspace all working together as just kind of like a basic container apps environment",
    "start": "1858799",
    "end": "1865960"
  },
  {
    "text": "one thing that I will add I've also got within this folder a yaml",
    "start": "1866539",
    "end": "1872960"
  },
  {
    "text": "file so it is possible to Define your container apps",
    "start": "1872960",
    "end": "1878720"
  },
  {
    "text": "in yaml um files I'm reluctant to use the word manifests because these are not",
    "start": "1878720",
    "end": "1884059"
  },
  {
    "text": "your kubernetes manifests anyone here who's worked with kubernetes can see is a different kind there's not a this",
    "start": "1884059",
    "end": "1890539"
  },
  {
    "text": "isn't a deployment I'm not defining a kubernetes deployment I wouldn't be using the kubernetes sorry Cube control",
    "start": "1890539",
    "end": "1896179"
  },
  {
    "text": "to deploy this um yaml file it's just if you want to if you're used to kind of",
    "start": "1896179",
    "end": "1902419"
  },
  {
    "text": "like developing your and provisioning your services um using yaml files there is the option",
    "start": "1902419",
    "end": "1909919"
  },
  {
    "text": "of doing that in container apps just taking my Microsoft hat off at the moment it's not great",
    "start": "1909919",
    "end": "1917120"
  },
  {
    "text": "um here I'm not I'm keeping this very very simple I'm not defining which container",
    "start": "1917120",
    "end": "1922760"
  },
  {
    "text": "registry I'm using I'm pulling a Public Image so I don't need to um there's a lot of things in here so like",
    "start": "1922760",
    "end": "1929299"
  },
  {
    "text": "the name of the container app the resource Group certainly the environment ID that I'm going to deploy this container out to",
    "start": "1929299",
    "end": "1935779"
  },
  {
    "text": "a lot of those things I would parameterize and support for that at the moment is",
    "start": "1935779",
    "end": "1940820"
  },
  {
    "text": "not great but it is being worked on and getting a little bit better so to deploy",
    "start": "1940820",
    "end": "1946100"
  },
  {
    "text": "this I'll open up my command prompt I'll do a little bit",
    "start": "1946100",
    "end": "1951919"
  },
  {
    "text": "of copy and pasting just for time and with the Azure CLI we have support",
    "start": "1951919",
    "end": "1958820"
  },
  {
    "text": "for operating against our container apps using the Azure CLI so here all I'm",
    "start": "1958820",
    "end": "1964100"
  },
  {
    "text": "doing is okay I'm going to create a new container app I'll actually increment",
    "start": "1964100",
    "end": "1969440"
  },
  {
    "text": "this a little bit because I've built one before and defining it in this Resource Group using",
    "start": "1969440",
    "end": "1975559"
  },
  {
    "text": "that yaml file so if I press enter I'll let that run essentially what the",
    "start": "1975559",
    "end": "1980659"
  },
  {
    "text": "command line will should do is have a look I'm not in the right folder",
    "start": "1980659",
    "end": "1987158"
  },
  {
    "text": "if I actually navigate to the right folder what it should do",
    "start": "1988700",
    "end": "1993100"
  },
  {
    "text": "what I'll do is I'll actually use the terminal inside here rather chopping changing",
    "start": "1995419",
    "end": "2001120"
  },
  {
    "text": "and then I'll just CD into bicep and yaml copy and paste that",
    "start": "2001120",
    "end": "2007919"
  },
  {
    "text": "all that's going to do is going to read my yaml file and it's going to create a new",
    "start": "2008080",
    "end": "2014140"
  },
  {
    "text": "um a new container app see some of the warnings here saying",
    "start": "2014140",
    "end": "2020679"
  },
  {
    "text": "okay some of the values are provided on the command line I've already been provided in the yaml",
    "start": "2020679",
    "end": "2026320"
  },
  {
    "text": "file so I'm just going to have a look at the yaml file and just take those values instead so it's just something to keep",
    "start": "2026320",
    "end": "2031539"
  },
  {
    "text": "in mind so if I navigate into the Azure portal I've got my Resource Group here",
    "start": "2031539",
    "end": "2039600"
  },
  {
    "text": "'s one I made earlier so there's the container app that I've defined in my yaml file",
    "start": "2040240",
    "end": "2048240"
  },
  {
    "text": "ready to go it's a real basic scenario there of having a bicep template you can provision a container up there",
    "start": "2049659",
    "end": "2056740"
  },
  {
    "text": "and you can also provision container apps using yaml files you can't",
    "start": "2056740",
    "end": "2061780"
  },
  {
    "text": "provision container app environments that are using yaml so if I was to stay at preference use",
    "start": "2061780",
    "end": "2068320"
  },
  {
    "text": "bicep there's better support for it there's better support for parameterization Etc",
    "start": "2068320",
    "end": "2074080"
  },
  {
    "text": "and then to just kind of quickly go over terraform so terraform has",
    "start": "2074080",
    "end": "2081040"
  },
  {
    "text": "um it's doable it is doable but for those of you who kind of follow the terraform",
    "start": "2081040",
    "end": "2086560"
  },
  {
    "text": "project and particularly follow the Azure resource manager provider currently at the moment there's",
    "start": "2086560",
    "end": "2093398"
  },
  {
    "text": "no out of the box support for provisioning container apps using the um hashicor Azure RM provider",
    "start": "2093399",
    "end": "2101140"
  },
  {
    "text": "so what we have we have another resource provider called Azure AZ API which is",
    "start": "2101140",
    "end": "2106720"
  },
  {
    "text": "kind of like a thin wrapper over the arm API that allows us to kind of provision",
    "start": "2106720",
    "end": "2112420"
  },
  {
    "text": "container apps so here again I'm defining my log analytics workspace",
    "start": "2112420",
    "end": "2118000"
  },
  {
    "text": "application insights and then here I'm starting to use the AZ API provider here",
    "start": "2118000",
    "end": "2124420"
  },
  {
    "text": "I'm providing a type for my managed environment and here within this Json",
    "start": "2124420",
    "end": "2129640"
  },
  {
    "text": "encode I'm just defining the properties for my container app environment and",
    "start": "2129640",
    "end": "2135460"
  },
  {
    "text": "also the container app itself and just a little trick with Visual Studio code to",
    "start": "2135460",
    "end": "2141400"
  },
  {
    "text": "kind of help you with development of that we do have an extension that kind of",
    "start": "2141400",
    "end": "2147820"
  },
  {
    "text": "supports um using that provider and provides intellisense so I recommend if you are using this provider do have a",
    "start": "2147820",
    "end": "2156099"
  },
  {
    "text": "look at this extension it's just going to make your development um life a little bit easier cool so let's take this up a level let's",
    "start": "2156099",
    "end": "2163240"
  },
  {
    "text": "now look at let's explore revisions so if I go into here",
    "start": "2163240",
    "end": "2169780"
  },
  {
    "text": "so what I've got I've got a application that is going to",
    "start": "2169780",
    "end": "2175480"
  },
  {
    "text": "listen to two apis so one API store exposes information of",
    "start": "2175480",
    "end": "2180820"
  },
  {
    "text": "how much inventory I have and another API exposes the products that I have in my store and I've got another container",
    "start": "2180820",
    "end": "2187839"
  },
  {
    "text": "app that's just going to serve as a UI interface for that so here in my deploy folder here I've",
    "start": "2187839",
    "end": "2195220"
  },
  {
    "text": "got my entire bicep file so again I've got a kind of my container app",
    "start": "2195220",
    "end": "2201880"
  },
  {
    "text": "environment up here and I've also got my container apps that are going to be",
    "start": "2201880",
    "end": "2207700"
  },
  {
    "text": "provisioned to that container app environment one thing to notice here is again",
    "start": "2207700",
    "end": "2213880"
  },
  {
    "text": "we were defining a registry so this is going to pull a container image from our",
    "start": "2213880",
    "end": "2219339"
  },
  {
    "text": "um private Azure container registry but I've disabled um external Ingress",
    "start": "2219339",
    "end": "2224800"
  },
  {
    "text": "into my container app so these container apps can communicate with each with each other inside the",
    "start": "2224800",
    "end": "2232000"
  },
  {
    "text": "container app environment however if I try to access this container app outside the environment I'm not going to be",
    "start": "2232000",
    "end": "2238359"
  },
  {
    "text": "successful so if I actually go into the portal very quickly go back into resource groups",
    "start": "2238359",
    "end": "2246160"
  },
  {
    "text": "and if I look at I'll take this inventory one as an example",
    "start": "2246160",
    "end": "2251578"
  },
  {
    "text": "this will give me a fully qualified domain name but it's marked as internal",
    "start": "2251680",
    "end": "2257079"
  },
  {
    "text": "so I'm not going to be able to access it from outside the container app environment",
    "start": "2257079",
    "end": "2263400"
  },
  {
    "text": "cool but what I want to show here is this idea of revision management so if I",
    "start": "2263500",
    "end": "2272440"
  },
  {
    "text": "look at this store application I've hooked it up to Azure app",
    "start": "2272440",
    "end": "2277660"
  },
  {
    "text": "configuration which is going to store a feature flag and essentially when I enable a feature",
    "start": "2277660",
    "end": "2283900"
  },
  {
    "text": "flag for that particular revision it's going to expose a beta product a beta feature to um to those users who can",
    "start": "2283900",
    "end": "2290980"
  },
  {
    "text": "access that particular revision which is just if I go into Pages look at the bay it's",
    "start": "2290980",
    "end": "2298359"
  },
  {
    "text": "just that it's just going to be a razor page that we will be able to navigate to so if I go",
    "start": "2298359",
    "end": "2304839"
  },
  {
    "text": "into my store application",
    "start": "2304839",
    "end": "2310300"
  },
  {
    "text": "currently at the moment I've got a revision where this feature isn't enabled and 100",
    "start": "2310300",
    "end": "2317140"
  },
  {
    "text": "of my traffic is being stored um being directed to this current version here so",
    "start": "2317140",
    "end": "2322540"
  },
  {
    "text": "what I'm going to do is I'll just open this up I'll get rid of you get rid of you as well",
    "start": "2322540",
    "end": "2330660"
  },
  {
    "text": "through the power of video editing which we can't do in a live stage",
    "start": "2336760",
    "end": "2341940"
  },
  {
    "text": "Let me refresh that essentially I want a URL",
    "start": "2344200",
    "end": "2349800"
  },
  {
    "text": "oh would it be funny if Azure went down while I was doing all my demos",
    "start": "2351700",
    "end": "2358060"
  },
  {
    "text": "standby folks",
    "start": "2358060",
    "end": "2361020"
  },
  {
    "text": "I'd love to blame it on conference Wi-Fi but I'm using the hotel Wi-Fi",
    "start": "2365200",
    "end": "2371520"
  },
  {
    "text": "oh dear I am offline thank you",
    "start": "2372099",
    "end": "2380039"
  },
  {
    "text": "let me try again apologies about this folks essentially",
    "start": "2385480",
    "end": "2391180"
  },
  {
    "text": "what I want to do is I want to navigate to my store home page",
    "start": "2391180",
    "end": "2396339"
  },
  {
    "text": "and essentially we're going to run a couple of commands to create a copy of our existing revision",
    "start": "2396339",
    "end": "2402160"
  },
  {
    "text": "and then we're going to create run another command",
    "start": "2402160",
    "end": "2406500"
  },
  {
    "text": "that is going to essentially split traffic between those two different revisions is",
    "start": "2407400",
    "end": "2413859"
  },
  {
    "text": "it developers with just lower case awesome",
    "start": "2413859",
    "end": "2419200"
  },
  {
    "text": "let's give it a go",
    "start": "2419200",
    "end": "2422160"
  },
  {
    "text": "no ass make sure I spell developer properly",
    "start": "2427060",
    "end": "2432640"
  },
  {
    "text": "that'd be good there we go awesome there we go",
    "start": "2432640",
    "end": "2439839"
  },
  {
    "text": "go back to the portal ignites running on right now for those of you who follow Microsoft a little bit",
    "start": "2439839",
    "end": "2446800"
  },
  {
    "text": "so if the Azure portal went down during ignite that would be very unfortunate",
    "start": "2446800",
    "end": "2452380"
  },
  {
    "text": "awesome okay so back in the portal go to the store",
    "start": "2452380",
    "end": "2460140"
  },
  {
    "text": "and I'm going to open this up and there it is there's my UI okay",
    "start": "2461440",
    "end": "2466780"
  },
  {
    "text": "so now I want to essentially create a revision that's going to have my latest",
    "start": "2466780",
    "end": "2472780"
  },
  {
    "text": "um latest feature enabled so I'll just go back into",
    "start": "2472780",
    "end": "2480540"
  },
  {
    "text": "my command prompt just run CLS and what I'm going to do just do a little bit of",
    "start": "2481480",
    "end": "2487180"
  },
  {
    "text": "copy and pasting just for time I'm going to create a copy of my existing revision",
    "start": "2487180",
    "end": "2492940"
  },
  {
    "text": "so run through before I run that",
    "start": "2492940",
    "end": "2498820"
  },
  {
    "text": "essentially what through the azcli that I can do creating a copy of revision I'm",
    "start": "2498820",
    "end": "2504460"
  },
  {
    "text": "specifying the name of my container app so I can point it at the right container and with this we can actually set",
    "start": "2504460",
    "end": "2510579"
  },
  {
    "text": "environment variables as we're creating um new copies of our revisions remember",
    "start": "2510579",
    "end": "2516220"
  },
  {
    "text": "that changing environment variables is a revision scope change so here I'm going to be enabling",
    "start": "2516220",
    "end": "2522820"
  },
  {
    "text": "um my feature that I've got in Azure app configuration and we can provide a suffix to it so I'm going to say beta",
    "start": "2522820",
    "end": "2529420"
  },
  {
    "text": "NDC will remember that revisions are immutable so",
    "start": "2529420",
    "end": "2534940"
  },
  {
    "text": "you may deactivate a revision but it will still kind of exist so if I go",
    "start": "2534940",
    "end": "2540280"
  },
  {
    "text": "while that's running in the background if I go into my revision management it",
    "start": "2540280",
    "end": "2545560"
  },
  {
    "text": "will show you by default all kind of like the um active revisions",
    "start": "2545560",
    "end": "2552040"
  },
  {
    "text": "um that's creating in the background so",
    "start": "2552040",
    "end": "2555900"
  },
  {
    "text": "that's been successful so that's created my new revision hopefully it hasn't redirected traffic",
    "start": "2558700",
    "end": "2565180"
  },
  {
    "text": "to it okay yeah so it's redirected um 100 of",
    "start": "2565180",
    "end": "2570700"
  },
  {
    "text": "traffic to it but now we want to split between the two different um two different revisions so in order to",
    "start": "2570700",
    "end": "2577300"
  },
  {
    "text": "do that we're going to run another azcli command didn't copy the eight so I'll just do",
    "start": "2577300",
    "end": "2584980"
  },
  {
    "text": "that cool so what I want to do here is the revision suffix that I want",
    "start": "2584980",
    "end": "2592540"
  },
  {
    "text": "to split traffic to so here",
    "start": "2592540",
    "end": "2598060"
  },
  {
    "text": "what we're doing is we're running a command line saying okay for Ingress we're going to send 50 of our of our",
    "start": "2598060",
    "end": "2604660"
  },
  {
    "text": "traffic to the latest revision and we're going to send the other 50 to the prior revision",
    "start": "2604660",
    "end": "2610839"
  },
  {
    "text": "so that's going to run in the background and that's going to be that's going to split um traffic between those two",
    "start": "2610839",
    "end": "2616420"
  },
  {
    "text": "different revisions so as that's running in the background",
    "start": "2616420",
    "end": "2621480"
  },
  {
    "text": "if I just click refresh we can see there that 50 of the traffic",
    "start": "2621700",
    "end": "2627339"
  },
  {
    "text": "has been split either way just let the command prompt do its thing make sure it's acknowledged",
    "start": "2627339",
    "end": "2634599"
  },
  {
    "text": "because the idea here is if I keep on clicking refreshing I'll",
    "start": "2634599",
    "end": "2640420"
  },
  {
    "text": "eventually hit the page where my Beta feature is enabled",
    "start": "2640420",
    "end": "2645540"
  },
  {
    "text": "I've got a nervous eye on the time and the Wi-Fi which is pretty cool nothing like mixing up on a live demo",
    "start": "2646900",
    "end": "2655500"
  },
  {
    "text": "cool so there we go so now though my traffic has been split between those two different revisions",
    "start": "2660579",
    "end": "2666099"
  },
  {
    "text": "so if I go back into here should be able to see the traffic's been",
    "start": "2666099",
    "end": "2672220"
  },
  {
    "text": "split accordingly so if I go back into my um store UI",
    "start": "2672220",
    "end": "2679420"
  },
  {
    "text": "just give it a refresh I've managed to land on the beta page and now that beta has been exposed to me purely based on",
    "start": "2679420",
    "end": "2685660"
  },
  {
    "text": "traffic that's a real basic scenario of how we can use revisions in Azure container apps one thing that I",
    "start": "2685660",
    "end": "2693280"
  },
  {
    "text": "will note here if I go back into my revision management if I actually click on this",
    "start": "2693280",
    "end": "2699099"
  },
  {
    "text": "this will give me a URL for this particular revision so if I navigate to that",
    "start": "2699099",
    "end": "2706119"
  },
  {
    "text": "it's going to show me that beta feature enabled for me imagine you're developing",
    "start": "2706119",
    "end": "2711520"
  },
  {
    "text": "apis and you're deploying them to Azure container apps what this does it provides you with an endpoint that you",
    "start": "2711520",
    "end": "2717520"
  },
  {
    "text": "can actually run smoke tests against so you're developing an API you've got new features you've run your smoke tests",
    "start": "2717520",
    "end": "2723520"
  },
  {
    "text": "against that and if your tests have passed you can use the Azure CLI to kind",
    "start": "2723520",
    "end": "2728980"
  },
  {
    "text": "of switch traffic and do some blue green deployments as well so",
    "start": "2728980",
    "end": "2735780"
  },
  {
    "text": "yeah that's how we can use revisions to kind of um",
    "start": "2735940",
    "end": "2741460"
  },
  {
    "text": "manage our deployments open up some interesting deployment scenarios and redirect traffic between",
    "start": "2741460",
    "end": "2747220"
  },
  {
    "text": "um between those two different um revisions now one thing that I have done",
    "start": "2747220",
    "end": "2754660"
  },
  {
    "text": "for this I've defined a scaling rule for this particular revision",
    "start": "2754660",
    "end": "2760660"
  },
  {
    "text": "okay so for this latest revision I've got a minimum a maximum of replicas",
    "start": "2760660",
    "end": "2766720"
  },
  {
    "text": "from 1 to 30 and I've got this HTTP scale rule so every uh for every 100 concurrent",
    "start": "2766720",
    "end": "2773740"
  },
  {
    "text": "request to my container app we're going to scale up by one replica so to kind of visualize this",
    "start": "2773740",
    "end": "2780940"
  },
  {
    "text": "what I'll do is I will actually assign 100 traffic to you",
    "start": "2780940",
    "end": "2789400"
  },
  {
    "text": "deactivate you save that while that's updating",
    "start": "2789400",
    "end": "2794880"
  },
  {
    "text": "I am going to take my URL here and I'm going to use Azure load testing",
    "start": "2794880",
    "end": "2802780"
  },
  {
    "text": "to just flood it with requests so that's real simple so I can just create a test",
    "start": "2802780",
    "end": "2809500"
  },
  {
    "text": "here it's one I created earlier",
    "start": "2809500",
    "end": "2815640"
  },
  {
    "text": "and just have a hundred users I'll run it for 60 seconds",
    "start": "2815980",
    "end": "2823318"
  },
  {
    "text": "and while that's running in the background I'll show you what this looks like within the metrics themselves so if I",
    "start": "2824380",
    "end": "2832300"
  },
  {
    "text": "navigate to my container app that I had opened earlier we can actually",
    "start": "2832300",
    "end": "2839200"
  },
  {
    "text": "look at the metrics emitted from it to see how many replicas it is scaled up to",
    "start": "2839200",
    "end": "2847599"
  },
  {
    "text": "so around about five o'clock in the morning um which is seven o'clock my time I keep",
    "start": "2847599",
    "end": "2852880"
  },
  {
    "text": "waking up at two o'clock in the morning I've got like this weird jet lag thing going on I can't anyway but essentially",
    "start": "2852880",
    "end": "2860200"
  },
  {
    "text": "as those HTTP requests are coming in the amount of replicas that are being increased will scale up to 30 and then",
    "start": "2860200",
    "end": "2868119"
  },
  {
    "text": "once those requests start to die down it will scale back down to our minimum replica and then from here",
    "start": "2868119",
    "end": "2875079"
  },
  {
    "text": "what we can do is we can actually generate see if that's running that is executing that's good we can actually generate",
    "start": "2875079",
    "end": "2881260"
  },
  {
    "text": "alert rules from that so taking that um kind of replica count as an example I can use something say",
    "start": "2881260",
    "end": "2888760"
  },
  {
    "text": "okay every time it sees a threshold of 10 um I want to create an alert that's",
    "start": "2888760",
    "end": "2894760"
  },
  {
    "text": "going to kind of alert my on-call team that I've defined here and this is a",
    "start": "2894760",
    "end": "2900520"
  },
  {
    "text": "really good way of being proactive and making sure that your [Music] um",
    "start": "2900520",
    "end": "2905980"
  },
  {
    "text": "make sure you're monitoring what's going on with inside of your container apps now here I'm just using it for I'm just",
    "start": "2905980",
    "end": "2912339"
  },
  {
    "text": "using the portal for visibility so you can actually understand how this all works please do this in infrastructure",
    "start": "2912339",
    "end": "2917800"
  },
  {
    "text": "as code you can do this in both bicep and terraform please get into the habit of",
    "start": "2917800",
    "end": "2925060"
  },
  {
    "text": "um creating alert rules creating what kind of things you want to report on in terms of metrics and diagnostic settings",
    "start": "2925060",
    "end": "2931119"
  },
  {
    "text": "within your code so if you're standing up new environments everything is just like a template deployment rather than",
    "start": "2931119",
    "end": "2937720"
  },
  {
    "text": "going through the portal and spending hours and hours configuring different metric rules for different environments",
    "start": "2937720",
    "end": "2943480"
  },
  {
    "text": "where you can just deploy a template cool so if I create that",
    "start": "2943480",
    "end": "2950020"
  },
  {
    "text": "that's executed so I won't actually create that but I'll go back into metrics",
    "start": "2950020",
    "end": "2956920"
  },
  {
    "text": "and hopefully there won't be not for you",
    "start": "2956920",
    "end": "2962740"
  },
  {
    "text": "my store there won't be a a bit of a delay there is a little bit of a delay",
    "start": "2962740",
    "end": "2968200"
  },
  {
    "text": "in metrics in azure but if I look at my replica count see it",
    "start": "2968200",
    "end": "2973900"
  },
  {
    "text": "scaled up to 30 replicas again and a little while once things have calmed down it will scale back down to",
    "start": "2973900",
    "end": "2981040"
  },
  {
    "text": "about back down to one so we can Define scale rules within our container apps to",
    "start": "2981040",
    "end": "2986500"
  },
  {
    "text": "kind of control how our container apps are going to scale",
    "start": "2986500",
    "end": "2991960"
  },
  {
    "text": "now one thing that I do want to point out with this sample this kind of deploys container apps",
    "start": "2991960",
    "end": "2999760"
  },
  {
    "text": "alongside the container app environments um it's log analytics workspace it's app",
    "start": "2999760",
    "end": "3005760"
  },
  {
    "text": "insights and in kind of like real world scenario this is a good sample so essentially",
    "start": "3005760",
    "end": "3011460"
  },
  {
    "text": "part of my role is we create quick start templates and samples so that whole deploy to Azure button we create samples",
    "start": "3011460",
    "end": "3017940"
  },
  {
    "text": "that you can essentially just do that but in real life scenarios this doesn't it doesn't translate there's",
    "start": "3017940",
    "end": "3025859"
  },
  {
    "text": "um there's there's kind of this concept of you'll have your core infrastructure",
    "start": "3025859",
    "end": "3031440"
  },
  {
    "text": "which would be shared between different components of your application that I know that with microservices design you",
    "start": "3031440",
    "end": "3037560"
  },
  {
    "text": "want to try and like isolate data sources to each service but inevitably things and it does make sense where some",
    "start": "3037560",
    "end": "3044280"
  },
  {
    "text": "resources will be shared such as a key um key vaults so what we can do using",
    "start": "3044280",
    "end": "3050520"
  },
  {
    "text": "bicep and this is possible in terraform as well uh we can actually split the infrastructure for our core",
    "start": "3050520",
    "end": "3056940"
  },
  {
    "text": "infrastructure and also split out the infrastructure relevant to that particular content app or particular",
    "start": "3056940",
    "end": "3062819"
  },
  {
    "text": "service I should say so in this file this is kind of like my core infrastructure",
    "start": "3062819",
    "end": "3069540"
  },
  {
    "text": "so in a container Apps World we've got our local analytics workspace we've got our container registry and also our",
    "start": "3069540",
    "end": "3076079"
  },
  {
    "text": "container apps environment and here I've got several different services",
    "start": "3076079",
    "end": "3081119"
  },
  {
    "text": "so I've got one for my catalog ordering and web so if I go into my catalog here",
    "start": "3081119",
    "end": "3086400"
  },
  {
    "text": "I can see this infrastructure um I've got the spiceps file for this",
    "start": "3086400",
    "end": "3091859"
  },
  {
    "text": "infrastructure and these are relevant to that particular service so here I'm just",
    "start": "3091859",
    "end": "3097500"
  },
  {
    "text": "using let me get some real estate going here I'm referencing the existing",
    "start": "3097500",
    "end": "3102540"
  },
  {
    "text": "container registry that I've provisioned in my core infrastructure I've got my key vaults contain apps environment and",
    "start": "3102540",
    "end": "3110700"
  },
  {
    "text": "here I'm using a module for a container app now with bicep you can actually deploy your modules into something like",
    "start": "3110700",
    "end": "3117599"
  },
  {
    "text": "Azure container registry and this is what I'm doing here you can use local modules as well it really depends on",
    "start": "3117599",
    "end": "3122819"
  },
  {
    "text": "your use case but here all of these resources that I'm defining in my bicep",
    "start": "3122819",
    "end": "3128819"
  },
  {
    "text": "template are relevant to my um my catalog service and this makes life a",
    "start": "3128819",
    "end": "3135359"
  },
  {
    "text": "little easier when we're actually deploying our services so if I look at my deploy store yaml file this is a",
    "start": "3135359",
    "end": "3142760"
  },
  {
    "text": "GitHub actions workflow file so here all I'm really concerned about is my",
    "start": "3142760",
    "end": "3150480"
  },
  {
    "text": "wrong one that's it all I'm really concerned about is my core infrastructure so I'm doing some linting",
    "start": "3150480",
    "end": "3156180"
  },
  {
    "text": "on my bicep I'm validating my bicep um doing some previews it's good to have controls and deployment Gates throughout",
    "start": "3156180",
    "end": "3163020"
  },
  {
    "text": "your deployment so you can actually control what you're going to deploy and then I've got a stage where I can",
    "start": "3163020",
    "end": "3169440"
  },
  {
    "text": "actually manually approve that deployment um to my production environment",
    "start": "3169440",
    "end": "3175680"
  },
  {
    "text": "and the advances of kind of separating this out here in my core infrastructure",
    "start": "3175680",
    "end": "3180720"
  },
  {
    "text": "I'm only really worried from a container apps perspective about my container apps environment",
    "start": "3180720",
    "end": "3185880"
  },
  {
    "text": "so by kind of isolating my container apps deployment in another file another",
    "start": "3185880",
    "end": "3191460"
  },
  {
    "text": "workflow so this is one for my container apps workflow here I'm provisioning the infrastructure",
    "start": "3191460",
    "end": "3197099"
  },
  {
    "text": "relevant for this service I'm validating it like I'm doing it for my core service",
    "start": "3197099",
    "end": "3203520"
  },
  {
    "text": "and then I'm deploying the infrastructure and I can deploy my infrastructure alongside my containers",
    "start": "3203520",
    "end": "3208920"
  },
  {
    "text": "so once I've built my infrastructure and it's ready I can start to build my API",
    "start": "3208920",
    "end": "3214339"
  },
  {
    "text": "containerize it store it in Azure container registry and then deploy it to my container app",
    "start": "3214339",
    "end": "3220020"
  },
  {
    "text": "and it's also good because we're running tests on our um API projects as well",
    "start": "3220020",
    "end": "3225720"
  },
  {
    "text": "um before we start building it you can also use this approach to kind of test your infrastructure code and also do",
    "start": "3225720",
    "end": "3231780"
  },
  {
    "text": "some security checking on your um on your kind of um container images and scan your container images as well",
    "start": "3231780",
    "end": "3238260"
  },
  {
    "text": "rather than what we were doing earlier in kind of like the a b scenario where",
    "start": "3238260",
    "end": "3246960"
  },
  {
    "text": "essentially we're kind of deploying everything at once and using this approach you do run into the risk of",
    "start": "3246960",
    "end": "3252720"
  },
  {
    "text": "kind of creating redundant revisions so kind of the takeaway from that is to really have a think about how you're",
    "start": "3252720",
    "end": "3259559"
  },
  {
    "text": "going to be structuring your microservices architecture and just think about how you're going to deploy",
    "start": "3259559",
    "end": "3266520"
  },
  {
    "text": "the different services in a way that's easy to manage and also easy to kind of retire when you don't need it not",
    "start": "3266520",
    "end": "3272760"
  },
  {
    "text": "everything even though the when we think of microservices architecture we think of oh these we're",
    "start": "3272760",
    "end": "3278880"
  },
  {
    "text": "kind of building new services for the future it's important to have application life cycle in mind because",
    "start": "3278880",
    "end": "3283920"
  },
  {
    "text": "there will be a day where you have to retire a service or a domain because it's not relevant to you anymore",
    "start": "3283920",
    "end": "3289380"
  },
  {
    "text": "um so by isolating it into its own kind of domain you get the advantage of being able to switch on and switch off",
    "start": "3289380",
    "end": "3295800"
  },
  {
    "text": "capabilities as you go along so if I go into GitHub for this just",
    "start": "3295800",
    "end": "3301500"
  },
  {
    "text": "looking for time don't want to confirm my settings right",
    "start": "3301500",
    "end": "3307440"
  },
  {
    "text": "now thank you um so they're on my workflow files if I go into actions",
    "start": "3307440",
    "end": "3314040"
  },
  {
    "text": "and I'll look at one that I ran earlier this morning here we have the ability to kind of just",
    "start": "3314040",
    "end": "3319740"
  },
  {
    "text": "look at controlling our deployment for our infrastructure",
    "start": "3319740",
    "end": "3325319"
  },
  {
    "text": "and then once our infrastructure is deployed we can start to build out our API project",
    "start": "3325319",
    "end": "3330559"
  },
  {
    "text": "and build our container image and then deploy the our container image from",
    "start": "3330559",
    "end": "3335760"
  },
  {
    "text": "Azure container registry into our container app just having a look at that that job",
    "start": "3335760",
    "end": "3342059"
  },
  {
    "text": "takes 10 minutes to run and I've got four minutes left so I won't make you watch",
    "start": "3342059",
    "end": "3347460"
  },
  {
    "text": "uh we provision infrastructure so hopefully you guys get an",
    "start": "3347460",
    "end": "3353640"
  },
  {
    "text": "understanding of like how um you can start to formulate your",
    "start": "3353640",
    "end": "3359220"
  },
  {
    "text": "um infrastructure code in such a way where you can kind of like split it up um",
    "start": "3359220",
    "end": "3364380"
  },
  {
    "text": "into various different components using kind of container apps",
    "start": "3364380",
    "end": "3370099"
  },
  {
    "text": "so what I'll do is I'll just kind of wrap up here",
    "start": "3370140",
    "end": "3374960"
  },
  {
    "text": "so container apps the aim of container apps is to really help developers shift their focus from having to maintain",
    "start": "3376200",
    "end": "3382200"
  },
  {
    "text": "complicated orchestrator container orchestrators and really focus on their application at the end of the day we're",
    "start": "3382200",
    "end": "3389160"
  },
  {
    "text": "here to build new features that are going to be valuable to our customers and our users we don't want to have to",
    "start": "3389160",
    "end": "3395640"
  },
  {
    "text": "waste time if we don't have the skill set to worry about things like kubernetes if we don't have to",
    "start": "3395640",
    "end": "3402480"
  },
  {
    "text": "and what this does it actually helps us perform simple application of perform application life cycle tasks such as",
    "start": "3402480",
    "end": "3409559"
  },
  {
    "text": "upgrading traffic shifting between different versions and versioning itself in a much simpler way than we would have",
    "start": "3409559",
    "end": "3415859"
  },
  {
    "text": "to when we're managing a container orchestration system container apps does come with built-in",
    "start": "3415859",
    "end": "3421440"
  },
  {
    "text": "observability with Azure monitor today if you're using something like Splunk or elastic or anything else",
    "start": "3421440",
    "end": "3427640"
  },
  {
    "text": "I don't know when or if but I wouldn't be surprised in the near future those Integrations would be would be coming",
    "start": "3427640",
    "end": "3435900"
  },
  {
    "text": "and there's support for internal and external networking so when you're designing your um kind of like",
    "start": "3435900",
    "end": "3441900"
  },
  {
    "text": "microservices architecture do have a think about how networking is going to be involved in that it's not like",
    "start": "3441900",
    "end": "3447119"
  },
  {
    "text": "kubernetes where you have to plan for how many pods and what kind of networking plugins are going to be using",
    "start": "3447119",
    "end": "3452400"
  },
  {
    "text": "Etc but it is worth considering and then there's also support for kind",
    "start": "3452400",
    "end": "3457800"
  },
  {
    "text": "of great open source sales projects so the support for cada and voice service",
    "start": "3457800",
    "end": "3463559"
  },
  {
    "text": "Discovery and integration with Dapper so rather than having to look at the massive cncf project list and decide",
    "start": "3463559",
    "end": "3469980"
  },
  {
    "text": "which kind of flavors you want this is provided for you",
    "start": "3469980",
    "end": "3475160"
  },
  {
    "text": "awesome thanks for listening thanks for sticking with me when the Wi-Fi went down I knew something was going to",
    "start": "3475319",
    "end": "3481140"
  },
  {
    "text": "happen so that's that was fun if you have any questions um you can ask me here or you can feel",
    "start": "3481140",
    "end": "3486839"
  },
  {
    "text": "free to reach out to me I'm on Twitter or reach out to me Microsoft I'm going to be hanging around the conference",
    "start": "3486839",
    "end": "3492000"
  },
  {
    "text": "conference as well um yeah thanks for coming [Applause]",
    "start": "3492000",
    "end": "3500510"
  }
]