[
  {
    "start": "0",
    "end": "96000"
  },
  {
    "text": "well welcome everyone i'll i know there's lunch just after this i'll try not to hold you too much",
    "start": "5759",
    "end": "12400"
  },
  {
    "text": "um but yeah today i'm going to be talking about how you can sandbox your linux application",
    "start": "12400",
    "end": "20240"
  },
  {
    "text": "uh or if you were on the last talk how to make the stuff with andreas doing",
    "start": "20240",
    "end": "25359"
  },
  {
    "text": "slightly harder and less dangerous or you the same if you're on the binary exploitation talk yesterday",
    "start": "25359",
    "end": "32558"
  },
  {
    "text": "um [Music] so i'm martin i work for cisco uh",
    "start": "32559",
    "end": "40079"
  },
  {
    "text": "if you hate like really crappy pictures like like oh this is weird",
    "start": "40079",
    "end": "46559"
  },
  {
    "text": "like this one then sorry that's all you get in this this talk i bought this drawing board and i",
    "start": "46559",
    "end": "53520"
  },
  {
    "text": "found out i can't draw so i drew all the pictures so yeah",
    "start": "53520",
    "end": "59120"
  },
  {
    "text": "uh before we begin with anything there's some really important stuff you should know",
    "start": "59120",
    "end": "64640"
  },
  {
    "text": "you should never ever run the code from these slides like",
    "start": "64640",
    "end": "69680"
  },
  {
    "text": "when i make these slides i have some limitations like the code needs to fit in the slide",
    "start": "69680",
    "end": "75119"
  },
  {
    "text": "so there are no error checking there's horrible code so please don't use this",
    "start": "75119",
    "end": "81360"
  },
  {
    "text": "code directly do it properly unless you'll yeah it probably won't help because",
    "start": "81360",
    "end": "87280"
  },
  {
    "text": "you won't get your sandbox and everything seems to still be working but you're not sandboxed so the whole point",
    "start": "87280",
    "end": "93600"
  },
  {
    "text": "is gone but first off we need to figure out okay",
    "start": "93600",
    "end": "99759"
  },
  {
    "start": "96000",
    "end": "331000"
  },
  {
    "text": "what do i mean by a sandbox and someone said that",
    "start": "99759",
    "end": "106720"
  },
  {
    "text": "a sandbox is a mechanism to basically isolate and contain an",
    "start": "106720",
    "end": "112159"
  },
  {
    "text": "application with the goals of mitigating the impact of vulnerabilities",
    "start": "112159",
    "end": "117680"
  },
  {
    "text": "and i think the mitigation part here is really important because it won't",
    "start": "117680",
    "end": "123360"
  },
  {
    "text": "make your code any better it won't remove any of the issues you have in your code but it will make it",
    "start": "123360",
    "end": "129920"
  },
  {
    "text": "harder so when they get control of your of your application they're in a very isolated environment",
    "start": "129920",
    "end": "136720"
  },
  {
    "text": "where they hopefully can do very little so the person saying this was me so",
    "start": "136720",
    "end": "144480"
  },
  {
    "text": "so yeah it can be discussed after the talk if you want to",
    "start": "144720",
    "end": "149599"
  },
  {
    "text": "but what what reasons you have for sandboxing so yeah i talked about trying to",
    "start": "151360",
    "end": "157280"
  },
  {
    "text": "make uh moderate and old andreas life a bit harder uh so you have untrust applications for",
    "start": "157280",
    "end": "163280"
  },
  {
    "text": "instance that you run in an embedded environment that's not uncommon and you get some stuff from vendor",
    "start": "163280",
    "end": "170319"
  },
  {
    "text": "that's pre-compiled you have no idea what what the code actually does so you might want to consider sandboxing",
    "start": "170319",
    "end": "177200"
  },
  {
    "text": "them and make sure they can't do more than they have to do for your stuff to",
    "start": "177200",
    "end": "182840"
  },
  {
    "text": "work uh you can run downloaded code like a web browser",
    "start": "182840",
    "end": "188400"
  },
  {
    "text": "it's a yeah it's a scary thing it goes on the internet fetches some javascript and runs it on your machine",
    "start": "188400",
    "end": "195440"
  },
  {
    "text": "like this is not a good idea by itself so you have to like contain it",
    "start": "195440",
    "end": "203120"
  },
  {
    "text": "you might also have an application which has some expectations of your environment",
    "start": "204400",
    "end": "210000"
  },
  {
    "text": "that you don't fulfill so instead of changing your environment you can",
    "start": "210000",
    "end": "215599"
  },
  {
    "text": "give that application a new view of your environment this is basically what docker does",
    "start": "215599",
    "end": "221519"
  },
  {
    "text": "it creates a new environment inside of your environment which lets the applications run",
    "start": "221519",
    "end": "227599"
  },
  {
    "text": "so this can be very useful they're also really fun um",
    "start": "227599",
    "end": "233599"
  },
  {
    "text": "i started working on integrating cute web engine and chromium",
    "start": "233599",
    "end": "239200"
  },
  {
    "text": "on our devices and looking into chromium and how it does its sandboxing magic was",
    "start": "239200",
    "end": "245680"
  },
  {
    "text": "really fun uh this is not a good idea for actually writing a sandbox but it's a very good a",
    "start": "245680",
    "end": "251920"
  },
  {
    "text": "good reason for actually learning about them and figuring out how they work",
    "start": "251920",
    "end": "256879"
  },
  {
    "text": "so we have a couple of tools today we're going to talk",
    "start": "257680",
    "end": "263919"
  },
  {
    "text": "about name spaces in second we're going to ignore cgroups because we don't have",
    "start": "263919",
    "end": "269199"
  },
  {
    "text": "time there are other tools as well like s linux",
    "start": "269199",
    "end": "274560"
  },
  {
    "text": "probably a lot more that i don't know about if you make a proper sandbox you should",
    "start": "274560",
    "end": "280960"
  },
  {
    "text": "try and yeah use the tools you have to their advantage we're also not going to use all the",
    "start": "280960",
    "end": "286800"
  },
  {
    "text": "features like all the namespaces there's a lot of them we're not going to use all the features of secamp there's still a lot of new",
    "start": "286800",
    "end": "293919"
  },
  {
    "text": "stuff to look into after this but it'll hopefully give you like an overview of",
    "start": "293919",
    "end": "299919"
  },
  {
    "text": "some other stuff you have available but this is the start of our sandbox",
    "start": "299919",
    "end": "307840"
  },
  {
    "text": "of course it doesn't sandbox anything it's just xx a new application and there are",
    "start": "307840",
    "end": "313360"
  },
  {
    "text": "probably nicer ways of doing this like like uh loading your library",
    "start": "313360",
    "end": "319680"
  },
  {
    "text": "before you run your code when then that library sets up the sandbox and stuff like that but",
    "start": "319680",
    "end": "325039"
  },
  {
    "text": "this is a very simple example very simple setup",
    "start": "325039",
    "end": "330080"
  },
  {
    "start": "331000",
    "end": "416000"
  },
  {
    "text": "and we'll start by using namespaces so namespaces will",
    "start": "331840",
    "end": "338400"
  },
  {
    "text": "wrap some global resource like pin counting",
    "start": "338400",
    "end": "343520"
  },
  {
    "text": "or uids or kernel resources",
    "start": "343520",
    "end": "349680"
  },
  {
    "text": "there are a lot of these namespaces so we have for instance uh isolation for",
    "start": "349680",
    "end": "355360"
  },
  {
    "text": "ip ipc mechanisms for network the view you have of the mount points",
    "start": "355360",
    "end": "362319"
  },
  {
    "text": "we're gonna look into what is called user pit mount and network today",
    "start": "362319",
    "end": "368080"
  },
  {
    "text": "which is four pretty different namespaces",
    "start": "368080",
    "end": "373680"
  },
  {
    "text": "for a proper sandbox you should probably look into more of these preferably all of this and see which",
    "start": "374160",
    "end": "381280"
  },
  {
    "text": "makes sense in your application",
    "start": "381280",
    "end": "385199"
  },
  {
    "text": "um you have two ways of creating a new namespace you can use either the clone cisco",
    "start": "386400",
    "end": "394400"
  },
  {
    "text": "or the unshared cisco clone is a beast so we're gonna focus on",
    "start": "394400",
    "end": "400000"
  },
  {
    "text": "unshare because it's simpler uh basically clone forks or creates a",
    "start": "400000",
    "end": "406000"
  },
  {
    "text": "new process so fork is implemented using clone and it's yeah",
    "start": "406000",
    "end": "412400"
  },
  {
    "text": "so they are pretty different and we'll start with a",
    "start": "412800",
    "end": "418960"
  },
  {
    "start": "416000",
    "end": "682000"
  },
  {
    "text": "key one the uid namespace so the uid namespace",
    "start": "418960",
    "end": "425840"
  },
  {
    "text": "isolates the user and groups that you have available so basically it creates a new",
    "start": "425840",
    "end": "431440"
  },
  {
    "text": "mapping of user ids and group ids for you",
    "start": "431440",
    "end": "437400"
  },
  {
    "text": "[Music] the you created by sending clone new",
    "start": "437410",
    "end": "442720"
  },
  {
    "text": "user to to unshare or to clone",
    "start": "442720",
    "end": "448319"
  },
  {
    "text": "basically what happens when you create a root now a username space is that you can mess around with the user so it can",
    "start": "449039",
    "end": "456479"
  },
  {
    "text": "inside the namespace it can look like you're root for instance but you're not really root you don't",
    "start": "456479",
    "end": "463199"
  },
  {
    "text": "actually have all the permissions to mess around with all the files on the system so with this concept",
    "start": "463199",
    "end": "469440"
  },
  {
    "text": "you can no longer really trust that root is the true root but you get a lot of new capabilities",
    "start": "469440",
    "end": "475919"
  },
  {
    "text": "inside of that namespace we'll quickly look into how it works",
    "start": "475919",
    "end": "483039"
  },
  {
    "text": "so it's a hierarchical namespace meaning that you have a root namespace",
    "start": "483039",
    "end": "489120"
  },
  {
    "text": "and then you have child namespaces and you have these files these are actually two files",
    "start": "489120",
    "end": "495199"
  },
  {
    "text": "it's the uid mapping and the group id mapping file",
    "start": "495199",
    "end": "500240"
  },
  {
    "text": "what this means let's start on the right side here where did my pointer go okay",
    "start": "500240",
    "end": "506720"
  },
  {
    "text": "so this means that uid 0 inside of namespace is uid1000 outside of it",
    "start": "506720",
    "end": "514880"
  },
  {
    "text": "i didn't do that mapping for a single uid so for this case we say that we are with this mapping",
    "start": "514880",
    "end": "522560"
  },
  {
    "text": "if i'm uid 1000 in group id 1000 inside of this namespace i look like i'm",
    "start": "522560",
    "end": "529200"
  },
  {
    "text": "root you can also do crazier bindings like you can say",
    "start": "529200",
    "end": "534399"
  },
  {
    "text": "uid 100 inside of the namespace is 688 outside it and you do that for 500 uids",
    "start": "534399",
    "end": "541600"
  },
  {
    "text": "and then you will get something like this if my math isn't completely off",
    "start": "541600",
    "end": "547120"
  },
  {
    "text": "um this is necessary to be able to enter",
    "start": "547120",
    "end": "553519"
  },
  {
    "text": "other namespaces without being actually root i don't have to run my application as",
    "start": "553519",
    "end": "559760"
  },
  {
    "text": "root to be able to sandbox it that doesn't make sense so you do tricks like that like this",
    "start": "559760",
    "end": "567200"
  },
  {
    "text": "and the way you do it is unshare clone your user",
    "start": "567200",
    "end": "572240"
  },
  {
    "text": "at this point you created and entered a new username space for most of this unshare will both",
    "start": "572240",
    "end": "579279"
  },
  {
    "text": "create and move your application into the namespace there's one exception that will come too",
    "start": "579279",
    "end": "585600"
  },
  {
    "text": "but at this point your user is effectively nobody you don't have a mapping",
    "start": "585600",
    "end": "591839"
  },
  {
    "text": "so you have very little things you can do so you have to actually create the mapping",
    "start": "591920",
    "end": "597440"
  },
  {
    "text": "uh so what you do is you write to these magic files proc self uid map and proc self gid map",
    "start": "597440",
    "end": "606240"
  },
  {
    "text": "and i fetched the user and group id i was before i entered the namespace",
    "start": "606240",
    "end": "611680"
  },
  {
    "text": "so that i can use them in the mapping so basically i set uid 0",
    "start": "611680",
    "end": "617760"
  },
  {
    "text": "inside of the namespace to be whatever i was outside of the namespace",
    "start": "617760",
    "end": "623519"
  },
  {
    "text": "so if i was thousand when i started application i get zero thousand one",
    "start": "623519",
    "end": "629440"
  },
  {
    "text": "there is a problem here which is why i should never use this",
    "start": "630640",
    "end": "635680"
  },
  {
    "text": "code because i don't check error so this",
    "start": "635680",
    "end": "640800"
  },
  {
    "text": "right fails i'm not allowed to write to this file i have to",
    "start": "640800",
    "end": "646480"
  },
  {
    "text": "write to another file first i have to write to this set groups file i have to write",
    "start": "646480",
    "end": "651760"
  },
  {
    "text": "deny to set groups that's to avoid giving me permissions to add new groups as i go",
    "start": "651760",
    "end": "659519"
  },
  {
    "text": "so it basically locks me down to whatever i set up if i were properly checking error",
    "start": "659519",
    "end": "665200"
  },
  {
    "text": "messages this would have failed and i would see it but i don't",
    "start": "665200",
    "end": "670560"
  },
  {
    "text": "after doing this inside the namespace it looks like i'm root and inside the namespace i have all",
    "start": "672079",
    "end": "678880"
  },
  {
    "text": "capabilities",
    "start": "678880",
    "end": "681600"
  },
  {
    "start": "682000",
    "end": "1072000"
  },
  {
    "text": "so now i'm set off set up to enter new namespaces",
    "start": "685200",
    "end": "690640"
  },
  {
    "text": "and so the first one i want to look into is the mount namespace",
    "start": "690640",
    "end": "696160"
  },
  {
    "text": "and you enter that or create that by using clone uns",
    "start": "696160",
    "end": "701279"
  },
  {
    "text": "some of you might think this is a weird name like the other ones must clone new user",
    "start": "701279",
    "end": "706320"
  },
  {
    "text": "which makes sense you clone a new username space this is clone new namespace",
    "start": "706320",
    "end": "711600"
  },
  {
    "text": "uh this is well this is the first namespace and as always no one thought there would ever",
    "start": "711600",
    "end": "717760"
  },
  {
    "text": "be a second one so they used up the name",
    "start": "717760",
    "end": "722480"
  },
  {
    "text": "this one creates a new list of mount points it it changes your view",
    "start": "723440",
    "end": "728720"
  },
  {
    "text": "of the mount points on your system so basically you can rewrite how your file",
    "start": "728720",
    "end": "734000"
  },
  {
    "text": "system looks and that's what we're going to do it's a",
    "start": "734000",
    "end": "741279"
  },
  {
    "text": "interesting thing as you can you have a couple of modes you can be completely isolated",
    "start": "741600",
    "end": "746720"
  },
  {
    "text": "like you create a new namespace and you change stuff and no one else sees it and vice versa",
    "start": "746720",
    "end": "752959"
  },
  {
    "text": "you can also have them share their view like their different namespaces but they can share their view",
    "start": "752959",
    "end": "758480"
  },
  {
    "text": "or you can have your namespace follow the original namespace",
    "start": "758480",
    "end": "764480"
  },
  {
    "text": "and changes done in the original it's visible to you and but your changes aren't visible the",
    "start": "764480",
    "end": "769920"
  },
  {
    "text": "other way so for our purpose we don't care about anything except for isolation so we're",
    "start": "769920",
    "end": "776399"
  },
  {
    "text": "going to remove ourselves from that link previously that was the default",
    "start": "776399",
    "end": "783920"
  },
  {
    "text": "previously didn't really have to do anything with this the default was not to share but then systemd came in",
    "start": "783920",
    "end": "789680"
  },
  {
    "text": "and they changed the default so if you don't want to",
    "start": "789680",
    "end": "794959"
  },
  {
    "text": "care about what unit system you're running or what the default is for your system you",
    "start": "794959",
    "end": "800959"
  },
  {
    "text": "can just set everything to unshare that's the safest",
    "start": "800959",
    "end": "805680"
  },
  {
    "text": "so you create it by just adding clone uns to your unshare",
    "start": "806959",
    "end": "812800"
  },
  {
    "text": "this makes a copy of your previous namespace so it looks exactly the same like",
    "start": "812800",
    "end": "819199"
  },
  {
    "text": "there's no visible difference now and the next thing you do is this thing",
    "start": "819199",
    "end": "824320"
  },
  {
    "text": "you set the the root of your file system tree to",
    "start": "824320",
    "end": "831120"
  },
  {
    "text": "private and you do that recursively so after doing this",
    "start": "831120",
    "end": "837199"
  },
  {
    "text": "you can mess around as much as you want to with your file system and no one will see it and other people can mess around",
    "start": "837199",
    "end": "843440"
  },
  {
    "text": "with their file system view and you won't see it of course if you have shared mount points this is not",
    "start": "843440",
    "end": "851120"
  },
  {
    "text": "so you're you're mounting stuff into it so if someone changes something inside of that",
    "start": "851120",
    "end": "857839"
  },
  {
    "text": "mount then you see of course new files and stuff like that but they won't mess around with your",
    "start": "857839",
    "end": "864560"
  },
  {
    "text": "mount points and after doing this we can create",
    "start": "864560",
    "end": "871839"
  },
  {
    "text": "ourselves a new root fs and that's what i'm going to do so",
    "start": "871839",
    "end": "877360"
  },
  {
    "text": "i want to find a folder that i know exists that i don't need",
    "start": "877360",
    "end": "882800"
  },
  {
    "text": "anything from for me uh often that could be temp so i just remount temp with the",
    "start": "882800",
    "end": "888560"
  },
  {
    "text": "temperfest so no one else has that temperfest that tempest is unique for me",
    "start": "888560",
    "end": "896000"
  },
  {
    "text": "and then i can build from that so i create some directories like template 64",
    "start": "896000",
    "end": "901839"
  },
  {
    "text": "and yeah templates probably a couple others as well basically stuff my application needs so",
    "start": "901839",
    "end": "908240"
  },
  {
    "text": "since i'm exiting i need to be able to load libraries that this application needs you could be",
    "start": "908240",
    "end": "914000"
  },
  {
    "text": "smarter and actually inspect what libraries it needs and only mount those libraries that's safer",
    "start": "914000",
    "end": "919120"
  },
  {
    "text": "but it's more work so i don't do it and then i bind mount lib64 to my new",
    "start": "919120",
    "end": "926000"
  },
  {
    "text": "folder that means i now have the original",
    "start": "926000",
    "end": "933120"
  },
  {
    "text": "lib64 also in temp lib64 because i'm going to remove myself from",
    "start": "933120",
    "end": "940399"
  },
  {
    "text": "the original root and of course i need my application",
    "start": "940399",
    "end": "945519"
  },
  {
    "text": "so i take my application and i i create a file that i just called application i don't care about the name",
    "start": "945519",
    "end": "951680"
  },
  {
    "text": "at this point and i by by mount my first argument which i know is the application",
    "start": "951680",
    "end": "958720"
  },
  {
    "text": "to this file and then i should be able to execute that",
    "start": "958720",
    "end": "965680"
  },
  {
    "text": "so after doing this i've set up a new root file system where i'm not yet",
    "start": "967199",
    "end": "972880"
  },
  {
    "text": "so i gotta enter it the way i do this is by using this pivot",
    "start": "972880",
    "end": "979279"
  },
  {
    "text": "root pivot route is not exposed in glibc but what it does is it takes",
    "start": "979279",
    "end": "986880"
  },
  {
    "text": "the first argument that's your new root folder that's your new root man point",
    "start": "986880",
    "end": "993680"
  },
  {
    "text": "and then it puts the all the root mount point to the second argument",
    "start": "993680",
    "end": "999279"
  },
  {
    "text": "so you still have access to your old root mod root mine point you could see age root but",
    "start": "1000079",
    "end": "1006320"
  },
  {
    "text": "that has some limitations for instance it would limit your application from go enter a new username",
    "start": "1006320",
    "end": "1013519"
  },
  {
    "text": "space uh so pivot route is preferable because then you can do whatever you then the",
    "start": "1013519",
    "end": "1019920"
  },
  {
    "text": "application can do whatever it wants so after creating my new",
    "start": "1019920",
    "end": "1025520"
  },
  {
    "text": "my new root i cd to my root and then i unmount",
    "start": "1025520",
    "end": "1030558"
  },
  {
    "text": "my old root file system because i don't want to have access to that but of course it's still in use i have",
    "start": "1030559",
    "end": "1036480"
  },
  {
    "text": "to do it detached but after doing that i can remove the the folder and i'm good now i'm removed",
    "start": "1036480",
    "end": "1043120"
  },
  {
    "text": "from from the original file system and now",
    "start": "1043120",
    "end": "1049200"
  },
  {
    "text": "my file system view is now whatever i created in temp which is nice",
    "start": "1049200",
    "end": "1055200"
  },
  {
    "text": "because then i can run that application so every other file on the file system that",
    "start": "1055200",
    "end": "1061520"
  },
  {
    "text": "i that this application has no business touching it can't touch because it doesn't exist",
    "start": "1061520",
    "end": "1069440"
  },
  {
    "start": "1072000",
    "end": "1371000"
  },
  {
    "text": "the next step i want to do is get rid of all the other processes",
    "start": "1074480",
    "end": "1082400"
  },
  {
    "text": "like i'm not going to kill them because i can't but i want to make sure that i don't",
    "start": "1082400",
    "end": "1087679"
  },
  {
    "text": "know of processes i don't need to know",
    "start": "1087679",
    "end": "1092480"
  },
  {
    "text": "and i said that unshare from most times creates and moves you",
    "start": "1093039",
    "end": "1098240"
  },
  {
    "text": "into a new namespace for the pid namespace it doesn't",
    "start": "1098240",
    "end": "1104320"
  },
  {
    "text": "the kernel developers found out that a process on the fly changing their pit",
    "start": "1104320",
    "end": "1109520"
  },
  {
    "text": "is probably a bad idea so they didn't if you use clone you of",
    "start": "1109520",
    "end": "1114640"
  },
  {
    "text": "course create a new child and that child is put into the pidney space but for unsure that doesn't happen uh",
    "start": "1114640",
    "end": "1122880"
  },
  {
    "text": "so the rules are when you create a pidney space you create the namespace but it's empty",
    "start": "1122880",
    "end": "1129360"
  },
  {
    "text": "and then children you create are put into the namespace and the first child",
    "start": "1129360",
    "end": "1135679"
  },
  {
    "text": "will get paid one",
    "start": "1135679",
    "end": "1138640"
  },
  {
    "text": "pid one in linux is special pid one is the unit system",
    "start": "1140880",
    "end": "1147600"
  },
  {
    "text": "and the unit system has some responsibilities like cleaning up orphaned children or",
    "start": "1147600",
    "end": "1154160"
  },
  {
    "text": "killing orphan children if you want to if you really want to use the good lingo from linux",
    "start": "1154160",
    "end": "1161039"
  },
  {
    "text": "and that's important because that also is true inside of the namespace so if you have several processes inside of the",
    "start": "1162559",
    "end": "1169039"
  },
  {
    "text": "namespace and one of them becomes orphaned then your pid1",
    "start": "1169039",
    "end": "1174640"
  },
  {
    "text": "needs to clean that up so for instance for docker there's a",
    "start": "1174640",
    "end": "1180640"
  },
  {
    "text": "recommendation to only have a single process inside of your one docker container",
    "start": "1180640",
    "end": "1186320"
  },
  {
    "text": "and this is the reason because that process is paid one and if you have more you risk",
    "start": "1186320",
    "end": "1192880"
  },
  {
    "text": "having orphan processes which that application needs to clean up so you can have more processes but your",
    "start": "1192880",
    "end": "1199120"
  },
  {
    "text": "first process should then be an init process or at least behave as an innate process",
    "start": "1199120",
    "end": "1206919"
  },
  {
    "text": "and this is kind of how it looks so you have like the original namespace",
    "start": "1209120",
    "end": "1215039"
  },
  {
    "text": "which has lots and lots of processes um it has its own init process of course",
    "start": "1215039",
    "end": "1220480"
  },
  {
    "text": "systemd or whatever you're using uh you create a new",
    "start": "1220480",
    "end": "1225600"
  },
  {
    "text": "namespace and put a process in it this process will be paid one",
    "start": "1225600",
    "end": "1232640"
  },
  {
    "text": "and but in the original namespace it will have some other pet",
    "start": "1232640",
    "end": "1238080"
  },
  {
    "text": "so from the parent name space you can see every other process but they will have a different pit than",
    "start": "1238080",
    "end": "1243280"
  },
  {
    "text": "what they think they have themselves uh",
    "start": "1243280",
    "end": "1248559"
  },
  {
    "text": "yeah and you can have big layers of this and every parent",
    "start": "1248559",
    "end": "1254400"
  },
  {
    "text": "namespace will have a different kid than what you think you are basically",
    "start": "1254400",
    "end": "1260240"
  },
  {
    "text": "um yeah so to to create it",
    "start": "1260240",
    "end": "1266159"
  },
  {
    "text": "it's as simple as all the other ones you just add clone new pair",
    "start": "1266159",
    "end": "1271120"
  },
  {
    "text": "but this has only created a namespace on the side-ish you there's nothing in it",
    "start": "1271280",
    "end": "1277600"
  },
  {
    "text": "it's right now pretty useless so",
    "start": "1277600",
    "end": "1283280"
  },
  {
    "text": "you have to create a child process to enter it",
    "start": "1283280",
    "end": "1288320"
  },
  {
    "text": "so the way you could do that is by forking and let the child do all the like",
    "start": "1288960",
    "end": "1294720"
  },
  {
    "text": "swapping of routing routes and executing and then have the parent process just wait",
    "start": "1294720",
    "end": "1300320"
  },
  {
    "text": "for the child to die so this part of the code is outside of the namespace it's in the",
    "start": "1300320",
    "end": "1307039"
  },
  {
    "text": "original pin namespace and then the rest of the code or the child will be",
    "start": "1307039",
    "end": "1312960"
  },
  {
    "text": "paid one",
    "start": "1312960",
    "end": "1316200"
  },
  {
    "text": "at this point you can do some more fun stuff uh with the mounting space actually",
    "start": "1320960",
    "end": "1326480"
  },
  {
    "text": "you couldn't mount a new proc well if you if you were able to you",
    "start": "1326480",
    "end": "1332000"
  },
  {
    "text": "would see all the processes from the original namespace if you",
    "start": "1332000",
    "end": "1337440"
  },
  {
    "text": "mounted proc previously you could bind mount the old proc but of course that's only gives you that",
    "start": "1337440",
    "end": "1343679"
  },
  {
    "text": "leaks information that your namespace shouldn't have but at this point you can create a new",
    "start": "1343679",
    "end": "1348799"
  },
  {
    "text": "proper proc fs uh in your proc if you want to and",
    "start": "1348799",
    "end": "1354240"
  },
  {
    "text": "it kind of looks and feels like a proper like a proper file system",
    "start": "1354240",
    "end": "1360640"
  },
  {
    "text": "in this proc at this point there will only be a single application it will be your application",
    "start": "1360640",
    "end": "1367360"
  },
  {
    "text": "and nothing else",
    "start": "1367360",
    "end": "1370840"
  },
  {
    "start": "1371000",
    "end": "1595000"
  },
  {
    "text": "and lastly we'll talk about the network namespace it is",
    "start": "1375120",
    "end": "1382000"
  },
  {
    "text": "well it's a kind of weird namespace uh what it does it creates a new",
    "start": "1382320",
    "end": "1387840"
  },
  {
    "text": "networking stack for you on the side or you get your own network stack in the namespace",
    "start": "1387840",
    "end": "1393679"
  },
  {
    "text": "uh you create it with the clone newnet and when you create it",
    "start": "1393679",
    "end": "1399600"
  },
  {
    "text": "you have no network interfaces well you have a loopback device that's all you have and there exists",
    "start": "1399600",
    "end": "1406559"
  },
  {
    "text": "nothing else it's kind of useless by itself if you if",
    "start": "1406559",
    "end": "1413520"
  },
  {
    "text": "you want to remove yourself from the network it's super efficient you just remove yourself from network",
    "start": "1413520",
    "end": "1420480"
  },
  {
    "text": "you can put put interfaces in it",
    "start": "1421120",
    "end": "1426320"
  },
  {
    "text": "you can take a interface from one network namespace and put it into another",
    "start": "1426320",
    "end": "1432880"
  },
  {
    "text": "it is then moved you can also like create create virtual network devices to tunnel",
    "start": "1432880",
    "end": "1439600"
  },
  {
    "text": "data between network namespaces and then use ip cables for instance to filter out",
    "start": "1439600",
    "end": "1444960"
  },
  {
    "text": "traffic and route it as you want to it's a lot of work to get right",
    "start": "1444960",
    "end": "1451360"
  },
  {
    "text": "if you move a virtual network device into your namespace when your last process exits the",
    "start": "1452559",
    "end": "1458799"
  },
  {
    "text": "namespace the namespace is destroyed and the virtual network devices are also",
    "start": "1458799",
    "end": "1464159"
  },
  {
    "text": "destroyed if you put a physical interface into it",
    "start": "1464159",
    "end": "1469440"
  },
  {
    "text": "the physical in interface is moved out into your into the original network",
    "start": "1469440",
    "end": "1474799"
  },
  {
    "text": "namespace of the system",
    "start": "1474799",
    "end": "1478000"
  },
  {
    "text": "so it can look something like this this is the original network namespace",
    "start": "1480080",
    "end": "1485760"
  },
  {
    "text": "that's created when you boot up you create a couple of new network",
    "start": "1485760",
    "end": "1491520"
  },
  {
    "text": "namespaces most of them are empty they only have the loopback device",
    "start": "1491520",
    "end": "1497039"
  },
  {
    "text": "but with this one you've created a virtual ethernet pair",
    "start": "1497039",
    "end": "1502559"
  },
  {
    "text": "so that you can move traffic between the two namespaces and then you would typically in this",
    "start": "1502559",
    "end": "1509039"
  },
  {
    "text": "namespace have some ip tables rules to filter the traffic and",
    "start": "1509039",
    "end": "1515200"
  },
  {
    "text": "do whatever you need to do to give it the network access that it needs but nothing else",
    "start": "1515200",
    "end": "1521440"
  },
  {
    "text": "because you still might need network access you just want to limit it really really much",
    "start": "1521440",
    "end": "1526720"
  },
  {
    "text": "so this is one way you could do this you could also hook it up to a bridge the bridge network device on your",
    "start": "1526720",
    "end": "1533120"
  },
  {
    "text": "on this side to get access that's what docker does",
    "start": "1533120",
    "end": "1538320"
  },
  {
    "text": "when i've used it i've basically just entered the network namespace and remove network",
    "start": "1538559",
    "end": "1544720"
  },
  {
    "text": "because this thing is yeah it's a lot of work to to get this right",
    "start": "1544720",
    "end": "1551600"
  },
  {
    "text": "so yeah this is how we enter it um",
    "start": "1554159",
    "end": "1559440"
  },
  {
    "text": "the reason i do it in the child is so that in this case the parent could",
    "start": "1560400",
    "end": "1565919"
  },
  {
    "text": "potentially like start setting up network devices if you needed to",
    "start": "1565919",
    "end": "1571840"
  },
  {
    "text": "it looks very simple when you do this because you're only removing network but if you want to do",
    "start": "1572000",
    "end": "1577520"
  },
  {
    "text": "more fancy stuff it starts getting tricky and i'm not going to show that because yeah",
    "start": "1577520",
    "end": "1584080"
  },
  {
    "text": "so this basically removes your network devices you can set up network yourself",
    "start": "1584080",
    "end": "1591399"
  },
  {
    "start": "1595000",
    "end": "1764000"
  },
  {
    "text": "namespaces there's been a whirlwind tour and there are lots more uh these are",
    "start": "1598000",
    "end": "1605039"
  },
  {
    "text": "some other that i think is very interesting to look into um especially the ipc one actually because",
    "start": "1605039",
    "end": "1611679"
  },
  {
    "text": "if you have if you're using ipc you or if you have an application that uses ipc or linux kernel ipc",
    "start": "1611679",
    "end": "1618240"
  },
  {
    "text": "mechanisms you probably want to isolate that somehow",
    "start": "1618240",
    "end": "1624840"
  },
  {
    "text": "so if you're making a proper sandbox you should definitely look into this",
    "start": "1626400",
    "end": "1632320"
  },
  {
    "text": "okay the next",
    "start": "1632320",
    "end": "1637440"
  },
  {
    "text": "yeah the uts gives you a",
    "start": "1637440",
    "end": "1644480"
  },
  {
    "text": "host and domain name separation so you can have different hostnames and domain names inside of your utest namespace",
    "start": "1644480",
    "end": "1653000"
  },
  {
    "text": "uh for second",
    "start": "1655840",
    "end": "1660320"
  },
  {
    "text": "that's a mechanism to filter system calls",
    "start": "1660880",
    "end": "1666320"
  },
  {
    "text": "so if you use secomp you get filtering on all system calls",
    "start": "1667039",
    "end": "1672640"
  },
  {
    "text": "and it allows exit secret turn read and write",
    "start": "1672640",
    "end": "1679679"
  },
  {
    "text": "so this is pretty useless i most applications use way more system",
    "start": "1680159",
    "end": "1685440"
  },
  {
    "text": "calls than that you can also see it doesn't have open and close you need to like feed it file descriptors",
    "start": "1685440",
    "end": "1691440"
  },
  {
    "text": "uh so this is the original setcomp luckily we have old",
    "start": "1691440",
    "end": "1696720"
  },
  {
    "text": "and started using second ppf so second ppf uses the",
    "start": "1696720",
    "end": "1703919"
  },
  {
    "text": "bpf framework in the kernel berkeley packet filtering which is a language it's a programming",
    "start": "1703919",
    "end": "1710399"
  },
  {
    "text": "language you can it has a it has a vm it has a jit compilation if",
    "start": "1710399",
    "end": "1715760"
  },
  {
    "text": "you compile that into your kernel it's uh it's used for a lot of stuff",
    "start": "1715760",
    "end": "1721279"
  },
  {
    "text": "among others uh among others uh tcp dump uses it quite heavily to to",
    "start": "1721279",
    "end": "1728480"
  },
  {
    "text": "filter out and only get the system calls or the the packets it needs instead of moving",
    "start": "1728480",
    "end": "1734000"
  },
  {
    "text": "every packet from kernel space to user space which is expensive but it's an internal programming",
    "start": "1734000",
    "end": "1740080"
  },
  {
    "text": "language and with this i can make my own filters and allow",
    "start": "1740080",
    "end": "1746559"
  },
  {
    "text": "exactly the system calls i want i can even make sure that the arguments are what i",
    "start": "1746559",
    "end": "1753760"
  },
  {
    "text": "expect so this starts to become a lot more powerful",
    "start": "1753760",
    "end": "1760240"
  },
  {
    "text": "there's a couple of ways of writing these filters and we can start with this one so",
    "start": "1760480",
    "end": "1767679"
  },
  {
    "start": "1764000",
    "end": "2151000"
  },
  {
    "text": "this is the what the kernel provides you if you want to write it this way you can",
    "start": "1767679",
    "end": "1774320"
  },
  {
    "text": "i wouldn't recommend it but i'll go through it pretty quickly um basically secomp",
    "start": "1774320",
    "end": "1781200"
  },
  {
    "text": "will operate on this structure so you have the system call number the architecture you're running on",
    "start": "1781200",
    "end": "1789039"
  },
  {
    "text": "the instruction pointer from where the system call was called and the arguments to the system called",
    "start": "1789039",
    "end": "1795760"
  },
  {
    "text": "optics the instruction pointer i've never used but it's pretty cool that you can",
    "start": "1795760",
    "end": "1801760"
  },
  {
    "text": "actually limit who are a who are allowed to call the system calls",
    "start": "1801760",
    "end": "1808440"
  },
  {
    "text": "the architecture is pretty important so the language is the same independent",
    "start": "1808559",
    "end": "1814399"
  },
  {
    "text": "of architecture the binary will be the same but the problem is that on two different",
    "start": "1814399",
    "end": "1820159"
  },
  {
    "text": "architecture let's say x86 an arm or x86 and",
    "start": "1820159",
    "end": "1825640"
  },
  {
    "text": "x864 if you want to the system call numbers are different",
    "start": "1825640",
    "end": "1831279"
  },
  {
    "text": "and you're checking system call numbers so if you're loading something written for",
    "start": "1831279",
    "end": "1836480"
  },
  {
    "text": "64 x86 64 on x86 it will allow something",
    "start": "1836480",
    "end": "1842720"
  },
  {
    "text": "you don't really know what",
    "start": "1842720",
    "end": "1845840"
  },
  {
    "text": "um this is like the setup for starting using the raw second",
    "start": "1848000",
    "end": "1853440"
  },
  {
    "text": "basically you have a filter sock filter where your code lives you have this sock fprog struct",
    "start": "1853440",
    "end": "1861679"
  },
  {
    "text": "and you send that into second setting it to filter in this case you",
    "start": "1861679",
    "end": "1867919"
  },
  {
    "text": "can do other stuff like set mode log for instance if you just want to log the violations",
    "start": "1867919",
    "end": "1874159"
  },
  {
    "text": "and you have to set no new privs so that you can't load new second filters that gives you more",
    "start": "1874799",
    "end": "1881279"
  },
  {
    "text": "access because that would be bad after doing this",
    "start": "1881279",
    "end": "1886399"
  },
  {
    "text": "you have a second filter running this one is basically just allowing",
    "start": "1886399",
    "end": "1891760"
  },
  {
    "text": "everything which is plain stupid because it's what it does by default",
    "start": "1891760",
    "end": "1897519"
  },
  {
    "text": "but we'll we'll work this one out so",
    "start": "1897519",
    "end": "1904399"
  },
  {
    "text": "i want to check the architecture it is important to make sure that you're actually running on the right",
    "start": "1905279",
    "end": "1910799"
  },
  {
    "text": "architecture so i check what architecture i'm running on i expect to be x86 64.",
    "start": "1910799",
    "end": "1918799"
  },
  {
    "text": "so i load from this struct",
    "start": "1918799",
    "end": "1924000"
  },
  {
    "text": "from the struct second data the architecture so it's just an offset into the structure i get",
    "start": "1924000",
    "end": "1930240"
  },
  {
    "text": "i load that number into a register and then i",
    "start": "1930240",
    "end": "1936399"
  },
  {
    "text": "check i do a jump if equal",
    "start": "1936399",
    "end": "1943440"
  },
  {
    "text": "whatever is in the register is x8664 so if it is i jump zero so i just go to",
    "start": "1943679",
    "end": "1950240"
  },
  {
    "text": "the next line which is allow and if it isn't i jump over this allow statement and come to kill",
    "start": "1950240",
    "end": "1958080"
  },
  {
    "text": "this is not a full check of the x8664 architecture do not write it this way you also have to check for x32 cisco bit",
    "start": "1959039",
    "end": "1966960"
  },
  {
    "text": "because extra it has different cisco numbers it's uh yeah",
    "start": "1966960",
    "end": "1972720"
  },
  {
    "text": "oh yeah it's you're going to find out that this is hard to work with",
    "start": "1972720",
    "end": "1979200"
  },
  {
    "text": "um now i've checked architecture i want to actually start checking system calls",
    "start": "1979200",
    "end": "1986799"
  },
  {
    "text": "so after checking the architecture i have to load back the or load in the",
    "start": "1986799",
    "end": "1993519"
  },
  {
    "text": "system call number so i do based on the same bpf load with the system call number instead of the",
    "start": "1993519",
    "end": "1999679"
  },
  {
    "text": "architecture and then i check if this number is equal to 6xbe",
    "start": "1999679",
    "end": "2006480"
  },
  {
    "text": "we know i exactly that's the first thing i do after this so if it is i jump zero and go to allow",
    "start": "2006480",
    "end": "2014480"
  },
  {
    "text": "and if not i jump one i go to kill",
    "start": "2014480",
    "end": "2018919"
  },
  {
    "text": "so this is how you check a system call now",
    "start": "2019600",
    "end": "2024799"
  },
  {
    "text": "for at one point of this talk the the demo application i made this was the",
    "start": "2024799",
    "end": "2030559"
  },
  {
    "text": "full bpf statement it has grown because i upload i update glibc and suddenly glibc uses",
    "start": "2030559",
    "end": "2036320"
  },
  {
    "text": "new system calls this has to be kept up to date and ordering here matters",
    "start": "2036320",
    "end": "2044159"
  },
  {
    "text": "not for correctness but say i have a program that xx uh let's",
    "start": "2044159",
    "end": "2050000"
  },
  {
    "text": "see let's where is exec there is exactly it's pretty far down uh",
    "start": "2050000",
    "end": "2056158"
  },
  {
    "text": "and it xx once but it like writes a lot of files it opens one file one time and then it",
    "start": "2056159",
    "end": "2062800"
  },
  {
    "text": "writes a lot to it you want the right system call to be as fast as possible",
    "start": "2062800",
    "end": "2069118"
  },
  {
    "text": "this is evaluated statement by statement so if your right is at the bottom",
    "start": "2069119",
    "end": "2075440"
  },
  {
    "text": "then it will have evaluated everything before that and then it checks if you can write",
    "start": "2075440",
    "end": "2081679"
  },
  {
    "text": "so you want right to be at the top of this list if you want to rearrange this",
    "start": "2081679",
    "end": "2088720"
  },
  {
    "text": "that's going to be fun if i go here and like add something under",
    "start": "2088720",
    "end": "2095358"
  },
  {
    "text": "manmap then every jump above whatever i put in",
    "start": "2095359",
    "end": "2100720"
  },
  {
    "text": "has to be updated if not they'll jump wrong they'll jump one two",
    "start": "2100720",
    "end": "2106160"
  },
  {
    "text": "well one short and everyone will start checking assist brk and they're not",
    "start": "2106160",
    "end": "2112800"
  },
  {
    "text": "this is painful so yeah you can also check arguments",
    "start": "2112800",
    "end": "2121599"
  },
  {
    "text": "you load in basically if if i want to check the argument for exit group",
    "start": "2121920",
    "end": "2128240"
  },
  {
    "text": "instead of jumping over everything to allow i say okay if it's exit group i just continue because then i have to",
    "start": "2128240",
    "end": "2134720"
  },
  {
    "text": "load in the first argument into the register and then i check if",
    "start": "2134720",
    "end": "2141200"
  },
  {
    "text": "that argument is zero if it is i jump to what i hope is allow",
    "start": "2141200",
    "end": "2146880"
  },
  {
    "text": "and what i hope is skill like we found out this don't write this",
    "start": "2146880",
    "end": "2153359"
  },
  {
    "start": "2151000",
    "end": "2502000"
  },
  {
    "text": "it's it's you're gonna be so sad",
    "start": "2153359",
    "end": "2158400"
  },
  {
    "text": "it is horrible so instead you should use something else like libsec comp",
    "start": "2158400",
    "end": "2164480"
  },
  {
    "text": "uh there are other ways uh the chromium people made uh",
    "start": "2164480",
    "end": "2169839"
  },
  {
    "text": "their own their own version of of this which is feels more programmatic",
    "start": "2169839",
    "end": "2175599"
  },
  {
    "text": "i haven't actually tried using it but [Music] it's a lot easier to read",
    "start": "2175599",
    "end": "2181599"
  },
  {
    "text": "but at least for a smaller second program if you're not making a browser and use lots of syscalls that you need",
    "start": "2181599",
    "end": "2186960"
  },
  {
    "text": "to check arguments on then probably lib.com is good enough",
    "start": "2186960",
    "end": "2192880"
  },
  {
    "text": "so what we do here is we create a second filter and we give it a default action and the",
    "start": "2193280",
    "end": "2200560"
  },
  {
    "text": "default action is if if nothing else happened if you don't hit any",
    "start": "2200560",
    "end": "2206079"
  },
  {
    "text": "anything that says allow for instance do this so if nothing else kill the",
    "start": "2206079",
    "end": "2211920"
  },
  {
    "text": "process then we load it into the kernel and then we",
    "start": "2211920",
    "end": "2217200"
  },
  {
    "text": "release the user space part of that because that's not needed anymore it's in the kernel",
    "start": "2217200",
    "end": "2222880"
  },
  {
    "text": "this looks like it just only does killing but the cool thing with libsec comp is",
    "start": "2222880",
    "end": "2229040"
  },
  {
    "text": "this one does the architecture check for you i don't have to write architecture check",
    "start": "2229040",
    "end": "2234880"
  },
  {
    "text": "i can if i want to i can swap what architecture i'm interested in but",
    "start": "2234880",
    "end": "2240560"
  },
  {
    "text": "i don't have to",
    "start": "2240560",
    "end": "2243839"
  },
  {
    "text": "so to add a new rule like we did with like with all the jumps and stuff with",
    "start": "2246640",
    "end": "2251680"
  },
  {
    "text": "the raw secump i put in the the context a new rule",
    "start": "2251680",
    "end": "2257359"
  },
  {
    "text": "whereas i allow this rule so i allow the system called xxv",
    "start": "2257359",
    "end": "2264720"
  },
  {
    "text": "and i have zero argument check the important part here is that you",
    "start": "2264720",
    "end": "2271119"
  },
  {
    "text": "should use the scmp underscore system because that makes sure make sure that",
    "start": "2271119",
    "end": "2276320"
  },
  {
    "text": "you get the correct uh the correct syscall number depending on your argument",
    "start": "2276320",
    "end": "2282880"
  },
  {
    "text": "or your architecture sorry this",
    "start": "2282880",
    "end": "2287920"
  },
  {
    "text": "feels a lot nicer you're just adding a new rule allow this syscall and",
    "start": "2287920",
    "end": "2293200"
  },
  {
    "text": "then let libsekkum take care of it",
    "start": "2293200",
    "end": "2298040"
  },
  {
    "text": "so compared to whatever i had with the raw second usage this is the equivalent for",
    "start": "2298320",
    "end": "2303839"
  },
  {
    "text": "lipstick when i basically wrap it into a function call because it was too long",
    "start": "2303839",
    "end": "2309359"
  },
  {
    "text": "for my slides um if i want to rearrange stuff or put stuff over other stuff in this i can",
    "start": "2309359",
    "end": "2316079"
  },
  {
    "text": "just do it and lipsecomp will handle it for me you can also",
    "start": "2316079",
    "end": "2321680"
  },
  {
    "text": "after this say that oh i want to prioritize write",
    "start": "2321680",
    "end": "2327280"
  },
  {
    "text": "libsecomp has apis that lets you just set up what filters you want and then you can do a prioritization in",
    "start": "2327280",
    "end": "2334079"
  },
  {
    "text": "a different part of the code if that makes everything clearer",
    "start": "2334079",
    "end": "2339720"
  },
  {
    "text": "and if i want to check arguments that's also a lot nicer",
    "start": "2343280",
    "end": "2348320"
  },
  {
    "text": "at the end of my second rule i just say okay i have a i have an argument check",
    "start": "2349119",
    "end": "2356160"
  },
  {
    "text": "i want to check i want to have one check for arguments",
    "start": "2356160",
    "end": "2361280"
  },
  {
    "text": "what i do is i do this scmp a0 that means the first argument argument",
    "start": "2361280",
    "end": "2366960"
  },
  {
    "text": "0. you also have a 1 a 2 a 3 a 4 a 5 which is the",
    "start": "2366960",
    "end": "2372880"
  },
  {
    "text": "argument 1 to 6. i want to compare if it's equal to 0",
    "start": "2372880",
    "end": "2380480"
  },
  {
    "text": "and that's your argument check you can also expand this because",
    "start": "2380480",
    "end": "2387040"
  },
  {
    "text": "when i say it's one argument check it's because it's one check for arguments you can add more checks for the same",
    "start": "2387040",
    "end": "2392480"
  },
  {
    "text": "argument so you can for instance check if a value is like between something",
    "start": "2392480",
    "end": "2398880"
  },
  {
    "text": "that's pretty useful to check if it's if you're in a range if you're outside the range you kill the program and if not",
    "start": "2398880",
    "end": "2405599"
  },
  {
    "text": "then you discontinue it so with lipstick on this gets a whole lot",
    "start": "2405599",
    "end": "2413119"
  },
  {
    "text": "nicer to work with uh you won't mess up the jumps which you will do at some point if you try and do",
    "start": "2413119",
    "end": "2419359"
  },
  {
    "text": "the raw second thing um but yeah there are other ways of doing",
    "start": "2419359",
    "end": "2424880"
  },
  {
    "text": "it that you could look into um",
    "start": "2424880",
    "end": "2429838"
  },
  {
    "text": "especially the the the chromium",
    "start": "2429920",
    "end": "2435599"
  },
  {
    "text": "the chromium apis looks pretty decent i haven't tried it but i've looked into it",
    "start": "2435599",
    "end": "2441840"
  },
  {
    "text": "[Music] yeah",
    "start": "2441840",
    "end": "2446560"
  },
  {
    "text": "there are also other tools that you should use like i said you should look into c groups you",
    "start": "2447200",
    "end": "2452480"
  },
  {
    "text": "should look into s linux uh for instance the android",
    "start": "2452480",
    "end": "2457520"
  },
  {
    "text": "the android sandboxes are based on s linux",
    "start": "2457520",
    "end": "2463200"
  },
  {
    "text": "you can use c groups if you wanna make sure that your application doesn't like use all of your cpu time or",
    "start": "2463280",
    "end": "2470720"
  },
  {
    "text": "all of your memory and stuff like that none of what we're going through today covers those parts",
    "start": "2470720",
    "end": "2477359"
  },
  {
    "text": "that's a job for c groups",
    "start": "2477359",
    "end": "2481559"
  },
  {
    "text": "and that's all i had so thank you",
    "start": "2485599",
    "end": "2491200"
  },
  {
    "text": "any questions [Applause]",
    "start": "2491200",
    "end": "2499010"
  },
  {
    "text": "you",
    "start": "2502640",
    "end": "2504720"
  }
]