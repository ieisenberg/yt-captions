[
  {
    "start": "0",
    "end": "132000"
  },
  {
    "text": "hello everyone.welcome I haven't even done anything yet you're already clapping that's great it sounds good",
    "start": "30",
    "end": "6859"
  },
  {
    "text": "come on in you're all in the right spot find a seat it's great to see you all here you're",
    "start": "6859",
    "end": "13380"
  },
  {
    "text": "looking good my name is Dan Roth I'm a program manager on the asp.net team at Microsoft",
    "start": "13380",
    "end": "18779"
  },
  {
    "text": "and I'm super excited to be here at MDC in this session we're going to be",
    "start": "18779",
    "end": "24390"
  },
  {
    "text": "talking about Razer components in asp.net core 3 oh and so the big",
    "start": "24390",
    "end": "30119"
  },
  {
    "text": "exciting announcement happened yesterday dotnet core 3 o preview 2 shipped with",
    "start": "30119",
    "end": "36960"
  },
  {
    "text": "Razer components in the box and I am pumped about this this has been a long time coming for me this has been stuff",
    "start": "36960",
    "end": "43559"
  },
  {
    "text": "that we've been working on for a year year and a half you really go back in history internally but even longer than",
    "start": "43559",
    "end": "49500"
  },
  {
    "text": "that so there's some pretty cool stuff it's in this release it's not the only",
    "start": "49500",
    "end": "54600"
  },
  {
    "text": "thing that's in this release I encourage you to go look at the the blog posts for for pv2 and all the cool stuff that's in",
    "start": "54600",
    "end": "59670"
  },
  {
    "text": "asp.net core and dotnet core but in this session will focus on Razer components",
    "start": "59670",
    "end": "64978"
  },
  {
    "text": "so what our Razer components or Racer components allow you to build rich",
    "start": "64979",
    "end": "72380"
  },
  {
    "text": "interactive modern web UI without having to write any JavaScript that's what they",
    "start": "72380",
    "end": "78030"
  },
  {
    "text": "do you can create reusable UI components using c-sharp using dotnet and razor",
    "start": "78030",
    "end": "84180"
  },
  {
    "text": "syntax and they integrate with your existing asp.net core applications now that's that's a little high-level a",
    "start": "84180",
    "end": "90509"
  },
  {
    "text": "little abstract it's probably easier if we just show you what we mean by by this",
    "start": "90509",
    "end": "95670"
  },
  {
    "text": "razor components thing so I'll demo getting started with razor components you can of course can now do this too",
    "start": "95670",
    "end": "102090"
  },
  {
    "text": "because all the bits are live and public the things that you would need in order to get started with razor components",
    "start": "102090",
    "end": "108149"
  },
  {
    "text": "you'll need to get the dotnet core 300 preview 2 SDK also going down though that if you're on a Windows machine you",
    "start": "108149",
    "end": "115409"
  },
  {
    "text": "should also get the latest preview release of Visual Studio 2019 preview 2",
    "start": "115409",
    "end": "121469"
  },
  {
    "text": "I believe is the the latest one the nice thing is that the Razr components tooling is built into Visual Studio at",
    "start": "121469",
    "end": "127439"
  },
  {
    "text": "that point so you don't need to go install any additional v6s it's just there in the box",
    "start": "127439",
    "end": "132690"
  },
  {
    "start": "132000",
    "end": "355000"
  },
  {
    "text": "so let's take our first look and what is a razor component okay so getting",
    "start": "132690",
    "end": "140040"
  },
  {
    "text": "started how do you do that so you're going to want to go to dot dot net that's the magic URL for getting all",
    "start": "140040",
    "end": "146490"
  },
  {
    "text": "things net when you land on the dotnet homepage click on download and at the top you'll see there's a banner here it",
    "start": "146490",
    "end": "152400"
  },
  {
    "text": "says try out the latest dotnet core preview a link on the right that's where you're gonna get the three O preview two",
    "start": "152400",
    "end": "160110"
  },
  {
    "text": "SDK so download the SDK for whatever OS are using Windows Mac Linux it all works",
    "start": "160110",
    "end": "165510"
  },
  {
    "text": "on all those platforms after you've done that you're gonna want to go to visual studio dot-com slash preview and then go",
    "start": "165510",
    "end": "175830"
  },
  {
    "text": "and download the latest Visual Studio preview for those of you who are still a little bit jittery about installing",
    "start": "175830",
    "end": "181740"
  },
  {
    "text": "Visual Studio previews I know in years of past this was a dicey thing to do it kind of meant you would probably have to",
    "start": "181740",
    "end": "188370"
  },
  {
    "text": "repave your machine if you installed a preview version of Visual Studio honestly the installation technology",
    "start": "188370",
    "end": "193620"
  },
  {
    "text": "with Visual Studio has gotten really good the side by side installations work really well I currently like let me get",
    "start": "193620",
    "end": "201090"
  },
  {
    "text": "my Visual Studio installer UI up I have three versions of Visual Studio installed side by side right now I have",
    "start": "201090",
    "end": "207740"
  },
  {
    "text": "2017 I have the preview release the public preview of 2019 I've got some",
    "start": "207740",
    "end": "212820"
  },
  {
    "text": "crazy internal build of like the preview 3 version of 2019 and it works really",
    "start": "212820",
    "end": "219330"
  },
  {
    "text": "really well like I've been able to uninstall and install them very cleanly works great so I encourage you to do so I typically install just the the web",
    "start": "219330",
    "end": "227040"
  },
  {
    "text": "work load in the.net core workload because that's the stuff that I normally work with all right so once you've got",
    "start": "227040",
    "end": "232320"
  },
  {
    "text": "that you'll have 2019 and you should be ready to go to create your first race or components app so I'm gonna select in",
    "start": "232320",
    "end": "238830"
  },
  {
    "text": "the new project dialog this is the new UI in 2019 I want to create an asp.net",
    "start": "238830",
    "end": "243900"
  },
  {
    "text": "core web application alright a razor components is under that umbrella what should we call this let's",
    "start": "243900",
    "end": "250680"
  },
  {
    "text": "call it razor components demo I think I haven't used that name yet all right and",
    "start": "250680",
    "end": "260519"
  },
  {
    "text": "so in the new a spec core dialog you can see we've got a bunch of templates here make sure that you've sold",
    "start": "260520",
    "end": "266580"
  },
  {
    "text": "I did three Oh at the top that will show up after you've installed the 300 SDK and there is a Razer components template",
    "start": "266580",
    "end": "272220"
  },
  {
    "text": "now I'm going to select that and go ahead and create it cool all right once",
    "start": "272220",
    "end": "280050"
  },
  {
    "text": "this is created this is you notice it's a solution has a server-side project and in the actual app that contains my you I",
    "start": "280050",
    "end": "286259"
  },
  {
    "text": "will let the packages make sure they shake out oh I didn't actually yeah I got you I've got Network cuz I was able",
    "start": "286259",
    "end": "291990"
  },
  {
    "text": "to get to the dotnet website so that's good alright so come the store is completed let's go ahead and run it and",
    "start": "291990",
    "end": "297060"
  },
  {
    "text": "see what this application can do build",
    "start": "297060",
    "end": "305039"
  },
  {
    "text": "run run run this is where people usually",
    "start": "305039",
    "end": "311909"
  },
  {
    "text": "tell me Danny you need a new laptop man and I say yeah yeah my boss is here you go tell alright so this is a simple sort",
    "start": "311909",
    "end": "320490"
  },
  {
    "text": "of spa style application it's got tabs on the left you can click on and see various pages it also does routing on",
    "start": "320490",
    "end": "326219"
  },
  {
    "text": "the client so you can click back and forth there's a page with just you know some static content there's a counter",
    "start": "326219",
    "end": "331710"
  },
  {
    "text": "that you can click on a button in an updates account there's no page refresh happening there that's something that",
    "start": "331710",
    "end": "337349"
  },
  {
    "text": "normally you'd have to write some JavaScript in order to accomplish but there was no JavaScript used to write this application I didn't have to write",
    "start": "337349",
    "end": "343500"
  },
  {
    "text": "any there's also this third page which here it's actually getting a bunch of weather forecast data on the server and",
    "start": "343500",
    "end": "351750"
  },
  {
    "text": "using that to then render this this table of weather forecast information alright so how did this all work how do",
    "start": "351750",
    "end": "357360"
  },
  {
    "start": "355000",
    "end": "428000"
  },
  {
    "text": "you write this let's look at those pages if we go look at counter here's the implementation of the counter page or",
    "start": "357360",
    "end": "364199"
  },
  {
    "text": "counter component there is a at page directive at the top that says that this particular",
    "start": "364199",
    "end": "369779"
  },
  {
    "text": "RAZR component is routable you can browse the slash counter and you'll get",
    "start": "369779",
    "end": "374819"
  },
  {
    "text": "this component there's some just normal HTML markup and then we use razor syntax in order to get values and render them",
    "start": "374819",
    "end": "381120"
  },
  {
    "text": "to the page and these are all dotnet values so we have a current count field that's a type int and then there's our",
    "start": "381120",
    "end": "386219"
  },
  {
    "text": "button which has an onclick handler which normally you could put some JavaScript there to call but we're not",
    "start": "386219",
    "end": "391440"
  },
  {
    "text": "pointing at any JavaScript this is actually pointing at a normal see sharp dotnet method to then increment the",
    "start": "391440",
    "end": "396839"
  },
  {
    "text": "count so that's how that's done and to this is actually what's what's running let's go ahead and set a breakpoint I'm",
    "start": "396839",
    "end": "402219"
  },
  {
    "text": "gonna f5 run the app again",
    "start": "402219",
    "end": "409529"
  },
  {
    "text": "and let that come up and then see if we can get that breakpoint to hit okay so",
    "start": "414010",
    "end": "421510"
  },
  {
    "text": "go to counter let's click the count and voila so now we're hitting our c-sharp code even though there's no page refresh happening",
    "start": "421510",
    "end": "427930"
  },
  {
    "text": "there okay so that's that's part of the beauty of razor components first of all know no JavaScript but you get that rich",
    "start": "427930",
    "end": "434080"
  },
  {
    "start": "428000",
    "end": "552000"
  },
  {
    "text": "interactive feel what else can we do so these are components that means that",
    "start": "434080",
    "end": "439720"
  },
  {
    "text": "they are reusable pieces of UI so let's see if we can reuse some of our",
    "start": "439720",
    "end": "444790"
  },
  {
    "text": "components we've got at least three of them here we have a counter component a fetch data component and an index component all written as raiser files",
    "start": "444790",
    "end": "451150"
  },
  {
    "text": "let's go into the index page I'm gonna stop the debugger let's go and then let's go ahead and try and reuse one of",
    "start": "451150",
    "end": "457510"
  },
  {
    "text": "our components let's try and put a counter component right here on the home page rerun so now I would expect that",
    "start": "457510",
    "end": "465010"
  },
  {
    "text": "would not only have a counter page but also see the counter component show up on the home page and I do and these are",
    "start": "465010",
    "end": "470620"
  },
  {
    "text": "independent things and click the counter there I can click the counter here let's put another components put a fetch data",
    "start": "470620",
    "end": "475930"
  },
  {
    "text": "component right here on the main page so you use raiser components using normal HTML element and attribute syntax",
    "start": "475930",
    "end": "484530"
  },
  {
    "text": "alright so now we've got a whole weather forecast component on the same page as our counter so these are reusable",
    "start": "487920",
    "end": "493090"
  },
  {
    "text": "composable pieces of UI and of course all the normal razors syntax stuff applies like if you wanted a whole bunch",
    "start": "493090",
    "end": "498790"
  },
  {
    "text": "of counters like we could do before and I equals 0 well I is let's I put like 5 of them on",
    "start": "498790",
    "end": "504580"
  },
  {
    "text": "here I I plus boss and then put this in",
    "start": "504580",
    "end": "510430"
  },
  {
    "text": "a little loop and now we got more counters then then I got to put make",
    "start": "510430",
    "end": "517630"
  },
  {
    "text": "sure I know my c-sharp there we go and I did that backwards but who cares I think",
    "start": "517630",
    "end": "527050"
  },
  {
    "text": "it's over X right doesn't work on the other side take a listen does the opposite returns the value",
    "start": "527050",
    "end": "535230"
  },
  {
    "text": "so I just cancel it and let's try to do",
    "start": "536860",
    "end": "541880"
  },
  {
    "text": "that again with the right way and",
    "start": "541880",
    "end": "549350"
  },
  {
    "text": "hopefully now we get a whole bunch of counters on the main page and there they are so we got all these counters notice",
    "start": "549350",
    "end": "554360"
  },
  {
    "start": "552000",
    "end": "623000"
  },
  {
    "text": "that they each have their own state right like you can count them independently so that's pretty nice so",
    "start": "554360",
    "end": "559430"
  },
  {
    "text": "that's reusing components components can also have parameters you can pass data",
    "start": "559430",
    "end": "564709"
  },
  {
    "text": "to the components that they can then use as part of their rendering logic so let's go to let's simplify this back",
    "start": "564709",
    "end": "569959"
  },
  {
    "text": "down to just counter and let's see if we can add a parameter to our counter component it's gonna go back to the",
    "start": "569959",
    "end": "576080"
  },
  {
    "text": "counter component and add a property and the way you add parameters to components is by creating properties that are",
    "start": "576080",
    "end": "582080"
  },
  {
    "text": "attributed with the parameter attribute and let's create one called increment amount and let's initialize it to say 1",
    "start": "582080",
    "end": "591950"
  },
  {
    "text": "and then down here we can use it for for",
    "start": "591950",
    "end": "598279"
  },
  {
    "text": "incrementing at different amounts okay great and then on the home page let's increment by some interesting amount",
    "start": "598279",
    "end": "604779"
  },
  {
    "text": "there you can see that the attributes not showing up in intellisense so you get great editor support lets akram it",
    "start": "604779",
    "end": "610700"
  },
  {
    "text": "by 10 on the home page and then on the normal counter page that should still increment by 1 because we didn't pass",
    "start": "610700",
    "end": "617120"
  },
  {
    "text": "any parameters there so the normal counter page yep still incrementing by 1 on the home page increments by 10 okay",
    "start": "617120",
    "end": "623540"
  },
  {
    "start": "623000",
    "end": "731000"
  },
  {
    "text": "so that is parameters what else can you do with components well these are interactive pieces of UI so they have of",
    "start": "623540",
    "end": "631700"
  },
  {
    "text": "course event handlers you can handle any user UI event that you want to in this case I'm handling the onclick event for",
    "start": "631700",
    "end": "639110"
  },
  {
    "text": "the this button when you handle an event you can you just need to specify a",
    "start": "639110",
    "end": "644600"
  },
  {
    "text": "delegate to the c-sharp code that you want to have called that delegate can take no parameters like this one is",
    "start": "644600",
    "end": "651020"
  },
  {
    "text": "currently doing or it can't take additional parameters for example let's say we wanted to actually know stuff",
    "start": "651020",
    "end": "657440"
  },
  {
    "text": "about like where it was clicked or was the shift key held down those types of things you can put in a parameter here",
    "start": "657440",
    "end": "663170"
  },
  {
    "text": "was it UI mouse event args I think is the one for click events",
    "start": "663170",
    "end": "668329"
  },
  {
    "text": "then let's say that we will increment by increment amount let's see if it's the e",
    "start": "668329",
    "end": "675459"
  },
  {
    "text": "shift key is pressed then we're going to increment by like a hundred otherwise",
    "start": "675459",
    "end": "680839"
  },
  {
    "text": "we're going to increment by the normal increment amount okay so let's see if that works all right so",
    "start": "680839",
    "end": "690499"
  },
  {
    "text": "I click like click click it's going up by tens because that's the parameter that I specify for this component if I hold down the shift key while I'm",
    "start": "690499",
    "end": "695689"
  },
  {
    "text": "clicking clicking clicking now it's going up by a hundred so you can get all the information about the what what happened actually with that event now if",
    "start": "695689",
    "end": "702319"
  },
  {
    "text": "you don't this is the method group way of specifying an event handler if you prefer instead to use lambda syntax",
    "start": "702319",
    "end": "707989"
  },
  {
    "text": "that's cool too like if you want to do something like this where you just say current count plus equals increment",
    "start": "707989",
    "end": "715399"
  },
  {
    "text": "amount that's totally fine that should work exactly the same way just to prove that that this guy's not even getting",
    "start": "715399",
    "end": "720470"
  },
  {
    "text": "called will comment that out and see if we go back to the other behavior and",
    "start": "720470",
    "end": "728839"
  },
  {
    "text": "yeah and Shift key doesn't do anything at this point yeah so you can use Lander syntax or method groups event handlers",
    "start": "728839",
    "end": "735259"
  },
  {
    "text": "can also be async so if you have a sync logic that you want to put in your events that's totally cool you can do that as well",
    "start": "735259",
    "end": "740509"
  },
  {
    "text": "I actually prefer the methyl group syntax so I'm gonna go back to that so increment amount and we get nice and tell a sense for your method groups and",
    "start": "740509",
    "end": "747309"
  },
  {
    "text": "select that and we're good okay so that's event handling what about now",
    "start": "747309",
    "end": "754790"
  },
  {
    "text": "data binding like if you have data that the user is typing into like say an",
    "start": "754790",
    "end": "759949"
  },
  {
    "text": "input and you want to capture that in the dotnet world how do you do that that supposed to be increment count that's",
    "start": "759949",
    "end": "767899"
  },
  {
    "text": "why it was complaining all right great so what I'm gonna do now let's add another page to this application and",
    "start": "767899",
    "end": "773660"
  },
  {
    "text": "we'll do the you know the simple to-do list demo just so we can see how data binding works and let's rename this file",
    "start": "773660",
    "end": "781759"
  },
  {
    "text": "to to do so I'm just creating another component will erase all the stuff that",
    "start": "781759",
    "end": "787730"
  },
  {
    "text": "was in there and so we want this to be a page so this is a component that's routable so we're gonna add that page",
    "start": "787730",
    "end": "793579"
  },
  {
    "text": "directive again at the top and we'll say that request to slash to do should end about this page and then let's just add",
    "start": "793579",
    "end": "800299"
  },
  {
    "text": "a header here and now some of this if you have been watching following along with some of",
    "start": "800299",
    "end": "805580"
  },
  {
    "text": "the stuff that we've been doing with you know components in the a steam some of this may seem very familiar and that's",
    "start": "805580",
    "end": "811880"
  },
  {
    "text": "okay like that's very deliberate so if you've seen this before just hold on we will get there about why we're doing this and that's alright",
    "start": "811880",
    "end": "819470"
  },
  {
    "text": "don't worry about that everything is fine here this is our preview bit so",
    "start": "819470",
    "end": "824780"
  },
  {
    "text": "there are some some issues but okay so currently there's no no tab showing up",
    "start": "824780",
    "end": "830720"
  },
  {
    "start": "827000",
    "end": "944000"
  },
  {
    "text": "because we haven't added our two to do page to the layout but I should now be able to go to just slash to do and voila",
    "start": "830720",
    "end": "836180"
  },
  {
    "text": "there's the to do page that I just started to set up now I want this component to have some state when we",
    "start": "836180",
    "end": "843290"
  },
  {
    "text": "want to manage a list of to-do items I just get to write C sharp codes let's add a class here to-do item and let's do",
    "start": "843290",
    "end": "853790"
  },
  {
    "text": "public class and add a couple properties let's add a string title and a boolean",
    "start": "853790",
    "end": "862850"
  },
  {
    "text": "is done okay and then I list of to-do item I think",
    "start": "862850",
    "end": "872000"
  },
  {
    "text": "that's because the editor had a little issue so we'll give it a second to to repent all right there we go to-do item",
    "start": "872000",
    "end": "879650"
  },
  {
    "text": "and then a new list of to-do items great",
    "start": "879650",
    "end": "885260"
  },
  {
    "text": "that'll be the state of our component to be managing a list of two dues what do we will have so we need to",
    "start": "885260",
    "end": "891080"
  },
  {
    "text": "render those two dues to the screen so I'm going to create an unordered list and just use normal razor syntax so for",
    "start": "891080",
    "end": "897320"
  },
  {
    "text": "each bar to do into dues we'll create a",
    "start": "897320",
    "end": "902450"
  },
  {
    "text": "just a list item here and will render the current to do to do title okay so",
    "start": "902450",
    "end": "908090"
  },
  {
    "text": "first the until isn't showing up there looks great alright now we don't have any to do as yet so this won't actually",
    "start": "908090",
    "end": "913760"
  },
  {
    "text": "do anything we need a way to add some to dues and that's where data binding comes in so let's go ahead and add an input",
    "start": "913760",
    "end": "921470"
  },
  {
    "text": "down here at the bottom and we'll give it a little placeholder do something",
    "start": "921470",
    "end": "926860"
  },
  {
    "text": "okay and we want to bind the value of this",
    "start": "926860",
    "end": "932150"
  },
  {
    "text": "input to something in c-sharp plan so I'm going to a little string new to do and I'm going",
    "start": "932150",
    "end": "938560"
  },
  {
    "text": "to bind to new to do see that okay so",
    "start": "938560",
    "end": "945279"
  },
  {
    "start": "944000",
    "end": "1064000"
  },
  {
    "text": "what does that do well bind is going to do two things it'll listen to the on",
    "start": "945279",
    "end": "950410"
  },
  {
    "text": "change event for the input and when the on change event happens it will set the",
    "start": "950410",
    "end": "957010"
  },
  {
    "text": "the value of whatever you bound to to the current value of the input and also when the input is rendered bind will",
    "start": "957010",
    "end": "963399"
  },
  {
    "text": "take care of rendering the value for that input as the thing that you bound to as the the new the new to do string",
    "start": "963399",
    "end": "969250"
  },
  {
    "text": "so it's a two-way bind alright and then we just need something to say that we're done with adding something so let's add",
    "start": "969250",
    "end": "974860"
  },
  {
    "text": "a button let's call it add and we need to add an event handler for that so that's at a add to do event and in here",
    "start": "974860",
    "end": "986950"
  },
  {
    "text": "we'll check if the if the value is not",
    "start": "986950",
    "end": "992290"
  },
  {
    "text": "an all or empty of the new to do then we'll add a new one to the Tuzla so to",
    "start": "992290",
    "end": "998950"
  },
  {
    "text": "do add new to do item title equals the",
    "start": "998950",
    "end": "1008160"
  },
  {
    "text": "value of that new to do and then let's go ahead and clear out the new to do string because we're done with it with",
    "start": "1008160",
    "end": "1014820"
  },
  {
    "text": "that particular value okay actually probably want this to be not is null or empty and then we need a wire up this",
    "start": "1014820",
    "end": "1021089"
  },
  {
    "text": "event handler to our button so the wire up the event handler we saw that before we just take the on click attribute and",
    "start": "1021089",
    "end": "1027030"
  },
  {
    "text": "we do at to say that we're calling in to c-sharp not javascript here and we want",
    "start": "1027030",
    "end": "1032610"
  },
  {
    "text": "to say it's gonna go up there is two",
    "start": "1032610",
    "end": "1039230"
  },
  {
    "text": "okay I think I think that should do it let's see if we want I think that will",
    "start": "1039230",
    "end": "1045540"
  },
  {
    "text": "work it still won't show up in our layout yet let me rerun the app",
    "start": "1045540",
    "end": "1051320"
  },
  {
    "text": "hopefully do we got any build errors and I missing these semicolons or anything that actually looks like it might work",
    "start": "1051320",
    "end": "1057090"
  },
  {
    "text": "so let's browse to slash to do okay so",
    "start": "1057090",
    "end": "1063450"
  },
  {
    "text": "now let's see can we bind some data so I'm gonna type something in the input and click Add and it's adding it to my list that's add",
    "start": "1063450",
    "end": "1070090"
  },
  {
    "start": "1064000",
    "end": "1152000"
  },
  {
    "text": "something else one thing I really need to do is get some sleep that would be great and there you go okay so that's a",
    "start": "1070090",
    "end": "1076630"
  },
  {
    "text": "simple to-do list app where your data binding we could do even a little bit more fancy data binding like instead of just rendering out the the title I mean",
    "start": "1076630",
    "end": "1083980"
  },
  {
    "text": "this is to-do list right it's got to have checkboxes so let's add an input of type checkbox here we'll bind to the to",
    "start": "1083980",
    "end": "1091720"
  },
  {
    "text": "do is done property mm-hmm it's typing",
    "start": "1091720",
    "end": "1101140"
  },
  {
    "text": "at an Engel is kind of an interesting exercise and then we'll create a text box will also be able to bind to the to",
    "start": "1101140",
    "end": "1107380"
  },
  {
    "text": "the title in case we want to edit it so to dude title and to show that these are working let's show the count of how many",
    "start": "1107380",
    "end": "1113920"
  },
  {
    "text": "to-do items are not done yet up at the top so we'll use some razor syntax here to do is dot count and we'll filter the",
    "start": "1113920",
    "end": "1120310"
  },
  {
    "text": "two dues by the ones that are not done",
    "start": "1120310",
    "end": "1125850"
  },
  {
    "text": "and in parentheses okay and let's see if that worked",
    "start": "1128970",
    "end": "1135120"
  },
  {
    "text": "all right cool so let's add some to dues and the count goes up right because we have now two undone to do is three M two",
    "start": "1139520",
    "end": "1146430"
  },
  {
    "text": "dues and as I check them that should bind to the is own property on each to-do item and you can see that the count automatically goes down so those",
    "start": "1146430",
    "end": "1153210"
  },
  {
    "text": "are raiser components data data binding in action now we're not we're not showing up in our layout yet that's kind",
    "start": "1153210",
    "end": "1159120"
  },
  {
    "text": "of dissatisfying how can we fix that well RAZR components also support",
    "start": "1159120",
    "end": "1164570"
  },
  {
    "text": "layouts layouts in racer components are also components so the way you define",
    "start": "1164570",
    "end": "1170220"
  },
  {
    "text": "the layout is using a special kind of component to call the layout component and I there's one in this app that defines that like left bar and all this",
    "start": "1170220",
    "end": "1177510"
  },
  {
    "text": "nice stuff if we look in the shared folder there's this main layout component it is itself also a component",
    "start": "1177510",
    "end": "1183900"
  },
  {
    "start": "1181000",
    "end": "1292000"
  },
  {
    "text": "the thing that's special about it is it derives from this layout component base and what that gives us it gives it this",
    "start": "1183900",
    "end": "1189300"
  },
  {
    "text": "body property which basically captures the inside of the component wherever",
    "start": "1189300",
    "end": "1194400"
  },
  {
    "text": "that layout gets applied the content of the thing that I got applied to is then renderable using that body property so",
    "start": "1194400",
    "end": "1200940"
  },
  {
    "text": "this is saying you know render a nav menu thing looks like that's another component and then also render the main",
    "start": "1200940",
    "end": "1207150"
  },
  {
    "text": "page with some styling using bootstrap and then put the the main content here that's how layouts work in racer",
    "start": "1207150",
    "end": "1213870"
  },
  {
    "text": "components how do you apply that layout to then to your components well you use a new directive that's this at layout",
    "start": "1213870",
    "end": "1220170"
  },
  {
    "text": "directive here I'm saying I want to use the main layout in this particular case that's being specified in a view imports",
    "start": "1220170",
    "end": "1226380"
  },
  {
    "text": "file so it gets applied to all of the components that are hierarchically down that that that particular path okay so",
    "start": "1226380",
    "end": "1233970"
  },
  {
    "text": "we need to then modify our layout to add that to do page to our to our",
    "start": "1233970",
    "end": "1239700"
  },
  {
    "text": "application now the looks like that sidebar is actually defined in this separate component this nav menu let's go look at",
    "start": "1239700",
    "end": "1245580"
  },
  {
    "text": "that okay so there's a little bit of code here but it's pretty straightforward it's basically just an unordered list of list items that you",
    "start": "1245580",
    "end": "1252150"
  },
  {
    "text": "have these nav link things in there those are essentially anchor tags that change their styling depending on",
    "start": "1252150",
    "end": "1259080"
  },
  {
    "text": "whether the current address matches the link for that for that anchor tag so we",
    "start": "1259080",
    "end": "1264270"
  },
  {
    "text": "just need to add one more of these to make our to-do page show up so let's add one that's called put the href as slash",
    "start": "1264270",
    "end": "1271350"
  },
  {
    "text": "to do that was the address that we set up in the page directive and then over here let's make some friendly text it would be just to",
    "start": "1271350",
    "end": "1278429"
  },
  {
    "text": "do alright and so now if we run this we",
    "start": "1278429",
    "end": "1283039"
  },
  {
    "text": "should have it to do page yeah so there's a to do page over there on the left and that has all the same functionality that we had before all",
    "start": "1285980",
    "end": "1292409"
  },
  {
    "text": "right so that's layouts that's sort of an introduction to razor components and what razor components can do it's kind",
    "start": "1292409",
    "end": "1298169"
  },
  {
    "text": "of kind of interesting I hope I hope you think it's interesting but some of you I'm sure as you were watching that you",
    "start": "1298169",
    "end": "1303690"
  },
  {
    "text": "were probably thinking like wait a minute isn't this just blazer like I'm",
    "start": "1303690",
    "end": "1308789"
  },
  {
    "text": "sure some of you have heard about blazer before if you haven't blazer is this experimental project that we've been",
    "start": "1308789",
    "end": "1315389"
  },
  {
    "text": "working on in the a speed on that team to try and get dotnet to run directly in",
    "start": "1315389",
    "end": "1321059"
  },
  {
    "text": "the browser on top of web assembly you don't know what web assembly is web assembly is this new open standard that",
    "start": "1321059",
    "end": "1327629"
  },
  {
    "text": "was defined by the w3c community group and it's basically a low-level byte code",
    "start": "1327629",
    "end": "1333539"
  },
  {
    "text": "for the web browsers no longer just run JavaScript they can run anything that's",
    "start": "1333539",
    "end": "1339240"
  },
  {
    "text": "compiled to this new format called web assembly and all the modern browsers support it including mobile browsers and",
    "start": "1339240",
    "end": "1344580"
  },
  {
    "text": "desktop browsers and so we've been working for a while on trying to get dotnet to run on top of web assembly",
    "start": "1344580",
    "end": "1350730"
  },
  {
    "text": "really well in the browser and that experimental project is called blazer as part of that we've also built a UI",
    "start": "1350730",
    "end": "1355950"
  },
  {
    "text": "framework and it had components and about a year and a half ago at an NDC not not unlike this one Steve Sanderson",
    "start": "1355950",
    "end": "1362970"
  },
  {
    "text": "was actually here today some in the front row did a demo sequence not unlike what you just saw and it was blazer",
    "start": "1362970",
    "end": "1368610"
  },
  {
    "text": "running you know dotnet code its components running directly in the browser so is that what this is is this",
    "start": "1368610",
    "end": "1374580"
  },
  {
    "text": "just blazer but with a new name and the answer is yes and no it's not quite that",
    "start": "1374580",
    "end": "1381990"
  },
  {
    "text": "simple because there's a bit that's shared between both and that's really what Razer components are all about so",
    "start": "1381990",
    "end": "1389399"
  },
  {
    "text": "in a blazer application if you haven't seen blazer before it looks kind of like this you have web assembly you know that",
    "start": "1389399",
    "end": "1396809"
  },
  {
    "text": "core capability of the browser if you took a pile of some code to web assembly you can run it in any browser at near native speeds and then for blazer we",
    "start": "1396809",
    "end": "1403830"
  },
  {
    "text": "wrote a little dotnet runs in webassembly that you can just download to the browser and use to",
    "start": "1403830",
    "end": "1409590"
  },
  {
    "text": "execute dotnet assemblies directly in the browser it's pretty cool on top of",
    "start": "1409590",
    "end": "1415169"
  },
  {
    "text": "that we then built this you wife simple UI framework based on components and",
    "start": "1415169",
    "end": "1420450"
  },
  {
    "text": "those components are RAZR components now with the a spinet core 3 oh release",
    "start": "1420450",
    "end": "1428370"
  },
  {
    "text": "we've done something a little differently those Razer components actually don't have to be executed in the same process",
    "start": "1428370",
    "end": "1434460"
  },
  {
    "text": "where the UI is being rendered they manage an in-memory representation of",
    "start": "1434460",
    "end": "1440039"
  },
  {
    "text": "the UI that they're updating and it does a fancy diff algorithm for like the UI that was updated previously with the new",
    "start": "1440039",
    "end": "1446610"
  },
  {
    "text": "new set of UI and figures out what's different and then there's a process that the runtime takes care of for",
    "start": "1446610",
    "end": "1452220"
  },
  {
    "text": "applying those UI changes to whatever UI system you're using in this case typically the Dom but what that means is",
    "start": "1452220",
    "end": "1459059"
  },
  {
    "text": "because the rendering logic of the Razr components and how the UI actually gets updated are separate you can run those",
    "start": "1459059",
    "end": "1466440"
  },
  {
    "text": "razor components pretty much wherever you want in fact you can run them on the server and that's what we've done in",
    "start": "1466440",
    "end": "1472710"
  },
  {
    "text": "dotnet core 3 oh we've taken the component model that we started with Blaser and we've now shipped the",
    "start": "1472710",
    "end": "1479760"
  },
  {
    "text": "component model in dotnet core and we are going to support initially running those components server-side on top of",
    "start": "1479760",
    "end": "1487140"
  },
  {
    "text": "the dotnet core runtime with your application all the UI updates then get handled over a real-time connection of",
    "start": "1487140",
    "end": "1493679"
  },
  {
    "text": "signal R of course that's the real time time framework that we use in asp.net core so the thing that's the same from",
    "start": "1493679",
    "end": "1500490"
  },
  {
    "text": "what you just saw is that yeah everything I just showed you those were Razer components they can run client-side in the browser on web",
    "start": "1500490",
    "end": "1507179"
  },
  {
    "text": "assembly or alternatively which is what I was showing they were actually running server-side in an asp.net core app and",
    "start": "1507179",
    "end": "1514380"
  },
  {
    "text": "then all the UI updates were all happening over a signal art connection let me show you a little bit more about",
    "start": "1514380",
    "end": "1519600"
  },
  {
    "text": "how that's working so that you can understand what's really going on there so raise your components client or a",
    "start": "1519600",
    "end": "1527100"
  },
  {
    "start": "1523000",
    "end": "1602000"
  },
  {
    "text": "server so I'm going to switch to a different app it's really the same app that was what we just saw slightly",
    "start": "1527100",
    "end": "1534390"
  },
  {
    "text": "different bits just because the the new razor components work that we doing in 3 Oh a lot of that was just trying to get",
    "start": "1534390",
    "end": "1540640"
  },
  {
    "text": "bits moved over and working there's still like a feature or two that makes this particular demo a little bit harder",
    "start": "1540640",
    "end": "1545770"
  },
  {
    "text": "with the current preview it will get better as we move forward but this app does almost exactly the same thing as",
    "start": "1545770",
    "end": "1551440"
  },
  {
    "text": "what you saw before it has a to-do list page it has encountered has a parameter I just get it up and running so that we",
    "start": "1551440",
    "end": "1557080"
  },
  {
    "text": "can see it working and I got so many tabs open now let's close all the other tabs okay so we have counter that's working",
    "start": "1557080",
    "end": "1564730"
  },
  {
    "text": "fetch data that's working on the two lists we can add to dues and it does exactly what it did before now let's",
    "start": "1564730",
    "end": "1570340"
  },
  {
    "text": "let's look at how this application is actually working on the wire and let's make this a little bigger so we can see",
    "start": "1570340",
    "end": "1575940"
  },
  {
    "text": "and then I control f5 so first of all",
    "start": "1575940",
    "end": "1581260"
  },
  {
    "text": "how big is this applicable today there he goes oh wait wait that was that was the",
    "start": "1581260",
    "end": "1589120"
  },
  {
    "text": "second state of the app that we were supposed to see that yet you didn't see that go back you forgot to reset this demo okay okay",
    "start": "1589120",
    "end": "1603580"
  },
  {
    "text": "all right let's refresh this again all right great that looks much better is like why is it taking so long to load so",
    "start": "1603580",
    "end": "1610090"
  },
  {
    "text": "first thing yeah well it's actually interesting like as I hit f5 that this app actually loads pretty fast it's not",
    "start": "1610090",
    "end": "1615610"
  },
  {
    "text": "downloading very much into the browser to get all that functionality if you look down in the left hand corner this",
    "start": "1615610",
    "end": "1620620"
  },
  {
    "text": "app is about 100 kilobytes and that includes bootstrap and all the other stuff that it's using to make the UI I",
    "start": "1620620",
    "end": "1625840"
  },
  {
    "text": "look pretty but what actually gets download in terms of artifacts well there's HTML there's bootstrap there's",
    "start": "1625840",
    "end": "1632740"
  },
  {
    "text": "that server j/s script that kind of gets everything up and running and at the bottom you can see here there's this 101",
    "start": "1632740",
    "end": "1638800"
  },
  {
    "start": "1636000",
    "end": "1657000"
  },
  {
    "text": "switching protocols Network item what is that that's basically setting up a signal our connection with the server",
    "start": "1638800",
    "end": "1645340"
  },
  {
    "text": "its setting up a WebSocket connection in fact if we double click on that and single clicked on that in chrome we can",
    "start": "1645340",
    "end": "1651370"
  },
  {
    "text": "even see the the current frames that are being passed back and forth between the client and the server let me let me",
    "start": "1651370",
    "end": "1656530"
  },
  {
    "text": "clear it and then as I click on things notice that frames start to show up you see that and there they're not very big",
    "start": "1656530",
    "end": "1663790"
  },
  {
    "text": "like these numbers are in like bytes so the amount of data that's actually going back and forth over that connection is",
    "start": "1663790",
    "end": "1669160"
  },
  {
    "text": "very small but every time I click this click Me button what that's actually doing is it's sending a notification to the server",
    "start": "1669160",
    "end": "1675260"
  },
  {
    "text": "saying hey someone clicked this button and then the counter component executes on the server it runs it's rendering",
    "start": "1675260",
    "end": "1681290"
  },
  {
    "text": "logic the runtime figures out what UI needs to be updated it figures out that diff it C realises the diff back down to",
    "start": "1681290",
    "end": "1688400"
  },
  {
    "text": "the the browser and then that little bit of server Jas JavaScript applies it to the UI that's how this razor component",
    "start": "1688400",
    "end": "1694670"
  },
  {
    "text": "app is working this is asp.net core razor components razor components hosted on the server but the same razor",
    "start": "1694670",
    "end": "1701900"
  },
  {
    "start": "1700000",
    "end": "1776000"
  },
  {
    "text": "components can also be run client-side directly in the browser on web assembly using the blazer model and that's pretty",
    "start": "1701900",
    "end": "1708740"
  },
  {
    "text": "easy to do we can just take this same app same code same you know DLL that you're compiling and change it to be",
    "start": "1708740",
    "end": "1715250"
  },
  {
    "text": "back to a web assembly based application so I'm just going to change this bootstrapping script and then we'll",
    "start": "1715250",
    "end": "1720860"
  },
  {
    "text": "refresh the browser again and that's now we're gonna really see that slightly longer load time because we're pulling",
    "start": "1720860",
    "end": "1726440"
  },
  {
    "text": "down a lot more with this application if we look at the network trace it's actually um yeah let me do one thing to",
    "start": "1726440",
    "end": "1733490"
  },
  {
    "text": "make it a little smaller because that one looks a little surprisingly big because we turned off linking for the",
    "start": "1733490",
    "end": "1739340"
  },
  {
    "text": "server-side mode I'm gonna at this and let's turn this back on to true and I",
    "start": "1739340",
    "end": "1745310"
  },
  {
    "text": "think that should be fine and we'll be in a build and rerun it again so that",
    "start": "1745310",
    "end": "1751970"
  },
  {
    "text": "one property what that's gonna do is when the application gets built the built assemblies are going to be run",
    "start": "1751970",
    "end": "1757190"
  },
  {
    "text": "through an IO linker to strip out all the unused il because in the client-side model your DLL actually goes down to the",
    "start": "1757190",
    "end": "1763880"
  },
  {
    "text": "browser so let's see first let's make sure it's working still yep looks like it's still working we got a fetch data page and now if we look at the network",
    "start": "1763880",
    "end": "1770720"
  },
  {
    "text": "after refreshing okay so now it's a",
    "start": "1770720",
    "end": "1778550"
  },
  {
    "text": "little bigger it's two megabytes that's not that's not a lightweight application it's pretty cool considering that this",
    "start": "1778550",
    "end": "1784040"
  },
  {
    "text": "application now is downloading a full dotnet runtime but yeah it's that's that's that's what you get now so but",
    "start": "1784040",
    "end": "1790040"
  },
  {
    "text": "nice thing about this application is it's running fully client-side in the browser it doesn't actually require any",
    "start": "1790040",
    "end": "1795800"
  },
  {
    "text": "dotnet on the server at all this app could run offline it could be a PWA and you can leverage the browser for compute",
    "start": "1795800",
    "end": "1803360"
  },
  {
    "text": "and for resources and all the functionality that the browser can do so same raiser components running client-side in the",
    "start": "1803360",
    "end": "1809330"
  },
  {
    "text": "browser on web assembly which is what we're seeing here like your DLL is in the browser or running server-side in",
    "start": "1809330",
    "end": "1816379"
  },
  {
    "text": "asp.net core for those of you who may not believe that this is actually you know dotnet code running in the browser",
    "start": "1816379",
    "end": "1821720"
  },
  {
    "text": "we can do one other thing and this this demo is always a little bit dicey because of the debugging support for",
    "start": "1821720",
    "end": "1827360"
  },
  {
    "start": "1822000",
    "end": "1863000"
  },
  {
    "text": "client-side blazer apps is uh you know I work in progress shall we say but there",
    "start": "1827360",
    "end": "1833120"
  },
  {
    "text": "is a way to do it so if you go into the console you can see there's this debugging hotkey shift alt D that's a special gesture in",
    "start": "1833120",
    "end": "1840769"
  },
  {
    "text": "the blazer a client-side blazar app to say I would like to try and debug this app in the browser now the way that",
    "start": "1840769",
    "end": "1846230"
  },
  {
    "text": "works it's works through the v8 debugging protocol we actually set up a",
    "start": "1846230",
    "end": "1851330"
  },
  {
    "text": "little debugging server in between chrome and the chrome dev tools that",
    "start": "1851330",
    "end": "1856460"
  },
  {
    "text": "augments the protocol with dotnet specific content okay so if I do a shift on that control shift alt D so in order",
    "start": "1856460",
    "end": "1865249"
  },
  {
    "start": "1863000",
    "end": "1891000"
  },
  {
    "text": "to make that work chrome actually needs to be running in remote debugging mode the app will detect like oh hold on",
    "start": "1865249",
    "end": "1871340"
  },
  {
    "text": "you're not actually running in that mode yet here's how you do it so I'm going to copy the command that it's telling me to do and the curl close down all of the",
    "start": "1871340",
    "end": "1878119"
  },
  {
    "text": "chrome instances and then let's just run the command that it told me to run that will start chrome in remote debugging",
    "start": "1878119",
    "end": "1883759"
  },
  {
    "text": "mode for the same application and then let's do that again shift alt D",
    "start": "1883759",
    "end": "1889730"
  },
  {
    "text": "hopefully now we'll be able to connect to our little debugging proxy which is able to connect it to Chrome so let's",
    "start": "1889730",
    "end": "1895730"
  },
  {
    "start": "1891000",
    "end": "1944000"
  },
  {
    "text": "pull this out into a separate window like so and you'll see over here in the",
    "start": "1895730",
    "end": "1901809"
  },
  {
    "text": "the chrome tool it's kind of small but there there's a DLL showing up in the",
    "start": "1901809",
    "end": "1908210"
  },
  {
    "text": "chrome debugging tools along with all my CS HTML for all my components if I go to the counter page and then let's open up",
    "start": "1908210",
    "end": "1915559"
  },
  {
    "text": "counter CS HTML I can actually see the code and then I'm going to set a breakpoint right here on the increment count method you see that and then as I",
    "start": "1915559",
    "end": "1922759"
  },
  {
    "text": "click Boop we just hit a breakpoint in c-sharp code running directly in the",
    "start": "1922759",
    "end": "1928159"
  },
  {
    "text": "browser on webassembly so that's pretty cool so it is in fact running clients on the browser and it's the same razor",
    "start": "1928159",
    "end": "1934159"
  },
  {
    "text": "component model server or client and let's just let this continue on through I think it's one of the FA yeah there it goes all right awesome so",
    "start": "1934159",
    "end": "1943009"
  },
  {
    "text": "that was switching between client and server okay",
    "start": "1943009",
    "end": "1950029"
  },
  {
    "start": "1944000",
    "end": "2142000"
  },
  {
    "text": "so when would you use razor components particularly on the server like when when would you do that",
    "start": "1950029",
    "end": "1955759"
  },
  {
    "text": "when is this model compelling what are its benefits and its drawbacks so the things that are actually really nice",
    "start": "1955759",
    "end": "1961549"
  },
  {
    "text": "about razor components on the server besides the fact that you just can write c-sharp code and get that rich",
    "start": "1961549",
    "end": "1967190"
  },
  {
    "text": "interactive field well one of the benefits is that the client is very thin like you're only downloading that",
    "start": "1967190",
    "end": "1973609"
  },
  {
    "text": "JavaScript code that's that's provided for you that sets up the signal our connection sends the UI events up to the",
    "start": "1973609",
    "end": "1980749"
  },
  {
    "text": "server and applies any UI discs that gets sent back so it's a very thin client the app reloads really fast you",
    "start": "1980749",
    "end": "1987080"
  },
  {
    "text": "don't need a lot of functionality in the browser in order to get that to run you know you don't need a browser for example that supports web assembly you",
    "start": "1987080",
    "end": "1993859"
  },
  {
    "text": "could do this in older browsers you could do this in browsers where are our devices that maybe don't have a great",
    "start": "1993859",
    "end": "2000249"
  },
  {
    "text": "internet connection and so doing that initial download to have the app start up when you're doing blazer is less",
    "start": "2000249",
    "end": "2006039"
  },
  {
    "text": "desirable so it's a much thinner client it runs on dotnet core on the server so",
    "start": "2006039",
    "end": "2011379"
  },
  {
    "text": "you have the full runtime you can use all of your your libraries and existing",
    "start": "2011379",
    "end": "2016749"
  },
  {
    "text": "assemblies you get all the functionality of that runtime you saw that I was able to just set breakpoints in vs and hit",
    "start": "2016749",
    "end": "2023080"
  },
  {
    "text": "those directly in my dotnet code that's because it's just normal dotnet also",
    "start": "2023080",
    "end": "2029019"
  },
  {
    "text": "it's a bit of a simpler architecture because your components are actually running server-side then you don't have",
    "start": "2029019",
    "end": "2034719"
  },
  {
    "text": "to do like a hop through a web api layer in order to get to some functionality on the back end you're already there so if",
    "start": "2034719",
    "end": "2041259"
  },
  {
    "text": "you wanted to like go make a call to your database or do server-side specific stuff you can do that and we found that",
    "start": "2041259",
    "end": "2047919"
  },
  {
    "text": "actually appeals to quite a few doves who have looked at this model particularly folks who are concerned about not wanting their code to leave",
    "start": "2047919",
    "end": "2055029"
  },
  {
    "text": "the server I mean with a blazer app your D levels actually go down into the browser and anyone can grab them and you",
    "start": "2055029",
    "end": "2060730"
  },
  {
    "text": "know just assemble them and see what's inside with the Razr components model on the server all your code stays on the server",
    "start": "2060730",
    "end": "2067358"
  },
  {
    "text": "and no one and then see it the downsides of this model are of course well there's no",
    "start": "2067359",
    "end": "2072520"
  },
  {
    "text": "offline support this the UI works by having that live connection so if you need an offline app then this probably",
    "start": "2072520",
    "end": "2079270"
  },
  {
    "text": "isn't the the model for you you're not going to be implementing a PWA using razor components server-side also",
    "start": "2079270",
    "end": "2085810"
  },
  {
    "text": "there is a latency concern because you're doing all the UI interactions over a real-time connection for apps",
    "start": "2085810",
    "end": "2091750"
  },
  {
    "text": "where your data center is really close and you have a really good solid pipe that that probably isn't a concern at",
    "start": "2091750",
    "end": "2097900"
  },
  {
    "text": "all we've done deployments where we've taken this major component app and like deployed it to the US while we're here",
    "start": "2097900",
    "end": "2103180"
  },
  {
    "text": "in Europe and I initially thought that that would be like clue and then the UI",
    "start": "2103180",
    "end": "2108670"
  },
  {
    "text": "updates but actually it's not bad like you click there's a little bit of lag but it's it's pretty good like remember",
    "start": "2108670",
    "end": "2113770"
  },
  {
    "text": "when we saw in the the frames for the WebSocket connection not much data is actually being sent for each of those",
    "start": "2113770",
    "end": "2119140"
  },
  {
    "text": "events so it is pretty quick you only really limited in some sense by the speed of light lastly a downside is that",
    "start": "2119140",
    "end": "2125950"
  },
  {
    "text": "you're you're using your server resources now to run the app you've got to keep all these persistent connections",
    "start": "2125950",
    "end": "2130960"
  },
  {
    "text": "you have to maintain the state of the UI on the server you're not able to farm out all of that compute on to other",
    "start": "2130960",
    "end": "2136720"
  },
  {
    "text": "people's browsers so you're kind of paying for that but if that's what you want and then that can be a really compelling thing so a sort of a drive",
    "start": "2136720",
    "end": "2144460"
  },
  {
    "start": "2142000",
    "end": "2223000"
  },
  {
    "text": "home the the benefit of keeping its server side of running the Razr components on the server let me let me",
    "start": "2144460",
    "end": "2149470"
  },
  {
    "text": "show another app this was written by a by Steve which is pretty cool application this app actually uses Razer",
    "start": "2149470",
    "end": "2160240"
  },
  {
    "text": "components with ml net people heard of ml net let me go back to the browser for",
    "start": "2160240",
    "end": "2165970"
  },
  {
    "text": "a quick second if you go to net at the top we probably noticed that there was a",
    "start": "2165970",
    "end": "2171610"
  },
  {
    "text": "second banner where we're advertising this ml net thing that's machine learning net it's a machine learning framework in written net code you can",
    "start": "2171610",
    "end": "2178450"
  },
  {
    "text": "train models you can do predictions all sorts of cool fancy AI stuff with with that framework all in net and c-sharp",
    "start": "2178450",
    "end": "2185140"
  },
  {
    "text": "code so the scenario here as least as Steve explained it to me was he figured",
    "start": "2185140",
    "end": "2190780"
  },
  {
    "text": "out that when you have comments on like your your your company's website or on",
    "start": "2190780",
    "end": "2197050"
  },
  {
    "text": "your product it's it's generally better for business those comments are positive or good so",
    "start": "2197050",
    "end": "2202910"
  },
  {
    "text": "wouldn't it be great if you could do some sentiment analysis on the comments and keep although you know the nasty",
    "start": "2202910",
    "end": "2208490"
  },
  {
    "text": "negative ones out and only keep the good ones so maybe we could use ml net to do",
    "start": "2208490",
    "end": "2214190"
  },
  {
    "text": "that to do some sentiment analysis so that's what this happened does let me see if it's running okay so we have same",
    "start": "2214190",
    "end": "2225740"
  },
  {
    "start": "2223000",
    "end": "2342000"
  },
  {
    "text": "map as before but now we've got this review page alright cool so I want to be able to type in some text here and have",
    "start": "2225740",
    "end": "2230780"
  },
  {
    "text": "some sentiment analysis happen and then we're going to move that slider back and forth depending on how positive or negative it is and this is gonna be used",
    "start": "2230780",
    "end": "2237950"
  },
  {
    "text": "during using a trained model but that model is that's that's proprietary that that's my IP like I don't want that like",
    "start": "2237950",
    "end": "2244580"
  },
  {
    "text": "bleeding down to the the browser for anyone to grab and then reuse and I lose my my competitive advantage I like to",
    "start": "2244580",
    "end": "2250550"
  },
  {
    "text": "keep it on the server so this would be great we can just use razor components on the server we can run the ML dotnet",
    "start": "2250550",
    "end": "2256490"
  },
  {
    "text": "code there and it never get makes it down to the browser we can see that in the code if we look at this application",
    "start": "2256490",
    "end": "2262760"
  },
  {
    "text": "let's look at its pages it has this review page like we just were looking at and let's see what it does it has this",
    "start": "2262760",
    "end": "2268390"
  },
  {
    "text": "update score method and it calls this sentiment class and asks it to predict now that class is implemented over here",
    "start": "2268390",
    "end": "2275060"
  },
  {
    "text": "and where's that predict method there it is down at the bottom and here we're actually loading up a real ml dotnet",
    "start": "2275060",
    "end": "2281750"
  },
  {
    "text": "model that's this sentiment dot zip file and using it to calculate you know how good or how positive or negative was",
    "start": "2281750",
    "end": "2287839"
  },
  {
    "text": "this text if it's zero you know that's like the the dredges of human despair",
    "start": "2287839",
    "end": "2293000"
  },
  {
    "text": "like you're just just just horrible you know absolute negativity wherever it's one you know complete human ecstasy so",
    "start": "2293000",
    "end": "2298670"
  },
  {
    "text": "let's see if this works this is horrible",
    "start": "2298670",
    "end": "2304760"
  },
  {
    "text": "I hate it I will never use it again okay",
    "start": "2304760",
    "end": "2312680"
  },
  {
    "text": "okay whereas this is great I love it alright we'll use it so you",
    "start": "2312680",
    "end": "2320210"
  },
  {
    "text": "get the idea and all that all that code is running server-side only thing that's being sent down to the client are those",
    "start": "2320210",
    "end": "2325820"
  },
  {
    "text": "UI diff to like you know move the slider around and to the server we're sending each of those keystrokes in that text",
    "start": "2325820",
    "end": "2331910"
  },
  {
    "text": "box as I type that was I don't know if I showed that the event handling yeah on input was the event that were handling",
    "start": "2331910",
    "end": "2338510"
  },
  {
    "text": "and it's just pointing to again a c-sharp code okay so that's you know the",
    "start": "2338510",
    "end": "2343940"
  },
  {
    "start": "2342000",
    "end": "2399000"
  },
  {
    "text": "benefit of keeping it server-side how we",
    "start": "2343940",
    "end": "2350300"
  },
  {
    "text": "doing for time how we do okay so another thing that's cool about Razer components",
    "start": "2350300",
    "end": "2356690"
  },
  {
    "text": "is that they're reusable and you can build them into class libraries and it's a RZR component that's CS HTML file what",
    "start": "2356690",
    "end": "2364160"
  },
  {
    "text": "happens when you do a build is it just gets turned into a normal dotnet class it's just a class that gets built into",
    "start": "2364160",
    "end": "2369950"
  },
  {
    "text": "an assembly and then run either on the server or download it into the the browser in the case of blazer on run on",
    "start": "2369950",
    "end": "2375860"
  },
  {
    "text": "the client so you can take those class libraries and just ship them as NuGet packages as reusable component libraries",
    "start": "2375860",
    "end": "2382490"
  },
  {
    "text": "and then when you're building your application you can reuse component libraries that are being built and",
    "start": "2382490",
    "end": "2388760"
  },
  {
    "text": "shared by the community I have another app here that has a component library",
    "start": "2388760",
    "end": "2395390"
  },
  {
    "text": "let me pull it up think it's this one",
    "start": "2395390",
    "end": "2400520"
  },
  {
    "start": "2399000",
    "end": "2444000"
  },
  {
    "text": "all right so this application again written by my my friend Steve Sanderson see the wonderful thing about PM is that",
    "start": "2400520",
    "end": "2407300"
  },
  {
    "text": "you get to work with tabs and they they write all the cool stuff and then you just get to show it it's a great job it's awesome so Steve wrote this this",
    "start": "2407300",
    "end": "2414230"
  },
  {
    "text": "component library for material design people people familiar with material design is a design paradigm for web",
    "start": "2414230",
    "end": "2421220"
  },
  {
    "text": "applications or UI I believe it's from some some other company that shall not be named but it still it's a cool stuff",
    "start": "2421220",
    "end": "2428660"
  },
  {
    "text": "you know styling and things so this is not the round where is it today",
    "start": "2428660",
    "end": "2433970"
  },
  {
    "text": "razor components that's that's not it",
    "start": "2433970",
    "end": "2441100"
  },
  {
    "text": "that was the app I just did the demos oh that's not confusing at all I had one",
    "start": "2441100",
    "end": "2446360"
  },
  {
    "start": "2444000",
    "end": "2499000"
  },
  {
    "text": "project name demo or one brother named demos okay that was the one we were just messing around with all right so this product this",
    "start": "2446360",
    "end": "2455180"
  },
  {
    "text": "solution will has has several projects it's got a razer component app and then it also has just a class library project",
    "start": "2455180",
    "end": "2461990"
  },
  {
    "text": "with a bunch of component definitions that are basically material design components so here's the solution we can",
    "start": "2461990",
    "end": "2468920"
  },
  {
    "text": "just take a look at that so again we have that server project that's the hosting a speed on that core project we",
    "start": "2468920",
    "end": "2473930"
  },
  {
    "text": "have dot app that's where we're putting all the the Razr components for our application and then we have just a",
    "start": "2473930",
    "end": "2479839"
  },
  {
    "text": "class library a reusable class library full of razer components for us to use and you could package this up as a new",
    "start": "2479839",
    "end": "2485599"
  },
  {
    "text": "get package and share it with your friends and so we've got things in here like a material design button the check box dialog and so forth if we go ahead",
    "start": "2485599",
    "end": "2493220"
  },
  {
    "text": "and run this app we can see these material design components in action all",
    "start": "2493220",
    "end": "2500960"
  },
  {
    "text": "right there we go and so we got a slider on the Left we have the counter for like before but these that's a material design button",
    "start": "2500960",
    "end": "2506240"
  },
  {
    "text": "here's layout and I I don't recognize any of these books but I hear that these are fairly popular kids books is that",
    "start": "2506240",
    "end": "2512960"
  },
  {
    "text": "does anyone like no Hairy Maclary I'm told I'm supposed to read this to my kids so if I find it get that from the",
    "start": "2512960",
    "end": "2518089"
  },
  {
    "text": "library at some point we have a validating form here implemented using material design so let's say I have a",
    "start": "2518089",
    "end": "2524509"
  },
  {
    "text": "kitten named fluffy but that I decided let's and it's a British Shorthair but I",
    "start": "2524509",
    "end": "2529609"
  },
  {
    "text": "do not accept the kitten terms oh all kittens must accept the terms no exceptions so let's meet that again and",
    "start": "2529609",
    "end": "2535940"
  },
  {
    "text": "then we're good so what does that all look like well it's there these are just components so you use them using the",
    "start": "2535940",
    "end": "2541279"
  },
  {
    "text": "normal component syntax if we go into that there I wanted to look at pages and",
    "start": "2541279",
    "end": "2548119"
  },
  {
    "text": "let's look at Vincent Beinecke on display the cascading validation numbers",
    "start": "2548119",
    "end": "2556029"
  },
  {
    "start": "2556000",
    "end": "2620000"
  },
  {
    "text": "yeah so kitten breed is an MVC select and we have a tendancy text field so",
    "start": "2556029",
    "end": "2561589"
  },
  {
    "text": "we're just reusing those components and we didn't have to do any work that was great and so the community actually has",
    "start": "2561589",
    "end": "2567470"
  },
  {
    "text": "been building out a lot of reusable components that you can download as NuGet packages off of the new georg if",
    "start": "2567470",
    "end": "2573559"
  },
  {
    "text": "you go to this case you're going to go to blazar down that just because that's where a lot of the community effort has",
    "start": "2573559",
    "end": "2579319"
  },
  {
    "text": "been happening recently but all ah this these it again with blazer the are still razer components so they still",
    "start": "2579319",
    "end": "2585859"
  },
  {
    "text": "apply there's a list here that we maintain of libraries that have been built by the community that you can just",
    "start": "2585859",
    "end": "2591950"
  },
  {
    "text": "use like for example there is somewhere on here I was like a bootstrap one yeah bootstrap blazer strap has a bunch of",
    "start": "2591950",
    "end": "2597980"
  },
  {
    "text": "reusable bootstrap components I think there's like a charting component up here oh there's a grid grid component",
    "start": "2597980",
    "end": "2604070"
  },
  {
    "text": "reasonable grid component with blazer so lots of good stuff that the community has been working on that you can just use if you guys build any feel free to",
    "start": "2604070",
    "end": "2610520"
  },
  {
    "text": "let us know we'll add it to this page even recently uh I mean component vendors have been getting into the game",
    "start": "2610520",
    "end": "2616010"
  },
  {
    "text": "I think was telluric telic blazer preview the guys at progress or telluric",
    "start": "2616010",
    "end": "2622640"
  },
  {
    "start": "2620000",
    "end": "2644000"
  },
  {
    "text": "they recently announced that they've been working on their own blade blazer and razor components and you can get a I",
    "start": "2622640",
    "end": "2630140"
  },
  {
    "text": "think it's a what they got a grid where is it down here let me have a grid in a tab view yeah so there's a kendo kendo",
    "start": "2630140",
    "end": "2636920"
  },
  {
    "text": "grid all written in with sheesh our code and dotnet running running in the browser or our server-side and in Razer",
    "start": "2636920",
    "end": "2642800"
  },
  {
    "text": "components they have a tab view here as well so that's the beauty of composability and usability you can then",
    "start": "2642800",
    "end": "2649160"
  },
  {
    "start": "2644000",
    "end": "2718000"
  },
  {
    "text": "build components and then use them in your application now there's a couple things in this this particular app that",
    "start": "2649160",
    "end": "2655190"
  },
  {
    "text": "are kind of interesting that I thought I would show there's some features of Razer components that I didn't show earlier let's look over here first at",
    "start": "2655190",
    "end": "2662780"
  },
  {
    "text": "this jeaious Interop page so from your Razer components that are running on the",
    "start": "2662780",
    "end": "2668210"
  },
  {
    "text": "server if you need to or want to you can actually call down into JavaScript",
    "start": "2668210",
    "end": "2673760"
  },
  {
    "text": "that's executing in the browser so let's say as part of your UI you want to call some browser API or maybe you have a",
    "start": "2673760",
    "end": "2680210"
  },
  {
    "text": "JavaScript library that you know for better or worse you you implemented awhile back and you've got to use it or",
    "start": "2680210",
    "end": "2685460"
  },
  {
    "text": "there's one from the ecosystem that you you need to or want to reuse you can load that script in the browser and have",
    "start": "2685460",
    "end": "2691820"
  },
  {
    "text": "your razor component call into it basically as if it was written in c-sharp okay so let me show you what",
    "start": "2691820",
    "end": "2698359"
  },
  {
    "text": "that looks like so when I when I click this call prompt button notice that that's actually popping up a javascript",
    "start": "2698359",
    "end": "2704900"
  },
  {
    "text": "native prompt in the browser tell us about your childhood it was great",
    "start": "2704900",
    "end": "2711520"
  },
  {
    "text": "and if I click okay then there's like just popping up the local time in a dialogue again a JavaScript call how is",
    "start": "2711520",
    "end": "2718270"
  },
  {
    "start": "2718000",
    "end": "2833000"
  },
  {
    "text": "that done if we go back to the demos app and let's look at the JavaScript Interop",
    "start": "2718270",
    "end": "2724110"
  },
  {
    "text": "page so in raiser component applications and also plays wraps you can get this",
    "start": "2724110",
    "end": "2730360"
  },
  {
    "text": "ijs runtime abstraction and that's a service that you can use to then call",
    "start": "2730360",
    "end": "2735700"
  },
  {
    "text": "into javascript now notice it's being injected into this component components",
    "start": "2735700",
    "end": "2740770"
  },
  {
    "text": "can have services injected into them through through di those services",
    "start": "2740770",
    "end": "2745780"
  },
  {
    "text": "typically get configured in your startup class just like they would in an asp.net core application so here in start-up",
    "start": "2745780",
    "end": "2751720"
  },
  {
    "text": "where this step is adding its own services the ijs runtime is one that we provide for you all right so once you",
    "start": "2751720",
    "end": "2759970"
  },
  {
    "text": "have that service then you can use it to do invoke a sink the the generic",
    "start": "2759970",
    "end": "2765850"
  },
  {
    "text": "parameter is the type of the return value that you want to get back from the JavaScript world and then the first thing you pass is which function do you",
    "start": "2765850",
    "end": "2771730"
  },
  {
    "text": "want to call and this is basically like a dot separated path relative to the the global Windows object in JavaScript land",
    "start": "2771730",
    "end": "2778780"
  },
  {
    "text": "and then you just pass whatever done at parameters you want to pass into into JavaScript in this case it's even taking",
    "start": "2778780",
    "end": "2785170"
  },
  {
    "text": "a dotnet object so we're wrapping it in a reference handing it off to JavaScript so that JavaScript code can then call",
    "start": "2785170",
    "end": "2791980"
  },
  {
    "text": "back into dotnet so we can go both ways you can call into JavaScript and even have JavaScript call you back that's",
    "start": "2791980",
    "end": "2797440"
  },
  {
    "text": "useful for things like callbacks and events that are happening in the JavaScript world so let's look at this",
    "start": "2797440",
    "end": "2802540"
  },
  {
    "text": "particular function I think it's I had",
    "start": "2802540",
    "end": "2809980"
  },
  {
    "text": "to move it over here so in our group folder somewhere here demos",
    "start": "2809980",
    "end": "2818290"
  },
  {
    "text": "it's like demos show prompt there's the JavaScript function that we're calling to show our prompt and this is another",
    "start": "2818290",
    "end": "2824080"
  },
  {
    "text": "JavaScript for some some other parts of the application so you can write any JavaScript you want anything that you can do in JavaScript you can do from",
    "start": "2824080",
    "end": "2830350"
  },
  {
    "text": "from razor components oh yeah the other thing I want to show here was template",
    "start": "2830350",
    "end": "2836770"
  },
  {
    "start": "2833000",
    "end": "2888000"
  },
  {
    "text": "components so here's an interesting feature with with with components if you if you have a component but you need to",
    "start": "2836770",
    "end": "2842650"
  },
  {
    "text": "pass it not just like a static parameter but you actually want to pass it some like a block of UI to say you know when",
    "start": "2842650",
    "end": "2849670"
  },
  {
    "text": "you render yourself here's how I want you to render this particular part you know think about like grids or list",
    "start": "2849670",
    "end": "2854920"
  },
  {
    "text": "views where you want to say for each item in this list or for each cell in this grid this is the UI I want to put",
    "start": "2854920",
    "end": "2859960"
  },
  {
    "text": "there you can do that with with racer components - and those are called template components so this dialog is",
    "start": "2859960",
    "end": "2867160"
  },
  {
    "text": "it's a little dialog that pops up and it has a bunch of UI elements like there's this block of UI at the bottom for what actions you want to happen and then",
    "start": "2867160",
    "end": "2873550"
  },
  {
    "text": "there's the body of the dialogue let's look and see how that that component is implemented let's go to I think it's",
    "start": "2873550",
    "end": "2883150"
  },
  {
    "text": "super dialogue shared yeah this one okay",
    "start": "2883150",
    "end": "2889570"
  },
  {
    "start": "2888000",
    "end": "2930000"
  },
  {
    "text": "so here's super dialogue component and it takes some normal parameters like before like it's just taking the title",
    "start": "2889570",
    "end": "2894700"
  },
  {
    "text": "for the the dialogue box but it takes these other interesting things - it takes these parameters that are of type",
    "start": "2894700",
    "end": "2900130"
  },
  {
    "text": "render fragment and render fragment of T that's basically a type that captures that snippet of UI that the component",
    "start": "2900130",
    "end": "2906940"
  },
  {
    "text": "can then use to render some wherever it wants on the page so in this case it's capturing a parameter for the body",
    "start": "2906940",
    "end": "2912580"
  },
  {
    "text": "content and rendering that in a particular spot and because it's a render fragment of T you can even pass some data to the the template and have",
    "start": "2912580",
    "end": "2919840"
  },
  {
    "text": "it haven't used to render and then we have just a normal render fragment without any parameters that we're",
    "start": "2919840",
    "end": "2925270"
  },
  {
    "text": "rendering for the the buttons content at the bottom to see how that is then used",
    "start": "2925270",
    "end": "2930430"
  },
  {
    "start": "2930000",
    "end": "2970000"
  },
  {
    "text": "when you call that super dialogue here's how we're specifying the body content and there's that block of UI that were",
    "start": "2930430",
    "end": "2937510"
  },
  {
    "text": "that we're saying which should be rendered into the middle of the dialogue that was a this section here hurry up so",
    "start": "2937510",
    "end": "2947860"
  },
  {
    "text": "you know item and then it's using that parameter to figure out what its name is and whether it's in stock and then at",
    "start": "2947860",
    "end": "2953350"
  },
  {
    "text": "the bottom the the the set of actions the set of buttons that are at the bottom are again being passed in to the component to say this is these are the",
    "start": "2953350",
    "end": "2959590"
  },
  {
    "text": "buttons that I want you to put at the the bottom of the UI so that's template component so you can build some pretty high-level advanced components with this",
    "start": "2959590",
    "end": "2966040"
  },
  {
    "text": "model",
    "start": "2966040",
    "end": "2968370"
  },
  {
    "start": "2970000",
    "end": "3039000"
  },
  {
    "text": "okay now let's talk a little bit about scale with the razor components model",
    "start": "2974700",
    "end": "2981130"
  },
  {
    "text": "remember we have this signal our connection that we have to maintain in order for the UI to be updated in order",
    "start": "2981130",
    "end": "2986770"
  },
  {
    "text": "for it to be functional now maintaining lots of concurrent connections to your",
    "start": "2986770",
    "end": "2992590"
  },
  {
    "text": "application it's actually bit of a tricky problem it's not super easy to do there are patterns you could set it up",
    "start": "2992590",
    "end": "2998620"
  },
  {
    "text": "yourself but there's a bunch of considerations when you have to scale out to a whole bunch of connections it's",
    "start": "2998620",
    "end": "3003720"
  },
  {
    "text": "non-trivial fortunately azor actually provides a service called the azure",
    "start": "3003720",
    "end": "3009180"
  },
  {
    "text": "signal our service that makes it pretty much trivial to handle thousands of concurrent connections I want to show",
    "start": "3009180",
    "end": "3015900"
  },
  {
    "text": "you that really quick because that's a useful thing when you're building a razor components application so let me which one is this one this is",
    "start": "3015900",
    "end": "3022940"
  },
  {
    "text": "too many vs is open now let's close a couple of them before I run out of memory we want to do the azure signal",
    "start": "3022940",
    "end": "3034980"
  },
  {
    "text": "our razor component demo this way alright so this app done a little bit of",
    "start": "3034980",
    "end": "3043140"
  },
  {
    "text": "tweaking to it it has a counter component my goal with this app is I wanted to SEP an app where there's a bit",
    "start": "3043140",
    "end": "3049500"
  },
  {
    "text": "of a story behind this I I sometimes go and see what my kids are doing on the computer you know the Mike my kids love",
    "start": "3049500",
    "end": "3055350"
  },
  {
    "text": "to play on the computer playing the games or whatever and I figure it's it's good every now then to peek at what",
    "start": "3055350",
    "end": "3060450"
  },
  {
    "text": "they're actually up to and I noticed one day that they were playing this game where there was like this I don't know",
    "start": "3060450",
    "end": "3066120"
  },
  {
    "text": "there's like a platform and there's this monster or creature on it and they're just tapping this screen as fast as they",
    "start": "3066120",
    "end": "3071340"
  },
  {
    "text": "can like this I'm like what are you doing like Daddy we're playing a game I'm like I'm sorry I was like okay and I",
    "start": "3071340",
    "end": "3077370"
  },
  {
    "text": "watched it for a while I was like so it looks like the whole point of this game is you just tap the screen as fast as you can and they're like yeah it's great",
    "start": "3077370",
    "end": "3083550"
  },
  {
    "text": "super fun I'm like so I was like I have to put a stop to this so I got forbade",
    "start": "3083550",
    "end": "3089070"
  },
  {
    "text": "this game for being played ever again but you know it was intriguing to me how",
    "start": "3089070",
    "end": "3094230"
  },
  {
    "text": "compelling this was to them that you know button I can just mash this button as fast as I can and that's that's a game so in this in this app what I did",
    "start": "3094230",
    "end": "3101970"
  },
  {
    "text": "is I took the the counter component okay this is the counter component and it's the has down here at the bottom it still has",
    "start": "3101970",
    "end": "3109670"
  },
  {
    "text": "the account okay and we're checking",
    "start": "3109670",
    "end": "3115370"
  },
  {
    "text": "doing some time checking to make sure we don't you know go outside of int max but it's gonna increment the count every",
    "start": "3115370",
    "end": "3120590"
  },
  {
    "text": "time the button is pressed it was kind of fun writing this particular demo because it seemed like I was I was going",
    "start": "3120590",
    "end": "3126140"
  },
  {
    "text": "out of my way to violate every architectural guidance that our architect on the asp.net team David",
    "start": "3126140",
    "end": "3131750"
  },
  {
    "text": "Fowler recommend recommends like I have a you know some static state up here now for the for the current count you know",
    "start": "3131750",
    "end": "3137990"
  },
  {
    "text": "static so I can just see David Fowler pulling out his hair and then we also start a little polling loop for to just",
    "start": "3137990",
    "end": "3146150"
  },
  {
    "text": "loop over the UI and then check basically say that the state of their component has changed and that's so that",
    "start": "3146150",
    "end": "3152360"
  },
  {
    "text": "the component will send UI updates periodically like five times a second so that's so that as you click the button",
    "start": "3152360",
    "end": "3157670"
  },
  {
    "text": "every time you click the button normally the page will refresh but let's say something else changed that static state",
    "start": "3157670",
    "end": "3163370"
  },
  {
    "text": "well then you need something to let the app know that it needs to update the UI we don't actually have a push model to",
    "start": "3163370",
    "end": "3168800"
  },
  {
    "text": "like all the connected clients with razor components we do use signal R but it's basically your connection for your client so this is a poor man's way to",
    "start": "3168800",
    "end": "3176120"
  },
  {
    "text": "have the UI sort of update automatically all right so that was the app if we run it you can just mash on the counter",
    "start": "3176120",
    "end": "3182210"
  },
  {
    "text": "component and then it displays a little bit of you are now I wanted to publish this to Azure and have everyone in the",
    "start": "3182210",
    "end": "3187400"
  },
  {
    "text": "room be able to mash on this and I haven't I have not stress tested this at all so this this this demo may fail",
    "start": "3187400",
    "end": "3192590"
  },
  {
    "text": "horribly but I did know at least that I wanted to support a whole bunch of concurrent connections so I enabled the",
    "start": "3192590",
    "end": "3200660"
  },
  {
    "text": "azure signal our service for this application that was pretty simple I just had to add a single package that's",
    "start": "3200660",
    "end": "3207260"
  },
  {
    "text": "this Microsoft Azure signal our package so just go to new get and add that and",
    "start": "3207260",
    "end": "3212270"
  },
  {
    "text": "then in my startup file I added signal R and the azure signal",
    "start": "3212270",
    "end": "3217490"
  },
  {
    "text": "our services to the application and then down below I told Razor components hey",
    "start": "3217490",
    "end": "3222980"
  },
  {
    "text": "like don't don't don't use Sigmar with don't take care of the hub by yourself",
    "start": "3222980",
    "end": "3229430"
  },
  {
    "text": "and that really should say components hub we're gets a just one of those renames we haven't gotten to yet don't don't use the outer box a hug I'm going",
    "start": "3229430",
    "end": "3238100"
  },
  {
    "text": "to set that up myself because I want to do something special to set up the agile signal our service and so over here we say use as your",
    "start": "3238100",
    "end": "3244130"
  },
  {
    "text": "signal our and then we set up the the hub that's used by Razer components manual ok",
    "start": "3244130",
    "end": "3249140"
  },
  {
    "text": "and then there's a connection string I had to put in config but it's basically you go to the portal you copy a string",
    "start": "3249140",
    "end": "3254539"
  },
  {
    "text": "and put it in your app settings alright and then we just publish this to to Azure so I've already done that and",
    "start": "3254539",
    "end": "3261440"
  },
  {
    "start": "3256000",
    "end": "3341000"
  },
  {
    "text": "let's see if this works I have no idea if this is gonna work this might feel horribly so that's good aka m/s counter",
    "start": "3261440",
    "end": "3267589"
  },
  {
    "text": "mash I think is what I put it at it's gonna load ok so then you click the",
    "start": "3267589",
    "end": "3273200"
  },
  {
    "text": "button so if everyone wants to try this might not work at all but uh oh my",
    "start": "3273200",
    "end": "3278210"
  },
  {
    "text": "goodness it's counting ok what's working is it working I'm counting sorry sorry yeah so if",
    "start": "3278210",
    "end": "3287450"
  },
  {
    "text": "people missed it it's a KA dot M s slash counter mash",
    "start": "3287450",
    "end": "3293710"
  },
  {
    "text": "counter mash and see that ok let's see let's see if this is gonna like blow up the Apple II when we hit 100 we're 500",
    "start": "3293710",
    "end": "3300769"
  },
  {
    "text": "oh it's going fast keep going let's go for let's go for max int but you get the",
    "start": "3300769",
    "end": "3308690"
  },
  {
    "text": "idea so I don't know how many people who are connected but we're having lots of connections now that are going to this application and updating that count and",
    "start": "3308690",
    "end": "3315229"
  },
  {
    "text": "that's done what's that it's not loading Oh blame it on the network and that's",
    "start": "3315229",
    "end": "3324319"
  },
  {
    "text": "through the beauty of the azure signal our service so I look at my asher bill later as that continues to go",
    "start": "3324319",
    "end": "3332119"
  },
  {
    "text": "that's the counter mash app maybe I'll put some ads on there and show it to my kids and make there to my kids friends",
    "start": "3332119",
    "end": "3338869"
  },
  {
    "text": "to make lots of map makes lots of money ok we're almost out of time I think what do we ask we uh yeah we got it's like",
    "start": "3338869",
    "end": "3345349"
  },
  {
    "start": "3341000",
    "end": "3425000"
  },
  {
    "text": "four minutes so the last thing I want to show is you know the potential of Razer components even beyond what we've",
    "start": "3345349",
    "end": "3350839"
  },
  {
    "text": "already seen so we've seen Razer components running on the server we've seen a little bit of Razer components",
    "start": "3350839",
    "end": "3356150"
  },
  {
    "text": "running and on the client on web assembly there's gonna be a lot more of that later today that's these stocks that I highly encourage you to attend",
    "start": "3356150",
    "end": "3362509"
  },
  {
    "text": "but Razer components like I said they can pretty much be run anywhere so one of the experiments that we did was",
    "start": "3362509",
    "end": "3368329"
  },
  {
    "text": "running Razer components with an electron tap so what if you",
    "start": "3368329",
    "end": "3373790"
  },
  {
    "text": "could write your UI using dotnet c-sharp and then have that drive the electron",
    "start": "3373790",
    "end": "3379849"
  },
  {
    "text": "shell and now you basically have a cross-platform desktop app written with dotnet would that be cool so the way",
    "start": "3379849",
    "end": "3386750"
  },
  {
    "text": "that looks is something like this in this case you can probably imagine this happening one of two ways you can",
    "start": "3386750",
    "end": "3392690"
  },
  {
    "text": "imagine the Razr components actually running on dotnet on webassembly directly in the chromium shell that",
    "start": "3392690",
    "end": "3399410"
  },
  {
    "text": "makes up electron but that's not actually how the the sample I'm going to show you works in R in this case of the",
    "start": "3399410",
    "end": "3405559"
  },
  {
    "text": "Razr components are actually running in a dotnet core process which is then talking to electron over an IPC channel",
    "start": "3405559",
    "end": "3412309"
  },
  {
    "text": "so you actually have full net the full performance and all the functionality of dotnet core that's then driving an",
    "start": "3412309",
    "end": "3418880"
  },
  {
    "text": "electron application that's how this sample works and I'll just show you that one really quickly before we wrap up talk a little bit",
    "start": "3418880",
    "end": "3425960"
  },
  {
    "start": "3425000",
    "end": "3600000"
  },
  {
    "text": "about roadmap so this sample is actually publicly available on github it's on Steve's github account so Steve",
    "start": "3425960",
    "end": "3432319"
  },
  {
    "text": "Sanderson MS plays electron experiment sample you can find that on github and I'm just gonna dotnet run this",
    "start": "3432319",
    "end": "3438980"
  },
  {
    "text": "application dotnet run if you're",
    "start": "3438980",
    "end": "3446930"
  },
  {
    "text": "familiar with dotnet core that's how you start up a dotnet core process which is what it's doing and then that dominant core process is firing off on electron",
    "start": "3446930",
    "end": "3453230"
  },
  {
    "text": "process which it sets up an IPC channel with and there we go alright so this now",
    "start": "3453230",
    "end": "3458869"
  },
  {
    "text": "is not a browser this is a lecture on application but with the same UI that you saw previously so this application",
    "start": "3458869",
    "end": "3465290"
  },
  {
    "text": "is now a cross-platform desktop app that you can run on Windows Mac or Linux using web technologies and dotnet so it",
    "start": "3465290",
    "end": "3472700"
  },
  {
    "text": "just gives you an idea of some of the things that are you know potentially could come down the road with the Razr components model and you're welcome to",
    "start": "3472700",
    "end": "3478369"
  },
  {
    "text": "go download that sample and try it out",
    "start": "3478369",
    "end": "3482078"
  },
  {
    "text": "ok last little bit is roadmap like when is all this stuff coming when can you",
    "start": "3484000",
    "end": "3489530"
  },
  {
    "text": "actually use it you know for a long time the story there was it's experimental don't put it in production I know you're",
    "start": "3489530",
    "end": "3495710"
  },
  {
    "text": "doing it anyway but don't you're not supposed to put it in production you know we're not sure how the where this is",
    "start": "3495710",
    "end": "3501069"
  },
  {
    "text": "gonna go but that this story not with Razer components is different Razer components is shipping in dotnet core 3",
    "start": "3501069",
    "end": "3507670"
  },
  {
    "text": "oh it's already in preview 2 that's the first preview it showed up with if you have preview 1 that's not good enough you got to go get preview 2 and we're",
    "start": "3507670",
    "end": "3514720"
  },
  {
    "text": "gonna continue working on it and iterating on the model throughout the dotnet course Ryo release when Dominic Horace Rio ships",
    "start": "3514720",
    "end": "3520000"
  },
  {
    "text": "you have now a stable release of Razer components that you can use and put in production and it'll be fully supported",
    "start": "3520000",
    "end": "3525760"
  },
  {
    "text": "because the Razer component model is being shared with blazer we will ship updates to blazer with each dotnet core",
    "start": "3525760",
    "end": "3533440"
  },
  {
    "text": "3 all updates so we just shipped preview - I think we're shooting for probably early next week to have the next blazer",
    "start": "3533440",
    "end": "3539859"
  },
  {
    "text": "update blazer 0.8 is when we hope to get that out and then have with when preview 3 if dotnet course Rio comes out will",
    "start": "3539859",
    "end": "3546069"
  },
  {
    "text": "expect to have another blazer update now we don't expect actually blazer to ship with Dona course Rio we expect it to",
    "start": "3546069",
    "end": "3552760"
  },
  {
    "text": "ship sometime later and that's the part that's still not known we do intend to ship it we just don't have a concrete",
    "start": "3552760",
    "end": "3558490"
  },
  {
    "text": "timeframe and roadmap for that quite yet as soon as we do we will let you know and I will have a huge party that's",
    "start": "3558490",
    "end": "3564490"
  },
  {
    "text": "gonna be super exciting so that's that's the timeframe that we're looking at when is dotnet core 3 o going to actually",
    "start": "3564490",
    "end": "3569560"
  },
  {
    "text": "ship I think we're looking probably in the fall is when that will stabilize if you've been following that release the",
    "start": "3569560",
    "end": "3575710"
  },
  {
    "text": "big work item there is that we're bringing desktop support to dotnet course REO support for WinForms and WPF",
    "start": "3575710",
    "end": "3582880"
  },
  {
    "text": "they're working really hard to try to get all the designers working and that's they that's a lot of work so we just have to see how long that takes but it's",
    "start": "3582880",
    "end": "3589240"
  },
  {
    "text": "looking like maybe in the fall is when that will go out so here's all the stuff that we saw with Razer components we saw",
    "start": "3589240",
    "end": "3595150"
  },
  {
    "text": "parameters and event handling and data binding and dependency injection routing I think we almost got through everything",
    "start": "3595150",
    "end": "3600760"
  },
  {
    "text": "here I think we didn't see cascading parameters so there's still more stuff that you can go to the docks and check out if you want to learn more make sure",
    "start": "3600760",
    "end": "3607270"
  },
  {
    "text": "you download and install the the SDK so you can try it out you will need the new version of Visual Studio it doesn't work",
    "start": "3607270",
    "end": "3613210"
  },
  {
    "text": "in 2017 the tooling is built in to 2019 here's a bunch of additional resources",
    "start": "3613210",
    "end": "3618640"
  },
  {
    "text": "if you want to learn more all the code is in the main asp.net core repo that's for both blazer and Razer components the",
    "start": "3618640",
    "end": "3625540"
  },
  {
    "text": "docks right now I'd recommend going to blazer dotnet we're right now in the process of moving all the components specific stuff into the main a spinet",
    "start": "3625540",
    "end": "3632230"
  },
  {
    "text": "core docks we taught a workshop earlier this week on using razor components in blazer and",
    "start": "3632230",
    "end": "3638730"
  },
  {
    "text": "I it's a it's a public github repo that you're welcome to go take a look at we built a cool Pizza Store app if you want",
    "start": "3638730",
    "end": "3645509"
  },
  {
    "text": "to try out the workshop that's at AKMs slash believes our workshop the community page again for if you want to",
    "start": "3645509",
    "end": "3651299"
  },
  {
    "text": "get component libraries or JavaScript Interop libraries and by all means please join the conversation on get er",
    "start": "3651299",
    "end": "3656460"
  },
  {
    "text": "now don't miss Steve's talk and just like you know a little bit later today",
    "start": "3656460",
    "end": "3661470"
  },
  {
    "text": "Get Set what 140 140 in room one in room one if it's what I think it is now now",
    "start": "3661470",
    "end": "3666930"
  },
  {
    "text": "for those of you who don't remember like it was at an NBC just like this that blazer was born and you know it was it",
    "start": "3666930",
    "end": "3674549"
  },
  {
    "text": "was a complete surprise like like Steve was with like pregnant with this blazer baby and he didn't tell anybody about it",
    "start": "3674549",
    "end": "3681269"
  },
  {
    "text": "was it like I was talking to Richard Campbell of dotnet rocks and he said he was there and saw David Fowler who's you",
    "start": "3681269",
    "end": "3688019"
  },
  {
    "text": "know architect on our team when Steve first show this and he said that David had to like hold in his brain because it",
    "start": "3688019",
    "end": "3693359"
  },
  {
    "text": "was blowing up because he couldn't believe what he was seeing so who knows what we're going to see in Steve's talk later today I highly encourage you to go",
    "start": "3693359",
    "end": "3700019"
  },
  {
    "text": "if he asks you why so many people are there you can just tell them well well Steve we heard that you are expecting to",
    "start": "3700019",
    "end": "3706890"
  },
  {
    "text": "show us something great and that's all I got for you today thank you for being here",
    "start": "3706890",
    "end": "3713838"
  },
  {
    "text": "there's some green card green cards just lots of green cards out there on the tables and thank you everyone for being",
    "start": "3724329",
    "end": "3730760"
  },
  {
    "text": "I'm happy to stick around to answer any questions that you might have",
    "start": "3730760",
    "end": "3734890"
  }
]