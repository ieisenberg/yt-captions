[
  {
    "text": "all right morning everyone how are you excellent thank",
    "start": "10070",
    "end": "15210"
  },
  {
    "text": "for coming in this early 9 a.m. on a conference not day 1 is pretty early so",
    "start": "15210",
    "end": "21360"
  },
  {
    "text": "I appreciate you coming in so today we're going to talk about pragmatic DevOps and the how and why of",
    "start": "21360",
    "end": "28110"
  },
  {
    "text": "that so my name is Damian Brady I work for Microsoft the people with the",
    "start": "28110",
    "end": "34710"
  },
  {
    "text": "pinball machine out there I had nothing to do with that pinball machine but it's very cool should go and have a play and I've been told have a play before day 3",
    "start": "34710",
    "end": "42540"
  },
  {
    "text": "because day 3 it starts becoming really smart and so you'll lose so I work from",
    "start": "42540",
    "end": "48989"
  },
  {
    "text": "Microsoft as a cloud advocate and I talk about DevOps a lot and so that's what we're going to talk about today but this",
    "start": "48989",
    "end": "55649"
  },
  {
    "text": "is kind of a combination of a whole bunch of talks that I often give around the ideas behind DevOps and how to",
    "start": "55649",
    "end": "62550"
  },
  {
    "text": "actually implement it in organizations where it's a little bit harder um so this is pragmatic DevOps and I just want",
    "start": "62550",
    "end": "69060"
  },
  {
    "text": "to talk about that word for a second pragmatic so pragmatic generally means",
    "start": "69060",
    "end": "74940"
  },
  {
    "text": "you know dealing with the reality of the situation right now as opposed to theories and you know the way that",
    "start": "74940",
    "end": "81420"
  },
  {
    "text": "things should work right it's about looking at what this situation is and reacting to that but does that mean that",
    "start": "81420",
    "end": "89520"
  },
  {
    "text": "we shouldn't think about the theory at all and my premise here and my idea here is that we should absolutely know the",
    "start": "89520",
    "end": "96659"
  },
  {
    "text": "theory behind DevOps and what we're trying to do and why we're trying to do it because otherwise you can't be",
    "start": "96659",
    "end": "102750"
  },
  {
    "text": "effective when you try to look at pragmatic solutions so in short you can't be pragmatic without knowing what",
    "start": "102750",
    "end": "110100"
  },
  {
    "text": "you're trying to achieve and why you're trying to achieve it my way of example",
    "start": "110100",
    "end": "115170"
  },
  {
    "text": "my wife is an anesthetist or anesthesiologist if you're American watching this later she's an anesthetist so every single day",
    "start": "115170",
    "end": "122340"
  },
  {
    "text": "she has a lot of decisions to make around patients who are going into",
    "start": "122340",
    "end": "127920"
  },
  {
    "text": "surgery and it's really common for her to have to make pragmatic decisions",
    "start": "127920",
    "end": "133200"
  },
  {
    "text": "about you know whether this person is safe to bring into surgery or to have this procedure or to continue maybe they",
    "start": "133200",
    "end": "141360"
  },
  {
    "text": "haven't fasted properly yeah they've eaten in the last you know 24 hours and",
    "start": "141360",
    "end": "146520"
  },
  {
    "text": "they really shouldn't have or maybe they have not stopped a drug that they were supposed to stop before going in or maybe they",
    "start": "146520",
    "end": "153970"
  },
  {
    "text": "just have a condition that nobody thought was relevant but actually has some implications cardiovascular",
    "start": "153970",
    "end": "159990"
  },
  {
    "text": "implications and things like that so she has to look at all of these things that the real world like the situation right",
    "start": "159990",
    "end": "166270"
  },
  {
    "text": "now has served up and then weigh up all the pros and cons and the risks and the",
    "start": "166270",
    "end": "171820"
  },
  {
    "text": "rewards and decide whether that person should go into surgery or not but more than that also other things that she can",
    "start": "171820",
    "end": "178150"
  },
  {
    "text": "do to still solve the problem she needs to solve in order to get this person under general anaesthetic safely and",
    "start": "178150",
    "end": "185019"
  },
  {
    "text": "back out safely as well so she can't do that without knowing how all of this",
    "start": "185019",
    "end": "191050"
  },
  {
    "text": "stuff works she has a really intricate knowledge of the whole cardiovascular system of drug interactions and what",
    "start": "191050",
    "end": "197050"
  },
  {
    "text": "they actually do but importantly all of these guidelines like make sure you donate for 24 hours beforehand make sure",
    "start": "197050",
    "end": "204790"
  },
  {
    "text": "you stop this particular drug before surgery blood thinners like warfarin and things like that a great example of that",
    "start": "204790",
    "end": "211269"
  },
  {
    "text": "she has to know how they work how you can mitigate that and in the real world",
    "start": "211269",
    "end": "216640"
  },
  {
    "text": "can we continue and do something to to manage that risk but still meet the aims",
    "start": "216640",
    "end": "221799"
  },
  {
    "text": "that we that we need to make that we need to meet she studied for 16 years",
    "start": "221799",
    "end": "227560"
  },
  {
    "text": "post school to be fully qualified as a nanny status right she was doing more",
    "start": "227560",
    "end": "233230"
  },
  {
    "text": "study in a week than I have done in my entire career I'm not exaggerating there",
    "start": "233230",
    "end": "238989"
  },
  {
    "text": "either like she was she would come home from work after an eight-hour day and study for four hours five days a week",
    "start": "238989",
    "end": "244360"
  },
  {
    "text": "and then study for 10 on the weekends for months and months and months just to pass these exams so her day job what she",
    "start": "244360",
    "end": "251920"
  },
  {
    "text": "does every single day is making pragmatic decisions but she needs that underlying understanding of how the",
    "start": "251920",
    "end": "258489"
  },
  {
    "text": "theory works what these guidelines are there for and what they're trying to achieve in order to do our job so I'm",
    "start": "258489",
    "end": "266410"
  },
  {
    "text": "going to talk a bit about theory and what we're trying to achieve and why I'm going to I'm going to lean on a few different things today",
    "start": "266410",
    "end": "272410"
  },
  {
    "text": "and I'm as I go through and I start talking about these pragmatic things that you should do I'm gonna try as hard as I can to tie it back to these",
    "start": "272410",
    "end": "278979"
  },
  {
    "text": "theories as well so even if you're not in that exact exact situation where you can apply these things directly at the very least you",
    "start": "278979",
    "end": "285860"
  },
  {
    "text": "can say well I know what we're trying to achieve here maybe in my situation I can make some changes think pragmatically",
    "start": "285860",
    "end": "291350"
  },
  {
    "text": "and actually solve the same problems so what I am going to do today and they give you recommendations ideas practices",
    "start": "291350",
    "end": "297770"
  },
  {
    "text": "strategies things like that and I'm going to tie those back to these guiding principles but I'm not going to tell you",
    "start": "297770",
    "end": "303890"
  },
  {
    "text": "to use a specific product or technology that is not really part of this talk I work on Microsoft you should use our",
    "start": "303890",
    "end": "309830"
  },
  {
    "text": "stuff but if you don't great cool I don't care I don't get paid if you use",
    "start": "309830",
    "end": "314870"
  },
  {
    "text": "stuff I don't get paid specifically if you use more of our stuff so you use",
    "start": "314870",
    "end": "319910"
  },
  {
    "text": "whatever works for you and I'm also not going to give you any silver bullets I'm not going to say here's a problem that",
    "start": "319910",
    "end": "325310"
  },
  {
    "text": "gets completely solved if you do this thing all right that's not how DevOps works in fact it's not really how anything works so no",
    "start": "325310",
    "end": "332090"
  },
  {
    "text": "silver bullets the three pieces of theory or background that I am going to",
    "start": "332090",
    "end": "338020"
  },
  {
    "text": "kind of base this whole talk on are these three we're going to look at Microsoft's DevOps definition it's one",
    "start": "338020",
    "end": "345530"
  },
  {
    "text": "of the better definitions of DevOps that I've seen and then we're going to look at a couple of things specifically from",
    "start": "345530",
    "end": "350540"
  },
  {
    "text": "Jean Kim who is the author of the Phoenix project and the Unicorn project which is coming out and a couple of",
    "start": "350540",
    "end": "356090"
  },
  {
    "text": "other books as well I just find his stuff really easy to digest and very kind of to the point and",
    "start": "356090",
    "end": "363440"
  },
  {
    "text": "clear about what the goals are so he's talked about the three ways which underpins the Phoenix project book and",
    "start": "363440",
    "end": "370250"
  },
  {
    "text": "the five ideals which is the ideas behind the unicorn project which is",
    "start": "370250",
    "end": "376040"
  },
  {
    "text": "coming out in about a month and a bit as well if you didn't see as well I mentioned on Twitter that there's",
    "start": "376040",
    "end": "382550"
  },
  {
    "text": "there's all of these books that I've got at the end which I'd highly recommend reading I'm intending to buy a few of",
    "start": "382550",
    "end": "388880"
  },
  {
    "text": "those for people like two or three of them if they will have good questions on the way through I have no plan really so",
    "start": "388880",
    "end": "394940"
  },
  {
    "text": "just ask questions when they come up so let's look at the definition of DevOps",
    "start": "394940",
    "end": "400370"
  },
  {
    "text": "so Microsoft defines DevOps as the union of people process and products to enable continuous delivery of value to our",
    "start": "400370",
    "end": "406100"
  },
  {
    "text": "end-users the most important word here is the highlighted one which is value right DevOps is not about",
    "start": "406100",
    "end": "414080"
  },
  {
    "text": "features delivering bug fixes delivering infrastructure as code scalability stuff",
    "start": "414080",
    "end": "420139"
  },
  {
    "text": "like that those are all worthwhile aims but the goal is to deliver value on a continuous basis that means if you",
    "start": "420139",
    "end": "427970"
  },
  {
    "text": "release a new feature and everyone hates it you have not delivered value right so",
    "start": "427970",
    "end": "433250"
  },
  {
    "text": "you need to be able to measure what's actually going into production and how people are using it we'll talk a bit more about that then a bit about that in",
    "start": "433250",
    "end": "439699"
  },
  {
    "text": "a little bit so this is the definition I'm going to talk about delivering value a lot today and what and how we're",
    "start": "439699",
    "end": "447199"
  },
  {
    "text": "actually doing these things and why we're doing them so that we are delivering value the three ways is Jean",
    "start": "447199",
    "end": "453800"
  },
  {
    "text": "Kim's kind of three ways of thinking about DevOps these are kind of principles for the principles underlying",
    "start": "453800",
    "end": "459860"
  },
  {
    "text": "everything that we do in DevOps so the first way is systems thinking and this is kind of the idea of the business to",
    "start": "459860",
    "end": "466520"
  },
  {
    "text": "the customer or development to ops you're making changes and that that flow in that stream from doing the work",
    "start": "466520",
    "end": "472759"
  },
  {
    "text": "through to running that work and delivering value to the customer right the idea here is to make sure that that",
    "start": "472759",
    "end": "479719"
  },
  {
    "text": "flow that stream of work is as efficient and effective as possible no no barriers",
    "start": "479719",
    "end": "487580"
  },
  {
    "text": "in the way or as few barriers in the way as possible but getting that flow from one end to the other to be as fast as",
    "start": "487580",
    "end": "492800"
  },
  {
    "text": "possible the second way which is is amplifying feedback loops and it kind of",
    "start": "492800",
    "end": "498620"
  },
  {
    "text": "is coming back the other way right it's the idea of when something is wrong or",
    "start": "498620",
    "end": "504080"
  },
  {
    "text": "if something if you want feedback about something having that feedback loop be really effective and the key here is",
    "start": "504080",
    "end": "510259"
  },
  {
    "text": "being able to tie together the cause and effect so we all know DevOps people talk",
    "start": "510259",
    "end": "516560"
  },
  {
    "text": "about how it's really important that you continuously deliver changes so you deliver small changes continuously right",
    "start": "516560",
    "end": "523010"
  },
  {
    "text": "to production and the reason is if you have to wait six months before getting this feedback of what's gone into",
    "start": "523010",
    "end": "528740"
  },
  {
    "text": "production you lose the cause and effect you don't know what caused the problem you just you would seeing now because",
    "start": "528740",
    "end": "535190"
  },
  {
    "text": "there's six months worth of work that's just gone into production what's failed well you don't really know",
    "start": "535190",
    "end": "540199"
  },
  {
    "text": "something in that six months failed so finding these feedback loops and amplifying the ones that matter",
    "start": "540199",
    "end": "546900"
  },
  {
    "text": "rather than just amplifying logs and and emails being sent to your inbox saying these things are broken right amplifying",
    "start": "546900",
    "end": "554190"
  },
  {
    "text": "the ones that matter so that you can actually get this cause and effect and react very quickly so that's the second",
    "start": "554190",
    "end": "559230"
  },
  {
    "text": "way and the third way is having a culture of continual experimentation and learning and this is the idea that it",
    "start": "559230",
    "end": "565800"
  },
  {
    "text": "should be okay to try things and as long as that feedback loop is effective you'll be able to react very quickly if",
    "start": "565800",
    "end": "573300"
  },
  {
    "text": "you don't have a culture that allows you to experiment then you're not going to get better beyond a certain point and",
    "start": "573300",
    "end": "580339"
  },
  {
    "text": "we'll come back to that in a little bit as well so those are the three ways right system's thinking amplifying",
    "start": "580339",
    "end": "586290"
  },
  {
    "text": "feedback loops and can the culture of continual experimentation and learning so let's talk about the five ideals and",
    "start": "586290",
    "end": "593460"
  },
  {
    "text": "this is a little bit more focused on development of software I'm sorry before I go ahead the Phoenix project is a",
    "start": "593460",
    "end": "599630"
  },
  {
    "text": "novel that kind of explores those three ideas really really really well it's a",
    "start": "599630",
    "end": "605790"
  },
  {
    "text": "novel as well like a story it's not a text book it's extremely readable I",
    "start": "605790",
    "end": "611640"
  },
  {
    "text": "actually enjoyed reading it which is weird for a book about DevOps but I",
    "start": "611640",
    "end": "617640"
  },
  {
    "text": "would highly recommend having a look at that one too there'll be links as well to all of the stuff I talked about at",
    "start": "617640",
    "end": "624029"
  },
  {
    "text": "the end if you don't want to take photos on the way through there'll be one slide that'll have have a good link all right the five ideals it's a bit",
    "start": "624029",
    "end": "630959"
  },
  {
    "text": "more about software development in general so the first idea is the idea of",
    "start": "630959",
    "end": "636750"
  },
  {
    "text": "local locality and simplicity and the idea really here is if you want to deliver value as an engineer as anybody",
    "start": "636750",
    "end": "643800"
  },
  {
    "text": "doing anything you should be able to do that from start to finish the locality",
    "start": "643800",
    "end": "649380"
  },
  {
    "text": "should exist such that you can make a change and it gets delivered out to production without you having to wait on",
    "start": "649380",
    "end": "655290"
  },
  {
    "text": "three or four other departments I was talking to somebody literally this morning at breakfast who was who just",
    "start": "655290",
    "end": "662730"
  },
  {
    "text": "got an email saying hey when is this work gonna be finished and she had to reply and say I can't do it yet because",
    "start": "662730",
    "end": "668700"
  },
  {
    "text": "I'm waiting for you to make this change right that's the opposite of locality and simplicity she couldn't do her work",
    "start": "668700",
    "end": "675770"
  },
  {
    "text": "because she was waiting on somebody else to do theirs if it all complex and tied up with other teams",
    "start": "675770",
    "end": "682530"
  },
  {
    "text": "other departments you have to wait for DBAs to run a script you have to wait for infrastructure to spend something up",
    "start": "682530",
    "end": "688350"
  },
  {
    "text": "you don't have locality simplicity as well is even inside your own environment can you just make a change push it out",
    "start": "688350",
    "end": "695370"
  },
  {
    "text": "and see if it works if not if it's really difficult to make changes then you don't have simplicity either so",
    "start": "695370",
    "end": "701640"
  },
  {
    "text": "that's that idea the second one is focus flow and joy so focus and flow kind of",
    "start": "701640",
    "end": "706770"
  },
  {
    "text": "speak for themselves it means that you're able to focus on that delivering that piece of value it's not this",
    "start": "706770",
    "end": "712710"
  },
  {
    "text": "constant yak shaving which is where you you make one change but I actually before I make that change I've got to",
    "start": "712710",
    "end": "718830"
  },
  {
    "text": "change this system over here actually it's not going to deal very well with this change that I just made because of",
    "start": "718830",
    "end": "723930"
  },
  {
    "text": "this underlying database table I got to change that first and oh there's another team over here that's probably going to",
    "start": "723930",
    "end": "729900"
  },
  {
    "text": "be affected by that right you don't have flow you don't have focus then joy kind",
    "start": "729900",
    "end": "735960"
  },
  {
    "text": "of comes out of that if you're able to just sit there who's a developer here just show of hands pretty much everyone",
    "start": "735960",
    "end": "741810"
  },
  {
    "text": "great how many of you have sat there for like three or four hours before just coding and doing some work and getting",
    "start": "741810",
    "end": "748110"
  },
  {
    "text": "something out and then at the end of it you look at your watch and go wow I missed I missed lunch right how good",
    "start": "748110",
    "end": "754260"
  },
  {
    "text": "does that feel right and that is super productive that you've had focus you've",
    "start": "754260",
    "end": "759630"
  },
  {
    "text": "had flow and you've had joy but most importantly you're able to deliver value to the customer really effectively so",
    "start": "759630",
    "end": "766650"
  },
  {
    "text": "let's focus flow and joy the third one is improvement of daily work and this is interesting this is improving your daily",
    "start": "766650",
    "end": "773610"
  },
  {
    "text": "work even at the expense of your daily work so this is a really common idea in",
    "start": "773610",
    "end": "779100"
  },
  {
    "text": "a few different companies Microsoft especially as well Satya Nadella is the",
    "start": "779100",
    "end": "784530"
  },
  {
    "text": "CEO of Microsoft when he came in one of the things he said really early on is if you ever given the choice between a new",
    "start": "784530",
    "end": "791790"
  },
  {
    "text": "feature and improving your daily work or improving the way that your system works",
    "start": "791790",
    "end": "796920"
  },
  {
    "text": "you should choose improvement every single time which is a fascinating way",
    "start": "796920",
    "end": "802080"
  },
  {
    "text": "of treating software right and very counter to the opposite which we see a lot of the time which is no no you don't",
    "start": "802080",
    "end": "808980"
  },
  {
    "text": "have time to do that we need to release features if you are constantly in proving the way that you work such that",
    "start": "808980",
    "end": "816210"
  },
  {
    "text": "you can get local at locality and simplicity focus flow and joy if you're continually improving that means in the",
    "start": "816210",
    "end": "822180"
  },
  {
    "text": "future it'll be much much easier to make changes it'll be much easier to actually deliver value to your customer what's",
    "start": "822180",
    "end": "829440"
  },
  {
    "text": "your end user because you've improved your process it's kind of like sharpening the axe right the good old",
    "start": "829440",
    "end": "835830"
  },
  {
    "text": "story of somebody cutting down trees and getting slower and slower because the axe is blunt somebody says to sharpen",
    "start": "835830",
    "end": "841320"
  },
  {
    "text": "the axe you say oh I don't have time for that I've got to cut down all these trees if they actually improved their",
    "start": "841320",
    "end": "846930"
  },
  {
    "text": "daily work it has flow-on effects and amplifies itself which means that you",
    "start": "846930",
    "end": "852029"
  },
  {
    "text": "you deliver better code you deliver it better so that's improvement of daily work psychological safety and while it",
    "start": "852029",
    "end": "858899"
  },
  {
    "text": "is it's super important to be to be not you know I lost the word it's important",
    "start": "858899",
    "end": "867690"
  },
  {
    "text": "that nobody treats you differently based on your gender or your race or anything like that but psychological safety is a",
    "start": "867690",
    "end": "873630"
  },
  {
    "text": "bit more about whether you have whether you feel safe to raise issues or to make",
    "start": "873630",
    "end": "880650"
  },
  {
    "text": "changes if you think things aren't going well the opposite of this is these situations where something goes wrong",
    "start": "880650",
    "end": "886830"
  },
  {
    "text": "and there's a scapegoat right oh we're gonna actually fire that developer because they were involved in",
    "start": "886830",
    "end": "892830"
  },
  {
    "text": "this project we need to blame someone so they're gone right what that means is",
    "start": "892830",
    "end": "898080"
  },
  {
    "text": "people will bury problems if there is legitimately something wrong or something that can be improved nobody",
    "start": "898080",
    "end": "903690"
  },
  {
    "text": "has the psychological safety to bring that to the fore like to make that improvement or to bring it to people's",
    "start": "903690",
    "end": "909810"
  },
  {
    "text": "attention and that can be super harmful um Toyota which actually get the Toyota as",
    "start": "909810",
    "end": "916110"
  },
  {
    "text": "a company gets talked about a lot in DevOps talks because they they do a lot of this stuff they invented a lot of these ideas they have this thing called",
    "start": "916110",
    "end": "922800"
  },
  {
    "text": "the end on cord so in their manufacturing plant it's a big big pipeline of different people doing small",
    "start": "922800",
    "end": "929010"
  },
  {
    "text": "tasks and then moving on to the next the next phase I'm not doing very well with words at the moment I have a",
    "start": "929010",
    "end": "934170"
  },
  {
    "text": "one-year-old who came with me and it's just me and him if you hear a child screaming out there that's him alright",
    "start": "934170",
    "end": "940160"
  },
  {
    "text": "so I'm a little low on sleep so I'm forgetting words um this end on this end",
    "start": "940160",
    "end": "946290"
  },
  {
    "text": "on cord is better is it single cord that runs over the heads of all of the workers on that on that",
    "start": "946290",
    "end": "951390"
  },
  {
    "text": "production line there it is production line and the idea is if anything goes",
    "start": "951390",
    "end": "956459"
  },
  {
    "text": "wrong or if like there's a defect or a part that's not right or even if they're not keeping up with the the way the",
    "start": "956459",
    "end": "963529"
  },
  {
    "text": "production line is flowing the idea is to pull that end on cord and that alerts somebody and maybe stops the production",
    "start": "963529",
    "end": "969959"
  },
  {
    "text": "line as well right and this happens in all of the Toyota factories there's a Toyota factory for example in Kansas",
    "start": "969959",
    "end": "976410"
  },
  {
    "text": "City I think in the US see if you can guess in a day how many times that andon",
    "start": "976410",
    "end": "981959"
  },
  {
    "text": "cord gets pulled keeping in mind it stops the production line right like 10",
    "start": "981959",
    "end": "987180"
  },
  {
    "text": "20 has anybody got a guess I just wanted to see what people think yeah 10 anyone",
    "start": "987180",
    "end": "992700"
  },
  {
    "text": "higher than 1000 5,000 5,000 times a day",
    "start": "992700",
    "end": "1000310"
  },
  {
    "text": "they produce 2,000 cars a day out of that production line the other part of",
    "start": "1000310",
    "end": "1005329"
  },
  {
    "text": "this culture is that if somebody pulls that and on Coe and on cord the line",
    "start": "1005329",
    "end": "1010910"
  },
  {
    "text": "manager goes out to have a look to make sure it's not you know it's actually investigating that there is a problem",
    "start": "1010910",
    "end": "1017000"
  },
  {
    "text": "but the first thing they do is they thank that person for pulling the end on cord it means that they've prevented a",
    "start": "1017000",
    "end": "1023269"
  },
  {
    "text": "defect they've prevented something bad going out and there is this culture of you have done a good thing because you",
    "start": "1023269",
    "end": "1029270"
  },
  {
    "text": "have alerted this alerted us to this so 5,000 times a day there's a culture of being able to make to bring these things",
    "start": "1029270",
    "end": "1036319"
  },
  {
    "text": "to the fore if there's a problem which is really cool so psychological safety the last one is kind of ties it all",
    "start": "1036319",
    "end": "1043819"
  },
  {
    "text": "together is customer focus is what you're doing right now actually going to benefit the customer",
    "start": "1043819",
    "end": "1048919"
  },
  {
    "text": "or whoever your customer is right it might be great to improve your build server add some RAM to make the builds a",
    "start": "1048919",
    "end": "1056330"
  },
  {
    "text": "bit faster but if you're doing nightly builds when no one's there that's not going to improve life for your customer",
    "start": "1056330",
    "end": "1062330"
  },
  {
    "text": "like it is the work that you're doing right now how you were going to switch from react to view or something that's",
    "start": "1062330",
    "end": "1069679"
  },
  {
    "text": "really not going to improve the customer a customer's experience I mean it might in a small way and maybe maybe that is a",
    "start": "1069679",
    "end": "1075500"
  },
  {
    "text": "legitimate change but if you're just doing it for technology's purposes like because you want to play with the new stuff is it valuable good yeah so",
    "start": "1075500",
    "end": "1089029"
  },
  {
    "text": "the question was how do you prioritize the third one improvement of daily work with customer focus that's a good",
    "start": "1089029",
    "end": "1098120"
  },
  {
    "text": "question they do seem like their opposite right should you improve your process in order",
    "start": "1098120",
    "end": "1104809"
  },
  {
    "text": "to improve the khari should you improve your process rather than doing a feature for the customer or bug fix for the",
    "start": "1104809",
    "end": "1110659"
  },
  {
    "text": "customer it's about deciding whether this improvement to your process is going to down-the-line improve things",
    "start": "1110659",
    "end": "1117049"
  },
  {
    "text": "for your customer because you can get features out quicker if it's a choice between a new feature that a customer",
    "start": "1117049",
    "end": "1122990"
  },
  {
    "text": "really really wants and improving it so you can actually deliver that feature it's up to the company a little bit",
    "start": "1122990",
    "end": "1128750"
  },
  {
    "text": "Microsoft would say improve the process first because then that has flow-on effects later on if you're always",
    "start": "1128750",
    "end": "1134510"
  },
  {
    "text": "choosing features then your system is going to become what what's used in the",
    "start": "1134510",
    "end": "1140269"
  },
  {
    "text": "unicorn project is a word called I'm complected which I didn't think was a word but I looked it up and that's a word your system becomes quite",
    "start": "1140269",
    "end": "1146960"
  },
  {
    "text": "complected which means it's very complex has different dependencies all over the place if you continually choose new",
    "start": "1146960",
    "end": "1152510"
  },
  {
    "text": "features and bug fixes over improving the way your system flows and this idea",
    "start": "1152510",
    "end": "1157789"
  },
  {
    "text": "of locality and simplicity then you might get short-term games gains but the long-term ones will be much much worse",
    "start": "1157789",
    "end": "1163639"
  },
  {
    "text": "so yeah it is a bit of a toss-up that's a good question come and see me after us so that's the",
    "start": "1163639",
    "end": "1170600"
  },
  {
    "text": "five ideas the unicorn project is explores these ideas again novel really",
    "start": "1170600",
    "end": "1175639"
  },
  {
    "text": "readable about 40% through it's released in about a month in a bit I think it's",
    "start": "1175639",
    "end": "1181610"
  },
  {
    "text": "the 26th ish of November but if you go to the website I Gene's released",
    "start": "1181610",
    "end": "1188090"
  },
  {
    "text": "excerpts and there's four excerpts now and by my calculations that's about 60% of the book so you can start reading it",
    "start": "1188090",
    "end": "1194809"
  },
  {
    "text": "now and then buy it when it comes out so that's a unicorn project it's really really good right so those are those",
    "start": "1194809",
    "end": "1202519"
  },
  {
    "text": "three ideas right one thing that I keep that I think is worth mentioning that",
    "start": "1202519",
    "end": "1207710"
  },
  {
    "text": "keeps coming up is this idea of how DevOps is actually implemented in organizer I just want to touch on this because it",
    "start": "1207710",
    "end": "1213090"
  },
  {
    "text": "comes up so regularly there's three main ways that I see companies implementing DevOps in their organization the first",
    "start": "1213090",
    "end": "1219990"
  },
  {
    "text": "is to have a DevOps department that does all of the DevOps who does anybody have",
    "start": "1219990",
    "end": "1225780"
  },
  {
    "text": "that here yeah couple of hands right DevOps is supposed to be this union of",
    "start": "1225780",
    "end": "1232200"
  },
  {
    "text": "developers and operations and anybody else who delivers that software such that they're working together to deliver",
    "start": "1232200",
    "end": "1237660"
  },
  {
    "text": "a product what we're trying to get away with away from is this lack of ownership where the developers write their code",
    "start": "1237660",
    "end": "1243840"
  },
  {
    "text": "and then what happens after that is not their problem right ownership is a really big part of DevOps so you write",
    "start": "1243840",
    "end": "1250440"
  },
  {
    "text": "the code you should run it you should have that locality meaning that you are",
    "start": "1250440",
    "end": "1256020"
  },
  {
    "text": "able to from start to finish decide how to deliver value to the customer and whether your code is delivering value to",
    "start": "1256020",
    "end": "1261990"
  },
  {
    "text": "the customer so we're trying to get away from these siloed organized siloed arrangements having a DevOps department",
    "start": "1261990",
    "end": "1269130"
  },
  {
    "text": "in between your developers and your operations department means that you've added a silo right you're making the",
    "start": "1269130",
    "end": "1275460"
  },
  {
    "text": "problem worse so a DevOps department that does all the DevOps there's a great tweet about this having a dedicated",
    "start": "1275460",
    "end": "1281700"
  },
  {
    "text": "DevOps person who does all the DevOps ting is like having a dedicated collaboration Persian it person who does",
    "start": "1281700",
    "end": "1286830"
  },
  {
    "text": "all the collaborating which is a great quote I love this so DevOps is not",
    "start": "1286830",
    "end": "1295010"
  },
  {
    "text": "shouldn't be a department right now does that mean you can't have a devilish",
    "start": "1295010",
    "end": "1300150"
  },
  {
    "text": "Department no and I'll come back to that the other way is that DevOps just becomes all that's now what operations",
    "start": "1300150",
    "end": "1306870"
  },
  {
    "text": "does we just change their job titles and we'll call it modern ops and maybe they do some scripts to to build machines",
    "start": "1306870",
    "end": "1313260"
  },
  {
    "text": "rather than pointing and clicking maybe they use cloud bm's and docker and things like that rather than what they",
    "start": "1313260",
    "end": "1319710"
  },
  {
    "text": "were doing before but that's still operations developers your code just doesn't like you write your code and",
    "start": "1319710",
    "end": "1325050"
  },
  {
    "text": "then you hand it to them all right the other way is the other way around where our DevOps that's actually now the",
    "start": "1325050",
    "end": "1330720"
  },
  {
    "text": "developers we don't need an Operations Department anymore because they can just spin up like kubernetes clusters or",
    "start": "1330720",
    "end": "1337170"
  },
  {
    "text": "something all right these two ways don't break that cycle of developers and operations being on opposite",
    "start": "1337170",
    "end": "1343850"
  },
  {
    "text": "and that's really the goal of DevOps not not all of the intricate ways of",
    "start": "1343850",
    "end": "1350100"
  },
  {
    "text": "implementing it the third way which is in my opinion the right way is a cross-functional",
    "start": "1350100",
    "end": "1356520"
  },
  {
    "text": "end-to-end team a team that has ownership and responsibility of everything from the ideas in the first",
    "start": "1356520",
    "end": "1362340"
  },
  {
    "text": "place all the way through to running it in production and making sure it's delivering value they talk to the",
    "start": "1362340",
    "end": "1368100"
  },
  {
    "text": "customers they plan the work they write the code they write the tests they deploy it to environments and they they",
    "start": "1368100",
    "end": "1375000"
  },
  {
    "text": "manage what's happening in production as well and yes cross-functional there might be operations specialists and",
    "start": "1375000",
    "end": "1380400"
  },
  {
    "text": "development development specialists of course right but it's this one team that has ownership now if you have a DevOps",
    "start": "1380400",
    "end": "1387870"
  },
  {
    "text": "department they can still support this idea that if the DevOps department is",
    "start": "1387870",
    "end": "1393419"
  },
  {
    "text": "kind of a knowledge base a training department that that assists these teams",
    "start": "1393419",
    "end": "1398669"
  },
  {
    "text": "in learning or technologies doing things the right way and then essentially",
    "start": "1398669",
    "end": "1404850"
  },
  {
    "text": "sharing knowledge across the organization that's a very effective DevOps department if there's service",
    "start": "1404850",
    "end": "1410429"
  },
  {
    "text": "delivery as in they're doing the DevOps that's the wrong way to go about it",
    "start": "1410429",
    "end": "1415500"
  },
  {
    "text": "if their knowledge delivery that's a great way of going about it alright I'm already talking way too much",
    "start": "1415500",
    "end": "1423330"
  },
  {
    "text": "so let's get into the the actual you know actually doing stuff now so I kind of it's really difficult to work out how",
    "start": "1423330",
    "end": "1429660"
  },
  {
    "text": "to just scattergun you with ideas and opinions and things like that so I'm kind of going to arrange it in this this",
    "start": "1429660",
    "end": "1435299"
  },
  {
    "text": "flow of planning writing code or doing the actual development testing building",
    "start": "1435299",
    "end": "1440309"
  },
  {
    "text": "versioning deploying to production gathering feedback and of course infrastructure which underlies the whole thing as well so we're going to talk",
    "start": "1440309",
    "end": "1445860"
  },
  {
    "text": "about these ideas and I'm going to give you some suggestions ideas behind why I'm recommending those and try to tie",
    "start": "1445860",
    "end": "1452010"
  },
  {
    "text": "them back to these guiding principles that we just talked about before I start are there any questions about what I've",
    "start": "1452010",
    "end": "1457590"
  },
  {
    "text": "talked about so far any complaints that I'm not pragmatic yet that's coming",
    "start": "1457590",
    "end": "1463460"
  },
  {
    "text": "we've done the theory we've done our 16 years of training now in 25 minutes all",
    "start": "1463460",
    "end": "1470580"
  },
  {
    "text": "right let's start with planning so here's my first suggestion invest effort when you need it",
    "start": "1470580",
    "end": "1476310"
  },
  {
    "text": "particularly not before you need it if you have a backlog that has 300 items in",
    "start": "1476310",
    "end": "1482130"
  },
  {
    "text": "it and they're all really meticulously built with you know the story like as as",
    "start": "1482130",
    "end": "1489240"
  },
  {
    "text": "something I want something so that I can whatever and 25 acceptance criteria and",
    "start": "1489240",
    "end": "1494250"
  },
  {
    "text": "a description and screenshots you may never do half of them right you have not",
    "start": "1494250",
    "end": "1499910"
  },
  {
    "text": "you haven't been delivering value you've been delivering work there's another",
    "start": "1499910",
    "end": "1505620"
  },
  {
    "text": "idea in the Phoenix project to these four types of work I haven't gone into that but this is one of the bad types of",
    "start": "1505620",
    "end": "1512250"
  },
  {
    "text": "work right doing all this upfront planning which is what agile was supposed to fix doing all this upfront planning for stuff that you may never do",
    "start": "1512250",
    "end": "1518970"
  },
  {
    "text": "in the in the end as well so invest effort in building those stories out or those work items out when you need it so",
    "start": "1518970",
    "end": "1525240"
  },
  {
    "text": "just before you do that work that means of course grooming your backlog regularly so making sure that what's in",
    "start": "1525240",
    "end": "1531120"
  },
  {
    "text": "the backlog actually represents things that you think you're going to do in the relatively near term if you have an item",
    "start": "1531120",
    "end": "1537300"
  },
  {
    "text": "in your backlog that that you expect to do in about four or five years there's no way you're doing that item right so",
    "start": "1537300",
    "end": "1543840"
  },
  {
    "text": "grooming regularly means removing those stale items if you have something which",
    "start": "1543840",
    "end": "1548940"
  },
  {
    "text": "is so far in the future that it's not even worth thinking about now just take it off the backlog it'll pop up again if",
    "start": "1548940",
    "end": "1555000"
  },
  {
    "text": "it's important right if you continually push something to the bottom of the backlog because actually it's not that",
    "start": "1555000",
    "end": "1560970"
  },
  {
    "text": "important and you've done that for 35 sprints now just get rid of it all right if it comes up again",
    "start": "1560970",
    "end": "1566970"
  },
  {
    "text": "yeah maybe pop it up to the top of the backlog but you shouldn't be trawling through hundreds of work items hundreds",
    "start": "1566970",
    "end": "1572520"
  },
  {
    "text": "of stories that you may not do so groom regularly and remove those stale items if an issue comes up like a bug or a",
    "start": "1572520",
    "end": "1579450"
  },
  {
    "text": "change or something like that it's better if you were the one who discovered that first through your",
    "start": "1579450",
    "end": "1585900"
  },
  {
    "text": "telemetry or through customer meetings any way of coming up with that it's best",
    "start": "1585900",
    "end": "1592200"
  },
  {
    "text": "if you learn about that issue before the customer does I've been in projects before where I have a pager this is a",
    "start": "1592200",
    "end": "1598380"
  },
  {
    "text": "while ago I had a pager the pager was there so that you could get paged at 3 o'clock in the morning because one of the customers rang up and",
    "start": "1598380",
    "end": "1605550"
  },
  {
    "text": "said everything's broken you need to fix it and then yell at you for 21 but it would have been way better if I'd",
    "start": "1605550",
    "end": "1612119"
  },
  {
    "text": "known that the system was down before a customer did right so if there's an item in your backlog how did you discover",
    "start": "1612119",
    "end": "1617789"
  },
  {
    "text": "that item if it's a bug did you discover that bug through your own telemetry if not maybe add some so",
    "start": "1617789",
    "end": "1625139"
  },
  {
    "text": "that you are the first to discover it later so this is something that you can aim for as well if something comes up",
    "start": "1625139",
    "end": "1631919"
  },
  {
    "text": "try to work out how you can be the first to discover it so these are this is",
    "start": "1631919",
    "end": "1637169"
  },
  {
    "text": "really basic ideas about planning invest the effort when you need it which means grooming your backlog making it manageable and removing the stuff that's",
    "start": "1637169",
    "end": "1644070"
  },
  {
    "text": "not going to get done right and then for anything that comes up try to be the one that learns about",
    "start": "1644070",
    "end": "1649289"
  },
  {
    "text": "that first rather than waiting for a custom it will call you at 3:00 in the morning yelling so build that process so",
    "start": "1649289",
    "end": "1657629"
  },
  {
    "text": "that you're you're improving your daily work is part of what this is about you",
    "start": "1657629",
    "end": "1664440"
  },
  {
    "text": "can focus on what work that you're going to do and ignore the stuff that you're not going to do and it means that your",
    "start": "1664440",
    "end": "1669899"
  },
  {
    "text": "job is much much easier when it comes to working out the stuff that you're gay actually going to put down on in your",
    "start": "1669899",
    "end": "1675539"
  },
  {
    "text": "application all right it says planning let's talk about actually writing the code I get asked a lot as well how to",
    "start": "1675539",
    "end": "1683129"
  },
  {
    "text": "organize our repositories so do I have a different repo for every one of my micro",
    "start": "1683129",
    "end": "1688889"
  },
  {
    "text": "services to have one gigantic repo that has all of the micro services in it my",
    "start": "1688889",
    "end": "1695159"
  },
  {
    "text": "thinking here and this is my opinion is that you should organize it by deployable unit if you have to deploy a",
    "start": "1695159",
    "end": "1703200"
  },
  {
    "text": "four or five different parts of the application at the same time they should probably be in the same repository",
    "start": "1703200",
    "end": "1710179"
  },
  {
    "text": "conversely you know if you have different items that are completely",
    "start": "1710179",
    "end": "1717330"
  },
  {
    "text": "independent of each other having that code in the same repository just makes things a little bit more confusing it",
    "start": "1717330",
    "end": "1722609"
  },
  {
    "text": "makes the build a little bit harder you can't just say build what's in this repo you got to say build what's in this repo",
    "start": "1722609",
    "end": "1727769"
  },
  {
    "text": "but only under this folder also trigger it only if this folder changes but not these bits because that's documentation",
    "start": "1727769",
    "end": "1734479"
  },
  {
    "text": "no it makes it much much easier and it means that you can focus on the work that you're doing and flow one small",
    "start": "1734479",
    "end": "1740940"
  },
  {
    "text": "thing on micro-services if you have microservices that all needed to be deployed together they're not micro-services right this is what we",
    "start": "1740940",
    "end": "1748030"
  },
  {
    "text": "call the distributed monolith it has all of the negatives of having of being a monolith and all of the negatives of",
    "start": "1748030",
    "end": "1755320"
  },
  {
    "text": "being distributed computing having to tie all these bits together so if you",
    "start": "1755320",
    "end": "1761680"
  },
  {
    "text": "have stuff in a repository and you say I can just deploy this in that repository that's a really nice way of working it",
    "start": "1761680",
    "end": "1766900"
  },
  {
    "text": "makes it much much easier to work with continuous I'm sorry CI in the CI CD",
    "start": "1766900",
    "end": "1772840"
  },
  {
    "text": "stands for continuous integration not continuous isolation so this is an idea",
    "start": "1772840",
    "end": "1777910"
  },
  {
    "text": "from thought works blogs one of the footworks goes this is the words thing",
    "start": "1777910",
    "end": "1783250"
  },
  {
    "text": "again Martin Fowler I believe he talked about continuous isolation and these are",
    "start": "1783250",
    "end": "1789400"
  },
  {
    "text": "branches of code where you're doing a whole bunch of work and then as you're",
    "start": "1789400",
    "end": "1794530"
  },
  {
    "text": "doing that work other people are doing other work on other branches and these lines of code are being isolated from",
    "start": "1794530",
    "end": "1801130"
  },
  {
    "text": "each other such that when you come to merge at the end it's a gigantic disaster you get this merge bomb it's",
    "start": "1801130",
    "end": "1806920"
  },
  {
    "text": "very difficult to to put this stuff together ci continuous integration the",
    "start": "1806920",
    "end": "1812320"
  },
  {
    "text": "idea is to be continuously integrating the work you've done with the work other people have done and if you're not doing",
    "start": "1812320",
    "end": "1818860"
  },
  {
    "text": "that if you're not continuously making sure that it all works together then you're not doing CI so what this means",
    "start": "1818860",
    "end": "1825340"
  },
  {
    "text": "is short-lived feature branches or short live branches branching is fine it's a great strategy but if you're branching",
    "start": "1825340",
    "end": "1832180"
  },
  {
    "text": "and keeping that branch active and distant from your master branch or your trunk branch for weeks at a time",
    "start": "1832180",
    "end": "1837790"
  },
  {
    "text": "you're doing continuous isolation you're isolating that code and making it really hard to merge what about changes that",
    "start": "1837790",
    "end": "1845590"
  },
  {
    "text": "are really long-running like this there are legitimately changes that take a very long time to do right",
    "start": "1845590",
    "end": "1851650"
  },
  {
    "text": "my strategy generally there is to work out a way to write dead code and this sounds a bit weird right",
    "start": "1851650",
    "end": "1858300"
  },
  {
    "text": "writing dead code means that you can write a whole bunch of code that doesn't really work yet but that's okay because",
    "start": "1858300",
    "end": "1863770"
  },
  {
    "text": "it doesn't get used in your production system so my strategy for these long-running branches is first branch",
    "start": "1863770",
    "end": "1871480"
  },
  {
    "text": "for this new feature do some react attack just summary during such that you can write a new",
    "start": "1871480",
    "end": "1878160"
  },
  {
    "text": "implementation of it that never gets used until you're ready right then merge",
    "start": "1878160",
    "end": "1883260"
  },
  {
    "text": "that back into master so you've just refactored kept all the logic the same",
    "start": "1883260",
    "end": "1888360"
  },
  {
    "text": "it's just that now you can write this dead code this code that's not going to be run after that you can continually",
    "start": "1888360",
    "end": "1895230"
  },
  {
    "text": "merge you can you can push directly to master as long as you have some decent builds and things like that you can",
    "start": "1895230",
    "end": "1901559"
  },
  {
    "text": "continually merge and integrate your code with master because your codes not going to get run until you're ready right so being able to write dead code",
    "start": "1901559",
    "end": "1908940"
  },
  {
    "text": "sounds like a bad thing it's actually a good thing it means that you can focus on the work you're doing and actually",
    "start": "1908940",
    "end": "1916320"
  },
  {
    "text": "continually deliver value well deliver value in terms of being able to write code without having to depend on",
    "start": "1916320",
    "end": "1923280"
  },
  {
    "text": "other people to do their work first and so on so write dead code question",
    "start": "1923280",
    "end": "1929900"
  },
  {
    "text": "yes so the question was is there a risk if you're doing that work you're writing",
    "start": "1942239",
    "end": "1947590"
  },
  {
    "text": "all this dead code and then that code gets D prioritized and now you've got this code in master that is useless do",
    "start": "1947590",
    "end": "1954129"
  },
  {
    "text": "you go back and strip it out so that depends on the organization Facebook",
    "start": "1954129",
    "end": "1960039"
  },
  {
    "text": "famously does feature flags for a lot of stuff which I'll talk about in a sec feature flags for a lot of stuff where",
    "start": "1960039",
    "end": "1966070"
  },
  {
    "text": "they write all of this dead code and then turn the flag on and then the old code that now doesn't get run they never",
    "start": "1966070",
    "end": "1973299"
  },
  {
    "text": "go back and remove that or at least last time I read about their practices they never go back and remove that dead code",
    "start": "1973299",
    "end": "1978970"
  },
  {
    "text": "because they think in their opinion it's more risky to go and remove this code than it is to leave it in there and not",
    "start": "1978970",
    "end": "1985779"
  },
  {
    "text": "getting run on the flipside and if you've heard about an organization",
    "start": "1985779",
    "end": "1990850"
  },
  {
    "text": "called night capital night Capital Group was a company that did share trading in the US this is a great dev up story",
    "start": "1990850",
    "end": "1998139"
  },
  {
    "text": "because you can name any one of like four or five things that went wrong they they had a feature flag that they used",
    "start": "1998139",
    "end": "2004799"
  },
  {
    "text": "for a particular bit of code they wanted to change the way they're calculated trades or something like that and they",
    "start": "2004799",
    "end": "2012029"
  },
  {
    "text": "reused that feature flag so that dead code was still there they wrote new code and then flicked the feature flag across",
    "start": "2012029",
    "end": "2018859"
  },
  {
    "text": "overnight when the market was closed to use their new code so the dead code was still their new code was now being used",
    "start": "2018859",
    "end": "2025619"
  },
  {
    "text": "in production when they deployed it they deployed that change to seven out of the eight machines and turned the flag on so",
    "start": "2025619",
    "end": "2033359"
  },
  {
    "text": "this code that had never been there hadn't been run for years now was triggered again so they had this dead code that essentially bankrupted the",
    "start": "2033359",
    "end": "2040259"
  },
  {
    "text": "company in about 45 minutes they lost 400 million dollars in about 45 minutes because this dead code was",
    "start": "2040259",
    "end": "2046950"
  },
  {
    "text": "there they turned the feature flag on and pointed to that dead code and now it you know it failed alright so obviously",
    "start": "2046950",
    "end": "2054118"
  },
  {
    "text": "pros and cons to each I don't have",
    "start": "2054119",
    "end": "2059220"
  },
  {
    "text": "problem having dead code in production I don't really mind that um if it is an issue and and I can understand why an",
    "start": "2059220",
    "end": "2066540"
  },
  {
    "text": "organization would say we don't want dead code in production I would when you deploy that I'd almost go back and automatically add a work",
    "start": "2066540",
    "end": "2073020"
  },
  {
    "text": "item to your backlog that you are definitely going to do to remove that dead code once you've verified that all",
    "start": "2073020",
    "end": "2078720"
  },
  {
    "text": "the other stuff works might yeah so my strategy would be build it into your planning so that by this date we need to",
    "start": "2078720",
    "end": "2086099"
  },
  {
    "text": "have done this work to remove that dead code and of course tested it and made sure it works through the pipeline but",
    "start": "2086099",
    "end": "2091378"
  },
  {
    "text": "yeah there is a risk is this short answer that's that's a great question I got to tell stories which is fantastic",
    "start": "2091379",
    "end": "2096980"
  },
  {
    "text": "yeah come and see me afterwards as well um I'm gonna it's gonna cost me a lot of money in books so the other thing you",
    "start": "2096980",
    "end": "2105510"
  },
  {
    "text": "can do if you have these branches is do things with pull requests this is an idea in DevOps of shifting left so the",
    "start": "2105510",
    "end": "2111720"
  },
  {
    "text": "idea of shifting the discovery of issues as far left in this pipeline as possible",
    "start": "2111720",
    "end": "2117210"
  },
  {
    "text": "so if you think about it from idea all the way through to running in production the earlier you can discover issues in",
    "start": "2117210",
    "end": "2123720"
  },
  {
    "text": "other words the tighter you can make that feedback loop which is that second",
    "start": "2123720",
    "end": "2128810"
  },
  {
    "text": "the second way of DevOps the tighter you can make that feedback loop the cheaper it is to fix right if you do build on",
    "start": "2128810",
    "end": "2136470"
  },
  {
    "text": "every pull request you can discover these problems before the code even gets into master the azure DevOps team and",
    "start": "2136470",
    "end": "2143220"
  },
  {
    "text": "Microsoft does everything with pull requests they have about 600 pull requests a day I think from memory and",
    "start": "2143220",
    "end": "2149490"
  },
  {
    "text": "every one of those pull requests runs a build that runs roughly 80,000 unit",
    "start": "2149490",
    "end": "2154710"
  },
  {
    "text": "tests every one of those tests passes and if it doesn't it's never going to",
    "start": "2154710",
    "end": "2160500"
  },
  {
    "text": "get merged back into master I'll talk about testing again in in a little bit but that means that they can discover",
    "start": "2160500",
    "end": "2165869"
  },
  {
    "text": "issues before the code gets anywhere near production all right so you're shifting this idea left tightening that",
    "start": "2165869",
    "end": "2171720"
  },
  {
    "text": "feedback loop so these are the general ideas with writing code organize your",
    "start": "2171720",
    "end": "2177150"
  },
  {
    "text": "code by deployable unit it just means that you have that locality and that simplicity it means you can do that work",
    "start": "2177150",
    "end": "2182790"
  },
  {
    "text": "with just only caring about that repository make sure you're continually integrating not isolating code from",
    "start": "2182790",
    "end": "2189480"
  },
  {
    "text": "other code which means short-lived feature branches and I think it's a great idea to be able to write dead code",
    "start": "2189480",
    "end": "2195780"
  },
  {
    "text": "right code that you can just throw away if it gets DD prioritized it's easier to",
    "start": "2195780",
    "end": "2200880"
  },
  {
    "text": "throw that away as well if you've got this kind of refactoring with a new implementation rather than trying to change the old one",
    "start": "2200880",
    "end": "2206720"
  },
  {
    "text": "and then shifting left with poor requests and pull request builds alright",
    "start": "2206720",
    "end": "2212039"
  },
  {
    "text": "I'm talking slow or I'm talking too much I think is the problem we're going to jump over to infrastructure quickly so",
    "start": "2212039",
    "end": "2218369"
  },
  {
    "text": "the whole idea of infrastructure as code is to avoid avoidable problems right",
    "start": "2218369",
    "end": "2224089"
  },
  {
    "text": "your code doesn't exist in isolation it needs to run on infrastructure if production is this thing that eventually",
    "start": "2224089",
    "end": "2230519"
  },
  {
    "text": "we will get our code to run on and it's although it's over there and we don't have to worry about that for months then",
    "start": "2230519",
    "end": "2235980"
  },
  {
    "text": "there are avoidable problems that we're that we're encountering now right maybe",
    "start": "2235980",
    "end": "2241980"
  },
  {
    "text": "it's not going to work in that environment but we don't know that until you know long down the track when we",
    "start": "2241980",
    "end": "2247740"
  },
  {
    "text": "actually deploy to production this is an avoidable problem if we know what that infrastructure is going to look like we",
    "start": "2247740",
    "end": "2253260"
  },
  {
    "text": "can test against that infrastructure before we get to production I'll talk a little bit more about it later but the",
    "start": "2253260",
    "end": "2259470"
  },
  {
    "text": "idea of bringing production to the developers rather than bringing the code they write to production we'll talk",
    "start": "2259470",
    "end": "2267000"
  },
  {
    "text": "about that in a sec infrastructure as code means that you're able to do things like rebuild patch servers and verify",
    "start": "2267000",
    "end": "2274470"
  },
  {
    "text": "that this stuff works before production you wouldn't as a developer you wouldn't",
    "start": "2274470",
    "end": "2280380"
  },
  {
    "text": "make a change to the code that runs in production by logging on to the production server and making changes to",
    "start": "2280380",
    "end": "2285720"
  },
  {
    "text": "that code and then running it right and I see a couple of people looking like sidelong at colleagues of theirs I",
    "start": "2285720",
    "end": "2292950"
  },
  {
    "text": "haven't seen this happen right and if you have a load balancer with two versions of the code you got to make",
    "start": "2292950",
    "end": "2299400"
  },
  {
    "text": "those same changes really quick right login to both machines change the code SAVE changing the other ones Dave right",
    "start": "2299400",
    "end": "2305700"
  },
  {
    "text": "just so it's consistent but you wouldn't do that as a developer so why do we expect that you would do that in",
    "start": "2305700",
    "end": "2312089"
  },
  {
    "text": "infrastructure why would you go onto your production server directly and do an update and just hope that it works in",
    "start": "2312089",
    "end": "2318509"
  },
  {
    "text": "production infrastructure as code and these ideas of doing that mean that you can rebuild your servers and you can",
    "start": "2318509",
    "end": "2324930"
  },
  {
    "text": "patch them and you can verify that that's going to work before it gets to production it also means that you can",
    "start": "2324930",
    "end": "2330930"
  },
  {
    "text": "create reproducible environment which is great not just for rebuilding production when it breaks but also for building an",
    "start": "2330930",
    "end": "2337380"
  },
  {
    "text": "environment that it's the same as production as much as possible before you get there",
    "start": "2337380",
    "end": "2342970"
  },
  {
    "text": "so you can actually test that the code that you write is going to work on that environment before you get to production",
    "start": "2342970",
    "end": "2348370"
  },
  {
    "text": "right you can just spin it up and you know it's the same because production was spun up using the same scripts the",
    "start": "2348370",
    "end": "2356830"
  },
  {
    "text": "key here is that infrastructure is part of your software it should be treated as part of your software not this thing",
    "start": "2356830",
    "end": "2363370"
  },
  {
    "text": "that's over there that somebody else worries about right your software runs on this infrastructure it it's",
    "start": "2363370",
    "end": "2369310"
  },
  {
    "text": "intricately involved in everything your software does you need to make it part of that development process I'm not an",
    "start": "2369310",
    "end": "2377710"
  },
  {
    "text": "infrastructure guy so this is relatively short but the idea is to avoid these avoidable problems enable yourself to",
    "start": "2377710",
    "end": "2383440"
  },
  {
    "text": "rebuild servers to patch them and to verify that that works before you actually do it in production just like",
    "start": "2383440",
    "end": "2389230"
  },
  {
    "text": "you would do with your code it allows you to create reproducible environments",
    "start": "2389230",
    "end": "2394240"
  },
  {
    "text": "so that you can test before it gets the production and remember that your infrastructure is part of your software",
    "start": "2394240",
    "end": "2399310"
  },
  {
    "text": "it should be treated the same way all right I'm going to continue and we're going to leave questions to the end because we're",
    "start": "2399310",
    "end": "2406720"
  },
  {
    "text": "at 40 minutes let's talk about testing key thing here",
    "start": "2406720",
    "end": "2412690"
  },
  {
    "text": "bugs our technical debt if you leave bugs and say we'll worry about that",
    "start": "2412690",
    "end": "2417850"
  },
  {
    "text": "later it's not high priority this is technical debt having this process of",
    "start": "2417850",
    "end": "2422860"
  },
  {
    "text": "writing all of these new bugs and then paying down that technical debt in one big long process it can be good if you",
    "start": "2422860",
    "end": "2431140"
  },
  {
    "text": "have a lot of bugs to just stop for a bit pay them all down but if you can continually pay down this technical debt",
    "start": "2431140",
    "end": "2436960"
  },
  {
    "text": "as you go you get a bit more flow it gets much easier to write that code because you have that locality",
    "start": "2436960",
    "end": "2443410"
  },
  {
    "text": "that's simplicity now you don't need to worry about actually this thing that I might change is probably related to that",
    "start": "2443410",
    "end": "2449470"
  },
  {
    "text": "bug over there and that bug uses this different thing you know you you're accumulating this technical debt that",
    "start": "2449470",
    "end": "2455320"
  },
  {
    "text": "makes your work harder in the future so bugs a technical debt try and pay it down as early as possible to do this",
    "start": "2455320",
    "end": "2462960"
  },
  {
    "text": "better is better than perfect right don't think well we've got 400 bugs we",
    "start": "2462960",
    "end": "2470080"
  },
  {
    "text": "don't have any tests around stuff there no point me writing a test for this small bit of change that I'm making now",
    "start": "2470080",
    "end": "2475990"
  },
  {
    "text": "because we don't have tests on anything else all right rather than trying to say we need tests",
    "start": "2475990",
    "end": "2482350"
  },
  {
    "text": "over everything otherwise there's no point try to say we need a test over this thing I'm about to do right now",
    "start": "2482350",
    "end": "2487560"
  },
  {
    "text": "because that'll make that little thing better it's this improvement of daily work it means nobody has to worry about",
    "start": "2487560",
    "end": "2493780"
  },
  {
    "text": "that later on um one of the ideas which I really like for testing is red green",
    "start": "2493780",
    "end": "2499330"
  },
  {
    "text": "refactor so this is the idea that if you encounter a bug you should first write a test that shows the presence of that bug",
    "start": "2499330",
    "end": "2505990"
  },
  {
    "text": "so it goes red then you should fix the bug make sure your test goes green in other words it passes now and then do",
    "start": "2505990",
    "end": "2513040"
  },
  {
    "text": "any refactoring and it means that as long as it's still green you know that you haven't broken that bug again and",
    "start": "2513040",
    "end": "2518590"
  },
  {
    "text": "this is the idea of better is better than perfect improving daily work and making sure that you can actually",
    "start": "2518590",
    "end": "2524290"
  },
  {
    "text": "start to build up this this list of tests or this group of tests that proves that your code has a bit better quality",
    "start": "2524290",
    "end": "2530440"
  },
  {
    "text": "you're paying down this technical debt as you go another thing with tests all",
    "start": "2530440",
    "end": "2535840"
  },
  {
    "text": "of your tests should pass all of the time if they don't then that's noise right that is giving you alerts about",
    "start": "2535840",
    "end": "2543670"
  },
  {
    "text": "things that don't need to be alerted or that you don't need to be alerted about I there was a project and a few people",
    "start": "2543670",
    "end": "2550150"
  },
  {
    "text": "here may be aware of this project there was a project where all of the tests",
    "start": "2550150",
    "end": "2555190"
  },
  {
    "text": "failed on Tuesday because Tuesday the prices were different but that's okay",
    "start": "2555190",
    "end": "2561370"
  },
  {
    "text": "because we know that that these fail on Tuesday we'll just run them tomorrow and it'll be fine right that's horrible",
    "start": "2561370",
    "end": "2567880"
  },
  {
    "text": "all right you never like on Tuesday you never know whether you've introduced a bug which is silly right",
    "start": "2567880",
    "end": "2573640"
  },
  {
    "text": "the other ones are bugs that sometimes fail so flaky tests sorry tests that sometimes fail so flaky tests where if",
    "start": "2573640",
    "end": "2581020"
  },
  {
    "text": "you run it a couple more times it'll probably pass all right you need to work out why that's failing and make sure it",
    "start": "2581020",
    "end": "2586240"
  },
  {
    "text": "fails or passes every single time or a test that always fail but that's okay I know why they fail we'll get back to",
    "start": "2586240",
    "end": "2592390"
  },
  {
    "text": "that later you want to avoid them as well like I said the PR process for Azure DevOps",
    "start": "2592390",
    "end": "2597670"
  },
  {
    "text": "eighty thousand tests roughly every single one of them passes and has to",
    "start": "2597670",
    "end": "2603060"
  },
  {
    "text": "that was a process that took them a little while to get there so bugs a technical debt to maintain the",
    "start": "2603060",
    "end": "2609190"
  },
  {
    "text": "quality and to make it easier to write code in the future it's important to pay down that technical debt as early as",
    "start": "2609190",
    "end": "2614319"
  },
  {
    "text": "possible that means better is better than perfect you don't have to write tests across your entire system code",
    "start": "2614319",
    "end": "2620970"
  },
  {
    "text": "code coverage is an okay metric that's fine but by itself it doesn't mean anything right it just means that you",
    "start": "2620970",
    "end": "2627849"
  },
  {
    "text": "have tests that exercise all of that code it doesn't mean that they're actually being tested properly alright",
    "start": "2627849",
    "end": "2633069"
  },
  {
    "text": "so right test where it makes sense and make it better than it was yesterday red",
    "start": "2633069",
    "end": "2638710"
  },
  {
    "text": "green refactor is a great strategy and make sure that all of your tests are reliable they pass every single time if",
    "start": "2638710",
    "end": "2643749"
  },
  {
    "text": "they fail that means you've got a bug it means you need to change something right right testing let's talk about building",
    "start": "2643749",
    "end": "2651130"
  },
  {
    "text": "and versioning this idea which I came across an octopus where I used to work at build once to play many there's a lot",
    "start": "2651130",
    "end": "2659259"
  },
  {
    "text": "of organizations somebody was tweeting at me a couple of minutes ago where they have a different branch for every one of",
    "start": "2659259",
    "end": "2665529"
  },
  {
    "text": "their environments the problem there is that you're rebuilding your code and putting it in a different environment",
    "start": "2665529",
    "end": "2671109"
  },
  {
    "text": "which means that when you build your code and put it in your test environment you're testing that making sure",
    "start": "2671109",
    "end": "2676989"
  },
  {
    "text": "everything works but then you're doing a rebuild and you're putting different code in production and it may be 99% of",
    "start": "2676989",
    "end": "2684279"
  },
  {
    "text": "the time it may be exactly the same because you're branching strategy is fine but it makes things a little bit more difficult to manage right you're",
    "start": "2684279",
    "end": "2691630"
  },
  {
    "text": "testing different code there was a dotnet bug a while ago in one of their minor versions where if you did a build",
    "start": "2691630",
    "end": "2698920"
  },
  {
    "text": "of your dotnet project in debug mode it actually had different logic than if you compiled it in release mode right so",
    "start": "2698920",
    "end": "2706539"
  },
  {
    "text": "people would build their project to play to test run through everything it was all fine build it in release mode in",
    "start": "2706539",
    "end": "2712509"
  },
  {
    "text": "other words no debug signal no debug symbols deploy to production and suddenly it didn't work same code",
    "start": "2712509",
    "end": "2719140"
  },
  {
    "text": "just compile differently you want to make sure that the code you're testing",
    "start": "2719140",
    "end": "2724539"
  },
  {
    "text": "is the code that's going to go in production that binary that you're that you've tested and made sure it works that's what you've put in production so",
    "start": "2724539",
    "end": "2731440"
  },
  {
    "text": "build that once to play it many times only server build matter if you build on",
    "start": "2731440",
    "end": "2738609"
  },
  {
    "text": "your machine and it's fine who cares right that's your work in your environment it's fine",
    "start": "2738609",
    "end": "2745690"
  },
  {
    "text": "that's not what's running in production right so your continuous build server your build server that's the build that",
    "start": "2745690",
    "end": "2751450"
  },
  {
    "text": "matters I think that one kind of speak for itself every single build should be identifiable I've seen a lot of",
    "start": "2751450",
    "end": "2757810"
  },
  {
    "text": "companies where they will do multiple builds for version 1.0.0 and now build it again and that's also 1.0.0 you lose",
    "start": "2757810",
    "end": "2765550"
  },
  {
    "text": "that traceability you lose that feedback loop of what did we do that changed this code that introduced this bug I was in",
    "start": "2765550",
    "end": "2773290"
  },
  {
    "text": "one zero zero great there's 48 of them you need that feedback loop to be",
    "start": "2773290",
    "end": "2779680"
  },
  {
    "text": "amplified so that you can do your work so every single time you do a build give it a new build number I don't care what",
    "start": "2779680",
    "end": "2785589"
  },
  {
    "text": "your build number strategy is just make sure it's different and identifiable the key here is that provenance is key you",
    "start": "2785589",
    "end": "2793210"
  },
  {
    "text": "want to know that this feature that you implemented which meant which resulted in this code change which produced this",
    "start": "2793210",
    "end": "2800200"
  },
  {
    "text": "build which got deployed to this environment you're able to trace that all the way back so that you have that",
    "start": "2800200",
    "end": "2806650"
  },
  {
    "text": "feedback loop you know you have that cause and effect of what happened if version 1 is deployed to production and",
    "start": "2806650",
    "end": "2813369"
  },
  {
    "text": "they've been 35 of those and 300 changes in them there's no traceability there's",
    "start": "2813369",
    "end": "2819339"
  },
  {
    "text": "no provenance of what made that change so it's difficult to track that down so",
    "start": "2819339",
    "end": "2824589"
  },
  {
    "text": "build build your application once no branches for different environments happy to expand on that what a one on",
    "start": "2824589",
    "end": "2830740"
  },
  {
    "text": "one if you want to later only server builds matter don't worry about the build on your machine when you commit",
    "start": "2830740",
    "end": "2836140"
  },
  {
    "text": "code you should get a builder that tells you whether that code worked with everybody else's every build should be identifiable because provenance is key",
    "start": "2836140",
    "end": "2843160"
  },
  {
    "text": "it's important to get that feedback loop to know what changed and what it broke",
    "start": "2843160",
    "end": "2848400"
  },
  {
    "text": "all right deploying to production here's my first one production is a test",
    "start": "2848400",
    "end": "2853630"
  },
  {
    "text": "environment it's always a test environment some people are lucky enough to have additional test environments",
    "start": "2853630",
    "end": "2860109"
  },
  {
    "text": "before production and you really should but production is the first time this",
    "start": "2860109",
    "end": "2866109"
  },
  {
    "text": "code is being run under real workloads in a real production environment with real people using the applique",
    "start": "2866109",
    "end": "2872130"
  },
  {
    "text": "right you cannot fake that right there is no way for you to actually really",
    "start": "2872130",
    "end": "2879570"
  },
  {
    "text": "mimic what's happening in production so pre-production is just a simulation right and try and make it as good a",
    "start": "2879570",
    "end": "2887580"
  },
  {
    "text": "simulation as possible that's a very good idea right however remember that production is always the",
    "start": "2887580",
    "end": "2894990"
  },
  {
    "text": "first time that it's being run in a real environment what does that mean in practice in practice that means you need",
    "start": "2894990",
    "end": "2902250"
  },
  {
    "text": "to make friends with failure right stuff is going to go wrong in production it",
    "start": "2902250",
    "end": "2907800"
  },
  {
    "text": "just will agile was this reaction against waterfall which was the idea of",
    "start": "2907800",
    "end": "2913950"
  },
  {
    "text": "if we do enough upfront planning we will make sure that when we deliver this thing in a year it's going to be exactly",
    "start": "2913950",
    "end": "2919050"
  },
  {
    "text": "what everybody wanted we know that doesn't work right the same idea here if we make sure",
    "start": "2919050",
    "end": "2925260"
  },
  {
    "text": "we write our code really really carefully and we have 100% code coverage and tests around everything and we put",
    "start": "2925260",
    "end": "2931560"
  },
  {
    "text": "it in five environments first run load tests and stuff it would definitely work in production so we don't need to worry",
    "start": "2931560",
    "end": "2937260"
  },
  {
    "text": "about when it fails in production because that won't happen all right it's still going to happen it just means that",
    "start": "2937260",
    "end": "2942300"
  },
  {
    "text": "now you're not capable able to deal with that when it does all",
    "start": "2942300",
    "end": "2947580"
  },
  {
    "text": "right this is that third the third way of thinking being comfortable with",
    "start": "2947580",
    "end": "2952830"
  },
  {
    "text": "experimentation and learn from that experimentation and if you don't have a culture that can do that when something",
    "start": "2952830",
    "end": "2958290"
  },
  {
    "text": "goes wrong in production everybody screams the whole place is on fire right it's a terrible situation so be",
    "start": "2958290",
    "end": "2963810"
  },
  {
    "text": "comfortable with failure if you deploy less each time there is less risk so",
    "start": "2963810",
    "end": "2970080"
  },
  {
    "text": "this is the this is why we want this continual deployment this deployment of small pieces every single time if you",
    "start": "2970080",
    "end": "2976950"
  },
  {
    "text": "are deploying six months worth of work every single time you're the risk is all of that six months worth of work if",
    "start": "2976950",
    "end": "2983700"
  },
  {
    "text": "something goes wrong there's a lot of things that could have gone wrong right every single time you deploy there's a",
    "start": "2983700",
    "end": "2990300"
  },
  {
    "text": "ton of things that you're deploying if you can deploy less each time that means",
    "start": "2990300",
    "end": "2995580"
  },
  {
    "text": "that feedback loop is much much easier to deal with you have that traceability",
    "start": "2995580",
    "end": "3000830"
  },
  {
    "text": "of cause and effect you know that what you changed the thing that is now in production",
    "start": "3000830",
    "end": "3006730"
  },
  {
    "text": "therefore that's the thing that failed so deploying less each time means that you have less risk and you have a better",
    "start": "3006730",
    "end": "3012970"
  },
  {
    "text": "feedback loop I talked about this briefly before the idea of bringing",
    "start": "3012970",
    "end": "3019690"
  },
  {
    "text": "production to developers rather than developers saying we're writing this code and then some sometime in the",
    "start": "3019690",
    "end": "3026080"
  },
  {
    "text": "future it's going to run on that thing over there that we don't really know about it doesn't matter it's also not our problem",
    "start": "3026080",
    "end": "3031510"
  },
  {
    "text": "the idea of infrastructure is code even containers and things like that the idea is to bring that production environment",
    "start": "3031510",
    "end": "3037330"
  },
  {
    "text": "to the developers imagine if you were building a car and your team was",
    "start": "3037330",
    "end": "3042340"
  },
  {
    "text": "responsible for building the engine right but all you have in terms of where",
    "start": "3042340",
    "end": "3048370"
  },
  {
    "text": "the engine is going to go in this car is really detailed specifications maybe even a great 3d model of what that car",
    "start": "3048370",
    "end": "3054730"
  },
  {
    "text": "looks like what the chassis looks like how much room you've got to fit it in what all the dimensions are but you've",
    "start": "3054730",
    "end": "3060250"
  },
  {
    "text": "never seen it you don't get to touch that car until it's time to put the engine in it",
    "start": "3060250",
    "end": "3065260"
  },
  {
    "text": "how confident would you be that that engine that you've designed is just",
    "start": "3065260",
    "end": "3070300"
  },
  {
    "text": "going to slot perfectly in and work like immediately I mean you might get",
    "start": "3070300",
    "end": "3077770"
  },
  {
    "text": "fantastic specifications but I would not like to be in that position right that engines not going to go into that car",
    "start": "3077770",
    "end": "3085230"
  },
  {
    "text": "it's the same thing with code if you never see production you get told what",
    "start": "3085230",
    "end": "3090340"
  },
  {
    "text": "production looks like that's fine but you don't have it when you put your code in what's the likelihood that that codes",
    "start": "3090340",
    "end": "3096790"
  },
  {
    "text": "going to work without a problem in that production environment it's a better idea to be able to have that",
    "start": "3096790",
    "end": "3102940"
  },
  {
    "text": "shatter you have that environment right there with you as developers so that you can actually test it before it gets to",
    "start": "3102940",
    "end": "3109690"
  },
  {
    "text": "production and it's too late so bring production to developers another great",
    "start": "3109690",
    "end": "3115420"
  },
  {
    "text": "idea with DevOps is to separate the deployment from the release so remember this right dead code slide that I had",
    "start": "3115420",
    "end": "3121180"
  },
  {
    "text": "before if you can separate the deployment of code and make that a technical event",
    "start": "3121180",
    "end": "3126610"
  },
  {
    "text": "so we actually put the code in production that's ready to go and then a release is just flicking a feature flag",
    "start": "3126610",
    "end": "3132940"
  },
  {
    "text": "to turn that on then that means that you can actually test in",
    "start": "3132940",
    "end": "3138070"
  },
  {
    "text": "production because production is a test environment you can test it in production with real workloads with real",
    "start": "3138070",
    "end": "3143590"
  },
  {
    "text": "customers before you release it to everybody worldwide so if you can",
    "start": "3143590",
    "end": "3149740"
  },
  {
    "text": "separate the deployment make that a purely technical event put that code in production and in the release is turning",
    "start": "3149740",
    "end": "3155350"
  },
  {
    "text": "a feature flag on that can be really powerful and enable you to actually test things in a real environment before",
    "start": "3155350",
    "end": "3161430"
  },
  {
    "text": "before releasing it to everyone feature flags as well fantastic idea a",
    "start": "3161430",
    "end": "3166540"
  },
  {
    "text": "feature flag think about it as a glorified if statement if I've turned this plague on run this code if the flag",
    "start": "3166540",
    "end": "3173680"
  },
  {
    "text": "is off run this code pretty much all it is and I mean yes there's more complexity when you actually get down to",
    "start": "3173680",
    "end": "3179770"
  },
  {
    "text": "it but really that's all that is you're able to write dead code but not run it unless a flag is turned on that's pretty",
    "start": "3179770",
    "end": "3185950"
  },
  {
    "text": "much all it is but it's super powerful all right so all of these things production is a test environment",
    "start": "3185950",
    "end": "3193200"
  },
  {
    "text": "anything in pre-production is a simulation albeit a useful simulation but that means you need to make friends",
    "start": "3193200",
    "end": "3199180"
  },
  {
    "text": "with failure you need to be comfortable with the idea that the code you have released and put in production is going",
    "start": "3199180",
    "end": "3204820"
  },
  {
    "text": "to fail so that you need so you need to put yourself in a position where you can identify that failure with the feedback",
    "start": "3204820",
    "end": "3212050"
  },
  {
    "text": "loop all right and then learn from that failure which is the idea of",
    "start": "3212050",
    "end": "3217180"
  },
  {
    "text": "experimentation and learning and then react to it have that first sorry the",
    "start": "3217180",
    "end": "3223660"
  },
  {
    "text": "first way of thinking of DevOps where you can make a change push it all the way through this ties into all of these things that we were talking about focus",
    "start": "3223660",
    "end": "3230500"
  },
  {
    "text": "flow locality and simplicity if you can identify that issue because your",
    "start": "3230500",
    "end": "3235540"
  },
  {
    "text": "feedback loop is good make a change and have the ability to push that change all the way through to production then that",
    "start": "3235540",
    "end": "3241540"
  },
  {
    "text": "makes for a much much better environment and much better value for customers you're fixing bugs quickly you're",
    "start": "3241540",
    "end": "3247540"
  },
  {
    "text": "identifying them quickly and you're fixing them quickly deploy less stuff each time that gives you less risk bring",
    "start": "3247540",
    "end": "3254890"
  },
  {
    "text": "production to developers so it's not this car that you've got to fit your engine into in some at some time in the future separate the deployment of your",
    "start": "3254890",
    "end": "3262210"
  },
  {
    "text": "code from the release of that code and you can do that really easily with feature flags all right last one",
    "start": "3262210",
    "end": "3268060"
  },
  {
    "text": "gathering feedback customer focus is this if I deal right make sure that what",
    "start": "3268060",
    "end": "3273620"
  },
  {
    "text": "you're doing is actually focused on the customer not focused on how employable you are as a developer right that's",
    "start": "3273620",
    "end": "3280490"
  },
  {
    "text": "going to lead to better outcomes I mean make yourself employable fine but make sure that what you're doing day to day",
    "start": "3280490",
    "end": "3285650"
  },
  {
    "text": "is actually focused on customer this is a great t-shirt and a great phrase from",
    "start": "3285650",
    "end": "3291860"
  },
  {
    "text": "charity majors or I think it's MIPS II tipsy on Twitter 9s don't matter if",
    "start": "3291860",
    "end": "3297050"
  },
  {
    "text": "users aren't happy we talked about five nines with your application it's great if your applications up right but if",
    "start": "3297050",
    "end": "3304100"
  },
  {
    "text": "nobody's using it and everybody hates it and the nines don't matter right customer focus is really really",
    "start": "3304100",
    "end": "3310160"
  },
  {
    "text": "important you can get that shirt there by the way if you want this third eye",
    "start": "3310160",
    "end": "3317480"
  },
  {
    "text": "this third way of thinking this hypothesis driven development meaning you think this feature is going to work",
    "start": "3317480",
    "end": "3324830"
  },
  {
    "text": "for people and people are going to be happy with it so let's try that but",
    "start": "3324830",
    "end": "3329900"
  },
  {
    "text": "let's also measure whether they are happy with it hypothesis driven development is a great",
    "start": "3329900",
    "end": "3335270"
  },
  {
    "text": "way of thinking about it you're not only bring features you know are going to be successful you're delivering features you think are going to be successful and",
    "start": "3335270",
    "end": "3341480"
  },
  {
    "text": "if you don't have a way of testing your hypothesis then you really don't know whether it's going to be valuable to a",
    "start": "3341480",
    "end": "3347000"
  },
  {
    "text": "customer definition of done I love the",
    "start": "3347000",
    "end": "3352640"
  },
  {
    "text": "idea that done means valuable or it's not valuable but we learned something",
    "start": "3352640",
    "end": "3358550"
  },
  {
    "text": "from it anyway right so either way your feature or your work",
    "start": "3358550",
    "end": "3364520"
  },
  {
    "text": "that you're doing is not fully complete until either you're a customer is finding value from it or they're not",
    "start": "3364520",
    "end": "3370010"
  },
  {
    "text": "finally finding value and you know why and you can put that into your future changes you know why that thing failed",
    "start": "3370010",
    "end": "3377110"
  },
  {
    "text": "therefore you can make better decisions about what you're doing with your application in the future the key here",
    "start": "3377110",
    "end": "3384140"
  },
  {
    "text": "is that if you don't measure what's happening you can't know what's happening if you are just expecting your",
    "start": "3384140",
    "end": "3390350"
  },
  {
    "text": "feature to be valuable but you don't measure whether it's valuable whether that's asking customers directly but",
    "start": "3390350",
    "end": "3395750"
  },
  {
    "text": "they won't tell you everything or whether it's doing things like which the azure DevOps team does measuring when",
    "start": "3395750",
    "end": "3401540"
  },
  {
    "text": "somebody turns a feature flag on like tries out a new feature and then measuring when they turn it off",
    "start": "3401540",
    "end": "3406880"
  },
  {
    "text": "or if they turn it off and if lots of people turn it on and then turn it back off again then start to drill into or",
    "start": "3406880",
    "end": "3413480"
  },
  {
    "text": "why are they doing that and that might mean asking customers but if you don't measure what's happening you you really",
    "start": "3413480",
    "end": "3419509"
  },
  {
    "text": "don't know you're just guessing so there we go these things customer focus hypothesis driven development have",
    "start": "3419509",
    "end": "3427190"
  },
  {
    "text": "making sure that done means valuable you have that ownership all the way through to production including whether it's valuable and if it's not valuable that's",
    "start": "3427190",
    "end": "3433759"
  },
  {
    "text": "fine if you learn from it if you just scrap it and say are there users don't know what they're talking about not not customer focus right and then if",
    "start": "3433759",
    "end": "3441920"
  },
  {
    "text": "you don't measure what's happening in production you absolutely can't know whether it's valuable so that's all of",
    "start": "3441920",
    "end": "3447259"
  },
  {
    "text": "these things I just want to revisit this just to remind you to have opposite a union of people processing products to",
    "start": "3447259",
    "end": "3452660"
  },
  {
    "text": "enable continuous delivery of value you probably heard me say value about a hundred times during this talk right value is the most important thing right",
    "start": "3452660",
    "end": "3459829"
  },
  {
    "text": "make sure you are delivering value right Jean Kim's three ways is a great way of",
    "start": "3459829",
    "end": "3466069"
  },
  {
    "text": "thinking about the three things that really underpin everything we do with DevOps all right make sure you you look at those I would",
    "start": "3466069",
    "end": "3472759"
  },
  {
    "text": "highly recommend the Phoenix project for investigating them a bit further the five ideals from the unicorn project is",
    "start": "3472759",
    "end": "3479269"
  },
  {
    "text": "a great way of thinking about the different different ideal scenarios we want to exist in our organizations to",
    "start": "3479269",
    "end": "3484609"
  },
  {
    "text": "enable a good DevOps story and a good delivery of customer value right so",
    "start": "3484609",
    "end": "3489619"
  },
  {
    "text": "these two books highly recommend that link at the top which I think you can all see demoed on ms slash in DC slash",
    "start": "3489619",
    "end": "3495769"
  },
  {
    "text": "pragmatic - DevOps that has all of the links for all of this stuff so that's that's the one thing you want to know",
    "start": "3495769",
    "end": "3501259"
  },
  {
    "text": "it's gonna be on the next few slides so don't worry about that these two are from Jean Kim I would highly recommend",
    "start": "3501259",
    "end": "3506660"
  },
  {
    "text": "them their novels they're not text books they're fantastic he also had a hand in",
    "start": "3506660",
    "end": "3511849"
  },
  {
    "text": "the DevOps handbook and also the science of DevOps the accelerate book from dr.",
    "start": "3511849",
    "end": "3517279"
  },
  {
    "text": "Niccole falls grin who is an awesome researcher in this field that's full of real-world research into this stuff so",
    "start": "3517279",
    "end": "3524180"
  },
  {
    "text": "you can legitimately say this is based in actual research not in somebody's",
    "start": "3524180",
    "end": "3530390"
  },
  {
    "text": "ideas of what should happen those are fantastic books they're a little less novel II but they're still incredibly",
    "start": "3530390",
    "end": "3536660"
  },
  {
    "text": "good I recommend the state of DevOps report the accelerate state of DevOps report that",
    "start": "3536660",
    "end": "3544160"
  },
  {
    "text": "is a very digestible I think it's about 70 something pages of real statistics",
    "start": "3544160",
    "end": "3550640"
  },
  {
    "text": "and metrics around research from Nicole Falls granite and others as well it's a great one to actually print out and put",
    "start": "3550640",
    "end": "3556310"
  },
  {
    "text": "on a manager's desk if they don't believe in making change for DevOps that's a fantastic one as well of course",
    "start": "3556310",
    "end": "3562609"
  },
  {
    "text": "the continuous delivery book just humble and David Farley that's kind of the one",
    "start": "3562609",
    "end": "3567980"
  },
  {
    "text": "that's existed for a very long period of time it's fantastic and yes all of these links will be in that one URL there's",
    "start": "3567980",
    "end": "3575930"
  },
  {
    "text": "also some books from colleagues of mine other cloud advocates effective DevOps which is all about the culture of DevOps",
    "start": "3575930",
    "end": "3582320"
  },
  {
    "text": "which is fantastic from Jennifer Davis and Ren Daniels Emily Freeman just released DevOps for dummies which is",
    "start": "3582320",
    "end": "3587720"
  },
  {
    "text": "actually a really good book and it's not for dummies it's probably very poorly named but I think he kind of had to",
    "start": "3587720",
    "end": "3593750"
  },
  {
    "text": "because it's a series seeking sre as well by David blanky Dolman is a bit",
    "start": "3593750",
    "end": "3599089"
  },
  {
    "text": "more about site reliability engineering making sure that everything keeps running and runs very effectively these",
    "start": "3599089",
    "end": "3604339"
  },
  {
    "text": "are all great books from colleagues of mine that's the summary of the resources where they all live there's also a video",
    "start": "3604339",
    "end": "3611630"
  },
  {
    "text": "show that I do on a Microsoft on channel 9 or a dev rail labs I think it's devrel",
    "start": "3611630",
    "end": "3617119"
  },
  {
    "text": "studios I think it's called now called the DevOps lab where we interview really smart people about stuff that they do",
    "start": "3617119",
    "end": "3622520"
  },
  {
    "text": "and then you can get hold of me on Twitter demo visa or demo visa at Microsoft comm if you want to as well",
    "start": "3622520",
    "end": "3629109"
  },
  {
    "text": "all right I see all the phones have gone down thank you very much for your time I will be around here for the next little",
    "start": "3629109",
    "end": "3635030"
  },
  {
    "text": "while and when the next speaker comes up I'll head just outside the doors thank you very much for your time and",
    "start": "3635030",
    "end": "3641950"
  }
]