[
  {
    "text": "okay let's get started so I've Had The Good Fortune of speaking at the Q2 Center a number of times over the last",
    "start": "8920",
    "end": "15799"
  },
  {
    "text": "decade I am that old and I have come to the conclusion that this is by far and away my favorite room the reason this is",
    "start": "15799",
    "end": "23640"
  },
  {
    "text": "my favorite room is that the audience has to really want it right because on the ground floor it's the closest rooms",
    "start": "23640",
    "end": "30400"
  },
  {
    "text": "to the pub you've got the rooms on floor three which is like well I've had some food and I can't be bothered to get",
    "start": "30400",
    "end": "36399"
  },
  {
    "text": "anywhere else I kind of just roll into those other rooms but for this FL this room you've really got to want it you've",
    "start": "36399",
    "end": "42320"
  },
  {
    "text": "got to go through staircases and lifts and fight through the hordes and not be distracted by the bean bags downstairs",
    "start": "42320",
    "end": "48920"
  },
  {
    "text": "which is normally where I hide when these particular events are on so thank you so much you are my kind of people so",
    "start": "48920",
    "end": "54800"
  },
  {
    "text": "thank you indeed for coming along we're going talking today about is the definition of insanity what",
    "start": "54800",
    "end": "60120"
  },
  {
    "text": "we think it is and really discussion about how we can or some fundamental things that we can do to make our",
    "start": "60120",
    "end": "66040"
  },
  {
    "text": "distributed systems more resilient more robust um and these really are what I",
    "start": "66040",
    "end": "71640"
  },
  {
    "text": "think are some foundational technical things that you should be doing if you are building a distributed system and",
    "start": "71640",
    "end": "79560"
  },
  {
    "text": "you want it to have some semblance of resiliency and robustness uh this talk is partly the outcome of a book I've",
    "start": "79560",
    "end": "86360"
  },
  {
    "text": "been working on for about a year now called was this and it's um it's in Early Access now you can get more",
    "start": "86360",
    "end": "92600"
  },
  {
    "text": "information about it over at my website there's about five chapters up at the moment including the chapters that I'm",
    "start": "92600",
    "end": "98159"
  },
  {
    "text": "talking about today um the full book should be out towards the end of the year but we are going to be focusing",
    "start": "98159",
    "end": "103640"
  },
  {
    "text": "today on Three core ideas that I talk about in this book timeouts retries and",
    "start": "103640",
    "end": "109560"
  },
  {
    "text": "EM potency so timeouts right timeouts knowing when to give up on something retries knowing",
    "start": "109560",
    "end": "116280"
  },
  {
    "text": "when to try again and item potency which is knowing when retrying again is actually going to be safe we'll also",
    "start": "116280",
    "end": "122799"
  },
  {
    "text": "maybe along the way be discussing this particular quote to see if either a it is valid and B whether or not it's what",
    "start": "122799",
    "end": "131120"
  },
  {
    "text": "we think it is let's start out though by talking about the context in which we are operating don't worry there will be slide downloads at the end I have QR",
    "start": "131120",
    "end": "137720"
  },
  {
    "text": "codes for you uh let's talk about the world in which we are operating which is in the world of distributed systems it's",
    "start": "137720",
    "end": "143120"
  },
  {
    "text": "very worth explaining what a distributed system is because they're actually quite fundamental and they're everywhere and",
    "start": "143120",
    "end": "149560"
  },
  {
    "text": "even if you don't think you're building one you probably are technically speaking a distributed system is one",
    "start": "149560",
    "end": "157440"
  },
  {
    "text": "where two or more computers communicate with each other via networks the more distributed these",
    "start": "157440",
    "end": "164480"
  },
  {
    "text": "systems become generally the headaches also increase but this is fundamentally what a distributed system is so here I",
    "start": "164480",
    "end": "172000"
  },
  {
    "text": "got two computers and they are communicating with each other via Network sometimes you're doing that quite directly you're opening up network",
    "start": "172000",
    "end": "178440"
  },
  {
    "text": "connections you're sending bits and bites yourself sometimes you're doing it indirectly maybe via programming of traction you're using grpc for example",
    "start": "178440",
    "end": "185599"
  },
  {
    "text": "still using a network maybe you're using a message broker maybe you're using a file system to communicate between",
    "start": "185599",
    "end": "191120"
  },
  {
    "text": "computers it's always networks underneath all of that saying a distributed system is two",
    "start": "191120",
    "end": "198599"
  },
  {
    "text": "or more computers connected by a network is a very dry description of it because it doesn't really speak to the the sort",
    "start": "198599",
    "end": "204720"
  },
  {
    "text": "of horror pain and suffering that comes from anything related to networks and indeed computers and indeed people and",
    "start": "204720",
    "end": "211200"
  },
  {
    "text": "even rabbits which we'll get to a little bit later on this is actually my favorite definition of a distributed",
    "start": "211200",
    "end": "217599"
  },
  {
    "text": "system which comes from Computing Pioneer Leslie Lamport a distributed system is one in which the failure of a",
    "start": "217599",
    "end": "224040"
  },
  {
    "text": "computer that you didn't even know existed can cause your own computer to",
    "start": "224040",
    "end": "229120"
  },
  {
    "text": "be unusable Right Things Fall Apart and if you really want things to fall apart quickly use a distributed",
    "start": "229120",
    "end": "236680"
  },
  {
    "text": "system things do tend to collapse quite a bit bit now I'm not going to in this talk try and talk about all the ways in",
    "start": "236680",
    "end": "243159"
  },
  {
    "text": "which we can stop these systems falling apart but I at least going to deal with some of the fundamentals and behind it",
    "start": "243159",
    "end": "248920"
  },
  {
    "text": "all there are these nagging challenges that we have to deal with now there are lots of different ways of framing the",
    "start": "248920",
    "end": "255200"
  },
  {
    "text": "challenges of distributed systems such as the fallacies of distributed computing which is one of my own personal favorites I think Kevin's going",
    "start": "255200",
    "end": "261799"
  },
  {
    "text": "to be talking about that a little bit later on but I've realized through my own work and research and looking into",
    "start": "261799",
    "end": "268040"
  },
  {
    "text": "things like cap Theory and harvest and yield and all this stuff that fundamentally all of the challenges of",
    "start": "268040",
    "end": "273639"
  },
  {
    "text": "distributed systems from a developer point of view come down to just two things firstly you cannot beam",
    "start": "273639",
    "end": "281479"
  },
  {
    "text": "information instantaneously between two points I know that theoretically this is",
    "start": "281479",
    "end": "286919"
  },
  {
    "text": "doable with something called quantum entanglement where you can mirror the electron spin States and that is",
    "start": "286919",
    "end": "293280"
  },
  {
    "text": "theoretically doable but and this is very important that is not a networking protocol in addition I believe it only",
    "start": "293280",
    "end": "300400"
  },
  {
    "text": "works for read States so it takes time and how long it takes is only partly under your",
    "start": "300400",
    "end": "306400"
  },
  {
    "text": "control the second golden constraint if you will of distributed systems is",
    "start": "306400",
    "end": "312240"
  },
  {
    "text": "sometimes you can't reach the thing you want to talk to this is it this is",
    "start": "312240",
    "end": "318319"
  },
  {
    "text": "everything now The Logical conclusion of all of these things is lots of complexity however I always find that",
    "start": "318319",
    "end": "325000"
  },
  {
    "text": "when you find yourself lost in a very something weird going on having these rules at the back of your mind and",
    "start": "325000",
    "end": "330680"
  },
  {
    "text": "realizing that you only have partial control over these two factors is",
    "start": "330680",
    "end": "335800"
  },
  {
    "text": "important you do have some control you do not and never will do have total",
    "start": "335800",
    "end": "341160"
  },
  {
    "text": "control over both these things and once you accept that I find that most of the",
    "start": "341160",
    "end": "346680"
  },
  {
    "text": "complexities of distributed systems just end up actually being Common Sense hidden behind flowy languages and the",
    "start": "346680",
    "end": "353720"
  },
  {
    "text": "vague marketing of various vendors we are going to start by talking about timeouts timeouts are basic they are",
    "start": "353720",
    "end": "360120"
  },
  {
    "text": "fundamental and they speak very much to the fact that you can't beam information instantaneously between two points and",
    "start": "360120",
    "end": "366720"
  },
  {
    "text": "that sometimes the think to talk to isn't there therefore we need timeouts so what is a timeout a timeout is a",
    "start": "366720",
    "end": "373680"
  },
  {
    "text": "threshold after which we're going to give up we tried doing something and",
    "start": "373680",
    "end": "379720"
  },
  {
    "text": "rather than waiting we're going to give up so we're specifying a threshold and",
    "start": "379720",
    "end": "386319"
  },
  {
    "text": "once that threshold is reached we give up so in this situation here I want to go make a payment I say can you make a",
    "start": "386319",
    "end": "393240"
  },
  {
    "text": "payment and I don't get a response at a certain point I go right",
    "start": "393240",
    "end": "399120"
  },
  {
    "text": "I'm done it's probably worth just exploring briefly why we even have",
    "start": "399120",
    "end": "404240"
  },
  {
    "text": "timeouts right why not just wait forever because you don't want that",
    "start": "404240",
    "end": "409840"
  },
  {
    "text": "let's talk about why well firstly we just have the problem of computing resources If one computer is waiting for",
    "start": "409840",
    "end": "418000"
  },
  {
    "text": "another computer to do something you are tying up Computing resources yes even if",
    "start": "418000",
    "end": "423240"
  },
  {
    "text": "you are using some non-blocking extension and think you're all asynchronous there are Computing resources tied up if fundamentally your",
    "start": "423240",
    "end": "430039"
  },
  {
    "text": "computer is maintaining a network connection waiting for something to happen right so if you're waiting",
    "start": "430039",
    "end": "435319"
  },
  {
    "text": "forever Computing resources do get tied up you can mitigate this somewhat",
    "start": "435319",
    "end": "440879"
  },
  {
    "text": "non-blocking AO can help for example but it can't eliminate that so if I'm waiting forever and new work keeps",
    "start": "440879",
    "end": "448520"
  },
  {
    "text": "arriving I I've got more proportion of my Computing resources both on the client and server are now potentially",
    "start": "448520",
    "end": "455080"
  },
  {
    "text": "contended doing stuff and this is an issue because as you start to use up",
    "start": "455080",
    "end": "460759"
  },
  {
    "text": "those Computing resources things start to go wrong systems start to get slower which can",
    "start": "460759",
    "end": "466240"
  },
  {
    "text": "make timeouts worse systems can collapse and things get problematic so we don't want to just wait forever because",
    "start": "466240",
    "end": "473599"
  },
  {
    "text": "resources are tied up resource contention is a problem we also have the issue of course is that some times we",
    "start": "473599",
    "end": "479840"
  },
  {
    "text": "have these irritating things in our systems called human beings and human beings are waiting for",
    "start": "479840",
    "end": "486120"
  },
  {
    "text": "things they are not going to wait forever and in fact if you make make them wait too long they might not do",
    "start": "486120",
    "end": "492159"
  },
  {
    "text": "what you want them to do give you a slight case study which help this is my first sort of indoctrination into",
    "start": "492159",
    "end": "498159"
  },
  {
    "text": "understanding that getting timeouts right was important this would have been 2008 I want to say and I was helping uh",
    "start": "498159",
    "end": "505080"
  },
  {
    "text": "sort of re architect a site for selling amongst other things used cars new car cars motorbikes and things like that",
    "start": "505080",
    "end": "510879"
  },
  {
    "text": "it's a UK based company and we had uh lots of old websites for selling different types of products and we were",
    "start": "510879",
    "end": "517320"
  },
  {
    "text": "bringing them all together under one system because there's actually a lot of commonality between these different products used cars happen to be the",
    "start": "517320",
    "end": "524240"
  },
  {
    "text": "biggest market so here we are we've got our application which was called saon for reasons hopefully you don't have to",
    "start": "524240",
    "end": "529600"
  },
  {
    "text": "go into but this was basically an application where we were gradually kind of absorbing the functionality of all",
    "start": "529600",
    "end": "534760"
  },
  {
    "text": "these old websites in this particular system and normally at Peak uh each of",
    "start": "534760",
    "end": "541279"
  },
  {
    "text": "our nodes would be running between 30 to 60 concurrent requests which is not much at all these machines were had loads of",
    "start": "541279",
    "end": "548160"
  },
  {
    "text": "excess capacity they could have handled more requests they wanted to but even at Peak this is pretty good now above our",
    "start": "548160",
    "end": "555560"
  },
  {
    "text": "app we were taking in about 8,000 requests per second which was pretty much cashed entirely within a using a",
    "start": "555560",
    "end": "561800"
  },
  {
    "text": "system called squid that's sat in front of all this so with a lot of lad coming in these were basic cash misses load",
    "start": "561800",
    "end": "567760"
  },
  {
    "text": "quite small um however what something went wrong we our site started off uh started behaving",
    "start": "567760",
    "end": "575000"
  },
  {
    "text": "quite slowly and then fell over in a very quick um short space of time and we were seeing a spike from our these nodes",
    "start": "575000",
    "end": "581839"
  },
  {
    "text": "normally handling between 30 to 60 concurrent request to handling over 800 concurrent requests per machine and this",
    "start": "581839",
    "end": "588839"
  },
  {
    "text": "is with a Java runtime um where one connection equals one operating system",
    "start": "588839",
    "end": "596519"
  },
  {
    "text": "thread so now all of these machines are now trying to schedule and prioritize",
    "start": "596519",
    "end": "601839"
  },
  {
    "text": "800 plus threads so this was this this was excellent Hardware by the way it",
    "start": "601839",
    "end": "607640"
  },
  {
    "text": "wasn't that excellent so net result was all of those threads blocked waiting on",
    "start": "607640",
    "end": "613160"
  },
  {
    "text": "the machines that caused complete CPU saturation IO saturation the whole",
    "start": "613160",
    "end": "619440"
  },
  {
    "text": "system ground to a hole it went from everything being fine to everything not being fine in about half an hour luckily",
    "start": "619440",
    "end": "625839"
  },
  {
    "text": "it happened during the day so we were all caffeinated and we could deal with it properly right it turned out there was an application",
    "start": "625839",
    "end": "631600"
  },
  {
    "text": "for the downstream that was causing all the issues one of our websites uh was behaving in the worst",
    "start": "631600",
    "end": "637639"
  },
  {
    "text": "way anything can behave in a distributed system which is it was IGN acknowledging a request and then doing nothing so you",
    "start": "637639",
    "end": "644240"
  },
  {
    "text": "could open the connection you could send the request and it would just go and it would do that",
    "start": "644240",
    "end": "652320"
  },
  {
    "text": "forever and it was completely and utterly wedged in a way we'd never seen before now we actually restarted the",
    "start": "652320",
    "end": "660720"
  },
  {
    "text": "Caravan application and it was fine again and obviously we had to work out the fix but that failing should not have",
    "start": "660720",
    "end": "666200"
  },
  {
    "text": "caused the whole system to crash turned out it was largely not entirely due to",
    "start": "666200",
    "end": "671360"
  },
  {
    "text": "timeouts when a request came into to our application said I want to see some Caravans we would take that request we'",
    "start": "671360",
    "end": "678120"
  },
  {
    "text": "go get a you get a worker out of the connection pool and then use that to establish the HTP connection to the",
    "start": "678120",
    "end": "685560"
  },
  {
    "text": "Caravan website this is standard connection pooling works in the same way in net work same you know if you use",
    "start": "685560",
    "end": "692560"
  },
  {
    "text": "poly the built-in stuff in net same thing in Java connection pools are ways of limiting the number of outbound band",
    "start": "692560",
    "end": "697880"
  },
  {
    "text": "connections you have you'll be doing this even if you don't realize it so you pick up a worker and then you use that worker to make the",
    "start": "697880",
    "end": "704040"
  },
  {
    "text": "call and so that was how you'd establish the call out a caravan site so it was taking a long time to",
    "start": "704040",
    "end": "711120"
  },
  {
    "text": "respond so a lot of the workers were now tied up waiting for the Caravan site to",
    "start": "711120",
    "end": "716680"
  },
  {
    "text": "respond and it was a problem because while we",
    "start": "716680",
    "end": "721920"
  },
  {
    "text": "were blocks waiting the users who had gone to look at the Caravans got bored",
    "start": "721920",
    "end": "727240"
  },
  {
    "text": "and they had refreshed their browser that's a problem because the",
    "start": "727240",
    "end": "732600"
  },
  {
    "text": "original request they put into our system is still there they have refreshed their browser and then it",
    "start": "732600",
    "end": "737959"
  },
  {
    "text": "didn't work so what did they do again they really wanted to see that Caravan they hit refresh again and when that",
    "start": "737959",
    "end": "743959"
  },
  {
    "text": "didn't work they kept refreshing even more annoyingly these other sites working per perfectly fine",
    "start": "743959",
    "end": "749839"
  },
  {
    "text": "but the connection pool was shared and so no request of getting through to those apps either not great the biggest issue and there were",
    "start": "749839",
    "end": "757079"
  },
  {
    "text": "others was that we weren't timing out quickly enough when you got a worker out of the connection pool the default behavior of this particular connection",
    "start": "757079",
    "end": "763199"
  },
  {
    "text": "pool is the Jakarta Commons one uh was 30 seconds so you'd wait 30 seconds",
    "start": "763199",
    "end": "768639"
  },
  {
    "text": "before giving up even in 2008 we knew that our users would wait 10 seconds or",
    "start": "768639",
    "end": "775959"
  },
  {
    "text": "less right they're not going to wait 30 seconds so that was way way too aggressive even",
    "start": "775959",
    "end": "781519"
  },
  {
    "text": "worse when you went to the connection p and said can I have a worker please there was a timeout specified for that",
    "start": "781519",
    "end": "787040"
  },
  {
    "text": "and it was set to minus one which means it would wait forever and that's where the fundamental problem was this was",
    "start": "787040",
    "end": "792600"
  },
  {
    "text": "default Behavior by the way these two numbers basically took the whole system",
    "start": "792600",
    "end": "797880"
  },
  {
    "text": "down the connection pull was exhausted so nothing else could happen all those",
    "start": "797880",
    "end": "803440"
  },
  {
    "text": "requests coming in were blocks waiting on the connection pole and even if someone hit Refresh on their browser",
    "start": "803440",
    "end": "808839"
  },
  {
    "text": "those connections didn't go away now there's a lot more we could we did with this system other than fixing the",
    "start": "808839",
    "end": "813959"
  },
  {
    "text": "timeout I can do another talk we talk about bulkheading and circuit breakers and rate limiting and load shedding and",
    "start": "813959",
    "end": "819519"
  },
  {
    "text": "all those other things but we're here to talk about the timeouts getting timeouts right is kind",
    "start": "819519",
    "end": "824959"
  },
  {
    "text": "of hard if you get a timeout Too Short you might give up on something that may",
    "start": "824959",
    "end": "830480"
  },
  {
    "text": "otherwise have worked in which case that's just wasted effort and it could be even worse if that then causes you to",
    "start": "830480",
    "end": "835720"
  },
  {
    "text": "then retry if you wait too long you can increase the resource contention",
    "start": "835720",
    "end": "841800"
  },
  {
    "text": "to the point where the system becomes potentially unstable and so trying to find that",
    "start": "841800",
    "end": "847120"
  },
  {
    "text": "balance is is kind of really tricky so if you're not sure right now if you've got the right timeouts what do you do",
    "start": "847120",
    "end": "852920"
  },
  {
    "text": "well one of the most important things to do is to understand what is normal system behavior when things are",
    "start": "852920",
    "end": "859120"
  },
  {
    "text": "operating well what do we normally expect in terms of how long things take and ideally you'd put you'd put this up",
    "start": "859120",
    "end": "865800"
  },
  {
    "text": "on a histogram so histograms are really fantastic ways of visualizing information this type of information",
    "start": "865800",
    "end": "872639"
  },
  {
    "text": "what a histogram does is it's showing frequency so as we go from left to right we are seeing calls that took longer so",
    "start": "872639",
    "end": "879120"
  },
  {
    "text": "the calls over here took 250 milliseconds and the calls down at the end took 10 milliseconds we going to",
    "start": "879120",
    "end": "884519"
  },
  {
    "text": "assume that's going to be a cach hit of some sort and so as we go up that's the",
    "start": "884519",
    "end": "890360"
  },
  {
    "text": "frequency so you can get start to get a sense of the shape of your response times histograms are very very useful",
    "start": "890360",
    "end": "897320"
  },
  {
    "text": "for seeing patterns so we could say look we've got some weird outliers is that a problem we'll come",
    "start": "897320",
    "end": "903720"
  },
  {
    "text": "back to those a bit later on and you might start saying well actually look the vast majority of our calls completed",
    "start": "903720",
    "end": "909360"
  },
  {
    "text": "successfully around here so you always starting to have conversations about",
    "start": "909360",
    "end": "914399"
  },
  {
    "text": "where you place these lines don't do averages averages are useless absolutely",
    "start": "914399",
    "end": "920560"
  },
  {
    "text": "useless for cheating these things it's all about looking at the the distribution and the shape this is",
    "start": "920560",
    "end": "926440"
  },
  {
    "text": "useful so what is your current behavior when things go well were these lines normally that's a good starting point if",
    "start": "926440",
    "end": "933720"
  },
  {
    "text": "you don't have the ability to extract that information from your systems today get that ability in there the next piece",
    "start": "933720",
    "end": "939319"
  },
  {
    "text": "is then to Overlay user expectations how long are your users going to wait we were waiting 30 seconds how long",
    "start": "939319",
    "end": "947720"
  },
  {
    "text": "were our people actually going to wait for a site a page to load now the annoying thing was we already had",
    "start": "947720",
    "end": "953319"
  },
  {
    "text": "targets defined we already knew that our render time at the browser was was 4",
    "start": "953319",
    "end": "958519"
  },
  {
    "text": "seconds and that was already something we were working towards so we had a number in mind and yet we had a timeout that was",
    "start": "958519",
    "end": "964839"
  },
  {
    "text": "way more generous than that the third thing you need to do is to make sure you can change your",
    "start": "964839",
    "end": "971319"
  },
  {
    "text": "timeouts without changing code and this is quite important partly because you're",
    "start": "971319",
    "end": "976959"
  },
  {
    "text": "going to want to check your timeouts right by doing some load testing and playing around with some numbers but also because if things start going",
    "start": "976959",
    "end": "982759"
  },
  {
    "text": "weirdly wrong in production you want to be able to fix it now",
    "start": "982759",
    "end": "989600"
  },
  {
    "text": "we'll come back to a real life story about why that's so important a bit later on fundamentally though time out",
    "start": "989600",
    "end": "995560"
  },
  {
    "text": "is All About Us prioritizing the health of the system over the success of a",
    "start": "995560",
    "end": "1001480"
  },
  {
    "text": "given request that's what we're trying to do here in general when you're looking at",
    "start": "1001480",
    "end": "1007040"
  },
  {
    "text": "timeouts we're thinking about system performance and behavior what you normally want to be aiming for is a",
    "start": "1007040",
    "end": "1012399"
  },
  {
    "text": "fairly consistent Behavior right so we want",
    "start": "1012399",
    "end": "1019600"
  },
  {
    "text": "ideally if you're thinking about say the response time of a service you don't want a huge variation of the how long",
    "start": "1019600",
    "end": "1026678"
  },
  {
    "text": "that operation can take when it works successfully you want kind of Fairly",
    "start": "1026679",
    "end": "1032839"
  },
  {
    "text": "consistent understandable Behavior and the reason that's important is because how do you know something's gone wrong",
    "start": "1032839",
    "end": "1038640"
  },
  {
    "text": "if you've got a huge variability if a core could take anywhere from a second to 10 minutes to behave successfully",
    "start": "1038640",
    "end": "1045319"
  },
  {
    "text": "return successfully that makes it quite difficult for you to set things like time or trigger alerts when thresholds",
    "start": "1045319",
    "end": "1050440"
  },
  {
    "text": "are reached right so this is another way of saying being inconsistently fast might actually be worse than being",
    "start": "1050440",
    "end": "1056880"
  },
  {
    "text": "consistently slow four things that work right so here's one histogram and here's",
    "start": "1056880",
    "end": "1063679"
  },
  {
    "text": "another now the number of calls is exactly the same the average response",
    "start": "1063679",
    "end": "1069760"
  },
  {
    "text": "time is also exactly the same however the latency here is a much tighter bound",
    "start": "1069760",
    "end": "1076280"
  },
  {
    "text": "so you'll probably in General T it much easier here with a sort of a more compressed latency histogram like this",
    "start": "1076280",
    "end": "1083760"
  },
  {
    "text": "to reason about is it behaving correctly is something going wrong is something going",
    "start": "1083760",
    "end": "1089480"
  },
  {
    "text": "arai but again you can't even reason about that unless you can see these pictures these can also help you",
    "start": "1089480",
    "end": "1095880"
  },
  {
    "text": "understand what these things are these are what we often call tail latencies otherwise known as sort of high percentile latencies these are outliers",
    "start": "1095880",
    "end": "1102919"
  },
  {
    "text": "and when you have a large number of calls there's always a chance you're going to get some outliers these these",
    "start": "1102919",
    "end": "1108240"
  },
  {
    "text": "things just sort of happen sometimes sometimes that happened because you had a machine that was unhealthy you had a",
    "start": "1108240",
    "end": "1114240"
  },
  {
    "text": "bit of network congestion a packet went down the wrong leg of the internet it",
    "start": "1114240",
    "end": "1119360"
  },
  {
    "text": "could be structural issues I've had this before when we were hitting a machine that was still running",
    "start": "1119360",
    "end": "1125000"
  },
  {
    "text": "off spinning platters rather than spinning running off ssds for example although we all thought the instances were the",
    "start": "1125000",
    "end": "1130679"
  },
  {
    "text": "same so the problem with tell latencies is partly they pull out our",
    "start": "1130679",
    "end": "1136080"
  },
  {
    "text": "understanding about what is our normal successful response time bounds that's one issue so it's going to distort our",
    "start": "1136080",
    "end": "1143440"
  },
  {
    "text": "view of the world but the other bigger issue is these tend to be human beings if these tail latencies result in",
    "start": "1143440",
    "end": "1149840"
  },
  {
    "text": "human beings being unhappy that's going to be an impact right um and tail latencies can",
    "start": "1149840",
    "end": "1156000"
  },
  {
    "text": "get worse as you get more distributed and so if you're looking at",
    "start": "1156000",
    "end": "1161120"
  },
  {
    "text": "something like a microservice architecture we tend to push to be towards being a bit more fine grained if",
    "start": "1161120",
    "end": "1166480"
  },
  {
    "text": "you also have some tail latencies in there as well you can find these problems start to magnify so let's imagine we've got a",
    "start": "1166480",
    "end": "1173000"
  },
  {
    "text": "scenario here where the chance of one of our calls effective being a toil latency is one and 100 so one and 100 calls",
    "start": "1173000",
    "end": "1179760"
  },
  {
    "text": "between these two services will Spike for some reason now if we take that same",
    "start": "1179760",
    "end": "1185480"
  },
  {
    "text": "frequency and now we do a fan out call and each of those fan out calls has the",
    "start": "1185480",
    "end": "1190679"
  },
  {
    "text": "same kind of probability we see a drastic increase in How likely we are to",
    "start": "1190679",
    "end": "1195880"
  },
  {
    "text": "be affected by a tail latency let's imagine a call comes into a service which in turn does some parallel",
    "start": "1195880",
    "end": "1202360"
  },
  {
    "text": "processing across five machines if each of those also has that same frequency or tail latencies the",
    "start": "1202360",
    "end": "1208320"
  },
  {
    "text": "chance of our initial call being impacted by that tail latency goes from being one in 100 to five in a 100 so we",
    "start": "1208320",
    "end": "1216520"
  },
  {
    "text": "see a big increase in How likely you are to be affected by tail latencies from an end user point of view as you increase",
    "start": "1216520",
    "end": "1223200"
  },
  {
    "text": "the parallelism uh Mark Brooker who's got some awesome stuff all about this has done some visualizations of this so",
    "start": "1223200",
    "end": "1228440"
  },
  {
    "text": "these L basically latency histograms and as he ramps up the number of calls being done in parallel you start to see how",
    "start": "1228440",
    "end": "1235640"
  },
  {
    "text": "tail latencies can really warp our kind of perception of how long well the reality of how long things take so it's",
    "start": "1235640",
    "end": "1242559"
  },
  {
    "text": "p animations the number of parallel calls are increasing so these are the latencies which are affected by the tail",
    "start": "1242559",
    "end": "1249159"
  },
  {
    "text": "latencies and these are the ones that aren't so as we go we see a larger and larger increase I don't know what the colors aren't coming through on that one",
    "start": "1249159",
    "end": "1256600"
  },
  {
    "text": "so just increasing the parallelism increases the chance you're going to see that impact it also of course gets worse",
    "start": "1256600",
    "end": "1263120"
  },
  {
    "text": "with sequential calls as well right same problem starts to occur I mean this is bad anyway from an overall latency point",
    "start": "1263120",
    "end": "1269039"
  },
  {
    "text": "of view when you have lots of Serial calls because your endtoend latency becomes a problem and if you've got a large variability in latency for each of",
    "start": "1269039",
    "end": "1275480"
  },
  {
    "text": "these individual calls that that sort of that sums up you get an even larger distribution here so you know in this",
    "start": "1275480",
    "end": "1283039"
  },
  {
    "text": "example he's done the similar this is another one from Mark Brooker where again what we're seeing here is as he increases the number of Serial calls",
    "start": "1283039",
    "end": "1289320"
  },
  {
    "text": "same probability for any individual call to be a tail latency you start to see some really odd warping effects",
    "start": "1289320",
    "end": "1295000"
  },
  {
    "text": "initially it's pretty much the same and then these are the tail latencies here and so as we increase the number of",
    "start": "1295000",
    "end": "1300039"
  },
  {
    "text": "Serial calls you start seeing this bigger and bigger shift to the right I mean lots of Serial calls aren't good",
    "start": "1300039",
    "end": "1306120"
  },
  {
    "text": "anyway if you want to get into I could do a whole talk on T latencies don't have time to go into how they happen and",
    "start": "1306120",
    "end": "1312039"
  },
  {
    "text": "why and how you fix them but a good starting point would be the tailor scale um which is sort of talks about how you",
    "start": "1312039",
    "end": "1318159"
  },
  {
    "text": "do like request hedging this is by Jeff Dean and um and L baraso and also Mark",
    "start": "1318159",
    "end": "1324559"
  },
  {
    "text": "brooker's original writing on this stuff which is really really great both of these are highly recommended so we'",
    "start": "1324559",
    "end": "1329919"
  },
  {
    "text": "talked about timeouts at a certain point we have to give up so if we're going to give up at a certain point the question is what do we do next well this is when",
    "start": "1329919",
    "end": "1336559"
  },
  {
    "text": "we get into retries we start thinking about this quote the definition of insanity is doing the same thing over",
    "start": "1336559",
    "end": "1341919"
  },
  {
    "text": "and over again and expecting a different result is that actually insane because I would argue it's not at least in the",
    "start": "1341919",
    "end": "1348120"
  },
  {
    "text": "context of a distributed system because we know from a distributed system that sometimes you can't reach the thing you",
    "start": "1348120",
    "end": "1354760"
  },
  {
    "text": "want to talk to and there a whole host of reasons that might cause the thing you want to talk to not being there that",
    "start": "1354760",
    "end": "1360600"
  },
  {
    "text": "might actually be shortterm issues that might be ephemeral issues maybe you were",
    "start": "1360600",
    "end": "1366120"
  },
  {
    "text": "loading a web page and somebody who's definitely not the Russian military cut",
    "start": "1366120",
    "end": "1371520"
  },
  {
    "text": "you know a suby cable but it wasn't them definitely wasn't them all right they weren't look there were nowhere near it",
    "start": "1371520",
    "end": "1376799"
  },
  {
    "text": "when it happened and if I refresh the page my traffic is going to get routed via one of the other links we're quite",
    "start": "1376799",
    "end": "1382559"
  },
  {
    "text": "fortunate in the UK where these things happen we don't get fixed actually I have actually lived in places where when",
    "start": "1382559",
    "end": "1387960"
  },
  {
    "text": "this does go you do lose the internet right but we're quite fortunate that we have lots of redundancy around these things it still does have an impact I",
    "start": "1387960",
    "end": "1395120"
  },
  {
    "text": "worked in one place I worked in leester my first ever job and I worked in this these sort of uh it's an old industrial",
    "start": "1395120",
    "end": "1401600"
  },
  {
    "text": "estate and they basically reused ducting that was there for like pipes and things between the buildings to also run the",
    "start": "1401600",
    "end": "1407600"
  },
  {
    "text": "network cables um and uh I don't know if it's in the middle of the countryside in last this year and um one thing in the countryside",
    "start": "1407600",
    "end": "1415360"
  },
  {
    "text": "that loves channels underground rabbits and if I've got a friend who actually",
    "start": "1415360",
    "end": "1420640"
  },
  {
    "text": "keeps rabbits has house rabbits and the thing they love more than anything else in the world is insulation around cables",
    "start": "1420640",
    "end": "1426279"
  },
  {
    "text": "they it's like crack cocaine for them so basically the rabbits moved in and they just ate the network cable right you",
    "start": "1426279",
    "end": "1433480"
  },
  {
    "text": "can't handle that in your code right you don't have the only way you have control of that that situation is if you want to",
    "start": "1433480",
    "end": "1440039"
  },
  {
    "text": "go down uh late at night with a shotgun it's not necessarily very nice thing to do these things occur though I mean we",
    "start": "1440039",
    "end": "1446600"
  },
  {
    "text": "know that things sometimes fail and that's why we have low balances which one of the reasons we have low balances",
    "start": "1446600",
    "end": "1452440"
  },
  {
    "text": "right I make a call that order instance has having an issue maybe it hits a machine that's just being restarted or",
    "start": "1452440",
    "end": "1460279"
  },
  {
    "text": "just being done by the out of memory killer on kubernetes or whatever else so that had an issue so that call maybe I",
    "start": "1460279",
    "end": "1466760"
  },
  {
    "text": "Ed that call out or maybe the call just failed the connection didn't even establish in the first place but that's okay because if I retry the load",
    "start": "1466760",
    "end": "1474520"
  },
  {
    "text": "balancer may be able to route my call to a node which is actually working and so we know this is what happens and that's",
    "start": "1474520",
    "end": "1480559"
  },
  {
    "text": "why we have low balances that's why we also know that retrying makes sense I'm sure lots of you I mean how many people",
    "start": "1480559",
    "end": "1486679"
  },
  {
    "text": "here are using poly in net that's about half of you right I",
    "start": "1486679",
    "end": "1491880"
  },
  {
    "text": "suspect you're using the retry policies and po which is a lot right because you know this is a thing",
    "start": "1491880",
    "end": "1498960"
  },
  {
    "text": "so if at first you don't succeed it might be worth trying again",
    "start": "1498960",
    "end": "1504240"
  },
  {
    "text": "this is absolutely fine and sensible how many re",
    "start": "1504240",
    "end": "1509880"
  },
  {
    "text": "tries one two 50 now of course if you've got a sense",
    "start": "1509880",
    "end": "1517159"
  },
  {
    "text": "of the overarching time out or how long your wait your your client is willing to wait the number of retries that you're",
    "start": "1517159",
    "end": "1523120"
  },
  {
    "text": "going to take into account has to take that into account as well right you've got the timeouts for each individual call but they sum",
    "start": "1523120",
    "end": "1530760"
  },
  {
    "text": "up if you retry too much you might actually overload a server I make a call",
    "start": "1530760",
    "end": "1537039"
  },
  {
    "text": "I time it out I make a call I time it out I make a call I time it out if you",
    "start": "1537039",
    "end": "1542240"
  },
  {
    "text": "retry too often remember a lot of time those Computing resources might still be timed out or might still be tied out",
    "start": "1542240",
    "end": "1548039"
  },
  {
    "text": "until the server can process them even if the client has given up so therefore we set a maximum number",
    "start": "1548039",
    "end": "1554080"
  },
  {
    "text": "of retries because we don't want to overload our servers",
    "start": "1554080",
    "end": "1559200"
  },
  {
    "text": "next we have to consider delays between retries this is a problem that hit",
    "start": "1559200",
    "end": "1564720"
  },
  {
    "text": "Square so Square had a large scale H think 2017 multipath which is their authentication system internally um",
    "start": "1564720",
    "end": "1572480"
  },
  {
    "text": "basically was get what got restarted and it was try to establish a connection with reddis to put out his information and the Pol basically redis",
    "start": "1572480",
    "end": "1580039"
  },
  {
    "text": "was quite heavily loaded the clients the multiplas clients would do 500",
    "start": "1580039",
    "end": "1585159"
  },
  {
    "text": "retries right with no delay between those retries and that was hardcoded and so what happened was multi",
    "start": "1585159",
    "end": "1593000"
  },
  {
    "text": "passes kept getting hammered and people were restarting the clients just think oh that's going to fix it and that just",
    "start": "1593000",
    "end": "1598320"
  },
  {
    "text": "increase the load now those values were not were in code they were hardcoded",
    "start": "1598320",
    "end": "1604640"
  },
  {
    "text": "they fixed it but now if you find a problem like that your timeout is wrong when you don't have the right delay and it's in code you've now got to go change",
    "start": "1604640",
    "end": "1611880"
  },
  {
    "text": "code recompile maybe probably retest redeploy if it's in a text file you just",
    "start": "1611880",
    "end": "1617520"
  },
  {
    "text": "go change the text file so put your time outs and these things in a text file and yes delays are sensible to put your",
    "start": "1617520",
    "end": "1625200"
  },
  {
    "text": "retry limits and all these things now the retries get interesting I'm sure most of you uh if you're using something",
    "start": "1625200",
    "end": "1630960"
  },
  {
    "text": "like poly or resilience 4J in a Java world you're probably using one of the default retry policies which will give",
    "start": "1630960",
    "end": "1637200"
  },
  {
    "text": "you a exponential or semi- exponential back off between the retries so another",
    "start": "1637200",
    "end": "1642240"
  },
  {
    "text": "words rather than having a fixed Cadence we actually have a variable Cadence between retries and that's quite common",
    "start": "1642240",
    "end": "1648279"
  },
  {
    "text": "it's not the only thing you need to do though what you can get is when all the clients start to synchronize is you can",
    "start": "1648279",
    "end": "1654760"
  },
  {
    "text": "get like waves hitting a server causing problems so in this scenario here right",
    "start": "1654760",
    "end": "1660080"
  },
  {
    "text": "we've got the calls coming in and we're hitting a threshold which is kind of where the server starting to Creek a",
    "start": "1660080",
    "end": "1665519"
  },
  {
    "text": "little bit and so a portion of those calls above that threshold start getting timed out right so what happens is some",
    "start": "1665519",
    "end": "1672000"
  },
  {
    "text": "of those calls time out and so they're going to get retried because they all timed out around the same sort of time",
    "start": "1672000",
    "end": "1677360"
  },
  {
    "text": "if they've all got roughly the same delay they're all going to retry in the same duration so they all come back as a",
    "start": "1677360",
    "end": "1685480"
  },
  {
    "text": "cluster right so this green area here is this first retry and of course that's",
    "start": "1685480",
    "end": "1690600"
  },
  {
    "text": "still pushing us over that threshold so portion of those time out and the other new calls time out as well and if we",
    "start": "1690600",
    "end": "1697480"
  },
  {
    "text": "wait the same period of time you can start to see these things magnify so if you have very set",
    "start": "1697480",
    "end": "1704960"
  },
  {
    "text": "durations between the retri of clients even if by the way those clients have exponential",
    "start": "1704960",
    "end": "1711799"
  },
  {
    "text": "backoffs and exponential backoffs cause problems for user facing stuff anyway we still have an",
    "start": "1711799",
    "end": "1717840"
  },
  {
    "text": "issue so the the way we solve this is by adding Jitter so networking Jitter is",
    "start": "1717840",
    "end": "1723840"
  },
  {
    "text": "like a variation in latency and we're basically inserting artificial Jitter the way we do that is that your clients",
    "start": "1723840",
    "end": "1731159"
  },
  {
    "text": "will add a random amount of delay so there might be a normal delay we're",
    "start": "1731159",
    "end": "1737399"
  },
  {
    "text": "going to wait 200 M and there'll be a plus or minus some random amount and the idea here is",
    "start": "1737399",
    "end": "1743159"
  },
  {
    "text": "that we're going to space out we're going to space out those calls the idea",
    "start": "1743159",
    "end": "1748840"
  },
  {
    "text": "here is that we smooth off these Peaks and we Bridge them out so the same number of calls in this scenario Here",
    "start": "1748840",
    "end": "1754760"
  },
  {
    "text": "and Now much more spaced out we're trying to reduce the Peaks we're hitting and actually also reduce the troughs as",
    "start": "1754760",
    "end": "1761799"
  },
  {
    "text": "well so again use a good connection Library they will have these values",
    "start": "1761799",
    "end": "1767559"
  },
  {
    "text": "allow po absolutely lets you specify this stuff there'll be some defaults in there but now you at least know why",
    "start": "1767559",
    "end": "1773120"
  },
  {
    "text": "they're there and you might even want to be able to change them if you can do some load testing and view your response times in a histogram like that you've",
    "start": "1773120",
    "end": "1779679"
  },
  {
    "text": "now able to go start making some tweaks and seeing what happens but in general like one of these",
    "start": "1779679",
    "end": "1785480"
  },
  {
    "text": "graphs is better than the other the same number of calls and I definitely would want the one on the right the last thing we're going to talk",
    "start": "1785480",
    "end": "1792080"
  },
  {
    "text": "about is in many ways the trickiest aspect a lot of what I've talked about",
    "start": "1792080",
    "end": "1797320"
  },
  {
    "text": "so far I think things that you can sort of retrofit into existing applications right okay I can go see",
    "start": "1797320",
    "end": "1803440"
  },
  {
    "text": "where my connection pools are make sure the timeouts are correct because probably you're using things already that give you these",
    "start": "1803440",
    "end": "1810000"
  },
  {
    "text": "capabilities so you can go in you can make the observations you can start doing the tweaks the next bit gets a",
    "start": "1810000",
    "end": "1816240"
  },
  {
    "text": "little bit trickier and this is asking asking the question rather is it safe to",
    "start": "1816240",
    "end": "1821600"
  },
  {
    "text": "retry something so here we've got an operation where the order service wants",
    "start": "1821600",
    "end": "1826760"
  },
  {
    "text": "to send me some money very generous of the order service light think comes from one of you you want to pay me",
    "start": "1826760",
    "end": "1832519"
  },
  {
    "text": "£100 so you say pay Sam £100 but you don't get a",
    "start": "1832519",
    "end": "1839080"
  },
  {
    "text": "response now you're desperate to give me money um I'm desperate to take your",
    "start": "1839120",
    "end": "1844799"
  },
  {
    "text": "money I'm buying a house you but you're so desperate you didn't get a response I really want to make sure Sam gets the",
    "start": "1844799",
    "end": "1850440"
  },
  {
    "text": "money but we've got a tricky problem now because from the point of view of the order service if you don't get a",
    "start": "1850440",
    "end": "1856159"
  },
  {
    "text": "response there are kind of two equally likely possibilities the first possibility is",
    "start": "1856159",
    "end": "1862320"
  },
  {
    "text": "the request to me to say pay sam1 pounds the first possibility is that that never got picked up or",
    "start": "1862320",
    "end": "1868760"
  },
  {
    "text": "processed so the first possibility is the request was not processed in the first place and that's why we didn't get",
    "start": "1868760",
    "end": "1874360"
  },
  {
    "text": "response because the request wasn't processed so maybe the request got lost on the way maybe the the server picked",
    "start": "1874360",
    "end": "1880720"
  },
  {
    "text": "up that request but maybe crashed before it could complete processing and perform",
    "start": "1880720",
    "end": "1885760"
  },
  {
    "text": "the right that's one possibility there's a second possibility and this is",
    "start": "1885760",
    "end": "1891000"
  },
  {
    "text": "kind of where things start to get a bit iffy the second possibility is you sent the",
    "start": "1891000",
    "end": "1896480"
  },
  {
    "text": "request the request got processed but the response didn't get to you and again",
    "start": "1896480",
    "end": "1902840"
  },
  {
    "text": "this could happen because for example let's imagine in the payment server I was going to send the event I was going",
    "start": "1902840",
    "end": "1909159"
  },
  {
    "text": "to send the response rather and my server crashed before I could send a response but I probably send the",
    "start": "1909159",
    "end": "1915159"
  },
  {
    "text": "response after I've done the right this is partly why people use transactional outboxes right to avoid",
    "start": "1915159",
    "end": "1921679"
  },
  {
    "text": "this problem but even with the transactional outbox there still things that could go wrong that meant that that response never gets back to me certainly",
    "start": "1921679",
    "end": "1928399"
  },
  {
    "text": "Could Happen even say case where we just communicating over HTP there's lots of situations where that could happen so",
    "start": "1928399",
    "end": "1933480"
  },
  {
    "text": "from the point of view of the order service it's possible the money got paid",
    "start": "1933480",
    "end": "1938760"
  },
  {
    "text": "and it's possible the money didn't get paid and you don't know which is which it's like inside this box there's either",
    "start": "1938760",
    "end": "1943880"
  },
  {
    "text": "a dead cat or aive cat and in either case I want my1 pound right so what' you",
    "start": "1943880",
    "end": "1949880"
  },
  {
    "text": "do now if you say pay S100 and you don't",
    "start": "1949880",
    "end": "1955440"
  },
  {
    "text": "get a response but it was actually paid and then you say pay them1 P again in",
    "start": "1955440",
    "end": "1960600"
  },
  {
    "text": "this situation from your point of view you might have the undesirable situation you now actually paid",
    "start": "1960600",
    "end": "1966639"
  },
  {
    "text": "me200 to be really clear I'm pretty happy with the whole situation but it's probably not what you",
    "start": "1966639",
    "end": "1972559"
  },
  {
    "text": "want you'd also think at this point Sam people don't build systems like this I can go through about five or 10 different case days are dug up of",
    "start": "1972559",
    "end": "1978880"
  },
  {
    "text": "payment services and systems where exactly this thing has actually happened around money being drained from people's",
    "start": "1978880",
    "end": "1985279"
  },
  {
    "text": "accounts so what do we do here this is we introduced a concept called item potency and this is a mathematical",
    "start": "1985279",
    "end": "1990799"
  },
  {
    "text": "concept which I do not understand because I'm bad at maths but I think I'm good at common sense and for me there's",
    "start": "1990799",
    "end": "1997080"
  },
  {
    "text": "a very basic kind of construct around well where thinking about item potent operations right an item potent",
    "start": "1997080",
    "end": "2003919"
  },
  {
    "text": "operation is an operation that you can apply multiple times without changing the",
    "start": "2003919",
    "end": "2012120"
  },
  {
    "text": "result so it's something we can safely retry so in this situation here this",
    "start": "2012120",
    "end": "2019320"
  },
  {
    "text": "operation as we've described it is not fundamentally idem potent because",
    "start": "2019320",
    "end": "2025440"
  },
  {
    "text": "carrying out the same operation a second time should still only yield me being",
    "start": "2025440",
    "end": "2031880"
  },
  {
    "text": "100 up but as we've got it modeled here is actually going to result in me being2 200 up so we say his operation is not",
    "start": "2031880",
    "end": "2039399"
  },
  {
    "text": "fundamentally em potent so how do we make it em potent well there's the best way which is most painful and a less",
    "start": "2039399",
    "end": "2046399"
  },
  {
    "text": "good way which you might have to do if you can't retrofit it in so we're going to look at request IDs and we're going",
    "start": "2046399",
    "end": "2052560"
  },
  {
    "text": "to look at server side fingerprinting okay and ideally you want do request IDs request IDs are actually",
    "start": "2052560",
    "end": "2059839"
  },
  {
    "text": "really straightforward it's a very very simple idea we're going to generate a unique ID",
    "start": "2059839",
    "end": "2066800"
  },
  {
    "text": "for that request and that's going to be used to identify a specific request and this is going to allow a server to",
    "start": "2066800",
    "end": "2073040"
  },
  {
    "text": "identify that it's seen that request before and ignore it very",
    "start": "2073040",
    "end": "2079320"
  },
  {
    "text": "straightforward so I PID some1 pound but now we introduce the content of of a payment ID",
    "start": "2079320",
    "end": "2085560"
  },
  {
    "text": "456 that first payment went through but something went wrong with the response I do the I say I really want that1 I send",
    "start": "2085560",
    "end": "2093480"
  },
  {
    "text": "it again I send the ID along and the payment Service is like sure we've already paid that money but yeah it's",
    "start": "2093480",
    "end": "2099400"
  },
  {
    "text": "done really really simple lovely easy to do don't confuse these with correlation",
    "start": "2099400",
    "end": "2105720"
  },
  {
    "text": "IDs right because a correlation ID is typically an ID used to correlate multiple calls together this is a single",
    "start": "2105720",
    "end": "2112800"
  },
  {
    "text": "request ID so you do an ID fit so if you've got like a a a chain of calls you",
    "start": "2112800",
    "end": "2118880"
  },
  {
    "text": "might have a correlation ID for the whole chain but you would have a request ID for each individual",
    "start": "2118880",
    "end": "2125000"
  },
  {
    "text": "piece um this also wouldn't be the same thing a span ID in say op using open",
    "start": "2125000",
    "end": "2130560"
  },
  {
    "text": "Telemetry because with open Telemetry you do track each individual call so span IDs actually change so this is",
    "start": "2130560",
    "end": "2136760"
  },
  {
    "text": "actually a different thing to all of those really really simple",
    "start": "2136760",
    "end": "2141800"
  },
  {
    "text": "ID the problem with this is really straightforward you have to change the",
    "start": "2141800",
    "end": "2148079"
  },
  {
    "text": "client server protocol for this to work the client has to send the request ID",
    "start": "2148079",
    "end": "2154079"
  },
  {
    "text": "and the server has to respect it so this makes building a protocol where",
    "start": "2154079",
    "end": "2160800"
  },
  {
    "text": "operations can easily be made em potent quite easy if you think about it up front which is lovely if you have a time",
    "start": "2160800",
    "end": "2168760"
  },
  {
    "text": "machine but if you're discovering this stuff today and you're like but Sam I've got a complex system which we don't have",
    "start": "2168760",
    "end": "2175400"
  },
  {
    "text": "putting request IDs in and yes we can start putting them in but that's going to take a long time or we've got Legacy",
    "start": "2175400",
    "end": "2181640"
  },
  {
    "text": "software doesn't behave in this way well then then what can you do and that's when we look at the other piece this",
    "start": "2181640",
    "end": "2186760"
  },
  {
    "text": "which is seriz fingerprinting and this is where the on the server side when we get that request",
    "start": "2186760",
    "end": "2193760"
  },
  {
    "text": "we're going to generate effect you a fingerprint of that request and then when requests come in",
    "start": "2193760",
    "end": "2199119"
  },
  {
    "text": "we check their fingerprint and see if we've already processed them before this is kind of the game the only game in",
    "start": "2199119",
    "end": "2204560"
  },
  {
    "text": "town really for item potency if you have no ability to change that client server protocol and in rare situations you",
    "start": "2204560",
    "end": "2209960"
  },
  {
    "text": "would actually use both of these things together like the AWS API use both these things together if you have time I'll talk about",
    "start": "2209960",
    "end": "2215560"
  },
  {
    "text": "why so if we think about EST I'm sending here so a simple payment request I'm",
    "start": "2215560",
    "end": "2220800"
  },
  {
    "text": "sending and I can see the field a customer ID a payment amount and then so",
    "start": "2220800",
    "end": "2226319"
  },
  {
    "text": "i' got the header and the body and again the concepts of headers and bodies are kind of HTTP specific Concepts but this",
    "start": "2226319",
    "end": "2232000"
  },
  {
    "text": "could be a message right it's the metadata on the body of the payload right and so I would take the body",
    "start": "2232000",
    "end": "2237960"
  },
  {
    "text": "generate a hash this is an md5 hash so I can say well the request ID is that that",
    "start": "2237960",
    "end": "2243160"
  },
  {
    "text": "was processed and I could write that to a database write the payment nodes could say that's been done I write write that out to a database so I know that's been",
    "start": "2243160",
    "end": "2249079"
  },
  {
    "text": "handled a second request comes in it matches we're good to go the issue with a server side ID Ser side fingerprinting",
    "start": "2249079",
    "end": "2256000"
  },
  {
    "text": "is there are lots of corner cases that make it a bit difficult and in certain",
    "start": "2256000",
    "end": "2261079"
  },
  {
    "text": "situations make it really tricky depends a lot on the nature of your API and how you the interaction how you expect it to",
    "start": "2261079",
    "end": "2267000"
  },
  {
    "text": "be used but I'll run you through a few kind of pitfalls around servide fingerprinting which is why I don't",
    "start": "2267000",
    "end": "2272240"
  },
  {
    "text": "think is what you want to do if you can avoid it the first is kind of what I",
    "start": "2272240",
    "end": "2278040"
  },
  {
    "text": "would almost consider to be client errors so in this example here we've got a protocol where we have a Tim stamp of",
    "start": "2278040",
    "end": "2284400"
  },
  {
    "text": "when the request was generated and the way this ID this the way this client server protocol has been designed that",
    "start": "2284400",
    "end": "2290040"
  },
  {
    "text": "timestamp is put in the request so when I do a retry the request the",
    "start": "2290040",
    "end": "2297640"
  },
  {
    "text": "time stamp changes so if I'm generating an md5 hash",
    "start": "2297640",
    "end": "2303160"
  },
  {
    "text": "of both of the request bodies here those hd5 hashes don't match",
    "start": "2303160",
    "end": "2309440"
  },
  {
    "text": "right so that's a problem they are the same request it's just the time stamps changed but the",
    "start": "2309680",
    "end": "2315800"
  },
  {
    "text": "hash looks the same so couple of ways to solve this the first thing way to solve this is to say",
    "start": "2315800",
    "end": "2322560"
  },
  {
    "text": "what we're going to do is effectively mask off part of the body so we're only look at certain fields in the",
    "start": "2322560",
    "end": "2328440"
  },
  {
    "text": "body that gets a little bit tricky right because when new fields are added do",
    "start": "2328440",
    "end": "2333800"
  },
  {
    "text": "they need to be accounted for or not do you go for a kind of a whit listing of approach a blacklisting approach so",
    "start": "2333800",
    "end": "2340400"
  },
  {
    "text": "that's not ideal but again often if you're you're using this approach",
    "start": "2340400",
    "end": "2345680"
  },
  {
    "text": "because you're retrofitting it into a system you can't easily change so some kind of masking might be needed now of",
    "start": "2345680",
    "end": "2352040"
  },
  {
    "text": "course the ideal approach here is to say well what is that Tim stamp it's really a piece of metadata that should actually",
    "start": "2352040",
    "end": "2357400"
  },
  {
    "text": "move up into the header and that's conceptually the right place for it to live however if we can make a change",
    "start": "2357400",
    "end": "2363880"
  },
  {
    "text": "like that we can change the client and the server and if we can change the client the server just use request",
    "start": "2363880",
    "end": "2369319"
  },
  {
    "text": "IDs so just so bear in mind and you know this is a fairly nicely structured",
    "start": "2369319",
    "end": "2374359"
  },
  {
    "text": "payload right again Legacy software it isn't always like this it could just be some Jason blob monstrosity with no",
    "start": "2374359",
    "end": "2381520"
  },
  {
    "text": "schema and you've got no idea what's going on inside that and in those situations you nor normally need some kind of exclusion and so that gets a bit",
    "start": "2381520",
    "end": "2388079"
  },
  {
    "text": "tricky and again often when you're worrying about item potency it tends to be for operations that are quite important and so getting these things",
    "start": "2388079",
    "end": "2394400"
  },
  {
    "text": "wrong is is not ideal there are other issues here let's",
    "start": "2394400",
    "end": "2399599"
  },
  {
    "text": "consider a situation where you love my work so much you want to send me100 pound every week so you pay",
    "start": "2399599",
    "end": "2406640"
  },
  {
    "text": "me100 this is like the worst kind of NLP this stuff is supposed to be like much more subtle than this I don't have a",
    "start": "2406640",
    "end": "2413359"
  },
  {
    "text": "patreon don't worry right um I should get a patreon so here's the md5 hash for this operation great time passes a week",
    "start": "2413359",
    "end": "2420760"
  },
  {
    "text": "later you think need to pay something another1 P still like his stuff and I go to send it again but the hash is the",
    "start": "2420760",
    "end": "2426480"
  },
  {
    "text": "same because fundamentally you're paying me100 the hash is identical so in this scenario we say",
    "start": "2426480",
    "end": "2434119"
  },
  {
    "text": "well actually now what we probably want to do is have an md5 Hash a fingerprint that's may be only kept for a certain",
    "start": "2434119",
    "end": "2439319"
  },
  {
    "text": "period of time maybe we keep it for a week or a day or an hour or a minute and",
    "start": "2439319",
    "end": "2447000"
  },
  {
    "text": "exactly how long you keep that for might depend a bit on your business but now we're starting to get in some of those gray areas right which is not",
    "start": "2447000",
    "end": "2455680"
  },
  {
    "text": "ideal and but probably want to do this right but",
    "start": "2456079",
    "end": "2461599"
  },
  {
    "text": "then what about a scenario where you really do want to do the same thing multiple times in a short space of",
    "start": "2461599",
    "end": "2467240"
  },
  {
    "text": "time a good example would be spinning up VMS so I'm going to spin up a VM and I",
    "start": "2467240",
    "end": "2472800"
  },
  {
    "text": "want spin up five of those VMS I might do that in a for Loop so I'm calling I",
    "start": "2472800",
    "end": "2478440"
  },
  {
    "text": "don't know the API the aure apis and in a for Loop saying do the same thing five times and the requests look",
    "start": "2478440",
    "end": "2485200"
  },
  {
    "text": "identical I'm doing a very short space time and it's completely valid now again the zero apis and the AWS apis require",
    "start": "2485200",
    "end": "2492839"
  },
  {
    "text": "request IDs so they know that each of those is different calls but you sometimes do get scenarios",
    "start": "2492839",
    "end": "2498560"
  },
  {
    "text": "where you do want to do that in the same period of time so again there's all these nasty Corner cases around serde",
    "start": "2498560",
    "end": "2504720"
  },
  {
    "text": "fingerprinting I think it's also valid by the way um this is talking more",
    "start": "2504720",
    "end": "2510079"
  },
  {
    "text": "generally you do get sort of client type errors with these situations where even with request ID someone sends a request",
    "start": "2510079",
    "end": "2516640"
  },
  {
    "text": "and then they retry the request but they do change the body I actually think it's valid for you to error at that point if",
    "start": "2516640",
    "end": "2523480"
  },
  {
    "text": "you want to I think it's a little bit up for grabs but I would argue that if you're retrying an operation with the same request ID but you're changing the",
    "start": "2523480",
    "end": "2530200"
  },
  {
    "text": "body that you actually error at that point the AWS API do that and they do",
    "start": "2530200",
    "end": "2535319"
  },
  {
    "text": "that partly to educate the user right you shouldn't be doing this now for you to actually have done that it means",
    "start": "2535319",
    "end": "2541000"
  },
  {
    "text": "you're not using their apis you're going you're not using their sdks you're going straight to under apis but that's",
    "start": "2541000",
    "end": "2546079"
  },
  {
    "text": "something for you to consider inside an organization where you might say look when you do the retries don't change",
    "start": "2546079",
    "end": "2552160"
  },
  {
    "text": "anything and you may still want to do some Ser side fingerprinting to pick up the fact that the body did change so you",
    "start": "2552160",
    "end": "2559400"
  },
  {
    "text": "can then report back an error or maybe you still carry you say look the operation you ask because in that",
    "start": "2559400",
    "end": "2565079"
  },
  {
    "text": "situation it's like what do I respond with so if you I sent the first request to you and you did that first request",
    "start": "2565079",
    "end": "2571000"
  },
  {
    "text": "and I processed it for you great but you didn't get the response and you then retry it with the same request ID but",
    "start": "2571000",
    "end": "2576400"
  },
  {
    "text": "now you've changed the body what response am I supposed to give because I did the first operation not the second",
    "start": "2576400",
    "end": "2583319"
  },
  {
    "text": "so it gets very confusing so typically you might do suicide fingerprinting on this even if you can do request IDs pely",
    "start": "2583319",
    "end": "2589599"
  },
  {
    "text": "to pick up those kind of bad client behaviors I won't say it's going as far as in in an environment where you've got",
    "start": "2589599",
    "end": "2595400"
  },
  {
    "text": "untrusted clients but certainly for this is why you know AWS and isur do is because effectively anyone outside your",
    "start": "2595400",
    "end": "2601400"
  },
  {
    "text": "company has to be considered to be untrusted in this sense but it's also I'd see it's about educating the users of your services as well",
    "start": "2601400",
    "end": "2609079"
  },
  {
    "text": "well so again this is a kind of an open question I think it's got a very straightforward answer when you do retry",
    "start": "2609079",
    "end": "2616720"
  },
  {
    "text": "an operation that previously had worked what response should you give well the",
    "start": "2616720",
    "end": "2622280"
  },
  {
    "text": "answer is you should give the same response that you g you would have you tried to give the first time I gave you",
    "start": "2622280",
    "end": "2629040"
  },
  {
    "text": "response the first time you didn't get it and nothing is happening here so I'm just going to give you the same response",
    "start": "2629040",
    "end": "2634319"
  },
  {
    "text": "again so that's the answer right so when you do a rryy and you're retrying something that had actually worked and",
    "start": "2634319",
    "end": "2640559"
  },
  {
    "text": "the server has identified that we already did that you ideally want to give back exactly the same response",
    "start": "2640559",
    "end": "2645920"
  },
  {
    "text": "semantically yes it works no it didn't if the first one didn't work the retry doesn't work either right because you",
    "start": "2645920",
    "end": "2651680"
  },
  {
    "text": "got it you tried processing it and you couldn't then you start having to deal",
    "start": "2651680",
    "end": "2657160"
  },
  {
    "text": "with what error code you retry which you don't which is again conversation I could do a whole conversation about HTP",
    "start": "2657160",
    "end": "2663000"
  },
  {
    "text": "status codes but nobody wants that I've Been Told so in this example I save the payment ID",
    "start": "2663000",
    "end": "2671839"
  },
  {
    "text": "I sent the it was an accepted you didn't get that for some reason you do it again I send back the same accepted header as",
    "start": "2671839",
    "end": "2677760"
  },
  {
    "text": "the same accepted response now bear in mind when you send that second response back the semantics is it worked I'm",
    "start": "2677760",
    "end": "2684960"
  },
  {
    "text": "letting you know it worked you can still be free to have some information that's varied in there for example I could put",
    "start": "2684960",
    "end": "2691119"
  },
  {
    "text": "some information in the header to say it's the body is the same it worked but in the header you can say this is the",
    "start": "2691119",
    "end": "2696200"
  },
  {
    "text": "15th time I've told you you about this and I'd wish you'd stop asking right you can still put things like that in it semantically the response is exactly the",
    "start": "2696200",
    "end": "2703839"
  },
  {
    "text": "same right",
    "start": "2703839",
    "end": "2709800"
  },
  {
    "text": "so timeouts retries item potency item potency tricky it's actually simple if",
    "start": "2709800",
    "end": "2717680"
  },
  {
    "text": "you can just change the client server protocol if you can request IDs are going to make your life so easy um if",
    "start": "2717680",
    "end": "2724040"
  },
  {
    "text": "you if you go and have a look around all the sort of the public face ing apis for companies like stripe and square and AWS",
    "start": "2724040",
    "end": "2731880"
  },
  {
    "text": "and Azure and all these people they all have request IDs for any operations that are right for this reason you should put",
    "start": "2731880",
    "end": "2739000"
  },
  {
    "text": "those things in as well doesn't just apply for HTTP based communication it absolutely applies to anything over",
    "start": "2739000",
    "end": "2745160"
  },
  {
    "text": "message Brokers as well request IDs are very much a thing you should do they're easy to put in and easy to handle",
    "start": "2745160",
    "end": "2750760"
  },
  {
    "text": "retrofitting them is difficult with Legacy software or CW you can't easily change do consider side fingerprinting",
    "start": "2750760",
    "end": "2757920"
  },
  {
    "text": "in many situations it might be absolutely fine just do be aware of the",
    "start": "2757920",
    "end": "2763440"
  },
  {
    "text": "downsides of doing that so doing the same thing over and over again may be really sensible um but",
    "start": "2763440",
    "end": "2771400"
  },
  {
    "text": "only if you can do it safely you don't want to start draining people's bank",
    "start": "2771400",
    "end": "2777040"
  },
  {
    "text": "accounts speaking of doing the same thing over and over again here's that Einstein quote wasn't it the definition",
    "start": "2777040",
    "end": "2783319"
  },
  {
    "text": "of insanity is doing the same thing over and over again again and expecting a different",
    "start": "2783319",
    "end": "2789040"
  },
  {
    "text": "result only he didn't say it the thing we keep doing is saying",
    "start": "2789040",
    "end": "2794280"
  },
  {
    "text": "Einstein said this quote he didn't there's no evidence he ever said that quote so maybe that's a definition of",
    "start": "2794280",
    "end": "2799640"
  },
  {
    "text": "insanity is us saying he said a thing he never said in this day and age of",
    "start": "2799640",
    "end": "2805599"
  },
  {
    "text": "us hearing facts that apparently made up I think it's important to do your homework and check who said",
    "start": "2805599",
    "end": "2811720"
  },
  {
    "text": "what Einstein's never said that and he's not around to defend himself and it's",
    "start": "2811720",
    "end": "2816960"
  },
  {
    "text": "kind of a fun quote and useful but actually in the context of dist systems it's really bad",
    "start": "2816960",
    "end": "2822559"
  },
  {
    "text": "advice right the best advice is doing the same thing over and over again might",
    "start": "2822559",
    "end": "2828160"
  },
  {
    "text": "be a good idea until it's not but that's not as catchy right is it so in",
    "start": "2828160",
    "end": "2834680"
  },
  {
    "text": "summary sometimes you should give up timeouts are completely and utterly appropriate to find a balance between",
    "start": "2834680",
    "end": "2842000"
  },
  {
    "text": "keeping users happy and keeping the system stable you likely already have have the ability to specify all the",
    "start": "2842000",
    "end": "2848800"
  },
  {
    "text": "timeouts you need just by using the software you're already using the question is do you know what those timeouts are start I would suggest by",
    "start": "2848800",
    "end": "2856280"
  },
  {
    "text": "just looking at those histograms if you can get them for your services at least start off by getting them kind of for the user facing endpoints start",
    "start": "2856280",
    "end": "2863000"
  },
  {
    "text": "understanding what they're showing you double checking them the problem is often you only know timeouts are wrong",
    "start": "2863000",
    "end": "2868079"
  },
  {
    "text": "when you start getting in issues like the ones I talked about before and that might be a bad time to find out about",
    "start": "2868079",
    "end": "2874800"
  },
  {
    "text": "it retrying absolutely can make sense to a point so think about how many type",
    "start": "2874800",
    "end": "2882640"
  },
  {
    "text": "reches you want to make and the gaps you want to leave between them and remember that's going to be an overarching timeout for something else blocking",
    "start": "2882640",
    "end": "2888480"
  },
  {
    "text": "coming in I would strongly suggest using a decent connection Library light poly",
    "start": "2888480",
    "end": "2893839"
  },
  {
    "text": "light resilience 4J those things also have some really useful um add-ons to these kind of",
    "start": "2893839",
    "end": "2899800"
  },
  {
    "text": "Concepts you can look at things like token bucket and leaky bucket um connections for things where basically",
    "start": "2899800",
    "end": "2906040"
  },
  {
    "text": "it's a different way of doing limiting it's really useful those are Advanced things just get your timeouts and your rry policies right first they give you",
    "start": "2906040",
    "end": "2912599"
  },
  {
    "text": "the mechanics to do it and they all that they can do is give you default Behavior they but that they don't know what your",
    "start": "2912599",
    "end": "2919200"
  },
  {
    "text": "application is doing so understand them right if you do want to retry which you",
    "start": "2919200",
    "end": "2926280"
  },
  {
    "text": "probably do you really need to make sure that your operations are item",
    "start": "2926280",
    "end": "2931359"
  },
  {
    "text": "potent and if you can do that from the beginning request IDs make your life easy",
    "start": "2931359",
    "end": "2937640"
  },
  {
    "text": "that's kind of all I've got if you click on this thing it's a QR code um you you can get the slides um you can also if",
    "start": "2937640",
    "end": "2944640"
  },
  {
    "text": "you go to my website you can sign up to my mail list I do like a list a mail once a month which is just stuff I found",
    "start": "2944640",
    "end": "2950640"
  },
  {
    "text": "that's interesting I also share bits of my research for the book and the progress of the book as well the latest",
    "start": "2950640",
    "end": "2955920"
  },
  {
    "text": "chapter on the book is now available in Early Access it's on talking about thundering herds so you've already got chapters out there available on timeouts",
    "start": "2955920",
    "end": "2962480"
  },
  {
    "text": "retries and item potency rate limiting so I talk about low Ching back pressure circuit break it's a whole loot of",
    "start": "2962480",
    "end": "2969200"
  },
  {
    "text": "different types of kind of ways in which systems fall over under load if you don't want to sign up for an O'Reilly",
    "start": "2969200",
    "end": "2975280"
  },
  {
    "text": "account to read that book in Early Access you can get like a 30-day free trial and watch it and read the book then it's fine um but thank you so much",
    "start": "2975280",
    "end": "2982480"
  },
  {
    "text": "indeed for all your",
    "start": "2982480",
    "end": "2985200"
  },
  {
    "text": "time now we do have time for some questions anyone got a question for",
    "start": "2988280",
    "end": "2994920"
  },
  {
    "text": "me yeah anyone question at the back there I my I'm an old man so if you",
    "start": "2995280",
    "end": "3001880"
  },
  {
    "text": "could come forward a little bit it might make it easier for me to hear I've only I see I feel bad now because I've made you walk up here to come and watch the",
    "start": "3001880",
    "end": "3008119"
  },
  {
    "text": "talk and now making you walk even further forward I so uh you said that under certain circumstances it could be",
    "start": "3008119",
    "end": "3015040"
  },
  {
    "text": "more advantageous to have both fingerprinting and request ID yeah but",
    "start": "3015040",
    "end": "3020280"
  },
  {
    "text": "if understand correctly request IDs are supposed to be fairly fullprof right that well so the scenario where you'd",
    "start": "3020280",
    "end": "3025880"
  },
  {
    "text": "want both is a situation where you can't 100% trust the client so if the client",
    "start": "3025880",
    "end": "3032280"
  },
  {
    "text": "does a retry but changes the parameters of the request so they say here's re",
    "start": "3032280",
    "end": "3037359"
  },
  {
    "text": "here's request ID 4 I want you to do this and then they say I still want you to do request ID 4 but I've now changed",
    "start": "3037359",
    "end": "3043599"
  },
  {
    "text": "the parameters in that situation you get into a confused World um so the client",
    "start": "3043599",
    "end": "3050000"
  },
  {
    "text": "shouldn't do that right if I said pay some £100 and then when i' retry it I keep the same request ID but but I now",
    "start": "3050000",
    "end": "3056960"
  },
  {
    "text": "say pay Sam £1,000 I might think you've paid £100 and you paid £1,000 or vice versa based",
    "start": "3056960",
    "end": "3063880"
  },
  {
    "text": "on the response so reason to do both on the server side is in a situation where",
    "start": "3063880",
    "end": "3069280"
  },
  {
    "text": "you you don't fully trust the client and you want to be very clear about what's actually happened so the situation where",
    "start": "3069280",
    "end": "3075240"
  },
  {
    "text": "the first request ID for pay £100 I processed that and paid £100 you then on",
    "start": "3075240",
    "end": "3080680"
  },
  {
    "text": "the client retried the operation but train a parameter the response comes through said yes that was paid did I",
    "start": "3080680",
    "end": "3087640"
  },
  {
    "text": "pay1 or did I pay ,000 that's the reason we might do both I think it's a little",
    "start": "3087640",
    "end": "3092799"
  },
  {
    "text": "bit Niche but I think it's something worth considering um and I think it really where it is useful is in a",
    "start": "3092799",
    "end": "3098200"
  },
  {
    "text": "situation you're trying to educate developers about what they should and shouldn't be doing so this should only",
    "start": "3098200",
    "end": "3103880"
  },
  {
    "text": "be the case where you don't have full control over both client and server yeah and I would say most micros service",
    "start": "3103880",
    "end": "3110359"
  },
  {
    "text": "architectures where I work that's the case because often your service think of it like a it's basically defense me ISM",
    "start": "3110359",
    "end": "3116880"
  },
  {
    "text": "to an extent but like a lot of times the organizations I work I'm managing four or five services and I've got teams over here using my services I don't control",
    "start": "3116880",
    "end": "3123720"
  },
  {
    "text": "their code so if that code is coming from another team I think it could be useful to do I would definitely put it",
    "start": "3123720",
    "end": "3130319"
  },
  {
    "text": "in the nice to have category and I think it's a conversation that you should have but like if you're putting these things",
    "start": "3130319",
    "end": "3136280"
  },
  {
    "text": "in now uh I would have a conversation with your clients here's what we're going to be doing here's how it's going to handle by the way when you do a retry",
    "start": "3136280",
    "end": "3142880"
  },
  {
    "text": "don't change the parameters uh and then and then you can say and we'll be looking right we'll",
    "start": "3142880",
    "end": "3148160"
  },
  {
    "text": "send out a naughty list so I think it's a bit Niche but I think it's in a situation that if you your team is doing",
    "start": "3148160",
    "end": "3153440"
  },
  {
    "text": "the client and the server bit don't worry about it as a situation where somebody else is right in the client",
    "start": "3153440",
    "end": "3159280"
  },
  {
    "text": "consider it thank you you're welcome uh NE oh hang on as a gift to you for walking forward I have books to give",
    "start": "3159280",
    "end": "3165599"
  },
  {
    "text": "away there you go if you don't want it you can give it to a well me person there we go thank you all right anyone",
    "start": "3165599",
    "end": "3172079"
  },
  {
    "text": "else got a question for me go ahead I totally understand the the stand don't",
    "start": "3172079",
    "end": "3177440"
  },
  {
    "text": "the using the request ID yeah but just on standard around HTTP there's an ID pocy key header that's been defined what",
    "start": "3177440",
    "end": "3186480"
  },
  {
    "text": "do you think I I think if you're using ID I I think if you're using HTTP at",
    "start": "3186480",
    "end": "3192040"
  },
  {
    "text": "that level by all means use that standard um the issue is lots of people use HTTP but aren't using it directly so",
    "start": "3192040",
    "end": "3198359"
  },
  {
    "text": "um if you're using HTTP directly use it now do bear in mind that item potency key there's a lot of public examples of",
    "start": "3198359",
    "end": "3205640"
  },
  {
    "text": "the request IDs out that predate that because that was added to specification later but if you're using HTP",
    "start": "3205640",
    "end": "3211280"
  },
  {
    "text": "directly use that but a lot of you might be using grpc 2 for ex grpc for example",
    "start": "3211280",
    "end": "3217400"
  },
  {
    "text": "in which case that's hidden from you always 99% of the time do what hdp says",
    "start": "3217400",
    "end": "3224000"
  },
  {
    "text": "like nearly always is doing the right thing uh book you get a you get a book",
    "start": "3224000",
    "end": "3229839"
  },
  {
    "text": "as well everyone get some B all right any other questions for",
    "start": "3229839",
    "end": "3235000"
  },
  {
    "text": "me question back there oh you got a microphone we've got an assistant thank you so much go ahead",
    "start": "3235000",
    "end": "3242720"
  },
  {
    "text": "um so if you're going to do request IDs and fingerprinting and you don't get the",
    "start": "3242720",
    "end": "3248400"
  },
  {
    "text": "response in the first one so for the retries you were saying send the same response um so if it's the first time",
    "start": "3248400",
    "end": "3255880"
  },
  {
    "text": "and you retry you give about the same response would you check for that the",
    "start": "3255880",
    "end": "3260960"
  },
  {
    "text": "body hasn't changed and maybe give a bad request or something that for me is a bit of ambiguity so",
    "start": "3260960",
    "end": "3266960"
  },
  {
    "text": "I would argue that that's actually an error State and it's a confusing error to give to a client the first thing you",
    "start": "3266960",
    "end": "3273680"
  },
  {
    "text": "wanted to do I did the last thing you asked me to do that was trash and I haven't done it it is a confused error",
    "start": "3273680",
    "end": "3280240"
  },
  {
    "text": "so but I think probably the right thing to do is kind of to error to say you kind of stuffed up here the HTP protocol",
    "start": "3280240",
    "end": "3287359"
  },
  {
    "text": "does not give us a status code for this yeah so this is where you would have to probably come up with your own variation",
    "start": "3287359",
    "end": "3292760"
  },
  {
    "text": "within that and it would be a 400 series so You' pick one of the 400 series errors um to put in there um I could",
    "start": "3292760",
    "end": "3300839"
  },
  {
    "text": "probably pick one of that's close but yeah I for I really think strictly speaking it is an error because again if",
    "start": "3300839",
    "end": "3307040"
  },
  {
    "text": "I don't give you an error from a client point of view which one of those two things actually worked and I think it's",
    "start": "3307040",
    "end": "3313520"
  },
  {
    "text": "better that the client blows up um in that situation yeah book you get a book",
    "start": "3313520",
    "end": "3320400"
  },
  {
    "text": "all right there we go than we've got any other questions",
    "start": "3320400",
    "end": "3326440"
  },
  {
    "text": "thanks any other questions all right well you've been fabulous because you walked up here you're already fabulous",
    "start": "3326440",
    "end": "3332280"
  },
  {
    "text": "when you walked in but thank you so much for your attention and your uh and everything else um and for getting up",
    "start": "3332280",
    "end": "3337960"
  },
  {
    "text": "here thank you for coming to NDC it's a great conference I hope to see you again around here later today and tomorrow um",
    "start": "3337960",
    "end": "3344400"
  },
  {
    "text": "if you're interested in security and security education please do go and see my friend Laura Bell who's running the SE snack Booth downstairs literally",
    "start": "3344400",
    "end": "3352039"
  },
  {
    "text": "underneath this um as well uh because she's awesome and so is a cont and there lots of other great speakers to watch",
    "start": "3352039",
    "end": "3358079"
  },
  {
    "text": "tonight go watch Kevin's talk later I think it's going be talking about some of this stuff anyway love you all have",
    "start": "3358079",
    "end": "3364440"
  },
  {
    "text": "fun stay safe and I'll see you next time",
    "start": "3364440",
    "end": "3369280"
  }
]