[
  {
    "text": "so welcome everyone to my lightning talk",
    "start": "2179",
    "end": "5279"
  },
  {
    "text": "which is on IL GPU",
    "start": "5279",
    "end": "8940"
  },
  {
    "text": "my name is tulhagen I work for novalnet",
    "start": "8940",
    "end": "12920"
  },
  {
    "text": "same as pet",
    "start": "12920",
    "end": "15420"
  },
  {
    "text": "a Consulting Group based here in Oslo",
    "start": "15420",
    "end": "18300"
  },
  {
    "text": "my intention is to demonstrate",
    "start": "18300",
    "end": "21080"
  },
  {
    "text": "that the power of your GPU is perhaps",
    "start": "21080",
    "end": "23699"
  },
  {
    "text": "much more available to you",
    "start": "23699",
    "end": "25740"
  },
  {
    "text": "as a.net developer than you might think",
    "start": "25740",
    "end": "29900"
  },
  {
    "text": "Now using the GPU for general computing",
    "start": "31679",
    "end": "34140"
  },
  {
    "text": "has been pretty mainstream for a while",
    "start": "34140",
    "end": "38000"
  },
  {
    "text": "and there are several platforms",
    "start": "38000",
    "end": "39960"
  },
  {
    "text": "available to do this",
    "start": "39960",
    "end": "42360"
  },
  {
    "text": "uh the two best known ones being opencl",
    "start": "42360",
    "end": "45059"
  },
  {
    "text": "by the Kronos group and the Cuda",
    "start": "45059",
    "end": "47280"
  },
  {
    "text": "platform",
    "start": "47280",
    "end": "48300"
  },
  {
    "text": "by Nvidia",
    "start": "48300",
    "end": "50760"
  },
  {
    "text": "now",
    "start": "50760",
    "end": "52260"
  },
  {
    "text": "you can go in to the to the web pages",
    "start": "52260",
    "end": "54360"
  },
  {
    "text": "and check the documentation for these",
    "start": "54360",
    "end": "56239"
  },
  {
    "text": "platforms and it's pretty technical",
    "start": "56239",
    "end": "59699"
  },
  {
    "text": "for us.net developers in particular",
    "start": "59699",
    "end": "63000"
  },
  {
    "text": "it can appear somewhat inaccessible",
    "start": "63000",
    "end": "65939"
  },
  {
    "text": "you'll have to deal with multiple",
    "start": "65939",
    "end": "67799"
  },
  {
    "text": "language projects special compilers Etc",
    "start": "67799",
    "end": "70740"
  },
  {
    "text": "you need to use C plus plus perhaps",
    "start": "70740",
    "end": "73439"
  },
  {
    "text": "uh it's all a bit daunting",
    "start": "73439",
    "end": "75960"
  },
  {
    "text": "personally I was despairing if I would",
    "start": "75960",
    "end": "78659"
  },
  {
    "text": "ever get around to trying it",
    "start": "78659",
    "end": "81859"
  },
  {
    "text": "then I discovered ilgpu",
    "start": "82799",
    "end": "85979"
  },
  {
    "text": "it changes all that",
    "start": "85979",
    "end": "88320"
  },
  {
    "text": "The Isle GPU platform contains a",
    "start": "88320",
    "end": "90479"
  },
  {
    "text": "just-in-time compiler",
    "start": "90479",
    "end": "92520"
  },
  {
    "text": "for taking your kernel code the the code",
    "start": "92520",
    "end": "95700"
  },
  {
    "text": "you want to execute in parallel on the",
    "start": "95700",
    "end": "97799"
  },
  {
    "text": "on the accelerator and transpiling it to",
    "start": "97799",
    "end": "101280"
  },
  {
    "text": "the underlying GPU format",
    "start": "101280",
    "end": "103740"
  },
  {
    "text": "straight from the compiled.net io in",
    "start": "103740",
    "end": "106439"
  },
  {
    "text": "your assembly",
    "start": "106439",
    "end": "107820"
  },
  {
    "text": "I'll show you how that works with il GPU",
    "start": "107820",
    "end": "110880"
  },
  {
    "text": "you can just install a nougat package in",
    "start": "110880",
    "end": "113579"
  },
  {
    "text": "your.net Project",
    "start": "113579",
    "end": "115380"
  },
  {
    "text": "and start working",
    "start": "115380",
    "end": "118020"
  },
  {
    "text": "yes it really is that simple",
    "start": "118020",
    "end": "121460"
  },
  {
    "text": "I'll make a kind of a Hello World",
    "start": "121799",
    "end": "123540"
  },
  {
    "text": "project",
    "start": "123540",
    "end": "125899"
  },
  {
    "text": "hello world for gpus",
    "start": "125899",
    "end": "128700"
  },
  {
    "text": "I'll be rendering the mandelbrot set",
    "start": "128700",
    "end": "131520"
  },
  {
    "text": "it's just as useless as hello world but",
    "start": "131520",
    "end": "133980"
  },
  {
    "text": "it's much prettier and uh",
    "start": "133980",
    "end": "136920"
  },
  {
    "text": "and it benefits wonderfully from",
    "start": "136920",
    "end": "138720"
  },
  {
    "text": "parallelization as you might see",
    "start": "138720",
    "end": "142020"
  },
  {
    "text": "the mandelbrot set I won't get very",
    "start": "142020",
    "end": "145020"
  },
  {
    "text": "deeply into this but it's uh uh we need",
    "start": "145020",
    "end": "148020"
  },
  {
    "text": "a quick primer just so you know what",
    "start": "148020",
    "end": "149879"
  },
  {
    "text": "we'll be doing here uh so it's a set",
    "start": "149879",
    "end": "152160"
  },
  {
    "text": "it's a set of complex numbers",
    "start": "152160",
    "end": "154560"
  },
  {
    "text": "first investigated in the 1980s",
    "start": "154560",
    "end": "157560"
  },
  {
    "text": "uh it's characterized by an infinite",
    "start": "157560",
    "end": "160080"
  },
  {
    "text": "amount of complexity emerging from a",
    "start": "160080",
    "end": "163500"
  },
  {
    "text": "simple iterative function",
    "start": "163500",
    "end": "167180"
  },
  {
    "text": "around 1985 people realized that this",
    "start": "167459",
    "end": "170220"
  },
  {
    "text": "complexity can be visualized using",
    "start": "170220",
    "end": "172140"
  },
  {
    "text": "computers",
    "start": "172140",
    "end": "173580"
  },
  {
    "text": "uh it was a huge hit",
    "start": "173580",
    "end": "175680"
  },
  {
    "text": "because it yields some amazing imagery",
    "start": "175680",
    "end": "178680"
  },
  {
    "text": "and it's been the iconic example of",
    "start": "178680",
    "end": "180599"
  },
  {
    "text": "fractal chaos ever since",
    "start": "180599",
    "end": "184640"
  },
  {
    "text": "so here's a math for you",
    "start": "185160",
    "end": "187140"
  },
  {
    "text": "we don't need to know a lot about",
    "start": "187140",
    "end": "188459"
  },
  {
    "text": "complex numbers for this demo",
    "start": "188459",
    "end": "190640"
  },
  {
    "text": "only that they have two parts A and B",
    "start": "190640",
    "end": "193500"
  },
  {
    "text": "called the real and imaginary parts so a",
    "start": "193500",
    "end": "196920"
  },
  {
    "text": "complex number c is actually a sum of a",
    "start": "196920",
    "end": "199860"
  },
  {
    "text": "real part a and an imaginary Part B",
    "start": "199860",
    "end": "203459"
  },
  {
    "text": "times I where I is the square root of -1",
    "start": "203459",
    "end": "207840"
  },
  {
    "text": "they have well-defined operators like",
    "start": "207840",
    "end": "210060"
  },
  {
    "text": "addition and multiplication and they",
    "start": "210060",
    "end": "211739"
  },
  {
    "text": "follow simply from the definition",
    "start": "211739",
    "end": "214500"
  },
  {
    "text": "so",
    "start": "214500",
    "end": "215760"
  },
  {
    "text": "the actual set for some complex number c",
    "start": "215760",
    "end": "219659"
  },
  {
    "text": "we Define a series of complex numbers Z",
    "start": "219659",
    "end": "222780"
  },
  {
    "text": "naught Z1 set two Etc",
    "start": "222780",
    "end": "226940"
  },
  {
    "text": "such that each value of Z equals the",
    "start": "226980",
    "end": "229739"
  },
  {
    "text": "previous value",
    "start": "229739",
    "end": "231060"
  },
  {
    "text": "squared plus C that's",
    "start": "231060",
    "end": "234120"
  },
  {
    "text": "here",
    "start": "234120",
    "end": "236780"
  },
  {
    "text": "now as you repeat this procedure this",
    "start": "238860",
    "end": "240959"
  },
  {
    "text": "iterative function the values of Z that",
    "start": "240959",
    "end": "243720"
  },
  {
    "text": "are produced will either remain small",
    "start": "243720",
    "end": "246959"
  },
  {
    "text": "or",
    "start": "246959",
    "end": "248519"
  },
  {
    "text": "eventually diverge they will run off to",
    "start": "248519",
    "end": "251340"
  },
  {
    "text": "Infinity",
    "start": "251340",
    "end": "253200"
  },
  {
    "text": "if there remains more however many times",
    "start": "253200",
    "end": "256139"
  },
  {
    "text": "you you you you iterate",
    "start": "256139",
    "end": "258840"
  },
  {
    "text": "then C is a member of the mandrel bot",
    "start": "258840",
    "end": "261720"
  },
  {
    "text": "set",
    "start": "261720",
    "end": "263040"
  },
  {
    "text": "sounds simple",
    "start": "263040",
    "end": "264300"
  },
  {
    "text": "but in fact even arbitrarily close",
    "start": "264300",
    "end": "266639"
  },
  {
    "text": "values of c can behave very differently",
    "start": "266639",
    "end": "269940"
  },
  {
    "text": "and this yields an endless complex",
    "start": "269940",
    "end": "271740"
  },
  {
    "text": "variety as we should see",
    "start": "271740",
    "end": "274560"
  },
  {
    "text": "so to visualize it",
    "start": "274560",
    "end": "276900"
  },
  {
    "text": "since complex numbers have two parts",
    "start": "276900",
    "end": "279660"
  },
  {
    "text": "A and B this means that they fit you",
    "start": "279660",
    "end": "282120"
  },
  {
    "text": "know on a plane",
    "start": "282120",
    "end": "284220"
  },
  {
    "text": "you know a coordinate system",
    "start": "284220",
    "end": "286620"
  },
  {
    "text": "with the real part along the horizontal",
    "start": "286620",
    "end": "288660"
  },
  {
    "text": "axis and the imaginary part along the",
    "start": "288660",
    "end": "290460"
  },
  {
    "text": "vertical axis",
    "start": "290460",
    "end": "291720"
  },
  {
    "text": "this is called a complex plane",
    "start": "291720",
    "end": "294180"
  },
  {
    "text": "so what we do is this we run the",
    "start": "294180",
    "end": "297060"
  },
  {
    "text": "iterations for each C for each pixel",
    "start": "297060",
    "end": "300900"
  },
  {
    "text": "if the series doesn't diverge we color",
    "start": "300900",
    "end": "303300"
  },
  {
    "text": "the pixel black that's by Convention of",
    "start": "303300",
    "end": "306300"
  },
  {
    "text": "course it could be any color but that",
    "start": "306300",
    "end": "307979"
  },
  {
    "text": "signifies it's part of the set that's",
    "start": "307979",
    "end": "310139"
  },
  {
    "text": "the interior of the figure there",
    "start": "310139",
    "end": "312479"
  },
  {
    "text": "otherwise we give it another color",
    "start": "312479",
    "end": "314160"
  },
  {
    "text": "depending on how quickly that diverges",
    "start": "314160",
    "end": "318919"
  },
  {
    "text": "so here's some code",
    "start": "318960",
    "end": "321320"
  },
  {
    "text": "the iterate function here takes a",
    "start": "321320",
    "end": "323940"
  },
  {
    "text": "complex number c and the maximum number",
    "start": "323940",
    "end": "325919"
  },
  {
    "text": "of iterations to perform",
    "start": "325919",
    "end": "329120"
  },
  {
    "text": "now we happen to know that if the",
    "start": "330360",
    "end": "332820"
  },
  {
    "text": "modulus of z z exceeds two at any point",
    "start": "332820",
    "end": "336479"
  },
  {
    "text": "the series is going to diverge so that's",
    "start": "336479",
    "end": "339419"
  },
  {
    "text": "our exit condition",
    "start": "339419",
    "end": "341520"
  },
  {
    "text": "the function will return a value between",
    "start": "341520",
    "end": "343199"
  },
  {
    "text": "0 and limit",
    "start": "343199",
    "end": "346500"
  },
  {
    "text": "a return value of limit means that c is",
    "start": "346500",
    "end": "348780"
  },
  {
    "text": "a member of the sets",
    "start": "348780",
    "end": "350639"
  },
  {
    "text": "now",
    "start": "350639",
    "end": "353240"
  },
  {
    "text": "we'll do some codes",
    "start": "354539",
    "end": "357000"
  },
  {
    "text": "I will",
    "start": "357000",
    "end": "360020"
  },
  {
    "text": "I've made a simple WPF application",
    "start": "360720",
    "end": "363600"
  },
  {
    "text": "I'll show you first the CPU version of",
    "start": "363600",
    "end": "366060"
  },
  {
    "text": "this iterator",
    "start": "366060",
    "end": "367500"
  },
  {
    "text": "and then I'll show you the IL GPU",
    "start": "367500",
    "end": "369900"
  },
  {
    "text": "alternative",
    "start": "369900",
    "end": "371460"
  },
  {
    "text": "and uh and what it does for the render",
    "start": "371460",
    "end": "373740"
  },
  {
    "text": "time",
    "start": "373740",
    "end": "376039"
  },
  {
    "text": "so",
    "start": "379320",
    "end": "381979"
  },
  {
    "text": "uh",
    "start": "384000",
    "end": "386940"
  },
  {
    "text": "there we are",
    "start": "386940",
    "end": "389520"
  },
  {
    "text": "good",
    "start": "389520",
    "end": "390840"
  },
  {
    "text": "so",
    "start": "390840",
    "end": "392880"
  },
  {
    "text": "this first here is application code this",
    "start": "392880",
    "end": "396300"
  },
  {
    "text": "is mostly WPF code where you don't need",
    "start": "396300",
    "end": "398759"
  },
  {
    "text": "to worry about it but you can see here",
    "start": "398759",
    "end": "400919"
  },
  {
    "text": "that there's a call to an",
    "start": "400919",
    "end": "402620"
  },
  {
    "text": "iterator.iterate range",
    "start": "402620",
    "end": "404759"
  },
  {
    "text": "now all these parameters that we send in",
    "start": "404759",
    "end": "406680"
  },
  {
    "text": "start width height step",
    "start": "406680",
    "end": "408780"
  },
  {
    "text": "and a palette",
    "start": "408780",
    "end": "410819"
  },
  {
    "text": "that's application code it you can",
    "start": "410819",
    "end": "413520"
  },
  {
    "text": "control it with the mouse and key and so",
    "start": "413520",
    "end": "415740"
  },
  {
    "text": "on you'll see it afterwards but the",
    "start": "415740",
    "end": "417780"
  },
  {
    "text": "point is that having called the iterate",
    "start": "417780",
    "end": "419940"
  },
  {
    "text": "range here",
    "start": "419940",
    "end": "421919"
  },
  {
    "text": "the result of all these situations will",
    "start": "421919",
    "end": "424080"
  },
  {
    "text": "be in a two-dimensional array",
    "start": "424080",
    "end": "426840"
  },
  {
    "text": "and now the actual",
    "start": "426840",
    "end": "429240"
  },
  {
    "text": "we'll have to look at it this double",
    "start": "429240",
    "end": "432660"
  },
  {
    "text": "this complex structure I made first it",
    "start": "432660",
    "end": "436319"
  },
  {
    "text": "has two parts A and B",
    "start": "436319",
    "end": "439500"
  },
  {
    "text": "and it defines these operators",
    "start": "439500",
    "end": "442440"
  },
  {
    "text": "Plus",
    "start": "442440",
    "end": "443819"
  },
  {
    "text": "and multiply",
    "start": "443819",
    "end": "446840"
  },
  {
    "text": "so there's some maths there it also",
    "start": "447060",
    "end": "449460"
  },
  {
    "text": "defines the modulus which is basically",
    "start": "449460",
    "end": "451440"
  },
  {
    "text": "the distance from the origin to the",
    "start": "451440",
    "end": "454139"
  },
  {
    "text": "point in the complex plane it's kind of",
    "start": "454139",
    "end": "456360"
  },
  {
    "text": "the absolute value",
    "start": "456360",
    "end": "458160"
  },
  {
    "text": "of the complex number now for the actual",
    "start": "458160",
    "end": "460740"
  },
  {
    "text": "iterator",
    "start": "460740",
    "end": "462240"
  },
  {
    "text": "this is the CPU iterator",
    "start": "462240",
    "end": "465060"
  },
  {
    "text": "and you recognize the function",
    "start": "465060",
    "end": "468060"
  },
  {
    "text": "it takes a complex number a complex",
    "start": "468060",
    "end": "470699"
  },
  {
    "text": "double",
    "start": "470699",
    "end": "471960"
  },
  {
    "text": "it initializes Z to be",
    "start": "471960",
    "end": "475880"
  },
  {
    "text": "zero and then it runs the loop",
    "start": "475880",
    "end": "479639"
  },
  {
    "text": "and the point is we do this Loop for",
    "start": "479639",
    "end": "482639"
  },
  {
    "text": "every pixel in the image so this is",
    "start": "482639",
    "end": "484800"
  },
  {
    "text": "compute intensive",
    "start": "484800",
    "end": "486660"
  },
  {
    "text": "so for every Loop we Square set and add",
    "start": "486660",
    "end": "491400"
  },
  {
    "text": "C and then",
    "start": "491400",
    "end": "493919"
  },
  {
    "text": "we assign it back to set and then",
    "start": "493919",
    "end": "496500"
  },
  {
    "text": "finally we check the modulus",
    "start": "496500",
    "end": "498960"
  },
  {
    "text": "that's the model is square that saves us",
    "start": "498960",
    "end": "501060"
  },
  {
    "text": "a square root operation and if it's",
    "start": "501060",
    "end": "503160"
  },
  {
    "text": "greater than or equal to 4 then we're",
    "start": "503160",
    "end": "505440"
  },
  {
    "text": "done it's not a member of the set and",
    "start": "505440",
    "end": "507720"
  },
  {
    "text": "finally we return this value and so the",
    "start": "507720",
    "end": "511440"
  },
  {
    "text": "value return will depend on whether it's",
    "start": "511440",
    "end": "513300"
  },
  {
    "text": "in the set or not",
    "start": "513300",
    "end": "515099"
  },
  {
    "text": "or how quickly it diverges",
    "start": "515099",
    "end": "517740"
  },
  {
    "text": "so to do this for all the pixels in the",
    "start": "517740",
    "end": "520080"
  },
  {
    "text": "image we have this iterate range",
    "start": "520080",
    "end": "522659"
  },
  {
    "text": "method it takes a",
    "start": "522659",
    "end": "525420"
  },
  {
    "text": "a starting point",
    "start": "525420",
    "end": "527459"
  },
  {
    "text": "a width and height in pixels of the",
    "start": "527459",
    "end": "529800"
  },
  {
    "text": "image",
    "start": "529800",
    "end": "530760"
  },
  {
    "text": "a step which is basically a scaling",
    "start": "530760",
    "end": "532920"
  },
  {
    "text": "Factor",
    "start": "532920",
    "end": "534899"
  },
  {
    "text": "the maximum number of iterations per",
    "start": "534899",
    "end": "536880"
  },
  {
    "text": "pixel",
    "start": "536880",
    "end": "537899"
  },
  {
    "text": "and a two-dimensional array for the",
    "start": "537899",
    "end": "540300"
  },
  {
    "text": "output and then we simply parallel four",
    "start": "540300",
    "end": "542580"
  },
  {
    "text": "over Y and X",
    "start": "542580",
    "end": "545580"
  },
  {
    "text": "each y and x yields a complex number c",
    "start": "545580",
    "end": "548040"
  },
  {
    "text": "the corresponding complex number for",
    "start": "548040",
    "end": "550019"
  },
  {
    "text": "that pixel",
    "start": "550019",
    "end": "551220"
  },
  {
    "text": "and then we pass it to the iterate",
    "start": "551220",
    "end": "552899"
  },
  {
    "text": "function",
    "start": "552899",
    "end": "554160"
  },
  {
    "text": "and we assign the result to the output",
    "start": "554160",
    "end": "558240"
  },
  {
    "text": "and that's all",
    "start": "558240",
    "end": "559740"
  },
  {
    "text": "the result looks like this",
    "start": "559740",
    "end": "562980"
  },
  {
    "text": "that's on the wrong screen",
    "start": "562980",
    "end": "565320"
  },
  {
    "text": "I'll put it up there",
    "start": "565320",
    "end": "567660"
  },
  {
    "text": "and this is the mandelbrot set",
    "start": "567660",
    "end": "571220"
  },
  {
    "text": "this is all based on that simple",
    "start": "571320",
    "end": "573420"
  },
  {
    "text": "iterative function but you can see it's",
    "start": "573420",
    "end": "575760"
  },
  {
    "text": "really slow the rendering time here is",
    "start": "575760",
    "end": "578339"
  },
  {
    "text": "about half a second",
    "start": "578339",
    "end": "581160"
  },
  {
    "text": "so when I zoom in it's very",
    "start": "581160",
    "end": "583860"
  },
  {
    "text": "somewhat sluggish",
    "start": "583860",
    "end": "585660"
  },
  {
    "text": "it's pretty but it's slow",
    "start": "585660",
    "end": "588839"
  },
  {
    "text": "so",
    "start": "588839",
    "end": "590100"
  },
  {
    "text": "we'll do it in il GPU instead",
    "start": "590100",
    "end": "592920"
  },
  {
    "text": "so this is my GPU iterator",
    "start": "592920",
    "end": "597440"
  },
  {
    "text": "um if we start by",
    "start": "597720",
    "end": "600660"
  },
  {
    "text": "compressing everything you can see that",
    "start": "600660",
    "end": "602160"
  },
  {
    "text": "it has the same thing it has an iterate",
    "start": "602160",
    "end": "604320"
  },
  {
    "text": "function",
    "start": "604320",
    "end": "605580"
  },
  {
    "text": "but it also has some fields",
    "start": "605580",
    "end": "608459"
  },
  {
    "text": "and it's disposable because some of",
    "start": "608459",
    "end": "610680"
  },
  {
    "text": "those fields hold unmanaged resources",
    "start": "610680",
    "end": "614220"
  },
  {
    "text": "so what we basically do here we've",
    "start": "614220",
    "end": "617339"
  },
  {
    "text": "imported the namespaces from IL GPU",
    "start": "617339",
    "end": "622380"
  },
  {
    "text": "we establish a context an IL GPU context",
    "start": "622380",
    "end": "626399"
  },
  {
    "text": "and we create an accelerator",
    "start": "626399",
    "end": "629940"
  },
  {
    "text": "there's lots of very different ways to",
    "start": "629940",
    "end": "631920"
  },
  {
    "text": "do this you can enumerate your devices",
    "start": "631920",
    "end": "633720"
  },
  {
    "text": "and everything but the defaults work",
    "start": "633720",
    "end": "636899"
  },
  {
    "text": "right out of the box",
    "start": "636899",
    "end": "639480"
  },
  {
    "text": "now the iterate function here is a",
    "start": "639480",
    "end": "641940"
  },
  {
    "text": "little bit different because we need the",
    "start": "641940",
    "end": "645000"
  },
  {
    "text": "this is the function that will be run on",
    "start": "645000",
    "end": "646980"
  },
  {
    "text": "your graphics card this is the kernel",
    "start": "646980",
    "end": "650160"
  },
  {
    "text": "and this kernel",
    "start": "650160",
    "end": "652040"
  },
  {
    "text": "needs to do all the work itself so it's",
    "start": "652040",
    "end": "655079"
  },
  {
    "text": "impossible to pass it the actual complex",
    "start": "655079",
    "end": "657779"
  },
  {
    "text": "numbers and stuff so instead we pass it",
    "start": "657779",
    "end": "660240"
  },
  {
    "text": "the X and the Y",
    "start": "660240",
    "end": "661800"
  },
  {
    "text": "for the pixel where are we we send it",
    "start": "661800",
    "end": "665820"
  },
  {
    "text": "the start and the step and the limit",
    "start": "665820",
    "end": "667380"
  },
  {
    "text": "that we had",
    "start": "667380",
    "end": "668820"
  },
  {
    "text": "and it also passes the output buffer to",
    "start": "668820",
    "end": "672420"
  },
  {
    "text": "put the result in",
    "start": "672420",
    "end": "674060"
  },
  {
    "text": "so it's essentially the same only we",
    "start": "674060",
    "end": "677760"
  },
  {
    "text": "calculate C inside here",
    "start": "677760",
    "end": "680399"
  },
  {
    "text": "and then we do exactly the same",
    "start": "680399",
    "end": "682920"
  },
  {
    "text": "iteration we initialize sets we iterate",
    "start": "682920",
    "end": "686579"
  },
  {
    "text": "through them we do the set equals set",
    "start": "686579",
    "end": "688620"
  },
  {
    "text": "squared plus C and so on and then",
    "start": "688620",
    "end": "691440"
  },
  {
    "text": "finally we put the number of iterations",
    "start": "691440",
    "end": "693180"
  },
  {
    "text": "into the output",
    "start": "693180",
    "end": "695220"
  },
  {
    "text": "so how to do this actually on the",
    "start": "695220",
    "end": "698459"
  },
  {
    "text": "graphics card",
    "start": "698459",
    "end": "699660"
  },
  {
    "text": "this is the trick in the Constructor",
    "start": "699660",
    "end": "704240"
  },
  {
    "text": "we create a so-called launcher delegate",
    "start": "707700",
    "end": "709920"
  },
  {
    "text": "we call a method on the accelerator",
    "start": "709920",
    "end": "711839"
  },
  {
    "text": "called load Auto Group stream this is",
    "start": "711839",
    "end": "715019"
  },
  {
    "text": "the simplest most default version way to",
    "start": "715019",
    "end": "718140"
  },
  {
    "text": "do this there's lots of other ways so",
    "start": "718140",
    "end": "719700"
  },
  {
    "text": "you can control this in uh if you really",
    "start": "719700",
    "end": "722399"
  },
  {
    "text": "know what you're doing but the point is",
    "start": "722399",
    "end": "724680"
  },
  {
    "text": "you can see that it has type type",
    "start": "724680",
    "end": "728339"
  },
  {
    "text": "parameters that match the signature of",
    "start": "728339",
    "end": "731100"
  },
  {
    "text": "the iterate function",
    "start": "731100",
    "end": "732480"
  },
  {
    "text": "you can see they're the same and we pass",
    "start": "732480",
    "end": "735060"
  },
  {
    "text": "it a reference to the iterate function",
    "start": "735060",
    "end": "736800"
  },
  {
    "text": "and what this method does is it goes and",
    "start": "736800",
    "end": "740279"
  },
  {
    "text": "fetches the IL for your kernel it",
    "start": "740279",
    "end": "743519"
  },
  {
    "text": "transpiles it into whatever underlying",
    "start": "743519",
    "end": "745440"
  },
  {
    "text": "code the graphics card wants",
    "start": "745440",
    "end": "747839"
  },
  {
    "text": "sends it to the graphics card and then",
    "start": "747839",
    "end": "750180"
  },
  {
    "text": "returns a delegate which you use",
    "start": "750180",
    "end": "753000"
  },
  {
    "text": "to actually run it",
    "start": "753000",
    "end": "755519"
  },
  {
    "text": "and so for the iterate range method that",
    "start": "755519",
    "end": "759360"
  },
  {
    "text": "I had this is the same method that we",
    "start": "759360",
    "end": "761339"
  },
  {
    "text": "had on the CPU iterator",
    "start": "761339",
    "end": "763320"
  },
  {
    "text": "this is the one that's called from my",
    "start": "763320",
    "end": "765060"
  },
  {
    "text": "application code I just switch the",
    "start": "765060",
    "end": "767220"
  },
  {
    "text": "iterator that I use",
    "start": "767220",
    "end": "769200"
  },
  {
    "text": "so what we do here it",
    "start": "769200",
    "end": "771540"
  },
  {
    "text": "just a little bit different",
    "start": "771540",
    "end": "774000"
  },
  {
    "text": "first we allocate a buffer on the",
    "start": "774000",
    "end": "776160"
  },
  {
    "text": "graphics card",
    "start": "776160",
    "end": "777839"
  },
  {
    "text": "we call the method on the accelerator",
    "start": "777839",
    "end": "779760"
  },
  {
    "text": "instance",
    "start": "779760",
    "end": "781019"
  },
  {
    "text": "it's called allocate the width and",
    "start": "781019",
    "end": "782880"
  },
  {
    "text": "height this is a two-dimensional buffer",
    "start": "782880",
    "end": "786120"
  },
  {
    "text": "and then we call the launch delegate",
    "start": "786120",
    "end": "789540"
  },
  {
    "text": "and the first argument to the launch",
    "start": "789540",
    "end": "791220"
  },
  {
    "text": "delegates is this index 2 of width and",
    "start": "791220",
    "end": "794579"
  },
  {
    "text": "height",
    "start": "794579",
    "end": "795720"
  },
  {
    "text": "what we're doing here is we tell IL GPU",
    "start": "795720",
    "end": "798660"
  },
  {
    "text": "and the underlying Cuda or whatever it",
    "start": "798660",
    "end": "800399"
  },
  {
    "text": "is open C help perhaps we tell it please",
    "start": "800399",
    "end": "803160"
  },
  {
    "text": "call my kernel function with all values",
    "start": "803160",
    "end": "806100"
  },
  {
    "text": "between 0 and width and 0 and height",
    "start": "806100",
    "end": "811160"
  },
  {
    "text": "and then we pass it the fixed uh",
    "start": "811380",
    "end": "814620"
  },
  {
    "text": "arguments the start and the step and the",
    "start": "814620",
    "end": "816779"
  },
  {
    "text": "limit and the view to this buffer that",
    "start": "816779",
    "end": "819600"
  },
  {
    "text": "we just allocated on the graphics card",
    "start": "819600",
    "end": "821339"
  },
  {
    "text": "so that the kernel can write to the",
    "start": "821339",
    "end": "823740"
  },
  {
    "text": "buffer",
    "start": "823740",
    "end": "826100"
  },
  {
    "text": "after we've done that we call",
    "start": "826139",
    "end": "827639"
  },
  {
    "text": "accelerator synchronize to wait for it",
    "start": "827639",
    "end": "829860"
  },
  {
    "text": "to finish",
    "start": "829860",
    "end": "831120"
  },
  {
    "text": "and that's",
    "start": "831120",
    "end": "832500"
  },
  {
    "text": "you ladies and gentlemen that's all you",
    "start": "832500",
    "end": "834360"
  },
  {
    "text": "need to do",
    "start": "834360",
    "end": "836779"
  },
  {
    "text": "finally when this is finished the",
    "start": "837060",
    "end": "840240"
  },
  {
    "text": "results are in the buffer we copy the",
    "start": "840240",
    "end": "843000"
  },
  {
    "text": "buffer to the output",
    "start": "843000",
    "end": "844560"
  },
  {
    "text": "array this one",
    "start": "844560",
    "end": "847380"
  },
  {
    "text": "and then we dispose the buffer",
    "start": "847380",
    "end": "850980"
  },
  {
    "text": "so what does that look like",
    "start": "850980",
    "end": "854779"
  },
  {
    "text": "obviously",
    "start": "855480",
    "end": "858260"
  },
  {
    "text": "obviously it looks the same",
    "start": "860100",
    "end": "862079"
  },
  {
    "text": "but now I'll check this little box I",
    "start": "862079",
    "end": "863940"
  },
  {
    "text": "have here to use the GPU accelerator",
    "start": "863940",
    "end": "867000"
  },
  {
    "text": "and you see that the speed is now",
    "start": "867000",
    "end": "868920"
  },
  {
    "text": "something else",
    "start": "868920",
    "end": "871920"
  },
  {
    "text": "so all these they're um",
    "start": "871920",
    "end": "874920"
  },
  {
    "text": "perhaps a few million pixels in each of",
    "start": "874920",
    "end": "877019"
  },
  {
    "text": "these pictures and this point I'm doing",
    "start": "877019",
    "end": "881100"
  },
  {
    "text": "100 iterations for each of them so it's",
    "start": "881100",
    "end": "884040"
  },
  {
    "text": "like 100 million iterations",
    "start": "884040",
    "end": "886800"
  },
  {
    "text": "for each frame",
    "start": "886800",
    "end": "890760"
  },
  {
    "text": "we can also we can change the number of",
    "start": "899399",
    "end": "901980"
  },
  {
    "text": "iterations which will change the",
    "start": "901980",
    "end": "904079"
  },
  {
    "text": "Fidelity of the picture",
    "start": "904079",
    "end": "906660"
  },
  {
    "text": "so if we go in here",
    "start": "906660",
    "end": "909360"
  },
  {
    "text": "we can tune it",
    "start": "909360",
    "end": "912500"
  },
  {
    "text": "and basically you can watch this for",
    "start": "912959",
    "end": "914760"
  },
  {
    "text": "hours this is just fun",
    "start": "914760",
    "end": "918079"
  },
  {
    "text": "I can also change the palette that we",
    "start": "918540",
    "end": "921360"
  },
  {
    "text": "map it onto",
    "start": "921360",
    "end": "922980"
  },
  {
    "text": "binary is boring grayscale is somewhat",
    "start": "922980",
    "end": "926279"
  },
  {
    "text": "less boring",
    "start": "926279",
    "end": "927660"
  },
  {
    "text": "but it's always better with",
    "start": "927660",
    "end": "930180"
  },
  {
    "text": "colors",
    "start": "930180",
    "end": "932959"
  },
  {
    "text": "so that's what I had for you uh go home",
    "start": "937740",
    "end": "940260"
  },
  {
    "text": "and do it yourself it's great fun",
    "start": "940260",
    "end": "943639"
  },
  {
    "text": "foreign",
    "start": "945120",
    "end": "947720"
  }
]