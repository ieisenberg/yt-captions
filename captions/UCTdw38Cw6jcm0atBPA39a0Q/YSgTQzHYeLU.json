[
  {
    "start": "0",
    "end": "53000"
  },
  {
    "text": "hello everyone thanks for coming to this",
    "start": "640",
    "end": "6240"
  },
  {
    "text": "talk my name is mangar um after being a consultant for",
    "start": "6240",
    "end": "12679"
  },
  {
    "text": "nearly 20 years I'm now employed at the Norwegian Food Safety",
    "start": "12679",
    "end": "18720"
  },
  {
    "text": "Authority I have made some video series throughout the years one about how so",
    "start": "18720",
    "end": "25000"
  },
  {
    "text": "this weird old editor is sort of cool and other where I do some pair",
    "start": "25000",
    "end": "31119"
  },
  {
    "text": "programming test driven development stuff like that and I've also spent 25",
    "start": "31119",
    "end": "37719"
  },
  {
    "text": "over my years writing a Norwegian text Adventure",
    "start": "37719",
    "end": "43640"
  },
  {
    "text": "game which is a weird thing to do but for the last eight years that has been",
    "start": "43879",
    "end": "49440"
  },
  {
    "text": "running on datomic in production",
    "start": "49440",
    "end": "54760"
  },
  {
    "start": "53000",
    "end": "158000"
  },
  {
    "text": "so datomic who has heard about datomic Prime prior to this",
    "start": "54760",
    "end": "62640"
  },
  {
    "text": "conference some of you okay so who is hearing about Atomic for the first time",
    "start": "62719",
    "end": "67799"
  },
  {
    "text": "now wow that's cool you're in for a",
    "start": "67799",
    "end": "73720"
  },
  {
    "text": "treat the atomic is the thing that you would draw like this in an architecture",
    "start": "73759",
    "end": "81240"
  },
  {
    "text": "diagram so it's a replacement for the trusty old SQL databases that we all",
    "start": "81240",
    "end": "87439"
  },
  {
    "text": "grew up with and often times when a new database",
    "start": "87439",
    "end": "93079"
  },
  {
    "text": "enters the scene they will place themselves in a sort of supplementary",
    "start": "93079",
    "end": "99960"
  },
  {
    "text": "position like a a Time series database or a key value store for your session",
    "start": "99960",
    "end": "106280"
  },
  {
    "text": "data and so on but datomic places itself squarely as",
    "start": "106280",
    "end": "112840"
  },
  {
    "text": "the database as the place where you keep your crucial business information",
    "start": "112840",
    "end": "120880"
  },
  {
    "text": "so datomic was written in closure which is a data Centric functional language on",
    "start": "121079",
    "end": "126399"
  },
  {
    "text": "the jvm by this guy",
    "start": "126399",
    "end": "132160"
  },
  {
    "text": "Richi and he wrote the atomic the database and he wrote",
    "start": "132160",
    "end": "137959"
  },
  {
    "text": "closure the language so while all languages can use",
    "start": "137959",
    "end": "143440"
  },
  {
    "text": "can use datomic there is little doubt that datomic and closure are best buds",
    "start": "143440",
    "end": "150160"
  },
  {
    "text": "they go together like well like they had sprung from the same mind or",
    "start": "150160",
    "end": "157720"
  },
  {
    "start": "158000",
    "end": "204000"
  },
  {
    "text": "something so a new database what kind of databases are",
    "start": "158400",
    "end": "165080"
  },
  {
    "text": "there a lots but most prominent is the classic Square table relational",
    "start": "165080",
    "end": "171440"
  },
  {
    "text": "database then there is the nosql document database maybe the simple key Value",
    "start": "171440",
    "end": "177519"
  },
  {
    "text": "Store and when I started using datomic 11",
    "start": "177519",
    "end": "183159"
  },
  {
    "text": "years ago I had no idea what kind of database it was I was only interested in it",
    "start": "183159",
    "end": "189280"
  },
  {
    "text": "because Rich hickey the creator of closure had created it I was a fan of",
    "start": "189280",
    "end": "194920"
  },
  {
    "text": "closure and Rich hickey and all these cool talks so let's check this out and to my surprise theic was neither of",
    "start": "194920",
    "end": "204239"
  },
  {
    "start": "204000",
    "end": "700000"
  },
  {
    "text": "these in fact the atomics the atomic has quite a different",
    "start": "204720",
    "end": "211640"
  },
  {
    "text": "take on the shape of the data it's it's",
    "start": "211640",
    "end": "217400"
  },
  {
    "text": "most similar to semantic triples from rdf or the",
    "start": "217400",
    "end": "223959"
  },
  {
    "text": "resource description framework which sounds very fancy but it",
    "start": "223959",
    "end": "229680"
  },
  {
    "text": "really is not it's almost like grammar subject predicate object Sarah reads a",
    "start": "229680",
    "end": "237360"
  },
  {
    "text": "book in datomic we call these entity attribute and",
    "start": "237360",
    "end": "244239"
  },
  {
    "text": "value and datomic stores its data in this",
    "start": "244239",
    "end": "250599"
  },
  {
    "text": "format so here's the first lesson I learned it is that datomic is",
    "start": "252319",
    "end": "257759"
  },
  {
    "text": "fundamentally different from the databases we grew up",
    "start": "257759",
    "end": "262639"
  },
  {
    "text": "with so let's take a look at entity attribute value Sarah reads the book",
    "start": "263280",
    "end": "268840"
  },
  {
    "text": "1984 this is a piece of information here are some more John",
    "start": "268840",
    "end": "275560"
  },
  {
    "text": "reads the beach 1984 was written by orille and the beach was written by",
    "start": "275560",
    "end": "282879"
  },
  {
    "text": "Garland and the atomic is a database of facts much like these let's break down the first",
    "start": "284000",
    "end": "293280"
  },
  {
    "text": "one there's some entity number 17 who has the attribute of person with a given",
    "start": "293440",
    "end": "299880"
  },
  {
    "text": "name and the value is Sarah then there's another entity 23",
    "start": "299880",
    "end": "305759"
  },
  {
    "text": "which has a book title of 1984 and then we have entity 17 has the",
    "start": "305759",
    "end": "313280"
  },
  {
    "text": "attribute person reads 23 the book sort of paints a",
    "start": "313280",
    "end": "319600"
  },
  {
    "text": "picture about Sarah reading the book 1984 let's add a few more there's a new",
    "start": "319600",
    "end": "326880"
  },
  {
    "text": "entity 40 which is George Orwell and then the book 23 has a book author that is",
    "start": "326880",
    "end": "334840"
  },
  {
    "text": "40 George so these are the entity IDs",
    "start": "334840",
    "end": "341120"
  },
  {
    "text": "they are not 17 and 23 and 40 in the database they're quite a bit longer than that but these slides would look",
    "start": "341120",
    "end": "347440"
  },
  {
    "text": "ridiculous if I had that so this is easier and then these are the",
    "start": "347440",
    "end": "355280"
  },
  {
    "text": "attributes and finally the values entity attribute value and when you look at",
    "start": "355280",
    "end": "360759"
  },
  {
    "text": "this you might notice a few things first of all you might notice that these are references to other",
    "start": "360759",
    "end": "369280"
  },
  {
    "text": "entities and the significance of that we will talk about soon but first the",
    "start": "369280",
    "end": "376960"
  },
  {
    "text": "attributes this part here of the attribute looks quite a bit like a table",
    "start": "376960",
    "end": "383240"
  },
  {
    "text": "like a person table and a book table right and in that case this would be the",
    "start": "383240",
    "end": "391360"
  },
  {
    "text": "columns so let's take a look at this data sort of in those Square",
    "start": "391360",
    "end": "397800"
  },
  {
    "text": "tables here's the person table it has the ID column given name family name and reads and Sarah is entity entity 17 and",
    "start": "397800",
    "end": "406840"
  },
  {
    "text": "she reads 23 which is a foreign key to The Book",
    "start": "406840",
    "end": "413520"
  },
  {
    "text": "Table Right and it has a title 984 and the author is is 40 which is a foreign",
    "start": "413560",
    "end": "419240"
  },
  {
    "text": "key back to the person table which is George of course as you may notice there",
    "start": "419240",
    "end": "425960"
  },
  {
    "text": "are some blank squares here um in the atomic we can model sparse data but in tables we sort of have to use space on",
    "start": "425960",
    "end": "432720"
  },
  {
    "text": "the lack of information so there's some nulls we have to put in there",
    "start": "432720",
    "end": "438599"
  },
  {
    "text": "so that was tables but instead of looking at this data in tables what if",
    "start": "438599",
    "end": "443960"
  },
  {
    "text": "you look at them like nodes in a graph",
    "start": "443960",
    "end": "450440"
  },
  {
    "text": "so we have the 17 node 23 and 40 and then these attributes that are pointing",
    "start": "450440",
    "end": "456400"
  },
  {
    "text": "to other entities they sort of become the edges or the vertices in the graph",
    "start": "456400",
    "end": "462319"
  },
  {
    "text": "right and to illustrate just how natural it feels to use Atomic as a graph",
    "start": "462440",
    "end": "468520"
  },
  {
    "text": "database I'm going to show you a little piece of closure code and if you haven't",
    "start": "468520",
    "end": "473680"
  },
  {
    "text": "written any closure code before it's fine I'm going to guide you through it so we Define",
    "start": "473680",
    "end": "479960"
  },
  {
    "text": "person to be the entity in the database with the ID of",
    "start": "479960",
    "end": "485680"
  },
  {
    "text": "17 and when we look up person given name we will get back",
    "start": "485680",
    "end": "492039"
  },
  {
    "text": "Zer that's probably not a big surprise but what happens if we look up person",
    "start": "492039",
    "end": "500360"
  },
  {
    "text": "reads do we now get the number 23 no we in fact get the entity",
    "start": "500360",
    "end": "510479"
  },
  {
    "text": "we get the book it has the database IDE of 23 but it also for instance has a",
    "start": "510479",
    "end": "517680"
  },
  {
    "text": "book title so now we can look up the book title that the person reads we're",
    "start": "517680",
    "end": "523080"
  },
  {
    "text": "following the arrow to the other entity and we can keep going we can look at the book author Follow the arrow there and",
    "start": "523080",
    "end": "530600"
  },
  {
    "text": "look up the person's family name and it's George Orwell at least it's orable so in code we're now following",
    "start": "530600",
    "end": "539560"
  },
  {
    "text": "ing the vertices in the",
    "start": "539560",
    "end": "543399"
  },
  {
    "text": "graph now let's say that we instead had defined the author to be the entity in",
    "start": "545160",
    "end": "552640"
  },
  {
    "text": "the database with idea 40 and you might notice that Dar old George does not have",
    "start": "552640",
    "end": "560600"
  },
  {
    "text": "any arrows pointing out it doesn't have any attributes that points to other",
    "start": "560600",
    "end": "566640"
  },
  {
    "text": "entities but it would be useful to know which",
    "start": "566640",
    "end": "572279"
  },
  {
    "text": "books he wrote right and you can actually do that in the atomic you see we used a book author there but you see",
    "start": "572279",
    "end": "578640"
  },
  {
    "text": "that sneaky underscore there's a sneaky underscore in front of the author there that tells the atomic that we want to",
    "start": "578640",
    "end": "584839"
  },
  {
    "text": "follow this reference the other way we're following it back so we're not following back to a",
    "start": "584839",
    "end": "591399"
  },
  {
    "text": "single book we're following it back to all books who has George Orwell as its author so we get a list of entities",
    "start": "591399",
    "end": "601320"
  },
  {
    "text": "and we can do the title of the first book and we're back to",
    "start": "601800",
    "end": "607040"
  },
  {
    "text": "1984 so this is pretty nice sort of navigating in the graph feature of the",
    "start": "607360",
    "end": "616440"
  },
  {
    "text": "atomic but maybe maybe the coolest thing about these entities and sort of the whole rdf",
    "start": "616440",
    "end": "623839"
  },
  {
    "text": "thing is that the entities and their attributes are not constrained to living",
    "start": "623839",
    "end": "630519"
  },
  {
    "text": "just inside the square box because Sarah in addition to being a",
    "start": "630519",
    "end": "635920"
  },
  {
    "text": "person is a user and as a user she has an email",
    "start": "635920",
    "end": "641760"
  },
  {
    "text": "address and I'm pretty sure George oral does not have an email address on the other hand George is an",
    "start": "642000",
    "end": "649600"
  },
  {
    "text": "author and he has a biography and he was born in India and so on and maybe the book title is part of",
    "start": "649600",
    "end": "657800"
  },
  {
    "text": "some product with the skew so we are able to model the world",
    "start": "657800",
    "end": "664200"
  },
  {
    "text": "as we see it if you have ever encountered the",
    "start": "664200",
    "end": "669720"
  },
  {
    "text": "object relational impedance mismatch you will know that it can be",
    "start": "669720",
    "end": "675600"
  },
  {
    "text": "quite painful because you've modeled your domain so perfectly and it won't fit into these square boxes in the",
    "start": "675600",
    "end": "681480"
  },
  {
    "text": "relational database so we don't have that problem here so the atomic can model Square data",
    "start": "681480",
    "end": "688160"
  },
  {
    "text": "but also sparse data and graphs and mixed data all the complexities of the",
    "start": "688160",
    "end": "694120"
  },
  {
    "text": "world and that is very",
    "start": "694120",
    "end": "697760"
  },
  {
    "start": "700000",
    "end": "828000"
  },
  {
    "text": "freeing I said that datomic is a database of facts which begs the",
    "start": "700399",
    "end": "706240"
  },
  {
    "text": "question what are facts think about it I'll drink a little",
    "start": "706240",
    "end": "712920"
  },
  {
    "text": "bit we will start out very very simple is Sarah a",
    "start": "717240",
    "end": "725720"
  },
  {
    "text": "fact no Sarah is not a fact what about Sarah",
    "start": "725720",
    "end": "732120"
  },
  {
    "text": "reads well it is a complete sentence but I will argue that it is not a fact",
    "start": "732120",
    "end": "738279"
  },
  {
    "text": "yet how about now Sarah reads 1984 is this a",
    "start": "738279",
    "end": "746440"
  },
  {
    "text": "fact I am going to say no this is not a fact because facts never",
    "start": "748160",
    "end": "756480"
  },
  {
    "text": "change now that's a strange strange things to say I think we're going to",
    "start": "756480",
    "end": "761680"
  },
  {
    "text": "have to dig a little bit deeper into that one what",
    "start": "761680",
    "end": "767440"
  },
  {
    "text": "happens if Sarah starts reading the",
    "start": "767440",
    "end": "772639"
  },
  {
    "text": "beach does the fact that she did read 1984",
    "start": "772639",
    "end": "778120"
  },
  {
    "text": "change it does not what's missing here is",
    "start": "778120",
    "end": "784560"
  },
  {
    "text": "time when did Sarah read",
    "start": "784560",
    "end": "789480"
  },
  {
    "text": "1984 and now Sarah is free to start reading the beach and maybe 10 years ago Sarah read",
    "start": "791519",
    "end": "797720"
  },
  {
    "text": "The Hobbit so adding time to the equation removes the need to update our data",
    "start": "797720",
    "end": "806279"
  },
  {
    "text": "because the past never changes now this is an important point you might wish you could change",
    "start": "806279",
    "end": "812600"
  },
  {
    "text": "the past in some way but well so in datomic we only ever add new",
    "start": "812600",
    "end": "821800"
  },
  {
    "text": "facts so datomic is a database of facts that never",
    "start": "821800",
    "end": "827360"
  },
  {
    "start": "828000",
    "end": "950000"
  },
  {
    "text": "change and at this point I can imagine that you might have a few questions",
    "start": "828320",
    "end": "835519"
  },
  {
    "text": "regarding that statement and I will try to answer them now",
    "start": "835519",
    "end": "841040"
  },
  {
    "text": "this is our entity attribute value and to add this into the database we",
    "start": "841680",
    "end": "848000"
  },
  {
    "text": "do this DB add is a transaction function that will it adds a",
    "start": "848000",
    "end": "855160"
  },
  {
    "text": "fact and we will call the transact function and we will pass it the connection to the",
    "start": "855160",
    "end": "860920"
  },
  {
    "text": "database and this will transact it and we will end up with a tuple in the",
    "start": "860920",
    "end": "867560"
  },
  {
    "text": "database that looks like this there's a 17 entity with the person",
    "start": "867560",
    "end": "872600"
  },
  {
    "text": "family name of Connor and the time you can see that the transactor added the time at the end",
    "start": "872600",
    "end": "878920"
  },
  {
    "text": "there and now for your question yes we can remove a piece of",
    "start": "878920",
    "end": "884920"
  },
  {
    "text": "information as well we can retract it we can",
    "start": "884920",
    "end": "891360"
  },
  {
    "text": "say this piece of information is no longer valid this is no longer the case",
    "start": "891360",
    "end": "899560"
  },
  {
    "text": "but what look at what happens to the database we have added a",
    "start": "899560",
    "end": "907920"
  },
  {
    "text": "retraction the past still did not",
    "start": "907920",
    "end": "912480"
  },
  {
    "text": "change now you have another question oh yeah that's the first one",
    "start": "913279",
    "end": "920600"
  },
  {
    "text": "even retractions are additions I think I think this is very very very cool but your other question",
    "start": "920600",
    "end": "926680"
  },
  {
    "text": "is this what if we are Le legally obligated to delete information and yeah",
    "start": "926680",
    "end": "932399"
  },
  {
    "text": "we can do that in in the atomic we can do so with exision this one says excise",
    "start": "932399",
    "end": "937839"
  },
  {
    "text": "for entity 17 these aters and that will forcibly remove the information even",
    "start": "937839",
    "end": "945199"
  },
  {
    "text": "back in time so it is possible but anyway it's time for a little story",
    "start": "945199",
    "end": "954959"
  },
  {
    "start": "950000",
    "end": "1037000"
  },
  {
    "text": "18 years ago David Hein Hansen released this amazing video where he for 15",
    "start": "961279",
    "end": "968920"
  },
  {
    "text": "minutes programmed a Blog using textmate and he said oops look at all",
    "start": "968920",
    "end": "974800"
  },
  {
    "text": "the things I'm not doing and I loved it I was writing Java at the",
    "start": "974800",
    "end": "979839"
  },
  {
    "text": "time and he was showing off Ruby on Rails and Ruby and the language and it",
    "start": "979839",
    "end": "986360"
  },
  {
    "text": "was so amazing I learned so many things database migrations the model view",
    "start": "986360",
    "end": "992240"
  },
  {
    "text": "controller pattern higher order functions like map and filter I think maybe that was where my journey in the",
    "start": "992240",
    "end": "999360"
  },
  {
    "text": "functional programming world started I learned that code could be",
    "start": "999360",
    "end": "1005560"
  },
  {
    "text": "beautiful and I also learned that I should always have the created at and",
    "start": "1005560",
    "end": "1012920"
  },
  {
    "text": "updated ad columns in all my tables and I did and I felt like I was",
    "start": "1012920",
    "end": "1019240"
  },
  {
    "text": "now a professional it developer because I could look at the created at and updated at I even learned",
    "start": "1019240",
    "end": "1027038"
  },
  {
    "text": "this MySQL incantation that allowed MySQL to just keep these fields updated",
    "start": "1027039",
    "end": "1032678"
  },
  {
    "text": "for me it was pretty cool so let's take a look at our person",
    "start": "1032679",
    "end": "1039678"
  },
  {
    "start": "1037000",
    "end": "1157000"
  },
  {
    "text": "table and we will add some created at and updated ad fields to it let's examine this for a little bit",
    "start": "1039679",
    "end": "1049280"
  },
  {
    "text": "because there's an ID and a given name and I noticed that created ad and updated ad are not the",
    "start": "1049280",
    "end": "1055440"
  },
  {
    "text": "same right this row has been updated and probably ID has stayed the same and",
    "start": "1055440",
    "end": "1062320"
  },
  {
    "text": "probably Sarah the given name has stayed the same so my my theory is that book",
    "start": "1062320",
    "end": "1071000"
  },
  {
    "text": "23 is the one that was started reading yesterday must be right but look at this",
    "start": "1071000",
    "end": "1078600"
  },
  {
    "text": "to today Sarah starts reading book 77 the",
    "start": "1078600",
    "end": "1084200"
  },
  {
    "text": "beach and the same sort of logic goes here but what if tomorrow Sarah enters",
    "start": "1084200",
    "end": "1090559"
  },
  {
    "text": "into our user preferences page and see she finally enters her family",
    "start": "1090559",
    "end": "1096880"
  },
  {
    "text": "name now it's becoming hard to sort of figure out what exactly was",
    "start": "1096880",
    "end": "1104640"
  },
  {
    "text": "updated and where did book 23 go",
    "start": "1104640",
    "end": "1110080"
  },
  {
    "text": "so this should give you some clue as to why the atomic does not use tables for",
    "start": "1110080",
    "end": "1115640"
  },
  {
    "text": "business critical data let's look at the same little",
    "start": "1115640",
    "end": "1120679"
  },
  {
    "text": "sequence of events using facts so she has she has a name that was",
    "start": "1120679",
    "end": "1128240"
  },
  {
    "text": "at this time and she has reading 23 which was at that time and when she starts reading the beach today we just",
    "start": "1128240",
    "end": "1135159"
  },
  {
    "text": "add it onto the list and when she changes her family name tomorrow we also",
    "start": "1135159",
    "end": "1141280"
  },
  {
    "text": "just added to the list so not only is there no information",
    "start": "1141280",
    "end": "1147799"
  },
  {
    "text": "lost but now we're keeping track of time for all attributes and their",
    "start": "1147799",
    "end": "1154600"
  },
  {
    "start": "1157000",
    "end": "1395000"
  },
  {
    "text": "values let's write a little query this is sort of the three facts",
    "start": "1158200",
    "end": "1165360"
  },
  {
    "text": "that together reads Sarah is reading the beach we will replace the concrete name of",
    "start": "1165360",
    "end": "1172720"
  },
  {
    "text": "Sarah with a variable name the question mark in front",
    "start": "1172720",
    "end": "1179200"
  },
  {
    "text": "indicates to datomic that this is a placeholder and 17 is the concrete ID of",
    "start": "1179200",
    "end": "1185799"
  },
  {
    "text": "one specific entity the person we will replace it with p and notice",
    "start": "1185799",
    "end": "1193360"
  },
  {
    "text": "that P is one placeholder and it's used in two places it's the same place",
    "start": "1193360",
    "end": "1198960"
  },
  {
    "text": "placeholder and in other words it's the same entity so the person with the given name of name is the same person that",
    "start": "1198960",
    "end": "1205240"
  },
  {
    "text": "reads the book b and finally we will replace the beach",
    "start": "1205240",
    "end": "1210760"
  },
  {
    "text": "with just title and now now we have something that instead",
    "start": "1210760",
    "end": "1216960"
  },
  {
    "text": "of being about concrete data instead expresses the relationship between these",
    "start": "1216960",
    "end": "1225799"
  },
  {
    "text": "attributes so to find something here we will find for instance the title where",
    "start": "1225799",
    "end": "1231159"
  },
  {
    "text": "this holds and we have to pass in some parameters so we're passing in the database and the name and the thing that",
    "start": "1231159",
    "end": "1238640"
  },
  {
    "text": "you are looking at now is actually data log which is a prologue inspired queral",
    "start": "1238640",
    "end": "1246840"
  },
  {
    "text": "language from the 70s and this is what Atomic uses side note you can use SQL as well",
    "start": "1246840",
    "end": "1254280"
  },
  {
    "text": "but hey look at this cool stuff so to query we pass this data log",
    "start": "1254280",
    "end": "1260799"
  },
  {
    "text": "query to the Q function passing the database and the name Sarah and we get",
    "start": "1260799",
    "end": "1265880"
  },
  {
    "text": "back the beach which is pretty good Sarah is",
    "start": "1265880",
    "end": "1271840"
  },
  {
    "text": "reading the beach today but why only the",
    "start": "1271840",
    "end": "1278279"
  },
  {
    "text": "beach if you remember Sarah was reading The Hobbit she was reading 1984 she was",
    "start": "1278279",
    "end": "1283559"
  },
  {
    "text": "reading the beach there is something going on here",
    "start": "1283559",
    "end": "1289080"
  },
  {
    "text": "and the thing that's going on is that the database the DB we're passing in there that is actually a materialized",
    "start": "1289080",
    "end": "1295360"
  },
  {
    "text": "view into the current state of all the databases entities it is a snapshot of",
    "start": "1295360",
    "end": "1303120"
  },
  {
    "text": "the data as it is right now and in our model you only read one",
    "start": "1303120",
    "end": "1308240"
  },
  {
    "text": "book at a time deal with it so it's just giving us the last",
    "start": "1308240",
    "end": "1314720"
  },
  {
    "text": "one but I told you that the atomic doesn't throw away this information",
    "start": "1314919",
    "end": "1320960"
  },
  {
    "text": "right so instead of passing in the snapshot of now we instead of passing it",
    "start": "1320960",
    "end": "1327000"
  },
  {
    "text": "the database in Asis we can pass it in as of some other point in",
    "start": "1327000",
    "end": "1334520"
  },
  {
    "text": "time like yesterday and when we run this query we get 1984 and yeah she she was reading",
    "start": "1334520",
    "end": "1341640"
  },
  {
    "text": "1984 yesterday that's great and we can pass in the day before that and the most",
    "start": "1341640",
    "end": "1347840"
  },
  {
    "text": "recent information we had about Sarah's reading habits at that point was that she was reading The Hobbit now it shouldn't take 10 years to",
    "start": "1347840",
    "end": "1355200"
  },
  {
    "text": "read The Hobbit maybe she watch the movies in either case if we go back even",
    "start": "1355200",
    "end": "1362159"
  },
  {
    "text": "more years well at this point we didn't know anything about s's reading habits and we",
    "start": "1362159",
    "end": "1368480"
  },
  {
    "text": "get an empty result set back and if that's not enough we can",
    "start": "1368480",
    "end": "1375880"
  },
  {
    "text": "just say to the Tomic please just give me everything everything the entire history of the",
    "start": "1375880",
    "end": "1382120"
  },
  {
    "text": "database and it will oblige now we get all of them The Hobbit 1984 in the beach",
    "start": "1382120",
    "end": "1389080"
  },
  {
    "text": "so the atomic keeps historic data for all your attributes and",
    "start": "1389080",
    "end": "1395200"
  },
  {
    "text": "entities now looking at datomic historic features sort of zoomed into just one",
    "start": "1395679",
    "end": "1402559"
  },
  {
    "text": "attribute like that might not give the full image of what's going on so let me",
    "start": "1402559",
    "end": "1408240"
  },
  {
    "text": "tell tell you a story at a former jobs a former job a few years",
    "start": "1408240",
    "end": "1413360"
  },
  {
    "text": "ago we were asked to create a new report for the higher ups in the business it was quite a bit of work and",
    "start": "1413360",
    "end": "1422480"
  },
  {
    "text": "it queried a whole lot of the database but when we were done we could generate",
    "start": "1422480",
    "end": "1427919"
  },
  {
    "text": "a report like this sort of like this generate a report passing the database and it would spit out this cool little",
    "start": "1427919",
    "end": "1435039"
  },
  {
    "text": "with graphs and everything and the business people they were happy",
    "start": "1435039",
    "end": "1441240"
  },
  {
    "text": "they got their data and they were looking forward to seeing how",
    "start": "1441240",
    "end": "1447240"
  },
  {
    "text": "this data would evolve as time went on what they did not know was that we",
    "start": "1447240",
    "end": "1453000"
  },
  {
    "text": "were using the atomic and had been for a few years so instead of passing in the",
    "start": "1453000",
    "end": "1460039"
  },
  {
    "text": "database we passed in the database as of the beginning of last month and we got",
    "start": "1460039",
    "end": "1465360"
  },
  {
    "text": "another report just like the database was at that point in time and we did it",
    "start": "1465360",
    "end": "1471080"
  },
  {
    "text": "again for the mon month before that and again and in the end they got a whole",
    "start": "1471080",
    "end": "1476159"
  },
  {
    "text": "years worth of reports with the entire database and mind you the code didn't have to change",
    "start": "1476159",
    "end": "1485000"
  },
  {
    "text": "when generating a report for now and generating the report at some other time",
    "start": "1485000",
    "end": "1490679"
  },
  {
    "text": "the code is the same because you're always looking at a",
    "start": "1490679",
    "end": "1496039"
  },
  {
    "text": "snapshot so you can query the data base as it was at any given point in",
    "start": "1496039",
    "end": "1503559"
  },
  {
    "start": "1504000",
    "end": "1560000"
  },
  {
    "text": "time now like I said the reports were quite involved and took some time to",
    "start": "1504679",
    "end": "1509919"
  },
  {
    "text": "create there were lots of heavy queries what do you think we",
    "start": "1509919",
    "end": "1516240"
  },
  {
    "text": "used a data warehouse a backup of the production",
    "start": "1516240",
    "end": "1524000"
  },
  {
    "text": "database or did we just run it straight in production",
    "start": "1524000",
    "end": "1529880"
  },
  {
    "text": "this is a trick question right of course we ran straight in",
    "start": "1530120",
    "end": "1535960"
  },
  {
    "text": "production yeah that might sound crazy what about those heavy queries didn't",
    "start": "1535960",
    "end": "1541600"
  },
  {
    "text": "didn't it grind production to a halt well um in order to answer that",
    "start": "1541600",
    "end": "1548720"
  },
  {
    "text": "question we're going to have to learn just a little bit about the atomics operational model not much mind you but",
    "start": "1548720",
    "end": "1555360"
  },
  {
    "text": "a little and we will start this off with a",
    "start": "1555360",
    "end": "1560640"
  },
  {
    "start": "1560000",
    "end": "1772000"
  },
  {
    "text": "quote Des sign is to take things apart in such a way that they can be put back",
    "start": "1560640",
    "end": "1567200"
  },
  {
    "text": "together and look it's this guy again richy and he created this database so",
    "start": "1567200",
    "end": "1574559"
  },
  {
    "text": "yeah he loves to take things apart normally a database server is responsible for at least these three",
    "start": "1574559",
    "end": "1582039"
  },
  {
    "text": "things transactions queries and storage not in datomic",
    "start": "1582039",
    "end": "1590240"
  },
  {
    "text": "of course the server is responsible for the transactions the atomic transactions are",
    "start": "1591000",
    "end": "1598279"
  },
  {
    "text": "acid in that they are Atomic consistent isolated and durable so it needs to be",
    "start": "1598279",
    "end": "1604279"
  },
  {
    "text": "sort of centralized but the fact that the server is doing mostly only transactions means",
    "start": "1604279",
    "end": "1612600"
  },
  {
    "text": "that in the atomic nomenclature we actually call the server not server but the transactor",
    "start": "1612600",
    "end": "1620240"
  },
  {
    "text": "but then who who are who are doing the queries well the clients are the clients",
    "start": "1620919",
    "end": "1628320"
  },
  {
    "text": "are doing the queries themselves because they have direct access to",
    "start": "1628320",
    "end": "1634559"
  },
  {
    "text": "storage and that's why in the atomic we call the clients peers because they're",
    "start": "1634919",
    "end": "1640120"
  },
  {
    "text": "not clients of some server they are full peers of the",
    "start": "1640120",
    "end": "1645880"
  },
  {
    "text": "database and the storage is pluggable datomic is not in the business",
    "start": "1646279",
    "end": "1652520"
  },
  {
    "text": "of writing files or bite the disk you can plug in Dynamo DB you can use",
    "start": "1652520",
    "end": "1659240"
  },
  {
    "text": "Cassandra you can use any SQL database and I have personally used Dynamo DB",
    "start": "1659240",
    "end": "1665760"
  },
  {
    "text": "postgress SQL light and at some point for many years actually I just wrote",
    "start": "1665760",
    "end": "1671080"
  },
  {
    "text": "directly to file system which is not something that the atomic team encourages but it worked for many years",
    "start": "1671080",
    "end": "1680120"
  },
  {
    "text": "of course when the clients want to write something they send it to the transactor",
    "start": "1681480",
    "end": "1686519"
  },
  {
    "text": "which in turn writes it to the storage but what you get",
    "start": "1686519",
    "end": "1692080"
  },
  {
    "text": "here is linearly scalable reads in other words you can spin up as many clients of",
    "start": "1692080",
    "end": "1697919"
  },
  {
    "text": "as many applications as you want and they never interfere with the",
    "start": "1697919",
    "end": "1703480"
  },
  {
    "text": "work of the server and how is this even possible it sounds crazy",
    "start": "1703480",
    "end": "1708519"
  },
  {
    "text": "and it is possible because facts never change because of immutability because",
    "start": "1708519",
    "end": "1715039"
  },
  {
    "text": "it's eminently cachable because you can cache the database data in mem cach you",
    "start": "1715039",
    "end": "1721880"
  },
  {
    "text": "could theoretically put the datomic database behind the content delivery",
    "start": "1721880",
    "end": "1728200"
  },
  {
    "text": "Network and the other trick here is that you're always looking at snapshots so when I",
    "start": "1728200",
    "end": "1733440"
  },
  {
    "text": "start performing my query at some point it's to freezes the database and the the",
    "start": "1733440",
    "end": "1739840"
  },
  {
    "text": "server can continue transacting stuff but I'm now looking at the database I it was at that point and even if I spend 2",
    "start": "1739840",
    "end": "1746240"
  },
  {
    "text": "hours performing my report generation I will get a consistent view",
    "start": "1746240",
    "end": "1751559"
  },
  {
    "text": "because I'm not working towards the data set that is constantly evolving so the clients they are true",
    "start": "1751559",
    "end": "1759440"
  },
  {
    "text": "peers of the database and queries never disrupt other services",
    "start": "1759440",
    "end": "1768600"
  },
  {
    "text": "remember this it's where we find titles of the book Sarah is",
    "start": "1773960",
    "end": "1780360"
  },
  {
    "text": "reading I just wanted to show you this cool little",
    "start": "1782279",
    "end": "1787840"
  },
  {
    "text": "thing compared to the other stuff this is sort of just a little thing but I I think it's pretty cool if you look at",
    "start": "1787840",
    "end": "1794640"
  },
  {
    "text": "the find there fine title what if we instead find the name and pass in the",
    "start": "1794640",
    "end": "1800919"
  },
  {
    "text": "title the beach well now we will get back Sarah",
    "start": "1800919",
    "end": "1806640"
  },
  {
    "text": "and John because Sarah and John are reading",
    "start": "1806640",
    "end": "1812200"
  },
  {
    "text": "the beach and if we go back look title and",
    "start": "1812200",
    "end": "1817640"
  },
  {
    "text": "name name and title we don't have to change very much",
    "start": "1817640",
    "end": "1823799"
  },
  {
    "text": "with this query right this part here never changes",
    "start": "1823799",
    "end": "1829080"
  },
  {
    "text": "it's almost Timeless in that it expresses the relationship between these attributes in a way that is not directly",
    "start": "1829080",
    "end": "1837480"
  },
  {
    "text": "dependent on the question we're asking I think that was pretty cool so",
    "start": "1837480",
    "end": "1844200"
  },
  {
    "text": "data log is expressive in the surprising",
    "start": "1844200",
    "end": "1848480"
  },
  {
    "text": "ways so by now you are pretty familiar with these entity attribute value and",
    "start": "1852000",
    "end": "1859559"
  },
  {
    "text": "time well I have been lying to you the T isn't",
    "start": "1859559",
    "end": "1866600"
  },
  {
    "text": "time it's transaction here are three",
    "start": "1866600",
    "end": "1874120"
  },
  {
    "text": "facts that were asserted at the same time they belong to the same transaction",
    "start": "1874120",
    "end": "1879919"
  },
  {
    "text": "that tells us something important these three facts are",
    "start": "1879919",
    "end": "1885399"
  },
  {
    "text": "related our facts no longer longer just is no longer just a mishmash of facts",
    "start": "1885399",
    "end": "1890960"
  },
  {
    "text": "it's thrown around with no nothing keeping them together now they are",
    "start": "1890960",
    "end": "1896039"
  },
  {
    "text": "connected by their transaction and it's on the transaction that we have the",
    "start": "1896039",
    "end": "1901679"
  },
  {
    "text": "time but since the transaction is now a fully fledged member of the system an",
    "start": "1901679",
    "end": "1907399"
  },
  {
    "text": "actual entity in the database we can add more information to the transaction like",
    "start": "1907399",
    "end": "1912840"
  },
  {
    "text": "who did it and why",
    "start": "1912840",
    "end": "1919840"
  },
  {
    "text": "imagine living in a world where all your data you can tell when it was done by",
    "start": "1921200",
    "end": "1928279"
  },
  {
    "text": "whom and for what reason I'm pretty",
    "start": "1928279",
    "end": "1934000"
  },
  {
    "text": "sure most people in this audience it's at Le certainly true for me have at some",
    "start": "1934000",
    "end": "1941639"
  },
  {
    "text": "point looked at a piece of code and thought what wrote this this makes",
    "start": "1941639",
    "end": "1946720"
  },
  {
    "text": "no sense and then you do the git blame and of course it's you 6 months ago well",
    "start": "1946720",
    "end": "1954320"
  },
  {
    "text": "with this now you can be a along multiple",
    "start": "1954320",
    "end": "1959518"
  },
  {
    "text": "axes so now that we know that transactions",
    "start": "1960360",
    "end": "1965840"
  },
  {
    "text": "are fully fledged entities we can go back to this history",
    "start": "1965840",
    "end": "1970880"
  },
  {
    "text": "query you remember it gave us all of these books and add a crucial piece of",
    "start": "1970880",
    "end": "1976600"
  },
  {
    "text": "information you want to all also find the instant at which they were asserted into",
    "start": "1976600",
    "end": "1983120"
  },
  {
    "text": "the database and if you now look at the person reads row we have the e a and v",
    "start": "1983120",
    "end": "1989559"
  },
  {
    "text": "and then the transaction and this refers to the transaction entity and we can add that",
    "start": "1989559",
    "end": "1996279"
  },
  {
    "text": "to our query look up its attribute of database transaction instant and bind",
    "start": "1996279",
    "end": "2001440"
  },
  {
    "text": "the value to the instant variable there and run the query again and look now we",
    "start": "2001440",
    "end": "2007519"
  },
  {
    "text": "have instance for all of these reads so transactions are first class",
    "start": "2007519",
    "end": "2013960"
  },
  {
    "text": "entities in the",
    "start": "2013960",
    "end": "2016720"
  },
  {
    "start": "2019000",
    "end": "2207000"
  },
  {
    "text": "atomic so we have now reached the final point the final",
    "start": "2019399",
    "end": "2025399"
  },
  {
    "text": "lesson and it's going to be a little philosophical I'm",
    "start": "2025399",
    "end": "2030440"
  },
  {
    "text": "sorry because I'm going to ask you a question now that you know the answer to and that is what storage do we as",
    "start": "2030440",
    "end": "2038159"
  },
  {
    "text": "developers give ourselves to store our code",
    "start": "2038159",
    "end": "2043679"
  },
  {
    "text": "in it's good right you remember the the the tool that",
    "start": "2043679",
    "end": "2050919"
  },
  {
    "text": "you're using that gives you the full history of everything that you can look at the code as it was last week where",
    "start": "2050919",
    "end": "2057000"
  },
  {
    "text": "you can see who did what at what point in time even just imagine going back to",
    "start": "2057000",
    "end": "2062720"
  },
  {
    "text": "this have any of you ever done sort of the FTP into the server and you're copying your code onto the server and",
    "start": "2062720",
    "end": "2069960"
  },
  {
    "text": "just for sake of security copy the old one and add sort of new old in front of",
    "start": "2069960",
    "end": "2075079"
  },
  {
    "text": "it something like I I've I've done that it was horrible so the G part that's the good",
    "start": "2075079",
    "end": "2082520"
  },
  {
    "text": "part right and yet we",
    "start": "2082520",
    "end": "2087560"
  },
  {
    "text": "are basically giving our users and our customers the",
    "start": "2087560",
    "end": "2092960"
  },
  {
    "text": "folder and the number of one com the number one argument I hear",
    "start": "2095679",
    "end": "2101880"
  },
  {
    "text": "against this idea is that doesn't it take up a very lot of space though isn't",
    "start": "2101880",
    "end": "2108920"
  },
  {
    "text": "it fill out your hard drives really quickly well first of all it my text",
    "start": "2108920",
    "end": "2114800"
  },
  {
    "text": "game it's been running quite hard for qu past eight years and it's still less than 4 gigabytes but the most important",
    "start": "2114800",
    "end": "2121920"
  },
  {
    "text": "thing here is available storage space since those classic SQL databases were",
    "start": "2121920",
    "end": "2129200"
  },
  {
    "text": "conceived of has increased a millionfold that's six orders of",
    "start": "2129200",
    "end": "2136640"
  },
  {
    "text": "magnitude now imagine if your sock drawer had increased size a millionfold",
    "start": "2136640",
    "end": "2144200"
  },
  {
    "text": "at least possible space to put in there you probably would not be concerned about can it fit all my",
    "start": "2144200",
    "end": "2152240"
  },
  {
    "text": "socks you would probably be renting it out right putting apartments in there and so on",
    "start": "2152240",
    "end": "2159160"
  },
  {
    "text": "so this is no longer a real limitation so we can and we should have",
    "start": "2159160",
    "end": "2164680"
  },
  {
    "text": "better tools for ourselves and for our users and let's treat our users data",
    "start": "2164680",
    "end": "2170040"
  },
  {
    "text": "with the same care as we do our code and those were 11 insights after 11",
    "start": "2170040",
    "end": "2175960"
  },
  {
    "text": "years with the functional database Atomic and here they all are and that's all I had",
    "start": "2175960",
    "end": "2183490"
  },
  {
    "text": "[Applause]",
    "start": "2183490",
    "end": "2191110"
  },
  {
    "text": "I will be here and I will be walking the floor you can stop me at any time I love talking about the",
    "start": "2194720",
    "end": "2201560"
  },
  {
    "text": "atomic thank you",
    "start": "2201640",
    "end": "2205799"
  }
]