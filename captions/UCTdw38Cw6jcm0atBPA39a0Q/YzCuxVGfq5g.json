[
  {
    "text": "did that work for the video oh that's perfect excellent",
    "start": "3919",
    "end": "10759"
  },
  {
    "text": "welcome everyone we're going to talk about mocking and front-end and back-end typescript tests and mocking is really",
    "start": "28160",
    "end": "34160"
  },
  {
    "text": "fun typescript adds another layer of it to be able to do syntax checking with mocking we're",
    "start": "34160",
    "end": "40960"
  },
  {
    "text": "going to replace real stuff with fake stuff so that we have more control over it",
    "start": "40960",
    "end": "46000"
  },
  {
    "text": "here's the part where i tell you i am definitely going to post the slides on my site tonight i've chased similar speakers trying to",
    "start": "46000",
    "end": "51840"
  },
  {
    "text": "get slides which is why you can head to robrich.org let's do that now and while i'm on rabrich.org i can click on",
    "start": "51840",
    "end": "59199"
  },
  {
    "text": "presentations and scroll up to the top here is",
    "start": "59199",
    "end": "64559"
  },
  {
    "text": "mocking and front-end and back-end typescript tests the slides and the code that's up on github",
    "start": "64559",
    "end": "71439"
  },
  {
    "text": "is online right now achievement unlocked",
    "start": "71439",
    "end": "77360"
  },
  {
    "text": "while we're here on robrich.org let's click on about me and learn about some of the things that i've done recently",
    "start": "77520",
    "end": "82960"
  },
  {
    "text": "i am a jetpack developer advocate a microsoft mvp mct docker captain and a",
    "start": "82960",
    "end": "90560"
  },
  {
    "text": "friend of red gate easy gift camp is really fun easy gift camp brings volunteer developers",
    "start": "90560",
    "end": "95920"
  },
  {
    "text": "together with charities to build free software we start friday after work sunday afternoon we deliver the",
    "start": "95920",
    "end": "101759"
  },
  {
    "text": "completed software to charities sleep is optional caffeine provided if you're in phoenix come join us for",
    "start": "101759",
    "end": "107280"
  },
  {
    "text": "the next ac gift camp or if you'd like a gift camp here in porto or wherever you traveled from hit me up on email or",
    "start": "107280",
    "end": "113119"
  },
  {
    "text": "twitter or see me here at the conference and let's get a gift camp in your neighborhood too some of the other things that i've done",
    "start": "113119",
    "end": "119360"
  },
  {
    "text": "uh pro microservices and net six i got to work with sean and matt on that that's a really fun book just came out",
    "start": "119360",
    "end": "126000"
  },
  {
    "text": "you can grab it on amazon and one of the things i'm particularly proud of i replied dude.net rocks podcast episode",
    "start": "126000",
    "end": "132160"
  },
  {
    "text": "they read my comments on the air and they sent me a mug so there's my coveted.net rocks mug",
    "start": "132160",
    "end": "138319"
  },
  {
    "text": "and if you'd like it no i'm just kidding so let's talk about mocking",
    "start": "138319",
    "end": "144720"
  },
  {
    "text": "so we have an application that we're going to play with today and i love this application because it",
    "start": "149360",
    "end": "155840"
  },
  {
    "text": "focuses on a simple concept but there's enough complexity in here that we can do some",
    "start": "155840",
    "end": "161519"
  },
  {
    "text": "interesting things so we see that you know once i win i can do that and once i've won i can't click",
    "start": "161519",
    "end": "168879"
  },
  {
    "text": "on any of these other squares also once i've set the square i can't change the square so we have some interesting",
    "start": "168879",
    "end": "175840"
  },
  {
    "text": "business rules happening here we also have a leaderboard it looks like x is winning x has gotten 20. and so we're",
    "start": "175840",
    "end": "181840"
  },
  {
    "text": "going to play with this app throughout the talk to be able to play with how do we",
    "start": "181840",
    "end": "187120"
  },
  {
    "text": "mock various dependencies to be able to test these now what's interesting is this leaderboard is actually stored in",
    "start": "187120",
    "end": "192959"
  },
  {
    "text": "the server my server here is a docker compose file that starts a redis server",
    "start": "192959",
    "end": "198959"
  },
  {
    "text": "you can grab this code at this link and here's that docker compose file that fires up redis",
    "start": "198959",
    "end": "206319"
  },
  {
    "text": "so when i'm testing a web server i probably want to test lots of different",
    "start": "206319",
    "end": "211440"
  },
  {
    "text": "pieces i want to do things like test various functions",
    "start": "211440",
    "end": "217440"
  },
  {
    "text": "i just want to fire various input at this function get various output out of this function i want to be able to test",
    "start": "217440",
    "end": "223599"
  },
  {
    "text": "the function i may have web components where i want to be able to test either the rendering",
    "start": "223599",
    "end": "230319"
  },
  {
    "text": "capabilities of this component or the user interactions with this component i might want to",
    "start": "230319",
    "end": "236560"
  },
  {
    "text": "test from here down and here might be an interesting place maybe i start at the api and test from the api down or maybe",
    "start": "236560",
    "end": "243840"
  },
  {
    "text": "i start at my web tier and i test all the way through all the user interactions",
    "start": "243840",
    "end": "249280"
  },
  {
    "text": "i might want to test a particular service so maybe it's a graphql service or a rest endpoint the beautiful thing",
    "start": "249280",
    "end": "255040"
  },
  {
    "text": "here is that we don't need a browser to do this we can just fire requests at it and see how",
    "start": "255040",
    "end": "261600"
  },
  {
    "text": "that works and i might want to test end to end i might want to take user experiences to",
    "start": "261600",
    "end": "266960"
  },
  {
    "text": "be able to drive through interesting things i might also want to validate that my unit tests run in a particular",
    "start": "266960",
    "end": "272320"
  },
  {
    "text": "browser now with html5 that's less of a concern browsers have kind of become more standard but i may still want to",
    "start": "272320",
    "end": "278560"
  },
  {
    "text": "validate that it works in safari so with each of these types of tests i",
    "start": "278560",
    "end": "284639"
  },
  {
    "text": "might have different tools that i would use to accomplish this now the cool part is as you grab these",
    "start": "284639",
    "end": "290160"
  },
  {
    "text": "slides from robrich.org you can click on each of these blue links to learn more about those packages if i want to test a",
    "start": "290160",
    "end": "296560"
  },
  {
    "text": "particular function i might use mocha with chai or jest if i want to be able to validate that",
    "start": "296560",
    "end": "302320"
  },
  {
    "text": "these unit tests run in a particular browser i can start them with karma now the beautiful thing about karma is karma",
    "start": "302320",
    "end": "309440"
  },
  {
    "text": "launches my unit tests in a browser now this isn't users clicking buttons this",
    "start": "309440",
    "end": "314960"
  },
  {
    "text": "is unit tests but i get to fire those requests in various browsers and so that's really cool i can do component",
    "start": "314960",
    "end": "321680"
  },
  {
    "text": "unit tests now test utils has a version for various spa frameworks so if i'm",
    "start": "321680",
    "end": "327039"
  },
  {
    "text": "using angular react or view i use test utils to make that happen",
    "start": "327039",
    "end": "332800"
  },
  {
    "text": "if i'm doing api tests i don't need a browser i can just take super test or request and i can just fire requests at",
    "start": "332800",
    "end": "339759"
  },
  {
    "text": "that service and then end to end tests i might use something like selenium or cypress",
    "start": "339759",
    "end": "345840"
  },
  {
    "text": "now in the app we'll see examples of all of these tests but i have that two sides",
    "start": "345840",
    "end": "351360"
  },
  {
    "text": "of it i have the api and the app the thick client in the browser and then the",
    "start": "351360",
    "end": "356560"
  },
  {
    "text": "service that allows me to persist that leaderboard across different places",
    "start": "356560",
    "end": "361919"
  },
  {
    "text": "now the interesting thing with each of these types of things is i'm validating particular behaviors and so then the",
    "start": "361919",
    "end": "368720"
  },
  {
    "text": "magic question is well which tool do i need in which case now i'm probably",
    "start": "368720",
    "end": "374479"
  },
  {
    "text": "going to use lots of these tools to be able to accomplish different types of tests and here we're going to see",
    "start": "374479",
    "end": "380560"
  },
  {
    "text": "front-end tests and back-end tests using various tools",
    "start": "380560",
    "end": "385759"
  },
  {
    "text": "so then let's add mocking now the cool thing is with typescript i",
    "start": "385759",
    "end": "392160"
  },
  {
    "text": "have some really elegant ways to be able to validate my content so typescript adds design time hints to easily catch",
    "start": "392160",
    "end": "399520"
  },
  {
    "text": "bugs and syntax errors the cool part is typescript is just a design time",
    "start": "399520",
    "end": "404560"
  },
  {
    "text": "experience so at the end of the day i'm going to take typescript away and i'm going to compile it into javascript and",
    "start": "404560",
    "end": "409680"
  },
  {
    "text": "what runs in the browser is just javascript but the typescript allows me to get really cool hints",
    "start": "409680",
    "end": "416479"
  },
  {
    "text": "now that does sometimes lead to this battle of wills where it's like how do i make this type",
    "start": "416479",
    "end": "422800"
  },
  {
    "text": "system work and so we'll we'll bump into some of that today too",
    "start": "422800",
    "end": "428960"
  },
  {
    "text": "as we add mocking to this mocking allows us to test the thing",
    "start": "429199",
    "end": "436880"
  },
  {
    "text": "the core principle of mocking is how do i test this thing without also testing",
    "start": "436880",
    "end": "442880"
  },
  {
    "text": "that thing how do i put in a fake that thing so that i can validate this thing in",
    "start": "442880",
    "end": "449360"
  },
  {
    "text": "various components so let's take some code here that does some",
    "start": "449360",
    "end": "456160"
  },
  {
    "text": "interesting stuff now in this code we're going to pass in a date and we're going to use that date to",
    "start": "456160",
    "end": "462960"
  },
  {
    "text": "do some data access now the interesting thing here about",
    "start": "462960",
    "end": "468240"
  },
  {
    "text": "this data access is that the results of this data access component are not really relevant to this test",
    "start": "468240",
    "end": "476879"
  },
  {
    "text": "i want to be able to validate that you know maybe this map and this reduce work correctly",
    "start": "476879",
    "end": "483440"
  },
  {
    "text": "but i don't need a data store so how do i validate this code without a",
    "start": "483440",
    "end": "490479"
  },
  {
    "text": "data store let's pivot to a similar concern where i have this function now in this case we",
    "start": "490479",
    "end": "497360"
  },
  {
    "text": "don't have a whole lot of data store dependencies we're just passing in this object now",
    "start": "497360",
    "end": "502879"
  },
  {
    "text": "this object probably has lots of properties all of those properties are interesting but the properties that i",
    "start": "502879",
    "end": "508879"
  },
  {
    "text": "care about are just these two i care about the end date and the start date",
    "start": "508879",
    "end": "514800"
  },
  {
    "text": "now typescript says that i need to build one of these big type things so that",
    "start": "514800",
    "end": "519839"
  },
  {
    "text": "means that somewhere in my test i'm going to have to enumerate all of these stupid properties i don't care about and",
    "start": "519839",
    "end": "524880"
  },
  {
    "text": "if ever i add a new property to you know this huge type then i probably need to update my test i don't care about any of",
    "start": "524880",
    "end": "531600"
  },
  {
    "text": "that i just care about the end date and the start date and having a deterministic result",
    "start": "531600",
    "end": "536959"
  },
  {
    "text": "so that's the problem how do we pass in dependencies where we only care",
    "start": "536959",
    "end": "542720"
  },
  {
    "text": "about a subset of that content and how do we abstract away the imports",
    "start": "542720",
    "end": "549920"
  },
  {
    "text": "that so that we can focus in on the units that we really want to test",
    "start": "549920",
    "end": "556800"
  },
  {
    "text": "so in typescript most things are singletons now that's wonderful but in net we learned that um singletons make testing",
    "start": "557440",
    "end": "565519"
  },
  {
    "text": "harder we don't want to have a static thing we want to have dependency",
    "start": "565519",
    "end": "570800"
  },
  {
    "text": "injection allow us to inject the thing and so in typescript",
    "start": "570800",
    "end": "576480"
  },
  {
    "text": "that's hard we have those import statements at the top where we have the require statements at the top and it's",
    "start": "576480",
    "end": "582800"
  },
  {
    "text": "how do we get into that require to be able to adjust the parameters that we need",
    "start": "582800",
    "end": "589680"
  },
  {
    "text": "so what's interesting is in typescript these interfaces only exist in design at design time",
    "start": "589680",
    "end": "595360"
  },
  {
    "text": "so if we were to you know pass in this anemic object that only had two properties then we could do fine in",
    "start": "595360",
    "end": "602800"
  },
  {
    "text": "javascript but then our typescript compiler would tell us hey you're missing some properties on this object",
    "start": "602800",
    "end": "608560"
  },
  {
    "text": "that that make that painful the other part about interfaces that's interesting is that they only exist at",
    "start": "608560",
    "end": "615200"
  },
  {
    "text": "design time so in net we can reflect on an object and we can pull out the properties and in typescript we can't do",
    "start": "615200",
    "end": "622240"
  },
  {
    "text": "that given a type we can't automatically mock that thing because",
    "start": "622240",
    "end": "628000"
  },
  {
    "text": "at runtime that type no longer exists hmm so in.net we have moq that allows us to",
    "start": "628000",
    "end": "635120"
  },
  {
    "text": "just kind of take a type and auto magically generate a thing in typescript we'll have to do that differently",
    "start": "635120",
    "end": "642800"
  },
  {
    "text": "so typescript requires that full interface implementation so in my test where i had this big object we would",
    "start": "643279",
    "end": "649920"
  },
  {
    "text": "need to enumerate all of the properties or do we",
    "start": "649920",
    "end": "655600"
  },
  {
    "text": "so here's the scenarios that we need to start to combat we need to be able to inject our",
    "start": "656320",
    "end": "663120"
  },
  {
    "text": "dependencies now this is probably more applicable to angular where we do have a",
    "start": "663120",
    "end": "668640"
  },
  {
    "text": "full dependency injection system but probably in our typescript code we have a whole lot of imports and we need to be",
    "start": "668640",
    "end": "675440"
  },
  {
    "text": "able to mock those imports we also need to be able to avoid irrelevant arguments into our",
    "start": "675440",
    "end": "682480"
  },
  {
    "text": "parameters so those are the things that we need to test we need to be able to fake imports and we need to be able to",
    "start": "682480",
    "end": "688800"
  },
  {
    "text": "fake dependencies or parameters so let's take a look at some solutions",
    "start": "688800",
    "end": "694640"
  },
  {
    "text": "that we might be able to leverage to make this happen and we'll start from a naive approach and kind of walk through",
    "start": "694640",
    "end": "700800"
  },
  {
    "text": "and then look at the code to see how these work so here's our first attempt",
    "start": "700800",
    "end": "705920"
  },
  {
    "text": "i can just cast it to any if i haven't any then of course i can i can feed that into my application",
    "start": "705920",
    "end": "714240"
  },
  {
    "text": "yeah no if any is your go-to solution",
    "start": "714959",
    "end": "720320"
  },
  {
    "text": "then you're not coding in typescript you're coding in javascript you're lying to your typescript compiler",
    "start": "720320",
    "end": "726320"
  },
  {
    "text": "so any is interesting but any is not a great solution here let's set that",
    "start": "726320",
    "end": "732240"
  },
  {
    "text": "one aside next one monkey patching now in this",
    "start": "732240",
    "end": "737279"
  },
  {
    "text": "case i have a low dash function and i want to be able to override this lowdash function with my own implementation so i",
    "start": "737279",
    "end": "743200"
  },
  {
    "text": "can have a more deterministic result now that's cool i just take that object and i slap in my temporary function and i'm",
    "start": "743200",
    "end": "750320"
  },
  {
    "text": "able to do that now this is great because i'm able to override the",
    "start": "750320",
    "end": "755600"
  },
  {
    "text": "details inside this typescript library but it doesn't come without its downsides",
    "start": "755600",
    "end": "761519"
  },
  {
    "text": "so for example if i import like this now previously i just said import",
    "start": "761519",
    "end": "767040"
  },
  {
    "text": "underscore and now i said import and i",
    "start": "767040",
    "end": "772560"
  },
  {
    "text": "pulled out that particular i spread the object to be able to get that particular property",
    "start": "772560",
    "end": "777680"
  },
  {
    "text": "now in this case if i override random it's not the random inside low dash",
    "start": "777680",
    "end": "783839"
  },
  {
    "text": "it's the random instance inside my test so we need to go back to this one and",
    "start": "783839",
    "end": "789440"
  },
  {
    "text": "the hard part there is it's um i'm importing the entire library even though i don't need it",
    "start": "789440",
    "end": "795440"
  },
  {
    "text": "yeah and i'm doing that so that i can get at that particular property inside this",
    "start": "795440",
    "end": "801120"
  },
  {
    "text": "library to be able to override that functionality and i need to do this before my library",
    "start": "801120",
    "end": "808560"
  },
  {
    "text": "imports this content because if it maybe does some initialization content right at the top",
    "start": "808560",
    "end": "814560"
  },
  {
    "text": "of its method if i don't monkey patch it first then i'm going to end up with the",
    "start": "814560",
    "end": "820480"
  },
  {
    "text": "original instance and then the monkey patch just happened downstream",
    "start": "820480",
    "end": "826000"
  },
  {
    "text": "additionally maybe other tests depend on the real implementation of this function so i'll need to make sure that i put",
    "start": "826000",
    "end": "832320"
  },
  {
    "text": "this code back after i'm done so we saw we took a look at monkey",
    "start": "832320",
    "end": "837360"
  },
  {
    "text": "patching and we see how it can be really beneficial if we're just in javascript this can be great but we have some",
    "start": "837360",
    "end": "843680"
  },
  {
    "text": "concerns if we spread our imports then that won't work we need to make sure to put it back and",
    "start": "843680",
    "end": "850800"
  },
  {
    "text": "it's it's a little fragile one of the things that bites me a lot down here at the end is it's really easy",
    "start": "850800",
    "end": "856959"
  },
  {
    "text": "to forget to put it back if your test fails so my test failed i didn't put my mock",
    "start": "856959",
    "end": "864399"
  },
  {
    "text": "back the original one back and now all of the other downstream tests failed too so i",
    "start": "864399",
    "end": "870240"
  },
  {
    "text": "went from one failing test to 100 failing tests and it's like no",
    "start": "870240",
    "end": "875600"
  },
  {
    "text": "so we'll see how to put things back in our test today",
    "start": "875600",
    "end": "881199"
  },
  {
    "text": "ts auto moc ts auto mock is a really cool package that allows us to generate mocks given a",
    "start": "881199",
    "end": "888079"
  },
  {
    "text": "particular type now as you grab these slides from robrich.org here's another blue link and you can learn more about",
    "start": "888079",
    "end": "893440"
  },
  {
    "text": "ts automock we're going to dig into this library through the talk today so here's an example instance of ts auto mock i've",
    "start": "893440",
    "end": "901680"
  },
  {
    "text": "pulled in a particular type and i want to say go mock this type",
    "start": "901680",
    "end": "907360"
  },
  {
    "text": "now earlier i said we the types aren't available at runtime so we can't infer them yeah i can't just take a of t",
    "start": "907360",
    "end": "914639"
  },
  {
    "text": "and mock an of t but i can given a specific type mock",
    "start": "914639",
    "end": "919760"
  },
  {
    "text": "that now this is cool in the same way that in net we have moq that can automatically",
    "start": "919760",
    "end": "925040"
  },
  {
    "text": "build us a thing we can do this as well now we can pass in the things that we",
    "start": "925040",
    "end": "930800"
  },
  {
    "text": "care about so in this case i want to mock a request and i want to give it a body that has particular values in it",
    "start": "930800",
    "end": "938079"
  },
  {
    "text": "now i don't care what what else is in this object i just care about this",
    "start": "938079",
    "end": "943360"
  },
  {
    "text": "particular portion of it now the cool part about ts automock is it uses partial of t if you've not used",
    "start": "943360",
    "end": "950399"
  },
  {
    "text": "partial of t in typescript it is amazing partial of t says",
    "start": "950399",
    "end": "955600"
  },
  {
    "text": "um i don't need all of the properties of this object but i do need that all of",
    "start": "955600",
    "end": "960639"
  },
  {
    "text": "the ones that i specify need to exist now the cool part is ts auto mock can",
    "start": "960639",
    "end": "966240"
  },
  {
    "text": "loop through the objects the the properties that i passed and mock out the rest of them",
    "start": "966240",
    "end": "972639"
  },
  {
    "text": "which is great you know go take care of everything i don't care about and let me focus in on the particular ones that i",
    "start": "972639",
    "end": "978079"
  },
  {
    "text": "want to so ts auto mach takes this partial of t and fills in the rest of the mock and",
    "start": "978079",
    "end": "983759"
  },
  {
    "text": "now i can use that to do stuff now ts automatic does take a little bit to set",
    "start": "983759",
    "end": "989199"
  },
  {
    "text": "up once i had this type of code in my thing i had to then go create a config and you",
    "start": "989199",
    "end": "995920"
  },
  {
    "text": "know it took me a while before i could get this test to pass but it's just magic to be able to pass",
    "start": "995920",
    "end": "1002000"
  },
  {
    "text": "in only those things that we care about and get this mock that takes care of everything else",
    "start": "1002000",
    "end": "1007680"
  },
  {
    "text": "and satisfies typescript's interface so we'll leverage ts auto mock",
    "start": "1007680",
    "end": "1013120"
  },
  {
    "text": "for passing in parameters into our methods the other thing we can look at is ts mock imports",
    "start": "1013120",
    "end": "1020720"
  },
  {
    "text": "now tsmok imports is really good at faking out the imports that i need to be",
    "start": "1020720",
    "end": "1025918"
  },
  {
    "text": "able to pass in to my other things notice built on top of cyan and if you've ever used cyan to be able to do",
    "start": "1025919",
    "end": "1033120"
  },
  {
    "text": "similar mocking either in typescript or in javascript it does get a little bit hairy but it's actually pretty cool",
    "start": "1033120",
    "end": "1040160"
  },
  {
    "text": "so i'll start by grabbing ts mock imports and that'll give me this import mock",
    "start": "1040160",
    "end": "1046959"
  },
  {
    "text": "i'll grab sign on just so i have the the typescript declarations i'll grab my",
    "start": "1046959",
    "end": "1053360"
  },
  {
    "text": "dependency now i have to grab it star as dependency i have to grab all of the properties not just the default",
    "start": "1053360",
    "end": "1061280"
  },
  {
    "text": "i can't spread it here because i'm going to replace a particular property on that",
    "start": "1061280",
    "end": "1066880"
  },
  {
    "text": "object now i'll grab my suite under test now notice that i'm grabbing it even before",
    "start": "1066880",
    "end": "1072080"
  },
  {
    "text": "i'm setting up my mock which is pretty interesting so here in my test i'm going to create this mock i'm going to say",
    "start": "1072080",
    "end": "1078880"
  },
  {
    "text": "import mock.mock function i'll pass in that object and the particular property",
    "start": "1078880",
    "end": "1083919"
  },
  {
    "text": "that i want to override i wish there was more design time hints on this because you know i'm passing in a string that just",
    "start": "1083919",
    "end": "1091039"
  },
  {
    "text": "happens to exactly match the thing that i'm importing and then i'll give it the return value",
    "start": "1091039",
    "end": "1096720"
  },
  {
    "text": "the thing that i want that method to do and then i'll cast it into a sign on stub just that i can get that sign on",
    "start": "1096720",
    "end": "1104160"
  },
  {
    "text": "stub set in this spot now when i call my function which came",
    "start": "1104160",
    "end": "1109840"
  },
  {
    "text": "out of this library then i'm able to use my mock to be able to accomplish the tasks that i need to do",
    "start": "1109840",
    "end": "1117280"
  },
  {
    "text": "now to be a good citizen for my testing i also need to put it back so after each",
    "start": "1117280",
    "end": "1122799"
  },
  {
    "text": "test if i have this mock i'm going to say mock.restore and it looks like i need to",
    "start": "1122799",
    "end": "1128799"
  },
  {
    "text": "go fix my code because here it's called stormock and here it's just called mock",
    "start": "1128799",
    "end": "1133840"
  },
  {
    "text": "but i'll go save that as a instance variable inside my test and",
    "start": "1133840",
    "end": "1139600"
  },
  {
    "text": "i'll put it back so that then future tests can use the regular library",
    "start": "1139600",
    "end": "1145360"
  },
  {
    "text": "and so that's ts mock imports and it allows me to be able to grab my content",
    "start": "1145360",
    "end": "1150640"
  },
  {
    "text": "and replace the instances there now i do need to pull in my dependency before i",
    "start": "1150640",
    "end": "1156320"
  },
  {
    "text": "pull in my suite under test but that's kind of the only the only critical piece there",
    "start": "1156320",
    "end": "1163280"
  },
  {
    "text": "so ts mock imports ts mock imports is great at being able to replace those import statements and",
    "start": "1163280",
    "end": "1169520"
  },
  {
    "text": "it does take a smidge to set up but once i've got it set up i can grab these sign on fakes that allow me to be able",
    "start": "1169520",
    "end": "1176880"
  },
  {
    "text": "to replace the imports for the suite that i want to test now the cool part is that it it's able",
    "start": "1176880",
    "end": "1183919"
  },
  {
    "text": "to replace those pieces but it is a little bit finicky so i must specify the",
    "start": "1183919",
    "end": "1188960"
  },
  {
    "text": "exact same file if my code grabs slash pass index",
    "start": "1188960",
    "end": "1195840"
  },
  {
    "text": "then my test must do that as well it's actually matching you know based on that string",
    "start": "1195840",
    "end": "1202559"
  },
  {
    "text": "and i have to cast the sign on stub to the correct method it's not going to double check that i didn't",
    "start": "1202559",
    "end": "1208320"
  },
  {
    "text": "return a sign on stub as a particular thing so here we had to cast it as the",
    "start": "1208320",
    "end": "1213840"
  },
  {
    "text": "sign on stub of the particular input arguments and return type and if we type",
    "start": "1213840",
    "end": "1219520"
  },
  {
    "text": "of that typescript isn't going to help us very much which is kind of a bummer but ts mock imports is a great way to be",
    "start": "1219520",
    "end": "1226240"
  },
  {
    "text": "able to get at that code",
    "start": "1226240",
    "end": "1229760"
  },
  {
    "text": "so let's dig into this application and take a look at it the code for this is on github right now and so as we look at",
    "start": "1233520",
    "end": "1240480"
  },
  {
    "text": "this we can take a look at the application now we have this app that allows us to look through some stuff we",
    "start": "1240480",
    "end": "1246559"
  },
  {
    "text": "saw that app running previously we have here in our source we have app.view",
    "start": "1246559",
    "end": "1253440"
  },
  {
    "text": "now app.view will render out that thing it'll also render out the leaderboard and the cool thing about this let's open",
    "start": "1253440",
    "end": "1259840"
  },
  {
    "text": "that up in vs code is this app is actually doing a lot of the work of the",
    "start": "1259840",
    "end": "1265039"
  },
  {
    "text": "game loop so here's that game loop and it's going to do the things our particular components for example this",
    "start": "1265039",
    "end": "1271679"
  },
  {
    "text": "leaderboard is not going to reach out to any external services to get anything it's",
    "start": "1271679",
    "end": "1277840"
  },
  {
    "text": "just going to render the content straight away now that's really great that means that",
    "start": "1277840",
    "end": "1283280"
  },
  {
    "text": "our app is the one that does all of the coordination our components now we don't need to mock our dependencies that's",
    "start": "1283280",
    "end": "1289679"
  },
  {
    "text": "great app will actually reach out to update score update score came in from",
    "start": "1289679",
    "end": "1296480"
  },
  {
    "text": "this where is it update score came in from this data",
    "start": "1296480",
    "end": "1301679"
  },
  {
    "text": "scores service so let's come in here to data scores",
    "start": "1301679",
    "end": "1307919"
  },
  {
    "text": "and we can see how that just reaches out to my api to either get the current score or to be able to update the score",
    "start": "1307919",
    "end": "1314559"
  },
  {
    "text": "we can also clear the score and so the rest of our content then lives on the server which is really",
    "start": "1314559",
    "end": "1320640"
  },
  {
    "text": "elegant here's our server method so inside routes we have an index route that just",
    "start": "1320640",
    "end": "1327280"
  },
  {
    "text": "allows our api to render correctly um",
    "start": "1327280",
    "end": "1332320"
  },
  {
    "text": "it once published and then we have this score api",
    "start": "1332320",
    "end": "1337440"
  },
  {
    "text": "now this is pretty cool here's that get method to go get the current score and we're going to go get our app out of",
    "start": "1337440",
    "end": "1344799"
  },
  {
    "text": "redis we did that here we used we grabbed this redis client and we",
    "start": "1344799",
    "end": "1350159"
  },
  {
    "text": "stuck it inside of app now i grant here inside my score api i could have done something to",
    "start": "1350159",
    "end": "1357840"
  },
  {
    "text": "initialize the redis client here that would make it a little bit more stateful it would",
    "start": "1357840",
    "end": "1364799"
  },
  {
    "text": "or then i would have that one property that i would need to be able to destroy correctly to close down my app so i",
    "start": "1364799",
    "end": "1370880"
  },
  {
    "text": "chose instead to stick it here on my app instance but that does create an",
    "start": "1370880",
    "end": "1376880"
  },
  {
    "text": "interesting scenario here that will make this really fun to test",
    "start": "1376880",
    "end": "1381919"
  },
  {
    "text": "i need to go get this property out of this app and then i need to pass that in to this",
    "start": "1381919",
    "end": "1389679"
  },
  {
    "text": "method now my goal is to test this get method",
    "start": "1389679",
    "end": "1395360"
  },
  {
    "text": "not to test my redis client or the getscores method i want to be",
    "start": "1395360",
    "end": "1400799"
  },
  {
    "text": "able to mock all of those out of the way so another interesting thing is before",
    "start": "1400799",
    "end": "1407679"
  },
  {
    "text": "we get to that let's do some client-side content i want to test this leaderboard",
    "start": "1407679",
    "end": "1413919"
  },
  {
    "text": "now i'm just rendering information here but i want to be able to mount this component so that i can validate",
    "start": "1413919",
    "end": "1419679"
  },
  {
    "text": "behaviors on it so i'll flip over to my tests here's my component test on my leaderboard and so",
    "start": "1419679",
    "end": "1427200"
  },
  {
    "text": "i'm going to use test utils here's test details for view and i'm going to mount",
    "start": "1427200",
    "end": "1433039"
  },
  {
    "text": "that component so here's my component my leaderboard component and i'm just choosing to mount it i can choose to",
    "start": "1433039",
    "end": "1439120"
  },
  {
    "text": "pass in my props and so in this case i'm passing in a score list that happens to be empty",
    "start": "1439120",
    "end": "1444799"
  },
  {
    "text": "and i want to validate the rendering behavior on this test so i'm just going to mount that component grab the text",
    "start": "1444799",
    "end": "1451600"
  },
  {
    "text": "out of the component and i suspect it'll say leaderboard and clear scores now as it renders this component it does",
    "start": "1451600",
    "end": "1458720"
  },
  {
    "text": "quite a lot of other things but we can see that here's clear scores and here's",
    "start": "1458720",
    "end": "1464159"
  },
  {
    "text": "leaderboard and if i'm stripping out all of the html tags that's the only text that i'll be left with and so thus this",
    "start": "1464159",
    "end": "1471840"
  },
  {
    "text": "test is able to validate that i'm able to mount the component and be able to validate its rendering behavior because",
    "start": "1471840",
    "end": "1478320"
  },
  {
    "text": "i mocked out the properties sent into it next i'm going to pass some actual",
    "start": "1478320",
    "end": "1483760"
  },
  {
    "text": "content to it i'll mount this component and now i want to go grab the text now the text is going to be all kinds of",
    "start": "1483760",
    "end": "1490559"
  },
  {
    "text": "interesting things but i want to validate that it says tie is one so here's tai and here's the score this",
    "start": "1490559",
    "end": "1496320"
  },
  {
    "text": "happens to be the only one in the list and so i can mount that that way",
    "start": "1496320",
    "end": "1501440"
  },
  {
    "text": "so that's a client-side test let's flip over instead to the server-side test and take a look at this method again we've",
    "start": "1501440",
    "end": "1507679"
  },
  {
    "text": "got this get method and this get method is really interesting in that we'll be able to see some cool pieces around this",
    "start": "1507679",
    "end": "1515360"
  },
  {
    "text": "get method now i do need to mock out the get scores",
    "start": "1515360",
    "end": "1520880"
  },
  {
    "text": "that's an import i'll need to mock out the request and the response because i don't care about",
    "start": "1520880",
    "end": "1526320"
  },
  {
    "text": "a lot of things but i do care that this app property has a get method that returns something that matches this",
    "start": "1526320",
    "end": "1533120"
  },
  {
    "text": "interface and so let's take a look at the tests we want to build inside this",
    "start": "1533120",
    "end": "1540559"
  },
  {
    "text": "so i want to be able to validate that if redis returns null it's going to use the",
    "start": "1540559",
    "end": "1547200"
  },
  {
    "text": "default so here in my application i've got this thing that should return stuff but if it",
    "start": "1547200",
    "end": "1553440"
  },
  {
    "text": "doesn't return anything let's go grab default so default is another mock that i want to",
    "start": "1553440",
    "end": "1559919"
  },
  {
    "text": "pull in or another import that i want to pull in and i want to mock those results i don't care what it is i just care that",
    "start": "1559919",
    "end": "1565760"
  },
  {
    "text": "i have control over it so here in this test i'm going to say here's my scores that i want my default",
    "start": "1565760",
    "end": "1572960"
  },
  {
    "text": "to return here's my redis scores this is what redis should return and i've got this property this scores",
    "start": "1572960",
    "end": "1580080"
  },
  {
    "text": "property that i'm going to go validate works correctly once i've finished running this test so now i need to",
    "start": "1580080",
    "end": "1587679"
  },
  {
    "text": "set up get scores set up score default those are the two mocking the imports and then i also want",
    "start": "1587679",
    "end": "1594720"
  },
  {
    "text": "to mock request and response let's dig into that one first because i'm actually passing in a lambda that will allow me",
    "start": "1594720",
    "end": "1600720"
  },
  {
    "text": "to get the body back out once i've passed it now that's interesting because down here",
    "start": "1600720",
    "end": "1605760"
  },
  {
    "text": "at the bottom it actually calls res.json and if i'm mocking this response i do",
    "start": "1605760",
    "end": "1611919"
  },
  {
    "text": "need to capture the content there from that method so let's dig into the mock request",
    "start": "1611919",
    "end": "1617760"
  },
  {
    "text": "response one now i'm choosing to use create mock create mock came out of",
    "start": "1617760",
    "end": "1624960"
  },
  {
    "text": "ts auto moc so i'm ts auto mac allows me to pass in",
    "start": "1624960",
    "end": "1630799"
  },
  {
    "text": "a particular type so here's redis client and when i pass in that type i just want",
    "start": "1630799",
    "end": "1637840"
  },
  {
    "text": "something that satisfies that type so here's my mock and it is of type redis client",
    "start": "1637840",
    "end": "1644320"
  },
  {
    "text": "excellent i don't care what redis client does i just need to be able to pass it into place now i'm going to create a mock for a",
    "start": "1644320",
    "end": "1650559"
  },
  {
    "text": "request now this is an express request what's really elegant here is that there's a lot of things on requests that",
    "start": "1650559",
    "end": "1656799"
  },
  {
    "text": "i don't care about but i do care about that it has this app property and inside this app property",
    "start": "1656799",
    "end": "1662399"
  },
  {
    "text": "there's a get method and when you call it passing in i don't know anything i'm going to return this redis mock now",
    "start": "1662399",
    "end": "1669120"
  },
  {
    "text": "i could validate that what you passed in was redis client but i'm going to pass in this redis mock",
    "start": "1669120",
    "end": "1675440"
  },
  {
    "text": "which came from here and so now i have a redis mock that you can use inside this",
    "start": "1675440",
    "end": "1681360"
  },
  {
    "text": "method and now this i'm going to cast as a partial of request just so that create auto mock",
    "start": "1681360",
    "end": "1689200"
  },
  {
    "text": "create auto mock knows that that's a part of a request so it can fill out all the rest of the details",
    "start": "1689200",
    "end": "1695679"
  },
  {
    "text": "now in this case i didn't say as response i just let create auto mock infer that but now i have a response",
    "start": "1695679",
    "end": "1702960"
  },
  {
    "text": "this has a single method a json method that's going to take in a body that happens to have this type of thing i'm",
    "start": "1702960",
    "end": "1709360"
  },
  {
    "text": "going to call this on jsonbody you know let me pass in some lambda so that you can keep track of it later and then i'll",
    "start": "1709360",
    "end": "1716080"
  },
  {
    "text": "return this as response in case i chain things so i might call this.json.stat",
    "start": "1716080",
    "end": "1721880"
  },
  {
    "text": "statuscode.and so i'll return that so this allowed me to build up these",
    "start": "1721880",
    "end": "1727440"
  },
  {
    "text": "mocks for request and response back here in my code i have",
    "start": "1727440",
    "end": "1734080"
  },
  {
    "text": "now a mock request and response i'm going to pass those into my get method which will come in here",
    "start": "1734080",
    "end": "1741440"
  },
  {
    "text": "here's my get method so here's my fake request and response my fake request dot app dot get",
    "start": "1741440",
    "end": "1748559"
  },
  {
    "text": "so i've come back in here to my dot app dot get",
    "start": "1748559",
    "end": "1754640"
  },
  {
    "text": "which will get this fake redis mock now the interesting thing is i don't care what that redis client is i just",
    "start": "1754640",
    "end": "1762000"
  },
  {
    "text": "care that i pass it into here and everything will work now i need get",
    "start": "1762000",
    "end": "1767120"
  },
  {
    "text": "scores to return nothing so back here in my method i've got um",
    "start": "1767120",
    "end": "1775200"
  },
  {
    "text": "redis scores here's the thing that is undefined and i want to set up get scores",
    "start": "1775200",
    "end": "1781200"
  },
  {
    "text": "so setup get scores is this method down here where i use import mock from ts",
    "start": "1781200",
    "end": "1786320"
  },
  {
    "text": "mock imports i'm going to mock a particular function on this object so i pulled in score data",
    "start": "1786320",
    "end": "1793600"
  },
  {
    "text": "here from my service and i pulled it in star as score data so",
    "start": "1793600",
    "end": "1799200"
  },
  {
    "text": "that i can be able to fake the particular property on the actual instance that will get used",
    "start": "1799200",
    "end": "1805200"
  },
  {
    "text": "and so i'm going to mock that import right here i'm going to mock the getscores method and i'm going to",
    "start": "1805200",
    "end": "1810720"
  },
  {
    "text": "specifically return this object the one that i passed in",
    "start": "1810720",
    "end": "1815919"
  },
  {
    "text": "and i'm going to cast it into this thing i don't like that i have to cast it here i wish uh typescript was able to infer",
    "start": "1815919",
    "end": "1822960"
  },
  {
    "text": "that but uh yeah this just returns a um",
    "start": "1822960",
    "end": "1829039"
  },
  {
    "text": "sign on stub of any and i'm like uh yeah",
    "start": "1829200",
    "end": "1834240"
  },
  {
    "text": "i guess the only way to solve that would be to be able to pass in things here and that",
    "start": "1834240",
    "end": "1839360"
  },
  {
    "text": "gets a little hairy so i've returned",
    "start": "1839360",
    "end": "1845120"
  },
  {
    "text": "um this score mock but i've also saved it in this variable",
    "start": "1845360",
    "end": "1850960"
  },
  {
    "text": "now as a good net citizen we need to make sure that we're saving these things so here's that score mock and after each",
    "start": "1850960",
    "end": "1858640"
  },
  {
    "text": "test if this score mock was set i'm going to restore it back to the original thing so",
    "start": "1858640",
    "end": "1864880"
  },
  {
    "text": "un attach my fake one put back the real one",
    "start": "1864880",
    "end": "1870640"
  },
  {
    "text": "similarly i need to be able to mock out the default because here",
    "start": "1870799",
    "end": "1876720"
  },
  {
    "text": "now that we've gotten this get scores to return undefined we want to get to make sure that it calls this method to get",
    "start": "1876720",
    "end": "1883360"
  },
  {
    "text": "its real default so i've got this let's set it up to return default here's the default and it",
    "start": "1883360",
    "end": "1890000"
  },
  {
    "text": "just has some fake data here dig into this method and we can see that",
    "start": "1890000",
    "end": "1895039"
  },
  {
    "text": "that's going to set the default method on this particular import and so what's",
    "start": "1895039",
    "end": "1901840"
  },
  {
    "text": "interesting there is that uh score nope not that one",
    "start": "1901840",
    "end": "1906880"
  },
  {
    "text": "score default um i'll actually come in this way here's",
    "start": "1906880",
    "end": "1912559"
  },
  {
    "text": "my score and my default score you notice that i'm just grabbing the default",
    "start": "1912559",
    "end": "1918080"
  },
  {
    "text": "import so i'm not spreading it so the cool part about this is that export",
    "start": "1918080",
    "end": "1924159"
  },
  {
    "text": "default now the cool part about export default is it just happens to be a",
    "start": "1924159",
    "end": "1929519"
  },
  {
    "text": "thing on this object called default so i can take advantage of that i'm just going to call this default i'm",
    "start": "1929519",
    "end": "1936559"
  },
  {
    "text": "going to override default now i want to return the particular result so you know here's this",
    "start": "1936559",
    "end": "1942399"
  },
  {
    "text": "particular result and i'll save that off so i can restore it and return it if you need it",
    "start": "1942399",
    "end": "1948799"
  },
  {
    "text": "so i now have this test that will be able to validate if i pass in no not",
    "start": "1948799",
    "end": "1954559"
  },
  {
    "text": "that one if i pass in a particular score and i have a particular redis result",
    "start": "1954559",
    "end": "1960880"
  },
  {
    "text": "then i want the thing that response sent me to be the defaults",
    "start": "1960880",
    "end": "1967760"
  },
  {
    "text": "excellent now that was kind of a long walk and part of it was a little bit contrived because i",
    "start": "1967760",
    "end": "1974000"
  },
  {
    "text": "intentionally didn't do optimizations here rather i wanted to get this property and pass it in but we can see",
    "start": "1974000",
    "end": "1980960"
  },
  {
    "text": "that we're able to validate this test without a real redis behind it",
    "start": "1980960",
    "end": "1986080"
  },
  {
    "text": "that was excellent now let's do a similar thing when redis has content then we want to make sure",
    "start": "1986080",
    "end": "1992240"
  },
  {
    "text": "that it returns that redis content instead so i'll do my setups pass in the redis scores",
    "start": "1992240",
    "end": "1997840"
  },
  {
    "text": "pass in my defaults and now because redis has results notice that these scores are different",
    "start": "1997840",
    "end": "2005279"
  },
  {
    "text": "once i run my thing grab the scores i want my scores to be these redis scores",
    "start": "2005279",
    "end": "2012398"
  },
  {
    "text": "now that was really cool we were able to fake out our dependencies we were able to fake out our parameters and only take",
    "start": "2012559",
    "end": "2020000"
  },
  {
    "text": "control of those things that we needed to create a very deterministic result here",
    "start": "2020000",
    "end": "2026399"
  },
  {
    "text": "let's do a similar thing on the post so i want to be able to update my",
    "start": "2026799",
    "end": "2032880"
  },
  {
    "text": "content now this is interesting because not only am i grabbing the redis app out",
    "start": "2032880",
    "end": "2038240"
  },
  {
    "text": "of the request but i'm also grabbing the body out of the request and it has a",
    "start": "2038240",
    "end": "2043360"
  },
  {
    "text": "particular player let's validate that the player is a valid player so i have this players",
    "start": "2043360",
    "end": "2051200"
  },
  {
    "text": "array that i can take a look at right here and here's my list of valid players i also",
    "start": "2051200",
    "end": "2058079"
  },
  {
    "text": "have a type that makes that happen which is pretty cool so let me go validate",
    "start": "2058079",
    "end": "2063280"
  },
  {
    "text": "that it is a valid player and if it's not i'm going to return a 400 but if it is then i'll update my scores which will",
    "start": "2063280",
    "end": "2071040"
  },
  {
    "text": "actually return the current scores and return that so i've got a couple of things that i need to do i need to mock out my app",
    "start": "2071040",
    "end": "2078720"
  },
  {
    "text": "call we saw how to do that previously i need to set the body in an interesting way i want to take one test through this",
    "start": "2078720",
    "end": "2085520"
  },
  {
    "text": "code path to validate that if i pass in bad data it works and i want to take another pass through this that will",
    "start": "2085520",
    "end": "2092240"
  },
  {
    "text": "actually update it and validate that i get the scores returned from this update score method",
    "start": "2092240",
    "end": "2098800"
  },
  {
    "text": "so here's my post and we'll take a look at the happy path first",
    "start": "2098800",
    "end": "2104880"
  },
  {
    "text": "i call with a player of x i expected the status to be zero you",
    "start": "2104880",
    "end": "2111119"
  },
  {
    "text": "know basically that i didn't call um that status here",
    "start": "2111119",
    "end": "2117200"
  },
  {
    "text": "and i expect the um i expect the",
    "start": "2117200",
    "end": "2122960"
  },
  {
    "text": "json body to be redis scores so here's my redis scores i'm just going to create",
    "start": "2122960",
    "end": "2128000"
  },
  {
    "text": "this mock that gets returned i don't care what those values are but i want to make sure that that's the one that comes",
    "start": "2128000",
    "end": "2133599"
  },
  {
    "text": "back so i'm going to mock this function this score data update scores method now",
    "start": "2133599",
    "end": "2140160"
  },
  {
    "text": "previously we just said i want to create some things but now we want to take a little bit more control over it so i'm",
    "start": "2140160",
    "end": "2147280"
  },
  {
    "text": "going to say if you call the that update scores method",
    "start": "2147280",
    "end": "2152960"
  },
  {
    "text": "i want it to do this process here now i'll take in my redis client i",
    "start": "2152960",
    "end": "2158400"
  },
  {
    "text": "really don't care about that but i'm going to take in my player and the number that we want to increment by and",
    "start": "2158400",
    "end": "2163920"
  },
  {
    "text": "let me go validate that those are as we expect that the player passed in is the",
    "start": "2163920",
    "end": "2169359"
  },
  {
    "text": "player here and that the number passed in is one you can't increment by more than one you can't win more than one",
    "start": "2169359",
    "end": "2175680"
  },
  {
    "text": "game at a time and so now that i've got my mock set up",
    "start": "2175680",
    "end": "2181119"
  },
  {
    "text": "let's make a fake request here now in this case we're",
    "start": "2181119",
    "end": "2186240"
  },
  {
    "text": "going to pass in a little bit different configuration previously we only said let's go get grab this json body but we",
    "start": "2186240",
    "end": "2192960"
  },
  {
    "text": "also need to be able to grab the status and be able to set the body here too",
    "start": "2192960",
    "end": "2198800"
  },
  {
    "text": "so this make mock request is a little bit different i go create a fake redis",
    "start": "2198800",
    "end": "2204240"
  },
  {
    "text": "client we saw that before we go create the fake app method we saw that before as well but we're also setting up this",
    "start": "2204240",
    "end": "2210960"
  },
  {
    "text": "body with whatever you happen to pass in here",
    "start": "2210960",
    "end": "2216160"
  },
  {
    "text": "now this is a partial of request so now i have a request object uh ts auto mox",
    "start": "2216160",
    "end": "2222880"
  },
  {
    "text": "is going to figure out the rest of the properties let's do a response but now we're going to not only grab the json",
    "start": "2222880",
    "end": "2228640"
  },
  {
    "text": "method we'll also grab the status method and call our fake function passing in",
    "start": "2228640",
    "end": "2233839"
  },
  {
    "text": "the results back to whatever method you called me with so now that we've got this um mock setup",
    "start": "2233839",
    "end": "2243440"
  },
  {
    "text": "now this fake request and response let's pass those in to our method so we'll go",
    "start": "2243440",
    "end": "2250240"
  },
  {
    "text": "call post now we're passing in this um right here so we're passing in our fake",
    "start": "2250240",
    "end": "2257680"
  },
  {
    "text": "request which will go grab our app method we saw that previously it also go grab our body method so that body method",
    "start": "2257680",
    "end": "2265680"
  },
  {
    "text": "came in from our fake right here here's the body and it grabs the particular",
    "start": "2265680",
    "end": "2271040"
  },
  {
    "text": "player we passed in here so back here inside of this we expect that player to",
    "start": "2271040",
    "end": "2277839"
  },
  {
    "text": "be uh to come in there so once we've got this body here's this json body that we got",
    "start": "2277839",
    "end": "2285040"
  },
  {
    "text": "back out of it and we'll validate that that json body is the reddest scores",
    "start": "2285040",
    "end": "2290560"
  },
  {
    "text": "here's our redis scores it's just this fake thing and that's the result of calling the redis",
    "start": "2290560",
    "end": "2296880"
  },
  {
    "text": "so that was my happy path and we're able to validate that then here's the unhappy path if i pass",
    "start": "2296880",
    "end": "2303440"
  },
  {
    "text": "in invalid players now in this case i noticed that there was a couple of invalid players so i could have written",
    "start": "2303440",
    "end": "2309280"
  },
  {
    "text": "a test for each one but that was starting to get really redundant so i just have this array of invalid values",
    "start": "2309280",
    "end": "2317440"
  },
  {
    "text": "and i said for each of those let's go build a new test inside this for each",
    "start": "2317440",
    "end": "2323359"
  },
  {
    "text": "loop that will go test that invalid player that's cool now i wanted to specifically",
    "start": "2323359",
    "end": "2330560"
  },
  {
    "text": "error with this error so let's validate that my json body is this error and let's go validate that the status is the",
    "start": "2330560",
    "end": "2337119"
  },
  {
    "text": "expected status of 400. so i'm mocking the request in the same way i'm mocking",
    "start": "2337119",
    "end": "2342880"
  },
  {
    "text": "the other content and we can see that that works as expected rounding this out we",
    "start": "2342880",
    "end": "2348160"
  },
  {
    "text": "also have a delete test that does similar things now in this case we care less about",
    "start": "2348160",
    "end": "2354400"
  },
  {
    "text": "the particular details of those because in the delete method we don't need to grab",
    "start": "2354400",
    "end": "2359839"
  },
  {
    "text": "anything from the request we don't need to take different paths we just need to",
    "start": "2359839",
    "end": "2364960"
  },
  {
    "text": "know that the json method got called and that this reset scores method got called",
    "start": "2364960",
    "end": "2373280"
  },
  {
    "text": "so our delete one is actually really simple let's go fake out the reset scores method let's call request and",
    "start": "2373280",
    "end": "2380079"
  },
  {
    "text": "response based on these fakes and validate that score mock was called",
    "start": "2380079",
    "end": "2386720"
  },
  {
    "text": "so now that that method was called we will also put that score mock back at",
    "start": "2386720",
    "end": "2391920"
  },
  {
    "text": "the end of each test and we can validate that that works as expected too",
    "start": "2391920",
    "end": "2397839"
  },
  {
    "text": "so let's go run these tests i'm going to start out on the server so",
    "start": "2398720",
    "end": "2403839"
  },
  {
    "text": "let's stop the server let's also stop the client and um i do have a package json here",
    "start": "2403839",
    "end": "2412319"
  },
  {
    "text": "that will set up my test let's take a look at that real fast so that we know which method to call",
    "start": "2412319",
    "end": "2419599"
  },
  {
    "text": "this one just calls jest now the cool part here is just we'll go",
    "start": "2419760",
    "end": "2425040"
  },
  {
    "text": "look through uh based on my jest config it will go look through my test directory so all of these tests were in",
    "start": "2425040",
    "end": "2432319"
  },
  {
    "text": "my test directory i also have integration tests which are pretty cool they will just fire requests out at my",
    "start": "2432319",
    "end": "2439280"
  },
  {
    "text": "api using um get scores uh",
    "start": "2439280",
    "end": "2445280"
  },
  {
    "text": "using the uh request package so let's do that now",
    "start": "2445280",
    "end": "2451760"
  },
  {
    "text": "because i have my integration tests those are going to use actual redis these unit tests will not npm run test",
    "start": "2451760",
    "end": "2459520"
  },
  {
    "text": "and let's see if we've got some passing tests now server side it's going to mock out",
    "start": "2459520",
    "end": "2465599"
  },
  {
    "text": "both my imports and my dependencies and run those will also get my integration",
    "start": "2465599",
    "end": "2470640"
  },
  {
    "text": "test that will actually flex redis and it looks like that passed which is excellent",
    "start": "2470640",
    "end": "2476319"
  },
  {
    "text": "that's always a good day eight total tests that it ran and all of them passed we can see some details about each of",
    "start": "2476319",
    "end": "2482960"
  },
  {
    "text": "the tests so our delete method our post method here's our get method and both of",
    "start": "2482960",
    "end": "2488240"
  },
  {
    "text": "those returned successfully and we can also take a look at our client side test so let's run npm run",
    "start": "2488240",
    "end": "2496560"
  },
  {
    "text": "test before we do that let's take a look at npm run test because this is going to do some interesting stuff",
    "start": "2496560",
    "end": "2502960"
  },
  {
    "text": "now as as i initialized my view app it set up",
    "start": "2502960",
    "end": "2509359"
  },
  {
    "text": "my test unit and test end to end and i rigged up a test method just so i could",
    "start": "2509359",
    "end": "2515440"
  },
  {
    "text": "say npm run test that runs my unit tests and it runs my end to end test in",
    "start": "2515440",
    "end": "2520560"
  },
  {
    "text": "headless mode now the the end-to-end tests are actually using",
    "start": "2520560",
    "end": "2525680"
  },
  {
    "text": "cyprus which is really cool i'm passing in options legacy provider because i'm",
    "start": "2525680",
    "end": "2531200"
  },
  {
    "text": "using node 17 to test pack 4",
    "start": "2531200",
    "end": "2536560"
  },
  {
    "text": "if i update my view cli then i can get rid of that but that didn't work at 2 am last night",
    "start": "2536560",
    "end": "2543280"
  },
  {
    "text": "so let's run our unit test which will go validate our components also go validate our services",
    "start": "2543280",
    "end": "2549760"
  },
  {
    "text": "we can check particular wins that way and if that works then we'll run our end-to-end tests which actually",
    "start": "2549760",
    "end": "2556880"
  },
  {
    "text": "pick up our selenium test and validate our game loop works as expected",
    "start": "2556880",
    "end": "2562319"
  },
  {
    "text": "so npm run test let's run our unit test here's where we're mounting components and validating",
    "start": "2562319",
    "end": "2569359"
  },
  {
    "text": "the behavior there uh we'll also run unit tests around uh do i win",
    "start": "2569359",
    "end": "2575040"
  },
  {
    "text": "now we're kicking off our end to end test now our intent tests do assume that our server is running so npm run serve",
    "start": "2575040",
    "end": "2583359"
  },
  {
    "text": "no npm start should have done that first",
    "start": "2583359",
    "end": "2589838"
  },
  {
    "text": "because our integration tests are going to flex from here down it actually needs to have the server running too",
    "start": "2590079",
    "end": "2596319"
  },
  {
    "text": "so it looks like we're running our electron app that our electron browser",
    "start": "2596319",
    "end": "2602160"
  },
  {
    "text": "rather built into cyprus in a different version of this talk we actually dig deeper into the cypress test and that's",
    "start": "2602160",
    "end": "2608000"
  },
  {
    "text": "really cool looks like we have passing tests there six passing selenium tests",
    "start": "2608000",
    "end": "2613200"
  },
  {
    "text": "we also can take a look at our unit test and we have 19 passing unit tests",
    "start": "2613200",
    "end": "2619280"
  },
  {
    "text": "and we win we were able to mock out the dependencies to focus in on the pieces",
    "start": "2619280",
    "end": "2626319"
  },
  {
    "text": "that we really cared about we mocked out our imports we mocked out",
    "start": "2626319",
    "end": "2631920"
  },
  {
    "text": "the other properties that we wanted to pass in so if there were other details",
    "start": "2631920",
    "end": "2636960"
  },
  {
    "text": "on a request if we updated express and they passed in things we could just",
    "start": "2636960",
    "end": "2642400"
  },
  {
    "text": "focus in on this portion of the request that we cared about now in this case i only wanted that app",
    "start": "2642400",
    "end": "2649040"
  },
  {
    "text": "property to exist so i had a get method so i could get a redis thing on it i only wanted to have a json method so i",
    "start": "2649040",
    "end": "2655760"
  },
  {
    "text": "could collect the json body from that almost be equal i wish",
    "start": "2655760",
    "end": "2661119"
  },
  {
    "text": "sign on did that for me but that was really cool we were able to mock out our dependencies and keep our",
    "start": "2661200",
    "end": "2668160"
  },
  {
    "text": "typescript interface alive",
    "start": "2668160",
    "end": "2673079"
  },
  {
    "text": "so we focused in on two libraries ts automak and ts mock imports",
    "start": "2678480",
    "end": "2684160"
  },
  {
    "text": "ts mock imports uses partial of t partial of t is amazing on its own if ever you want to grab the object but not",
    "start": "2684160",
    "end": "2691119"
  },
  {
    "text": "the id property then you could use partial of t to say you know i'm just going to have a",
    "start": "2691119",
    "end": "2697200"
  },
  {
    "text": "patch of my object but not the entire object so ts mock imports is really fun",
    "start": "2697200",
    "end": "2703280"
  },
  {
    "text": "just.function and sign on stub we actually didn't use desktop function but we did use sign on stub behind the",
    "start": "2703280",
    "end": "2709920"
  },
  {
    "text": "scenes based on ts mock imports uh our yeah ts mock imports to be able",
    "start": "2709920",
    "end": "2715760"
  },
  {
    "text": "to fake out that method with the various details so yeah mocking and typescript",
    "start": "2715760",
    "end": "2723119"
  },
  {
    "text": "use the right tool for the job and ultimately because we wanted to fake out those dependencies because we wanted to",
    "start": "2723119",
    "end": "2729359"
  },
  {
    "text": "focus in on just those things that we cared about we're able to let the rest of our application go to make these",
    "start": "2729359",
    "end": "2735760"
  },
  {
    "text": "tests run particularly fast now the code for all of this is up on",
    "start": "2735760",
    "end": "2741760"
  },
  {
    "text": "github right now you can head off to robrich.org click on presentations and grab the github",
    "start": "2741760",
    "end": "2747200"
  },
  {
    "text": "repository and hopefully if you run npm run test then your test will pass too",
    "start": "2747200",
    "end": "2753119"
  },
  {
    "text": "this was a lot of fun thanks for letting me play",
    "start": "2753119",
    "end": "2758039"
  },
  {
    "text": "any questions on mocking and typescript",
    "start": "2763359",
    "end": "2767559"
  },
  {
    "text": "yes yeah i would invite you to play with the github repo thanks for coming",
    "start": "2775839",
    "end": "2785000"
  },
  {
    "text": "you",
    "start": "2798000",
    "end": "2800079"
  }
]