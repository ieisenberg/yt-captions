[
  {
    "text": "okay hi everyone I I hope you had a good lunch the food is nice here I really",
    "start": "2120",
    "end": "9000"
  },
  {
    "text": "like that you can just go and whenever you're hungry stuff your faces that's super awesome so yeah it's the last day",
    "start": "9000",
    "end": "16960"
  },
  {
    "text": "of the conference so I hope you are energized to get into profiling and benchmarking because it's not an easy",
    "start": "16960",
    "end": "23480"
  },
  {
    "text": "topic I guess but I'll do my best to get you introduced into this topic so who is",
    "start": "23480",
    "end": "28920"
  },
  {
    "text": "new to Ben Ben marking hands up a few who is new to",
    "start": "28920",
    "end": "36399"
  },
  {
    "text": "profiling a few who is new to profiling and benchmarking ands up okay so then we",
    "start": "36399",
    "end": "43039"
  },
  {
    "text": "have a good audience here that's awesome because I remember the first time I sort",
    "start": "43039",
    "end": "48719"
  },
  {
    "text": "of tried to sort of start benchmarking my code I was looking around for blog",
    "start": "48719",
    "end": "53840"
  },
  {
    "text": "posts out there and I saw lots of Benchmark written with",
    "start": "53840",
    "end": "59280"
  },
  {
    "text": "that's interesting so can I apply this as well and there all code like this out there right so and I was like H that s",
    "start": "60079",
    "end": "67240"
  },
  {
    "text": "that looks really easy because I sort of had a conceptual understanding of unit tests and I was like and please don't",
    "start": "67240",
    "end": "74240"
  },
  {
    "text": "bother too much to look at this code it's just an example so I was just thinking yeah it's just a class with a",
    "start": "74240",
    "end": "79439"
  },
  {
    "text": "bunch of attributes and then magic happens and I'm getting a result so benchmarking is easy right so because I",
    "start": "79439",
    "end": "85720"
  },
  {
    "text": "knew X unit I knew n unit I have used Ms test for for a while I didn't like it at",
    "start": "85720",
    "end": "91159"
  },
  {
    "text": "that time but it has improved a lot so yeah so and I was like H that shouldn't be too difficult for me as well so I can",
    "start": "91159",
    "end": "97560"
  },
  {
    "text": "just do the same so I felt quite quite certain it doesn't take long for me to",
    "start": "97560",
    "end": "102840"
  },
  {
    "text": "actually embrace this concept of benchmarking but I was wrong because essentially it was very easy to write",
    "start": "102840",
    "end": "109920"
  },
  {
    "text": "the skeleton it's easy to write the class it's easy to write to slap a bunch of attributes on a class and then let",
    "start": "109920",
    "end": "116159"
  },
  {
    "text": "the thing do something right but then at the end of the day I started asking myself questions like hm what should I",
    "start": "116159",
    "end": "122880"
  },
  {
    "text": "even Benchmark right and why or how do I take the code that I wrote that is",
    "start": "122880",
    "end": "128759"
  },
  {
    "text": "usually quite messy my colleagues usually complain about the code that I write and how do I take this code that",
    "start": "128759",
    "end": "134360"
  },
  {
    "text": "is sort of intertwined and entangled and put it into a benchmark is this even a good idea right or what should I",
    "start": "134360",
    "end": "140680"
  },
  {
    "text": "deliberately sort of cut away from the code that I wrote so that I actually get results that are meaningful for me and",
    "start": "140680",
    "end": "147440"
  },
  {
    "text": "I'm not watering things or the results or I was also thinking how can I",
    "start": "147440",
    "end": "154599"
  },
  {
    "text": "actually measure change and measure and go through that Loop without burning away the lot the budget that I had for",
    "start": "154599",
    "end": "160239"
  },
  {
    "text": "this performance investigations because I I mean I got fed up with with job",
    "start": "160239",
    "end": "166159"
  },
  {
    "text": "titles at some point in time so I call myself a principal chocolate lover these days because I think job titles are",
    "start": "166159",
    "end": "172000"
  },
  {
    "text": "highly overrated but I'm not a performance engineer in my day work because I my job is to get stuff out",
    "start": "172000",
    "end": "179640"
  },
  {
    "text": "there into the hands of our customers right and so that means I need to make sure it's reasonably fast but I also",
    "start": "179640",
    "end": "186680"
  },
  {
    "text": "cannot gold plate stuff and sometimes I'm doing this sort of tinkering at home in front of of the TV when I'm watching",
    "start": "186680",
    "end": "193280"
  },
  {
    "text": "something that I'm only half interested in and I'm doing some a bit of spelunking but I have a hack because I",
    "start": "193280",
    "end": "200000"
  },
  {
    "text": "know that I'm terribly bad in going to bed when I'm actually dealing with something that is really interesting so",
    "start": "200000",
    "end": "205959"
  },
  {
    "text": "I basically have this hack that switches off the internet around midnight because whenever I need to Google Bing something",
    "start": "205959",
    "end": "212159"
  },
  {
    "text": "and I have no internet anymore I'm like ah whatever and then I go to bed right so that's that's essentially the time",
    "start": "212159",
    "end": "218680"
  },
  {
    "text": "when I have to stop doing these performance optimizations because they're highly addictive at least to me",
    "start": "218680",
    "end": "224519"
  },
  {
    "text": "but then the question is also well how do why would you even bother and why would you even go through that hassle of",
    "start": "224519",
    "end": "230680"
  },
  {
    "text": "doing performance investigations profiling and benchmarking right because at the end of the day this is time",
    "start": "230680",
    "end": "236959"
  },
  {
    "text": "consuming and we only have limited time available so one of the things that I usually talk",
    "start": "236959",
    "end": "242439"
  },
  {
    "text": "about is when you have code that is executed at scale there are two things that really matter it's the throughput",
    "start": "242439",
    "end": "248120"
  },
  {
    "text": "and memory characteristics of your code at run time when it's running in your data centers right because today we talk",
    "start": "248120",
    "end": "255840"
  },
  {
    "text": "a lot about sort of this green it movement what what it means is if code is running in your data centers it",
    "start": "255840",
    "end": "261639"
  },
  {
    "text": "consumes energy and consuming energy at the end of the day we only have scarse resources on planet Earth right so the",
    "start": "261639",
    "end": "268199"
  },
  {
    "text": "more efficient the code is that we executing in our data centers the the better it's also basically in terms of",
    "start": "268199",
    "end": "274960"
  },
  {
    "text": "sustainability on planet Earth but you might be saying yeah but Daniel come on your green it stuff I'm like I've seen",
    "start": "274960",
    "end": "281600"
  },
  {
    "text": "it I don't want to hear it anymore at the end of the day when you're running let's say in a data center in Ash or AWS",
    "start": "281600",
    "end": "287160"
  },
  {
    "text": "doesn't really matter right someone puts down a credit card right and then in the clouds we have like these virtual",
    "start": "287160",
    "end": "293479"
  },
  {
    "text": "numbers like gigabytes per second throughput units premium throughput units or whatever they're making this",
    "start": "293479",
    "end": "299199"
  },
  {
    "text": "stuff up so that we don't know what we're getting charged for right and at the end of the day or at the end of the",
    "start": "299199",
    "end": "304680"
  },
  {
    "text": "month we're getting this huge Cloud pill and someone is going to cry a river and say why did you burn that much money in",
    "start": "304680",
    "end": "309919"
  },
  {
    "text": "the cloud right so essentially it's really important to make sure that the code that we ship at the end of the day",
    "start": "309919",
    "end": "317280"
  },
  {
    "text": "is fast enough so that it doesn't burn away unnecessary resources which",
    "start": "317280",
    "end": "322440"
  },
  {
    "text": "directly translates into money in the cloud okay but let me give you another example so Microsoft has this awesome",
    "start": "322440",
    "end": "329319"
  },
  {
    "text": "block posteries where Microsoft teams blog about their journey to let's say more modern. net versions and different",
    "start": "329319",
    "end": "336520"
  },
  {
    "text": "things and there is like this blog post from the Microsoft teams infrastructure and Azure Communication Service team and",
    "start": "336520",
    "end": "344240"
  },
  {
    "text": "they essentially said something like that we were able to see aure compute cost reduction of up to 50% per month on",
    "start": "344240",
    "end": "351160"
  },
  {
    "text": "average we observed 24% of monthly cost reduction after migrating to net 6 the",
    "start": "351160",
    "end": "356680"
  },
  {
    "text": "reduction in course reduced ashes spent by 24% % so just by upgrading to net 6",
    "start": "356680",
    "end": "364240"
  },
  {
    "text": "they got actually they could benefit from the performance improvements that was in the runtime that the team or the",
    "start": "364240",
    "end": "371599"
  },
  {
    "text": "net runtime team actually has rolled out over time right and as you can imagine",
    "start": "371599",
    "end": "376720"
  },
  {
    "text": "24% monthly cost reduction that's quite significant I can assure you when you go",
    "start": "376720",
    "end": "382520"
  },
  {
    "text": "back to your work and only squeeze out 5% 6% 7% in sort of um less costs in the",
    "start": "382520",
    "end": "390360"
  },
  {
    "text": "cloud your bosses are going to be pretty happy and then you can turn that at the end of the year in your salary",
    "start": "390360",
    "end": "396240"
  },
  {
    "text": "negotiation to say hey boss remember I actually tweaked out some performance there in the data centers right but then",
    "start": "396240",
    "end": "403599"
  },
  {
    "text": "in these talks I have I have basically try to come up with a very practical approach that I use in my day-to-day",
    "start": "403599",
    "end": "409120"
  },
  {
    "text": "work so that you can also benefit from from my knowledge and apply that in your work so that you can go through a series",
    "start": "409120",
    "end": "416360"
  },
  {
    "text": "of steps that are um highly practical but one of the things you need to start first and that's the beginning of the",
    "start": "416360",
    "end": "423000"
  },
  {
    "text": "journey is you need to become performance aware one of the key principles that I try to apply to almost",
    "start": "423000",
    "end": "429759"
  },
  {
    "text": "everything I do in software is that I'm trying to make explicit trade-offs as I",
    "start": "429759",
    "end": "435039"
  },
  {
    "text": "go so this also applies to Performance so I think a reasonably mature team",
    "start": "435039",
    "end": "440840"
  },
  {
    "text": "should be performance aware but what does it mean to be performance aware or is it sort of an All or Nothing do I",
    "start": "440840",
    "end": "447879"
  },
  {
    "text": "have to go go all the way in into becoming per performance awareness and I think not at all so what I usually do is",
    "start": "447879",
    "end": "455960"
  },
  {
    "text": "I always start with the simplest solution first so basically I have my my requirements I basically hack a piece of",
    "start": "455960",
    "end": "463080"
  },
  {
    "text": "code together I Cobble it together so that it works so that it passes the tests right and then once I have",
    "start": "463080",
    "end": "470039"
  },
  {
    "text": "reasonable test coverage in place and that's really important to me because without test I don't even know whether",
    "start": "470039",
    "end": "475120"
  },
  {
    "text": "it's working right and I don't need to have like a full crazy test cover but at least a walking skeleton so that stuff I",
    "start": "475120",
    "end": "482319"
  },
  {
    "text": "know the things that are working and then I start sort of applying a few questions to that stuff so I'm trying to",
    "start": "482319",
    "end": "488800"
  },
  {
    "text": "understand the context of the code the first question I ask myself and this is purely based on God feeling of over 15",
    "start": "488800",
    "end": "496000"
  },
  {
    "text": "years of experience in the net space and writing um good software is how is this code going to be executed at scale and",
    "start": "496000",
    "end": "503000"
  },
  {
    "text": "what would the memory characteristics be so this is really just I'm looking at the code it's like hm when I don't know",
    "start": "503000",
    "end": "509639"
  },
  {
    "text": "thousand requests per seconds come in here what what will potentially happen are there bite array allocations and",
    "start": "509639",
    "end": "515279"
  },
  {
    "text": "stuff like that how does it impact the CPU into the memory do I do something compute intensive here right these are",
    "start": "515279",
    "end": "521200"
  },
  {
    "text": "questions I'm asking myself and then once I've done that I'm sort of asking myself are there low hanging fruits in",
    "start": "521200",
    "end": "527959"
  },
  {
    "text": "there that I can just apply to accelerate this code and one of the things that I usually do is like for",
    "start": "527959",
    "end": "533480"
  },
  {
    "text": "example when you think about this code is executed hundreds of times per second and I'm newing up a new bite array right",
    "start": "533480",
    "end": "539800"
  },
  {
    "text": "so I ask myself hm can I move this somewhere else because maybe I can reuse this bite array or can I introduce some",
    "start": "539800",
    "end": "545880"
  },
  {
    "text": "type of pooling or stuff like that right these are low hanging fruits but the first versions might be just new bite",
    "start": "545880",
    "end": "551079"
  },
  {
    "text": "array because I I don't need to optimize it once I when the code is not even working and the next thing is are there",
    "start": "551079",
    "end": "558440"
  },
  {
    "text": "things that can move away from the hot path by simp simply restructuring it a bit right I mentioned the bite aray",
    "start": "558440",
    "end": "563720"
  },
  {
    "text": "that's definitely something like that again if I know this is not multi threaded at all there is no concurrency",
    "start": "563720",
    "end": "569560"
  },
  {
    "text": "I may may be able to sort of optimize it and then an important question for me is",
    "start": "569560",
    "end": "575560"
  },
  {
    "text": "also always what part is under my control and what isn't really right because sometimes we're dealing with",
    "start": "575560",
    "end": "581279"
  },
  {
    "text": "code from other teams right and they're probably also quite smart people but whenever I discover something that is",
    "start": "581279",
    "end": "587560"
  },
  {
    "text": "owned by someone else whether it's another team whether it's a third- party Library I might not get access to that",
    "start": "587560",
    "end": "593000"
  },
  {
    "text": "code or I might first need to knock at their doors and say hey friendly Daniel here I discovered something would you",
    "start": "593000",
    "end": "599760"
  },
  {
    "text": "maybe prioritize that in your backlog right so I need to have these types of conversations or if it's a third-party",
    "start": "599760",
    "end": "605519"
  },
  {
    "text": "Library I which might be closed Source I first need to open a ticket with them they have their own priorities so I'm",
    "start": "605519",
    "end": "611839"
  },
  {
    "text": "trying to sort of sift through that Maze of things to become aware of what's going on so that is essentially what I'm",
    "start": "611839",
    "end": "619120"
  },
  {
    "text": "doing uh in a nutshell on one slides but the key is here to find the right balance right I don't want to over",
    "start": "619120",
    "end": "625640"
  },
  {
    "text": "investigate these types of things but asking these types of question at at least gets me started becoming",
    "start": "625640",
    "end": "631040"
  },
  {
    "text": "performance aware and you can use that as well in your projects and then the",
    "start": "631040",
    "end": "636200"
  },
  {
    "text": "last one is that's the most important one for me what optimizations can I apply and when should I stop right",
    "start": "636200",
    "end": "642920"
  },
  {
    "text": "because I never these types of things for me at least they're highly addictive right oh a bite a bite allocation less",
    "start": "642920",
    "end": "649399"
  },
  {
    "text": "over here and some simd over there and blah blah blah and then you burn a lot of time and then but you never really",
    "start": "649399",
    "end": "655480"
  },
  {
    "text": "know whether that's actually achieving a lot if you haven't shipped it actually to production right so we need to have",
    "start": "655480",
    "end": "660760"
  },
  {
    "text": "it in production so that we actually know what's going on at the end of the day good so if you want to know more",
    "start": "660760",
    "end": "667600"
  },
  {
    "text": "about sort of about concrete per performance optimizations you can do in net you can watch this talk here's a QR",
    "start": "667600",
    "end": "674519"
  },
  {
    "text": "code if you don't manage to make a picture I also will hand out the slide uh a read me to a GitHub repository with",
    "start": "674519",
    "end": "680040"
  },
  {
    "text": "all the links and resources of this talk should you be interested in concrete performance optimization you can do in",
    "start": "680040",
    "end": "686519"
  },
  {
    "text": "net but this talk is not going to be about that okay okay good now here is",
    "start": "686519",
    "end": "693279"
  },
  {
    "text": "what I call the performance loop I use this all the time when I'm doing performance optimization and I've come",
    "start": "693279",
    "end": "698519"
  },
  {
    "text": "up with this practical way of doing performance optimizations so that I can do it in a structured way and so that",
    "start": "698519",
    "end": "704920"
  },
  {
    "text": "you can do it as well so I'm going to walk you through this performance Loop that starts with profile using a harness",
    "start": "704920",
    "end": "712120"
  },
  {
    "text": "improve a hot path Benchmark and compare go back to improving depending on the Benchmark results go back uh go back to",
    "start": "712120",
    "end": "719720"
  },
  {
    "text": "Benchmark and then eventually once you're done with that inner cycle profile the improvements again and then",
    "start": "719720",
    "end": "725120"
  },
  {
    "text": "ship it to production to actually see whether it makes in the grand scheme of thing an actual impact in your production system and I'm going to walk",
    "start": "725120",
    "end": "732200"
  },
  {
    "text": "you through this sort of profiling Loop or performance loop with a practical example out of my work the work that I'm",
    "start": "732200",
    "end": "739079"
  },
  {
    "text": "going to show here is going to be in messaging framework and abstraction library and you might be thinking Daniel",
    "start": "739079",
    "end": "745760"
  },
  {
    "text": "but I work in an application so everything that you're showing to to me this is kind of nerdy science geeky",
    "start": "745760",
    "end": "752279"
  },
  {
    "text": "stuff I don't know if that's even applicable to my context in my project I can tell you this what I'm showing you",
    "start": "752279",
    "end": "758720"
  },
  {
    "text": "here is fully applicable also to applications and one of the things I really like is Kev Kevin Henley told me",
    "start": "758720",
    "end": "765160"
  },
  {
    "text": "that and I think it's a good conceptual sort of bridge is every application out there that you're writing probably has",
    "start": "765160",
    "end": "771639"
  },
  {
    "text": "half of a framework built in right because you always have some type of infrastructure code things are based",
    "start": "771639",
    "end": "776959"
  },
  {
    "text": "upon so even if you don't believe yet that you can apply it in your applications if you have half a",
    "start": "776959",
    "end": "782480"
  },
  {
    "text": "framework you can definitely apply it there but trust me this is also applicable to your applications out",
    "start": "782480",
    "end": "787680"
  },
  {
    "text": "there good let's look into the example so U I work for a company called particular software and we have this",
    "start": "787680",
    "end": "794480"
  },
  {
    "text": "messaging abstraction Library called an response and the platform around it and I don't want to go too much into detail",
    "start": "794480",
    "end": "800760"
  },
  {
    "text": "but basically conceptually you can think of there are queuing systems out there like rabid mq as service bus sqs SNS and",
    "start": "800760",
    "end": "808120"
  },
  {
    "text": "this piece of code tries to efficiently pump messages from the cloud or in your",
    "start": "808120",
    "end": "813440"
  },
  {
    "text": "on premise Data Center and it tries to call our customers code that's basically what it does right conceptually if you",
    "start": "813440",
    "end": "820480"
  },
  {
    "text": "want to know more about it go to go. particular.net nc- London d225 D QuickStart that's",
    "start": "820480",
    "end": "827880"
  },
  {
    "text": "where you learn about this but this is not the topic of the talk I'm not here to explain to you what messaging is and",
    "start": "827880",
    "end": "833399"
  },
  {
    "text": "all that stuff so this is just the introduction here but inside answer response there is this piece called the",
    "start": "833399",
    "end": "840519"
  },
  {
    "text": "N service bus pipeline so n service bus is trying to follow the open close principle so what we're doing is because",
    "start": "840519",
    "end": "846839"
  },
  {
    "text": "we don't know what our customers want to achieve we have sort of an open core inside end service bus where we plug in",
    "start": "846839",
    "end": "853560"
  },
  {
    "text": "our stuff and customers plug in their stuff and what we're doing in there in this sort of pipeline is we're doing the",
    "start": "853560",
    "end": "859480"
  },
  {
    "text": "dieselization of the messages we're doing the correlation we're doing for for example open Telemetry trace",
    "start": "859480",
    "end": "865320"
  },
  {
    "text": "spanning and stuff like that we're integrating into custom Ora or we're calling Cosmos DB we're opening",
    "start": "865320",
    "end": "872560"
  },
  {
    "text": "transactions against SQL server and committing transactions and stuff like that right that's also sort of infrastructure pieces in this pipeline",
    "start": "872560",
    "end": "879720"
  },
  {
    "text": "that is going to be executed when people are using end service bus and the core pieces that are make this thing",
    "start": "879720",
    "end": "886399"
  },
  {
    "text": "extensible are these behaviors in here um so that is the stuff that you our",
    "start": "886399",
    "end": "892399"
  },
  {
    "text": "customers plug in to behaviors and if you're not familiar with behaviors you can sort of conceptualize it potentially",
    "start": "892399",
    "end": "898720"
  },
  {
    "text": "with ASP core middleware so ASP core has sort of the these middleware pieces",
    "start": "898720",
    "end": "904959"
  },
  {
    "text": "where you can essentially have sort of you can declare a method called invoke async you get State into it that's the",
    "start": "904959",
    "end": "911639"
  },
  {
    "text": "HTTP context then you have something that you can do before the pipeline executes and then you can do await next",
    "start": "911639",
    "end": "918800"
  },
  {
    "text": "and then you can have something after the pipeline executes right Prett uh simple example if you want to wrap the",
    "start": "918800",
    "end": "925199"
  },
  {
    "text": "invocation of the AED neore uh controllers or the handlers you can with",
    "start": "925199",
    "end": "930680"
  },
  {
    "text": "a with a try catch you can basically have a try catch around the weight next and then everything will be safeguarded",
    "start": "930680",
    "end": "936639"
  },
  {
    "text": "by the TR catch that comes after it so answer response behaviors are quite similar we just inherit from a class you",
    "start": "936639",
    "end": "944000"
  },
  {
    "text": "define some sort of State there and then you have an invoke method and you have an await next you do something before",
    "start": "944000",
    "end": "951160"
  },
  {
    "text": "you do the await next and you do some something after and in those sort of classes where we where we extend and",
    "start": "951160",
    "end": "957639"
  },
  {
    "text": "response and where our customers extend answer response that's where sort of all the core logic that I just previously uh",
    "start": "957639",
    "end": "965759"
  },
  {
    "text": "described um are being executed good so my goal is or was at the time to sort of",
    "start": "965759",
    "end": "974279"
  },
  {
    "text": "optimize this end service bus pipeline why is that important because we never want to be in a case where a customer",
    "start": "974279",
    "end": "980040"
  },
  {
    "text": "calls us or sends an email and says hey uh we have a problem answer response is slow what are you doing right okay we",
    "start": "980040",
    "end": "986519"
  },
  {
    "text": "are not perfect we're also making mistakes but at least we want to make sure that we do our best to not ship bad",
    "start": "986519",
    "end": "992519"
  },
  {
    "text": "stuff right so we want to make sure these things are fast so the pipeline needs to be super fast so that it's not",
    "start": "992519",
    "end": "998240"
  },
  {
    "text": "in the way of our customers code ideally and we do that we're entering now the first sort of step into this performance",
    "start": "998240",
    "end": "1006000"
  },
  {
    "text": "Loop which is profiling using a harness so what I usually do is before I get",
    "start": "1006000",
    "end": "1011240"
  },
  {
    "text": "started with I write a simple sample or harness that sort of makes it possible",
    "start": "1011240",
    "end": "1016279"
  },
  {
    "text": "to observe the things that I want to sort of profile under a memory profiler",
    "start": "1016279",
    "end": "1022079"
  },
  {
    "text": "and a CPU profiler I always take two profiles one is memory and one is a CPU",
    "start": "1022079",
    "end": "1029280"
  },
  {
    "text": "so um you might be thinking well but isn't there also a third profile and yes",
    "start": "1029280",
    "end": "1034600"
  },
  {
    "text": "any complicated sort of application has probably IO stuff right IO can be",
    "start": "1034600",
    "end": "1039839"
  },
  {
    "text": "database can be HTP client and IO is usually hundreds and thousands of times more expensive than CPU and memory of",
    "start": "1039839",
    "end": "1047199"
  },
  {
    "text": "course um you should also be using IO profilers you should look into your database queries and stuff like that",
    "start": "1047199",
    "end": "1053160"
  },
  {
    "text": "because you usually get more bang for the box when you're optimizing your database queries this talk is not",
    "start": "1053160",
    "end": "1058799"
  },
  {
    "text": "focused on that part but I want to mention it not that you think oh he totally cheated right um but anyway so I",
    "start": "1058799",
    "end": "1066919"
  },
  {
    "text": "I create this harness so that I can look at the different subsystem in play when I have these two profilers sort of",
    "start": "1066919",
    "end": "1073240"
  },
  {
    "text": "attached and since I'm sort of trying to optimize the end of pass pipeline I I",
    "start": "1073240",
    "end": "1079120"
  },
  {
    "text": "create a simple sample that just reproduces the minimalistic part so that I can actually observe the pipeline",
    "start": "1079120",
    "end": "1085000"
  },
  {
    "text": "being executed and I can see the bottlenecks I usually use the chat brains tools like memory or dot race but",
    "start": "1085000",
    "end": "1092240"
  },
  {
    "text": "I want to and also my samples here are with do trace and Dot memory but I want to get it really clear here H you can",
    "start": "1092240",
    "end": "1098559"
  },
  {
    "text": "use any tool you if you have a visual studio subscription and you have Visual Studio professional it has built-in",
    "start": "1098559",
    "end": "1104240"
  },
  {
    "text": "memory profiling tools that you can use if you're saying well I cannot afford this for whatever reason if you're a",
    "start": "1104240",
    "end": "1109559"
  },
  {
    "text": "student there is also stuff like perfu out there that you can use for free to sort of do profiling investigations I",
    "start": "1109559",
    "end": "1116799"
  },
  {
    "text": "want to warn you perfu is a little bit of a steep learning curve I must say and every time I use it I have to Google a",
    "start": "1116799",
    "end": "1122760"
  },
  {
    "text": "cheat sheet in order to remember all all the things and as a matter of fact I",
    "start": "1122760",
    "end": "1128200"
  },
  {
    "text": "usually use a variety of tools because sometimes when you're doing performance investigations it's the kind of um I",
    "start": "1128200",
    "end": "1135919"
  },
  {
    "text": "know it when I see it type of principle and every tool has different views optimized based on sort of the user",
    "start": "1135919",
    "end": "1143200"
  },
  {
    "text": "experience that sometimes make you like ah here it is right and that's why I sometimes use different tools as well so",
    "start": "1143200",
    "end": "1149039"
  },
  {
    "text": "your mileage may vary that's what I want to say here good so how does the harness then look like for the + pipeline so",
    "start": "1149039",
    "end": "1156559"
  },
  {
    "text": "this is sort of the basic configuration so what I'm doing here basically I'm just setting up it's a",
    "start": "1156559",
    "end": "1162840"
  },
  {
    "text": "console application I'm just setting up and service boss and what I'm doing is I'm using here msmq y mq because it it",
    "start": "1162840",
    "end": "1170200"
  },
  {
    "text": "is on my machine I'm using Windows as an example it's old it's Rusty it's outdated but it just works I I don't",
    "start": "1170200",
    "end": "1176960"
  },
  {
    "text": "have to set up any Docker container nothing it's local it's reasonably fast it gets the job done good then what I'm",
    "start": "1176960",
    "end": "1184000"
  },
  {
    "text": "also doing is I'm saying well let's use a reasonably fast Jason zerizer uh I'm using here system text Json because",
    "start": "1184000",
    "end": "1190679"
  },
  {
    "text": "again I'm not measuring I'm not comparing serializers I'm just using one that is out of my way super fast then",
    "start": "1190679",
    "end": "1197679"
  },
  {
    "text": "what I'm also saying here is I don't want to see any IO I'm not interested in IO I don't want to see Cosmos DB or",
    "start": "1197679",
    "end": "1203799"
  },
  {
    "text": "stuff like that because that might light up in my performance profile to be very huge and sort of distract me from the",
    "start": "1203799",
    "end": "1210799"
  },
  {
    "text": "investigations that I want to do because I want to measure the pipeline invocation that's what I'm doing here",
    "start": "1210799",
    "end": "1216120"
  },
  {
    "text": "and then what I'm doing is I'm publishing messages to msmq and I'm doing that parallel concurrently so I'm",
    "start": "1216120",
    "end": "1223240"
  },
  {
    "text": "publishing a thousand messages that's what I'm doing here and I know with my conceptual understanding when this",
    "start": "1223240",
    "end": "1228799"
  },
  {
    "text": "publish method is going to get called that's where the publish pipeline is going to be executed so I'm getting into",
    "start": "1228799",
    "end": "1234640"
  },
  {
    "text": "the direction that I want then the next thing that I'm doing is I'm setting",
    "start": "1234640",
    "end": "1240120"
  },
  {
    "text": "various sort of console right lines and console read lines so that I know for example the warmup phase is done and now",
    "start": "1240120",
    "end": "1246360"
  },
  {
    "text": "is the part where I can attach the profiler and that's where the things are happening that I want to see and you",
    "start": "1246360",
    "end": "1252200"
  },
  {
    "text": "conceptually for your applications or for your libraries and Frameworks out there you can do exactly the same right",
    "start": "1252200",
    "end": "1257360"
  },
  {
    "text": "you're creating a harness that sort of reproduces the minimalistics part that you're interested in and then on the",
    "start": "1257360",
    "end": "1263440"
  },
  {
    "text": "other hand because I'm publishing messages to msmq I have to receive them again because with my conceptual",
    "start": "1263440",
    "end": "1269679"
  },
  {
    "text": "understanding of the framework I know that when I receive it I get then the receive pipeline coming in and that's",
    "start": "1269679",
    "end": "1275080"
  },
  {
    "text": "the second part of the pipeline that I'm interested in because I want to have an holistic picture but I don't want to show you",
    "start": "1275080",
    "end": "1281880"
  },
  {
    "text": "just answer response I also want to give or how we did this with answer response I want to give you a sort of practical",
    "start": "1281880",
    "end": "1288240"
  },
  {
    "text": "guide what you have to consider when you're writing your own harnesses to actually attach the profiler so one of",
    "start": "1288240",
    "end": "1294880"
  },
  {
    "text": "the first thing that you should always think about is it should be compiled and executed in release mode and you might",
    "start": "1294880",
    "end": "1301039"
  },
  {
    "text": "be thinking but d That's so obvious come on but it's actually interesting because most of the idees that you use the",
    "start": "1301039",
    "end": "1307600"
  },
  {
    "text": "default mode is the debug mode right because they want you to optimize for F5 and then debugging session but you need",
    "start": "1307600",
    "end": "1313559"
  },
  {
    "text": "to do it in release mode because debug mode is not going to suit for profiling session",
    "start": "1313559",
    "end": "1319640"
  },
  {
    "text": "and then it needs to run a few seconds and keep the overhead minimal because if it's too short you don't see anything",
    "start": "1319640",
    "end": "1325799"
  },
  {
    "text": "right it should run a little bit but again all the things that you don't want to see ideally should be removed because",
    "start": "1325799",
    "end": "1332039"
  },
  {
    "text": "otherwise the noise that you see in those tools is way too much so if you can work towards minimalistic",
    "start": "1332039",
    "end": "1338000"
  },
  {
    "text": "reproductions it's even better then usually in order to sort of avoid the warmup of the chit and this is a little",
    "start": "1338000",
    "end": "1344679"
  },
  {
    "text": "bit of a controversial topic right because some people are saying well why do you disable the the tier chit",
    "start": "1344679",
    "end": "1350159"
  },
  {
    "text": "compilation because the tier chit compilation might actually change at runtime things that actually you don't",
    "start": "1350159",
    "end": "1355840"
  },
  {
    "text": "have to fix then and that's absolutely true but as as a general sort of guidance you can you at the beginning",
    "start": "1355840",
    "end": "1361760"
  },
  {
    "text": "when you're doing these investigations you want to see things before these optimizations and you want to avoid the",
    "start": "1361760",
    "end": "1368120"
  },
  {
    "text": "chit going through the warm-up so that you direct directly have results with within a few within a few seconds but",
    "start": "1368120",
    "end": "1374000"
  },
  {
    "text": "your mileage may vary right so and then also you want to have full debu symbols",
    "start": "1374000",
    "end": "1380320"
  },
  {
    "text": "emitted because by default that's not there in the release mode so that you actually have all the stack traces and",
    "start": "1380320",
    "end": "1385360"
  },
  {
    "text": "everything so that you can trace it back to your code uh once you go through the profiling sessions let's have a look at the memory",
    "start": "1385360",
    "end": "1393400"
  },
  {
    "text": "characteristics of the N service bus publish Pipeline and I'm showing you here a screenshot of dot memory and the",
    "start": "1393400",
    "end": "1400480"
  },
  {
    "text": "memory characteristics there and why memory first right so one of the things",
    "start": "1400480",
    "end": "1405640"
  },
  {
    "text": "that uh David fer also tweeted out there apparent still up to today memory allocations are",
    "start": "1405640",
    "end": "1412240"
  },
  {
    "text": "the biggest resource Haws in net applications today because of how the garbage collector works and everything",
    "start": "1412240",
    "end": "1418720"
  },
  {
    "text": "like that that is where you get still today the biggest bangle for the buck so",
    "start": "1418720",
    "end": "1423760"
  },
  {
    "text": "that's why I'm starting usually with memory allocations first and compared to CPU stuff it's also less complicated",
    "start": "1423760",
    "end": "1430919"
  },
  {
    "text": "because when I start tweaking improving CPU stuff I'm in algorithmic territory",
    "start": "1430919",
    "end": "1436200"
  },
  {
    "text": "potentially very complicated right so when when I can sort of move away bite array allocation introduce some",
    "start": "1436200",
    "end": "1442120"
  },
  {
    "text": "buffering I'm getting more Bang from the box that's why I'm starting uh there good so so to be B basically to be able",
    "start": "1442120",
    "end": "1449720"
  },
  {
    "text": "to understand what I have here I'm zooming in into the pipeline so what I'm doing is I'm using in the tool the",
    "start": "1449720",
    "end": "1455279"
  },
  {
    "text": "namespace filter or the the the filter for a specific class and here because I'm looking into the publish pipeline",
    "start": "1455279",
    "end": "1461919"
  },
  {
    "text": "I'm zooming into the publish uh part and you conceptually can think of if you're investigating your order processing",
    "start": "1461919",
    "end": "1468919"
  },
  {
    "text": "logic and you have some Nam spacing logic you might know oh this is my controller over here that starts",
    "start": "1468919",
    "end": "1474279"
  },
  {
    "text": "processing the order right so you filter into the order uh order controller and",
    "start": "1474279",
    "end": "1479520"
  },
  {
    "text": "everything underneath so that you see uh the the part that is relevant and the allocations that are happening there and",
    "start": "1479520",
    "end": "1485600"
  },
  {
    "text": "what we see here we see a bunch of sort of stream reader uh stream writer allocations memory stream allocations",
    "start": "1485600",
    "end": "1492440"
  },
  {
    "text": "and stuff like that and then but if we zooming in we see here 20 megabytes of",
    "start": "1492440",
    "end": "1497880"
  },
  {
    "text": "behavior chain invoke allocations so 20 megabytes in this",
    "start": "1497880",
    "end": "1503080"
  },
  {
    "text": "entire allocation thing are relevant for the investigations that I'm doing now",
    "start": "1503080",
    "end": "1508360"
  },
  {
    "text": "let's look at the receive pipeline because we saw that's also important again I'm doing I'm looking at the",
    "start": "1508360",
    "end": "1513600"
  },
  {
    "text": "memory profile and I see a lot of noise I see sort of by array XML text reader",
    "start": "1513600",
    "end": "1518720"
  },
  {
    "text": "notes allocations all that stuff and again I'm trying to zoom in and saying what is actually relevant for my",
    "start": "1518720",
    "end": "1523919"
  },
  {
    "text": "investigations and I know based on my domain knowledge of the framework I I know that the funk of behavior context",
    "start": "1523919",
    "end": "1530640"
  },
  {
    "text": "of task allocations so 27 megabyte of allocations are actually relevant for",
    "start": "1530640",
    "end": "1535840"
  },
  {
    "text": "for me and you might be thinking but Daniel come on seriously I saw that you",
    "start": "1535840",
    "end": "1541000"
  },
  {
    "text": "had like 200 megabytes of allocations of stuff and you're zooming in on 20 megabytes it's ridiculous right wouldn't",
    "start": "1541000",
    "end": "1548240"
  },
  {
    "text": "we want to get rid of everything there it's like ideally yes but again we have",
    "start": "1548240",
    "end": "1553320"
  },
  {
    "text": "only a limited time we can't just hack and optimize everything out right so we need need to essentially use our",
    "start": "1553320",
    "end": "1559559"
  },
  {
    "text": "knowledge that we have in the application and control the things so uh",
    "start": "1559559",
    "end": "1564799"
  },
  {
    "text": "really it depends and I'm going to make here an example with what I had to consider so for example I was using msmq",
    "start": "1564799",
    "end": "1572760"
  },
  {
    "text": "large portions of the allocations I had on this memory screenshots they came actually from msmq msmq is a piece of",
    "start": "1572760",
    "end": "1580240"
  },
  {
    "text": "middleware infrastructure that is done Microsoft is not touching it it's out of my control right why would I care about",
    "start": "1580240",
    "end": "1586559"
  },
  {
    "text": "doing it plus what's also important for us that's a diminishing user base so most people these days they have",
    "start": "1586559",
    "end": "1592919"
  },
  {
    "text": "migrated their stuff into the clouds they're using as service b um sqs SNS",
    "start": "1592919",
    "end": "1597960"
  },
  {
    "text": "they're using rabid mq and premises so if I would investigate into msmq my time",
    "start": "1597960",
    "end": "1603200"
  },
  {
    "text": "I would not be benefiting a huge user base then um it's might also be possible",
    "start": "1603200",
    "end": "1609440"
  },
  {
    "text": "that I don't simply don't have knowledge right in that user in that code part and that can happen to you as well and if",
    "start": "1609440",
    "end": "1616000"
  },
  {
    "text": "you don't have knowledge you can't optimize it so that means you would first have to build up the knowledge ramp up and talk to your colleagues so",
    "start": "1616000",
    "end": "1623600"
  },
  {
    "text": "maybe it's not worth your time and what I'm also trying to to give away here I usually apply the principle of 1%",
    "start": "1623600",
    "end": "1630760"
  },
  {
    "text": "improvements over time and essentially the net team does something very similar",
    "start": "1630760",
    "end": "1635799"
  },
  {
    "text": "if you have ever read sort of the Steven Tobe the book of Tobe blog post right the I don't know giant thousand page",
    "start": "1635799",
    "end": "1641960"
  },
  {
    "text": "blog post what they're doing they have hundreds and thousands of little performance tweaks across the net",
    "start": "1641960",
    "end": "1647440"
  },
  {
    "text": "runtime and over time those little tweaks the compounding effect of those actually gives you a big impact so I'm",
    "start": "1647440",
    "end": "1653760"
  },
  {
    "text": "trying to not get too hung up and make and just making a bunch of optimizations there um yes because iterative gains on",
    "start": "1653760",
    "end": "1661360"
  },
  {
    "text": "the hot path will overall lead to bigger impact over time right you have got to be patient but it will come I can",
    "start": "1661360",
    "end": "1667720"
  },
  {
    "text": "guarantee you that good and then last but not least it's all the pipeline",
    "start": "1667720",
    "end": "1673039"
  },
  {
    "text": "optimizations that I can do that are independent of msmq they they benefit",
    "start": "1673039",
    "end": "1678200"
  },
  {
    "text": "all the users regardless of where they're running right so I want to focus that on that so at the end of the day",
    "start": "1678200",
    "end": "1684519"
  },
  {
    "text": "what I want to say to you is with this example the context matters and you out there in your application in your",
    "start": "1684519",
    "end": "1690919"
  },
  {
    "text": "systems you are the expert right so talk with your team think about the tradeoffs",
    "start": "1690919",
    "end": "1696159"
  },
  {
    "text": "and apply your best thinking in your teams to do those types of performance uh investigations optimization to sift",
    "start": "1696159",
    "end": "1703279"
  },
  {
    "text": "through that noise right that's what you need to do because the profiling session is just just the beginning essentially",
    "start": "1703279",
    "end": "1710440"
  },
  {
    "text": "good so let me zoom in a little bit more so what I what I'm doing here is I'm",
    "start": "1710440",
    "end": "1715519"
  },
  {
    "text": "looking more into sort of memory allocations that are happening there so for example I'm filtering into the into",
    "start": "1715519",
    "end": "1722240"
  },
  {
    "text": "the pipeline name space and then I see a bunch of sort of funk of task and behavior display class allocation and if",
    "start": "1722240",
    "end": "1730000"
  },
  {
    "text": "I'm zooming in even further I see that there is lots and lots of display class allocation so that gives me already a",
    "start": "1730000",
    "end": "1735840"
  },
  {
    "text": "hint something is going on maybe have some sort of closure allocations and again you can use the same trick you can",
    "start": "1735840",
    "end": "1742600"
  },
  {
    "text": "filter into your order management uh namespace into or shipping management whatever you call those where you know",
    "start": "1742600",
    "end": "1748960"
  },
  {
    "text": "you are doing some type of performance investigations once we have sort of gone",
    "start": "1748960",
    "end": "1754440"
  },
  {
    "text": "gotten an overview over the memory characteristics of the code I told you at the beginning I always do two",
    "start": "1754440",
    "end": "1760000"
  },
  {
    "text": "profiling sessions I do a memory profile and I do a CPU profile okay so now we",
    "start": "1760000",
    "end": "1765679"
  },
  {
    "text": "have to look into CPU and one of the really cool tools that you can sort of",
    "start": "1765679",
    "end": "1770960"
  },
  {
    "text": "use to uh to get a very quick understanding of what's going on in terms of CPU is the concept of flame",
    "start": "1770960",
    "end": "1778399"
  },
  {
    "text": "graphs and this is probably a little bit overwhelming and probably way too small",
    "start": "1778399",
    "end": "1783840"
  },
  {
    "text": "but I'm going to tell you what's on the flame graph written on the flame graph in this black font is actually not",
    "start": "1783840",
    "end": "1790120"
  },
  {
    "text": "really relevant because one of the cool things about flame graphs is you have a bar right you have up there and you we",
    "start": "1790120",
    "end": "1796880"
  },
  {
    "text": "read it from top to bottom bottom so you have a bar and it has a length and then",
    "start": "1796880",
    "end": "1801960"
  },
  {
    "text": "underneath you have other bars that are sort of going down like this and what it means is the topmost bar it the length",
    "start": "1801960",
    "end": "1809240"
  },
  {
    "text": "represents sort of how long it takes for everything to be executed with all the",
    "start": "1809240",
    "end": "1814840"
  },
  {
    "text": "bars underneath that's basically a flame graph and without actually having",
    "start": "1814840",
    "end": "1819919"
  },
  {
    "text": "concrete understanding of Mill seconds and stuff like that or percentage I can just look at this at this flame graph",
    "start": "1819919",
    "end": "1827200"
  },
  {
    "text": "and I can get a conceptual understanding of what's going on right so because what I can do is I can see there's a bunch of",
    "start": "1827200",
    "end": "1833720"
  },
  {
    "text": "red stuff over here and there's a bunch of orange stuff and with my knowledge I know this is actually domain specific",
    "start": "1833720",
    "end": "1840480"
  },
  {
    "text": "code the orange stuff and I can see there is a relationship between the red stuff and the orange stuff and the red",
    "start": "1840480",
    "end": "1846440"
  },
  {
    "text": "stuff is way too much so what that means to me with my spider senses is well there is way too much infrastructure",
    "start": "1846440",
    "end": "1852480"
  },
  {
    "text": "code being executed that takes a lot of CP away that you might be able to optimize and I can do that just by",
    "start": "1852480",
    "end": "1859919"
  },
  {
    "text": "looking at a frame graph and when you zoom in you see that even better right essentially the orange part is super",
    "start": "1859919",
    "end": "1866480"
  },
  {
    "text": "super uh small but if you're saying yeah flame graphs okay Daniel I think I",
    "start": "1866480",
    "end": "1872799"
  },
  {
    "text": "understood it but I'm not sure if I'm going to use it well the every tool has usually sort of hotspots overviews you",
    "start": "1872799",
    "end": "1879120"
  },
  {
    "text": "can go into so for example do do race has this hotspot over you that shows you",
    "start": "1879120",
    "end": "1884760"
  },
  {
    "text": "for a specific Cod path shows you the hotspots and what I can do here is I can",
    "start": "1884760",
    "end": "1889919"
  },
  {
    "text": "just look at the hotspot and I can see percentages of sort of the the relationships of the things and when I",
    "start": "1889919",
    "end": "1896320"
  },
  {
    "text": "zoom in I can see that 20% CPU is spent on this Behavior chain in voke and 12.3%",
    "start": "1896320",
    "end": "1903760"
  },
  {
    "text": "is uh sort of spent on the other one so for me that means 32.3% of the CPU is entirely spent on",
    "start": "1903760",
    "end": "1911279"
  },
  {
    "text": "infrastructure stuff that hopefully I can at least make smaller or potentially even get fully removed ideally and of",
    "start": "1911279",
    "end": "1919639"
  },
  {
    "text": "the on the receiving end it is slightly less dramatic but when I zoom in I can",
    "start": "1919639",
    "end": "1925080"
  },
  {
    "text": "see here that I have 99.2% and 4.8% of infrastructure code",
    "start": "1925080",
    "end": "1931120"
  },
  {
    "text": "that is being executed there so basically a seventh of the CPU that I'm using for executing the receive pipeline",
    "start": "1931120",
    "end": "1938799"
  },
  {
    "text": "is spent on stuff that I probably don't want to have good now I understand",
    "start": "1938799",
    "end": "1944240"
  },
  {
    "text": "what's going on right so and that helps me to sort of navigate that m and now I can actually start making some",
    "start": "1944240",
    "end": "1950519"
  },
  {
    "text": "improvements um and let's look at what we what we can do in terms of in",
    "start": "1950519",
    "end": "1956440"
  },
  {
    "text": "improvements so before I even really improve is I usually put tests in place",
    "start": "1956440",
    "end": "1962919"
  },
  {
    "text": "if they're not tests there because without tests right we might be actually making improvements but we will actually",
    "start": "1962919",
    "end": "1970480"
  },
  {
    "text": "it will be faster but it might be absolutely broken right and then we're not helping at all and when we're just",
    "start": "1970480",
    "end": "1976279"
  },
  {
    "text": "building the performance C culture and we're shipping broken stuff I can guarantee you we'll get no budget in",
    "start": "1976279",
    "end": "1981919"
  },
  {
    "text": "your project to do more of these types of Investigations so luckily uh in my",
    "start": "1981919",
    "end": "1987519"
  },
  {
    "text": "case we already had a bunch of tests but what I was thinking I had a specific Improvement that I might be able to do",
    "start": "1987519",
    "end": "1993799"
  },
  {
    "text": "just by doing these investigations in my mind and so what I did is like okay I'm going to mock around with some State",
    "start": "1993799",
    "end": "2000120"
  },
  {
    "text": "Management and things and like that so what I did is I put tests in place that make sure that the the state that I",
    "start": "2000120",
    "end": "2006960"
  },
  {
    "text": "accumulate per pipeline execution never leaks out so I put a bit more test cases into place right so I'm not going to",
    "start": "2006960",
    "end": "2015120"
  },
  {
    "text": "talk about about the improvements here but as you can go read it up it's 10 f 10 times",
    "start": "2015120",
    "end": "2021840"
  },
  {
    "text": "faster execution with compiled expression trees or how we achieved five times faster pipeline execution by",
    "start": "2021840",
    "end": "2027320"
  },
  {
    "text": "removing closure allocations uh these the block posts are there if you're interested to read up to read things up",
    "start": "2027320",
    "end": "2034399"
  },
  {
    "text": "there and I know these are all click ba titles but but we actually improved the",
    "start": "2034399",
    "end": "2040480"
  },
  {
    "text": "throughput of the pipeline with the performance investigations 10 times and another five times after we already have",
    "start": "2040480",
    "end": "2046360"
  },
  {
    "text": "achieved a 10 times Improvement by doing these types of performance investigations good once I have sort of",
    "start": "2046360",
    "end": "2054440"
  },
  {
    "text": "done improvements and again this is this is I call this the inner loop it's usually not just improve and Benchmark",
    "start": "2054440",
    "end": "2061320"
  },
  {
    "text": "and done if I'm lucky sometimes it's improve Benchmark a bit see in what",
    "start": "2061320",
    "end": "2066878"
  },
  {
    "text": "direction Things Are going to get a good good feeling and that sometimes triggers new ideas and then I improve again",
    "start": "2066879",
    "end": "2072200"
  },
  {
    "text": "Benchmark again improve again and Benchmark again right but let's have a look what we can do so what I usually do",
    "start": "2072200",
    "end": "2078560"
  },
  {
    "text": "I use this hack what I would say U because one of the things that is sometimes tricky is how do I actually",
    "start": "2078560",
    "end": "2085240"
  },
  {
    "text": "get stuff um really under a benchmark right because when you read all these",
    "start": "2085240",
    "end": "2091118"
  },
  {
    "text": "blog posts about Benchmark net people usually show you like U string concatenation string Builder this and",
    "start": "2091119",
    "end": "2096960"
  },
  {
    "text": "that or calling a static method and that's nice but I can tell you the code that I write is never that clean right",
    "start": "2096960",
    "end": "2102839"
  },
  {
    "text": "because usually software has the pendencies is intertwined is messy sort",
    "start": "2102839",
    "end": "2108599"
  },
  {
    "text": "of grows over time right so how do I take this and just measure it like if",
    "start": "2108599",
    "end": "2114160"
  },
  {
    "text": "you're lucky you might be able to add internals visible too and call some static method in your code right but you",
    "start": "2114160",
    "end": "2121280"
  },
  {
    "text": "might want to sort of um come up with an approach that allows you to sort of um",
    "start": "2121280",
    "end": "2126960"
  },
  {
    "text": "to sort of find the right tradeos and yes so software that I write or software",
    "start": "2126960",
    "end": "2132440"
  },
  {
    "text": "that i' I've looked at is usually quite messy like all the wiring on this picture or as Gordon Ramsey would say",
    "start": "2132440",
    "end": "2139119"
  },
  {
    "text": "software is usually a disgusting festering mess but it makes money out there right so we have to deal with this",
    "start": "2139119",
    "end": "2146119"
  },
  {
    "text": "so what I usually do is I create a new repository I and I extract the code I",
    "start": "2146119",
    "end": "2153480"
  },
  {
    "text": "copy paste code and you might be thinking oh Daniel but copy pasting code that's the source of all evil that's how",
    "start": "2153480",
    "end": "2160160"
  },
  {
    "text": "the mess starts and you're you're right and wrong at the same time because what I'm doing is I'm doing sort of a",
    "start": "2160160",
    "end": "2166040"
  },
  {
    "text": "controlled experiment so I take the code on the question and I copy paste it into",
    "start": "2166040",
    "end": "2171560"
  },
  {
    "text": "a dedicated repository or a folder within the same repository I start there",
    "start": "2171560",
    "end": "2177160"
  },
  {
    "text": "and then what I'm doing is I sort of adjust the code that I have to the Bare Essentials to create a controllable",
    "start": "2177160",
    "end": "2184359"
  },
  {
    "text": "environment because my my teammates will might be still working on it it might sort of move forward so I want to have a",
    "start": "2184359",
    "end": "2190800"
  },
  {
    "text": "controllable experiment where I strip away the stuff that is not relevant and here I have a screenshot of what I did",
    "start": "2190800",
    "end": "2197400"
  },
  {
    "text": "so I basically took conceptually I took the entire pipeline infrastructure code",
    "start": "2197400",
    "end": "2202640"
  },
  {
    "text": "and copy pasted it out into a dedicated repository and then what I've what I've",
    "start": "2202640",
    "end": "2209240"
  },
  {
    "text": "done there is I asked myself a few question what is actually relevant so I removed all the behaviors that are not",
    "start": "2209240",
    "end": "2215280"
  },
  {
    "text": "relevant out of that code base luckily it was already open following open close principle and then I replaced the",
    "start": "2215280",
    "end": "2222640"
  },
  {
    "text": "dependence injection container with creating relevant classes directly because my goal is not to to basically",
    "start": "2222640",
    "end": "2228920"
  },
  {
    "text": "come up with a blog post that compares structure map against alac against the dependency section of Microsoft right I",
    "start": "2228920",
    "end": "2235440"
  },
  {
    "text": "want to get this out of my way because it just blurs The Benchmark uh not relevant then I also replaced all the I",
    "start": "2235440",
    "end": "2242880"
  },
  {
    "text": "operations with complet the task and some of you who might be a little bit more advanced bced with acing and weight",
    "start": "2242880",
    "end": "2249640"
  },
  {
    "text": "and stuff like that might be thinking but Daniel I got you you are cheating right because actually when you're not",
    "start": "2249640",
    "end": "2255800"
  },
  {
    "text": "really yielding the threat then um the things are completely different and when you're ret turning complet the task",
    "start": "2255800",
    "end": "2262359"
  },
  {
    "text": "you're right and wrong at the same time because what my goal is I'm not trying to measure concurrency I'm trying to or",
    "start": "2262359",
    "end": "2269800"
  },
  {
    "text": "how it behaves on the concurrent execution I'm trying to actually uh sort of measure the pipeline execution speed",
    "start": "2269800",
    "end": "2277520"
  },
  {
    "text": "so iob bound stuff or yielding the threet doesn't really matter that's additional benefit I get out once I",
    "start": "2277520",
    "end": "2283880"
  },
  {
    "text": "start yielding but anyway what I want to say here is again context does matter uh",
    "start": "2283880",
    "end": "2289640"
  },
  {
    "text": "when you're when you're doing these types of sort of trimming down to ex to relevant stuff why do I show this to you",
    "start": "2289640",
    "end": "2296560"
  },
  {
    "text": "I strongly believe that when you're starting on becoming performance aware",
    "start": "2296560",
    "end": "2301720"
  },
  {
    "text": "this sort of copy pasting the code fiddling around with it a bit making controlled experiment gets you on a",
    "start": "2301720",
    "end": "2308319"
  },
  {
    "text": "journey to build this performance awareness culture right because you can't go to a conference listen to this",
    "start": "2308319",
    "end": "2315839"
  },
  {
    "text": "Daniel guy on stage and then go on Monday to work and say now we're performance aware because I listen to",
    "start": "2315839",
    "end": "2322000"
  },
  {
    "text": "this talk woohoo awesome right this is going to take you potentially weeks and months or years to build this up because",
    "start": "2322000",
    "end": "2328640"
  },
  {
    "text": "you're becoming the trusted the trusted person to essentially create this culture and this sort of approach gets",
    "start": "2328640",
    "end": "2336200"
  },
  {
    "text": "you sort of 80% rule moves you forward right because it it allows you to not",
    "start": "2336200",
    "end": "2342800"
  },
  {
    "text": "think about how can I reliably executes benchmarks on my cicd system because",
    "start": "2342800",
    "end": "2348280"
  },
  {
    "text": "that's a whole other topic right or how do I even have to set up my cic system",
    "start": "2348280",
    "end": "2353400"
  },
  {
    "text": "system do I need dedicated Hardware or can I run it on my shared devops Runner or what are the consequences of that",
    "start": "2353400",
    "end": "2359800"
  },
  {
    "text": "right all these types of additional questions you don't have to ask yourself so that's why I'm showing you this",
    "start": "2359800",
    "end": "2365480"
  },
  {
    "text": "approach by copy pasting code again the tradeoffs are really important to me at the beginning I told you",
    "start": "2365480",
    "end": "2376280"
  },
  {
    "text": "that I sort of started on this journey conceptualizing benchmarks with it's",
    "start": "2376520",
    "end": "2382400"
  },
  {
    "text": "similar to a unit test but this is actually not a good analogy or it's not",
    "start": "2382400",
    "end": "2388920"
  },
  {
    "text": "even a good mindset to have because what is a unit test a unit test usually is",
    "start": "2388920",
    "end": "2395119"
  },
  {
    "text": "you have a class you have a class with attributes the result is it's either green or it's red so it's passed or",
    "start": "2395119",
    "end": "2400920"
  },
  {
    "text": "failed or maybe ignored right hopefully not too many tests are ignored but a benchmark is completely different so",
    "start": "2400920",
    "end": "2408880"
  },
  {
    "text": "first and foremost the result that we're getting out of a benchmark is we're getting a distribution of values right",
    "start": "2408880",
    "end": "2416160"
  },
  {
    "text": "we're getting averages means standard deviations and stuff like that so what",
    "start": "2416160",
    "end": "2421240"
  },
  {
    "text": "that means is the result is not green and red right we're getting these distributions and in order to get these",
    "start": "2421240",
    "end": "2427760"
  },
  {
    "text": "distributions we need to execute the Benchmark hundreds and thousands of times so that means those benchmarks",
    "start": "2427760",
    "end": "2434960"
  },
  {
    "text": "they take seconds minutes even hours sometimes depending on how much we're essentially benchmarking right so that's",
    "start": "2434960",
    "end": "2441079"
  },
  {
    "text": "a huge difference there so we need to essentially execute those benchmarks",
    "start": "2441079",
    "end": "2447119"
  },
  {
    "text": "until the until they are stable we're getting stable results to actually know that we get the statistically",
    "start": "2447119",
    "end": "2453440"
  },
  {
    "text": "significant results there and again they're taking minutes or to sort of execute and what's also important is",
    "start": "2453440",
    "end": "2461480"
  },
  {
    "text": "with unit tests or with integration tests or acceptance tests whatever you want to call those we usually focus on",
    "start": "2461480",
    "end": "2468000"
  },
  {
    "text": "on sort of all sort of the edge cases but because benchmarks takes minutes or",
    "start": "2468000",
    "end": "2473079"
  },
  {
    "text": "sometimes even hours to execute we need to focus on the most impactful common",
    "start": "2473079",
    "end": "2478720"
  },
  {
    "text": "cases for for things that are on the frequently used or hot path right and with the least amount of permutations",
    "start": "2478720",
    "end": "2486000"
  },
  {
    "text": "because the more permutations we have in the benchmarks the more execution time",
    "start": "2486000",
    "end": "2491040"
  },
  {
    "text": "it it takes and the longer it takes until we get results so we need to make careful tradeoffs",
    "start": "2491040",
    "end": "2497040"
  },
  {
    "text": "there and yeah what I usually want to advise you if you're doing these types",
    "start": "2497040",
    "end": "2502440"
  },
  {
    "text": "of benchmarks derive when you can the permutations and the values you input",
    "start": "2502440",
    "end": "2507680"
  },
  {
    "text": "from actual production cases right because then you know that you're benchmarking the code under the values",
    "start": "2507680",
    "end": "2514599"
  },
  {
    "text": "under the under the constraints under the restrictions of your production system and that gives you actually the",
    "start": "2514599",
    "end": "2519960"
  },
  {
    "text": "sign significant result so I did that so what I've done is I've essentially um",
    "start": "2519960",
    "end": "2525960"
  },
  {
    "text": "created a pipeline execution Benchmark and don't worry too much about this code I'm going to quickly walk you through",
    "start": "2525960",
    "end": "2532800"
  },
  {
    "text": "but it's more about sort of the setting and sort of the trade-offs that I made on this slide and not about the actual",
    "start": "2532800",
    "end": "2538079"
  },
  {
    "text": "code so I wrote this sort of pipeline execution uh Benchmark and if you zoom",
    "start": "2538079",
    "end": "2543359"
  },
  {
    "text": "in what I'm doing here I'm basically using the global setup to set up the PIP P line I'm not interested in measuring",
    "start": "2543359",
    "end": "2549280"
  },
  {
    "text": "the warm-up time of the pipeline if there is any warm-up I just want to make sure the pipeline is there and then I",
    "start": "2549280",
    "end": "2554559"
  },
  {
    "text": "can executed so that's what I'm doing here then what I've done is I've thought about what are permutation values I want",
    "start": "2554559",
    "end": "2561839"
  },
  {
    "text": "to input into the pipeline a benchmark and I went actually through Salesforce",
    "start": "2561839",
    "end": "2566880"
  },
  {
    "text": "customer cases and whatnot and I looked at how many things do we put into the pipeline how deep is a pipeline and I",
    "start": "2566880",
    "end": "2573400"
  },
  {
    "text": "came up with values like 10 20 and 40 so I'm saying okay in the wild with stuff",
    "start": "2573400",
    "end": "2579280"
  },
  {
    "text": "that we add we we have these three cases that sort of standardize the deepness of the pipeline so that I can actually",
    "start": "2579280",
    "end": "2585920"
  },
  {
    "text": "understand how does the deepness impact sort of the execution of of the pipeline right and I could have come up with 50",
    "start": "2585920",
    "end": "2593280"
  },
  {
    "text": "values here but again if I do that then this takes ages in order to execute so I",
    "start": "2593280",
    "end": "2598800"
  },
  {
    "text": "need to make reasonable tradeoffs there and the next thing that I'm what I'm doing is it's on the top I'm adding the",
    "start": "2598800",
    "end": "2605599"
  },
  {
    "text": "short run attribute and I'm adding the memory diagnoser memory diagnoser tells me how much memory this consumes short",
    "start": "2605599",
    "end": "2612200"
  },
  {
    "text": "run is basically just a way to say just do a quick run uh so that I get some results but it's not yet statistically",
    "start": "2612200",
    "end": "2619720"
  },
  {
    "text": "really significant um but what I want to do is right because I'm in this sort of Benchmark improved type of loop I don't",
    "start": "2619720",
    "end": "2626559"
  },
  {
    "text": "want to spend 10 minutes every time I tweak my Benchmark I might want to spend one minute to get some results looking",
    "start": "2626559",
    "end": "2633160"
  },
  {
    "text": "am I going in the right direction yes no course correct and go and only after",
    "start": "2633160",
    "end": "2638520"
  },
  {
    "text": "these iterations when I know hm I'm on the right track then I do actual long run which probably takes 10 minutes 12",
    "start": "2638520",
    "end": "2646000"
  },
  {
    "text": "minutes in order to get some some statistically significant results and at the end I basically just execute the",
    "start": "2646000",
    "end": "2653319"
  },
  {
    "text": "before and the after compare it against uh each each other so that's pretty much",
    "start": "2653319",
    "end": "2658720"
  },
  {
    "text": "the pipeline execution Benchmark good so now if you if you",
    "start": "2658720",
    "end": "2664359"
  },
  {
    "text": "execute this you get results and in this specific case it looked like that and here as we can see we have the the",
    "start": "2664359",
    "end": "2671119"
  },
  {
    "text": "before and the after so after my optimizations we have the pipeline depth and we can see that my improvements",
    "start": "2671119",
    "end": "2677960"
  },
  {
    "text": "actually did lead to actual improvements so the chance zero garbage is is gone we",
    "start": "2677960",
    "end": "2683720"
  },
  {
    "text": "have no more allocations and it's actually five five times faster more or",
    "start": "2683720",
    "end": "2689240"
  },
  {
    "text": "less if I can do the math so we can see that the improvements that we have done they're now measured execute ex measured",
    "start": "2689240",
    "end": "2696200"
  },
  {
    "text": "compared against each other and we know we are on the right track good but what",
    "start": "2696200",
    "end": "2701400"
  },
  {
    "text": "are the crucial things you should take into account in addition to what I just talked about what are the best practices",
    "start": "2701400",
    "end": "2709079"
  },
  {
    "text": "for a benchmark so a benchmark should follow the single responsibility",
    "start": "2709079",
    "end": "2714240"
  },
  {
    "text": "principle so what that means is I've I've quickly showed you I took the warmup and took it into the global setup",
    "start": "2714240",
    "end": "2721480"
  },
  {
    "text": "so I've basically separated the case of warming up from the execution right",
    "start": "2721480",
    "end": "2726599"
  },
  {
    "text": "because I only care about the execution if I put both things into the same Benchmark I have too many permutations",
    "start": "2726599",
    "end": "2733200"
  },
  {
    "text": "I'm I'm I'm sort of uh moning the water and therefore that's not that would not",
    "start": "2733200",
    "end": "2739480"
  },
  {
    "text": "be a good Benchmark so I need to focus on a single thing with only the parameters or permutations that are",
    "start": "2739480",
    "end": "2745480"
  },
  {
    "text": "relevant for that single thing then ideally or best if it has no side",
    "start": "2745480",
    "end": "2751000"
  },
  {
    "text": "effects because one of the things that happens in benchmarking is right when you have let's say a counter or a B",
    "start": "2751000",
    "end": "2757359"
  },
  {
    "text": "array or something like that that sort of grows over time over the execution and that influences your further",
    "start": "2757359",
    "end": "2764079"
  },
  {
    "text": "iterations of The Benchmark then you have side effects and then that influences what you measure and then",
    "start": "2764079",
    "end": "2770640"
  },
  {
    "text": "your results might not be correct so you need to take this into account then a",
    "start": "2770640",
    "end": "2775720"
  },
  {
    "text": "good Benchmark always make sure that it pre it prevents that code elimination",
    "start": "2775720",
    "end": "2781119"
  },
  {
    "text": "because the chit today is pretty smart right when you have code that is not going to be consumed what is essentially",
    "start": "2781119",
    "end": "2787240"
  },
  {
    "text": "is going to happen is the code will be removed and then you measure nothing right so you need to make sure that the",
    "start": "2787240",
    "end": "2793319"
  },
  {
    "text": "relevant parts are there and not eliminated and sort of what I can advise",
    "start": "2793319",
    "end": "2799720"
  },
  {
    "text": "you is um usually take a library like",
    "start": "2799720",
    "end": "2804640"
  },
  {
    "text": "benchmark.us a stopwatch or build that yourself use something that has already",
    "start": "2810480",
    "end": "2815880"
  },
  {
    "text": "best practices built in to put you onto the pit of success and I prefer doing this I'm not",
    "start": "2815880",
    "end": "2823800"
  },
  {
    "text": "religious about it but I want my benchmarks be to be as explicit as",
    "start": "2823800",
    "end": "2829599"
  },
  {
    "text": "possible so what that means is if I can I will not be using VAR as an example I",
    "start": "2829599",
    "end": "2835800"
  },
  {
    "text": "will be making sure that I'm not using implicit casting or stuff like that why is that relevant because when I look at",
    "start": "2835800",
    "end": "2842319"
  },
  {
    "text": "the Benchmark and I'm trying to understand what's going on I want to make sure that The Benchmark code is not",
    "start": "2842319",
    "end": "2848359"
  },
  {
    "text": "in my way I want to make sure that I can focus on the code that I'm actually uh improving and measuring on right so I",
    "start": "2848359",
    "end": "2854880"
  },
  {
    "text": "want to be make this explicit so that the cognitive overhead the cognitive load is not too big for me to handle it",
    "start": "2854880",
    "end": "2863800"
  },
  {
    "text": "and this one maybe sounds obvious but avoid running any other resources that",
    "start": "2863800",
    "end": "2870040"
  },
  {
    "text": "on on that machine while you're benchmarking because it's so tempting and I've done this several times I can",
    "start": "2870040",
    "end": "2875400"
  },
  {
    "text": "tell you you're doing sort of Benchmark Improvement right and then in your calendar pops up next meeting and then",
    "start": "2875400",
    "end": "2882079"
  },
  {
    "text": "you're in a two a zo or teams call and you're like ah I could just run this Benchmark while we're having this boring",
    "start": "2882079",
    "end": "2888359"
  },
  {
    "text": "conversation with my boss right and then you start running it and the thing is those tools I don't want to bash on",
    "start": "2888359",
    "end": "2894640"
  },
  {
    "text": "teams but those tools are quite heavy CPU and GPU intensive right and that",
    "start": "2894640",
    "end": "2900200"
  },
  {
    "text": "load on your machine will influence the results that you're getting so ideally",
    "start": "2900200",
    "end": "2905240"
  },
  {
    "text": "do the let it go to drink a coffee and when your boss sees you the 10th time on",
    "start": "2905240",
    "end": "2910680"
  },
  {
    "text": "the same day at the coffee machine you're saying boss remember I told you I'm going to squeeze out 5% throughput",
    "start": "2910680",
    "end": "2916680"
  },
  {
    "text": "out of our system and make you happy let's see you again at the salary discussions end of the year and your",
    "start": "2916680",
    "end": "2922760"
  },
  {
    "text": "boss will be happy I can assure you good I can highly recommend",
    "start": "2922760",
    "end": "2929160"
  },
  {
    "text": "benchmark.us by the net performance teams net runtime teams to measure all",
    "start": "2929599",
    "end": "2934960"
  },
  {
    "text": "kinds of things and compare all kinds of things things because at the end of the day benchmarking is really hard and",
    "start": "2934960",
    "end": "2941160"
  },
  {
    "text": "benchmarking Donnet prevents you or protects you from falling into common pitfalls that you would be exposed to",
    "start": "2941160",
    "end": "2948319"
  },
  {
    "text": "because one thing that it does it creates different processes you create it creates isolated processes the stuff",
    "start": "2948319",
    "end": "2954280"
  },
  {
    "text": "is executed under so that static state does not leak right so by by definition",
    "start": "2954280",
    "end": "2959440"
  },
  {
    "text": "you're already more likely to have no side effects as an example right or it prevents that code elimination by when",
    "start": "2959440",
    "end": "2966280"
  },
  {
    "text": "you return return something it already consumes it so the chit knows it's it's going to be consumed it will not be",
    "start": "2966280",
    "end": "2971880"
  },
  {
    "text": "removed away it has consumer classes to explicitly Mark stuff as as to be",
    "start": "2971880",
    "end": "2977040"
  },
  {
    "text": "consumed it also executes your stuff in several iterations until the results are",
    "start": "2977040",
    "end": "2983000"
  },
  {
    "text": "stable and then it measures measures that and gives you statistically relevant results right so it has solved",
    "start": "2983000",
    "end": "2990720"
  },
  {
    "text": "all of the problems you're going to be exposed to anyway good now that we have that out of",
    "start": "2990720",
    "end": "2997520"
  },
  {
    "text": "the way I want to sort of zoom in I told you benchmarks should only ever go for",
    "start": "2997520",
    "end": "3003400"
  },
  {
    "text": "the most common cases and should not really go into edge cases but the next example that I'm showing you is a",
    "start": "3003400",
    "end": "3010319"
  },
  {
    "text": "deviation from from that rule because I actually also went and actually created a benchmark to compare exception cases",
    "start": "3010319",
    "end": "3018720"
  },
  {
    "text": "why did I do that because one of the things that usually here right at conference you get lots and lots of best",
    "start": "3018720",
    "end": "3024920"
  },
  {
    "text": "best practices and I strong ly believe that best practices there are actually",
    "start": "3024920",
    "end": "3031119"
  },
  {
    "text": "the name is pretty wrong because it implies that they're always the best but sometimes you need to deviate from best",
    "start": "3031119",
    "end": "3037640"
  },
  {
    "text": "practice you need to use your brain your knowledge to understand in this specific case it might might actually be good to",
    "start": "3037640",
    "end": "3044480"
  },
  {
    "text": "deviate from it so that's what I did here because in our case when we when stuff happens in production we get",
    "start": "3044480",
    "end": "3051760"
  },
  {
    "text": "thousands and thousands of concurrences exception happening and the messages are getting moved into the airbe so the",
    "start": "3051760",
    "end": "3057559"
  },
  {
    "text": "execution speed of the framework matters in exception cases so that's what I did is I created basically a pipeline with a",
    "start": "3057559",
    "end": "3065119"
  },
  {
    "text": "deepness and at the end of the pipeline on the lowest part I added something that froze an exception and then that",
    "start": "3065119",
    "end": "3072160"
  },
  {
    "text": "exception bubbles up through the entire call stack and sort of crashes out um on",
    "start": "3072160",
    "end": "3078559"
  },
  {
    "text": "the other hand on the other other end and then I can actually measure that's what I I've done here um how the code",
    "start": "3078559",
    "end": "3087079"
  },
  {
    "text": "before and after behave behaves in terms of exception cases good I'm going to skip this good",
    "start": "3087079",
    "end": "3095000"
  },
  {
    "text": "so but once we have done that once we have sort of done the improved benchmarking Loop uh we I always advise",
    "start": "3095000",
    "end": "3102640"
  },
  {
    "text": "you to actually take the improvements that you have and put it back into the",
    "start": "3102640",
    "end": "3108480"
  },
  {
    "text": "test harness and profile it again why does this matter well one of the things",
    "start": "3108480",
    "end": "3114079"
  },
  {
    "text": "that you do with Benchmark with Benchmark you compare a specific subset of stuff right but you don't know yet",
    "start": "3114079",
    "end": "3122200"
  },
  {
    "text": "how these micro improvements over here are actually going to have a compounding effect across your entire application",
    "start": "3122200",
    "end": "3130160"
  },
  {
    "text": "right so you want to see because maybe you see p in this example pipeline execution is five times faster but if",
    "start": "3130160",
    "end": "3137640"
  },
  {
    "text": "you put it into the grand scheme of things you might only get 5% fruit Improvement or 10% fruit Improvement or",
    "start": "3137640",
    "end": "3144559"
  },
  {
    "text": "your entire system but you want to have the cont contextual understanding that's why once I'm done with improvements I",
    "start": "3144559",
    "end": "3151799"
  },
  {
    "text": "always put it back into the harness and then compare the before and after on this side we have the before and here we",
    "start": "3151799",
    "end": "3158960"
  },
  {
    "text": "have the after and as we can see here we had 20 megabyte of behavior allocations",
    "start": "3158960",
    "end": "3164079"
  },
  {
    "text": "and on the right side those are gone right so I'm taking exact same sort of snapshots and I'm comparing it before",
    "start": "3164079",
    "end": "3170240"
  },
  {
    "text": "and after then I look into the receive Pipeline and I can see here previously I",
    "start": "3170240",
    "end": "3175960"
  },
  {
    "text": "had 20 7 megabytes of function delegate allocations they're no longer there on",
    "start": "3175960",
    "end": "3181599"
  },
  {
    "text": "the right side I can look into the stack Ray I can see that we went from having",
    "start": "3181599",
    "end": "3188280"
  },
  {
    "text": "lots and lots of infrastructure code to no more infrastructure code on the other side so I've been able to make some",
    "start": "3188280",
    "end": "3194680"
  },
  {
    "text": "changes that make things very fast then I can again I can use the technique that I used before I",
    "start": "3194680",
    "end": "3201799"
  },
  {
    "text": "sort of can zoom into the Nam space I can filter into that and then I see when",
    "start": "3201799",
    "end": "3206839"
  },
  {
    "text": "the before and after is actually better and I can actually tap myself on the shoulder because we see that all the 15",
    "start": "3206839",
    "end": "3213720"
  },
  {
    "text": "megabyte of allocation and stuff like that it's all gone they're no longer there but of course we also again we",
    "start": "3213720",
    "end": "3220520"
  },
  {
    "text": "want to have two views we just did memory remember you want to also want to look at the CPU stuff so let's look at",
    "start": "3220520",
    "end": "3227160"
  },
  {
    "text": "the CPU we can use our beloved frame gra flame graphs again uh we have the before",
    "start": "3227160",
    "end": "3233880"
  },
  {
    "text": "and then we sort of when we we when we zoom in into the after let me compare",
    "start": "3233880",
    "end": "3240920"
  },
  {
    "text": "this on side by side we can see sort of the relationship between here lots of",
    "start": "3240920",
    "end": "3246240"
  },
  {
    "text": "red stuff a bit of orange stuff towards less red stuff more orange stuff",
    "start": "3246240",
    "end": "3252040"
  },
  {
    "text": "we can actually see how now the business code starts to sort of high highlight up so we have managed here in this specific",
    "start": "3252040",
    "end": "3258920"
  },
  {
    "text": "example to reduce the 32.3% CPU overhead on the publish operations and the 14% of",
    "start": "3258920",
    "end": "3266359"
  },
  {
    "text": "reive operations they're all gone and that's also directly visible here in the flame graphs without actually going into",
    "start": "3266359",
    "end": "3273160"
  },
  {
    "text": "this P percentages to compare it good so one thing that I want to give",
    "start": "3273160",
    "end": "3279400"
  },
  {
    "text": "away here as well is I taught you about this concept of copy pasting code right",
    "start": "3279400",
    "end": "3285160"
  },
  {
    "text": "and one of the huge drawbacks this copy pasting code has is that you freeze the code somewhere and it doesn't evolve and",
    "start": "3285160",
    "end": "3293240"
  },
  {
    "text": "you have no insights into whether you're getting regressions right it could be possible that a team colleague or",
    "start": "3293240",
    "end": "3299680"
  },
  {
    "text": "yourself three months down the line because you don't remember anything right you go back and you tweak the code",
    "start": "3299680",
    "end": "3307720"
  },
  {
    "text": "never happens to me by the way um you tweak the code and then you break stuff",
    "start": "3307720",
    "end": "3313559"
  },
  {
    "text": "right and on the journey to be become more performance aware you probably want",
    "start": "3313559",
    "end": "3318839"
  },
  {
    "text": "to investigate into some form of regression testing right so what that",
    "start": "3318839",
    "end": "3324599"
  },
  {
    "text": "and you can do that so when you use Benchmark net and when you use the result compare tool from the net",
    "start": "3324599",
    "end": "3332119"
  },
  {
    "text": "runtime net performance repository and the link is in the slides I give it away",
    "start": "3332119",
    "end": "3337839"
  },
  {
    "text": "towards the end in the handouts what you can do is you can take a g Shaw right",
    "start": "3337839",
    "end": "3343240"
  },
  {
    "text": "your before you can run your benchmark with net run release of course not debug",
    "start": "3343240",
    "end": "3350000"
  },
  {
    "text": "right uh your framework and you say store the artifacts in this folder and of course you can do that on your cicd",
    "start": "3350000",
    "end": "3356880"
  },
  {
    "text": "system if you want to right and then you execute you forward your gsha to the",
    "start": "3356880",
    "end": "3362920"
  },
  {
    "text": "next one where or on your branch whatever right you then execute exactly the same Benchmark and you say store the",
    "start": "3362920",
    "end": "3370200"
  },
  {
    "text": "results over there and then you use the result compare tool on the bottom and",
    "start": "3370200",
    "end": "3375720"
  },
  {
    "text": "you say please compare the base against the other one and my threshold is let's",
    "start": "3375720",
    "end": "3381480"
  },
  {
    "text": "say 2% right you're saying okay we're willing to deviate 2% regressing 2% more",
    "start": "3381480",
    "end": "3387440"
  },
  {
    "text": "or less and if it's more than that it immediately fails and you know we did",
    "start": "3387440",
    "end": "3393960"
  },
  {
    "text": "regress I want to give you a bit more hints because one of the things you usually might be asking yourself how",
    "start": "3393960",
    "end": "3401119"
  },
  {
    "text": "many of those benchmarks should we actually store I would advise you to",
    "start": "3401119",
    "end": "3406200"
  },
  {
    "text": "throw away most of the benchmarks because the benchmarks they are just an",
    "start": "3406200",
    "end": "3411359"
  },
  {
    "text": "artifact a tool that used to find out in specific optimization scenar is to get",
    "start": "3411359",
    "end": "3417119"
  },
  {
    "text": "somewhere right keep for a regression testing perspective keep the most important core pieces of your",
    "start": "3417119",
    "end": "3424039"
  },
  {
    "text": "infrastructure around why does it matter because like any other code this stuff",
    "start": "3424039",
    "end": "3429799"
  },
  {
    "text": "might also have to be maintained right because if it lives side by side with your with your code unless it's a",
    "start": "3429799",
    "end": "3435400"
  },
  {
    "text": "different repository where you pull in dedicated nuket packages or something like that where you already are that",
    "start": "3435400",
    "end": "3440839"
  },
  {
    "text": "advanced I don't know right but it has to be maintained and the execution the more of those that you have right the",
    "start": "3440839",
    "end": "3447079"
  },
  {
    "text": "more time it takes and therefore it's also a slow it becomes over time a slower and slower tool to give you",
    "start": "3447079",
    "end": "3453599"
  },
  {
    "text": "insights into what's going on right so you want to again you want to keep the right balance of those things",
    "start": "3453599",
    "end": "3460559"
  },
  {
    "text": "around uh there is also more guidance if you're interested in that link preventing regressions from the net",
    "start": "3460559",
    "end": "3466960"
  },
  {
    "text": "performance team I can highly recommend to you to read it last but not least I",
    "start": "3466960",
    "end": "3472240"
  },
  {
    "text": "want to talk about when we are going onto this path of St starting to execute",
    "start": "3472240",
    "end": "3477680"
  },
  {
    "text": "those benchmarks or regression tests on a cicd system we have to talk about the",
    "start": "3477680",
    "end": "3483520"
  },
  {
    "text": "elephant in the room and the elephant in the room is this one Andre akinin from",
    "start": "3483520",
    "end": "3488559"
  },
  {
    "text": "chat brains did actually investigations for chat brains to look at sort of",
    "start": "3488559",
    "end": "3493760"
  },
  {
    "text": "shared Runners out there like GitHub actions and if you for example if you're using GitHub actions and you're saying",
    "start": "3493760",
    "end": "3499880"
  },
  {
    "text": "hey let's just throw our benchmarks into GitHub actions you might be surprised because his results show that CPU bound",
    "start": "3499880",
    "end": "3507280"
  },
  {
    "text": "benchmarks are much more stable than memory discbound benchmarks but the average performance level still can be",
    "start": "3507280",
    "end": "3513520"
  },
  {
    "text": "up to three times different the cross builds right because it's a shared environment it means you have Noisy",
    "start": "3513520",
    "end": "3519880"
  },
  {
    "text": "Neighbor effects right so that's going to be potentially something you have to account for so that means you might you",
    "start": "3519880",
    "end": "3526280"
  },
  {
    "text": "might not be able to use those shared Runners you might have to deploy your own stuff or use some I don't bare metal",
    "start": "3526280",
    "end": "3533799"
  },
  {
    "text": "hardware under someone's desk if you're running on premise or whatever to so that you actually get stable results",
    "start": "3533799",
    "end": "3539960"
  },
  {
    "text": "right that's why with all these problems I'm I I told you you can get started",
    "start": "3539960",
    "end": "3545000"
  },
  {
    "text": "with this copy pasting the code so that you get on this path of doing these types of performance investigations",
    "start": "3545000",
    "end": "3551520"
  },
  {
    "text": "without being exposed to the whole world of complexity out there good last but",
    "start": "3551520",
    "end": "3557359"
  },
  {
    "text": "not least I want to wrap up here so use the performance Loop to",
    "start": "3557359",
    "end": "3563119"
  },
  {
    "text": "improve your code where it matters right I showed you profile improve Benchmark improve Benchmark profile and then",
    "start": "3563119",
    "end": "3569920"
  },
  {
    "text": "eventually ship it into production right don't spend too much time on it enable your monitoring system look at your data",
    "start": "3569920",
    "end": "3576760"
  },
  {
    "text": "do application inside traces and see whether they actually improved stuff because then you know right some because",
    "start": "3576760",
    "end": "3582079"
  },
  {
    "text": "sometimes you make uh assumptions that they're just not valid and it turns out in production sometimes you have to",
    "start": "3582079",
    "end": "3587799"
  },
  {
    "text": "learn um hard the hard way and that cannot be avoided uh use this approach",
    "start": "3587799",
    "end": "3593640"
  },
  {
    "text": "even though I showed it with an example of a framework on Library like I told you it's totally also applicable to your",
    "start": "3593640",
    "end": "3598920"
  },
  {
    "text": "code out there and again every application has half of a framework somewhere buil baked in so maybe also",
    "start": "3598920",
    "end": "3605520"
  },
  {
    "text": "get started there and then use this approach to sort of with profiling to",
    "start": "3605520",
    "end": "3610839"
  },
  {
    "text": "sort of observe how the small changes over time that you're continuously doing",
    "start": "3610839",
    "end": "3616440"
  },
  {
    "text": "sort of start adding up as a compounding effect across your your code base and",
    "start": "3616440",
    "end": "3622039"
  },
  {
    "text": "what I would strongly advise you to because I usually hear that people are looking at some po some piece of code",
    "start": "3622039",
    "end": "3628839"
  },
  {
    "text": "and they're saying well this code is crap we need to rewrite it right how many times have you heard this in your",
    "start": "3628839",
    "end": "3634920"
  },
  {
    "text": "projects and I can tell you this is almost never successful because you're going to make the same mistakes because",
    "start": "3634920",
    "end": "3641480"
  },
  {
    "text": "you are not informed right and if you're going and apply this principle of",
    "start": "3641480",
    "end": "3646599"
  },
  {
    "text": "continuous improvement over time you learn a ton about the code basis you learn a ton about the assumptions how it",
    "start": "3646599",
    "end": "3652680"
  },
  {
    "text": "runs in production write down those bits and pits and nuggets into your architecture decision record or decision",
    "start": "3652680",
    "end": "3659680"
  },
  {
    "text": "record lock or whatever into the PRS so and then once your understanding is good enough of the piece of code you then",
    "start": "3659680",
    "end": "3667000"
  },
  {
    "text": "might not even need to rewrite it or if you actually are starting to rewrite it",
    "start": "3667000",
    "end": "3672280"
  },
  {
    "text": "you can use this knowledge plus all the benchmarks around it to make sure the new code is extremely fast to the needs",
    "start": "3672280",
    "end": "3679280"
  },
  {
    "text": "that you actually needed for the specific use case right I do not believe that these blanket statements out there",
    "start": "3679280",
    "end": "3685400"
  },
  {
    "text": "where people saying this code is are actually valid things so in the",
    "start": "3685400",
    "end": "3692400"
  },
  {
    "text": "majority of the cases it never actually works good that's that so all the stuff",
    "start": "3692400",
    "end": "3698599"
  },
  {
    "text": "that I showed you today is available also in handout form with uh with lots",
    "start": "3698599",
    "end": "3703799"
  },
  {
    "text": "of explanations and screenshots and everything in code samples on github.com",
    "start": "3703799",
    "end": "3709240"
  },
  {
    "text": "Marbach Beyond Simple benchmarks there is a QR code you can scan and I also",
    "start": "3709240",
    "end": "3714880"
  },
  {
    "text": "have here business cards on the stage grabb your grab yourself a business card if you want to shoot me an email later I",
    "start": "3714880",
    "end": "3721799"
  },
  {
    "text": "will also for the people that give me feedback of the talk or tell me what they particularly liked send me an email",
    "start": "3721799",
    "end": "3728640"
  },
  {
    "text": "or reach out to me over LinkedIn or social media I will raffle towards the end of the weekend at chat brains",
    "start": "3728640",
    "end": "3734920"
  },
  {
    "text": "ultimate license to those that uh give me that feedback I will also be at the",
    "start": "3734920",
    "end": "3740079"
  },
  {
    "text": "particular software booth for maybe half an hour but then unfortunately I have to go back to Switzerland so yeah hopefully",
    "start": "3740079",
    "end": "3746240"
  },
  {
    "text": "you had a good good time and have a great weekend [Applause]",
    "start": "3746240",
    "end": "3758349"
  }
]