[
  {
    "start": "0",
    "end": "380000"
  },
  {
    "text": "all right hello everyone i am adrian teca i'm based in las vegas and if i'm",
    "start": "8080",
    "end": "14400"
  },
  {
    "text": "unusually chipper it's because this is the first time a conference like this has been in favor of my time zone so i'm",
    "start": "14400",
    "end": "21520"
  },
  {
    "text": "very happy that it's the normal waking hours for me here it's around 3 p.m for",
    "start": "21520",
    "end": "26800"
  },
  {
    "text": "me today i'd like to talk to you about nosql databases specifically i'm hoping",
    "start": "26800",
    "end": "34079"
  },
  {
    "text": "to possibly re-shift your mindset and maybe even get you to say yes to nosql",
    "start": "34079",
    "end": "40559"
  },
  {
    "text": "databases so let's get to it",
    "start": "40559",
    "end": "45840"
  },
  {
    "text": "so as relational developers or developers who are used to working with relational",
    "start": "48000",
    "end": "54399"
  },
  {
    "text": "databases relational databases are probably your bread and butter they were mine they were the first",
    "start": "54399",
    "end": "60800"
  },
  {
    "text": "data model and type of database that i worked with when i started out as a software developer and that's kind of",
    "start": "60800",
    "end": "67040"
  },
  {
    "text": "just what we use right we didn't really have a need for anything else or we probably didn't learn anything else and",
    "start": "67040",
    "end": "73840"
  },
  {
    "text": "so along with that you know all the other parts of it kind of became second nature sql is your jam joins where",
    "start": "73840",
    "end": "81600"
  },
  {
    "text": "necessary data is relational that's why they're called relational databases and",
    "start": "81600",
    "end": "87280"
  },
  {
    "text": "for the most part they they work kind of but they they worked so when this new kid around the black",
    "start": "87280",
    "end": "94560"
  },
  {
    "text": "came in called nosql they're probably just like me like what is it why would i",
    "start": "94560",
    "end": "99600"
  },
  {
    "text": "need this what exactly is nosql and to that i say you're completely justified i",
    "start": "99600",
    "end": "107200"
  },
  {
    "text": "mean it's been used in so many different ways it's been interchanged in different",
    "start": "107200",
    "end": "112640"
  },
  {
    "text": "ways we call it nosql non-sql or non-sql however you like to say it",
    "start": "112640",
    "end": "118159"
  },
  {
    "text": "non-relational sql not only sql so with all of these different definitions and",
    "start": "118159",
    "end": "125040"
  },
  {
    "text": "variations and mutations of what we assume nosql is it's not really uh hard",
    "start": "125040",
    "end": "131200"
  },
  {
    "text": "to see why a lot of people are not distinct and clear about what is a definitive nosql databases",
    "start": "131200",
    "end": "138560"
  },
  {
    "text": "and so but this is not a problem because there are different permutations of it so keeping this in",
    "start": "138560",
    "end": "146000"
  },
  {
    "text": "mind i like to think of it this way at least",
    "start": "146000",
    "end": "151200"
  },
  {
    "text": "in um in contrast in contrast to what relational developers think of and so nosql is",
    "start": "151200",
    "end": "158720"
  },
  {
    "text": "basically a different way of storing and modeling data than the regular form that",
    "start": "158720",
    "end": "164400"
  },
  {
    "text": "we are used to now keep in mind these databases the notion of nosql databases",
    "start": "164400",
    "end": "171599"
  },
  {
    "text": "they've actually already existed for quite some time in fact they already were around in the 1960s but it did not",
    "start": "171599",
    "end": "178480"
  },
  {
    "text": "gain popularity and surge into tech buzzword land until about the late",
    "start": "178480",
    "end": "184000"
  },
  {
    "text": "2000s when costs of storage have dramatically increased and that makes more sense because as we'll see in a bit",
    "start": "184000",
    "end": "191280"
  },
  {
    "text": "nosql databases have some characteristics that make it more pragmatic for storage to cost way less",
    "start": "191280",
    "end": "197599"
  },
  {
    "text": "than what it did before so if not tabular data then how do we model it what do we do we're used to our",
    "start": "197599",
    "end": "204319"
  },
  {
    "text": "nice structured tables and joins and foreign keys how else would we model this kind of data well there are",
    "start": "204319",
    "end": "211200"
  },
  {
    "text": "four different ways four common ways that you would find that are",
    "start": "211200",
    "end": "216319"
  },
  {
    "text": "related to no sql and nosql data models in particular so the first is the",
    "start": "216319",
    "end": "222239"
  },
  {
    "text": "document store so this is where you can store data in hierarchical ways and",
    "start": "222239",
    "end": "227440"
  },
  {
    "text": "they're stored within json-based documents i think i work for one that you may know",
    "start": "227440",
    "end": "233360"
  },
  {
    "text": "it's called mongodb but there are others a second form of a data model",
    "start": "233360",
    "end": "241120"
  },
  {
    "text": "for nosql is the key value store so this one at least when i first started learning about all the different",
    "start": "241120",
    "end": "247360"
  },
  {
    "text": "models was a little bit more self-explanatory the literal keys and values and you would use these keys to",
    "start": "247360",
    "end": "254480"
  },
  {
    "text": "quickly query any of the data that you may need and it's so fast because you",
    "start": "254480",
    "end": "259680"
  },
  {
    "text": "would probably hash those keys to be able to get it quickly so think your",
    "start": "259680",
    "end": "265520"
  },
  {
    "text": "redises your rocks db your apache ignites",
    "start": "265520",
    "end": "270400"
  },
  {
    "text": "next there's the wide column store you they might be interchanged with columnar",
    "start": "270720",
    "end": "275919"
  },
  {
    "text": "columnar stores i always say that incorrectly i always get",
    "start": "275919",
    "end": "281440"
  },
  {
    "text": "self-conscious when i say it because i think i'm saying it wrong i'm going to say wide column store and this is where related data is stored as a set of",
    "start": "281440",
    "end": "288560"
  },
  {
    "text": "nested key value pairs within a single column so for me when i first read that",
    "start": "288560",
    "end": "294320"
  },
  {
    "text": "and even saw some of the diagrams that didn't really make sense to me but what did make sense to me is if you imagine",
    "start": "294320",
    "end": "299600"
  },
  {
    "text": "let's say you had a customer column and within that column you actually had two things like name or address some sort of",
    "start": "299600",
    "end": "306320"
  },
  {
    "text": "related data that you would want to query together now you might have another column with completely different",
    "start": "306320",
    "end": "311520"
  },
  {
    "text": "data but is related to that person or that row id and let's say you're the",
    "start": "311520",
    "end": "317120"
  },
  {
    "text": "product column that could include the item and the price so in the wide column strategy you would then be able to query",
    "start": "317120",
    "end": "324400"
  },
  {
    "text": "either via user id or something which would equate to the row of that table but be able to quickly get the actual",
    "start": "324400",
    "end": "331440"
  },
  {
    "text": "group of data that you need in this wide column store so these are your cilla dbs and your",
    "start": "331440",
    "end": "336960"
  },
  {
    "text": "cassandras and finally there are the graph store",
    "start": "336960",
    "end": "342639"
  },
  {
    "text": "models so this is where we store data in nodes and edges so nodes store the",
    "start": "342639",
    "end": "349039"
  },
  {
    "text": "entities the nouns the people the places the things",
    "start": "349039",
    "end": "354080"
  },
  {
    "text": "of the data that we're capturing and the edges store the relationships or i like to call them the verbs of what is",
    "start": "354080",
    "end": "360400"
  },
  {
    "text": "related among these things these entities so these are your neo4js and your janus graph",
    "start": "360400",
    "end": "367440"
  },
  {
    "text": "so keeping in mind that these are a different way of modeling data and that they have a different approach to",
    "start": "367440",
    "end": "373600"
  },
  {
    "text": "storing data naturally the next question that usually comes to mind when we start discussing",
    "start": "373600",
    "end": "379280"
  },
  {
    "text": "this is all right so our nosql database is better than relational databases",
    "start": "379280",
    "end": "385600"
  },
  {
    "start": "380000",
    "end": "488000"
  },
  {
    "text": "well technically i'm paid to say yes but the real answer of course is it",
    "start": "385600",
    "end": "392240"
  },
  {
    "text": "depends the lovely answer that is right almost all of the time it depends",
    "start": "392240",
    "end": "397919"
  },
  {
    "text": "and so in order to truly understand why the differences matter and how we can",
    "start": "397919",
    "end": "404720"
  },
  {
    "text": "use some of the things we uh or use the differences in our decision making we need to get some",
    "start": "404720",
    "end": "412160"
  },
  {
    "text": "dependencies into this presentation in fact we need to import some",
    "start": "412160",
    "end": "418479"
  },
  {
    "text": "dependencies into this presentation about some of the fundamentals and",
    "start": "418479",
    "end": "424080"
  },
  {
    "text": "i know if you've heard this before it might just be a quick refresher but i promise you that laying these",
    "start": "424080",
    "end": "429840"
  },
  {
    "text": "fundamentals down and understanding them will help in the later part of this presentation and hopefully in the later",
    "start": "429840",
    "end": "436720"
  },
  {
    "text": "course when you are making a decision on whether or not to choose a nosql database for your system",
    "start": "436720",
    "end": "443599"
  },
  {
    "text": "so those three dependencies are going to be the cap theorem acid and base",
    "start": "443599",
    "end": "449360"
  },
  {
    "text": "and before anyone says anything before you start typing in the chat and slack and saying oh this has been outdated",
    "start": "449360",
    "end": "455440"
  },
  {
    "text": "this has been debated yes i have read those articles i've read martin klepman's response to to uh to cap",
    "start": "455440",
    "end": "462479"
  },
  {
    "text": "theorem i understand but the point i want to make here is to the fundamentals still stand and they",
    "start": "462479",
    "end": "468319"
  },
  {
    "text": "still give us a very good framework of at least asking us or forcing us to ask the",
    "start": "468319",
    "end": "475039"
  },
  {
    "text": "questions with ourselves and with our team on whether or not we need some of these properties and things when we are",
    "start": "475039",
    "end": "482160"
  },
  {
    "text": "deciding on a technology to choose so keeping that in mind we'll go through",
    "start": "482160",
    "end": "487599"
  },
  {
    "text": "them so cap theorem also known as brewer's theorem based on",
    "start": "487599",
    "end": "493360"
  },
  {
    "start": "488000",
    "end": "857000"
  },
  {
    "text": "the computer scientist eric brewer who has projected this out into the world",
    "start": "493360",
    "end": "498400"
  },
  {
    "text": "and so he states in a distributed system it is impossible to have more than two",
    "start": "498400",
    "end": "504080"
  },
  {
    "text": "of the following three properties as consistency availability and partition",
    "start": "504080",
    "end": "509440"
  },
  {
    "text": "tolerance cap right because we just need more acronyms and tech",
    "start": "509440",
    "end": "515919"
  },
  {
    "text": "so quickly what are those because even these are contested and what they actually mean and at least for the",
    "start": "515919",
    "end": "521680"
  },
  {
    "text": "context of this presentation i like to tell you what i see them as",
    "start": "521680",
    "end": "526959"
  },
  {
    "text": "they're what i feel they should be consistency states that a read from any",
    "start": "526959",
    "end": "533120"
  },
  {
    "text": "node is guaranteed to return the most recent state so what does that exactly mean",
    "start": "533120",
    "end": "540560"
  },
  {
    "text": "let's say i have a cluster and i have four nodes and in these four nodes these are four computers whatever i'll call them nodes",
    "start": "540560",
    "end": "547120"
  },
  {
    "text": "just to be more generic we can read and write to this cluster",
    "start": "547120",
    "end": "552480"
  },
  {
    "text": "and right now the current state of my cluster is uh it has hey there in all four of the nodes that's the state",
    "start": "552480",
    "end": "559200"
  },
  {
    "text": "that's the value of all four nodes now let's say i want to update the value to",
    "start": "559200",
    "end": "565920"
  },
  {
    "text": "comusta instead of hey there because i figured if for those who already know cap theorem hey maybe you'll learn",
    "start": "565920",
    "end": "572560"
  },
  {
    "text": "something new too so comista is hey there or hello in tagalog",
    "start": "572560",
    "end": "577839"
  },
  {
    "text": "and when we send this call when we send this operation to my cluster what will happen is",
    "start": "577839",
    "end": "584240"
  },
  {
    "text": "as expected it will probably update the first node that it reaches that accepts the call but in an inconsistent system",
    "start": "584240",
    "end": "591839"
  },
  {
    "text": "what could happen is that before replication is finished we might",
    "start": "591839",
    "end": "597360"
  },
  {
    "text": "actually acknowledge to the client that hey i'm done i've written and this is inconsistent because",
    "start": "597360",
    "end": "605040"
  },
  {
    "text": "what if right after that we decided we wanted to read something and this is",
    "start": "605040",
    "end": "610160"
  },
  {
    "text": "done before the replication has finished and let's say that this read call was",
    "start": "610160",
    "end": "615360"
  },
  {
    "text": "sent to node 3. well you can see the problem we're going to get the value hey there instead of",
    "start": "615360",
    "end": "622079"
  },
  {
    "text": "so this is where we say it's an inconsistent system because it has it we're receiving still data we're not",
    "start": "622079",
    "end": "628320"
  },
  {
    "text": "getting the guarantee of the kamusta on all of the nodes that we are expecting",
    "start": "628320",
    "end": "633920"
  },
  {
    "text": "contrast that to a consistent system what would probably happen is we wouldn't acknowledge to the client that",
    "start": "633920",
    "end": "640000"
  },
  {
    "text": "we were done until it has been fully confirmed that everything has been",
    "start": "640000",
    "end": "645760"
  },
  {
    "text": "replicated to the majority of the nodes to all of the nodes depending on you know some really granular things like uh",
    "start": "645760",
    "end": "652320"
  },
  {
    "text": "right safety and write preferences and mongodb and all the other options but in a consistent system we would be",
    "start": "652320",
    "end": "658880"
  },
  {
    "text": "guaranteed that no matter which call is made and no matter which node accepts it",
    "start": "658880",
    "end": "664240"
  },
  {
    "text": "we are going to get the same data so that's consistency a read from any",
    "start": "664240",
    "end": "670480"
  },
  {
    "text": "node is guaranteed to return the most recent state next is availability",
    "start": "670480",
    "end": "678160"
  },
  {
    "text": "so availability in the cap theorem states that every request received by a",
    "start": "678160",
    "end": "684000"
  },
  {
    "text": "non-failing node will return a response meaning no errors or timeouts either",
    "start": "684000",
    "end": "691120"
  },
  {
    "text": "so let's go back to our cluster same four nodes same values all hey there",
    "start": "691120",
    "end": "696320"
  },
  {
    "text": "now in an available system uh if we made a call we would be able to",
    "start": "696320",
    "end": "703279"
  },
  {
    "text": "still receive a response despite having say two nodes go offline just like it",
    "start": "703279",
    "end": "708560"
  },
  {
    "text": "did in my cluster an available system would be able to write komusta and it",
    "start": "708560",
    "end": "714839"
  },
  {
    "text": "will uh reconcile the um replication of this in the back end but to the client",
    "start": "714839",
    "end": "721200"
  },
  {
    "text": "to the front end it's always available so that's where we get the problem of it could still be",
    "start": "721200",
    "end": "727440"
  },
  {
    "text": "sending us stale data because it's always available and you'll see that with if we try to",
    "start": "727440",
    "end": "733360"
  },
  {
    "text": "say read this now and that read call went to let's say the third node we'd still get hey there so there's that",
    "start": "733360",
    "end": "739760"
  },
  {
    "text": "possibility of stale data in this particular system but being available",
    "start": "739760",
    "end": "746320"
  },
  {
    "text": "just means that even if there are nodes down in the cluster we are able to still",
    "start": "746320",
    "end": "751360"
  },
  {
    "text": "have a functioning system it doesn't break because two nodes are down",
    "start": "751360",
    "end": "757040"
  },
  {
    "text": "so availability every request received by a non-failing node is going to get a response",
    "start": "757040",
    "end": "763920"
  },
  {
    "text": "and lastly partition tolerance so despite network partitions aka when connections are",
    "start": "763920",
    "end": "771279"
  },
  {
    "text": "severed between nodes they can't communicate to each other again this the system should still",
    "start": "771279",
    "end": "777279"
  },
  {
    "text": "function so back to our cluster we have four nodes hey there is all there",
    "start": "777279",
    "end": "784480"
  },
  {
    "text": "that's everything's fine and dandy right now let's say that some communication",
    "start": "784480",
    "end": "790480"
  },
  {
    "text": "breaks between node one and node four there's no way for them to talk to each",
    "start": "790480",
    "end": "795839"
  },
  {
    "text": "other and uh you know if this needed to write or replicate something it's not able to do",
    "start": "795839",
    "end": "802320"
  },
  {
    "text": "so because the communication has been severed well a partition tolerant system",
    "start": "802320",
    "end": "807920"
  },
  {
    "text": "says that even if this state exists right now even if node 1 and node 4 can't talk to each other we're still",
    "start": "807920",
    "end": "814079"
  },
  {
    "text": "going to get a response the the system is still going to be functional for the",
    "start": "814079",
    "end": "819760"
  },
  {
    "text": "user so partition tolerance despite network",
    "start": "819760",
    "end": "826000"
  },
  {
    "text": "uh disconnectivity or severed connections between nodes system should still function",
    "start": "826000",
    "end": "833519"
  },
  {
    "text": "so cap's theorem says that we should only choose between these two",
    "start": "833839",
    "end": "840480"
  },
  {
    "text": "or we can only have two out of the three we can only have two out of three of consistency availability",
    "start": "840480",
    "end": "847040"
  },
  {
    "text": "and partition tolerance and again we can argue that that is kind of being challenged right now with spanner but",
    "start": "847040",
    "end": "854399"
  },
  {
    "text": "again we'll save that for later so this means that this area right here",
    "start": "854399",
    "end": "861360"
  },
  {
    "start": "857000",
    "end": "900000"
  },
  {
    "text": "in the middle that we can't possibly have all three at least with a fundamental understanding that most of",
    "start": "861360",
    "end": "867199"
  },
  {
    "text": "us have known for a while so with this in mind this means that",
    "start": "867199",
    "end": "873120"
  },
  {
    "text": "there are several combinations left for us to deliberate on when we choose on how to architect our system",
    "start": "873120",
    "end": "880320"
  },
  {
    "text": "but do we really because of the nature of distributed",
    "start": "880320",
    "end": "885440"
  },
  {
    "text": "systems we really only have to choose between two options or we are only left with one",
    "start": "885440",
    "end": "892959"
  },
  {
    "text": "or the other choice that we need to deliberate on because one has kind of already been chosen for us",
    "start": "892959",
    "end": "899760"
  },
  {
    "text": "so one of the logical fallacies of distributed computing",
    "start": "899760",
    "end": "905360"
  },
  {
    "start": "900000",
    "end": "943000"
  },
  {
    "text": "is that the network is reliable you'll even see here it's listed as on the official wikipedia of fallacies of",
    "start": "905360",
    "end": "911680"
  },
  {
    "text": "distributed computing it's number one on dare that that the number one fallacy is the network is reliable",
    "start": "911680",
    "end": "918880"
  },
  {
    "text": "networks are not reliable they go down they go down many times it's unexpected",
    "start": "918880",
    "end": "925199"
  },
  {
    "text": "i know many of you have probably encountered some sort of issue with a video call networks are unreliable",
    "start": "925199",
    "end": "934240"
  },
  {
    "text": "and so because we understand that network failures will occur and they",
    "start": "934240",
    "end": "939360"
  },
  {
    "text": "will at some point happen to our system it's it's a given we must tolerate",
    "start": "939360",
    "end": "944959"
  },
  {
    "text": "partitions in a distributed system so this is why i say partition tolerance is an automatic",
    "start": "944959",
    "end": "951440"
  },
  {
    "text": "choice it's not left to us if we're going to work with distributed systems it is chosen by default for us",
    "start": "951440",
    "end": "960800"
  },
  {
    "text": "so now we're left with two options right do we choose partition tolerant consistent systems or",
    "start": "960880",
    "end": "967920"
  },
  {
    "text": "do we choose partition tolerant available systems in other words which one are we willing to sacrifice",
    "start": "967920",
    "end": "974800"
  },
  {
    "text": "consistency or availability in partition tolerant consistent systems",
    "start": "974800",
    "end": "981519"
  },
  {
    "text": "obviously we're sacrificing availability but here if we choose a system like this or build a system like this",
    "start": "981519",
    "end": "989279"
  },
  {
    "text": "when consistency cannot be ensured we will probably get errors or timeouts and",
    "start": "989279",
    "end": "995360"
  },
  {
    "text": "in this kind of system that should be acceptable because we care more about the data integrity rather than the",
    "start": "995360",
    "end": "1002399"
  },
  {
    "text": "availability of our system so if consistency is crucial to the user",
    "start": "1002399",
    "end": "1008320"
  },
  {
    "text": "experience then these are some factors that you would consider and maybe leaning towards a",
    "start": "1008320",
    "end": "1014240"
  },
  {
    "text": "partition tolerant consistent system so you have to decide are errors okay to show the client or are they not is",
    "start": "1014240",
    "end": "1021360"
  },
  {
    "text": "consistency literally the thing that matters most in this application or is it not and that's why the example of",
    "start": "1021360",
    "end": "1028959"
  },
  {
    "text": "financial transactions or financial applications kind of uses this because",
    "start": "1028959",
    "end": "1034240"
  },
  {
    "text": "we all want to make sure our money is in our bank accounts and it's the right amount",
    "start": "1034240",
    "end": "1040400"
  },
  {
    "start": "1040000",
    "end": "1168000"
  },
  {
    "text": "now if we go the other direction we save them consistency is not really too important availability is way more",
    "start": "1041039",
    "end": "1047760"
  },
  {
    "text": "important in our application in our system now we may not get errors or timeouts",
    "start": "1047760",
    "end": "1053360"
  },
  {
    "text": "but the problem here now is that the data you receive could be outdated so",
    "start": "1053360",
    "end": "1058400"
  },
  {
    "text": "even though it's always always on always available to the user what's more important in these systems is that data",
    "start": "1058400",
    "end": "1066080"
  },
  {
    "text": "accumulation the amount of processing and rights that you're able to do on this system is more important than data",
    "start": "1066080",
    "end": "1073280"
  },
  {
    "text": "integrity so in these cases it's it's where eventual consistency is",
    "start": "1073280",
    "end": "1079360"
  },
  {
    "text": "acceptable it's where everything does not have to be the same mutual state correct at the same time it's if this is",
    "start": "1079360",
    "end": "1086960"
  },
  {
    "text": "at some later point it gets to the right state that's okay and so these are the some of the things",
    "start": "1086960",
    "end": "1094000"
  },
  {
    "text": "that you have to consider when you are deciding between these kinds of trade-offs",
    "start": "1094000",
    "end": "1099280"
  },
  {
    "text": "and one last thing to note about this is that so when we we learned about this or maybe if you're hearing about this for",
    "start": "1099280",
    "end": "1105440"
  },
  {
    "text": "the first time it might seem like these are these very binary design decisions",
    "start": "1105440",
    "end": "1110720"
  },
  {
    "text": "right you have to sacrifice full availability you have to sacrifice full consistency and that's absolutely not",
    "start": "1110720",
    "end": "1116320"
  },
  {
    "text": "the case in fact eric brewer himself came back you know some years later it was like",
    "start": "1116320",
    "end": "1122559"
  },
  {
    "text": "it's not really that uh that rigid what's happening more and more nowadays is it's more like a",
    "start": "1122559",
    "end": "1129440"
  },
  {
    "text": "balancing act what are the trade-offs that you are willing to make what are the trade-offs that your system can make",
    "start": "1129440",
    "end": "1135760"
  },
  {
    "text": "and are acceptable that's what we are struck by are trying to find now but the fundamentals of this still stand where",
    "start": "1135760",
    "end": "1142480"
  },
  {
    "text": "it allows us to ask those questions to get to those answers to see what is",
    "start": "1142480",
    "end": "1147919"
  },
  {
    "text": "worth sacrificing and what what's what percentage or level of consistency and",
    "start": "1147919",
    "end": "1153600"
  },
  {
    "text": "availability we want to balance so the funniest thing about this is that",
    "start": "1153600",
    "end": "1159200"
  },
  {
    "text": "while i was you know finishing up my slides on on this and talking about consistency and availability and making",
    "start": "1159200",
    "end": "1165440"
  },
  {
    "text": "sure all my animations are sparkly smooth at around 8 35 p.m last night um i used",
    "start": "1165440",
    "end": "1172000"
  },
  {
    "start": "1168000",
    "end": "1207000"
  },
  {
    "text": "slides.com to create my slides i used to use reveal js which is the open source",
    "start": "1172000",
    "end": "1177039"
  },
  {
    "text": "project that this is based on but it got way too tedious so i gave in and got slides.com",
    "start": "1177039",
    "end": "1182880"
  },
  {
    "text": "and i got this and this is the last thing i wanted to see at this point i was telling myself you know what",
    "start": "1182880",
    "end": "1189280"
  },
  {
    "text": "slides.com i'd actually i'd rather you be available right now than consistent",
    "start": "1189280",
    "end": "1195280"
  },
  {
    "text": "but alas we're still here i was still able to make my changes and i only lost maybe",
    "start": "1195280",
    "end": "1200559"
  },
  {
    "text": "a couple objects so that's a it's a win for me",
    "start": "1200559",
    "end": "1207000"
  },
  {
    "start": "1207000",
    "end": "1261000"
  },
  {
    "text": "great so now we've laid the foundation for cap ethereum we understand the trade-offs that we have to make between",
    "start": "1208159",
    "end": "1215039"
  },
  {
    "text": "consistency and availability in a system and where we are now assuming",
    "start": "1215039",
    "end": "1221039"
  },
  {
    "text": "that partition tolerance is default it's by nature it's a distributed system that is chosen for us it has to be that way",
    "start": "1221039",
    "end": "1228480"
  },
  {
    "text": "the next thing that we need to understand is the acid properties versus base",
    "start": "1228480",
    "end": "1234400"
  },
  {
    "text": "properties so you've seen these acronyms before maybe or if you've ever done any kind of research on databases you'll",
    "start": "1234400",
    "end": "1241280"
  },
  {
    "text": "you'll see this somewhere and what i want to make very clear is that these are not",
    "start": "1241280",
    "end": "1247120"
  },
  {
    "text": "one-to-one direct comparisons of the properties of each other they are more like a set of guidelines",
    "start": "1247120",
    "end": "1254559"
  },
  {
    "text": "that you again have to decide if it is right for your system or not",
    "start": "1254559",
    "end": "1260799"
  },
  {
    "text": "so the consistency model in acid very quickly",
    "start": "1260840",
    "end": "1266320"
  },
  {
    "start": "1261000",
    "end": "1346000"
  },
  {
    "text": "a atomic all operations in a transaction succeed otherwise roll back the entire",
    "start": "1266320",
    "end": "1271360"
  },
  {
    "text": "operation either it all happens or it doesn't at all and then for c consistent meaning upon",
    "start": "1271360",
    "end": "1277679"
  },
  {
    "text": "the completed transaction the database is structurally sound meaning that the data should be in a consistent state",
    "start": "1277679",
    "end": "1284480"
  },
  {
    "text": "both before and after a transaction i is isolated",
    "start": "1284480",
    "end": "1289600"
  },
  {
    "text": "that means if you have concurrently running transactions they shouldn't affect each other they shouldn't contend",
    "start": "1289600",
    "end": "1294640"
  },
  {
    "text": "with one another and the d stands for durable so upon a completed transaction",
    "start": "1294640",
    "end": "1299840"
  },
  {
    "text": "despite any failures the results that happen should be permanent",
    "start": "1299840",
    "end": "1304960"
  },
  {
    "text": "so meaning if there are any hardware or software failures any changes that have been committed to the database should",
    "start": "1304960",
    "end": "1312000"
  },
  {
    "text": "still remain so as you can kind of sense or if you've worked with this or you know you needed",
    "start": "1312000",
    "end": "1318799"
  },
  {
    "text": "this in your systems you'll know that these are are very rigid they're almost like a pessimistic model a pessimistic",
    "start": "1318799",
    "end": "1325760"
  },
  {
    "text": "consistency model that you need to guarantee and these are very much directly related to the transactions",
    "start": "1325760",
    "end": "1331520"
  },
  {
    "text": "themselves in databases so that's one thing to keep in mind because these acid",
    "start": "1331520",
    "end": "1336559"
  },
  {
    "text": "guarantees kind of imply not always but imply that right safety is more important for you",
    "start": "1336559",
    "end": "1345960"
  },
  {
    "start": "1346000",
    "end": "1429000"
  },
  {
    "text": "now if we compare the base properties base ba basic availability means the database appears",
    "start": "1346000",
    "end": "1353280"
  },
  {
    "text": "to work mostly it's mostly available it's mostly there the s stands for soft state which means",
    "start": "1353280",
    "end": "1358880"
  },
  {
    "text": "that the database state you need to be aware that it could change over time and due to eventual consistency and also",
    "start": "1358880",
    "end": "1365919"
  },
  {
    "text": "if there are no inputs that are happening at the moment and e itself is eventual consistency so the",
    "start": "1365919",
    "end": "1372480"
  },
  {
    "text": "database will be consistent at some later point so knowing all of this you can already",
    "start": "1372480",
    "end": "1379679"
  },
  {
    "text": "see that these are much looser properties they're not as rigid as acid",
    "start": "1379679",
    "end": "1385200"
  },
  {
    "text": "and in fact a lot of research has shown that nosql databases",
    "start": "1385200",
    "end": "1391520"
  },
  {
    "text": "kind of naturally fall more into the base properties because they have those more lacks",
    "start": "1391520",
    "end": "1398880"
  },
  {
    "text": "guidelines than acid but these are again things that you need to",
    "start": "1398880",
    "end": "1404240"
  },
  {
    "text": "understand and be aware of because if you can get your team and yourself to",
    "start": "1404240",
    "end": "1409919"
  },
  {
    "text": "acknowledge and answer these questions of what your system actually needs you'll actually be better off in the",
    "start": "1409919",
    "end": "1415120"
  },
  {
    "text": "long run when we finally get to the point of choosing a nosql technology if you ever",
    "start": "1415120",
    "end": "1422080"
  },
  {
    "text": "get to a point and if it makes sense for you so all make sense very very soon",
    "start": "1422080",
    "end": "1430320"
  },
  {
    "start": "1429000",
    "end": "1470000"
  },
  {
    "text": "we have spoken about cap theorem we've spoken about acid we've spoken about base",
    "start": "1430320",
    "end": "1435679"
  },
  {
    "text": "so now we can finally get into the what i call the three-step guide of ditching",
    "start": "1435679",
    "end": "1441360"
  },
  {
    "text": "relational databases so number one now that we have the fundamentals",
    "start": "1441360",
    "end": "1447039"
  },
  {
    "text": "covered the first thing that we need to discuss is is nosql actually the way to go",
    "start": "1447039",
    "end": "1454000"
  },
  {
    "text": "in the very end is this even a you know this is the first question you should ask and start with because this will",
    "start": "1454000",
    "end": "1462000"
  },
  {
    "text": "not only cut you off short this will also lead the way into whether or not nosql databases should be the way",
    "start": "1462000",
    "end": "1468640"
  },
  {
    "text": "to go and how do you do that well there are",
    "start": "1468640",
    "end": "1473919"
  },
  {
    "start": "1470000",
    "end": "1535000"
  },
  {
    "text": "more things that you have to consider but for this first step what you really need to take a look at",
    "start": "1473919",
    "end": "1479200"
  },
  {
    "text": "is your data specifically four characteristics of your data and what how they describe",
    "start": "1479200",
    "end": "1485279"
  },
  {
    "text": "your data so when you're determining whether or not nosql is the way to go",
    "start": "1485279",
    "end": "1490799"
  },
  {
    "text": "you want to look at your data volume your data velocity your data variety",
    "start": "1490799",
    "end": "1496320"
  },
  {
    "text": "and your data valence and as a general rule very quick tldr",
    "start": "1496320",
    "end": "1502159"
  },
  {
    "text": "if you have large data volume if you have high data velocity",
    "start": "1502159",
    "end": "1508080"
  },
  {
    "text": "if you have volatility or high volatility varied types of varieties of",
    "start": "1508080",
    "end": "1513520"
  },
  {
    "text": "data and if you have a high date of valence then generally nosql is probably the way",
    "start": "1513520",
    "end": "1520400"
  },
  {
    "text": "to go for you so that's like general rule although there could",
    "start": "1520400",
    "end": "1526080"
  },
  {
    "text": "definitely be some exceptions but for the most part if you follow along that spectrum",
    "start": "1526080",
    "end": "1531279"
  },
  {
    "text": "nosql is probably a good bet so what do these mean exactly there's",
    "start": "1531279",
    "end": "1536320"
  },
  {
    "start": "1535000",
    "end": "1613000"
  },
  {
    "text": "all these words and i like to structure things and and use alliteration here with all the same letters but what does",
    "start": "1536320",
    "end": "1542240"
  },
  {
    "text": "this actually mean so to start data volume meaning the size of your stored data how large is your",
    "start": "1542240",
    "end": "1549279"
  },
  {
    "text": "stored data and if you look at the data sets that we have now large data sets are becoming",
    "start": "1549279",
    "end": "1555840"
  },
  {
    "text": "even larger they are so large in fact that they are almost becoming too unwieldy when we",
    "start": "1555840",
    "end": "1562559"
  },
  {
    "text": "store them in a traditional relational database model so what that means is whenever we have",
    "start": "1562559",
    "end": "1569039"
  },
  {
    "text": "to query something whenever we have to query against a really large volume of",
    "start": "1569039",
    "end": "1574240"
  },
  {
    "text": "data if it's in a relational model and if it has been modeled the way we are used to",
    "start": "1574240",
    "end": "1580480"
  },
  {
    "text": "which means there's going to be lots of tables there's going to be a high number of joins then it's going to be very very very",
    "start": "1580480",
    "end": "1587679"
  },
  {
    "text": "slow so it's not a fault of relational databases themselves but rather the data",
    "start": "1587679",
    "end": "1594320"
  },
  {
    "text": "model so in this particular case i say if your volume is large nosql is probably a",
    "start": "1594320",
    "end": "1601760"
  },
  {
    "text": "better option than a relational data model because they are much better at handling today's larger data sets",
    "start": "1601760",
    "end": "1608240"
  },
  {
    "text": "they've been built to improve upon that fact",
    "start": "1608240",
    "end": "1613799"
  },
  {
    "start": "1613000",
    "end": "1760000"
  },
  {
    "text": "next is data velocity and what i mean by this is the rate at which your data",
    "start": "1614799",
    "end": "1619840"
  },
  {
    "text": "changes over time so there's two parts to this and the first one is",
    "start": "1619840",
    "end": "1626559"
  },
  {
    "text": "if you have high right loads meaning if the rate at which your actual data points",
    "start": "1626559",
    "end": "1631600"
  },
  {
    "text": "change meaning how many edits you have and how much how many times you have to write to the database if that is high",
    "start": "1631600",
    "end": "1638720"
  },
  {
    "text": "and if the actual data structure your data model your schemas change",
    "start": "1638720",
    "end": "1644399"
  },
  {
    "text": "constantly over time if both of those are high then again it's another",
    "start": "1644399",
    "end": "1649600"
  },
  {
    "text": "consideration uh leaning towards nosql being the better option for you",
    "start": "1649600",
    "end": "1655679"
  },
  {
    "text": "think about it so if you pair the first characteristic which is having a large",
    "start": "1655679",
    "end": "1661200"
  },
  {
    "text": "volume of data you pair that high volume with really constant",
    "start": "1661200",
    "end": "1666640"
  },
  {
    "text": "high right loads you're basically pushing whatever database that you're using to deal with this amount of",
    "start": "1666640",
    "end": "1673919"
  },
  {
    "text": "surging database activity you're going to be peaking all the time",
    "start": "1673919",
    "end": "1679440"
  },
  {
    "text": "and then when you talk about the data structure you have the changes that occur",
    "start": "1679440",
    "end": "1684880"
  },
  {
    "text": "over time and this can happen for many reasons businesses move fast organizations acquire",
    "start": "1684880",
    "end": "1691840"
  },
  {
    "text": "data data acquisition is experimental you realize that the model you had was not correct or maybe you have new things",
    "start": "1691840",
    "end": "1698720"
  },
  {
    "text": "that you need to capture and again if you've worked with this in a relational model you know the pain of",
    "start": "1698720",
    "end": "1705279"
  },
  {
    "text": "migrating a data model especially if it's only just adding one extra",
    "start": "1705279",
    "end": "1710640"
  },
  {
    "text": "field into the table with all of these uh you have to consider that if you have",
    "start": "1710640",
    "end": "1717840"
  },
  {
    "text": "these characteristics if you have large volumes of data that you're dealing with if your velocity is high meaning you",
    "start": "1717840",
    "end": "1724399"
  },
  {
    "text": "know you have a lot of rights and you know that your data model is changing constantly you almost require a database",
    "start": "1724399",
    "end": "1730799"
  },
  {
    "text": "that is optimized for the high right loads and for the flexible data models",
    "start": "1730799",
    "end": "1736399"
  },
  {
    "text": "those are two things that a relational database is not usually prepared to handle and even more so if they're not",
    "start": "1736399",
    "end": "1742640"
  },
  {
    "text": "properly tuned so it's not saying they're absolutely not possible it's just saying nosql databases have been",
    "start": "1742640",
    "end": "1749039"
  },
  {
    "text": "built with this in mind and so for that if you do have high velocity then nosql",
    "start": "1749039",
    "end": "1754880"
  },
  {
    "text": "is probably a better way to go",
    "start": "1754880",
    "end": "1758960"
  },
  {
    "start": "1760000",
    "end": "1864000"
  },
  {
    "text": "thirdly data variety if you have high data variety meaning the the types of",
    "start": "1760799",
    "end": "1766640"
  },
  {
    "text": "data that you are storing is super varied it's all over the place it's not homogeneous at all then again nosql is",
    "start": "1766640",
    "end": "1774640"
  },
  {
    "text": "probably the way to go data is so diverse there's dense data and sparse",
    "start": "1774640",
    "end": "1781440"
  },
  {
    "text": "data there's data that's connected and disconnected data that is structured semi-structured",
    "start": "1781440",
    "end": "1787279"
  },
  {
    "text": "irregularly structured i mean with the amount of data that we are capturing now",
    "start": "1787279",
    "end": "1792799"
  },
  {
    "text": "from all kinds of different devices from all kinds of different sources there are just so many different ways that the",
    "start": "1792799",
    "end": "1799200"
  },
  {
    "text": "data can come in and for that we we have four data models that i spoke",
    "start": "1799200",
    "end": "1805520"
  },
  {
    "text": "about earlier which again have adopted their own strategy to deal with the how",
    "start": "1805520",
    "end": "1811120"
  },
  {
    "text": "to handle this variety of data that we see and i know that there are databases that",
    "start": "1811120",
    "end": "1818159"
  },
  {
    "text": "can accommodate say json for example but they're kind of always built as an afterthought so meaning yes you can",
    "start": "1818159",
    "end": "1825440"
  },
  {
    "text": "store json in there in a relational database but you're not going to get the native capabilities that you would in",
    "start": "1825440",
    "end": "1831840"
  },
  {
    "text": "nosql databases so for example in mongodb you can do embedded searches",
    "start": "1831840",
    "end": "1837520"
  },
  {
    "text": "within embedded documents or you can have automatic indexes on nested fields",
    "start": "1837520",
    "end": "1843120"
  },
  {
    "text": "and that would be something that's very difficult to do and certainly not native in some sort of",
    "start": "1843120",
    "end": "1849440"
  },
  {
    "text": "add-on or a database that does offer the storage of json and so for that if your",
    "start": "1849440",
    "end": "1855679"
  },
  {
    "text": "data is all over the place it's again one thing to consider that nosql is probably the way to go",
    "start": "1855679",
    "end": "1865000"
  },
  {
    "start": "1864000",
    "end": "2038000"
  },
  {
    "text": "and finally data valence so that's here i have it as connections",
    "start": "1865519",
    "end": "1871519"
  },
  {
    "text": "that exist within your data it's the ratio of connections that exist within your data compared to the total number",
    "start": "1871519",
    "end": "1878960"
  },
  {
    "text": "of possible connections so when i first researched this and was",
    "start": "1878960",
    "end": "1884000"
  },
  {
    "text": "learning about this i'm like that doesn't make any sense to me so i hopefully these things will help so fun",
    "start": "1884000",
    "end": "1890240"
  },
  {
    "text": "fact latin root of valence is the same as value or valere which means to be",
    "start": "1890240",
    "end": "1897039"
  },
  {
    "text": "strong to be powerful influential or healthy now when i think about this in",
    "start": "1897039",
    "end": "1902080"
  },
  {
    "text": "different spaces i think it starts to make more sense in chemistry valence is the combining power",
    "start": "1902080",
    "end": "1909679"
  },
  {
    "text": "of an element in psychology valence means the intrinsic",
    "start": "1909679",
    "end": "1915279"
  },
  {
    "text": "attractiveness of an object and in linguistics it's the number of elements",
    "start": "1915279",
    "end": "1920880"
  },
  {
    "text": "that a word combines so keeping those kind of parallel",
    "start": "1920880",
    "end": "1926240"
  },
  {
    "text": "definitions of it in the context of data valence is the tendency of the",
    "start": "1926240",
    "end": "1931919"
  },
  {
    "text": "individual data to connect as well as the overall connectedness of",
    "start": "1931919",
    "end": "1937679"
  },
  {
    "text": "the data set itself and if that still doesn't make sense because i know it took me a while the",
    "start": "1937679",
    "end": "1944399"
  },
  {
    "text": "explain like like m5 version is the higher the valence on your data set the",
    "start": "1944399",
    "end": "1949600"
  },
  {
    "text": "more connections there are within your data that's as simple as i could put it if you have a better one select me",
    "start": "1949600",
    "end": "1957519"
  },
  {
    "text": "so keeping that in mind knowing hopefully understanding what valence means",
    "start": "1957519",
    "end": "1963120"
  },
  {
    "text": "over time the data that we collect especially if we are a data heavy company they can it can",
    "start": "1963120",
    "end": "1969679"
  },
  {
    "text": "become very very dense we collect a lot of data over time and it can become very",
    "start": "1969679",
    "end": "1975120"
  },
  {
    "text": "very complex and when we continue to aggregate all this data and run all of these analytics",
    "start": "1975120",
    "end": "1981840"
  },
  {
    "text": "on it it can become way more unevenly connected meaning the relationships",
    "start": "1981840",
    "end": "1987600"
  },
  {
    "text": "between them can kind of be like five percent connected but then this one could be 25 connected and then maybe",
    "start": "1987600",
    "end": "1994159"
  },
  {
    "text": "some data from five years ago is somehow connected to data you're going to collect in the future these kinds of",
    "start": "1994159",
    "end": "2001039"
  },
  {
    "text": "connections these kinds of relationships they become much much harder to analyze and moreover",
    "start": "2001039",
    "end": "2007519"
  },
  {
    "text": "break down especially if you are using analytics tools that for the most part have been",
    "start": "2007519",
    "end": "2013360"
  },
  {
    "text": "built on top of the relational data model so for scenarios like this nosql",
    "start": "2013360",
    "end": "2018880"
  },
  {
    "text": "databases may probably come to the rescue for you specifically graph databases because they are way more",
    "start": "2018880",
    "end": "2026000"
  },
  {
    "text": "expressive in in showing you the connections and relationships of your data especially if",
    "start": "2026000",
    "end": "2032480"
  },
  {
    "text": "they are this complex and this irregular",
    "start": "2032480",
    "end": "2036720"
  },
  {
    "text": "so is nosql the way to go again if you are on that top spectrum",
    "start": "2039600",
    "end": "2046240"
  },
  {
    "text": "there if you have large data volume if you have a high velocity of data meaning that the you",
    "start": "2046240",
    "end": "2052878"
  },
  {
    "text": "have a lot of rights the data points in that you're storing changes often as well as your schema your data model",
    "start": "2052879",
    "end": "2059200"
  },
  {
    "text": "changes often maybe you're adding fields left and right taking them out if if that's high if you have a wide",
    "start": "2059200",
    "end": "2067040"
  },
  {
    "text": "variety of data of volatility a high volatility of data meaning your",
    "start": "2067040",
    "end": "2072079"
  },
  {
    "text": "data is all over the place it's varied it's not as uniform as you would expect it to be and if your data valence is",
    "start": "2072079",
    "end": "2078960"
  },
  {
    "text": "high meaning you have a lot of connections that may not be as easily",
    "start": "2078960",
    "end": "2084720"
  },
  {
    "text": "modeled in a relational database then yes yes nosql is probably the way to go it's",
    "start": "2084720",
    "end": "2092398"
  },
  {
    "text": "a general rough rule there of course exceptions but in in essence yes you can be confident that",
    "start": "2092399",
    "end": "2100160"
  },
  {
    "text": "that is the way to go however if you're on the opposite side",
    "start": "2100160",
    "end": "2106160"
  },
  {
    "text": "if your volume is not that large if you're not you know having to deal with web scale if if your velocity of data is",
    "start": "2106160",
    "end": "2113119"
  },
  {
    "text": "pretty consistent or predictable you don't need to you know that it's not going to change",
    "start": "2113119",
    "end": "2118880"
  },
  {
    "text": "often if the data that you have is more uniform it's more homogeneous it's you",
    "start": "2118880",
    "end": "2124000"
  },
  {
    "text": "know what kind of data you're going to be getting and if the connections that you have",
    "start": "2124000",
    "end": "2129359"
  },
  {
    "text": "can be expressed just fine with the relational databases then",
    "start": "2129359",
    "end": "2135280"
  },
  {
    "text": "sorry to say but it's probably not the way to go you probably are going to be better off just",
    "start": "2135280",
    "end": "2140560"
  },
  {
    "text": "sticking with a relational database so yes the title of my talk may have been like i work for mongodb and i'm going to",
    "start": "2140560",
    "end": "2147839"
  },
  {
    "text": "sell you no sql but that's not the case i want to just show you at least a framework a guideline some steps that",
    "start": "2147839",
    "end": "2154560"
  },
  {
    "text": "you can hopefully take with yourself and your team when you're brainstorming to kind of get these kinds of questions",
    "start": "2154560",
    "end": "2161280"
  },
  {
    "text": "answered to see if it's really right for you so great now we know is nosql the way to",
    "start": "2161280",
    "end": "2169599"
  },
  {
    "start": "2165000",
    "end": "2358000"
  },
  {
    "text": "go based on these four characteristics so step one check let's say that we find",
    "start": "2169599",
    "end": "2175200"
  },
  {
    "text": "ourselves on the higher end of those characteristics so we move on to the",
    "start": "2175200",
    "end": "2180560"
  },
  {
    "text": "next step and i like to call that acid or base",
    "start": "2180560",
    "end": "2185760"
  },
  {
    "text": "and again i want to make very clear these are not one-to-one comparisons i like to think of them as the the set of",
    "start": "2185760",
    "end": "2191760"
  },
  {
    "text": "properties that i think the system requires and so when we're thinking about these",
    "start": "2191760",
    "end": "2197680"
  },
  {
    "text": "the questions that i think are the most important when deciding among these these two models is",
    "start": "2197680",
    "end": "2204640"
  },
  {
    "text": "these four values here so if you know that you need safe rights if",
    "start": "2204640",
    "end": "2212079"
  },
  {
    "text": "you know that those need to be prioritized over fast rights if you know you have money to spend on",
    "start": "2212079",
    "end": "2218480"
  },
  {
    "text": "high-end hardware or know that you're going to be scaling vertically and if you know that you need a pessimistic",
    "start": "2218480",
    "end": "2224960"
  },
  {
    "text": "model a rigid model because of the right safety that you need then",
    "start": "2224960",
    "end": "2230800"
  },
  {
    "text": "okay fine we'll go with relational databases because again the fact of the matter is",
    "start": "2230800",
    "end": "2235839"
  },
  {
    "text": "it's probably going to be the best bet for you there uh they have been built",
    "start": "2235839",
    "end": "2241280"
  },
  {
    "text": "with these properties in mind and they have just been working that way for a while so if these are the kinds of",
    "start": "2241280",
    "end": "2247119"
  },
  {
    "text": "guarantees that you require in your system then yes we're going to go to relational databases",
    "start": "2247119",
    "end": "2254960"
  },
  {
    "text": "it is worth noting though just a little side note that there are some nosql",
    "start": "2255200",
    "end": "2262320"
  },
  {
    "text": "databases that do offer asset guarantees to an extent so for example neo4j the",
    "start": "2262320",
    "end": "2269200"
  },
  {
    "text": "graph database does offer acid compliance in their graph databases same with mongodb at",
    "start": "2269200",
    "end": "2276079"
  },
  {
    "text": "least via version 4.0 and higher we do have multi-document acid guarantees",
    "start": "2276079",
    "end": "2284520"
  },
  {
    "text": "now if you're thinking okay well the system doesn't need to be that rigid what we're",
    "start": "2285920",
    "end": "2291119"
  },
  {
    "text": "building here doesn't really need that what we need to focus on is uh fast rights we need to prioritize how",
    "start": "2291119",
    "end": "2298320"
  },
  {
    "text": "much we can write and how much we can get stored in our database the safety of it is not as important it doesn't mean",
    "start": "2298320",
    "end": "2304960"
  },
  {
    "text": "we're going to neglect it it doesn't mean we're not going to have it at all it just means it's not a priority",
    "start": "2304960",
    "end": "2310640"
  },
  {
    "text": "and if we know that this model that we require can be more optimistic if we",
    "start": "2310640",
    "end": "2316720"
  },
  {
    "text": "know that it can be more loose than the more rigid acid properties that we have seen then base is probably the um set of",
    "start": "2316720",
    "end": "2325680"
  },
  {
    "text": "guidelines that you want to look for when you are choosing whether or not to go the nosql technology or no sql",
    "start": "2325680",
    "end": "2332160"
  },
  {
    "text": "database and for that reason because most new sql databases do",
    "start": "2332160",
    "end": "2337680"
  },
  {
    "text": "fulfill these properties these base properties then that's another reason to",
    "start": "2337680",
    "end": "2342720"
  },
  {
    "text": "say yes you have passed step two you fall within those those lines and",
    "start": "2342720",
    "end": "2348160"
  },
  {
    "text": "you can probably move ahead and keep going towards some kind of nosql",
    "start": "2348160",
    "end": "2355200"
  },
  {
    "text": "tech so",
    "start": "2355200",
    "end": "2360240"
  },
  {
    "text": "we have gotten through nosql databases we know that if we have high data volume",
    "start": "2360240",
    "end": "2366720"
  },
  {
    "text": "if you have high data variety our valence is high and we have a high",
    "start": "2366720",
    "end": "2371839"
  },
  {
    "text": "velocity of data that has checked we get to the next point if we know that",
    "start": "2371839",
    "end": "2376960"
  },
  {
    "text": "the models that we need the properties that we need fall more in line with the base properties they're a",
    "start": "2376960",
    "end": "2383680"
  },
  {
    "text": "little bit more loose a little bit more optimistic uh we can finally now get to the third",
    "start": "2383680",
    "end": "2389119"
  },
  {
    "text": "step which is where i think a lot of us tend to start and that is the cap filter",
    "start": "2389119",
    "end": "2395040"
  },
  {
    "text": "so this is where i think a lot of us start we just go what are we using",
    "start": "2395040",
    "end": "2401599"
  },
  {
    "text": "and we don't really think of anything else and i think that's completely turned uh turned around we shouldn't",
    "start": "2401599",
    "end": "2407920"
  },
  {
    "text": "start with the tech we shouldn't say oh we're going to use that immediately because i read some tweets somewhere",
    "start": "2407920",
    "end": "2413359"
  },
  {
    "text": "that it's amazing and it's going to be great i i don't think we should start that way",
    "start": "2413359",
    "end": "2418880"
  },
  {
    "text": "i think that if we have gone through the first two steps of asking ourselves of really truly",
    "start": "2418880",
    "end": "2424960"
  },
  {
    "text": "understanding what our system requires by the time you get to this step it's almost then it should almost be",
    "start": "2424960",
    "end": "2432400"
  },
  {
    "text": "very very quick because if you know that you need a partition",
    "start": "2432400",
    "end": "2437599"
  },
  {
    "text": "tolerant consistent consistent system for example then you can start to narrow",
    "start": "2437599",
    "end": "2442800"
  },
  {
    "text": "down the available systems that fulfill that and then once you have that you can",
    "start": "2442800",
    "end": "2448480"
  },
  {
    "text": "narrow down even further via the data model that you find will be the most useful for you so for example if we have",
    "start": "2448480",
    "end": "2455520"
  },
  {
    "text": "gotten to this point it's almost like a a funnel or a sieve that has said okay",
    "start": "2455520",
    "end": "2461119"
  },
  {
    "text": "not move this out of the way move this out of the way and we're now excuse me at step three and we are we have",
    "start": "2461119",
    "end": "2468560"
  },
  {
    "text": "answered all those questions we know that we need at the very end a partition tolerant consistent system now the only",
    "start": "2468560",
    "end": "2475359"
  },
  {
    "text": "thing you'll have to do is decide what data model to use so you know if you know you need a document database hey",
    "start": "2475359",
    "end": "2481280"
  },
  {
    "text": "mongodb i think it's a great choice and maybe a little bit biased but that's something",
    "start": "2481280",
    "end": "2486319"
  },
  {
    "text": "that is i think a little bit easier to go through versus starting with mongodb then researching everything else and",
    "start": "2486319",
    "end": "2492880"
  },
  {
    "text": "then finding out oh this doesn't have something that we need or some other characteristic",
    "start": "2492880",
    "end": "2498240"
  },
  {
    "text": "or let's say you needed some kind of a key value store then you would go to redis and same thing with",
    "start": "2498240",
    "end": "2504240"
  },
  {
    "text": "the other different data models at this point it should be much easier for you to decide which one to go with",
    "start": "2504240",
    "end": "2512319"
  },
  {
    "text": "because you'll have your little uh checklist of things that you know you need from the previous two steps and",
    "start": "2512319",
    "end": "2518960"
  },
  {
    "text": "you'll know that you can kind of have a framework and check against those",
    "start": "2518960",
    "end": "2524240"
  },
  {
    "text": "things when you are eventually researching the tech that you need now on the other hand if you need a",
    "start": "2524240",
    "end": "2530319"
  },
  {
    "text": "partition tolerant available system and you know you need a wide column store cassandra is your best bet or you can",
    "start": "2530319",
    "end": "2536319"
  },
  {
    "text": "start looking at couch couchdb at amazon dynamodb react again it's the",
    "start": "2536319",
    "end": "2541680"
  },
  {
    "text": "same thing where if you know you've gotten to this point the last thing to do is see",
    "start": "2541680",
    "end": "2547200"
  },
  {
    "text": "which data model fits for you and then find the database that matches that",
    "start": "2547200",
    "end": "2552480"
  },
  {
    "text": "so at the end of this three-step guide",
    "start": "2552480",
    "end": "2558480"
  },
  {
    "text": "what i have hopefully shown here is that it's not necessarily a a foolproof way",
    "start": "2558480",
    "end": "2565520"
  },
  {
    "text": "to say this is the right uh tech that we're going to use not at all this is more of a a framework",
    "start": "2565520",
    "end": "2573200"
  },
  {
    "text": "uh uh almost an exercise for your team to be able to say do we know the answers",
    "start": "2573200",
    "end": "2578720"
  },
  {
    "text": "to these questions do we know what we truly need and do we know that we're not going to be biased or swayed any one way",
    "start": "2578720",
    "end": "2587040"
  },
  {
    "text": "because of superfluous reasons if we can answer the questions in",
    "start": "2587040",
    "end": "2592079"
  },
  {
    "text": "step one which is is our data volume high velocity high valence high variety",
    "start": "2592079",
    "end": "2598160"
  },
  {
    "text": "high then you can be a little bit more confident that whatever whatever nosql database you end up choosing it's going",
    "start": "2598160",
    "end": "2604400"
  },
  {
    "text": "to work for you same thing you kind of just filter it down even further if you go through the",
    "start": "2604400",
    "end": "2610640"
  },
  {
    "text": "acid and base exercise and see which properties that you need again you're just more solid and you're",
    "start": "2610640",
    "end": "2616800"
  },
  {
    "text": "more confident in your decision because you are aware of the properties that your system will need",
    "start": "2616800",
    "end": "2622800"
  },
  {
    "text": "and finally by the time you get to the cap filter which should remain at step three i wholeheartedly believe",
    "start": "2622800",
    "end": "2629440"
  },
  {
    "text": "it should be much easier to just focus then on the data model that you need",
    "start": "2629440",
    "end": "2635839"
  },
  {
    "start": "2636000",
    "end": "2688000"
  },
  {
    "text": "so with all of that said i hopefully i'm not necessarily hoping i've changed",
    "start": "2636640",
    "end": "2643200"
  },
  {
    "text": "your mind specifically and said yes nosql databases but i'm hoping that this has shown you a way a smarter way to",
    "start": "2643200",
    "end": "2650480"
  },
  {
    "text": "consider if nosql databases is right for you and in the end naturally you'll say yes",
    "start": "2650480",
    "end": "2656960"
  },
  {
    "text": "and that is say yes to nosql databases so",
    "start": "2656960",
    "end": "2662079"
  },
  {
    "text": "that is it for me thank you salamat that is thank you in tagalog",
    "start": "2662079",
    "end": "2667520"
  },
  {
    "text": "and that is it for me i'll be select checking out the slack if you have any questions i will post the",
    "start": "2667520",
    "end": "2672880"
  },
  {
    "text": "link to my slides there thank you for your time and i hope you enjoy the rest of the last day of ndc",
    "start": "2672880",
    "end": "2679359"
  },
  {
    "text": "sydney",
    "start": "2679359",
    "end": "2682359"
  }
]