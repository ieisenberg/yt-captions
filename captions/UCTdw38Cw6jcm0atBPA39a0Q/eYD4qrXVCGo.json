[
  {
    "start": "0",
    "end": "49000"
  },
  {
    "text": "hello everyone thank you very much for being here with me today at ndc sydney",
    "start": "8320",
    "end": "13360"
  },
  {
    "text": "i'm really looking forward to presenting to you from horror story to fairy tale writing code that people want to read",
    "start": "13360",
    "end": "20720"
  },
  {
    "text": "i am happy to take questions throughout the presentation feel free to either unmute yourself and",
    "start": "20720",
    "end": "27519"
  },
  {
    "text": "chime in or to leave comments in the room 4 channel in slack i'll be monitoring that as well if you have any",
    "start": "27519",
    "end": "33920"
  },
  {
    "text": "questions or comments throughout the session and there are a few places that i'll be looking for interaction so",
    "start": "33920",
    "end": "39920"
  },
  {
    "text": "please feel free to interrupt at any point and i look forward to talking with you",
    "start": "39920",
    "end": "46320"
  },
  {
    "start": "49000",
    "end": "49000"
  },
  {
    "text": "so when we are building software we have some goals some design goals",
    "start": "49600",
    "end": "56879"
  },
  {
    "text": "and i'm happy to listen to any goals that you have when you're writing software there's a few things that i've",
    "start": "56879",
    "end": "63680"
  },
  {
    "text": "come up with some implicit goals that we have first one i came up with is that the",
    "start": "63680",
    "end": "70479"
  },
  {
    "text": "program does what it is supposed to do right that's an important goal when we're building software and it's",
    "start": "70479",
    "end": "76320"
  },
  {
    "text": "something that we always have but don't necessarily write down anywhere it's kind of an implied thing are there other",
    "start": "76320",
    "end": "82880"
  },
  {
    "text": "implied design goals you can think of that we have when we are building and designing software",
    "start": "82880",
    "end": "90960"
  },
  {
    "text": "perhaps there's no bugs",
    "start": "93439",
    "end": "97040"
  },
  {
    "text": "perhaps there are no security vulnerabilities and feel free to type them into slack or just chime in",
    "start": "98479",
    "end": "105679"
  },
  {
    "text": "the software should be easy to use right that's a goal we commonly have when we're building software",
    "start": "106320",
    "end": "114840"
  },
  {
    "text": "and another one that is often a goal but not something that's necessarily codified is that the code should be easy",
    "start": "115200",
    "end": "121920"
  },
  {
    "text": "to modify as the requirements change we want to be able to develop the continue to develop on the",
    "start": "121920",
    "end": "128239"
  },
  {
    "text": "software over time we want it to be able to grow and adapt and change and there's a lot of things that we do",
    "start": "128239",
    "end": "134879"
  },
  {
    "text": "to kind of build this into our processes but we don't always identify this as a",
    "start": "134879",
    "end": "141280"
  },
  {
    "text": "stated clearly defined goal of our projects but it's often there in the background",
    "start": "141280",
    "end": "147200"
  },
  {
    "text": "so with these goals in mind these implicit goals in mind let's talk about the active writing software",
    "start": "147200",
    "end": "155200"
  },
  {
    "text": "so where do you spend your time as a developer what are things that you spend time on",
    "start": "155680",
    "end": "163360"
  },
  {
    "start": "165000",
    "end": "165000"
  },
  {
    "text": "some of the activities that you do may include typing code",
    "start": "165360",
    "end": "171040"
  },
  {
    "text": "actually physically entering code into the system what are some other things you do you may",
    "start": "171040",
    "end": "177040"
  },
  {
    "text": "do brainstorming or spend time problem solving working things out in your head or on a whiteboard or whatever that may look",
    "start": "177040",
    "end": "182879"
  },
  {
    "text": "like one of the top answers i get to this question is of course meetings we spend a lot of time",
    "start": "182879",
    "end": "190000"
  },
  {
    "text": "interacting in whether it's a virtual meeting or an in-person meeting we spend a lot of time talking with each other hashing things out",
    "start": "190000",
    "end": "197519"
  },
  {
    "text": "uh one type of thing that we do is testing we write unit tests maybe we do manual testing",
    "start": "197519",
    "end": "202800"
  },
  {
    "text": "integration tests whatever type of testing we're doing we do a lot of it and sometimes we spend more time",
    "start": "202800",
    "end": "208799"
  },
  {
    "text": "writing code for tests than we spend writing the code that we're testing",
    "start": "208799",
    "end": "213840"
  },
  {
    "text": "documentation right not all the writing we do is code some of the code the writing we do is",
    "start": "214480",
    "end": "220400"
  },
  {
    "text": "just documentation or plain english whether it's technical documentation or user documentation that's another thing",
    "start": "220400",
    "end": "225680"
  },
  {
    "text": "we may do in part of our role as a software developer",
    "start": "225680",
    "end": "230560"
  },
  {
    "text": "so all of these things have something in common and that is we spend a lot of time reading code we have to understand",
    "start": "231599",
    "end": "238799"
  },
  {
    "text": "the could that has been written whether it was written by us or someone else so we spend a lot of time reading code",
    "start": "238799",
    "end": "244480"
  },
  {
    "text": "in fact from the book clean code the ratio of time spent reading versus writing is well over ten to one we are",
    "start": "244480",
    "end": "251519"
  },
  {
    "text": "constantly reading old code as part of the effort to write new code therefore",
    "start": "251519",
    "end": "256639"
  },
  {
    "text": "making code easier to read makes it easier to write",
    "start": "256639",
    "end": "261759"
  },
  {
    "text": "another quote this is a known as eagleson's law it's unattributed",
    "start": "261759",
    "end": "267280"
  },
  {
    "text": "any code of your own that you haven't looked at for six or more months might as well have been written by somebody",
    "start": "267280",
    "end": "272800"
  },
  {
    "text": "else and i've actually seen a number of people claim that that's probably as short as",
    "start": "272800",
    "end": "279600"
  },
  {
    "text": "eight or ten weeks when we put something out of our head for just a few weeks",
    "start": "279600",
    "end": "285199"
  },
  {
    "text": "when we come back to it we've got to pick it back up again it's no longer in our working memory it's no",
    "start": "285199",
    "end": "291440"
  },
  {
    "text": "longer ready we've got to go back through the effort of figuring it out",
    "start": "291440",
    "end": "297520"
  },
  {
    "text": "therefore it might as well be written by somebody else another quote that i love about this concept of reading code",
    "start": "297520",
    "end": "304560"
  },
  {
    "text": "from martin fowler any tool can write good can write code that a computer can understand but good programmers write",
    "start": "304560",
    "end": "310240"
  },
  {
    "text": "code that humans can understand and this this brings me to an important concept about code",
    "start": "310240",
    "end": "318240"
  },
  {
    "text": "and when we think about the activities that we do as programmers in fact",
    "start": "318240",
    "end": "324400"
  },
  {
    "text": "let's go back to that list really quickly only one of these involves writing code",
    "start": "324400",
    "end": "330240"
  },
  {
    "text": "but all of them involve reading code right and because of this code perhaps",
    "start": "330240",
    "end": "336800"
  },
  {
    "text": "doesn't exist to tell the computer what to do that is not its primary function",
    "start": "336800",
    "end": "342639"
  },
  {
    "text": "its primary function is perhaps to serve as documentation and communication to other developers",
    "start": "342639",
    "end": "348960"
  },
  {
    "text": "yes it needs to do what we set out for it to do but it spends most of its time",
    "start": "348960",
    "end": "354960"
  },
  {
    "text": "most of the life of the code we write is spent as communication to people",
    "start": "354960",
    "end": "361440"
  },
  {
    "text": "not necessarily to the machine it's an important perspective for us to have when we think about how we're going",
    "start": "361440",
    "end": "367840"
  },
  {
    "text": "to write code so a quick introduction of myself i have been working as a software developer for",
    "start": "367840",
    "end": "374400"
  },
  {
    "text": "more than 20 years and i have worked for a number of different startups and companies i have",
    "start": "374400",
    "end": "381120"
  },
  {
    "text": "definitely written some horror story code in the past and we're going to look a little bit at some horror story code",
    "start": "381120",
    "end": "388080"
  },
  {
    "text": "look at code that was written just for the machine and then look at ways that we can",
    "start": "388080",
    "end": "393919"
  },
  {
    "text": "process this so here is a code example of bad code",
    "start": "393919",
    "end": "399280"
  },
  {
    "text": "that i pulled from the daily wtf which is a great fail blog website for developers",
    "start": "399280",
    "end": "406479"
  },
  {
    "text": "and i challenge you to tell me in two minutes what this does",
    "start": "406479",
    "end": "413199"
  },
  {
    "text": "it's very interesting to look at what is it doing it let's look at the first line you are converting",
    "start": "415039",
    "end": "422400"
  },
  {
    "text": "a fixed time string to a date time object and then back to a string",
    "start": "422400",
    "end": "427440"
  },
  {
    "text": "and then back to a date time object and then back to a string wait that's no except that's datetime.now so now we",
    "start": "427440",
    "end": "432800"
  },
  {
    "text": "have the current time as a string and this other thing is a string and we're doing all this manipulation and this",
    "start": "432800",
    "end": "439280"
  },
  {
    "text": "code the way it is written takes time to figure out and when we get",
    "start": "439280",
    "end": "444400"
  },
  {
    "text": "all the way down to the bottom we're saying if x is greater than 10. wait hold up where does x come from",
    "start": "444400",
    "end": "451759"
  },
  {
    "text": "if we look that it's on a split as a split of a result we're subtracting the two dates we're splitting them my guess is",
    "start": "451759",
    "end": "458800"
  },
  {
    "text": "that's returning true if there's 10 or more day or there's more than 10 days between today and the other date",
    "start": "458800",
    "end": "465919"
  },
  {
    "text": "but i'm not 100 sure i'd have to really dig into that it's not immediately obvious",
    "start": "465919",
    "end": "471680"
  },
  {
    "text": "the the naming of the variables does not help us there are no comments to help us",
    "start": "471680",
    "end": "477360"
  },
  {
    "text": "there is an assumption that we're going to be able to understand this there's no",
    "start": "477360",
    "end": "482479"
  },
  {
    "text": "context of why we're doing it right at the end of the day we're bringing in",
    "start": "482479",
    "end": "488479"
  },
  {
    "text": "we're bringing in dates and returning a boolean true or false",
    "start": "488479",
    "end": "493560"
  },
  {
    "text": "so one thing that we can do to make code easier to read is potentially to have more descriptive variable names so let's",
    "start": "494080",
    "end": "499919"
  },
  {
    "text": "look at this example very long variable names inventory integration direction dot do",
    "start": "499919",
    "end": "507120"
  },
  {
    "text": "the same change in shop calling a function do the same changes shop",
    "start": "507120",
    "end": "512959"
  },
  {
    "text": "what does that mean do the same change in shop did the same changes what same as what we use the",
    "start": "512959",
    "end": "520640"
  },
  {
    "text": "word like same it indicates that we are comparing something that we're doing something in relation to another thing",
    "start": "520640",
    "end": "526959"
  },
  {
    "text": "but there's no other thing here for us to compare with the same is what get changed data from inventory okay so",
    "start": "526959",
    "end": "533519"
  },
  {
    "text": "the data's changed it's changed based upon a sync date but then what am i doing with it the only verb here is do",
    "start": "533519",
    "end": "541920"
  },
  {
    "text": "and so maybe maybe if i was working on this software and i had all the context",
    "start": "541920",
    "end": "547040"
  },
  {
    "text": "of this piece of software in my head this might possibly make sense to me but it's certainly not going to make sense",
    "start": "547040",
    "end": "552160"
  },
  {
    "text": "to a brand new developer starting on this project they're going to have no idea what this means",
    "start": "552160",
    "end": "557600"
  },
  {
    "text": "so even though we have used long variable names descriptive variable names all these things then it doesn't",
    "start": "557600",
    "end": "563360"
  },
  {
    "text": "help because the specific language we've used is not helpful so now instead of",
    "start": "563360",
    "end": "568959"
  },
  {
    "text": "something that is short and confusing we have something that is verbose",
    "start": "568959",
    "end": "574160"
  },
  {
    "text": "and confusing and that's not helpful",
    "start": "574160",
    "end": "577839"
  },
  {
    "text": "last example another example from the daily wtf",
    "start": "579200",
    "end": "584880"
  },
  {
    "text": "what does this do does it return true or false at the bottom if everything's successful",
    "start": "584880",
    "end": "592160"
  },
  {
    "text": "it takes this time to process this and there's a few reasons why first we're starting by setting",
    "start": "592959",
    "end": "598959"
  },
  {
    "text": "something to false that we're or equaling it to something else which means the previous value or the next",
    "start": "598959",
    "end": "605680"
  },
  {
    "text": "value and then but we're ordering it to the negation of",
    "start": "605680",
    "end": "612720"
  },
  {
    "text": "the return of another thing update file sir template presumably that might return true if",
    "start": "612720",
    "end": "618959"
  },
  {
    "text": "it's successful and then at the bottom we're negating that result but the name of the variable is also a",
    "start": "618959",
    "end": "625440"
  },
  {
    "text": "not so here's what's going on we have lots and lots of negations we have one two three four what do we have ten",
    "start": "625440",
    "end": "630640"
  },
  {
    "text": "negations in here 12 negations negations are actually really hard to",
    "start": "630640",
    "end": "636160"
  },
  {
    "text": "read negatives take time because we always kind of in our head convert those",
    "start": "636160",
    "end": "642000"
  },
  {
    "text": "negatives to positives in order to understand the thing that's actually happening and so when we write code like this sure",
    "start": "642000",
    "end": "649519"
  },
  {
    "text": "this may be really elegant it may work really really well but it takes time to process and understand okay is this",
    "start": "649519",
    "end": "656160"
  },
  {
    "text": "going to return true or false at the end when it's successful",
    "start": "656160",
    "end": "661279"
  },
  {
    "text": "so there are ways that we can write code to make this easier to read without necessarily making any longer more verbose",
    "start": "661279",
    "end": "667680"
  },
  {
    "text": "so we need to think about those things when we're looking at code and understand that the more straightforward the code is the easier it is going to be",
    "start": "667680",
    "end": "674240"
  },
  {
    "text": "to read so why do we care",
    "start": "674240",
    "end": "679760"
  },
  {
    "text": "i've shown you some examples of bad code potentially but is it really that big of a deal like if",
    "start": "679760",
    "end": "686399"
  },
  {
    "text": "i ran out of that code i would be able to figure out what it did i'd be able to make my changes i'd be able to move along my life so why do i care",
    "start": "686399",
    "end": "693519"
  },
  {
    "text": "about writing more readable code",
    "start": "693519",
    "end": "698160"
  },
  {
    "start": "698000",
    "end": "698000"
  },
  {
    "text": "and one of those reasons is that there is confusion code is a form of communication",
    "start": "698560",
    "end": "705600"
  },
  {
    "text": "when there's confusion in our communication it's hard to know what's going on i'm going to read a quick quote",
    "start": "705600",
    "end": "710959"
  },
  {
    "text": "from spacex excessive use of made-up acronyms is a",
    "start": "710959",
    "end": "716240"
  },
  {
    "text": "significant impediment to communication and keeping communication good as we grow is incredibly important",
    "start": "716240",
    "end": "721360"
  },
  {
    "text": "individually a few acronyms here or there may not seem so bad but if a thousand people are making these up over",
    "start": "721360",
    "end": "727600"
  },
  {
    "text": "time the result will be a huge glossary that we have to issue to new employees",
    "start": "727600",
    "end": "733040"
  },
  {
    "text": "no one can actually remember all these acronyms and people don't want to seem dumb in a meeting so they just sit there",
    "start": "733040",
    "end": "738160"
  },
  {
    "text": "in ignorance and this is particularly tough on new employees",
    "start": "738160",
    "end": "743120"
  },
  {
    "text": "so this is a great example of why acronyms may be bad or harmful because",
    "start": "743200",
    "end": "748800"
  },
  {
    "text": "they don't necessarily mean anything to us until we've learned this essentially learned a brand new language",
    "start": "748800",
    "end": "754240"
  },
  {
    "text": "but this applies actually to anything where the language that we're using",
    "start": "754240",
    "end": "759519"
  },
  {
    "text": "isn't going to be immediately obvious to somebody that is new to the team or the project whether it's an acronym or not",
    "start": "759519",
    "end": "766800"
  },
  {
    "text": "so anytime we have are using communication in a way that is confusing to newcomers",
    "start": "766800",
    "end": "774000"
  },
  {
    "text": "we have created a problem in our organization that we're going to overcome one reason that is a problem",
    "start": "774000",
    "end": "780959"
  },
  {
    "start": "779000",
    "end": "779000"
  },
  {
    "text": "is because we are always onboarding people to our teams even small teams even well established",
    "start": "780959",
    "end": "788560"
  },
  {
    "text": "teams we tend to on board people fairly regularly that might be because",
    "start": "788560",
    "end": "794160"
  },
  {
    "text": "many developers switch jobs every two years two to four years it could be because we're hiring outside",
    "start": "794160",
    "end": "800320"
  },
  {
    "text": "contractors to expand our resources to to work on specific parts of our projects it could be because our teams",
    "start": "800320",
    "end": "806480"
  },
  {
    "text": "are growing whatever the reason anytime we bring somebody new onto our",
    "start": "806480",
    "end": "813200"
  },
  {
    "text": "team if we have introduced confusion it is harder for them to get up and running",
    "start": "813200",
    "end": "818240"
  },
  {
    "text": "harder for them to be able to contribute value to our project that looks bad on them",
    "start": "818240",
    "end": "823279"
  },
  {
    "text": "but it's also bad for us because now those of us that are still there are happen to work extra hard to make up",
    "start": "823279",
    "end": "829040"
  },
  {
    "text": "that difference another reason that this is important is for inclusivity",
    "start": "829040",
    "end": "836160"
  },
  {
    "start": "831000",
    "end": "831000"
  },
  {
    "text": "not everybody has the exact same background as a developer",
    "start": "836160",
    "end": "843600"
  },
  {
    "text": "some developers come from computer science degrees they have a master's in computer science they may be worked at",
    "start": "843600",
    "end": "850000"
  },
  {
    "text": "google microsoft or facebook and that is their background we may have other developers that",
    "start": "850000",
    "end": "855600"
  },
  {
    "text": "they graduated high school went to a coding academy and started coding and both of those backgrounds are perfectly",
    "start": "855600",
    "end": "861040"
  },
  {
    "text": "valid but that means you have a different common language to use when you're",
    "start": "861040",
    "end": "868560"
  },
  {
    "text": "working on things and it means that different people have different access",
    "start": "868560",
    "end": "873600"
  },
  {
    "text": "to or different have gone through different educational paths when learning to code and therefore the way",
    "start": "873600",
    "end": "878959"
  },
  {
    "text": "we write our code is going to be more easily understood",
    "start": "878959",
    "end": "886079"
  },
  {
    "text": "by some developers than others so we need to think about this are we",
    "start": "886079",
    "end": "891120"
  },
  {
    "text": "inadvertently creating barriers to entry for future developers based upon the way",
    "start": "891120",
    "end": "898720"
  },
  {
    "text": "we build our code when we think about our code s communication to future developers",
    "start": "898720",
    "end": "903920"
  },
  {
    "text": "it's very important accessibility",
    "start": "903920",
    "end": "908879"
  },
  {
    "start": "906000",
    "end": "906000"
  },
  {
    "text": "clean code semantic code especially things that are ui related like html is a very important",
    "start": "909600",
    "end": "916560"
  },
  {
    "text": "part of it an accessibility implementation but it's also important to remember that the developers you work with may",
    "start": "916560",
    "end": "924480"
  },
  {
    "text": "also have need for accessibility tools",
    "start": "924480",
    "end": "930079"
  },
  {
    "text": "maybe your the developers you are working with need to be able to customize their ide with different",
    "start": "930079",
    "end": "936160"
  },
  {
    "text": "colors because they have color deficiency they don't see colors the same way you do",
    "start": "936160",
    "end": "941680"
  },
  {
    "text": "they may have other disabilities that make it harder for them to do certain",
    "start": "941680",
    "end": "946720"
  },
  {
    "text": "things than others and if we have written code in a way that is not easily",
    "start": "946720",
    "end": "952480"
  },
  {
    "text": "approached through accessibility tools we've made it harder for those people to work on our projects and that is a huge",
    "start": "952480",
    "end": "959839"
  },
  {
    "text": "problem we don't want to do that another reason to write clean",
    "start": "959839",
    "end": "965839"
  },
  {
    "start": "962000",
    "end": "962000"
  },
  {
    "text": "approachable easily understood easy to read code is that it's easier to avoid bugs",
    "start": "965839",
    "end": "971600"
  },
  {
    "text": "the more straightforward our code is the easier it is to identify bugs to avoid them in the first place and often this",
    "start": "971600",
    "end": "978480"
  },
  {
    "text": "makes the code more testable again when it's easy to write",
    "start": "978480",
    "end": "983519"
  },
  {
    "start": "981000",
    "end": "981000"
  },
  {
    "text": "tests when it's easy when accessibility is easy automation is easier consistency",
    "start": "983519",
    "end": "989519"
  },
  {
    "text": "helps us build automation and maybe save ourselves time through document",
    "start": "989519",
    "end": "994720"
  },
  {
    "text": "conversion code generation text parsing linting all these types of things these are all examples of automation that help",
    "start": "994720",
    "end": "1001040"
  },
  {
    "text": "us as developers to make our lives easier another thing that factors into code is",
    "start": "1001040",
    "end": "1008480"
  },
  {
    "start": "1004000",
    "end": "1004000"
  },
  {
    "text": "communication is going to be naming it's just one small aspect of code",
    "start": "1008480",
    "end": "1014079"
  },
  {
    "text": "readability but it is a fairly important one and it's a fairly challenging one in fact",
    "start": "1014079",
    "end": "1020160"
  },
  {
    "text": "this quote this is an old quote from phil clark colton was working on netscape navigator at the",
    "start": "1020160",
    "end": "1025678"
  },
  {
    "text": "time i believe there are only two hard things in computer science cash invalidation a known hard problem",
    "start": "1025679",
    "end": "1033199"
  },
  {
    "text": "and naming things so coming up with good meaningful names",
    "start": "1033199",
    "end": "1039918"
  },
  {
    "text": "phil was saying is just as hard as some of the hardest problems in computer science",
    "start": "1039919",
    "end": "1046079"
  },
  {
    "text": "it is a challenge but it is a challenge that is worth our time and effort in just the same way",
    "start": "1046079",
    "end": "1052880"
  },
  {
    "text": "that solving the hard problems are when we talk about names what are things",
    "start": "1052880",
    "end": "1059919"
  },
  {
    "start": "1057000",
    "end": "1057000"
  },
  {
    "text": "that make naming or word choice good or bad how do we kind of decide",
    "start": "1059919",
    "end": "1066880"
  },
  {
    "text": "what this is one of the challenges that comes up is ambiguity and ambiguity of course refers",
    "start": "1066880",
    "end": "1072080"
  },
  {
    "text": "to any word or phrase for which a single cohesive concept cannot be identified at",
    "start": "1072080",
    "end": "1077679"
  },
  {
    "text": "least without some additional context so using an example in",
    "start": "1077679",
    "end": "1083039"
  },
  {
    "text": "spoken english what if i say there there or there",
    "start": "1083039",
    "end": "1088240"
  },
  {
    "text": "what do i mean well there's three different words that i could mean when i say that",
    "start": "1088240",
    "end": "1094160"
  },
  {
    "text": "what about two two or two three more possible things that i could",
    "start": "1094160",
    "end": "1100400"
  },
  {
    "text": "mean they all have slightly different meanings very different meanings in fact and so we don't know when i say 2",
    "start": "1100400",
    "end": "1107760"
  },
  {
    "text": "without the rest of the sentence around it what do i mean so this is an example of ambiguity and",
    "start": "1107760",
    "end": "1114240"
  },
  {
    "text": "we have written ambiguities as well there are plenty of examples in english for example that",
    "start": "1114240",
    "end": "1120240"
  },
  {
    "text": "when you write something it may look the same way but then sound different but it means two different things and we need",
    "start": "1120240",
    "end": "1125679"
  },
  {
    "text": "additional context to understand what we're talking about when i say free",
    "start": "1125679",
    "end": "1130799"
  },
  {
    "text": "what do i mean what about when i say software is free",
    "start": "1130799",
    "end": "1137919"
  },
  {
    "text": "do i mean free isn't popcorn or do i mean free as in free to use",
    "start": "1137919",
    "end": "1143840"
  },
  {
    "text": "however i want free is in freedom or free isn't free of cost",
    "start": "1143840",
    "end": "1149280"
  },
  {
    "text": "there are always different nuances to the words and if that nuance matters if",
    "start": "1149280",
    "end": "1154320"
  },
  {
    "text": "that difference in understanding matters then we need to provide enough context to allow the reader to make the right",
    "start": "1154320",
    "end": "1161280"
  },
  {
    "text": "decision because this is ambiguous ambiguity comes up a lot in acronyms and",
    "start": "1161280",
    "end": "1167600"
  },
  {
    "start": "1166000",
    "end": "1166000"
  },
  {
    "text": "abbreviations but also acronyms and abbreviations are not always necessarily universally understood",
    "start": "1167600",
    "end": "1173760"
  },
  {
    "text": "so here are a few acronyms abbreviations and initialisms that i've run across as a software developer that people don't",
    "start": "1173760",
    "end": "1180559"
  },
  {
    "text": "necessarily agree on in my humble opinion or in my honest opinion i've seen people legitimately get angry with each other for not",
    "start": "1180559",
    "end": "1187280"
  },
  {
    "text": "agreeing on this which is it's close enough right we understand in my humble or honest opinion but",
    "start": "1187280",
    "end": "1195440"
  },
  {
    "text": "there's no consensus on which one it actually is a content management system i once",
    "start": "1195440",
    "end": "1200720"
  },
  {
    "text": "worked on a content management system named cms",
    "start": "1200720",
    "end": "1206080"
  },
  {
    "text": "for centers for medicare and medicaid services here in the u.s also cms so i had cms with for cms with cms",
    "start": "1206080",
    "end": "1214240"
  },
  {
    "text": "cms was flying all over the place nobody had any idea we were talking about it was great",
    "start": "1214240",
    "end": "1219440"
  },
  {
    "text": "all types of different examples where we may or may not know exactly",
    "start": "1219600",
    "end": "1224640"
  },
  {
    "text": "what we mean when we see this out of context ram could be memory",
    "start": "1224640",
    "end": "1230480"
  },
  {
    "text": "it could be an animal do we have the context is it all uppercases at mixedcase my personal",
    "start": "1230480",
    "end": "1236240"
  },
  {
    "text": "favorite though is s t this could mean stanza but it can also mean street",
    "start": "1236240",
    "end": "1241600"
  },
  {
    "text": "straight saint uh star trek the wikipedia page the disambiguation",
    "start": "1241600",
    "end": "1248320"
  },
  {
    "text": "page for st has i think 34 entries for st and half",
    "start": "1248320",
    "end": "1253520"
  },
  {
    "text": "of them are related to addresses which means that even knowing that st is",
    "start": "1253520",
    "end": "1258880"
  },
  {
    "text": "being used in the context of an address doesn't tell me enough to know for sure what word it is that it's being",
    "start": "1258880",
    "end": "1265679"
  },
  {
    "text": "substituted for so acronyms and abbreviations can be really harmful for actually",
    "start": "1265679",
    "end": "1271440"
  },
  {
    "text": "communicating the full intent of what we're saying but enough",
    "start": "1271440",
    "end": "1276799"
  },
  {
    "text": "about the horror story let's get into the fairy tale i've talked about ambiguity i've shown examples of code",
    "start": "1276799",
    "end": "1283760"
  },
  {
    "text": "that is hard to read i've hopefully explained why this is important",
    "start": "1283760",
    "end": "1289280"
  },
  {
    "text": "now let's look at some ways that we can approach solving these problems and the first",
    "start": "1289280",
    "end": "1294880"
  },
  {
    "text": "thing we need to be able to do is assess whether or not the code we're writing is easy to read or not",
    "start": "1294880",
    "end": "1302799"
  },
  {
    "start": "1295000",
    "end": "1295000"
  },
  {
    "text": "how do i know how do i know if this is good or bad so one",
    "start": "1302799",
    "end": "1309039"
  },
  {
    "start": "1308000",
    "end": "1308000"
  },
  {
    "text": "thing we can look at is semantics so semantics is the branch of linguistics and logic",
    "start": "1309039",
    "end": "1314400"
  },
  {
    "text": "concerned with meaning in code this refers to choosing the right words and structures to convey",
    "start": "1314400",
    "end": "1320880"
  },
  {
    "text": "that intended meaning so for example if i use process",
    "start": "1320880",
    "end": "1326960"
  },
  {
    "text": "user that is not very semantically meaningful it just tells me that i'm doing something could",
    "start": "1326960",
    "end": "1332400"
  },
  {
    "text": "just as easily say do stuff doesn't mean anything but login user login means something it's telling me",
    "start": "1332400",
    "end": "1338559"
  },
  {
    "text": "what's happening with that user in html for example if i use a div tag",
    "start": "1338559",
    "end": "1345120"
  },
  {
    "text": "it doesn't give me any context or or meaning related to what's going to be contained by that tag but if i use a nav",
    "start": "1345120",
    "end": "1351840"
  },
  {
    "text": "tag now i know that this is wrapping navigation and this is a really important that we use this correctly because this is a",
    "start": "1351840",
    "end": "1358080"
  },
  {
    "text": "perfect example of accessibility in action by making the right choice we help assistive technologies",
    "start": "1358080",
    "end": "1365520"
  },
  {
    "text": "communicate more effectively to the user what's going on if we choose the div instead we're not",
    "start": "1365520",
    "end": "1372480"
  },
  {
    "text": "providing enough context or meaning for somebody to understand what's actually happening here",
    "start": "1372480",
    "end": "1378559"
  },
  {
    "text": "so that additional semantic is really important so one lens we can use to review our code",
    "start": "1378559",
    "end": "1384960"
  },
  {
    "text": "is semantics another way to review our our meaning is the",
    "start": "1384960",
    "end": "1392159"
  },
  {
    "start": "1388000",
    "end": "1388000"
  },
  {
    "text": "vocabulary so words that are used are only particularly meaningful if they",
    "start": "1392159",
    "end": "1397440"
  },
  {
    "text": "exist within the vocabulary of those who are reading them in the future",
    "start": "1397440",
    "end": "1402640"
  },
  {
    "text": "okay so if you go back and you read something that was written 100 years ago",
    "start": "1402640",
    "end": "1408799"
  },
  {
    "text": "you're going to have a lot harder time understanding it than if you read something that was read yesterday why",
    "start": "1408799",
    "end": "1414880"
  },
  {
    "text": "because language changes over time and that's normal but we still need to",
    "start": "1414880",
    "end": "1420480"
  },
  {
    "text": "be really careful that we don't add additional complexity where it",
    "start": "1420480",
    "end": "1425760"
  },
  {
    "text": "doesn't need to be so let's look at some vocabulary examples and these are examples of of ambiguity as well",
    "start": "1425760",
    "end": "1431679"
  },
  {
    "text": "reciprocal what does reciprocal mean in mathematics",
    "start": "1431679",
    "end": "1436880"
  },
  {
    "text": "it means it can mean the inverse it can mean the opposite",
    "start": "1436880",
    "end": "1442880"
  },
  {
    "text": "in relationships it could mean reciprocity if i do something for you you disappoint for something for me but",
    "start": "1442880",
    "end": "1448400"
  },
  {
    "text": "those meanings depend upon us sharing the same frame of reference if we both know that we're",
    "start": "1448400",
    "end": "1455120"
  },
  {
    "text": "having a conversation about mathematics that's fine we know what reciprocal means in that situation but",
    "start": "1455120",
    "end": "1461440"
  },
  {
    "text": "if we know we're talking about relationships then we know what we're meaning but if we don't know what the context is then reciprocal may be",
    "start": "1461440",
    "end": "1467360"
  },
  {
    "text": "confusing another one great example is re if i say re",
    "start": "1467360",
    "end": "1473760"
  },
  {
    "text": "what do i mean do you know is there enough information what's the context are we talking about",
    "start": "1473760",
    "end": "1480080"
  },
  {
    "text": "mathematics where it's a point with a line that extends in one direction or we're talking about zoology",
    "start": "1480080",
    "end": "1486960"
  },
  {
    "text": "where it is an animal that kind of flows swims through the ocean or perhaps i'm talking about a ray of sunlight",
    "start": "1486960",
    "end": "1494240"
  },
  {
    "text": "so it's important that if we share a common specific vocabulary if i know for example that i'm talking",
    "start": "1494240",
    "end": "1500480"
  },
  {
    "text": "about mathematics then i can use these words with confidence knowing that future readers are going to understand",
    "start": "1500480",
    "end": "1505919"
  },
  {
    "text": "this context but if the context itself is ambiguous then i need to provide that",
    "start": "1505919",
    "end": "1511039"
  },
  {
    "text": "additional context so that they understand what that how to process that word",
    "start": "1511039",
    "end": "1516480"
  },
  {
    "text": "in the place that i've used it one of the things that i've run into in software is that sometimes different",
    "start": "1516480",
    "end": "1524159"
  },
  {
    "text": "industries use similar words to mean slightly different things or even sometimes very different things insurance and banking",
    "start": "1524159",
    "end": "1530559"
  },
  {
    "text": "for example may have they use a lot of the same financial terms but they may define them in subtly different ways and",
    "start": "1530559",
    "end": "1537440"
  },
  {
    "text": "that those subtle differences are extremely important when we're building software we have to be perfectly precise",
    "start": "1537440",
    "end": "1544240"
  },
  {
    "text": "so it's important that we are clear in exactly what the definition of those terms is within the context of our",
    "start": "1544240",
    "end": "1551360"
  },
  {
    "text": "projects failing to follow the vocabulary of your",
    "start": "1551360",
    "end": "1556559"
  },
  {
    "text": "industry can also be very expensive one company that i worked for was actually an insurance company",
    "start": "1556559",
    "end": "1562080"
  },
  {
    "text": "insurance at least in the us has very clearly defines terminology as an industry standard there are",
    "start": "1562080",
    "end": "1569360"
  },
  {
    "text": "specific definitions of things that are useful for building integrations between",
    "start": "1569360",
    "end": "1574799"
  },
  {
    "text": "organizations well the company i was working for didn't really do that very well",
    "start": "1574799",
    "end": "1580480"
  },
  {
    "text": "so instead of converting their platforms to use this common language",
    "start": "1580480",
    "end": "1587200"
  },
  {
    "text": "they built custom integrations to every single product service and tool that",
    "start": "1587200",
    "end": "1592320"
  },
  {
    "text": "they needed to integrate with because they weren't doing things the way everybody else was",
    "start": "1592320",
    "end": "1598400"
  },
  {
    "text": "that choice to have their own vocabulary became very expensive over time",
    "start": "1598400",
    "end": "1605440"
  },
  {
    "start": "1606000",
    "end": "1606000"
  },
  {
    "text": "another thing to to use to kind of determine if our what we're writing is clear or not is to look at",
    "start": "1606400",
    "end": "1613840"
  },
  {
    "text": "intent can i look at this code can i read it and understand",
    "start": "1613840",
    "end": "1619440"
  },
  {
    "text": "the intent of the author do i understand when i should use the same bit of code",
    "start": "1619440",
    "end": "1624559"
  },
  {
    "text": "in the things that i write so a function name such as convert time",
    "start": "1624559",
    "end": "1631600"
  },
  {
    "text": "i don't necessarily know when i might want to call that to convert time what what's the context here when",
    "start": "1631600",
    "end": "1637760"
  },
  {
    "text": "do i use this why is it being used here in the code i don't know for sure",
    "start": "1637760",
    "end": "1642799"
  },
  {
    "text": "but if i instead indicate the intent and the name of the function",
    "start": "1642799",
    "end": "1647840"
  },
  {
    "text": "local to utc for example i understand that i am converting",
    "start": "1647840",
    "end": "1653360"
  },
  {
    "text": "that date from a local time zone to a utc time zone now i understand",
    "start": "1653360",
    "end": "1658640"
  },
  {
    "text": "what it's doing and when i would use it another example check username we'll",
    "start": "1658640",
    "end": "1665360"
  },
  {
    "text": "check it for what am i checking checking to see if it's already taken if i'm checking to see if it's logged in i'm",
    "start": "1665360",
    "end": "1671440"
  },
  {
    "text": "checking to see what am i checking is it valid uh is it am i checking it against the dirty",
    "start": "1671440",
    "end": "1677520"
  },
  {
    "text": "words list what am i doing with this thing so if i instead provide that intent and",
    "start": "1677520",
    "end": "1682799"
  },
  {
    "text": "the name is username available now i can read that code and immediately",
    "start": "1682799",
    "end": "1687840"
  },
  {
    "text": "understand why it's being used here and when i might also want to use it",
    "start": "1687840",
    "end": "1694960"
  },
  {
    "start": "1695000",
    "end": "1695000"
  },
  {
    "text": "disambiguation so i spoke earlier about ambiguity and ambiguity is a big part of confusion and language so let's look at",
    "start": "1695440",
    "end": "1701760"
  },
  {
    "text": "how to disambiguate things so for example execute could mean a few",
    "start": "1701760",
    "end": "1706960"
  },
  {
    "text": "different things run a process or kill something so maybe we should use run or kill instead",
    "start": "1706960",
    "end": "1713360"
  },
  {
    "text": "to be really clear about what we meant light does this mean bright or",
    "start": "1713360",
    "end": "1719039"
  },
  {
    "text": "not heavy not dark or not heavy right just i could use bright i could use i don't know",
    "start": "1719039",
    "end": "1725200"
  },
  {
    "text": "light is in weight i can use a weight variable to indicate the the the heaviness of something i can use",
    "start": "1725200",
    "end": "1730559"
  },
  {
    "text": "heaviness as a rating so a lot of different things that i can do to make it clear the context",
    "start": "1730559",
    "end": "1735919"
  },
  {
    "text": "of what i mean when i use the word light",
    "start": "1735919",
    "end": "1740320"
  },
  {
    "text": "uh ephemeral use one thing that happens a lot ephemeral so sorry ephemeral means",
    "start": "1741760",
    "end": "1747440"
  },
  {
    "start": "1742000",
    "end": "1742000"
  },
  {
    "text": "temporary or for a limited time and a lot of the code that we write is",
    "start": "1747440",
    "end": "1752960"
  },
  {
    "text": "temporary it's a fundamental component of agile development which many of us use agile",
    "start": "1752960",
    "end": "1758720"
  },
  {
    "text": "methodologies right and we know that the code we write is going to be their temporary we have this habit",
    "start": "1758720",
    "end": "1765360"
  },
  {
    "text": "sometimes the software developers to for example implement a quick fix",
    "start": "1765360",
    "end": "1770399"
  },
  {
    "text": "that we're going to come back and fix later and then it sticks around for a really really long time i'm sure that i've run into this a lot",
    "start": "1770399",
    "end": "1776399"
  },
  {
    "text": "i'm sure you have too and then in some environments like in in a corporate environment you may end up",
    "start": "1776399",
    "end": "1781760"
  },
  {
    "text": "with stuff that sticks around for a really really long time that was intended to be temporary in a startup environment sometimes you have the",
    "start": "1781760",
    "end": "1787840"
  },
  {
    "text": "opposite you write things thinking it's going to be there forever and then you discover you have to rewrite it",
    "start": "1787840",
    "end": "1793120"
  },
  {
    "text": "again three months later whatever point is that we need to be really cautious about the longevity of the",
    "start": "1793120",
    "end": "1800159"
  },
  {
    "text": "thing we're writing and how long the communication will be valid for",
    "start": "1800159",
    "end": "1806159"
  },
  {
    "text": "here's an example silly example from xkcd this function",
    "start": "1806159",
    "end": "1812399"
  },
  {
    "text": "is valid exactly once the first time we call it it's a random number",
    "start": "1812399",
    "end": "1817760"
  },
  {
    "text": "the second time we call it it is not this is a",
    "start": "1817760",
    "end": "1822799"
  },
  {
    "text": "ridiculously extreme example of ephemeral code in that it is useful exactly once",
    "start": "1822799",
    "end": "1828799"
  },
  {
    "text": "but it illustrates the point right we need to make sure that when we implement something we can certainly ut has",
    "start": "1828799",
    "end": "1835120"
  },
  {
    "text": "utility beyond the first time we call it the first time we use it here's another example this is a visual",
    "start": "1835120",
    "end": "1841279"
  },
  {
    "text": "example uh using css and web design you have been working on the user",
    "start": "1841279",
    "end": "1847760"
  },
  {
    "text": "interface for a website their marketing team gave you the branding colors here is what you put together with those",
    "start": "1847760",
    "end": "1854480"
  },
  {
    "text": "colors fast forward a few months and they tell you hey we really want to change the",
    "start": "1854480",
    "end": "1861600"
  },
  {
    "text": "color palette to this here you're like fine no big deal i'll go in",
    "start": "1861600",
    "end": "1867200"
  },
  {
    "text": "and plug in a few variables or update the thing we're done easy peasy",
    "start": "1867200",
    "end": "1873679"
  },
  {
    "text": "but there's a problem that's the problem",
    "start": "1873679",
    "end": "1879039"
  },
  {
    "text": "so we have a dot orange class represent orange but we have a dot blue class represent yellow and a dot green class to",
    "start": "1879039",
    "end": "1885440"
  },
  {
    "text": "represent purple what in the world happened well what happened is that when we originally set up these color palettes",
    "start": "1885440",
    "end": "1892080"
  },
  {
    "text": "blue did represent blue and green did represent green and then we used those class names all",
    "start": "1892080",
    "end": "1898799"
  },
  {
    "text": "over the html to specify things what colors we wanted",
    "start": "1898799",
    "end": "1904320"
  },
  {
    "text": "things to be and then when the time came to make that change",
    "start": "1904320",
    "end": "1910240"
  },
  {
    "text": "it was really really easy to change the hex code definition in the one place on that css class but it was",
    "start": "1910240",
    "end": "1917440"
  },
  {
    "text": "prohibitive to change the name of the class everywhere is being used so we didn't",
    "start": "1917440",
    "end": "1923600"
  },
  {
    "text": "bother and this is something that i see a lot and the the solution here is of course",
    "start": "1923600",
    "end": "1930480"
  },
  {
    "text": "that maybe we should have had use names like primary color secondary color tertiary color and then we can use those",
    "start": "1930480",
    "end": "1935840"
  },
  {
    "text": "everywhere freely without giving an indication that it's going to be blue necessarily",
    "start": "1935840",
    "end": "1942480"
  },
  {
    "text": "another quick css example and this is a situation where when we",
    "start": "1942799",
    "end": "1947840"
  },
  {
    "text": "want to refactor something we have to be really careful about how it's being used and we need to make sure that we write code in a way that it can be refactored",
    "start": "1947840",
    "end": "1955360"
  },
  {
    "text": "like i said at the beginning of the talk one of the implicit design goals of most software is that it's easy to modify",
    "start": "1955360",
    "end": "1960559"
  },
  {
    "text": "over time right so here's an example another example i've seen a lot we have a css",
    "start": "1960559",
    "end": "1966320"
  },
  {
    "text": "class called write and in this particular implementation it has been implemented as text to line",
    "start": "1966320",
    "end": "1971519"
  },
  {
    "text": "write and one interesting thing i've seen in css frameworks over time over the years i've seen",
    "start": "1971519",
    "end": "1977600"
  },
  {
    "text": "most of the css frameworks have some class like this implemented right but 50 of them implement it like this and the",
    "start": "1977600",
    "end": "1983760"
  },
  {
    "text": "other 50 implemented as float right so just because i see this doesn't necessarily mean i know how it's going",
    "start": "1983760",
    "end": "1989919"
  },
  {
    "text": "to be used but let's continue so i have these numeric columns and i want",
    "start": "1989919",
    "end": "1995760"
  },
  {
    "text": "them to be right justified because that's how i want to present numbers and i use my class right because it does what i want it to do and i'm reusing",
    "start": "1995760",
    "end": "2002960"
  },
  {
    "text": "code and so i'm following the rules of code reuse and i'm this is fantastic and then later on i have this",
    "start": "2002960",
    "end": "2009679"
  },
  {
    "text": "other numeric value that i want uh right justified it's the the counter for how many characters have been typed into a",
    "start": "2009679",
    "end": "2016240"
  },
  {
    "text": "comment field and everything's fine but then there's a requirement to change the way that",
    "start": "2016240",
    "end": "2022320"
  },
  {
    "text": "counter looks so i implement the change right there in the class because it's there and now it",
    "start": "2022320",
    "end": "2027679"
  },
  {
    "text": "looks like this and i have no problems it looks good it gets passed it gets merged and then somebody starts complaining hey",
    "start": "2027679",
    "end": "2034480"
  },
  {
    "text": "why do my columns of tabular data look bad they're not supposed to look like this",
    "start": "2034480",
    "end": "2040880"
  },
  {
    "text": "well i didn't see that because i didn't test every single place in the application when i made that little css change and now i have a",
    "start": "2040880",
    "end": "2047840"
  },
  {
    "text": "problem i could have avoided this problem very easily by using this more specific",
    "start": "2047840",
    "end": "2053760"
  },
  {
    "text": "semantically meaningful name numeric column and now if i need to change anything",
    "start": "2053760",
    "end": "2059200"
  },
  {
    "text": "else about numeric columns i can do that right here and then this other thing this could have been a character counter",
    "start": "2059200",
    "end": "2064638"
  },
  {
    "text": "and then i could have changed it over time and the lesson here is that just because",
    "start": "2064639",
    "end": "2072320"
  },
  {
    "text": "a function a class has the exact same implementation has the exact same",
    "start": "2072320",
    "end": "2078320"
  },
  {
    "text": "text the same bit of code inside of it does not mean that it is the same code",
    "start": "2078320",
    "end": "2086000"
  },
  {
    "text": "so when we started we had this class of right that used text to line write and we reused it to avoid typing text to",
    "start": "2086000",
    "end": "2092960"
  },
  {
    "text": "line right a second time but that was a mistake that wasn't a good example of code reuse because",
    "start": "2092960",
    "end": "2098400"
  },
  {
    "text": "we were using it for completely different contexts completely different scenarios completely different purposes",
    "start": "2098400",
    "end": "2104640"
  },
  {
    "text": "and that means that when the the meaning diverged because it really",
    "start": "2104640",
    "end": "2109839"
  },
  {
    "text": "they meant different things in the first place as that could starts to diverge now we have to do work to separate those",
    "start": "2109839",
    "end": "2117119"
  },
  {
    "text": "meanings instead of continuing to use that same thing we can't reuse that so it's we",
    "start": "2117119",
    "end": "2123119"
  },
  {
    "text": "need to be careful when we're trying to reuse code that we don't inadvertently",
    "start": "2123119",
    "end": "2128240"
  },
  {
    "text": "reuse code that has a very different purpose and will have a very different future trajectory",
    "start": "2128240",
    "end": "2134400"
  },
  {
    "text": "so one of the rules that i use in writing code is the rule of three",
    "start": "2134400",
    "end": "2140640"
  },
  {
    "text": "if i have to use something three times before i try to find a way to reuse it",
    "start": "2140640",
    "end": "2147440"
  },
  {
    "text": "and it has to have the exact same purpose has this have the same meaning the same intent if it doesn't share an",
    "start": "2147440",
    "end": "2153920"
  },
  {
    "text": "intent i don't care if the code is the same i'm not going to give it the same name i'm not going to call the same function i'm",
    "start": "2153920",
    "end": "2159920"
  },
  {
    "text": "going to create a duplicate with a different name with its own intent meaning",
    "start": "2159920",
    "end": "2165359"
  },
  {
    "text": "so here's an example of refactoring potentially gone poorly so what can",
    "start": "2166079",
    "end": "2171760"
  },
  {
    "text": "happen when we we come up with rules for what good clean codes should look like and we implement them in a linter and we",
    "start": "2171760",
    "end": "2178480"
  },
  {
    "text": "prevent people from committing to the repository if the rules aren't followed",
    "start": "2178480",
    "end": "2184160"
  },
  {
    "text": "what we end up with maybe is a situation where let's say that this was a 1200 line",
    "start": "2184160",
    "end": "2191359"
  },
  {
    "text": "function and we implemented this rule where a function can be no longer than 500 lines",
    "start": "2191359",
    "end": "2197040"
  },
  {
    "text": "and that sounds great because we know that shorter functions are easier to read but then somebody comes in here",
    "start": "2197040",
    "end": "2203599"
  },
  {
    "text": "and they're like well i'm in a hurry because we always are right i'm going to",
    "start": "2203599",
    "end": "2210400"
  },
  {
    "text": "break this into three separate functions just call them in order and move on with my life",
    "start": "2210400",
    "end": "2216160"
  },
  {
    "text": "and i haven't made anything easier to read i haven't made anything easier to understand i've actually added a whole new layer of misdirection",
    "start": "2216160",
    "end": "2223839"
  },
  {
    "text": "to this function just to satisfy a rule so i need to be really careful in avoiding",
    "start": "2223839",
    "end": "2230640"
  },
  {
    "text": "a situation where we're encouraging battery factors just to follow rules",
    "start": "2230640",
    "end": "2236720"
  },
  {
    "text": "so one thing that can sometimes come up and bite us when writing code is",
    "start": "2238000",
    "end": "2244240"
  },
  {
    "text": "spelling and i this is a this is a tough one because i don't ever want to make fun of",
    "start": "2244240",
    "end": "2250000"
  },
  {
    "text": "somebody or pick on somebody for spelling it's it's harder for some people than others and it's not",
    "start": "2250000",
    "end": "2256880"
  },
  {
    "text": "we don't all speak the same language natively okay and so this is a sticky point but the challenge",
    "start": "2256880",
    "end": "2263280"
  },
  {
    "text": "here is that when we're trying to modify our refactor code over time",
    "start": "2263280",
    "end": "2268880"
  },
  {
    "text": "when we are trying to find for example every place that expiration is used so we can make a code change related to",
    "start": "2268880",
    "end": "2275359"
  },
  {
    "text": "that if there are misspellings such as the ones in this example",
    "start": "2275359",
    "end": "2280880"
  },
  {
    "text": "that's very hard to do because most of our tools do not do a",
    "start": "2280880",
    "end": "2286640"
  },
  {
    "text": "very good job of providing alternate spellings of the code we're searching for",
    "start": "2286640",
    "end": "2292960"
  },
  {
    "text": "which means if there is a typo we simply won't find it just the same as typos though if we use",
    "start": "2292960",
    "end": "2300400"
  },
  {
    "text": "abbreviations sometimes and use the full word and other times those are two different things i'm going",
    "start": "2300400",
    "end": "2306720"
  },
  {
    "text": "to have to search for now to find it and i have to know that that is a search i need to perform",
    "start": "2306720",
    "end": "2311760"
  },
  {
    "text": "so trying to refactor code in the future when we are inconsistent with how we write things can be really challenging",
    "start": "2311760",
    "end": "2320240"
  },
  {
    "start": "2320000",
    "end": "2320000"
  },
  {
    "text": "and one thing you can use as an indication if your code being",
    "start": "2320320",
    "end": "2326640"
  },
  {
    "text": "fairy tale code is that as you start to build things it's the implementation",
    "start": "2326640",
    "end": "2333280"
  },
  {
    "text": "strategies are fairly straightforward if they're not if you find yourself",
    "start": "2333280",
    "end": "2338400"
  },
  {
    "text": "writing really convoluted code or jumping through a lot of hoops in your code that are really hard to follow a",
    "start": "2338400",
    "end": "2345520"
  },
  {
    "text": "lot of times that's actually a sign of a poor architecture maybe you need a different data model maybe you need a",
    "start": "2345520",
    "end": "2350800"
  },
  {
    "text": "different algorithm maybe you need a different structure to your code to make it easier to share the things you need",
    "start": "2350800",
    "end": "2356079"
  },
  {
    "text": "to share or to process the data the way you need to process it",
    "start": "2356079",
    "end": "2361359"
  },
  {
    "text": "so i like to look at confusing code not",
    "start": "2361359",
    "end": "2367520"
  },
  {
    "text": "just as a hey this is bad code it needs to be fixed but maybe there's actually an under this is a symptom of an",
    "start": "2367520",
    "end": "2374400"
  },
  {
    "text": "underlying problem that we need to address instead",
    "start": "2374400",
    "end": "2378880"
  },
  {
    "text": "and here's an example of this so when we see chaos and confusion in our code it may be a sign of an underlying",
    "start": "2380480",
    "end": "2386480"
  },
  {
    "text": "problem in this particular case the first thing we notice right away we have a string one an s1 and s2 variable that",
    "start": "2386480",
    "end": "2392160"
  },
  {
    "text": "are both strings and they're being reassigned to each other repeatedly well it's pretty easy for us to look at that",
    "start": "2392160",
    "end": "2398320"
  },
  {
    "text": "and realize that that could have just been one variable for starters all the way down in fact we didn't even",
    "start": "2398320",
    "end": "2404560"
  },
  {
    "text": "necessarily need the variable because looking at that it's very obvious that we could have just chained dot replaces",
    "start": "2404560",
    "end": "2410240"
  },
  {
    "text": "together in a line so we didn't even need the variables in the first place so we've added complexity here",
    "start": "2410240",
    "end": "2416160"
  },
  {
    "text": "and these variable names s1 and s2 first of all they're not descriptive and second of all",
    "start": "2416160",
    "end": "2422800"
  },
  {
    "text": "they're their the way they're being used is redundant so we can look at this and immediately say okay the person that",
    "start": "2422800",
    "end": "2428000"
  },
  {
    "text": "wrote this may not fully understand how that replace method works maybe they don't",
    "start": "2428000",
    "end": "2433359"
  },
  {
    "text": "understand how the string assignments work maybe something else but it's something it's",
    "start": "2433359",
    "end": "2439200"
  },
  {
    "text": "worth asking that question at that point how can we simplify this and the really interesting thing is that what's really",
    "start": "2439200",
    "end": "2445599"
  },
  {
    "text": "dangerous here is if you look at that we have an sw dot right s2 at the bottom if we look at that particular line of",
    "start": "2445599",
    "end": "2452560"
  },
  {
    "text": "code near the bottom if i were to use s1 instead of s2 there",
    "start": "2452560",
    "end": "2458560"
  },
  {
    "text": "it might not work so if i add an additional dot replace to the string of that replaces it may",
    "start": "2458560",
    "end": "2464400"
  },
  {
    "text": "not get picked up correctly maybe that that last change doesn't get written because now it's assigned to the other",
    "start": "2464400",
    "end": "2469680"
  },
  {
    "text": "variable and that can be a source of bugs so using these redundant variable names",
    "start": "2469680",
    "end": "2476000"
  },
  {
    "text": "actually can easily make this code hard to fix hard to improve or add on to can",
    "start": "2476000",
    "end": "2481440"
  },
  {
    "text": "introduce pretty subtle bugs in the future just because we use the variable name we",
    "start": "2481440",
    "end": "2486800"
  },
  {
    "text": "didn't need to so getting to this point",
    "start": "2486800",
    "end": "2493440"
  },
  {
    "start": "2490000",
    "end": "2490000"
  },
  {
    "text": "we want fairy tale code we've talked about some strategies for doing that but",
    "start": "2493440",
    "end": "2500000"
  },
  {
    "text": "let's make this more concrete more applicable i'm going to give you a checklist for some things that i do",
    "start": "2500000",
    "end": "2506480"
  },
  {
    "text": "to help me ensure that i am producing good code that is easy for other developers to read and to be",
    "start": "2506480",
    "end": "2513760"
  },
  {
    "text": "blunt the person that probably benefits from this the most is future me",
    "start": "2513760",
    "end": "2518960"
  },
  {
    "text": "when i write code that's easy to read when i come back to it later i benefit from that",
    "start": "2518960",
    "end": "2525279"
  },
  {
    "start": "2525000",
    "end": "2525000"
  },
  {
    "text": "so the first thing to consider is your audience the very next person to touch this code",
    "start": "2525520",
    "end": "2531760"
  },
  {
    "text": "is most likely a developer who did not have the requirements or conversations",
    "start": "2531760",
    "end": "2537040"
  },
  {
    "text": "you just had in their head maybe they didn't have those conversations at all they certainly don't have that context in",
    "start": "2537040",
    "end": "2543040"
  },
  {
    "text": "their head right now so if you went off and had a few conversations with people that you sat down and you wrote this code",
    "start": "2543040",
    "end": "2549280"
  },
  {
    "text": "they don't have all that context when they come back and look at it later and this again this could be future you",
    "start": "2549280",
    "end": "2555359"
  },
  {
    "text": "so anything that was confusing or difficult or required external conversations required you to look up",
    "start": "2555359",
    "end": "2561920"
  },
  {
    "text": "documentation in order to figure out how to write this that should be passed along to the next",
    "start": "2561920",
    "end": "2567359"
  },
  {
    "text": "developer with as much context as possible so again",
    "start": "2567359",
    "end": "2572480"
  },
  {
    "text": "the future audience does not have access to all your external contents but they are busy and distracted we always are",
    "start": "2572480",
    "end": "2579680"
  },
  {
    "text": "when we're writing software a lot of times we're in a hurry we have a long list of things we're trying to do",
    "start": "2579680",
    "end": "2585920"
  },
  {
    "text": "and we're trying to do it quickly and easily so let's make this as easy for us to do as possible",
    "start": "2585920",
    "end": "2593838"
  },
  {
    "start": "2593000",
    "end": "2593000"
  },
  {
    "text": "we need to use specific language names for example should be specific and",
    "start": "2594160",
    "end": "2599280"
  },
  {
    "text": "written in the common language of your problem domain do you work for an insurance company great use that common",
    "start": "2599280",
    "end": "2605680"
  },
  {
    "text": "language do you work for a dentist perfect use that terminology",
    "start": "2605680",
    "end": "2610720"
  },
  {
    "text": "you can in general assume a certain level of technology specific language as well",
    "start": "2610720",
    "end": "2617920"
  },
  {
    "text": "but if you're going to deviate too far out of your core industry then it's really important that you clarify that",
    "start": "2617920",
    "end": "2624640"
  },
  {
    "text": "so when we talk about specific names provide context and clues to what",
    "start": "2624640",
    "end": "2629839"
  },
  {
    "text": "something means so in this particular example tax well what do i mean when i say tax",
    "start": "2629839",
    "end": "2636079"
  },
  {
    "text": "there's so many different types of taxes and the tax is that tax a number is that",
    "start": "2636079",
    "end": "2641359"
  },
  {
    "text": "a specific amount of currency or is it a rate in other words a",
    "start": "2641359",
    "end": "2646400"
  },
  {
    "text": "percentage that i have to multiply some other value to find the actual tax amount",
    "start": "2646400",
    "end": "2652160"
  },
  {
    "text": "i don't know from looking at just the word tax so i can provide that additional context",
    "start": "2652160",
    "end": "2657760"
  },
  {
    "text": "i can use be more specific so sales tax rate tells me that this is a",
    "start": "2657760",
    "end": "2664800"
  },
  {
    "text": "going to help me calculate the sales tax and i'm in order to do that i'm going to multiply this by the total value and",
    "start": "2664800",
    "end": "2670240"
  },
  {
    "text": "produce the actual sales tax amount i know that just from looking at that",
    "start": "2670240",
    "end": "2675359"
  },
  {
    "text": "variable name item order quantity it's not just qty",
    "start": "2675359",
    "end": "2680880"
  },
  {
    "text": "it's the quantity of items in an order perfect i know i have contacts now i",
    "start": "2680880",
    "end": "2687040"
  },
  {
    "text": "understand what that means actions",
    "start": "2687040",
    "end": "2692880"
  },
  {
    "start": "2691000",
    "end": "2691000"
  },
  {
    "text": "function and method names should include a verb names like this are very bad because",
    "start": "2692880",
    "end": "2699760"
  },
  {
    "text": "they don't tell us what we're actually doing we know that functions are actions we know an action is being performed so",
    "start": "2699760",
    "end": "2705599"
  },
  {
    "text": "i know that an action is being performed to the sales tax or an action is being performed by the order quantity but i don't know what that action is",
    "start": "2705599",
    "end": "2712079"
  },
  {
    "text": "that means that when i see this in code i have to drill into that function and read the func the code related to that",
    "start": "2712079",
    "end": "2718720"
  },
  {
    "text": "function implementation to actually understand what's going on or i could provide a more appropriate",
    "start": "2718720",
    "end": "2726079"
  },
  {
    "text": "name which includes the verb the action being performed so that i have that context just from",
    "start": "2726079",
    "end": "2732640"
  },
  {
    "text": "looking at the call without having to actually look at the implementation of the function itself",
    "start": "2732640",
    "end": "2738079"
  },
  {
    "text": "so calculate sales tax tells me that i'm calculating sales tax and presumably by the variables that i pass in now i'll",
    "start": "2738079",
    "end": "2744400"
  },
  {
    "text": "understand how that calculation is being performed fetch order quantity that tells me i'm retrieving something probably from a",
    "start": "2744400",
    "end": "2750079"
  },
  {
    "text": "database or other data store use full words use abbreviations",
    "start": "2750079",
    "end": "2756240"
  },
  {
    "start": "2754000",
    "end": "2754000"
  },
  {
    "text": "sparingly and when you use abbreviations there should be no confusion as what it means",
    "start": "2756240",
    "end": "2763440"
  },
  {
    "text": "stats probably actually an okay one but whatever you choose be consistent if",
    "start": "2763440",
    "end": "2769440"
  },
  {
    "text": "you're going to use a specific abbreviation always use that abbreviation don't use the abbreviation",
    "start": "2769440",
    "end": "2774480"
  },
  {
    "text": "sometimes with the full word sometimes don't don't create creative misspellings of",
    "start": "2774480",
    "end": "2779760"
  },
  {
    "text": "existing words so this is something i've seen in java a lot the word class is a reserved word it's a reserved word in",
    "start": "2779760",
    "end": "2785839"
  },
  {
    "text": "almost every program languages i've ever used what i see in a lot of libraries then is",
    "start": "2785839",
    "end": "2791200"
  },
  {
    "text": "that people will come up with creative ways to come up with a way to spell this",
    "start": "2791200",
    "end": "2797760"
  },
  {
    "text": "that is not a reserved word so c-l-a-z-z or klass",
    "start": "2797760",
    "end": "2802800"
  },
  {
    "text": "class and class and realistically there's no point in that it could just easily be class name",
    "start": "2802800",
    "end": "2810480"
  },
  {
    "text": "right or class instance if you're passing an object or perhaps it could be the css class or the the css class names",
    "start": "2810480",
    "end": "2818400"
  },
  {
    "text": "if it's a array of multiple things it could be classes there's so many ways that we could do this that were meaningful without creating a",
    "start": "2818400",
    "end": "2824480"
  },
  {
    "text": "misspelling and it's really important that we use full words as much as possible so that",
    "start": "2824480",
    "end": "2830800"
  },
  {
    "text": "everybody automatically knows how to search for them when we sometimes use abbreviations and",
    "start": "2830800",
    "end": "2836079"
  },
  {
    "text": "sometimes don't we create this kind of guess method to finding",
    "start": "2836079",
    "end": "2842000"
  },
  {
    "text": "bits of code that we need when we're trying to solve a problem because a lot of times what happens at least in my experience when i get a",
    "start": "2842000",
    "end": "2848800"
  },
  {
    "text": "story to work on some code and it's related to a specific concept one of the first things i'm going to do is search",
    "start": "2848800",
    "end": "2854800"
  },
  {
    "text": "through the code base for the keyword related to that concept and see what's out there",
    "start": "2854800",
    "end": "2860559"
  },
  {
    "text": "and if we've not used full words i'm not going to get results",
    "start": "2860559",
    "end": "2865680"
  },
  {
    "start": "2866000",
    "end": "2866000"
  },
  {
    "text": "related to that spelling most editors support spell checks at this point in time i use vs code i do",
    "start": "2866079",
    "end": "2872720"
  },
  {
    "text": "use a spell check in there spell check is a great resource to just help make sure that we have made our",
    "start": "2872720",
    "end": "2878960"
  },
  {
    "text": "code easy to search and that it is one reason that spelling matters also as",
    "start": "2878960",
    "end": "2884240"
  },
  {
    "text": "well as full words is that if we are working with somebody that uses a screen reader to understand the code or other",
    "start": "2884240",
    "end": "2890720"
  },
  {
    "text": "assistive technology it will actually make sense instead of just being an amalgamation of letters that have to get",
    "start": "2890720",
    "end": "2896559"
  },
  {
    "text": "spelled out and spelling sometimes can be kind of",
    "start": "2896559",
    "end": "2901920"
  },
  {
    "text": "interesting so referrer actually has two r's but in the original",
    "start": "2901920",
    "end": "2908319"
  },
  {
    "text": "http specification it had just one r in the specification and therefore we've",
    "start": "2908319",
    "end": "2913599"
  },
  {
    "text": "ended up with this misspelling being implemented in basically every single web browser and",
    "start": "2913599",
    "end": "2921200"
  },
  {
    "text": "uh web server ever because it made it all the way into the specification like that and that just it",
    "start": "2921200",
    "end": "2928480"
  },
  {
    "text": "creates challenge for for people to who are trying to work with that so we need to make sure and that create versus",
    "start": "2928480",
    "end": "2934480"
  },
  {
    "text": "create is another one that's in the c library use the full word correctly spelled and",
    "start": "2934480",
    "end": "2939599"
  },
  {
    "text": "we will save ourselves headache down the road comments this is a big one right",
    "start": "2939599",
    "end": "2946240"
  },
  {
    "start": "2944000",
    "end": "2944000"
  },
  {
    "text": "comments are really important one of the things that i've said a few times is that we need to provide context comments",
    "start": "2946240",
    "end": "2952400"
  },
  {
    "text": "are a great way to provide additional context in our code of what's going on why we approach something specific way",
    "start": "2952400",
    "end": "2959359"
  },
  {
    "text": "but we don't want comments like this i can look at the code and tell you that",
    "start": "2959359",
    "end": "2964880"
  },
  {
    "text": "it's iterating over a list of items right so comments should apply to explain why or how",
    "start": "2964880",
    "end": "2971680"
  },
  {
    "text": "not what's happening so for example here i am calculating the sum of",
    "start": "2971680",
    "end": "2977839"
  },
  {
    "text": "quantity and price for each item that's and then for verification per cr-123",
    "start": "2977839",
    "end": "2986079"
  },
  {
    "text": "that's not just repeating the code that's telling me something valuable and maybe i don't",
    "start": "2986079",
    "end": "2992160"
  },
  {
    "text": "need that calculate sum of quantity and price maybe that's totally redundant because it's obvious in the code but it might not be if i'm just passing a bunch",
    "start": "2992160",
    "end": "2999359"
  },
  {
    "text": "of objects into a function and i don't get to see which properties are being extracted it might not be",
    "start": "2999359",
    "end": "3005839"
  },
  {
    "text": "obvious there so i need to consider carefully how much comment do i need to be meaningful",
    "start": "3005839",
    "end": "3012000"
  },
  {
    "text": "without being too verbose",
    "start": "3012000",
    "end": "3017200"
  },
  {
    "text": "how comments can be useful when auto-generating documentation from your comments",
    "start": "3018319",
    "end": "3025280"
  },
  {
    "text": "whenever you need to say i had a conversation with so and so about this thing and and we we made this decision",
    "start": "3025280",
    "end": "3030800"
  },
  {
    "text": "because of xyz provide that we decided to implement this this way",
    "start": "3030800",
    "end": "3036480"
  },
  {
    "text": "because of this specific factor put that in a comment because in the future the next person to",
    "start": "3036480",
    "end": "3042079"
  },
  {
    "text": "come in there they will avoid doing a damaging or harmful refactor without carefully",
    "start": "3042079",
    "end": "3049680"
  },
  {
    "text": "considering that reason that you had when you wrote the code the way you did",
    "start": "3049680",
    "end": "3055839"
  },
  {
    "start": "3055000",
    "end": "3055000"
  },
  {
    "text": "one thing that you can use to provide context as well as comments is name spacing",
    "start": "3056400",
    "end": "3061839"
  },
  {
    "text": "business state here in the u.s state could mean things like california or florida but it could also mean open",
    "start": "3061839",
    "end": "3068559"
  },
  {
    "text": "closed operating not operating right we don't necessarily understand what that means for a business state so business",
    "start": "3068559",
    "end": "3074640"
  },
  {
    "text": "dot address dot state tells me that that state is related to the address of the business it's a location",
    "start": "3074640",
    "end": "3080800"
  },
  {
    "text": "total by itself doesn't tell me anything but order.total does so",
    "start": "3080800",
    "end": "3086640"
  },
  {
    "text": "namespacing or or object context is one way that we can provide the additional",
    "start": "3086640",
    "end": "3092400"
  },
  {
    "text": "information that we need to understand what the code is doing take advantage of that that avoids duplication and",
    "start": "3092400",
    "end": "3098160"
  },
  {
    "text": "redundancy i don't need to say business dot address dot address state",
    "start": "3098160",
    "end": "3104720"
  },
  {
    "text": "or business dot address dot business address state that's it's redundant i don't need that",
    "start": "3104720",
    "end": "3110480"
  },
  {
    "text": "name spacing is great and one of the best ways in my experience to make some of these",
    "start": "3110480",
    "end": "3116880"
  },
  {
    "start": "3113000",
    "end": "3113000"
  },
  {
    "text": "improvements in your code and on your team is to put together a checklist of",
    "start": "3116880",
    "end": "3122240"
  },
  {
    "text": "specific things that you as a team want to do come up with a handful of",
    "start": "3122240",
    "end": "3128880"
  },
  {
    "text": "guidelines come up with team agreements and this can be related to naming this can be related to just general approach to code",
    "start": "3128880",
    "end": "3136240"
  },
  {
    "text": "how you're going to do your code reviews and then work through those checklists together in the code review",
    "start": "3136240",
    "end": "3142000"
  },
  {
    "text": "and however you do code reviews you should definitely have a kind of a it doesn't be super formal but you",
    "start": "3142000",
    "end": "3147680"
  },
  {
    "text": "should have a process that you follow consistently make this checklist part of your code reviews and the reason i like to use",
    "start": "3147680",
    "end": "3153200"
  },
  {
    "text": "code reviews instead of hard and fast rules and like a linter for example is",
    "start": "3153200",
    "end": "3158720"
  },
  {
    "text": "if the linter starts failing or produces warnings",
    "start": "3158720",
    "end": "3164319"
  },
  {
    "text": "then that is going to cause a situation where you're encouraging your developers to do",
    "start": "3164319",
    "end": "3170319"
  },
  {
    "text": "things that could be potentially harmful or problematic just to get the linter to pass or you may be teaching them to just",
    "start": "3170319",
    "end": "3177280"
  },
  {
    "text": "kind of ignore warnings because there's so many warnings that they just started ignoring them and that's bad as well but in a code review we can implement",
    "start": "3177280",
    "end": "3184240"
  },
  {
    "text": "changes in code that would normally fail everything and we can slowly as we address the code",
    "start": "3184240",
    "end": "3191280"
  },
  {
    "text": "work together to make improvements that we agree on and they don't have to be hard and fast rules they can we can",
    "start": "3191280",
    "end": "3196880"
  },
  {
    "text": "decide together that hey this code in this situation this rule just doesn't",
    "start": "3196880",
    "end": "3202800"
  },
  {
    "text": "make sense let's not apply the rule in this situation and you can agree to that and maybe you can change your team",
    "start": "3202800",
    "end": "3208240"
  },
  {
    "text": "agreements accordingly but remember code reviews are not exist to remind everyone how smart you are they are not there to",
    "start": "3208240",
    "end": "3214000"
  },
  {
    "text": "make other people feel bad the purpose of code reviews is to apply consistency on your team to apply consistency to",
    "start": "3214000",
    "end": "3221040"
  },
  {
    "text": "code and it's a great resource for mentorship but in my team i apply this as a mentorship not just from senior",
    "start": "3221040",
    "end": "3227359"
  },
  {
    "text": "developers to junior developers but the other way around because newer developers giving you common comments",
    "start": "3227359",
    "end": "3233200"
  },
  {
    "text": "and feedback on your code are going to help you produce more readable code because",
    "start": "3233200",
    "end": "3239839"
  },
  {
    "text": "they're going to point out right away the things that are confusing and if it's confusing to them it's going to be",
    "start": "3239839",
    "end": "3246319"
  },
  {
    "text": "confusing to other people as well and it's going to help you write more approachable code that is easier for new",
    "start": "3246319",
    "end": "3253920"
  },
  {
    "text": "developers and new people to your team to pick up and read very easily",
    "start": "3253920",
    "end": "3259359"
  },
  {
    "text": "so we want to live of course happily ever after this is fairy tale code after all so quick summary code",
    "start": "3259760",
    "end": "3267280"
  },
  {
    "start": "3262000",
    "end": "3262000"
  },
  {
    "text": "is a form of communication between developers that is how it spends most of its life",
    "start": "3267280",
    "end": "3274319"
  },
  {
    "text": "communication including code is communication should be clear succinct and specific",
    "start": "3274319",
    "end": "3281359"
  },
  {
    "text": "we want to convey meaning and intent with the language we use",
    "start": "3281359",
    "end": "3286880"
  },
  {
    "text": "readable code in its very existence by making our code readable we support inclusivity",
    "start": "3286880",
    "end": "3293280"
  },
  {
    "text": "accessibility and also the company's bottom line because we make it easier for new",
    "start": "3293280",
    "end": "3298480"
  },
  {
    "text": "developers to get up and running we make it easier to avoid bugs we make it quicker and cheaper to make changes and fixes to",
    "start": "3298480",
    "end": "3305680"
  },
  {
    "text": "the code so it really does help the bottom line as well and the one great way to do this is to",
    "start": "3305680",
    "end": "3311920"
  },
  {
    "text": "create team agreements together about how we're going to approach this code and then support that through",
    "start": "3311920",
    "end": "3318160"
  },
  {
    "text": "code reviews so i want to thank you very much for your time and attention today i'm happy",
    "start": "3318160",
    "end": "3323839"
  },
  {
    "text": "to answer any questions we have just a couple minutes and i will follow up in slack later as well if you want to hit me up in there",
    "start": "3323839",
    "end": "3330559"
  },
  {
    "text": "and feel free to follow me on twitter as well but thank you so much",
    "start": "3330559",
    "end": "3335838"
  }
]