[
  {
    "text": "awesome hello everyone everybody happy having a good conference look at that amount of feedback i'm",
    "start": "7759",
    "end": "14000"
  },
  {
    "text": "getting i'm from sweden swedish people don't give that much feedback belgians don't give any feedback all",
    "start": "14000",
    "end": "20720"
  },
  {
    "text": "finns don't americans do but you guys have been so good i'm impressed um so we're gonna be talking",
    "start": "20720",
    "end": "27439"
  },
  {
    "text": "about asp.net core or owen or sort of a combination um",
    "start": "27439",
    "end": "33440"
  },
  {
    "text": "so who am i some people say you don't need this slide if",
    "start": "33440",
    "end": "38719"
  },
  {
    "text": "yeah um the person that says that is scott hanselman if you're scott hanselman you don't need this slide if",
    "start": "38719",
    "end": "44399"
  },
  {
    "text": "you're me you need the slide um my name is chris klogg i work as a senior developer slash technical think",
    "start": "44399",
    "end": "52000"
  },
  {
    "text": "something teacher mentor for a company in sweden and i generally spend a lot of my time",
    "start": "52000",
    "end": "59039"
  },
  {
    "text": "sort of parting knowledge i go to conferences and speak i mentor teams um i've done a pluralsight course um i used",
    "start": "59039",
    "end": "66479"
  },
  {
    "text": "to blog a lot and i love sharing knowledge in different areas that i've figured out along the way um",
    "start": "66479",
    "end": "72880"
  },
  {
    "text": "any spirit mvp um asp insider all of that little thing doesn't really matter",
    "start": "72880",
    "end": "78080"
  },
  {
    "text": "um the only thing that's quite important is i am from sweden so if you don't understand what i'm saying",
    "start": "78080",
    "end": "84000"
  },
  {
    "text": "tough um there's not much i can do about it that's just the way it is um",
    "start": "84000",
    "end": "90560"
  },
  {
    "text": "so the question is what is owen how many of you are working with owen today",
    "start": "90560",
    "end": "95920"
  },
  {
    "text": "okay how many of you could go up here and explain what owen is",
    "start": "96560",
    "end": "102560"
  },
  {
    "text": "he he goes i i went into a stretch [Music]",
    "start": "104079",
    "end": "109600"
  },
  {
    "text": "okay it's actually not that complicated there is nothing there owen is a specification right so the only spec says owen defines a standard interface",
    "start": "109600",
    "end": "116079"
  },
  {
    "text": "between.net web servers and web applications that is basically where it is it's a piece of paper or a document",
    "start": "116079",
    "end": "121840"
  },
  {
    "text": "that basically says this is the way we abstract away our web servers using a simple interface and it means that",
    "start": "121840",
    "end": "129119"
  },
  {
    "text": "instead of having this where if we're building web-based things on.net we have to run it on iis",
    "start": "129119",
    "end": "136080"
  },
  {
    "text": "with owing we're basically saying no we'll make it possible for you to run",
    "start": "136080",
    "end": "141440"
  },
  {
    "text": "net-based web applications on other platforms in is which is quite cool",
    "start": "141440",
    "end": "148400"
  },
  {
    "text": "except how many of you guys are doing web development today in asp.net",
    "start": "148400",
    "end": "154480"
  },
  {
    "text": "how many of you are not using asp.net mvc okay not even close to half of you so",
    "start": "154480",
    "end": "161680"
  },
  {
    "text": "the problem is that asp.net mvc is actually tied into ies completely",
    "start": "161680",
    "end": "168239"
  },
  {
    "text": "which means there's actually no way of removing mvc out of iis and putting it into owen or project katana in the",
    "start": "168239",
    "end": "174879"
  },
  {
    "text": "current version but asp.net core gives us that ability",
    "start": "174879",
    "end": "180000"
  },
  {
    "text": "so the idea behind the um the om pipeline is that we have this company called an app funk",
    "start": "180000",
    "end": "186560"
  },
  {
    "text": "that funk is the abstraction between the web server and your application so the web server will do the thing of",
    "start": "186560",
    "end": "192159"
  },
  {
    "text": "accepting your request and pull it apart and take all of that information into put into dictionary",
    "start": "192159",
    "end": "198879"
  },
  {
    "text": "pass it into something through the app func",
    "start": "198879",
    "end": "203920"
  },
  {
    "text": "and that app func then returns a task back and the web server sits there and waits for the task to complete and when",
    "start": "203920",
    "end": "209519"
  },
  {
    "text": "the task once the task is completed it's done so that is the abstraction we're getting so it the whole thing pretty much inside",
    "start": "209519",
    "end": "216239"
  },
  {
    "text": "owen is that one delegate and a dictionary",
    "start": "216239",
    "end": "222239"
  },
  {
    "text": "this by the way the dot on requesting is sevdo code it's not there's nothing that you can run like that but that would be",
    "start": "224080",
    "end": "229680"
  },
  {
    "text": "sort of the idea behind it the server will go when i get a request pull it apart put it into the dictionary and put",
    "start": "229680",
    "end": "235439"
  },
  {
    "text": "the send the dictionary into the app func",
    "start": "235439",
    "end": "240280"
  },
  {
    "text": "the app funk then has a friend called the mid funk the mid funk is not actually in the spec",
    "start": "240720",
    "end": "246720"
  },
  {
    "text": "today it's a it's a draft 1.1 or something like that of the o inspect and it basically defines how do we add",
    "start": "246720",
    "end": "253680"
  },
  {
    "text": "things to this incoming and outgoing the request pipeline because right now with in owen they specify and say the app",
    "start": "253680",
    "end": "260560"
  },
  {
    "text": "func is the way that the server calls into our application and then you will build some form of pipeline that we will send the request",
    "start": "260560",
    "end": "266960"
  },
  {
    "text": "through and then when it comes back we will we will send response back but somewhere in the middle they sort of",
    "start": "266960",
    "end": "272560"
  },
  {
    "text": "forgot how to go from this into building a pipeline so everyone did their own version of it",
    "start": "272560",
    "end": "278320"
  },
  {
    "text": "or the few people that did build this actually built their own version of it so they decided that we're going to have another funk",
    "start": "278320",
    "end": "284639"
  },
  {
    "text": "which is a if you see they're using mid funk equals it's a funk that takes an app funk and returns an app funk",
    "start": "284639",
    "end": "292240"
  },
  {
    "text": "it's getting ridiculously complicated to figure this out after hand you'll see when i remove sort of the syntax like",
    "start": "292240",
    "end": "298160"
  },
  {
    "text": "this and you'll see me building stuff you'll see it's actually not that hard but it's good to know that you've got the app funk and the midfunk",
    "start": "298160",
    "end": "305919"
  },
  {
    "text": "so if we look at what's actually happening in owen you get this process called some process.exe it's a host",
    "start": "306160",
    "end": "312479"
  },
  {
    "text": "the host can be anything in owen it can be a console app it could be a windows service it could be iis it can be",
    "start": "312479",
    "end": "319440"
  },
  {
    "text": "anything it's a host you can literally plug it into your wpf",
    "start": "319440",
    "end": "325039"
  },
  {
    "text": "application and have your wpf application act as a web server",
    "start": "325039",
    "end": "330639"
  },
  {
    "text": "for some reason not saying that that would be very useful but you could inside the host you have a server",
    "start": "330639",
    "end": "337600"
  },
  {
    "text": "we split this into think two different things so you've got the host that will just host it and you have the server",
    "start": "337600",
    "end": "343039"
  },
  {
    "text": "which will open the port and listen for incoming requests and then handle all of the http communication with the client",
    "start": "343039",
    "end": "349199"
  },
  {
    "text": "and the reason is that it basically makes it easier for us to pull and things apart and plug different things",
    "start": "349199",
    "end": "355120"
  },
  {
    "text": "in if you're running this in iis which you can iis will both be the host and the",
    "start": "355120",
    "end": "361120"
  },
  {
    "text": "server so its a one one package deal but when you're building in a command line application for example you will have",
    "start": "361120",
    "end": "367440"
  },
  {
    "text": "the host being the exa file and then you'll pull in another server that will do the actual communication for you",
    "start": "367440",
    "end": "375120"
  },
  {
    "text": "inside the server we have a pipeline the pipeline consists of middlewares pieces of code that will execute as the",
    "start": "375120",
    "end": "381680"
  },
  {
    "text": "information goes in and out of this pipeline and we have an application",
    "start": "381680",
    "end": "387600"
  },
  {
    "text": "the thing that organizes the response creates the response that we need to send back",
    "start": "387600",
    "end": "393280"
  },
  {
    "text": "and if you don't want to code all the way down into this raw framework which basically you get",
    "start": "393280",
    "end": "398479"
  },
  {
    "text": "incoming requests here is the path i requested here is this your request this is the information and you have to do",
    "start": "398479",
    "end": "403680"
  },
  {
    "text": "everything manually you will build some have some form of web framework that you would put on top of it that will do it",
    "start": "403680",
    "end": "409280"
  },
  {
    "text": "for you something like nancy fx or fubu embassy or something like that that works with owen",
    "start": "409280",
    "end": "416080"
  },
  {
    "text": "so you get a client client connects to the server right it creates a request and it's a simple get http one one",
    "start": "416560",
    "end": "423599"
  },
  {
    "text": "request sends over some information and says this is the path i want to use it's a host i'm requesting and all that",
    "start": "423599",
    "end": "429440"
  },
  {
    "text": "server takes that request and pulls out the parts in that http request and puts it into a dictionary",
    "start": "429440",
    "end": "435680"
  },
  {
    "text": "the dictionary is of string object so it means that you can conclude include everything which is kind of cool because",
    "start": "435680",
    "end": "442080"
  },
  {
    "text": "it means that inside that dictionary we can include strings like the path i've requested the user agent string and",
    "start": "442080",
    "end": "447759"
  },
  {
    "text": "everything but we can also include things like the stream the incoming stream in an http post or the outgoing",
    "start": "447759",
    "end": "454400"
  },
  {
    "text": "response stream as well so we can put stream objects in the dictionary and that's the way that we communicate",
    "start": "454400",
    "end": "460560"
  },
  {
    "text": "with the client when we're sending back responses but we can also put in delegates so we can put in application",
    "start": "460560",
    "end": "468319"
  },
  {
    "text": "delegates in this thing and basically say here is a function that i put into this dictionary with this name and if",
    "start": "468319",
    "end": "474080"
  },
  {
    "text": "you want to do something pull out that function and pass values to it so we can actually pass not only data but actually",
    "start": "474080",
    "end": "480160"
  },
  {
    "text": "functionality through a dictionary as well does that make sense there's a sample that's actually in",
    "start": "480160",
    "end": "486160"
  },
  {
    "text": "there so um owen has an extension where you can you can add owen extensions and one of them is file send",
    "start": "486160",
    "end": "493120"
  },
  {
    "text": "so if you want to send the file in owen there's one way of doing it is opening the file reading the file from disk and",
    "start": "493120",
    "end": "498160"
  },
  {
    "text": "then streaming it to to the client through the stream but most web servers actually have a",
    "start": "498160",
    "end": "504960"
  },
  {
    "text": "built-in functionality to serve up files so iis has a very optimized way of serving a file so there",
    "start": "504960",
    "end": "512080"
  },
  {
    "text": "is an extension to owen that says you can if your server supports it add a dictionary key that is",
    "start": "512080",
    "end": "518440"
  },
  {
    "text": "owin.file send or whatever like this that returns a function you take that function and you pass it",
    "start": "518440",
    "end": "524880"
  },
  {
    "text": "the path of the file and then the the web server does the rest for you so you can pass functionality and the web",
    "start": "524880",
    "end": "530959"
  },
  {
    "text": "server can actually add functionality to your owen pipeline in an agnostic way so",
    "start": "530959",
    "end": "536000"
  },
  {
    "text": "you can have a look at it and say if my web server supports this feature i can use it if my web server doesn't support this feature then i have to do something",
    "start": "536000",
    "end": "542399"
  },
  {
    "text": "else does this make sense very simple abstraction it the server then takes the dictionary",
    "start": "542399",
    "end": "549440"
  },
  {
    "text": "sends it into the pipeline it hits the first middleware first middleware does its thing it can be anything",
    "start": "549440",
    "end": "555600"
  },
  {
    "text": "it passes it on to the next middleware and it passes through all the middlewares in the pipeline until it",
    "start": "555600",
    "end": "560800"
  },
  {
    "text": "reaches the application the application looks at whatever is in the dictionary and figures out that okay",
    "start": "560800",
    "end": "566560"
  },
  {
    "text": "so he's requesting xyz with these parameters i need to go and do this thing here and then i'm going to",
    "start": "566560",
    "end": "571920"
  },
  {
    "text": "generate some html and then i'm going to post that back to the client",
    "start": "571920",
    "end": "576959"
  },
  {
    "text": "as soon as i set send something in to the response stream i notify the server and say i am now",
    "start": "576959",
    "end": "584160"
  },
  {
    "text": "writing things to the stream and the server automatically sends all of the headers and it sends all of the data and starts streaming the data back",
    "start": "584160",
    "end": "590800"
  },
  {
    "text": "to the client at that point as soon as you've written anything to the response stream you",
    "start": "590800",
    "end": "596000"
  },
  {
    "text": "cannot modify any headers you cannot make any changes to the response stream they are already on the way to the",
    "start": "596000",
    "end": "601440"
  },
  {
    "text": "client you can get notified if your middleware needs to know it can get notified that",
    "start": "601440",
    "end": "608160"
  },
  {
    "text": "this is happening the server then takes whatever is coming back and says okay so you have started",
    "start": "608160",
    "end": "613200"
  },
  {
    "text": "writing your body that's fine i will now take all of the headers that are have been configured i will generate an http",
    "start": "613200",
    "end": "619440"
  },
  {
    "text": "response with all the headers in there start sending down that down the wire to the client and then i'm going to",
    "start": "619440",
    "end": "626240"
  },
  {
    "text": "keep on feeding whatever you're pushing into the stream i will just keep streaming down to clients make sense",
    "start": "626240",
    "end": "634240"
  },
  {
    "text": "hope so it kind of should and that then goes back to the client client is happy it gets a web page",
    "start": "634240",
    "end": "640959"
  },
  {
    "text": "but then it goes back again so basically the dictionary then goes back out again so it goes from the application to the",
    "start": "641200",
    "end": "646959"
  },
  {
    "text": "middleware too and then it goes from middleware to middleware one which then goes and sends it back to the",
    "start": "646959",
    "end": "652079"
  },
  {
    "text": "server or rather notifies the server that now all the middlewares have been able had looked at it on the incoming",
    "start": "652079",
    "end": "657519"
  },
  {
    "text": "and outgoing and i am now done with the whole request and the server can then go and terminate the connection and",
    "start": "657519",
    "end": "664160"
  },
  {
    "text": "basically say the response is now done that is a win",
    "start": "664160",
    "end": "669920"
  },
  {
    "text": "and i guess most of you have heard of project katana or katana project katana project is microsoft's owen",
    "start": "670560",
    "end": "676880"
  },
  {
    "text": "implementation so it basically microsoft took a look at owen and said this is pretty cool we'll build our implementation of it they made some",
    "start": "676880",
    "end": "683279"
  },
  {
    "text": "tweaks to it they made some modifications to in typical microsoft spirit we'll take what is there and then",
    "start": "683279",
    "end": "688399"
  },
  {
    "text": "we'll make that and then something else but they kept in line with what's in the",
    "start": "688399",
    "end": "693839"
  },
  {
    "text": "specs so actually all of their modifications could actually still go under the owing",
    "start": "693839",
    "end": "699760"
  },
  {
    "text": "specification properly so the the change that they did is that",
    "start": "699760",
    "end": "705920"
  },
  {
    "text": "they instead in the app func here you see func i htp context and task it used",
    "start": "705920",
    "end": "710959"
  },
  {
    "text": "to be i dictionary of string objects so they added a little layer on top of the dictionary to make it easier for us to",
    "start": "710959",
    "end": "717600"
  },
  {
    "text": "get access to the response stream and the request stream and the path and all of that without having to know all of",
    "start": "717600",
    "end": "723040"
  },
  {
    "text": "these dictionary keys and then it still supports the dictionary syntax where you can go",
    "start": "723040",
    "end": "729120"
  },
  {
    "text": "context.environment and then you get the dictionary and you can go and add and read things from the",
    "start": "729120",
    "end": "734800"
  },
  {
    "text": "dictionaries you want it's just that microsoft thought it was nicer to get a typed statically typed interface for you",
    "start": "734800",
    "end": "741120"
  },
  {
    "text": "to work with than a dictionary which i find quite obvious",
    "start": "741120",
    "end": "747040"
  },
  {
    "text": "then comes along asp.net core one i think that was the final name of it after all of the other things it started",
    "start": "747120",
    "end": "753839"
  },
  {
    "text": "out with k somebody gave me access to k before it was even announced before tech ed",
    "start": "753839",
    "end": "759440"
  },
  {
    "text": "when they announced it because i was doing some stuff that kind of had nothing to do with k at all but i thought i'd want to look at it i went in",
    "start": "759440",
    "end": "766000"
  },
  {
    "text": "i looked at it and i understood nothing it's not easy when you get a nougat or a github project",
    "start": "766000",
    "end": "771440"
  },
  {
    "text": "with all of that in it and you sort of go okay it changed a whole lot of things i just",
    "start": "771440",
    "end": "777040"
  },
  {
    "text": "gave up i didn't look at it and then i it went from k which was a fantastically ungoogable name",
    "start": "777040",
    "end": "784560"
  },
  {
    "text": "k throwing error duh okay",
    "start": "784639",
    "end": "789680"
  },
  {
    "text": "that goes into asp.net v next became asp.net five and then that turned into a speed and had core one and all that and",
    "start": "789680",
    "end": "795680"
  },
  {
    "text": "we're now at asp.net core one core one has a pipeline",
    "start": "795680",
    "end": "802079"
  },
  {
    "text": "the pipeline looks a lot like owen but it's not owen",
    "start": "802079",
    "end": "807200"
  },
  {
    "text": "the idea is there the functionality is the same but what they've done is instead of having i",
    "start": "807200",
    "end": "812639"
  },
  {
    "text": "dictionary or string object they are doing an http context http context is not a tiny little shim",
    "start": "812639",
    "end": "820240"
  },
  {
    "text": "over a dictionary it is a statically typed object it's not an interface it doesn't support a dictionary syntax at",
    "start": "820240",
    "end": "826959"
  },
  {
    "text": "all it is a new object so they are breaking the oem spec there but it's",
    "start": "826959",
    "end": "832000"
  },
  {
    "text": "actually easier to work with this thing so i find it actually quite okay it's still you can still mock it you can",
    "start": "832000",
    "end": "838560"
  },
  {
    "text": "still new up that thing you can still do all the testing you want with it but that's the big change so all the places where you see i dictionary in owen you",
    "start": "838560",
    "end": "845440"
  },
  {
    "text": "will see hp context in here instead so let's have a look at getting started",
    "start": "845440",
    "end": "851360"
  },
  {
    "text": "i considering the speed of internet in australia",
    "start": "851360",
    "end": "857199"
  },
  {
    "text": "yeah ouch i used to live in new zealand i know exactly how poor it is so i i've started up the project before because i",
    "start": "857199",
    "end": "863360"
  },
  {
    "text": "want the nougat packages to get installed properly and not sit here and wait and restoring so what we get here",
    "start": "863360",
    "end": "869839"
  },
  {
    "text": "this is quite uncomfortable um it's a simple empty asp.net core",
    "start": "869839",
    "end": "875199"
  },
  {
    "text": "web project using the.net framework i could have gone with core but i went with net because i have a other demo",
    "start": "875199",
    "end": "881279"
  },
  {
    "text": "later on that will include some net stuff it starts out with this main method i guess everyone has seen",
    "start": "881279",
    "end": "887839"
  },
  {
    "text": "core by now right anyone not seen core okay cool so there's a project program",
    "start": "887839",
    "end": "895199"
  },
  {
    "text": "static void main then there's a startup file which is exactly the same as you would have had in project katana there's a",
    "start": "895199",
    "end": "901600"
  },
  {
    "text": "class called startup but instead of it being dynamically loaded when iis starts",
    "start": "901600",
    "end": "906880"
  },
  {
    "text": "up or your app starts in is it's actually they point at it here so you give it the class name there",
    "start": "906880",
    "end": "913760"
  },
  {
    "text": "there are no cloud there are no attributes there's nothing else it's just you have to put it in there",
    "start": "913760",
    "end": "919120"
  },
  {
    "text": "and the other difference is that there are now two methods you need to implement or you should implement",
    "start": "919120",
    "end": "924240"
  },
  {
    "text": "one is configure which used to be called configuration",
    "start": "924240",
    "end": "929680"
  },
  {
    "text": "um i application builder as the first parameter used to be iap builder they're like tiny little variations between",
    "start": "929680",
    "end": "936000"
  },
  {
    "text": "katana and this if you look at the syntax um so that is the one that we're used to",
    "start": "936000",
    "end": "941759"
  },
  {
    "text": "but it also supports dependence injection which is why i can add other parameters here like eye hosting environment and i",
    "start": "941759",
    "end": "948079"
  },
  {
    "text": "logger factory and all of that it will be dependence injected everything in astr net core includes",
    "start": "948079",
    "end": "954880"
  },
  {
    "text": "dependency di and di is set up in the configure services method",
    "start": "954880",
    "end": "960240"
  },
  {
    "text": "that takes an iservice collection where you're basically going to say i want to add a service with this interface here's the implementation and you're good and",
    "start": "960240",
    "end": "966639"
  },
  {
    "text": "it starts doing everything for you so that's the main difference and if we look at i'm just going to scroll down focus on",
    "start": "966639",
    "end": "972880"
  },
  {
    "text": "this part here this is pretty much our our pipeline our app",
    "start": "972880",
    "end": "978320"
  },
  {
    "text": "so we can go here it looks to see if we're in development mode then use a developer exception page",
    "start": "978320",
    "end": "983759"
  },
  {
    "text": "otherwise just go and say app.run run means i will return a response i am",
    "start": "983759",
    "end": "990079"
  },
  {
    "text": "the end of the pipeline there's nothing after me i am the final stop and when i",
    "start": "990079",
    "end": "995600"
  },
  {
    "text": "if i'm not returning a response everything is broken so that doesn't take a reference to the",
    "start": "995600",
    "end": "1001440"
  },
  {
    "text": "next middleware it just takes the context and then you say context dot response rate is write async hello world",
    "start": "1001440",
    "end": "1008079"
  },
  {
    "text": "pretty simple i go ctrl f5 i hope this works because it's not this is microsoft template it should sort of",
    "start": "1008079",
    "end": "1014639"
  },
  {
    "text": "work out the box it's slr world nobody's impressed",
    "start": "1014639",
    "end": "1020480"
  },
  {
    "text": "um hard crowd no i seriously i know i know it's not impressive but it's kind of it",
    "start": "1020480",
    "end": "1025839"
  },
  {
    "text": "shows how simple everything is so we can go in and say app.use instead",
    "start": "1025839",
    "end": "1031520"
  },
  {
    "text": "use is saying i have a middleware i might return a response or i might just",
    "start": "1031520",
    "end": "1036720"
  },
  {
    "text": "pass it on it's kind of like a i had a friend that i showed this to the other day because he hadn't worked with with this before and i said russian dolls",
    "start": "1036720",
    "end": "1044000"
  },
  {
    "text": "actually makes a lot of sense it's like a russian doll you pass things in through the dolls the outer layer passes",
    "start": "1044000",
    "end": "1049840"
  },
  {
    "text": "it to the inner that pass it to the inner that passes it in there and somewhere it changes and goes back and it basically goes out all the layers",
    "start": "1049840",
    "end": "1055919"
  },
  {
    "text": "until it exits the doll again makes sense it's the only time i will use a doll as",
    "start": "1055919",
    "end": "1061200"
  },
  {
    "text": "a reference for anything while doing a presentation next you get these two there are two ways of calling calling use there used",
    "start": "1061200",
    "end": "1069120"
  },
  {
    "text": "to be only one but microsoft decided that that whole mid funk that is going into owen",
    "start": "1069120",
    "end": "1075039"
  },
  {
    "text": "should go in here as well it's not a proper mid funk because it uses the the wrong app func but it has the",
    "start": "1075039",
    "end": "1081280"
  },
  {
    "text": "same idea it takes an app func and returns snap func but the one that you're used to seeing",
    "start": "1081280",
    "end": "1087679"
  },
  {
    "text": "looks something like this async ctx",
    "start": "1087679",
    "end": "1092960"
  },
  {
    "text": "this is going really good next",
    "start": "1092960",
    "end": "1097279"
  },
  {
    "text": "how many of you have seen this before how many of you you said you had worked",
    "start": "1098000",
    "end": "1103919"
  },
  {
    "text": "with owen and there's like one hand that goes up have you seen this this is owen 101",
    "start": "1103919",
    "end": "1109520"
  },
  {
    "text": "it's not even that this is like beyond 101 this is what i expect you to know when you come to class",
    "start": "1109520",
    "end": "1115039"
  },
  {
    "text": "um so i'm just going to ctx dot response dot write async and i can go hello",
    "start": "1115039",
    "end": "1123520"
  },
  {
    "text": "and dc like that and if i compile this",
    "start": "1123520",
    "end": "1130000"
  },
  {
    "text": "it should sort of just work it does whip to do i've made no difference except the fact that i've now made this thing",
    "start": "1131039",
    "end": "1136960"
  },
  {
    "text": "completely useless because i'm always returning a response but what if i want to do something else",
    "start": "1136960",
    "end": "1142160"
  },
  {
    "text": "what if i want to go inline what if the whole thing of russian dolls and i'm talking about the pipeline and all i'm doing is returning it so instead of that",
    "start": "1142160",
    "end": "1148480"
  },
  {
    "text": "i can go ahead and i can do something like this so let's pull out that actually let's",
    "start": "1148480",
    "end": "1153760"
  },
  {
    "text": "not let's not do that i want to do this app.use let's check the other syntax this this is going to give me a kick i'm",
    "start": "1153760",
    "end": "1159840"
  },
  {
    "text": "going to see how many of you are going to look at this and go what it's going to be next",
    "start": "1159840",
    "end": "1165360"
  },
  {
    "text": "fat arrow async i really can't spell",
    "start": "1165360",
    "end": "1172400"
  },
  {
    "text": "ctx fat arrow thing does that syntax make sense",
    "start": "1172400",
    "end": "1179600"
  },
  {
    "text": "there's a guy going yes is there anyone that agree with me that this syntax does not make sense",
    "start": "1179600",
    "end": "1186480"
  },
  {
    "text": "thank you there's at least one honest person in here i looked at this and i went what",
    "start": "1186480",
    "end": "1191679"
  },
  {
    "text": "it's not that complicated it does make sense it does it's basically it's it's a funk that takes",
    "start": "1191679",
    "end": "1198160"
  },
  {
    "text": "the next middleware reference as a parameter but that func in turn returns",
    "start": "1198160",
    "end": "1203200"
  },
  {
    "text": "returns another func that takes the context so it basically just becomes two fat",
    "start": "1203200",
    "end": "1208799"
  },
  {
    "text": "arrow functions after each other it's apparently very logical then we can say var",
    "start": "1208799",
    "end": "1214799"
  },
  {
    "text": "timer equals new stop stopwatch like that timer dot start",
    "start": "1214799",
    "end": "1223600"
  },
  {
    "text": "await next it wants the context let's pass it into",
    "start": "1223600",
    "end": "1228640"
  },
  {
    "text": "context so that's where this before doing the call to the next this is on the way in through the pipeline then i",
    "start": "1228640",
    "end": "1234640"
  },
  {
    "text": "go and i wait the next one which passes the whole thing back back into the pipeline through the pipeline and then",
    "start": "1234640",
    "end": "1239919"
  },
  {
    "text": "when it comes back from next i'm on the way out so i can go and say timer dot stop",
    "start": "1239919",
    "end": "1246799"
  },
  {
    "text": "and then i can say console dot write line i can use this funky new",
    "start": "1246799",
    "end": "1254000"
  },
  {
    "text": "syntax and say request to",
    "start": "1254000",
    "end": "1260320"
  },
  {
    "text": "ctx dot request request dot",
    "start": "1260320",
    "end": "1266720"
  },
  {
    "text": "path took",
    "start": "1266720",
    "end": "1270640"
  },
  {
    "text": "timer dot elapsed milliseconds i am a really slow type where i figure out especially",
    "start": "1272240",
    "end": "1277280"
  },
  {
    "text": "when i'm standing weirdly there it is so i stop my timer and i write at the",
    "start": "1277280",
    "end": "1282480"
  },
  {
    "text": "request through console the problem now is that the console doesn't actually work if you put it through is express because there's no console in there it",
    "start": "1282480",
    "end": "1288880"
  },
  {
    "text": "will just swallow it so i can go up here and i can switch it and say i want to run it as a console app instead and i can go f5",
    "start": "1288880",
    "end": "1296559"
  },
  {
    "text": "it goes up and it goes hey hello ndc which is quite cool not",
    "start": "1298480",
    "end": "1303679"
  },
  {
    "text": "but the interesting thing is here so i get all of these so basically i'm",
    "start": "1303679",
    "end": "1309600"
  },
  {
    "text": "now measuring the time it takes for all my requests to go through and it's just an inline thing so basically",
    "start": "1309600",
    "end": "1315120"
  },
  {
    "text": "methods go or incoming requests go through me and on the way out i do something else so we got this awesome",
    "start": "1315120",
    "end": "1320240"
  },
  {
    "text": "pipeline everybody's going it's not very impressive no it's not very impressive it's actually very low level not very",
    "start": "1320240",
    "end": "1325520"
  },
  {
    "text": "complicated at all but it gives you a lot of power to go this deep how many of you have built um",
    "start": "1325520",
    "end": "1333840"
  },
  {
    "text": "i http modules before or i http handlers for iis",
    "start": "1334080",
    "end": "1339840"
  },
  {
    "text": "how many enjoyed it exactly this is the same thing it's just that",
    "start": "1339840",
    "end": "1346480"
  },
  {
    "text": "this is actually quite enjoyable because it's simple and it's not is dependent there's one little thing um writing to",
    "start": "1346480",
    "end": "1353120"
  },
  {
    "text": "the console is a pretty bad practice right so what we want to do since we have dependency injected the i logger",
    "start": "1353120",
    "end": "1358799"
  },
  {
    "text": "factory we can go and say no var logger equals",
    "start": "1358799",
    "end": "1366240"
  },
  {
    "text": "logger factory dot create logger name it request",
    "start": "1366240",
    "end": "1371760"
  },
  {
    "text": "timer like that and then we can say logger",
    "start": "1371760",
    "end": "1376960"
  },
  {
    "text": "dot log information once i've done that i actually do get color coded messages so",
    "start": "1376960",
    "end": "1384880"
  },
  {
    "text": "i get little green thing that says info and it's more structured",
    "start": "1384880",
    "end": "1390000"
  },
  {
    "text": "it's is structured so i can go in and see it's it's information and it's from the request timer",
    "start": "1390000",
    "end": "1396000"
  },
  {
    "text": "and it took that long nobody's impressed okay",
    "start": "1396000",
    "end": "1402679"
  },
  {
    "text": "well that's what you get for trying to be nice so",
    "start": "1402960",
    "end": "1408559"
  },
  {
    "text": "it's all very very simple right uh but that's also kind of the problem",
    "start": "1408559",
    "end": "1413600"
  },
  {
    "text": "do you want to build all your applications like this like inline methods for everything",
    "start": "1413600",
    "end": "1418640"
  },
  {
    "text": "so looking at this you sort of go oh that is ugly i really don't want to go and do this full time",
    "start": "1418640",
    "end": "1425600"
  },
  {
    "text": "so you really need to go and get organized when you're building your middlewares you cannot go and just build inline functions it's just it's going to",
    "start": "1425600",
    "end": "1432000"
  },
  {
    "text": "look like crap and you're going to end up just going to be ugly but then somebody's going to go that's not a problem i can just do a static class and",
    "start": "1432000",
    "end": "1437200"
  },
  {
    "text": "i can put my functions in there and it's going to be awesome yes and no",
    "start": "1437200",
    "end": "1443279"
  },
  {
    "text": "so you need to make sure that you are structured if you're gonna do owing stuff and one of the things is that we",
    "start": "1443279",
    "end": "1449679"
  },
  {
    "text": "build middlewares middlewares don't have to be inline functions and i really don't think unless they're very very",
    "start": "1449679",
    "end": "1455600"
  },
  {
    "text": "simple ones like this",
    "start": "1455600",
    "end": "1460880"
  },
  {
    "text": "it shouldn't be an inline function can we agree on that good if not there's the door",
    "start": "1460880",
    "end": "1468720"
  },
  {
    "text": "and if i ever end up on a project with you guys and i see in line one i'm gonna hunt you down",
    "start": "1468720",
    "end": "1474000"
  },
  {
    "text": "so i'm gonna add a middleware folder like that and i'm gonna add a new middleware so i'm just gonna go and add",
    "start": "1474000",
    "end": "1479039"
  },
  {
    "text": "new class request timer middleware",
    "start": "1479039",
    "end": "1486000"
  },
  {
    "text": "like that remove all of that stuff i'm going to add a constructor in here constructor is going to take a request",
    "start": "1486000",
    "end": "1493279"
  },
  {
    "text": "delegate which is a core specific thing it's similar to",
    "start": "1493279",
    "end": "1499760"
  },
  {
    "text": "owen and i'm going to call it next i'm going to store that in a variable like that i'm going to add another method down",
    "start": "1499760",
    "end": "1506240"
  },
  {
    "text": "here called public async task",
    "start": "1506240",
    "end": "1511440"
  },
  {
    "text": "yes invoke the invoke takes a",
    "start": "1511440",
    "end": "1516799"
  },
  {
    "text": "http context like that",
    "start": "1516799",
    "end": "1522240"
  },
  {
    "text": "then i'm going to go out here and i'm going to pull out this thing here",
    "start": "1522240",
    "end": "1527400"
  },
  {
    "text": "that was wrong key combination there it is",
    "start": "1528159",
    "end": "1531840"
  },
  {
    "text": "there is i'm going to fix this i'm going to slowly going to fix this let's go like that so it's going to say next isn't available that's fine it's",
    "start": "1533440",
    "end": "1539360"
  },
  {
    "text": "underscore next because the reference comes in through the constructor and not as a part of this function call then it's going to say i can't access",
    "start": "1539360",
    "end": "1545360"
  },
  {
    "text": "loggerfactory i can solve that because this thing supports dependence injection so i can just go in",
    "start": "1545360",
    "end": "1550799"
  },
  {
    "text": "here and ask for a logger factory but i'm actually going to go and request an i logger instead because one of the",
    "start": "1550799",
    "end": "1556080"
  },
  {
    "text": "things with the di here is i can request the logger factory and create my logger and i get an ilogger back of a specific",
    "start": "1556080",
    "end": "1561840"
  },
  {
    "text": "type or i can request an eye logger of the right type to begin with so i'm going to take this thing and i'm going",
    "start": "1561840",
    "end": "1566880"
  },
  {
    "text": "to tell it that this is the thing that i'm logging for i'm going to call it logger",
    "start": "1566880",
    "end": "1571919"
  },
  {
    "text": "i'm going to introduce logger i'm going to remove",
    "start": "1571919",
    "end": "1577760"
  },
  {
    "text": "that and put it in there and everything seems to work",
    "start": "1577760",
    "end": "1584080"
  },
  {
    "text": "slightly more struck i don't like the fact that that one is grayed out but i am calling it there right yes",
    "start": "1584080",
    "end": "1590320"
  },
  {
    "text": "and why is that thing squiggly",
    "start": "1590320",
    "end": "1593759"
  },
  {
    "text": "i really hope this works it looks right okay i'm just going to ignore those and",
    "start": "1596000",
    "end": "1601520"
  },
  {
    "text": "now that we've got those in our own class we can actually just remove this thing and say app.use middleware instead",
    "start": "1601520",
    "end": "1608000"
  },
  {
    "text": "and then i tell it that i want to use a request timer middleware like that",
    "start": "1608000",
    "end": "1614799"
  },
  {
    "text": "is that more structured since i'm getting squiggly lines i just want to press f5 and see if this",
    "start": "1614799",
    "end": "1620000"
  },
  {
    "text": "actually works no i know i know i'm just i'm yeah it",
    "start": "1620000",
    "end": "1626799"
  },
  {
    "text": "seems to work i'm i'm getting uh timing right",
    "start": "1626799",
    "end": "1631919"
  },
  {
    "text": "requests to blah blah blah took yeah it seems work okay yeah i know i know that there are some",
    "start": "1632240",
    "end": "1638960"
  },
  {
    "text": "there are some yeah i don't know how to put this in any other terms than bugs in in useful",
    "start": "1638960",
    "end": "1644960"
  },
  {
    "text": "studio when it comes to this there is potential i think that's the way you put it as a program manager",
    "start": "1644960",
    "end": "1650799"
  },
  {
    "text": "um this looks clear cleaner right but it's actually not that clean well it",
    "start": "1650799",
    "end": "1657520"
  },
  {
    "text": "is pretty clean but it's kind of annoying because i don't like doing it like this this looks quite cool right",
    "start": "1657520",
    "end": "1663120"
  },
  {
    "text": "so one of the things that we do with with uh owen middlewares and also middleweights here is that we actually",
    "start": "1663120",
    "end": "1668159"
  },
  {
    "text": "try to make extension methods for them so they're easy to use and we have this syntax of app.use whatever and everyone",
    "start": "1668159",
    "end": "1675440"
  },
  {
    "text": "is used to working with that so if we go in here create a new class i'm going to call it",
    "start": "1675440",
    "end": "1681440"
  },
  {
    "text": "request timer middle yeah middleware",
    "start": "1681440",
    "end": "1687080"
  },
  {
    "text": "extensions like that and remove that into a new file",
    "start": "1687080",
    "end": "1692720"
  },
  {
    "text": "save that make this thing public static class",
    "start": "1692720",
    "end": "1697840"
  },
  {
    "text": "public static i application builder use request timer",
    "start": "1697840",
    "end": "1705440"
  },
  {
    "text": "like that it's going to be this i application builder app",
    "start": "1705440",
    "end": "1711360"
  },
  {
    "text": "now we take this thing here no we take this thing here",
    "start": "1711360",
    "end": "1715919"
  },
  {
    "text": "we do return like that",
    "start": "1716799",
    "end": "1722480"
  },
  {
    "text": "and this is now the freaky part i'm going to move this thing into this namespace",
    "start": "1722480",
    "end": "1728720"
  },
  {
    "text": "like that anybody know why",
    "start": "1731120",
    "end": "1736000"
  },
  {
    "text": "yeah it it it's an extension method to be able to use your extension method you have to do an import of your namespace",
    "start": "1736240",
    "end": "1742799"
  },
  {
    "text": "by putting it in that namespace that has to be there because i application builder is already is being used anyway",
    "start": "1742799",
    "end": "1748399"
  },
  {
    "text": "it means that you will automatically get app.use request timer without having to do a separate import or using",
    "start": "1748399",
    "end": "1757278"
  },
  {
    "text": "that looks pretty good right okay this is cool until somebody goes and says by the way",
    "start": "1757440",
    "end": "1764320"
  },
  {
    "text": "i actually want to log something else i want to have a different format of it oops so next step in this thing doing a",
    "start": "1764320",
    "end": "1770000"
  },
  {
    "text": "middleware is an options class and tell it that i want to be able to configure my middleware you use that or do that by",
    "start": "1770000",
    "end": "1777279"
  },
  {
    "text": "creating another class there are always three classes involved there's a public request timer",
    "start": "1777279",
    "end": "1784480"
  },
  {
    "text": "options it needs to be class right there it is",
    "start": "1784480",
    "end": "1789520"
  },
  {
    "text": "look at that that's beautiful and then you add whatever functionality you need whatever configuration you need",
    "start": "1789520",
    "end": "1795440"
  },
  {
    "text": "for your middleware you add here as properties so i'm going to create a prop that has the f",
    "start": "1795440",
    "end": "1800480"
  },
  {
    "text": "it's a func that takes an um an http context",
    "start": "1800480",
    "end": "1808159"
  },
  {
    "text": "along and returns a string and i'm going to call it format",
    "start": "1808159",
    "end": "1814320"
  },
  {
    "text": "there i'm going to go in and create a constructor i'm going to say format equals and i'm going to create a new one",
    "start": "1814320",
    "end": "1820399"
  },
  {
    "text": "of these ctx elapsed",
    "start": "1820399",
    "end": "1826240"
  },
  {
    "text": "now i'm going to take this thing here",
    "start": "1826880",
    "end": "1830159"
  },
  {
    "text": "and this thing here is going to change into elapsed",
    "start": "1833440",
    "end": "1837840"
  },
  {
    "text": "does that make sense okay i'm going to move that into a different move that into a different",
    "start": "1839039",
    "end": "1846159"
  },
  {
    "text": "file to get it out of the way i changed this thing here and i add another parameter to my constructor i'm",
    "start": "1846159",
    "end": "1852480"
  },
  {
    "text": "going to say i need a request timer options options let's save that",
    "start": "1852480",
    "end": "1860000"
  },
  {
    "text": "save that as a variable and then down here instead of logging it straight like this i do options.format",
    "start": "1860000",
    "end": "1867760"
  },
  {
    "text": "and it wants a context so ctx and he wants the elapsed time which is timer",
    "start": "1867760",
    "end": "1872799"
  },
  {
    "text": "dot elapsed milliseconds like that okay",
    "start": "1872799",
    "end": "1878399"
  },
  {
    "text": "and finally and the last thing we need to do is in our use request timer i'm going to",
    "start": "1878399",
    "end": "1884480"
  },
  {
    "text": "say you have to be able to pass in a request timer options but it's not mandatory so it's optional",
    "start": "1884480",
    "end": "1892240"
  },
  {
    "text": "and then i pass that on",
    "start": "1892240",
    "end": "1896000"
  },
  {
    "text": "i am not doing this very well today there it is i passed that into my use middlewares",
    "start": "1898000",
    "end": "1904880"
  },
  {
    "text": "call which means that it's going to be passed into the constructor so anything you pass in here will be",
    "start": "1904880",
    "end": "1911840"
  },
  {
    "text": "passed in to your middleware after the delegate and then i'm going to say if it is not",
    "start": "1911840",
    "end": "1918080"
  },
  {
    "text": "provided i'm going to create a new new of them and basically give it the default options",
    "start": "1918080",
    "end": "1923759"
  },
  {
    "text": "and once that's done i can go and say new request middleware timer options",
    "start": "1924960",
    "end": "1932240"
  },
  {
    "text": "and say format equals something useful actually it needs to",
    "start": "1932240",
    "end": "1937279"
  },
  {
    "text": "look like this ctx elapsed",
    "start": "1937279",
    "end": "1941760"
  },
  {
    "text": "request took elapsed",
    "start": "1945360",
    "end": "1951519"
  },
  {
    "text": "ms and if i run this now",
    "start": "1951519",
    "end": "1955440"
  },
  {
    "text": "it answers as it should and if you go in here and have a look it says request took zero milliseconds so",
    "start": "1960080",
    "end": "1966159"
  },
  {
    "text": "i'm now able to modify the uh the way that i format it i can go in and make",
    "start": "1966159",
    "end": "1971360"
  },
  {
    "text": "different changes since i'm getting the http context i could be logging in a whole bunch of other things as well and adding that to the string if i wanted to",
    "start": "1971360",
    "end": "1977840"
  },
  {
    "text": "and i can make more complicated things but the most important thing is when we're doing our middlewares we",
    "start": "1977840",
    "end": "1982960"
  },
  {
    "text": "should really be doing a middleware class an extension method and an options class",
    "start": "1982960",
    "end": "1989120"
  },
  {
    "text": "it might be that you go i don't need options class just throw it in there it's actually an empty way of passing in",
    "start": "1989120",
    "end": "1994480"
  },
  {
    "text": "an options class it's there and then if you ever need to add something it's actually quite easy to add it instead of having to add the help file",
    "start": "1994480",
    "end": "2001200"
  },
  {
    "text": "does that look cool so we need to keep simple right",
    "start": "2001200",
    "end": "2007120"
  },
  {
    "text": "we cannot build a whole bunch of things using these middlewares easily because as you see i forgot to show you",
    "start": "2007120",
    "end": "2013519"
  },
  {
    "text": "this but there's actually quite a cool feature with this",
    "start": "2013519",
    "end": "2018360"
  },
  {
    "text": "you know this path gives me exactly the same response there is no path handling in here",
    "start": "2023519",
    "end": "2029279"
  },
  {
    "text": "there's no functionality this is the raw version of everything so basically if you need to do anything in here you have",
    "start": "2029279",
    "end": "2036080"
  },
  {
    "text": "to do it manually so if you're going to build a website that returns different files or different responses for different paths",
    "start": "2036080",
    "end": "2042240"
  },
  {
    "text": "then you have to build your own little thing that parses those paths and if that is a big website that is going to",
    "start": "2042240",
    "end": "2048000"
  },
  {
    "text": "be a long switch clause or something else",
    "start": "2048000",
    "end": "2053118"
  },
  {
    "text": "so it's very very simple so we do need and go go and get help we",
    "start": "2053119",
    "end": "2058240"
  },
  {
    "text": "need to get other people to build the stuff that we need right so far we haven't done a whole lot with",
    "start": "2058240",
    "end": "2063280"
  },
  {
    "text": "project katana most people see owen middleware in katana when they do security or authentication",
    "start": "2063280",
    "end": "2069919"
  },
  {
    "text": "because all of your authentication experts at mvc use this project katana and the owing pipeline to plug in all of",
    "start": "2069919",
    "end": "2075760"
  },
  {
    "text": "their oauth stuff but we can do much more but it's basically the same idea if you want to",
    "start": "2075760",
    "end": "2081280"
  },
  {
    "text": "go and do something you can actually actually in katana you can do web api i i tend to host web api inside the om",
    "start": "2081280",
    "end": "2088158"
  },
  {
    "text": "pipeline quite a lot so we get other people to build our stuff",
    "start": "2088159",
    "end": "2093760"
  },
  {
    "text": "and we can go and have coffee and charge the client for that no sorry i didn't say that",
    "start": "2093760",
    "end": "2099760"
  },
  {
    "text": "it makes everything faster no it's it's get other people to do your work it's it's much easier i promise you",
    "start": "2099760",
    "end": "2107040"
  },
  {
    "text": "so either going nougat something or get a slave so what do we do if we want to do",
    "start": "2107040",
    "end": "2112320"
  },
  {
    "text": "something more complicated well we go and find whatever person that has built this awesome tool",
    "start": "2112320",
    "end": "2117440"
  },
  {
    "text": "that we want to use and obviously when we come to asp.net core we can finally use mvc inside the",
    "start": "2117440",
    "end": "2123200"
  },
  {
    "text": "pipeline so mvc is to opt the",
    "start": "2123200",
    "end": "2129040"
  },
  {
    "text": "yeah whatever sometimes my english fails me badly",
    "start": "2129040",
    "end": "2135359"
  },
  {
    "text": "um yeah nbc is the one that i'm going to be using i was supposed to say something",
    "start": "2135359",
    "end": "2141040"
  },
  {
    "text": "else but yeah so i go out to project jason i pull out microsoft",
    "start": "2141040",
    "end": "2146480"
  },
  {
    "text": "microsoft i don't know why that is lowercase if anybody at microsoft listens can you make that uppercase",
    "start": "2146480",
    "end": "2151599"
  },
  {
    "text": "first letter thank you they're recording it that's why i'm saying i hope that somebody watches it so i'm going here a split",
    "start": "2151599",
    "end": "2158320"
  },
  {
    "text": "core nvc one zero like that",
    "start": "2158320",
    "end": "2163760"
  },
  {
    "text": "not very impressive but it means that we can go in here and we can say app oh",
    "start": "2163760",
    "end": "2169920"
  },
  {
    "text": "that that thing shouldn't be uppercase app.usenvc with default route",
    "start": "2169920",
    "end": "2175920"
  },
  {
    "text": "if we don't do default route we have to go in and do our rot configuration manually with this thing we just get the",
    "start": "2175920",
    "end": "2181280"
  },
  {
    "text": "default one that everybody knows and mvc actually needs a bunch of services so they've been nice enough to",
    "start": "2181280",
    "end": "2187440"
  },
  {
    "text": "create an extension method to i-service collection that is called add mvc",
    "start": "2187440",
    "end": "2192640"
  },
  {
    "text": "and there there it will add all of the services with the default config and then you can go in and pass in an",
    "start": "2192640",
    "end": "2197920"
  },
  {
    "text": "options class if you want to change the configuration with mvc in my pipeline i can now go and",
    "start": "2197920",
    "end": "2203520"
  },
  {
    "text": "do the stuff that we always do we go and go folder controllers",
    "start": "2203520",
    "end": "2208880"
  },
  {
    "text": "go and say add new item i want to have something asp.net",
    "start": "2208880",
    "end": "2215280"
  },
  {
    "text": "let's do an mvc controller called home let's clean it up because there's no",
    "start": "2215280",
    "end": "2220400"
  },
  {
    "text": "reason to keep that there is it's beautiful right not going to make any changes to it it's a clean",
    "start": "2220400",
    "end": "2226720"
  },
  {
    "text": "controller what next else do we need we need a view folder so add new folder",
    "start": "2226720",
    "end": "2233200"
  },
  {
    "text": "view [Music] we need to add another folder in here",
    "start": "2233200",
    "end": "2238320"
  },
  {
    "text": "add folder home and then you can see here we're going to say add",
    "start": "2238320",
    "end": "2244480"
  },
  {
    "text": "new item and we see layout page i'm going to call it index",
    "start": "2244480",
    "end": "2249760"
  },
  {
    "text": "i'm going to take this and i'm going to say h1 and i'm going to say hello ndc",
    "start": "2249760",
    "end": "2254960"
  },
  {
    "text": "from mbc there it is around this",
    "start": "2254960",
    "end": "2262079"
  },
  {
    "text": "kind of sucks that this has already been shown like 90 000 times by damien edwards and david fowler and nobody is",
    "start": "2264720",
    "end": "2271440"
  },
  {
    "text": "impressed that in about five seconds my application will do an mvc application in the console app which is",
    "start": "2271440",
    "end": "2278160"
  },
  {
    "text": "really really cool but they've destroyed it already but it works right so what we do is we",
    "start": "2278160",
    "end": "2284800"
  },
  {
    "text": "go ahead and we get our middlewares from other people we let people like damien and david go and build our stuff and",
    "start": "2284800",
    "end": "2291920"
  },
  {
    "text": "then we piggyback on it that's the way we should be doing things one thing to keep in mind which is a little bit different here than it was",
    "start": "2291920",
    "end": "2298079"
  },
  {
    "text": "with project katana if i go in like this and press enter i end up back at hello",
    "start": "2298079",
    "end": "2304079"
  },
  {
    "text": "ndc because mvc we come into our pipeline it's actually quite easy to have a look at this",
    "start": "2304079",
    "end": "2309680"
  },
  {
    "text": "let's just kill that we come into our pipeline request comes in it adds the exception page it goes to",
    "start": "2309680",
    "end": "2315599"
  },
  {
    "text": "request time or request time oh that's kind of cool i didn't show you that but the request timer actually works still even though i'm all of a sudden doing",
    "start": "2315599",
    "end": "2320960"
  },
  {
    "text": "mvc stuff this thing still times everything so when when david goes up and says that",
    "start": "2320960",
    "end": "2326079"
  },
  {
    "text": "nbc is real as.net core is really really fast we cannot prove that he's hopefully right",
    "start": "2326079",
    "end": "2331839"
  },
  {
    "text": "then it goes through the the timer it goes through mvc mvc will then look at it and go that path is not something",
    "start": "2331839",
    "end": "2338560"
  },
  {
    "text": "that i recognize it's not part of the path that i would expect so it passes it on to the next one",
    "start": "2338560",
    "end": "2344640"
  },
  {
    "text": "uh in if you were doing project katana you could combine owen with mvc but what",
    "start": "2344640",
    "end": "2349760"
  },
  {
    "text": "would happen is you would have your owen pipeline and if there was nothing that responded in the om pipeline you would",
    "start": "2349760",
    "end": "2354960"
  },
  {
    "text": "actually fall out of the pipeline and hit iis is would then handle the request and do",
    "start": "2354960",
    "end": "2360480"
  },
  {
    "text": "the mvc stuff and then it would pass it back but that also meant that if mvc didn't find anything that at that path",
    "start": "2360480",
    "end": "2367680"
  },
  {
    "text": "it would return a 404. in this case if it doesn't find anything it just lets it follow through to the",
    "start": "2367680",
    "end": "2373440"
  },
  {
    "text": "rest of the pipeline okay so",
    "start": "2373440",
    "end": "2379520"
  },
  {
    "text": "this is pretty awesome right it is very very simple very very low level it is very raw and awesome to work",
    "start": "2379520",
    "end": "2386640"
  },
  {
    "text": "with it's it's fast it's easy to throw things it throws things in there you do things",
    "start": "2386640",
    "end": "2392000"
  },
  {
    "text": "like oh i just want to see what this is you do a little in-line thing you run it you can debug it it's very very easy and",
    "start": "2392000",
    "end": "2397359"
  },
  {
    "text": "then if you want to go bigger you add more you can also fork the pipeline so instead of doing use or run there's a",
    "start": "2397359",
    "end": "2403760"
  },
  {
    "text": "map and map when method and basically you can say when somebody comes in to this pipeline",
    "start": "2403760",
    "end": "2408960"
  },
  {
    "text": "and the url is this i want to have this configuration of the pipeline and these middlewares and",
    "start": "2408960",
    "end": "2414960"
  },
  {
    "text": "otherwise use these which is really cool because it actually opens up a scenario that i've been doing",
    "start": "2414960",
    "end": "2420880"
  },
  {
    "text": "a few times and people look at me weirdly when i do i do different authentication methods",
    "start": "2420880",
    "end": "2426160"
  },
  {
    "text": "so i have an application where we split the application into three different pipelines one pipeline will run an",
    "start": "2426160",
    "end": "2433839"
  },
  {
    "text": "mvc website that uses login i think they're doing social logins through through facebook",
    "start": "2433839",
    "end": "2441839"
  },
  {
    "text": "so they will use cookie authentication then i have another part of the website that starts with slash api which is for",
    "start": "2441839",
    "end": "2448160"
  },
  {
    "text": "a web api and that thing will not use cookies it will only use access tokens so it will use better",
    "start": "2448160",
    "end": "2454800"
  },
  {
    "text": "tokens and then i have another partner website that goes to slash and it's an admin part of the section thing that couldn't",
    "start": "2454800",
    "end": "2461359"
  },
  {
    "text": "use social logins but uses their internal logins instead so they have a different login there but they're still",
    "start": "2461359",
    "end": "2467599"
  },
  {
    "text": "using cookie authentication but the cookie authentication there is different from the cookie authentication i'm using in the other part of the site",
    "start": "2467599",
    "end": "2475839"
  },
  {
    "text": "there's a stupid guy on stage saying that i should have a bunch of different no i didn't say that but it opens up a",
    "start": "2475839",
    "end": "2480960"
  },
  {
    "text": "bunch of flexibility that you can do different things it also means there's a map when where",
    "start": "2480960",
    "end": "2486240"
  },
  {
    "text": "you can do your own predicates and you can have a little function that actually evals whether or not to use this other",
    "start": "2486240",
    "end": "2491520"
  },
  {
    "text": "pipeline so it doesn't only have to be a url you can actually go in and say if this user happens to be deluxe or some",
    "start": "2491520",
    "end": "2497760"
  },
  {
    "text": "fantastic user that has paid you a trillion dollars he gets a different pipeline",
    "start": "2497760",
    "end": "2502800"
  },
  {
    "text": "i don't know why that would be useful but it's kind of it could be um but yeah i think it's pretty cool",
    "start": "2502800",
    "end": "2510000"
  },
  {
    "text": "but what about old stuff what if i come now into asp.net decor",
    "start": "2510000",
    "end": "2516000"
  },
  {
    "text": "and i look at this and i go oh i have this awesome middleware i wrote a year ago in project katana can i plug this in",
    "start": "2516000",
    "end": "2521680"
  },
  {
    "text": "here yeah it's the answer to that",
    "start": "2521680",
    "end": "2527839"
  },
  {
    "text": "it's not a good answer it's not swedish it's not even close yes you can but you can't plug it in as",
    "start": "2527839",
    "end": "2534079"
  },
  {
    "text": "a middleware you can't throw it into this middleware pipeline and say here is another middleware because your old middleware",
    "start": "2534079",
    "end": "2540480"
  },
  {
    "text": "will expect an i dictionary and this thing will give it an http context so you're going to go ahead and go and you",
    "start": "2540480",
    "end": "2546079"
  },
  {
    "text": "you suck and it's going to start the pipeline so what you need to do is you need to have a different way of doing owen",
    "start": "2546079",
    "end": "2553599"
  },
  {
    "text": "owen middlewares from project katana or other owen stuff and the way to do that i actually i i",
    "start": "2553599",
    "end": "2559040"
  },
  {
    "text": "just happen to have a project with a middleware in it so i'm just going to go add",
    "start": "2559040",
    "end": "2565200"
  },
  {
    "text": "existing project it's going to put me in here there's a simple",
    "start": "2565200",
    "end": "2571280"
  },
  {
    "text": "owen based project katana based middleware owen own way of doing things",
    "start": "2571280",
    "end": "2576880"
  },
  {
    "text": "i can take that but i can't plug that in because that middleware as i said is different so",
    "start": "2576880",
    "end": "2582160"
  },
  {
    "text": "what we need to do is we need to go in here and say project.json",
    "start": "2582160",
    "end": "2589079"
  },
  {
    "text": "and do microsoft with the capital k a capital m uh asp.net core",
    "start": "2589119",
    "end": "2594960"
  },
  {
    "text": "owen 100 100. having that in there means that i can",
    "start": "2594960",
    "end": "2601359"
  },
  {
    "text": "then go back in and say somewhere in here let's actually do it here because the the middleware i want to plug in is",
    "start": "2601359",
    "end": "2606960"
  },
  {
    "text": "an exception handler delegate so i actually want to i'm going to remove that thing because that is way too fancy for me",
    "start": "2606960",
    "end": "2612640"
  },
  {
    "text": "app.use owen it gives me a pipeline",
    "start": "2612640",
    "end": "2619319"
  },
  {
    "text": "that pipeline is awesomely enough an action of funk or funk of i dictionary",
    "start": "2622160",
    "end": "2628400"
  },
  {
    "text": "thread i'm not even going if you look at the length of the signature of that thing just ignore it it's this function",
    "start": "2628400",
    "end": "2635359"
  },
  {
    "text": "so if you go pipeline like that it gives you a whole new set of weird things",
    "start": "2635359",
    "end": "2641280"
  },
  {
    "text": "what you're getting here is kind of that mid-funk version but the mid funk expects sort of like",
    "start": "2641280",
    "end": "2647520"
  },
  {
    "text": "inline function it doesn't expect classes like we do our middlewares so what we do is we say next",
    "start": "2647520",
    "end": "2652880"
  },
  {
    "text": "with the fat arrow and then we say new and the name of my that my",
    "start": "2652880",
    "end": "2658319"
  },
  {
    "text": "middleware was something awesome debug error handler middleware so new debug",
    "start": "2658319",
    "end": "2664800"
  },
  {
    "text": "error debug error",
    "start": "2664800",
    "end": "2670000"
  },
  {
    "text": "yeah if i normally",
    "start": "2671359",
    "end": "2676680"
  },
  {
    "text": "oh yeah in core that's not handled for me by resharper",
    "start": "2677920",
    "end": "2683680"
  },
  {
    "text": "properly so that's the one",
    "start": "2683680",
    "end": "2687200"
  },
  {
    "text": "there it is so i create one of those and that one expects a reference to the next thing which is going to be next",
    "start": "2688800",
    "end": "2695359"
  },
  {
    "text": "and then it i return the invoke method does that make sense",
    "start": "2695359",
    "end": "2702400"
  },
  {
    "text": "you guys are way smarter than i am um okay so once i've got that i need to throw an exception somewhere to get this",
    "start": "2702400",
    "end": "2708480"
  },
  {
    "text": "to work so i'm gonna go down here and say throw new exception because that's one cool thing if you",
    "start": "2708480",
    "end": "2714640"
  },
  {
    "text": "throw exceptions without some form of exception handling middleware the pipeline just swallows it it doesn't",
    "start": "2714640",
    "end": "2721760"
  },
  {
    "text": "break your debugger it doesn't give you any info well it does give you logging but it just swallows it and doesn't",
    "start": "2721760",
    "end": "2728880"
  },
  {
    "text": "break visual studio or anything like that and go into debugging it just goes and it just gives you 500 back",
    "start": "2728880",
    "end": "2735680"
  },
  {
    "text": "so i'm going to throw a new exception i'm going to add something i'm going to say it's glenn's fault",
    "start": "2735680",
    "end": "2742079"
  },
  {
    "text": "if anybody wants to know who glenn is his name glenn condren his pm on dot net core team",
    "start": "2742079",
    "end": "2748160"
  },
  {
    "text": "it's his fault everything is his fault we start that",
    "start": "2748160",
    "end": "2752559"
  },
  {
    "text": "and this might work it might not work because it's been slightly flaky on me i hope this works now",
    "start": "2754480",
    "end": "2761839"
  },
  {
    "text": "okay didn't break because i'm now in nbc right so i'm throwing after nvsa so let's go and break something here",
    "start": "2765040",
    "end": "2771440"
  },
  {
    "text": "hope didn't work need to force this thing to recompile properly",
    "start": "2771440",
    "end": "2778800"
  },
  {
    "text": "let's see if i can get it work now i figured out that it's actually a yeah",
    "start": "2778800",
    "end": "2784319"
  },
  {
    "text": "it's a compile issue it doesn't get updated code for some reason doesn't recompile properly so i've got this error handler thing now",
    "start": "2784319",
    "end": "2790800"
  },
  {
    "text": "that will now give me it will tell me that something went wrong and it's going to tell me this glance fault it's going to give me a stack trace and it's also",
    "start": "2790800",
    "end": "2797119"
  },
  {
    "text": "going to give me a link to a stack overflow with the error message if i",
    "start": "2797119",
    "end": "2802400"
  },
  {
    "text": "click this i'm pretty sure stack overflow won't tell me why it's er gland's fault but it should",
    "start": "2802400",
    "end": "2809040"
  },
  {
    "text": "so that's kind of cool right easy to plug in old owen stuff as well",
    "start": "2809040",
    "end": "2814800"
  },
  {
    "text": "so i'm yes",
    "start": "2815040",
    "end": "2818640"
  },
  {
    "text": "that's the thing mvc will say i can't handle it go to the next guy",
    "start": "2825680",
    "end": "2831839"
  },
  {
    "text": "anything that mvc doesn't have a response for will just go on through the pipeline so you won't get 404s you could probably",
    "start": "2832800",
    "end": "2839599"
  },
  {
    "text": "configure it or you actually if you if you don't have anything after mvc",
    "start": "2839599",
    "end": "2845280"
  },
  {
    "text": "they i think the pipeline will actually go 404 because there's nothing answering it",
    "start": "2845280",
    "end": "2850480"
  },
  {
    "text": "so this was kind of the end of things but i have some extra stuff that i want to",
    "start": "2850960",
    "end": "2857040"
  },
  {
    "text": "show i'm going to go completely freak out and show you weird things and give you some ideas of things you can do with om pipeline",
    "start": "2857040",
    "end": "2863839"
  },
  {
    "text": "one question one comment i get is that the whole how do you do error handling i'm using that om pipeline my my debug",
    "start": "2863839",
    "end": "2871359"
  },
  {
    "text": "error handler blah blah blah if you don't want to go this big and have your own middleware and everything",
    "start": "2871359",
    "end": "2876480"
  },
  {
    "text": "and just want to do it for debugging purposes for some reason you can actually go it's actually quite easy this is kind of a cool way this is",
    "start": "2876480",
    "end": "2882800"
  },
  {
    "text": "something that's easy to throw in for dev you go app.use ctx",
    "start": "2882800",
    "end": "2888160"
  },
  {
    "text": "oh a sync ctx",
    "start": "2888160",
    "end": "2893520"
  },
  {
    "text": "next do a one of those then you do it try since this is all",
    "start": "2893520",
    "end": "2900240"
  },
  {
    "text": "code right we can put try catching here so we can just do await next",
    "start": "2900240",
    "end": "2907119"
  },
  {
    "text": "and then if that blows up i can go and say console.",
    "start": "2907839",
    "end": "2912960"
  },
  {
    "text": "right line error or that's that's gonna be easy to find",
    "start": "2912960",
    "end": "2919119"
  },
  {
    "text": "an output right h5 that",
    "start": "2919119",
    "end": "2924759"
  },
  {
    "text": "go to some weird location it goes there right so since the pipeline as i said is just",
    "start": "2928319",
    "end": "2934720"
  },
  {
    "text": "a matter of code and methods calling methods we can add try catch stuff anywhere in",
    "start": "2934720",
    "end": "2941040"
  },
  {
    "text": "it because since it's russian doll and not like a linked list it basically it means that i'm pushing things in and",
    "start": "2941040",
    "end": "2947040"
  },
  {
    "text": "when something breaks it bubbles up and i can handle it wherever i want and then here i can say try catch if it blows up",
    "start": "2947040",
    "end": "2952880"
  },
  {
    "text": "change it to a 500 and here is my awesome content for my 500 error page or",
    "start": "2952880",
    "end": "2957920"
  },
  {
    "text": "i can create a redirect or something creating redirect however is a bit of a pain",
    "start": "2957920",
    "end": "2963599"
  },
  {
    "text": "because as long as the exception is thrown this is bad this was my last piece of paper and it doesn't include words let's",
    "start": "2963599",
    "end": "2969760"
  },
  {
    "text": "show you now this is going to be interesting um yeah it will be fine i think i can use that one um",
    "start": "2969760",
    "end": "2977200"
  },
  {
    "text": "how's doing something about it bubbling up yeah reader x thanks sorry i'm i'm",
    "start": "2978319",
    "end": "2984079"
  },
  {
    "text": "losing myself reader x is a pain in the butt because as long as your your exception is thrown before anything is",
    "start": "2984079",
    "end": "2990400"
  },
  {
    "text": "written to the pipeline which i do here everything is fine in my exception and error handling middleware i can change",
    "start": "2990400",
    "end": "2996079"
  },
  {
    "text": "it to redirect and change the headers and all of that but if the exception is thrown after the response or during the",
    "start": "2996079",
    "end": "3002480"
  },
  {
    "text": "response as soon as somebody has written something to the pipeline i'm actually written to the response i am too late",
    "start": "3002480",
    "end": "3008720"
  },
  {
    "text": "because it has already sent all of it so it has already sent a to http 200 and probably partial response and then it",
    "start": "3008720",
    "end": "3015680"
  },
  {
    "text": "blows up and i'm sitting there going you just sent an http 200 and half of your content and now you're coming telling me",
    "start": "3015680",
    "end": "3021760"
  },
  {
    "text": "that you made something wrong douchebag so we need to sort that out and there are a couple of ways of doing it this is",
    "start": "3021760",
    "end": "3028319"
  },
  {
    "text": "done internally you can actually buffer the response which is a neat way of doing it so if we take this thing",
    "start": "3028319",
    "end": "3035119"
  },
  {
    "text": "and we can buffer the response let's try and do it here let's do var ms equals new memory",
    "start": "3035119",
    "end": "3043760"
  },
  {
    "text": "memory stupid that's it doesn't get better",
    "start": "3043760",
    "end": "3051519"
  },
  {
    "text": "sounding like you you've got something wrong in your head that apparently doesn't make your spelling better var response",
    "start": "3051839",
    "end": "3059280"
  },
  {
    "text": "equals ctx dot response dot body",
    "start": "3059280",
    "end": "3064480"
  },
  {
    "text": "ctx dot response dot body equals ms",
    "start": "3064480",
    "end": "3069839"
  },
  {
    "text": "see what i've done then i actually create a another stream and add that to the body so whenever",
    "start": "3069839",
    "end": "3075599"
  },
  {
    "text": "anybody in a middleware after this starts writing to the stream they're actually writing to the memory stream and not to the actual server stream so",
    "start": "3075599",
    "end": "3083040"
  },
  {
    "text": "nothing is going to get re get written and then i can go down here and what i do here is i say",
    "start": "3083040",
    "end": "3088559"
  },
  {
    "text": "something brilliant like i had code for this to remember what i'm supposed to do",
    "start": "3088559",
    "end": "3093839"
  },
  {
    "text": "let's do ms let's see if this works",
    "start": "3093839",
    "end": "3099279"
  },
  {
    "text": "ctx dot response dot body equals response",
    "start": "3099520",
    "end": "3105599"
  },
  {
    "text": "and then do ms dot copy to async",
    "start": "3105599",
    "end": "3110800"
  },
  {
    "text": "response and await that thing so that means that basically if if",
    "start": "3110800",
    "end": "3116800"
  },
  {
    "text": "everything goes fine i'm going to copy everything from",
    "start": "3116800",
    "end": "3121960"
  },
  {
    "text": "there it is that's the one that i miss zero comma and there so i basically i take the memory stream that they've written",
    "start": "3124400",
    "end": "3130640"
  },
  {
    "text": "to i run that back to the beginning and then i take all of the information in that memory stream and i pass it to the",
    "start": "3130640",
    "end": "3136319"
  },
  {
    "text": "the real response and that gets rendered but if something goes wrong i can go in here and say",
    "start": "3136319",
    "end": "3142880"
  },
  {
    "text": "nah actually let's put it back the body back properly",
    "start": "3142880",
    "end": "3148160"
  },
  {
    "text": "like that but then let's do ctx dot response dot write async make that a",
    "start": "3148160",
    "end": "3154000"
  },
  {
    "text": "wait you caused an error",
    "start": "3154000",
    "end": "3159599"
  },
  {
    "text": "stop ruining my website",
    "start": "3159599",
    "end": "3164880"
  },
  {
    "text": "and then return make sense",
    "start": "3164880",
    "end": "3170079"
  },
  {
    "text": "run this",
    "start": "3170400",
    "end": "3173640"
  },
  {
    "text": "that works and that now buffers it so even if i yes",
    "start": "3182480",
    "end": "3189440"
  },
  {
    "text": "oh yeah this is this is crap from a memory point of view yeah i i i was going to come to",
    "start": "3189599",
    "end": "3195440"
  },
  {
    "text": "that i was going to say that there are there are issues with this and i wouldn't recommend doing it all the time um yes there are",
    "start": "3195440",
    "end": "3202480"
  },
  {
    "text": "four sort of kind of ish obvious reasons there are memory issues with this",
    "start": "3202480",
    "end": "3209119"
  },
  {
    "text": "because one when you write to the response stream that you get from the server it's actually not being buffered",
    "start": "3209119",
    "end": "3214480"
  },
  {
    "text": "it goes straight through clients it doesn't stick in memory this thing is going to make that every single request",
    "start": "3214480",
    "end": "3219599"
  },
  {
    "text": "to your web application will be stored in memory as a string buffer before it's",
    "start": "3219599",
    "end": "3225839"
  },
  {
    "text": "being sent out and it gets even worse if you do it like this because the memory stream without actually being initialized with a",
    "start": "3225839",
    "end": "3231040"
  },
  {
    "text": "specific size will do a whole bunch of weird things to resize it and everything once it grows beyond the existing size",
    "start": "3231040",
    "end": "3237119"
  },
  {
    "text": "and things like that so there are there are definitely this is a demo right you need to do it better than this you need",
    "start": "3237119",
    "end": "3243280"
  },
  {
    "text": "to show me show me up and go i know that sucks i'm going to do this better and prove me wrong but yes there are many",
    "start": "3243280",
    "end": "3248559"
  },
  {
    "text": "problems but it also gives me the ability to do something really cool which i've done a few times i can take",
    "start": "3248559",
    "end": "3254160"
  },
  {
    "text": "this code i'm going to make a few tweaks to it i'm going to do that but i'm going to cut",
    "start": "3254160",
    "end": "3260559"
  },
  {
    "text": "that out there not do that and then i'm gonna turn that back i'm",
    "start": "3260559",
    "end": "3267440"
  },
  {
    "text": "gonna blah blah blah blah i'm gonna do that and then i'm gonna let's see here i have code for this i should know this",
    "start": "3267440",
    "end": "3274640"
  },
  {
    "text": "var actually let's do it no let's do it like this",
    "start": "3274640",
    "end": "3279839"
  },
  {
    "text": "var response equals response",
    "start": "3280079",
    "end": "3285599"
  },
  {
    "text": "text equals and coding dot u t",
    "start": "3285599",
    "end": "3291319"
  },
  {
    "text": "utf8 dot get string from",
    "start": "3291319",
    "end": "3296400"
  },
  {
    "text": "ms.2 array like that response text equals response",
    "start": "3296400",
    "end": "3304000"
  },
  {
    "text": "text dot replace replace hello i'm in australia so i've",
    "start": "3304000",
    "end": "3311119"
  },
  {
    "text": "heard that it's all great down here right and then you go and take that and you say await",
    "start": "3311119",
    "end": "3317520"
  },
  {
    "text": "ctx dot response dot write async response",
    "start": "3317520",
    "end": "3323200"
  },
  {
    "text": "text run your application",
    "start": "3323200",
    "end": "3329240"
  },
  {
    "text": "that is not what you want to see but that's temporary until it boots up properly",
    "start": "3334559",
    "end": "3340078"
  },
  {
    "text": "it works um you can go in and buffer everything that goes out and make changes to it not not recommended for something really",
    "start": "3340960",
    "end": "3347359"
  },
  {
    "text": "big or really complicated and there are memory issues with it and there's another problem with this is that there's actually another request coming",
    "start": "3347359",
    "end": "3353680"
  },
  {
    "text": "in here going to favicon.ico that's not a problem right now but",
    "start": "3353680",
    "end": "3358960"
  },
  {
    "text": "if i was serving up images and stuff like that as well and i tried to read that as a utf stream and then go in and",
    "start": "3358960",
    "end": "3364319"
  },
  {
    "text": "replace stuff with it that would be bad so you don't want to do that",
    "start": "3364319",
    "end": "3369599"
  },
  {
    "text": "and also one one thing to note is if you're serving up static files that",
    "start": "3369599",
    "end": "3375200"
  },
  {
    "text": "is not handled by the pipeline to begin with so if you want to serve up static files you need to get another middleware",
    "start": "3375200",
    "end": "3381599"
  },
  {
    "text": "called static files and go app.use static files and then it will serve static files out of the dub",
    "start": "3381599",
    "end": "3388480"
  },
  {
    "text": "dub dub root folder of your project if you want to change it you can actually tell it to serve up the files",
    "start": "3388480",
    "end": "3395680"
  },
  {
    "text": "from some completely different place like a network drive or something like that and you can also tell it what urls",
    "start": "3395680",
    "end": "3401599"
  },
  {
    "text": "to respond to and things like that so",
    "start": "3401599",
    "end": "3406799"
  },
  {
    "text": "i've used all the memes i could find kind of sorry about that hope we can still be friends i'm not a",
    "start": "3407359",
    "end": "3414160"
  },
  {
    "text": "big meme person normally but i needed something my presentation was quite boring otherwise",
    "start": "3414160",
    "end": "3420240"
  },
  {
    "text": "so i just want to thank everyone for coming it's been awesome presenting i hope you got something out of it that",
    "start": "3420559",
    "end": "3425839"
  },
  {
    "text": "you can use if you're more interested in more information about owen you can obviously",
    "start": "3425839",
    "end": "3431520"
  },
  {
    "text": "go to this url here and you can watch my course on pluralsight on owen and get lots more information and give",
    "start": "3431520",
    "end": "3438799"
  },
  {
    "text": "me money which is good you always want to give me money it's a good thing and if you don't you're not a member of",
    "start": "3438799",
    "end": "3444559"
  },
  {
    "text": "pluralsight they might have those trial cards i understand if not hit me up i'll",
    "start": "3444559",
    "end": "3450880"
  },
  {
    "text": "get you one i've got one in my bag or a couple of my bags so you can have a look at my course you only get a free trial",
    "start": "3450880",
    "end": "3455920"
  },
  {
    "text": "pass if you watch my course at least four times thank you everyone it's been awesome",
    "start": "3455920",
    "end": "3463640"
  }
]