[
  {
    "text": "uh hi everyone my name is lars jacobson",
    "start": "320",
    "end": "3520"
  },
  {
    "text": "and i work at novelnet",
    "start": "3520",
    "end": "5200"
  },
  {
    "text": "today i'm going to talk about the load",
    "start": "5200",
    "end": "6799"
  },
  {
    "text": "testing tool k6",
    "start": "6799",
    "end": "8559"
  },
  {
    "text": "and how you can make your azure devops",
    "start": "8559",
    "end": "10559"
  },
  {
    "text": "pipeline break if your api performance",
    "start": "10559",
    "end": "12880"
  },
  {
    "text": "isn't good enough so let's get started",
    "start": "12880",
    "end": "16400"
  },
  {
    "text": "k6 is a load testing tool created for",
    "start": "16400",
    "end": "18640"
  },
  {
    "text": "engineering teams",
    "start": "18640",
    "end": "20080"
  },
  {
    "text": "meaning that k6 focuses on making their",
    "start": "20080",
    "end": "22560"
  },
  {
    "text": "developer tool",
    "start": "22560",
    "end": "24080"
  },
  {
    "text": "their tool a developer friendly the",
    "start": "24080",
    "end": "26400"
  },
  {
    "text": "tests are written in javascript",
    "start": "26400",
    "end": "28080"
  },
  {
    "text": "and you run them by using the command",
    "start": "28080",
    "end": "30160"
  },
  {
    "text": "line of your choice",
    "start": "30160",
    "end": "31920"
  },
  {
    "text": "this enables you to run the test",
    "start": "31920",
    "end": "33360"
  },
  {
    "text": "practically anywhere",
    "start": "33360",
    "end": "35440"
  },
  {
    "text": "i've listed how you install k6 on a few",
    "start": "35440",
    "end": "38399"
  },
  {
    "text": "different",
    "start": "38399",
    "end": "39200"
  },
  {
    "text": "systems k6 is free",
    "start": "39200",
    "end": "43120"
  },
  {
    "text": "and open source so that's great and",
    "start": "43120",
    "end": "45440"
  },
  {
    "text": "getting started is very very easy",
    "start": "45440",
    "end": "48079"
  },
  {
    "text": "you can start by running tests from your",
    "start": "48079",
    "end": "50079"
  },
  {
    "text": "own machine or",
    "start": "50079",
    "end": "51360"
  },
  {
    "text": "from multiple developer machines just to",
    "start": "51360",
    "end": "53680"
  },
  {
    "text": "check how your apis are performing",
    "start": "53680",
    "end": "56719"
  },
  {
    "text": "later you can set up automated testing",
    "start": "56719",
    "end": "59520"
  },
  {
    "text": "triggered by your continuous integration",
    "start": "59520",
    "end": "61199"
  },
  {
    "text": "pipelines with more advanced features",
    "start": "61199",
    "end": "64239"
  },
  {
    "text": "being able to run tests from command",
    "start": "64239",
    "end": "66560"
  },
  {
    "text": "line makes it really easy to integrate",
    "start": "66560",
    "end": "68479"
  },
  {
    "text": "in almost",
    "start": "68479",
    "end": "69119"
  },
  {
    "text": "any continuous integration system so",
    "start": "69119",
    "end": "72159"
  },
  {
    "text": "that's good",
    "start": "72159",
    "end": "73760"
  },
  {
    "text": "so that's a very short intro to k6",
    "start": "73760",
    "end": "76880"
  },
  {
    "text": "now let's see if we can write some k6",
    "start": "76880",
    "end": "79119"
  },
  {
    "text": "tests",
    "start": "79119",
    "end": "80799"
  },
  {
    "text": "just need to find",
    "start": "80799",
    "end": "86159"
  },
  {
    "text": "yeah there you go this is a very very",
    "start": "86159",
    "end": "89280"
  },
  {
    "text": "simple",
    "start": "89280",
    "end": "89840"
  },
  {
    "text": "k6 tests so i install a k6 according to",
    "start": "89840",
    "end": "93920"
  },
  {
    "text": "the install guide",
    "start": "93920",
    "end": "95119"
  },
  {
    "text": "so these k6 modules are available to me",
    "start": "95119",
    "end": "98079"
  },
  {
    "text": "then i run a simple http get",
    "start": "98079",
    "end": "100240"
  },
  {
    "text": "on a api endpoint the endpoint",
    "start": "100240",
    "end": "103520"
  },
  {
    "text": "just to return some data and i have a",
    "start": "103520",
    "end": "106960"
  },
  {
    "text": "one second thread sleep inside api just",
    "start": "106960",
    "end": "109680"
  },
  {
    "text": "to",
    "start": "109680",
    "end": "110000"
  },
  {
    "text": "emulate some kind of slow api",
    "start": "110000",
    "end": "113280"
  },
  {
    "text": "then we need to run the tests by using",
    "start": "113280",
    "end": "115119"
  },
  {
    "text": "the command line tool",
    "start": "115119",
    "end": "117280"
  },
  {
    "text": "so let's do that",
    "start": "117280",
    "end": "118280"
  },
  {
    "text": "[Music]",
    "start": "118280",
    "end": "121379"
  },
  {
    "text": "so i go to command line and i run k6",
    "start": "121680",
    "end": "125200"
  },
  {
    "text": "run and the javascript file that i've",
    "start": "125200",
    "end": "127680"
  },
  {
    "text": "just shown you",
    "start": "127680",
    "end": "129280"
  },
  {
    "text": "the test seems pretty trivial but uh",
    "start": "129280",
    "end": "132000"
  },
  {
    "text": "running it",
    "start": "132000",
    "end": "132560"
  },
  {
    "text": "actually gives you a lot of data you can",
    "start": "132560",
    "end": "134959"
  },
  {
    "text": "see the amount of data that has been",
    "start": "134959",
    "end": "136879"
  },
  {
    "text": "sent you can see how long it takes to",
    "start": "136879",
    "end": "138720"
  },
  {
    "text": "like",
    "start": "138720",
    "end": "139280"
  },
  {
    "text": "connect and handshake and all that but",
    "start": "139280",
    "end": "142080"
  },
  {
    "text": "the",
    "start": "142080",
    "end": "142640"
  },
  {
    "text": "most interesting one is probably the",
    "start": "142640",
    "end": "144480"
  },
  {
    "text": "duration so you can see here that it",
    "start": "144480",
    "end": "146640"
  },
  {
    "text": "takes one second",
    "start": "146640",
    "end": "147599"
  },
  {
    "text": "and that's the thread sleep inside api",
    "start": "147599",
    "end": "149760"
  },
  {
    "text": "and it has some overhead",
    "start": "149760",
    "end": "152239"
  },
  {
    "text": "this test just runs one iteration and",
    "start": "152239",
    "end": "154480"
  },
  {
    "text": "one request",
    "start": "154480",
    "end": "155440"
  },
  {
    "text": "so it's not a lot of interesting data",
    "start": "155440",
    "end": "158959"
  },
  {
    "text": "for each of these data points you get",
    "start": "158959",
    "end": "160560"
  },
  {
    "text": "the average the minimum",
    "start": "160560",
    "end": "162080"
  },
  {
    "text": "medium maximum at the 90s percentile and",
    "start": "162080",
    "end": "164959"
  },
  {
    "text": "the 95th percentile",
    "start": "164959",
    "end": "166720"
  },
  {
    "text": "so you get a lot of data but right now",
    "start": "166720",
    "end": "169200"
  },
  {
    "text": "it's not that interesting",
    "start": "169200",
    "end": "170959"
  },
  {
    "text": "so let's make it a little more",
    "start": "170959",
    "end": "172319"
  },
  {
    "text": "interesting",
    "start": "172319",
    "end": "174879"
  },
  {
    "text": "in this test i've added some views and a",
    "start": "175680",
    "end": "178720"
  },
  {
    "text": "duration",
    "start": "178720",
    "end": "180159"
  },
  {
    "text": "views are virtual users so for this test",
    "start": "180159",
    "end": "183200"
  },
  {
    "text": "i set up five virtual users",
    "start": "183200",
    "end": "185040"
  },
  {
    "text": "that will be calling the api at the same",
    "start": "185040",
    "end": "187120"
  },
  {
    "text": "time",
    "start": "187120",
    "end": "188239"
  },
  {
    "text": "i've also set them up to keep calling",
    "start": "188239",
    "end": "190800"
  },
  {
    "text": "the api",
    "start": "190800",
    "end": "191599"
  },
  {
    "text": "for a duration of 10 seconds as you can",
    "start": "191599",
    "end": "193920"
  },
  {
    "text": "see here",
    "start": "193920",
    "end": "194360"
  },
  {
    "text": "[Music]",
    "start": "194360",
    "end": "195760"
  },
  {
    "text": "to avoid the virtual users just looping",
    "start": "195760",
    "end": "198319"
  },
  {
    "text": "and continuously",
    "start": "198319",
    "end": "199280"
  },
  {
    "text": "running the tests i put in a threads or",
    "start": "199280",
    "end": "201519"
  },
  {
    "text": "a sleep function",
    "start": "201519",
    "end": "203040"
  },
  {
    "text": "in the test the test or the sleep",
    "start": "203040",
    "end": "206560"
  },
  {
    "text": "function is part of the k6",
    "start": "206560",
    "end": "208799"
  },
  {
    "text": "framework and the slip function does not",
    "start": "208799",
    "end": "211440"
  },
  {
    "text": "affect",
    "start": "211440",
    "end": "212080"
  },
  {
    "text": "the test result so it's just to avoid a",
    "start": "212080",
    "end": "215120"
  },
  {
    "text": "loop that",
    "start": "215120",
    "end": "215760"
  },
  {
    "text": "runs very very fast so let's run this",
    "start": "215760",
    "end": "218720"
  },
  {
    "text": "one and see if it's more interesting",
    "start": "218720",
    "end": "227840"
  },
  {
    "text": "so it's running for 10 seconds with five",
    "start": "230000",
    "end": "233120"
  },
  {
    "text": "virtual users and we get some more",
    "start": "233120",
    "end": "235439"
  },
  {
    "text": "interesting data",
    "start": "235439",
    "end": "236959"
  },
  {
    "text": "we can see that the five virtual users",
    "start": "236959",
    "end": "239519"
  },
  {
    "text": "managed to",
    "start": "239519",
    "end": "240720"
  },
  {
    "text": "send 25 requests in the 10 seconds",
    "start": "240720",
    "end": "244480"
  },
  {
    "text": "and that makes sense because it's like",
    "start": "244480",
    "end": "246080"
  },
  {
    "text": "10 seconds 5 views",
    "start": "246080",
    "end": "247920"
  },
  {
    "text": "and every test runs for about 2 seconds",
    "start": "247920",
    "end": "251120"
  },
  {
    "text": "1 second for trade sleep and 1 second",
    "start": "251120",
    "end": "253519"
  },
  {
    "text": "for sleep",
    "start": "253519",
    "end": "255680"
  },
  {
    "text": "so it gives you a lot of data you see",
    "start": "255680",
    "end": "257440"
  },
  {
    "text": "that the performance actually",
    "start": "257440",
    "end": "260079"
  },
  {
    "text": "was a little bit a little bit better",
    "start": "260079",
    "end": "262560"
  },
  {
    "text": "that's probably because the api",
    "start": "262560",
    "end": "264720"
  },
  {
    "text": "has been warmed up and but you can see",
    "start": "264720",
    "end": "267600"
  },
  {
    "text": "like the connect",
    "start": "267600",
    "end": "268479"
  },
  {
    "text": "connecting and handshaking stuff has",
    "start": "268479",
    "end": "270560"
  },
  {
    "text": "more variations in the first test",
    "start": "270560",
    "end": "273600"
  },
  {
    "text": "so let's go on and check out another k6",
    "start": "273600",
    "end": "276479"
  },
  {
    "text": "feature",
    "start": "276479",
    "end": "278880"
  },
  {
    "text": "the next feature is checks checks are",
    "start": "280639",
    "end": "283120"
  },
  {
    "text": "kind of like asserts",
    "start": "283120",
    "end": "284800"
  },
  {
    "text": "checks do not abort the test but they",
    "start": "284800",
    "end": "287680"
  },
  {
    "text": "store",
    "start": "287680",
    "end": "288400"
  },
  {
    "text": "the result and display them when the",
    "start": "288400",
    "end": "290400"
  },
  {
    "text": "tests have finished",
    "start": "290400",
    "end": "292000"
  },
  {
    "text": "so in this test i put in two different",
    "start": "292000",
    "end": "294160"
  },
  {
    "text": "checks the first one",
    "start": "294160",
    "end": "295440"
  },
  {
    "text": "checks that every request returns the",
    "start": "295440",
    "end": "297600"
  },
  {
    "text": "status cost",
    "start": "297600",
    "end": "298479"
  },
  {
    "text": "code 200 and the second test",
    "start": "298479",
    "end": "301520"
  },
  {
    "text": "checks that the duration of each request",
    "start": "301520",
    "end": "303600"
  },
  {
    "text": "is below",
    "start": "303600",
    "end": "304720"
  },
  {
    "text": "100 000 milliseconds so",
    "start": "304720",
    "end": "308400"
  },
  {
    "text": "this is probably going to fail because",
    "start": "308400",
    "end": "310400"
  },
  {
    "text": "there's a thread sleep inside a",
    "start": "310400",
    "end": "311919"
  },
  {
    "text": "api of 1 000 milliseconds",
    "start": "311919",
    "end": "316080"
  },
  {
    "text": "the http get function from the k6",
    "start": "316080",
    "end": "318639"
  },
  {
    "text": "framework",
    "start": "318639",
    "end": "319680"
  },
  {
    "text": "returns a response this response",
    "start": "319680",
    "end": "322800"
  },
  {
    "text": "is similar to the http response",
    "start": "322800",
    "end": "326080"
  },
  {
    "text": "and has things like status code headers",
    "start": "326080",
    "end": "329280"
  },
  {
    "text": "and our response body so we can actually",
    "start": "329280",
    "end": "332000"
  },
  {
    "text": "do checks",
    "start": "332000",
    "end": "332800"
  },
  {
    "text": "on all of these values in addition you",
    "start": "332800",
    "end": "335600"
  },
  {
    "text": "have a",
    "start": "335600",
    "end": "336320"
  },
  {
    "text": "performance timing information for the",
    "start": "336320",
    "end": "338160"
  },
  {
    "text": "request so you can do checks",
    "start": "338160",
    "end": "340479"
  },
  {
    "text": "on timings like here with the duration",
    "start": "340479",
    "end": "343520"
  },
  {
    "text": "and all the other values so let's run",
    "start": "343520",
    "end": "346880"
  },
  {
    "text": "this one",
    "start": "346880",
    "end": "353199"
  },
  {
    "text": "and it's running for 10 seconds five",
    "start": "353199",
    "end": "356319"
  },
  {
    "text": "virtual users",
    "start": "356319",
    "end": "358560"
  },
  {
    "text": "we just have to wait and see",
    "start": "358560",
    "end": "362080"
  },
  {
    "text": "there you go on the top here you see",
    "start": "362080",
    "end": "364160"
  },
  {
    "text": "that the status checks all",
    "start": "364160",
    "end": "366479"
  },
  {
    "text": "worked out so all the 25 requests",
    "start": "366479",
    "end": "369360"
  },
  {
    "text": "returned",
    "start": "369360",
    "end": "370400"
  },
  {
    "text": "status code 200. the next one the",
    "start": "370400",
    "end": "373600"
  },
  {
    "text": "duration test",
    "start": "373600",
    "end": "374639"
  },
  {
    "text": "all failed because all the requests",
    "start": "374639",
    "end": "377759"
  },
  {
    "text": "did not respond in less than a thousand",
    "start": "377759",
    "end": "379680"
  },
  {
    "text": "milliseconds",
    "start": "379680",
    "end": "381280"
  },
  {
    "text": "so let's test they are mainly for",
    "start": "381280",
    "end": "384000"
  },
  {
    "text": "information",
    "start": "384000",
    "end": "384800"
  },
  {
    "text": "insider test but you can combine combine",
    "start": "384800",
    "end": "387680"
  },
  {
    "text": "them with something called",
    "start": "387680",
    "end": "389039"
  },
  {
    "text": "thresholds to make the whole test abort",
    "start": "389039",
    "end": "392720"
  },
  {
    "text": "when you are aboard the test it also",
    "start": "392720",
    "end": "394479"
  },
  {
    "text": "breaks the continuous integration",
    "start": "394479",
    "end": "396720"
  },
  {
    "text": "pipelines if we set up with",
    "start": "396720",
    "end": "398880"
  },
  {
    "text": "a pipeline so let's look at thresholds",
    "start": "398880",
    "end": "402430"
  },
  {
    "text": "[Music]",
    "start": "402430",
    "end": "405699"
  },
  {
    "text": "thresholds are a pass fail criteria you",
    "start": "406560",
    "end": "409199"
  },
  {
    "text": "can set up for different",
    "start": "409199",
    "end": "410479"
  },
  {
    "text": "performance expectations like making the",
    "start": "410479",
    "end": "413120"
  },
  {
    "text": "test fail or abort if the duration of",
    "start": "413120",
    "end": "415199"
  },
  {
    "text": "the request go above a certain limit",
    "start": "415199",
    "end": "418479"
  },
  {
    "text": "in this test i've added the two",
    "start": "418479",
    "end": "419919"
  },
  {
    "text": "thresholds the first one makes the test",
    "start": "419919",
    "end": "422639"
  },
  {
    "text": "fail if the duration of the requests are",
    "start": "422639",
    "end": "425280"
  },
  {
    "text": "above",
    "start": "425280",
    "end": "426960"
  },
  {
    "text": "2 000 milliseconds for the 95 percentile",
    "start": "426960",
    "end": "431599"
  },
  {
    "text": "i've also set up a board on fail which",
    "start": "431599",
    "end": "433919"
  },
  {
    "text": "means that this test",
    "start": "433919",
    "end": "434960"
  },
  {
    "text": "will stop execution if the threshold is",
    "start": "434960",
    "end": "437840"
  },
  {
    "text": "reached",
    "start": "437840",
    "end": "438880"
  },
  {
    "text": "and not going through with all the 10",
    "start": "438880",
    "end": "441280"
  },
  {
    "text": "seconds",
    "start": "441280",
    "end": "442479"
  },
  {
    "text": "the second test we use the checks",
    "start": "442479",
    "end": "445919"
  },
  {
    "text": "so we see say that",
    "start": "445919",
    "end": "449039"
  },
  {
    "text": "ninety percent of the checks i've put in",
    "start": "449360",
    "end": "451280"
  },
  {
    "text": "has to succeed or as the or else the",
    "start": "451280",
    "end": "453680"
  },
  {
    "text": "threshold will fail",
    "start": "453680",
    "end": "455199"
  },
  {
    "text": "so if the api starts returning some",
    "start": "455199",
    "end": "457360"
  },
  {
    "text": "error codes or response in less than a",
    "start": "457360",
    "end": "459120"
  },
  {
    "text": "second",
    "start": "459120",
    "end": "460240"
  },
  {
    "text": "the threshold will fail uh given the",
    "start": "460240",
    "end": "463120"
  },
  {
    "text": "threshold",
    "start": "463120",
    "end": "464080"
  },
  {
    "text": "given that thread sleep in the api the",
    "start": "464080",
    "end": "466240"
  },
  {
    "text": "threshold will probably fail",
    "start": "466240",
    "end": "468400"
  },
  {
    "text": "so let's see if it fails",
    "start": "468400",
    "end": "469800"
  },
  {
    "text": "[Music]",
    "start": "469800",
    "end": "473018"
  },
  {
    "text": "again we have to wait for the test to",
    "start": "475599",
    "end": "477680"
  },
  {
    "text": "run",
    "start": "477680",
    "end": "478800"
  },
  {
    "text": "and then we get the data",
    "start": "478800",
    "end": "481840"
  },
  {
    "text": "there you go we see that the duration",
    "start": "486240",
    "end": "489120"
  },
  {
    "text": "threshold",
    "start": "489120",
    "end": "490319"
  },
  {
    "text": "succeeded but the checks threshold",
    "start": "490319",
    "end": "493120"
  },
  {
    "text": "failed",
    "start": "493120",
    "end": "494160"
  },
  {
    "text": "and 50 of the checks failed",
    "start": "494160",
    "end": "497440"
  },
  {
    "text": "and that's the 54 percent are succeeding",
    "start": "497440",
    "end": "500400"
  },
  {
    "text": "is the status tests",
    "start": "500400",
    "end": "502160"
  },
  {
    "text": "and the 50 that fails are the duration",
    "start": "502160",
    "end": "504479"
  },
  {
    "text": "tests",
    "start": "504479",
    "end": "505520"
  },
  {
    "text": "so we can use the checks to make the",
    "start": "505520",
    "end": "508639"
  },
  {
    "text": "thresholds fail",
    "start": "508639",
    "end": "510000"
  },
  {
    "text": "and you see at the bottom here is an",
    "start": "510000",
    "end": "511520"
  },
  {
    "text": "arrow that the threshold have failed",
    "start": "511520",
    "end": "515599"
  },
  {
    "text": "so that's threshold we're going to use",
    "start": "516240",
    "end": "518399"
  },
  {
    "text": "this test in",
    "start": "518399",
    "end": "519839"
  },
  {
    "text": "azure devops pipeline later and see if",
    "start": "519839",
    "end": "522640"
  },
  {
    "text": "we can break the",
    "start": "522640",
    "end": "523599"
  },
  {
    "text": "pipeline so the last thing i wanted to",
    "start": "523599",
    "end": "527440"
  },
  {
    "text": "show you",
    "start": "527440",
    "end": "528000"
  },
  {
    "text": "from the k6 testing tool is",
    "start": "528000",
    "end": "532800"
  },
  {
    "text": "stages i'll actually just",
    "start": "532839",
    "end": "535120"
  },
  {
    "text": "start the stages test because it's going",
    "start": "535120",
    "end": "537040"
  },
  {
    "text": "to run for a",
    "start": "537040",
    "end": "538480"
  },
  {
    "text": "little bit longer than other tests",
    "start": "538480",
    "end": "540190"
  },
  {
    "text": "[Music]",
    "start": "540190",
    "end": "541760"
  },
  {
    "text": "and if you look at stages they are",
    "start": "541760",
    "end": "544880"
  },
  {
    "text": "enables you to ramp up your tests",
    "start": "544880",
    "end": "546959"
  },
  {
    "text": "meaning that you can increase or",
    "start": "546959",
    "end": "548399"
  },
  {
    "text": "decrease the number of virtual users",
    "start": "548399",
    "end": "550480"
  },
  {
    "text": "during a test so in this test i've set",
    "start": "550480",
    "end": "553200"
  },
  {
    "text": "up four stages",
    "start": "553200",
    "end": "554720"
  },
  {
    "text": "the first 10 seconds we run with 10",
    "start": "554720",
    "end": "557600"
  },
  {
    "text": "virtual users",
    "start": "557600",
    "end": "559040"
  },
  {
    "text": "the next 10 seconds we run with 20 and",
    "start": "559040",
    "end": "561839"
  },
  {
    "text": "so on",
    "start": "561839",
    "end": "562800"
  },
  {
    "text": "so at the end of this test we're going",
    "start": "562800",
    "end": "564560"
  },
  {
    "text": "to run with 100 virtual users",
    "start": "564560",
    "end": "567279"
  },
  {
    "text": "repeatedly calling the api to see if it",
    "start": "567279",
    "end": "570240"
  },
  {
    "text": "uh",
    "start": "570240",
    "end": "572000"
  },
  {
    "text": "handles the the extra load",
    "start": "572000",
    "end": "575440"
  },
  {
    "text": "and we run this test for all these users",
    "start": "575440",
    "end": "578800"
  },
  {
    "text": "so let's see if we get some new results",
    "start": "578800",
    "end": "581120"
  },
  {
    "text": "it's very close to finishing now",
    "start": "581120",
    "end": "584640"
  },
  {
    "text": "and here we get a lot more data and a",
    "start": "584640",
    "end": "587200"
  },
  {
    "text": "lot more interesting things",
    "start": "587200",
    "end": "589360"
  },
  {
    "text": "we can see that the number of requests",
    "start": "589360",
    "end": "592560"
  },
  {
    "text": "increased massively we have",
    "start": "592560",
    "end": "596000"
  },
  {
    "text": "almost 10 requests a second",
    "start": "596000",
    "end": "599040"
  },
  {
    "text": "on the api we can see that the api",
    "start": "599040",
    "end": "602880"
  },
  {
    "text": "actually starts to respond a little bit",
    "start": "602880",
    "end": "605440"
  },
  {
    "text": "slower in some cases",
    "start": "605440",
    "end": "606880"
  },
  {
    "text": "at a maximum of almost four seconds",
    "start": "606880",
    "end": "610240"
  },
  {
    "text": "uh so with k6 load test we can prove",
    "start": "610240",
    "end": "614320"
  },
  {
    "text": "or show when the api starts to struggle",
    "start": "614320",
    "end": "617920"
  },
  {
    "text": "and we've proven that",
    "start": "617920",
    "end": "619040"
  },
  {
    "text": "this api at least the response very",
    "start": "619040",
    "end": "623200"
  },
  {
    "text": "slowly when 100 users keep calling it",
    "start": "623200",
    "end": "626320"
  },
  {
    "text": "at the same time so that's the basics",
    "start": "626320",
    "end": "630320"
  },
  {
    "text": "of running k6 tests now i'll quickly",
    "start": "630320",
    "end": "633279"
  },
  {
    "text": "show you",
    "start": "633279",
    "end": "634000"
  },
  {
    "text": "uh how to run azure pipeline",
    "start": "634000",
    "end": "637440"
  },
  {
    "text": "with the k6 tests",
    "start": "637440",
    "end": "638900"
  },
  {
    "text": "[Music]",
    "start": "638900",
    "end": "642080"
  },
  {
    "text": "and there you go this is the my",
    "start": "643120",
    "end": "646320"
  },
  {
    "text": "yaml pipeline to run our k6 tests",
    "start": "646320",
    "end": "649839"
  },
  {
    "text": "you can see it's running on a linux",
    "start": "649839",
    "end": "651440"
  },
  {
    "text": "server and",
    "start": "651440",
    "end": "653040"
  },
  {
    "text": "on the linux server we install k6 using",
    "start": "653040",
    "end": "656399"
  },
  {
    "text": "sudo commands so firstly install k6 and",
    "start": "656399",
    "end": "660399"
  },
  {
    "text": "then we're able to run",
    "start": "660399",
    "end": "661760"
  },
  {
    "text": "the same k6 command k6 run on a test",
    "start": "661760",
    "end": "665200"
  },
  {
    "text": "that's",
    "start": "665200",
    "end": "665839"
  },
  {
    "text": "in the tests folder in the repository",
    "start": "665839",
    "end": "670560"
  },
  {
    "text": "so let's see if we get that running",
    "start": "670560",
    "end": "675839"
  },
  {
    "text": "so let's hopefully this pipeline will",
    "start": "684160",
    "end": "686839"
  },
  {
    "text": "start",
    "start": "686839",
    "end": "689839"
  },
  {
    "text": "yes it's starting and it",
    "start": "692800",
    "end": "696079"
  },
  {
    "text": "proceeds to install k6",
    "start": "696079",
    "end": "703839"
  },
  {
    "text": "and now we see cases is started running",
    "start": "710480",
    "end": "712880"
  },
  {
    "text": "and it's going to run for the test 10",
    "start": "712880",
    "end": "714560"
  },
  {
    "text": "seconds that we set up",
    "start": "714560",
    "end": "715850"
  },
  {
    "text": "[Music]",
    "start": "715850",
    "end": "717680"
  },
  {
    "text": "and there you go the thresholds fail",
    "start": "717680",
    "end": "720880"
  },
  {
    "text": "and inside this step you see that the",
    "start": "720880",
    "end": "722880"
  },
  {
    "text": "checks threshold failed and the duration",
    "start": "722880",
    "end": "725360"
  },
  {
    "text": "threshold failed",
    "start": "725360",
    "end": "726880"
  },
  {
    "text": "and then now i'm running against the",
    "start": "726880",
    "end": "728560"
  },
  {
    "text": "same test as we ran",
    "start": "728560",
    "end": "730639"
  },
  {
    "text": "earlier with the thresholds values",
    "start": "730639",
    "end": "733680"
  },
  {
    "text": "the only difference is i'm running it",
    "start": "733680",
    "end": "735600"
  },
  {
    "text": "against the api that's hosted in the",
    "start": "735600",
    "end": "737200"
  },
  {
    "text": "cloud",
    "start": "737200",
    "end": "738320"
  },
  {
    "text": "so we made our azure devops pipeline",
    "start": "738320",
    "end": "741120"
  },
  {
    "text": "break",
    "start": "741120",
    "end": "741600"
  },
  {
    "text": "because the api this didn't respond",
    "start": "741600",
    "end": "744800"
  },
  {
    "text": "quick enough so that's pretty cool",
    "start": "744800",
    "end": "748320"
  },
  {
    "text": "and you can integrate your",
    "start": "748320",
    "end": "751920"
  },
  {
    "text": "k6 tests in other pipelines but there",
    "start": "751920",
    "end": "754800"
  },
  {
    "text": "are some considerations you have to make",
    "start": "754800",
    "end": "757040"
  },
  {
    "text": "the tests really shouldn't be running on",
    "start": "757040",
    "end": "758800"
  },
  {
    "text": "the build agent it's really not set up",
    "start": "758800",
    "end": "761279"
  },
  {
    "text": "for",
    "start": "761279",
    "end": "761680"
  },
  {
    "text": "running hardcore performance tests",
    "start": "761680",
    "end": "765680"
  },
  {
    "text": "so we can consider using the k6 cloud or",
    "start": "765680",
    "end": "768880"
  },
  {
    "text": "trigger the test to run elsewhere",
    "start": "768880",
    "end": "771360"
  },
  {
    "text": "another consideration",
    "start": "771360",
    "end": "772959"
  },
  {
    "text": "uh when running tests as part of a",
    "start": "772959",
    "end": "776399"
  },
  {
    "text": "pipeline is that it requires the api to",
    "start": "776399",
    "end": "778959"
  },
  {
    "text": "be deployed",
    "start": "778959",
    "end": "780079"
  },
  {
    "text": "before running the tests so you can",
    "start": "780079",
    "end": "782720"
  },
  {
    "text": "consider running tests",
    "start": "782720",
    "end": "784160"
  },
  {
    "text": "nightly and separate the pipeline when",
    "start": "784160",
    "end": "786480"
  },
  {
    "text": "the api has less",
    "start": "786480",
    "end": "788079"
  },
  {
    "text": "load or you can use something like",
    "start": "788079",
    "end": "792120"
  },
  {
    "text": "deployments.slots and only switch the",
    "start": "792120",
    "end": "794240"
  },
  {
    "text": "slots if the load tests are okay",
    "start": "794240",
    "end": "796420"
  },
  {
    "text": "[Music]",
    "start": "796420",
    "end": "797920"
  },
  {
    "text": "so that's it let's get back in my slides",
    "start": "797920",
    "end": "801279"
  },
  {
    "text": "if you have questions you can reach me",
    "start": "801279",
    "end": "803760"
  },
  {
    "text": "on email or",
    "start": "803760",
    "end": "804720"
  },
  {
    "text": "twitter and in the ndc slack workspace",
    "start": "804720",
    "end": "808320"
  },
  {
    "text": "so i hope you hope to see you there and",
    "start": "808320",
    "end": "810480"
  },
  {
    "text": "thank you very much",
    "start": "810480",
    "end": "814560"
  }
]