[
  {
    "text": "so uh hello everyone now today i'm going to be talking about why you should consider webassembly in your next",
    "start": "240",
    "end": "5359"
  },
  {
    "text": "frontend project um so my name is hogan silvenogl i work with machine learning and ai at miles",
    "start": "5359",
    "end": "12080"
  },
  {
    "text": "and before we dive into webassembly i'm just going to give you some more background information about",
    "start": "12080",
    "end": "17600"
  },
  {
    "text": "me so my background is in human machine interfaces for process",
    "start": "17600",
    "end": "23279"
  },
  {
    "text": "automation and robotics i have a master's degree in electrical engineering and also master's",
    "start": "23279",
    "end": "28480"
  },
  {
    "text": "degree in behavioral science i'm also interested in artificial intelligence and internet of things",
    "start": "28480",
    "end": "34079"
  },
  {
    "text": "so i've taken some classes at mit and i am a microsoft mvp in ai and i'm also part of",
    "start": "34079",
    "end": "41920"
  },
  {
    "text": "of the steering group for two meet up syrian oslo oslo ai and the norwegian.net user group",
    "start": "41920",
    "end": "50559"
  },
  {
    "text": "so what is web assembly um so webassembly has its origin",
    "start": "53600",
    "end": "59760"
  },
  {
    "text": "in uh in 2015 so all the major web browser uh vendors they gathered",
    "start": "59760",
    "end": "66000"
  },
  {
    "text": "together and they did a draft of uh web assembly in the end of 2017",
    "start": "66000",
    "end": "72000"
  },
  {
    "text": "and then they published it in february of 2018. and so the goal goal here for",
    "start": "72000",
    "end": "78560"
  },
  {
    "text": "webassembly is to have like a binary format so that you can run",
    "start": "78560",
    "end": "84080"
  },
  {
    "text": "native code inside of your browser so in this presentation we will both",
    "start": "84080",
    "end": "89520"
  },
  {
    "text": "have a look at webassembly how you can write it and we will also have a small demo of how you can write",
    "start": "89520",
    "end": "95600"
  },
  {
    "text": "your own webassembly and then how you can package it package it with npm and then how you can",
    "start": "95600",
    "end": "101520"
  },
  {
    "text": "then download the mpm package and use it in your own web application",
    "start": "101520",
    "end": "107280"
  },
  {
    "text": "first if we cons contrast javascript and webassembly we can see that javascript is more",
    "start": "108000",
    "end": "113040"
  },
  {
    "text": "of a high level language it's flexible expressive dynamic typed and you don't need to",
    "start": "113040",
    "end": "118399"
  },
  {
    "text": "compile and also it has a huge ecosystem whereas web assembly is much more low level",
    "start": "118399",
    "end": "124079"
  },
  {
    "text": "and it's we will see in a couple of slides we will see what it looks like but it looks like an assembly",
    "start": "124079",
    "end": "129920"
  },
  {
    "text": "like language it also has a compact binary format and one of the advantages with using",
    "start": "129920",
    "end": "135360"
  },
  {
    "text": "webassembly is that you can have near native performance so either you can write",
    "start": "135360",
    "end": "141280"
  },
  {
    "text": "webassembly manually which i don't recommend or you can use a high level language like c or c plus",
    "start": "141280",
    "end": "147840"
  },
  {
    "text": "plus or rust and go and then you can use a tool or a compiler to compile down",
    "start": "147840",
    "end": "154080"
  },
  {
    "text": "your high level language to webassembly",
    "start": "154080",
    "end": "158879"
  },
  {
    "text": "so this is an illustration this is taken from a blog series by lynn clark so so you will get all of the references",
    "start": "160080",
    "end": "167280"
  },
  {
    "text": "at the end of the presentation but basically what this illustrates is that what usually happens is that you",
    "start": "167280",
    "end": "173519"
  },
  {
    "text": "have a high level high level language like c or c plus plus and then you compile this high level",
    "start": "173519",
    "end": "179920"
  },
  {
    "text": "language down to something you can call an intermediate representation and then you have a second part of the",
    "start": "179920",
    "end": "186560"
  },
  {
    "text": "compiler will actually compile it down to the target architecture which is then in this illustration can",
    "start": "186560",
    "end": "191680"
  },
  {
    "text": "either be an x86 architecture or an arm architecture",
    "start": "191680",
    "end": "198640"
  },
  {
    "text": "but now with web assembly it's a little bit different because now here we have code that we baxter executed over the web so that means that",
    "start": "198640",
    "end": "204879"
  },
  {
    "text": "we don't really know which target architecture will it run on finally so a webassembly can be described as a",
    "start": "204879",
    "end": "211360"
  },
  {
    "text": "machine language for conceptual machine and these webassembly instructions are also called virtual instructions",
    "start": "211360",
    "end": "218400"
  },
  {
    "text": "so what will happen is that the brown browser will download webassembly and then it can compile down to the",
    "start": "218400",
    "end": "224080"
  },
  {
    "text": "target that it's running on",
    "start": "224080",
    "end": "227840"
  },
  {
    "text": "as i said before here so webassembly which is abbreviated was is a new browser standard it is based on",
    "start": "229599",
    "end": "236080"
  },
  {
    "text": "a previous product called asm.js which you can read up on more and it's an intermediate language",
    "start": "236080",
    "end": "242720"
  },
  {
    "text": "in the same way as java compiles down to bytecode and c-sharp compiles to msil it's a strongly typed language but",
    "start": "242720",
    "end": "250640"
  },
  {
    "text": "we only have four different types we have integer 32 integer 64",
    "start": "250640",
    "end": "256079"
  },
  {
    "text": "and float 32 and float 64.",
    "start": "256079",
    "end": "260720"
  },
  {
    "text": "if we take a look here at the hello world program or hello watson program since i just mentioned that we only have",
    "start": "261840",
    "end": "267919"
  },
  {
    "text": "four different types of types in this language and and they were integers and floats",
    "start": "267919",
    "end": "273440"
  },
  {
    "text": "it's quite it's a little bit complicated to actually write a hello world program so instead what is the equivalence of a",
    "start": "273440",
    "end": "279120"
  },
  {
    "text": "hello world programming in wasm land is an either an addition or a subtraction",
    "start": "279120",
    "end": "284479"
  },
  {
    "text": "or some more simple mathematical operation so we will make our own add this uh",
    "start": "284479",
    "end": "291919"
  },
  {
    "text": "hello world program in in awesome so um webassembly has a format which is",
    "start": "291919",
    "end": "299199"
  },
  {
    "text": "called wat which stands for web assembly text format so this is how we can write uh our web",
    "start": "299199",
    "end": "305600"
  },
  {
    "text": "assembly code so what we have here is we define a function called add2",
    "start": "305600",
    "end": "311280"
  },
  {
    "text": "and we defined two input parameters which is integer 32 and then we also declared",
    "start": "311280",
    "end": "317440"
  },
  {
    "text": "that the result from this operation should also be an integer 32 and it's also stack based language so",
    "start": "317440",
    "end": "324080"
  },
  {
    "text": "here we get local on the first memory position and get local second memory position and then we call",
    "start": "324080",
    "end": "330720"
  },
  {
    "text": "a function here i32 add so there are some some 60 different types of functions that you",
    "start": "330720",
    "end": "336479"
  },
  {
    "text": "can use in webassembly and then we also have to declare what will this function actually",
    "start": "336479",
    "end": "341600"
  },
  {
    "text": "be called for you know for the calling function so we export it as a function name that should be add two",
    "start": "341600",
    "end": "348800"
  },
  {
    "text": "and this add two is an alias for the function that is called add two here in the w80 example",
    "start": "348800",
    "end": "357759"
  },
  {
    "text": "so we can use a tool here which is called what to us or webassembly text format to wasp so we",
    "start": "358800",
    "end": "365440"
  },
  {
    "text": "just run the second command line based tool so we run what",
    "start": "365440",
    "end": "370800"
  },
  {
    "text": "was with our webassembly text format and then we define what kind of uh what kind of format we want to have",
    "start": "370800",
    "end": "378240"
  },
  {
    "text": "as an output and in this case it's an object format or a binary format so it will be",
    "start": "378240",
    "end": "383520"
  },
  {
    "text": "to the add.wasm and we can also have a look at what this looks like in what our",
    "start": "383520",
    "end": "390240"
  },
  {
    "text": "binary format will actually looks like and then you can see here on on the slide that this looks uh very much like an assembly",
    "start": "390240",
    "end": "398720"
  },
  {
    "text": "language but how do we do now if we want to use",
    "start": "398720",
    "end": "404960"
  },
  {
    "text": "our web assembly that we have built so the first thing is that we need to",
    "start": "404960",
    "end": "411360"
  },
  {
    "text": "touch the wason file and then we can read it into an array buffer and then after that we can use",
    "start": "411360",
    "end": "418080"
  },
  {
    "text": "webassembly since webassembly is standard so it's is supported in all",
    "start": "418080",
    "end": "423520"
  },
  {
    "text": "major browsers we can call webassembly.instantiate with this bytes array that we just read in and",
    "start": "423520",
    "end": "429360"
  },
  {
    "text": "then from the results of this we can take the results.instance.export and then here we declare the function",
    "start": "429360",
    "end": "437199"
  },
  {
    "text": "name that we declared in um in our web assembly called add2 so we assign this to a javascript object",
    "start": "437199",
    "end": "445039"
  },
  {
    "text": "at 2 and then we can just run it as a regular javascript object so we",
    "start": "445039",
    "end": "450160"
  },
  {
    "text": "has to see what it looks like just make a lot and then add two of two integers so then we will have",
    "start": "450160",
    "end": "458319"
  },
  {
    "text": "we have made our first hello world uh program in in awesome",
    "start": "458319",
    "end": "465680"
  },
  {
    "text": "so another tool which can be interesting to have a look at is something called the awesome code explorer",
    "start": "467120",
    "end": "472400"
  },
  {
    "text": "so uh so with some code explorer you can load a binary wasm file into the wasm code explorer and then you",
    "start": "472400",
    "end": "479599"
  },
  {
    "text": "can have a look at the text format of that file so here we have actually taken the",
    "start": "479599",
    "end": "486639"
  },
  {
    "text": "binary file that we downloaded and then we've uploaded into the wasm code explorer and then you can see",
    "start": "486639",
    "end": "491919"
  },
  {
    "text": "here on the right hand side in this tool that we get the same texture representation as",
    "start": "491919",
    "end": "497680"
  },
  {
    "text": "what we actually added in the first first place",
    "start": "497680",
    "end": "502479"
  },
  {
    "text": "but this is quite the cumbersome to write webassembly by hand so that's not really recommended so instead what i",
    "start": "503199",
    "end": "509520"
  },
  {
    "text": "said was that what we would like to do is we would like to use a high level language like c or c plus",
    "start": "509520",
    "end": "514959"
  },
  {
    "text": "plus or rust or go and then we would like to compile this down to web assembly so i'm going to show you",
    "start": "514959",
    "end": "521760"
  },
  {
    "text": "how we can do this using rust and before that before we do that we",
    "start": "521760",
    "end": "528880"
  },
  {
    "text": "have to have just a quick introduction to what trust is",
    "start": "528880",
    "end": "535839"
  },
  {
    "text": "so rust this um a system programming language from mozilla so it says a syntax similar to c or c",
    "start": "535839",
    "end": "542080"
  },
  {
    "text": "plus plus it's strongly typed and it's compiled down to native code and one of the design goals with",
    "start": "542080",
    "end": "549600"
  },
  {
    "text": "rust as a language is that it should be memory safe guarantee",
    "start": "549600",
    "end": "556079"
  },
  {
    "text": "and that's a that's a very huge benefit with using rust",
    "start": "556240",
    "end": "562640"
  },
  {
    "text": "now when we use rust we need to be aware of the tool chain here so the tool chain basically consists of",
    "start": "562640",
    "end": "569040"
  },
  {
    "text": "three different tools so first up is rust up that's an installer for the",
    "start": "569040",
    "end": "574800"
  },
  {
    "text": "for us and then we have something called cargo with which is the rust package manager",
    "start": "574800",
    "end": "580320"
  },
  {
    "text": "so there is um there's a compilation of different uh crates so",
    "start": "580320",
    "end": "587200"
  },
  {
    "text": "you can see you can have a look at crates that i o that this sort of the package registry for the",
    "start": "587200",
    "end": "592399"
  },
  {
    "text": "rust community and then we have rust c or rust compiler so that's the compiler for",
    "start": "592399",
    "end": "597519"
  },
  {
    "text": "rust if we make a hello world program here we can define a function and it should",
    "start": "597519",
    "end": "604399"
  },
  {
    "text": "print out hello world and then we can just run raft compile with the main.rust and",
    "start": "604399",
    "end": "611120"
  },
  {
    "text": "then on windows it will generate an exe file and then it will just execute uh our",
    "start": "611120",
    "end": "617760"
  },
  {
    "text": "rust code",
    "start": "617760",
    "end": "620640"
  },
  {
    "text": "you can also use cargo if we also in the in the command line if we write cargo new",
    "start": "623360",
    "end": "629279"
  },
  {
    "text": "and then the name of our name of a product it will create a binary application and the project so you will get a source",
    "start": "629279",
    "end": "636720"
  },
  {
    "text": "the folder containing rust file main rust file and you will also have a package",
    "start": "636720",
    "end": "643120"
  },
  {
    "text": "declaration which is called tommel so in our main rust file we have a",
    "start": "643120",
    "end": "649120"
  },
  {
    "text": "definition for a main function and then it will just print out the hello world",
    "start": "649120",
    "end": "654240"
  },
  {
    "text": "and then in the in the tumble file we have the package definition where we need to define the name of our package a",
    "start": "654240",
    "end": "661279"
  },
  {
    "text": "version name and also the authors and if we have some dependencies on some other crates we can define that",
    "start": "661279",
    "end": "668880"
  },
  {
    "text": "also here in the package definition we can use cargo to run",
    "start": "668880",
    "end": "674399"
  },
  {
    "text": "uh to run this so we just run cargo run then it will will come by compile our",
    "start": "674399",
    "end": "681440"
  },
  {
    "text": "product and then we'll also run the exe file that will be generated and then",
    "start": "681440",
    "end": "687200"
  },
  {
    "text": "we can see the result of it in our command line window",
    "start": "687200",
    "end": "694320"
  },
  {
    "text": "so with rust we also have some types here so we have primitive primitive types we have boolean integrin",
    "start": "696720",
    "end": "702800"
  },
  {
    "text": "float and text we also have some primitive constructs like tuples and arrays",
    "start": "702800",
    "end": "708240"
  },
  {
    "text": "function pointers and so on so now when we know a little bit more",
    "start": "708240",
    "end": "713600"
  },
  {
    "text": "about trust now we'll look at how can we use rust to generate a web assembly file and then publish it up to",
    "start": "713600",
    "end": "720880"
  },
  {
    "text": "npm so first thing that we need to find out",
    "start": "720880",
    "end": "727760"
  },
  {
    "text": "is how can we compile rust down to webassembly so the first step in order to do that is",
    "start": "727760",
    "end": "735040"
  },
  {
    "text": "to install this rust tool chain that i was just talking about and then we need to add a new compiled",
    "start": "735040",
    "end": "740399"
  },
  {
    "text": "target which is called wasp32 unknown unknown so with that target then the uh",
    "start": "740399",
    "end": "747120"
  },
  {
    "text": "the rat compiler knows how to compile it down to webassembly and then we also need to install",
    "start": "747120",
    "end": "752480"
  },
  {
    "text": "something called the bind gen by vosm so what's binding what it provides",
    "start": "752480",
    "end": "757600"
  },
  {
    "text": "for us is that provides bindings from uh from the application javascript code",
    "start": "757600",
    "end": "763519"
  },
  {
    "text": "to rust and to wasm so that you actually can call your uh your file from your javascript code",
    "start": "763519",
    "end": "773839"
  },
  {
    "text": "this is an example here so here we have uh the package definition so we call it",
    "start": "774160",
    "end": "780480"
  },
  {
    "text": "the hell wasp silver is the name of our package and we defined some version and the",
    "start": "780480",
    "end": "786079"
  },
  {
    "text": "description and then we define what kind of library is this so uh so then we have",
    "start": "786079",
    "end": "792560"
  },
  {
    "text": "something called the c dynamic library which we put under a crate type and then we also need to",
    "start": "792560",
    "end": "798079"
  },
  {
    "text": "find some dependencies so one of the dependencies is this tool that i was talking about there was bind gen and what it actually",
    "start": "798079",
    "end": "804720"
  },
  {
    "text": "does is generate some glue file that we will have look at",
    "start": "804720",
    "end": "809839"
  },
  {
    "text": "this is our rust main failure so we need to define that we have",
    "start": "810639",
    "end": "818079"
  },
  {
    "text": "dependency on an external crate in this case it's the was buying gen and then that we want to use also it was",
    "start": "818079",
    "end": "823920"
  },
  {
    "text": "binding and after that we can define an external function an external javascript function that we",
    "start": "823920",
    "end": "829199"
  },
  {
    "text": "want to use we want to be able to use the javascript function a lot in order to print out something here",
    "start": "829199",
    "end": "835600"
  },
  {
    "text": "and then we can define our function which is a public function that we that the",
    "start": "835600",
    "end": "842560"
  },
  {
    "text": "calling application will be able to use so we call we name our function greet and it has a",
    "start": "842560",
    "end": "848880"
  },
  {
    "text": "string input parameters and then we just use the standard alert function in order to",
    "start": "848880",
    "end": "854880"
  },
  {
    "text": "print this out on the screen",
    "start": "854880",
    "end": "858560"
  },
  {
    "text": "so we then want to be able to package this so that we can load this up onto npm then we can run the command",
    "start": "860560",
    "end": "868240"
  },
  {
    "text": "here called was pack init so what that will generate it will generate a package folder uh with this content",
    "start": "868240",
    "end": "875920"
  },
  {
    "text": "and then we can just publish it yes thus we would publish any other",
    "start": "875920",
    "end": "881360"
  },
  {
    "text": "regular npm package we can just do the npm publish package and as you see here then the",
    "start": "881360",
    "end": "886639"
  },
  {
    "text": "result is that on npm we have a package that that someone else can use",
    "start": "886639",
    "end": "891920"
  },
  {
    "text": "to in order to add it to their own application",
    "start": "891920",
    "end": "896959"
  },
  {
    "text": "so we'll have a quick look here at what has been generated into our package folder so you can see",
    "start": "896959",
    "end": "903120"
  },
  {
    "text": "here that there are four different files",
    "start": "903120",
    "end": "907199"
  },
  {
    "text": "the first file is a typescript file uh so in this type of value it's declared",
    "start": "908160",
    "end": "913760"
  },
  {
    "text": "what this the different types of functions that we will be able to call from javascript so here we can see that there",
    "start": "913760",
    "end": "920160"
  },
  {
    "text": "is a great function that we will be able to call and we can also see what is the form at our input parameter",
    "start": "920160",
    "end": "927120"
  },
  {
    "text": "and what uh what will the output be and then it also generates",
    "start": "927120",
    "end": "932800"
  },
  {
    "text": "something that we can call a glue file so that this hello was silver.js so this is a javascript file",
    "start": "932800",
    "end": "939600"
  },
  {
    "text": "that you can call from you with your own javascript application code and this",
    "start": "939600",
    "end": "945120"
  },
  {
    "text": "uh this code this glue code will then call into the web assembly so you can see for example for",
    "start": "945120",
    "end": "952079"
  },
  {
    "text": "the function grid it will try to pass a string down to wassum and it will",
    "start": "952079",
    "end": "957199"
  },
  {
    "text": "take the input parameter that we that we defined and then it will try to call this return",
    "start": "957199",
    "end": "963519"
  },
  {
    "text": "wasn't wheat which is the function that we defined in the worst code and then after that we have to free up",
    "start": "963519",
    "end": "969600"
  },
  {
    "text": "our memory and then we also have the package.json file and",
    "start": "969600",
    "end": "975600"
  },
  {
    "text": "that's just the regular package dot json file where we define what kind of files we have we have this uh",
    "start": "975600",
    "end": "983440"
  },
  {
    "text": "taptic trial and we also have this glue file i was just talking about",
    "start": "983440",
    "end": "989199"
  },
  {
    "text": "and this is then how we can use this in our web application so we can define a",
    "start": "991920",
    "end": "997759"
  },
  {
    "text": "webpack config and we can define a package.json for our",
    "start": "997759",
    "end": "1002880"
  },
  {
    "text": "web application and in this package we just defined that we have a dependency on our hello",
    "start": "1002880",
    "end": "1009279"
  },
  {
    "text": "silver package and then we can just create a regular index file",
    "start": "1009279",
    "end": "1017440"
  },
  {
    "text": "and we point this we are using an index.js file where we can bootstrap our",
    "start": "1017440",
    "end": "1024720"
  },
  {
    "text": "wasam silver package we call this asynchronously with jes and then",
    "start": "1024720",
    "end": "1031520"
  },
  {
    "text": "yeah sweet and then whatever you want to have output on the on the website",
    "start": "1031520",
    "end": "1039600"
  },
  {
    "text": "and then this is the result from that this",
    "start": "1039600",
    "end": "1046240"
  },
  {
    "text": "has been sort of an introduction or a simple example of how you can use i can use rust in order to compile down",
    "start": "1046240",
    "end": "1053840"
  },
  {
    "text": "to a web assembly and then how we can use mpm to package this web assembly and upload it to mpm",
    "start": "1053840",
    "end": "1061120"
  },
  {
    "text": "and then how we find out how we can use the npm package in our own web application",
    "start": "1061120",
    "end": "1067200"
  },
  {
    "text": "i'm going to show you a little bit more complicated application here where we have some more",
    "start": "1067200",
    "end": "1073760"
  },
  {
    "text": "input so this is an application which is",
    "start": "1073760",
    "end": "1080480"
  },
  {
    "text": "an implementation of game of life for for uh so for those of those of you",
    "start": "1080480",
    "end": "1087200"
  },
  {
    "text": "who do not know game of life it's this assimilation so you have some rules for your",
    "start": "1087200",
    "end": "1092559"
  },
  {
    "text": "simulation that if you have live cell with fewer than two live neighbors it will die because it's underpopulated or if you",
    "start": "1092559",
    "end": "1099360"
  },
  {
    "text": "have a live cell with two or three live neighbors it will live on to the next generation of our simulation or if you",
    "start": "1099360",
    "end": "1106000"
  },
  {
    "text": "have a lifestyle with more than three live neighbors it will die because then it will be overpopulated and any dead cell",
    "start": "1106000",
    "end": "1112559"
  },
  {
    "text": "with exactly three live neighbors will become a new lifestyle because of reproduction",
    "start": "1112559",
    "end": "1119520"
  },
  {
    "text": "and you can have a look at this example more on the link below or below",
    "start": "1119520",
    "end": "1125440"
  },
  {
    "text": "here this is what it looks like",
    "start": "1125440",
    "end": "1130960"
  },
  {
    "text": "here we can see that the simulation has started and then we can use our post button",
    "start": "1134480",
    "end": "1142399"
  },
  {
    "text": "like this and then we can go in and edit manually inside our simulation so now we added some new",
    "start": "1143520",
    "end": "1149120"
  },
  {
    "text": "cells in the simulation and then we can continue running our simulation this is written",
    "start": "1149120",
    "end": "1155280"
  },
  {
    "text": "in web assembly and we're going to have a look at how this is done",
    "start": "1155280",
    "end": "1161039"
  },
  {
    "text": "again here is our package our cargo uh package definition so we define the name",
    "start": "1163440",
    "end": "1169120"
  },
  {
    "text": "there was some game of life and the author and the version and we need to define what type of like",
    "start": "1169120",
    "end": "1174960"
  },
  {
    "text": "error is this so this is this see the dynamic library and then we also need to define our",
    "start": "1174960",
    "end": "1180400"
  },
  {
    "text": "dependencies so we need to uh as before we need to have dependence on this was",
    "start": "1180400",
    "end": "1185440"
  },
  {
    "text": "binding in order to generate this glue code that i was talking about",
    "start": "1185440",
    "end": "1193280"
  },
  {
    "text": "this is an extract of the actual rust code that we're using so here we define a sort of this",
    "start": "1193280",
    "end": "1200720"
  },
  {
    "text": "the game game plan or the universe so we find the width and height and",
    "start": "1200720",
    "end": "1207679"
  },
  {
    "text": "was to define some accessor functions for the width and height and we also define a function here in",
    "start": "1207679",
    "end": "1214320"
  },
  {
    "text": "order to be able to toggle or sell so",
    "start": "1214320",
    "end": "1220559"
  },
  {
    "text": "this is our typescript file where we define what kind of functions exist and what can be what can be called",
    "start": "1220559",
    "end": "1226559"
  },
  {
    "text": "from the outside world so you can see here that we can call our width and height and we can call the",
    "start": "1226559",
    "end": "1232960"
  },
  {
    "text": "number of cells and we can also use call our toggle cell function",
    "start": "1232960",
    "end": "1239200"
  },
  {
    "text": "this is this javascript glue file that i was talking about so again again here we",
    "start": "1241919",
    "end": "1247679"
  },
  {
    "text": "have example for the width it tries to call the wasp.universe.width in",
    "start": "1247679",
    "end": "1253120"
  },
  {
    "text": "order to retrieve what is the width of this simulation plan and we also have the",
    "start": "1253120",
    "end": "1258240"
  },
  {
    "text": "toggle cell function which takes some arguments in the x and y coordinates",
    "start": "1258240",
    "end": "1264400"
  },
  {
    "text": "for the cell that should be toggled and it tries to cool down to the wasp.universe",
    "start": "1264400",
    "end": "1269679"
  },
  {
    "text": "toggle cell function",
    "start": "1269679",
    "end": "1273120"
  },
  {
    "text": "then here in the html code we can just define a bootstrap javascript file where we can",
    "start": "1275440",
    "end": "1281600"
  },
  {
    "text": "load our webassembly and then we ask we can just import",
    "start": "1281600",
    "end": "1288720"
  },
  {
    "text": "this universe that we defined in our package for example over here we have just",
    "start": "1288720",
    "end": "1293840"
  },
  {
    "text": "highlighted that you can also call your universe.toggle cell here from",
    "start": "1293840",
    "end": "1299360"
  },
  {
    "text": "your javascript file so now some questions here about",
    "start": "1299360",
    "end": "1306400"
  },
  {
    "text": "performance because because what i said in my introduction was that uh one of the benefits of using",
    "start": "1306400",
    "end": "1312880"
  },
  {
    "text": "webassembly is that you will be able to run their native performance",
    "start": "1312880",
    "end": "1318000"
  },
  {
    "text": "we're gonna have a quick comparison here between if you run web assembly or if",
    "start": "1318000",
    "end": "1324080"
  },
  {
    "text": "you run javascript in very common browsers in chrome and firefox and in safari",
    "start": "1324080",
    "end": "1330640"
  },
  {
    "text": "so they have they've run the same type of simulation using both javascript and webassembly",
    "start": "1330640",
    "end": "1336400"
  },
  {
    "text": "and as you can see webassembly is quite quite a lot um both faster than the javascript but but what",
    "start": "1336400",
    "end": "1343679"
  },
  {
    "text": "maybe is even more important this that it has a constant uh",
    "start": "1343679",
    "end": "1348799"
  },
  {
    "text": "spread so that if you run web assembly you can be more certain of what type of",
    "start": "1348799",
    "end": "1355120"
  },
  {
    "text": "performance you will will be able to achieve whereas for example you can see",
    "start": "1355120",
    "end": "1360640"
  },
  {
    "text": "the middle one the javascript on firefox has quite large spread of the different uh trials so then you don't actually",
    "start": "1360640",
    "end": "1367679"
  },
  {
    "text": "really know what type of performance you will actually get in the end we should also take into",
    "start": "1367679",
    "end": "1373280"
  },
  {
    "text": "account that webassembly is still quite a new uh new language whereas javascript has been",
    "start": "1373280",
    "end": "1379679"
  },
  {
    "text": "with us for a lot of times we have had much more time in order to optimize uh the javascript compiler and",
    "start": "1379679",
    "end": "1387520"
  },
  {
    "text": "the javascript runtime so we we can expect that this differences will be even more",
    "start": "1387520",
    "end": "1395600"
  },
  {
    "text": "will be even higher in the future",
    "start": "1395600",
    "end": "1402960"
  },
  {
    "text": "and i also have some examples here from how webassembly has been used in real",
    "start": "1402960",
    "end": "1409360"
  },
  {
    "text": "world applications my first example here is for a digital",
    "start": "1409360",
    "end": "1417520"
  },
  {
    "text": "signal processing library so uh one big benefit",
    "start": "1417520",
    "end": "1422640"
  },
  {
    "text": "of webassembly is is that you can use if you have already a library which",
    "start": "1422640",
    "end": "1428960"
  },
  {
    "text": "is written in any of these languages that i mentioned like c or z plus plus or go or rust and you want to vape",
    "start": "1428960",
    "end": "1436559"
  },
  {
    "text": "verify it so that you can use it over the web and webassembly is a great tool in order",
    "start": "1436559",
    "end": "1442080"
  },
  {
    "text": "to do that here's an example of some people they already had a c",
    "start": "1442080",
    "end": "1447360"
  },
  {
    "text": "library with some some transformations for image transformations and video",
    "start": "1447360",
    "end": "1453360"
  },
  {
    "text": "video transforms which is called web dsp and then i used web assembly",
    "start": "1453360",
    "end": "1458799"
  },
  {
    "text": "in order to be able to run this on the web",
    "start": "1458799",
    "end": "1465278"
  },
  {
    "text": "this is an example of what this looks like so this is in real time where we can change or transform",
    "start": "1468559",
    "end": "1476000"
  },
  {
    "text": "video transform and then it just runs through through webassembly and then down to the",
    "start": "1476000",
    "end": "1481120"
  },
  {
    "text": "c code and you can have this uh real-time",
    "start": "1481120",
    "end": "1486480"
  },
  {
    "text": "transformation of your uh of your images and of your videos so the best so the",
    "start": "1486480",
    "end": "1494559"
  },
  {
    "text": "so the benefit of this is that you already have some application code that you are already using and that you you know",
    "start": "1494559",
    "end": "1501039"
  },
  {
    "text": "you can you can trust and then it's a it's a small step to just use webassembly in order to be able to",
    "start": "1501039",
    "end": "1507760"
  },
  {
    "text": "call this through the browser",
    "start": "1507760",
    "end": "1512240"
  },
  {
    "text": "another example of this is uh is autocad so",
    "start": "1513679",
    "end": "1520799"
  },
  {
    "text": "for those of you who do not know autocad is a company that deals with",
    "start": "1520799",
    "end": "1526400"
  },
  {
    "text": "drawings of constructions and buildings and so on so back in early so they have a huge",
    "start": "1526400",
    "end": "1533520"
  },
  {
    "text": "amount of drawings going back to both the 70s and the 80s that they still need to somehow be able",
    "start": "1533520",
    "end": "1540960"
  },
  {
    "text": "to provide to their customers so um in 2010 they tried",
    "start": "1540960",
    "end": "1546799"
  },
  {
    "text": "the latest technology at that time which was a flash app so to do a viewer for autocad you were",
    "start": "1546799",
    "end": "1553360"
  },
  {
    "text": "using flash and if we fast forward to 2014 then it",
    "start": "1553360",
    "end": "1560000"
  },
  {
    "text": "was the html5 javascript was was trending at that time so then they",
    "start": "1560000",
    "end": "1566559"
  },
  {
    "text": "made another viewer application using that and then in 2016",
    "start": "1566559",
    "end": "1572480"
  },
  {
    "text": "they used a compiler called mscrypton to be able to compile c plus",
    "start": "1572480",
    "end": "1578320"
  },
  {
    "text": "plus down to down to javascript",
    "start": "1578320",
    "end": "1584320"
  },
  {
    "text": "and then in 2017 they used something called real dwg which is",
    "start": "1584320",
    "end": "1590080"
  },
  {
    "text": "their own uh format for the for these drawings they made a viewer for that which is",
    "start": "1590080",
    "end": "1596840"
  },
  {
    "text": "web-based and then in 2018 they made an autocad",
    "start": "1596840",
    "end": "1601919"
  },
  {
    "text": "web app web app using uh using web assembly",
    "start": "1601919",
    "end": "1608000"
  },
  {
    "text": "so the interesting thing with this is how this uh how this application has",
    "start": "1608000",
    "end": "1613120"
  },
  {
    "text": "been structured so basically you have on top you have some uh some normal web",
    "start": "1613120",
    "end": "1620640"
  },
  {
    "text": "technologies like react and typescript and then you have ui you can have ui component",
    "start": "1620640",
    "end": "1626799"
  },
  {
    "text": "libraries and then you have this webassembly binary and this will call down to the",
    "start": "1626799",
    "end": "1632559"
  },
  {
    "text": "autocad core library which is this c plus plus code that means with instead of",
    "start": "1632559",
    "end": "1639440"
  },
  {
    "text": "having to rewrite their their whole portfolio of uh of code they could instead just use",
    "start": "1639440",
    "end": "1646480"
  },
  {
    "text": "webassembly and reuse reuse their existing native c plus libraries and expose this as a web",
    "start": "1646480",
    "end": "1654880"
  },
  {
    "text": "application i'm going to be talking about some",
    "start": "1654880",
    "end": "1660399"
  },
  {
    "text": "future plans here for web assembly one thing that i've",
    "start": "1660399",
    "end": "1665840"
  },
  {
    "text": "mentioned in my talk here is that we have some javascript glue file which acts like a sort of intermediary",
    "start": "1665840",
    "end": "1672240"
  },
  {
    "text": "between your application code and the web assembly so but that's not very performant so uh",
    "start": "1672240",
    "end": "1678960"
  },
  {
    "text": "so what they want would like to try to do is would like us to be able to call directly to the dome or like directly to a web",
    "start": "1678960",
    "end": "1685520"
  },
  {
    "text": "api and not having to not having to be restricted to this glue",
    "start": "1685520",
    "end": "1694320"
  },
  {
    "text": "file that i was talking about and then the same thing we would also like to just be able to",
    "start": "1694320",
    "end": "1699360"
  },
  {
    "text": "do an import or was main javascript so so as as maybe you saw here in my previous",
    "start": "1699360",
    "end": "1705279"
  },
  {
    "text": "examples i had to load my uh javascript a song",
    "start": "1705279",
    "end": "1710720"
  },
  {
    "text": "currently in order to be able to run it but they would just want to be able to import it just as any",
    "start": "1710720",
    "end": "1716159"
  },
  {
    "text": "other type of library and then in addition they would like to support more languages",
    "start": "1716159",
    "end": "1721279"
  },
  {
    "text": "so um so as of now it's uh one of the criteria for",
    "start": "1721279",
    "end": "1728000"
  },
  {
    "text": "um language to able to compile compile down to your web assembly is that you can't have",
    "start": "1728000",
    "end": "1734799"
  },
  {
    "text": "a garbage collector so so for example java is not supported as",
    "start": "1734799",
    "end": "1740240"
  },
  {
    "text": "of as now another new thing here is called",
    "start": "1740240",
    "end": "1746559"
  },
  {
    "text": "serverless web assembly so webassembly is not only for the browser we have",
    "start": "1746559",
    "end": "1751600"
  },
  {
    "text": "some different providers like cloud fire and fastly that can support web assembly so that you can actually",
    "start": "1751600",
    "end": "1757440"
  },
  {
    "text": "write serverless your service function in web assembly so why would you want to do that one of",
    "start": "1757440",
    "end": "1764000"
  },
  {
    "text": "the things is that you will have much faster launch time and you don't need to rewrite maybe you already have",
    "start": "1764000",
    "end": "1769440"
  },
  {
    "text": "some server code then you can just use web ascend web assembly instead of rewriting it to",
    "start": "1769440",
    "end": "1776240"
  },
  {
    "text": "your script so this is an illustration of the different types of options that we have",
    "start": "1776240",
    "end": "1782960"
  },
  {
    "text": "either we can have webassembly running on the backend then we call webassembly from the front end we can",
    "start": "1782960",
    "end": "1789919"
  },
  {
    "text": "have client-side javascript or we can have client-side webassembly or we can have this serverless web",
    "start": "1789919",
    "end": "1795840"
  },
  {
    "text": "assembly that i was just talking about",
    "start": "1795840",
    "end": "1799600"
  },
  {
    "text": "also something called version website system interface so one of the ideas with this initiative",
    "start": "1802559",
    "end": "1808480"
  },
  {
    "text": "is that they want to be able to run web assembly outside of the browser so um to make it less restricted so that",
    "start": "1808480",
    "end": "1816399"
  },
  {
    "text": "you can actually run it in different environments um but then we",
    "start": "1816399",
    "end": "1821440"
  },
  {
    "text": "need to have an interface for this conceptual operator system that could",
    "start": "1821440",
    "end": "1827200"
  },
  {
    "text": "interoperate with this versi standard and the goal for this is that you should",
    "start": "1827200",
    "end": "1833520"
  },
  {
    "text": "be able to be able to run represently on all types of operating systems so as of now",
    "start": "1833520",
    "end": "1839760"
  },
  {
    "text": "when you run web assembly in the browser it needs to adhere to the same type of safety",
    "start": "1839760",
    "end": "1846559"
  },
  {
    "text": "restrictions as javascript so there are lots of things that you can't do with webassembly but if you if",
    "start": "1846559",
    "end": "1854480"
  },
  {
    "text": "this versa standard comes into place then you can have some sort of",
    "start": "1854480",
    "end": "1859519"
  },
  {
    "text": "intermediary that can negotiate with the operating system and see if is this file okay okay to be run and if",
    "start": "1859519",
    "end": "1867360"
  },
  {
    "text": "it is it will just transfer the file over to over to the operating system",
    "start": "1867360",
    "end": "1874799"
  },
  {
    "text": "now finally i'm going to talk a little bit about some",
    "start": "1877279",
    "end": "1882320"
  },
  {
    "text": "some other frameworks here for uh that is using uh webassembly",
    "start": "1882320",
    "end": "1889760"
  },
  {
    "text": "so one of this framework is called assemblyscript so assembly script compiles a subset of",
    "start": "1890480",
    "end": "1897919"
  },
  {
    "text": "typescript down to webassembly using a compiler called binarian",
    "start": "1897919",
    "end": "1903279"
  },
  {
    "text": "and you can see here an example of how that looks like and one of the things that",
    "start": "1903279",
    "end": "1909440"
  },
  {
    "text": "you need to be aware of if you run assembly script is that you need to",
    "start": "1909440",
    "end": "1914559"
  },
  {
    "text": "handle the memory allocation so you both need to allocate some memory before you start",
    "start": "1914559",
    "end": "1920000"
  },
  {
    "text": "to use your uh yeah before you start use your assembly script and then you also need",
    "start": "1920000",
    "end": "1925279"
  },
  {
    "text": "to free your free your memory when you're done using it",
    "start": "1925279",
    "end": "1931759"
  },
  {
    "text": "and we also have blazer i know there are several talks uh at this conference that talks",
    "start": "1933519",
    "end": "1939679"
  },
  {
    "text": "about laser so i'll just mention this very very briefly basically base basically laser is a framework that",
    "start": "1939679",
    "end": "1947279"
  },
  {
    "text": "where you can write your web applications just using regular c-sharp so it has there are two types of flavors",
    "start": "1947279",
    "end": "1954880"
  },
  {
    "text": "of blazer either you can run it on the server and then you have clients events that it sends back using signal",
    "start": "1954880",
    "end": "1960960"
  },
  {
    "text": "or or you can run it on web assembly so then you will actually have a version of the",
    "start": "1960960",
    "end": "1966480"
  },
  {
    "text": "net framework running on webassembly",
    "start": "1966480",
    "end": "1971200"
  },
  {
    "text": "one important question here is isn't this just the new old new old new",
    "start": "1974480",
    "end": "1980159"
  },
  {
    "text": "haven't we you know haven't we just seen all this before",
    "start": "1980159",
    "end": "1985279"
  },
  {
    "text": "we take some examples from the past we had activex and we also had flash and we",
    "start": "1985279",
    "end": "1991360"
  },
  {
    "text": "had silverlight and none none of these were uh has survived so why would why would the",
    "start": "1991360",
    "end": "1999120"
  },
  {
    "text": "um why would web assembly have a higher chance of",
    "start": "1999120",
    "end": "2004480"
  },
  {
    "text": "success than these previous frameworks and so for once all of these were proprietary to",
    "start": "2004480",
    "end": "2010320"
  },
  {
    "text": "the company that was making this um these toolkits whereas webassembly is",
    "start": "2010320",
    "end": "2017600"
  },
  {
    "text": "is a standard that has been agreed upon between the different browser vendors so there is a much",
    "start": "2017600",
    "end": "2023200"
  },
  {
    "text": "higher probability that this will be something that we can make use of a long time in the",
    "start": "2023200",
    "end": "2029200"
  },
  {
    "text": "in the future so what is the conclusion of all of this",
    "start": "2029200",
    "end": "2036720"
  },
  {
    "text": "because when uh as first started to hear about web assembly one of them one of the sort of the",
    "start": "2036720",
    "end": "2042960"
  },
  {
    "text": "headlines was that javascript is instead and long live webassembly",
    "start": "2042960",
    "end": "2048638"
  },
  {
    "text": "so the question is here should we do awesome all the things",
    "start": "2048639",
    "end": "2053919"
  },
  {
    "text": "i don't necessarily necessarily think that i think that webassembly is just one other tool in your toolbox and it's",
    "start": "2053919",
    "end": "2061520"
  },
  {
    "text": "one of one of the use cases where it really shines is if you already have a set library of",
    "start": "2061520",
    "end": "2067760"
  },
  {
    "text": "either c or c plus plus code and you want to be able to expose this out in the browser and you don't want to",
    "start": "2067760",
    "end": "2074398"
  },
  {
    "text": "rewrite your whole library then web assembly is a really great candidate for for that",
    "start": "2074399",
    "end": "2081040"
  },
  {
    "text": "but another thing that we also need to be aware of is that we're still sort of in an early phase so",
    "start": "2081040",
    "end": "2088240"
  },
  {
    "text": "there's a there's a lot of tooling that can be improved because",
    "start": "2088240",
    "end": "2093280"
  },
  {
    "text": "uh quite frankly some of these tools are a little bit clunky to use right now and",
    "start": "2093280",
    "end": "2098480"
  },
  {
    "text": "it's not super user friendly but i think that this will also change with time",
    "start": "2098480",
    "end": "2106240"
  },
  {
    "text": "so to finish my presentation i will also give you some some reservances with some articles",
    "start": "2107920",
    "end": "2115119"
  },
  {
    "text": "where you can read up more on autumn webassembly and you can also",
    "start": "2115119",
    "end": "2120800"
  },
  {
    "text": "read a little bit more about laser if you're interested into that with that i hope that you",
    "start": "2120800",
    "end": "2128480"
  },
  {
    "text": "find this inspiring and that you would like to find out more about webassembly and",
    "start": "2128480",
    "end": "2134880"
  },
  {
    "text": "you want to reach me you can reach me either on twitter or you can send me an email and i will be here throughout this",
    "start": "2134880",
    "end": "2142640"
  },
  {
    "text": "remaining three days on the conference so we both on the prosec channel so if you have some uh",
    "start": "2142640",
    "end": "2149680"
  },
  {
    "text": "still have some time left here for questions so you can write your questions either in the q and a",
    "start": "2149680",
    "end": "2155760"
  },
  {
    "text": "panel here on webex or you can write some questions on slack with that i would like to thank",
    "start": "2155760",
    "end": "2162720"
  },
  {
    "text": "you all for your time thank you so much",
    "start": "2162720",
    "end": "2169119"
  }
]