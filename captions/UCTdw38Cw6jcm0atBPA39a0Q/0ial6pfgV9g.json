[
  {
    "start": "0",
    "end": "145000"
  },
  {
    "text": "okay skip the rest of that terribly entertaining video hello everybody hello uh do feel free to visit the",
    "start": "6240",
    "end": "13120"
  },
  {
    "text": "website the chap you did the art for me he's awfully good he does a lot of stuff like this this is the sort of um this is",
    "start": "13120",
    "end": "18960"
  },
  {
    "text": "the sort of graphics computer gameplay when i was a kid aren't they awesome uh loading time for a computer game was",
    "start": "18960",
    "end": "25039"
  },
  {
    "text": "what about five minutes and made a noise that could wake in the dead it was great",
    "start": "25039",
    "end": "31279"
  },
  {
    "text": "also don't ever put your computer game anywhere near a magnetic source otherwise you just lost your game",
    "start": "31279",
    "end": "36480"
  },
  {
    "text": "anyway let's move on this is me bit about me oh i thought yeah",
    "start": "36480",
    "end": "41920"
  },
  {
    "text": "i've been in working in it for quite a while now i'm from the uk um i've worked in a whole load of",
    "start": "41920",
    "end": "47680"
  },
  {
    "text": "different industries i've done government um i've done retail i've done manufacturing various things briefly i",
    "start": "47680",
    "end": "54480"
  },
  {
    "text": "was one of those contractors that your mum used to warn you about and these days i work for muller do they have",
    "start": "54480",
    "end": "60160"
  },
  {
    "text": "muller in denmark i don't know they're pretty famous in the uk they make these these yogurts yogurts with a fruity yeah",
    "start": "60160",
    "end": "65920"
  },
  {
    "text": "no i don't know but that's what i do i make people sure people get yogurt which is always good",
    "start": "65920",
    "end": "71360"
  },
  {
    "text": "so i am going to talk today about being lazy which i would argue is probably the",
    "start": "71360",
    "end": "77360"
  },
  {
    "text": "thing that has moved forward nearly every technology on the planet because at some point somebody sat down and said",
    "start": "77360",
    "end": "82960"
  },
  {
    "text": "this is boring how can i do it better pretty much oh there's my twitter handle",
    "start": "82960",
    "end": "88400"
  },
  {
    "text": "by the way feel free i can bring that back later follow me on twitter even the unlikely event that anybody has a question or ever wants to talk to me",
    "start": "88400",
    "end": "94720"
  },
  {
    "text": "ever again uh heaven knows my wife doesn't always want to but there",
    "start": "94720",
    "end": "101119"
  },
  {
    "text": "we go all right the uh the great uh conflict of our time we've got two",
    "start": "101119",
    "end": "106960"
  },
  {
    "text": "men here well then they are both men one of them's fooling no one and one of them follows the rules does",
    "start": "106960",
    "end": "114479"
  },
  {
    "text": "everything by the book and the other is the slacker the one who takes it easy and just does whatever and of these two",
    "start": "114479",
    "end": "121520"
  },
  {
    "text": "men how many of them got to ride around in a flying time machine and almost sleep with his no don't do that one",
    "start": "121520",
    "end": "128160"
  },
  {
    "text": "don't do that one but the flying time machine yeah and honestly i am far too lazy for an",
    "start": "128160",
    "end": "133280"
  },
  {
    "text": "awful lot of the stuff that we have to put up with encoding and that's kind of what i'm what i'm looking at is a whole load of techniques i've got for saving",
    "start": "133280",
    "end": "139440"
  },
  {
    "text": "yourself some time get rid of some boilerplate get rid of some useless code that's doing no one any good",
    "start": "139440",
    "end": "146319"
  },
  {
    "start": "145000",
    "end": "168000"
  },
  {
    "text": "now these according to me are the phases of a project which of these as developers because i'm",
    "start": "146319",
    "end": "152800"
  },
  {
    "text": "assuming from world developers i don't know if that's true but i'm going to assume it for the time being which of these can we make any sort of a",
    "start": "152800",
    "end": "158720"
  },
  {
    "text": "dent on in terms of saving us a load of effort and time well gathering requirements is typically not us",
    "start": "158720",
    "end": "164720"
  },
  {
    "text": "designing a solution again typically not coding yeah and enhancements and of these by far the",
    "start": "164720",
    "end": "171760"
  },
  {
    "start": "168000",
    "end": "224000"
  },
  {
    "text": "thing that we spend most of our time on is enhancements that is not the initial development effort but every single time",
    "start": "171760",
    "end": "178159"
  },
  {
    "text": "you go back to the code base who has a code base older than 10 years yes most of you 20 years",
    "start": "178159",
    "end": "185840"
  },
  {
    "text": "still a lot of you 30 years well okay fair enough i kind of there",
    "start": "185840",
    "end": "192560"
  },
  {
    "text": "were jobs when i could have put my hand up but my point is initial development it might be a few",
    "start": "192560",
    "end": "197920"
  },
  {
    "text": "months it might be half a year it might be whatever but it's going to be in production for potentially 20 years or more",
    "start": "197920",
    "end": "204959"
  },
  {
    "text": "and every single time you go back in there there's a whole load of messing around and",
    "start": "204959",
    "end": "210560"
  },
  {
    "text": "that is where the any application spends the vast majority of its time and that is where when you look at the whole life",
    "start": "210560",
    "end": "217760"
  },
  {
    "text": "of an application we can try and save the most effort by writing code which is incredibly easy to enhance",
    "start": "217760",
    "end": "224560"
  },
  {
    "start": "224000",
    "end": "286000"
  },
  {
    "text": "and what are the problems that can occur that make it hard to enhance code well unclear requirements that is between",
    "start": "224560",
    "end": "230400"
  },
  {
    "text": "yourself and whatever ba you believe in project management issues again that's down to your pm legacy code base on the",
    "start": "230400",
    "end": "237519"
  },
  {
    "text": "other hand that's a problem we can potentially deal with and one of the problems with legacy code bases",
    "start": "237519",
    "end": "244080"
  },
  {
    "text": "is the fact that the code is flipping unreadable most of the time what does it do",
    "start": "244080",
    "end": "249360"
  },
  {
    "text": "this code this function is 2 000 lines long it's called do stuff",
    "start": "249360",
    "end": "255200"
  },
  {
    "text": "it has four levels of nested if statements and calls to nested stored procedures in the",
    "start": "255200",
    "end": "261040"
  },
  {
    "text": "database i don't even know what it does i don't know about anyone else but i've",
    "start": "261040",
    "end": "266400"
  },
  {
    "text": "had cases where there's been a box with three rules and the business have just said there's three rules in that box add",
    "start": "266400",
    "end": "272160"
  },
  {
    "text": "a new rule i said great well the problem is the first rule split in four different places the second one's half",
    "start": "272160",
    "end": "277199"
  },
  {
    "text": "in the database half somewhere else i don't even know where the third one is so yeah sure i'll just ram an extra rule",
    "start": "277199",
    "end": "282639"
  },
  {
    "text": "in there easy so i can't solve all of these problems but",
    "start": "282639",
    "end": "288479"
  },
  {
    "text": "i can at least try and uh suggest some techniques that will will help us to prevent this coming in the first place",
    "start": "288479",
    "end": "294320"
  },
  {
    "text": "so again according to me these are the parts of a function you've got the parameters there's stuff",
    "start": "294320",
    "end": "299919"
  },
  {
    "text": "coming in your return value stuff going out but in the middle we've got these",
    "start": "299919",
    "end": "304960"
  },
  {
    "start": "304000",
    "end": "368000"
  },
  {
    "text": "two guys and i would argue that an awful lot of the problems that we see with functions",
    "start": "304960",
    "end": "310160"
  },
  {
    "text": "is where you get these guys modeled together the code structure and the business logic so what are these",
    "start": "310160",
    "end": "317440"
  },
  {
    "text": "well the code structure is the how am i doing it the business logic is the what am i",
    "start": "317440",
    "end": "322560"
  },
  {
    "text": "doing if the business would ask you what does this do the business logic is what you'd answer with that is what it does",
    "start": "322560",
    "end": "330479"
  },
  {
    "text": "and what i would like to do is to try and pull these apart as far as possible",
    "start": "330479",
    "end": "336160"
  },
  {
    "text": "there's a concept in audio engineering called the signal to noise ratio",
    "start": "336160",
    "end": "341600"
  },
  {
    "text": "that is the ratio of the thing you were trying to listen to to the background noise the thing you're trying to listen",
    "start": "341600",
    "end": "347360"
  },
  {
    "text": "to is the album or whatever the voice the background noise is the hiss on a cassette or the rumble on a record or",
    "start": "347360",
    "end": "354639"
  },
  {
    "text": "the album on a justin bieber album the thing you don't want to listen to",
    "start": "354639",
    "end": "360080"
  },
  {
    "text": "so so how can we how can we achieve this how can we separate out the signal and",
    "start": "360080",
    "end": "366880"
  },
  {
    "text": "the noise so part one looking just at the the micro level just at the smallest point",
    "start": "366880",
    "end": "373199"
  },
  {
    "start": "368000",
    "end": "502000"
  },
  {
    "text": "possible what does this do you got five seconds no",
    "start": "373199",
    "end": "379120"
  },
  {
    "text": "there's a lot of noise in there there's a lot of noise now as it happens this is going to a configuration file it is",
    "start": "379120",
    "end": "385600"
  },
  {
    "text": "trying to parse in the value into something rational uh it is applying a default",
    "start": "385600",
    "end": "390880"
  },
  {
    "text": "that's an awful lot of stuff that's an awful lot of lines of code if i wanted to add in an extra setting that is going",
    "start": "390880",
    "end": "396080"
  },
  {
    "text": "to be one two three four four about five extra lines every single time this does not scale up well and anyone who's never run into this for",
    "start": "396080",
    "end": "402880"
  },
  {
    "text": "a while before they're gonna have to spend a bit of time staring at this to work out what it does",
    "start": "402880",
    "end": "408639"
  },
  {
    "text": "so i could throw in a um extension method like this now is everyone good with extension methods",
    "start": "408639",
    "end": "414800"
  },
  {
    "text": "good going to be a tough talk for you otherwise so this is a nice simple little extension",
    "start": "414800",
    "end": "420319"
  },
  {
    "text": "method and what is it doing is attaching to a string and saying give me a default",
    "start": "420319",
    "end": "425759"
  },
  {
    "text": "then doing the check to see is it null or not doing a tripod or not as appropriate depending on what it is and",
    "start": "425759",
    "end": "431199"
  },
  {
    "text": "return either the default or this you could also have a version with no default asked for and just return",
    "start": "431199",
    "end": "437680"
  },
  {
    "text": "default yourself depending on what you're trying to do but the point is it turns it into this",
    "start": "437680",
    "end": "443280"
  },
  {
    "text": "so what's that do same thing but you could look at that and understand that in five seconds most likely and how many",
    "start": "443280",
    "end": "449520"
  },
  {
    "text": "lines of new code do you have to add in if you want to add a new rule one sort of technically none because it's",
    "start": "449520",
    "end": "455360"
  },
  {
    "text": "all one line of code but sorter but the point is even your manager could look at that and roughly understand what",
    "start": "455360",
    "end": "461280"
  },
  {
    "text": "it does anyone pretty much could look at that and even understand that it's not doing what it's supposed to do if someone's",
    "start": "461280",
    "end": "467440"
  },
  {
    "text": "put the wrong default in it's really simple and it reads somewhere close to natural",
    "start": "467440",
    "end": "473199"
  },
  {
    "text": "language which is great it's easy to maintain and all we did was put in a little extension method to hide away all",
    "start": "473199",
    "end": "479599"
  },
  {
    "text": "of that tedious boilerplate now extension methods get a bad rep but i'm",
    "start": "479599",
    "end": "486080"
  },
  {
    "text": "going to introduce my um commandments of extension method or when",
    "start": "486080",
    "end": "492560"
  },
  {
    "text": "i say commandments as always it depends what you're trying to do but this is roughly my guidelines for",
    "start": "492560",
    "end": "498879"
  },
  {
    "text": "when it's good to use extension methods and you should no business logic",
    "start": "498879",
    "end": "504479"
  },
  {
    "start": "502000",
    "end": "712000"
  },
  {
    "text": "business logic is the most important part of any application that is what the app is trying to do that should be right",
    "start": "504479",
    "end": "511039"
  },
  {
    "text": "up at the front that should be where everyone could see it that should be screaming out the first thing you open the code base do not put",
    "start": "511039",
    "end": "517279"
  },
  {
    "text": "business logic into extension methods i have seen people do this it is the road to disaster",
    "start": "517279",
    "end": "523279"
  },
  {
    "text": "the extension method is equivalent of code that is like the snuff action figure from thundercats do you remember",
    "start": "523279",
    "end": "529600"
  },
  {
    "text": "thundercats yeah so you have it you own it you don't want to get rid of it you also don't want to",
    "start": "529600",
    "end": "535360"
  },
  {
    "text": "show anyone you've got it so you just sort of pop it in a box at the back of the code base",
    "start": "535360",
    "end": "540480"
  },
  {
    "text": "and it can exist but no one needs to know that's extension methods that's what goes in them that sort of code",
    "start": "540480",
    "end": "547440"
  },
  {
    "text": "keep them compact i generally try to keep them online occasionally i have to write more than one mostly i write them",
    "start": "547440",
    "end": "553200"
  },
  {
    "text": "to one i keep them as small as possible discreet tiny units of functionality",
    "start": "553200",
    "end": "558640"
  },
  {
    "text": "works best that way if you start putting too much in these things well then you've got a potentially dangerous bit of code that's doing far",
    "start": "558640",
    "end": "565200"
  },
  {
    "text": "too much at the back of your code base that no one can see keep them generic apply them wherever possible to everything wherever i can i",
    "start": "565200",
    "end": "572240"
  },
  {
    "text": "apply them with t's as in generics so they literally apply to everything i do that as much as i can",
    "start": "572240",
    "end": "578720"
  },
  {
    "text": "keep them portable by which i mean you should be able to take this box of extension methods and drop them into any project in your entire code base",
    "start": "578720",
    "end": "585920"
  },
  {
    "text": "we don't have a new get server at work at the moment but we're working on it and this is probably the sort of thing that's going to go in our nuget server",
    "start": "585920",
    "end": "592560"
  },
  {
    "text": "something that potentially then that could be consumed by all of our apple applications across the estate so they can all benefit",
    "start": "592560",
    "end": "599760"
  },
  {
    "text": "and use them just wherever there's boring repetitive code get rid of the code structure and hide it in these",
    "start": "599760",
    "end": "605519"
  },
  {
    "text": "things because who really cares i don't i made them useful i was told i did this",
    "start": "605519",
    "end": "611440"
  },
  {
    "text": "talk once some years ago and someone told me that they've made an extension method called is true",
    "start": "611440",
    "end": "617120"
  },
  {
    "text": "that is not useful it's interesting it's great that you took the time out to do that but it is not useful",
    "start": "617120",
    "end": "623440"
  },
  {
    "text": "so that's my rules couple more extension methods that i've",
    "start": "623440",
    "end": "629120"
  },
  {
    "text": "used once in a while this is for parsing if you use this you could potentially turn any string into an array of arrays",
    "start": "629120",
    "end": "635440"
  },
  {
    "text": "and never need to bother splitting that all out again and you just pass in the line splitter field splitter there we go",
    "start": "635440",
    "end": "641360"
  },
  {
    "text": "easy there's probably some extra bits and pieces you could put in there but it's the sort of thing you can do if you do it a lot",
    "start": "641360",
    "end": "648399"
  },
  {
    "text": "or if you find yourself doing an awful lot of checking against both empty and no just stick it in extension method it's kind of",
    "start": "648399",
    "end": "654640"
  },
  {
    "text": "a little bit of a rule of thumb with me once i start finding myself doing the same thing two or three times stick it in an extension method get rid of it i",
    "start": "654640",
    "end": "661440"
  },
  {
    "text": "don't really need to keep doing that it's more lines of code than i need to write",
    "start": "661440",
    "end": "667040"
  },
  {
    "text": "i kind of like this one i love dictionaries dictionaries is actually one of my favorite features in c sharp they're brilliant they have some",
    "start": "667040",
    "end": "672640"
  },
  {
    "text": "terrible flaws but one of them is how tedious it is to make dictionaries you have to supply two different lambdas so",
    "start": "672640",
    "end": "679040"
  },
  {
    "text": "why not just make an extension ex uh just make it one single function call done if",
    "start": "679040",
    "end": "685440"
  },
  {
    "text": "it's a key value pair there's a fair bet that i know which is my key and which is my value so why am i needing to specify",
    "start": "685440",
    "end": "691600"
  },
  {
    "text": "this and there's some others you can do it with tuples you can do it with all this stuff so that's yeah",
    "start": "691600",
    "end": "698720"
  },
  {
    "text": "something else i've done once in a while make account dictionary so do a group buy and then use the dictionary to sort",
    "start": "698720",
    "end": "704079"
  },
  {
    "text": "by the key and then tape account so therefore you've got something you can easily shove into almost any um any report you care to write when you're",
    "start": "704079",
    "end": "710399"
  },
  {
    "text": "summarizing a whole data set anyway that's some random examples of the sorts of stuff",
    "start": "710399",
    "end": "716880"
  },
  {
    "start": "712000",
    "end": "1192000"
  },
  {
    "text": "moving on from tiny little micro line bits of noise let's move on to structural noise this is slightly larger stuff",
    "start": "716880",
    "end": "725440"
  },
  {
    "text": "this is something i used to do an awful lot when i worked for an american company so i am british and as such i",
    "start": "725600",
    "end": "732720"
  },
  {
    "text": "talk a lot about the weather that is a cliche it is mostly true we do we do um in the uk you can easily get",
    "start": "732720",
    "end": "738959"
  },
  {
    "text": "four different seasons in the same day such is our weather we get about as much",
    "start": "738959",
    "end": "744240"
  },
  {
    "text": "rain as everyone else it just sort of happens at random through the year so american my american colleagues would",
    "start": "744240",
    "end": "750560"
  },
  {
    "text": "say things like it's 100 outside now i'm not going to do the accent because like i can't and it'd be embarrassing but the",
    "start": "750560",
    "end": "755600"
  },
  {
    "text": "point is that uh i work in centigrade and 100 centigrade don't think oh my gosh that's the boiling point of water how are you all alive",
    "start": "755600",
    "end": "762320"
  },
  {
    "text": "but of course this is fahrenheit which is what i don't know is about 32 i don't know i don't really care but um",
    "start": "762320",
    "end": "769680"
  },
  {
    "text": "the conversion the conversion between fahrenheit and centigrade is multiplied by 9 divided by 5 plus add 32 course it",
    "start": "769680",
    "end": "775040"
  },
  {
    "text": "is of course it is and then convert it into a string when we're done and that's a lot of there's a lot of",
    "start": "775040",
    "end": "780720"
  },
  {
    "text": "wasted code there you've got these little temporary variables now i could turn this into one great big long line of course that would be lovely but then",
    "start": "780720",
    "end": "787360"
  },
  {
    "text": "it'd be unreadable um this is readable but i've had to waste all of these little local variables now imagine that this function",
    "start": "787360",
    "end": "793920"
  },
  {
    "text": "was a thousand lines long there and this was at the beginning well var a still in scope at the top sure that's just um",
    "start": "793920",
    "end": "800079"
  },
  {
    "text": "what is that's a decimal that's fine but imagine it was a complex object staying in scope all that time we're just",
    "start": "800079",
    "end": "805360"
  },
  {
    "text": "wasting space so how can you get rid of this best little extension method you never realized you needed this is map i've",
    "start": "805360",
    "end": "811920"
  },
  {
    "text": "heard this called all sorts of things but uh map is as good as anything for now and this attaches to t input which",
    "start": "811920",
    "end": "818399"
  },
  {
    "text": "is a generic so it's everything and we take in a function which converts input to output and it gives out every",
    "start": "818399",
    "end": "825440"
  },
  {
    "text": "so whatever it is take your input shove it in the function pull it out again",
    "start": "825440",
    "end": "831199"
  },
  {
    "text": "pass it on it looks like this there we go all those local variables gone",
    "start": "831199",
    "end": "838160"
  },
  {
    "text": "and there are some further benefits through this which i haven't got the time to talk about now if you get into",
    "start": "838160",
    "end": "843600"
  },
  {
    "text": "functional programming this is a structure called a monad and there's all sorts of funky things you can do inside this map to uh to save",
    "start": "843600",
    "end": "850560"
  },
  {
    "text": "yourself errors and all sorts but for now this is nice and compact we can kind of ignore the map because",
    "start": "850560",
    "end": "856079"
  },
  {
    "text": "it's it's just the same thing there and uh we've saved ourselves all those local variables plus we could turn the whole",
    "start": "856079",
    "end": "861120"
  },
  {
    "text": "function into an arrow function now which means we are discouraging anyone from ever adding a whole ton of useless",
    "start": "861120",
    "end": "867199"
  },
  {
    "text": "functionality into this thing i like my functions to say small to the point and accurate to whatever the heck they're",
    "start": "867199",
    "end": "872800"
  },
  {
    "text": "called i don't like to encourage people to start adding new stuff in",
    "start": "872800",
    "end": "878079"
  },
  {
    "text": "by the way this is how you might um also do some logging in the middle of that stream this is a tee you just do it like",
    "start": "878079",
    "end": "884160"
  },
  {
    "text": "that there you go stick an action in the middle now you can log if you want so that is just going to log whatever that value is there which why would i do that",
    "start": "884160",
    "end": "890959"
  },
  {
    "text": "but you can you get the idea how about this is another situation where there's a whole load of tedious",
    "start": "890959",
    "end": "897199"
  },
  {
    "text": "boilerplate to be written pre-pending i don't know why i want to do this but i want to do this so i'm going to say hello to whomever whomever i've just",
    "start": "897199",
    "end": "903680"
  },
  {
    "text": "gotten the date from the database and i'm going to call two people the first appears to be the devil so that will",
    "start": "903680",
    "end": "909199"
  },
  {
    "text": "give him value and presumably say hello whatever his name is stephen and then the other is 616. uh the",
    "start": "909199",
    "end": "916079"
  },
  {
    "text": "neighbor of the devil what's his name i don't know george so but the point is 616 returns a null and",
    "start": "916079",
    "end": "922800"
  },
  {
    "text": "we're trying to pre-pend and pass in a null now what happens when you do this",
    "start": "922800",
    "end": "928079"
  },
  {
    "text": "explosion now you could add in a whole load of boilerplate noise like this where we're",
    "start": "928079",
    "end": "934959"
  },
  {
    "text": "checking against default and then deciding whether we've done d and all we've done is turn this lovely",
    "start": "934959",
    "end": "940720"
  },
  {
    "text": "elegant little function into something which has got flipping tons of extra lines that just exist to protect us from",
    "start": "940720",
    "end": "946240"
  },
  {
    "text": "death or stick in another extension method like this now the the equality comparer",
    "start": "946240",
    "end": "951680"
  },
  {
    "text": "there looks terrifying it is just the generic version of checking against null because not everything actually in a",
    "start": "951680",
    "end": "958240"
  },
  {
    "text": "generic necessarily defaults to null integers don't booleans don't you get the idea",
    "start": "958240",
    "end": "965120"
  },
  {
    "text": "and this is just doing that null check for us so there we go potentially never need to do another null check again all of that is now",
    "start": "965360",
    "end": "971199"
  },
  {
    "text": "wrapped inside that functionality if i call this do not if not null then um",
    "start": "971199",
    "end": "977279"
  },
  {
    "text": "that's descriptive it says what it does and then whatever's inside will only be executed if it's",
    "start": "977279",
    "end": "983199"
  },
  {
    "text": "safe to do so super duper there's all sorts of other ways of doing that i'm keeping it relatively simple in",
    "start": "983199",
    "end": "989120"
  },
  {
    "text": "this talk dictionaries like i said one of my favorite things i love them i love how",
    "start": "989120",
    "end": "994720"
  },
  {
    "text": "they love the quick look up i love the lovely elegant syntax uh and as anyone who is into the same tv",
    "start": "994720",
    "end": "1001759"
  },
  {
    "text": "series i am might have noticed i am also into the tv series doctor who i don't know whether we have doctor who",
    "start": "1001759",
    "end": "1006959"
  },
  {
    "text": "here uh if anyone's unfamiliar yeah it's the best tv series in the whole world it",
    "start": "1006959",
    "end": "1012560"
  },
  {
    "text": "actually is it's in the dictionary if you look it up anyone says otherwise so i'm going to do a look up here to see",
    "start": "1012560",
    "end": "1020079"
  },
  {
    "text": "uh to get myself a list of some doctors so if i got dr juan out of this function",
    "start": "1020079",
    "end": "1025360"
  },
  {
    "text": "we'll get back william hartnell the boss and if i put in a hundred because it hasn't been yet there will be there will",
    "start": "1025360",
    "end": "1031120"
  },
  {
    "text": "be uh but if they looked into 100 and he put that into dictionary anyone know what happens if you put",
    "start": "1031120",
    "end": "1036400"
  },
  {
    "text": "a look up in a dictionary which is not a key that it currently holds in or no",
    "start": "1036400",
    "end": "1043279"
  },
  {
    "text": "sorry exception explodes why that's ridiculous but there you go it's",
    "start": "1043439",
    "end": "1049440"
  },
  {
    "text": "what it does fine what can we do about this well this is my solution this for me is",
    "start": "1049440",
    "end": "1055600"
  },
  {
    "text": "how you make dictionaries useful again because i don't like the explode if not found thing that causes defensive",
    "start": "1055600",
    "end": "1062000"
  },
  {
    "text": "boilerplate to be written and i don't like that it's boring so what i'm doing here is using a funk",
    "start": "1062000",
    "end": "1069520"
  },
  {
    "text": "now uh as a filter so i'm not actually returning a value",
    "start": "1069520",
    "end": "1074559"
  },
  {
    "text": "out of this extension method i'm returning a funk and the funk is a filter it's a filter that says you asked",
    "start": "1074559",
    "end": "1080320"
  },
  {
    "text": "me what you want i'm going to go away into the dictionary have a look if it's not there i'll tell you and if it's there i'll tell i'll pull it back",
    "start": "1080320",
    "end": "1086799"
  },
  {
    "text": "and that's it we don't need to worry anymore about having to do the null checks ourselves because this guy will",
    "start": "1086799",
    "end": "1092000"
  },
  {
    "text": "do it for us it's the filter that stops us from doing the thing that would cause the explosion",
    "start": "1092000",
    "end": "1098480"
  },
  {
    "text": "all it means is that you have to uh now the the actual lookup is now a funk",
    "start": "1098480",
    "end": "1104000"
  },
  {
    "text": "and we use curly brake we now use the curved brackets instead of the square ones other than that it's still a",
    "start": "1104000",
    "end": "1109600"
  },
  {
    "text": "dictionary for as long as this func remains in scope the dictionary remains in scope",
    "start": "1109600",
    "end": "1116160"
  },
  {
    "text": "so that's good that's pretty good so now we get a don't know back if we tried to ask for doctor 100 that's great that's",
    "start": "1116160",
    "end": "1123039"
  },
  {
    "text": "wonderful but we could still do better so i am going to",
    "start": "1123039",
    "end": "1128960"
  },
  {
    "text": "imagine i want to get a whole set of doctors now for some arbitrary reason i want to get the first third and fifth i",
    "start": "1128960",
    "end": "1134400"
  },
  {
    "text": "don't know why i want to do that but for the purposes of this explanation that's what i want great",
    "start": "1134400",
    "end": "1139679"
  },
  {
    "text": "and i could create my array and i could call uh dd.getdoctor three times with a one or three and a five",
    "start": "1139679",
    "end": "1145360"
  },
  {
    "text": "now there's still an awful lot of boilerplate there we can do better than this",
    "start": "1145360",
    "end": "1150559"
  },
  {
    "text": "so there we go we could have an indexer let's cut down some of it indexes are good a little static function well",
    "start": "1150559",
    "end": "1156559"
  },
  {
    "text": "that's static but there are little functions there there we go that syntax is much nicer isn't it it's not bad but did you know",
    "start": "1156559",
    "end": "1163360"
  },
  {
    "text": "did you know you could put params inside um and index it because you can now have oh is that there we go have a",
    "start": "1163360",
    "end": "1170320"
  },
  {
    "text": "look at that that is functionally identical to the first one if i put params inside the",
    "start": "1170320",
    "end": "1176640"
  },
  {
    "text": "index i just literally call the uh call the object and go one three five there inside that's it",
    "start": "1176640",
    "end": "1181919"
  },
  {
    "text": "it does all three lookups for you in fact we're doing them in a select so we're still getting the benefits of using link",
    "start": "1181919",
    "end": "1187760"
  },
  {
    "text": "that's awesome and that's an awful lot less code than uh the first version",
    "start": "1187760",
    "end": "1194160"
  },
  {
    "start": "1192000",
    "end": "1509000"
  },
  {
    "text": "okay this is one of my pet hates i'm hoping none of you are doing it but until i see",
    "start": "1194160",
    "end": "1199280"
  },
  {
    "text": "people stop doing this i'm going to carry on doing this so we're going to write ourselves a",
    "start": "1199280",
    "end": "1204960"
  },
  {
    "text": "function which is going to go away and grab some data generate a report",
    "start": "1204960",
    "end": "1210480"
  },
  {
    "text": "transmit the data or maybe make a transmission if uh if there's no data there great let's unit test this thing",
    "start": "1210480",
    "end": "1216880"
  },
  {
    "text": "because we're good people so positive test we can put some data in yeah those lines of code are covered",
    "start": "1216880",
    "end": "1223600"
  },
  {
    "text": "we'll do a negative test there was no data that lines covered we'll do uh some exception testing",
    "start": "1223600",
    "end": "1229760"
  },
  {
    "text": "that's good great we've got 100 unit test coverage this is marvelous so we are pretty solid on our function",
    "start": "1229760",
    "end": "1237679"
  },
  {
    "text": "but then there is a rumbling on the ground you look down at your coffee you notice like that scene of jurassic park",
    "start": "1237679",
    "end": "1243600"
  },
  {
    "text": "that it's quivering like this and you look up and notice your unusually tall boss towering over you",
    "start": "1243600",
    "end": "1251039"
  },
  {
    "text": "and asking you for prop 2 to be made into a function well what's the easiest way to do this",
    "start": "1251039",
    "end": "1257840"
  },
  {
    "text": "yeah good this video works time there we go copy",
    "start": "1257840",
    "end": "1263760"
  },
  {
    "text": "and ah so easy",
    "start": "1263760",
    "end": "1270080"
  },
  {
    "text": "yeah feels good done it is that the best way to do this",
    "start": "1270960",
    "end": "1278159"
  },
  {
    "text": "well yeah sure it's easy it's quick but then what about prop 3 what about prop 4 what about 105 you know",
    "start": "1278159",
    "end": "1286799"
  },
  {
    "text": "i worked in an application many years ago for an awfully important company who i'm not allowed to talk about but it's a",
    "start": "1286799",
    "end": "1293600"
  },
  {
    "text": "lot less interesting than it sounds trust me but anyway they had a rule base that had to be",
    "start": "1293600",
    "end": "1298720"
  },
  {
    "text": "created every year and every single year they took the old rule base it was quite a long rule base and there'd be a couple",
    "start": "1298720",
    "end": "1304799"
  },
  {
    "text": "of subtle changes but they had to maintain each rule base simultaneously so we'll just copy the old one paste it",
    "start": "1304799",
    "end": "1310720"
  },
  {
    "text": "into the new one maintain this alongside it make a couple of changes and then maintain it there's about 20 30 of these",
    "start": "1310720",
    "end": "1316840"
  },
  {
    "text": "things and then i had to look at this and i said hang on there's a whole lot of bugs in this one",
    "start": "1316840",
    "end": "1322400"
  },
  {
    "text": "okay that's the latest one i just noticed all these bugs let's have a look at the one before that's got all the same",
    "start": "1322400",
    "end": "1328400"
  },
  {
    "text": "oh okay uh i had to go and edit a whole load of",
    "start": "1328400",
    "end": "1333679"
  },
  {
    "text": "years all at the same time because everyone had just trusted the folks before them to have done a good job and",
    "start": "1333679",
    "end": "1339200"
  },
  {
    "text": "they just replicated the same bugs again and again and again and again so that copy and paste job maybe didn't",
    "start": "1339200",
    "end": "1345600"
  },
  {
    "text": "save you quite as much as you thought that's a lot of lines of code to maintain simultaneously and what if",
    "start": "1345600",
    "end": "1350880"
  },
  {
    "text": "someone comes up with a really super duper clever idea one day and you're gonna apply it to all of them i",
    "start": "1350880",
    "end": "1356799"
  },
  {
    "text": "don't think so so i don't know what the proper term is for this i call them donut functions",
    "start": "1356799",
    "end": "1361919"
  },
  {
    "text": "this is my solution turn that guy into a private",
    "start": "1361919",
    "end": "1369440"
  },
  {
    "text": "which is not a rank in the army pass in a funk",
    "start": "1369440",
    "end": "1375039"
  },
  {
    "text": "which turns you someday to whatever that is i see a selector that's telling you which field now it could be an end time assuming they're all in they don't have",
    "start": "1375039",
    "end": "1381200"
  },
  {
    "text": "to be and then just apply it there so basically i'm using the funk as a whole",
    "start": "1381200",
    "end": "1387120"
  },
  {
    "text": "in the middle of the function to apply the bit that's different",
    "start": "1387120",
    "end": "1392159"
  },
  {
    "text": "and i can do that every time i can make that as complicated as you like you can pass in many funks if you like but the point is",
    "start": "1392159",
    "end": "1398000"
  },
  {
    "text": "i'm only ever writing one and i'm using the funk to fill in the blank",
    "start": "1398000",
    "end": "1403520"
  },
  {
    "text": "easy i can now write as many um as many of these functions as you like and they're literally just lambda",
    "start": "1403520",
    "end": "1409200"
  },
  {
    "text": "expressions every single time if someone finds a bug in the root function everyone benefits",
    "start": "1409200",
    "end": "1416480"
  },
  {
    "text": "and to be honest if it were me i probably wouldn't even bother to um to expose pro one and prop two separate",
    "start": "1416480",
    "end": "1423440"
  },
  {
    "text": "functions like this i might even consider just literally generate average report and then just expose the lambda",
    "start": "1423440",
    "end": "1429600"
  },
  {
    "text": "out why not saves a whole load more time but it depends as always what you're trying to do but the point is funk see",
    "start": "1429600",
    "end": "1435360"
  },
  {
    "text": "your friends there we go that's that's just in case the video didn't",
    "start": "1435360",
    "end": "1440720"
  },
  {
    "text": "work another place i use this is things like i know i'm not the biggest fan of entity framework it is a bit like getting a",
    "start": "1440720",
    "end": "1447840"
  },
  {
    "text": "great big old sledgehammer to crack a nut but um it has a load of boilerplate that if you",
    "start": "1447840",
    "end": "1453279"
  },
  {
    "text": "don't follow you can end up with some terrible problems and amongst them make now",
    "start": "1453279",
    "end": "1459200"
  },
  {
    "text": "that's a terrible idea don't do that i didn't realize i'd left that in that don't do that",
    "start": "1459200",
    "end": "1464400"
  },
  {
    "text": "uh but anyway the point is that you want to put a using around your data store you want to call it two array at the end",
    "start": "1464400",
    "end": "1469919"
  },
  {
    "text": "don't call two lists you want to call the two array at the end uh otherwise you're exposing out stuff that really",
    "start": "1469919",
    "end": "1475279"
  },
  {
    "text": "shouldn't be seen outside of the guts of your database layer you could do all of this with um sorry",
    "start": "1475279",
    "end": "1481279"
  },
  {
    "text": "that by passing in i queryables just write a func i queryable to my queryable",
    "start": "1481279",
    "end": "1486480"
  },
  {
    "text": "you can expose that out and then for the time that this funk runs",
    "start": "1486480",
    "end": "1491840"
  },
  {
    "text": "it'll run here and then for the ter within this funk you're basically exposing the query to",
    "start": "1491840",
    "end": "1497679"
  },
  {
    "text": "be whatever that's where people can write their great big long link queries to query the database and then two",
    "start": "1497679",
    "end": "1502799"
  },
  {
    "text": "arrays automatically called by the method at the end so you can be sure that whatever comes out of it should be",
    "start": "1502799",
    "end": "1508000"
  },
  {
    "text": "safe anti-funny so",
    "start": "1508000",
    "end": "1515039"
  },
  {
    "start": "1509000",
    "end": "1564000"
  },
  {
    "text": "this is another sort of thing that we might do quite a lot validation functions so i am validating your username",
    "start": "1515039",
    "end": "1523760"
  },
  {
    "text": "there's a set of rules that i've arbitrarily decided on because of course it can't be empty he can't be uh shorter",
    "start": "1523760",
    "end": "1529440"
  },
  {
    "text": "than two or longer than twenty it can't be just in bieber because it can't now my daughters are six and eight",
    "start": "1529440",
    "end": "1535440"
  },
  {
    "text": "thankfully they have not yet discovered much of an interest in him and i am doing my best",
    "start": "1535440",
    "end": "1542559"
  },
  {
    "text": "um i i told my youngest that uh kate bush is cool because she has the same name as you that's cool seems to have worked",
    "start": "1542559",
    "end": "1549200"
  },
  {
    "text": "don't tell her okay but anyway same repeated functionality again and again early",
    "start": "1549200",
    "end": "1555360"
  },
  {
    "text": "returns false early return false and then a final return true how can we wrap all of this into a structure that we can",
    "start": "1555360",
    "end": "1561279"
  },
  {
    "text": "reuse and chuck the boilerplate in the bin like this that's an all that's a link method",
    "start": "1561279",
    "end": "1568480"
  },
  {
    "start": "1564000",
    "end": "1710000"
  },
  {
    "text": "link is absolutely one of the great greatest inventions ever in c sharp um along with dictionaries and record",
    "start": "1568480",
    "end": "1575840"
  },
  {
    "text": "types but that's a talk for another time and the all goes through every item in",
    "start": "1575840",
    "end": "1580880"
  },
  {
    "text": "the array and every it asks for a funk which has to",
    "start": "1580880",
    "end": "1586000"
  },
  {
    "text": "evaluate to boolean and every single one of these booleans must evaluate to true if any of them don't then just cancel",
    "start": "1586000",
    "end": "1592880"
  },
  {
    "text": "the whole thing out and return early with a false which is exactly the structure of what we just did so you",
    "start": "1592880",
    "end": "1598320"
  },
  {
    "text": "could just write this there we go isn't that an awful lot nicer to look at",
    "start": "1598320",
    "end": "1603840"
  },
  {
    "text": "a couple of benefits it's really concise it's easy to read again you could show",
    "start": "1603840",
    "end": "1609520"
  },
  {
    "text": "this to an awful lot of people who are not terribly technical and they probably underst they might not know what this means but it doesn't really matter",
    "start": "1609520",
    "end": "1614960"
  },
  {
    "text": "because all they're really interested in is this you could even hide it if you wanted to in a little local function or",
    "start": "1614960",
    "end": "1620559"
  },
  {
    "text": "something just to give it a friendly name that would be fine but you get the idea and once again it",
    "start": "1620559",
    "end": "1626159"
  },
  {
    "text": "stops anyone from putting more into this function and really belongs to them there because i do not like long functions",
    "start": "1626159",
    "end": "1634158"
  },
  {
    "text": "is another example this is another way of doing my conversion from uh fahrenheit celsius you could",
    "start": "1634880",
    "end": "1641440"
  },
  {
    "text": "stick an aggregate now if anyone knows aggregate but aggregate seems to be one of those great unknown features of c sharp it's brilliant",
    "start": "1641440",
    "end": "1647760"
  },
  {
    "text": "um but it just basically does the same sort of principle as my map you you start with",
    "start": "1647760",
    "end": "1653279"
  },
  {
    "text": "something and just do a series of conversions here's the running total here's what we're doing with the current item just keep changing the current item",
    "start": "1653279",
    "end": "1660240"
  },
  {
    "text": "to the new running total again and again and again but basically what you get out of it is this same basic idea and now we can do away",
    "start": "1660240",
    "end": "1667200"
  },
  {
    "text": "with the maps if we like so this again is um saving us an awful lot",
    "start": "1667200",
    "end": "1672559"
  },
  {
    "text": "of effort did you know you could also put um",
    "start": "1672559",
    "end": "1678320"
  },
  {
    "text": "yeah so this is a what you call a factory we're looking at types and generating the child type well did",
    "start": "1678320",
    "end": "1685840"
  },
  {
    "text": "you know that you can also put types as the keys of a dictionary because you can so you could do stuff like this",
    "start": "1685840",
    "end": "1692080"
  },
  {
    "text": "you could switch in a dictionary based on type now come to think of it this is probably a little update if using c sharp eight",
    "start": "1692080",
    "end": "1698320"
  },
  {
    "text": "you've probably got better things you can do now but this slide was written before those sorts of stuff uh those new",
    "start": "1698320",
    "end": "1703440"
  },
  {
    "text": "features with the new pattern matching were brought in so but still this option is available to you and look i look at",
    "start": "1703440",
    "end": "1708799"
  },
  {
    "text": "the default again look at that right being lazy with innumerables i like innumerables",
    "start": "1708799",
    "end": "1715120"
  },
  {
    "text": "too any rewards are like me because they're lazy and innumerable is not data that's the",
    "start": "1715120",
    "end": "1721440"
  },
  {
    "text": "most important thing to know about an enumerable it is not data it is a pointer to data all the numerable is is",
    "start": "1721440",
    "end": "1727440"
  },
  {
    "text": "a little box that says that way and that's all an enumerable is",
    "start": "1727440",
    "end": "1733039"
  },
  {
    "text": "and it's got two buttons one that says spit out the current one and the other one that says move to the next one",
    "start": "1733039",
    "end": "1739200"
  },
  {
    "text": "numeral don't even know how many there are all it knows is this one next one",
    "start": "1739200",
    "end": "1745120"
  },
  {
    "text": "and that's cool if you wait as long as possible with actually evaluating your",
    "start": "1745120",
    "end": "1750320"
  },
  {
    "text": "innumerable into something solid like an array then it remains unenumerated",
    "start": "1750320",
    "end": "1757440"
  },
  {
    "text": "so this is so this is this is what our numerable looks like now i am aware i'm not very good at drawing",
    "start": "1757440",
    "end": "1764000"
  },
  {
    "text": "i do my best but still i've improved but um all it is pointing at is like now",
    "start": "1764000",
    "end": "1769600"
  },
  {
    "text": "imagine that we wanted to amend this array but without actually enumerating it now",
    "start": "1769600",
    "end": "1775840"
  },
  {
    "text": "this is trivial this is just like i could make those cars if i wanted it does not matter but imagine that each",
    "start": "1775840",
    "end": "1781679"
  },
  {
    "text": "one of these was a giant complex object maybe it's an entity framework lookup it could be something massive and it could",
    "start": "1781679",
    "end": "1788000"
  },
  {
    "text": "be an ex rather than just being simply moved to the next item in array it could be an expensive operation that has to be",
    "start": "1788000",
    "end": "1793760"
  },
  {
    "text": "performed or if that's the case amending that requires you to",
    "start": "1793760",
    "end": "1798880"
  },
  {
    "text": "force it to become a concrete object do whatever those operations are just in order to change the third item and then",
    "start": "1798880",
    "end": "1804799"
  },
  {
    "text": "what if you don't need it later where you've just defeated all the benefits you got from your lazy loading",
    "start": "1804799",
    "end": "1809840"
  },
  {
    "text": "so this is a way of amending an array without actually amending it",
    "start": "1809840",
    "end": "1814720"
  },
  {
    "text": "still there we go yep so we're pointing out we could what am i",
    "start": "1816880",
    "end": "1822799"
  },
  {
    "text": "doing here right there we go like this",
    "start": "1822799",
    "end": "1829120"
  },
  {
    "text": "i call it adjust and again it's kind of like a filter it's a filter that sits between the enumerable",
    "start": "1829120",
    "end": "1835039"
  },
  {
    "text": "and so you've got your new bubble that you're looking at and the one on the actual solid data on the other side and",
    "start": "1835039",
    "end": "1840720"
  },
  {
    "text": "i've stuck this structure in the middle and this structure is a select now select returns an enumerable so select",
    "start": "1840720",
    "end": "1845919"
  },
  {
    "text": "does not actually evaluate to anything until we've actually enumerated it so by adding this select in the middle like",
    "start": "1845919",
    "end": "1851679"
  },
  {
    "text": "this we're again using a func like a filter and saying here are some conditions",
    "start": "1851679",
    "end": "1858159"
  },
  {
    "text": "under which we should think about replacing the current item and should we do the replacement or not",
    "start": "1858159",
    "end": "1864880"
  },
  {
    "text": "now it sounds like you're doing a whole load of stuff all at the same time but you're not you're not a select only evaluates when you need it",
    "start": "1864880",
    "end": "1870880"
  },
  {
    "text": "so if you do for example select then select then select then select those don't actually execute in the",
    "start": "1870880",
    "end": "1877039"
  },
  {
    "text": "order you think they don't go do all of the stuff in this one and then do all the stuff in that one they actually go",
    "start": "1877039",
    "end": "1882480"
  },
  {
    "text": "one two three four like that so you can call it like this with your",
    "start": "1882480",
    "end": "1889279"
  },
  {
    "text": "numerals in the middle but it's not actually doing anything so when i call array a",
    "start": "1889279",
    "end": "1896320"
  },
  {
    "text": "there we go that's an array now array b there right now if the compiler was on this",
    "start": "1896320",
    "end": "1901519"
  },
  {
    "text": "line right here array a hasn't changed nothing's been done literally nothing has been done all",
    "start": "1901519",
    "end": "1907200"
  },
  {
    "text": "you've done is define an operation that you might want to do sometime in the future same here when we go here still nothing",
    "start": "1907200",
    "end": "1914880"
  },
  {
    "text": "done but what i've done is put in a description of the sort of changes i want to do in",
    "start": "1914880",
    "end": "1920399"
  },
  {
    "text": "the future now when you actually try and enumerate c what you'll find is it will actually",
    "start": "1920399",
    "end": "1925600"
  },
  {
    "text": "say okay this says go to b i'll go here this says go to a i'll go here grab that go here go here okay no adjustments to",
    "start": "1925600",
    "end": "1932960"
  },
  {
    "text": "be made i'll just return you an a then and that's how that works",
    "start": "1932960",
    "end": "1938480"
  },
  {
    "text": "i wouldn't do but these guys that's just a car but again if it's important that you try and reduce the amount of um",
    "start": "1938480",
    "end": "1945600"
  },
  {
    "text": "array enumeration of the enumerable that you're doing this isn't a technique you can use",
    "start": "1945600",
    "end": "1952080"
  },
  {
    "text": "there you go has it in a rather badly drawn diagram so imagine it is a series of filters",
    "start": "1952080",
    "end": "1957200"
  },
  {
    "text": "each call to adjust is like sticking a filter between the enumerator and the uh the final array at the end",
    "start": "1957200",
    "end": "1964960"
  },
  {
    "text": "another thing you can do this is goodness me they're on to me run",
    "start": "1965200",
    "end": "1971279"
  },
  {
    "text": "right what if i wanted to check for contains consecutive numbers that is one num a number that's one higher than the",
    "start": "1971360",
    "end": "1977200"
  },
  {
    "text": "other spoiler there's one so yeah you can't actually compare innumerable",
    "start": "1977200",
    "end": "1984640"
  },
  {
    "text": "the same um items that are consecutive can't be done you can do that uh if you converted it",
    "start": "1984640",
    "end": "1990960"
  },
  {
    "text": "to an array but once again then you've busted your uh you've enumerated and as such you've",
    "start": "1990960",
    "end": "1996720"
  },
  {
    "text": "lost your lady lazy loading benefits so",
    "start": "1996720",
    "end": "2002480"
  },
  {
    "text": "the way that you can do that is you can crack open the numerable because this is the engine that runs underneath the innumerable",
    "start": "2002480",
    "end": "2009200"
  },
  {
    "text": "oh good to me i needed that okay underneath an enumerable is something called a numerator and the enumerator is",
    "start": "2009440",
    "end": "2016399"
  },
  {
    "text": "that thing with the two buttons on it this is the thing that actually drives the innumerable if you crack this open",
    "start": "2016399",
    "end": "2021840"
  },
  {
    "text": "you can make an enumerable which behaves in any manner that you want you want it to every single iteration return the",
    "start": "2021840",
    "end": "2027600"
  },
  {
    "text": "same item twice sure do it that's how you do it you can make an innumerable behave any way that you want",
    "start": "2027600",
    "end": "2033200"
  },
  {
    "text": "now what i'm doing is is creating an extension method i'll call any but this time i've got a funk which i'm passing",
    "start": "2033200",
    "end": "2039120"
  },
  {
    "text": "in which is t t bull um that is the current item the previous",
    "start": "2039120",
    "end": "2045760"
  },
  {
    "text": "item are they the same or not and this is how you use an enumerator",
    "start": "2045760",
    "end": "2052158"
  },
  {
    "text": "move next is the thing that says go to the next one now an enumerator starts at position minus one",
    "start": "2052159",
    "end": "2059040"
  },
  {
    "text": "so by default if you try and call current which is to get the current item out of any numerator when you haven't",
    "start": "2059040",
    "end": "2064638"
  },
  {
    "text": "started you'll just get an error it'll be null so you have to move next move next returns true",
    "start": "2064639",
    "end": "2070480"
  },
  {
    "text": "if there is another item or false if there's no further items so what this is saying is take my",
    "start": "2070480",
    "end": "2076800"
  },
  {
    "text": "enumerable move next that is go from position minus one to position naught",
    "start": "2076800",
    "end": "2082560"
  },
  {
    "text": "and then um call my n e which is to say pass in this which is the enumerable",
    "start": "2082560",
    "end": "2087839"
  },
  {
    "text": "just pass it around or the enumerator sorry pass in the functioner again and this.current so i am moving to position",
    "start": "2087839",
    "end": "2095520"
  },
  {
    "text": "naught taking current and then passing into the next step bear with me",
    "start": "2095520",
    "end": "2101119"
  },
  {
    "text": "and this is my actual thing this is the actual function that's doing that check against consecutive",
    "start": "2101119",
    "end": "2106400"
  },
  {
    "text": "once again we're saying move next so we've all ready to pulled out the first item we've got it",
    "start": "2106400",
    "end": "2112000"
  },
  {
    "text": "in this hand we've popped it there that's current we're going to move next again so we're now at position one",
    "start": "2112000",
    "end": "2117359"
  },
  {
    "text": "and then we're going to say run the function i've got position naught in this hand i've got position one here pop",
    "start": "2117359",
    "end": "2122560"
  },
  {
    "text": "them into the function are they true well great they will return true done otherwise",
    "start": "2122560",
    "end": "2128640"
  },
  {
    "text": "we'll call ourselves again this is a recursive function but this time i am taking the current item and passing it",
    "start": "2128640",
    "end": "2134800"
  },
  {
    "text": "in as if it were the previous so what we're doing is sort of juggling like this going",
    "start": "2134800",
    "end": "2139920"
  },
  {
    "text": "past the current back to be the next previous and eventually if there's no more out of move next then we just",
    "start": "2139920",
    "end": "2145760"
  },
  {
    "text": "return false oh that was terribly complicated but it looks like this",
    "start": "2145760",
    "end": "2151920"
  },
  {
    "text": "all it's doing is compare the previous item with the next and we can run through every single item",
    "start": "2151920",
    "end": "2157839"
  },
  {
    "text": "in there and check with any of them where the was it y equals x plus one they come",
    "start": "2157839",
    "end": "2163440"
  },
  {
    "text": "there probably needs to be a master apps in there to be honest if i were being really accurate with this but it's fine it'll do",
    "start": "2163440",
    "end": "2170320"
  },
  {
    "start": "2169000",
    "end": "2552000"
  },
  {
    "text": "attributing how we're doing no we're doing fine i'm doing fine today good stuff excellent so",
    "start": "2170320",
    "end": "2176160"
  },
  {
    "text": "to return back to doctor who because i generally do as a warning if you ever see me again i will talk about it at",
    "start": "2176160",
    "end": "2182320"
  },
  {
    "text": "length uh just try asking my opinion of season 13 it ain't weren't good but anyway",
    "start": "2182320",
    "end": "2188720"
  },
  {
    "text": "some episode data for doctor who this is a csv and we want to parse this into a",
    "start": "2188720",
    "end": "2194000"
  },
  {
    "text": "data structure because i don't know we're running a report or something whatever and this is based on i think season 12 as it happens those are the",
    "start": "2194000",
    "end": "2200800"
  },
  {
    "text": "episodes the titles blah blah fine no worries can write ourselves a quick little parser no trouble at all",
    "start": "2200800",
    "end": "2208000"
  },
  {
    "text": "hunt me i can pass this around maybe generate a csv maybe generate report it doesn't matter but the point is fine but",
    "start": "2208000",
    "end": "2214240"
  },
  {
    "text": "then we look at the data for season 11 and we'll see that is subtly different you see there",
    "start": "2214240",
    "end": "2220480"
  },
  {
    "text": "that's the number of the episode within the season that's the number of that same number",
    "start": "2220480",
    "end": "2227119"
  },
  {
    "text": "but this is the number of the story number of doctor who overall counting all the way back to the first",
    "start": "2227119",
    "end": "2233599"
  },
  {
    "text": "episode in 1963 because i don't know they must have been using a different data structure that year",
    "start": "2233599",
    "end": "2239440"
  },
  {
    "text": "this is a silly made-up example but i'm sure we can all think of similar things where the data structure has changed",
    "start": "2239440",
    "end": "2244480"
  },
  {
    "text": "over time but we have to deal with this so sure we could there's all sorts of ways of dealing with this here's the",
    "start": "2244480",
    "end": "2249920"
  },
  {
    "text": "super simple one yeah you could copy and paste the function but don't do that um but this is one way you could use a",
    "start": "2249920",
    "end": "2256480"
  },
  {
    "text": "dictionary and you could use a dictionary which is going to get you a funk out of it that's a method nothing",
    "start": "2256480",
    "end": "2262560"
  },
  {
    "text": "wrong with that i would be proud enough of that so store all the different converter functions inside the dictionary use an",
    "start": "2262560",
    "end": "2269280"
  },
  {
    "text": "enum to say which season is it and then get yourself the correct converter and then feed that into something that's fine nothing wrong with that",
    "start": "2269280",
    "end": "2276000"
  },
  {
    "text": "we could do better could do better uh yeah that's that's my parser that's how",
    "start": "2276000",
    "end": "2282480"
  },
  {
    "text": "i'd use it so yeah split on now it's always environment new line we're using commas to split on the field so but what",
    "start": "2282480",
    "end": "2288640"
  },
  {
    "text": "if that and then just pass in the converters so there you go past the season into the converters easy",
    "start": "2288640",
    "end": "2295920"
  },
  {
    "text": "but we could go better we could look at attributes attributes is one of those awesome",
    "start": "2296800",
    "end": "2302240"
  },
  {
    "text": "features that no one seems to use very much but attributes are pretty cool attributes are tags that you can apply",
    "start": "2302240",
    "end": "2308000"
  },
  {
    "text": "to code if you've ever used mvc you've probably seen attributes it uses them quite a lot and you can make your own",
    "start": "2308000",
    "end": "2314000"
  },
  {
    "text": "and it is literally as easy as that there you go i've made myself an attribute",
    "start": "2314000",
    "end": "2319119"
  },
  {
    "text": "and all you have to do is tell it what data you want to pass into that so there we go look at that",
    "start": "2319119",
    "end": "2327280"
  },
  {
    "text": "what i can do is create an abstract of episode data to say that uh there's the title the season",
    "start": "2327280",
    "end": "2333280"
  },
  {
    "text": "number episode and so on and then i could use attributes to say which position within the csv are they",
    "start": "2333280",
    "end": "2340480"
  },
  {
    "text": "here's the season 11 data which is actual instance of episode data and i'm saying the season number is applied",
    "start": "2340480",
    "end": "2345920"
  },
  {
    "text": "there in the tag at the top so that's an integer that i can use to pass into things and",
    "start": "2345920",
    "end": "2351359"
  },
  {
    "text": "then i can say the csv here is in position one and down here the title is now in",
    "start": "2351359",
    "end": "2356400"
  },
  {
    "text": "position two in the season 12 data there we go we just have to write ourselves one super duper complicated",
    "start": "2356400",
    "end": "2361520"
  },
  {
    "text": "function to do this you only do it once it can look a bit like this i'm not",
    "start": "2361520",
    "end": "2367200"
  },
  {
    "text": "going to dwell too much on it because frankly it's ugly but you only have to do it once",
    "start": "2367200",
    "end": "2372480"
  },
  {
    "text": "that's the simple one that's just the getting the season number the attribute off the uh the classes getting attribute of class is quite easy",
    "start": "2372480",
    "end": "2379040"
  },
  {
    "text": "you just pretty much do it like that and you can go there we go",
    "start": "2379040",
    "end": "2384880"
  },
  {
    "text": "getting the attributes off a property a lot harder looks like that that's",
    "start": "2384880",
    "end": "2391440"
  },
  {
    "text": "pretty flipping ugly not gonna lie but there you go that's how you do it in case you're curious i had to go all the",
    "start": "2391440",
    "end": "2396880"
  },
  {
    "text": "way down to breaking funks into expressions fine i did it i flippin did it",
    "start": "2396880",
    "end": "2404400"
  },
  {
    "text": "it's using some reflection too so if um one of your overriding concerns of your",
    "start": "2404400",
    "end": "2409920"
  },
  {
    "text": "business is performance this probably isn't the very best but honestly 99.9 percent of us are never gonna",
    "start": "2409920",
    "end": "2416800"
  },
  {
    "text": "notice and whenever people come to me we say well that's not real that's not the optimum performance that's yeah the",
    "start": "2416800",
    "end": "2424160"
  },
  {
    "text": "thing is what costs more about two weeks of your time or one",
    "start": "2424160",
    "end": "2429280"
  },
  {
    "text": "round trip i'm gonna bet the ram chip's a lot cheaper so just sure and especially these days",
    "start": "2429280",
    "end": "2436400"
  },
  {
    "text": "when we're all going zuri and cloudy and awse and so on someone just has to go to a computer press a button there we go",
    "start": "2436400",
    "end": "2442560"
  },
  {
    "text": "it's running faster now so is it really",
    "start": "2442560",
    "end": "2448000"
  },
  {
    "text": "and that's that's how i'd use it so yeah again it's not the uh not the prettiest of",
    "start": "2448160",
    "end": "2453280"
  },
  {
    "text": "code but what it means is i've written a single generic episode parser",
    "start": "2453280",
    "end": "2460319"
  },
  {
    "text": "which can have a dynamic property used with in an attribute to",
    "start": "2460319",
    "end": "2467520"
  },
  {
    "text": "determine what is the season number where in the csv can i find the title",
    "start": "2467520",
    "end": "2472960"
  },
  {
    "text": "and now the number of episodes is hard-coded there which it's not strictly true but we'll go to",
    "start": "2472960",
    "end": "2478160"
  },
  {
    "text": "that another day and then where's the writer which is just x3 but oh my goodness we've got more",
    "start": "2478160",
    "end": "2483920"
  },
  {
    "text": "complicated stuff when we start going into old data what if um the writer was in different places there",
    "start": "2483920",
    "end": "2489359"
  },
  {
    "text": "we go we could just add in season 10 then we've got a couple of different csv positions but it's just the same basic",
    "start": "2489359",
    "end": "2494400"
  },
  {
    "text": "idea even if older data does go and rearrange the fields we just use the csv position",
    "start": "2494400",
    "end": "2500079"
  },
  {
    "text": "attribute again easy every single time we get the data in a slightly different format we can handle",
    "start": "2500079",
    "end": "2506000"
  },
  {
    "text": "it and this is just passing integers around you can pass anything into an attribute you can pass a function to an attribute",
    "start": "2506000",
    "end": "2511680"
  },
  {
    "text": "if you really want to there's all sorts of things you can do i wouldn't do that though but um yeah whatever you need in there you can",
    "start": "2511680",
    "end": "2517760"
  },
  {
    "text": "pop it in it's not a problem you put the line delimiter in there what if the really old data doesn't even use",
    "start": "2517760",
    "end": "2525200"
  },
  {
    "text": "uh commas and new lines there you go you can just put it in the attribute",
    "start": "2525200",
    "end": "2530240"
  },
  {
    "text": "right so your entire of your um your entire of your season 10 parser",
    "start": "2530240",
    "end": "2536880"
  },
  {
    "text": "class consists of two properties and a load of attributes you could tell the boss i spent all day",
    "start": "2536880",
    "end": "2543200"
  },
  {
    "text": "on this i'm just you know so like flipping overworked and uh go watch um for",
    "start": "2543200",
    "end": "2549839"
  },
  {
    "text": "stranger things fall for a bit i didn't say that right that's it that that worked out pretty",
    "start": "2549839",
    "end": "2556240"
  },
  {
    "text": "well any questions at this point this is anybody",
    "start": "2556240",
    "end": "2561599"
  },
  {
    "text": "going once going twice okie dokie i'm hoping that you're so oh",
    "start": "2561599",
    "end": "2568800"
  },
  {
    "text": "sir readability sir",
    "start": "2568800",
    "end": "2574079"
  },
  {
    "text": "yes",
    "start": "2574079",
    "end": "2577079"
  },
  {
    "text": "as in uh so forgive me so are you meaning like um so like my little parsing attribute thing getting a new",
    "start": "2590800",
    "end": "2597280"
  },
  {
    "text": "user like say one of our office juniors to come in and look at that it's a good question yep so the question is looking",
    "start": "2597280",
    "end": "2603200"
  },
  {
    "text": "at that like attribute parsing thing that was an ugly bit of code not gonna lie what about your your junior members who",
    "start": "2603200",
    "end": "2610000"
  },
  {
    "text": "are still learning c sharp and how they're gonna cope with i would argue that they don't need to",
    "start": "2610000",
    "end": "2616079"
  },
  {
    "text": "look at it i would argue that your your young your junior members of staff mostly we're not going to give them that",
    "start": "2616079",
    "end": "2622160"
  },
  {
    "text": "sort of level of task at least at first that's something they're going to build up to we'd probably ask them to do that",
    "start": "2622160",
    "end": "2629359"
  },
  {
    "text": "and they don't need to understand how it works this is the beauty of these sorts of bits of code we can hide away all the",
    "start": "2629359",
    "end": "2635760"
  },
  {
    "text": "complexity and they don't really need to know how it's working under the surface because who cares really",
    "start": "2635760",
    "end": "2643280"
  },
  {
    "text": "if all that the the task was simply go and write like the um the season two",
    "start": "2643280",
    "end": "2648560"
  },
  {
    "text": "parser and there's a couple of differences they've got enough skill to do this uh as long as there's no new attributes",
    "start": "2648560",
    "end": "2654880"
  },
  {
    "text": "in there but uh if we've written this thing well enough it should handle anything so i would argue that uh sorry",
    "start": "2654880",
    "end": "2662359"
  },
  {
    "text": "where am i going to work you said i'm getting a new job where should i work can i work with you",
    "start": "2668319",
    "end": "2676119"
  },
  {
    "text": "sure i mean that's that's where you need a more senior member of staff to potentially although if you've been a",
    "start": "2685680",
    "end": "2690720"
  },
  {
    "text": "good boy and you've unit tested it you've got that at least hopefully so you i would never say do not write unit",
    "start": "2690720",
    "end": "2697040"
  },
  {
    "text": "testing for extension method you should or at least by usage if nothing else so you've got your unit test i mean i",
    "start": "2697040",
    "end": "2703920"
  },
  {
    "text": "probably could have written it a bit more sort of split out and a bit more logical than i did but i was just doing",
    "start": "2703920",
    "end": "2708960"
  },
  {
    "text": "it for demonstration purposes i'm not really necessarily going to throw that into production i'd probably put",
    "start": "2708960",
    "end": "2714480"
  },
  {
    "text": "now i'm big into functional programming so i'd probably let a lot of other data structures in there that would do some other stuff but again that's a talk for",
    "start": "2714480",
    "end": "2720160"
  },
  {
    "text": "another day but um yeah i would probably try and write it a little more split out a",
    "start": "2720160",
    "end": "2725200"
  },
  {
    "text": "little bit more logical but still mostly i would stand by my argument that um",
    "start": "2725200",
    "end": "2730640"
  },
  {
    "text": "someone new is probably just going to use the surface level and as they grow within the company they'll start then",
    "start": "2730640",
    "end": "2736160"
  },
  {
    "text": "moving into the deeper levels of and probably any reasonably competent engineer could probably pull apart what",
    "start": "2736160",
    "end": "2741440"
  },
  {
    "text": "i did it was i didn't do anything really crazy in that uh that attribute parsing thing that was mostly based on examples on the",
    "start": "2741440",
    "end": "2748560"
  },
  {
    "text": "microsoft website and how to mess with with attributes it is a bit ugly though it's just the way it is as soon as you start messing with reflection things can",
    "start": "2748560",
    "end": "2754960"
  },
  {
    "text": "get pretty nasty pretty quick which is why i use it sparingly but it depends as",
    "start": "2754960",
    "end": "2760079"
  },
  {
    "text": "always what you're trying to do so i hope that answers your uh no",
    "start": "2760079",
    "end": "2765119"
  },
  {
    "text": "any more for any more sir you mentioned that you should not put the business logic",
    "start": "2765119",
    "end": "2772839"
  },
  {
    "text": "yes okay so the question is why should you not put business logic into extension",
    "start": "2772839",
    "end": "2779119"
  },
  {
    "text": "methods one second sorry oh my throat feels like there is a cactus in it",
    "start": "2779119",
    "end": "2785920"
  },
  {
    "text": "right that's better um so reason being extension methods exist",
    "start": "2785920",
    "end": "2791359"
  },
  {
    "text": "to hide things that is their purpose they exist to make things go away",
    "start": "2791359",
    "end": "2797040"
  },
  {
    "text": "and by i put things in extension methods that i don't want to see things that are unsightly or tedious",
    "start": "2797040",
    "end": "2804400"
  },
  {
    "text": "business logic is the most important part of your code base there is nothing in your code base more important",
    "start": "2804400",
    "end": "2811520"
  },
  {
    "text": "than the basically the code that tells people what this code does that should",
    "start": "2811520",
    "end": "2816720"
  },
  {
    "text": "be right at the front that should be where everyone can see it i have worked in a company where some",
    "start": "2816720",
    "end": "2822880"
  },
  {
    "text": "crucial business logic was hidden in an extension method i didn't even notice it was there for ages i just saw like you",
    "start": "2822880",
    "end": "2829760"
  },
  {
    "text": "know line one it does this line two it does like line three it just went crazy what",
    "start": "2829760",
    "end": "2834880"
  },
  {
    "text": "and it took me a while of staring to realize there was an extension method that they'd added in because the beauty of extension methods is they're they're",
    "start": "2834880",
    "end": "2841520"
  },
  {
    "text": "invisible really they don't you won't necessarily even realize their extension methods they're a way of hiding stuff",
    "start": "2841520",
    "end": "2847839"
  },
  {
    "text": "i think they're brilliant i think they have their uses and the best thing you can do with them is basically just like sweeping dust",
    "start": "2847839",
    "end": "2854480"
  },
  {
    "text": "under the rug you know it's like it's a way of getting rid of stuff you don't want to see but you shouldn't hide business logic that's important",
    "start": "2854480",
    "end": "2862800"
  },
  {
    "text": "if the business come to you and say we want to adjust the business logic you want to know like that where is it i",
    "start": "2862800",
    "end": "2868480"
  },
  {
    "text": "know where the business logic is there i will change it and adjust it i don't want to be hunting around my code base",
    "start": "2868480",
    "end": "2874319"
  },
  {
    "text": "trying to work out where on earth it is i have i've worked some pretty awful places or it was hard to find",
    "start": "2874319",
    "end": "2880079"
  },
  {
    "text": "where the logic was and it turned development efforts that should have taken an hour or two into",
    "start": "2880079",
    "end": "2885839"
  },
  {
    "text": "weeks of work because it was unclear where the important code was",
    "start": "2885839",
    "end": "2891520"
  },
  {
    "text": "um so i hope that is yeah any more for any more",
    "start": "2891520",
    "end": "2897319"
  },
  {
    "text": "the gentleman's point was that uh you might put something in an extension method that would be something you'd expect microsoft to do in the future",
    "start": "2911200",
    "end": "2917119"
  },
  {
    "text": "sure i'd love for them to i would love for them to flip and change the way dictionaries work um i don't there's anyone from microsoft",
    "start": "2917119",
    "end": "2923280"
  },
  {
    "text": "here but if there is i'll i'll say that to write to them because i love dictionaries but that explode if not",
    "start": "2923280",
    "end": "2928880"
  },
  {
    "text": "found thing is ridiculous but i agree with you yeah i mean a lot of the stuff that i've put in there i would love to see that go into micro",
    "start": "2928880",
    "end": "2934480"
  },
  {
    "text": "into dot net at some point um so yeah good point um but",
    "start": "2934480",
    "end": "2940800"
  },
  {
    "text": "i would probably try and keep to that sort of level i wouldn't put anything specific to my business in an extension like that in",
    "start": "2940800",
    "end": "2946559"
  },
  {
    "text": "any even if it's a bit of sort of even if it's not literally business logic even if it's just a little bit of logical branching that's unique to my",
    "start": "2946559",
    "end": "2952480"
  },
  {
    "text": "business i still wouldn't put it in extension method that's too distinctive to us i'd only ever write an extension method i could literally throw anywhere",
    "start": "2952480",
    "end": "2958880"
  },
  {
    "text": "in the world so sure i i agree with your point um anymore we've still got another 10",
    "start": "2958880",
    "end": "2964720"
  },
  {
    "text": "minutes once going twice",
    "start": "2964720",
    "end": "2970480"
  },
  {
    "text": "okay well thank you very much and also um if anyone's interested there's my twitter again no this isn't my twitter i",
    "start": "2970480",
    "end": "2977280"
  },
  {
    "text": "am writing a book for o'reilly if anyone is interested this is on functional programming if you scan this thing here",
    "start": "2977280",
    "end": "2983520"
  },
  {
    "text": "o'reilly will give you a month free on their platform it's awfully nice of them so feel free please it doesn't cost me",
    "start": "2983520",
    "end": "2989359"
  },
  {
    "text": "anything so go for it why not if also if anybody is willing to spare a",
    "start": "2989359",
    "end": "2995280"
  },
  {
    "text": "little time we are looking for proof readers for my book uh i'm running about four or five chapters at the moment so if anyone has",
    "start": "2995280",
    "end": "3001520"
  },
  {
    "text": "any free time and is willing to give a few review comments i'd be awfully grateful come have a chat with me send me a message or whatever",
    "start": "3001520",
    "end": "3007280"
  },
  {
    "text": "um but other than that thank you very much",
    "start": "3007280",
    "end": "3012760"
  },
  {
    "text": "oh",
    "start": "3022000",
    "end": "3025000"
  }
]