[
  {
    "text": "so my name is Andy Davis I work for a",
    "start": "2120",
    "end": "7859"
  },
  {
    "text": "company called Lynde off providing their payment solution so if you've ever bought something online and you've got",
    "start": "7859",
    "end": "14790"
  },
  {
    "text": "the option to pay with an invoice or with an installment it's probably provided by us I decided to do a service",
    "start": "14790",
    "end": "24390"
  },
  {
    "text": "events or slack loan partially because it's got lots of buzzwords in it so I get people to come and partially because",
    "start": "24390",
    "end": "30749"
  },
  {
    "text": "I wanted to learn more about AWS I use some parts of it very well other parts",
    "start": "30749",
    "end": "36750"
  },
  {
    "text": "of it I haven't really used so mostly a learning exercise and how various areas work usually I've used ec2 and quite a",
    "start": "36750",
    "end": "48750"
  },
  {
    "text": "lot of s3 usage that's primarily what I use in a de Bresse and a little bit of",
    "start": "48750",
    "end": "54210"
  },
  {
    "text": "lambda usage but I wanted to try and build something with a constraint of not having anything that wasn't serverless",
    "start": "54210",
    "end": "61230"
  },
  {
    "text": "despite running on servers then aiming a nicely but hey as you can get and I've",
    "start": "61230",
    "end": "67950"
  },
  {
    "text": "mentioned a lot this is going to be a dabbler space but the principles of usage and some of the tooling will apply to other cloud providers and my actual",
    "start": "67950",
    "end": "79020"
  },
  {
    "text": "product I decided on was a chat app because you know everyone like slack and",
    "start": "79020",
    "end": "84300"
  },
  {
    "text": "chat apps are simple right one of those",
    "start": "84300",
    "end": "89550"
  },
  {
    "text": "problems that the more you look at it the more not simple it can be which obviously gets into the first",
    "start": "89550",
    "end": "95790"
  },
  {
    "text": "hardest part in Salford arm which is analysis paralysis sat there for weeks going now do I do this or this or this",
    "start": "95790",
    "end": "101490"
  },
  {
    "text": "and then later breast comes in and goes no you can't do that so yeah issues everywhere so for the first audience",
    "start": "101490",
    "end": "109860"
  },
  {
    "text": "interaction who here has heard of terraform and hands up like for people a",
    "start": "109860",
    "end": "115770"
  },
  {
    "text": "few so for those of you who haven't heard of it it's a tool for scripting",
    "start": "115770",
    "end": "122640"
  },
  {
    "text": "your cloud infrastructure it works on a Tobias obviously and as your and other",
    "start": "122640",
    "end": "130170"
  },
  {
    "text": "cloud providers if there are any others",
    "start": "130170",
    "end": "135500"
  },
  {
    "text": "the only downside to terraform is company toe support is not there yet",
    "start": "136300",
    "end": "141970"
  },
  {
    "text": "we'll get into what cognitivism why that's annoying later but that's a it's",
    "start": "141970",
    "end": "148330"
  },
  {
    "text": "only drawback that I have if you want really thorough in-depth talks under how",
    "start": "148330",
    "end": "153520"
  },
  {
    "text": "to use terraform I will have some examples but there are a lot of great talks by Paul stack and James Nugent you",
    "start": "153520",
    "end": "159850"
  },
  {
    "text": "can go and look at online from previous NDC's that are great that's how I picked it up yeah not Pablito so this is what a",
    "start": "159850",
    "end": "173709"
  },
  {
    "text": "terraform file can look like this is our variables file so we put common",
    "start": "173709",
    "end": "179200"
  },
  {
    "text": "information in here in this case we've got we cater breast region we want to use by default a name of a bucket that",
    "start": "179200",
    "end": "187299"
  },
  {
    "text": "we're going to use crow bar incidentally as the name of my app because lambdas crowbar half-life entered the stealing",
    "start": "187299",
    "end": "194440"
  },
  {
    "text": "of the half-life 2 logo and the final interesting part in this one is the data",
    "start": "194440",
    "end": "201310"
  },
  {
    "text": "attribute at the bottom this will fetch your Amazon account ID when it is called",
    "start": "201310",
    "end": "206970"
  },
  {
    "text": "so you don't have to hard code that number into your into a terraform file anyway which I have been doing for quite",
    "start": "206970",
    "end": "213790"
  },
  {
    "text": "a long time and every time I've had hard code the number not liked it because everything else like your actual",
    "start": "213790",
    "end": "219760"
  },
  {
    "text": "credentials are stored on your machine so they don't enter your source control but here's an account ID in your source",
    "start": "219760",
    "end": "226150"
  },
  {
    "text": "control and I don't like that so after I found out how to use this ADA bus caller identity that problem goes away to",
    "start": "226150",
    "end": "235390"
  },
  {
    "text": "actually set up a resource in AWS with terraform is fairly simple this looks",
    "start": "235390",
    "end": "241959"
  },
  {
    "text": "like Jason it's hashey corpse configuration language which is a superset of Jason I think I think they",
    "start": "241959",
    "end": "248620"
  },
  {
    "text": "support there's some relation with Jason anyway you don't have to put commas in and semicolons so this resource controls",
    "start": "248620",
    "end": "258039"
  },
  {
    "text": "a bucket it gives it a name and make to public readable nice and simple",
    "start": "258039",
    "end": "264210"
  },
  {
    "text": "unfortunately not everything is simple for instance this is how you created an",
    "start": "264710",
    "end": "270090"
  },
  {
    "text": "iron policy an iron policy this particular policy is what I use for all",
    "start": "270090",
    "end": "277110"
  },
  {
    "text": "my lambdas so that when they're activated by various when they're executing they have access to various",
    "start": "277110",
    "end": "283620"
  },
  {
    "text": "other resources such as cloud watch if you give them access to cloud watch",
    "start": "283620",
    "end": "289770"
  },
  {
    "text": "whenever you do a console log statement in a lambda it'll appear in cloud watch this makes the bugging much easier and",
    "start": "289770",
    "end": "296310"
  },
  {
    "text": "once you find out that that's the permission you've been missing which took me a long time then everything gets",
    "start": "296310",
    "end": "302520"
  },
  {
    "text": "a lot easier no devouring consoling everyone go oh you're all your logs would just appear in in cloud watch and",
    "start": "302520",
    "end": "308940"
  },
  {
    "text": "they don't if you haven't got that permission but there's no we're saying the reason they haven't appeared in our watch is because you're missing your",
    "start": "308940",
    "end": "314760"
  },
  {
    "text": "permission the template file mentioned",
    "start": "314760",
    "end": "320430"
  },
  {
    "text": "at the top of this is because policies in AWS parlance said written in JSON",
    "start": "320430",
    "end": "327300"
  },
  {
    "text": "files this is the same JSON that you access through the UI the only difference here is I'm using a",
    "start": "327300",
    "end": "333420"
  },
  {
    "text": "replacement field so that I can put my bucket name in without having to hard code it in multiple places so that's a",
    "start": "333420",
    "end": "341550"
  },
  {
    "text": "brief overview of how you use terraform we'll have some more examples for the Darracq various areas of a degrace as we",
    "start": "341550",
    "end": "348930"
  },
  {
    "text": "go through so onto my fantastic UI",
    "start": "348930",
    "end": "354030"
  },
  {
    "text": "skills which are non-existent this is the UI for my chat app it's written",
    "start": "354030",
    "end": "362520"
  },
  {
    "text": "using react Redux and uses bootstrap and loop strap material UI because someone",
    "start": "362520",
    "end": "369390"
  },
  {
    "text": "else has worked out how to make pretty you eyes and I don't have to because I normally do back-end engineering rather than front-end stuff as this year line",
    "start": "369390",
    "end": "376110"
  },
  {
    "text": "shows all I'm allowing my users to do for this is create channels send",
    "start": "376110",
    "end": "381780"
  },
  {
    "text": "messages and that's pretty much it",
    "start": "381780",
    "end": "386870"
  },
  {
    "text": "but despite only having a few functions we hit a lot of different areas of AWS",
    "start": "386870",
    "end": "392940"
  },
  {
    "text": "which I've never used before",
    "start": "392940",
    "end": "397070"
  },
  {
    "text": "so to host a website in s3 terraform again so as before we have an s3 bucket",
    "start": "398540",
    "end": "406620"
  },
  {
    "text": "setup the only difference this time hopefully this will work",
    "start": "406620",
    "end": "412730"
  },
  {
    "text": "okay thanks Simon Brown for this pointer the only difference here is we've got a",
    "start": "413630",
    "end": "419640"
  },
  {
    "text": "policy of public read and a website configuration setup this means that your",
    "start": "419640",
    "end": "425550"
  },
  {
    "text": "bucket gets a name which is unique to the whole of or has to be unique within",
    "start": "425550",
    "end": "430740"
  },
  {
    "text": "an entire AWG so you can't just create a bucket called admin because someone else",
    "start": "430740",
    "end": "435930"
  },
  {
    "text": "is probably got a static website called admin already so if I wanted to call my bucket crowbar the likelihood is well",
    "start": "435930",
    "end": "443460"
  },
  {
    "text": "one I tried applying it once at the time someone had a public website called crowbar already so that was annoying and",
    "start": "443460",
    "end": "450480"
  },
  {
    "text": "I didn't think I don't think it was me in the end I think it was actually someone else by using s3 for our website",
    "start": "450480",
    "end": "459620"
  },
  {
    "text": "we get a highly available front-end s3 is very scalable and almost never goes",
    "start": "459620",
    "end": "466350"
  },
  {
    "text": "down and we also end up with a slight limit of routing has to be hash based",
    "start": "466350",
    "end": "473010"
  },
  {
    "text": "you can't use your L routing in an s3 bucket because they have to actually be",
    "start": "473010",
    "end": "478500"
  },
  {
    "text": "documents it becomes a path segment in the bucket name which means you have to",
    "start": "478500",
    "end": "484260"
  },
  {
    "text": "set up Redux and react Reuter and react trigger with hash routing and get all the right versions which is a pain and",
    "start": "484260",
    "end": "490160"
  },
  {
    "text": "well it took me weeks to get it right and if I upload when I upload the curve this if I decide not to squash and I get",
    "start": "490160",
    "end": "496470"
  },
  {
    "text": "commit history you will see how long it took me to get routing working and how many times I had to go back to it when",
    "start": "496470",
    "end": "502770"
  },
  {
    "text": "it turned out it wasn't working but I thought it was so yeah out of everything the hardest two parts are setting up",
    "start": "502770",
    "end": "508890"
  },
  {
    "text": "iron permissions and raging at react but after everything gets easy mmm",
    "start": "508890",
    "end": "518990"
  },
  {
    "text": "this is our policy for the s3 bucket pretty much the same as before except",
    "start": "518990",
    "end": "524370"
  },
  {
    "text": "we're allowing anyone to read this object and they can only ever fetch doctor in the bucket we don't want anyone to be",
    "start": "524370",
    "end": "530970"
  },
  {
    "text": "able to post replacement index.html page to our website that would cause bad",
    "start": "530970",
    "end": "536730"
  },
  {
    "text": "things to happen the actual architecture of this system comes down to a set of",
    "start": "536730",
    "end": "547350"
  },
  {
    "text": "commands that you issue from your UI registering a user creating a channel",
    "start": "547350",
    "end": "552480"
  },
  {
    "text": "joining sending messages leaving channels this is why I thought it was a",
    "start": "552480",
    "end": "557580"
  },
  {
    "text": "simple problem to start with because although it's just a couple of messages I mean you can just runs and projections of that and job done and it doesn't",
    "start": "557580",
    "end": "564360"
  },
  {
    "text": "quite work out that simple the first point is do you model this as one",
    "start": "564360",
    "end": "571730"
  },
  {
    "text": "aggregate that has all of these messages coming into it or do you model it as",
    "start": "571730",
    "end": "577410"
  },
  {
    "text": "multiple so say user aggregate and the channel aggregate and part of that comes",
    "start": "577410",
    "end": "583650"
  },
  {
    "text": "down to the decision of how you want to treat a channel so I had the option",
    "start": "583650",
    "end": "589740"
  },
  {
    "text": "early on of do you send a message to a channel or do you send a message and say",
    "start": "589740",
    "end": "596730"
  },
  {
    "text": "this message goes to these channels so more like a twitter hash tagging you could send a message and say hash",
    "start": "596730",
    "end": "602220"
  },
  {
    "text": "journal hash project1 and that changes",
    "start": "602220",
    "end": "607800"
  },
  {
    "text": "your design quite fundamentally up front in the end I decided as I'm building a",
    "start": "607800",
    "end": "613050"
  },
  {
    "text": "slight clone I should probably send messages to a channel rather than building Twitter in slack which would be",
    "start": "613050",
    "end": "619740"
  },
  {
    "text": "an interesting problem to start with anyway so initially I came up with the",
    "start": "619740",
    "end": "625800"
  },
  {
    "text": "idea of these two separate aggregates one for users one for channels the",
    "start": "625800",
    "end": "631470"
  },
  {
    "text": "downside I realized is that both aggregates care about some of the same messages which might be fine if",
    "start": "631470",
    "end": "638730"
  },
  {
    "text": "everything works well but what happens if you have a user and you say I'm going",
    "start": "638730",
    "end": "645210"
  },
  {
    "text": "to create a channel and the user occurs right that's fine you've created the channel I care about this so I've written it at this store and I've said",
    "start": "645210",
    "end": "651660"
  },
  {
    "text": "that you've done it and that's great but the channel aggregate receives the command sign character telling us was",
    "start": "651660",
    "end": "657150"
  },
  {
    "text": "already channel got this he can't do it now you've got to aggregates in different different",
    "start": "657150",
    "end": "662220"
  },
  {
    "text": "space I wasn't quite sure how to solve",
    "start": "662220",
    "end": "667590"
  },
  {
    "text": "this but wrote out my architecture anyway looking like this the first block",
    "start": "667590",
    "end": "677850"
  },
  {
    "text": "which is the the yellow is a an API gateway so this is Amazon's provider of",
    "start": "677850",
    "end": "684030"
  },
  {
    "text": "a restful or HTTP API and you can hook it up to lambda and all other kinds of",
    "start": "684030",
    "end": "689340"
  },
  {
    "text": "services and you get again highly available API that just scales so when a",
    "start": "689340",
    "end": "695940"
  },
  {
    "text": "command comes into this we store it in a command store dispatch it to all of our aggregates if they decide to do",
    "start": "695940",
    "end": "702540"
  },
  {
    "text": "something with that particular command then emit some events events go into their own event stores and projections",
    "start": "702540",
    "end": "709110"
  },
  {
    "text": "are triggered off which are addressed lambdas and write us some JSON views so",
    "start": "709110",
    "end": "714450"
  },
  {
    "text": "I'm using s3 for my my views because then I can just leave them as public and or authenticate is so valid logged in",
    "start": "714450",
    "end": "722970"
  },
  {
    "text": "users the only people that can see them and we can just pull them straight into the EUI itself this makes views almost free because",
    "start": "722970",
    "end": "731850"
  },
  {
    "text": "JSON objects are fairly small and highly available again so the the costing of",
    "start": "731850",
    "end": "737400"
  },
  {
    "text": "fetching a JSON object from s3 is minimal so I don't have to pipe it through API gateway and pay an API cost",
    "start": "737400",
    "end": "744120"
  },
  {
    "text": "or throw anything else the downside to",
    "start": "744120",
    "end": "752220"
  },
  {
    "text": "this I realized is a fairly complicated for a first implementation detail or",
    "start": "752220",
    "end": "758160"
  },
  {
    "text": "implementation and I have that problem with the aggregates not necessarily being in the same state so if we look at",
    "start": "758160",
    "end": "767310"
  },
  {
    "text": "how you might implement an aggregate in c-sharp both as anyone done event",
    "start": "767310",
    "end": "772680"
  },
  {
    "text": "sourcing in c-sharp before okay whew and",
    "start": "772680",
    "end": "778070"
  },
  {
    "text": "CQRS like the buzzword done it not done it right so in the case of this we have",
    "start": "778070",
    "end": "786780"
  },
  {
    "text": "a public join method public method called join passing a user will validate",
    "start": "786780",
    "end": "791940"
  },
  {
    "text": "that that's a valid thing to happen create our event and then call the",
    "start": "791940",
    "end": "797370"
  },
  {
    "text": "supply methods apply just stores the events in memory so when you call save on the area we write them to the event",
    "start": "797370",
    "end": "803070"
  },
  {
    "text": "store the handle method beneath gets cooled by the apply method so actually",
    "start": "803070",
    "end": "809850"
  },
  {
    "text": "does your state change and that is also called when you're reloading your",
    "start": "809850",
    "end": "815310"
  },
  {
    "text": "accurate so if you have multiple events to reload you to create a blank object and just say apply all of these events",
    "start": "815310",
    "end": "820980"
  },
  {
    "text": "in order and you get back a fully hydrated aggregate we also have",
    "start": "820980",
    "end": "827959"
  },
  {
    "text": "projections so aggregates can only have be loaded by their primary PI D which in",
    "start": "827959",
    "end": "834660"
  },
  {
    "text": "our cases are good but quite often we want to know summary information about",
    "start": "834660",
    "end": "839970"
  },
  {
    "text": "aggregates like what is a list of all the channels available who will be users in my system so we have an asynchronous",
    "start": "839970",
    "end": "847980"
  },
  {
    "text": "projection this sits outside of the the aggregate and when an event it comes to",
    "start": "847980",
    "end": "854190"
  },
  {
    "text": "that it cares about comes through in this case user join channel and channel created it does something and writes it",
    "start": "854190",
    "end": "861779"
  },
  {
    "text": "to of you i've list out the loss of the error handling type code and actual",
    "start": "861779",
    "end": "867510"
  },
  {
    "text": "writing to views because just are interested in the structure for the time being this is also using another view",
    "start": "867510",
    "end": "875730"
  },
  {
    "text": "because our user joined channel event only crates contains a user ID and the",
    "start": "875730",
    "end": "882270"
  },
  {
    "text": "channel ID we already know the channel because it's us that the user ID we want",
    "start": "882270",
    "end": "887850"
  },
  {
    "text": "to look up the current name of the user so we're introducing a coupling between to view to rather than the name of the",
    "start": "887850",
    "end": "895709"
  },
  {
    "text": "user at the timeless and the message we're showing the name of the user as it stands now this is great because you",
    "start": "895709",
    "end": "904949"
  },
  {
    "text": "don't want someone to be as a log into your chat system under one name say something really mean and then change",
    "start": "904949",
    "end": "910170"
  },
  {
    "text": "their name and it was now shelf as two different people saying things in the background they still be tied to the",
    "start": "910170",
    "end": "916140"
  },
  {
    "text": "same user ID but because it has the name different you could potentially hurt people's feelings with by you know",
    "start": "916140",
    "end": "922529"
  },
  {
    "text": "pretending to be someone else temple covering like this does have",
    "start": "922529",
    "end": "927660"
  },
  {
    "text": "issues but for the time being this is an acceptable trade-off for me because I want to show current user so if we take",
    "start": "927660",
    "end": "938399"
  },
  {
    "text": "our aggregate and our projection and I just crush them up a bit so they fit on screen just looks better on my monitor",
    "start": "938399",
    "end": "947810"
  },
  {
    "text": "yeah so now they fit on the screen but we can split this in that this works",
    "start": "947810",
    "end": "954810"
  },
  {
    "text": "fine for a completely server-side application but we could split it so",
    "start": "954810",
    "end": "961740"
  },
  {
    "text": "that on the client side our JavaScript will pray to command validate the",
    "start": "961740",
    "end": "968010"
  },
  {
    "text": "command useful and dispatch it internally the dispatch method is just calling one of these API go is gateways",
    "start": "968010",
    "end": "975209"
  },
  {
    "text": "in AWS on the server side we only need",
    "start": "975209",
    "end": "982170"
  },
  {
    "text": "to handle that we've received a command so we grab take the command that appeared store it somewhere and trigger",
    "start": "982170",
    "end": "988680"
  },
  {
    "text": "our aggregates and then asynchronously the aggregates run off creating our views and projections now you might",
    "start": "988680",
    "end": "997560"
  },
  {
    "text": "notice on using JavaScript on the server side as well as on the client side this is not in a particular love for node.js",
    "start": "997560",
    "end": "1004040"
  },
  {
    "text": "I have a love-hate relationship with JavaScript it's great and it's terrible",
    "start": "1004040",
    "end": "1009769"
  },
  {
    "text": "the reason I'm using on the server side is because response times I've found",
    "start": "1009769",
    "end": "1016160"
  },
  {
    "text": "that a c-sharp lambda doesn't have a consistent response time when you invoke",
    "start": "1016160",
    "end": "1021589"
  },
  {
    "text": "it from an API or maybe when you invoke it at all so this particular the middle",
    "start": "1021589",
    "end": "1028100"
  },
  {
    "text": "method for writing the command takes about 200 milliseconds for the",
    "start": "1028100",
    "end": "1033350"
  },
  {
    "text": "JavaScript version to run when I implemented the same thing in C share of the second run of it took 800",
    "start": "1033350",
    "end": "1040730"
  },
  {
    "text": "milliseconds as did the third and the fourth run the first run took 15 seconds and as he puts a timeout setting on each",
    "start": "1040730",
    "end": "1048500"
  },
  {
    "text": "lambda and it's normally I have it at about 3 seconds because that's a reasonably long time for a web request",
    "start": "1048500",
    "end": "1054620"
  },
  {
    "text": "if your first lambda doesn't finish then none of the subsequent ones will",
    "start": "1054620",
    "end": "1060270"
  },
  {
    "text": "finish because there each one is trying to I guess do some compilation in the background to killing the image around databases infrastructure but for",
    "start": "1060270",
    "end": "1068490"
  },
  {
    "text": "whatever reason c-sharp is a response handler for a web guy in native versus",
    "start": "1068490",
    "end": "1075810"
  },
  {
    "text": "not a good idea at the moment I guess is its new there'll be improvements to it",
    "start": "1075810",
    "end": "1080870"
  },
  {
    "text": "if you're doing something is computationally bound longer running lambdas where you've got a timeout of or",
    "start": "1080870",
    "end": "1087870"
  },
  {
    "text": "the maximum 300 seconds I think so if you have something that's taking a few minutes and computation bound then sure",
    "start": "1087870",
    "end": "1093840"
  },
  {
    "text": "a c-sharp version will be fine but for something you want low latency quick responses stick with the draft script",
    "start": "1093840",
    "end": "1101160"
  },
  {
    "text": "you can still write tests in JavaScript so hopefully it'll work",
    "start": "1101160",
    "end": "1106610"
  },
  {
    "text": "so our actual aggregate when implemented in in JavaScript on the server side",
    "start": "1112490",
    "end": "1120160"
  },
  {
    "text": "looks like this the joint channel method at the top this all gets called by the",
    "start": "1120160",
    "end": "1126290"
  },
  {
    "text": "command and I realize that I don't actually have a need logic as such need",
    "start": "1126290",
    "end": "1132020"
  },
  {
    "text": "to be done with my commands if I get a user join channel command comes through",
    "start": "1132020",
    "end": "1139240"
  },
  {
    "text": "if they're already in the channel that's fine it's an idempotent update we can just keep adding the use of the channel and",
    "start": "1139240",
    "end": "1145190"
  },
  {
    "text": "if they're already in there we're not going to do anything if they aren't in there we'll just add them and then I",
    "start": "1145190",
    "end": "1150650"
  },
  {
    "text": "looked at the sending of message source all each message has a unique identifier on it so if we get the same message",
    "start": "1150650",
    "end": "1155690"
  },
  {
    "text": "twice we'll just not do anything with it idempotent again so why bother our",
    "start": "1155690",
    "end": "1163760"
  },
  {
    "text": "command roughly looks like this we have a timestamp have an event ID which is",
    "start": "1163760",
    "end": "1168890"
  },
  {
    "text": "generated for each message that comes into the system we have a type and in",
    "start": "1168890",
    "end": "1174650"
  },
  {
    "text": "this case we have a user ID in the channel ID so this is joining a channel the event that comes out to the end of",
    "start": "1174650",
    "end": "1181520"
  },
  {
    "text": "this looks like this which is identical apart from the fact that the event has",
    "start": "1181520",
    "end": "1187700"
  },
  {
    "text": "gone from a command join the channel to a past tense event a user did join the",
    "start": "1187700",
    "end": "1193550"
  },
  {
    "text": "channel now so I don't have any logic that would ever say BAM a blocker user from joining a channel or from sending a",
    "start": "1193550",
    "end": "1201020"
  },
  {
    "text": "message it's assumed if you're signed up for my application you're allowed to send messages why bother with the",
    "start": "1201020",
    "end": "1206690"
  },
  {
    "text": "aggregates in the tool well in the first place why why not just use projections for everything so we can simplify our",
    "start": "1206690",
    "end": "1214700"
  },
  {
    "text": "architecture down to this in this case we just dispatched the events from the",
    "start": "1214700",
    "end": "1221360"
  },
  {
    "text": "client side rather than commands store them somewhere triple projections nice and simple good",
    "start": "1221360",
    "end": "1228170"
  },
  {
    "text": "first product if we need the commands and the aggregates and we decide later",
    "start": "1228170",
    "end": "1233540"
  },
  {
    "text": "on that there is logic we want to do for users joining channels maybe you want to prevent people from putting swear words",
    "start": "1233540",
    "end": "1239630"
  },
  {
    "text": "and their messages that kind of thing then we might need the efforts at which point we've got",
    "start": "1239630",
    "end": "1245460"
  },
  {
    "text": "the events stored and as the events were almost identical commands we can just replay them into a command store just",
    "start": "1245460",
    "end": "1252450"
  },
  {
    "text": "changing them back into commands and then run the whole system again and you should end up with the same state so",
    "start": "1252450",
    "end": "1259710"
  },
  {
    "text": "we've got a want to say future-proof architect architecture but we've at",
    "start": "1259710",
    "end": "1264809"
  },
  {
    "text": "least got a planned upgrade path now the",
    "start": "1264809",
    "end": "1271679"
  },
  {
    "text": "actual event storage is one of the first places that I hit problems with with AWS",
    "start": "1271679",
    "end": "1279409"
  },
  {
    "text": "this is effectively what our event eventing looks like we have producers",
    "start": "1279409",
    "end": "1284850"
  },
  {
    "text": "which is in our case the Web API which is emitting events and then we have two consumers or as many as we want which",
    "start": "1284850",
    "end": "1291750"
  },
  {
    "text": "are aggregates or our projections producers produce event consumers read them off as quickly as they can to",
    "start": "1291750",
    "end": "1297929"
  },
  {
    "text": "create your views which is an ideal use case for Kafka as anyone here used kefka",
    "start": "1297929",
    "end": "1305760"
  },
  {
    "text": "before heard of okay the same people use picking and sticking their hands up for",
    "start": "1305760",
    "end": "1311340"
  },
  {
    "text": "each question I'm not giving prizes for saying yes to things by the way so so categories log",
    "start": "1311340",
    "end": "1320010"
  },
  {
    "text": "story is a distributed log storage so we can use that as our event log we have",
    "start": "1320010",
    "end": "1327120"
  },
  {
    "text": "one node one event is the a log line or log entry and we can use that for all of",
    "start": "1327120",
    "end": "1333510"
  },
  {
    "text": "our storage and we can keep all of our our data there the downside to this is AWS doesn't offer Kafka as a service it",
    "start": "1333510",
    "end": "1342539"
  },
  {
    "text": "does however offer Kinesis Kinesis is",
    "start": "1342539",
    "end": "1348029"
  },
  {
    "text": "very very similar to Kafka at least it's streaming kanita streams are very",
    "start": "1348029",
    "end": "1354809"
  },
  {
    "text": "similar to Kafka the problem with it is is that we want to use Kafka as our",
    "start": "1354809",
    "end": "1362220"
  },
  {
    "text": "actual log storage for forever and Kinesis has a limit of seven days as an",
    "start": "1362220",
    "end": "1368250"
  },
  {
    "text": "entry can live in it so we can't use it as permanent storage so for a demo I",
    "start": "1368250",
    "end": "1374820"
  },
  {
    "text": "could use contentious because I don't foresee a demo going on for longer than two weeks",
    "start": "1374820",
    "end": "1379980"
  },
  {
    "text": "I mean I'm timebox to an hour as it is so I could demo it and be like look it works fine and as long as you didn't",
    "start": "1379980",
    "end": "1386280"
  },
  {
    "text": "check it back in two weeks it would look fine so I don't really want to use Kinesis I could use Gasca but I'd have",
    "start": "1386280",
    "end": "1395730"
  },
  {
    "text": "to host it myself in Oedipus in 82 or I could host it with docker containers docker is provided as a",
    "start": "1395730",
    "end": "1403980"
  },
  {
    "text": "service by AWS so hosting a docker container in AWS is technically service",
    "start": "1403980",
    "end": "1409050"
  },
  {
    "text": "I guess it's a bit of a cop-out though so I decided to try not to use that",
    "start": "1409050",
    "end": "1415680"
  },
  {
    "text": "because I want to break my break my service constraint on the first issue Irgun t so instead I felt on Amazon's",
    "start": "1415680",
    "end": "1423750"
  },
  {
    "text": "got many other ways of storing data s3 would be ideal if it had an append mode you can only read or write a file in it",
    "start": "1423750",
    "end": "1430650"
  },
  {
    "text": "s3 you can't append to it you have to read it add a line write it back and hope that no one else has written it",
    "start": "1430650",
    "end": "1437220"
  },
  {
    "text": "back in the meantime so if two users send messages at the same time I could lose data or I could use their update",
    "start": "1437220",
    "end": "1444180"
  },
  {
    "text": "mechanics to prevent that but I'd then end up with two lambdas firing around after each other trying not to over",
    "start": "1444180",
    "end": "1449610"
  },
  {
    "text": "writing then I'd end up with a deadlock so I can't use s3 I could use the",
    "start": "1449610",
    "end": "1455220"
  },
  {
    "text": "relational database service store them in Postgres which is the best database so you know that was a very appealing",
    "start": "1455220",
    "end": "1461490"
  },
  {
    "text": "way of storing it but I've used Postgres before so let's store it in something different so I decided to store it in",
    "start": "1461490",
    "end": "1468780"
  },
  {
    "text": "dynamo dynamo is a document store offered by lab Lewis very easy to use",
    "start": "1468780",
    "end": "1476660"
  },
  {
    "text": "has some interesting constraints which I'll show you in a minute the actual",
    "start": "1476660",
    "end": "1482970"
  },
  {
    "text": "setup for a document database it's very simple again this is using terraform the",
    "start": "1482970",
    "end": "1490910"
  },
  {
    "text": "interesting parts of this are the right capacity and weak capacity so right capacity is number of one kilobyte",
    "start": "1490910",
    "end": "1498360"
  },
  {
    "text": "writes per second you want to do and it's rounded up to the nearest kilobyte",
    "start": "1498360",
    "end": "1503760"
  },
  {
    "text": "so if you've got a 512 byte event then that will be rounded up to a kilobyte",
    "start": "1503760",
    "end": "1509100"
  },
  {
    "text": "encounters one but as I'm storing two keys suspicion specifically the actual hashkee the",
    "start": "1509100",
    "end": "1516390"
  },
  {
    "text": "unique identifier and a range I actually use two capacities per right one for the",
    "start": "1516390",
    "end": "1521640"
  },
  {
    "text": "event and one for the index so in this case I can write two and a half messages",
    "start": "1521640",
    "end": "1527220"
  },
  {
    "text": "a second which when I'm demoing this app is fine because there's generally only",
    "start": "1527220",
    "end": "1533190"
  },
  {
    "text": "me on it so as long as I don't type really quickly it's fine and if anyone",
    "start": "1533190",
    "end": "1538650"
  },
  {
    "text": "seen me type you'll know they're typing quickly means making mistakes and then deleting things so that's why because",
    "start": "1538650",
    "end": "1545220"
  },
  {
    "text": "this is a document store we can store anything in our in our events we can just chuck them straight into into the",
    "start": "1545220",
    "end": "1552120"
  },
  {
    "text": "dynamo table and retrieve them as as a as is or we can query them by event ID",
    "start": "1552120",
    "end": "1558180"
  },
  {
    "text": "and I've also defined the timestamp so if I've got a projection that says I",
    "start": "1558180",
    "end": "1564000"
  },
  {
    "text": "want to know about all the events that happened between these two dates I can pull them back by this this is also how",
    "start": "1564000",
    "end": "1571530"
  },
  {
    "text": "I'm implementing the ability to resume processing from the last venue store",
    "start": "1571530",
    "end": "1577740"
  },
  {
    "text": "because if we have the the good of the previous event we can look up its timestamp and just say get me everything",
    "start": "1577740",
    "end": "1583980"
  },
  {
    "text": "after the timestamp now the limit of dynamodb is that this event is in my",
    "start": "1583980",
    "end": "1592530"
  },
  {
    "text": "channel created event as before timestamp event ID type boring user ID",
    "start": "1592530",
    "end": "1598590"
  },
  {
    "text": "and channel ID then we have the channel name and an optional channel description",
    "start": "1598590",
    "end": "1603690"
  },
  {
    "text": "attribute if you try and insert this event into the inter dynamo it will fail",
    "start": "1603690",
    "end": "1609450"
  },
  {
    "text": "with a weird error message I can't remember what the error message is off the top of my head but this one will",
    "start": "1609450",
    "end": "1615900"
  },
  {
    "text": "work because dynamodb doesn't let you store empty",
    "start": "1615900",
    "end": "1621870"
  },
  {
    "text": "string values null is fine empty strings not fine which is the opposite way onto",
    "start": "1621870",
    "end": "1628830"
  },
  {
    "text": "what I was expecting research on the EDA various forums indicates this is by design for reasons",
    "start": "1628830",
    "end": "1636300"
  },
  {
    "text": "and a lot of people who disagree with these reasons and Amazon don't seem to",
    "start": "1636300",
    "end": "1642090"
  },
  {
    "text": "want to fix this so the suggested workaround for them is to use a value in your string which will",
    "start": "1642090",
    "end": "1647700"
  },
  {
    "text": "signify that the string is empty so I guess you generate a good at the",
    "start": "1647700",
    "end": "1655230"
  },
  {
    "text": "beginning of your app and just say whenever I see this good it's an empty string because that's unique and hopefully there won't be another one in",
    "start": "1655230",
    "end": "1660630"
  },
  {
    "text": "my case I just check if my text box is empty and write null to the value instead that really annoys me because it",
    "start": "1660630",
    "end": "1669840"
  },
  {
    "text": "really violates the principle of least surprise in an API why would this fail",
    "start": "1669840",
    "end": "1676190"
  },
  {
    "text": "after we've moved on past that so as long as you don't try and store Nell's it's fine so now we've got a way of",
    "start": "1676580",
    "end": "1685260"
  },
  {
    "text": "storing our events we now need a way to actually create events and put them into",
    "start": "1685260",
    "end": "1691110"
  },
  {
    "text": "this into dimer so here is our setup for an API gateway in AWS the top block just",
    "start": "1691110",
    "end": "1702480"
  },
  {
    "text": "says that we want to know the iron gives it the description and then we have an API gateway resource which is a path",
    "start": "1702480",
    "end": "1709650"
  },
  {
    "text": "putt so if you want to add events slash channel you have two resources one",
    "start": "1709650",
    "end": "1716190"
  },
  {
    "text": "called events one called channel and just say that the channel is that it's a child of events so you can create",
    "start": "1716190",
    "end": "1721620"
  },
  {
    "text": "multiple hierarchies of the URLs the downside of this is how much typing you",
    "start": "1721620",
    "end": "1726690"
  },
  {
    "text": "have to do for it if you've ever used a lambda library called Claudia jazz they",
    "start": "1726690",
    "end": "1734400"
  },
  {
    "text": "get around this by just registering the group URL and then handling routing internally themselves so all everything",
    "start": "1734400",
    "end": "1740700"
  },
  {
    "text": "comes into one handler and then they do routing dispatch it to your hand to your own functions we've also got post method",
    "start": "1740700",
    "end": "1750150"
  },
  {
    "text": "sets up on the events because that's all I care about I don't want people to be able to get anything from my API you",
    "start": "1750150",
    "end": "1755370"
  },
  {
    "text": "just need to be able to push event to it all the reads come from our views and",
    "start": "1755370",
    "end": "1761150"
  },
  {
    "text": "you'll notice on my post events when my cursors come there is we have this",
    "start": "1761570",
    "end": "1768360"
  },
  {
    "text": "lovely authorization equals none this means anyone can write to my event API as long as they put their own write",
    "start": "1768360",
    "end": "1774150"
  },
  {
    "text": "structure and don't put a null key in it defines so an empty shrinky but that's",
    "start": "1774150",
    "end": "1781760"
  },
  {
    "text": "only there because terraform doesn't support coordinator yet so to put",
    "start": "1781760",
    "end": "1787790"
  },
  {
    "text": "validation on api we have to manually click around in the UI or use their duress here like to write a Cognito",
    "start": "1787790",
    "end": "1795580"
  },
  {
    "text": "authorizer for it yeah and the last",
    "start": "1795580",
    "end": "1801530"
  },
  {
    "text": "block just says that when this posts method is run we will take the data from it and post it to the lambda function",
    "start": "1801530",
    "end": "1809480"
  },
  {
    "text": "that we want to act as our handler you'll know that the post in the word post appears twice on here this is the",
    "start": "1809480",
    "end": "1816530"
  },
  {
    "text": "api's method so you could have post get put options that kind of thing the",
    "start": "1816530",
    "end": "1821990"
  },
  {
    "text": "integration method if you're calling a lambda has to be post when I first was",
    "start": "1821990",
    "end": "1827270"
  },
  {
    "text": "doing this I had get in both places and once again getting strange error messages because it was trying to do a",
    "start": "1827270",
    "end": "1832610"
  },
  {
    "text": "get request to a lambda which is not a valid thing to do so yeah that has to say post for the type of a degress proxy",
    "start": "1832610",
    "end": "1839410"
  },
  {
    "text": "most of this code is taken off the terraform documentation pages there very",
    "start": "1839410",
    "end": "1844610"
  },
  {
    "text": "complete and quite secure their developers are very responsive on twitter if you have questions i harass",
    "start": "1844610",
    "end": "1851240"
  },
  {
    "text": "them a lot the actual handler we're",
    "start": "1851240",
    "end": "1857060"
  },
  {
    "text": "going to run when a message or when this get API is called looks like this the",
    "start": "1857060",
    "end": "1864440"
  },
  {
    "text": "ADA blue event comes in we use the object of sign method to force in a",
    "start": "1864440",
    "end": "1871070"
  },
  {
    "text": "timestamp that we control because I don't want to rely on the users computers clock being right and we will",
    "start": "1871070",
    "end": "1878030"
  },
  {
    "text": "supply an event ID if there's not already one in the in the event if I was",
    "start": "1878030",
    "end": "1885020"
  },
  {
    "text": "actually doing this in production I'm not sure if I'd treat event ID first I might force them to have my event ID the",
    "start": "1885020",
    "end": "1891620"
  },
  {
    "text": "reason I do it this way around is because if I spent specify the event ID on the client side for debugging purposes I can trace it all the way",
    "start": "1891620",
    "end": "1897830"
  },
  {
    "text": "through I can see in my logs and a client where the event was generated and then I can see into the a",
    "start": "1897830",
    "end": "1904610"
  },
  {
    "text": "degress cloud watch logs to see what went wrong why it wasn't stored where there was an empty string in it which is",
    "start": "1904610",
    "end": "1911060"
  },
  {
    "text": "usually in my problem so once we've hydrated our event with a few more",
    "start": "1911060",
    "end": "1916430"
  },
  {
    "text": "properties we've right into storage trigger projections and send okay to the room user because we're using react we",
    "start": "1916430",
    "end": "1922760"
  },
  {
    "text": "automatically stick the result of them typing a message straight on-screen and",
    "start": "1922760",
    "end": "1928100"
  },
  {
    "text": "I put a little indicating exit to show the you know it's probably there and they want it it's confirmed by",
    "start": "1928100",
    "end": "1934850"
  },
  {
    "text": "adolescence appeared in the view then the UI changes to reflect you know here",
    "start": "1934850",
    "end": "1941300"
  },
  {
    "text": "we're not assigning a sequence ID or anything to our events because I didn't",
    "start": "1941300",
    "end": "1947060"
  },
  {
    "text": "want any kind of blocking resource so you know this is the next event if ten people right at once or a thousand",
    "start": "1947060",
    "end": "1952370"
  },
  {
    "text": "people use my application which seems unlikely I don't want to cause any kind of blocking we could get around this",
    "start": "1952370",
    "end": "1958760"
  },
  {
    "text": "using Postgres so again if you decided that you want to have that many users and you need a",
    "start": "1958760",
    "end": "1964580"
  },
  {
    "text": "sequential ID and changing the data store to post press is probably a good idea in fact if I was doing this for",
    "start": "1964580",
    "end": "1972200"
  },
  {
    "text": "real in the future I'd probably use Postgres instead of dynamo because",
    "start": "1972200",
    "end": "1977440"
  },
  {
    "text": "perhaps Curtis is the best database in the world I don't get paid to say that",
    "start": "1977440",
    "end": "1982610"
  },
  {
    "text": "by the way I just think it is actually",
    "start": "1982610",
    "end": "1988250"
  },
  {
    "text": "invoking another lambda and there is a lot of conflicting advice about this online a lot of people say you should",
    "start": "1988250",
    "end": "1994100"
  },
  {
    "text": "use the notification service too with the lambda hooked up to the notification services to send a notification to notification service and that invokes a",
    "start": "1994100",
    "end": "2000730"
  },
  {
    "text": "lambda and that does the work when you can just invoke the lambda and not care about the callback so that's what I do",
    "start": "2000730",
    "end": "2008920"
  },
  {
    "text": "I've missed out a lot of error handling from these by the way when I upload the code you'll see that there's probably",
    "start": "2008920",
    "end": "2015520"
  },
  {
    "text": "another 50% worth of error handling in this stuff rather than actual business code so in our case here we are just",
    "start": "2015520",
    "end": "2024010"
  },
  {
    "text": "invoking another lambda called kro-bar projections and that itself looks like",
    "start": "2024010",
    "end": "2030220"
  },
  {
    "text": "this I have a function for each projection given an event each projection runs it",
    "start": "2030220",
    "end": "2038310"
  },
  {
    "text": "and then the update view method here is just a wraparound s3 so I can test the",
    "start": "2038310",
    "end": "2045210"
  },
  {
    "text": "my projections work without having to rely on database infrastructure to",
    "start": "2045210",
    "end": "2051419"
  },
  {
    "text": "downside the way I've written this is that all my projections run inside one lambda so if you have one really badly",
    "start": "2051419",
    "end": "2057148"
  },
  {
    "text": "performing projection all of the others are going to be slow as well this is",
    "start": "2057149",
    "end": "2063120"
  },
  {
    "text": "fine for my first product or my first deployment because I'm only projecting users and channels there's not that much",
    "start": "2063120",
    "end": "2070379"
  },
  {
    "text": "information to slow things down again in the future when you start having more",
    "start": "2070380",
    "end": "2075810"
  },
  {
    "text": "users you can then upgrade your architecture to have each projection running in its own lambda this is one of",
    "start": "2075810",
    "end": "2083610"
  },
  {
    "text": "the the maintenance of deploying the simplest thing you need don't over architect in the beginning because well",
    "start": "2083610",
    "end": "2090840"
  },
  {
    "text": "the final architecture slide that I showed I wouldn't want to start with that because there's too many moving parts that I will get wrong and tear out",
    "start": "2090840",
    "end": "2097530"
  },
  {
    "text": "what hair I have left an actual",
    "start": "2097530",
    "end": "2103320"
  },
  {
    "text": "projection slow this so we just have a an object of handlers so channel created",
    "start": "2103320",
    "end": "2111270"
  },
  {
    "text": "user joins channel all they do is they work them in a mutable manner so they",
    "start": "2111270",
    "end": "2116850"
  },
  {
    "text": "return a new version of the view updated with whatever the projection does and",
    "start": "2116850",
    "end": "2122610"
  },
  {
    "text": "return it in this physical so we just",
    "start": "2122610",
    "end": "2129600"
  },
  {
    "text": "return an object back this means that I can test to each handler by just running",
    "start": "2129600",
    "end": "2135540"
  },
  {
    "text": "the callback on a set known view and in the the main production code we running",
    "start": "2135540",
    "end": "2141960"
  },
  {
    "text": "this update view function which is actually reading from s3 applying the projection checking the s3 is not being",
    "start": "2141960",
    "end": "2148830"
  },
  {
    "text": "updated when writing it back so this means our architecture looks",
    "start": "2148830",
    "end": "2156000"
  },
  {
    "text": "like this you know we're not actually using the event storage for anything in",
    "start": "2156000",
    "end": "2161100"
  },
  {
    "text": "particular yet it's just there for future usage one we want to make our",
    "start": "2161100",
    "end": "2166560"
  },
  {
    "text": "architecture more fancy this works we have a statically hosted website we",
    "start": "2166560",
    "end": "2172740"
  },
  {
    "text": "called Web API we store events we trigger projections when we read views from s3 there are problems with the the",
    "start": "2172740",
    "end": "2182340"
  },
  {
    "text": "actual projections which we'll go into later but if you're just one or two",
    "start": "2182340",
    "end": "2187710"
  },
  {
    "text": "users in a chat room you're not going to notice them secondly start having more than a few users they start becoming",
    "start": "2187710",
    "end": "2193080"
  },
  {
    "text": "more evident but the part I want to talk about next so I've alluded to a few times is",
    "start": "2193080",
    "end": "2199250"
  },
  {
    "text": "kognito kognito is a service by Amazon for providing authorization and",
    "start": "2199250",
    "end": "2206250"
  },
  {
    "text": "authentication it's an implementation of Open ID Connect and it's very easy to",
    "start": "2206250",
    "end": "2213000"
  },
  {
    "text": "use there are a lot of examples and on ADA vs. github page they have an entire",
    "start": "2213000",
    "end": "2219030"
  },
  {
    "text": "repository dedicated to how to use it from JavaScript a brief summary of how",
    "start": "2219030",
    "end": "2224520"
  },
  {
    "text": "to use it for JavaScript looks like this this is signing up of a user the",
    "start": "2224520",
    "end": "2231240"
  },
  {
    "text": "important part is this function so in",
    "start": "2231240",
    "end": "2239070"
  },
  {
    "text": "our case we're generating lis good as I user ID I'm just putting the user the users email address in as an attribute",
    "start": "2239070",
    "end": "2246210"
  },
  {
    "text": "the reason we do this is because what we could use their email addresses yet as the ID the ID is immutable once you've",
    "start": "2246210",
    "end": "2252870"
  },
  {
    "text": "written it you can't change it so if the user wants to change their email address in the future they wouldn't be able to",
    "start": "2252870",
    "end": "2258660"
  },
  {
    "text": "log in as that account anymore so what we do instead is use a good as they use",
    "start": "2258660",
    "end": "2264570"
  },
  {
    "text": "your ID email address as an attribute and in the Cognito setup you say that",
    "start": "2264570",
    "end": "2271110"
  },
  {
    "text": "you want to allow login from that attribute so i've loud login from aggress",
    "start": "2271110",
    "end": "2277340"
  },
  {
    "text": "this is very straightforward preferred signing up login is marginally more",
    "start": "2277970",
    "end": "2284270"
  },
  {
    "text": "complicated we take their username and password email address in this case set",
    "start": "2284270",
    "end": "2291710"
  },
  {
    "text": "up our user pool and then authenticate the user assuming things work correctly i dispatched the user to the rest of the",
    "start": "2291710",
    "end": "2299119"
  },
  {
    "text": "react system so that it now knows of the user and resolved the promise the",
    "start": "2299119",
    "end": "2306080"
  },
  {
    "text": "downside i've had this the thing that really was not comfortable with cognitive about was this setup of the",
    "start": "2306080",
    "end": "2311359"
  },
  {
    "text": "user pool because on my client side I now have a user pool ID and a client ID",
    "start": "2311359",
    "end": "2317900"
  },
  {
    "text": "and that's my client is JavaScript anyone can read these and that doesn't",
    "start": "2317900",
    "end": "2323960"
  },
  {
    "text": "seem very secure to me I don't want to give out any kind of editors credentials anywhere but searching again on the",
    "start": "2323960",
    "end": "2331460"
  },
  {
    "text": "other breast forms real someone from Amazon saying that unauthentic these two",
    "start": "2331460",
    "end": "2338060"
  },
  {
    "text": "IDs can only be used to call an authenticated API so signing up authenticating forgotten password so",
    "start": "2338060",
    "end": "2344270"
  },
  {
    "text": "there's no malicious activity they can do with just these two IDs that implies",
    "start": "2344270",
    "end": "2349970"
  },
  {
    "text": "there is malicious activity they could do with those IDs and something else and they don't know what the something else",
    "start": "2349970",
    "end": "2355010"
  },
  {
    "text": "is so apparently this is fines I just",
    "start": "2355010",
    "end": "2360650"
  },
  {
    "text": "leave it on the client side and this is only a demo app so you know it's not going to hit production if you really",
    "start": "2360650",
    "end": "2367280"
  },
  {
    "text": "wanted to hide them I think you could probably put your user pool usage inside a lambda function in API gateway and do",
    "start": "2367280",
    "end": "2375230"
  },
  {
    "text": "it like that i I guess I'd need someone who actually",
    "start": "2375230",
    "end": "2380359"
  },
  {
    "text": "knows a to ref security to come and tell me if I'm doing this right or wrong but",
    "start": "2380359",
    "end": "2385760"
  },
  {
    "text": "works on 1g and anyone else is possibly",
    "start": "2385760",
    "end": "2391750"
  },
  {
    "text": "now that we have authentication and have manually added it to our API we also",
    "start": "2391869",
    "end": "2400820"
  },
  {
    "text": "need to know about using sign up now when a user signs up we have two stages",
    "start": "2400820",
    "end": "2407720"
  },
  {
    "text": "to that they enter email address they get a link in their email or code in there emo which has go back to",
    "start": "2407720",
    "end": "2413330"
  },
  {
    "text": "the web application type this code in to prove that it's Yuri Magus basic email address confirmation which means I don't",
    "start": "2413330",
    "end": "2421790"
  },
  {
    "text": "consider a user fully registered until they've approved their email address so",
    "start": "2421790",
    "end": "2427220"
  },
  {
    "text": "I don't want to dispatch my user registered event straightaway like when they hit my mother as of this and my",
    "start": "2427220",
    "end": "2433250"
  },
  {
    "text": "password is whatever submit I don't want to send a user registered event at that time because they might not ever follow",
    "start": "2433250",
    "end": "2440270"
  },
  {
    "text": "through that might not be their email address or they've made a typo so the",
    "start": "2440270",
    "end": "2447860"
  },
  {
    "text": "obvious solution and bad one which you shouldn't do is just a wait for a time just say ten minutes after they've",
    "start": "2447860",
    "end": "2454730"
  },
  {
    "text": "they've signed up check to see if they've confirmed if they have great successful user this wouldn't be a good",
    "start": "2454730",
    "end": "2460220"
  },
  {
    "text": "way of doing it for many obvious reasons but you know if that was the only way of",
    "start": "2460220",
    "end": "2465890"
  },
  {
    "text": "doing it luckily kognito supports triggers lots of AWS services support",
    "start": "2465890",
    "end": "2474020"
  },
  {
    "text": "triggering so we can put our own lambdas into the processes and either replace parts of a process or customize it in",
    "start": "2474020",
    "end": "2480860"
  },
  {
    "text": "the case of Cognito one of them is the post confirmation trigger this is after",
    "start": "2480860",
    "end": "2487850"
  },
  {
    "text": "the users confirm that the email addresses actually there's run the lambda there are also ones for pre",
    "start": "2487850",
    "end": "2494360"
  },
  {
    "text": "authentication and post authentication which would make for writing interesting",
    "start": "2494360",
    "end": "2500420"
  },
  {
    "text": "projections of a user attempted login and then a failed or a successful login you could then write a projection that",
    "start": "2500420",
    "end": "2506660"
  },
  {
    "text": "would say look for users who have got a high number of attempts at logging in",
    "start": "2506660",
    "end": "2511760"
  },
  {
    "text": "and we might have someone who's trying to brute force their way and through a user account so we can put that kind of",
    "start": "2511760",
    "end": "2518540"
  },
  {
    "text": "event in data into our event stream as well the actual handler for one of these",
    "start": "2518540",
    "end": "2525280"
  },
  {
    "text": "looks remarkably similar to the API Handler the only difference is we're controlling the whole event ourselves we",
    "start": "2525280",
    "end": "2533540"
  },
  {
    "text": "grab the user attributes that come through so in our case we only after the email and the sub which is the unique",
    "start": "2533540",
    "end": "2540170"
  },
  {
    "text": "identifier for that account and we write at our event stream and trigger all of our projections again so",
    "start": "2540170",
    "end": "2549579"
  },
  {
    "text": "nice and straightforward that one that one calls me a lot less hassle than the API gateway one API gateway is also",
    "start": "2549579",
    "end": "2556180"
  },
  {
    "text": "fairly picky on the response Jason you give it if it doesn't have a body",
    "start": "2556180",
    "end": "2562240"
  },
  {
    "text": "property it fails if it doesn't have a header property it sails but it only gives you a 500 error and just something",
    "start": "2562240",
    "end": "2567369"
  },
  {
    "text": "like invalid Jason and you look at it going oh what's invalid yes and everything looks fine to me",
    "start": "2567369",
    "end": "2572589"
  },
  {
    "text": "it's valid Jason it's just not semantically valid so as I've alluded to",
    "start": "2572589",
    "end": "2581980"
  },
  {
    "text": "a few times in this scalability becomes a problem with this architecture so",
    "start": "2581980",
    "end": "2589270"
  },
  {
    "text": "while the cognitive side of things and the API gateway on the website and the first lambda is scalable the projection",
    "start": "2589270",
    "end": "2598119"
  },
  {
    "text": "side of things is scalable in that they'll run and you can have many of them running but you might lose data",
    "start": "2598119",
    "end": "2604740"
  },
  {
    "text": "parallel updates to s3 you can use a more the word for it is like a last",
    "start": "2604740",
    "end": "2612339"
  },
  {
    "text": "right time so when you write to test three you can say if the last write time is different from when I read it fail",
    "start": "2612339",
    "end": "2619329"
  },
  {
    "text": "the update but if you've now got two or three or ten or twenty lambdas all doing",
    "start": "2619329",
    "end": "2624730"
  },
  {
    "text": "the same thing you have 20 language going oh that failed I'll try it again of that failed at red and you've got 20",
    "start": "2624730",
    "end": "2629740"
  },
  {
    "text": "of them and more messages coming in you're just going to end up with a massive pile of deadlocks and if you",
    "start": "2629740",
    "end": "2635079"
  },
  {
    "text": "don't have a timeout on your lambdas or you have a large time at you will end up with quite a large a diverse bill",
    "start": "2635079",
    "end": "2640869"
  },
  {
    "text": "because a 300 millisecond or 300 second lambda running for forever or as many of them as you can have is",
    "start": "2640869",
    "end": "2648550"
  },
  {
    "text": "going to cause problems luckily a SS supports a lot more",
    "start": "2648550",
    "end": "2654749"
  },
  {
    "text": "services that we can use to negate a lot of these problems the simplest way to do",
    "start": "2654749",
    "end": "2661229"
  },
  {
    "text": "this is just to stick the simple notification service and simple queuing service in between the tool and the",
    "start": "2661229",
    "end": "2669288"
  },
  {
    "text": "notification service literally distributes notifications to as many queues as it's got attached in our case",
    "start": "2670009",
    "end": "2677009"
  },
  {
    "text": "we've only got one queue but in the future if we want to put our projections",
    "start": "2677009",
    "end": "2682410"
  },
  {
    "text": "in separates lambdas rather than having them all running in one we could have a queue parrot projection now each",
    "start": "2682410",
    "end": "2687929"
  },
  {
    "text": "projection doesn't impact the running of any other projections we can also use",
    "start": "2687929",
    "end": "2694349"
  },
  {
    "text": "this queue for when we want to reload events so if we want to if we come up",
    "start": "2694349",
    "end": "2700259"
  },
  {
    "text": "with a new projection we say right we want a and all users who've posted in",
    "start": "2700259",
    "end": "2705839"
  },
  {
    "text": "these channels in the last 10 days production we never thought we wanted this before but now we do we can just",
    "start": "2705839",
    "end": "2712439"
  },
  {
    "text": "grab all of the information out of the event store and push it straight into either a specific queue for one",
    "start": "2712439",
    "end": "2718769"
  },
  {
    "text": "projection or we can push it into SNS and have all of our projections rerun so",
    "start": "2718769",
    "end": "2726119"
  },
  {
    "text": "if we want to rebuild our data model that's how we do it and then still sqs",
    "start": "2726119",
    "end": "2733819"
  },
  {
    "text": "drop down we can also use this to make our",
    "start": "2733819",
    "end": "2740230"
  },
  {
    "text": "application more flexible and support plugins as everyone wants the right plugins one of the initial plugins I",
    "start": "2740230",
    "end": "2747130"
  },
  {
    "text": "wanted to write for this like before I'd even written the application was I wanted to write an IRC plugin because I",
    "start": "2747130",
    "end": "2753730"
  },
  {
    "text": "wanted to be able to interact with this as if it was IRC because slack is IRC",
    "start": "2753730",
    "end": "2758740"
  },
  {
    "text": "with a really heavy slow client why we don't still use IRC I don't know and you",
    "start": "2758740",
    "end": "2765430"
  },
  {
    "text": "can write a chat bot for IRC so why you slack and it looks pretty little right",
    "start": "2765430",
    "end": "2773440"
  },
  {
    "text": "plugins I put each one in a separate queue we really don't want a bad plug-in with a bad projection to slow down the",
    "start": "2773440",
    "end": "2780850"
  },
  {
    "text": "running of the rest of our application we also gained because we've got this",
    "start": "2780850",
    "end": "2787480"
  },
  {
    "text": "queue in place when we deploy a plug-in to our our application we can have a tip",
    "start": "2787480",
    "end": "2792940"
  },
  {
    "text": "box that says yes I want all of the events for all history to come through my plugin please hopefully that would",
    "start": "2792940",
    "end": "2799780"
  },
  {
    "text": "not be kicked very often because I would imagine that would create quite a large queue after a long time but if that's",
    "start": "2799780",
    "end": "2804880"
  },
  {
    "text": "what a blogging author wants they have the ability to have that using lambdas",
    "start": "2804880",
    "end": "2811990"
  },
  {
    "text": "for our plugins also it came to us a couple of interesting use cases we can either provide a pre-baked Lander that",
    "start": "2811990",
    "end": "2819910"
  },
  {
    "text": "will run another JavaScript function which might be like write to a view and we can handle the fact that it writes to",
    "start": "2819910",
    "end": "2825220"
  },
  {
    "text": "s3 or does something in the background we just say hey here's some data do what you want and we'll deal with the storage",
    "start": "2825220",
    "end": "2830890"
  },
  {
    "text": "of this but we could also provide a lambda that's automatically invokes an",
    "start": "2830890",
    "end": "2836380"
  },
  {
    "text": "HTTP endpoint or you could just rather than using a lambda at all have a dar m",
    "start": "2836380",
    "end": "2845800"
  },
  {
    "text": "for a lambda the the full resource name which as we saw in the terraform setup",
    "start": "2845800",
    "end": "2851890"
  },
  {
    "text": "is the gigantic string of text and says where a lambda is where you should post it but if we let a user specify their",
    "start": "2851890",
    "end": "2858550"
  },
  {
    "text": "own ADA vs. account lambda we can invoke that from argue now they can do whatever",
    "start": "2858550",
    "end": "2864760"
  },
  {
    "text": "they want however they want in their own a SS account and it not going to cost us and which is correct because why proof",
    "start": "2864760",
    "end": "2873000"
  },
  {
    "text": "why should we pay for someone else's plug into the run so if they get the the full usage of a duress they could do",
    "start": "2873000",
    "end": "2879210"
  },
  {
    "text": "machine learning or or some kind of a ion the people's chap messages and it",
    "start": "2879210",
    "end": "2885720"
  },
  {
    "text": "wouldn't cost us anything data retention might become an issue depending on why your jurisdiction is",
    "start": "2885720",
    "end": "2892740"
  },
  {
    "text": "and you wouldn't want to just hand messages out to anyone so there is an interesting issue there but it does",
    "start": "2892740",
    "end": "2899700"
  },
  {
    "text": "provide a way of having a nice cutoff between this is the core systems account",
    "start": "2899700",
    "end": "2906119"
  },
  {
    "text": "and then we can have a different account for plugins or a different account per plugin as I mentioned writing one",
    "start": "2906119",
    "end": "2915600"
  },
  {
    "text": "wanting to write an IRC plug-in I'm not convinced I could write it in a service",
    "start": "2915600",
    "end": "2921450"
  },
  {
    "text": "manner because I think you need a persistent connection I had a brief look",
    "start": "2921450",
    "end": "2926730"
  },
  {
    "text": "through the through the the two RFC's that cover the cover implementing IRC",
    "start": "2926730",
    "end": "2933320"
  },
  {
    "text": "but there's also a lot of documentation saying these are the Taurus RFC's that define it and no server implements these",
    "start": "2933320",
    "end": "2939720"
  },
  {
    "text": "they do this slightly differently and quite all the you know this is enough of",
    "start": "2939720",
    "end": "2944910"
  },
  {
    "text": "a problem as there's - right without having to try and write IRC as well maybe later someone wants to send a pull",
    "start": "2944910",
    "end": "2951300"
  },
  {
    "text": "request for an arson client also a",
    "start": "2951300",
    "end": "2955820"
  },
  {
    "text": "little wrap-up of my experiences so far I have learnt loads about the extra a",
    "start": "2960140",
    "end": "2966540"
  },
  {
    "text": "diverse functionality mostly around cognitive I want to now use kognito for other things like possibly",
    "start": "2966540",
    "end": "2973530"
  },
  {
    "text": "server-to-server authentication because it can support that - I've learnt loads",
    "start": "2973530",
    "end": "2979230"
  },
  {
    "text": "more about terraform there's like I said as I normally only use ec2 and s3 and a",
    "start": "2979230",
    "end": "2984690"
  },
  {
    "text": "tiny bit of lambda I have now learned about configuring IP I get raised and how painful configuring I am is no",
    "start": "2984690",
    "end": "2990630"
  },
  {
    "text": "matter how you're doing it but if it's in terraform at least you can version control it and then once something stops",
    "start": "2990630",
    "end": "2996390"
  },
  {
    "text": "working you at least now have version history of why it stopped working",
    "start": "2996390",
    "end": "3002140"
  },
  {
    "text": "the trade-offs of making a service at architecture yes it is possible would I",
    "start": "3003130",
    "end": "3011839"
  },
  {
    "text": "actually implement something completely service maybe it's an interesting",
    "start": "3011839",
    "end": "3020660"
  },
  {
    "text": "trade-off to make it definitely makes you think about problems in the different way but in the end I'd still",
    "start": "3020660",
    "end": "3027470"
  },
  {
    "text": "rather of stored everything in Kalka or had Kinesis with us you know infinite",
    "start": "3027470",
    "end": "3033440"
  },
  {
    "text": "storage but the other part of the service trade-off which this hasn't",
    "start": "3033440",
    "end": "3038930"
  },
  {
    "text": "really touched on at all is cost now while I think you should always pick the",
    "start": "3038930",
    "end": "3044869"
  },
  {
    "text": "right tool for the jobs there is a little asterisk there on the end of that",
    "start": "3044869",
    "end": "3050180"
  },
  {
    "text": "which says the right tool for the job within budget just because something is",
    "start": "3050180",
    "end": "3056569"
  },
  {
    "text": "available as service and you don't have to manage the servers in the background because there are servers despite the name doesn't mean that it's the right",
    "start": "3056569",
    "end": "3065150"
  },
  {
    "text": "thing to do for your company or for your budget we have a as an example we have a",
    "start": "3065150",
    "end": "3070790"
  },
  {
    "text": "service work which when people we have multiple systems and when someone views",
    "start": "3070790",
    "end": "3076970"
  },
  {
    "text": "someone's personal information an event is written to accuse saying who wrote who read the information what system",
    "start": "3076970",
    "end": "3082970"
  },
  {
    "text": "what screen they were using there is a service that reads that off the cube D normalizes a bit put in a write",
    "start": "3082970",
    "end": "3088430"
  },
  {
    "text": "structure stores it somewhere and the separate service which you can query to get a report so when an end-user goes",
    "start": "3088430",
    "end": "3094670"
  },
  {
    "text": "hey I want to know who look to my data we just look at the report now this is",
    "start": "3094670",
    "end": "3099950"
  },
  {
    "text": "currently sitting on top of the nisi two instance it's got two services written in it and then we have an ec2 instance",
    "start": "3099950",
    "end": "3106099"
  },
  {
    "text": "for dev tests QA and production so there is contractual reasons we have a",
    "start": "3106099",
    "end": "3112119"
  },
  {
    "text": "overhead cost for each ec2 machine we have so add an extra 30 euros 3tc to",
    "start": "3112119",
    "end": "3118040"
  },
  {
    "text": "machine per month and we now have suddenly fairly expensive system not",
    "start": "3118040",
    "end": "3123920"
  },
  {
    "text": "doing a lot we don't care about the uptime of it because if the system goes down the queue just fills up when it",
    "start": "3123920",
    "end": "3129200"
  },
  {
    "text": "comes back up it reads off the queue externally quickly so we're paying one 120 ish euros a",
    "start": "3129200",
    "end": "3136450"
  },
  {
    "text": "month for a system that we don't care about uptime you get a million free",
    "start": "3136450",
    "end": "3142180"
  },
  {
    "text": "lambdas per month execution time every month so forever so it's not just part",
    "start": "3142180",
    "end": "3148360"
  },
  {
    "text": "of the free tier Amazon that keeps going so as long as we get less than a million requests in total over a dev test QA and",
    "start": "3148360",
    "end": "3157840"
  },
  {
    "text": "production it's completely free to have it in lambda so why don't we put it in lambda mostly down to time and it's not",
    "start": "3157840",
    "end": "3165760"
  },
  {
    "text": "that important moment when we want to save cost or a developer's spare time between projects then sure we will",
    "start": "3165760",
    "end": "3171760"
  },
  {
    "text": "probably switch that to use lambda but if we were starting from the beginning",
    "start": "3171760",
    "end": "3177580"
  },
  {
    "text": "and had lambda available at the time we had have been able to look and go well",
    "start": "3177580",
    "end": "3182620"
  },
  {
    "text": "on average we're looking at about a thousand personal item views per environment a month per production",
    "start": "3182620",
    "end": "3189700"
  },
  {
    "text": "environment development environment maybe two events so there is a huge cost",
    "start": "3189700",
    "end": "3195010"
  },
  {
    "text": "saving to using service there but maybe for your application you're having 10",
    "start": "3195010",
    "end": "3201040"
  },
  {
    "text": "billion hits a day to your API maybe storing having API gateway which costs",
    "start": "3201040",
    "end": "3206650"
  },
  {
    "text": "you pile request maybe that's not the right way of storing it so you really do have to look at your use cases and",
    "start": "3206650",
    "end": "3215280"
  },
  {
    "text": "finally the code for this will be soon on github to Pentel awake I am for the",
    "start": "3215280",
    "end": "3220900"
  },
  {
    "text": "rest of the week and yeah feel free to check it out simple requests to fix all",
    "start": "3220900",
    "end": "3228610"
  },
  {
    "text": "of my horrible mistakes if anyone from write you eyes better than I can which I suspect is all of you great improve it",
    "start": "3228610",
    "end": "3236560"
  },
  {
    "text": "but I wouldn't necessarily use it as a production application just use a C and finally any questions now there is one",
    "start": "3236560",
    "end": "3249220"
  },
  {
    "text": "so it is a bright light",
    "start": "3249220",
    "end": "3252270"
  },
  {
    "text": "right so the question is what's the latency between receiving a request and it getting through the queues",
    "start": "3262210",
    "end": "3268100"
  },
  {
    "text": "projections and such and into s3 it varies sqs is not the most consistent of",
    "start": "3268100",
    "end": "3278660"
  },
  {
    "text": "latencies it's usually fairly low within if there's nothing else in the queue a",
    "start": "3278660",
    "end": "3285530"
  },
  {
    "text": "message gets through within ten minutes ten milliseconds ten to fifty if there's",
    "start": "3285530",
    "end": "3290780"
  },
  {
    "text": "a lot in the queue obviously you end up with more and more latency so that point you need to start thinking of a",
    "start": "3290780",
    "end": "3296060"
  },
  {
    "text": "different way of doing it or in my case I faked the result on the UI so user certain type something in the chat box",
    "start": "3296060",
    "end": "3301880"
  },
  {
    "text": "that's hi how are you hit center I've put that on screen instantly send the requester so I am trying to make a nice",
    "start": "3301880",
    "end": "3309260"
  },
  {
    "text": "responsive UI but there is the latency cluster the latency between the UI and",
    "start": "3309260",
    "end": "3314860"
  },
  {
    "text": "us seems to be more of a factor than with the innate immerse itself so if",
    "start": "3314860",
    "end": "3321440"
  },
  {
    "text": "you've got a fairly slow internet connection then that will be more of a problem but it will vary based on your",
    "start": "3321440",
    "end": "3327080"
  },
  {
    "text": "message size as well so yeah measure it and architect round it as a bit of a",
    "start": "3327080",
    "end": "3334310"
  },
  {
    "text": "washout answer that the best I can do am afraid any worse or I can like nope okay",
    "start": "3334310",
    "end": "3344000"
  },
  {
    "text": "well thank you very much for coming and I hope you know interesting companies",
    "start": "3344000",
    "end": "3349540"
  }
]