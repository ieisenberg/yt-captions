[
  {
    "text": "thank you all right thank you for joining me today i'm adrian braganza tucker i am ex-mongodb",
    "start": "5040",
    "end": "12960"
  },
  {
    "text": "and that's very important and today i'd like to talk to you about",
    "start": "12960",
    "end": "18080"
  },
  {
    "text": "data modeling for document databases so who here has heard tabloid-esque types",
    "start": "18080",
    "end": "24160"
  },
  {
    "text": "of sentences like this document databases are schema-less raise your hand okay who thinks that's a bad thing",
    "start": "24160",
    "end": "32480"
  },
  {
    "text": "that they're schemerless okay yeah be confident in your answer yeah yep sometimes that can be right and",
    "start": "32480",
    "end": "40399"
  },
  {
    "text": "sometimes it's not necessarily a bad thing but when we work with document databases so like mongodb or cosmos tb",
    "start": "40399",
    "end": "47440"
  },
  {
    "text": "or documentdb both of which are actually just based on top of mongodb we kind of hear these types of tabloids",
    "start": "47440",
    "end": "54800"
  },
  {
    "text": "type of sentiments so we get things like oh there's field flexibility for all documents and that's",
    "start": "54800",
    "end": "60719"
  },
  {
    "text": "amazing or what data model right the whole point of you wanting to use a document database is that you're not",
    "start": "60719",
    "end": "67200"
  },
  {
    "text": "restricted by a very rigid schema you want you don't know what that could be at the very beginning when you are used",
    "start": "67200",
    "end": "74240"
  },
  {
    "text": "to working with relational databases very much like how my background was that's kind of the first thing that you",
    "start": "74240",
    "end": "80240"
  },
  {
    "text": "do right you very meticulously detail out what your model is going to be and then you build out the application",
    "start": "80240",
    "end": "86960"
  },
  {
    "text": "whereas with document databases most of the time we kind of argue well you build the application first and then you build",
    "start": "86960",
    "end": "93600"
  },
  {
    "text": "your data model along with it but if there's anything that you get from this presentation today it's that i",
    "start": "93600",
    "end": "100560"
  },
  {
    "text": "want you to take away that there that there is a data model that while flexibility is great in theory it is not",
    "start": "100560",
    "end": "107840"
  },
  {
    "text": "great in reality in reality all of the data that we work with has some kind of",
    "start": "107840",
    "end": "113920"
  },
  {
    "text": "structure that's the whole reason why it's important to us that's the whole reason why it's meaningful in our",
    "start": "113920",
    "end": "119520"
  },
  {
    "text": "applications without that structure without those relationships all of this large amounts of data is essentially",
    "start": "119520",
    "end": "126159"
  },
  {
    "text": "useless to us unless we make sense of it somehow and so that's what i want to talk to you",
    "start": "126159",
    "end": "131760"
  },
  {
    "text": "about today how to develop a data model for document databases either how to",
    "start": "131760",
    "end": "137040"
  },
  {
    "text": "refine the way that you build a data model or to show you how to actually build one if you've never heard of this",
    "start": "137040",
    "end": "142640"
  },
  {
    "text": "before the goals of this session are to learn how to create that data model in three",
    "start": "142640",
    "end": "149120"
  },
  {
    "text": "phases and then we'll apply that methodology to a casino floor analytics application because i'm based from las",
    "start": "149120",
    "end": "155440"
  },
  {
    "text": "vegas and i feel that will be a very very different example for most of you and then finally what i think is the",
    "start": "155440",
    "end": "161599"
  },
  {
    "text": "most important but i leave towards the end so that you could think about it after this presentation is to understand",
    "start": "161599",
    "end": "167760"
  },
  {
    "text": "what exactly we're modeling for so",
    "start": "167760",
    "end": "173200"
  },
  {
    "text": "if there's anything you take away from this it's that it is possible and it is necessary for you to develop a data",
    "start": "173200",
    "end": "179040"
  },
  {
    "text": "model if you are using a document database don't go along with the tabloids don't just say oh yeah we'll",
    "start": "179040",
    "end": "184480"
  },
  {
    "text": "just throw some stuff in there throw some fields in there will be great because if you do that it's going to",
    "start": "184480",
    "end": "190400"
  },
  {
    "text": "impact your application's performance very much like how the data model that you create for a relational database or",
    "start": "190400",
    "end": "196560"
  },
  {
    "text": "an application that uses a relational database it's going to affect your app so as an example it's kind of hard to",
    "start": "196560",
    "end": "203200"
  },
  {
    "text": "read but the whole point here is depending on the data model that you use you can have someone of the raving",
    "start": "203200",
    "end": "208720"
  },
  {
    "text": "reviews of the document database that you've uh used for your application amazing performance we were able to do",
    "start": "208720",
    "end": "215200"
  },
  {
    "text": "this many requests per second yada yada yada and then with that same",
    "start": "215200",
    "end": "220480"
  },
  {
    "text": "exact database you'll get reviews like this of oh my gosh i'm only working with a thousand records and it is so slow",
    "start": "220480",
    "end": "226799"
  },
  {
    "text": "what's going on what's wrong and most likely the most common culprit of this is they've taken their relational data",
    "start": "226799",
    "end": "233519"
  },
  {
    "text": "model take all that data through it into some document database and then wonder why it's not working well the model is",
    "start": "233519",
    "end": "240239"
  },
  {
    "text": "different you model data differently in different types of databases so you have to",
    "start": "240239",
    "end": "245280"
  },
  {
    "text": "restructure your data accordingly and so we'll get through the first part",
    "start": "245280",
    "end": "250959"
  },
  {
    "text": "how do you actually build a data model in three phases so there's a methodology here that's",
    "start": "250959",
    "end": "256560"
  },
  {
    "text": "quite iterative you can go through these three phases over time and you may have to go through them over and over again",
    "start": "256560",
    "end": "262960"
  },
  {
    "text": "as your data model evolves with your application so the very very first thing that you do",
    "start": "262960",
    "end": "268639"
  },
  {
    "text": "is you make sense of your workload making sense of your workload means",
    "start": "268639",
    "end": "273840"
  },
  {
    "text": "gathering everything there is that you could possibly want to know about your data through this discovery phase you're",
    "start": "273840",
    "end": "280400"
  },
  {
    "text": "going to find a lot of inputs as to where you can get this kind of data",
    "start": "280400",
    "end": "285440"
  },
  {
    "text": "first and foremost is listing qualifying and quantifying all of the operations",
    "start": "285440",
    "end": "291280"
  },
  {
    "text": "that are running through your application what are the queries that are running through your app what are",
    "start": "291280",
    "end": "296639"
  },
  {
    "text": "the ones that are there but are not being used what are your most important ones what are the amounts of those is it",
    "start": "296639",
    "end": "304000"
  },
  {
    "text": "two tweets per hour is it this many requests per second if you can get down to those",
    "start": "304000",
    "end": "310400"
  },
  {
    "text": "types of granular numbers the better you are not only do you have a good estimate if this is",
    "start": "310400",
    "end": "315759"
  },
  {
    "text": "the first time that you're starting out but as you go through this methodology over time you have a baseline that you",
    "start": "315759",
    "end": "321840"
  },
  {
    "text": "can see where there are different differentiations or deviations from what your normal was like or from where you",
    "start": "321840",
    "end": "328560"
  },
  {
    "text": "first started so taking into account all of these types of operations the reads the rights everything that you have is a",
    "start": "328560",
    "end": "334800"
  },
  {
    "text": "very very good place to start the next thing that can help you out are production logs and statistics so if you",
    "start": "334800",
    "end": "342000"
  },
  {
    "text": "already have that tooling in place if you have those kinds of metrics being recorded these are very very good places",
    "start": "342000",
    "end": "347520"
  },
  {
    "text": "to look for that additional information where are your spiky traffic loads what",
    "start": "347520",
    "end": "353440"
  },
  {
    "text": "quarters are you kind of dormant and don't have as much uh traffic going through where are your unexpected",
    "start": "353440",
    "end": "358960"
  },
  {
    "text": "traffic spikes happening do they occur because of something that was deployed or was it because of a timely or",
    "start": "358960",
    "end": "364639"
  },
  {
    "text": "seasonal type of issue these are other good things to keep in mind when you kind of lay out that baseline of where",
    "start": "364639",
    "end": "370880"
  },
  {
    "text": "your application is today especially if you're starting out and creating your data model",
    "start": "370880",
    "end": "376639"
  },
  {
    "text": "next current and predicted scenarios so kind of hand-in-hand with those production logs and statistics you kind",
    "start": "376639",
    "end": "382960"
  },
  {
    "text": "of ask yourself what is our normal traffic like what is our normal expected",
    "start": "382960",
    "end": "388160"
  },
  {
    "text": "workload and then you have some predicted scenarios where let's say if you are typical examples an e-commerce",
    "start": "388160",
    "end": "394000"
  },
  {
    "text": "application and you have some sort of big holiday sale that you have more traffic than you're used to those are",
    "start": "394000",
    "end": "399840"
  },
  {
    "text": "some sort of predicted scenarios that you can estimate and know that you have to either deploy out more resources to help",
    "start": "399840",
    "end": "406240"
  },
  {
    "text": "accommodate that or even scale back once you're done and finished with that",
    "start": "406240",
    "end": "411599"
  },
  {
    "text": "and then finally it's always good to collaborate with the domain expert so as",
    "start": "411599",
    "end": "416720"
  },
  {
    "text": "developers as someone who's working in the weeds most of the time sometimes we kind of forget about the bigger picture",
    "start": "416720",
    "end": "422560"
  },
  {
    "text": "what are the other scenarios that we're forgetting what are the other things that are part of our application that we",
    "start": "422560",
    "end": "427680"
  },
  {
    "text": "may not be privy to because we're so stuck on this feature or we've been fixing this production fire for the last",
    "start": "427680",
    "end": "433759"
  },
  {
    "text": "two weeks as we start to add more people into the conversation you always get valuable insight that you may not always",
    "start": "433759",
    "end": "440240"
  },
  {
    "text": "have if you are very much down in the weeds of your application so we take all of these inputs we gather",
    "start": "440240",
    "end": "447360"
  },
  {
    "text": "everything there is possibly to know about our data and what it is how it processes through our application and",
    "start": "447360",
    "end": "454160"
  },
  {
    "text": "that feeds into some very very important outputs the outputs you get from this",
    "start": "454160",
    "end": "459360"
  },
  {
    "text": "phase are number one the operations that are running number two all the different",
    "start": "459360",
    "end": "465280"
  },
  {
    "text": "queries that are running in your application the data sizes that you are working with both actual and estimated",
    "start": "465280",
    "end": "473039"
  },
  {
    "text": "indexes that you have or indices however you want to say it and the ones that you're missing more importantly",
    "start": "473039",
    "end": "479599"
  },
  {
    "text": "and all the assumptions that you have built in so far to your application once you have all of these outputs",
    "start": "479599",
    "end": "486160"
  },
  {
    "text": "you're going to be ready for the next phase and that next phase is to now map out",
    "start": "486160",
    "end": "493199"
  },
  {
    "text": "and identify those relationships so in this phase there's two things that",
    "start": "493199",
    "end": "498560"
  },
  {
    "text": "you do you first quantify and identify what those relationships are and then you decide do you link or do you embed",
    "start": "498560",
    "end": "505759"
  },
  {
    "text": "all of the relationships that you find so who here has seen this type of",
    "start": "505759",
    "end": "511039"
  },
  {
    "text": "notation one to one one to many many too many that's good i would hope so",
    "start": "511039",
    "end": "516240"
  },
  {
    "text": "so yes if you come from a relational background we're pretty familiar with this right crow fits notation denoting",
    "start": "516240",
    "end": "521919"
  },
  {
    "text": "which entities have one-to-one relationships one too many many too many and it's the same with the document",
    "start": "521919",
    "end": "527760"
  },
  {
    "text": "database so that part doesn't change those types of relationships still occur when you work with data in a document",
    "start": "527760",
    "end": "534240"
  },
  {
    "text": "database one thing that we did find however is now that we're aggregating so much more",
    "start": "534240",
    "end": "539600"
  },
  {
    "text": "data and capturing way larger amounts sometimes the one-to-many relationship",
    "start": "539600",
    "end": "544640"
  },
  {
    "text": "doesn't accurately capture that type of relationship so we've actually added a new one called one to zillions",
    "start": "544640",
    "end": "551600"
  },
  {
    "text": "and so if you think about time series data or if you think about anything where you're having thousands of requests per second that amount of data",
    "start": "551600",
    "end": "559279"
  },
  {
    "text": "would probably qualify for a relationship like this and so you can see with the crow foot notation here",
    "start": "559279",
    "end": "565120"
  },
  {
    "text": "that the little difference here is that we've added a couple extra lines there that says there's a lot there's a lot on",
    "start": "565120",
    "end": "570160"
  },
  {
    "text": "the many side and when we denote this notation numeral wise what we would find here is you",
    "start": "570160",
    "end": "576880"
  },
  {
    "text": "would most likely want to add the minimum which is usually zero or one the likely amount which is the most",
    "start": "576880",
    "end": "583200"
  },
  {
    "text": "important number here and that's what's your normal expected amount for this particular relationship on the mini side",
    "start": "583200",
    "end": "590160"
  },
  {
    "text": "and then the maximum so that could be in the millions the billions the zillions whatever that is",
    "start": "590160",
    "end": "596399"
  },
  {
    "text": "a good example of this is actually twitter followers right so most people they will have at least 0 or one as a",
    "start": "596399",
    "end": "603760"
  },
  {
    "text": "minimum follower most people will have around a few hundred and then for you know the celebrities or people who are",
    "start": "603760",
    "end": "610240"
  },
  {
    "text": "super famous uh they'll have maybe in the hundreds of millions of followers",
    "start": "610240",
    "end": "616079"
  },
  {
    "text": "so we've quantified the relationships we found what the most important entities are we found what relationships relate",
    "start": "617120",
    "end": "623200"
  },
  {
    "text": "to those entities and now we have to decide which can be a somewhat long process is do we link or do we embed",
    "start": "623200",
    "end": "631680"
  },
  {
    "text": "how many hairs like what's linking and what's embedding yeah that's that was me too i'm like what is that and good thing is it's very",
    "start": "631680",
    "end": "638880"
  },
  {
    "text": "very self-explanatory especially if you come from a relational database background you already know one",
    "start": "638880",
    "end": "644399"
  },
  {
    "text": "of them so linking what is linking let's say we have a sample document here this is",
    "start": "644399",
    "end": "651120"
  },
  {
    "text": "holding a bunch of casinos and in this particular document we hold some basic information about the casino we have an",
    "start": "651120",
    "end": "657519"
  },
  {
    "text": "identifier we have the name of the casino nicknames of what that casino could be called the year that it opened",
    "start": "657519",
    "end": "663839"
  },
  {
    "text": "and then right here is where we link owner with some sort of identifier",
    "start": "663839",
    "end": "668880"
  },
  {
    "text": "so linking just means very much like a foreign key relationship we get some additional information that may be",
    "start": "668880",
    "end": "675120"
  },
  {
    "text": "stored in this case we're storing it in a different document and possible and of course a different uh collection which",
    "start": "675120",
    "end": "681279"
  },
  {
    "text": "that would be an akin to a table so here for owner we would identify that by the",
    "start": "681279",
    "end": "687360"
  },
  {
    "text": "identifier 3 here and that information holds the owner information so that is",
    "start": "687360",
    "end": "692399"
  },
  {
    "text": "linking linking is very very similar to foreign key relationships we store that data somewhere else and we link to it in",
    "start": "692399",
    "end": "699360"
  },
  {
    "text": "the parent document embedding on the other hand is just taking the most important information or",
    "start": "699360",
    "end": "706880"
  },
  {
    "text": "the information that we usually query together and we take it and embed it",
    "start": "706880",
    "end": "712560"
  },
  {
    "text": "into the parent document so here and uh we find that let's say when we're",
    "start": "712560",
    "end": "718320"
  },
  {
    "text": "querying for casinos we find that we're always looking for the name of the owner the headquarters",
    "start": "718320",
    "end": "723760"
  },
  {
    "text": "and the the year that it was founded it would be a good start to kind of take that information and put it into the",
    "start": "723760",
    "end": "730160"
  },
  {
    "text": "parent document and that's embedding",
    "start": "730160",
    "end": "734800"
  },
  {
    "text": "so these are very generalized guidelines as to what you want to do whether to",
    "start": "735440",
    "end": "741440"
  },
  {
    "text": "link or whether to embed depending on the type of relationship this is not a framework where you're like is it a",
    "start": "741440",
    "end": "747839"
  },
  {
    "text": "one-to-one relationship okay we're gonna link or embed it's not like that these are general guidelines but for the most",
    "start": "747839",
    "end": "754320"
  },
  {
    "text": "part we want to encourage embedding in the document because that goes for a more simple data model and embedding",
    "start": "754320",
    "end": "761680"
  },
  {
    "text": "most things is probably what you'll need so as you'll see here for one-to-one one-to-many and even many-to-many",
    "start": "761680",
    "end": "768000"
  },
  {
    "text": "relationships if you do embed information in your parent document you will get a single read because if you do",
    "start": "768000",
    "end": "775200"
  },
  {
    "text": "it the way that it is intended that single read will encompass all the information that you are accessing via the query you",
    "start": "775200",
    "end": "782320"
  },
  {
    "text": "have so that's one of the tenants of document databases is any data that is accessed together should be stored",
    "start": "782320",
    "end": "789040"
  },
  {
    "text": "together and so that really encourages embedding for most things",
    "start": "789040",
    "end": "795200"
  },
  {
    "text": "if you are getting into a more complicated data model or you have a lot of information or you are working with",
    "start": "795200",
    "end": "800560"
  },
  {
    "text": "one two zillions then linking in the parent document is probably better",
    "start": "800560",
    "end": "805600"
  },
  {
    "text": "especially if you're getting to that zillions range on the the many side linking is going to be preferred because",
    "start": "805600",
    "end": "811600"
  },
  {
    "text": "if you embed all of that information in that many documents that's also not the greatest thing for your data model so of",
    "start": "811600",
    "end": "818720"
  },
  {
    "text": "course with linking you're going to get a lot of smaller reads but you're going to have many reads and sometimes that's not",
    "start": "818720",
    "end": "824480"
  },
  {
    "text": "always bad sometimes your application needs that and sometimes the sacrifice that you make for having an",
    "start": "824480",
    "end": "830880"
  },
  {
    "text": "additional read is what your app needs rather than having a very very fast read",
    "start": "830880",
    "end": "837120"
  },
  {
    "text": "so we've taken all of the information that is part of our application we take all of those inputs and the data about",
    "start": "838560",
    "end": "845199"
  },
  {
    "text": "our workload we've now mapped out what the different entities are we've mapped out what the relationships exist between",
    "start": "845199",
    "end": "851600"
  },
  {
    "text": "all of these and actually at the end of this phase you pretty much have a data model that",
    "start": "851600",
    "end": "857440"
  },
  {
    "text": "you can work with the one thing that we encourage is that for phase three which is applying design",
    "start": "857440",
    "end": "863839"
  },
  {
    "text": "patterns you most likely don't need to get into that unless you absolutely need it so",
    "start": "863839",
    "end": "870399"
  },
  {
    "text": "what when you are done with phase two we only encourage if you are starting to",
    "start": "870399",
    "end": "876399"
  },
  {
    "text": "see performance problems or if you find that you have a performance threshold that you are not",
    "start": "876399",
    "end": "883279"
  },
  {
    "text": "meeting then you kind of go into step three or phase three because applying design patterns prematurely is very much",
    "start": "883279",
    "end": "890560"
  },
  {
    "text": "like premature optimization you come out with a data model that's a little bit harder to understand a little bit harder",
    "start": "890560",
    "end": "896320"
  },
  {
    "text": "to iterate on and a little bit harder to adapt so only when you need it do you go",
    "start": "896320",
    "end": "902320"
  },
  {
    "text": "into the design pattern veins and so with that what are design patterns",
    "start": "902320",
    "end": "908000"
  },
  {
    "text": "well it is a reusable structure to a commonly recurring problem so if you've",
    "start": "908000",
    "end": "913440"
  },
  {
    "text": "ever read design patterns for computer science in general right the gang of four",
    "start": "913440",
    "end": "918480"
  },
  {
    "text": "or any other type of acronyms or things like that it's the same type of concept it's something that you want to reuse",
    "start": "918480",
    "end": "925040"
  },
  {
    "text": "when you're solving some particular problem and in this case for data modeling these are models that you can",
    "start": "925040",
    "end": "931519"
  },
  {
    "text": "adapt to your data model depending on the data that you have that fit very very common use cases that we've seen",
    "start": "931519",
    "end": "940759"
  },
  {
    "text": "so what design patterns are available and i'm going to come here because it might be difficult to see",
    "start": "941839",
    "end": "949519"
  },
  {
    "text": "remove just in case",
    "start": "949839",
    "end": "954279"
  },
  {
    "text": "yep so we have very many design patterns we're going to go through a few that we'll",
    "start": "956240",
    "end": "962399"
  },
  {
    "text": "actually use in our example and here we'll start with the polymorphic pattern",
    "start": "962399",
    "end": "967680"
  },
  {
    "text": "so the polymorphic pattern who here has heard of the term polymorphic",
    "start": "967680",
    "end": "973040"
  },
  {
    "text": "okay so then you will understand what polymorphic means in the case of these design patterns all this means is that",
    "start": "973040",
    "end": "980240"
  },
  {
    "text": "there are a variety of documents that can exist within the same collection so",
    "start": "980240",
    "end": "985279"
  },
  {
    "text": "we take our example here we have let's say a sports betting application",
    "start": "985279",
    "end": "991120"
  },
  {
    "text": "and we're having uh the list of all the different athletes that are here so we have the late great kobe bryant right",
    "start": "991120",
    "end": "997759"
  },
  {
    "text": "here and we have some information about him specifically because he played basketball right so for basketball we",
    "start": "997759",
    "end": "1004240"
  },
  {
    "text": "keep the number of nba championships that he's been a part of if he's in the hall of fame etc now for serena",
    "start": "1004240",
    "end": "1011279"
  },
  {
    "text": "we still keep the sport the athlete name and the career earnings but for serena she plays tennis so a lot of her",
    "start": "1011279",
    "end": "1018560"
  },
  {
    "text": "information is going to be slightly different so polymorphic pattern states that",
    "start": "1018560",
    "end": "1023839"
  },
  {
    "text": "because serena plays tennis and because tennis has a couple different types of events",
    "start": "1023839",
    "end": "1029839"
  },
  {
    "text": "serena's document can look like this we'll have all of her typical information",
    "start": "1029839",
    "end": "1035280"
  },
  {
    "text": "but we can also store the events that she's a part of in this case tennis can have both singles and doubles events uh",
    "start": "1035280",
    "end": "1042000"
  },
  {
    "text": "we have changed her particular document to hold her events in an array in this",
    "start": "1042000",
    "end": "1047360"
  },
  {
    "text": "way and polymorphic is kind of the basis for all most of the design patterns and that just says that her document looking",
    "start": "1047360",
    "end": "1055039"
  },
  {
    "text": "like this can exist in the same collection as kobe bryant's who may not have those types of event uh information",
    "start": "1055039",
    "end": "1062000"
  },
  {
    "text": "in his document so attribute pattern the next pattern",
    "start": "1062000",
    "end": "1067440"
  },
  {
    "text": "here is very very useful for uh problems that have a lot of documents with a lot of",
    "start": "1067440",
    "end": "1074240"
  },
  {
    "text": "similar fields but the ones that you're actually querying is just a small subset of those so",
    "start": "1074240",
    "end": "1081440"
  },
  {
    "text": "in this case let's say we are keeping track of all the different movies and in our application we want to search for",
    "start": "1081440",
    "end": "1088160"
  },
  {
    "text": "them by the release date the problem with that is release dates are different",
    "start": "1088160",
    "end": "1094320"
  },
  {
    "text": "across all countries it's not a single release date and so in our very very naive data model we found that we have",
    "start": "1094320",
    "end": "1102080"
  },
  {
    "text": "placed a top level release date field for every single one",
    "start": "1102080",
    "end": "1107200"
  },
  {
    "text": "the problem with this is that if we store it in this way we need to have indexes for every single",
    "start": "1107200",
    "end": "1114320"
  },
  {
    "text": "one of those release date fields so in this case something like the attribute",
    "start": "1114320",
    "end": "1119360"
  },
  {
    "text": "pattern is actually very very helpful because instead we can change the document to look like this",
    "start": "1119360",
    "end": "1126960"
  },
  {
    "text": "so instead of having every release and every location be a top level field we",
    "start": "1126960",
    "end": "1132720"
  },
  {
    "text": "have an array that we will be indexing and because we know we're going to be searching by the release date we'll have",
    "start": "1132720",
    "end": "1138880"
  },
  {
    "text": "the attribute be the date and the actual location because we know it's different for every location",
    "start": "1138880",
    "end": "1144960"
  },
  {
    "text": "so by having it in this way and storing that particular attribute the attribute that we want to search on our index can",
    "start": "1144960",
    "end": "1152559"
  },
  {
    "text": "be much much simpler we'll only have to do it on this array here that is possible including the sub",
    "start": "1152559",
    "end": "1159600"
  },
  {
    "text": "fields as part of that array and the great thing here is that the queries",
    "start": "1159600",
    "end": "1164720"
  },
  {
    "text": "are also way simpler because now you don't have to add every single index that you may possibly need for all of",
    "start": "1164720",
    "end": "1170400"
  },
  {
    "text": "the top level release date fields",
    "start": "1170400",
    "end": "1174960"
  },
  {
    "text": "finally there is the document versioning pattern so this is really good pattern",
    "start": "1176640",
    "end": "1182880"
  },
  {
    "text": "to use when you're faced with maintaining a lot of previous versions of documents but you still need access",
    "start": "1182880",
    "end": "1189360"
  },
  {
    "text": "to the most current version of your document for your application so one really really boring example but i try",
    "start": "1189360",
    "end": "1196080"
  },
  {
    "text": "to make it as fun as i can is insurance so insurance when you start out with",
    "start": "1196080",
    "end": "1201919"
  },
  {
    "text": "insurance you open up and get a policy you have a standard policy writer right and when",
    "start": "1201919",
    "end": "1208159"
  },
  {
    "text": "you start out you maybe have only a few things that you need to ensure so bilbo here has decided to get some insurance",
    "start": "1208159",
    "end": "1215360"
  },
  {
    "text": "and at the time that he opened this up the only things he needed to ensure were the elven sword",
    "start": "1215360",
    "end": "1221840"
  },
  {
    "text": "now with the document versioning pattern this makes sense right this would be a collection of current policies so every",
    "start": "1221840",
    "end": "1228320"
  },
  {
    "text": "person that has insurance with us would have a document in the current policy",
    "start": "1228320",
    "end": "1233360"
  },
  {
    "text": "collection and that would be the most current the most up-to-date uh status or",
    "start": "1233360",
    "end": "1238640"
  },
  {
    "text": "state of that insurance however as bilbo goes on and travels on",
    "start": "1238640",
    "end": "1244640"
  },
  {
    "text": "and you know changes a few things let's say now he has a one ring to ensure",
    "start": "1244640",
    "end": "1249760"
  },
  {
    "text": "that's very very important well we can use the document versioning pattern to now add that one ring to our current",
    "start": "1249760",
    "end": "1257919"
  },
  {
    "text": "policy and to keep track of the the old state of insurance we would have a",
    "start": "1257919",
    "end": "1263760"
  },
  {
    "text": "different collection maybe one called policy revisions and we would add a document there that would hold the old",
    "start": "1263760",
    "end": "1269919"
  },
  {
    "text": "state or revision one of his insurance so in this way we now have the most current",
    "start": "1269919",
    "end": "1277600"
  },
  {
    "text": "state of his insurance we would always be querying and targeting the current policies collection for that uh",
    "start": "1277600",
    "end": "1284960"
  },
  {
    "text": "that information and then we would keep the history by adding the different revisions that do occur in a separate",
    "start": "1284960",
    "end": "1292000"
  },
  {
    "text": "collection so the of course the the cons of this is that it doubles the",
    "start": "1292000",
    "end": "1297200"
  },
  {
    "text": "number of writes because we now have to add a new document every time a revision is made but keeping that in mind uh we",
    "start": "1297200",
    "end": "1305840"
  },
  {
    "text": "kind of apply this to not only where you need to keep track of revisions but where revisions are not so common so",
    "start": "1305840",
    "end": "1312559"
  },
  {
    "text": "that's why insurance is kind of a good policy you don't change it that often unless you're a very volatile lifestyle",
    "start": "1312559",
    "end": "1318400"
  },
  {
    "text": "and need to change your insurance very often uh but yeah and then the one of the biggest pros of this is that it's",
    "start": "1318400",
    "end": "1324960"
  },
  {
    "text": "very very easy to implement even in existing systems because the way you implement it is simply by adding a top",
    "start": "1324960",
    "end": "1331200"
  },
  {
    "text": "level field an identifier in this case we simply used an increasing integer",
    "start": "1331200",
    "end": "1336400"
  },
  {
    "text": "here you can use a different type of way to determine which one is the the most",
    "start": "1336400",
    "end": "1342000"
  },
  {
    "text": "current state but as long as you target the right collection and you target the right revision then that's the way you",
    "start": "1342000",
    "end": "1348960"
  },
  {
    "text": "can apply the document versioning pattern one thing that i did not add in here",
    "start": "1348960",
    "end": "1354320"
  },
  {
    "text": "that is also very very common is something called the schema versioning pattern so in a very very similar",
    "start": "1354320",
    "end": "1360880"
  },
  {
    "text": "fashion you would have two types of schemas so let's say you have a very very different schema and you have",
    "start": "1360880",
    "end": "1367520"
  },
  {
    "text": "you're in the middle of a migration or you added a feature and you wanted to test something out the greatest thing",
    "start": "1367520",
    "end": "1373200"
  },
  {
    "text": "about this is using this same kind of pattern where you denote which schema version you're using you can have both",
    "start": "1373200",
    "end": "1380080"
  },
  {
    "text": "types of schemas exist in the same collection and that's something that a lot of people do when they migrate to",
    "start": "1380080",
    "end": "1386000"
  },
  {
    "text": "something else so instead of having com you know full downtime and doing a full migration over to the new schema even if",
    "start": "1386000",
    "end": "1392320"
  },
  {
    "text": "it's just a single field that you are adding or removing uh you can have both of those documents exist in the same",
    "start": "1392320",
    "end": "1398400"
  },
  {
    "text": "place and you can have them exist for a while now obviously you have to adapt your application to that you have to",
    "start": "1398400",
    "end": "1404400"
  },
  {
    "text": "make sure you are targeting the right schema version in your application and you have to make sure that you remove",
    "start": "1404400",
    "end": "1410640"
  },
  {
    "text": "the older documents or the documents with the schema version you no longer need so that you clean up your",
    "start": "1410640",
    "end": "1416320"
  },
  {
    "text": "collection and also reduce the data size but that is one very very common way to be able to have two different versions",
    "start": "1416320",
    "end": "1422960"
  },
  {
    "text": "of your documents exist yes",
    "start": "1422960",
    "end": "1429720"
  },
  {
    "text": "say again",
    "start": "1430240",
    "end": "1432720"
  },
  {
    "text": "in the current collection uh this is so if you needed to target specifically that particular person and that most",
    "start": "1435520",
    "end": "1442480"
  },
  {
    "text": "current one then that's the easiest way to find it you can also add an index via the revision number and if you have",
    "start": "1442480",
    "end": "1448559"
  },
  {
    "text": "duplication across both the collections it's an easier way to target it via that index",
    "start": "1448559",
    "end": "1453919"
  },
  {
    "text": "so you could have it you know in your question it is also still logical to only have the revision",
    "start": "1453919",
    "end": "1460480"
  },
  {
    "text": "number in the policy revision document but just for being thorough we add it to",
    "start": "1460480",
    "end": "1465679"
  },
  {
    "text": "the existing one that way when we do duplicate and add that particular document to the policy revisions",
    "start": "1465679",
    "end": "1472640"
  },
  {
    "text": "collection we already have that particular revision so you're correct in the current policy one you don't have to have it you could",
    "start": "1472640",
    "end": "1479279"
  },
  {
    "text": "still target it because again building that assumption that the current policy collection is always the",
    "start": "1479279",
    "end": "1486080"
  },
  {
    "text": "current then yes you can build that assumption in that any document in that collection will be the",
    "start": "1486080",
    "end": "1491600"
  },
  {
    "text": "most current but in case that doesn't happen something changes at least you know that you have that particular field",
    "start": "1491600",
    "end": "1497919"
  },
  {
    "text": "that you could query on to make sure that it is the most current one",
    "start": "1497919",
    "end": "1503120"
  },
  {
    "text": "and we actually have way more patterns here right so we do not have time for",
    "start": "1505039",
    "end": "1510400"
  },
  {
    "text": "them and i'm actually thinking of possibly just going into a talk of just the design patterns but the ones that we",
    "start": "1510400",
    "end": "1516880"
  },
  {
    "text": "did go through were the polymorphic which are really good for catalog and content management use cases or single",
    "start": "1516880",
    "end": "1523760"
  },
  {
    "text": "view and mobile applications we have the attribute pattern which are fairly same use cases where we use them mostly and",
    "start": "1523760",
    "end": "1530960"
  },
  {
    "text": "then the document versioning pattern which is also very very good for personalization",
    "start": "1530960",
    "end": "1536559"
  },
  {
    "text": "and then the last one here schema versioning as you can see which is pretty good for any use case",
    "start": "1536559",
    "end": "1543840"
  },
  {
    "text": "all right so you've learned the methodology you now know if you were to leave everything shut down and that's",
    "start": "1546000",
    "end": "1551760"
  },
  {
    "text": "the end of this presentation you now know how to actually do it but i find that going through an example somewhat",
    "start": "1551760",
    "end": "1558000"
  },
  {
    "text": "solidifies that understanding so we'll go through it now and we'll go through it for a casino for analytics",
    "start": "1558000",
    "end": "1564320"
  },
  {
    "text": "application so the first step in this phase is to make sense of our workload",
    "start": "1564320",
    "end": "1572240"
  },
  {
    "text": "who here has been to a casino or las vegas",
    "start": "1573200",
    "end": "1578400"
  },
  {
    "text": "okay that's good it's a dizzying place right it looks like this it is purposely built",
    "start": "1578400",
    "end": "1584960"
  },
  {
    "text": "so you have no idea what time it is you don't know where you are you don't know what's happening it's dark it's a little",
    "start": "1584960",
    "end": "1591679"
  },
  {
    "text": "not so much smoky anymore because they've outlawed that but this is kind of what it looks like and so for our",
    "start": "1591679",
    "end": "1598640"
  },
  {
    "text": "particular application we're going to build one that looks into the slot machines in particular we want to keep",
    "start": "1598640",
    "end": "1605520"
  },
  {
    "text": "track of all of these things all of i think i've pointed them out yeah so there's all kinds of different slot",
    "start": "1605520",
    "end": "1611440"
  },
  {
    "text": "machines right there's one for your favorite tv show one for your favorite movie like there's a slot",
    "start": "1611440",
    "end": "1617919"
  },
  {
    "text": "machine for everything and in our application we want to keep track of certain",
    "start": "1617919",
    "end": "1623600"
  },
  {
    "text": "analytics of our slot machines so that can be the wind chance rates the jackpots that are associated with it the",
    "start": "1623600",
    "end": "1630640"
  },
  {
    "text": "bonus structures depending on what type of slot machine it is and so we'll go through a quick example of how we would",
    "start": "1630640",
    "end": "1637520"
  },
  {
    "text": "possibly develop a data model for that kind of application so",
    "start": "1637520",
    "end": "1643600"
  },
  {
    "text": "when we make sense of our workload we find that these are the most important queries that we want to focus",
    "start": "1643600",
    "end": "1650080"
  },
  {
    "text": "on so first one total player game time so if you have a membership card at most of",
    "start": "1650080",
    "end": "1656399"
  },
  {
    "text": "these casinos when you put that membership card into the slot machine we can tap into that right we know when you",
    "start": "1656399",
    "end": "1663279"
  },
  {
    "text": "put the card in we know when you take the card out and that's a somewhat accurate estimate of how long you spent",
    "start": "1663279",
    "end": "1669520"
  },
  {
    "text": "at that particular slot machine so that is one of the most important rights that we can have as part of our application",
    "start": "1669520",
    "end": "1676399"
  },
  {
    "text": "we have a few more reads that we can use as part of our analytics so that's the wind chance rate the anomalies and the",
    "start": "1676399",
    "end": "1683120"
  },
  {
    "text": "win rates and the top slot machines played so for the wind chance rate there's not much that we can do there",
    "start": "1683120",
    "end": "1689520"
  },
  {
    "text": "there's a nevada gaming commission that kind of sets what those ranges can be",
    "start": "1689520",
    "end": "1694799"
  },
  {
    "text": "and you have very very slight creativity where you can move those ranges but it's kind of set by that board but we have",
    "start": "1694799",
    "end": "1701600"
  },
  {
    "text": "that information and that is a read that we can see what the current range is right now",
    "start": "1701600",
    "end": "1707279"
  },
  {
    "text": "anomalies and win rates so there's analytics on table games but there's also analytics on slot machines so if",
    "start": "1707279",
    "end": "1713360"
  },
  {
    "text": "you've ever seen ocean's 11 or any type of casino movie any heist type of movie",
    "start": "1713360",
    "end": "1718399"
  },
  {
    "text": "there are a crap ton of cameras there that help out with this they measure your temperature",
    "start": "1718399",
    "end": "1724880"
  },
  {
    "text": "they measure the way that you walk they measure what you're looking at at the moment",
    "start": "1724880",
    "end": "1730080"
  },
  {
    "text": "they measure how quickly you get excited and they have all types of ways to tell",
    "start": "1730080",
    "end": "1735360"
  },
  {
    "text": "if that win is genuine or if it's not if you're cheating and so we have a lot of access to that",
    "start": "1735360",
    "end": "1741279"
  },
  {
    "text": "information because most casinos have a very very rigorous fraud detection system",
    "start": "1741279",
    "end": "1747840"
  },
  {
    "text": "and then the top slot machines played so we have some analysis on the slot",
    "start": "1747840",
    "end": "1752880"
  },
  {
    "text": "machine play time from that player card mechanism that we have but we also have replay conversions so in a similar",
    "start": "1752880",
    "end": "1759520"
  },
  {
    "text": "fashion you know some people have their favorite slot machine or they're like this is a hot one i'm gonna win it this",
    "start": "1759520",
    "end": "1765039"
  },
  {
    "text": "it's hot i feel it and they come back to that and they keep pouring money into that we can not only tell how long",
    "start": "1765039",
    "end": "1770799"
  },
  {
    "text": "they've played in that particular slot machine but we know how many times they've come back based again on how many times they've put in their",
    "start": "1770799",
    "end": "1776720"
  },
  {
    "text": "membership card so we know the top of slot machines that have been played because we can aggregate which",
    "start": "1776720",
    "end": "1782559"
  },
  {
    "text": "ones have the most play time and which ones have the most replay conversions",
    "start": "1782559",
    "end": "1787760"
  },
  {
    "text": "and then finally one of the last important rights that we have are jackpot increases so if you've ever seen",
    "start": "1787760",
    "end": "1793679"
  },
  {
    "text": "these slot machines where it's like a network of slot machines maybe they're in a round or a ring sometimes they span",
    "start": "1793679",
    "end": "1800720"
  },
  {
    "text": "across multiple casinos they have all are they're all connected to a single screen and it's a jackpot that currently",
    "start": "1800720",
    "end": "1807039"
  },
  {
    "text": "er continuously increases and as people play the more that people",
    "start": "1807039",
    "end": "1812159"
  },
  {
    "text": "don't win the more the jackpot increases and so those increases are something",
    "start": "1812159",
    "end": "1817600"
  },
  {
    "text": "that we can tap into especially if they span across multiple casinos",
    "start": "1817600",
    "end": "1823600"
  },
  {
    "text": "as the jackpot increases or when somebody wins that final jackpot we reset that jackpot",
    "start": "1823600",
    "end": "1830320"
  },
  {
    "text": "and the new jackpot starts but what we are tapping into is the continuous rights of",
    "start": "1830320",
    "end": "1835840"
  },
  {
    "text": "how many times the jackpot increases so we've made sense of our workload this",
    "start": "1835840",
    "end": "1842799"
  },
  {
    "text": "is the more simplified version and we'll get to why that is in a moment in our third section but those are the most",
    "start": "1842799",
    "end": "1849279"
  },
  {
    "text": "important queries that we find those are the ones that we need for our application so we take that information",
    "start": "1849279",
    "end": "1854880"
  },
  {
    "text": "and now we need to map out which pieces uh or which entities are the most important and what types of",
    "start": "1854880",
    "end": "1860559"
  },
  {
    "text": "relationships exist between all of those things so",
    "start": "1860559",
    "end": "1866080"
  },
  {
    "text": "we find that as part of the information that we have a lot of our information actually falls within a one-to-many type",
    "start": "1866080",
    "end": "1873200"
  },
  {
    "text": "of relationship the only one that is kind of different right here are the slots and casinos because slots can only",
    "start": "1873200",
    "end": "1879919"
  },
  {
    "text": "ever physically be in a single spot in a single location in a single casino so that's the only one-to-one relationship",
    "start": "1879919",
    "end": "1886559"
  },
  {
    "text": "that we find everything else from slots and the different type of bonuses that we have to the casinos",
    "start": "1886559",
    "end": "1893600"
  },
  {
    "text": "or the jackpots and the slots and the players and the memberships these are the most important relationships and the",
    "start": "1893600",
    "end": "1899840"
  },
  {
    "text": "most important entities that we have",
    "start": "1899840",
    "end": "1905080"
  },
  {
    "text": "and now we apply the design patterns so in this particular application this",
    "start": "1906080",
    "end": "1911200"
  },
  {
    "text": "is what our data model could look like so for our slots",
    "start": "1911200",
    "end": "1917279"
  },
  {
    "text": "our document will look like this we want to keep track of uh we have the type the manufacturer the location that it's in",
    "start": "1917279",
    "end": "1924480"
  },
  {
    "text": "we want its serial number bonuses etc and also a revision our jackpots would look like this um",
    "start": "1924480",
    "end": "1932640"
  },
  {
    "text": "we would hold the current total of the jackpots as well as the participating slots",
    "start": "1932640",
    "end": "1938320"
  },
  {
    "text": "we have casinos that we have determined to be a good place to hold the casino information which we also added the top",
    "start": "1938320",
    "end": "1944880"
  },
  {
    "text": "slots uh the floor manager etc and we also have the players which has their",
    "start": "1944880",
    "end": "1950399"
  },
  {
    "text": "membership information are they a high roller and their contact information etc",
    "start": "1950399",
    "end": "1955600"
  },
  {
    "text": "so this is our starting data model or actually the ending data model that we have and we",
    "start": "1955600",
    "end": "1961600"
  },
  {
    "text": "found that these are the pieces or entities that we found would make great collections great",
    "start": "1961600",
    "end": "1968559"
  },
  {
    "text": "top-level collections to hold our data so the first choice we've made in our data model is denoted here so everything",
    "start": "1968559",
    "end": "1976080"
  },
  {
    "text": "you see here that's circled or bordered in white are the things we've decided to embed so for slots every time that we",
    "start": "1976080",
    "end": "1984159"
  },
  {
    "text": "query for information on slots we usually need the bonus structure that is associated with them so we may store",
    "start": "1984159",
    "end": "1991679"
  },
  {
    "text": "bonus information in a different collection but we've also opted to embed them in the parent slot documents",
    "start": "1991679",
    "end": "1998320"
  },
  {
    "text": "because of the way that we query them in a similar fashion we also have the participating slots in the jackpot",
    "start": "1998320",
    "end": "2005679"
  },
  {
    "text": "documents we have the top slots for the casinos that are embedded",
    "start": "2005679",
    "end": "2011760"
  },
  {
    "text": "and we have embedded both the membership information as well as the contact information for our players so all of",
    "start": "2011760",
    "end": "2019200"
  },
  {
    "text": "these decisions all of these embedded pieces of information are purely because we need that information whenever we",
    "start": "2019200",
    "end": "2025840"
  },
  {
    "text": "query it okay that was my phone so that's option number one",
    "start": "2025840",
    "end": "2033279"
  },
  {
    "text": "remember that's decision number one in our data model we've embedded those pieces the next thing that we've decided to",
    "start": "2033279",
    "end": "2039519"
  },
  {
    "text": "apply is the document versioning pattern so we have in our slot documents",
    "start": "2039519",
    "end": "2045679"
  },
  {
    "text": "very similarly to how we did the insurance example right we do have another revision identifier here because",
    "start": "2045679",
    "end": "2052000"
  },
  {
    "text": "slots go through a lot of different changes some of them are being decommissioned some of them are getting",
    "start": "2052000",
    "end": "2058000"
  },
  {
    "text": "maintenance on them so some of them have the bonus structure or the wind chance rate changing slightly so we want to",
    "start": "2058000",
    "end": "2064960"
  },
  {
    "text": "keep track of these particular pieces of information for our slot machines in the same way players also change all",
    "start": "2064960",
    "end": "2072000"
  },
  {
    "text": "the time maybe they had one really really bad weekend in las vegas and they're no longer a high roller we want",
    "start": "2072000",
    "end": "2077760"
  },
  {
    "text": "to keep track of that revision sometimes they're not a member anymore at one casino or the other we want to keep",
    "start": "2077760",
    "end": "2083520"
  },
  {
    "text": "track of that and then in a similar fashion contact information changes not too much but sometimes it does they get",
    "start": "2083520",
    "end": "2089839"
  },
  {
    "text": "a new cell phone they move so we want to keep track of that information as well for our players",
    "start": "2089839",
    "end": "2096960"
  },
  {
    "text": "next is the attribute pattern so this applies particularly to the slots and in",
    "start": "2098560",
    "end": "2103839"
  },
  {
    "text": "this particular case it is because of the bonuses so if you've ever seen",
    "start": "2103839",
    "end": "2110400"
  },
  {
    "text": "the different types of slot machines there are slot machines that have different games on it and that will feed",
    "start": "2110400",
    "end": "2115920"
  },
  {
    "text": "into our next um uh pattern here which is the polymorphic",
    "start": "2115920",
    "end": "2121359"
  },
  {
    "text": "pattern so putting those two together the attribute pattern of the bonuses and polymorphic",
    "start": "2121359",
    "end": "2127359"
  },
  {
    "text": "that shows",
    "start": "2127359",
    "end": "2130920"
  },
  {
    "text": "so we have polymorphic here that's about to be shown so attribute pattern right here is uh we are querying mostly on the",
    "start": "2132480",
    "end": "2139599"
  },
  {
    "text": "bonuses we want to know which bonuses are doing the best which ones are attracting more people to those",
    "start": "2139599",
    "end": "2144720"
  },
  {
    "text": "particular slot machines and with the polymorphic pattern combined we may have",
    "start": "2144720",
    "end": "2150800"
  },
  {
    "text": "different types of slot documents that exist within the slot collection so a",
    "start": "2150800",
    "end": "2156160"
  },
  {
    "text": "typical slot document would look like this this one could be for the one that i was just talking about so in this case we",
    "start": "2156160",
    "end": "2162720"
  },
  {
    "text": "have some game bonuses that hold the type of game the bonus type bonus percentage so slim slot machines have",
    "start": "2162720",
    "end": "2169760"
  },
  {
    "text": "you may see these you can choose the game that you want to play there's texas hold'em there's jacks or better there's",
    "start": "2169760",
    "end": "2176560"
  },
  {
    "text": "blackjack there's all kinds of different permutations of card games that you can choose and depending on which one you",
    "start": "2176560",
    "end": "2182480"
  },
  {
    "text": "choose and depending what level you are at are you in the penny slots are you on the dollar slots and making a lot of",
    "start": "2182480",
    "end": "2188640"
  },
  {
    "text": "money you can choose the game there and then those particular bonuses will also change with that",
    "start": "2188640",
    "end": "2194480"
  },
  {
    "text": "and then a document can also look like this so as i was mentioning there are probably i would bet",
    "start": "2194480",
    "end": "2201920"
  },
  {
    "text": "half of half of my salary to say that there are no more mechanical slot machines",
    "start": "2201920",
    "end": "2207760"
  },
  {
    "text": "left in las vegas so if you've ever been there before you've seen the wheels those are all actual mechanical parts",
    "start": "2207760",
    "end": "2214079"
  },
  {
    "text": "that actually spin and those are very very costly to maintain sometimes they break sometimes they cause people to win",
    "start": "2214079",
    "end": "2220880"
  },
  {
    "text": "and the casino doesn't like that because of a flaw or something and so if you ever go back now and you take a look at",
    "start": "2220880",
    "end": "2226720"
  },
  {
    "text": "those slot machines those are all actually digital wheels they look very very realistic but they are no longer",
    "start": "2226720",
    "end": "2232560"
  },
  {
    "text": "mechanical and so for those types of slot machines their document could look like this so their information would",
    "start": "2232560",
    "end": "2239040"
  },
  {
    "text": "hold not just the decommissioned date let's say they've taken that old one out put a new one in goes into the slot",
    "start": "2239040",
    "end": "2245520"
  },
  {
    "text": "machine graveyard but while it was in service we have a maintenance log for the different types of services that it",
    "start": "2245520",
    "end": "2252960"
  },
  {
    "text": "obtained as well as when that occurred so again polymorphic just states that for all of these different kinds of slot",
    "start": "2252960",
    "end": "2259680"
  },
  {
    "text": "machines and more all of those different type of documents with different types of fields and different types of",
    "start": "2259680",
    "end": "2265760"
  },
  {
    "text": "information according to the slot machine that we're keeping track of can exist in harmony in the same collection",
    "start": "2265760",
    "end": "2274320"
  },
  {
    "text": "and that's it that's our data model so let's take a look at it very quickly we've applied the document versioning",
    "start": "2276320",
    "end": "2282720"
  },
  {
    "text": "pattern with both the players and with the slot machines we have polymorphic pattern applied particularly to the",
    "start": "2282720",
    "end": "2289280"
  },
  {
    "text": "slots because of all the different types of slots there are and we have the attribute pattern applied in particular",
    "start": "2289280",
    "end": "2295280"
  },
  {
    "text": "to the bonus structures for the slots and you'll find that all of those additional sub documents from the top",
    "start": "2295280",
    "end": "2301359"
  },
  {
    "text": "slots to the contact information the membership information the participating slots as well as the",
    "start": "2301359",
    "end": "2308079"
  },
  {
    "text": "the bonuses here those have all been opted to be embedded because of the way that we query them and this is what our",
    "start": "2308079",
    "end": "2314000"
  },
  {
    "text": "data model could look like now this is what it could look like at this moment but let's say our application changes",
    "start": "2314000",
    "end": "2320960"
  },
  {
    "text": "there's some new fancy i think there's a new slot machine now which they're trying to target to millennials where",
    "start": "2320960",
    "end": "2326880"
  },
  {
    "text": "you actually play video games and that's how you play i don't know how that's going to work i",
    "start": "2326880",
    "end": "2332320"
  },
  {
    "text": "don't know what those bonus structures look like there's some of them or you play tetris there's some of them where you play um uh",
    "start": "2332320",
    "end": "2338880"
  },
  {
    "text": "um i'm gonna uh space invaders like they're trying to",
    "start": "2338880",
    "end": "2344160"
  },
  {
    "text": "really get millennial money the money that we don't have and give it to the casino but they're trying to find",
    "start": "2344160",
    "end": "2350160"
  },
  {
    "text": "another audience and they're building those types of slot machines so when those pieces of",
    "start": "2350160",
    "end": "2356079"
  },
  {
    "text": "information change or there's different types of attributes for those types of slot machines we can go through this",
    "start": "2356079",
    "end": "2361280"
  },
  {
    "text": "process again and maybe we find those slot machines are the ones that are doing the best and we change our data",
    "start": "2361280",
    "end": "2366640"
  },
  {
    "text": "model accordingly so that's the best part about doing this type of work and developing this type of data model is",
    "start": "2366640",
    "end": "2373200"
  },
  {
    "text": "that as your application evolves as the pieces of information that you work with changes as your workload changes you go",
    "start": "2373200",
    "end": "2380079"
  },
  {
    "text": "through these phases again and see if they need to be done in order to give you a better data model it's an",
    "start": "2380079",
    "end": "2386400"
  },
  {
    "text": "iterative process that goes along with the application development process that you may go through",
    "start": "2386400",
    "end": "2393200"
  },
  {
    "text": "and those are the three phases right make sense of your workload to gather everything there is to know about your data",
    "start": "2393280",
    "end": "2399119"
  },
  {
    "text": "move into the phase two which is to map out what relationships are there and decide whether to link or to embed them",
    "start": "2399119",
    "end": "2406240"
  },
  {
    "text": "and then only if necessary apply design patterns",
    "start": "2406240",
    "end": "2411838"
  },
  {
    "text": "so the last question what do we actually model for and in most cases it's actually",
    "start": "2411920",
    "end": "2417760"
  },
  {
    "text": "important to choose this early on but you can also do this the second time around and when you it comes to choosing",
    "start": "2417760",
    "end": "2424480"
  },
  {
    "text": "a data model for document databases these are the two options is it simplicity or is it performance",
    "start": "2424480",
    "end": "2430800"
  },
  {
    "text": "and there are a few things that we need to take a look at so",
    "start": "2430800",
    "end": "2436160"
  },
  {
    "text": "for your data model if you want to are on the side of simplicity which is what we usually encourage you'll want to take",
    "start": "2436160",
    "end": "2442880"
  },
  {
    "text": "a look at the size of your project is it a small one is it an early stage",
    "start": "2442880",
    "end": "2447920"
  },
  {
    "text": "app is it an mvp is it something that only you will be using or your team will be using uh what is the size of your",
    "start": "2447920",
    "end": "2454880"
  },
  {
    "text": "team are you going to be the sole person that's handling this application as well as being the dba for it uh do you have a",
    "start": "2454880",
    "end": "2462240"
  },
  {
    "text": "smaller team or you may not have as much dedicated time to put into this what are the data sizes that you are",
    "start": "2462240",
    "end": "2469119"
  },
  {
    "text": "dealing with for your application are you using shared resources do you not have that much traffic what is your",
    "start": "2469119",
    "end": "2475119"
  },
  {
    "text": "expected skill do you have very very few users or do you only have traffic that's maybe like",
    "start": "2475119",
    "end": "2480720"
  },
  {
    "text": "you know a few hundred hundred requests per hour uh some of the applications that i've worked on in the past had that",
    "start": "2480720",
    "end": "2486800"
  },
  {
    "text": "type of skill yet some of the engineers that we had wanted to prematurely optimize for thousands of requests per",
    "start": "2486800",
    "end": "2493680"
  },
  {
    "text": "second i said whoa we don't need that right now we only have this much based on our production logs uh at the most",
    "start": "2493680",
    "end": "2500560"
  },
  {
    "text": "we're only ever going to get maybe like 500 or 600 requests per two or three",
    "start": "2500560",
    "end": "2506480"
  },
  {
    "text": "hours so when you have those types of pieces of information from your first phase",
    "start": "2506480",
    "end": "2512000"
  },
  {
    "text": "it's a good way for you to justify no we need to actually add some more changes because we need more performance",
    "start": "2512000",
    "end": "2519599"
  },
  {
    "text": "because we have this type of expected traffic or you can say no we don't need all of that complexity right now this is",
    "start": "2519599",
    "end": "2526079"
  },
  {
    "text": "what we're dealing with let's choose the simpler data model and of course it falls on the other side",
    "start": "2526079",
    "end": "2532319"
  },
  {
    "text": "of the spectrum if you do need to model for performance so if your project is much larger if you are a distributed",
    "start": "2532319",
    "end": "2539280"
  },
  {
    "text": "project if you have a very very large team or distributed teams you have more people",
    "start": "2539280",
    "end": "2545040"
  },
  {
    "text": "to be able to focus on these issues and focus on continuously iterating that data model if you have you know sizes",
    "start": "2545040",
    "end": "2552480"
  },
  {
    "text": "that are very very large so you are already sharding your clusters and you are on multiple regions and if your",
    "start": "2552480",
    "end": "2559680"
  },
  {
    "text": "expected scale is at that rate you're dealing with thousands of requests per second or you're a very right heavy",
    "start": "2559680",
    "end": "2565520"
  },
  {
    "text": "application then you can start to consider yes performance is probably something we should be modeling for",
    "start": "2565520",
    "end": "2574079"
  },
  {
    "text": "as always er on the side of simplicity so because this is an iterative process because we can do this over and over",
    "start": "2574480",
    "end": "2581280"
  },
  {
    "text": "again you always want to start out with the most simple data model because that's always the easiest one to build on top of it's always the easiest one",
    "start": "2581280",
    "end": "2588160"
  },
  {
    "text": "for you to understand three months later when you look at it and it's always the",
    "start": "2588160",
    "end": "2593280"
  },
  {
    "text": "the suggested route to go through start simply build upon it only if you need it",
    "start": "2593280",
    "end": "2599599"
  },
  {
    "text": "to do that you would focus on the most frequent operations so again those phases are very important because",
    "start": "2599599",
    "end": "2606400"
  },
  {
    "text": "when you decide what you're going to model for simplicity or performance you can pick those pieces out so maybe you",
    "start": "2606400",
    "end": "2612960"
  },
  {
    "text": "have listed out the top 10 or 20 operations that you have for simplicity focus on the most frequent ones focus on",
    "start": "2612960",
    "end": "2619760"
  },
  {
    "text": "the most important ones the ones that your application can't live without embed most things and then again only",
    "start": "2619760",
    "end": "2627119"
  },
  {
    "text": "use a pattern if it makes sense for the most part the pattern that you would probably most likely benefit from are",
    "start": "2627119",
    "end": "2633680"
  },
  {
    "text": "either the document versioning pattern or the schema versioning pattern and that's probably it that's good enough",
    "start": "2633680",
    "end": "2639599"
  },
  {
    "text": "for you if you want a model for performance this is where it gets a little bit more",
    "start": "2639599",
    "end": "2644720"
  },
  {
    "text": "tricky there's a little bit more work involved you need to consider all of those operations you want to make sure",
    "start": "2644720",
    "end": "2650240"
  },
  {
    "text": "you have that granular detail how many writes per second how many reads per second what is your traffic look like at",
    "start": "2650240",
    "end": "2656880"
  },
  {
    "text": "what time what causes traffic spikes etc etc you want to embed and link as",
    "start": "2656880",
    "end": "2663280"
  },
  {
    "text": "necessary so when it comes to performance you won't most likely won't be able to get away",
    "start": "2663280",
    "end": "2668560"
  },
  {
    "text": "with just embedding everything especially if you're dealing with a large number of documents linking will",
    "start": "2668560",
    "end": "2674079"
  },
  {
    "text": "be necessary because embedding too much information is also a bad thing and then of course you want to use as",
    "start": "2674079",
    "end": "2680640"
  },
  {
    "text": "many patterns as necessary and as needed so maybe you're not using all of them right away but you build upon it as you",
    "start": "2680640",
    "end": "2688319"
  },
  {
    "text": "find that you need it so what most people do is they they go somewhere in the middle right actually they want both",
    "start": "2688319",
    "end": "2694800"
  },
  {
    "text": "because everybody wants everything they want their cake and eat it too so you fall right in the middle",
    "start": "2694800",
    "end": "2700400"
  },
  {
    "text": "and so in this case you go most operations maybe the top five maybe",
    "start": "2700400",
    "end": "2705520"
  },
  {
    "text": "the top three you will want to embed and link and then you'll only want to use a few patterns but then continuously add",
    "start": "2705520",
    "end": "2711839"
  },
  {
    "text": "more patterns if you find that your current application doesn't meet some sort of performance threshold that you",
    "start": "2711839",
    "end": "2718480"
  },
  {
    "text": "have set for yourself and with that i want to say salamat that",
    "start": "2718480",
    "end": "2724240"
  },
  {
    "text": "means thank you in tagalog i hope you learned something about data modeling maybe more about slot machines",
    "start": "2724240",
    "end": "2731119"
  },
  {
    "text": "i am very happy to answer any questions that i can answer thank you so much",
    "start": "2731119",
    "end": "2736880"
  },
  {
    "text": "yeah thank you",
    "start": "2736880",
    "end": "2740359"
  },
  {
    "text": "yes",
    "start": "2752240",
    "end": "2755240"
  },
  {
    "text": "if i understand your question correctly can the application determine which version of the document",
    "start": "2772640",
    "end": "2778960"
  },
  {
    "text": "to use",
    "start": "2778960",
    "end": "2781359"
  },
  {
    "text": "okay sure",
    "start": "2785920",
    "end": "2791760"
  },
  {
    "text": "yes so depending on the document database that you use my background is in ex mongodb but mongodb and i'm sure",
    "start": "2800079",
    "end": "2807760"
  },
  {
    "text": "documentdb and cosmos db have something similar you can use either a a trigger or you",
    "start": "2807760",
    "end": "2814000"
  },
  {
    "text": "can use some right rules to enforce that schema so there is schema validation",
    "start": "2814000",
    "end": "2819839"
  },
  {
    "text": "that is applicable to your collections so in that case let's say floor manager",
    "start": "2819839",
    "end": "2824880"
  },
  {
    "text": "you want to make sure that it always has it i mean it will exist if you manually overwrite it if you",
    "start": "2824880",
    "end": "2831359"
  },
  {
    "text": "insert a document without one it's going to be possible but if you want to make sure from the application that it goes",
    "start": "2831359",
    "end": "2837040"
  },
  {
    "text": "through that schema validation there are rules that you can apply that says even though it can exist you don't want it to",
    "start": "2837040",
    "end": "2843200"
  },
  {
    "text": "so there are rules you can apply with schema validation yes",
    "start": "2843200",
    "end": "2850440"
  },
  {
    "text": "so one way that this has been implemented is to do it based on the",
    "start": "2867440",
    "end": "2873280"
  },
  {
    "text": "microservice itself so whatever the microservice needs whatever information that particular piece needs that's what",
    "start": "2873280",
    "end": "2880160"
  },
  {
    "text": "you would i guess use to guide which parts you embed uh and so it won't be as",
    "start": "2880160",
    "end": "2886079"
  },
  {
    "text": "straightforwardly cut as this this isn't a typical application right uh either monolithic application or something",
    "start": "2886079",
    "end": "2891680"
  },
  {
    "text": "that's not so distributed but uh that goal post would move to instead of that",
    "start": "2891680",
    "end": "2896880"
  },
  {
    "text": "particular entity or what you query for you now embed the things that would be needed by that particular service",
    "start": "2896880",
    "end": "2905640"
  },
  {
    "text": "uh repeat one more time",
    "start": "2920880",
    "end": "2924240"
  },
  {
    "text": "okay",
    "start": "2927440",
    "end": "2929838"
  },
  {
    "text": "um if i understand your question correctly there would be the application",
    "start": "2936160",
    "end": "2941440"
  },
  {
    "text": "of both the document versioning pattern so you could have both pieces or both versions of that exist and then it would",
    "start": "2941440",
    "end": "2948640"
  },
  {
    "text": "be up to your application to query the correct collection for the shared objects there is an",
    "start": "2948640",
    "end": "2954800"
  },
  {
    "text": "option to do something called a union all or an out where let's say the pieces",
    "start": "2954800",
    "end": "2960240"
  },
  {
    "text": "that are shared they change very uh very very often if you are changing the base collections",
    "start": "2960240",
    "end": "2967520"
  },
  {
    "text": "so let's say they're shared pieces of information from two collections and that merge together is what's shared",
    "start": "2967520",
    "end": "2972960"
  },
  {
    "text": "across certain different pieces what you can do is use an aggregation pipeline to kind of collect that information and",
    "start": "2972960",
    "end": "2979359"
  },
  {
    "text": "then send it outward so you can replicate or you can update those models and update the collection uh as",
    "start": "2979359",
    "end": "2986480"
  },
  {
    "text": "necessary but one way to do it is to get the aggregation pipeline use some sort of",
    "start": "2986480",
    "end": "2991680"
  },
  {
    "text": "identifier to get the version that you need and then aggregate that information to be sent off to what is being shared i",
    "start": "2991680",
    "end": "2999040"
  },
  {
    "text": "don't know if that answers your question i answered it in the way that i think",
    "start": "2999040",
    "end": "3004000"
  },
  {
    "text": "oh okay um in that case to know where so with the duplication of information if",
    "start": "3010960",
    "end": "3016000"
  },
  {
    "text": "you do embed it there are database triggers that you can use so let's say you are updating the the parent document",
    "start": "3016000",
    "end": "3023680"
  },
  {
    "text": "right you are you are updating the casino and for the uh owner information that we had which we had embedded if we",
    "start": "3023680",
    "end": "3030800"
  },
  {
    "text": "are updating that particular owner document there can be a trigger that looks for anywhere that it has been",
    "start": "3030800",
    "end": "3036640"
  },
  {
    "text": "embedded uh this in this case you would have to use some sort of identifier to know where it",
    "start": "3036640",
    "end": "3041760"
  },
  {
    "text": "has been embedded and then it can do a cascading trigger to all of the documents to update accordingly every",
    "start": "3041760",
    "end": "3048800"
  },
  {
    "text": "time that parent document has been updated so in that way that's one way to do it to kind of keep track of all the",
    "start": "3048800",
    "end": "3055920"
  },
  {
    "text": "places you may have embedded and make sure it does update accordingly when you when you",
    "start": "3055920",
    "end": "3061200"
  },
  {
    "text": "change it",
    "start": "3061200",
    "end": "3064520"
  },
  {
    "text": "yes",
    "start": "3069040",
    "end": "3072040"
  },
  {
    "text": "is",
    "start": "3093760",
    "end": "3096760"
  },
  {
    "text": "yes so the the guideline there is if most of your documents or even some of",
    "start": "3113119",
    "end": "3118720"
  },
  {
    "text": "your documents have to be switched over into a linking manner it's best to actually change all the documents to",
    "start": "3118720",
    "end": "3125200"
  },
  {
    "text": "fall in that format that way you don't have two different uh versions of that so you don't want to reach that that's",
    "start": "3125200",
    "end": "3131119"
  },
  {
    "text": "an excellent point most documents mongodb for example has a 16 megabyte limit per document so if you start",
    "start": "3131119",
    "end": "3137520"
  },
  {
    "text": "reaching that limit or you're even getting anywhere close to that that's also another guideline to say maybe you",
    "start": "3137520",
    "end": "3143040"
  },
  {
    "text": "shouldn't be embedding this is already pretty large you want to probably break it up and start linking those pieces of",
    "start": "3143040",
    "end": "3148960"
  },
  {
    "text": "information so yeah that is a good guideline to just say if you're reaching that limit or if you find that you have",
    "start": "3148960",
    "end": "3155040"
  },
  {
    "text": "a few that you even need to change it's better to have even though it's possible to have both",
    "start": "3155040",
    "end": "3160079"
  },
  {
    "text": "versions exist when working with it in an application it's much easier for you to deal with if",
    "start": "3160079",
    "end": "3165680"
  },
  {
    "text": "you just change everything to the linking format for that document",
    "start": "3165680",
    "end": "3171440"
  },
  {
    "text": "any other questions if you think of one i'll be around for a moment you can come up here as well",
    "start": "3176240",
    "end": "3183680"
  },
  {
    "text": "alright thank you so much",
    "start": "3183680",
    "end": "3187720"
  },
  {
    "text": "you",
    "start": "3228880",
    "end": "3230960"
  }
]