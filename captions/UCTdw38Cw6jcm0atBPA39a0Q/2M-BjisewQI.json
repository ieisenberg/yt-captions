[
  {
    "start": "0",
    "end": "175000"
  },
  {
    "text": "so I was actually filling up but no this is I'm pretty direct but I like to think",
    "start": "80",
    "end": "6040"
  },
  {
    "text": "I'm open and that's what I mean with strong opinions Loosely heal okay and maybe after the talk you will think okay",
    "start": "6040",
    "end": "11960"
  },
  {
    "text": "you're pretty opinionated you know no okay um so yeah and and I've been",
    "start": "11960",
    "end": "17760"
  },
  {
    "text": "maintaining an open source project and this is not about the project itself not about fluent assertions which is the project that I'm talking about this is",
    "start": "17760",
    "end": "23760"
  },
  {
    "text": "more like what I learned from that what I what we practice what we apply and I actually using that same knowledge in my",
    "start": "23760",
    "end": "30519"
  },
  {
    "text": "client's projects I'm a consultant uh which means I go into the clients I work there usually for a long period like one",
    "start": "30519",
    "end": "36800"
  },
  {
    "text": "two three years trying to change the entire development workflow and I I think I've sourced a lot of of this this",
    "start": "36800",
    "end": "43680"
  },
  {
    "text": "uh would say ideas and tools and practices from from fluent assertions but it goes both ways sometimes I run",
    "start": "43680",
    "end": "49879"
  },
  {
    "text": "into a problem at my client's project and then I use fluent assertions to try something new and that that's great",
    "start": "49879",
    "end": "55800"
  },
  {
    "text": "that's really really valuable I have to say so uh um yeah what you can learn",
    "start": "55800",
    "end": "61280"
  },
  {
    "text": "from that project that's basically it and that's my that's my name this is me",
    "start": "61280",
    "end": "66560"
  },
  {
    "text": "I like to call myself an Hands-On architect which basically means I like to find any opportunity any excuse I can",
    "start": "66560",
    "end": "73759"
  },
  {
    "text": "have to actually be coding and not being in meetings and up to now I'm 50 now I've managed to find that balance so",
    "start": "73759",
    "end": "80920"
  },
  {
    "text": "half of my time I'm still coding a little bit more the other half I'm doing code reviews now I'm actually meetings",
    "start": "80920",
    "end": "86479"
  },
  {
    "text": "with managers but yeah I've I've been able to balance that that's a I'm going off topic already but it doesn't matter",
    "start": "86479",
    "end": "92600"
  },
  {
    "text": "I think it's one of the biggest challenges of software developers at some point in their career they're trying to figure out yeah should I",
    "start": "92600",
    "end": "98000"
  },
  {
    "text": "become a manager to earn more money should I become an architect I like to think it doesn't really matter as long",
    "start": "98000",
    "end": "103399"
  },
  {
    "text": "as you're well I was going to use the word passion but David also said that's a negative word so now I basically I I",
    "start": "103399",
    "end": "110479"
  },
  {
    "text": "check all the boxes that he mentioned this morning um I see passion as something that's positive somebody who",
    "start": "110479",
    "end": "116920"
  },
  {
    "text": "actually cares and it doesn't mean I'll try to convince that my way is the right way which is true but but no um I don't",
    "start": "116920",
    "end": "125439"
  },
  {
    "text": "know even how I got that but anyway yeah so I'm I'm a coding architect I've been doing this for 27 years uh I started",
    "start": "125439",
    "end": "131160"
  },
  {
    "text": "with C C++ I actually started programming when I was 11 my com 64 I",
    "start": "131160",
    "end": "136800"
  },
  {
    "text": "don't know if people yes I look at the people with gray hair or no hair they may remember all of this uh switch to C",
    "start": "136800",
    "end": "143360"
  },
  {
    "text": "then C++ later on I discovered C++ sorry I discovered C I got addicted to it I",
    "start": "143360",
    "end": "149000"
  },
  {
    "text": "love it I know there's other languages David just told us we should all look at other language I also like typescript",
    "start": "149000",
    "end": "154800"
  },
  {
    "text": "which happens to look like C yes not a coincident same same designer I'm a",
    "start": "154800",
    "end": "160000"
  },
  {
    "text": "Microsoft MVP since a year uh I'm up for review in a month so I have no clue what it means to if you actually get extended",
    "start": "160000",
    "end": "167200"
  },
  {
    "text": "we'll see uh which gives me no I shouldn't say that it's recorded um and",
    "start": "167200",
    "end": "172319"
  },
  {
    "text": "I'm on Twitter and I'm also on other kind of channels who cares I have a couple of things I have a Blog nobody cares about that I have coding",
    "start": "172319",
    "end": "178239"
  },
  {
    "start": "175000",
    "end": "215000"
  },
  {
    "text": "guidelines which I maintained for the last 23 years I think which you can fork and adapt for your own",
    "start": "178239",
    "end": "184080"
  },
  {
    "text": "organization um there's also Tools around it I have I've been doing a lot of event sourcing I don't you heard about this architecture style so I",
    "start": "184080",
    "end": "190480"
  },
  {
    "text": "created my own library because yeah that's what you do you know you build your own stuff because you know you you",
    "start": "190480",
    "end": "196159"
  },
  {
    "text": "don't like using other people's stuff uh I have an a bdd style testing framework",
    "start": "196159",
    "end": "201239"
  },
  {
    "text": "which I adopted uh and of course I have fluent assertions in case anybody anybody from",
    "start": "201239",
    "end": "207599"
  },
  {
    "text": "the net space okay anybody using fluent Surs okay a",
    "start": "207599",
    "end": "212680"
  },
  {
    "text": "couple of people the rest doesn't care okay cool no worries no worries so about the project this is actually what it is",
    "start": "212680",
    "end": "217959"
  },
  {
    "start": "215000",
    "end": "241000"
  },
  {
    "text": "it's the stupid little library that you use in your automated tests to assert the outcome of a particular scenario and",
    "start": "217959",
    "end": "225000"
  },
  {
    "text": "you can do shoot contain you can do like a particular action shoot throw an exception uh uh you can use it to do a",
    "start": "225000",
    "end": "231360"
  },
  {
    "text": "namespace verification so you can use it a little bit for dependency tracking H you can actually compare entire object",
    "start": "231360",
    "end": "237439"
  },
  {
    "text": "graphs in a smart way and for some reason became popular how why I have no",
    "start": "237439",
    "end": "242760"
  },
  {
    "start": "241000",
    "end": "265000"
  },
  {
    "text": "clue it is apparently a little bit successful I still remember the first time that somebody wrote a blog post",
    "start": "242760",
    "end": "247840"
  },
  {
    "text": "about it like why would you write a blog post about my little Library um I still",
    "start": "247840",
    "end": "252959"
  },
  {
    "text": "don't understand it and as people ask me like oh I'm an open source what made it successful I said dude I have no clue if",
    "start": "252959",
    "end": "259919"
  },
  {
    "text": "you know it you know because I have other products projects that are not as successful we'll see anyway why is it uh",
    "start": "259919",
    "end": "267720"
  },
  {
    "start": "265000",
    "end": "293000"
  },
  {
    "text": "okay maybe because it's a library it you know know libraries are usually easy to replace if you don't like it you rip it out uh it is it has lots of stuff like",
    "start": "267720",
    "end": "275320"
  },
  {
    "text": "clean code it has you know clear release strategy it is designed using test driven development I'm a big proponent",
    "start": "275320",
    "end": "281240"
  },
  {
    "text": "of test driven development I went through the pain I've shot myself in my fot feet um but I still love it and I",
    "start": "281240",
    "end": "289360"
  },
  {
    "text": "well I don't know if this is the reason but apparently people like it so um I",
    "start": "289360",
    "end": "295240"
  },
  {
    "start": "293000",
    "end": "438000"
  },
  {
    "text": "have a lot of slides a lot of things to share I try to structure a little bit by saying like from the idea that the issue that",
    "start": "295240",
    "end": "301840"
  },
  {
    "text": "you create all the way to production so it looks a bit like a a well-designed structure structured presentation which",
    "start": "301840",
    "end": "308160"
  },
  {
    "text": "is never the case with me because I always go of script I also love questions so you have questions if you have comments if you don't like it let",
    "start": "308160",
    "end": "314720"
  },
  {
    "text": "me know then I we can change the subject I can also talk about other topics by the way uh what is it like to I don't",
    "start": "314720",
    "end": "321199"
  },
  {
    "text": "know be in in Sydney or something um it all starts with issues that's what it",
    "start": "321199",
    "end": "326560"
  },
  {
    "text": "starts with so when people actually go to get up will find the fluent assertions organization which has",
    "start": "326560",
    "end": "332639"
  },
  {
    "text": "obviously the main project also has a couple of side projects which are not maintained by myself and my partner",
    "start": "332639",
    "end": "338759"
  },
  {
    "text": "yonas but it's more like we wanted to offer a place for um semiofficial contributors or semiofficial",
    "start": "338759",
    "end": "345360"
  },
  {
    "text": "extensions um to be able to deal so you can actually find that the next step is you want to create an issue",
    "start": "345360",
    "end": "352680"
  },
  {
    "text": "um like with every project is very difficult to control and understand and",
    "start": "352680",
    "end": "358000"
  },
  {
    "text": "organize issues people create issues for everything sometimes it's an actual bug report sometimes it's a requirement",
    "start": "358000",
    "end": "363960"
  },
  {
    "text": "sometimes it's a question uh fortunately in GI up these days there's a nice template that you can set up so if you",
    "start": "363960",
    "end": "369080"
  },
  {
    "text": "actually create an issue this is what you get so you can actually choose what you want this is built in giup so you",
    "start": "369080",
    "end": "374440"
  },
  {
    "text": "can actually use it yourself like is it indeed an a a bug report is it an API suggestion I'll talk about this in a",
    "start": "374440",
    "end": "380319"
  },
  {
    "text": "minute but also links to the documentation obviously it's an open source project so we want you to sponsor",
    "start": "380319",
    "end": "387400"
  },
  {
    "text": "the project because we don't do it as o flow I should remove that as I just mentioned concluded nobody's using sto",
    "start": "387400",
    "end": "394080"
  },
  {
    "text": "flow maybe I should say ask chat GPT or something like that that makes sense we do have a slck um this is nice because I",
    "start": "394080",
    "end": "401720"
  },
  {
    "text": "also use it in my client's project because it streamlines this whole process it forces people to think like",
    "start": "401720",
    "end": "407080"
  },
  {
    "text": "I'm not just going to dump something it doesn't work you know like clients or like users actually do uh but it",
    "start": "407080",
    "end": "413639"
  },
  {
    "text": "streamline streamline this process and you can actually change that all that there's a nice yaml format you can choose in your get a pro is anybody",
    "start": "413639",
    "end": "420120"
  },
  {
    "text": "using GitHub professionally oh as your devops I'm sorry for you",
    "start": "420120",
    "end": "427080"
  },
  {
    "text": "people jira that is not for Source control or bit bucket or gitlab G bit",
    "start": "427080",
    "end": "434000"
  },
  {
    "text": "bucket oh sorry bit bucket also no I'm not going to say that everything is being recorded so that's one thing the",
    "start": "434000",
    "end": "439639"
  },
  {
    "text": "other thing is we get so many requests now that we actually want to streamline the requests for a new feature and we",
    "start": "439639",
    "end": "446520"
  },
  {
    "text": "don't want because what happens you know you have these people that really love to contribute and they say Okay I want to be part of this fluent insertion",
    "start": "446520",
    "end": "452599"
  },
  {
    "text": "thing um I'm going to create a pool request with this nice feature this nice new API that they spent weeks on and",
    "start": "452599",
    "end": "459400"
  },
  {
    "text": "then we look at it and think eh that's a bit Niche that doesn't fit in the code base and then we reject it and we didn't",
    "start": "459400",
    "end": "466000"
  },
  {
    "text": "do that all the time we actually accepted the feature I don't know if you in the net space you may remember this ancient feature called data sets we",
    "start": "466000",
    "end": "473560"
  },
  {
    "text": "accepted the pool request where somebody added data set support that was a mistake and that led us to actually in",
    "start": "473560",
    "end": "479520"
  },
  {
    "text": "introduce a a process to approve this whole thing and that's nice because you can use labels for that so whenever",
    "start": "479520",
    "end": "484720"
  },
  {
    "text": "somebody submits a proposal we actually have labels to identify what's the level",
    "start": "484720",
    "end": "490199"
  },
  {
    "text": "of that so initially it's an API suggestion then we have some discussions about it like a real project uh figuring",
    "start": "490199",
    "end": "496800"
  },
  {
    "text": "out whether it fits in the whole project whether it should actually be a separate extension or something separate library",
    "start": "496800",
    "end": "502360"
  },
  {
    "text": "and only when it's approved uh and people actually want to help us they can create a pool request they shouldn't do",
    "start": "502360",
    "end": "507440"
  },
  {
    "text": "that before sometimes they do but then it's more like a draft like to help understand the feature because you can",
    "start": "507440",
    "end": "513399"
  },
  {
    "text": "imagine it's a stupid stupid little library but apparently it's like based on my history it can be very complicated",
    "start": "513399",
    "end": "518800"
  },
  {
    "text": "to keep it consistent to actually think about all the edge cases um and then you can actually see it like that very",
    "start": "518800",
    "end": "525320"
  },
  {
    "text": "simple thing labels can be used um as I said it's not trivial it is a library",
    "start": "525320",
    "end": "532720"
  },
  {
    "text": "but it has complexity in it it has to be consistent I I like to believe that one of the aspects that made it successful",
    "start": "532720",
    "end": "538959"
  },
  {
    "text": "is Maybe that is very intuitive that doesn't come from like out of the blue we have to actually think about that and",
    "start": "538959",
    "end": "544839"
  },
  {
    "text": "experiment with that so we have lots of challenges like does it actually fit in the main library is this going to cause",
    "start": "544839",
    "end": "550920"
  },
  {
    "text": "breaking changes because we really care about the versions and the version strategy just like every other project",
    "start": "550920",
    "end": "556279"
  },
  {
    "text": "anybody doing cementing versioning okay that's good actually it's a pretty good group doing that uh",
    "start": "556279",
    "end": "562360"
  },
  {
    "text": "but also consistency like this one should all satisfy that sounds you pass",
    "start": "562360",
    "end": "567880"
  },
  {
    "text": "in a predicate and you expect all items in a collection to satisfy that predicate that that's easy right but",
    "start": "567880",
    "end": "574399"
  },
  {
    "text": "what if the collection is empty should that fail or should that succeed that on itself can be a debate or if you compare",
    "start": "574399",
    "end": "583160"
  },
  {
    "text": "records CP you have records how should it compare records records are value typed objects they have value semantics",
    "start": "583160",
    "end": "589760"
  },
  {
    "text": "should we treat it as such or are people using records as a way to create data transfer objects and if you compare to",
    "start": "589760",
    "end": "596120"
  },
  {
    "text": "records you actually want to compare the properties or something like that that was a big discussion and that is something we have to deal with um okay",
    "start": "596120",
    "end": "604200"
  },
  {
    "text": "yeah that's the record I mention by the way two same thing async post fix that is almost like a holy war there like",
    "start": "604200",
    "end": "610959"
  },
  {
    "text": "Taps versus spaces or using far should we use the async post fix that's stuff and the thing is if you make the wrong",
    "start": "610959",
    "end": "617120"
  },
  {
    "text": "decision we have to maintain that for many years because we don't introduce breaking changes uh until the next major",
    "start": "617120",
    "end": "623160"
  },
  {
    "text": "verion and that can take two or three years before we follow that just like a real project that is something I have to",
    "start": "623160",
    "end": "628760"
  },
  {
    "text": "deal with every every day in my client's projects as well so if you start exploring the repository there's a",
    "start": "628760",
    "end": "634720"
  },
  {
    "start": "632000",
    "end": "771000"
  },
  {
    "text": "couple of things which are interesting read me who has a read me on all their repositories one",
    "start": "634720",
    "end": "641040"
  },
  {
    "text": "two okay so the rest of the repository you just clone it and then you're like okay now what so I think there was a",
    "start": "641040",
    "end": "648160"
  },
  {
    "text": "statement I think it was Martin Fowler that said like if I cannot clone your repository and get the application",
    "start": "648160",
    "end": "653560"
  },
  {
    "text": "running in under five minutes you're doing something wrong that's a pretty bold statement but I actually like to",
    "start": "653560",
    "end": "658800"
  },
  {
    "text": "see that a Uris uh a good readme can help with that like you know what does it take to build it what are the",
    "start": "658800",
    "end": "664920"
  },
  {
    "text": "prerequisites uh uh is there a script that you can set up your environment of course I use all these",
    "start": "664920",
    "end": "670320"
  },
  {
    "text": "nice C out icons because that looks cool you know the coverage everything um but",
    "start": "670320",
    "end": "675360"
  },
  {
    "text": "that's the starting point and I also I'm at the client right now and none of the repo had to reap me none of them you",
    "start": "675360",
    "end": "682079"
  },
  {
    "text": "know and there was also no other place where you found that documentation so I've actually made it the requirement as",
    "start": "682079",
    "end": "687120"
  },
  {
    "text": "part of the source control guidelines or whatever you want to call there should be decent R me with the information that you need because people come and go",
    "start": "687120",
    "end": "694680"
  },
  {
    "text": "that's Logic the information that you do not want to lose contribution guidelines same thing",
    "start": "694680",
    "end": "700839"
  },
  {
    "text": "I like to adopt this inner sourcing idea I don't know if you know that as basically like an open source project I",
    "start": "700839",
    "end": "706639"
  },
  {
    "text": "like to apply that within the company especially if there's multiple teams lots of different repositories I want to",
    "start": "706639",
    "end": "711839"
  },
  {
    "text": "be able to remove any barrier where one team can contribute to another team's",
    "start": "711839",
    "end": "717079"
  },
  {
    "text": "code base because that increases the quality just like open source uh projects they're very visible to the",
    "start": "717079",
    "end": "723519"
  },
  {
    "text": "world so usually the the authors of the libraries or the projects care about the quality of the code I like to see the",
    "start": "723519",
    "end": "729760"
  },
  {
    "text": "same thing happening within the companies it is not your hidden little repository that only a couple of people",
    "start": "729760",
    "end": "735279"
  },
  {
    "text": "look at and the rest shouldn't care No it should be open if you find a bug if you see something is missing in the",
    "start": "735279",
    "end": "740639"
  },
  {
    "text": "documentation everybody should be able to go there create a pool request improve the documentation suggest something you know with everything I",
    "start": "740639",
    "end": "747279"
  },
  {
    "text": "showed you here and that is part of that being able to contribute understanding what is expected from that I mean this",
    "start": "747279",
    "end": "752920"
  },
  {
    "text": "is a very elaborate example uh but I've seen simpler ones but that's perfectly okay and giup actually has a nice",
    "start": "752920",
    "end": "759320"
  },
  {
    "text": "buil-in mechanism that you can actually find the guidelines the contribution guidelines if you use a particular name",
    "start": "759320",
    "end": "765519"
  },
  {
    "text": "a lot of people think that that's only for open source no inner sourcing is extremely valuable for the companies",
    "start": "765519",
    "end": "771040"
  },
  {
    "text": "that I work with release notes yes of course we have release notes and we have release notes like uh generated from",
    "start": "771040",
    "end": "778040"
  },
  {
    "text": "markdown files to also make a distinction between technical release notes and more functional release notes",
    "start": "778040",
    "end": "783360"
  },
  {
    "text": "I'll show you later on how we actually build those but it's basically just a markdown file and it's part of the same",
    "start": "783360",
    "end": "788440"
  },
  {
    "text": "codebase which means if somebody produces a pool request they also have to include the functional documentation",
    "start": "788440",
    "end": "794480"
  },
  {
    "text": "of that pool request that change so that they're always in sync because the worst thing that can happen is that your",
    "start": "794480",
    "end": "799839"
  },
  {
    "text": "documentation is out of sync with the implementation which happens a lot in different",
    "start": "799839",
    "end": "805000"
  },
  {
    "start": "804000",
    "end": "941000"
  },
  {
    "text": "projects um to actually work with GI I use a lot of different tools this is kind of how my environment looks like I",
    "start": "805000",
    "end": "811920"
  },
  {
    "text": "like colors I don't know I like colors I use a lot of different tools I use window terminal because it allows me to",
    "start": "811920",
    "end": "818240"
  },
  {
    "text": "use Powershell command line and even a bash if I need to use that all in the same window I like use Powershell I like",
    "start": "818240",
    "end": "825519"
  },
  {
    "text": "to use all my porsch that's the thing that creates all these colors uh you can completely get nuts you can go nuts with",
    "start": "825519",
    "end": "831240"
  },
  {
    "text": "all the different colors if you want to but yeah I use that a lot I use PS read line because I like to use my keyboard",
    "start": "831240",
    "end": "837040"
  },
  {
    "text": "to go back into the history you know find the previous command because I like keyboards I like I'm a typing person I",
    "start": "837040",
    "end": "843440"
  },
  {
    "text": "was I I have suffered from ARS ey problems like 20 years ago and since then I've been adopting a more keyboard",
    "start": "843440",
    "end": "849600"
  },
  {
    "text": "focused way but I'm not dogmatic about that unless I also like this um this is",
    "start": "849600",
    "end": "854759"
  },
  {
    "text": "interesting because Phil hack is actually here so I still have to shake his hand and thank him for this article",
    "start": "854759",
    "end": "860360"
  },
  {
    "text": "um this article is about a bunch of git extensions or git aliases that you define that will make your life a lot",
    "start": "860360",
    "end": "866240"
  },
  {
    "text": "easier especially if you use git on the command line interface I use Z location which is a",
    "start": "866240",
    "end": "872720"
  },
  {
    "text": "very powerful CD command so instead of typing CD I'd use Z and the Z will",
    "start": "872720",
    "end": "878839"
  },
  {
    "text": "actually look in the history and find a folder that looks like that that I visited regularly which is nice because",
    "start": "878839",
    "end": "884519"
  },
  {
    "text": "I always open a power shell command line I type z. fluent and it jumps immediately to my working",
    "start": "884519",
    "end": "890240"
  },
  {
    "text": "directory I don't know if you heard about that but I'm not dogmatic I actually use a CLE a guy tool as well",
    "start": "890240",
    "end": "896800"
  },
  {
    "text": "this is kit Kraken actually is my currently my favorite um so I actually use command line tools",
    "start": "896800",
    "end": "902399"
  },
  {
    "text": "and the GUI I use command line tools to Quick Check quickly check out the branches to quickly amend my changes",
    "start": "902399",
    "end": "908440"
  },
  {
    "text": "push my latest changes through a temporary Branch but when I'm ready to actually create a pool Quest I use a",
    "start": "908440",
    "end": "914279"
  },
  {
    "text": "visual tool to figure out which changes should Belong Together on which which",
    "start": "914279",
    "end": "919880"
  },
  {
    "text": "commit I also use the the built-in uh git client for that Ryder has jet brains",
    "start": "919880",
    "end": "925680"
  },
  {
    "text": "Ryder but I still like this I like the visual I like to have over you I like to understand what's going on so yeah I use",
    "start": "925680",
    "end": "932880"
  },
  {
    "text": "both and apparently it's camps there's people that only use the guy and there's people only use C it doesn't make sense",
    "start": "932880",
    "end": "938000"
  },
  {
    "text": "to me just use both they both have value right so in terms of patterns um well oh",
    "start": "938000",
    "end": "945560"
  },
  {
    "start": "941000",
    "end": "1117000"
  },
  {
    "text": "this is still the same mistake things like Taps versus spacing or the maximum length of a line all of",
    "start": "945560",
    "end": "953079"
  },
  {
    "text": "this can be solved using editor config you can put that there you do it once for your repository and you never have",
    "start": "953079",
    "end": "959199"
  },
  {
    "text": "to look back and if you have a proper IDE it can completely automatically format your code base continuously uh",
    "start": "959199",
    "end": "965759"
  },
  {
    "text": "with jet brain Rider if you use visual studio with res sharper you can even have a shortcut key that will interpret",
    "start": "965759",
    "end": "970959"
  },
  {
    "text": "all these settings including the one which is specific for jet brain which is the do settings file and even reformat",
    "start": "970959",
    "end": "976639"
  },
  {
    "text": "and also apply coding style settings if you anybody who's programing C guess big",
    "start": "976639",
    "end": "981959"
  },
  {
    "text": "chunk of people oh no not that many actually um but it works actually with all the different tools I also use it",
    "start": "981959",
    "end": "988519"
  },
  {
    "text": "for typ script and JavaScript you just Auto format everything uh including es lint if you're using for example",
    "start": "988519",
    "end": "994800"
  },
  {
    "text": "typescript and then you don't have if if you're in a c space you can also put all the jet brain specific elements in there",
    "start": "994800",
    "end": "1001639"
  },
  {
    "text": "and that's nice because then you don't have to bother about it you don't actually have to mention them in code reviews because it will mostly happen",
    "start": "1001639",
    "end": "1007360"
  },
  {
    "text": "automatically or the next time you do an auto reform mode and everything will be fine and aligned with your",
    "start": "1007360",
    "end": "1012560"
  },
  {
    "text": "standards also if you're in Ault net space there's a lot of analyzers that you can use that will automatically run",
    "start": "1012560",
    "end": "1017920"
  },
  {
    "text": "in your codebase when you whenever you compile that can improve the codebase like XML comment formating uh maybe if",
    "start": "1017920",
    "end": "1024720"
  },
  {
    "text": "you use Link there's a lot of things you can do M you can mistake you can do wrong you know because causing",
    "start": "1024720",
    "end": "1029760"
  },
  {
    "text": "performance issues these analyzes will suggest improvements that will make your codebase more efficient and there I I",
    "start": "1029760",
    "end": "1036720"
  },
  {
    "text": "learned a lot of things from these from these analyzers again because there's people smarter than me and there's probably everybody U that I learn from",
    "start": "1036720",
    "end": "1044480"
  },
  {
    "text": "the C coding guidelines is actually the one that fits with my guidelines will also Al allow you to detect additional",
    "start": "1044480",
    "end": "1050600"
  },
  {
    "text": "things nested conditional statements you have them every language you know this question mark and then the semicolon",
    "start": "1050600",
    "end": "1056679"
  },
  {
    "text": "that thing remember I think most languages have it some people actually like to Nest them you know can imagine",
    "start": "1056679",
    "end": "1063280"
  },
  {
    "text": "how complicated that is to read I mean the whole point of my code is to be readable understandable without",
    "start": "1063280",
    "end": "1069280"
  },
  {
    "text": "requiring a lot of cognitive lad to be able to interpret what the code is doing that helps with that and long methods",
    "start": "1069280",
    "end": "1075440"
  },
  {
    "text": "who has methods longer than 40 lines",
    "start": "1075440",
    "end": "1080600"
  },
  {
    "text": "yeah is happy with it no yeah well I mean I know that Sona cloud and Sona",
    "start": "1080600",
    "end": "1086640"
  },
  {
    "text": "Cube can actually detect that but if you're in C you can even have that all the way before it runs the sonar Cloud",
    "start": "1086640",
    "end": "1092200"
  },
  {
    "text": "so your feedback loop is much smaller simple things like single type or using the correct exception types which you",
    "start": "1092200",
    "end": "1098039"
  },
  {
    "text": "can do wrong and and if you're in a cop space actually using proper async support there's a lot of things you can",
    "start": "1098039",
    "end": "1104679"
  },
  {
    "text": "do wrong you would not be the first to Define an asyn method and not a it and",
    "start": "1104679",
    "end": "1110000"
  },
  {
    "text": "not and then being surprised at production that something doesn't work of course if you practice test driven development you write all your unit test",
    "start": "1110000",
    "end": "1116159"
  },
  {
    "text": "you don't have that problem this is also a very generic thing I've been looking for ways to name",
    "start": "1116159",
    "end": "1123559"
  },
  {
    "start": "1117000",
    "end": "1238000"
  },
  {
    "text": "my tests and there's a lot of different ways of doing it lot of different opinions about that so this is what I",
    "start": "1123559",
    "end": "1129320"
  },
  {
    "text": "used to do these very long functional names you know when something happens it",
    "start": "1129320",
    "end": "1134559"
  },
  {
    "text": "should do something else I've been doing this for a long time uh I still think",
    "start": "1134559",
    "end": "1139679"
  },
  {
    "text": "personally uh it's much better than class name method name scenario I don't",
    "start": "1139679",
    "end": "1145039"
  },
  {
    "text": "like that I also don't like Pascal casing I like this because it's almost like English you know where the space",
    "start": "1145039",
    "end": "1151200"
  },
  {
    "text": "underscores but I found this very fos so I've been looking for ways to make this more efficient um so I started actually",
    "start": "1151200",
    "end": "1158640"
  },
  {
    "text": "using nested classes to group related scenarios in this case I'm using the the",
    "start": "1158640",
    "end": "1164320"
  },
  {
    "text": "name of an API BCS that's a method in the open source library and influence assertions so I don't have to repeat",
    "start": "1164320",
    "end": "1170799"
  },
  {
    "text": "that every time but quite often I use capabilities here so if it's a more functional codebase I use capabilities",
    "start": "1170799",
    "end": "1176679"
  },
  {
    "text": "to group things in a related way because it it basically removes all this noise from your method names from your test",
    "start": "1176679",
    "end": "1182159"
  },
  {
    "text": "names but I found this still quite long so I've been experimenting with things like this um and these days I've settled on",
    "start": "1182159",
    "end": "1189320"
  },
  {
    "text": "this fact-based very short names I don't use words like when and shoot anymore I",
    "start": "1189320",
    "end": "1195600"
  },
  {
    "text": "just keep it very short but sure not too short it should still be fose enough to",
    "start": "1195600",
    "end": "1201280"
  },
  {
    "text": "understand what's going on within the context so I don't repeat the name of the the the surrounding classes for",
    "start": "1201280",
    "end": "1207440"
  },
  {
    "text": "that I liked it again strong opinions Loosely help maybe I'll find something",
    "start": "1207440",
    "end": "1212520"
  },
  {
    "text": "else in the future will change again uh the problem of course you have to keep your code base consistent and we haven't",
    "start": "1212520",
    "end": "1218120"
  },
  {
    "text": "even done that we're still renaming all the tests we have like 6,000 unit tests",
    "start": "1218120",
    "end": "1223760"
  },
  {
    "text": "so yeah renaming them one by one we do that cool thing is we have contributors so but there's actually people that love",
    "start": "1223760",
    "end": "1229760"
  },
  {
    "text": "to rename these things and create these pool requests and I'm not joking apparently people like",
    "start": "1229760",
    "end": "1235919"
  },
  {
    "text": "that OCD I guess so which I have myself but yeah I've learned to control that",
    "start": "1235919",
    "end": "1241640"
  },
  {
    "start": "1238000",
    "end": "1419000"
  },
  {
    "text": "documenting exceptions I know that in Java it's pretty common to document your exceptions I don't know I like to think",
    "start": "1241640",
    "end": "1247520"
  },
  {
    "text": "exceptions should not be documented because you shouldn't even use them I mean no I have to rephrase that sorry uh",
    "start": "1247520",
    "end": "1253520"
  },
  {
    "text": "I like to think that you should never catch them because exceptions are exceptions if they have happen they",
    "start": "1253520",
    "end": "1259320"
  },
  {
    "text": "should kill the application or fill the test but you shouldn't actually catch them why would you catch an argam N",
    "start": "1259320",
    "end": "1266280"
  },
  {
    "text": "exception that that's an internal error right if that effort happens in production that's an internal error",
    "start": "1266280",
    "end": "1271520"
  },
  {
    "text": "unless you want to swallow exceptions but then you catch a generic one so I don't see value in that but there were",
    "start": "1271520",
    "end": "1277600"
  },
  {
    "text": "people in the community that really thought it would be useful and somebody created a pool request documenting all",
    "start": "1277600",
    "end": "1283080"
  },
  {
    "text": "the exceptions and we felt like okay maybe we should do it you know because",
    "start": "1283080",
    "end": "1289520"
  },
  {
    "text": "that person really cared and he's also contributing really sometimes you have to you know pick your battles so we do",
    "start": "1289520",
    "end": "1295760"
  },
  {
    "text": "that as well it nice thing is you get actually nice documentation your IDE about the",
    "start": "1295760",
    "end": "1300880"
  },
  {
    "text": "exception another net specific thing is if you have lots of project in solution",
    "start": "1300880",
    "end": "1306000"
  },
  {
    "text": "you can define a do props file and put everything that you would normally put in your CS project into this file and it",
    "start": "1306000",
    "end": "1312840"
  },
  {
    "text": "will be applied to everything in that directory which is nice because if you have lots of projects you can actually reuse settings you only have to update",
    "start": "1312840",
    "end": "1319919"
  },
  {
    "text": "the dependency once and will be applied everywhere again net specific and not",
    "start": "1319919",
    "end": "1325039"
  },
  {
    "text": "everybody's programming net then I wonder what's the rest actually programming in",
    "start": "1325039",
    "end": "1330320"
  },
  {
    "text": "any or not programming at all Architects managers okay fair",
    "start": "1330320",
    "end": "1335679"
  },
  {
    "text": "enough um bdd style testing that's another way of doing testing so a lot of",
    "start": "1335679",
    "end": "1341600"
  },
  {
    "text": "people probably know about this arrange act Asser syntax that is being used a lot uh to structure your tests sometimes",
    "start": "1341600",
    "end": "1349000"
  },
  {
    "text": "you have code that is more orchestrational by Nature so in that case one action triggers multiple uh",
    "start": "1349000",
    "end": "1357320"
  },
  {
    "text": "assertions and for those particular scenarios I like to use a more what I call bdd style testing has nothing to do",
    "start": "1357320",
    "end": "1363919"
  },
  {
    "text": "with behavior driven development per se because that's more more organized or more oriented uh uh towards more the",
    "start": "1363919",
    "end": "1370880"
  },
  {
    "text": "business people for example but the idea of given when then works and this is an example of using the um chill Library",
    "start": "1370880",
    "end": "1378919"
  },
  {
    "text": "and what you can see here for example is that I use stuff like set the to a",
    "start": "1378919",
    "end": "1384159"
  },
  {
    "text": "particular value and then you can actually um in the in the fact you can",
    "start": "1384159",
    "end": "1389320"
  },
  {
    "text": "refer no not in the fact a little bit up in the when you can refer to the subject you can actually refer to objects so you",
    "start": "1389320",
    "end": "1395520"
  },
  {
    "text": "don't have to use private variables also cleans up things that need to be disposed which is specific to net you",
    "start": "1395520",
    "end": "1400919"
  },
  {
    "text": "can check it out it's just an alternative way of structuring your test and we also use it in the open source library because we do actually have code",
    "start": "1400919",
    "end": "1407919"
  },
  {
    "text": "that needs to be cleaned up because we have shared mutable State again use one or the other",
    "start": "1407919",
    "end": "1414120"
  },
  {
    "text": "actually we use both because they both solve a problem that we have if you're interested check it",
    "start": "1414120",
    "end": "1420840"
  },
  {
    "start": "1419000",
    "end": "1453000"
  },
  {
    "text": "out another specific thing in xunit is um if you create tests with a lot of",
    "start": "1420840",
    "end": "1426679"
  },
  {
    "text": "different scenarios you can use this Theory attribute on top of that and you can pass in a whole bunch of uh",
    "start": "1426679",
    "end": "1432360"
  },
  {
    "text": "variables or arguments and then the same test is executed multiple times this used to be untyped now there's something",
    "start": "1432360",
    "end": "1439600"
  },
  {
    "text": "called Theory data which is specific to xunit that you can use and then your",
    "start": "1439600",
    "end": "1444679"
  },
  {
    "text": "test becomes actually typ saave which is nothing really major it's just a tiny",
    "start": "1444679",
    "end": "1450840"
  },
  {
    "text": "thing to improve your code base if you're in adult net space and you program C shop one of the big",
    "start": "1450840",
    "end": "1457400"
  },
  {
    "start": "1453000",
    "end": "1593000"
  },
  {
    "text": "struggles which which you have which a lot of people have is they have to use old versions of net old versions as in",
    "start": "1457400",
    "end": "1464000"
  },
  {
    "text": "still properly maintained you know have been in production for many years but you cannot use you cannot go to net net",
    "start": "1464000",
    "end": "1470760"
  },
  {
    "text": "core or one of the newer versions you're still stuck with 4.7 um C has a lot of improvements like",
    "start": "1470760",
    "end": "1478279"
  },
  {
    "text": "if you use this one on the top for btim the top the top line is pretty difficult to read so if the previous character is",
    "start": "1478279",
    "end": "1486039"
  },
  {
    "text": "an m% and the L the statement is longer than two two characters and the last but",
    "start": "1486039",
    "end": "1492640"
  },
  {
    "text": "second item is a dollar sign and the last one is is an m% and okay very",
    "start": "1492640",
    "end": "1498960"
  },
  {
    "text": "difficult to read the bottom one is actually what you can do in newer vers of C I can just say the statement is a",
    "start": "1498960",
    "end": "1504799"
  },
  {
    "text": "collection which ends with those two characters much more readable unless you're on net 4. something you cannot",
    "start": "1504799",
    "end": "1510679"
  },
  {
    "text": "really use that similar with this one you know you can do expression uh pattern expressions in C you could",
    "start": "1510679",
    "end": "1517760"
  },
  {
    "text": "already do that in older versions but it be it got a lot better recently um but again you're stuck with",
    "start": "1517760",
    "end": "1524360"
  },
  {
    "text": "do net 4.a if you use regular Expressions which you should never do do",
    "start": "1524360",
    "end": "1529520"
  },
  {
    "text": "unless you have a problem that needs it uh which can happen I don't want to be dogmatic um actually if you put this",
    "start": "1529520",
    "end": "1537279"
  },
  {
    "text": "attribute this string syntax attribute in front of it then your IDE will actually display information actually",
    "start": "1537279",
    "end": "1542520"
  },
  {
    "text": "provide guidance how to interpret this regular expression except if you're an old adult net version because you don't",
    "start": "1542520",
    "end": "1548559"
  },
  {
    "text": "have that thing but there's a solution and it's called poly shop that's an open",
    "start": "1548559",
    "end": "1554000"
  },
  {
    "text": "source Library it's a simple net package you add it to your project and it will automatically poell all those missing",
    "start": "1554000",
    "end": "1559679"
  },
  {
    "text": "parts so even with do net 4.8 you can only use the new C syntax features they",
    "start": "1559679",
    "end": "1565279"
  },
  {
    "text": "will just light up automatically and we use that as well in influence insertions because we do Target all version of the",
    "start": "1565279",
    "end": "1571480"
  },
  {
    "text": "do nut framework because a lot of people are using that this is what it looks like it's basically using code",
    "start": "1571480",
    "end": "1577200"
  },
  {
    "text": "generators uh which is pretty new but it works really really nice you can also",
    "start": "1577200",
    "end": "1582679"
  },
  {
    "text": "gener write those class yourself and put them in a system namespace works equally well The NET Framework doesn't care is",
    "start": "1582679",
    "end": "1588919"
  },
  {
    "text": "just synthetical sugar and the runtime will pick it up for you um to build and test locally yeah",
    "start": "1588919",
    "end": "1596679"
  },
  {
    "start": "1593000",
    "end": "1709000"
  },
  {
    "text": "that's one thing who likes yaml who likes yaml for build scripts really how do you maintain yaml",
    "start": "1596679",
    "end": "1605880"
  },
  {
    "text": "I mean you cannot debug it you cannot test it until you actually build your pipeline uh if you have one space you're",
    "start": "1605880",
    "end": "1613320"
  },
  {
    "text": "missing the whole thing falls apart apart you cannot run it locally you cannot refactor it and that's why I like",
    "start": "1613320",
    "end": "1620480"
  },
  {
    "text": "C for Bill scripts and I use a library called nuke for that not the best name",
    "start": "1620480",
    "end": "1625720"
  },
  {
    "text": "in the current state of affairs in the world um but yeah it's a CP library and",
    "start": "1625720",
    "end": "1631440"
  },
  {
    "text": "and it's just a nut package that you can use and it actually creates a fully functional build pipeline so you it",
    "start": "1631440",
    "end": "1637399"
  },
  {
    "text": "looks like this if you run it locally it's just a bunch of classes you can you",
    "start": "1637399",
    "end": "1642440"
  },
  {
    "text": "sorry you can run it at the command line you see all the targets if I if you're old enough you may remember make this",
    "start": "1642440",
    "end": "1648559"
  },
  {
    "text": "old stuff it looks like make buy shop um it can generate these nice visual plans",
    "start": "1648559",
    "end": "1654360"
  },
  {
    "text": "so you see all the dependencies you see the order and things are executed which is not something you can do with yaml",
    "start": "1654360",
    "end": "1660080"
  },
  {
    "text": "and you run this locally so you build deploy Deb everything because this is what it looks like it's just C Shar",
    "start": "1660080",
    "end": "1666679"
  },
  {
    "text": "that's nice it's it's again it's a tiny little library that really made our life easier especially because build",
    "start": "1666679",
    "end": "1673440"
  },
  {
    "text": "pipelines tend to become more complicated over years if you do infrastructure as coach you also introduce a lot of other elements to it",
    "start": "1673440",
    "end": "1680159"
  },
  {
    "text": "um this allows me to adopt the build pipeline as part of a feature in the same pool request tested locally and",
    "start": "1680159",
    "end": "1687080"
  },
  {
    "text": "then actually push it to the uh to to GitHub or aure Dev if you want to and it just works and it supports every other",
    "start": "1687080",
    "end": "1693600"
  },
  {
    "text": "tool even if it doesn't support it it's very easy to to use any tool that you already have it's a nice thing it's",
    "start": "1693600",
    "end": "1699880"
  },
  {
    "text": "created by uh Matias uh what was his last name Oh that's oh Matias Co it's a",
    "start": "1699880",
    "end": "1705600"
  },
  {
    "text": "German guy that doesn't change anything it's just a good tool no I I really it's a really good friend of mine another",
    "start": "1705600",
    "end": "1712519"
  },
  {
    "start": "1709000",
    "end": "1837000"
  },
  {
    "text": "thing is which I also practice a lot in my projects and my clients is that you",
    "start": "1712519",
    "end": "1717799"
  },
  {
    "text": "know apis tend to break not because we're we're we're bad developers just because we forgot about the impact and",
    "start": "1717799",
    "end": "1724399"
  },
  {
    "text": "being able to have a package which API doesn't break you have some guarantee that you didn't break anything can be",
    "start": "1724399",
    "end": "1730440"
  },
  {
    "text": "very very useful we actually introduced accidental breaking changes in our",
    "start": "1730440",
    "end": "1735760"
  },
  {
    "text": "library which caused an issue we had to roll back or issue a new release because of that because we didn't detect that we",
    "start": "1735760",
    "end": "1741760"
  },
  {
    "text": "thought this is not a breaking change we're adding an optional parameter or something like that but it actually caused uh binary breaking changes so",
    "start": "1741760",
    "end": "1749279"
  },
  {
    "text": "what we use is we use first a tool open source Library called public API generator which produces an XML sorry",
    "start": "1749279",
    "end": "1756159"
  },
  {
    "text": "it's still XML representing the service area of a particular assembly in net so",
    "start": "1756159",
    "end": "1763120"
  },
  {
    "text": "includes everything whether it's a public internal protected member uh the parameters the return types everything",
    "start": "1763120",
    "end": "1770320"
  },
  {
    "text": "uh that's one thing and then we use another tool called verify that allows me to compare to XML files and that",
    "start": "1770320",
    "end": "1776640"
  },
  {
    "text": "together produces a basically a unit test that will verify whether something broke so what we do is we put a snapshot",
    "start": "1776640",
    "end": "1784080"
  },
  {
    "text": "in Source control and as part of the Bild pipeline I just mentioned we run this particular test so if somebody",
    "start": "1784080",
    "end": "1790120"
  },
  {
    "text": "actually accidentally broke something that test will fail but since it you can actually run this by pipeline locally",
    "start": "1790120",
    "end": "1796760"
  },
  {
    "text": "and it's run as part of the p request you get early feedback if somebody purposely wants to change you know",
    "start": "1796760",
    "end": "1802840"
  },
  {
    "text": "introduce this change um they can improve that there's a Powershell script that takes the old the new shf snapshot",
    "start": "1802840",
    "end": "1809120"
  },
  {
    "text": "and the old one updates it to Source control and then during the code sorry",
    "start": "1809120",
    "end": "1814360"
  },
  {
    "text": "during the code review you actually see the change you can explicitly approve that",
    "start": "1814360",
    "end": "1820080"
  },
  {
    "text": "change this has helped a lot yes question that optional",
    "start": "1820760",
    "end": "1825960"
  },
  {
    "text": "paramet yes because optional parameters are actually uh call side changes and",
    "start": "1825960",
    "end": "1831000"
  },
  {
    "text": "not binary changes for",
    "start": "1831000",
    "end": "1835240"
  },
  {
    "text": "example benchmarking everybody cares about performers right but it's not something we should optimize upfront but",
    "start": "1836880",
    "end": "1845120"
  },
  {
    "start": "1837000",
    "end": "1969000"
  },
  {
    "text": "it can be important so what we use is benchmark.com benchmarks we don't run",
    "start": "1845120",
    "end": "1850799"
  },
  {
    "text": "them as part of the build pipeline because that would require you like stable Hardware which we typically don't",
    "start": "1850799",
    "end": "1856320"
  },
  {
    "text": "have in a cloud it's something fell off that's a good bad",
    "start": "1856320",
    "end": "1863679"
  },
  {
    "text": "sign okay like this um so we use them for certain expensive operations we have",
    "start": "1863679",
    "end": "1869360"
  },
  {
    "text": "this this API which does a very deep analysis of two object graphs um we use",
    "start": "1869360",
    "end": "1875240"
  },
  {
    "text": "this to verify that didn't break anything especially if somebody complains about the performance we then",
    "start": "1875240",
    "end": "1880760"
  },
  {
    "text": "go back we run this tool on a particular machine like my local desktop and then we go back to previous version and see",
    "start": "1880760",
    "end": "1887440"
  },
  {
    "text": "if there were any any differences so you shouldn't trust that blindly they're not absolute numbers but they will give you",
    "start": "1887440",
    "end": "1892639"
  },
  {
    "text": "an indication whether something went went bad and in the past you would have to use profiles or something like that",
    "start": "1892639",
    "end": "1898279"
  },
  {
    "text": "this is much easier because it's very focused it's very smart it does warm up and you know shut down test it runs us a",
    "start": "1898279",
    "end": "1904760"
  },
  {
    "text": "couple of times it gives you so much information like almost it's an overload of information but it has saved us a",
    "start": "1904760",
    "end": "1911200"
  },
  {
    "text": "couple of times making mistakes the flip side is that some contributors again probably the ones",
    "start": "1911200",
    "end": "1917720"
  },
  {
    "text": "with ocdc uh which I have myself by the way as well uh to try to improve the code base and make it even faster again",
    "start": "1917720",
    "end": "1925320"
  },
  {
    "text": "sometimes we reject those changes because they don't always make the code easier to understand and that is similar to a real project I don't want to",
    "start": "1925320",
    "end": "1932279"
  },
  {
    "text": "optimize my code base uh unless there's a real reason for that I mean we don't",
    "start": "1932279",
    "end": "1937320"
  },
  {
    "text": "have to make stupid mistakes but you still have to use common common sense and you know they have sometimes developers that really love to tweak the",
    "start": "1937320",
    "end": "1943880"
  },
  {
    "text": "code base make it faster even it's completely relevant on the big scale like you know know they optimizing a",
    "start": "1943880",
    "end": "1949279"
  },
  {
    "text": "dictionary say yeah we need to use this other dictionary type because it's much faster you know when the database is the",
    "start": "1949279",
    "end": "1954519"
  },
  {
    "text": "big problem here and then using an actual profile will help you that it's it's called premature",
    "start": "1954519",
    "end": "1960399"
  },
  {
    "text": "optimization micro benchmarks can help with that if you figured out that that that's the that's the the the black spot",
    "start": "1960399",
    "end": "1966240"
  },
  {
    "text": "in your code base that's the bottleneck same here documentation yes we need to",
    "start": "1966240",
    "end": "1971399"
  },
  {
    "start": "1969000",
    "end": "2047000"
  },
  {
    "text": "have documentation this is the website uh which we actually created with minimal mistakes which is a jackal",
    "start": "1971399",
    "end": "1977240"
  },
  {
    "text": "template um which is quite nice because we can actually build the website locally we can test it um if a pool request if a",
    "start": "1977240",
    "end": "1985000"
  },
  {
    "text": "feature affects the documentation then the PO request will also update the markdown files that build the website so",
    "start": "1985000",
    "end": "1992039"
  },
  {
    "text": "if you're building an internal Library like usually there's platform teams in a big organization that build reusable",
    "start": "1992039",
    "end": "1997760"
  },
  {
    "text": "components this is a nice way to actually build documentation for your packages I've done that I've used to",
    "start": "1997760",
    "end": "2003840"
  },
  {
    "text": "introduced it with one of my clients as well because people always struggling like how do I how do I create sdks for",
    "start": "2003840",
    "end": "2009919"
  },
  {
    "text": "my library it's a it's a complicated Library we want people to use it but",
    "start": "2009919",
    "end": "2015519"
  },
  {
    "text": "they struggling with it and of course in a net space you get automatic documentation as part of your codebase",
    "start": "2015519",
    "end": "2020559"
  },
  {
    "text": "if you document everything correctly but it doesn't give you this it doesn't give you this holistic overview creating some",
    "start": "2020559",
    "end": "2026519"
  },
  {
    "text": "kind of jugle website is easy and especially if you use giup you can also publish this on on the internal giup",
    "start": "2026519",
    "end": "2032559"
  },
  {
    "text": "Network and make it available but you can publish it anyway and it's pretty easy to do I mean I'm not a real website",
    "start": "2032559",
    "end": "2038399"
  },
  {
    "text": "developer I suck at CSS and stuff like that but using some of these templates makes it easy",
    "start": "2038399",
    "end": "2045600"
  },
  {
    "text": "right um spell checking yeah we use uh this is maybe I'm shouting or it's",
    "start": "2045600",
    "end": "2051158"
  },
  {
    "start": "2047000",
    "end": "2077000"
  },
  {
    "text": "cursing in the net space I'm using an mpm library to do uh uh spell checking",
    "start": "2051159",
    "end": "2057079"
  },
  {
    "text": "again I like to use different tools and David Whitney mentioned this morning we should try different tools so you know",
    "start": "2057079",
    "end": "2062520"
  },
  {
    "text": "don't not specialize so I've actually have somebody contribute to this I didn't even know about this uh this this",
    "start": "2062520",
    "end": "2067878"
  },
  {
    "text": "Library c spell but yeah it solves also the issue that people start creating pool request with just spell checking",
    "start": "2067879",
    "end": "2073919"
  },
  {
    "text": "mistakes and grammatical grammatics checks it can do that for you so in terms of reviewing uh until what time do",
    "start": "2073919",
    "end": "2081520"
  },
  {
    "start": "2077000",
    "end": "2116000"
  },
  {
    "text": "I have by the way I forgot to check again until 10 past or 20 past 20 past",
    "start": "2081520",
    "end": "2088520"
  },
  {
    "text": "so I still 20 minutes I'm halfway no just kidding um reviewing emerging yeah that's another topic oh first of all",
    "start": "2088520",
    "end": "2095398"
  },
  {
    "text": "we're using giip actions if you're on a Gi space notice there's nothing special about it if you're on a devop you use",
    "start": "2095399",
    "end": "2101280"
  },
  {
    "text": "pipelines if you're on different platforms I don't know maybe team City or Maven or whatever and that's one",
    "start": "2101280",
    "end": "2107040"
  },
  {
    "text": "thing obvious I'm still using yaml but a minimum amount of yaml just to kick off my n build script um this is what it",
    "start": "2107040",
    "end": "2115839"
  },
  {
    "text": "looks like I use the paner botle Y lot so one of the strong cases for get up",
    "start": "2115839",
    "end": "2121760"
  },
  {
    "start": "2116000",
    "end": "2226000"
  },
  {
    "text": "and one of the big issues with codebase like I'm in the client that use aops a lot of these projects are behind mind on",
    "start": "2121760",
    "end": "2128160"
  },
  {
    "text": "the dependencies every project uses open source libraries whether it's new get or mpm or something else even PHP there's",
    "start": "2128160",
    "end": "2135760"
  },
  {
    "text": "one team that does it the biggest issue is keeping all these packages up to date dependabot I think is the unique selling",
    "start": "2135760",
    "end": "2142200"
  },
  {
    "text": "point of giab it will scan your repositories it will create pool request for you uh telling you how to update",
    "start": "2142200",
    "end": "2148960"
  },
  {
    "text": "particular dependency and you can it's very smart they use AI these days to also um figure out like okay if you if",
    "start": "2148960",
    "end": "2156040"
  },
  {
    "text": "you've been the declining certain pull request for certain packages it won't ask you again but it has saved us a lot",
    "start": "2156040",
    "end": "2163040"
  },
  {
    "text": "also finds F abilities even on my website because this website that I just showed you is using JavaScript and it",
    "start": "2163040",
    "end": "2169599"
  },
  {
    "text": "will find packages that are mistaken or even Ruby there's a Ruby P Ruby pipeline behind that that will get updated for",
    "start": "2169599",
    "end": "2175800"
  },
  {
    "text": "you and you get all these it's probably difficult to read but all these improvements it will give you all these",
    "start": "2175800",
    "end": "2181119"
  },
  {
    "text": "vulnerabilities it will fix them for you and you can even be smart enough like if",
    "start": "2181119",
    "end": "2186200"
  },
  {
    "text": "you're using xunit xunit actually consist of four or five NAD packages you can group them you can tell it like I",
    "start": "2186200",
    "end": "2192440"
  },
  {
    "text": "want those to be always updated together you can just provide an AO file and GitHub will be smart enough to do that",
    "start": "2192440",
    "end": "2198520"
  },
  {
    "text": "that on itself is already worth the move from aure defs to giup I wrote a blog",
    "start": "2198520",
    "end": "2203599"
  },
  {
    "text": "post about that by the way code ql is another recent feature to",
    "start": "2203599",
    "end": "2209240"
  },
  {
    "text": "where you can allow giup to scan your code for common mistakes it's a bit similar to what what sonarcloud is",
    "start": "2209240",
    "end": "2215240"
  },
  {
    "text": "trying to do but it also finds you know you're putting passwords in your repos story that's something you shouldn't be",
    "start": "2215240",
    "end": "2220560"
  },
  {
    "text": "doing I sure doesn't do this Gib does it which is not surprising because you can see where the investment is code",
    "start": "2220560",
    "end": "2227119"
  },
  {
    "start": "2226000",
    "end": "2330000"
  },
  {
    "text": "coverage who has a code coverage higher than 90% honestly oh two people who has",
    "start": "2227119",
    "end": "2233359"
  },
  {
    "text": "no code coverage okay that's good less than",
    "start": "2233359",
    "end": "2239240"
  },
  {
    "text": "50% no nobody's uh bold enough to admit that um fluent assertions has a code",
    "start": "2239240",
    "end": "2246000"
  },
  {
    "text": "coverage of 97% now you're supposed to say wow no it's",
    "start": "2246000",
    "end": "2251480"
  },
  {
    "text": "ridiculous it doesn't make sense at all nobody should have that code cage that high it's just because there were all",
    "start": "2251480",
    "end": "2256839"
  },
  {
    "text": "these contributors that really wanted to find these edge cases and created pool quest with more unit tests because more",
    "start": "2256839",
    "end": "2263160"
  },
  {
    "text": "unit test is not necessarily the best thing and that's a completely different talk talking about the scope um I would",
    "start": "2263160",
    "end": "2269560"
  },
  {
    "text": "say around between 80 and 90 should be healthy enough because there's certain",
    "start": "2269560",
    "end": "2275400"
  },
  {
    "text": "parts of the code base which are difficult to test you shouldn't even do it's not worth the investment um it should also never be",
    "start": "2275400",
    "end": "2282200"
  },
  {
    "text": "used as a kpi managers love I've worked in a at a client where the managers love",
    "start": "2282200",
    "end": "2287359"
  },
  {
    "text": "to put all these kpis on the dashboard so if if a repository didn't meet the 90% it became rat you know it was",
    "start": "2287359",
    "end": "2294480"
  },
  {
    "text": "discussed in you know uh uh quarterly meetings and stuff like that that is stupid I'm not very opinionated but uh I",
    "start": "2294480",
    "end": "2303200"
  },
  {
    "text": "think that's stupid and I told them because it doesn't help because that's what people do they create all these unit test that actually make your code",
    "start": "2303200",
    "end": "2309440"
  },
  {
    "text": "more difficult to refactor there's a there's a it's very difficult to judge that it depends on the code base the",
    "start": "2309440",
    "end": "2315640"
  },
  {
    "text": "same if anybody using a Sona Cube or Sona cloud or something like that the the duplication indicator disabled that",
    "start": "2315640",
    "end": "2323240"
  },
  {
    "text": "it doesn't make sense it actually leads to overuse of the don't repeat yourself principle again different",
    "start": "2323240",
    "end": "2329760"
  },
  {
    "text": "talk um I by the way we use jet brain kodana uh I think soniccloud is actually",
    "start": "2329760",
    "end": "2335400"
  },
  {
    "start": "2330000",
    "end": "2356000"
  },
  {
    "text": "pretty good I thought it declined in quality uh and then Jet brains offered because it's an open source project to use this",
    "start": "2335400",
    "end": "2341400"
  },
  {
    "text": "one we've been pilo piloting it with him with them pretty nice actually I have to say um yeah when you use it doesn't",
    "start": "2341400",
    "end": "2348960"
  },
  {
    "text": "matter it's it can be useful it actually found issues in a code base that we had to improve which actually increased our",
    "start": "2348960",
    "end": "2354839"
  },
  {
    "text": "code cence as well what I like myself I don't know if you've seen this before um I can be a",
    "start": "2354839",
    "end": "2361040"
  },
  {
    "start": "2356000",
    "end": "2491000"
  },
  {
    "text": "nitpic when I do code reviews uh I remember that I was joining a client and there was a guy working",
    "start": "2361040",
    "end": "2367440"
  },
  {
    "text": "there that I actually worked with 50 years ago and he still remembered me because I was at that time the guy that",
    "start": "2367440",
    "end": "2373359"
  },
  {
    "text": "printed out code on paper and then use the red pencil to find the books I'm",
    "start": "2373359",
    "end": "2379400"
  },
  {
    "text": "kind of still that guy but the difference is now I force myself to really consider like what's the what",
    "start": "2379400",
    "end": "2384960"
  },
  {
    "text": "kind of comment is this and emojis actually help me so you find things like",
    "start": "2384960",
    "end": "2390400"
  },
  {
    "text": "uh this wrench which actually means this needs to be changed in principle I mean you can disagree but it needs to be",
    "start": "2390400",
    "end": "2395920"
  },
  {
    "text": "changed I used the the the what is it the the thinking phase like I think",
    "start": "2395920",
    "end": "2401240"
  },
  {
    "text": "something is wrong here something fishy let's talk about that um I use the",
    "start": "2401240",
    "end": "2406280"
  },
  {
    "text": "pickaxe which is from nitpicking and if I use that my first thought was okay shouldn't even mention this because I'm",
    "start": "2406280",
    "end": "2412960"
  },
  {
    "text": "obviously nitpicking and by doing that this forces me to think about because remember I worked with let's say junior",
    "start": "2412960",
    "end": "2419599"
  },
  {
    "text": "developers and I was the architect and they thought like okay Dennis made that statement now I have to change that and",
    "start": "2419599",
    "end": "2425200"
  },
  {
    "text": "this what not this was not my intention I was actually trying to make them think about the changes and this helped me",
    "start": "2425200",
    "end": "2431359"
  },
  {
    "text": "like a seat you know it's basically I don't want you to change something I just want to you to put something in",
    "start": "2431359",
    "end": "2436800"
  },
  {
    "text": "your mind so the next time you do something similar you may actually think about that or the where is it is it on",
    "start": "2436800",
    "end": "2442760"
  },
  {
    "text": "the picture no you don't see it Campground there's a little tent it's the you know you this principle of how",
    "start": "2442760",
    "end": "2449040"
  },
  {
    "text": "how far do you go with refactoring well it's leave the campground cleaner than you got there so I also do that so I",
    "start": "2449040",
    "end": "2454400"
  },
  {
    "text": "know that this is not part of your pull requ I know this is not something you've changed but maybe there's an opportunity",
    "start": "2454400",
    "end": "2460800"
  },
  {
    "text": "to make it a little bit better in your poest this has helped me tremendously initially people start to make fun of",
    "start": "2460800",
    "end": "2467240"
  },
  {
    "text": "you like why are you using the stupid Emoji you're not 20 anymore",
    "start": "2467240",
    "end": "2473480"
  },
  {
    "text": "yeah well my kids don't even use emojis they don't even use periods at the end of the sentence right in fact they don't",
    "start": "2473480",
    "end": "2479880"
  },
  {
    "text": "even do sentences anymore it's just like words on every line that's apparently a thing anybody doing that here as well or",
    "start": "2479880",
    "end": "2486359"
  },
  {
    "text": "no just kidding I see somebody who's really young nodding like okay it's a generational",
    "start": "2486359",
    "end": "2491440"
  },
  {
    "start": "2491000",
    "end": "2544000"
  },
  {
    "text": "thing so this helped me another thing is and this is very difficult saying no uh at NDC London there was a really",
    "start": "2491440",
    "end": "2499000"
  },
  {
    "text": "good talk about being a professional and that sometimes you have to say no I know that Uncle Bob is sometimes be seen as",
    "start": "2499000",
    "end": "2505560"
  },
  {
    "text": "controversial but he wrote a book called clean coder which is not about being a coder it's being a professional and one",
    "start": "2505560",
    "end": "2511920"
  },
  {
    "text": "of the chapters is about saying no and we had to say no remember the data set data set thing I just mentioned we",
    "start": "2511920",
    "end": "2517440"
  },
  {
    "text": "should have said no but we want to be friendly to the contributor we want to be open we want to be you know diverse",
    "start": "2517440",
    "end": "2524240"
  },
  {
    "text": "and everything sometimes you have to say no and for the interesting thing I'm really good at saying no at my job but",
    "start": "2524240",
    "end": "2530880"
  },
  {
    "text": "as an open source developer I'm not that good at it I'm also not very good at saying no I'm very assertive at my job",
    "start": "2530880",
    "end": "2537200"
  },
  {
    "text": "but in a shop I tend to not ask too many questions um but this is part of the job",
    "start": "2537200",
    "end": "2543880"
  },
  {
    "text": "sometimes you have to do that the other thing is there's two guys me another guy that maintains this code base and",
    "start": "2543880",
    "end": "2550559"
  },
  {
    "start": "2544000",
    "end": "2626000"
  },
  {
    "text": "interestingly enough he's a bit younger than me uh and we have a different perspective on code basis I tend to I",
    "start": "2550559",
    "end": "2557040"
  },
  {
    "text": "used to be very nitpicky as I just said I try to trange change that he's very nitpicky which is a good thing so we",
    "start": "2557040",
    "end": "2563680"
  },
  {
    "text": "actually look at different perspectives I look at the readability in general I like to look at the whole like does it",
    "start": "2563680",
    "end": "2569760"
  },
  {
    "text": "holistically make sense but I don't look at the details too much probably because I'm lazy and he actually yonas is a good",
    "start": "2569760",
    "end": "2576480"
  },
  {
    "text": "guy actually he likes to look at details he actually looks at consistency like oh in this pool request we actually had",
    "start": "2576480",
    "end": "2582400"
  },
  {
    "text": "that discussion he remembers that I don't remember that because I'm old um and that's useful so it's not that we we",
    "start": "2582400",
    "end": "2588599"
  },
  {
    "text": "both want to prove something in a sense that we really want to be nitpicking there but we have different perspectives",
    "start": "2588599",
    "end": "2594920"
  },
  {
    "text": "and usually it helps so he he approves my pool requests I approve his pool request and we together approve other",
    "start": "2594920",
    "end": "2601119"
  },
  {
    "text": "people's PO requests which is a nice way more than two I would never do in a project but also at my client's projects",
    "start": "2601119",
    "end": "2607720"
  },
  {
    "text": "I I always propose or suggest you have two reviewers just to have two different perspectives on it ideally and that's",
    "start": "2607720",
    "end": "2614720"
  },
  {
    "text": "sometimes difficult Chief have reviewers from two different teams because they look at it from different perspectives",
    "start": "2614720",
    "end": "2621000"
  },
  {
    "text": "which some people will say it's too puristic takes too much time but it can be very useful um clean Source control history",
    "start": "2621000",
    "end": "2628960"
  },
  {
    "start": "2626000",
    "end": "2744000"
  },
  {
    "text": "who cares about clean Source control history to whoever whoever looks back in",
    "start": "2628960",
    "end": "2634000"
  },
  {
    "text": "Source contol history trying to understand what changed I do that a lot and there's a lot of people that don't",
    "start": "2634000",
    "end": "2640240"
  },
  {
    "text": "care you know I I see like in SQL in net you have this class SQL command and it",
    "start": "2640240",
    "end": "2646760"
  },
  {
    "text": "has um has a default timeout I think it's 15 seconds so at some point in a code base I was doing some refactoring I",
    "start": "2646760",
    "end": "2653559"
  },
  {
    "text": "saw somebody saying um SQL Comm command timeout was set to 60 seconds and I was",
    "start": "2653559",
    "end": "2660119"
  },
  {
    "text": "wondering why would you do that what kind of query take 60 seconds and you can get away with that so I went back",
    "start": "2660119",
    "end": "2666599"
  },
  {
    "text": "and S control did a blame and guess what I found a commit saying increased SQL",
    "start": "2666599",
    "end": "2673319"
  },
  {
    "text": "timeout to 60 seconds that's the thing that's that's a problem I want to understand why what kind of issue did",
    "start": "2673319",
    "end": "2680319"
  },
  {
    "text": "you run into that you had to do that because understanding other developers you know worm in their brain is very",
    "start": "2680319",
    "end": "2686640"
  },
  {
    "text": "difficult I mean first level is being able to understand the code as this but being able to understand why that code",
    "start": "2686640",
    "end": "2692400"
  },
  {
    "text": "changed in such way it's almost impossible without clean Source control history so I like to use rebases I do",
    "start": "2692400",
    "end": "2698400"
  },
  {
    "text": "fix up commits I do interactive rebases I try to avoid merges because they",
    "start": "2698400",
    "end": "2703440"
  },
  {
    "text": "create all these lines and makes it very difficult to do that a lot of developers don't get that and they don't like that",
    "start": "2703440",
    "end": "2709720"
  },
  {
    "text": "I'm actually pushing for that they think I'm nitpicking I'm actually not nitpicking I honestly believe that it",
    "start": "2709720",
    "end": "2715079"
  },
  {
    "text": "will help me and help them in the future they just don't get it yet and they probably don't look back at the history",
    "start": "2715079",
    "end": "2721640"
  },
  {
    "text": "because it never helped them because they couldn't make hats or tails out of that so this is difficult to Chief um",
    "start": "2721640",
    "end": "2728200"
  },
  {
    "text": "this article that I mentioned earlier like 16 Alias as a pro is very useful there's also I wrote a blog post how I",
    "start": "2728200",
    "end": "2734559"
  },
  {
    "text": "do this which tools I use to actually keep my history clean if you're in I think it maybe it's on the on the slides",
    "start": "2734559",
    "end": "2740359"
  },
  {
    "text": "if not you can always ping me on Twitter or LinkedIn or whatever",
    "start": "2740359",
    "end": "2745440"
  },
  {
    "start": "2744000",
    "end": "2771000"
  },
  {
    "text": "um and that's also why I typically don't create a merge commit we use squash",
    "start": "2745440",
    "end": "2750559"
  },
  {
    "text": "commits for that auto merging by default by the way is actually available in giab for a while I know Azure devop set we",
    "start": "2750559",
    "end": "2757400"
  },
  {
    "text": "use this a lot because then both me and yonas were in different time zones as soon as we both approve the pool request",
    "start": "2757400",
    "end": "2763160"
  },
  {
    "text": "getch merge automatically because we have build pipelines that do everything that we need to be do need needs to be",
    "start": "2763160",
    "end": "2768599"
  },
  {
    "text": "done to to feel confident that we didn't break anything um releasing well a couple of",
    "start": "2768599",
    "end": "2774319"
  },
  {
    "start": "2771000",
    "end": "2827000"
  },
  {
    "text": "things semantic versioning get version and G flow I don't know if you know this is semantic versioning basically you",
    "start": "2774319",
    "end": "2781760"
  },
  {
    "text": "know when the major number increases it's a breaking change this happens every two three years and minor version",
    "start": "2781760",
    "end": "2787599"
  },
  {
    "text": "means new features completely backwards compatible might also be bug fixes you can safely upgrade there's no reason to",
    "start": "2787599",
    "end": "2794880"
  },
  {
    "text": "be afraid the Pender bolt for example understands that so if you have I don't know 5 point 6.9 of my library and 6.12",
    "start": "2794880",
    "end": "2803160"
  },
  {
    "text": "exists or is released it will automatically tell you hey you can actually use 6.12 and it should be completely safe in reality not always",
    "start": "2803160",
    "end": "2811359"
  },
  {
    "text": "but in our case of course it's safe and the last one actually means hey you should upgrade because there's a buck",
    "start": "2811359",
    "end": "2816480"
  },
  {
    "text": "fix very simple process I hope everybody's doing that if you're not doing it please",
    "start": "2816480",
    "end": "2821760"
  },
  {
    "text": "start doing it because it's so it makes it so easy to reason about particular",
    "start": "2821760",
    "end": "2827040"
  },
  {
    "text": "release we use gitf flow which is one of the many different ways of structuring",
    "start": "2827040",
    "end": "2832240"
  },
  {
    "text": "your branching um uh sometimes we use GitHub flow which is another version I'm",
    "start": "2832240",
    "end": "2837280"
  },
  {
    "text": "not going to explain the difference the point is that there's two or three very um standardized industry standard I mean",
    "start": "2837280",
    "end": "2843880"
  },
  {
    "text": "they evolved like organically but standardized working BR branching and merging strategies because it makes them quite",
    "start": "2843880",
    "end": "2851280"
  },
  {
    "text": "if you know them you know actually what to expect if you see a repository with a main or master and a develop and release",
    "start": "2851280",
    "end": "2857359"
  },
  {
    "text": "you know it's gitflow and you know what to expect and that's cool and if you then use a tool like Git Version uh",
    "start": "2857359",
    "end": "2863319"
  },
  {
    "text": "which by the way is a net tool but it also has a CLI tool that can generate version numbers by looking at the last",
    "start": "2863319",
    "end": "2869960"
  },
  {
    "text": "taxs on your branch at the branch name and understands that if you're working on develop that's probably your next",
    "start": "2869960",
    "end": "2875839"
  },
  {
    "text": "version and it will automatically add unstable and add all kinds of numbers to it so you never after after have to",
    "start": "2875839",
    "end": "2882559"
  },
  {
    "text": "update your version numbers manually if you still doing that use something like this it's so easy you never look",
    "start": "2882559",
    "end": "2889920"
  },
  {
    "text": "back and it produces something like this which you can use in your build pipeline there's lots of numbers you won't be",
    "start": "2889920",
    "end": "2895079"
  },
  {
    "start": "2890000",
    "end": "2919000"
  },
  {
    "text": "able to read that but there's all kinds of different versions new get versions semantic versions uh numbers that you",
    "start": "2895079",
    "end": "2901040"
  },
  {
    "text": "can embed in your assembly even including the hash key of your commit which removes the burden of uh uh",
    "start": "2901040",
    "end": "2907400"
  },
  {
    "text": "tagging your assemblies your your dlls and executables with the right version and you can use the nuke and",
    "start": "2907400",
    "end": "2914040"
  },
  {
    "text": "that's what it looks like Nuke has it buil in so again it's a c Phile releasing yeah um I don't know if",
    "start": "2914040",
    "end": "2922079"
  },
  {
    "text": "you're using GitHub but if you use giup it's actually very easy to create Le releases I'm currently at the client",
    "start": "2922079",
    "end": "2927839"
  },
  {
    "text": "that use Azure devops I wasn't aware that it's so backwards compared to giup it's a surprising amount of features",
    "start": "2927839",
    "end": "2934440"
  },
  {
    "text": "that is missing um you you can even generate release notes that is again something we don't bother well we do",
    "start": "2934440",
    "end": "2941079"
  },
  {
    "text": "bother but we don't bother writing them we just generate them and you can use templates to indicate like which pool",
    "start": "2941079",
    "end": "2946720"
  },
  {
    "text": "request have which labels and based on that you can generate release noes it includes the names you can see my name",
    "start": "2946720",
    "end": "2952359"
  },
  {
    "text": "in yellow because that's the one I am but also mention new contributors which is also nice because it gives them extra",
    "start": "2952359",
    "end": "2958799"
  },
  {
    "text": "visibility again for open source projects that's cool but also for internal project that's also nice",
    "start": "2958799",
    "end": "2964799"
  },
  {
    "text": "because actually it creates awareness of people that work in a company you know if you're working in a bigger company",
    "start": "2964799",
    "end": "2970000"
  },
  {
    "text": "you may not know everybody but by getting this inner sourcing ID and adopting these tools you actually get to",
    "start": "2970000",
    "end": "2975319"
  },
  {
    "text": "know new people like hey it's the same guy again or the same girl again that's contributing again okay who is that maybe I should reach out and thank that",
    "start": "2975319",
    "end": "2981440"
  },
  {
    "text": "person for what they did or have some coffee about what you know I noce that you have a lot of contributions do you",
    "start": "2981440",
    "end": "2987319"
  },
  {
    "text": "want to play different role you know do you want to be part of the discussions that even creates this social aspect",
    "start": "2987319",
    "end": "2993640"
  },
  {
    "text": "which you wouldn't expect if you look at the tools in this talk about in general um this is very new n get specific you",
    "start": "2993640",
    "end": "3000920"
  },
  {
    "start": "2997000",
    "end": "3026000"
  },
  {
    "text": "can actually Reserve prefixes so this case it means nobody",
    "start": "3000920",
    "end": "3006520"
  },
  {
    "text": "else on the whole world can push nugat packages with the name fluent SE it's reserved you have to ask for permission",
    "start": "3006520",
    "end": "3013880"
  },
  {
    "text": "you can also do this internally by the way uh but if you're a company that ads adopts more open source but also",
    "start": "3013880",
    "end": "3019720"
  },
  {
    "text": "contributes open source that's a nice way of protecting your your your company's name yes",
    "start": "3019720",
    "end": "3027920"
  },
  {
    "start": "3026000",
    "end": "3044000"
  },
  {
    "text": "well it's a project and it means I discover new things every day uh in fact",
    "start": "3028240",
    "end": "3033599"
  },
  {
    "text": "every time I did this talk there was somebody in the audience that had a good idea that we should adopt and I've been adopting that that's cool because that's",
    "start": "3033599",
    "end": "3040000"
  },
  {
    "text": "what I said about learning there's still a couple of things to do we're working on the next",
    "start": "3040000",
    "end": "3045240"
  },
  {
    "start": "3044000",
    "end": "3134000"
  },
  {
    "text": "major version the last major version is from I think even before covid so it's about time um and this whole semantic",
    "start": "3045240",
    "end": "3053400"
  },
  {
    "text": "version thing that I mentioned earlier also forces us to think about backwards compatibility but also forces us to",
    "start": "3053400",
    "end": "3060200"
  },
  {
    "text": "postpone certain breaking changes and that's good because breaking changes actually prevent you um prevents Ripple",
    "start": "3060200",
    "end": "3066559"
  },
  {
    "text": "effects prevents people from or helps people avoid and adopt new versions also so we aggregate all these improvements",
    "start": "3066559",
    "end": "3073559"
  },
  {
    "text": "and then every couple of years we release something new same thing happens with our internal projects introducing",
    "start": "3073559",
    "end": "3078680"
  },
  {
    "text": "breaking change is something you need to avoid you need to plan accordingly because it's causing Mayhem in fact if",
    "start": "3078680",
    "end": "3084599"
  },
  {
    "text": "you're working an internal project if you relase a new major version you probably have to maintain the old",
    "start": "3084599",
    "end": "3089799"
  },
  {
    "text": "versions and nobody wants to maintain six different versions of the same codebase right it creates pain it",
    "start": "3089799",
    "end": "3095280"
  },
  {
    "text": "creates merging problems you know if you fix versions if you fix a bug on all the version you have to up merge all of that",
    "start": "3095280",
    "end": "3101599"
  },
  {
    "text": "and depending on the maturity of your codebase if you have pipelines if you can actually release without doing any manual testing that can become a real",
    "start": "3101599",
    "end": "3108440"
  },
  {
    "text": "burden so we also do that the same way V7 is the next version the good thing is",
    "start": "3108440",
    "end": "3114280"
  },
  {
    "text": "a new major version also allows you to introduce breaking changes which allows you to fix all these mistakes that you",
    "start": "3114280",
    "end": "3119640"
  },
  {
    "text": "made in the past because we all make design mistakes you know no mistake no architecture design is correct uh in the",
    "start": "3119640",
    "end": "3125799"
  },
  {
    "text": "first time also not the second time it probably is never correct because you get new insights the world changes about",
    "start": "3125799",
    "end": "3131520"
  },
  {
    "text": "that uh so that's the benefit of a major version haven't finished all the naming",
    "start": "3131520",
    "end": "3136880"
  },
  {
    "start": "3134000",
    "end": "3308000"
  },
  {
    "text": "thing we still have to do that something like guidelines uh I also see that at my",
    "start": "3136880",
    "end": "3142760"
  },
  {
    "text": "client projects every repository especially if there's real uh",
    "start": "3142760",
    "end": "3147920"
  },
  {
    "text": "substantial code bases in there has some implicit guidelines who actually Capt captures all their design",
    "start": "3147920",
    "end": "3154079"
  },
  {
    "text": "guidelines no because yeah nobody does that because a lot of developers just",
    "start": "3154079",
    "end": "3159160"
  },
  {
    "text": "copy paste from what they've seen already right or maybe because you're already aware of the the guidelines",
    "start": "3159160",
    "end": "3164640"
  },
  {
    "text": "because you created you you chose particular design strategies you chose particular design patterns but you want",
    "start": "3164640",
    "end": "3171400"
  },
  {
    "text": "other people to be part of that as well so capturing them is pretty important I do that at a repository level for the",
    "start": "3171400",
    "end": "3177720"
  },
  {
    "text": "things that are specific to that code base of course I like to enforce that if that's if there's a way of doing that um",
    "start": "3177720",
    "end": "3184040"
  },
  {
    "text": "but everything higher up I actually like to capture that for example in Confluence we use architectural decision",
    "start": "3184040",
    "end": "3189200"
  },
  {
    "text": "records I you've heard about that why statements why as in the y the letter y",
    "start": "3189200",
    "end": "3195119"
  },
  {
    "text": "is a very nice way of capturing design decisions which we do a lot and for fluent I also have to do that there's a",
    "start": "3195119",
    "end": "3201720"
  },
  {
    "text": "lot of implicit decisions we that evolved over the time and we should actually write them down because it",
    "start": "3201720",
    "end": "3207880"
  },
  {
    "text": "helps contributors to understand what to expect um mutation testing anybody tried",
    "start": "3207880",
    "end": "3213200"
  },
  {
    "text": "that mutation testing yes cool it's a tool um exists in multiple Platforms in",
    "start": "3213200",
    "end": "3219160"
  },
  {
    "text": "net is called Striker net so I suspect there's a Java version called Striker um",
    "start": "3219160",
    "end": "3225119"
  },
  {
    "text": "what it will do it will it will actually uh change your codebase and see if",
    "start": "3225119",
    "end": "3230520"
  },
  {
    "text": "there's any test breaking so if your code base contains an equals operator it will change that in not equals operator",
    "start": "3230520",
    "end": "3237880"
  },
  {
    "text": "and that should actually break tests so now you wonder like how did we get this 97% coverage is because people are using",
    "start": "3237880",
    "end": "3244960"
  },
  {
    "text": "that tool all the time and finding gaps in my in our in our code coverage and creating unitest for that that's why we",
    "start": "3244960",
    "end": "3250920"
  },
  {
    "text": "have 97% because this tool it's very useful though because if you have your own code base your production system",
    "start": "3250920",
    "end": "3257160"
  },
  {
    "text": "it's a very good tool to find all these gaps that you may not find production until it fails so definitely recommend",
    "start": "3257160",
    "end": "3263280"
  },
  {
    "text": "it it runs it takes quite a lot of time to run you need a big machine it can take hours if you're not lucky so it",
    "start": "3263280",
    "end": "3269400"
  },
  {
    "text": "probably is something that you could run in your pipeline but not every pool request maybe every week or something like that or",
    "start": "3269400",
    "end": "3275599"
  },
  {
    "text": "occasionally uh Arc unit I think it's also a net library that you can use to",
    "start": "3275599",
    "end": "3281559"
  },
  {
    "text": "uh check dependencies which is nice especially if you want to make sure that people don't create dependencies that",
    "start": "3281559",
    "end": "3286599"
  },
  {
    "text": "shouldn't exist between different projects or in C different name spaces I haven't tried it myself but I still want",
    "start": "3286599",
    "end": "3292160"
  },
  {
    "text": "to do that and uh as I said we were using jackal and uh this minimal mistake",
    "start": "3292160",
    "end": "3298640"
  },
  {
    "text": "uh uh format um somebody actually told me I should use try docusaurus apparently makes it a lot easier to",
    "start": "3298640",
    "end": "3304839"
  },
  {
    "text": "create websites for internal projects so something that we need to try I'm running out of time which I finished",
    "start": "3304839",
    "end": "3311359"
  },
  {
    "start": "3308000",
    "end": "3372000"
  },
  {
    "text": "just in time uh I think I showed you a lot of stuff lot of items lot of tools practice and mechanism I hope there's",
    "start": "3311359",
    "end": "3318319"
  },
  {
    "text": "something for you there that you haven't seen before that you feel like okay we should probably try that if you have",
    "start": "3318319",
    "end": "3323799"
  },
  {
    "text": "more questions I'll be around for the rest of the conference I'm also reaching reachable of all these channels there's",
    "start": "3323799",
    "end": "3329599"
  },
  {
    "text": "too many I need a tool that actually post on madone Twitter and blue sky at the same time because I'm uh it's",
    "start": "3329599",
    "end": "3336240"
  },
  {
    "text": "difficult to keep up thank you for the attention and I hope you enjoy the rest of the conference",
    "start": "3336240",
    "end": "3342400"
  }
]