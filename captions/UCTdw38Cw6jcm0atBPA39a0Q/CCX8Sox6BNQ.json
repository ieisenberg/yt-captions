[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "hello good afternoon welcome back who was in my previous talk on the future",
    "start": "3220",
    "end": "9670"
  },
  {
    "text": "yes okay almost all of you those that haven't you can watch the video when the good folks at NDC put it out you know",
    "start": "9670",
    "end": "18250"
  },
  {
    "text": "you won't be missing something I'll be putting in the necessary commentary just to make sure that we're fully up to",
    "start": "18250",
    "end": "23800"
  },
  {
    "text": "speed in this talk we're going to be focusing on how to implement the",
    "start": "23800",
    "end": "28980"
  },
  {
    "text": "architectural styles that I talked about in my last talk all the code that I'm",
    "start": "28980",
    "end": "34450"
  },
  {
    "text": "gonna be showing you is available online it's open source it's at that URL github.com particular labs net core demo",
    "start": "34450",
    "end": "41769"
  },
  {
    "start": "35000",
    "end": "35000"
  },
  {
    "text": "as you can guess it is all dotnet horrified up to the latest dotnet core",
    "start": "41769",
    "end": "47949"
  },
  {
    "text": "2.0 bits so if you've been looking to use dotnet core in your projects this",
    "start": "47949",
    "end": "54519"
  },
  {
    "text": "has everything that you need so also have the link to that at the end of the",
    "start": "54519",
    "end": "60100"
  },
  {
    "text": "presentation so you won't be missing anything what are we even talking about here so it's this idea of vertically",
    "start": "60100",
    "end": "67900"
  },
  {
    "start": "65000",
    "end": "65000"
  },
  {
    "text": "sliced architecture as opposed to layered architecture now we're all",
    "start": "67900",
    "end": "73150"
  },
  {
    "text": "familiar with the concept of layered architecture having UI talkin to some kind of API layer which in turn talks to",
    "start": "73150",
    "end": "79150"
  },
  {
    "text": "business logic and data access logic and databases where as I mentioned in my previous talk that always ended up being",
    "start": "79150",
    "end": "86350"
  },
  {
    "text": "really tightly coupled no matter how many layers we kind of put in there and",
    "start": "86350",
    "end": "91440"
  },
  {
    "text": "what I found over time is that ultimately the better form of decoupling",
    "start": "91440",
    "end": "96730"
  },
  {
    "text": "is within a given layer rather than between layers where parts of the UI are",
    "start": "96730",
    "end": "104260"
  },
  {
    "text": "often decoupled from other parts of the UI and parts of the business logic can be decoupled from other parts of the",
    "start": "104260",
    "end": "110350"
  },
  {
    "text": "business logic where in many cases the best place to slice things down is not",
    "start": "110350",
    "end": "116410"
  },
  {
    "text": "the traditional microservices style based on entities where we'd have you",
    "start": "116410",
    "end": "121840"
  },
  {
    "text": "know in the retail domain when we're buying stuff online we wouldn't want to",
    "start": "121840",
    "end": "128140"
  },
  {
    "text": "have than a product service and a customer service and an order service that",
    "start": "128140",
    "end": "133300"
  },
  {
    "text": "based services model just results in a whole lot of coupling with all of these",
    "start": "133300",
    "end": "138910"
  },
  {
    "text": "things talking to each other so when I'm talking about vertically slicing things it ultimately means even slicing down",
    "start": "138910",
    "end": "146980"
  },
  {
    "text": "those entities right down the middle where something like a products name",
    "start": "146980",
    "end": "152140"
  },
  {
    "text": "might be in one of these vertical slices but the product price could be in",
    "start": "152140",
    "end": "157750"
  },
  {
    "text": "another and the inventory levels of the product would be on yet a third vertical",
    "start": "157750",
    "end": "163570"
  },
  {
    "text": "slice and the reason why something like that could work is because we just don't",
    "start": "163570",
    "end": "168640"
  },
  {
    "text": "get business rules that say you need to touch all those things in a common transaction you won't have rules that",
    "start": "168640",
    "end": "175900"
  },
  {
    "text": "tell you if the name is longer than 20 characters then the price can't be more than 20 dollars or you can't have less",
    "start": "175900",
    "end": "182350"
  },
  {
    "text": "than 20 units of inventory so and is exactly through that kind of",
    "start": "182350",
    "end": "188230"
  },
  {
    "text": "decomposition that these vertical slices kind of sort themselves out just another",
    "start": "188230",
    "end": "193660"
  },
  {
    "text": "example bear with me the customer entity so things like a customer name and phone",
    "start": "193660",
    "end": "199690"
  },
  {
    "text": "number that sort of contact information that could sit very neatly inside one",
    "start": "199690",
    "end": "205000"
  },
  {
    "text": "vertical slice but let's say the customer status whether they're a bronze silver or gold customer that doesn't",
    "start": "205000",
    "end": "212380"
  },
  {
    "text": "have to sit in the same service because we don't have rules that state that if the person's first name is John then",
    "start": "212380",
    "end": "218830"
  },
  {
    "text": "they can't be a gold customer which would be a stupid rule in the first place so and we don't have rules that",
    "start": "218830",
    "end": "225190"
  },
  {
    "text": "require both fields to take part in the same transaction then we can put those",
    "start": "225190",
    "end": "230290"
  },
  {
    "text": "fields in different vertical slices and then we can carry that all the way down",
    "start": "230290",
    "end": "237270"
  },
  {
    "text": "into the database because if we don't need to have transactions that operate",
    "start": "237270",
    "end": "242950"
  },
  {
    "text": "on both of those fields together then we can put them in two different databases and not have to do a join and that gives",
    "start": "242950",
    "end": "249700"
  },
  {
    "text": "us the ability to actually scale out our data tier by having different databases",
    "start": "249700",
    "end": "255970"
  },
  {
    "text": "for them and once we've done that kind of separation all the way up top to the UI and all the way down to the database",
    "start": "255970",
    "end": "263020"
  },
  {
    "text": "we can actually have these different vertical slices with totally different layers internally",
    "start": "263020",
    "end": "269110"
  },
  {
    "text": "where one of them has two layers in a database and the other one has three",
    "start": "269110",
    "end": "274389"
  },
  {
    "text": "layers and as type of sharding model and the third one is built more on a graph",
    "start": "274389",
    "end": "280810"
  },
  {
    "text": "type of philosophy we don't need to have the same layers everywhere once we've",
    "start": "280810",
    "end": "285970"
  },
  {
    "text": "separated things out and each service knows exactly which fields of data it's responsible for then it can specialize",
    "start": "285970",
    "end": "292300"
  },
  {
    "text": "and decide what data model really makes the most sense to me and how would be the simplest way that I could fill that",
    "start": "292300",
    "end": "298750"
  },
  {
    "text": "fulfill the requirements around that and that's with regards to the top to bottom",
    "start": "298750",
    "end": "304180"
  },
  {
    "text": "layers the final piece that we're going to be seeing actually taking place in",
    "start": "304180",
    "end": "310150"
  },
  {
    "text": "this session is how and why publish/subscribe communication between",
    "start": "310150",
    "end": "316050"
  },
  {
    "text": "these vertically sliced services is so helpful and simplifies a lot of the",
    "start": "316050",
    "end": "322360"
  },
  {
    "text": "back-end complex orchestration that we often have but because we got a lot of",
    "start": "322360",
    "end": "328960"
  },
  {
    "text": "code to go through I'm going to actually start first and foremost at the top in the UI so when you've got a UI like this",
    "start": "328960",
    "end": "336460"
  },
  {
    "text": "type of amazon.com product page as we mentioned things like the product",
    "start": "336460",
    "end": "342010"
  },
  {
    "text": "catalog information the name of the book the image of the book that can belong in",
    "start": "342010",
    "end": "347320"
  },
  {
    "text": "the yellow vertical slice the number of stars the ratings of the book can belong",
    "start": "347320",
    "end": "353080"
  },
  {
    "text": "in the blue vertical slice the price can belong in the green vertical slice the",
    "start": "353080",
    "end": "358870"
  },
  {
    "text": "inventory in the brown vertical slice and all of that sounds awesome cool great I get it but how do I build it and",
    "start": "358870",
    "end": "368250"
  },
  {
    "text": "that's what we're gonna be talking about over here it's how do we take all of those nice hand wavy arkad ivory tower",
    "start": "368250",
    "end": "375759"
  },
  {
    "text": "architect type things say well that's great but does that actually work in",
    "start": "375759",
    "end": "381070"
  },
  {
    "text": "code so what we're gonna do is we're not actually going to rebuild Amazon because here I've got like 55 minutes left",
    "start": "381070",
    "end": "387340"
  },
  {
    "text": "so I'm gonna start with something simpler we have the in that dotnet core",
    "start": "387340",
    "end": "392979"
  },
  {
    "text": "demo github URL that I gave you we have a simple a shop type of environment",
    "start": "392979",
    "end": "399340"
  },
  {
    "text": "where we've got products with names and they have costs and they have shipping information and",
    "start": "399340",
    "end": "406810"
  },
  {
    "text": "descriptions and pretty much sort of the the bare-bones building blocks of what",
    "start": "406810",
    "end": "412750"
  },
  {
    "text": "you'd expect on a product page in an e-commerce type of environment so how",
    "start": "412750",
    "end": "418419"
  },
  {
    "text": "would we build something like this in this composable type fashion so it all",
    "start": "418419",
    "end": "424930"
  },
  {
    "text": "starts with a generic web host project I want to drive that point home because",
    "start": "424930",
    "end": "431199"
  },
  {
    "start": "426000",
    "end": "426000"
  },
  {
    "text": "the way that we traditionally build these types of web based applications is",
    "start": "431199",
    "end": "436570"
  },
  {
    "text": "that we have this web project that has a whole bunch of views and controllers and",
    "start": "436570",
    "end": "442660"
  },
  {
    "text": "those controllers talk to services and the services return data and all of that ultimately is orchestrated by this",
    "start": "442660",
    "end": "450100"
  },
  {
    "text": "top-level web host project what we're gonna be doing here is different and",
    "start": "450100",
    "end": "455169"
  },
  {
    "text": "it's gonna look kind of odd because what we have in that generic host project is",
    "start": "455169",
    "end": "461280"
  },
  {
    "text": "views that are bound to view models that ultimately define how the page is going",
    "start": "461280",
    "end": "467380"
  },
  {
    "text": "to look but the controllers the controllers are really going to be these sort of simple",
    "start": "467380",
    "end": "473950"
  },
  {
    "text": "dumb type of objects that don't get any data at all so here's what it looks like",
    "start": "473950",
    "end": "480370"
  },
  {
    "text": "this is the view for that product page that we just saw or we've got a div",
    "start": "480370",
    "end": "485380"
  },
  {
    "text": "that's showing the image URL for the picture of the product and the product",
    "start": "485380",
    "end": "492190"
  },
  {
    "text": "name and inside there we also have the string that says oh okay this thing costs this much money this is the",
    "start": "492190",
    "end": "499539"
  },
  {
    "text": "product description a view pretty much like any other fairly simple and",
    "start": "499539",
    "end": "504700"
  },
  {
    "text": "bare-bones alright now all that's fine the question here once again is great",
    "start": "504700",
    "end": "510700"
  },
  {
    "text": "how do we get the data into that view or more specifically how do we populate the",
    "start": "510700",
    "end": "517240"
  },
  {
    "text": "view model so here's the controller that doesn't do that this is the product",
    "start": "517240",
    "end": "525459"
  },
  {
    "start": "523000",
    "end": "523000"
  },
  {
    "text": "controller that exists in that generic web host so what you see for the product",
    "start": "525459",
    "end": "532660"
  },
  {
    "text": "details page that details method down there the only",
    "start": "532660",
    "end": "538600"
  },
  {
    "text": "thing that that controller does is return the view doesn't go get the data doesn't call any other services it does",
    "start": "538600",
    "end": "546870"
  },
  {
    "text": "nothing but return the view now you and me looking at that saying well great",
    "start": "546870",
    "end": "552820"
  },
  {
    "text": "that's PowerPoint now show me the code so that I'll actually believe that you",
    "start": "552820",
    "end": "558730"
  },
  {
    "text": "can build a generic dumb web host that way that will still end up showing the",
    "start": "558730",
    "end": "564100"
  },
  {
    "text": "view with the data populated in it so let's take a look at that here we go",
    "start": "564100",
    "end": "573720"
  },
  {
    "text": "so what we have here is this a shop UI",
    "start": "573720",
    "end": "584100"
  },
  {
    "text": "and we've got a whole bunch of projects here what I've tried to do in this",
    "start": "584100",
    "end": "590710"
  },
  {
    "text": "session and most of the times people have seen my talks I tend to rail against the hello world samples that are",
    "start": "590710",
    "end": "598000"
  },
  {
    "text": "out there there are lots of great technology talks that say hey this is great this is awesome now let's go build",
    "start": "598000",
    "end": "603730"
  },
  {
    "text": "a hello world application or let's go build a to-do list but it's not really representative of a complex enough",
    "start": "603730",
    "end": "610660"
  },
  {
    "text": "domain that you can say would that actually fit in the project that I'm trying to build at work so we got a",
    "start": "610660",
    "end": "616690"
  },
  {
    "text": "whole bunch of moving parts here I'm gonna take you through it bit by bit so you can see how it all fits together and",
    "start": "616690",
    "end": "622540"
  },
  {
    "text": "why that's actually a good thing so we've got this a shop UI thing at the bottom and now I'm gonna show you the",
    "start": "622540",
    "end": "630220"
  },
  {
    "text": "view and the controller for that product page all right so here's our details",
    "start": "630220",
    "end": "637060"
  },
  {
    "text": "product page exactly the same thing that I showed you before alright and now here",
    "start": "637060",
    "end": "644500"
  },
  {
    "text": "we have our products controller which again and we're looking at a product page then the products controller is",
    "start": "644500",
    "end": "650710"
  },
  {
    "text": "going to be the thing that is invoked and right there you see that the details action is really just returning of you",
    "start": "650710",
    "end": "657960"
  },
  {
    "text": "so again you might be looking at this saying okay great let's see that run so",
    "start": "657960",
    "end": "666350"
  },
  {
    "text": "when I run this you're gonna notice that there's a whole lot of stuff that pops up right now ignore all of these",
    "start": "666350",
    "end": "673550"
  },
  {
    "text": "back-end process type things because we're gonna be looking at them a little",
    "start": "673550",
    "end": "678590"
  },
  {
    "text": "bit later what they're doing is they're starting up the back-end API as well as",
    "start": "678590",
    "end": "684980"
  },
  {
    "text": "some of the pub/sub stuff that I alluded to before that is going to be serving the web UI that we have over here so",
    "start": "684980",
    "end": "693140"
  },
  {
    "text": "here is our web UI here is the details page of a single phone again exactly the",
    "start": "693140",
    "end": "701330"
  },
  {
    "text": "same picture that I showed you before and once again you can see is we see the details and it's actually populated",
    "start": "701330",
    "end": "708560"
  },
  {
    "text": "there is data from somewhere else that's coming into that even though our web",
    "start": "708560",
    "end": "713720"
  },
  {
    "text": "controller is not actually retrieving it from anywhere so how does that even work",
    "start": "713720",
    "end": "722650"
  },
  {
    "text": "let's stop this for a second and talk a little bit about the design behind this",
    "start": "722650",
    "end": "729140"
  },
  {
    "text": "all right so we saw just a little bit of",
    "start": "729140",
    "end": "736610"
  },
  {
    "text": "the code where's the magic that actually makes all of this happen there's this",
    "start": "736610",
    "end": "741950"
  },
  {
    "text": "composition infrastructure that's available as a part of the solution all of it in the IT ops directory that",
    "start": "741950",
    "end": "748900"
  },
  {
    "text": "provides this kind of generic double dispatch behavior that allows you to",
    "start": "748900",
    "end": "756110"
  },
  {
    "text": "create all sorts of plugins that hook into the rendering of a page so it all",
    "start": "756110",
    "end": "762080"
  },
  {
    "text": "starts with two simple interfaces the first is the route interceptor the route",
    "start": "762080",
    "end": "769730"
  },
  {
    "text": "interceptor allows any piece of code to say I want to handle a web request if a",
    "start": "769730",
    "end": "777290"
  },
  {
    "text": "web request comes in call me so through",
    "start": "777290",
    "end": "782570"
  },
  {
    "text": "that it an object let's say from sales or billing or shipping or whatever can",
    "start": "782570",
    "end": "788780"
  },
  {
    "text": "hook into the web request handling pipeline and say I want to handle that",
    "start": "788780",
    "end": "794450"
  },
  {
    "text": "URL the other interface that's in there is what's called a view model appender",
    "start": "794450",
    "end": "801300"
  },
  {
    "text": "because in essence what those objects do they don't just handle a web request",
    "start": "801300",
    "end": "806530"
  },
  {
    "text": "what they do is they append data to the view model of that page that's",
    "start": "806530",
    "end": "813430"
  },
  {
    "text": "fundamentally what a controller does when you think about it it's not so much",
    "start": "813430",
    "end": "818950"
  },
  {
    "text": "controlling something it's getting data into a view model so by implementing",
    "start": "818950",
    "end": "825760"
  },
  {
    "text": "those interfaces I can have two independent NuGet packages three five as",
    "start": "825760",
    "end": "833980"
  },
  {
    "text": "many as I want that I toss into that generic host run time and at startup",
    "start": "833980",
    "end": "840550"
  },
  {
    "text": "it'll load them dynamically into memory and say oh okay now I know what each one of you does",
    "start": "840550",
    "end": "848310"
  },
  {
    "text": "based on the fact that you implement around interceptor if you model appender etc when a web request comes in like",
    "start": "848310",
    "end": "855610"
  },
  {
    "text": "slash product slash details one then I'm going to call you back and tell you do",
    "start": "855610",
    "end": "862930"
  },
  {
    "text": "your magic and then what is the magic that they do ultimately they turn around",
    "start": "862930",
    "end": "868540"
  },
  {
    "text": "and update a view model so let's take a",
    "start": "868540",
    "end": "874000"
  },
  {
    "text": "look at their code and how they actually do that work so back to our visual",
    "start": "874000",
    "end": "880900"
  },
  {
    "text": "studio so we've seen the generic web host there actually isn't any interesting logic in there but now let's",
    "start": "880900",
    "end": "888040"
  },
  {
    "text": "take a look at sales inside sales we",
    "start": "888040",
    "end": "893110"
  },
  {
    "text": "have this section called view model composition I'll zoom into that and that",
    "start": "893110",
    "end": "900640"
  },
  {
    "text": "view model composition is that project that I'm going to dump as a new get",
    "start": "900640",
    "end": "906910"
  },
  {
    "text": "package into my runtime directory of the generic host and it has all of those",
    "start": "906910",
    "end": "912460"
  },
  {
    "text": "let's call them micro controllers because micro services are such a cool thing we should have micro controllers as well",
    "start": "912460",
    "end": "918850"
  },
  {
    "text": "as micro services so let's take a look at the product details view model",
    "start": "918850",
    "end": "926260"
  },
  {
    "text": "handler all right so in here",
    "start": "926260",
    "end": "931840"
  },
  {
    "text": "I think what we have is we've got the we've got the order listened then they've got the product list and we've",
    "start": "931840",
    "end": "939790"
  },
  {
    "text": "got the product price get handler all right so what happens here is that is",
    "start": "939790",
    "end": "949900"
  },
  {
    "text": "that code big enough for everybody in the back I've made it just about as big as I can and still getting it into the screen all right so you've got the part",
    "start": "949900",
    "end": "957060"
  },
  {
    "text": "that is looking to match the URL to say is this a URL that I need to handle",
    "start": "957060",
    "end": "963610"
  },
  {
    "text": "that's the top method over here and the bottom method is the part that actually",
    "start": "963610",
    "end": "970170"
  },
  {
    "text": "handles the request so that when a request comes in what it does is it says",
    "start": "970170",
    "end": "976750"
  },
  {
    "text": "ok great let's pull out the product ID from the URL let's go call my back-end",
    "start": "976750",
    "end": "985750"
  },
  {
    "text": "and get the data from that service and",
    "start": "985750",
    "end": "991230"
  },
  {
    "text": "here's the part where things go from strongly-typed to more dynamically typed",
    "start": "991230",
    "end": "996550"
  },
  {
    "text": "this is kind of the magic loosely coupled piece that we take the results",
    "start": "996550",
    "end": "1002400"
  },
  {
    "text": "from my back-end API and put that data into the view model and that's that view",
    "start": "1002400",
    "end": "1009720"
  },
  {
    "text": "model object that I get as a parameter okay now here what we see is that that",
    "start": "1009720",
    "end": "1015860"
  },
  {
    "text": "microcontroller is only putting in the price it's not responsible for anything",
    "start": "1015860",
    "end": "1021840"
  },
  {
    "text": "else it says I don't know what else there is on this page and quite frankly I don't care my responsibility is just",
    "start": "1021840",
    "end": "1027540"
  },
  {
    "text": "this little piece of the view model so I'm gonna put my data in there now let's",
    "start": "1027540",
    "end": "1032850"
  },
  {
    "text": "take a look at another one so now we'll",
    "start": "1032850",
    "end": "1038040"
  },
  {
    "text": "go up to marketing marketing has its own",
    "start": "1038040",
    "end": "1044160"
  },
  {
    "text": "view model composition let's look at the product details handler that we have over there and once again what we see in",
    "start": "1044160",
    "end": "1050700"
  },
  {
    "text": "this matches functionality it's saying if the request is for slash product",
    "start": "1050700",
    "end": "1056610"
  },
  {
    "text": "slash details slash ID that's something I need to handle so it plugs into the",
    "start": "1056610",
    "end": "1064290"
  },
  {
    "text": "web request model says I'm gonna handle that request how do I handle that well when the request",
    "start": "1064290",
    "end": "1070050"
  },
  {
    "text": "comes in I'm gonna grab the ID from the URL call my back-end to go get my data",
    "start": "1070050",
    "end": "1078120"
  },
  {
    "text": "and then map that data to the view model and in this case I'm grabbing the",
    "start": "1078120",
    "end": "1084450"
  },
  {
    "text": "product name the product description the image URL and I'm pushing that into the",
    "start": "1084450",
    "end": "1089700"
  },
  {
    "text": "view model now notice here that in terms",
    "start": "1089700",
    "end": "1095730"
  },
  {
    "text": "of the generic web project that we have at the bottom let's see there's the",
    "start": "1095730",
    "end": "1101400"
  },
  {
    "text": "details page again nothing in there has any awareness that those other projects are even there the product controller",
    "start": "1101400",
    "end": "1108600"
  },
  {
    "text": "again no knowledge at all not making any calls to those things if later on the",
    "start": "1108600",
    "end": "1114720"
  },
  {
    "text": "business says hey we want to do something with I don't know ratings we could have yet another service drop a",
    "start": "1114720",
    "end": "1121980"
  },
  {
    "text": "new get package into there and plug and play we now have more functionality on",
    "start": "1121980",
    "end": "1128040"
  },
  {
    "text": "the website without having to update our generic web project so here out of",
    "start": "1128040",
    "end": "1135690"
  },
  {
    "text": "convenience again I want to make sure that I'm not pulling a fast one on you what you can see in terms of the",
    "start": "1135690",
    "end": "1142820"
  },
  {
    "text": "dependencies is we've taken a dependency on the shipping view model composition",
    "start": "1142820",
    "end": "1150480"
  },
  {
    "text": "the sales view model composition the marketing view model composition but we're not actually calling their code in",
    "start": "1150480",
    "end": "1157620"
  },
  {
    "text": "any way the only reason I'm taking these dependencies is so that the output of",
    "start": "1157620",
    "end": "1163440"
  },
  {
    "text": "those projects gets copied into the runtime directory so that when I do an f5 at all just springs to life if I was",
    "start": "1163440",
    "end": "1171390"
  },
  {
    "text": "to work in a more proper production ready DevOps type of pipeline I'd have",
    "start": "1171390",
    "end": "1177150"
  },
  {
    "text": "some kind of octopus deploy script that is taking that generic host package and",
    "start": "1177150",
    "end": "1182910"
  },
  {
    "text": "the shipping view model package and the sales view model package and the marketing a new model package and",
    "start": "1182910",
    "end": "1188940"
  },
  {
    "text": "deploying them all up together without having those dependencies in there but",
    "start": "1188940",
    "end": "1194220"
  },
  {
    "text": "because for this demo I wanted myself and for all of when you run it later on to just be able",
    "start": "1194220",
    "end": "1199950"
  },
  {
    "text": "to f5 and go alright so that's how this magic is occurring and we're able to",
    "start": "1199950",
    "end": "1207810"
  },
  {
    "text": "have code from different packages from different services all joining together",
    "start": "1207810",
    "end": "1213120"
  },
  {
    "text": "and engage in this type of view model composition and now we've got a beautiful screen in front of us that",
    "start": "1213120",
    "end": "1219990"
  },
  {
    "text": "shows the composition that we had before next up a grid right so we've shown how",
    "start": "1219990",
    "end": "1229110"
  },
  {
    "text": "to show a single item now we want to show a list of items or a grid of data",
    "start": "1229110",
    "end": "1236340"
  },
  {
    "text": "from multiple services so once again",
    "start": "1236340",
    "end": "1242310"
  },
  {
    "text": "bear with me so that I can show you the code in PowerPoint so it's nice and big this is the the view of the product list",
    "start": "1242310",
    "end": "1252630"
  },
  {
    "text": "page and what you can see again is that we are looping over right there at the",
    "start": "1252630",
    "end": "1258210"
  },
  {
    "text": "top for each of our product in model dot products alright so we know we have this",
    "start": "1258210",
    "end": "1265590"
  },
  {
    "text": "list of products and each one of those products has a name and an image URL and",
    "start": "1265590",
    "end": "1271080"
  },
  {
    "text": "a price and all that kind of stuff ok once again you saw the controller from",
    "start": "1271080",
    "end": "1276930"
  },
  {
    "text": "before that lists the index action of",
    "start": "1276930",
    "end": "1282870"
  },
  {
    "text": "the controller all that it's doing is returning the view it's a dumb",
    "start": "1282870",
    "end": "1288210"
  },
  {
    "text": "controller and has no idea where the data is coming from how many services",
    "start": "1288210",
    "end": "1293250"
  },
  {
    "text": "who needs to be orchestrated etc so again let's run this and then we can",
    "start": "1293250",
    "end": "1300030"
  },
  {
    "text": "look at the code well I think you already believe me that it runs because we saw that before when we clicked on the single page but once again here is",
    "start": "1300030",
    "end": "1306690"
  },
  {
    "text": "the products controller that's returning the view here we have the products",
    "start": "1306690",
    "end": "1313520"
  },
  {
    "text": "index.html page that is showing us that for each of our product in model dot",
    "start": "1313520",
    "end": "1318570"
  },
  {
    "text": "products and what we have in there is the product name the product price the product in stock all of that so the",
    "start": "1318570",
    "end": "1326970"
  },
  {
    "text": "thing about a grid that makes it a little bit more challenging is we don't just have the ID",
    "start": "1326970",
    "end": "1336970"
  },
  {
    "text": "in the URL right we can't just say each of these services we'll go to the URL",
    "start": "1336970",
    "end": "1343550"
  },
  {
    "text": "and know which IDs to grab so that's the challenge when we want to go and create",
    "start": "1343550",
    "end": "1348860"
  },
  {
    "text": "a list or a grid of things there needs to be at least something that knows well",
    "start": "1348860",
    "end": "1355070"
  },
  {
    "text": "what are all the items that need to be shown here in the first place so here's how the composition works when",
    "start": "1355070",
    "end": "1361820"
  },
  {
    "text": "we're doing a grid we've got this orange service let's call that marketing for",
    "start": "1361820",
    "end": "1367580"
  },
  {
    "start": "1362000",
    "end": "1362000"
  },
  {
    "text": "argument's sake and what it's doing is it's going to its back-end and figuring",
    "start": "1367580",
    "end": "1373340"
  },
  {
    "text": "out what are the list of products that need to be shown for that page now know",
    "start": "1373340",
    "end": "1378620"
  },
  {
    "text": "what it has over here it's not getting back all of the product data because it doesn't have all of the product data all",
    "start": "1378620",
    "end": "1387470"
  },
  {
    "text": "it's saying is I've loaded up the product data that I know about and this is the part where things get a little a",
    "start": "1387470",
    "end": "1394010"
  },
  {
    "text": "bit interesting because we're going to use a kind of client-side message broker",
    "start": "1394010",
    "end": "1399350"
  },
  {
    "text": "this is also known as the event aggregator pattern if you if you were",
    "start": "1399350",
    "end": "1404390"
  },
  {
    "text": "familiar with that term so it's raising an event this is an in-memory in process",
    "start": "1404390",
    "end": "1411440"
  },
  {
    "text": "event in the web tier that's saying I found this list of product IDs whoever",
    "start": "1411440",
    "end": "1418910"
  },
  {
    "text": "is interested you know do with it what you like and now what we have is two",
    "start": "1418910",
    "end": "1425750"
  },
  {
    "text": "other services two other vertical slices that are subscribed to that event that",
    "start": "1425750",
    "end": "1432980"
  },
  {
    "text": "says the products loaded and through that they're able to get the list of",
    "start": "1432980",
    "end": "1439309"
  },
  {
    "text": "product IDs and once they have that then they can turn around and go and talk to",
    "start": "1439309",
    "end": "1444500"
  },
  {
    "text": "their back-end and one of them says oh okay let's go get the dollar value for",
    "start": "1444500",
    "end": "1449660"
  },
  {
    "text": "each of those product IDs the other one says let's go get the inventory level for each one of those product IDs",
    "start": "1449660",
    "end": "1455630"
  },
  {
    "text": "another one comes along and says let's get the number of stars for each one of those product IDs so again beyond just",
    "start": "1455630",
    "end": "1461570"
  },
  {
    "text": "that event that is going between one service and those other services there really is no",
    "start": "1461570",
    "end": "1469840"
  },
  {
    "text": "Orchestrator that knows how many of them there are so now that each one of those",
    "start": "1469840",
    "end": "1478840"
  },
  {
    "text": "front-end microcontroller things has the data that it needs they can start",
    "start": "1478840",
    "end": "1485480"
  },
  {
    "text": "pushing that data into the view model or again one of them is putting in that marketing type information of the name",
    "start": "1485480",
    "end": "1492860"
  },
  {
    "text": "of the product the image of the product etc the other one is putting in the prices the third one is putting in the",
    "start": "1492860",
    "end": "1499460"
  },
  {
    "text": "ratings and once the view model is full then we can render the screen the view",
    "start": "1499460",
    "end": "1507560"
  },
  {
    "text": "and as far as the end user is concerned it's gonna look like just a regular list",
    "start": "1507560",
    "end": "1512630"
  },
  {
    "text": "of stuff but again the trick here is that there is no Orchestrator that is",
    "start": "1512630",
    "end": "1521570"
  },
  {
    "text": "tightly coupled to all of those pieces we can very easily plug in a fourth and",
    "start": "1521570",
    "end": "1529100"
  },
  {
    "text": "a fifth vertical slice that will be able to expand on the data that's coming to",
    "start": "1529100",
    "end": "1534920"
  },
  {
    "text": "the user and this is what gives us that composed view model that list of products where each field of data is",
    "start": "1534920",
    "end": "1543800"
  },
  {
    "text": "coming from a different service so let's",
    "start": "1543800",
    "end": "1549110"
  },
  {
    "text": "go take a look at that code to see just how the publish/subscribe event stuff",
    "start": "1549110",
    "end": "1554960"
  },
  {
    "text": "works because it's like pops up if you haven't done any type of event",
    "start": "1554960",
    "end": "1560120"
  },
  {
    "text": "aggregation it can seem a little bit complex when you start out but once you've kind of seen it once or twice",
    "start": "1560120",
    "end": "1566000"
  },
  {
    "text": "then you know it's fairly easy to see how you do it a third time and a fourth",
    "start": "1566000",
    "end": "1571190"
  },
  {
    "text": "time okay so let's start out with just that part of the the service that's",
    "start": "1571190",
    "end": "1578000"
  },
  {
    "text": "going in getting the list of them so we've got the product list handler over",
    "start": "1578000",
    "end": "1584210"
  },
  {
    "text": "here this is from marketing where again as we said there's the matches part for it to say I need to handle this URL and",
    "start": "1584210",
    "end": "1592150"
  },
  {
    "text": "then in there it goes to its back-end all right let's go get the list of",
    "start": "1592150",
    "end": "1598659"
  },
  {
    "text": "products and here's the part where it maps that to some kind of dictionary so",
    "start": "1598659",
    "end": "1605379"
  },
  {
    "text": "it's got its back end list of products and as we know we don't tend to bind the",
    "start": "1605379",
    "end": "1610570"
  },
  {
    "text": "model that we get from our back end directly so we transform that to something that is appropriate for a few",
    "start": "1610570",
    "end": "1616720"
  },
  {
    "text": "model and then this is the magic okay",
    "start": "1616720",
    "end": "1622080"
  },
  {
    "text": "that's the part where the service that knows what the product ID is is raising",
    "start": "1622080",
    "end": "1628360"
  },
  {
    "text": "an event it's saying these are the products that I've loaded whoever might",
    "start": "1628360",
    "end": "1633970"
  },
  {
    "text": "be interested in that again just to drive this point home we're gonna go",
    "start": "1633970",
    "end": "1639159"
  },
  {
    "text": "look at the dependencies of the view model composition project and what",
    "start": "1639159",
    "end": "1644679"
  },
  {
    "text": "you'll see over here is that it takes no dependencies on any of their vertical",
    "start": "1644679",
    "end": "1652840"
  },
  {
    "text": "slice right it doesn't know that they're there all it's doing is its raising that",
    "start": "1652840",
    "end": "1658240"
  },
  {
    "text": "event called products loaded and something else will then react to that",
    "start": "1658240",
    "end": "1664289"
  },
  {
    "text": "so let's take a look at who reacts that we've got sales that hat that is",
    "start": "1664289",
    "end": "1671769"
  },
  {
    "text": "responsible for the prices in this case and inside sales we've got this view model composition thing so the part that",
    "start": "1671769",
    "end": "1678909"
  },
  {
    "text": "we are looking at is the product list get handler so there's a slight",
    "start": "1678909",
    "end": "1684610"
  },
  {
    "text": "difference here in terms of the interface that it's implementing instead of just handling the request it is",
    "start": "1684610",
    "end": "1691600"
  },
  {
    "text": "implementing the I subscribe to view model composition events that's the way",
    "start": "1691600",
    "end": "1696879"
  },
  {
    "text": "that it engages with the infrastructure and tells it look I'm going to want to",
    "start": "1696879",
    "end": "1702580"
  },
  {
    "text": "register a callback for when I need to work on a view model so at the startup",
    "start": "1702580",
    "end": "1711039"
  },
  {
    "text": "of the page what it does is it gets invoked by the infrastructure that says",
    "start": "1711039",
    "end": "1717250"
  },
  {
    "text": "hey you told me you need it to handle an event on this page do your thing so it",
    "start": "1717250",
    "end": "1723730"
  },
  {
    "text": "talks to that infrastructure says I'd like to register a callback for the product loaded",
    "start": "1723730",
    "end": "1729250"
  },
  {
    "text": "event so page loads up that",
    "start": "1729250",
    "end": "1734680"
  },
  {
    "text": "microcontroller gets invoked as a part of its initialization code it subscribes",
    "start": "1734680",
    "end": "1740290"
  },
  {
    "text": "to the event the callback that it has it says when the event is raised then go",
    "start": "1740290",
    "end": "1750280"
  },
  {
    "text": "grab the product IDs then go call my back-end to go get back the list of",
    "start": "1750280",
    "end": "1757330"
  },
  {
    "text": "information that my back-end has and for each one of the product IDs that are in",
    "start": "1757330",
    "end": "1764290"
  },
  {
    "text": "there go and update the product price in that view model alright so again what we",
    "start": "1764290",
    "end": "1774010"
  },
  {
    "text": "have here is a reactive microcontroller for a page it's this type of NuGet",
    "start": "1774010",
    "end": "1783100"
  },
  {
    "text": "package that you can drop into the generic web host and it will configure",
    "start": "1783100",
    "end": "1788260"
  },
  {
    "text": "itself and say which requests it needs to handle and for each of those it'll say what are the events that it wants to",
    "start": "1788260",
    "end": "1794380"
  },
  {
    "text": "handle and when those events get fired how it's gonna actually grab its data and update that view model so we can see",
    "start": "1794380",
    "end": "1801550"
  },
  {
    "text": "here again that sales and let's look at one more which is shipping so right over",
    "start": "1801550",
    "end": "1807970"
  },
  {
    "text": "here we've got shipping and it's view model composition and the product list get handler and we'll see the exact same",
    "start": "1807970",
    "end": "1815200"
  },
  {
    "text": "thing inside shipping again you see the namespace called shipping I'm not",
    "start": "1815200",
    "end": "1820360"
  },
  {
    "text": "pulling a fast one has a product list get handler that is subscribing to the view model composition event its",
    "start": "1820360",
    "end": "1827110"
  },
  {
    "text": "handling the product index page so the exact same URL as all of the others are",
    "start": "1827110",
    "end": "1833050"
  },
  {
    "text": "and registers a callback for that same products loaded event once it gets that",
    "start": "1833050",
    "end": "1842740"
  },
  {
    "text": "it goes to its back-end with the product IDs does a request for the product stock list and for each piece of data that it",
    "start": "1842740",
    "end": "1850330"
  },
  {
    "text": "gets back it updates the product in stock property of that view model and",
    "start": "1850330",
    "end": "1855630"
  },
  {
    "text": "voila now we have a grid with all of those pieces running together again you",
    "start": "1855630",
    "end": "1861520"
  },
  {
    "text": "can imagine that in the future when the business says now I want to have a customer specific discount for every single item",
    "start": "1861520",
    "end": "1868789"
  },
  {
    "text": "in the list we can create a customer micro-controller thing that is also",
    "start": "1868789",
    "end": "1875089"
  },
  {
    "text": "handling the product list URL it is subscribing to the products loaded event and then puts its own data into that",
    "start": "1875089",
    "end": "1881959"
  },
  {
    "text": "view model okay so now we can see how a",
    "start": "1881959",
    "end": "1888519"
  },
  {
    "text": "grid like this can be shown and most",
    "start": "1888519",
    "end": "1895070"
  },
  {
    "text": "importantly that we can do that without",
    "start": "1895070",
    "end": "1900519"
  },
  {
    "text": "having an orchestration layer that everything is this type of pluggable",
    "start": "1900519",
    "end": "1907399"
  },
  {
    "text": "vertical slice that I can have you know three of them five of them seven of them",
    "start": "1907399",
    "end": "1913999"
  },
  {
    "text": "where I can test each one of them by itself I conversion each one of them by",
    "start": "1913999",
    "end": "1919070"
  },
  {
    "text": "itself I can deploy each one of them by itself and I get all of the benefits of",
    "start": "1919070",
    "end": "1925450"
  },
  {
    "text": "micro services that you might have heard about before but all the way up to the",
    "start": "1925450",
    "end": "1930679"
  },
  {
    "text": "UI I get this decoupling at the UI layer I get the decoupling at the business logic layer and I get the decoupling at",
    "start": "1930679",
    "end": "1937789"
  },
  {
    "text": "the data layer so again this is not amazon.com but this is a working dotnet",
    "start": "1937789",
    "end": "1945229"
  },
  {
    "text": "core 2.0 solution that you can take home and start playing with and seeing how",
    "start": "1945229",
    "end": "1951440"
  },
  {
    "text": "you could build something like that yourselves let's move on what about the",
    "start": "1951440",
    "end": "1961070"
  },
  {
    "text": "actions right because it's not all about queries we've got data that the user",
    "start": "1961070",
    "end": "1971659"
  },
  {
    "text": "wants to put into our system they want to add items to the shopping cart they",
    "start": "1971659",
    "end": "1976729"
  },
  {
    "text": "want to buy items they want to cancel orders they want to do stuff with our system and not just query it now in this",
    "start": "1976729",
    "end": "1984469"
  },
  {
    "text": "example we're gonna see how we even do composition for that so that it's not",
    "start": "1984469",
    "end": "1991789"
  },
  {
    "text": "necessarily just one controller action that is handling everything because as",
    "start": "1991789",
    "end": "1998679"
  },
  {
    "text": "we know a lot of times there's a need to do an orchestration for a given user",
    "start": "1998679",
    "end": "2004740"
  },
  {
    "text": "action we're saying if a user says I'd like to buy an item yes there is the regular sales process of buying an item",
    "start": "2004740",
    "end": "2011130"
  },
  {
    "text": "but we might have other types of I don't know user click tracking type of stuff",
    "start": "2011130",
    "end": "2016919"
  },
  {
    "text": "that we also want to have in our system now if all we have is just sort of one big uber controller across the top and",
    "start": "2016919",
    "end": "2024299"
  },
  {
    "text": "it's orchestrating all those other things again that creates a lot of coupling and that's coupling on the",
    "start": "2024299",
    "end": "2029789"
  },
  {
    "text": "command side not on the query side so we've gotten rid of a lot of the coupling on the query side we're gonna",
    "start": "2029789",
    "end": "2035669"
  },
  {
    "text": "talk about how we get rid of that coupling on the command side but just for a second I want to pause that and",
    "start": "2035669",
    "end": "2042210"
  },
  {
    "text": "talk about something else entirely the issue with handling these types of",
    "start": "2042210",
    "end": "2049158"
  },
  {
    "text": "commands that the user is performing is that you know sometimes when production",
    "start": "2049159",
    "end": "2056970"
  },
  {
    "text": "gets under load bad things happen so let's take a look at one of those",
    "start": "2056970",
    "end": "2062638"
  },
  {
    "text": "scenarios where we're using an HTTP API for those types of commands and what can",
    "start": "2062639",
    "end": "2069148"
  },
  {
    "text": "happen to a system under load so we've got data that's flowing into our system people are clicking buttons saying I",
    "start": "2069149",
    "end": "2074820"
  },
  {
    "text": "want to buy an item I want to do this I want to do that and we have our web service at that front-end it's",
    "start": "2074820",
    "end": "2081240"
  },
  {
    "text": "processing that request turning around talking to some kind of database saying okay open up the connection go and put",
    "start": "2081240",
    "end": "2087270"
  },
  {
    "text": "something in the parent table go and put something in the child table and as luck",
    "start": "2087270",
    "end": "2092700"
  },
  {
    "text": "would have it because our server is under so much load is does the very",
    "start": "2092700",
    "end": "2100740"
  },
  {
    "text": "despicable act of shooting our process in the head and bringing it back online",
    "start": "2100740",
    "end": "2107420"
  },
  {
    "text": "this is known as recycling your application pool it sounds so much nicer",
    "start": "2107420",
    "end": "2114570"
  },
  {
    "text": "that way right oh I didn't shoot your process in the head I just recycled it recycling is green",
    "start": "2114570",
    "end": "2121109"
  },
  {
    "text": "and ecologically friendly but think about what that",
    "start": "2121109",
    "end": "2126300"
  },
  {
    "text": "when your web server which is in the middle of processing hundreds of web",
    "start": "2126300",
    "end": "2131430"
  },
  {
    "text": "requests talking to however many database tables all of a sudden",
    "start": "2131430",
    "end": "2138020"
  },
  {
    "text": "disappears database is kind of sitting there saying what just happened you open",
    "start": "2138020",
    "end": "2145710"
  },
  {
    "text": "up a connection you start doing these sequel statements and you don't commit you don't close your transaction you",
    "start": "2145710",
    "end": "2152760"
  },
  {
    "text": "don't end up cleaning up your connection so it's sitting there waiting just so",
    "start": "2152760",
    "end": "2159119"
  },
  {
    "text": "that you know the default transaction time out of a sequel server database can",
    "start": "2159119",
    "end": "2165990"
  },
  {
    "text": "be as high as 10 minutes not 30 seconds",
    "start": "2165990",
    "end": "2171030"
  },
  {
    "text": "most people think it's 30 seconds because that's the HTTP timeout interval but the database transaction timeout is",
    "start": "2171030",
    "end": "2177840"
  },
  {
    "text": "something else entirely so you could end up with hundreds of zombie connections",
    "start": "2177840",
    "end": "2183780"
  },
  {
    "text": "in your database that are left lying around for minutes",
    "start": "2183780",
    "end": "2190190"
  },
  {
    "text": "resulting potentially in other servers not actually even being able to get a",
    "start": "2190190",
    "end": "2196260"
  },
  {
    "text": "connection to your database thus resulting in some severe downtime for your system so it's pretty bad when this",
    "start": "2196260",
    "end": "2204570"
  },
  {
    "text": "happens but it's kind of hard to stop servers from crashing or web servers",
    "start": "2204570",
    "end": "2210240"
  },
  {
    "text": "from recycling their pool but eventually the database says ok I give up it",
    "start": "2210240",
    "end": "2216540"
  },
  {
    "text": "doesn't look like these transactions are ever going to commit I roll back so whatever data we put into the database",
    "start": "2216540",
    "end": "2223170"
  },
  {
    "text": "is no longer there it's gone whatever data we had in memory on our web server",
    "start": "2223170",
    "end": "2229670"
  },
  {
    "text": "similarly is gone because the process has been recycled so now the $64,000",
    "start": "2229670",
    "end": "2236100"
  },
  {
    "text": "question is where's the data whereas the hundreds of orders that the users were",
    "start": "2236100",
    "end": "2243390"
  },
  {
    "text": "placing on my web site the answer is well it's not in the database not in the",
    "start": "2243390",
    "end": "2249540"
  },
  {
    "text": "web server what should we do",
    "start": "2249540",
    "end": "2255070"
  },
  {
    "text": "well the way that most developers handle something like that is they'll say I'm",
    "start": "2255070",
    "end": "2261010"
  },
  {
    "text": "my problem the IT ops people should have clustered things they should have highly",
    "start": "2261010",
    "end": "2267610"
  },
  {
    "text": "available eyes these types of things you know I used best practices I used Web",
    "start": "2267610",
    "end": "2273760"
  },
  {
    "text": "API I used angular on the front end I use transactions against the sequel",
    "start": "2273760",
    "end": "2279640"
  },
  {
    "text": "server database on the back end I did my job and if that results in data loss because",
    "start": "2279640",
    "end": "2287140"
  },
  {
    "text": "of downtime well then somebody should pick some cloud provider that never goes down",
    "start": "2287140",
    "end": "2292740"
  },
  {
    "text": "does anybody know of a cloud provider that never goes down no I'm sure that",
    "start": "2292740",
    "end": "2299320"
  },
  {
    "text": "you know some of the vendors out there will say no no we actually give you that you just need to pay an arm and leg and",
    "start": "2299320",
    "end": "2306700"
  },
  {
    "text": "kidney and preferably your firstborn and then we take care of that for you",
    "start": "2306700",
    "end": "2313110"
  },
  {
    "text": "everything will be highly available all the time but if you're not willing to give up your firstborn there's another",
    "start": "2313110",
    "end": "2319630"
  },
  {
    "text": "solution that works really well for commands and that is to introduce a",
    "start": "2319630",
    "end": "2325540"
  },
  {
    "start": "2325000",
    "end": "2325000"
  },
  {
    "text": "little bit of queuing into the behavior of the command processing and a little",
    "start": "2325540",
    "end": "2332020"
  },
  {
    "text": "bit of service bus technology over the top such that when the user saying I'd like to buy an item or is submitting",
    "start": "2332020",
    "end": "2338740"
  },
  {
    "text": "some other kind of command what we do is we get that as a message into a durable",
    "start": "2338740",
    "end": "2344710"
  },
  {
    "text": "queueing system this could be RabbitMQ if we're talking about on-premises this could be as your service bus arrives",
    "start": "2344710",
    "end": "2351520"
  },
  {
    "text": "your storage queues if we're talking about the Microsoft cloud this could be Amazon sqs if we're talking about the",
    "start": "2351520",
    "end": "2357070"
  },
  {
    "text": "AWS cloud almost every type of deployment environment that you can",
    "start": "2357070",
    "end": "2362080"
  },
  {
    "text": "think of has a queueing technology queues are such a good idea in software",
    "start": "2362080",
    "end": "2368350"
  },
  {
    "text": "that they've been around forever and there is just a plethora of implementations available pick one but",
    "start": "2368350",
    "end": "2376720"
  },
  {
    "text": "having a durable queue is not always enough you need something else that will",
    "start": "2376720",
    "end": "2382990"
  },
  {
    "text": "manage the transactions of pulling the message out of the queue invoking your",
    "start": "2382990",
    "end": "2388040"
  },
  {
    "text": "own business logic for that where you'll then go and talk to a database and either it'll make use of some",
    "start": "2388040",
    "end": "2394700"
  },
  {
    "text": "distributed transaction stuff which for example ms MQ and sequel server supports",
    "start": "2394700",
    "end": "2400430"
  },
  {
    "text": "or if you're using rabbitmq or Azure storage queues or the type of queueing technologies that don't support",
    "start": "2400430",
    "end": "2407210"
  },
  {
    "text": "distributed transactions then that bus technology will use all sorts of cool",
    "start": "2407210",
    "end": "2412850"
  },
  {
    "text": "little implementation patterns like the outbox you can google that and service bus outbox that gives you a kind of deduplication",
    "start": "2412850",
    "end": "2420190"
  },
  {
    "text": "safety that will make sure that a given transaction is process just the one time",
    "start": "2420190",
    "end": "2427310"
  },
  {
    "text": "so if you want to figure out how that kind of stuff works behind the scenes that's not this talk you can go and find",
    "start": "2427310",
    "end": "2434510"
  },
  {
    "text": "the information in the documentation online so that whenever something bad happens whether you're processing server",
    "start": "2434510",
    "end": "2441920"
  },
  {
    "text": "crashes whether the database runs out of connections whatever when all of that",
    "start": "2441920",
    "end": "2447890"
  },
  {
    "text": "rolls back not only does the database roll back but the queuing system will roll back that message meaning that you",
    "start": "2447890",
    "end": "2456410"
  },
  {
    "text": "don't lose any data the million-dollar order that was submitted on your website is back in the queue and then you can",
    "start": "2456410",
    "end": "2463790"
  },
  {
    "text": "process it again now there's a little bit more complexity to how a bus works",
    "start": "2463790",
    "end": "2470630"
  },
  {
    "text": "but that's roughly what it is at a high level and why you want to have one for",
    "start": "2470630",
    "end": "2477320"
  },
  {
    "text": "when you're processing data that's coming in from your users so what does",
    "start": "2477320",
    "end": "2482780"
  },
  {
    "text": "that look like in terms of code in order to send a message into a queue it looks",
    "start": "2482780",
    "end": "2489290"
  },
  {
    "start": "2489000",
    "end": "2489000"
  },
  {
    "text": "something like this you have some controller and it could be that sales controller or the pricing controller or",
    "start": "2489290",
    "end": "2497210"
  },
  {
    "text": "what have you that is handling that HTTP request and you turn around for that",
    "start": "2497210",
    "end": "2502490"
  },
  {
    "text": "HTTP request and create a object in this case we're talking about the record",
    "start": "2502490",
    "end": "2509180"
  },
  {
    "text": "consumer behavior message because we want to track what it is that the user",
    "start": "2509180",
    "end": "2515300"
  },
  {
    "text": "is doing on our website and we take that and we send that into a queue so this API awaits session",
    "start": "2515300",
    "end": "2523060"
  },
  {
    "text": "dot send with a message object is the end service bus wrapper for the queuing",
    "start": "2523060",
    "end": "2529150"
  },
  {
    "text": "system so it's really that simple two lines of code to put a message into a",
    "start": "2529150",
    "end": "2536470"
  },
  {
    "text": "queue and it does all sorts of other nifty things that we're gonna talk about in a minute now let's talk about the backend side of",
    "start": "2536470",
    "end": "2542860"
  },
  {
    "text": "it of what it means to handle a message so here again we have the part of our",
    "start": "2542860",
    "end": "2548260"
  },
  {
    "start": "2543000",
    "end": "2543000"
  },
  {
    "text": "system that is tracking the users behavior on the website where it is implementing the interface",
    "start": "2548260",
    "end": "2553960"
  },
  {
    "text": "I handle messages of record consumer behavior that's the message object again",
    "start": "2553960",
    "end": "2559480"
  },
  {
    "text": "and in our handle method it does the actual work so what we're doing over",
    "start": "2559480",
    "end": "2565390"
  },
  {
    "text": "here in our sample just to make this a little bit interesting is we're simulating that we're doing some work by",
    "start": "2565390",
    "end": "2571900"
  },
  {
    "text": "putting in a task delay the reason that we do this is so that in just a minute when I show you how we monitor all of",
    "start": "2571900",
    "end": "2579130"
  },
  {
    "text": "these different processes that will actually see some kind of load in the",
    "start": "2579130",
    "end": "2584320"
  },
  {
    "text": "system because when we don't have any task delays it just runs too fast and you don't get to see anything",
    "start": "2584320",
    "end": "2589800"
  },
  {
    "text": "interesting that's going on so now that we've talked about that let's go look at",
    "start": "2589800",
    "end": "2596560"
  },
  {
    "text": "that bit of code the sending of the messages the handling of the messages and then from there some",
    "start": "2596560",
    "end": "2603760"
  },
  {
    "text": "publish/subscribe that's going to be happening behind the scenes between our services so on to code so for this",
    "start": "2603760",
    "end": "2617530"
  },
  {
    "text": "button remember what I said we want to do two things the user wants to buy an",
    "start": "2617530",
    "end": "2622690"
  },
  {
    "text": "item and we want to record the consumer behavior so what we have here I'm going",
    "start": "2622690",
    "end": "2629260"
  },
  {
    "text": "to start with the record consumer behavior because that's what marketing is doing marketing as a part of that",
    "start": "2629260",
    "end": "2637360"
  },
  {
    "text": "behavior that the user is doing has a buy item post handler so again it's",
    "start": "2637360",
    "end": "2643180"
  },
  {
    "text": "implementing that view model composition interface I handle requests that allows",
    "start": "2643180",
    "end": "2648220"
  },
  {
    "text": "it to say I want to handle when the user clicks the by item command in other words the",
    "start": "2648220",
    "end": "2656960"
  },
  {
    "text": "HTTP POST is by item for the URL called slash product slash ID so again that's",
    "start": "2656960",
    "end": "2664070"
  },
  {
    "text": "our matches behavior for an action as opposed to just for a query and then",
    "start": "2664070",
    "end": "2670160"
  },
  {
    "text": "here's that code that I showed you before where what it's doing when the",
    "start": "2670160",
    "end": "2675350"
  },
  {
    "text": "user clicks that button is it turns around and puts a message into a queue",
    "start": "2675350",
    "end": "2680830"
  },
  {
    "text": "ok so here we have one button click",
    "start": "2680830",
    "end": "2686300"
  },
  {
    "text": "handler from one vertical slice and now",
    "start": "2686300",
    "end": "2691400"
  },
  {
    "text": "what we're going to do is look at another vertical slice that is handling",
    "start": "2691400",
    "end": "2696500"
  },
  {
    "text": "that same button click so we'll go into sales and inside sales again we see a by",
    "start": "2696500",
    "end": "2702890"
  },
  {
    "text": "item process handler which again is doing that I handle requests handling",
    "start": "2702890",
    "end": "2709190"
  },
  {
    "text": "the HTTP POST by item action for the slash product slash ID and for that",
    "start": "2709190",
    "end": "2718820"
  },
  {
    "text": "button click what it then does is it sends its own message saying the user",
    "start": "2718820",
    "end": "2725840"
  },
  {
    "text": "wants to place an order reiterating why is this a good thing now I don't need to",
    "start": "2725840",
    "end": "2734330"
  },
  {
    "text": "have a big orchestrating controller that",
    "start": "2734330",
    "end": "2739370"
  },
  {
    "text": "I need to update anytime the business says I want to do something else in",
    "start": "2739370",
    "end": "2745430"
  },
  {
    "text": "addition to what is already happening when the user clicks buy item in other",
    "start": "2745430",
    "end": "2751340"
  },
  {
    "text": "words I can enrich the behavior of my system for each user action without",
    "start": "2751340",
    "end": "2757370"
  },
  {
    "text": "having to change existing code from other vertical slices I can continue",
    "start": "2757370",
    "end": "2763910"
  },
  {
    "text": "putting in new code that plugs into the existing behavior of that system so now",
    "start": "2763910",
    "end": "2770960"
  },
  {
    "text": "let's look at what happens when we're handling the place order command so",
    "start": "2770960",
    "end": "2778630"
  },
  {
    "text": "notice here I have the place order command inside the",
    "start": "2778630",
    "end": "2786380"
  },
  {
    "text": "sails internal project so sails internal is the place where I'm putting the",
    "start": "2786380",
    "end": "2793130"
  },
  {
    "text": "messages where sails front end code is talking to sails back-end code so this",
    "start": "2793130",
    "end": "2800780"
  },
  {
    "text": "is just internal vertical sliced communication without anybody outside my",
    "start": "2800780",
    "end": "2806210"
  },
  {
    "text": "slice knowing that I'm doing anything at all so here's my place order command and",
    "start": "2806210",
    "end": "2811280"
  },
  {
    "text": "as you can see it's a fairly simple object just a DTO with some get set properties on it the order ID the",
    "start": "2811280",
    "end": "2817940"
  },
  {
    "text": "product ID etc and now when I look at the sales API the back-end part of it I",
    "start": "2817940",
    "end": "2826820"
  },
  {
    "text": "have a message handler that is called well actually this is the part where",
    "start": "2826820",
    "end": "2833000"
  },
  {
    "text": "things get interesting so what's going to happen here is that I don't have just",
    "start": "2833000",
    "end": "2840920"
  },
  {
    "text": "any old regular message handler instead what we have is a kind of longer running",
    "start": "2840920",
    "end": "2848570"
  },
  {
    "text": "process what we've discovered is that when users go to buy stuff online",
    "start": "2848570",
    "end": "2854330"
  },
  {
    "text": "especially iPhones it turns out that the",
    "start": "2854330",
    "end": "2859820"
  },
  {
    "text": "sometimes cancel their order soon after now although this is being recorded this",
    "start": "2859820",
    "end": "2867740"
  },
  {
    "text": "has never happened to me okay I have never gone online when a new iPhone has",
    "start": "2867740",
    "end": "2874460"
  },
  {
    "text": "come out and immediately done an impulse purchase of the new version of the",
    "start": "2874460",
    "end": "2880310"
  },
  {
    "text": "iPhone where five minutes later my significant other walks by and says hi",
    "start": "2880310",
    "end": "2886700"
  },
  {
    "text": "hun what you doing and then I never immediately said oh nothing and",
    "start": "2886700",
    "end": "2892850"
  },
  {
    "text": "immediately cancelled the purchase that I had just not made now from the",
    "start": "2892850",
    "end": "2901910"
  },
  {
    "text": "perspective of the company they've noticed that this is happening kind of a",
    "start": "2901910",
    "end": "2907580"
  },
  {
    "text": "lot for the new iPhones that we're putting out there so when the user",
    "start": "2907580",
    "end": "2914330"
  },
  {
    "text": "clicks place order if we immediately start going to the warehouse and getting stuff",
    "start": "2914330",
    "end": "2919580"
  },
  {
    "text": "and charging the persons card and then five minutes later they cancel their order it's like ah now we need to refund",
    "start": "2919580",
    "end": "2926810"
  },
  {
    "text": "their purchase to the credit card but unfortunately I still have to pay the credit card company for the action that",
    "start": "2926810",
    "end": "2933440"
  },
  {
    "text": "we've performed and then we got to go and take the iPhone out of the the bin",
    "start": "2933440",
    "end": "2938600"
  },
  {
    "text": "and put it back on the shelves it's really a wasteful operation when someone",
    "start": "2938600",
    "end": "2944000"
  },
  {
    "text": "buys something and then immediately cancels afterwards so we put some logic",
    "start": "2944000",
    "end": "2949100"
  },
  {
    "text": "in there to say after the user clicks the buy item button what we're gonna do is we're just gonna sit on that order",
    "start": "2949100",
    "end": "2956330"
  },
  {
    "text": "for a while just in case they cancel their order soon after so the way that",
    "start": "2956330",
    "end": "2963410"
  },
  {
    "text": "we do that is that we have this thing it's called a buyer's remorse saga and",
    "start": "2963410",
    "end": "2972550"
  },
  {
    "text": "there's this thing called buyer's remorse is over in the solution but let",
    "start": "2972550",
    "end": "2979460"
  },
  {
    "text": "me just find that buyer's remorse thing inside sales",
    "start": "2979460",
    "end": "2987369"
  },
  {
    "text": "okay so this is the cancel order part of a okay we didn't actually put in the the",
    "start": "2994830",
    "end": "3000380"
  },
  {
    "text": "behavior there it is okay here I found it sorry about that intermediate black out of the speaker so",
    "start": "3000380",
    "end": "3007940"
  },
  {
    "text": "what we have here is an order acceptance policy saga sagas are this feature of",
    "start": "3007940",
    "end": "3016670"
  },
  {
    "text": "in-service bus that allows you to introduce a delay between the processing",
    "start": "3016670",
    "end": "3023720"
  },
  {
    "text": "of one message and another message so here you can see that we have an object",
    "start": "3023720",
    "end": "3030890"
  },
  {
    "text": "that is started by a place order command it also handles timeouts for when the",
    "start": "3030890",
    "end": "3037730"
  },
  {
    "text": "users buyer's remorse period is over and it also can handle the cancel order now",
    "start": "3037730",
    "end": "3043670"
  },
  {
    "text": "we don't have time to delve into all of the nifty things that sagas enable you to do but what I'm going to do is I'm",
    "start": "3043670",
    "end": "3050210"
  },
  {
    "text": "going to run this so that you can see that behavior in action that when I click that place order button what's",
    "start": "3050210",
    "end": "3060260"
  },
  {
    "text": "going to happen over here is I'm going to put in well actually what I'll do is",
    "start": "3060260",
    "end": "3066170"
  },
  {
    "text": "I'll just show you the the log output so there's all of our backends here's the",
    "start": "3066170",
    "end": "3073010"
  },
  {
    "text": "front-end and once it pops up I'm gonna",
    "start": "3073010",
    "end": "3080450"
  },
  {
    "text": "go buy an item so let's go buy an iPhone X I'm gonna click Buy Now and it says",
    "start": "3080450",
    "end": "3088820"
  },
  {
    "text": "your order has been placed when I look at the my order section it says hey you",
    "start": "3088820",
    "end": "3093980"
  },
  {
    "text": "want to cancel your order like yeah go",
    "start": "3093980",
    "end": "3099020"
  },
  {
    "text": "cancel the order what's happened here behind the scenes I'm going to pop up sales",
    "start": "3099020",
    "end": "3105940"
  },
  {
    "text": "is that there's that thing in there that saying the message handlers dot order",
    "start": "3110170",
    "end": "3116110"
  },
  {
    "text": "acceptance policy saga is now waiting for the grace period to see if the user",
    "start": "3116110",
    "end": "3122920"
  },
  {
    "text": "cancels their order and because I did cancel my order it then associate that",
    "start": "3122920",
    "end": "3128440"
  },
  {
    "text": "with the previous saga instance and then knows oh okay great let's just get rid",
    "start": "3128440",
    "end": "3134680"
  },
  {
    "text": "of that order without telling anybody and here we can see that our other services billing API for example has not",
    "start": "3134680",
    "end": "3143770"
  },
  {
    "text": "received a thing it doesn't know that any order was placed which is exactly what we want to have happen so now what",
    "start": "3143770",
    "end": "3151420"
  },
  {
    "text": "I'll do is I won't cancel the order I'll go in and actually buy my item and what",
    "start": "3151420",
    "end": "3158500"
  },
  {
    "text": "we'll see happening back in site sales is that it has accepted that request and it's sitting there right now I think we",
    "start": "3158500",
    "end": "3165430"
  },
  {
    "text": "were opening up a time out for about 15 seconds to say let's see if the user canceled their order now if the user",
    "start": "3165430",
    "end": "3173080"
  },
  {
    "text": "doesn't go ahead and cancel their order then the saga will spring back to life",
    "start": "3173080",
    "end": "3178990"
  },
  {
    "text": "and say oh okay it looks like they didn't cancel their order what I'm going to do is I'm going to",
    "start": "3178990",
    "end": "3184440"
  },
  {
    "text": "publish an event to say now everybody can go handle this thing now here what",
    "start": "3184440",
    "end": "3192670"
  },
  {
    "text": "you can see is that billing has now received that event the order accepted",
    "start": "3192670",
    "end": "3197860"
  },
  {
    "text": "handler has been triggered we've done a publish that an order was accepted and",
    "start": "3197860",
    "end": "3203110"
  },
  {
    "text": "we'll also see that inside shipping shipping has also received that order",
    "start": "3203110",
    "end": "3209940"
  },
  {
    "text": "accepted event now shipping is also doing a saga and you can see how it",
    "start": "3209940",
    "end": "3215350"
  },
  {
    "text": "behaves there because it handles the order accepted event and the order billed event and associates those two",
    "start": "3215350",
    "end": "3222100"
  },
  {
    "text": "events together but ultimately all of those things enable us to go and take action behind the scenes why is all of",
    "start": "3222100",
    "end": "3230800"
  },
  {
    "text": "this pub/sub even important I've been talking cohhd cohhd cohhd for a while I",
    "start": "3230800",
    "end": "3236470"
  },
  {
    "text": "want to zoom back out for a minute and talk about our higher level picture our",
    "start": "3236470",
    "end": "3243359"
  },
  {
    "text": "vertical slices again where again what we have here is that lightweight pub/sub",
    "start": "3243359",
    "end": "3250119"
  },
  {
    "text": "happening behind the scenes the reason that this is important is it allows us",
    "start": "3250119",
    "end": "3255940"
  },
  {
    "text": "to have multiple vertical slices engaging in a given back-end flow",
    "start": "3255940",
    "end": "3264520"
  },
  {
    "text": "without creating coupling so when the business says I want to award the",
    "start": "3264520",
    "end": "3271390"
  },
  {
    "text": "customer loyalty points for every purchase that they make I can create",
    "start": "3271390",
    "end": "3276730"
  },
  {
    "text": "another vertical slice that is going to subscribe to that customer build event",
    "start": "3276730",
    "end": "3282700"
  },
  {
    "text": "or the order placed event and have that logic off to the side without making any",
    "start": "3282700",
    "end": "3289690"
  },
  {
    "text": "changes to the code that's already in place that's the advantage that's what",
    "start": "3289690",
    "end": "3295540"
  },
  {
    "text": "I'm trying to achieve that ability to grow my system functionality over time",
    "start": "3295540",
    "end": "3300849"
  },
  {
    "text": "without creating more complexity through bigger orchestrations okay so that's the",
    "start": "3300849",
    "end": "3310000"
  },
  {
    "text": "point of all of this exercise now what I'm going to do is I'm going to go",
    "start": "3310000",
    "end": "3315970"
  },
  {
    "text": "really briefly through some of the other nifty things that happen when you use",
    "start": "3315970",
    "end": "3322210"
  },
  {
    "text": "messaging so really quickly message processing failures it could be that",
    "start": "3322210",
    "end": "3328720"
  },
  {
    "start": "3324000",
    "end": "3324000"
  },
  {
    "text": "your database is down it could be that DC realization fails when you deploy a",
    "start": "3328720",
    "end": "3333730"
  },
  {
    "text": "new version of your system into production of course that's never happened to any of you here but I'm",
    "start": "3333730",
    "end": "3340720"
  },
  {
    "text": "pretty sure that you know of somebody who's had that problem once upon a time queueing technology when it sees that",
    "start": "3340720",
    "end": "3347770"
  },
  {
    "text": "it's processing that message over and over again and it keeps failing it can bump that message out to a dead letter Q",
    "start": "3347770",
    "end": "3357000"
  },
  {
    "text": "we can do more than that when using and service bus and the rest of our service platform so when a",
    "start": "3357000",
    "end": "3364270"
  },
  {
    "start": "3362000",
    "end": "3362000"
  },
  {
    "text": "message fails we take that out of that error cue put it into some back-end",
    "start": "3364270",
    "end": "3370570"
  },
  {
    "text": "process and show visualize a on top of that and say hey a message",
    "start": "3370570",
    "end": "3376260"
  },
  {
    "text": "failed this was the specific message type that failed here was the exception",
    "start": "3376260",
    "end": "3381600"
  },
  {
    "text": "that caused it to fail this is the number of those types of messages that have failed you might want to deploy and",
    "start": "3381600",
    "end": "3391050"
  },
  {
    "text": "roll back to the old version of your system where everything was working okay and then there's that button over at the",
    "start": "3391050",
    "end": "3398340"
  },
  {
    "text": "bottom there it says retry it so you can send all of those 206 failed orders back",
    "start": "3398340",
    "end": "3405720"
  },
  {
    "text": "to be reprocessed again once again without having lost a single piece of",
    "start": "3405720",
    "end": "3411330"
  },
  {
    "text": "valuable business data so this is something that administrators really",
    "start": "3411330",
    "end": "3417200"
  },
  {
    "text": "start to appreciate when they need to do continuous deployment you might have",
    "start": "3417200",
    "end": "3424500"
  },
  {
    "text": "heard of continuous deployment before the problem that nobody seems to speak about in continuous deployment territory",
    "start": "3424500",
    "end": "3430440"
  },
  {
    "text": "is what happens when you screw it up and your system loses data you don't want",
    "start": "3430440",
    "end": "3436050"
  },
  {
    "text": "continuous deployment to equal continuous data loss that would be a bad thing right so this service platform",
    "start": "3436050",
    "end": "3444840"
  },
  {
    "text": "gives you a lot of that kind of safety net other things auditing and tracing most queuing systems give you the",
    "start": "3444840",
    "end": "3452010"
  },
  {
    "start": "3447000",
    "end": "3447000"
  },
  {
    "text": "ability to copy messages that are processed somewhere else that's nifty and great but when you have hundreds and",
    "start": "3452010",
    "end": "3459930"
  },
  {
    "text": "thousands of parallel requests from different users all being audited together and all of this asynchronous",
    "start": "3459930",
    "end": "3466470"
  },
  {
    "text": "pub/sub happening behind the scenes it's really difficult to know what what",
    "start": "3466470",
    "end": "3472170"
  },
  {
    "text": "actually happened in the system within service bus what we do is we decorate all of your messages with a correlation",
    "start": "3472170",
    "end": "3480920"
  },
  {
    "start": "3475000",
    "end": "3475000"
  },
  {
    "text": "identifier so that when message number two is published as a result of",
    "start": "3480920",
    "end": "3487050"
  },
  {
    "text": "processing message number one when we audit that we store that trail of",
    "start": "3487050",
    "end": "3492480"
  },
  {
    "text": "breadcrumbs so that that way when you have a given flow through your system",
    "start": "3492480",
    "end": "3497790"
  },
  {
    "text": "where place order resulted in order accepted an order accepted trigger to",
    "start": "3497790",
    "end": "3502830"
  },
  {
    "text": "saga and then saga triggered something else which triggered order which triggered order shipped and you",
    "start": "3502830",
    "end": "3509040"
  },
  {
    "text": "have all of those events happening in parallel for multiple users we can make sense through these breadcrumbs across",
    "start": "3509040",
    "end": "3516750"
  },
  {
    "text": "all of the message headers taking all of that audit stream putting it into some",
    "start": "3516750",
    "end": "3522720"
  },
  {
    "text": "kind of indexable database where then we can create a nice kind of visualization",
    "start": "3522720",
    "end": "3528570"
  },
  {
    "start": "3526000",
    "end": "3526000"
  },
  {
    "text": "here is what happened in your system that endpoint send a message over there",
    "start": "3528570",
    "end": "3534630"
  },
  {
    "text": "when over there we published an event we triggered a saga that saga resulted in this other thing and then we can trace",
    "start": "3534630",
    "end": "3541020"
  },
  {
    "text": "everything as it flowed through the system in addition to that what's really",
    "start": "3541020",
    "end": "3546810"
  },
  {
    "text": "important when you have a queueing system everything's async you still want to know when the system gets slow with",
    "start": "3546810",
    "end": "3553470"
  },
  {
    "text": "traditional HTTP when the system gets slow users complain because they're just",
    "start": "3553470",
    "end": "3559350"
  },
  {
    "text": "waiting for the page to load when you start introducing messaging everything",
    "start": "3559350",
    "end": "3564660"
  },
  {
    "text": "that the users do is a Singh so they don't even notice that things are going slowly but you can have messages",
    "start": "3564660",
    "end": "3569730"
  },
  {
    "text": "building up in your queue and that can be a problem so most of the queuing systems will give you some element of",
    "start": "3569730",
    "end": "3576300"
  },
  {
    "text": "visibility into what that looks like give you a quick peek at what that looks like with RabbitMQ so RabbitMQ has this",
    "start": "3576300",
    "end": "3587610"
  },
  {
    "text": "type of management environment where it will show you for each one of your",
    "start": "3587610",
    "end": "3592920"
  },
  {
    "text": "queues what is the number of messages that are in there and if you want you",
    "start": "3592920",
    "end": "3598350"
  },
  {
    "text": "can drill into a given queue and see ultimately the flow that's happening in",
    "start": "3598350",
    "end": "3603450"
  },
  {
    "text": "there now what I'm going to do is I'm going to run the solution again but when I run it I'm also going to include",
    "start": "3603450",
    "end": "3610130"
  },
  {
    "text": "something that generates some load so that we can actually see this thing running and doing something because I",
    "start": "3610130",
    "end": "3617670"
  },
  {
    "text": "can't press the button fast enough to actually generate meaningful load so as",
    "start": "3617670",
    "end": "3623040"
  },
  {
    "text": "a part of this solution at the bottom we have this thing called a load generator",
    "start": "3623040",
    "end": "3630170"
  },
  {
    "text": "so I'm going to bring that thing up and what it's going to do is it's going to",
    "start": "3630170",
    "end": "3638130"
  },
  {
    "text": "start pushing messages you'll see it kind of logging it's a sending a place order message sending a place",
    "start": "3638130",
    "end": "3643830"
  },
  {
    "text": "order message etc and we can start seeing in our back-end sales is chugging",
    "start": "3643830",
    "end": "3650100"
  },
  {
    "text": "along and processing those messages and when I look at rabbit and queue where's",
    "start": "3650100",
    "end": "3656190"
  },
  {
    "text": "my rabbitmq we can see once RabbitMQ",
    "start": "3656190",
    "end": "3661830"
  },
  {
    "text": "wakes up again well right now it's it's processing too quickly so we can't actually oh there it",
    "start": "3661830",
    "end": "3667530"
  },
  {
    "text": "is RabbitMQ just woke up we see the graph ticks up and it says oh ok you know something is happening for that",
    "start": "3667530",
    "end": "3674040"
  },
  {
    "text": "queue but if we're looking across all of the things we can't sort of get a good sense of where things are for that",
    "start": "3674040",
    "end": "3681600"
  },
  {
    "text": "reason with part of the service platform that you get within service bus we have",
    "start": "3681600",
    "end": "3687120"
  },
  {
    "text": "all of this type of information that shows you as well not just the number of messages in the queue it'll show you the",
    "start": "3687120",
    "end": "3694140"
  },
  {
    "text": "throughput of messages process per second retries which is a really",
    "start": "3694140",
    "end": "3699540"
  },
  {
    "text": "important thing to monitor in your system because it could be that everything is processing okay but if it",
    "start": "3699540",
    "end": "3706800"
  },
  {
    "text": "takes 2 or 3 retries that could be an indication that something's not designed very well in your system right there you",
    "start": "3706800",
    "end": "3713670"
  },
  {
    "text": "saw that there was a blip at the bottom that was in her shipping api where",
    "start": "3713670",
    "end": "3718770"
  },
  {
    "text": "potentially because there was a data base deadlock or something like that that is what resulted in the system",
    "start": "3718770",
    "end": "3724470"
  },
  {
    "text": "getting slower we also track the processing time and this thing called critical time critical time is a value",
    "start": "3724470",
    "end": "3731160"
  },
  {
    "text": "that says roughly speaking how long is it going to take for the next message to",
    "start": "3731160",
    "end": "3739020"
  },
  {
    "text": "work its way through the queue and complete its processing that can be very meaningful when you're in an SLA",
    "start": "3739020",
    "end": "3746430"
  },
  {
    "text": "sensitive domain when it matters how quickly you process things so there's a",
    "start": "3746430",
    "end": "3752460"
  },
  {
    "text": "lot of this stuff available as a part of this broader platform and ultimately if",
    "start": "3752460",
    "end": "3759660"
  },
  {
    "text": "you're using Cubase systems you're probably going to want to have these",
    "start": "3759660",
    "end": "3764670"
  },
  {
    "text": "types of things so again whether you're using rabbitmq or MSM Q or sqs each of",
    "start": "3764670",
    "end": "3771480"
  },
  {
    "text": "them provides something you off we'll require all of these types of elements in place now getting to the end",
    "start": "3771480",
    "end": "3779890"
  },
  {
    "text": "of my time but I want to show you some other nifty things so I talked about",
    "start": "3779890",
    "end": "3786309"
  },
  {
    "text": "visualizing the system and that's performance monitoring my machine is",
    "start": "3786309",
    "end": "3794470"
  },
  {
    "text": "barely keeping up so all of this that",
    "start": "3794470",
    "end": "3799960"
  },
  {
    "text": "I've been showing you works across multiple stacks so if you're on a sure you can use Microsoft Azure service bus",
    "start": "3799960",
    "end": "3806829"
  },
  {
    "text": "you can use as your storage queues if you're working on premises you can use MSM queue you can use rabbit and queue",
    "start": "3806829",
    "end": "3813369"
  },
  {
    "text": "if you're working in the AWS stack you can use SQS and even you can use sequel",
    "start": "3813369",
    "end": "3820900"
  },
  {
    "text": "server because sometimes people don't want to install a queueing system they just want to say can you make it work on",
    "start": "3820900",
    "end": "3827470"
  },
  {
    "text": "the database so ultimately you can get all of that decoupling without taking on",
    "start": "3827470",
    "end": "3832749"
  },
  {
    "text": "any other infrastructure so one more thing because I know I've been saying",
    "start": "3832749",
    "end": "3838390"
  },
  {
    "text": "hey this is not net core 2.0 and you've just sort of taken my word for it what I",
    "start": "3838390",
    "end": "3843849"
  },
  {
    "text": "want to do and I know I'm a little bit over time is I want to show it to you now running on a Mac and then afterwards",
    "start": "3843849",
    "end": "3852400"
  },
  {
    "text": "what we're gonna do is we're gonna run it on Linux running in AWS so the exact",
    "start": "3852400",
    "end": "3859660"
  },
  {
    "text": "same solution that you've been seeing up until now but running the way that you'd",
    "start": "3859660",
    "end": "3865900"
  },
  {
    "text": "expect in production so David's got the Mac and we're gonna switch over the",
    "start": "3865900",
    "end": "3871299"
  },
  {
    "text": "screen and away we go so what we have",
    "start": "3871299",
    "end": "3880390"
  },
  {
    "text": "over here is Visual Studio on the Mac so",
    "start": "3880390",
    "end": "3886329"
  },
  {
    "text": "when we're running this ultimately what you're seeing here is the that same UI",
    "start": "3886329",
    "end": "3891460"
  },
  {
    "text": "that's gonna be popping up just give it a second as we know that it can kind of take a minute but again this is native",
    "start": "3891460",
    "end": "3898720"
  },
  {
    "text": "Mac development this is not Mac via parallels this is none of that this is",
    "start": "3898720",
    "end": "3905410"
  },
  {
    "text": "actual on a Mac dotnet core locally so you can do all of your development with Dutton",
    "start": "3905410",
    "end": "3912529"
  },
  {
    "text": "core and again all of this is happening with the pub/sub and with the",
    "start": "3912529",
    "end": "3917930"
  },
  {
    "text": "reliability and all of that so let's go buy an item really quickly and see that",
    "start": "3917930",
    "end": "3923719"
  },
  {
    "text": "that process is working so we buy an item we go into the orders page and we'll see that there is an order there",
    "start": "3923719",
    "end": "3930859"
  },
  {
    "text": "and we can the challenge with running Visual Studio on the Mac is that you it's much more difficult to see the log",
    "start": "3930859",
    "end": "3938180"
  },
  {
    "text": "output of all of those consoles what it does it just sets them up as little",
    "start": "3938180",
    "end": "3943400"
  },
  {
    "text": "console windows over there now that can be a bad thing in the sense that it can",
    "start": "3943400",
    "end": "3948680"
  },
  {
    "text": "be difficult to see as the system is running but on the flip side at least you don't have 15 windows that open up",
    "start": "3948680",
    "end": "3956329"
  },
  {
    "text": "every single time you go and debug your system alright so now we've run it on",
    "start": "3956329",
    "end": "3961670"
  },
  {
    "text": "the Mac running locally now we'll do let's switch over and see it running on",
    "start": "3961670",
    "end": "3967699"
  },
  {
    "text": "Linux in AWS so what we're doing now is",
    "start": "3967699",
    "end": "3973150"
  },
  {
    "text": "we're in an Ubuntu shell correct oh but still on the Mac though we're",
    "start": "3973150",
    "end": "3979759"
  },
  {
    "text": "gonna be from there going into our Linux shell and from here we can now run our",
    "start": "3979759",
    "end": "3991190"
  },
  {
    "text": "entire solution so here we can see we've got all of our dotnet projects in there",
    "start": "3991190",
    "end": "3997459"
  },
  {
    "text": "and we're gonna run these just by this start all of solution script we can have",
    "start": "3997459",
    "end": "4004119"
  },
  {
    "text": "all of them spinning up to life so you can see in those comments it's spinning up the marketing API it's spinning up",
    "start": "4004119",
    "end": "4010719"
  },
  {
    "text": "the sales API it's spinning up the billing API and now we can see we have",
    "start": "4010719",
    "end": "4016569"
  },
  {
    "text": "all of these dotnet processes that are running so currently we're not having",
    "start": "4016569",
    "end": "4022690"
  },
  {
    "text": "any kind of log output as a result of this but when we start putting some load",
    "start": "4022690",
    "end": "4029619"
  },
  {
    "text": "into this thing then we'll start seeing the behavior happening so right now if",
    "start": "4029619",
    "end": "4035170"
  },
  {
    "text": "we look at the URL we can see that we're actually connected to the Linux thing so it's",
    "start": "4035170",
    "end": "4041140"
  },
  {
    "text": "remotely connecting you can't really zoom into that but you the URL there is",
    "start": "4041140",
    "end": "4047920"
  },
  {
    "text": "net core demo dot particular dot in that this is actually going and running against that AWS environment so it's",
    "start": "4047920",
    "end": "4055890"
  },
  {
    "text": "connecting to that cloud hosted environment all right now let's take a",
    "start": "4055890",
    "end": "4061510"
  },
  {
    "text": "look at the monitoring side of things here we can see all of those endpoints that are up and running in the cloud",
    "start": "4061510",
    "end": "4067240"
  },
  {
    "text": "they're not currently processing any load that's not very surprising because we haven't clicked any buttons but now",
    "start": "4067240",
    "end": "4073690"
  },
  {
    "text": "we'll do is we'll invoke that low generator and we'll be able to see as those messages are coming in let's",
    "start": "4073690",
    "end": "4081760"
  },
  {
    "text": "actually ramp up the the load a little bit so that we can get some more messages flowing in so right now it's",
    "start": "4081760",
    "end": "4087460"
  },
  {
    "text": "sending through just about six messages per second in parallel and we can see",
    "start": "4087460",
    "end": "4093160"
  },
  {
    "text": "that each of those endpoints now has a little bit of a spike as its processing them so again what you're seeing over",
    "start": "4093160",
    "end": "4100390"
  },
  {
    "text": "here the exact same solution that was running dotnet core on a Windows machine",
    "start": "4100390",
    "end": "4106120"
  },
  {
    "text": "and now running in Linux with all of the monitoring and tracing kind of stuff as",
    "start": "4106120",
    "end": "4112330"
  },
  {
    "text": "before you also have service inside open up ok so now for the final piece of the",
    "start": "4112330",
    "end": "4122830"
  },
  {
    "text": "puzzle as they say in Steve Jobs terminology just one more thing so all",
    "start": "4122830",
    "end": "4129460"
  },
  {
    "text": "of this is great because I have a new dotnet core project running Linux AWS",
    "start": "4129460",
    "end": "4136180"
  },
  {
    "text": "and everybody's happy with that but now the business turns around and says you know we have this old warehouse",
    "start": "4136180",
    "end": "4142750"
  },
  {
    "text": "management system that we've lifted and shifted and we're running it in Azure we",
    "start": "4142750",
    "end": "4148930"
  },
  {
    "text": "want the new system that you've created to subscribe to events from that legacy",
    "start": "4148930",
    "end": "4154990"
  },
  {
    "text": "system the only thing is our new system is running RabbitMQ the old system is",
    "start": "4154990",
    "end": "4164338"
  },
  {
    "text": "running with Azure storage queues and now we want these two systems to talk to",
    "start": "4164339",
    "end": "4170830"
  },
  {
    "text": "each other so what we can do here hmm close that",
    "start": "4170830",
    "end": "4176500"
  },
  {
    "text": "down is go and look up that as your",
    "start": "4176500",
    "end": "4181930"
  },
  {
    "text": "website that's our warehouse management thing that allows us to influence the",
    "start": "4181930",
    "end": "4187330"
  },
  {
    "text": "stock of a given item so let's switch back to the UI of our shop and then we",
    "start": "4187330",
    "end": "4193359"
  },
  {
    "text": "can see that currently the galaxy 8 is not currently in stock now we'll do",
    "start": "4193359",
    "end": "4200050"
  },
  {
    "text": "we'll go into our stock management website we'll switch that and provide it",
    "start": "4200050",
    "end": "4205240"
  },
  {
    "text": "some stock and when we go back to our website for the sales and we refresh",
    "start": "4205240",
    "end": "4211810"
  },
  {
    "text": "that what we'll see is that now that item is in stock in other words we had",
    "start": "4211810",
    "end": "4220120"
  },
  {
    "text": "the published subscribe behavior happening from the azure cloud into the",
    "start": "4220120",
    "end": "4227950"
  },
  {
    "text": "AWS cloud dotnet full framework asq on one side going to cloud hosted RabbitMQ",
    "start": "4227950",
    "end": "4237430"
  },
  {
    "text": "running linux AWS on the other side and all of that",
    "start": "4237430",
    "end": "4242980"
  },
  {
    "text": "is enabled by this end service bus thing so when you're starting out on a project",
    "start": "4242980",
    "end": "4250060"
  },
  {
    "text": "whether you're talking about a brand new system or a legacy system that you need to connect to we try to give you that",
    "start": "4250060",
    "end": "4257200"
  },
  {
    "text": "layer of abstraction in this whole set of tools around all of that that will",
    "start": "4257200",
    "end": "4262360"
  },
  {
    "text": "enable all of that to work so just to",
    "start": "4262360",
    "end": "4268450"
  },
  {
    "text": "wrap this up again all of the code that",
    "start": "4268450",
    "end": "4277060"
  },
  {
    "text": "we've shown you is available online here github.com particular labs net core demo",
    "start": "4277060",
    "end": "4282640"
  },
  {
    "text": "whether it's the UI composition piece that we started out with the publish/subscribe piece the monitoring",
    "start": "4282640",
    "end": "4290170"
  },
  {
    "text": "tooling the error management all of that is available online give it a try see",
    "start": "4290170",
    "end": "4297490"
  },
  {
    "text": "how it works I hope that this is giving you an idea of how possible it is to",
    "start": "4297490",
    "end": "4304220"
  },
  {
    "text": "actually build and run and scale this type of vertical slice architecture it's",
    "start": "4304220",
    "end": "4312110"
  },
  {
    "text": "not just a theory hand wavy thing that you go to a conference and say oh that sounds like a nice idea but I don't know",
    "start": "4312110",
    "end": "4318890"
  },
  {
    "text": "how to do that now you have the code to actually implement that and you've seen all of",
    "start": "4318890",
    "end": "4325520"
  },
  {
    "text": "the pieces of it from whether you're querying a single item whether you're querying multiple items whether you're",
    "start": "4325520",
    "end": "4331910"
  },
  {
    "text": "taking action when a user clicks a button in such a way that you have a",
    "start": "4331910",
    "end": "4337190"
  },
  {
    "text": "truly decoupled solution so if you want more information about how to find those",
    "start": "4337190",
    "end": "4343220"
  },
  {
    "text": "service boundaries because that's pretty tricky as well there's a video of a",
    "start": "4343220",
    "end": "4348470"
  },
  {
    "text": "presentation that I've given at an older NDC you can find the link to that there bitly finding service boundaries where I",
    "start": "4348470",
    "end": "4355730"
  },
  {
    "text": "talk about the business analysis that you'd be going through to be able to say",
    "start": "4355730",
    "end": "4361130"
  },
  {
    "text": "well what actually goes into which vertical slice so I hope I've given you",
    "start": "4361130",
    "end": "4367250"
  },
  {
    "text": "a lot of food for thought and a lot of code that you can take home and play with and if you ever have any questions",
    "start": "4367250",
    "end": "4373630"
  },
  {
    "text": "feel free to ping me whether that's over twitter or go to the particular net web site and chat with us thank you all very",
    "start": "4373630",
    "end": "4380510"
  },
  {
    "text": "much and have a great rest of your conference [Applause]",
    "start": "4380510",
    "end": "4388199"
  }
]